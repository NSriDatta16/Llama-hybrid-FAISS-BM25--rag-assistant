[site]: stackoverflow
[post_id]: 250987
[parent_id]: 248688
[tags]: 
You don't really need a server-side library. Accepting POSTs and GETs from AJAX is the same as accepting them the "old fashioned" way. What is key here are good design patterns. I commonly use a single function to dispatch my simple Ajax calls in Javascript (I use Prototype ): function fetch(elelment,cmd,id) { //general purpose AJAX function $(elelment).innerHTML='Loading... ' now = new Date() url = 'http://..../Ajax.asp?CMD='+cmd+'&ID='+pid+'&now='+now new Ajax.Updater(elelment, url, { method: 'get' }); } Then on the server side I typically use a select case, break it down by command, fetch the record by the passed ID, and spit out an HTML fragment. I usually build a function to spit out any JSON I need separately.
