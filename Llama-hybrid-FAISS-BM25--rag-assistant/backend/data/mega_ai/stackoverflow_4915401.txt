[site]: stackoverflow
[post_id]: 4915401
[parent_id]: 4914505
[tags]: 
disclaimer: I'm more of a back-end/wpf developer. There are likely more elegant solutions, but this seems to work. Change your checkbox id so it is not unique (sorry, this will break w3c validation) and set it to runat server and set the value of the CheckBox to your data source's Id: ' type="checkbox" runat="server" /> You can then iterate through the ListView's items collection and find the CheckBoxes: protected void btnDownload_Click( object sender, EventArgs e ) { foreach( ListViewDataItem item in ListView1.Items ) { var chk = item.FindControl( "MyCheckBox" ) as System.Web.UI.HtmlControls.HtmlInputCheckBox; if( chk != null && chk.Checked ) { string value = chk.Value; } } } If you wanted a bit of Linq: protected void btnDownload_Click( object sender, EventArgs e ) { var checkedCheckBoxes = ListView1.Items.Select( x => x.FindControl( "MyCheckBox" ) as HtmlInputCheckBox ) .Where( x => x != null && x.Checked ); // do stuff with checkedCheckBoxes }
