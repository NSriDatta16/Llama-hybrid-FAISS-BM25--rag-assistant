[site]: stackoverflow
[post_id]: 5628360
[parent_id]: 5624320
[tags]: 
With Java Generics you can't get from a type variable (or even less from a wildcard) to an actual class object. The reason is the way generics are implemented: by type erasure. This means that actually on run-time your generic types are not there anymore, they are erased to raw types. Only the compiler checks that you are using the right types at the right place. In your case, the StorageUnit objects do not contain any information about the T used here, if you don't give them a class object of the right type. They also all have the same class object. So, the best bet here would be to give the StorageUnit objects a class object of their parameter class in the constructor, then the getInstances() method would not need to take it. Of course, this only shifts the problem on having to have a class object to another location, but somewhere it is necessary.
