[site]: stackoverflow
[post_id]: 4872126
[parent_id]: 4857031
[tags]: 
You can have config vars persistently stored ON each heroku app's local setup so they do not have to be in your code at all! so the same code can run on multiple heroku sites but with different configuration. It very simple, easy, elegant... It's the approach we used. (We used it for the SAME thing... we have multiple clones of the SAME app at Heroku, but we want only ONE source at github, in our dev local directory we do the PUSH to ORIGIN (github), then when we have it the way we like it, we CD to the prod local directory, which goes to the SAME github repository, and we ONLY PULL from GITHUB into this directory, never push (eg, all pushes to github come from our dev directory, the prod directory is just a staging area for the other heroku app.) By having the different configs ON the different HEROKU sites (as explained below), the EXACT SAME CODE works on BOTH heroku sites. So our workflow is: (the key is that BOTH directories point to SAME github repo) cd myDEVdir *....develop away....* git add . git commit -am "another day, another push" git push origin *(to our SINGLE github repo)* git push heroku *(test it out on heroku #1)* cd ../myPRODdir git pull *(grabs SAME code as used on other site *) git push heroku *(now the SAME code runs on Heroku #2)* that's it! Now here's how you keep your site-specific config vars ON the heroku site: http://docs.heroku.com/config-vars on your local command line, for EACH of your two local directories, do: $ heroku config:add FIRST_CONFIGVAR=fooheroku1 Adding config vars: FIRST_CONFIGVAR => fooheroku1 $ heroku config:add SECOND_CONFIGVAR=barheroku1 Adding config vars: SECOND_CONFIGVAR => barheroku1 to see the ones you have defined: $ heroku config FIRST_CONFIGVAR => fooheroku1 SECOND_CONFIGVAR => barheroku1 then cd to your other directory myPRODdir and do the SAME thing, only set the same remote heroku vars to fooheroku2 and barheroku2. then in your rails app you simple refer to them like so: a = ENV['FIRST_CONFIGVAR'] One app will read 'fooheroku1' the other app will read 'fooheroku2' And finally, on your LOCAL directory myDEVdir, where you run in DEV mode, put the same config commands in your config/environment/development.rb file your 'dev' version of the config vars will be set to whatever they should be: ENV['FIRST_CONFIGVAR'] = "foodev" ENV['SECOND_CONFIGVAR'] = "bardev" Easy, elegant. Thanks, Heroku!
