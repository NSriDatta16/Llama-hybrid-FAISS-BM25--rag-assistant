[site]: datascience
[post_id]: 93311
[parent_id]: 93294
[tags]: 
A couple of things that jump out immediately as being a little odd: You seem to have two labels "ball_count" and "run_per_ball" but only 1 output of the network. You are using an MSE loss, which is typically used for regression problems. This seems to be a sensible choice for outputs like ball_count or run_per_ball. However, accuracy, is a metric that is used to measure the accuracy of classification problems (as correct classifications divided by total samples) It looks as if you are not one hot encoding you're categorical features. If you do not do this it is very difficult for the network to learn anything appropriate from them. What I would recommend you do to begin with is train on just one of the labels, either ball_count or run_per_ball, but not both, and replace your metric with something more appropriate for a regression problem, for example, mean absolute error. When you do this, I would also suggest removing some of the bells and whistles such as the batch normalization and the fancy activations. If it were me, I would do something like a simple two layer network, 64 units each, ReLU or Tanh activations, with a linear activation on the output. The other thing to keep in mind is that, especially for things like sports data, there is going to be a lot of stochasticity in the data which can not be modelled with only simple features. If you can find other examples of models using similar data that might give you a reasonable expectation of what to aim for in your results. This is a challenging problem to jump head first into if you are new to data science. You may want to work through some more standard problems and/or simpler models. Whilst Neural Networks are all the rage nowadays (and deservingly so), you may benefit from handling some more straight-forward models to begin with. A lot of the important fundamentals that go into simpler linear models are highly applicable to neural networks too. Neural Networks mostly shine above other models when there is a capacity to learn richer intermediate features from the inputs then the inputs can offer alone which may not be the case for this sort of data.
