[site]: crossvalidated
[post_id]: 34401
[parent_id]: 34396
[tags]: 
Whenever the plot jumps too much, reverse the orientation. One effective criterion is this: compute the total amount of jumps on all the components. Compute the total amount of jumps if the next eigenvector is negated. If the latter is less, negate the next eigenvector. Here's an implementation. (I am not familiar with zoo , which might allow a more elegant solution.) require(zoo) amend As an example, let's run a random walk in an orthogonal group and jitter it a little for interest: random.rotation Here's the rolling PCA: window Now the fixed version: plot(amend(result))
