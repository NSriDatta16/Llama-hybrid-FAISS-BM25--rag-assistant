[site]: stackoverflow
[post_id]: 4399369
[parent_id]: 
[tags]: 
How to initialise an unsafe pointer in C# and convert it to a byte[]?

I put a post up yesterday, How does one create structures for C# originally written in C++. Thank you for your responses. I'm trying, without much success, to use DeviceIOControl on an ARM platform running WinCE 6.0 and .NET Compact framework 2.0 All I am trying to achieve is the control of a port pin and it's proving to be a nightmare. The following is the PInvoke declaration: [DllImport("coredll.dll", EntryPoint = "DeviceIoControl", SetLastError = true)] internal static extern bool DeviceIoControlCE(int hDevice, int dwIoControlCode, byte[] lpInBuffer, int nInBufferSize, byte[] lpOutBuffer, int nOutBufferSize, ref int lpBytesReturned, IntPtr lpOverlapped); The PInvoke declaration suggests a byte[] may be passed to it simply. Surely it's an easy matter to write the values to each member of a structure, convert it to an array of bytes and pass it to the dll. I have the following: [StructLayout(LayoutKind.Sequential)] public struct pio_desc { unsafe byte* pin_name; //Length??? public uint pin_number; //4 bytes public uint default_value; //4 bytes public byte attribute; //1 byte public uint pio_type; //4 bytes } and pio_desc PA13 = new pio_desc(); So surely now it's a matter of doing something like: PA13.pin_number = AT91_PIN_PA13; //Length 4 bytes PA13.default_value = 0; //Length 4 bytes PA13.attribtue = PIO_DEFAULT; //Length 1 byte PA13.pio_type = PIO_OUTPUT; //Length 4 bytes and to convert (pin_number for example) to a byte[]: byte[] temp = BitConverter.GetBytes(PA13.pin_number); //uints are 4 bytes wide byteArray[++NumberOfChars] = temp[0]; byteArray[++NumberOfChars] = temp[1]; byteArray[++NumberOfChars] = temp[2]; byteArray[++NumberOfChars] = temp[3]; //Will need to check on Endianess Questions: In the structure PA13, how do I initialise the unsafe pointer pin_name? The author of the driver notes that this is not used, presumably by his driver. Will Windows need this to be some value? PA13.pin_name = ?????? Then, how do I convert this pointer to a byte to fit into my byte[] array to be passed to DeviceIOControl? I've become quite disappointed and frustrated at how difficult it is to change the voltage level of a port pin - I've been struggling with this problem for days now. Because I come from a hardware background, I think it's going to be easier (and less eligant) for me to implement IO control on another controller and to pass control data to it via a COM port. Thanks again for any (simple) assistance.
