[site]: stackoverflow
[post_id]: 1987003
[parent_id]: 1986966
[tags]: 
Readers should note that this question was asked in 2009, when the C++03 Standard was the current publication. This answer is based on that version of the Standard, in which std::string s are not guaranteed to utilize contiguous storage. Since this question was not asked in the context of a particular platform (like gcc), I make no assumptions about OP's platform -- in particular, weather or not it utilized contigious storage for the string . Legal? Maybe, maybe not. Safe? Probably, but maybe not. Good code? Well, let's not go there... Why not just do: std::string s = str; ...or: std::string s(str); ...or: std::string s; std::copy( &str[0], &str[strLen], std::back_inserter(s)); ...or: std::string s; s.assign( str, strLen ); ?
