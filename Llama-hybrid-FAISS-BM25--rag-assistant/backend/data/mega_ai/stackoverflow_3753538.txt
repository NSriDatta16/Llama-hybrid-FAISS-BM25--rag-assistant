[site]: stackoverflow
[post_id]: 3753538
[parent_id]: 
[tags]: 
Java GC Stop and copy

This question is a follow up to my previous Java GC question: Java Garbage Collector clarification This question is also referring to the same article. I'm a little confused on why the stop and copy method for defragmenting object heap allocation is so commonly used. Yes it defragments the heap however it seems like there is tons of overhead because basically you cut the total amount of heap size in half. Also you need to copy ALL the live objects when one half has run out of space. Other than defragmentation is there any other fundamental reason why 'stop and copy' is better than say 'mark and sweep'?
