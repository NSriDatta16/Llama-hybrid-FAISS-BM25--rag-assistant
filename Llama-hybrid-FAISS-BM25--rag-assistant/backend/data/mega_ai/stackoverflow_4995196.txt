[site]: stackoverflow
[post_id]: 4995196
[parent_id]: 
[tags]: 
When Raising an MouseButtonEvent from a UserControl the MainWindow have no access to MouseButtonEventArgs

Still climbing up the steep WPF Mountain, and suffering. I have defined a UserControl, and my MainWindow needs to retrieve the MouseButtonEventArgs coming from a control inside the UserControl (like the mouse e.GetPosition for instance) In the UserControl code behind, I have done the Registrations and I Raise the bubbling event. public static readonly RoutedEvent MyButtonDownEvent = EventManager.RegisterRoutedEvent("MyMouseButtonDown", RoutingStrategy.Bubble, typeof(RoutedEventHandler), typeof(MyUserControl)); public event RoutedEventHandler MyButtonDown { add { AddHandler(MyButtonDownEvent, value); } remove { RemoveHandler(MyButtonDownEvent, value); } } private void MyMouseButtonDownHandler(object sender, MouseButtonEventArgs e) { RaiseEvent(new RoutedEventArgs(MyButtonDownEvent )); } Now in my MainWindow I declare the UserControl like this: And this code behind private void MyUserControl_MouseDown(object sender, RoutedEventArgs e) And I receive the events from the UserControl, but the Args are RoutedEventArgs (which is normal) but I dont have access to the MouseButtonEventArgs that I need to get the mouse e.GetPosition. What elegant solution would you suggest in this case ?
