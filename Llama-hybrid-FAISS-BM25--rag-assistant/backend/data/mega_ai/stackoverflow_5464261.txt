[site]: stackoverflow
[post_id]: 5464261
[parent_id]: 5463237
[tags]: 
At first glance at a gallery page , it looks like the entire page content is initially hidden. When the browser is loading the page, it will start looking for the element identified in the URL fragment; that element will be hidden or not visible and hence it won't have any useful position to scroll to and nothing happens to the scroll position. I think the easiest thing to do would be to handle the scrolling yourself in the .fadeIn() callback: Grab the fragment out of window.location.hash . Find out where it is on the page with something like: var y = $('#' + window.location.hash).offset().top; Then scroll the page to that position: $('html,body').attr('scrollTop', y); You could even animate the scrollTop change if you wanted to get fancy. Here's an example to get you started: $('#curtain').delay(1500).fadeIn(1000, function() { // Bail out if there is no hash. if(!window.location.hash) return; // Convert the hash to an element and bail out // if there is no such element. var $e = $(window.location.hash); if($e.length If you wanted to animate the scrolling then you'd change the $('html,body').attr(...) part to something like this: $('html,body').animate({ scrollTop: '+=' + $e.offset().top }, 'fast');
