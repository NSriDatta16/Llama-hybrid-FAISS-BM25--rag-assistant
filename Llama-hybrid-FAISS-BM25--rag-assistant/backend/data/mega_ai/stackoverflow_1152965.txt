[site]: stackoverflow
[post_id]: 1152965
[parent_id]: 1152946
[tags]: 
This is probably far from the most elegant solution, but its a solution nonetheless: public class UpdatePanel : System.Web.UI.UpdatePanel { /// /// Javascript to be run when the updatepanel has completed updating /// [Description("Javascript to be run when the updatepanel has completed updating"), Category("Values"), DefaultValue(null), Browsable(true)] public string OnUpdateCompleteClientScript { get { return (string)ViewState["OnUpdateCompleteClientScript"]; } set { ViewState["OnUpdateCompleteClientScript"] = value; } } protected override void OnPreRender(System.EventArgs e) { base.OnPreRender(e); if(!string.IsNullOrEmpty(this.OnUpdateCompleteClientScript)) Page.ClientScript.RegisterStartupScript(this.GetType(), this.ClientID, string.Concat("Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function(sender, args){for(var panelId in sender._updatePanelClientIDs){if(sender._updatePanelClientIDs[panelId] == '", this.ClientID, "'){", this.OnUpdateCompleteClientScript, "}}});"), true); } } Use it like this: Of course you'll need to register the custom control in youre webconfig or page to use it like this. Edit: also, have you looked at jquery.live?
