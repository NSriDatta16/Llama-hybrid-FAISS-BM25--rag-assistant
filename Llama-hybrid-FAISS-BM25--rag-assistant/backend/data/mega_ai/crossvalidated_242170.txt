[site]: crossvalidated
[post_id]: 242170
[parent_id]: 194750
[tags]: 
There are several good questions embedded in your post. Let me try to tackle them in turn: Should I use cross-validation, and if so which procedure? Using cross validation to tune your model and hyper-parameters is a good idea. If you are considering using Python for your project then Scikit-Learn is a popular machine-learning package that may be useful. You will find more specifics on how to use the cross-validation function in Scikit-Learn here: Cross-Validation on SKLearn Importantly, for time-series, you should use the correct roll-forward split of data. The SKLearn team kindly included a time-series splitter in the recent v0.18 of Scikit-Learn: SKLearn Time Series cross-validator Should I use the model to train and predict all the data? Even if you use cross-validation, it is still advised that you split a portion of test data off before you start training and validation. You can then keep this data for final testing once you have created your model. More discussion here: Should I split my data to train/test split or train/validation/test subset?
