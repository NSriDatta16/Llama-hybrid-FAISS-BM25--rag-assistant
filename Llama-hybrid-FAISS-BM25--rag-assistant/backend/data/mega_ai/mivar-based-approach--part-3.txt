or service-oriented architectures. Certain constraints restrict their application, in particular, the dimension of matrix of linear matrix method for determining logical inference path on the adaptive rule networks. The matrix dimension constraint is due to the fact that implementation requires sending a general matrix to multiple processors. Since every matrix value is initially represented in symbol form, the amount of sent data is crucial when obtaining, for example, 10000 rules/variables. Classical mivar-based method requires storing three values in each matrix cell: 0 – no value; x – input variable for the rule; y – output variable for the rule. The analysis of possibility of firing a rule is separated from determining output variables according to stages after firing the rule. Consequently, it is possible to use different matrices for “search for fired rules” and “setting values for output variables”. This allowsthe use of multidimensional binary matrices. Binary matrix fragments occupy much less space and improve possibilities of applying mivar networks. Logical and computational data processing To implement logical-and-computational data processing the following should be done. First, a formalized subject domain description is developed. The main objects-variables and rules-procedures are specified on the basis of mivar-based approach and then corresponding lists of “objects” and “rules” are formed. This formalized representation is analogous to the bipartite logical network graph. The main stages of mivar-based information processing are: Forming a subject domain matrix; Working with the matrix and designing the solution algorithm for the task; Executing the computations and finding the solution. The first stage is the stage of synthesis of conceptual subject domain model and its formalization in the form of production rules with a transition to mivar rules. “Input objects – rules/procedures – output objects”. Currently, this stage is the most complex and requires involvement of a human expert to develop a mivar model of the subject domain. Automated solution algorithm construction or logical inference is implemented at the second stage. Input data for algorithm construction are: mivar matrix of subject domain description and a set input of object-variables and required object-variables. The solution is implemented at the third stage. Data processing method Firstly, the matrix is constructed. Matrix analysis determines whether a successful inference path exists. Then possible logical inference paths are defined and at the last stage the shortest path is selected according to the set optimality criteria. Let m {\displaystyle m} rules and n {\displaystyle n} variables be included in the rules as input variables activating them or as output variables. Then, matrix V ( m ⋅ n ) {\displaystyle V(m\cdot n)} , each row of which corresponds to one of the rules and contains the information about variables used in the rule, can represent all the interconnections between rules and variables. In each row all the input variables are denoted by x {\displaystyle x} in the corresponding positions of the matrix, all the output variables are denoted by y {\displaystyle y} . All the variables that have already obtained certain value in the process of inference or setting input data – z {\displaystyle z} . All the required (output) variables, that is, the variables that should be obtained on the basis of input data – w {\displaystyle w} . One row and one column are added in the matrix V {\displaystyle V} to store service information. So, the matrix V {\displaystyle V} of dimension ( m + n ) × ( n + 1 ) {\displaystyle (m+n)\times (n+1)} , is obtained, which shows the whole structure of the source rule network. The structure of this logical network can change, that is, this is a network of rules with evolutionary dynamics. Example To search for a logical inference path the following actions are implemented: Known variables are denoted by z 