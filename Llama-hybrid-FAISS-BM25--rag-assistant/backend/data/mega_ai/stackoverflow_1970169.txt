[site]: stackoverflow
[post_id]: 1970169
[parent_id]: 1970160
[tags]: 
MyISAM is transactionless and heap-organized. The records are identified by the row offset in the table and the indexes store this offset as a row pointer. InnoDB supports transactions and is index-organized. The records are identified by the value of the PRIMARY KEY (or a hidden internal column is there is no PRIMARY KEY defined) and are stored in a B-Tree . The secondary indexes store the value of the PRIMARY KEY as a row pointer. Queries that involve full table scans or secondary index lookups are usually faster on MyISAM tables. Queries that involve PRIMARY KEY seeks are usually faster on InnoDB tables. MyISAM tables store the number of records in the table in the table's metadata, that's why the queries like this: SELECT COUNT(*) FROM myisamtable are instant. MyISAM tables are completely locked on the DML operations (with several exceptions). InnoDB tables lock individual records and index gaps, however these are the records and the gaps that are scanned, not only those matched by the WHERE condition. This can lead to the records being locked despite the fact they don't match. InnoDB tables support referential integrity ( FOREIGN KEY s) . MyISAM tables don't. There are several scenarios that can show benefits of both engines.
