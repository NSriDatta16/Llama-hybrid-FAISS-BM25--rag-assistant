[site]: stackoverflow
[post_id]: 3348934
[parent_id]: 3348766
[tags]: 
You can (but generally shouldn't) use a local struct type. for ( struct { int i; char* ptr; } loopy = { 0, bam }; loopy.i Since C++11, you can initialize the individual parts more elegantly, as long as they don't depend on a local variable: for ( struct { int i = 0; std::string status; } loop; loop.status != "done"; ++ loop.i ) { ... } This is just almost readable enough to really use. C++17 addresses the problem with structured bindings : using namespace std::literals::string_literals; for ( auto [ i, status ] = std::tuple{ 0, ""s }; status != "done"; ++ i )
