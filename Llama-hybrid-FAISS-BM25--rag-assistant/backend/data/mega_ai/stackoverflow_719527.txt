[site]: stackoverflow
[post_id]: 719527
[parent_id]: 719509
[tags]: 
I think you're confusing your operator precedence and semantics. First of all, you want to say (speed >=50) && (speed Second, in C the && has a higher precedence, so your expression as it is means: If (year==1 AND speed>=50) OR (if my speed is lower than 54)... Third, you have an extra pair of () which suggests that you intended to prioritize things differently. Finally, I'll mention that code that has a bunch of similar looking if statements is fairly poorly written. A better way to implement it would be either with tables or data structures to represent the ranges, or at least a better organization. ==== Update: Now that you've posted the code, it really looks like you're working too hard on this... First of all, if or switch based on year (there should only be about 4 years). For each year, call a separate function to do the calculation, that will already be cleaner. For example: if(year==1) return calculateFineForYear1(speed); if(year==2) return ... (I don't know C#, but there should be some sort of switch statement) Now you can manage each year separately. Since your conditions are in an ascending order of speed, you could do something like: if(speed It is still far from perfect, but it will already be a lot cleaner and manageable. Now, looking at your ifs, it looks like you don't even need that many ifs, because you are paying 50 + C*diff, so why not just calculate the diff (speed-50) and then just return the result of the calculation? For example: Int total_above_limit = (speed – SPEED_LIMIT); Int increments_of_5_above_limit = (total_above_limit)/5 Return ( (INITIAL_FEE – 50) + COST_PER_5_OVER*increments_of_5_above_limit)) (I don't know C#, I'm just guessing at the syntax)
