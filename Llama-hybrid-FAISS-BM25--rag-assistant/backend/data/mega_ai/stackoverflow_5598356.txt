[site]: stackoverflow
[post_id]: 5598356
[parent_id]: 5597803
[tags]: 
Ah, a valid question :) Well, there's a few factors in play here. I'm a Flex developer myself and have been for about 3 years now. I've built many Flex and Air applications but most Air applications I've seen have mostly been used as an internal tool for a very large company, hence you will never see it. The other thing is the pro/con of the whole Air platform. Air is a good idea IMO, but it's still slightly limited. The only reason I can think of using Air is for Mobile development, local data storage for offline working (and syncing), and maybe having a multi-screen application setup. Air is slightly limiting when it comes down to having native functionality, however it gains in portability. There's also a performance issue. Flex/Air is not all that fast (compared to say C#) because it still needs to go through a virtual machine. It's never been all that good at crazy number crunching and doesn't have the ability to do threads (yet). When doing a web application, we normally offload those calculations on the server, but if you're doing a desktop client, you might want to do it locally using the available offline data. It's not impossible, but it won't be as fast. And lastly, one of the main reason why I personally think Air doesn't catch on as much is mostly because of the lack of 'push' Adobe is putting on their developers. Microsoft is freaking nuts at pushing tech at developers; they're very involved. Adobe isn't as much. Heck, many people still don't know that you can use the same codebase and have a web app, desktop app and mobile app easily deployed between all of them. These are all the reasons I can think of now and this are of a personal opinion from being a Flex developer for the past 3 years. When it comes to if you should use the technology or not, it always comes down to the requirements of the project and what technology fits it best.
