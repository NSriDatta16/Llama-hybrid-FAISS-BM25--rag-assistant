[site]: crossvalidated
[post_id]: 501072
[parent_id]: 501061
[tags]: 
Three examples: Right-skewed data. Salaries within an organization may be right-skewed. Mode is the most common salary, mean is total payroll divided by number of employees considered. Any one of mode, median, mean might be the one best way to describe or summarize the data. The summary of the data below shows the median and mean of hypothetical data. set.seed(2020); x = rgamma(500, 3, .01) summary(x) Min. 1st Qu. Median Mean 3rd Qu. Max. 20.69 175.49 268.61 294.28 384.20 964.41 Roughly, the midpoint (250) of the tallest histogram bar might be used as the 'mode' of the sample. A better way to estimate the mode of the population distribution might be to find where (234) the kernel density estimator (KDE) of the sample is a maximum. It is not clear what attribute of the data the average (about 266) of the mean, median, and mode might describe. As mentioned in my comment, this is not far from the median, which does have a clear meaning. hist(x, prob=T, col="skyblue2", main="500 Salaries") lines(density(x), col="red", lwd=2) mx = max(density(x) $y); mx [1] 0.002711106 mode = mean(density(x)$ x[density(x)$y==mx]); mode [1] 233.6744 [ Note: For this gamma population distribution the mean, median, and mode are 300, 267.4, and 200, respectively.] Symmetrical, unimodal data. For data from a normal population, the mean, median, and mode may be nearly the same (all about 100 for the sample below). Perhaps averages are most often used to describe the center of such a distribution; but for various purposes the mode or median might be used as well, and if they are all nearly the same, it doesn't much matter. set.seed(1215); y = rnorm(500, 100, 15) summary(y) Min. 1st Qu. Median Mean 3rd Qu. Max. 49.59 91.30 99.69 100.44 109.07 146.51 hist(y, prob=T, col="skyblue2", main="500 Test Scores") lines(density(y), col="red", lwd=2) Left-skewed data. Here the mean (17.1) tends to be smallest and the mode (18.5) largest. Depending on the type of device under study, any one of these three measures of centrality might be most useful. set.seed(1159); v = 24*rbeta(200, 10, 4) summary(v) Min. 1st Qu. Median Mean 3rd Qu. Max. 10.23 15.30 17.50 17.13 19.13 22.13 hist(v, prob=T, col="skyblue2", main="200 Voltages") lines(density(v), col="red", lwd=2) mx = max(density(v) $y); mx [1] 0.1479789 mode = mean(density(v)$ x[density(v)$y==mx]); mode [1] 18.51482 [ Note: For this population distribution, a multiple of a beta distribution, the mean, median, and mode are 17.14, 17.39, and 18.0, respectively.] Addendum. Of two participants, which is best? One answer is to try to predict which of the two would win if the participants faced each other in a match: Consider A vs. D. On the 12 games for which you have data A averaged 6.92 and D averaged 6.83. # A vs D A = c(5,5,5,5,5,7,7,8,9,9,9,9) summary(A) Min. 1st Qu. Median Mean 3rd Qu. Max. 5.000 5.000 7.000 6.917 9.000 9.000 summary(D) Min. 1st Qu. Median Mean 3rd Qu. Max. 5.000 6.000 7.000 6.833 7.000 9.000 It seems reasonable to ask whether A is likely to win in a match with D. By choosing performances on the 12 earlier games at random, we can simulate a thousand matches between A and D. It seems that A beats or ties D about 63% of the time. set.seed(1216) a = sample(A, 1000, rep=T) d = sample(D, 1000, rep=T) mean(a >= d) [1] 0.628 Playing around with a few other such hypothetical tournaments of 1000 games, I found that the player with the higher average does best. But it is possible to make up player histories of 12 games where this is is not the case when averages over the 12 games are nearly equal. I will let you play around with similar simulated tournaments. If this criterion for 'best' appeals to you, you might search this site and google for information on stochastic domination . Here is one more hypothetical tournament---for B vs. C, both of whom have averages near 7 for the 12 games you report. However, B has more games with high scores, which seems to give B an advantage: B wins or ties about 67% of the time. B = c(5,6,6,6,7,7,7,7,8,8,9,9) summary(B) Min. 1st Qu. Median Mean 3rd Qu. Max. 5.000 6.000 7.000 7.083 8.000 9.000 C = rep(7, 12) summary(C) Min. 1st Qu. Median Mean 3rd Qu. Max. 7 7 7 7 7 7 # B vs C set.seed(1217) b = sample(B, 1000, rep=T) c = sample(C, 1000, rep=T) mean(b >= c) [1] 0.673
