[site]: stackoverflow
[post_id]: 1750604
[parent_id]: 
[tags]: 
getting better performance appending strings than going through standard Java stringbuilder.append

as part of the process of populating a search engine, I populate a Berekely-DB value-store as well. This process is repeated each night and at the moment +/- 60% of the total running time each night is caused by creating the values to be inserted into the value-store ( so excluding the actual insertion into Berekely-DB and the time caused by the Berekely client These values are created by having a stringbuilder assigned to each key, and appending on average about 1000 strings to such a stringbuilder. The resulting values on average are about 10k. Im wondering if this can be done more effciently, given that: - the (on average) 1000 strings appended to each of the Stringbuilders are of fixed length: i.e: each String has the same length and this length is known up front) - all strings are appended to the end. Would for example swapping out the stringbuilder for a char[] or characterStream / writer be more performant? That way I could keep and index where to write to in the char[]. Thanks, Geert-Jan
