[site]: stackoverflow
[post_id]: 1097102
[parent_id]: 
[tags]: 
I need to collect an array of classes to call their static variables in php

First thing i want to say that it's not an easy question to explain, so please be patient if it seems confusing. I have a set of classes like this class Product { public static $static_type = 'product'; public static $static_table = 'product_table'; public function __construct($params) { //do some } } and then there are the classes News, Events etc From another class i need to access to those static variables inside these classes in an iterative way. Something like: //... if (Product::$static_type) { //do some } else if (News::$static_type) { //do other } //... I want to trasform it in a cycle, like foreach in a way like this (it's not correct but makes sense to my question) foreach ($classes as $class) { echo $class::$static_type; //brrrr, just to render the idea :) } So i think about a singleton/static class that has a static method returning an array of my classes (not instantiated). Like this: class Conf { public function __construct() { //nothing } public static function get_class_array () { //how to do this??? } } and then foreach (Conf::get_class_array() as $class) { echo $class::$static_type; //brrrr, just to render the idea :) } How i can reach this? I don't want to instantiate Product, News or others in this case. Edit: eval is evil, i don't want to use it. No tricks with get_declared_class , if there's no way to solve I will use reflection, that i think it's the more elegant way among the mentioned :(. Edit: in the meantime i'll do the Conf::get_class_array() in this way public static function get_class_array () { return array(new ReflectionClass('Prodotto'), new ReflectionClass('News')); } and then call it here: foreach (Conf::get_class_array() as $class) { echo $class->getStaticPropertyValue('static_type'); }
