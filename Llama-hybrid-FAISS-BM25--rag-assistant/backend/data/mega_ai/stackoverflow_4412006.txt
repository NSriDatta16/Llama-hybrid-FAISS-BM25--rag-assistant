[site]: stackoverflow
[post_id]: 4412006
[parent_id]: 2007253
[tags]: 
For anyone using Web Application Projects in VS2010, I managed to get TeamCity to package the deliverables and then Web Deploy the package after successfully building the solution. With a little tweaking, this had the same effect as hitting the 'Publish' button in VS. My solution has a handful of projects, 1 of which is an ASP.NET MVC Web Application project. I build the solution, package the web app project, and msdeploy the package in 3 steps. I haven't figured out a (better|shorter|simpler|more elegant) way to do this. I don't have VS installed on my TeamCity server, so I needed to grab both C:\Program Files\MSBuild\Microsoft\VisualStudio\v10.0\Web and C:\Program Files\MSBuild\Microsoft\VisualStudio\v10.0\Web Applications and put them both in the same spot on the TeamCity server (the second depends on the first). If you're working w/x64 machines, I'd grab them from both Program Files (x86) and Program Files. You also need to have Web Deploy installed on your machine and (I believe) IIS Management Service (i.e., something listening on https://yourservername:8172/MsDeploy.axd ) There are 3 build steps: Visusal Studio (sln) , Target =Rebuild, Configuration =Debug MSBuild WebProject.csproj, Targets =Package Commandline =/p:PackageLocation=%teamcity.build.checkoutDir%\Debug.zip /p:Configuration=Debug Commandline , Executable =%teamcity.build.checkoutDir%\Debug.deploy.cmd, Parameters = /Y "-setParam:'IIS Web Application Name'='Default Web Site/PreCreatedAppInIis'" In that last step, 'IIS Web Application Name' is an actual parameter name, don't change it. It's value can either be something like 'Default Web Site' or whatever you named your website in IIS and/or it can be an IIS application path below it. If the application doesn't exist, you may run into errors about the app pool not being configured correctly to host the application. Rather than investigate it, I just created an application in the appropriate app pool. In my case, I'm targeting ASP.NET 4.0 x64 where the default app pool is ASP.NET 2.0 x64.
