[site]: stackoverflow
[post_id]: 4602636
[parent_id]: 4602097
[tags]: 
As Jonas ElfstrÃ¶m points out, Fisher-Yates is the canonical way to shuffle a set and this is probably a good idea as it will allow you to get data for every item. I think that you probably want more than one pass though. Essentially, what you are doing when sorting a collection of items is building a directed graph where the nodes are the items and the edges represent the relation is greater than or equal to . When one can algorithmically define this relation, then a single pass will suffice and you will end up with a well ordered set. The complication here is that it is very believable that looking at books two at a time and letting a human decide without a well-define algorithm, one will end up with a situation where A > B, B > C and C > A. This will clearly not yield a well ordered set. Even worse, on two different days, one could give two different answers for the same two books. The best way that I can think of to do this is to maintain an n x n matrix where n is the amount of items to be sorted. the i, j entry is the amount of times that item i was selected as being better than item j . Here, i indexes rows and j indexes columns. From here, PageRank which is unfortunately patented 1 , would be ideal. Not quite as elegant, but possibly good enough would be to sum the difference between a ij and a ji and then sort the books based on that. So for example, sorting three books A B C _ _ _ A|0 3 2 B|2 0 3 C|1 2 0 would mean that A was rated as better than B 3 times and better than C 2 times. Summing the rows gives A: (AB - BA) + (AC - CA) = (3 - 2) + (2 - 1) = 2 B: (BA - AB) + (BC - CB) = (2 - 3) + (3 - 2) = 0 C: (CA - AC) + (CB - BC) = (1 - 2) + (2 - 3) = -2 So they would sort as A > B > C . If you aren't going to use page rank, then you can eliminate the matrix and get identical results by associating an integer initialized to 0 for each book. When A is selected over B , increment the integer associated with A and decrement the integer associated with B . 1 Sorry for rant but I have know idea how you patent what's essentially a mathematical result.
