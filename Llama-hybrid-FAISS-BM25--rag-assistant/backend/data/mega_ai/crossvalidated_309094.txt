[site]: crossvalidated
[post_id]: 309094
[parent_id]: 
[tags]: 
feedforward neural networks self driving cars

I am working with neural networks for a while right now and I've read that I could use a simple feedforward neural network to create a self driving car. I was wondering how this possibly works because usually for any data that depends on time, I thought that I need to use a RNN. I am working with Java so implementing a neural network is slightly harder than simply using Numpy in Python etc. So I was not able yet to code my own RNN but still want to create a small 2D simulation where a car should drive a track. So my question now is how one would make a ANN that learns how to drive a track. My attempt was to have 9 input values that determine the distance to the border of the track in a circular shape in front of the car. The distance is given as a value between 0 and 1 and is calculated as a nonlinear function (like in computer graphics) and might looks something like this:$$\tag{$\forall k \in \mathbb{R}:k>0$} d\left(x\right)\ =\frac{-1}{\left(x\cdot k+1\right)^2}+1$$ Probably 2 hidden layers with 5 neurons each. The first value of my output determines how fast the car should accelerate. The second one tells the car to drive left/right $$(0,0.5) \rightarrow left $$$$(0.5,1) \rightarrow right$$ The real question is how would I make my network learn to drive better? . Like what happens when I hit a wall? What should be the error?
