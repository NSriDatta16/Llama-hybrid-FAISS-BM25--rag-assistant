[site]: stackoverflow
[post_id]: 865910
[parent_id]: 490420
[tags]: 
Always compile at the highest warning level, and treat warnings as errors (build breakers). Even if the code is "right" fix the cause of the warning without disabling the warning if at all possible. For example, your C++ compiler might give you a warning for legal code like this: while (ch = GetNextChar()) { ... } It looks like you might have typed = instead of == . Most compilers that offer this (useful) warning will shut up if you add an explicit check. while ((ch = GetNextChar()) != 0) { ... } Being slightly more explicit not only silences the warning but also helps the next programmer who has to understand the code. If you MUST disable a warning, use a #pragma in the code, so you can (1) limit the span of code for which the warning is disabled and (2) use comments to explain why the warning must be disabled. Warnings disabled in command lines or makefiles are disasters waiting to happen.
