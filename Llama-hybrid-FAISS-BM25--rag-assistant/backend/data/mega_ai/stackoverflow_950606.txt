[site]: stackoverflow
[post_id]: 950606
[parent_id]: 950512
[tags]: 
We generally try to test application on 3 levels: Unit tests with JUnit. For this purpose we follow Dependency Injection patter and use mocked objects (based on JMock framework) when necessary. Integration tests. These are also based on JUnit, but do not use mocked objects and test different layers of application, writing to database for example. For the purpose of basic data we follow the Object Mother pattern. Acceptance tests, for this purpose we use Selenum. For test automation and continuous integration, our projects are built with Maven and Hudson. One of the improvements we are looking into at the moment is using Groovy instead of Java for the tests. Some of the issues we had to resolve: creation of basic data in test case setup (based on Object Mother pattern), organization of test suits since all tests can take a lot of time to run, dealing with duplication in test code and a lot of fiddling with Maven and Selenuim, but is definitely worth it in a long run.
