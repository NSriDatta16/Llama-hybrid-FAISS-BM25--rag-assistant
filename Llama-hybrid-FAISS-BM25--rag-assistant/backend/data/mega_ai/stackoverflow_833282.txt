[site]: stackoverflow
[post_id]: 833282
[parent_id]: 833258
[tags]: 
First idea is that to get polymorphism you need to call member method on pointer or reference. I would store pointer to base class in the map (the element that you store gets copied) and then call via pointer like this: #include #include class Base { public: virtual void Foo() { std::cout Storage; Storage["rawr"] = new Child(); Storage["rawr"]->Foo(); return 0; } You get result "2". Note: You have to take care of the allocated memory now.
