[site]: stackoverflow
[post_id]: 3372430
[parent_id]: 3365680
[tags]: 
My suggestion is to make standard length string field for storing building numbers, create index on this field and then use between for search. Something like this format: NNNNNNCCCCBBBB where: NNNNNN - left-padded house number; CCCC - left-padded character (like 'A' in '11A'); BBBB - left-padded building number Under 'left-padded' I mean "filled with some symbol to standard length at left side", see for example result of select lpad('11',5,'X') from dual; query. E.g. suppose, you have "11A high street building 5" address and choose '%' as filling symbol. When converted to proposed format it looks like '%%%11%%%A%%%' and 'high street' stored at separated field(s). Next is query example for selecting all houses between 1 and 1000: with address_list as ( select '%%%11%%%A%%%%' bnum from dual union all select '%1001%%%A%%%%' bnum from dual union all select '%%%%1%%%A%%%%' bnum from dual union all select '%%%%1%%%%%%%%' bnum from dual union all select '%%321%%%A%%%%' bnum from dual union all select '%1000%%%A%%%%' bnum from dual union all select '%1000%%QQ%%12' bnum from dual ) select * from address_list where -- from '1 high street' bnum >= '%%%%1%%%%%%%%' and -- less then '1001 high street' bnum In real case is better to use chr(1) or any other unprintable symbol as symbol for padding. Another thing is to build only function-based index for search without real field storage.
