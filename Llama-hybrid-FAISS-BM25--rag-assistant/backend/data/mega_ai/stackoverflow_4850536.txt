[site]: stackoverflow
[post_id]: 4850536
[parent_id]: 
[tags]: 
Enabling AOP breaks my dependency injection for a factory bean that takes a string

Enabling AOP breaks my dependency injection for a factory bean that takes a string. Here's the fragment from the context file: Here's the factory bean. public class FooFactory extends AbstractFactoryBean { private String url; public void setUrl(final String url) { this.url = url; } @Override public Class getObjectType() { return Foo.class; } @Override protected Foo createInstance() throws Exception { Validate.notNull(url, "null URL"); return new FooFactory().createFoo(new String[]{url}); } } Here is the only declared aspect: @Component @Aspect public class ProfilerAspect { @Around("@target(org.springframework.stereotype.Controller) && args(model,..)") public Object profileController(final ProceedingJoinPoint proceedingJoinPoint, final Model model) throws Throwable { return proceedingJoinPoint.proceed(); } } And this is the exception java.lang.IllegalStateException: Cannot convert value of type [$Proxy13 implementing java.io.Serializable,java.lang.Comparable,java.lang.CharSequence,org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised] to required type [java.lang.String] for property 'url': no matching editors or conversion strategy found
