[site]: crossvalidated
[post_id]: 190683
[parent_id]: 
[tags]: 
What systems are based on the following paper?

http://papers.nips.cc/paper/3150-map-reduce-for-machine-learning-on-multicore.pdf This paper has Andrew Ng as one of the authors. I really liked the idea presented in this paper, and when I looked around, I expected to see some implementation or application of the idea. After all, the idea can be applied to both multi-core and multi-node (multiple computers) systems as well. My question is, what subsequent research work or machine learning systems were built on top of this? (Is that due to deficiencies in the MapReduce model?) I am interested in large-scale/distributed machine learning systems. Here is the abstract of the paper: We are at the beginning of the multicore era. Computers will have increasingly many cores (processors), but there is still no good programming framework for these architectures, and thus no simple and unified way for machine learning to take advantage of the potential speed up. In this paper, we develop a broadly applicable parallel programming method, one that is easily applied to many different learning algorithms. Our work is in distinct contrast to the tradition in machine learning of designing (often ingenious) ways to speed up a single algorithm at a time. Specifically, we show that algorithms that fit the Statistical Query model can be written in a certain “summation form,” which allows them to be easily parallelized on multicore computers. We adapt Google’s map-reduce [7] paradigm to demonstrate this parallel speed up technique on a variety of learning algorithms including locally weighted linear regression (LWLR), k-means, logistic regression (LR), naive Bayes (NB), SVM, ICA, PCA, gaussian discriminant analysis (GDA), EM, and backpropagation (NN). Our experimental results show basically linear speedup with an increasing number of processors.
