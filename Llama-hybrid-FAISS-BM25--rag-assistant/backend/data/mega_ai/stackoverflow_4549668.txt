[site]: stackoverflow
[post_id]: 4549668
[parent_id]: 4546096
[tags]: 
Actually, what you want is the - (void)touchesMoved:(NSSet*)touches withEvent:(UIEvent*)event . Below is a sample of code that will allow a UIView to move on the x-axis only. Adapt to whatever you need your code to do. - (void)touchesMoved:(NSSet*)touches withEvent:(UIEvent*)event { CGPoint original = self.center; UITouch* touch = [touches anyObject]; CGPoint location = [touch locationInView:self.superview]; // Taking the delta will give us a nice, smooth movement that will // track with the touch. float delta = location.x - original.x; // We need to substract half of the width of the view // because we are using the view's center to reposition it. float maxPos = self.superview.bounds.size.width - (self.frame.size.width * 0.5f); float minPos = self.frame.size.width * 0.5f; float intendedPos = delta + original.x; // Make sure they can't move the view off-screen if (intendedPos > maxPos) { intendedPos = maxPos; } // Make sure they can't move the view off-screen if (intendedPos Notice here that I am taking the delta of the movement and not with the finger. If you track with the finger you will get very erratic behavior that is very undesirable. Applying the delta will give nice, fluid movement of the view that will track perfectly with the touch input. Update: Also, for those wondering why I chose to multiply by 0.5f rather than divide by 2, the ARM processor doesn't support division in hardware, so there is a minuscule performance bump by going with multiplication. This performance optimization may only get called only a few times during the life of a program so it might not make a difference, but this particular message is called many, many times when dragging. Because it is in this case, it might be worth the multiplication, instead.
