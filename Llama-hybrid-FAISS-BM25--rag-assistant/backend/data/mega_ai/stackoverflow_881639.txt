[site]: stackoverflow
[post_id]: 881639
[parent_id]: 
[tags]: 
Python imports: importing a module without .py extension?

In a Python system for which I develop, we usually have this module structure. mymodule/ mymodule/mymodule/feature.py mymodule/test/feature.py This allows our little testing framework to easily import test/feature.py and run unit tests. However, we now have the need for some shell scripts (which are written in Python): mymodule/ mymodule/scripts/yetanotherfeature.py mymodule/test/yetanotherfeature.py yetanotherfeature.py is installed by the module Debian package into /usr/bin. But we obviously don't want the .py extension there. So, in order for the test framework to still be able to import the module I have to do this symbolic link thingie: mymodule/ mymodule/scripts/yetanotherfeature mymodule/scripts/yetanotherfeature.py @ -> mymodule/scripts/yetanotherfeature mymodule/test/yetanotherfeature.py Is it possible to import a module by filename in Python, or can you think of a more elegant solution for this?
