[site]: stackoverflow
[post_id]: 5075803
[parent_id]: 
[tags]: 
iOS Core Data - fetching results

My data model is multi-tiered . Let me give an example to demonstrate the data model. I have three entities say X , Y and Z . X could have 1 or more Y's. Y is associated only with 1 X. Y could have 1 or more Z's. Z is associated only with 1 Y . Now my top tableview controller - Controller A uses a fetchedResults controller to get me all the X's from core data When the user selects a particular row , he/she selects a particular X from which I have the list of all Y's under this X . A particular Y which is passed to controller B . I also pass the managed objected context from A to B . In B I want to be able to display all the Z's associated with the Y but in some order . Currently I find that the order is indicative of the Most recently used Z . I would want it in the reverse order . How do I specify ( in terms of core data) to be able to act upon this specific Y and get me results based on a particular criterion ? All the examples for core data that i ve seen so far start from scratch as shown below NSManagedObjectContext *context = ; NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init]; NSEntityDescription *entity = [NSEntityDescription entityForName:@" " inManagedObjectContext:context]; [fetchRequest setEntity:entity]; NSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:@" " ascending:YES]; NSArray *sortDescriptors = [[NSArray alloc] initWithObjects:sortDescriptor, nil]; [fetchRequest setSortDescriptors:sortDescriptors]; NSError *error = nil; NSArray *fetchedObjects = [context executeFetchRequest:fetchRequest error:&error]; if (fetchedObjects == nil) { // Handle the error } [fetchRequest release]; [sortDescriptor release]; [sortDescriptors release]; One solution to this is to NOT use NSFetchedRequest but to act upon the passed Y object and sort the NSArray . NSAssert1(yObject!=nil,@"yObject is null",1); NSSet *zObjects = yObject.zobjectsinY; NSArray *zObjectArray = [zObjects allObjects] ; sortedQZArray = [zObjectArray sortedArrayUsingFunction:intSort context:NULL]; I feel that this is not an elegant solution and there should be a better way to query for these results . Also another option is to be able to insert these values in the expected order when creating the data ? How can I specify the order for a record that is to be inserted in an entity object ? Thanks in advance
