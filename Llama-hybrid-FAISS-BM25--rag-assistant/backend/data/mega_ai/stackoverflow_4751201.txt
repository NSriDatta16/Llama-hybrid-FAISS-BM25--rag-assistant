[site]: stackoverflow
[post_id]: 4751201
[parent_id]: 
[tags]: 
Don't execute a function until an inner animation completes

The Terse Version Say I have a function that uses a jQuery animation. I don't want this function to be invoked again until the animation completes. For example, when the function below gets called, I don't want it to be invoked again until the inner timer routine finishes: function doSomething() { ... blah blah blah ... someElement.fadeOut(999, function() { // Don't let doSomething get invoked until the fadeOut animation has finished }); } The Long-Winded Question I am working on a news ticker widget that, underneath the covers, is an unordered list. Only a subset of the list elements are displayed at a time. Every five seconds the first item in the list is faded out and then removed from the top of the list and added to the bottom of the list. The function for cycling the top news item looks like so: function advanceTicker(id) { // Get the first item var firstItem = $(id + ' li:first'); var firstItemMarkup = firstItem.html(); // Fade out the first item then move it to the bottom firstItem.fadeOut(999, function() { $(this).remove(); // Remove the first item // Tack the first item to the end of the list $(id).append(' ' + firstItemMarkup + ' '); // Make the new first item visible $(id + ' li:first').show(); }); } The above function works well when the news items are cycled through every five seconds, but if I want to call this function if the user clicks a button on the page (to advance to the next item), things go haywire if the user clicks the button multiple times. Namely, there are duplicates in the news ticker. I understand why (or at least I think I do) - the fadeOut call that was executed on the first button click hasn't finished by the time the button is clicked again, so the same firstItem is selected on the second button click and appended again. My presumption is that I need to ensure that this advanceTicker function isn't called while "in progress." Is there an elegant way to do this? What I have now - which feels like a bit of a hack - is a flag variable like so: var inAnimation = false; function advanceTicker(id) { if (!inAnimation) { inAnimation = true; ... firstItem.fadeOut(999, function() { ... inAnimation = false; }); } } The above approach feels wrong and smells like a race condition problem.
