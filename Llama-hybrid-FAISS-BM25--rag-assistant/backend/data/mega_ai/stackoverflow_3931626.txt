[site]: stackoverflow
[post_id]: 3931626
[parent_id]: 3931444
[tags]: 
This sounds very elegant but elegancy is not necessarily a good thing. What makes me worried is not the using of caching, it is trying to solve an inherently database problem outside the database - not every company is Microsoft/Oracle/... and has the manpower to make a brilliant database. I believe you have issues with the database perfromance and caching has been put forward as the solution. But it is not a pure cache, it needs to handle data consistency and changes to the data as well as simple reads and you are trying to deal with the data that is often changing and as such is not a good candidate for cache. IMO, this is a call for disaster. Having to implement all database functionality in front of another database it is just not right. Simplify the database and denormalise. If you still need caching, use ASP.NET caching outside ASP.NET by just referencing it in your project; it has a rich API catering for pretty much any requirement you need.
