[site]: stackoverflow
[post_id]: 3955000
[parent_id]: 3953686
[tags]: 
Files, (well the C standard actually talks about "compilation units") do not do anything, do not perform . Their intended use is to organize functions in related groups. Functions and programs (which may be made of multiple linked compilation units) are what do things. If you want one function to call another, just do so. You will need to properly declare it, of course. If it is in a separate file, the recommended way to do this is to create a "header file" with the declaration that can be #included in both the file implementing the function to be called, and the file with the function that calls. If, instead, you want multiple threads of execution, there is no portable way to do it. It is platform dependent. Windows has a set of threading abilities, details of which Microsoft documents. Most Unix platforms use an API known as pthreads . Finally, you may want two different programs to communicate. This is known as interprocess communication (IPC). This too is platform dependent.
