[site]: stackoverflow
[post_id]: 5239902
[parent_id]: 5238405
[tags]: 
the openNodes property in view:IHierarchicalCollectionView seems to be what I was looking for. Passing the root node to this seems to do the trick. I'm sure there's a more elegant way to write this ;-) function recurse(o:Object):uint { // grab the general list, for commodity var view:IHierarchicalCollectionView = adg.dataProvider as IHierarchicalCollectionView; // I count as 1 if we're recursing through me var total:uint = 1; // check if I'm open for each (var e:Object in view.openNodes) { if (e == o) { // if so I need to add my children and their families for each (var c:Object in o.children) total += recurse(c); } } // if not I'm done, just counting myself return total } Note: one thing I thought was interesting is that openNodes returns the list of open nodes, even if they are not visible like in the case of such nodes living inside a closed node.
