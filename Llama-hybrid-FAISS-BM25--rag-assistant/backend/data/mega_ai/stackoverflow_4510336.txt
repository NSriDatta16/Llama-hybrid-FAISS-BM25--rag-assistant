[site]: stackoverflow
[post_id]: 4510336
[parent_id]: 2765212
[tags]: 
We've recently switched from T-SQL Unit to the Visual Studio 2010 Unit testing framework. The biggest complaint is that we need to manage our own transaction scope within the tests in order to leave the database "clean" for the next test(s). This is something that T-SQL unit provides right at the start. Our goal is to have 100% coverage for our stored procedures. It enables us to change the underlying table structure and relationships as needed without having to be absolutely in lock step with development (we have independent data and development teams). We haven't started measuring the test coverage yet. We're in the process of developing our first production deployment with this technology stack. For us the interface between the applications and data is stored procedures. First we build the stored procedures enough to meet the needs of the application team and then once the signature has become stable enough to get to continuous integration, then we'll build our unit tests. We wanted to do TDD, but we have a deadline that is making that just not a practical option. We haven't measured ROI on the testing harness, but experience has shown us that changes to the production database have been very costly.
