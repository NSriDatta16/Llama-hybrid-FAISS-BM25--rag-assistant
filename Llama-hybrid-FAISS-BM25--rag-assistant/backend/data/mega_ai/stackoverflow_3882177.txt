[site]: stackoverflow
[post_id]: 3882177
[parent_id]: 3882108
[tags]: 
One thing is certain: if you use EntityManager on the service layer, you don't need a dao layer (only one layer should know implementation details). Apart from that, there are different opinions: Some say the EntityManager exposes all needed dao functionality, so they inject EntityManager in the service layer. Others have a traditional dao layer backed by interfaces (so the service layer is not tied to implementation details). The second approach is more elegant when it comes to separation of concerns and it also will make switching from one persistence technology to the other easier (you just have to re-implement the dao interfaces with the new technology), but if you know that nothing will change, the first is easier. I'd say if you have a small project, use JPA in the service layer, but in a large project use a dedicated DAO layer.
