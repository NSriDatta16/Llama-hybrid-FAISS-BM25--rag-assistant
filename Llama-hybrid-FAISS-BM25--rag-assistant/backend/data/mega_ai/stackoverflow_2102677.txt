[site]: stackoverflow
[post_id]: 2102677
[parent_id]: 2102422
[tags]: 
How about defining an interface containing just the one method that blanks out optional attributes? You can test an object for implementing the interface and call the method directly. This handles specific exceptions more elegantly than trying to create a catch all situation using reflection: interface Blankable { /** @return true if all optional fields are successfully blanked. **/ public boolean blankOptionalFields(); } and use like: if (obj implements Blankable) { if (!((Blankable) obj).blankOptionalFields()) { logger.debug("Could not blank optional fields for " + obj); } }
