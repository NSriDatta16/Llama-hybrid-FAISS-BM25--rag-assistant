[site]: stackoverflow
[post_id]: 62071
[parent_id]: 61872
[tags]: 
Floating points have unexpected irrational numbers. For instance you can't store 1/3 as a decimal, it would be 0.3333333333... (and so on) Floats are actually stored as a binary value and a power of 2 exponent. So 1.5 is stored as 3 x 2 to the -1 (or 3/2) Using these base-2 exponents create some odd irrational numbers, for instance: Convert 1.1 to a float and then convert it back again, your result will be something like: 1.0999999999989 This is because the binary representation of 1.1 is actually 154811237190861 x 2^-47, more than a double can handle. More about this issue on my blog , but basically, for storage, you're better off with decimals. On Microsoft SQL server you have the money data type - this is usually best for financial storage. It is accurate to 4 decimal positions. For calculations you have more of a problem - the inaccuracy is a tiny fraction, but put it into a power function and it quickly becomes significant. However decimals aren't very good for any sort of maths - there's no native support for decimal powers, for instance.
