[site]: stackoverflow
[post_id]: 2808638
[parent_id]: 2808437
[tags]: 
Effectively, it seems that they reinvented the wheel (so to speak). I would personally consider 2 libraries for your need: Loki, for Loki::AssocVector -> the interface of a map implemented over a vector (which is what you wish to do) Boost.Iterator, for its iterator_adaptor class. Makes it very easy to implement a new container by Composition. As a remark, I would note that you may wish to be a little more generic that values different from the T() because this impose T to be DefaultConstructible. You could provide a constructor which takes a T const& . When writing a generic container it is good to try and reduce the necessary requirements as much as possible (as long as it does not hurt performance). Also, I would remind you that the idea of using a vector for storage is very good for a little number of values, but you might wish to change the underlying container toward a classic map or unordered_map if the number of values grows. It could be worth profiling/timing. Note that the STL offer this ability with the Container Adapters like stack , even though it could make implementation slightly harder. Have fun.
