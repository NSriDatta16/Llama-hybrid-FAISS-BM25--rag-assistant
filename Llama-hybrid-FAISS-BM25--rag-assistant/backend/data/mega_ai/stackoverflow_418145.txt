[site]: stackoverflow
[post_id]: 418145
[parent_id]: 418028
[tags]: 
Well obviously nobody can tell exactly what's going to happen to all the latest/greatest stuff in the future. If you were a Mac OS programmer in the '80s and '90s you'd probably be a bit annoyed too if not quite in the same boat as VB6 programmers. .NET and VB.NET/C# are a viable proposition in the long term. They are in a different situation to stuff like classic VB and FoxPro in that they run in a virtual machine that has use to lots of different languages. As such, even if a new more popular language comes along that targets .NET, your old code will still run. When you say you want a desktop application rather than something web-based, that is a concern because Windows Forms (the traditional VB-like user interface framework) is not receiving much attention from Microsoft already. It's not going to go away like I said, but there's not going to be much future improvement to it. If you are working on a massive never-changing app like you say, then this might not be a problem for you. The alternative .NET user interface framework is WPF, which is the latest-greatest. There are questions over the long-term viability of this due to its extraordinary resource useage. So far there is only one significant desktop app that uses it (Microsoft's own WPF design tool Expression Blend) and to try and convince people WPF really is viable they have committed to using WPF in Visual Studio 2010 for parts of the user interface like the editor. Even so, I'd find it hard to recommend WPF for the application you describe - it's just too risky. As to your question about Visual Studio versions, VS2005 wasn't very good (rushed out the door eary with some serious performance issues). VS2008 however is a fine release and you would be well advised to start your project with that - there is no guarantee that 2010 will be better (or even as good due to the WPF factor). Teams tend to use Visual Studio versions for a long time (my employer is still using 2003 for some work!) and all versions peacefully co-exist on a single machine. And yes, Microsoft does tend to talk about dev tools well in advance of when they are available. Apparently the "osbourne effect" doesn't apply to developer tools :)
