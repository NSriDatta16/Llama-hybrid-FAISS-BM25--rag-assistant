[site]: stackoverflow
[post_id]: 1994466
[parent_id]: 1994437
[tags]: 
You design the protocol so you decide. You can use text or binary communication. Whatever format you use, you decide the how to serialize/de-serialize and interpret data. If you use XML, you can leverage on XMLRPC or SOAP. You can use JSONRPC as well. Last time in my project, I used binary in a very simple yet efficient way: The first to identify the method/function to call. The next 2 bytes to inform the length of data (up to 64K - 1 bytes) and the rest is data. Take note of Big/Small Endianess. It's very subjective. You could use validating or non-validating parsers. TinyXML is lightweight one. You can look into MiniXML and Expat. libxml2 is fatter. So far XML parsing is not in standard libraries of C or C++. You could use the aforementioned libraries. Good luck! EDIT: By the way, if you want to use binary format to exchange data, just use any of these 3: http://tpl.sourceforge.net/ - C serialization library. http://www.s11n.net/c11n/ - A powerful and complicated C serialization library. Siseria - http://sourceforge.net/projects/siseria/ , purely in C. I wrote for an embedded system project. It runs without any dependency and is very fast! Compared to other 2, mine is very simple and does not use heap and dynamic memory at all. Everything is on the stack!
