[site]: stackoverflow
[post_id]: 3295435
[parent_id]: 
[tags]: 
Image blurring in C++. Problem with copy of matrix

I am inputting a matrix of black/white pixel values and then I am blurring the inside using an averaging technique. I have the program looping through properly but I need a constant copy of the original matrix for the for loops to use when stepping through. How can I do this? #include using namespace std; /****blurImage***************************************************************************************************** * main -- Program to blur a grayscale image given the pixel values and their location * * Arguments: none * * returns: 0 *****************************************************************************************************************/ void blurImage(int matrix[100][100], int matRow, int matCol, int image[100][100]); int main(){ int matRow; int matCol; bool checkDataOk; int matrix[100][100]; int image[100][100]; cout > matCol; cout > matRow; if (matRow right):" > tmp; matrix[i][j] = tmp; } } blurImage(matrix, matRow, matCol, image); cout If I input this 6x5 matrix: 0 0 255 0 0 0 255 0 255 0 255 255 0 255 255 255 255 255 255 255 255 0 0 0 255 255 0 0 0 255 0 0 255 0 0 I should get: 0 0 255 0 0 0 113 141 113 0 255 170 198 170 255 255 170 141 170 255 255 141 85 141 255 255 0 0 0 255 0 0 255 0 0
