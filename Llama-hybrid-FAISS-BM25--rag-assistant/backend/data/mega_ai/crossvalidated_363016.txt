[site]: crossvalidated
[post_id]: 363016
[parent_id]: 
[tags]: 
How to include new data into existing algorithm?

I have a complex ensembel algorithm X (divide data with k means that learn ensembel for each subgroup). Learning time of X is approx. 20 hours. I cannot afford to relearn algorithm for every new observation, but I would like to use new information that it present. What is the best way to include new information? Can I somehow infer new information in existing algorithm (if needed I can provide more detailed description of it)? I have looked into the infering neural network (i have never worked with them before), but I am not sure that I understand it correctly. Would it be possible to build a deep NN (or ensemble) on train data, and then set up inference on test data? Can I just update testdata and re run inference, would that work? Or am I completly missing the point here? I have not find much literature on inference, so I would be thankful for any references or brainstorming ideas. Specs: R (prefer) or python (can run NN on GPU) i7-8850 processor; 6-core, 1050GTX NVIDIA, 32GB RAM, windows 10 64-bit
