[site]: crossvalidated
[post_id]: 620013
[parent_id]: 
[tags]: 
Inferring relative frequencies in partially observed Dirichlet-Multinomial

I am working with this example. I have a set of multinomial data with $N$ rows and $D+1$ categories drawn from buckets of different size, $M_n$ : $$ \mathbf{p}_{D+1}~\sim~\text{Dirichlet}(\mathbf{a}_{D+1})\\ \mathbf{y}_{n}~\sim~\text{Multinomial}(M_n,~\mathbf{p}_{D+1})$$ I wish to learn the relative frequencies of the first $D$ components of the posterior for $\mathbf{p}$ , i.e. $$q_{d} = \frac{p_{d}}{\sum_{j=1}^{D}p_{d}}.$$ Alternatively I could learn the equivalent model with just those first $D$ parameters, i.e. I drop the last column of my data and instead calculate $$\mathbf{p}_{D+1}~\sim~\text{Dirichlet}(\mathbf{a}_{D})\\ \mathbf{y}_{n, D}~\sim~\text{Multinomial}(M_n - y_{n, D+1},~\mathbf{p}_{D}^{*})$$ (where $\mathbf{a}_{D}$ are simply the first $D$ components of the vector $\mathbf{a}_{D+1}$ ) and learn the posterior for $\mathbf{p}_{D}^{*}$ . My question is whether the relative frequencies estimated for the first case are equal to those for the second, i.e. $\mathbf{q} = \mathbf{p}_{D}^{*}$ . The reason I am interested in this setup is that $y_{n, D+1}$ is unobservable in my dataset. My instinct is that the answer is obviously yes, since due to the simplex sampling space of $\mathbf{p}$ the rescaling I perform for $q_d$ is implicit. The following code snippet suggests that this is the case: library(MCMCprecision) alpha colMeans(xfullsub) [1] 0.32205272 0.16228071 0.19275559 0.25859167 0.06431931 > colMeans(xsub) [1] 0.32445834 0.15957880 0.19409470 0.25805411 0.06381406 > cov(xsub) [,1] [,2] [,3] [,4] [,5] [1,] 0.0069050033 -0.0015408784 -0.0019659580 -0.0027251813 -0.0006729856 [2,] -0.0015408784 0.0042378620 -0.0010678030 -0.0013334961 -0.0002956845 [3,] -0.0019659580 -0.0010678030 0.0049890927 -0.0015923774 -0.0003629543 [4,] -0.0027251813 -0.0013334961 -0.0015923774 0.0061829670 -0.0005319123 [5,] -0.0006729856 -0.0002956845 -0.0003629543 -0.0005319123 0.0018635366 > cov(xfullsub) [,1] [,2] [,3] [,4] [,5] [1,] 0.0068080012 -0.0015223084 -0.0019965425 -0.0026467176 -0.0006424327 [2,] -0.0015223084 0.0042819071 -0.0010962578 -0.0013639325 -0.0002994084 [3,] -0.0019965425 -0.0010962578 0.0049992621 -0.0015319462 -0.0003745155 [4,] -0.0026467176 -0.0013639325 -0.0015319462 0.0060368491 -0.0004942528 [5,] -0.0006424327 -0.0002994084 -0.0003745155 -0.0004942528 0.0018106093 but I am interested to know if there is a proof or manipulation of the Dirichlet-Multinomial distribution I am missing here. Alternatively this may be so obvious such a proof is unnecessary... Any references or pointers would be greatly appreciated. Thanks!
