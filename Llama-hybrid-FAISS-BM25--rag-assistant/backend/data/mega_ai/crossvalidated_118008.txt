[site]: crossvalidated
[post_id]: 118008
[parent_id]: 
[tags]: 
How can I make sure that an LDA implementation works?

I am currently experimenting with neural nets for classification of on-line handwritten data (hence: not pixels, but time series data). To do so, I use several toolkits (internal development of my university). One toolkit I use is pfile_utils . It offers an Linear discriminant analysis (LDA) implementation. However, when I apply this LDA implementation my neural net gets an error rate of 1 on the validation set (and the test set). So after LDA it the neural net does not recognize anything. I thought that LDA would in the worst case change nothing. So I think this might be an implementation error. Is there any dataset for neural nets where it was showed that LDA significantly improves the recognition rate? How could I otherwise check if the LDA implementation is correct? Currently, my features are calculated like this: Get the data. The data is grouped by strokes. Every stroke consists of triples (x, y, time). Get the first 4 strokes. Discard the rest. Linear interpolate every stroke. Get 20 points for each stroke (spaced evenly in time). Get x and y coordinates => 4*20*2 = 160 features Then apply LDA to those I think the problem might also be that there is a relationship between the features which the neural net seems to recognize. When I apply LDA this relationship gets broken. Could that be? Is there any literature for LDA and time series data classification?
