[site]: stackoverflow
[post_id]: 4158839
[parent_id]: 4157895
[tags]: 
I think this is generally bad idea. Web application is very different from GUI one and there are many reasons: 99% of the web is about the content rather then about iteration. You go to web to get or share content rather then to do some real time interaction like drawing a picture, working with spreadsheet or anything else. Web is content driven rather then "event driven" interactive application. This has strong impact on how do you create most of web - you bring information to user rather then interact with him. The server and client programming is very different There are some web GUI applications like e-Mail, Chats clients but to perform well they require very good separation between the client side written in high quality Java Script and the high quality server side backend that is used over AJAX for content retrieval. Hiding this separation like Wt does or (other known frameworks) lead to crappy software and generally brings more problems then solutions in long run. Because it should be very clear separation between server side and client side jobs as some require real time response and some don't. When you try to solve all this in one wait for problems. Note, there are client-server solutions for GUI (see X-Server as example) but unlike web they designed for this and rather work more like IPC rather then client-server solitions. The web is stateless most of the time. Or to be more correct the state usually keeps quite small amount of data. Creation of instant session object is nice idea until you need to... Scale up save state in long terms then this model becomes not so good, of course this not "forced" model by Wt but it is general concept that fits certain concept and some does not. Bottom Line If you want to design good GUI like web application. Start learning JavaScript and use good GUI JavaScript frameworks that fit well to GUI even driven design. Then combine them with some server side API using some interaction RPC model like Json-RPC, XML-RPC and other AJAX tools. This is the way to do things right for highly interactive applications. If your application is more content oriented then most of server side web frameworks do great job - concentrate on server side with its great tools suitable for the job. All in one solution? It just does not work... Disclosure: I'm developer of CppCMS and I think Wt just goes in wrong way.
