[site]: stackoverflow
[post_id]: 640594
[parent_id]: 241134
[tags]: 
For C/C++ programmers, the transition to C# is a natural one. However, the biggest gotcha I've run into personally (and have seen with others making the same transition) is not fully understanding the difference between classes and structs in C#. In C++, classes and structs are identical; they only differ in the default visibility, where classes default to private visibility and structs default to public visibility. In C++, this class definition class A { public: int i; }; is functionally equivalent to this struct definition. struct A { int i; }; In C#, however, classes are reference types while structs are value types. This makes a BIG difference in (1) deciding when to use one over the other, (2) testing object equality, (3) performance (e.g., boxing/unboxing), etc. There is all kinds of information on the web related to the differences between the two (e.g., here ). I would highly encourage anyone making the transition to C# to at least have a working knowledge of the differences and their implications.
