[site]: datascience
[post_id]: 41315
[parent_id]: 
[tags]: 
Combine multiple features for text classification

Recently I started reading more about NLP and following tutorials in Python in order to learn more about the subject. I'm trying to make my own classification algorithm (the text sends a positive/negative message) and I have already preprocessed the text and tested it using different approaches in order to find the one that works the best in my case. The best results were achieved by using Random Forest classifier with BOW - unigrams, but the accuracy can still be further improved (at the moment is somewhere around 0.73). What I want to do next is to create a Bag of emojis, try different sentiment analysis techniques (Vader, SentiStrength), count the number of negative/positive words in each of the phrases. My question is how can I take into account all these different features? Should I create a table with the results given by all of these features and calculate the mean? For example (0 - classified as positive): Classifier Sentiment analysis Bag of emojis Pos/Neg words 0 or 1 0 or 1 0 or 1 if numberPos > numberNeg consider positive I'm kind of new at this and I was wondering if anyone could please guide me in the right direction?
