[site]: stackoverflow
[post_id]: 3223793
[parent_id]: 3223660
[tags]: 
Mhh the following is rather ugly, but it works. Does it help? I define a wrapper for TimeSpan that can implicitly be converted back to a TimeSpan . type MyTimeSpan(ts : TimeSpan) = member t.op_Implicit : TimeSpan = ts static member (+) (t1 : MyTimeSpan, t2 : MyTimeSpan) = new MyTimeSpan(TimeSpan.FromTicks(t1.op_Implicit.Ticks + t2.op_Implicit.Ticks)) static member Zero = new MyTimeSpan(TimeSpan.Zero) static member DivideByInt (t : MyTimeSpan, i : int) = new MyTimeSpan(TimeSpan.FromTicks(int64 (float t.op_Implicit.Ticks / float i))) let toMyTS ts = new MyTimeSpan(ts) let l = [TimeSpan.FromSeconds(3.); TimeSpan.FromSeconds(4.)] |> List.map toMyTS |> List.average
