[site]: stackoverflow
[post_id]: 1762674
[parent_id]: 264457
[tags]: 
Actually I found myself with the need to reproject database logic of my program (already in production) because of a bug of SQlite that when is facing a relatively large amount of data and operations, it simply fails locking down the database and leaving it so until the program shuts down, meaning that every program data progress is temporarily, then every add is lost. Cute uh? Migrating to MySql, and I get to the point, I tried something to test speed difference, and came out that something like a safe query as "UPDATE table SET column1=column1" on a table of 280'500 records, SQlite required about 13 seconds, while MySql took just 1 sec. I'm still not a db guru, but to choose is enhough a simple consideration: if you require a simple memory storage for limitated amount of data,complexity and concurrency (such as a small utility or programs operating with no-critical data) then SQlite will be fine, otherwise when you need stability, concurrency, large amount of data, complexity in queries, then your db will be MySql. About different databases in develop and production I don't agree, but if you did so, you have for sure your good reasons.
