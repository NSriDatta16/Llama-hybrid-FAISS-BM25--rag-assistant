[site]: crossvalidated
[post_id]: 31180
[parent_id]: 31139
[tags]: 
See this question: Analyzing Likert scales Agresti does a lot of this ordinal data analysis (e.g., "Analysis of Ordinal Categorical Data" ). For your particular problem, I would suggest looking at three methods: multiple hypothesis testing http://en.wikipedia.org/wiki/Multiple_comparisons , mixed effects models http://en.wikipedia.org/wiki/Mixed_model package lme4 function lmer() in R, and cumulative link mixed models http://cran.r-project.org/web/packages/ordinal/vignettes/clmm2_tutorial.pdf package ordinal function clmm() in R. In general, I wouldn't recommend doing traditional multiple testing since that assumes the data is ratio (rather than ordinal like you have). If you want to make that assumption though, you can just test to see which questions have an average response different from to the center of the Lickert scale, and then use a correction to take into account the fact that you did 9+6+7+2+4+2 tests. For the mixed effects models use random effects, and treat each group of questions separately ("utility of the program", etc.). Treat each question as a random effect (there is a population of possible questions you could have chosen, and you happened to pick these 9 questions about utility), and treat the respondent as a random effect (there is a population of possible people who you want to gather opinions about, and you happened to sample this group). Hence, the model is $y_{ij}=\mu + a_i + b_j + e_{ij}$ where $y_{ij}$ is the response of person $i$ to question $j$, $a_i$ is the random effect due to person $i$ (you have 16 people), $b_j$ is the random effect due to question $j$ (you have 9 questions in the group "utility"), and $e_{ij}$ is the error of how much person $i$'s response to question $j$ differed from the model. Using the lme4 package, you can estimate $\mu$ and test if it is significantly different from the center of the Likert scale. Using the ordinal package, you can do this more carefully taking into account that your data is ordinal instead of ratio, but you lose some of the interpretability of the linear mixed effects model. Those packages use a sort of funny notation. Suppose your data is in a dataframe called dat with columns response , question , person . Then you can implement this as follows: require(lme4) lmer(response ~ 1 + (1 | question) + (1 | person), data=dat) require(ordinal) clmm(ordered(response) ~ 1 + (1 | question) + (1 | person), data=dat)
