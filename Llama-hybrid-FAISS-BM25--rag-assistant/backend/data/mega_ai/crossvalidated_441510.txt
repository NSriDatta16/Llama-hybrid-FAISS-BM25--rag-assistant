[site]: crossvalidated
[post_id]: 441510
[parent_id]: 
[tags]: 
Reinforcement Learning on quantum circuit

I am trying to teach an agent to make any random 1-qubit state reach uniform superposition. So basically, the full circuit will be State -> measurement -> new_state (|0> if 0, |1> if 1) -> Hadamard gate . It just needs to perform 2 actions . That's all. So it's more of an RL problem rather than QC. I am using reinforcement learning to train the model but it doesn't seem to learn anything. The reward keeps on decreasing and even after 3 million episodes, the agent doesn't seem to converge anywhere. This is how I am training: def get_exploration_rate(self, time_step): return self.epsilon_min + (self.epsilon - self.epsilon_min)*\ math.exp(1.*time_step*self.epsilon_decay) def act(self, data,t): #state rate = self.get_exploration_rate(t) if random.random() I have tried various things like changing the inputs, reward function, even added exploration rate . I have assigned max time step as 5 even though it should complete in just 2 . What am I doing wrong? Any suggestions?
