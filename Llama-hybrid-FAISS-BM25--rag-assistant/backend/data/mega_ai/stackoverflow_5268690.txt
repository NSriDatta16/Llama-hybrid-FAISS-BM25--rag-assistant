[site]: stackoverflow
[post_id]: 5268690
[parent_id]: 5268572
[tags]: 
To your last question, if whatever framework you're using supports both a session-level storage and an application-level storage, when a user logs in, you can stored their "logged-in-ness" as a boolean in the session and hold a list of usernames in the application storage. If a user tries to log in, and is present in the application storage but not the session storage, it's a duplicate login from a different browser. Handling the end of a session when the user doesn't explicitly log out is a challenge though. As far as the user experience, it really depends on your purpose. In most cases, I would expect to be able to run concurrent sessions without a problem, so I might get upset if I couldn't. Another option would be to inform device B that the user already has a session running, and he must close session on device A before continuing. That way if the same user is on both, he has maximum control. If they are different users, and device A has the valid account, he continues working without interruption. If device B has the valid user, he knows that his account has been compromised. It's probably his fault for being sloppy with a password and he needs to get further help.
