[site]: stackoverflow
[post_id]: 1300759
[parent_id]: 1300655
[tags]: 
don't accumulate responsibilites to a single configuration object since it will ends in a very big object that is both difficult to understand and fragile. For example if you need another parameter to a particular class you change the Configuration object, then recompile all the classes that uses it. This is somewhat problematic. Try refactoring your code to avoid a common, global and big Configuration object. Pass only required parameters to client classes: class Server { int port; Server(Configuration config) { this.port = config.getServerPort(); } } should be refactored to: class Server { public Server(int port) { this.port = port; } } a dependency injection framework will help a lot here, but it isn't stricly required.
