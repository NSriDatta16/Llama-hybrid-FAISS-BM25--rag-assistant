[site]: stackoverflow
[post_id]: 1925827
[parent_id]: 1924408
[tags]: 
In order to update a DependencyProperty in a ViewModel, use the same dispatcher you would use to access any other UIElement: System.Windows.Deployment.Current.Dispatcher.BeginInvoke(() => {...}); Also, BitmapImages have to be instantiated on the UI thread. This is because it uses DependencyProperties, which can only be used on the UI thread. I have tried instantiating BitmapImages on separate threads and it just doesn't work. You could try to use some other means to store images in memory. For example, when you download the image, store it in a MemoryStream. Then a BitmapImage on the UI thread can set its source to the MemoryStream. You may try instantiating the BitmapImages on the UI thread and then do everything else with the BitmapImage on another thread... but that would get hairy and I'm not even sure it would work. The following would be an example: System.Windows.Media.Imaging.BitmapImage bi = null; using(AutoResetEvent are = new AutoResetEvent(false)) { System.Windows.Deployment.Current.Dispatcher.BeginInvoke(() => { bi = new BitmapImage(); are.Set(); }); are.WaitOne(); } ConvertToBitmapFromBuffer(bi, imageArgs.Result.Image); bitmapCallback.Invoke(bi);
