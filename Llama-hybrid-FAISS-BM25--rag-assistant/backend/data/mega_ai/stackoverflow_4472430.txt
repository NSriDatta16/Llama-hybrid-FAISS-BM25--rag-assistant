[site]: stackoverflow
[post_id]: 4472430
[parent_id]: 4472350
[tags]: 
In the make fewer requests vein: ensure that your server is sending caching headers for all files that can be cached. if you make requests based on user interactions, and there's a chance that the interactions will occur frequently and invalidate the previous result (e.g. autocomplete typing), use a short timer before making the request; cancel the action if another interaction occurs. In the send less data vein: ensure that your server is gzipping content that can be gzipped. reload smaller chunks of HTML via AJAX. (Localize your changes.) pay attention to the response you're returning; is it as small as it can be? Sometimes JSON is not the answer when sending very large responses that can be trivially parsed. For handling slow browsers, specifically with regards to web application programming, everything you do to improve fast browsers helps slower ones. You could minimize cheesy animation effects just for the slower browsers , but that doesn't fall into the category of a "simple improvement", IMO. The right answer is to identify what your performance requirements are, the minimum machine/browser configuration that must meet those requirements, and test your site . When you do encounter things that are too slow, profile your site . Between Firebug, the developer tools for Chrome/Safari, and the developer tools for IE8+, developers have some truly excellent ways to identify JavaScript-based slowdowns. Identify the really heavy hits and either rewrite or remove them.
