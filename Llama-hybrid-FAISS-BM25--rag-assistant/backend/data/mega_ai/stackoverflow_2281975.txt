[site]: stackoverflow
[post_id]: 2281975
[parent_id]: 2281736
[tags]: 
I'm not sure I fully understand your questions but here's what I have done to use the location manager. First, I declare a class that implements CLLocationManagerDelegate @interface GPSComponent { CLLocationManager *locationManager; CLLocation *currentLocation; } Then, in the class I have: - (id) init { locationManager = [[CLLocationManager alloc] init]; // Provide the best possible accuracy (this is the default; just want to write some code). locationManager.desiredAccuracy = kCLLocationAccuracyHundredMeters; // Must move at least 100 meters to get a new location update (default is get all notifications). locationManager.distanceFilter = 100; locationManager.delegate = self; [locationManager startUpdatingLocation]; } #pragma mark - #pragma mark CLLocationManagerDelegate methods - (void)locationManager:(CLLocationManager *)manager didUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation { // If you are about 400 miles south off the coast of Ghana, we might be ignoring your location information. We apologize. // This is a lazy way to check for failure (in which case the struct is zeroed out). if((fabs(newLocation.coordinate.latitude) > 0.001) || (fabs(newLocation.coordinate.longitude) > 0.001)) { NSLog(@"Got location %f,%f", newLocation.coordinate.latitude, newLocation.coordinate.longitude); if (currentLocation != nil) { [currentLocation release]; } currentLocation = newLocation; [currentLocation retain]; } } - (void)locationManager:(CLLocationManager *)manager didFailWithError:(NSError *)error { NSLog(@"Location Manager error"); } Then, to display a map with the user's location: // Pull out the longitude and latitude and invoke google maps - (IBAction)mapItButtonPressed { NSString *url = [NSString stringWithFormat: @"http://maps.google.com/maps?q=%f,%f", (float)currentLocation.coordinate.latitude, (float)currentLocation.coordinate.longitude]; [[UIApplication sharedApplication] openURL:[NSURL URLWithString:url]]; }
