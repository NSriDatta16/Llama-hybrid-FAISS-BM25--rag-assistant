[site]: stackoverflow
[post_id]: 1977600
[parent_id]: 1977576
[tags]: 
If you're purely doing look-up (you don't require ordered elements) and can give up some memory, try unordered_map (it's TR1, also implemented in Boost), which has constant-time amortized look-up. In a game engine, we tested std::map and unordered_map , and while map was faster for insertions (if I recall), unordered_map blew it out of the water for retrieval. We had greater than 1000 elements in the map, for scale, which is fairly low compared to some other tasks you may be doing. If you require elements to be ordered, your next bet is std::map , which has the look-up times you've posted, and keeps the elements ordered. In general, it also uses less memory than an unordered_map .
