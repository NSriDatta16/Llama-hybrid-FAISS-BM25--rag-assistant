[site]: datascience
[post_id]: 5762
[parent_id]: 1213
[tags]: 
You can simply convert a M x N matrix (your image) into a MN dimensional vector. For instance if you have 10 images each of which 10x10 pixels, you can convert them to 10 vectors each of them containing 100 element (you can do it row-wise or column-wise, does not matter). Then putting all these vectors on each other constructs a n x d matrix where n is the number of images and d is the number of pixels in each image. So far we just prepared data for analysis. Now let's go to the question: I'm looking for a supervised learning algorithm that can take 2d data for input and output. What does that mean? First- The dimension of input-output is not a property of a machine learning algorithm. Second- By 2d , you mean a matrix? I'm afraid your data is not really 2d! If you mean a matrix, a M x N matrix is a data of M samples in N dimensional space. also those vectors you may produce from your images are in MN dimensional space. Third- A supervised algorithm takes some teaching samples (called training) to learn a task. What are those teachers here? If you have a training data which contains some blurred and corresponding original images then you can try to learn the place of white pixels by exploring blurred area. My suggestion: If a smoothing filter has been applied to your image, the blurred pixels most probably look like a gaussian. So first extract the gaussians. As you already have the place of sharp whites correspond to those gaussians you can use the mean, location of the mean and also variance as features (inputs) and the place of sharp white pixels as the target ( output ). The classifier could be a simple neural network (a MLP should work here) or a simple SVM. The answer above can not be evaluated without more information about your data and a more specific description of the question (e.g. What are your images exactly? if you can post one of them here I can probably help more)
