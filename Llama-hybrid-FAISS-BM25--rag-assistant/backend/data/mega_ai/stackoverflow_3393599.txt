[site]: stackoverflow
[post_id]: 3393599
[parent_id]: 3386057
[tags]: 
You do realize your're running the INSERT query twice, right? if ( mysql_query($sql) ) { ^^^^^^^^^^^--- here [.... snip ....] } $result=mysql_query($sql) or die(_ERROR26.": ".mysql_error()); ^^^^^^^^^^^--- and here As well, you should look into using HEREDOCs to build your query string. That long chunk of string concatenation and quote-soup you've got could look like this with a HEREDOC : $insp_date = postVar('insp_date') . ' ' . postVar('time'); $sql = every so slightly more readable. edit/comment followup: You're running the query twice, in the spots where I've put the '^^^^^--- here' lines. First instance: if ( mysql_query($sql) ) { Second instance: $result = mysql_query($sql) or die....... You haven't changed the contents of $sql between the two mysql_query() calls, so when you do the second call, it runs the exact same query string, which is your INSERT query. So you end up inserting the data TWICE. Beyond that, your error handling is atrocious. Scanning an error string for a particular string is the wrong way to go about it. The error text might change (think of what would happen if your code runs on a server running in (say) a German location, which has localized error messages and spits out "Doppelter eintrag f√ºr ..." instead of "Duplicate entry for". What you should have is something like this: $sql = "... your query here ... " $result = mysql_query($sql); // if query fails, this returns FALSE if ($result === FALSE) { die("MySQL error: " . mysql_error()); } If you need to check for a particular error that could be corrected by your code, you can use mysql_errno() to retrieve the server error code, and work from there. Using your example, 'Duplicate entry' is error # 1062 (full error codes documented here ), so you'd do if (mysql_error() == 1062) { ... handle error here ... }
