[site]: stackoverflow
[post_id]: 2980082
[parent_id]: 727707
[tags]: 
Not the most elegant solution, but this was how I did it in C++ (Visual Studio 2008). Leveraging the STL set to eliminate duplicates, I just naively insert new () pairs into each string index in every string from the previous generation, then recurse. #include "stdafx.h" #include #include #include using namespace System; using namespace std; typedef set StrSet; void ExpandSet( StrSet &Results, int Curr, int Max ) { if (Curr ^args) { int ParenCount = 0; cout > ParenCount; StrSet Results; Results.insert( string("()") ); ExpandSet(Results, 1, ParenCount); cout
