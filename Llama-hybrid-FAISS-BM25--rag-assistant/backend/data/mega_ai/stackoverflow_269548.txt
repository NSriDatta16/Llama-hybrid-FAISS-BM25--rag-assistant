[site]: stackoverflow
[post_id]: 269548
[parent_id]: 269496
[tags]: 
I think it's not an either/or debate. It's just that: is-a (inheritance) relationships occur less often than has-a (composition) relationships. Inheritance is harder to get right, even when it's appropriate to use it, so due diligence has to be taken because it can break encapsulation, encourage tight coupling by exposing implementation and so forth. Both have their place, but inheritance is riskier. Although of course it wouldn't make sense to have a class Shape 'having-a' Point and a Square classes. Here inheritance is due. People tend to think about inheritance first when trying to design something extensible, that is what's wrong.
