[site]: stackoverflow
[post_id]: 5759355
[parent_id]: 
[tags]: 
Is there any practical difference between the .net decimal values 1m and 1.0000m?

Is there any practical difference between the .net decimal values 1m and 1.0000m? The internal storage is different: 1m : 0x00000001 0x00000000 0x00000000 0x00000000 1.0000m : 0x000186a0 0x00000000 0x00000000 0x00050000 But, is there a situation where the knowledge of "significant digits" would be used by a method in the BCL? I ask because I'm working on a means of compressing the space required for decimal values for disk storage or network transport and am toying with the idea of "normalizing" the value before I store it to improve it's compressability. But, I'd like to know if it is likely to cause issues down the line. I'm guessing that it should be fine, but only because I don't see any methods or properties that expose the precision of the value. Does anyone know otherwise?
