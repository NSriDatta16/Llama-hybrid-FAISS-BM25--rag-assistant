[site]: stackoverflow
[post_id]: 1732627
[parent_id]: 1732542
[tags]: 
This kind of question can only be answered on a case-by-case basis . However the following general considerations may be of help: Unless some of the data for the inserts comes from additional lookups and such, No index is useful during INSERT (i.e. for this very operation, indexes may of course be useful for other queries under other sessions/users....) [on the other hand...] The presence of indexes on a table slows down the INSERT (or more generally UPDATE or DELETE) operations The order in which the new records are added may matter Special consideration is to be had with regards if the table is a clustered index Deciding whether to drop indexes (all of them or some of them) prior to the INSERT operation depends much on the relative number of records (added vs. readily in) INSERT operations may often introduce index fragmentation, which is in of itself an additional incentive to mayve drop the index(es) prior to data load, then to rebuild it (them). In general, adding 100,000 records is "small potatoes" for MS-SQL, and unless of a particular situation such as unusually wide records, or the presence of many (and possibly poorly defined) constraints of various nature, SQL Server should handle this load in minutes rather than hours on most any hardware configuation.
