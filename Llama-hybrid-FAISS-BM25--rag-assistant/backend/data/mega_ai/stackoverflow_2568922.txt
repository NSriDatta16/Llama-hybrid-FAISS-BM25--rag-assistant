[site]: stackoverflow
[post_id]: 2568922
[parent_id]: 2568458
[tags]: 
Performance-wise, rely on indices. If some set of columns prefix the key of an index, the index can generally be used to get the rows without scanning the table. Some queries won't use the index (such as if a column appears in only some branches of an AND ), but those queries don't include simply finding words for a given user; additionally, those queries will be much harder with a table for each user. CREATE TABLE users ( id INT PRIMARY KEY AUTO_INCREMENT, username VARCHAR(32) UNIQUE, first VARCHAR(128) CHARACTER SET utf8 COLLATE utf8_unicode_ci, last VARCHAR(128) CHARACTER SET utf8 COLLATE utf8_unicode_ci, ... ) Engine=InnoDB; -- table of english words CREATE TABLE vocabulary ( id INT PRIMARY KEY AUTO_INCREMENT, user_id INT, word VARCHAR(45), ... -- searches for words of a given user should use `user_word` UNIQUE INDEX user_word (user_id, word), INDEX (word), FOREIGN KEY user (user_id) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE ) Engine=InnoDB CHARACTER SET utf8 COLLATE utf8_unicode_ci; Off Topic Rather than first and last columns, we could have surname , given_name and middle_names columns, since not every culture puts the given name first . Of course, we'd then need to record the order of names to be printed. Another option is to have columns for the full name and given name. The word column is 45 characters to allow for the longest word in English, the constructed word "pneumonoultramicroscopicsilicovolcanoconiosis". For German words, we'd want at least 63 chars. "Rindfleischetikettierungsüberwachungsaufgabenübertragungsgesetz" was actually used, and not simply an attempt for the longest word. Given the nature of German, trying to find a longest word length is an exercise in futility; better to arbitrarily pick one. The limits on key sizes (3072 bytes in MySQL 5.0.17 and later, 1023 in MySQL 5.0.15 and earlier) puts an upper limit of 3066 (1018 in 5.0.15) bytes on the size of word , which is 3066 (1018) characters in the latin1_german1_ci (dictionary collation) and 1022 (339) characters in UTF-8.
