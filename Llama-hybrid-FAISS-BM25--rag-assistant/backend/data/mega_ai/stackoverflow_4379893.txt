[site]: stackoverflow
[post_id]: 4379893
[parent_id]: 4359562
[tags]: 
/** Called when the activity is first created. */ @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); thiz = this; setContentView(R.layout.main); mBtn = (Button) findViewById(R.id.btnLaunch); photo = (ImageView) findViewById(R.id.imgPhoto); mBtn.setOnClickListener(new OnClickListener(){ public void onClick(View v) { try { // Launch picker to choose photo for selected contact Intent intent = new Intent(Intent.ACTION_GET_CONTENT, null); intent.setType("image/*"); intent.putExtra("crop", "true"); intent.putExtra("aspectX", aspectX); intent.putExtra("aspectY", aspectY); intent.putExtra("outputX", outputX); intent.putExtra("outputY", outputY); intent.putExtra("scale", scale); intent.putExtra("return-data", return_data); intent.putExtra(MediaStore.EXTRA_OUTPUT, getTempUri()); intent.putExtra("outputFormat", Bitmap.CompressFormat.JPEG.toString()); intent.putExtra("noFaceDetection",!faceDetection); // lol, negative boolean noFaceDetection if (circleCrop) { intent.putExtra("circleCrop", true); } startActivityForResult(intent, PHOTO_PICKED); } catch (ActivityNotFoundException e) { Toast.makeText(thiz, R.string.photoPickerNotFoundText, Toast.LENGTH_LONG).show(); } } }); } private Uri getTempUri() { return Uri.fromFile(getTempFile()); } private File getTempFile() { if (isSDCARDMounted()) { File f = new File(Environment.getExternalStorageDirectory(),TEMP_PHOTO_FILE); try { f.createNewFile(); } catch (IOException e) { // TODO Auto-generated catch block Toast.makeText(thiz, R.string.fileIOIssue, Toast.LENGTH_LONG).show(); } return f; } else { return null; } } private boolean isSDCARDMounted(){ String status = Environment.getExternalStorageState(); if (status.equals(Environment.MEDIA_MOUNTED)) return true; return false; } @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); switch (requestCode) { case PHOTO_PICKED: if (resultCode == RESULT_OK) { if (data == null) { Log.w(TAG, "Null data, but RESULT_OK, from image picker!"); Toast t = Toast.makeText(this, R.string.no_photo_picked, Toast.LENGTH_SHORT); t.show(); return; } final Bundle extras = data.getExtras(); if (extras != null) { File tempFile = getTempFile(); // new logic to get the photo from a URI if (data.getAction() != null) { processPhotoUpdate(tempFile); } } } break; } } It a used for crop the image . or http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android-apps/2.2_r1.1/com/android/camera/CropImage.java check this link
