[site]: stackoverflow
[post_id]: 1616483
[parent_id]: 1579023
[tags]: 
How would you design the API? I would borrow a page from the Hibernate criteria API. Instead of using: string("a").anyTimes().or().string("b").times(2,5).compile() Use a pattern like: Pattern.or(Pattern.anyTimes("a"), Pattern.times("b", 2, 5)).compile() This notation is a bit more concise, and I feel that it's easier to understand the hierarchy/structure of the pattern. Each method could accept either a string, or a pattern fragment, as the first argument. Do you know of any similar approach to regular expressions? Not offhand, no. Do you agree that this approach could be better than using simple strings? Yes, absolutetely... if you are using regex's for anything remotely complicated. For very short and simple cases, a string is more convenient. Would you use such a neat utility in your projects? Possibly, as it became proven/stable... rolling it into a larger utility project like Apache Commons might be a plus. Do you think this would be fun implementing? ;) +1
