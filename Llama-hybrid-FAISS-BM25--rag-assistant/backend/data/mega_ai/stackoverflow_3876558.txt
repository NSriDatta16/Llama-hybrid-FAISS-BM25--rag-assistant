[site]: stackoverflow
[post_id]: 3876558
[parent_id]: 3870921
[tags]: 
What follows is what has worked for me. It is not the best code I have written, but it was the first jQuery and MVC app I ever did. Despite all that, it works, even with three cascading ddls. Ie, user choose an EncephalitisType, then an EncephalitisSubType, then an InfectiousAgent (if the type and the subtype involved infectious agents). It strikes me that the Model Binder is able to marry up the DepartmentID property, and the issue would probably be one of name. I would suggest looking at the following thread: ASP.NET MVC 2 Dots Replaced With Underscore In Element Name They had an issue with names, and the discussion might help you solve your problem. Sorry I can't be of more assistance, as I am upgrading a site with 1800 pages to be W3C WAI compliant. So I am brain dead. For what it is worth, a sketch of my app that works follows, you might find something there that helps. Sorry, too tired to look in detail. ============== Illness Details DDLs This is my view (both view and jquery code have been simplified to show only the loading of the values; there was a lot of extra code to hide and show each ddl according to what the user did that is unnecessary for getting to the bottom of your problem): Illness Details Type Of Encephalitis: Sub Type of Encephalitis: Infectious Agent: Note also that one difference is that your code use the new type safe helpers (Html.DropDownListFor) whereas mine comes from MVC 1 days. This is the javascript: $('document').ready(function() { var ddlEt = $("#IdEncephalitisType"); var ddlEst = $("#IdEncephalitisSubType"); var ddlIa = $("#IdInfectiousAgent"); var sel = ddlEt.val(); // debugger if (sel === "2") { pIa.fadeOut('slow'); } // Change Event Handler $("#IdEncephalitisType").change(function() { var selection = $(this).val(); ddlEst.val("0"); ddlIa.val("0"); if ((selection === "0") || (selection === "3")) { // do sumat } else { var url = "/Register/Illness/CascadedDdlSubType/" + selection; AjaxEncephalitisSubTypes(url); } }); // Change Event Handler $("#IdEncephalitisSubType").change(function() { ddlIa.val("0"); var selEst = $('#IdEncephalitisSubType option:selected').val(); if (selEst !== "") { if (($("#IdEncephalitisType").val() == "1") && ((selEst === "1") || (selEst == "2"))) { var url = "/Register/Illness/CascadedDdlInfectiousAgent/" + selEst; AjaxInfectiousAgents(url); } } }); function AjaxEncephalitisSubTypes(urlx) { $.ajax({ type: "GET", url: urlx, contentType: "application/json; charset=utf-8", dataType: "json", success: function (json) { ddlEst.empty(); ddlIa.empty(); PrependDdlDefaults(ddlEst); var i = 0; $.each(json, function (index, optionData) { ddlEst.append(" " + optionData.Name + " "); i++; }); ddlEst.val("0"); } }); } function AjaxInfectiousAgents(urlx) { $.ajax({ type: "GET", url: urlx, contentType: "application/json; charset=utf-8", dataType: "json", success: function (data) { var i = 0; ddlIa.empty(); PrependDdlDefaults(ddlIa); $.each(data, function (index, optionData) { ddlIa.append( " " + optionData.Name + " "); i++; }); } }); ddlIa.val(""); } function PrependDdlDefaults(ddl) { ddl.prepend( " " + " --- Please choose... --- " + " "); } }); This is my Controller: // POST: /Illness/Input [AcceptVerbs(HttpVerbs.Post)] public ActionResult Input(IllnessDetail ill) { ill.username = User.Identity.Name; ill.DateCreated = DateTime.Now.Date; IllnessDetailFormViewModel mfv = new IllnessDetailFormViewModel(ill); if (ModelState.IsValid) { try { idr.Add(ill); idr.Save(); return RedirectToAction("Current", new { nameUser = User.Identity.Name }); } catch { ModelState.AddRuleViolations(mfv.IllnessDetail.GetRuleViolations()); } } return View(mfv); } IllnessDetailFormViewModel(ill) is a FormViewModel class and IllnessDetail is the type that is delivered by the Repository.
