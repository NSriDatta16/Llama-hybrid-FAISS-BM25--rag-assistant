[site]: stackoverflow
[post_id]: 1618292
[parent_id]: 1616473
[tags]: 
I've had another think about this. I'm not a comp-sci person, but would something like this work. Let's say that with whatever symbol or "pattern" someone draws. The only viable thing you're left with to analyze are all the points in the pattern generated in touchBegan, touchMoved and touchEnded events. So... let's take all the points generated, be it 100 or 1,000,000, it doesn't really matter. Divide them into groups, as many groups as you want. The more the merrier I assume, but for this example, let's put them in 4 groups. With 100 points, group 1 would contain points 1 > 25, group 2 contains 26 > 50 and so on. For each group, use all the points to calculate an average position. It may work better if the canvas spaces is divided into a grid, and the 'average positions' get plotted onto their nearest coordinate. Then check the relative distance between all the groups. So the between 1,2 1,3 1,4 2,3 2,4 3,4. You now have as many distinct points, and information about those points to generate a key. The averages and the grid should help smooth out some, if not all of the entropy. You may have to ask the user to draw their pattern a few times, and compare each group against groups from previous attempts. That way, you can identify which groups the users can plot consistently. It has the added benefit of training the users hand at drawing their pattern. I suspect that the more points and groups you have, the more accurate this will be. In fact, I'm going to give it a try myself.
