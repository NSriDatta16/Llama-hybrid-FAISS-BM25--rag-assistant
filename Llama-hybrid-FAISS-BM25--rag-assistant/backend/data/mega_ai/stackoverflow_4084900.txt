[site]: stackoverflow
[post_id]: 4084900
[parent_id]: 
[tags]: 
Garbage in Eclipse console log

I have a problem with logs display in my eclipse console. The japanese characters displayed in starting and stopping the weblogic server are garbage. There is no problem however with the logs written by the application. I am using log4j. Log4j.properties # Log4JLogger\u521d\u671f\u5316\u30d1\u30e9\u30e1\u30bf\u8a2d\u5b9a # \u30ed\u30b0\u30ec\u30d9\u30eb\u3001\u30a2\u30da\u30f3\u30c0\u540d\u8a2d\u5b9a log4j.rootCategory=INFO, consoleLog, consolefileLog # \u30ed\u30b0\u30ec\u30d9\u30eb\u306e\u8a73\u7d30\u8a2d\u5b9a log4j.category.jp.terasoluna=DEBUG log4j.category.org.springframework=INFO log4j.category.org.apache.struts=INFO log4j.category.com.ibatis=DEBUG log4j.category.java.sql=DEBUG # This is the category for operations Logger class # Do not change unless you know exactly what you are doing #log4j.category.jp.co.anicom.fw.common.log.Logger=DEBUG, fileLog log4j.category.opLog=DEBUG, fileLog # \u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30da\u30f3\u30c0\u8a2d\u5b9a log4j.appender.consoleLog=org.apache.log4j.ConsoleAppender log4j.appender.consoleLog.Target = System.out log4j.appender.consoleLog.layout = org.apache.log4j.PatternLayout log4j.appender.consoleLog.layout.ConversionPattern=[%d{yyyy/MM/dd HH:mm:ss}][%p][%C{1}] %m%n #log4j.appender.consoleLog.encoding=UTF-8 log4j.appender.consolefileLog=org.apache.log4j.FileAppender log4j.appender.consolefileLog.File = anicomConsole.log log4j.appender.consolefileLog.layout = org.apache.log4j.PatternLayout log4j.appender.consolefileLog.layout.ConversionPattern=[%d] %m%n log4j.appender.consolefileLog.encoding=UTF-8 # \u30d5\u30a1\u30a4\u30eb\u30a2\u30da\u30f3\u30c0\u8a2d\u5b9a log4j.appender.fileLog=org.apache.log4j.FileAppender log4j.appender.fileLog.File = anicomOp.log log4j.appender.fileLog.layout = org.apache.log4j.PatternLayout log4j.appender.fileLog.layout.ConversionPattern=[%d] %m%n log4j.appender.fileLog.encoding=UTF-8 # Global logging configuration log4j.logger.com.ibatis=DEBUG # shows SQL of prepared statements log4j.logger.java.sql=DEBUG log4j.logger.java.sql.Connection=DEBUG # shows parameters inserted into prepared statements log4j.logger.java.sql.PreparedStatement=DEBUG # shows query results log4j.logger.java.sql.ResultSet=DEBUG log4j.logger.java.sql.Statement=DEBUG ================================================================================= I also have these in my eclipse console. As you can see it displays garbage CLASSPATH=C:\Oracle\MIDDLE~1\patch_wls1031\profiles\default\sys_manifest_classpath\weblogic_patch.jar;C:\Oracle\MIDDLE~1\JDK160~1\lib\tools.jar;C:\Oracle\MIDDLE~1\utils\config\10.3.1.0\config-launch.jar;C:\Oracle\MIDDLE~1\WLSERV~1.3\server\lib\weblogic_sp.jar;C:\Oracle\MIDDLE~1\WLSERV~1.3\server\lib\weblogic.jar;C:\Oracle\MIDDLE~1\modules\features\weblogic.server.modules_10.3.1.0.jar;C:\Oracle\MIDDLE~1\WLSERV~1.3\server\lib\webservices.jar;C:\Oracle\MIDDLE~1\modules\ORGAPA~1.0/lib/ant-all.jar;C:\Oracle\MIDDLE~1\modules\NETSFA~1.0_1/lib/ant-contrib.jar;C:\Oracle\MIDDLE~1\WLSERV~1.3\common\eval\pointbase\lib\pbclient57.jar;C:\Oracle\MIDDLE~1\WLSERV~1.3\server\lib\xqrl.jar . PATH=C:\Oracle\MIDDLE~1\patch_wls1031\profiles\default\native;C:\Oracle\MIDDLE~1\WLSERV~1.3\server\native\win\32;C:\Oracle\MIDDLE~1\WLSERV~1.3\server\bin;C:\Oracle\MIDDLE~1\modules\ORGAPA~1.0\bin;C:\Oracle\MIDDLE~1\JDK160~1\jre\bin;C:\Oracle\MIDDLE~1\JDK160~1\bin;C:/Program Files/Java/jre6/bin/client;C:/Program Files/Java/jre6/bin;C:\app\em.alcuizar\product\11.1.0\client_2\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\app\em.alcuizar\product\11.1.0\db_1\bin;C:\product\11.1.0\client_1;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Java\jre6\bin;D:\Data\Installers\Java\oepe-ganymede-all-in-one-11.1.1.3.0.200910091510-win32\eclipse\plugins\org.apache.ant_1.7.0.v200803061910\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Oracle\MIDDLE~1\WLSERV~1.3\server\native\win\32\oci920_8 . To start WebLogic Server, use a username and * password assigned to an admin-level user. For * server administration, use the WebLogic Server * console at http:\hostname:port\console * starting weblogic with Java version: Listening for transport dt_socket at address: 8453 java version "1.6.0_11" Java(TM) SE Runtime Environment (build 1.6.0_11-b03) Java HotSpot(TM) Client VM (build 11.0-b16, mixed mode) Starting WLS with line: C:\Oracle\MIDDLE~1\JDK160~1\bin\java -client -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8453,server=y,suspend=n -Djava.compiler=NONE -Xms256m -Xmx512m -XX:CompileThreshold=8000 -XX:PermSize=48m -XX:MaxPermSize=128m -Dweblogic.Name=AdminServer -Djava.security.policy=C:\Oracle\MIDDLE~1\WLSERV~1.3\server\lib\weblogic.policy -Xverify:none -ea -da:com.bea... -da:javelin... -da:weblogic... -ea:com.bea.wli... -ea:com.bea.broker... -ea:com.bea.sbconsole... -Dplatform.home=C:\Oracle\MIDDLE~1\WLSERV~1.3 -Dwls.home=C:\Oracle\MIDDLE~1\WLSERV~1.3\server -Dweblogic.home=C:\Oracle\MIDDLE~1\WLSERV~1.3\server -Dweblogic.management.discover=true -Dwlw.iterativeDev= -Dwlw.testConsole= -Dwlw.logErrorsToConsole= -Dweblogic.ext.dirs=C:\Oracle\MIDDLE~1\patch_wls1031\profiles\default\sysext_manifest_classpath weblogic.Server Listening for transport dt_socket at address: 8453
