[site]: stackoverflow
[post_id]: 512880
[parent_id]: 
[tags]: 
How to effectively use DTO objects (Data Transfer Objects)?

What is the best way to implement DTOs? My understanding is that they are one way to transfer data between objects. For example, in an ASP.Net app, you might use a DTO to send data from the code-behind to the business logic layer component. What about other options, like just sending the data as method parameters? (Would this be easiest in asces wher there is less data to send?) What about a static class that just holds data, that can be referenced by other objects (a kind of global asembly data storage class)? (Does this break encapsulation too much?) What about a single generic DTO used for every transfer? It may be a bit more trouble to use, but reduces the number of classes needed to work with (reduces object clutter). Thanks for sharing your thoughts.
