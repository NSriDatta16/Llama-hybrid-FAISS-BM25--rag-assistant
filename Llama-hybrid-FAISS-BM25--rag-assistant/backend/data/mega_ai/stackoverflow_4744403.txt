[site]: stackoverflow
[post_id]: 4744403
[parent_id]: 4744126
[tags]: 
This is one of the nastiest problems with the C# design IMHO. If 'Point' is a struct (value), then a memberwise copy will be made, so x = y will make an independent copy of y. But if it is a class (reference), x = y will simply point the reference x to the same storage used for y, so the two will simply become different 'aliases' for the same data. The two solutions I know of for your issue are: Use a struct. This will give you the value-type behaviour that you expect for maths classes. To keep your code efficient you may then need to pass by reference everywhere to avoid the structs being copied continually. Use a class, but be very very careful when using = to make sure you retain an independent copy of the data. You'll need to change x = y to something else, e.g. x = new Point(y); .
