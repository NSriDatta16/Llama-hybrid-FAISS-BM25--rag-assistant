[site]: stackoverflow
[post_id]: 1655447
[parent_id]: 1621451
[tags]: 
When the OpenCV.framework has been build it has been configured to use an install path of /Users/david/Library/Frameworks/ . Since you want to use the library as a private framework (installed in the application wrapper at ClipSplitter.app/Contents/Frameworks/OpenCV.framework ) you have to change its install path. This can be done easily using the terminal as follows: $ install_name_tool -id @executable_path/../Frameworks/OpenCV.framework/OpenCV /OpenCV.framework/OpenCV Of course you have to adjust the path of the last argument. Now, when linking your application, your modified framework tells the linker that dyld has to search for the OpenCV.framework in the app wrapper of your application (in the ClipSplitter.app/Contents/Frameworks directory). Now you have to copy the OpenCV.framework to your application wrapper. You can do this as part of your build process by adding a copy files build phase: Right-click on your target, select Add->New Build Phase->New Copy Files Build Phase. Select "Frameworks" from the "Destination" pop up and close the dialog. Your target will now contain a new phase to which you can add the OpenCV.framework by dragging the icon from the Project Navigator on the left side of Xcode window. Note that Xcode won't allow you to add a folder to the Copy Files phase by using the '+' button so in order to copy the framework you'll have to drag&drop it.
