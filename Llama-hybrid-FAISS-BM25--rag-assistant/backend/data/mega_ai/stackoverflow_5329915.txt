[site]: stackoverflow
[post_id]: 5329915
[parent_id]: 3055713
[tags]: 
I'll try & keep it buzzword free (but a buzz acronym may creep in). When services/applications/mainframes/etc... want to integrate (so send messages to each other) you can end up with quite a mess. An ESB hides that mess inside of itself (or itselves) so that an organisation can pretend that there isn't a mess and that it has something manageable. It then wraps a whole load of features around this to make this box even more enticing to the senior people in an organisation who'll make the decision to buy such an expensive product. These people typically will want to introduce a large initiative which costs a lot of money to prove that they are 'doing something' and know how to spend large amounts of money. If this is an SOA initiative then vendors various will have told them that an ESB is required to make the vendors vision of what SOA is work (typically once the number of services which they might want passes a trivial number). So an ESB is: A vehicle for vendors to make lots of money; A vehicle for consultants to make lots of money; A way for senior executives (IT Directors & the like) to show they can spend lots of money; A box to hide a mess in; A total PITA for a technical team to work with.
