[site]: stackoverflow
[post_id]: 4203141
[parent_id]: 
[tags]: 
Contract.Ensures unproven in Multiple object / class chain Code Contracts

I have the following class structure: using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Diagnostics.Contracts; namespace contractsTest { class Program { static void Main(string[] args) { IService s = new Service(); s.sendMessage(MessagesCreator.TestMessage); } } class Service : IService { public void DoSomething(Message m) { } } static class MessageNames { public static string TestMessage { get { Contract.Ensures(!string.IsNullOrWhiteSpace(Contract.Result ())); return "TestMessage"; } } } class Message { public Message(string _name) { Contract.Requires (!string.IsNullOrWhiteSpace(_name)); Contract.Ensures(this.Name == _name); this.Name = _name; } public string Name { get; private set; } } static class MessagesCreator { public static Message TestMessage { get { Contract.Ensures(Contract.Result () != null); Contract.Ensures(Contract.Result ().Name == MessageNames.TestMessage); return new Message(MessageNames.TestMessage); } } } static class Extensions { public static void sendMessage(this IService service, Message m) { Contract.Requires (service != null); Contract.Requires (m != null); Contract.Requires (!string.IsNullOrWhiteSpace(m.Name)); service.DoSomething(m); } } [ContractClass(typeof(IServiceContract))] interface IService { void DoSomething(Message m); } [ContractClassFor(typeof(IService))] abstract class IServiceContract : IService { public void DoSomething(Message m) { Contract.Requires (m != null); Contract.Requires (!string.IsNullOrWhiteSpace(m.Name)); // Do Something } } } In Main i get the following Warning CodeContracts: requires unproven: !string.IsNullOrWhiteSpace(m.Name) Any idea how to fix it? If I change main to: static void Main(string[] args) { IService s = new Service(); Message messagesCreatorTestMessage = MessagesCreator.TestMessage; if (string.IsNullOrWhiteSpace(messagesCreatorTestMessage.Name)) throw new InvalidOperationException(); s.sendMessage(messagesCreatorTestMessage); } the warning disappears, but there should be other more elegant ways of doing this.
