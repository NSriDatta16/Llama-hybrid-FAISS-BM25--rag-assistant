[site]: crossvalidated
[post_id]: 40601
[parent_id]: 40598
[tags]: 
First of all RBM's are certainly different from normal Neural Nets, and when used properly they achieve much better performance. Also, training a few layers of a RBM, and then using the found weights as a starting point for a Mulitlayer NN often yields better results than simply using a Multilayer NN. The best pointer I can think of is this course on Coursera, taught by Geoffrey Hinton, who is one of the people responsible for RBMs: https://class.coursera.org/neuralnets-2012-001/class/index the videos on RBMs and Denoising Autoencoders are a valuable learning resource for anyone interested in the topic. As to implementation in R, I don't know any either, but if you want to implement it, better not use pure R (unless your data is not to big). The training of an RBM takes quite a long time, and if you use pure R instead of R with C it can grow significantly.
