[site]: stackoverflow
[post_id]: 5285339
[parent_id]: 5271200
[tags]: 
Xichen, This is Andrew Chen, the author of Fruit. In the core of FRUIT, it is in pure FORTRAN. The core capability include assert, fixture setup, summary, error counting and report. The design goal is to have the testing capability in the own language. FRUIT 1.0 was developed about 8 years ago, with pure FORTRAN. Then Ruby was added, Rake was added in 2008, I think. This is especially important in FORTRAN, because introducing another language or compiler in the build environment may be prohibitive. However, to make the testing framework flexible, elegant and rich in information, other more flexible language is the right tool (even my co-workers still think FORTRAN can do everything, and the world is run by FORTRAN). Ruby is chosen because of its readability, and easy to modify. As far as I know, funit cannot run without Ruby, but FRUIT can run with only FORTRAN compilers. It has been tested by Intel F95, and g95. Please check out the 2 tutorials, in FRUIT Wiki: 1. Add FRUIT into your diet in 3 minutes (pure FORTRAN) 2. Add FRUIT into your diet in 20 minutes (with Ruby) http://sourceforge.net/apps/mediawiki/fortranxunit/index.php?title=Main_Page Hope it helps. Andrew Hang Chen 陈航 http://blog.sina.com.cn/foreopen
