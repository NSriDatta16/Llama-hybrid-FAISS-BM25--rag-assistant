[site]: stackoverflow
[post_id]: 524843
[parent_id]: 524591
[tags]: 
I benchmarked your implementation(1), mine(2), and two others(3 and 4) that I found on stackoverflow. Results (Average of 100 runs; timed using gettimeofday, file was 40 paragraphs of lorem ipsum): readFile1: 764 readFile2: 104 readFile3: 129 readFile4: 402 The implementations: string readFile1(const string &fileName) { ifstream f(fileName.c_str()); return string(std::istreambuf_iterator (f), std::istreambuf_iterator ()); } string readFile2(const string &fileName) { ifstream ifs(fileName.c_str(), ios::in | ios::binary | ios::ate); ifstream::pos_type fileSize = ifs.tellg(); ifs.seekg(0, ios::beg); vector bytes(fileSize); ifs.read(&bytes[0], fileSize); return string(&bytes[0], fileSize); } string readFile3(const string &fileName) { string data; ifstream in(fileName.c_str()); getline(in, data, string::traits_type::to_char_type( string::traits_type::eof())); return data; } string readFile4(const std::string& filename) { ifstream file(filename.c_str(), ios::in | ios::binary | ios::ate); string data; data.reserve(file.tellg()); file.seekg(0, ios::beg); data.append(istreambuf_iterator (file.rdbuf()), istreambuf_iterator ()); return data; }
