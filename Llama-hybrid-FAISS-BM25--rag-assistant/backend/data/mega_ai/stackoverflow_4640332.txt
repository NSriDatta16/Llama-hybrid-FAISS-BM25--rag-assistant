[site]: stackoverflow
[post_id]: 4640332
[parent_id]: 4640133
[tags]: 
Try these searches https://stackoverflow.com/search?q=free+svn+hosting https://stackoverflow.com/search?q=free+mercurial+hosting As for choosing which one - I tend to agree with the google review here : Learning Curve. Git has a steeper learning curve than Mercurial due to a number of factors. Git has more commands and options, the volume of which can be intimidating to new users. Mercurial's documentation tends to be more complete and easier for novices to read. Mercurial's terminology and commands are also a closer to Subversion and CVS, making it familiar to people migrating from those systems. Windows Support. Git has a strong Linux heritage, and the official way to run it under Windows is to use cygwin, which is far from ideal from the perspective of a Windows user. A MinGw based port of Git is gaining popularity, but Windows still remains a "second class citizen" in the world of Git. Based on limited testing, the MinGW port appeared to be completely functional, but a little sluggish. Operations that normally felt instantaneous on Linux or Mac OS X took several tenths of a second on Windows. Mercurial is Python based, and the official distribution runs cleanly under Windows (as well as Linux, Mac OS X, etc). But his is the hands-down clincher: Maintenance. Git requires periodic maintenance of repositories (i.e. git-gc), Mercurial does not require such maintenance. Note, however, that Mercurial is also a lot less sophisticated with respect to managing the clients disk space (see Client Storage Management above). I don't want to have to do "maintenance" on the git repos. That's just unacceptable. Summary In terms of implementation effort, Mercurial has a clear advantage due to its efficient HTTP transport protocol. In terms of features, Git is more powerful, but this tends to be offset by it being more complicated to use. I have not moved all my stuff to mercurial - SVN is just fine for most projects - especially single-person projects.
