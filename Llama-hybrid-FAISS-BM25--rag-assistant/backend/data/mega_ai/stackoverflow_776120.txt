[site]: stackoverflow
[post_id]: 776120
[parent_id]: 
[tags]: 
Multiple simultaneous network connections - Telnet server, Python

I'm currently writing a telnet server in Python. It's a content server. People would connect to the server via telnet, and be presented with text-only content. My problem is that the server would obviously need to support more than one simultaneous connection. The current implementation I have now supports only one. This is the basic, proof-of-concept server I began with (while the program has changed greatly over time, the basic telnet framework hasn't): import socket, os class Server: def __init__(self): self.host, self.port = 'localhost', 50000 self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) self.socket.bind((self.host, self.port)) def send(self, msg): if type(msg) == str: self.conn.send(msg + end) elif type(msg) == list or tuple: self.conn.send('\n'.join(msg) + end) def recv(self): self.conn.recv(4096).strip() def exit(self): self.send('Disconnecting you...'); self.conn.close(); self.run() # closing a connection, opening a new one # main runtime def run(self): self.socket.listen(1) self.conn, self.addr = self.socket.accept() # there would be more activity here # i.e.: sending things to the connection we just made S = Server() S.run() Thanks for your help.
