[site]: stackoverflow
[post_id]: 3868405
[parent_id]: 
[tags]: 
How to avoid unnecessary joins in NHibernate

I've got a class named 'Entity', which can be individuals or organizations. I have a few other classes that are descendants of Entity, which have their properties defined in extension tables in my database. One of my descendants is named 'User'. A really truncated example of my table structure: Table: ENTITY Id - UniqueIdentifier LastName - Varchar(200) FirstName - Varchar(50) Table: USER Id - UniqueIdentifier (FK to Entity) Password - Varchar(20) Using NHibernate.Linq, I fetch an instance of a non-User entity like this: Session.Get (myIdValue); The resulting SQL always joins the extension tables and includes the additional columns found in the extension tables. When I'm asking for an instance of Entity, I really don't want one of its descendants. Can anyone point me to my mistake? By popular demand, here's the mapping file for the Entity class hierarchy I'm referencing:
