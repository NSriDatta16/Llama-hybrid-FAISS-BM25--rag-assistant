[site]: stackoverflow
[post_id]: 5025183
[parent_id]: 5024281
[tags]: 
Focussing on the 2 questions in the title. Is there a concurrency problem here? Yes. Obviously. The only way to avoid the possibility of concurrency problems would be to make the product single-threaded, and that would have major performance and usability issues. How to test it during development? That's a hard question. Obviously you need unit tests. But classic unit tests don't really cut it for concurrency issues, because tricky concurrency bugs tend to show up rarely. A better approach is load testing. as described by @Gnat. But for best results, you need acknowledge that testing is not the (whole) solution, and add the following: Staff who are experienced in designing, coding and testing concurrent apps. Paying a lot of attention to the approach / recommendations of "Java - Concurrency in Practice" by Goetz et al. Lots of design and code reviews. Thorough use of static code analysers to pick up potential concurrency problems.
