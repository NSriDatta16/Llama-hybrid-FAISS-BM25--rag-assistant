[site]: stackoverflow
[post_id]: 2587095
[parent_id]: 2587030
[tags]: 
Option 1 - Advantages - all advantages of inheritance & re-use - Disadvantages - the code is now signalling to the consumers that it is dervied from List. If this needs to change at a later date, then all the related consumers will be affected. Option 2 - Advantages - the implementation detail about the storage of the sales data is abstracted aways from the consumer. So, if the implementation needs to change (say a dictionary, for example), the consumer of the class will be immune from these changes. - Disadvantages - the SalesList class will now need to expose additional methods to get and/or set to the inner _list object. this is additional code which need to be maintained. Also, if the inner implementation changes, you need to take care to still support the previous behaviour... Just a few thoughts that come to mind. HTH.
