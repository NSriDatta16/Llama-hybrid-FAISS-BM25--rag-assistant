[site]: stackoverflow
[post_id]: 2850108
[parent_id]: 2849798
[tags]: 
This is why it is a bad idea to use serialization for long term object storage. In your case, I think leaving B as Serializable (even if the reference in A is transient) is enough to work around your problem. In addition, you will probably want to implement your own readObject method to null out B in the event that it comes in with old data. I don't know if it is possible to implement a custom readObject method that would actually restore the class in the face of such an error. It would certainly be horribly messy.
