[site]: stackoverflow
[post_id]: 1559561
[parent_id]: 1558178
[tags]: 
yasnippet is a particularly good implementation of Textmate's snippet syntax for Emacs. With that you can import all of Textmate's snippets. If you install it then, this snippet that I wrote should do what you want: (defun wrap-region-or-point-with-html-tag (start end) "Wraps the selected text or the point with a tag" (interactive "r") (let (string) (if mark-active (list (setq string (buffer-substring start end)) (delete-region start end))) (yas/expand-snippet (point) (point) (concat " " string "$0 ")))) (global-set-key (kbd "C-W") 'wrap-region-or-point-with-html-tag) EDIT: (Okay this is my last attempt at fixing this. It is exactly like Textmate's version. It even ignores characters after a space in the end tag) Sorry I misread your question. This function should edit each line in the region. (defun wrap-lines-in-region-with-html-tag (start end) "Wraps the selected text or the point with a tag" (interactive "r") (let (string) (if mark-active (list (setq string (buffer-substring start end)) (delete-region start end))) (yas/expand-snippet (replace-regexp-in-string "\\( \\).*\\'" " " (mapconcat (lambda (line) (format "%s" line)) (mapcar (lambda (match) (concat " " match " ")) (split-string string "[\r\n]")) "\n") t nil 1) (point) (point))))
