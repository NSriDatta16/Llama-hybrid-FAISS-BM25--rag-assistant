[site]: datascience
[post_id]: 65780
[parent_id]: 65746
[tags]: 
Found the solution, with the .classes_ attribute you can find the predicted classes. Then you have to concatenate the predict_proba together with the .classes_ . In Python it looks like this message4 = "Jeans model Ornella met iets kortere pijpen Van" bow4 = bow_transformer.transform([message4]) tfidf4 = tfidf_transformer.transform(bow4) counter = 0 predicted = spam_detect_model.predict_proba(tfidf4) for x in spam_detect_model.classes_: proba = round(predicted[0][counter],2) if proba > 0.01: print(x + ' probility '+ str(proba) + '%') counter +=1 What returns, depending on the if statement: Dames%26gt%3BKleding%26gt%3BJeans%26gt%3BBoyfriend+Jeans probility 0.04% Dames%26gt%3BKleding%26gt%3BJeans%26gt%3BMom+Jeans probility 0.12% Dames%26gt%3BKleding%26gt%3BJeans%26gt%3BSkinny+Fit+Jeans probility 0.26% Dames%26gt%3BKleding%26gt%3BJeans%26gt%3BStraight+Fit+Jeans probility 0.02% Dames%26gt%3BKleding%26gt%3BPlus+Size%26gt%3BJeans probility 0.03%
