[site]: datascience
[post_id]: 21640
[parent_id]: 21638
[tags]: 
Just so you know, in this case, even the neural network can't help you. For NNs to work, you need to have lots of learnable patterns in the data (meaning data without uncertainity/ irreducible error). If the data itself has a lot of uncertainty in the outcome( i.e. probabilistic outcomes) itself, its very hard of NNs to optimize that. (For more on this, consider modeling following problems with NNs: XOR(with probability =1) vs XOR(with probabilities In this case, your best bet might be to use regression. Let us know how it folds out, thanks.
