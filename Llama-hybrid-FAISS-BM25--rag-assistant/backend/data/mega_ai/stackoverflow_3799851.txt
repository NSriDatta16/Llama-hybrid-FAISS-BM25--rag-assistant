[site]: stackoverflow
[post_id]: 3799851
[parent_id]: 3799299
[tags]: 
If you're not already doing so, register for the MPMoviePlayerLoadStateDidChangeNotification notification (http://developer.apple.com/library/ios/documentation/mediaplayer/reference/MPMoviePlayerController_Class/MPMoviePlayerController/MPMoviePlayerController.html#//apple_ref/c/data/MPMoviePlayerLoadStateDidChangeNotification) and wait for the MPMoviePlayerController's loadState to change to MPMovieLoadStatePlayable before presenting the movie player. That way, you can present the activity indicator over your own view until the movie is ready to play. (Be sure to include a way for the user to cancel waiting for the movie.) In theory, you should be able to add an activity indicator to the MPMovewPlayerController's view, but I've never tried that approach and it sounds like it isn't working for you. Another option is to add the MPMoviePlayer's view below an existing activity indicator. I successfully just tried this. [moviePlayer setContentURL:trailer.downloadLink]; moviePlayer.fullscreen = YES; moviePlayer.controlStyle = MPMovieControlStyleFullscreen; [moviePlayer prepareToPlay]; [self.navigationController.view addSubview:self.activityIndicator]; self.activityIndicator.center = self.navigationController.view.center; [self.activityIndicator startAnimating]; moviePlayer.view.frame = self.navigationController.view.bounds; [self.navigationController.view insertSubview:moviePlayer.view belowSubview:self.activityIndicator]; Here are my notification handlers. #pragma mark MPMoviePlayerController notifications - (void)moviePlayerLoadStateChanged:(NSNotification *)notif { NSLog(@"loadState: %d", moviePlayer.loadState); if (moviePlayer.loadState & MPMovieLoadStateStalled) { [self.activityIndicator startAnimating]; [moviePlayer pause]; } else if (moviePlayer.loadState & MPMovieLoadStatePlaythroughOK) { [self.activityIndicator stopAnimating]; [moviePlayer play]; } } - (void)moviePlayerPlaybackFinished:(NSNotification *)notif { [moviePlayer.view removeFromSuperview]; [self.activityIndicator stopAnimating]; }
