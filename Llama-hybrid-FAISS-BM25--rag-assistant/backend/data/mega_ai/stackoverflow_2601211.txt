[site]: stackoverflow
[post_id]: 2601211
[parent_id]: 2600960
[tags]: 
The only thing I can see from this, is that a "null" has been inserted as InputAttribute of the Element under the caret. I mean, from checking sources of these classes, I think the problem occurs at this point: javax.swing.text.StyledEditorKit.createInputAttributes(null:-1) javax.swing.text.StyledEditorKit$AttributeTracker.updateInputAttributes(null:-1) From the source, at this point the editor kit recovers the current Element from the Document . Excerpt from StyledEditorKit: Element run; currentParagraph = doc.getParagraphElement(start); if (currentParagraph.getStartOffset() == start || dot != mark) { // Get the attributes from the character at the selection // if in a different paragrah! run = doc.getCharacterElement(start); } else { run = doc.getCharacterElement(Math.max(start-1, 0)); } if (run != currentRun) { currentRun = run; createInputAttributes(currentRun, getInputAttributes()); } This Element is not null, but its list of attributes contains a null element, which is then used directly in the addAttribute() and Hashtable.put() , causing the NPE. So in my opinion, the only place where something bad can happen is in the Document. Check if you are using a custom Document for this JTextComponent, and be sure to check what exactly is done inside. Because from tracing the whole thing, it can only be a problem at this place. The Event processing and caret update doesn't have an impact in it, it's just a regular update. The part after is only consequence, using the object passed. So it seems like the key point is in the Document.
