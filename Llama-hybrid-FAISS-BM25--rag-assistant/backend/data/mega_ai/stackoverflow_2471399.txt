[site]: stackoverflow
[post_id]: 2471399
[parent_id]: 2471260
[tags]: 
Refactoring existing [production] code which is otherwise functional and generally satisfying to its end-users (and to a lesser degree to its maintainers) is, generally, a bad idea . Here is why Often it doesn't make economic sense. It introduces the risk (the certainty!) of introducing new bugs, which will then require fixing and which will be disrupting to the end-users Often our ideas about "doing things better" are merely tied to a fad or misconception: keep the new ideas for the new code ;-) At a more philosophical level there are two points to consider: The distinction between engineering and elegant/perfect design Engineering allows us to deal with imperfections in the design! So while it is useful and often beneficial for strive for the most elegant way of designing things, and use tools which allow producing practical and workable applications even though their individual parts may be less than optimal. the relative advantages and drawbacks of creation versus evolution Although the analogy with biological evolution breaks down because software evolution is more directed (i.e. re-introduces bits of creationism during evolution), we should beware of that continuous evolution of a software product is likely to increase the overall complexity of that system.
