[site]: crossvalidated
[post_id]: 329148
[parent_id]: 279183
[tags]: 
ROC relies on the concept of some adjustable 'threshold', that you can vary, like metaphorically turning a nob, in order to adjust the trade-off between precision and recall. precision: choose only examples where you are really certain, will give high precision, but doing this will lead to low ... recall: recall means ensuring all positive examples are chosen, at the likely expense of choosing a bunch of examples to be positive, which really are in fact negative, ie 'fast positives' To trade off between these two extremes, you typically need something that outputs a real number, almost certainly representing a probability, and between zero and one (inclusive). Then you tweak the threshold, to set the probability above which you consider the output to be 'positive', and below which is 'negative'. eg, if output is 0.7, and threshold is 0.5, this would be positive, a 'yes'. But if threshold is 0.8, this would be negative, a 'no'. By adjusting the threshold, you can vary the percentage of samples predicted to be positive of negative. If we assume that the examples which your network assigns a higher probability to are in fact more likely, then adjusting the threshold higher increases the precision, at the expense of recall. Reducing the threshold increases recall, number of true examples judged to be positive, at the expense of precision: ie you'll pick a bunch of examples to be positive that are in reality negative. To enable such a threshold, you do in fact need real outputs. One possibility in an ensemble situation would be to average the outputs from each network, rather than using majority voting. Of course, this will change the resulting choice by your network, since the output function is no longer the same. Will enable you to trade-off precision and recall though, and draw a ROC curve. Note that in addition to requiring a real output, ROC typically is used in a situation where you only have two classes, 'positive' and 'negative'. If you have more than two classes, you might need to create a new 'other' class. Anything in 'other' is 'negative', and anything correctly in one of the other classes is 'positive'.
