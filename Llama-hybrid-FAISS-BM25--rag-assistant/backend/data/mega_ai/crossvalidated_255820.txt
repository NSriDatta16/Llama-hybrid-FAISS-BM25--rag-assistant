[site]: crossvalidated
[post_id]: 255820
[parent_id]: 14822
[tags]: 
You can look at the problem as one with multiple objectives. Let's say a good customer is one who: Spends a high average amount per purchase (Brings in money) Makes many purchases (Shows trust) Makes purchases over a long duration of time (Shows loyalty) The corresponding objectives are therefore: Maximize $Average Amount Spent Per Purchase$ Maximize $TotalNumberOfPurchases$ Maximize $AverageTimeIntervalBetweenPurchases$ Treat all customers are solutions and sort them using non-dominated sorting . Note that you need not run the genetic algorithm, just sort the solutions once. Say the non-dominated sorting gives you 5 ranks. You can assign ranks 1 and 2 as good customers, rank 3 as ok customers and remaining as bad customers.
