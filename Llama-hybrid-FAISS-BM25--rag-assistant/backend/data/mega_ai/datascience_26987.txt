[site]: datascience
[post_id]: 26987
[parent_id]: 26958
[tags]: 
What you are facing is a small but crucial definition difference: novelty detection: The training data is not polluted by outliers, and we are interested in detecting anomalies in new observations. outlier detection: The training data contains outliers, and we need to fit the central mode of the training data, ignoring the deviant observations. OneClassSVM is an Unsupervised Outlier Detection. Therefor your data needs to have outliers in order for the algortihm to detect them. My best guess, why its prediction every input as an outlier is, that if there are no real outliers, everything must be an outlier. Let me demonstrate this quickly. I adjustet the kernel to linear import pandas as pd from sklearn import svm import numpy as np nu = 0.5 gamma = 1.0 ones= pd.DataFrame(np.ones(100)) clf = svm.OneClassSVM(nu=nu, kernel="linear", gamma=gamma) clf.fit(ones) clf.predict(-1) # -1 clf.predict(1) # -1 clf.predict(1.00001) # 1 clf.predict(2) # 1 clf.predict(10) # 1
