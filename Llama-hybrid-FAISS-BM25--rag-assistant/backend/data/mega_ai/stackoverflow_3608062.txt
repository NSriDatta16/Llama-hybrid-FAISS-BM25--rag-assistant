[site]: stackoverflow
[post_id]: 3608062
[parent_id]: 3607974
[tags]: 
Let's look at the first case: buffer buf; buf.ProjectID = "3174"; buf.ProjectName = "NDS"; $2.13.4/1 - "An ordinary string literal has type “array of n const char” and static storage duration (3.7)" The type of "3174" is char const [5] and type of "NDS" is char const [4] . While trying to attempt the assignment to 'buf.ProjectID' , the compiler has to essentially convert from 'char const [5]' to 'char const [20]' . This conversion is not allowed by C++ rules. In fact, a more appropriate error message is thrown in your next attempt. $8.3.4/5 - '[Note: conversions affecting lvalues of array type are described in 4.2. Objects of array types cannot be modified , see 3.10. ]". In other words it means, that name of an array is non modifiable lvalue (which is what the 2nd compiler message says). $5.17- "There are several assignment operators, all of which group right-to-left. All require a modifiable lvalue as their left operand, and the type of an assignment expression is that of its left operand." So here is the summary: For the assignment expression to work, the left hand side should be a modifiable LValue expression. However an array is a non modifiable Lvalue expression. Hence it can not be assigned to.
