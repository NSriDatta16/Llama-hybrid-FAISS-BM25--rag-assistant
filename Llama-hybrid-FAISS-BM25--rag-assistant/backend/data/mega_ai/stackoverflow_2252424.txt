[site]: stackoverflow
[post_id]: 2252424
[parent_id]: 2252337
[tags]: 
is used to import namespaces defined in other schema into the current schema. The schemaLocation attribute is nothing more than a hint as to where to find that other namespace. In the case of B.xsd , you're saying that you want to import the namespace http://blah.org , and that that namespace is handled by the schema in A.xsd . In the case of A.xsd , your import of B.xsd is not specifying which namespace you're importing. If A.xsd and B.xsd are representing different namespaces, then the import needs to specify that explicitly. If, on the other hand, you're just trying to inline the elements from another schema file, in the same namespace, then the include directive is more appropriate. edit: OK, having seen your schema fragments, I can say that is definitely not the right thing to do. Both A.xsd and B.xsd are defining elements in the same namespace ( http://foo.org/A ), and so you should be using instead. When Java encounters an , and the namespace of that import is a namespace that it already knows about, then it effectively ignores it. So as it's parsing B.xsd (in namespace http://foo.org/A ), and it finds an import for that same namespace, it ignores it.
