[site]: stackoverflow
[post_id]: 3394658
[parent_id]: 3381076
[tags]: 
You might want to look into a WebControlAdapter. Basically allows you to override certain methods of webcontrols (conditionally for some browsers if need, but here can be for all). In your case, you would want to override the EvaluateIsValid method and check if the control has any dependency on a 'parent' validator. As an example, a TextBox adapter we recently created to render a 'maxlength' attribute to the control. Public Class TextBoxAdapter Inherits WebControlAdapter Private ReadOnly Property TextBoxControl() As TextBox Get Return DirectCast(MyBase.Control, TextBox) End Get End Property Protected Overrides Sub RenderBeginTag(ByVal writer As System.Web.UI.HtmlTextWriter) If TextBoxControl.TextMode = TextBoxMode.MultiLine AndAlso TextBoxControl.MaxLength > 0 Then writer.AddAttribute("maxlength", TextBoxControl.MaxLength.ToString) End If MyBase.RenderBeginTag(writer) End Sub End Class To use it, just create a .browser file in your App_Browsers directory and setup the adapter there: The only complication that still remains in your case is how to store the dependent validator in order for the EvaluateIsValid to have access to this directory. You might consider a non-rendered control like Onof suggested or else Viewstate/Cookie/other storage mechanism.
