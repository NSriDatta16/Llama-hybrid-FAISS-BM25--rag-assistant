[site]: stackoverflow
[post_id]: 4077193
[parent_id]: 4076942
[tags]: 
I have “pretty-printed” (by hand) the script; you might get an idea what to change there, if you want to emulate the function by yourself. var twttr = window.twttr || {}; ( function() { if ( !twttr.widgets ) { twttr.widgets = {} } if ( !twttr.widgets.host ) { twttr.widgets.host = "platform{i}.twitter.com" } if ( typeof twttr.widgets.ignoreSSL === "undefined" ) { twttr.widgets.ignoreSSL = false } function T ( X ) { var Z = M( X ); var Y = twttr.widgets.host; var W = Y.replace( "{i}", G++ ); if ( G == 3 ) { G = 0 } return Z + "://" + W } function M ( W ) { return ( window.location.protocol.match( /s\:$/ ) || W ) && !twttr.widgets.ignoreSSL ? "https" : "http" } function S ( a ) { var X; for( var W in a ) { X = N.apply( this, W.split( "." ) ); for( var Y = 0, Z; ( Z = X[Y] ); Y++ ) { new a[W](Z).render() } } } function I ( b ) { var Y; var Z; var X = function () { if( document.readyState == "complete" ) { Y() } }; var W; var a = function() { try { document.documentElement.doScroll( "left" ); Y() } catch( c ) {} }; if ( window.addEventListener ) { Y = function() { if ( !Z ) { Z = true; b() } window.removeEventListener( "DOMContentLoaded", Y, false ); window.removeEventListener( "load", Y, false ) }; window.addEventListener( "DOMContentLoaded", Y, false ); window.addEventListener( "load", Y, false ) } else { if( window.attachEvent ) { W = window.setInterval( a, 13); Y = function() { if ( !Z ) { Z = true; b() } window.clearInterval( W ); window.detachEvent( "onreadystatechange", X ); window.detachEvent( "onload", Y ) }; window.attachEvent( "onreadystatechange", X ); window.attachEvent( "onload", Y ) } } } function N ( W, a ) { var Z, b = [], X, Y; try { if ( document.querySelectorAll ) { b = document.querySelectorAll( W + "." + a ) } else { if ( document.getElementsByClassName ) { Z = document.getElementsByClassName( a ); for ( X = 0; ( Y = Z[X] ); X++ ) { if ( Y.tagName.toLowerCase() == W ) { b.push( Y ) } } } else { Z = document.getElementsByTagName( W ); var d = new RegExp( "\\b"+a+"\\b" ); for ( X=0; ( Y = Z[X] ); X++ ) { if ( Y.className.match( d ) ) { b.push( Y ) } } } } } catch ( c ) {} return b } function Q ( W ) { return encodeURIComponent( W ).replace( /\+/g,"%2B" ) } function D ( W ) { return decodeURIComponent( W ) } function J ( Y ) { var X = []; for ( var W in Y ) { if ( Y[W] !== null && typeof Y[W] !== "undefined" ) { X.push ( Q( W ) + "=" + Q( Y[W] ) ) } } return X.sort().join( "&" ) } function P ( Z ) { var b = {}, Y, a, X, W; if ( Z ) { Y = Z.split( "&" ); for ( W=0; ( X = Y[W] ); W++ ) { a = X.split( "=" ); if ( a.length == 2 ) { b[ D( a[0] ) ] = D( a[1] ) } } } return b } function F ( X, Y ) { for( var W in Y ) { X[W] = Y[W] } return X } function R ( X ) { var W; if ( X.match( /^https?:\/\// ) ) { return X } else { W = location.host; if ( location.port.length > 0 ) { W += ":" + location.port } return [ location.protocol, "//", W, X ].join( "" ) } } function A () { var W = document.getElementsByTagName( "link" ); for ( var X = 0, Y; ( Y = W[X] ); X++ ) { if ( Y.getAttribute( "rel" ) == "canonical" ) { return R( Y.getAttribute( "href" ) ) } } return null } function K( Y ) { var Z = []; for ( var X = 0, W = Y.length; X ' } var X = twttr.TweetButton.fragment.firstChild.cloneNode( false ); X.src = T() + "/widgets/tweet_button.html?" + this.parameters(); var Y = U[this.lang][this.count]; X.style.width = Y[0] + "px"; X.style.height = Y[1] + "px"; X.title = V[this.lang]; var W = this.originElement.parentNode; if ( W ) { W.replaceChild( X, this.originElement ) } } } ); var O = { "a.twitter-share-button": twttr.TweetButton }; S( O ); I( function() { S(O) } ) } () );
