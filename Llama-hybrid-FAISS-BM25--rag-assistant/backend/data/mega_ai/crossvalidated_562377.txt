[site]: crossvalidated
[post_id]: 562377
[parent_id]: 
[tags]: 
Tried so many different models but cant get good accuracy

I am very new to the field of Machine Learning. My college seniors provided me a dataset to analyze and predict. The data is purely synthetic, with 14 feature columns and a target column having values 0 and 1. The training dataset has 10k rows and is of 180kB. I have uploaded the training data here . My first approach was to simply google and find ways to start. I found the website machinelearningmastery.com very easy to use. So my first model was trained by Neural Networks, using this tutorial. After trying out many different combinations, this configuration provided relatively best results: 3 layers : [26->13->1], epoch = 12, batch_size = 10 model = Sequential() model.add(Dense(26,input_dim=15, activation='relu')) model.add(Dense(13, activation="relu")) model.add(Dense(1,activation="sigmoid")) model.compile(loss="binary_crossentropy",optimizer="adam", metrics=['accuracy']) model.fit(train_X,train_y,epochs=10,batch_size=10) Spent a whole day just trying out different combinations in the parameters, and got a score of 0.62 AUC (The baseline is 0.630 AUC SCORE, my classmates have achieved scores of 0.66 even 0.68). After searching alot on google, I found that machine learning models work better on purely numerical data like mine compared to deep learning networks. So I started exploring through different models. I used sklearn's LogisticRegression but it yielded the best accuracy of 0.59 AUC score, after trying out with many different parameters. Then I found out about gradient boosting models. I tried implementing LGBM and XGBM, they yielded better results. After changing the parameters rigorously, I achieved an AUC score of 0.638 on the test set. I tried some other projects like tabnet they are also yielding decent results, but not more than 0.64. After exploring more, many sources suggested that I select specific features and/or transform existing features to improve accuracy. For that, I plotted correlation plots like these: but I wasnt able to comprehend the information these plots are giving and I didnt get anywhere. For feature selection, I used sklearn's mutual_info_regression which gave this result: and then tried sklearn's chi2, which yielded: Then I tried the above mentioned methods with the selected features but in 1-2 cases the results got worse. There was no noticeable improvement in the accuracy. I have spent 2 days on this, and still I havent got anywhere. I would be very grateful for a direction in which I can move forward with confidence and get better results.
