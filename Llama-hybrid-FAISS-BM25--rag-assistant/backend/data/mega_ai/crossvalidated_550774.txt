[site]: crossvalidated
[post_id]: 550774
[parent_id]: 550769
[tags]: 
The advantage of a convolution is that it takes into account the "spatial" structure of the data. I put "spatial" in scare quotes because although that's the term that is normally used, really we are talking about any continuous coordinate. A time coordinate works just as well as a spatial coordinate, and if you had some more exotic coordinates, they would work too. What do we mean by "taking into account the coordinate structure"? Consider the time series of measurements: x1, x2, x3, ... xn. We could put them into a fully-connected network, but that is throwing away a lot of information, such as the fact that (x1,x2) and (x2,x3) are both adjacent pairs, and so a difference in x1 and x2 should have a similar interpretation to an equivalent difference in x2 and x3; whereas, a similar difference between x3 and x7 might have a completely different interpretation. The idea extends naturally into 2D to get the widely-used image convolutions. In these, the convolutional kernel captures not just the distance between the measurements, but also the direction, which is what allows you to have, for example, kernels that capture edges in different orientations. And you can extend it into arbitrarily higher dimensions, though higher dimension datasets are relatively less common than images. The point is, although convolutional layers are commonly used on images, there is nothing special about 2D data, and convolutional layers can be a very powerful technique for 1D data like time series. There is one thing, however, in the material you quoted that is simply wrong: Since multivariate time series have the same 2-dimensional data structures as image, CNN for analyzing images is suitable for handling multivariate time series as well. This is a mistake commonly made by people who were introduced to convolutions as 2D operations and think that there is something inherently 2D about convolutions. Multivariate 1D data is not analogous to 2D univariate data. This is because the channels for the different variables to not have an inherent ordering like the samples along the time dimension do. Instead, the additional time series variables should be treated similarly to how you treat additional channels in image data, namely, with a stack of 1D kernels, rather than with a 2D kernel.
