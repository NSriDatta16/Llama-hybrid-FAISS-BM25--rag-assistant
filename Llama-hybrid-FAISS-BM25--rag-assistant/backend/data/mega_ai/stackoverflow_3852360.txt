[site]: stackoverflow
[post_id]: 3852360
[parent_id]: 3851896
[tags]: 
Well, here is a simplified working example with 10 images. I'll post the code and jsFiddle now, and I might come back later to cover it in depth. But basically you just order your images correctly, and then you pick the segment by using (Segments - Math.floor(degree / (360 / segments))) . You may have to adjust your 0 degree. For example, I made my 0 equal to what would normal by 90 . Pay attention to the fact that the screen coordinates, x and y, increase right and down . This makes the degrees of atan work clockwise instead of the usual counter clockwise in coordinate systems where x and y increase right and up . I added in some text output that shows the degrees and image segment being shown. jQuery handles normalizing the x and y position nicely. Just take care that your CSS setup is cross browser. Working jsFiddle example Here's our image: Here's our HTML: ​ CSS: div#main { width:500px; height:500px; border:2px #000 solid; } div#img { width:94px; height:119px; overflow:hidden; top:50%; left:50%; margin-left:-45px; margin-top:-60px; position:relative; background-image:url('http://imgur.com/3UPki.png'); background-position:0;} div#info { position: absolute; bottom:0; left:0; } ​ Javascript / jQuery: $(function() { var position = $("div#img").position(), mouseX, mouseY, imgX, imgY, degree; imgX = position.left; imgY = position.top; $("#main").mousemove(function(e) { // degree is arctan y over x (soh,cah,toa) degree = Math.atan2((e.pageY - imgY),(e.pageX - imgX))*(180 / Math.PI); degree = (degree - 90) % 360; // jQuery normalizes pageX and pageY // transfrom from -180 to 180 ==> 0 to 360 if (degree Working jsFiddle example
