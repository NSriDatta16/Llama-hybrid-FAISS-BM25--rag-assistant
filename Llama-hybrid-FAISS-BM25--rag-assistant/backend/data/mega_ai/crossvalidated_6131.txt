[site]: crossvalidated
[post_id]: 6131
[parent_id]: 6122
[tags]: 
Here is some SPSS code to loop through each of your models. *creating a simulated dataset. input program. loop #i = 1 to 100. compute yvar = RV.BERNOULLI(.5). compute xvar1 = RV.NORMAL(100,10). compute xvar2 = RV.NORMAL(100,10). compute xvar3 = RV.NORMAL(100,10). compute listwise = RV.BERNOULLI(.1). end case. end loop. end file. end input program. execute. *using these variables you can run the regressions one equation at a time. LOGISTIC REGRESSION VARIABLES YVAR /SELECT=LISTWISE EQ 0 /METHOD=ENTER XVAR1. *or you can create a macro and loop through your independent variable list. DEFINE !logit_loop (dep = !TOKENS(1) /ind = !CMDEND ) !DO !i !IN !ind LOGISTIC REGRESSION VARIABLES !dep /SELECT=listwise = 0 /METHOD=ENTER !i. !DOEND. !ENDDEFINE. !logit_loop dep = yvar ind = xvar1 xvar2 xvar3. Note the loop does a selection on a variable named listwise = 0 , otherwise missing values for any variables would just be dropped (and potentially produce equations with different sets). While looping through your list is pretty simple in SPSS, where I think R is more convienant is the fact that the elements of your different objects are readily available in R (and so it is easier to access them and manipulate them). I'll update with an example later, but basically all the SPSS code does is produce alot of output which you have to read to find the values your interested in. In R you produce objects that have attributes you can extract. You can do the same thing in SPSS, but it is IMO more difficult and requires going into the output XML and parsing the info you want (which I don't know how to do). So long story short if you are alright with just viewing the output this is easily accomplished in SPSS (or PASW now). If you want to produce a program to summarize specific elements of those models, I think it is easier to learn a solution in R.
