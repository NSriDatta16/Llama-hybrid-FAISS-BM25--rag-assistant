[site]: crossvalidated
[post_id]: 244603
[parent_id]: 
[tags]: 
Algorithms for extracting moving average intervals

I have a series of discrete events and a global clock. Whenever an event happens, I record a timestamp and do some processing. Specifically, I am trying to compute "moving average" (not really) statistics on how fast events are being received. I need to do this online – as events are being entered into the system. I can only perform processing in response to an event. The algorithm needs to be simple and numerically stable , as I will be implementing it by hand in C++ using double-precision floating-point arithmetic. I don't need absolute accuracy, but I do need long-term stability over the course of many events. In particular, I need the impact of old data points to go to zero as their age goes to infinity. Performance is also rather important, since this processing happens in a critical section, and some of the event sources are latency critical (such as JVM safepoint requests). However, I suspect that any reasonably simple algorithm will be fast enough – we are talking tens or at most hundreds of events per second on average, and 1μs or even 10μs latency is perfectly okay.
