[site]: stackoverflow
[post_id]: 2250343
[parent_id]: 2250282
[tags]: 
I've only worked in one organization that had dedicated testers - and that was in 1983. Use TDD and it won't be an issue - plus your development cycles will accelerate. For example, this week I wrote 3 automated acceptance tests for a complex application. Manually performing these tests takes about 4 hours. The automated tests run in under 3 minutes. I ran the tests over 50 times today, shaking out bugs both small and large. End result: the application is good to go to the end-users, and the team has high confidence in its capabilities. Plus the automated tests saved about 200 man-hours of manual testing just today . They'll save even more as regression tests as future enhancements are made. Some people claim that TDD imposes extra overhead, which is true in only the most myopic of perspectives. Writing the test scripts took about 2 hours. Fixing the twenty bugs that they found took the rest of the work day. Without the tests, I'd still be doing manual testing trying to track down (at best!) the second bug.
