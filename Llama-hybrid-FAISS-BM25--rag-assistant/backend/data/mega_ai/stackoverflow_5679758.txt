[site]: stackoverflow
[post_id]: 5679758
[parent_id]: 5679728
[tags]: 
Regex is certainly not the right tool for this. Do this instead: Unify strings either by running them thru [string uppercaseString] or [string lowercaseString] . Compute Levenshtein Distance between unified strings. â€¦ Profit! The Levenshtein Distance (or edit distance ) is the absolute number of characters that need to be exchanged/removed/added in/from/to stringA in order to morph it into stringB . Objective-C Implementation of the Levenshtein Distance . Extended Note : It does not look like you are in danger here, but it's worth noting that while the Levenshtein distance is pretty handy for comparing short strings, it is not very useful for calculating distances between entire documents. Most implementations of the Levenshtein Distance require memory space of m*n (m and n being the lengths of your strings). And while some implementations are able to reduce this to m+n (afaik), their run time still requires O(n*n) , which is basically equivalent to O(n^2) on average.
