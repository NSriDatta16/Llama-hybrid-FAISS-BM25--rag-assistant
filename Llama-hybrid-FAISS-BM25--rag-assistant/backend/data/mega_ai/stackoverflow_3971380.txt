[site]: stackoverflow
[post_id]: 3971380
[parent_id]: 3971224
[tags]: 
What I like to do in this situation is: Firstly convert the project to use a maven build, so that I know what version the dependencies are. This also gives me some decent code quality reports to use as a benchmark, including checkstyle, findbugs, pmd and code coverage. And I (and many others) are used to this structure, so we know where to find the source, unit tests, resources etc. If it is a large project then a maven multi-module project layout is probably the correct structure to use. If it is currently one big-ball-of-mud, then that becomes the core module which can later be refactored into separate modules. The standard maven directory structure provides place for, and therefore encourages unit tests. The unit tests are a critical pre-requisite before refactoring can begin. Establish a continuous integration build cycle using Hudson .
