[site]: crossvalidated
[post_id]: 390053
[parent_id]: 
[tags]: 
LSTM models and Cross Validation

I have constructed a simplistic LSTM model using the keras package. The model takes sales data over a time series and tries to forecast future sales. The model I currently have groups the number of sales by product and by store. For simplicity I keep the number of products to 1 and number of stores to be 6. I then run a rolling origin function across a time series of 12 periods. The rolling origin function is not important but it means that there are 1 (product) * 5 (stores) * 6 (periods) - or (1*5*6 = 30 LSTM models) . Currently the model trains and tests on 30 models. I set the number of epochs to 300 and add 6 layers with varying level of units. The number of epochs, layers and units are arbitrary at this stage. The model (in R and using the pipe function (%>%) ) looks something like the following: model %>% layer_lstm(units = 100, input_shape = c(1, 1), batch_size = 40, return_sequences = TRUE, stateful = TRUE) %>% layer_lstm(units = 100, return_sequences = FALSE, stateful = TRUE) %>% layer_dense(units = 1) Where I just add another layer layer_lstm to the model in order to increase the number of layers. The original model I described above took 18 hours to run on a CPU (I understand I would need access to GPUs or Amazon Web services). What I would like to know is how I should run cross validation on the models. It is computationally infeasible to run the model on 30 (products) * 5 (stores) * 6 (periods) * 50 (states in the US) Should I train each product for all 50 U.S. states and then use the best parameters and test it at the store level? - this way I will lost a lot of state level characteristics - i.e. Idaho might like a certain brand more than New Jersey but the model is trained on a macro level and will miss these characteristics. I am looking to find the optimal number of epochs, layers and units to apply to each layer - but this will vary heavily depending on which produt I will use and which state I am in, and I simply do not have the computing resources to test on all products, states and stores... This is a research project idea so any additions, suggestions, modifications are always appreciated.
