[site]: stackoverflow
[post_id]: 156744
[parent_id]: 156697
[tags]: 
I found an interesting list in the Xml Spec : According to that List its discouraged to use the Character #26 (Hex: #x1A ). The characters defined in the following ranges are also discouraged. They are either control characters or permanently undefined Unicode characters See the complete ranges . This code replaces all non-valid Xml Utf8 from a String: public String stripNonValidXMLCharacters(String in) { StringBuffer out = new StringBuffer(); // Used to hold the output. char current; // Used to reference the current character. if (in == null || ("".equals(in))) return ""; // vacancy test. for (int i = 0; i = 0x20) && (current = 0xE000) && (current = 0x10000) && (current its taken from Invalid XML Characters: when valid UTF8 does not mean valid XML But with that I had the still UTF-8 compatility issue: org.xml.sax.SAXParseException: Invalid byte 1 of 1-byte UTF-8 sequence After reading XML - returning XML as UTF-8 from a servlet I just tried out what happens if I set the Contenttype like this: response.setContentType("text/xml;charset=utf-8"); And it worked ....
