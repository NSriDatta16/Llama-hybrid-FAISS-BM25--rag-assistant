[site]: stackoverflow
[post_id]: 2036192
[parent_id]: 
[tags]: 
Using CGLayer to Cache Cells in a UITableView

I am trying to improve the performance of scrolling in our app. I have followed all of the generally accepted advice (draw it yourself with CG, the cell is opaque, no subviews, etc.) but it still stutters sometimes when we have background CPU and network activity. One solution stated here: http://www.fieryrobot.com/blog/2008/10/08/more-glassy-scrolling-with-uitableview/ is to cache bitmap snapshots of the cells, which we tried. But the bitmaps were fuzzy and took up a ton of memory (~a few hundred kb each). One suggestion in the comments of that link is to cache the cells using CGLayer or CALayer(?) because they go to the graphic card's memory. So a few questions, 1) Has any tried this? Sample code? 2) How much memory does the iphone/ipod touch graphics card have? Does this make any sense? 3) Any other suggestions for speeding things up? More information I used the CPU sampler (on the phone) and systematically eliminated things from the cell to figure out the problem. A few things: 1) It isn't the setup of the cell. If I remove just the drawing calls (drawinrect etc), but leave the setup, it is glassy. 2) It isn't the drawing of the smallest image (25x25 png), if I put that in it is fine. 3) If I add the second or third image (the first is a big background 320x1004kB, the other is a button image 61x35 4kB) it stutters. I am grabbing both UIImages in a class method, so it is cached. 4) The text is also a problem. It looks like by drawRect spends 75% of its time in the three NSString drawInRect methods I am using. Like: [mytext drawInRect:drawrect withFont:myFont lineBreakMode:UILineBreakModeTailTruncation]; Those calls seem to go through webcore, perhaps that causes some of the stutters? I need to be able to format two lines of text, and one small paragraph of text. I need the ability to truncate the text with ellipses. Can I perform these out of the critical path and cache them? May I can do that part with a layer?
