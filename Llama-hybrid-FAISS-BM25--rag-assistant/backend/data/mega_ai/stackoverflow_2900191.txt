[site]: stackoverflow
[post_id]: 2900191
[parent_id]: 2897588
[tags]: 
It really depends on what type of development paradigm you're looking at. Personally, I go for an inversion of control model, and I would have a class specifically set up for retrieving that object type from its underlying storage. So the consumer would call MyObject myObj = MyObjectFacade.Get(id); Which would return an object of type MyObject. Then you could call MyObjectFacade.Save(myObj); That way the business entity would JUST represent the fields in question, and then you could have any number of objects responsible for saving and creating the object.
