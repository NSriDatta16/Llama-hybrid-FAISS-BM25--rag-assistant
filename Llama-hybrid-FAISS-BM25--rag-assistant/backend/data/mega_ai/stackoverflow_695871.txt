[site]: stackoverflow
[post_id]: 695871
[parent_id]: 695811
[tags]: 
We have good tools for measuring code-coverage from unit tests. So it's tempting to rely on code-coverage of 100% to represent that you're "done testing." This is not true. As other folks have mentioned, 100% code coverage doesn't prove that you have tested adequately, nor does 50% code coverage necessarily mean that you haven't tested adequately. Measuring lines of code executed by tests is just one metric. You also have to test for a reasonable variety of function inputs, and also how the function or class behaves depending on some other external state. For example, some code functions differently based on the data in a database or in a file. I've also blogged about this recently: http://karwin.blogspot.com/2009/02/unit-test-coverage.html
