[site]: crossvalidated
[post_id]: 215811
[parent_id]: 46576
[tags]: 
In Python I would do this the following way: from sklearn import decomposition from pandas import DataFrame # assuming training data is a pandas dataframe named 'train' # training the PCA pca = decomposition.PCA() pca.fit(train) # getting the weights for original parameters for i in range(0,4): featureWeights = list(pca.components_[i]) weights = DataFrame(data = featureWeights) filename = 'principal_component_' + str(i) + '.txt' weights.to_csv(filename, sep = '\t') Then you get the weights how much each original component contributes into the new component in four .txt files. You can take the genes that have an absolute value above an arbitrary threshold.
