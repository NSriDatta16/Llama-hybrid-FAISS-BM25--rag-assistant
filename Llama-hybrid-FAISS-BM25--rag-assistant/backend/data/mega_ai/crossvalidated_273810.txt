[site]: crossvalidated
[post_id]: 273810
[parent_id]: 273784
[tags]: 
Firstly, you would need to implement a Random Survival Forest approach, not Random Forest -- the R-project has some very good modules for this. If you stick with time-to-event modeling (for which each subject has a yes/no failure variable as well as a time variable) and RSF, you can extract predicted probabilities since the entire RSF algorithms are survival-based. However, I wouldn't implement RSF before looking at results from Kaplan-Meier analysis and Cox PH regression first. Looking deeper at your question, the strength of RF and RSF are really to determine which variables (features) are important predictors of the outcome. Cutpoint values of the important features provided by e.g. CART are not in theory a mainstay of RF and RSF because for a default run, RF/RSF will generate e.g. 5000 bootstraps of the data (called in-bag samples) having sample size $n$, train each in-bag sample and generate a decision tree using randomly drawn variables to split cases within each parent node (node splitting), until nodes cannot be split anymore. For each out-of-bag (OOB) sample of cases not selected during generation of each bootstrap $(n_{oob} \sim 0.37n)$, OOB cases are dropped down each trained tree to determine prediction accuracy. It's common to average the prediction accuracy over the 5000 trees, but one must recall that the features are randomly selected to make each node split within each tree. And therefore, since the objects are different across each trained tree (each bootstrap has different objects), the optimal cutpoints used for each feature at a given node split within a tree is specific to the combination of the randomly used feature and the cases in the given bootstrap. When all is done, there is no uniform set of cutpoint values for the variables used -- since they change over each tree. In summary, RF and RSF are I believe some of the better methods available, but fundamentally I employ them to inform me which features are most informative. I wouldn't operationalize an RF or RSF to sit on a server and make predictions for patients -- this can be better done via ensemble classifier fusion (see Ludmila Kuncheva's work).
