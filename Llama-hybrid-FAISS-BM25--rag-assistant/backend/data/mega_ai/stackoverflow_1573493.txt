[site]: stackoverflow
[post_id]: 1573493
[parent_id]: 1572950
[tags]: 
I don't have exact code for you, but I might be able to point you in the right direction by helping you to think about the problem a little bit more deeply. So the user begins to drag an unconstrained object. As the object moves one pixel away from the starting point, if the first pixel is at any of these four ( x , y ) coordinates, where x and y are the starting point: ( x -1, y -1), ( x -1, y +1),( x +1, y -1) or ( x -1, y +1), it is still unclear which way the user means to go, For instance, if the object is at one down and on left, it's impossible to tell whether the constraint should be on the x or y axis. Once you move more than one pixel away, it gets easier. But you still have to do some rounding on the pixel coordinates where, as in the coordinates above, abs( xoffset ) == abs( yoffset ), Then you can fire an event to apply the constraint when the x and/or y distance are greater than some arbitrary small integer, say "3". The next problem to deal with is how far from the last firing of the axis constraint do you want to allow the user to change the axis. I'm guessing that you want a grid effect, so you'll have to set a number-of-pixels moved threshold before you remove the constraint and look for the next "direction" that the user wants to drag. This is an interesting challenge and a good learning experience if you figure out how to do it.
