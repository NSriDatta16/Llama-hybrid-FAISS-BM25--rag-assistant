[site]: crossvalidated
[post_id]: 563990
[parent_id]: 552195
[tags]: 
Another approach, apparently not discussed in the literature, is the conditional density plot as provided out-of-the box by the R function cdplot . The conditional density plot directly estimates $P(Y=\omega_i|x)$ for an arbitrary number of levels $\omega_i$ non-parametrically without assuming a statistical model. In the case of logistic regression, there are only two levels (0 and 1) and the regression fits a parametric model for $P(Y=1|x)$ . The two estimators can thus be directly compared to see whether the logistic model matches the data. cdplot estimates $P(Y=1|x)$ by means of Bayes' Theorem $$P(Y=1|x) = \frac{f(x|Y=1)\cdot P(Y=1)}{f(x)}$$ where $f$ denotes the probability densities, which are estimated by a kernel density estimator from the data. The only tricky part in this estimation is that both the estimator for $f(x)$ and for $f(x|Y=1)$ must use the same kernel bandwidth. Compared to the LOESS approach, this has two conceptual advantages: The result is guaranteed to yield a probability, and it can not happen (like for LOESS) that the value lies outside the range $[0,1]$ It does not require a numerical interpretation of the levels as 0 and 1 in order to make numerically sense or to be applicable at all. Like for the LOESS approach, the predictor must be a scalar value, for which in complete analogy the link value $\eta$ can be used. The kernel desity estimator requires to choose a bandwidth, for which the "plugin method" ( bw="SJ" in the R function cdplot ) is generally recommended in the literature (and in the documentation of density , too, although it uses a different default). For comparison, I have implemented an additional bandwidth selection method that chooses that bandwidth which makes the cdplot most close to the logistic prediction. This can serve as a baseline what could be the best to be said about the logistic model ;-) And here the code with the plot of the 95% confidence band from the logistic model omitted for better legibility: # Space Shuttle Challenger temp vs oring-ok data $fit) sort.key fit) x $fit[sort.key] plot(link.model$ fit, data$y, main="link level") lines(x, plogis(x), col="red") # cdplot vs. link # note that we must code the level of interest # as FIRST level (for cdplot) y.factor $y, levels=c(1,0)) optim.bw fit, p.model=p.model) bw $minimum p.kernel fit, y.factor, bw="SJ", plot=FALSE) lines(x, p.kernel $'1'(x)) p.kernel fit, y.factor, bw=bw, plot=FALSE) lines(x, p.kernel$'1'(x), col="blue", lty=2) legend("topleft", c("model", "cdplot (bw='SJ')", sprintf("closest cdplot (bw=%4.2f)", bw)), col=c("red", "black", "blue"), lty=c(1,1,2))
