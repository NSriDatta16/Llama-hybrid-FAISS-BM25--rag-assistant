[site]: stackoverflow
[post_id]: 753739
[parent_id]: 34518
[tags]: 
Note that for most such questions, you can just consult the Rosetta Code Wiki . I adapted my answer from the entry for sorting integers. In a system's programming language doing something like this is generally going to be uglier than with a specialzed string-handling language. Fortunately for Ada, the most recent version has a library routine for just this kind of task. For Ada 2005 I believe you could do something along the following lines (warning, not compiled!): type String_Array is array(Natural range <>) of Ada.Strings.Unbounded.Unbounded_String; function " Natural; Element_Type => Ada.Strings.Unbounded.Unbounded_String, Array_Type => String_Array ); Example use: using Ada.Strings.Unbounded; Example : String_Array := (To_Unbounded_String ("Joe"), To_Unbounded_String ("Jim"), To_Unbounded_String ("Jane"), To_Unbounded_String ("Fred"), To_Unbounded_String ("Bertha"), To_Unbounded_String ("Joesphus"), To_Unbounded_String ("Jonesey")); begin Sort (Example); ... end;
