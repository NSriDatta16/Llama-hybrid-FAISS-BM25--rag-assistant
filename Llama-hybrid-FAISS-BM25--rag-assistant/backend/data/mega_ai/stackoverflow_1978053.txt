[site]: stackoverflow
[post_id]: 1978053
[parent_id]: 
[tags]: 
BindException: address already in use on a client socket?

I've got a client-server tiered architecture with the client making RPC-like requests to the server. I'm using Tomcat to host the servlets, and the Apache HttpClient to make requests to it. My code goes something like this: private static final HttpConnectionManager CONN_MGR = new MultiThreadedHttpConnectionManager(); final GetMethod get = new GetMethod(); final HttpClient httpClient = new HttpClient(CONN_MGR); get.getParams().setCookiePolicy(CookiePolicy.IGNORE_COOKIES); get.getParams().setParameter(HttpMethodParams.USER_AGENT, USER_AGENT); get.setQueryString(encodedParams); int responseCode; try { responseCode = httpClient.executeMethod(get); } catch (final IOException e) { ... } if (responseCode != 200) throw new Exception(...); String responseHTML; try { responseHTML = get.getResponseBodyAsString(100*1024*1024); } catch (final IOException e) { ... } return responseHTML; It works great in a lightly-loaded environment, but when I'm making hundreds of requests per second I start to see this - Caused by: java.net.BindException: Address already in use at java.net.PlainSocketImpl.socketBind(Native Method) at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:336) at java.net.Socket.bind(Socket.java:588) at java.net.Socket. (Socket.java:387) at java.net.Socket. (Socket.java:263) at org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory.createSocket(DefaultProtocolSocketFactory.java:80) at org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory.createSocket(DefaultProtocolSocketFactory.java:122) at org.apache.commons.httpclient.HttpConnection.open(HttpConnection.java:707) at org.apache.commons.httpclient.HttpMethodDirector.executeWithRetry(HttpMethodDirector.java:387) at org.apache.commons.httpclient.HttpMethodDirector.executeMethod(HttpMethodDirector.java:171) at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:397) at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:323) Any thoughts on how to fix this? I'm guessing it's something to do with the client trying to reuse the ephemeral client ports, but why is this happening / how can I fix it? Thanks!
