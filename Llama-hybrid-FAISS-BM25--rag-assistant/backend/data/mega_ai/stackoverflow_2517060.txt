[site]: stackoverflow
[post_id]: 2517060
[parent_id]: 2516290
[tags]: 
The features you need depend on what your requirements are. I don't have a lot of experience with SVN (although I have used it and like it), so I will concentrate my comments on the centralized systems. (I do know a lot of developers who swear by the distributed systems, however). The questions you should ask yourself are: How many developers are going to be using my system? How much budget per seat do I have? How many different projects will be held in the system and how complex will they be? How will my system be administered (developer startup, permissions, backup)? Do I need collaboration in addition to source control? These basic questions should push you in one direction or another. If you are going to only have a couple of developers with one or two simple projects and have a small budget, something like Perforce -- it's cheap ($400 a seat, two free last time I checked), has great admin. tools and great branching and merging capability. If you are going to have more developers and really want to get into the collaboration aspect of things, look at TFS2K10 (I would not go with 2008 if you can avoid it). TFS adds the collaboration element (document storage and versioning) and the project management element (task management, reports, etc.). It's more expensive and more heavy weight than Perforce, but it offers a bit more.
