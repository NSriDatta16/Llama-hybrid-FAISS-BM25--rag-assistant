[site]: stackoverflow
[post_id]: 4923877
[parent_id]: 4922379
[tags]: 
I'm sure there's a better way to do this, but here's what I've did within the selectable js file. For the always multi-selection: I added an option 'alwaysMulti' (default false). Then I replaced the three instances of !event.metaKey with (!event.metaKey && !options.alwaysMulti) and the two instances of event.metaKey with (event.metaKey || options.alwaysMulti) . To get the selection lasso to toggle the selected status, I found the changes I needed from the second page I linked to. I also added an option 'lassoToggle' (default false) to trigger this functionality. Within _mouseDrag, there is a condition if (hit) , it gets changed to the following: if (hit) { // SELECT selectee.deselect = false; if (selectee.selected || (options.lassoToggle && (selectee.startselected && event.metaKey)) { selectee.$element.removeClass('ui-selected'); selectee.selected = false; selectee.deselect = true; } if (selectee.unselecting) { selectee.$element.removeClass('ui-unselecting'); selectee.unselecting = false; } if (!selectee.selecting && (!options.lassoToggle || !selectee.deselect) { selectee.$element.addClass('ui-selecting'); selectee.selecting = true; // selectable SELECTING callback self._trigger("selecting", event, { selecting: selectee.element }); } if(selectee.deselect && options.lassoToggle) { selectee.$element.removeClass('ui-selecting'); selectee.selecting = false; selectee.$element.addClass('ui-unselecting'); selectee.unselecting = true; // selectable UNSELECTING callback self._trigger("unselecting", event, { unselecting: selectee.element }); } } Note: The event.metaKey change for the multi-select isn't in that code sample. Hopefully this helps someone else!
