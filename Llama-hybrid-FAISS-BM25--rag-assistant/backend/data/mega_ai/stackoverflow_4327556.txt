[site]: stackoverflow
[post_id]: 4327556
[parent_id]: 
[tags]: 
Injection through Annotations vs injection through XML file in Spring 3. Limitations related to inheritance

I have the following abstract class, with a property called portletBaseViewName which is meant to be different for every concrete Controller extending AbstractController . public abstract class AbstractController { private String portletBaseViewName; protected String getPortletBaseViewName() { return portletBaseViewName; } @Required @Value("") public void setPortletBaseViewName(String portletBaseViewName) { this.portletBaseViewName = portletBaseViewName; } } @Controller @RequestMapping("VIEW") public class ReservationOfBooksViewController extends AbstractController{} I know that is possible declaring the injections in a XML, doing so: Do I need to redefine?: @Controller @RequestMapping("VIEW") public class ReservationOfBooksViewController extends AbstractController{ @Value("reservationOfBooks") public void setPortletBaseViewName(String portletBaseViewName) { super.setPortletBaseViewName(portletBaseViewName); } } I don't like the previous option, which would be the most elegant option if there is to reach the purpose of injecting one value or another depending on the concrete class through annotations? I know inheritance and annotations sometimes conflict. Thanks a lot.
