[site]: stackoverflow
[post_id]: 594877
[parent_id]: 594562
[tags]: 
Just output c# (of any other .net language supporting this, f# works great too) and use the CodeDomProvider to compile it on the fly. Force the code supplied to be one source file, to include a type which implements IDynamicEntryPoint (with a static method or an empty constructor which is the entry point and will be invoked post construction) This should be your first port of call to start with because it is quick to try out at the same time as long term having the best chance of the highest performance (barring dynamic IL output but even then you might not beat the compiler) This obviously has two possible flaws which may be deal breakers: The resulting code is a security nightmare, only code input from fully trusted users should be allowed. The dynamically compiled code is fragile with respect to code/interface changes (the set of dll's the code must include might change/might not match) or the signature of the IDynamicEntryPoint might change. Unless you are interested in writing your own language/parser/compiler for fun use one that's already there.
