[site]: stackoverflow
[post_id]: 656041
[parent_id]: 655364
[tags]: 
I'm going to go out on a limb here and suggest that this block of code is NOT in particular need of refactoring. There may be room to make it more elegant, more concise, or more robust, but as it stands the code is dead simple and easy to read. My gut reaction in this case is, "if it ain't broke, don't fix it." edit: All that having been said, I'm upvoting at least three of the other answers. There are some great ideas there. edit #2: After having another look, the most obvious problem to me is the duplication of the following code: string username = txtUsername.Text.Trim().ToLower(); string password = txtPassword.Text.Trim().ToLower(); string email = txtEmail.Text.Trim().ToLower(); string status = ddlStatus.SelectedValue.Trim(); The real problem here is that if the UI changes to add, remove, or rename one of the fields, this supporting code needs to be changed in two places. It's much better to have this happen in a supporting class, as is suggested by several of the other answers.
