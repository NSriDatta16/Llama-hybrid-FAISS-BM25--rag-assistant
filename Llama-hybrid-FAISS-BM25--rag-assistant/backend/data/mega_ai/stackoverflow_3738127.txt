[site]: stackoverflow
[post_id]: 3738127
[parent_id]: 3576866
[tags]: 
Well after thinking about it and discussed it with coworkers I've come up with a solution that meets almost all my requirements. I implemented the solution with my Java projects and it worked great. I'll just pust the idea so everybody can use it within any framework. The solution consist in putting the commit call in the last line of the controller method, inside a try-catch block. If a constraint exception occurs you can get the name of the violated constraint. With the name you can tell the user exactly what went wrong. I used a properties file to store the message to show to the user wich constraint was violated. The keys of the properties file are the constraints names and the values are the constraint violation messages. Yo can refactor the commit-handle_exception-find_constraint_message to a method, that's what I did. For now it solves my problem of writing code to check database integrity and I believe it's pretty elegant with the constraint violation messages in a properties file. Now, I still don't like the idea that my controllers need to call the commit, but that's way better than writing integrity checks that the database already does . I will continue to use a filter just like David Kemp said, just that the filter will only open the (n)hibernate session and the transaction, and then, at the end of the request, close the session. Comments are more than welcome. Thanks.
