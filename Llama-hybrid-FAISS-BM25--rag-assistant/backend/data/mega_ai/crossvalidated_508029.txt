[site]: crossvalidated
[post_id]: 508029
[parent_id]: 507546
[tags]: 
Ok, I have a solution that will work for now/for my purposes that involves extracting TOD from the data.frame based on the max values of the prediction. I still think this is a bit of a hack because it should be possible to calculate TOD directly from the phase offset estimate, but maybe I'm off-base on that. Happy to see other solutions. A time of day column in decimal hours is first calculated from the cumulative hours column. The model predictions are sorted, and the TOD values associated with the top three prediction values (i.e., the peak of the sine function) are averaged. dat $TOD.dec = dat$ hours.cumulative + 10.07 dat $TOD.dec[dat$ TOD.dec > 24 & dat $TOD.dec TOD.dec[dat $TOD.dec > 24 & dat$ TOD.dec $TOD.dec[dat$ TOD.dec > 48 & dat $TOD.dec TOD.dec[dat $TOD.dec > 48 & dat$ TOD.dec $TOD.dec[dat$ TOD.dec > 72] = dat $TOD.dec[dat$ TOD.dec > 72] - 72 dat $mod1.predict = predict(mod1) dat$ mod2.predict = predict(mod2) dat.mod1_sort = dat[order(dat$mod1.predict, decreasing = T),] mod1.TOD_peak = sum(dat.mod1_sort[1:3,"TOD.dec"])/3 mod1.TOD_peak [1] 13.95889 dat.mod2_sort = dat[order(dat$mod2.predict, decreasing = T),] mod2.TOD_peak = sum(dat.mod2_sort[1:3,"TOD.dec"])/3 mod2.TOD_peak [1] 5.303333
