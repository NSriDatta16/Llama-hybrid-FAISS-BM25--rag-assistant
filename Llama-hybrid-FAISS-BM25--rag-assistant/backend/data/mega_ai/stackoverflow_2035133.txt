[site]: stackoverflow
[post_id]: 2035133
[parent_id]: 2020744
[tags]: 
Very neat layout customization features you can find in Kona project developed by Rob Conery. When you run source code which you can find here , you will see layout management UI which allows you to change the position of each component on the screen. The approach used there is as follows: When page is rendered our customized view engine check which master page should present (this way we are able to switch themes based on current settings) public override ViewEngineResult FindView(ControllerContext controllerContext, string viewName, string masterName, bool useCache) { ViewEngineResult result = null; var request = controllerContext.RequestContext; if (controllerContext.Controller.GetType().BaseType == typeof(KonaController)) { var orchardController = controllerContext.Controller as KonaController; string template = orchardController.ThemeName; View engine uses master page and renders view which was defined by specific controller action resolved using route tables. For instance, we typed main url of the site which pointed to Home Controller, Index method. This method returned Index.aspx view which was rendered by View engine. While view engine is rendering the Index.aspx page it launches helper methods like . This method is truely responsible for rendering specific widdgets per each div in the aspx page. This way, if your user changes the layout of the widgets they will be correctly presented on the screen. public static void RenderWidgets(this ViewPage pg, Kona.Infrastructure.Page page, bool useEditor, string zone) { if (page != null) { foreach (IWidget widget in page.Widgets.Where(x => x.Zone.Equals(zone, StringComparison.InvariantCultureIgnoreCase))) { string viewName = useEditor ? widget.EditorName : widget.ViewName; if (widget.ViewName != null) { if (widget.IsTyped) { var typedWidget = widget as Widget >; pg.Html.RenderPartial(viewName, typedWidget); } else { pg.Html.RenderPartial(viewName, widget); } } else if (!string.IsNullOrEmpty(widget.Title)) { pg.Html.RenderPartial("TitleAndText", widget); } else { pg.Html.RenderPartial("TextOnly", widget); } } } } How user is able to change the layout? Kona has very neat javascript which is used together with Ajax and user simply drag&drop widgets from one panel to another to reorder the layout.
