[site]: stackoverflow
[post_id]: 2757333
[parent_id]: 2756859
[tags]: 
As has been pointed out, you can just use an std::vector as shared storage, as long as A and B do not run in different threads. The Manager could manage this storage. When A starts its work, it could request a range from that vector to store it's results. When it is done, the Manager calls B and hands it the range that has just been filled with values by A . This avoids any copying.
