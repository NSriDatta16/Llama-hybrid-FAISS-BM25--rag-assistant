[site]: stackoverflow
[post_id]: 4502323
[parent_id]: 4502141
[tags]: 
You can't. Python stores all object attributes in the same place "on the object"; it does not break them out into separate storage areas, one per class in the inheritance hierarchy. The best you could do would be to keep a list of attributes that belonged to each level, maybe by having a __slots__ = [] declaration in every class or maybe by keeping a less formal list of attribute names, and then doing a loop with getattr() inside (or a loop that looks directly in the object's __dict__ ?) to get that specific set of attributes. What are you trying to do with this list of attributes? What do you want to accomplish with them? Maybe there is a better way to tackle your larger issue.
