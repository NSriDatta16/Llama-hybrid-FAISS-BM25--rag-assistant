[site]: stackoverflow
[post_id]: 1551071
[parent_id]: 1550932
[tags]: 
Consecutive integer numbers give perfect choice for the hash map but it only has one problem, as it does not have multithreaded access by default. Also since Amazon was mentioned in your question I may think that you need to take into account concurency and RAM limitation issues. What you might do in the response to such question is to explain that since you are dissallowed to use any built-in data storage schemes, all you can do is to "emulate" one. So, let's say you have M = 10^20 products with their numbers and descriptions. You can partition this set to the groups of N subsets. Then you can organize M/N containers which have sugnificantly reduced number of elements. Using this idea recursively will give you a way to store the whole set in containers with such property that access to them would have accepted performance rate. To illustrate this idea, consider a smaller example of only 20 elements. I would like you to imagive the file system with directories "1", "2", "3", "4". In each directory you store the product descriptions as files in the following way: folder 1: files 1 to 5 folder 2: files 6 to 10 ... folder 4: files 16 to 20 Then your search would only need two steps to find the file. First, you search for a correct folder by dividing 20 / 5 (your M/N). Then, you use the given ID to read the product description stored in a file. This is just a very rough description, however, the idea is very intuitive. So, perhaps this is what your interviewer wanted to hear. As for myself, when I face such questions on interview, even if I fail to get the question correctly (which is the worst case :)) I always try to get the correct answer from the interviewer.
