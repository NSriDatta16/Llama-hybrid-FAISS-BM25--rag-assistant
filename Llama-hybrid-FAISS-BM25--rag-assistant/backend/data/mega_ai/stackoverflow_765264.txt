[site]: stackoverflow
[post_id]: 765264
[parent_id]: 
[tags]: 
Developing API: balance between new features and back compatibility

I'm working now on an API for developers feature of our product. The first version was released and it has small number of users at the moment. Since I started to develop its second version, some parts were reworked, some parts were removed to make the API more elegant and clear. But the 2nd version deployment can be a pain for old version users. Our marketing department is planning to enhance our API product a lot, add more features to it. How should I build the system, so 1) we wouldn't be constrained to the "old version" to add new interesting features 2) current API users won't be dissatisfied because of the need to rework their systems in order to comply with the changed API Or should the API products be tested in a sandbox for quite a long period of time before the public release, so there wouldn't be any significant modifications in the specification?
