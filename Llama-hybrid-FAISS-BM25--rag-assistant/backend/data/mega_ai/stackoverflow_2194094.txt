[site]: stackoverflow
[post_id]: 2194094
[parent_id]: 2124560
[tags]: 
Tools: Firefox with TamperData and LiveHTTPHeaders, Devel::REPL, LWP. Analysis: In the browser, turn off Javascript and Java, delete any cookies from the target web site, start TamperData logging, log in to web site. Stop TamperData logging and look back through the many requests you likely placed during the login process. Find the first request (the one you made on purpose) and look at its details. Experimentation: Start re.pl , and start recreating the browser's interaction. use LWP::UserAgent; my $ua = LWP::UserAgent->new( agent => $the_UA_of_the_browser, cookie_jar => HTTP::Cookies->new(hide_cookie2 => 1), ); $ua->default_headers(HTTP::Headers->new( %the_headers_sent_by_the_browser, )); my $r = $ua->get($the_URL); $r->content($r->decoded_content); print $r->as_string; So that's step one. If you get mismatched responses at any point, you did something wrong. You can usually[1] find out what by looking at $r->request and comparing with the request Firefox sent. The important thing is to remember that there is no magic and that you know everything the server knows. If you can't get the same response to what appears to be the same request, you missed something. Getting to the first page is usually not enough. You'll likely need to parse forms (with HTML::Form ), follow redirects (as configured above, UA does that automatically, but sometimes it pays to turn that off and do it by hand), and try to reverse engineer a weirdly-hacked-together login sequence from the barest of hints. Good luck. [1]: Except in the case of certain bugs in LWP's cookies implementation that I won't detail here. And even then you can spot it if you know what you're looking for.
