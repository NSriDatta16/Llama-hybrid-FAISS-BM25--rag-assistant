[site]: stackoverflow
[post_id]: 931197
[parent_id]: 126653
[tags]: 
That "CLOS" is a programming language, and that Lisp is an interpreted, functional-only language. Really, I heard that from CS professors. And I think there was some misleading chart in one of these Programming Language Concepts books that suggested that. CS teachers at Colleges and Universities today (particularly the young ones) were educated using Java, C and C++, and they probably learnt either Scheme or Common Lisp in a course called "comparative studies of programming language" or "programming paradigms", which was probably taught by someone who doesn't like any Lisp language, and taught them about functions, lists, symbols and higher-order functions. Period. Then they end up teaching what they learned: Lisp is one programming language Lisp is interpreted Lisp is slow Lisp is an AI language (the last time I checked Robert Sebesta's book, it still claimed that -- but there is a new edition, so he may have fixed this) Lisp has no OO support (!!!) Lisp is a functional language (as opposed to minimally supporting any other paradigm) In Lisp there are no data types Lisp has no data structures except lists (and hence is not useful for number crunching) "Lisp is not used anymore, and is only used in this course because it is the most important functional language" I even saw a very intelligent professor giving an example of matrix multiplication in Common Lisp -- representing the matrices as lists, of course!
