[site]: crossvalidated
[post_id]: 162913
[parent_id]: 
[tags]: 
Normalize counts over time without adding excess variability

I'm not quite sure if this is possible to do, but I have count data that I would like to put on a similar scale in order to compare it. We are tracking where people go, and want to see if people who attend a certain event significantly change where they go in the week following the event (i.e. if going to a cooking class makes people go to cooking stores more). The problem is that the data is highly variable in the number of data points we have per user and over time. So using the cooking example, let's say I was looking at the users who went to a grocery store afterwards: I would first count the number of times people went to the grocery store in a week time period after they went to a cooking event. Then I need to compare that to their baseline count of how often they go to a grocery store outside of that time period. My current method is to look at the range of days we have data for the user on. If the range is less than a week, I just use the raw count, but if it's greater than a week I standardize the count as: new count = raw count / day range * 7 to get the counts per week. Then I add those up for every user, and do the same standardization: final total = total new counts / # users * 1000 to get the counts per week per 1000 users. Obviously this is highly variable depending on the day range and # of users, and still doesn't seem to give comparable numbers in some cases. (I would also like to estimate the standard deviation of these counts) Is there anyone out there who actually understands what I'm asking and has any idea how to deal with count data like this? @IrishStat @Dirk @Hotaka Hopefully this helps show what my problem is. The data is very inconsistent (we're just tracking where people go, and people could turn off location sharing on their phone or something). Here is a sample of data for some users who went to Organization/Meet Up events. For each user, we want to get counts inside and outside of the one week period after they go to an event (Count variable = T or F). But the data isn't quite representative of the full users behavior. Which is why we want to somehow normalize it to make the counts comparable over different users and time periods.
