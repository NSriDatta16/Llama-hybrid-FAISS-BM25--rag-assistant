[site]: stackoverflow
[post_id]: 1315643
[parent_id]: 1315483
[tags]: 
I had a think; Its only pseudo code but does this help? public interface IPerson { string PersonClassification { get; set; } DateTime CreateDate { get; set; } } public class Person : IPerson { public string PersonClassification { get; set; } public DateTime CreateDate { get; set; } } public class TransformerBase where T : IPerson { T Person { get; set; } T Transform(Func transformer) { return transformer(person); } } public class OfflinePersonToOnlineTransformation : TransformerBase { public OfflinePersonToOnlineTransformation() { Transform(x => x.PersonClassification) .WhenCreatedBefore("1/1/2000") .ClassifyAs("Online"); } } public static class Extensions { public static T WhenCreatedBefore (this T person, string date) where T : IPerson{ if(person == null || person.CreateDate > DateTime.Parse(date)) return null return person; } public static T Classify (this T person, string classification)where T : IPerson{ if(person != null) person.PersonClassification = classification; return person; } }
