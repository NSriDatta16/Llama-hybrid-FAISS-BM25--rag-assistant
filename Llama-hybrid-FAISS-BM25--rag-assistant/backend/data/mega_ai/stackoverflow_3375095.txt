[site]: stackoverflow
[post_id]: 3375095
[parent_id]: 
[tags]: 
Please help transform Tsql "implicit joins" into explicit ones

Sorry, I am pretty much an SQL noob. This has to work in MSFT SQL, Oracle as well as Sybase. In the following snippet I need to change an inner join between IJ and KL on IJ.PO_id = KL.PO_id into a left join also on IJ.PO_id = KL.PO_id . So, I believe I have to re-factor this. Well, implicit joins are not the most readable, at least in my co-worker's eyes. I guess I will agree until I develop my own taste. Sorry, I mangled the table and field names just in case. /* @IJ_id is an input stored proc patrameter. */ from AB, CD, EF, GH, IJ, KL where EF.EF_id = IJ.EF_id and IJ.EF_id = AB.EF_id and EF.ZY_id = IJ.ZY_id and IJ.ZY_id = AB.ZY_id and IJ.IJ_id = AB.IJ_id and IJ.IJ_id = @IJ_id and EF.XW_id = GH.GH_id and AB.VU_code = CD.VU_code and IJ.TS > 0 and IJ.RQ = 0 and EF.RQ = 0 and AB.RQ = 0 and IJ.PO_id = KL.PO_id; Now, my difficulty is that there is a lot going on in the where clause. Things that do not look like a.b = c.d will remain in the where clause, but not all stuff that does look like a.b = c.d look easy to convert into an explicit join. The difficult part is that ideally the conditions would be between neighbors - AB+CD , CD+EF , EF+GH , GH+IJ , IJ+KL but they are not that organized right now. I could re-order some, but ultimately I do not want to forget my goal: I want the new query to be no slower, and I want the new query to be no less readable. It seems that I might be better off hacking just the part that I need to change, and leave it mostly the same. I am not sure if I can do that. If you understood my intent, please suggest a better query. if you did not, then please tell me how I can improve the question. Thanks.
