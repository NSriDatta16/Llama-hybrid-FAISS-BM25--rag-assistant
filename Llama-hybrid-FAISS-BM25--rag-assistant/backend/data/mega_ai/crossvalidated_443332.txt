[site]: crossvalidated
[post_id]: 443332
[parent_id]: 442607
[tags]: 
It is incorrect to simply make a paired $t$ -test because animal ID induces a clustering (blocking) to the measurements at hand. A random effects model for paired testing is potentially more natural in this scenario. The immediate issues I can see are three: Certain animals might have lower or higher average levels of turning under condA or condB or both. Allowing an animal-specific random intercept will help estimating more accurately the population-level estimates. Repeating the experiment on particular animal might condition the animal to respond different. Using the repeat index as an explanatory variable within a mixed model would be more appropriate as it would allow to control for this scenario. The mean response value in the two conditions analysed is potentially not normal. Mixed models can be directly extended distributions that are not normal (e.g. Poisson, or Gamma) or estimate quantiles (e.g. through linear quantile mixed models). (Side-note: $t$ -test is generally fine for non-normal continuous data given they are not severely skewed.) Notice that when we do a regression and look at the coefficients' significance we do a $t$ -test too essentially. Therefore we do not lose the generality of a $t$ -test. Ultimately through a $t$ -test will be able to detect whether the average turning differs between condA and condB while the regression model will allows us to estimate how the turning rate varies by condition. Assuming one uses R, the functions lmer (for linear mixed effects regression) and glmer (for generalised linear mixed effects regression) from the package lme4 are good places to start working with random effects models. There are some specialised packages on quantile mixed models (e.g. qrLMM and lqmm ) if one wants to explore that route too. EDIT: I think multiple lmer models are not required. In particular something like: y ~ condX*timing + gender + length + (1|animalID) should serve as a reasonable base-line model. In this case y would be the turning property of interest, condX would take values A and B and timing would take values Before and Later . The rest of the variables would be as you defined them already. Notice that in this case we will define condX equals A , timing equals Before (and gender equals Female if we encode them alphabetically?) as the reference levels that will be captured in our intercept. In that way the coefficient associated with condXB will quantify the difference between condA and condB before any experiments are done and the coefficient associated with condXB:timingLater will quantify the difference between condA and condB at the later stage. Do notice that we will also have a coefficient timingLater that will encapsulate the overall changes observed in both condA and condB at the later stage. The changes in condA in later stages will simply equal that coefficient but the changes in condB in later stages will be equal to that coefficient plus the estimated coefficient condXB:timingLater .
