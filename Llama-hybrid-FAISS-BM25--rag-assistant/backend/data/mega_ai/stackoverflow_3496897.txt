[site]: stackoverflow
[post_id]: 3496897
[parent_id]: 3496103
[tags]: 
In short, the idea of these tools is not to skip phases but to avoid the cost of the initialization of the JVM, of the Maven engine, of plugins, etc at each build by caching them in a ready to (re)use environment. This is pretty well summarized (maybe better than in the FAQ) in this Intro to Maven Shell blog post: Sonatype has released a nifty utility called Maven Shell that allows developers to execute maven goals/phases in a pre-loaded shell environment, significantly reducing the build time. It does this by loading up a JVM, Maven, and any loaded plugin once and leverages that existing load for each subsequent build . I downloaded the .10 binary and played around with it with a very simple multi-module project. Here is a quick primer on some of the things you can expect from Maven Shell. The same blog post provides some metrics illustrating the improvements on a simple build. I personally just love Maven Shell, it's really a great tool and warmly recommended it to any Maven user.
