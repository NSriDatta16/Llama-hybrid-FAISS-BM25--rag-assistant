[site]: stackoverflow
[post_id]: 311482
[parent_id]: 311438
[tags]: 
Use a ServletContextListener and declare it properly in web.xml. This way is preferable to a startup servlet. It is more organized, and your intent is obvious. It is also guaranteed to run before any request. It also gives you a shutdown hook to clear the pool. Here is a snippet from my web.xml, for example: com...ApplicationListener and here is a code snippet from the class itself. Make sure that you catch exceptions so they don't propagate to your server application, and provide helpful log messages - those will help you when you are tracing your application. public class ApplicationListener implements ServletContextListener { private ServletContext sc = null; private Logger log = Logger .getLogger(ApplicationListener.class); public void contextInitialized(ServletContextEvent arg0) { this.sc = arg0.getServletContext(); try { // initialization code } catch (Exception e) { log.error("oops", e); } log.info("webapp started"); } public void contextDestroyed(ServletContextEvent arg0) { try { // shutdown code } catch (Exception e) { log.error("oops", e); } this.sc = null; log.info("webapp stopped"); } } See the api here and examples here .
