[site]: stackoverflow
[post_id]: 2774254
[parent_id]: 2769773
[tags]: 
Is there some performance advantage to creating a collection with capacity for enough objects in advance? When you add elements to a NSMutableArray , the array may have to resize its storage zone in order to accommodate with the insertion. Usually, arrays use specific algorithm to grow in a balanced way; grow enough to support some insertions, but not too much to avoid wasting memory. You usually use "initWithCapacity:" when you approximately know the number of elements you will put into your array. The main advantage is that the storage allocation is done once and avoid unneeded resizing. This storage resizing may have performance impact (as it implies an extension of the storage zone), but you should do a micro-benchmark according to your needs. If not why isn't the function something like + (id)emptyArray? You don't need a + (id)emptyArray , because there is + (id)array : NSMutableArray *array = [NSMutableArray array]; [array addObject:[NSString string]]; [array removeAllObjects];
