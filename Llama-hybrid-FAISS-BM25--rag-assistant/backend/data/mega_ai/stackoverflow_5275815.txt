[site]: stackoverflow
[post_id]: 5275815
[parent_id]: 
[tags]: 
How do I create a custom currency type in Magento or Zend?

I'm looking to create a new reward points currency, so instead of my Magento store selling products with a dollar value $300.00, I want it to display 300 Reward Points. I've already tried a bad practice solution by adding this to the currencies section in lib/Zend/Locale/Data/en.xml Reward Point Reward Point Reward Points Reward Points I was able to enable and use this in Magento by following this thread: http://www.magentocommerce.com/boards/viewthread/56508/ but it still uses the default formatting pattern: Â¤ #,##0.00 so it looks like Reward Points800.00 My locale is set to en_CA and as far as i can tell there's no way for me to change the formatting pattern without affecting the CDN and USD formatting as well. I tried overriding Mage_Core_Model_Store so that if the current currency code is RWP it will format the price using an array of formatting options but this doesn't work when I'm in the product view. Not to mention that this also seems like a really dirty way to accomplish what I want. /** * Format price with currency filter (taking rate into consideration) * * @param double $price * @param bool $includeContainer * @return string */ public function formatPrice($price, $includeContainer = true) { if ($this->getCurrentCurrency()) { /** * Options array * * The following options are available * 'position' => Position for the currency sign * 'script' => Script for the output * 'format' => Locale for numeric output * 'display' => Currency detail to show * 'precision' => Precision for the currency * 'name' => Name for this currency * 'currency' => 3 lettered international abbreviation * 'symbol' => Currency symbol */ $options = array(); if ($this->getCurrentCurrencyCode() == 'RWP') { $options = array( 'position' => 16, 'precision' => 0, 'format'=> '#,##0.00 ' ); } return $this->getCurrentCurrency()->format($price, $options, $includeContainer); } return $price; }
