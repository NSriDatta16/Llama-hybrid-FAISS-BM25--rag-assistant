[site]: stackoverflow
[post_id]: 2773075
[parent_id]: 2773055
[tags]: 
NDepend is a great tool designed for measuring and visualising code metrics and complexity. Powershell would do it: (dir -Include *.cs -Recurse | select-string .).Count Counting Lines of Source Code in PowerShell : Line count per path: gci . *.cs -Recurse | select-string . | Group Path Min / Max / Averages: gci . *.cs -Recurse | select-string . | Group Filename | Measure-Object Count -Min -Max -Average Comment ratio: $items = gci . *.cs -rec; ($items | select-string "//").Count / ($items | select-string .).Count ## Count the number of lines in all C# files in (and below) ## the current directory. function CountLines($directory) { $pattern = "*.cs" $directories = [System.IO.Directory]::GetDirectories($directory) $files = [System.IO.Directory]::GetFiles($directory, $pattern) $lineCount = 0 foreach($file in $files) { $lineCount += [System.IO.File]::ReadAllText($file).Split("`n").Count } foreach($subdirectory in $directories) { $lineCount += CountLines $subdirectory } $lineCount } CountLines (Get-Location) Also, Line Counter
