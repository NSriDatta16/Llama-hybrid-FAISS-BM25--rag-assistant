[site]: stackoverflow
[post_id]: 3762865
[parent_id]: 3759965
[tags]: 
There is no silver bullet to developing data-driven apps. I write Enterprise Resource Planning application using a SOA-style application structure for a living - and I can assure you that I never use DataTables directly :-). DataTables are IMO fine if you have only one user and limited amounts of data. As soon as you add the second user... you should move away from DataTables (and DataSets etc.) But to answer your question - when I have large datasets with objects with many properties, I tend to show at a max around 10 columns - if there are more properties, I put them in a Details section/separate details view. I then bind the individual columns to the 10 (or so) most important properties of the objects. I only use DataGrid (read-write tabular data) for very small collections with rather simple objects - usually a collection property of the parent object. Everywhere else I use a ListBox or a ListView and only show the data (read-only) - and then a detail-section for creating/updating a single item. This makes it a lot easier handling CRUD (Create/Read/Update/Delete)-actions to and from the database (or whatever datastore you have). It can be a bit overwhelming to start in WPF with the many possibilities - but I would advice you to look at M-V-VM at some point to really leverage the power (and simplicity) of WPF. I've written a ten-post blog-series for one way of doing it - it starts here . It may be a wee bit above your level if you're just starting out, but save it for one of those days where you cannot fall asleep... :-) Hope this at least gave you a few pointers :-)
