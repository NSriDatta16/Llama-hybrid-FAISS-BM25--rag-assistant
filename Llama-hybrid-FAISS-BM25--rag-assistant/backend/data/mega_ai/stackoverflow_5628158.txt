[site]: stackoverflow
[post_id]: 5628158
[parent_id]: 5628026
[tags]: 
It depends on the relative numbers of values in each column, their distribution, and the distribution of queries, so there's no best answer. Your dictionaries are fine for retrieval along one dimension, but you will have to linearly search if you want a combination of features. If space weren't a problem, you could have a 3 level index (either trees or hash tables) so that you first retrieve items along 1 dimension, then use a dictionary at that node to find all items along the second dimension with the value for dimension 1, then use a dictionary at that node to find all items with all 3 values. It also matters if you want to answer queries using inequalities. In this case, a tree is better than a dictionary because it is ordered.
