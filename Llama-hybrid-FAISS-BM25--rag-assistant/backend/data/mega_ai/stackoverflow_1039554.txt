[site]: stackoverflow
[post_id]: 1039554
[parent_id]: 
[tags]: 
AD via LDAP - How can I return all ancestor groups from a query?

I am querying Active Directory via LDAP (from Java and PHP) to build a list of all groups that a user is a member of. This list must contain all least all groups (organizational-units optional) that contain groups the user is directly a member of. For example: User1 is a member of GroupA, GroupB, and GroupC. GroupA is a member of GroupD. I am looking for a way to construct an LDAP query that will return GroupA, GroupB, GroupC, and GroupD all at once. My current implementation is below, but I am looking for a more efficient way to gather this information. Current Naive Implementation (In pseudo-code) user = ldap_search('samaccountname=johndoe', baseDN); allGroups = array(); foreach (user.getAttribute('memberOf') as groupDN) { allGroups.push(groupDN); allGroups = allGroups.merge(getAncestorGroups(groupDN)); } function getAncestorGroups(groupDN) { allGroups = array(); group = ldap_lookup(groupDN); parents = group.getAttribute('memberOf'); foreach (parents as groupDN) { allGroups.push(groupDN); allGroups = allGroups.merge(getAncestorGroups(groupDN)); } return allGroups; }
