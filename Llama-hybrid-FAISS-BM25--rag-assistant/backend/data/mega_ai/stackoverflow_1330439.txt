[site]: stackoverflow
[post_id]: 1330439
[parent_id]: 1330400
[tags]: 
Instead of requesting all GHC extensions, specify which ones are used using the LANGUAGE pragma mechanism: {-# LANGUAGE ParallelListComp #-} xy = [ x+y | x I assume the fact that both a and b are reading from the list at the same time causes problems here...? So, if the glasgow extensions are the only means to support this construct is it more common to generate the list another way or just assume that the extensions will be available? Parallel iteration over the same list is allowed. The problem is that parallel comprehensions are not defined in the Haskell 98 standard. They can be easily simulated using zip : xy = [x+y | (x,y) Extensions themselves are not bad -- much of the standard library uses extensions, of one sort or another. Many are being considered for inclusion in Haskell' , the next iteration of the Haskell standard. Some extensions, such as GADTs are commonly used throughout user-written libraries. Others, such as templates or incoherent instances, are probably not a good idea to use unless you really know what you're doing. Any extension listed in the HaskellExtensions wiki page with support from two or more compilers is probably safe to use.
