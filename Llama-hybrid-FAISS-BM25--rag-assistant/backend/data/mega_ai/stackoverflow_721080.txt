[site]: stackoverflow
[post_id]: 721080
[parent_id]: 708775
[tags]: 
Agile Simple Design doesn't mean don't do ANY design/architecture up front. It means do the minimal design up front, so that you will not pay a horrible price for reasonable change requests. Scott Ambler talks about Change Cases - http://www.agilemodeling.com/artifacts/changeCase.htm James Coplien talks about Agile Architecture - http://www.infoq.com/presentations/Agile-Architecture-Is-Not-Fragile-Architecture-James-Coplien-Kevlin-Henney http://blog.jaoo.dk/2009/03/04/handling-architecture-in-the-agile-world/ The art/craft in all of this is in how to slice the architecture in a way that allows: relatively fast convergence on overall architecture/infrastructure - on the order of days per months of estimated development time. developing "just enough" architecture/infrastructure per each feature/requirement doing the right balance of preparations for the future compared to focus on the features of today. Its important that your Product Owner is aware of all of this balancing act as well, and you work collaboratively. He should understand that if you disregard all thinking for the future, each change will be very costly. There is a price to be paid for flexibility. Its btw very similar to investment in QA and test automation. You pay something now, that will pay off only after X times you test the code. if the code never changes it was a waste of effort. but everyone knows that most code changes...
