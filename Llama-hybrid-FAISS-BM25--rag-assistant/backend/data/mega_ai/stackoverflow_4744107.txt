[site]: stackoverflow
[post_id]: 4744107
[parent_id]: 4708322
[tags]: 
To accomplish timed page caching you can utilize the standard Rails' caching plus a little timed cleverness. First you want to determine your level of caching. You've got three options: Page Caching - caches the whole page but subsequent requests don't go to through Rails stack. So if this is a Craiglist-esque page that will be hit thousands of times a second this request will only go to your webserver (e.g. apache) not Rails or your db making it much faster. The trade off is that you lose authentication, session variables, etc that Rails provides. Action Caching - caches the whole page but brings the request into Rails so that it can execute any filters associated with that action. Fragment Caching - caches a segment of the page, essentially bypassing the need to execute the code with in the block (and any consequential calls to the DB). Then you'll need pick the appropriate level of caching and implement it in your app (check out the links above for implementation examples). Once you have implemented the caching you now have to figure out a way to expire the cache. I can think of two ways to do this, both come with benefits and drawbacks. For now let's assume you've chosen to use action caching. Reliable but more involved - create an action within your controller that expires the cache and a cron job task that makes a request to that action. I've asked a similar question that addresses this 'built in' scheduled task . For security precautions, you may want to include a generated hash or something similar so that someone can't manually expire your cache by going to '/products/expire_cache'. class ProductsController :index end end end Unreliable but easier - simply expire the cache in your action with an arbitrary conditional. This implementation assumes that there will be enough traffic to regularly ensure that someone will come to your site on the 0, 15, 30, and 45 minutes. You could decrease this interval in order ensure that the cache will be reset at a more probable interval. class ProductsController :index if Time.now.min % 15 == 0 end end
