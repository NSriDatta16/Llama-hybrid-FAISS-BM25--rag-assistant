[site]: stackoverflow
[post_id]: 4207680
[parent_id]: 4207409
[tags]: 
The key here is to keep track of the top-level parent in the recursive CTE : ;WITH EmployeeRec( EmployeeId, ParentEmployeeId, UltimateGrandbossEmployeeId, Name, Level) AS ( SELECT EmployeeId, ParentEmployeeId, EmployeeId UltimateGrandbossEmployeeId, Name, 1 as [Level] FROM Employees WHERE ParentEmployeeId IS NULL UNION ALL SELECT E.EmployeeId, E.ParentEmployeeId, R.UltimateGrandbossEmployeeId, E.Name, R.[Level] + 1 FROM Employees E INNER JOIN EmployeeRec R ON E.ParentEmployeeId = R.EmployeeId ) ... form an intermediate CTE to capture the 'bottom up' level ... SELECT UltimateGrandbossEmployeeId, Name, ROW_NUMBER() OVER (PARTITION BY UltimateGrandbossEmployeeId ORDER BY Level Desc ) BottomUp FROM EmployeeRec ) ... for each ultimate grandboss, select their deepest child: SELECT UltimateGrandbossEmployeeId, DeepestChildName FROM Inter WHERE BottomUp = 1 (concatenate together all these code fragments to form a single query with two CTEs and a SELECT ) Results: 1 Company President 1 - VP - Secretary - Sandwich Delivery 2 Company President 2 - VP - Secretary You can JOIN this back to Employee to get ultiamte grandboss names or track the names in the CTE, as makes sense in your actual situation.
