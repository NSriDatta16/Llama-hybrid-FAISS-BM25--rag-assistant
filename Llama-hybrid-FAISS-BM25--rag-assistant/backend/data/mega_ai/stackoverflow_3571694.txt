[site]: stackoverflow
[post_id]: 3571694
[parent_id]: 3571476
[tags]: 
Derek, In Sane and Kragen's posts are all correct, but I'd like to take it one step further. Since XML inherently uses a schema (a schema to define what the markup represents), XML all by itself can be considered a database similar to the concept of any other database. You can define your own schema for XML (an XSD) and then then persist data in your chosen XML format. True, you can choose to stuff a bunch of XML into a text-field in an SQL database, but you could also use XML all by itself as a database since a database could be nothing more than persisting data in a schema designed to hold that data. There's a gray area here considering even a simple comma-delimited text file could be considered a database if you wrote a program to store and access data in CSV format too. Anyway, with XML, there are already defined standards for how the schema can be defined (the XSD standards) and parsers are built to conform to those standards so you can put data into and read data out of documents excoded in XML fitting to a named schema (XSD). So I suppose when you ask about how XML is used in a database, I guess my first question is what exactly do you mean by " database "? Are you meaning a specific vendor implementation of an SQL database? Or maybe " database " as a logical concept? Or perhaps how XML can be used to enhance interaction with a specific type of database? Of the answers thus far, I think we're all answering with a different idea of what you mean by " database ". XQUERY, for instance can be used in a standardized way to " query " data in a set of XML files, or in a completely different context XML can be used to easily pass data in and out of Oracle or SQL Server because Microsoft and Oracle provide interfaces which conform to the XML standards.
