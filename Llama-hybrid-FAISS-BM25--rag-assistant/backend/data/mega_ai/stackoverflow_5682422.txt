[site]: stackoverflow
[post_id]: 5682422
[parent_id]: 
[tags]: 
Combine jQuery and Zen-Coding php ports to emulate client side programming style on server side scripts

When I write client side code, I use HTML/CSS/JavaScript and lately jQuery to both speed up coding, and use improved methods to achieve the same goal. In my text editor I use zen-coding to speed up the writing of code, and also to avoid errors. I was looking at zen-coding as a jQuery plugin for a while, but it has a fatal flaw, that you want the HTML to be written and sent to the client plain before any javascript kicks in. Although we can use JavaScript servers (env.js or node.js) and therefore do a lot of development server side using JavaScript and jQuery, I am not comfortable moving over yet as it is an emerging technology, and has many differences and drawbacks (and also some major advantages). I want to continue using PHP server side, but develop in the way I am most comfortable with, and familiar with which is client side JavaScript. Therefore - I have been looking into QueryPath which is a PHP port of jQuery that aims to take the best and most relevant parts of jQuery and re-work it to suit the server environment. That is all great, and I have now been looking at two PHP classes capable of parsing zen-coding which when combined acts as a great templating engine and also avoids errors in my code. The problem I am having is that neither zen-coding parsers support anywhere near a full set of zen-coding features. So finally my questions (sorry for the rather lengthy intro) Is there a better server side zen-coding parser I can use in my PHP code? Is there a good (very concise and full featured) alternative templating system to using zen-coding? (which I know is not originally designed for this task) Is there a better approach I should take to achieve my ultimate goal of narrowing the divide between the way I code client side and server side? Is there a PHP library that implements a load of utility functions that by using will enhance the security/performance of my code without me learning all the internal workings? (like jQuery does for javascript) NB: I am looking more for functional equivalence than syntactic similarity - although both are a plus for me. Here is some commented test code that should illuminate what I am trying to achieve: expand($abbr); } // php port of jQuery with a new server-side flavor // http://querypath.org/ require_once 'QueryPath/QueryPath.php'; // initialize query path with simple html document structure qp(zp('html>head+body')) // add a heading and paragraph to the body ->find('body') ->html(zp('h1{Zen Coding and jQuery - Server Side}+p{This has all been implemented as a php port of JavaScript libraries}')) // add a comments link to the paragraph ->find('p') ->append(pwzc('span.comments>a[href=mailto:this@comment.com]{send a comment}')) // decide to use some jquery - so add it to the head ->find(':root head') ->append(zp('script[type=text/javascript][src=/jquery.js]')) // add an alert script to announce use of jQuery ->find(':root body') ->append(zp('script[type=text/javascript]{$(function(){ alert("just decided to use some jQuery") })}')) // send it to the browser! ->writeHTML(); /* This will output the following html Zen Coding and jQuery - Server Side This has all been implemented as a php port of JavaScript libraries send a comment $(function(){ alert("just decided to use some jQuery") }) */ ?> Any help is much appreciated
