[site]: datascience
[post_id]: 38386
[parent_id]: 38354
[tags]: 
Deep Learning frameworks operate at 2 levels of abstraction: Lower Level : This is where frameworks like Tensorflow, MXNet, Theano, and PyTorch sit. This is the level where mathematical operations like Generalized Matrix-Matrix multiplication and Neural Network primitives like Convolutional operations are implemented. Higher Level : This is where frameworks like Keras sit. At this Level, the lower level primitives are used to implement Neural Network abstraction like Layers and models. Generally, at this level other helpful APIs like model saving and model training are also implemented. You cannot compare Keras and TensorFlow because they sit on different levels of abstraction. I also want to take this opportunity to share my experience of using Keras: I do not agree that Keras is only useful for basic Deep Learning work. Keras is a beautifully written API. The functional nature of the API helps you completely and gets out of your way for more exotic applications. Keras does not block access to lower level frameworks. Keras results in much more readable and succinct code. Keras model Serialization/Deserialization APIs, callbacks, and data streaming using Python generators is very mature. Keras has been declared the official high level abstraction for TensorFlow.
