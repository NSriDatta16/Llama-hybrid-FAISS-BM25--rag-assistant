[site]: stackoverflow
[post_id]: 744809
[parent_id]: 744761
[tags]: 
Most of the information about the state of the class should always be up-to-date as a side effect of manipulating the data. For example the Count property is based on the internal storage of the data (ie. the array length). Other properties that depend on certain conditions of the state of the class may need to be calculated. For exaple a ContainsValidOrder property might depend on orders in the class. For those properties you have to evaluate the use of the class and decide if the cost of calculating the value as you add and remove items from the collection is cheaper then scannig the entire collection each time the property is accessed. The .NET guidlines do suggest however that properties do not execute complex code and that repeated access of the property does not have any side-effects or performance implications. So for properties that represent calculated data it might be better to use a method GetXXX. This indicates to the developer using your library that 1. the calculation might take some time and 2. they should hold on to the value for the duratino of their task.
