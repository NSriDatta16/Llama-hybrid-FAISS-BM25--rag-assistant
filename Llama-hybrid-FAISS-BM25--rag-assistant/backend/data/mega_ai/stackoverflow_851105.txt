[site]: stackoverflow
[post_id]: 851105
[parent_id]: 839051
[tags]: 
I don't understand. The client should already have a store of trusted root certificates that they can use to authenticate your server. If they don't, what's the point of server authentication? An anonymous (and deprecated) cipher suite, like "TLS_DH_anon_WITH_AES_128_CBC_SHA" , provides privacy. However, this configuration is vulnerable to man-in-the-middle attacks. On some internal networks, it might be secure, but in general, some sophisticated interlock protocol at the application layer would be needed for authentication. Update to respond to comment: If an organization uses a server certificate from a well-known certifying authority (that is, one included in the built-in key store), they don't have to take care of distribution themselves. (Although, in a high-security application, some organizations do take extra steps to verify the integrity of these certificates.) If they don't get a "real" certificate—perhaps using a self-signed cert—then for the sake of security the organization must provide some out-of-band mechanism to distribute the certificate and ensure that it has not been altered.
