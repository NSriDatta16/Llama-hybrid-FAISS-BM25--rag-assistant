[site]: stackoverflow
[post_id]: 5366504
[parent_id]: 
[tags]: 
MVC3 Validation with Lightspeed

My ORM (LightSpeed) generates this for Animals table, with Name and Age. Using MVC3 and Razor [Serializable] [System.CodeDom.Compiler.GeneratedCode("LightSpeedModelGenerator", "1.0.0.0")] [System.ComponentModel.DataObject] [Table(IdColumnName="AnimalID", IdentityMethod=IdentityMethod.IdentityColumn)] public partial class Animal : Entity { [ValidatePresence] [ValidateLength(0, 50)] private string _name; [ValidateComparison(ComparisonOperator.GreaterThan, 0)] private int _age; public const string NameField = "Name"; public const string AgeField = "Age"; [System.Diagnostics.DebuggerNonUserCode] [Required] // ****I put this in manually to get Name required working public string Name { get { return Get(ref _name, "Name"); } set { Set(ref _name, value, "Name"); } } [System.Diagnostics.DebuggerNonUserCode] public int Age { get { return Get(ref _age, "Age"); } set { Set(ref _age, value, "Age"); } } With [Required] attribute added: With no [Required] attribute added: (notice LightSpeed strange rendering of validation) With name filled in: In images above - the validation at the top is LightSpeed (put into ValidationSummary) and at the side is MVC3 (put into ValidationMessageFor) Am only using Server Side validation currently. Question: How do I get LightSpeed validation working well in MVC3? I think it is something in this area http://www.mindscapehq.com/staff/jeremy/index.php/2009/03/aspnet-mvc-part4/ For the server side validation - you will want to use a custom model binder which emits the errors from LightSpeed validation more precisely rather than the leveraging the DefaultModelBinder behavior. Have a look at either directly using or adapting the EntityModelBinder from the community code library for Mvc http://www.mindscapehq.com/forums/Thread.aspx?PostID=12051
