[site]: crossvalidated
[post_id]: 134226
[parent_id]: 
[tags]: 
Convolutional Neural Network Performance - Cats & Dogs

I am currently experimenting with a Convolutional Neural Network, trying to get a good performance on the Cats & Dogs challenge at Kaggle. By now, the best result I could get using my network was 77% accuracy (after ~30 epochs the network starts to overfit heavily). I feel that it should be possible to get better results. (Reaching about 85-90% shouldn't be that big of a deal, should it?) Image preprocessing: Downsample all images: smaller edge = 96px Cut out the center part of the image, if it is not already quadratic. Network architecture: I did the most recent run with these parameters, although I achieve about the same performance with a network that is a lot smaller # HYPERPARAMETERS C1 = (50, 1, 9, 9) # 50 kernels of shape 9x9 C2 = (80, 50, 5, 5) # 80 kernels of shape 5x5 C3 = (100, 80, 3, 3) # 100 kernels of shape 5x5 POOL1 = (2, 2) # 2 by 2 max pooling POOL2 = (2, 2) # 2 by 2 max pooling POOL3 = (2, 2) # 2 by 2 max pooling H1OUT = 900 #number of neurons in hidden layer 1 H2OUT = 1200 #number of neurons in hidden layer 2 For the Convolutional layers I am using tanh as activation function, the hidden layers operate using Rectified linear. Training: I'm training the network on 20000 images (validating the results on 2500) Batch Size: 128 Regularization: L2 on all weights across the network Learning Rate: Linearly decreasing from 0.02 to 0.001 (50 epochs) What do you guys think I should try next? Increasing the number of filters doesn't seem to do the trick. I thought about increasing the number of training images by flipping or warping the images I already got.
