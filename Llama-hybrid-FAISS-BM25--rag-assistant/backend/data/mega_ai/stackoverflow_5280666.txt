[site]: stackoverflow
[post_id]: 5280666
[parent_id]: 5280604
[tags]: 
Since I assume you want to query and update that data I would even suggest an ORM like Entity Framework - it's easy to get started and the basic stuff like querying and updating will be very straightforward if you have worked with LINQ before - saves you the hassle of writing your own SQL queries. This also will allow you to easily extend your model later on should you decide to do so. Edit: There are self-contained light-weight alternatives that would still allow you to use LINQ: SQL Server Compact : Microsoft SQL Server Compact is a free SQL Server embedded database ideal for building standalone and occasionally connected applications for mobile devices, desktops, and Web clients. Here' an article that describes how to get LINQ to SQL to work on it. Apparently you can also use LINQ to Entities on it but there's quirks (such as design-time support) that you'll have to work around. SQLLite : SQLite is a software library that implements a self-contained, serverless, zero-configuration, transactional SQL database engine. SQLite is the most widely deployed SQL database engine in the world. There's a LINQ provider for it called DBLinq As @Robert Harvey pointed out in his answer there's (almost) full support for EF since there's an ADO.NET provider for SQLLite: Support for the ADO.NET 3.5 Entity Framework Supports nearly all the entity framework functionality that Sql Server supports, and passes 99% of the tests in MS's EFQuerySamples demo application.
