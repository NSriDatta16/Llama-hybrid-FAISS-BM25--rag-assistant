[site]: datascience
[post_id]: 128250
[parent_id]: 
[tags]: 
Options for representing the following "conditional rules" in some data, and if categorical data science would be helpful?

I am new to data science, so I am hoping the following question is a reasonably elementary exercise for someone more experienced. Let us say I have $n$ categories of data. Each category is a collection of $k_i$ distinct values, for $i \in n$ . For example: names = ["Alfred", "Zhang", "Moses"] locations = ["Brasil", "moon", "Pacific Ocean", "Antarctica"] I will refine the presentation of the problem I have in mind as I myself understand it better. A key aspect of my example above is that there is no restriction on what kinds of combinations are allowed. In whatever context we're doing this in, it's perfectly acceptable to generate the data point ("Alfred", "Pacific Ocean") , and ("Moses", "moon") . (You could interpret this as saying, perhaps, somewhere we plan to send each person.) Mathematically, this could be seen as a simple set product. If $A = (set of names)$ , and $B = (set of locations)$ , then $A \times B$ generates the ordered pairs of data elements we seek. (Side note, I'm not sure the most rigorous definition of the set product - ZFC includes the axiom of pairing, but there is also Kuratowski's definition in terms of power sets; I'm not sure how they relate to one another right now.) In programming, maybe there is some most standard algorithm to enumerate all possible combinations - some kind of recursive iteration or something. (Maybe via the Curry-Howard isomorphism, we can easily derive the algorithm from the set theory notation.) I am trying to get a clear understanding of the nature of the algorithm that most canonically represents a slightly different situation - in which the permitted values for category $i + 1$ vary based on the value of category $i$ . For example, imagine that Alfred will only go to Brasil or Antarctica, Zhang will go anywhere, and Moses will only agree to stay on the moon. Mathematically, these sound like functions: $willtravel(Alex) = (Brasil, Antarctica)$ , $willtravel(Moses) = (moon)$ , and so on. What is the most appropriate algorithm for enumerating the allowed combinations of data, once you start having several categories of data (the above example has only 2), and I assume there are mathematical proofs that the algorithm for enumerating the combinations depends on the characteristics of the rules. For example, if the allowed values for an element in category $n + 1$ only ever depends on the current value in category $n$ , I assume this is different from a system in which the rules could be expressed in terms of multiple variables, i.e., $willtravel(person, mood)$ , and so on. I feel like it probably connects with concepts in logic like "decidability". I'm looking for some clear theorems that explain clean ways to handle different systems of rules, depending on the complexity of the rules. Thanks.
