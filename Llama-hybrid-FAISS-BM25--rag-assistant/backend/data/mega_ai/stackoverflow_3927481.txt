[site]: stackoverflow
[post_id]: 3927481
[parent_id]: 3893687
[tags]: 
I found two approaches which may help you. The more elegant one is to force your base to subclass by usage of a generic method without type inference. It could look something like (I'm not a VB.Net programmer so there may be some errors): Sub SetFlat(of T) (myVehicle As T) T.IsFlatbed = True End Sub // later you can just call SetFlat(Of Truct)(myVehicle) Of course this implies that you need to know the exact type of myVehicle object before calling SetFlat function. Also SetFlat can only be called with classes which do have the IsFlatbed property. Some more details about generics in VB.Net: http://www.15seconds.com/issue/040526.htm http://msdn.microsoft.com/en-us/library/w256ka79%28VS.80%29.aspx Generic Functions in VB.NET A second (dirty) solution is to use .Net reflection to detect if the myVehicle object contains the IsFlatbed property. You may find more details on: http://msdn.microsoft.com/en-us/magazine/cc163750.aspx http://visualbasic.about.com/od/usingvbnet/a/proginfo.htm http://www.eggheadcafe.com/community/aspnet/14/14989/reflection.aspx
