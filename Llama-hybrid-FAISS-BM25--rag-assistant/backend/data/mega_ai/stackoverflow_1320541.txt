[site]: stackoverflow
[post_id]: 1320541
[parent_id]: 1319891
[tags]: 
Here is Clojure pretending to be a more functional language. This is fully tail-recursive, btw, and includes leading zeroes. (defn moving-average [period values] (loop [[x & xs] values window [] ys []] (if (and (nil? x) (nil? xs)) ;; base case ys ;; inductive case (if ( Usually I put the collection or list parameter last to make the function easier to curry. But in Clojure... (partial moving-average 4) ... is so cumbersome, I usually end up doing this ... #(moving-average 4 %) ... in which case, it doesn't really matter what order the parameters go.
