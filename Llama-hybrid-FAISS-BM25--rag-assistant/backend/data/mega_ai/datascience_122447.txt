[site]: datascience
[post_id]: 122447
[parent_id]: 122435
[tags]: 
To answer your question: If your input features are all categorical and your target feature is discrete numerical, you can use a variety of machine learning algorithms that can handle this type of data. Following are the few things that you look into: Data Preprocessing : Convert your categorical features into numerical values. This can be done through various encoding techniques like One-Hot Encoding, Label Encoding, Ordinal Encoding, etc. Feature Scaling : Although this step is not necessary for all algorithms, it can be beneficial for some, like K-Nearest Neighbors (KNN) or Support Vector Machines (SVM). Model Selection : Choose a machine learning model that can handle discrete numerical output. Some options include Decision Trees, Random Forests, Gradient Boosting, etc. These models can handle both categorical inputs and discrete numerical outputs. Model Training : Train your selected model on your preprocessed data. Model Evaluation : Evaluate your model using appropriate metrics. Since your target feature is discrete numerical, you can use metrics like Mean Absolute Error (MAE), Mean Squared Error (MSE), or Root Mean Squared Error (RMSE). Prediction : Use your trained model to make predictions on new data. If your model is giving exact numerical values for known data, it might be overfitting. This means that the noise or random fluctuations in the training data is picked up and learned as concepts by the model. You can try to reduce overfitting by increasing the size of your training data, reducing the complexity of your model or using techniques like cross-validation, regularization, or early stopping. Hope I answered your question.
