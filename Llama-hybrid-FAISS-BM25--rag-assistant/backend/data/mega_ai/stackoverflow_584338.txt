[site]: stackoverflow
[post_id]: 584338
[parent_id]: 
[tags]: 
How to push diffs of data (possibly JSON) to a server?

I am going to be periodically pushing a set of text-based data from a web-page to a server , probably as JSON. For every push, none, some or all of the data may have changed. To reduce the amount of data I have to send over the wire I would want to only send a diff of the changes in each push. Do you know of any pre-made solutions / tools / libraries that: Dynamically build a diff of JSON as changes are made to it (to avoid storing oldJson and newJson and doing a full diff every push) written in JavaScript (i.e. for the client-side) Patch an existing chunk of JSON with a JSON diff on the server side, written on any platform that isn't Java or .NET^ (needs to run on linux, Java's not an option for the env I'm in, neither is Mono). Moreover, is this even the best way of going about this particular problem? Is there a better way to push chunks of text data around? Edit: Some clarifications: The probable data stucture would be basically a fairly flat (in the sense that it's hightly connected so any links will be ID-based references not actual nested data) collection of nodes. Nodes contain a collection of trees, the leaves of these trees contain actual 'primative' data, such as numbers, strings and Ids. Most data change will be in the leaves. Most of the leaf data will be very small (primatives or less than a paragraph of text) but some will be very long (pages of "rich" text). For the moment we can consider this strictly one-to-one, i.e. there is only one client connected (in read / write) to any particular data structure. It would be nice to keep the server as minimal as possible in terms of complexity-- the idea is to move away from having a server as much as possible. While HTML5 is still mostly unsupported I still need one to store data with though... ^ That that you would expect on random shared hosting. I'm talking your good friends PHP, Python, PERL, Ruby, those fullas. Or, something that could be easily installed on random shared hosting.
