[site]: stackoverflow
[post_id]: 4702721
[parent_id]: 
[tags]: 
How much can django.forms help me?

I have the following model which forms a Many-To-Many relationship between Persons and "Eprint" publications. Each person's profile page will show the eprints referenced through this table, but only if show=True, and in the numeric order of the 'order' field: class UsersEprint(models.Model): person = models.ForeignKey(Person) eprint = models.ForeignKey(emodels.Eprint) # this has a .title field show = models.BooleanField(default=True) order = models.IntegerField(default=0) Now this can all be managed from the admin, but I want a user-friendly form to go in the users profile page on the site. Ideally I want a table with a row for each of the person's eprints, giving: the eprint title (which can't be edited), a tickbox for 'show', and a numeric field for 'order'. A 'delete' tickbox would be useful too. The default approach with modelformsets gives a dropdown chooser for the eprint listing all the eprints - which is because the form doesn't know I don't want to edit this. I've tried various approaches with overriding fields and widgets but it all seems a bit kludgy, and I'm going to have end up rendering the form in the template line-by-line anyway, it seems. The next complication is that instead of having the user type numbers to reorder the table rows, I could use a javascript system - either drag'n'drop rows or move up/move down arrows. When the user submits the form, the new order is obtained. My question is, at what point do I go out of the scope of django's form handling? Should I just drop import django.forms and manage it all myself? Or are there still useful bits in there for even the most awkward forms?
