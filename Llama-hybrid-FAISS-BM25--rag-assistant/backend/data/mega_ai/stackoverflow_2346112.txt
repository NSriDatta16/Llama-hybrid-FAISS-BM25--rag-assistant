[site]: stackoverflow
[post_id]: 2346112
[parent_id]: 2346071
[tags]: 
fragments don't create tokens, and placing them in parser rules will not give desirable results. On my test box, this produced (I think!) the desired result: program : PRONOUN+ ; PRONOUN : 'i' | 'me' | 'my' | 'mine' | 'you' | 'your'| 'yours'| 'yourself' | 'he' | 'she' | 'it' | 'his' | 'hers' | 'its' | 'him' | 'her' | 'himself' | 'herself' | 'we' | 'us' | 'our' | 'ours' | 'yourselves' | 'they'| 'them'| 'their'| 'theirs' | 'themselves' ; WS : ' ' { $channel = HIDDEN; }; WORD : ('A'..'Z'|'a'..'z')+ { $channel = HIDDEN; }; In Antlrworks, a sample "i kicked you" returned the tree structure: program -> [i, you] . I feel compelled to point out that Antlr is overkill for stripping the pronouns out of a sentence. Consider using a regular expression. This grammar is not case insensitive. Expanding WORD to consume everything except your dictionary of PRONOUNs (such as puncuation, etc) may be a bit tedious. Will require sanitization of input. --- Edit: In response to the second OP: I have altered the original grammar to make ease of parsing. The new grammar is: grammar pfinder; options { backtrack=true; output = AST; } tokens { PROGRAM; } program : (WORD* p+=PRONOUN+ WORD*)* -> ^(PROGRAM $p*) ; PRONOUN : 'i' | 'me' | 'my' | 'mine' | 'you' | 'your'| 'yours'| 'yourself' | 'he' | 'she' | 'it' | 'his' | 'hers' | 'its' | 'him' | 'her' | 'himself' | 'herself' | 'we' | 'us' | 'our' | 'ours' | 'yourselves' | 'they'| 'them'| 'their'| 'theirs' | 'themselves' ; WS : ' ' { $channel = HIDDEN; }; WORD : ('A'..'Z'|'a'..'z')+; I'll explain the changes: Backtracking is now required to solve the parser rule program. Perhaps there's a better way to write it which doesn't require backtracking but this is the first thing that popped in to my mind. An imaginary token PROGRAM has been defined to group our pronouns. Each matched program is added to Antlr var $p and is rewritten in AST under the imaginary rule. The interpreter code may now use a CommonTree to collect matched pronouns The following is written in C# (I don't know Java) but I wrote it with the intent that you'll be able to read and understand it. static object[] ReadTokens( string text ) { ArrayList results = new ArrayList(); pfinderLexer Lexer = new pfinderLexer(new Antlr.Runtime.ANTLRStringStream(text)); pfinderParser Parser = new pfinderParser(new CommonTokenStream(Lexer)); // syntaxTree is imaginary token {PROGRAM}, // its children are the pronouns collected by $p in grammar. CommonTree syntaxTree = Parser.program().Tree as CommonTree; if ( syntaxTree == null ) return null; foreach ( object pronoun in syntaxTree.Children ) { results.Add(pronoun.ToString()); } return results.ToArray(); } Calling ReadTokens("i kicked you and them") returns array ["i", "you", "them"]
