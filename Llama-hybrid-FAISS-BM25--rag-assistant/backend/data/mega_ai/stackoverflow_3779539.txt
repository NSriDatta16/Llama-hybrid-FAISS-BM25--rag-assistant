[site]: stackoverflow
[post_id]: 3779539
[parent_id]: 3779514
[tags]: 
You should loop through the array and use an index / boolean flag to store whether or not the book is found. Then print the message in the end, based on the index / flag value. int foundAtIndex = -1; for(int i = 0; i = 0) System.out.println("Book Found!"); else System.out.println("Book not Found!"); Alternatively (unless your assignment specifically requires using an array) you should prefer a Set , which can do the search for you with a single call to contains() . How should I think of it in Object Oriented way? When looking at a single method, there is not much difference between procedural and OO style. The differences start to appear at a higher level, when trying to organize a bunch of conceptually related data and methods that operate on these. The OO paradigm is to tie the methods to the data they operate on, and encapsulate both into coherent objects and classes. These classes are preferably representations of important domain concepts. So for your book store, you may want to put all book related code into your Book class. However, the above search method (and the collection of books it operates on) is not related to any particular book instance, so you have different choices: put both the collection of books and the search method into Store (probably as regular members), or put them into Book as static members. The first choice is more natural, so I normally would prefer that. However, under specific circumstances the second option might be preferable. In (OO) design, there are hardly ever clean "yes/no" answers - rather tradeoffs between different options, each having their own strengths and weaknesses.
