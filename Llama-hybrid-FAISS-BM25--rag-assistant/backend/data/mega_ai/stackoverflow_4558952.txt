[site]: stackoverflow
[post_id]: 4558952
[parent_id]: 4546881
[tags]: 
Boy, that's quite a question I doubt a quick paragraph would answer adequately. IN terms of what users expect, I assume you mean which locale (language/country mostly) to use or to choose. It's called "locale negotiation' and there are a few standard ways of presenting it. Look at what google or ikea do, you'll get a basic idea : which language to use, which settings for basic items like time format, currency, numbers formatting, etc. The i18n step is mostly a software engineering step and you have to take into account a bunch of stuff. Depending on your target locales (when language/countries) you want to address, you work is going to be more or less encompassing. For instance, if you stay with France Italy Germany Spain (FIGS in 1i8n parlance), you by-pass a bunch of issues, like Hebrew left to right, Japanese imperial calendar, UI redesign for left to right languages etc. Best practices include dealing with locale-sensitive methods (methods which may give you troubles for a particular language/country locale), like text ordering (alphabets are not the same everywhere, so is the order in which we look for words). They also include putting hard code user visible text in resource files that translators can deal with and your software can read depending on the locale. You also have to handle other resources, such as video or sound or images, with a minimum framework to get the right one depending on the locale. You may have to deal with i18n issues in databases or in source code (most of the work), and then depending on your application, some of the behavior may have to be modified (a la strategy design pattern for instance). An example would be the taxes in the US is computed quite differently than in, say, Germany. I don't know if you'd like more on the subject. It's a start anyways.
