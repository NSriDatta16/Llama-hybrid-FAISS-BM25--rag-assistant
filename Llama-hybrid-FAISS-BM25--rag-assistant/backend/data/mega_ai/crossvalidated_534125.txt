[site]: crossvalidated
[post_id]: 534125
[parent_id]: 
[tags]: 
Can't an LSTM count the number of cycles of the input?

Can an LSTM count number of cycles? Or, equivalently predict a linear trend from a sinusoidal input? I have tried to train an LSTM network on a problem that I supposed would be easy for it. The dataset is composed of just one sequence. The input is composed of 100 cycles of two sinusoid shifted by $\pi/2$ , discretized at 100 points per cycle: $x(t) = [\cos(2 \pi t/100), \sin(2 \pi t/100)]; t = 0, 1, 2, ..., 10000$ . The output I would like to fit is a linear function of $t$ : $y(t) = t/10000; t = 0, 1, 2, ..., 10000$ . That is, $y$ counts the number of cycles (divided by 100) of the input sequence $x$ . The best result I could obtain using during the train, using the mean square error as loss function, predicts an output $\hat{y}$ which is a sinusoid of small amplitude oscillating around 0.5 (which is the average of $y(t)$ ). Is an LSTM network really not able to model this relationship between $x$ and $y$ ? Is any other recurrent neural network able of doing so?
