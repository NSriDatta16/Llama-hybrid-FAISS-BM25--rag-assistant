[site]: stackoverflow
[post_id]: 4333976
[parent_id]: 4199710
[tags]: 
The following method will be use full to get the font size for specific string for specific rectangle (area). -(float) maxFontSizeThatFitsForString:(NSString*)_string inRect:(CGRect)rect withFont:(NSString *)fontName onDevice:(int)device { // this is the maximum size font that will fit on the device float _fontSize = maxFontSize; float widthTweak; // how much to change the font each iteration. smaller // numbers will come closer to an exact match at the // expense of increasing the number of iterations. float fontDelta = 2.0; // sometimes sizeWithFont will break up a word // if the tweak is not applied. also note that // this should probably take into account the // font being used -- some fonts work better // than others using sizeWithFont. if(device == IPAD) widthTweak = 0.2; else widthTweak = 0.2; CGSize tallerSize = CGSizeMake(rect.size.width-(rect.size.width*widthTweak), 100000); CGSize stringSize = CGSizeZero; if([[UIDevice currentDevice].systemVersion floatValue]>=7.0){ NSDictionary *stringAttributes = [NSDictionary dictionaryWithObject:[UIFont boldSystemFontOfSize:17] forKey: NSFontAttributeName]; stringSize = [_string boundingRectWithSize: tallerSize options:NSStringDrawingUsesLineFragmentOrigin attributes:stringAttributes context:nil].size; } else{ stringSize = [_string sizeWithFont:[UIFont fontWithName:fontName size:_fontSize] constrainedToSize:tallerSize]; } while (stringSize.height >= rect.size.height) { _fontSize -= fontDelta; stringSize = [_string sizeWithFont:[UIFont fontWithName:fontName size:_fontSize] constrainedToSize:tallerSize]; } return _fontSize; } Use this and get the font size and assign to the label.
