[site]: stackoverflow
[post_id]: 1843280
[parent_id]: 1841231
[tags]: 
First, definitely look at your existing design and workload. If you can't optimize your OLTP side any further, I would totally go to a Kimball data warehouse methodology. Update your data on a regular database using SSIS or whatever and transform your data into stars. What you should find is that your reporting performance should improve drastically and not interfere with your production transactions on the OLTP/normalized side. This can improve to the point where you can even keep the two databases in very close sync using the spare cycles which were previously beeing eaten up by reporting on a normalized database schema which is not well suited to reporting. You can use triggers or scheduled tasks to keep the warehouse up to date relatively easily with more complex options available if you scale up. If your database is not terribly huge, this does not necessarily need to be in two databases, you could just use a different schema to keep them logically organized, and even if you split it, you can put views in your OLTP database to make them available without changing the database on your connection. The main benefits of having a separate database is to change your database-wide options, like collations or backup model (of course you can also use file groups to help with that).
