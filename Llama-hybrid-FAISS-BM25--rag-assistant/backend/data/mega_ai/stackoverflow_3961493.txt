[site]: stackoverflow
[post_id]: 3961493
[parent_id]: 3869928
[tags]: 
You can also have a glance at NDepend documentation about code metrics . Disclaimer: I am one of the developer of the tool NDepend. With the Code Rule and Query over LINQ (CQLinq) facility, it is possible to ask for code metric evolution/trending across two different snapshots in time of the code base. For example there is a default rule proposed: Avoid making complex methods even more complex illustrated by the screenshot below: Several metric trending rules are proposed like: Avoid decreasing code coverage by[enter link description here] 5 tests of types Types that used to be 100% covered but not anymore and also, since you mentioned Crap4J the metric C.R.A.P can be written with CQLinq, and the query could be easily tweaked to see the trending in C.R.A.P metric . Concerning the visualization of code metric, NDepend lets visualize code metrics values through an interactive treemap :
