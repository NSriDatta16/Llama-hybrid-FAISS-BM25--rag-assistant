[site]: stackoverflow
[post_id]: 526959
[parent_id]: 507144
[tags]: 
You can't. As Clark says, Objective-C does not support multiple inherritance. This is because the designers believe that the advantages of multiple inherritance do not justify the complexity and bad design it encourages. Instead, they have included something that will meet your needs. You can declare a 'protocol' using the @protocol directive. A protocol describes a set of methods a class responds to but cannot add data to an object. To use a protocol, you include the protocol name in angle brackets after the super class. e.g. @protocol myProtocol -(void)myProtocolMethod @end @interface myClass : NSObject { int someData; } Will give an NSObject subclass that must also respond to (void)myProtocolMethod messages. That said, I would agree with Clark that you should review your design - having a single object that is both FlipView, HelloController does not sound good. You should probably implement a FlipController and use a third class (the model) to synchronise state between the two controllers - or if your app is very simple, have a single class that acts as a delegate for both FlipView and UIController.
