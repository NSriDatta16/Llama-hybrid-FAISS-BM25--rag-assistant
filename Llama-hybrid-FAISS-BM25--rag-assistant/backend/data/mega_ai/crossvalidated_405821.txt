[site]: crossvalidated
[post_id]: 405821
[parent_id]: 405755
[tags]: 
Categorical features can be nominal (no ordering, like race, gender, religion, etc.), or ordinal (ranked, like in Likert scale ). The method to feed in nominal variable s is by one-hot encoding , which is straight-forward. So in the case you have a Colour feature consisting of Red , Blue , Green , you would just create 3-1 binary features to represent the feature. Here 3 is the cardinality of your nominal feature. There are readily available pre-processing functions in many languages that do this for you, e.g. in Python . For ordinal variables, you could still feed in the feature using one-hot encoding. However, this would come at the expense of losing the ranking in between the feature values. For instance movie review as a feature can have the following values rubbish , bad , mediocre , good , sensational . In this case, you are better of using label-encoding , where you map each category to, e.g. an integer, in a way that preserves the distances between feature values. Finally, in answer to your question, the mapped values from label-encoding, which you would feed into neural networks or GLM's in general, do not need to be (and indeed cannot be) continuous.
