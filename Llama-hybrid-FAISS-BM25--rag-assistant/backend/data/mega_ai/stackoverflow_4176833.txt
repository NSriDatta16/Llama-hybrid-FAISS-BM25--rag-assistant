[site]: stackoverflow
[post_id]: 4176833
[parent_id]: 4175078
[tags]: 
First of all.. you could rename your class not to "Thread" is actually misleading. Now about your Class design, You'll first need to design your database schema. What is needed for storage? Relations? e.g. Table Topic ( Topic_ID, Title_ID, Author_ID, //Or User_ID Topic_Text, .... ) Table Commends ( Comm_ID, Topic_ID, //Relation 1..n Title_ID, Author_ID, Comm_Text, ... ) Then in your class schema, you could follow the "Strategy Pattern". in this case you build an abstract class called let's say DBObject ( DataBase's Object ), where every Object that has an instance in your Database is a DBObject ( Users, Topics, Commends etc ). A DBObject "has a" Database, so you also build a Database class that handles, executes and fetches every DB query. now you have your UML to start building your classes. and an example: $tpc = new Topic(); // initiates Topics variables, Begin Transaction $tpc->setCategory( "..." ); //Sets the Category_ID $tpc->setTitle( "..." ); //Create a Title in Title table, and Stores the Title_ID $tpc->setAuthor( "User_ID" ); //Check if Author Exist, Sets the Auth_ID $tpc->setText( $_POST['text'] ); //OMG Don't use the $_POST['text'] like this..!! $tpc->execute(); //Sets DateTime Creation, etc. Executes Query, Ends Transaction. Hope this'll help.. Enjoy..! :)
