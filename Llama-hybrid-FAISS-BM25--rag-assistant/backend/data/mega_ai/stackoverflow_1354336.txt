[site]: stackoverflow
[post_id]: 1354336
[parent_id]: 1353407
[tags]: 
I found another relevant quote, from Dinkumware . The last parameter must not have register storage class, and it must have a type that is not changed by the translator. It cannot have: * an array type * a function type * type float * any integer type that changes when promoted * a reference type [C++ only] So apparently, the problem is precisely that the parameter gets passed in a way different from how it is declared. Interestingly enough, they also ban float and short, even though those should be supported by the standard. As a hypothesis, it could be that some compilers have problems doing sizeof correctly on such parameters. E.g. it might be that, for int f(int x[10]) { return sizeof(x); } some (buggy) compiler will return 10*sizeof(int) , thus breaking the va_start implementation.
