[site]: stackoverflow
[post_id]: 3827056
[parent_id]: 3827012
[tags]: 
The Apple version is more memory efficient, because the detailViewController and it's view will be deallocated when it gets popped from the navigation controller's stack. Unlike the PragProg version, which retains the cabinetController in an instance variable (and therefore prevents it from being deallocated), the Apple code isn't storing a reference to the detail controller it's creating. The PragProg implementation might make sense if the user is likely to navigate frequently back and forth between the cabinet controller and the view controller that's retaining it, since that avoids a bit of CPU overhead incurred by repeatedly creating and deallocating the objects, but you'd have to profile it to see if that makes any meaningful difference (which it ordinarily wouldn't).
