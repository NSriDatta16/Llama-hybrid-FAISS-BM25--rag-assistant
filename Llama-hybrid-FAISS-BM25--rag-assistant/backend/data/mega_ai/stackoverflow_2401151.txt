[site]: stackoverflow
[post_id]: 2401151
[parent_id]: 
[tags]: 
Why do I get empty request from the Jakarta Commons HttpClient?

I have a problem with the Jakarta Commons HttpClient. Before my self-written HttpServer gets the real request there is one request which is completely empty. That's the first problem. The first problem is solved. It was caused by an unnecessary URLConnection! The second problem is, sometimes the request data ends after the third or fourth line of the http request: POST / HTTP/1.1 User-Agent: Jakarta Commons-HttpClient/3.1 Host: 127.0.0.1:4232 For debugging I am using the Axis TCPMonitor. There every things is fine but the empty request. How I process the stream: StringBuffer requestBuffer = new StringBuffer(); InputStreamReader is = new InputStreamReader(socket.getInputStream(), "UTF-8"); int byteIn = -1; do { byteIn = is.read(); if (byteIn > 0) { requestBuffer.append((char) byteIn); } } while (byteIn != -1 && is.ready()); String requestData = requestBuffer.toString(); Found a new way to process the stream. I read all header parameters and use the 'content-length' for reading the post data. InputStream is = mySocket.getInputStream(); if (is == null) { return; } BufferedReader in = new BufferedReader(new InputStreamReader(is, "UTF-8")); // Read the request line // ... // ... // Parse the header Properties header = new Properties(); if (st.hasMoreTokens()) { String line = in.readLine(); while (line != null && line.trim().length() > 0) { int p = line.indexOf(':'); header.put(line.substring(0, p).trim().toLowerCase(), line.substring(p + 1).trim()); line = in.readLine(); } } // If the method is POST, there may be parameters // in data section, too, read it: String postLine = ""; if (method.equalsIgnoreCase("POST")) { long size = 0x7FFFFFFFFFFFFFFFl; String contentLength = header.getProperty("content-length"); if (contentLength != null) { try { size = Integer.parseInt(contentLength); } catch (NumberFormatException ex) { } } postLine = ""; char buf[] = new char[512]; int read = in.read(buf); while (read >= 0 && size > 0 && !postLine.endsWith("\r\n")) { size -= read; postLine += String.valueOf(buf, 0, read); if (size > 0) { read = in.read(buf); } } postLine = postLine.trim(); decodeParms(postLine, parms); } How I send the request: client.getParams().setSoTimeout(30000); method = new PostMethod(url.getPath()); method.getParams().setContentCharset("utf-8"); method.setRequestHeader("Content-Type", "application/xml; charset=utf-8"); method.addRequestHeader("Connection", "close"); method.setFollowRedirects(false); byte[] requestXml = getRequestXml(); method.setRequestEntity(new InputStreamRequestEntity(new ByteArrayInputStream(requestXml))); client.executeMethod(method); int statusCode = method.getStatusCode(); Have anyone of you an idea how to solve these problems the problem? Alex
