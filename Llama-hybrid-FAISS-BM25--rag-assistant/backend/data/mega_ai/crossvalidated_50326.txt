[site]: crossvalidated
[post_id]: 50326
[parent_id]: 49953
[tags]: 
I would frame the problem as that of minimizing loss. The question is what is your true loss function? Does an incorrect prediction of profitable when the project lost \$1 cost as much as a prediction of profitable when the project lost \$1000? In that case your loss function is truly binary, and you're better of casting the whole thing as a classification problem. The regression function may still be one of your candidate classifiers, but but you should optimize it with the discrete loss function rather than the continuous one. If you have a more complicated definition of loss, then you should try to formalize it, and see what you get if you take the derivative. Interestingly, many machine learning methods actually optimize a discrete loss function by approximating with a continuous one, since a discrete loss function provides poor gradients for optimization. So you may end up casting it as a classification problem, since that's your loss function, but then approximating that loss function with the original continuous one.
