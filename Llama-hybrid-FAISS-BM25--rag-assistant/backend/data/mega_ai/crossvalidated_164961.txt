[site]: crossvalidated
[post_id]: 164961
[parent_id]: 164956
[tags]: 
This is a really interesting question! String vectorization is an area of active research right now, and a there's a ton of interesting approaches out there. First of all, ip addresses are hierarchical, and can be split by decimals into 4 categorical variables, each with 256 levels (watch out for IPv4 vs IPv6 though)! In a linear model, you can use the top level ip block directly, perhaps interacted with the 2nd, 3rd, and 4th block depending on how much data you have. In a tree-based model (e.g. a random forest or GBM), try converting the ip address to an integer and modeling it directly. A random forest or GBM should be able to identify interesting blocks of the ip range for your model. Most databases have functions to do this conversion, and I know there's a really good R package too. For email addresses, start by splitting on the @ symbol into address, domain. Domain is probably useful on it's own as a categorical variable, but you might want to further add a variable for .com vs .edu vs .gov, etc. (The urltools package in R can help you extract top-level domains— someone really needs to write an emailtools package!) For the address part (the bit before the @ symbol), you could use a character n-gram vectorizer to create a very wide, very sparse matrix which you can then use directly in your model, or can further process using something like SVD to reduce it's dimensionality. You could also try a word vectorizer, splitting on symbols like . , - , and _ . There's a TON of information in those 2 fields— good luck extracting it!
