[site]: stackoverflow
[post_id]: 4790718
[parent_id]: 4790219
[tags]: 
Sadly, (at least) three answers have quoted your while (!File.eof()) without commenting on the fact that this is just plain wrong. What you want is something like this: while (File>>value) { ++counter; sum += value; sumsqr += value * value; } average = sum/counter; variance = sumsqr/counter - average * average; The bug from using while (!File.eof()) is insidious -- you'll typically get results that look reasonable, and are actually fairly close to correct. The problem is that eof() doesn't become true until after you've attempted to read from the file, and the attempted read has failed. When it fails, value will still have the last value you read, so it'll act like the last number in the list was really there twice (e.g., if your file contained 21 numbers, your loop would execute 22 times, and on the 22 nd iteration, it would use the 21 st number again). This will throw your calculations off a bit, but usually not enough that it's immediately obvious -- nearly the worst possible kind of bug. Edit: Here's a complete test program: #include #include double variance(std::istream &File) { double value, average, sum, counter, sumsqr, variance; while (File>>value) { ++counter; sum += value; sumsqr += value * value; } average = sum/counter; variance = sumsqr/counter - average * average; return variance; } double variance2(std::istream &File) { double value, average, sum, counter, sumsqr, variance; while (!File.eof()) { ++counter; File >> value; sum += value; sumsqr += value * value; } average = sum/counter; variance = sumsqr/counter - average * average; return variance; } int main() { std::ifstream in("data.txt"); double v1 = variance1(in); in.clear(); in.seekg(0); double v2 = variance2(in); std::cout >value)\"" Here's some test data to go with: 1 2 3 4 5 6 7 8 9 10 When I run this on that data, I get: Using "while (file>>value)": 8.25 Using "while (!file.eof())": 9.17355 As a cross-check, I did the computation in Excel, using two sets of data: 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 8.25 10 9.173553719 The last line in each column is the result of a formula doing "VARP" on the preceding data. Note that my function matches with what Excel produces for the correct input data. The function using while (!file.eof()) matches with what Excel produces with the last number duplicated. I can't even begin to guess what's happening to make the loop run only once and read an incorrect value. Without being able to either guess at or reproduce the problem, I'm afraid I can't provide much in the way of useful suggestions about how to fix it.
