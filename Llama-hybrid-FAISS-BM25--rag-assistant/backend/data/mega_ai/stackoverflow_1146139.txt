[site]: stackoverflow
[post_id]: 1146139
[parent_id]: 1145672
[tags]: 
I guess you had to be there. Here are some possible points of failue: jQuery.clean: The function that makes the fragment that gets added to the DOM. This could be possible if the doctype is bad, or if the response HTML is flawed in some way that makes the clean function fail, thus leaving nothing to be inserted into the DOM. jQuery.fn.append: Adding the rendered response fragment to the DOM. Let's say that, because jQuery adds content to the DOM with appendChild rather than innerHTML, a bug causes IE to be unaware that the DOM has changed and not render the signaled changes. This would then get bypassed when you use innerHTML. It's not clear from your question if you have verified that the injected HTML is indeed there. This would be testable with something like this: $$.empty().append(data); alert( $$.parent()[0].innerHTML ); $$.show(); jQuery.fn.show(): Displaying the results. It's not clear from your question if the ultimate failure is because the content isn't being put into the DOM, or if it just isn't being displayed? If the container has a padding and a background, do you see it? The show function is more complex than just adding .style.display='block' on the element. It won't display the element if it thinks it is hidden, which IE may sometimes have strange ideas on. Does replacing show() with manually setting display change anything? It is clear that there is a difference in how IE treats the stage/dev page and the live site. My first steps would be to try to discover the difference between them. HTTP Headings, encoding, doctypes, extra scripts, extra css, even whitespace... Some seemingly minor difference is the cause of this bug. Inn any case, you should prepare a reduced test case of only the bare necessities required to replicate this bug. Even if you don't find a cure for it that you are comfortable with, the test case should be send along with your bug report to jQuery .
