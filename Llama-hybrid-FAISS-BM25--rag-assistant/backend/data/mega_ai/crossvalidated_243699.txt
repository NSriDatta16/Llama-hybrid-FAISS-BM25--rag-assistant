[site]: crossvalidated
[post_id]: 243699
[parent_id]: 
[tags]: 
LSTM for predicting probabilities

As a newbie to machine learning, I've been playing around with theano and deeplearning4j libraries and as an interesting application I thought of applying long short-term memory (LSTM) to horse racing. I have results of previous runs. For example: 10 horses, all the data about each horse: his weight, height, past performance... Then the result is time. (lowest for winner, highest for the last horse) My question is, if my data looks like this. Is it possible to get probabilities of each horse winning? As far as I understand it is not hard to train the network to give me the order of horses(horse A first, horse B second ...), but what about the probabilities of winning? Also, am I correct in wanting to apply LSTM to such problem? Wouldn't RBM be better suited to predict probability distribution?
