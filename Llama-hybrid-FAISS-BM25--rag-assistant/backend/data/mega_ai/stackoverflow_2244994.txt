[site]: stackoverflow
[post_id]: 2244994
[parent_id]: 
[tags]: 
Saving and Retrieving Entities of different types using LINQtoSQL

Disclaimer: Bit of a C# beginner - first Software Dev gig in awhile after being in QA for a couple years. I realize flavors of this question have been asked before (inheritance in LINQtoSQL and the like), but I'm hoping I ask the question differently. In my database, I will have a super-type of "Event" and multiple sub-types: Conference, Meeting and Appointment, for example. Event Id (PK) TypeId (FK EventTypes.Id) Title Conference Id (PK, FK Event.Id) Cost Topic Meeting Id (PK, FK Event.Id) Location Organizer Appointment Id (PK, FK Event.Id) Time Address I am using Rob Conery's MVC StoreFront application as a reference. He essentially gets data from the database and creates class objects, manually mapping Event.Id to db.Event.Id, etc. I'd like to do this with my Events data model - I'd like to retrieve all Events, and have a LINQ expression dynamic enough to create various event types based on some criteria (TypeId, for example). var result = from e in db.Events select new IEvent { // Little help? ;) }; It would be great to find a way to make it so each Event Type knows how to save itself and retrieve itself - I fear having to write the same code for each type, only varying the fields. I did see a question posed and someone answered with something like: public bool Save () {} The problem is, I'm not sure where to put this code. I'm also not sure if I should use an IEvent interface or an Event partial class. Edit I have made good progress - going from DB to Views all with IEvent :) ( this question helped a lot ) public class SqlEventRepository : IEventRepository public IQueryable getEvents() { // Get Events without doing a query for each type..possible? var eventType1 = {query}; var eventType2 = {query}; return {concat of all queries}; } public bool SaveEvent(IEvent) { // Can I avoid calling a save function for each type of event? }
