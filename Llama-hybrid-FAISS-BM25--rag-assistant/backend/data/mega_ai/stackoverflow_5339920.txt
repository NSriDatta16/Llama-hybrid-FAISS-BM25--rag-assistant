[site]: stackoverflow
[post_id]: 5339920
[parent_id]: 
[tags]: 
JQuery FullCalendar not rendering my events from my webservice, but will if added in manually!

EDITED to display new functionality: I'm having a real problem with my fullCalendar at the moment, and cannot for the life of me figure out what's going wrong? I'm using an ASP.NET generic handler to handle the AJAX request. My fullCalendar is initialised as so: $(document).ready(function() { var now = new Date(); $("#CalendarControl").fullCalendar({ defaultView: 'agendaWeek', allDaySlot: false, minTime: 7, maxTime: 20, firstDay: now.getDay(), events: "AjaxCalendarHandler.ashx?assessorIds=2" //events: [{id:1,title:"FLEPI01 Agent Office 1\\n17-21 London Street SP10 2NU",start:Date(1300620600000),end:Date(1300624200000),className:"2",allDay:false}] }); }) And my ashx file is: [WebService(Namespace = "http://tempuri.org/")] [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)] public class AjaxCalendarHandler : IHttpHandler, IRequiresSessionState { public void ProcessRequest(HttpContext context) { context.Response.ContentType = "application/json"; context.Response.Write(Instruction.GetCalendarData(context.Request.QueryString["assessorIds"], context.Request.QueryString["start"], context.Request.QueryString["end"])); } public bool IsReusable { get { return false; } } } Edited content is found here And that method is doing nothing more than this: public static string GetCalendarData(string assessorIds, string startString, string endString) { StringBuilder json = new StringBuilder(); json.Append("["); DateTime startDate, endDate; Double startDouble, endDouble; if (Double.TryParse(startString, out startDouble)) startDate = ConvertFromUnixTimestamp(startDouble); else if (!DateTime.TryParse(startString, out startDate)) throw new ArgumentException("Start date must be specified"); if (Double.TryParse(endString, out endDouble)) endDate = ConvertFromUnixTimestamp(endDouble); else if (!DateTime.TryParse(endString, out endDate)) throw new ArgumentException("End date must be specified"); DataAccess m_daccess = new DataAccess(); DataSet ds = new DataSet(); SqlParameter[] param = new SqlParameter[3]; param[0] = new SqlParameter("@AssessorIds", assessorIds); param[1] = new SqlParameter("@StartDate", startDate); param[2] = new SqlParameter("@EndDate", endDate); m_daccess.Fetch("up_Instruction_GetCalendarData", out ds, param); if (ds.Tables.Count > 0) { string jsonDelim = string.Empty; foreach (DataRow dr in ds.Tables[0].Rows) { fullCalendarDiaryEvent Event = new fullCalendarDiaryEvent(dr); json.Append(jsonDelim + Event.ToJSON()); jsonDelim = ","; } } json.Append("]"); return json.ToString(); } private class fullCalendarDiaryEvent { public int id { get; set; } public string title { get; set; } public double start { get; set; } // **Treat these as doubles, rather than dates, as the ToJSON() method deals with dates in a different manner to that required by fullCalendar!!! ** public double end { get; set; } public string className { get; set; } public bool allDay { get { return false; } } public fullCalendarDiaryEvent() { this.id = -1; this.title = string.Empty; this.start = 0; this.end = 0; this.className = string.Empty; } public fullCalendarDiaryEvent(int _id, string _title, DateTime _start, DateTime _end, string _className) : this() { this.id = _id; this.title = _title; this.start = ConvertToUnixTimestamp(_start); this.end = ConvertToUnixTimestamp(_end); this.className = _className; } public fullCalendarDiaryEvent(DataRow data) : this() { if (data["Id"] != null) this.id = Convert.ToInt32(data["Id"]); if (data["title"] != null) this.title = Convert.ToString(data["title"]); if (data["start"] != null) this.start = ConvertToUnixTimestamp(Convert.ToDateTime(data["start"])); if (data["end"] != null) this.end = ConvertToUnixTimestamp(Convert.ToDateTime(data["end"])); if (data["className"] != null) this.className = Convert.ToString(data["className"]); } } So, as you can see, the webservice is returning a string, that is EXACTLY the same as that commented line in the fullCalendar set-up script. My problem, is that when that string is returned via the webservice, nothing is displayed on the calendar, but if I pass the event in direct as an array, it works fine (as in , uncomment the events line). I don't know why this is the case, and there aren't actually any usuable samples for what the JSON content should look like IF returned from another page. My frustration levels are so high at the moment, I really need help.... Many thanks. P.S This is my first posting, so please be nice.
