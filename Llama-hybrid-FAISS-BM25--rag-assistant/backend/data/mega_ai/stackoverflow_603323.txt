[site]: stackoverflow
[post_id]: 603323
[parent_id]: 
[tags]: 
Populating child collection property with LINQ sub-query

I'm fairly new to LINQ in general but I've managed to figure things out so far to get the result I want/need. The LINQ2SQL query below produces the desired results in which there are Location objects, each with their own collection of Units. The initial variable declarations are done to setup the values that I need to query from and should not be relevant to my issue but are needed for context. The problem I'm having is that there are 400+ locations, and the current way I have the query structured, it is hitting the database for each one instead of one big query. This is causing performance to suffer greatly, taking 30+ seconds for the full result to come back which is unacceptable. I have a stored procedure SQL query that returns the results in only a second or two. Is there a way to restructure this query so that I'm not hitting the database for each location? I'm sure it's caused by the extra "ToList()" on the Units subquery but I don't know how to shape the result without the ToList(). Any performance tweaking would be a HUGE help. Thanks for any help! Dim curNames1 = (From ons In dc.organization_names _ Where ons.eff_date UPDATE (3/3/2009 10:58 AM): I managed to get the data back in one query using the query below but it's a flat table result. How can I shape this so that the organization stuff becomes hierarchical under each location? I believe I want to use something like "Group Join" but I'm not familiar with how that works. The location info is everything up to the "OrgID" column. I need to shape this data into a collection of Locations that each have a "Units" property which is a collection of the organizations that are at that location. Any guidance? Dim locationsquery = (From map In dc.MapBackgrounds Where map.MapID = 1 Let Locs = map.Schemes.SchemeLocations _ From SchemeLoc In Locs Join curLoc In curLocs1 On SchemeLoc.LocID Equals curLoc.location _ Join curName In curNames1 On curLoc.organization_id Equals curName.organization_id _ Join curStatus In curStatuses1 On curLoc.organization_id Equals curStatus.organization_id _ Join curCommand In curCommand1 On curLoc.organization_id Equals curCommand.organization_id _ Join curComponent In curComponent1 On curLoc.organization_id Equals curComponent.organization_id _ Select New With {.LocationID = SchemeLoc.LocID, .X = SchemeLoc.X, .Y = SchemeLoc.Y, _ .LocationName = SchemeLoc.Location.Location, _ .CountryID = SchemeLoc.Location.Countries.id, .CountryName = SchemeLoc.Location.Countries.country, _ .StateID = SchemeLoc.Location.State, .StateName = SchemeLoc.Location.States.state, .StateAbbrev = SchemeLoc.Location.States.state, _ .OrgID = curLoc.organization_id, _ .OrgName = curName.name, _ .OrgLocID = curLoc.location, _ .IconPath = curName.icon, _ .ConversionStatus = curStatus.status1.status, _ .CurCmd = curCommand.service_assigneds.service_assigned, _ .CurCompo = curComponent.components.compo})
