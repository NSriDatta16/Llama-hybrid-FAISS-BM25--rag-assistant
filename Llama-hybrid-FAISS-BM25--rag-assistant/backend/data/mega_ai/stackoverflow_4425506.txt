[site]: stackoverflow
[post_id]: 4425506
[parent_id]: 4425463
[tags]: 
The {2,3} at the end of your regex says to match only if that pattern matches at least 2, but no more than three characters. info is a 4 character TLD. There are other problems with your code as well, by the way: First, your "allowed characters" lists are needlessly complex. Instead of ([a-z]|[0-9]|\.|-|_) you could specify all the allowable characters in a single [] set, like [a-z0-9\.-_] . Second, the eregi() function is deprecated as of PHP 5.3 (click that link and you'll see a massive warning about it). I think you should be using preg_match() instead. Third, anytime you see something like this: if (condition) { return true; } else { return false; } You can shorten that to just this: return (condition); The reason for this is that the (condition) will return a boolean value, so when you drag it out, you're essentially saying this: if (true) { return true; } else { return false; } One last thing to note is that in most cases you don't really need to run a regex on an email address. It's usually better to just send a confirmation email to the address, and validate it if the addressee opens it and clicks a link in the email. That said, there's nothing wrong with running a quick sanity check on the address to make sure that it's at least mailable. In that case, though, you should just check that there is an @ character in the address somewhere (at at least the second position), with a . character somewhere after at least one more character, and at least two non- . characters after at . . The reason for this is that a proper regex to validate an email address according to the actual rules in the RFC describing them is hopelessly complex. People have made valiant attempts at creating such a regex, and they end up being literally pages long. Hope that helps.
