[site]: stackoverflow
[post_id]: 607866
[parent_id]: 606882
[tags]: 
My first answer suffered from the behavior that TAB completion no longer worked as expected in 'find-file. But the technique still seems useful (and if you like it, preferable). However, this solution has the same history behavior, but maintains the TAB completion as expected inside 'find-file. I'd be interested to know if there were a way to avoid advising find-file, but I couldn't find any introspection that gave me the knowledge that 'find-file was called. (defadvice find-file (around find-file-set-trigger-variable protect activate) "bind a variable so that history command can do special behavior for find-file" (interactive (let (inside-find-file-command) (find-file-read-args "Find file: " nil))) ad-do-it) (defadvice next-history-element (around next-history-element-special-behavior-for-find-file protect activate) "when doing history for find-file, use the buffer-list as history" (if (boundp 'inside-find-file-command) (let ((find-file-history (delq nil (mapcar 'buffer-file-name (buffer-list)))) (minibuffer-history-variable 'find-file-history)) ad-do-it) ad-do-it))
