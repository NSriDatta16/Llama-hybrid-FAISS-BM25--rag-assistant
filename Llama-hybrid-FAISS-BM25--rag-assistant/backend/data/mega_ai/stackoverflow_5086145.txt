[site]: stackoverflow
[post_id]: 5086145
[parent_id]: 
[tags]: 
What differences in OpenGl rendering are there between the Atrix 4G and other Android phones?

The reason I'm asking this is that our app (The Elements) runs fine on a Droid and a Nexus One, our two test phones, but not correctly on our recently acquired Atrix 4G. What draws is a skewed version of what should draw, with all the colors being replaced with alternating lines of cyan, magenta, and yellow (approximately), which leads us to believe that one of the primary colors for the sand particles that should show up is missing based on which line it's on. I'm sorry for the unclear description, we had images but since this account doesn't have 10 reputation we couldn't post them. Here is the code of our gl.c file, which does the texturing and rendering: /* * gl.c * -------------------------- * Defines the gl rendering and initialization * functions appInit, appDeinit, and appRender. */ #include "gl.h" #include unsigned int textureID; float vertices[] = {0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f}; float texture[] = {0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f}; unsigned char indices[] = {0, 1, 3, 0, 3, 2}; int texWidth = 1, texHeight = 1; void glInit() { //Set some properties glShadeModel(GL_FLAT); glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_FASTEST); //Generate the new texture glGenTextures(1, &textureID); //Bind the texture glBindTexture(GL_TEXTURE_2D, textureID); //Enable 2D texturing glEnable(GL_TEXTURE_2D); //Disable depth testing glDisable(GL_DEPTH_TEST); //Enable the vertex and coord arrays glEnableClientState(GL_VERTEX_ARRAY); glEnableClientState(GL_TEXTURE_COORD_ARRAY); //Set tex params glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); //Set up texWidth and texHeight texHeight, 0, GL_RGB, GL_UNSIGNED_BYTE, emptyPixels); //Free the dummy array free(emptyPixels); //Set the pointers glVertexPointer(2, GL_FLOAT, 0, vertices); glTexCoordPointer(2, GL_FLOAT, 0, texture); } void glRender() { //Check for changes in screen dimensions or work dimensions and handle them if(dimensionsChanged) { vertices[2] = (float) screenWidth; vertices[5] = (float) screenHeight; vertices[6] = (float) screenWidth; vertices[7] = (float) screenHeight; texture[2] = (float) workWidth/texWidth; texture[5] = (float) workHeight/texHeight; texture[6] = (float) workWidth/texWidth; texture[7] = (float) workHeight/texHeight; glMatrixMode(GL_PROJECTION); glLoadIdentity(); if (!flipped) { glOrthof(0, screenWidth, screenHeight, 0, -1, 1); //--Device } else { glOrthof(0, screenWidth, 0, -screenHeight, -1, 1); //--Emulator } dimensionsChanged = FALSE; zoomChanged = FALSE; } else if(zoomChanged) { texture[2] = (float) workWidth/texWidth; texture[5] = (float) workHeight/texHeight; texture[6] = (float) workWidth/texWidth; texture[7] = (float) workHeight/texHeight; zoomChanged = FALSE; } //__android_log_write(ANDROID_LOG_INFO, "TheElements", "updateview begin"); UpdateView(); //__android_log_write(ANDROID_LOG_INFO, "TheElements", "updateview end"); //Clear the screen glClear(GL_COLOR_BUFFER_BIT); //Sub the work portion of the tex glTexSubImage2D(GL_TEXTURE_2D, 0, 0, 0, workWidth, workHeight, GL_RGB, GL_UNSIGNED_BYTE, colors); //Actually draw the rectangle with the text on it glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_BYTE, indices); } Any ideas as to what the difference is between the Atrix 4G and other phones in terms of OpenGL or why our app is doing what it is in general are much appreciated! Thanks in advance. Here is an example of what it looks like: https://i.stack.imgur.com/noX4z.jpg
