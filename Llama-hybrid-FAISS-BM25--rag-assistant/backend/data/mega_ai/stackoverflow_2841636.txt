[site]: stackoverflow
[post_id]: 2841636
[parent_id]: 2829340
[tags]: 
Doing Things Manually If the error messages are being generated automatically and the list of exceptions behind the messages is not terribly large, you might just want to have a table that directly maps each error message type to the people who need to be notified. This should make it easy to keep track of exactly who/which-groups will be getting what types of messages and to update the routing of messages should you decide that some of the messages are being misdirected. Typically, a small fraction of the types of errors make up a large fraction of error reports. For example, Microsoft noticed that 80% of crashes were caused by 20% of the bugs in their software. So, to get something useful, you wouldn't even need to start with a complete table covering every type of error message. Instead, you could start with just a list that maps the most common errors to the right person and routes everything else to a person for manual routing. Each time an error is routed manually, you could then add an entry to the routing table so that errors of that type are handled automatically in the future. Document Classification Unless the error messages are being editorialized by people who submit them and you want to use this information when routing them, I wouldn't recommend treating this as a document classification task. However, if this is what you want to do, here's a list of reasonably good packages for document document classification organized by programming language: Python - To do this using the Python based Natural Language Toolkit (NLTK) , see the Document Classification section in the freely available NLTK book . Ruby - If Ruby is more of your thing, you can use the Classifier gem. Here's sample code that detects whether Family Guy quotes are funny or not-funny . C# - C# programmers can use nBayes . The project's home page has sample code for a simple spam/not-spam classifier. Java - Java folks have Classifier4J , Weka , Lucene Mahout , and as adi92 mentioned Mallet . Learning Rules with Weka - If rules are what you want, Weka might be of particular interest, since it includes a rule set based learner . You'll find a tutorial on using Weka for text categorization here .
