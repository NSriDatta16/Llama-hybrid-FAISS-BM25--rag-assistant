[site]: stackoverflow
[post_id]: 1210384
[parent_id]: 1139515
[tags]: 
I don't think AS/400 dates are stored internally as some number of days from an epoch date 1 (this is the more common term for what you are calling "zero date"). As Tracy Probst said, this is definitely NOT what date fields in native AS/400 physical files look like. 2 But that's immaterial if whatever method you are using to extract the data is giving it to you as the number of days since an epoch. Ideally, you should find out what the intended date is by looking directly at the AS/400, or asking someone who can. If the date on the AS/400 is 2009-07-30 and what you are getting is 40022, then you can be pretty confident the epoch date is Jan 1, 1900. If you are getting 40024, then the epoch is Dec 30, 1899. (Though it's of course best to compare a bunch of dates, preferably from different years to guard against possible use of Julian dates.) Also, as Tracy commented on his own answer, it's exceedingly common for dates to be stored in generic numeric fields (which is what I would guess if your retrieval method is reporting Decimal as the data type), in which case it really has nothing to do with DB2's internal date format anyway. You should be aware that by far the most common date formats stored in AS/400 numeric fields are the following, or variations thereof: yyyymmdd (Gregorian, ISO 4-digit year) mmddyy (Gregorian, U.S. 2-digit year) yyyyddd (so-called Julian, 4-digit year) yyddd (so-called Julian, 2-digit year) yymmdd cyymmdd (IBM's crazy invention with century flag) The ddd in the Julian dates is the number of days from the beginning of year. The c in IBM's crazy date is 0 for 19yy or 1 for 20yy. I have not heard of anyone who stores days-since-epoch on "The Four Hundred" but maybe you've encountered a convert from another platform. The mainframe heritage of the AS/400 strongly favors human-readable dates. 1 The AS/400 (now called IBM i) does have its own data type for dates, and this data type actually does consist internally of a number of days from an epoch. But that epoch is many thousands of years in the past , not somewhere near the turn of the 20th century, and not even near the beginning of the Common Era . IBM likes to call this number of days the Scaliger number , but for most people who study this stuff, it's called the Julian Day Number . As you may have noticed from the main part of my answer, IBM uses the word "Julian" to mean something completely different (and not even related to the Julian calendar ). Namely, IBM's so-called "Julian date" is really the ordinal date from ISO 8601 . 2 The internal format of the date data type is very low-level and mostly hidden from the user (including most programmers). The DSPPFM command, which ostensibly shows the "actual contents" of a file, is at least one step "too late": the value it reports has already been converted from the internal, 4-byte "Scaliger number" to a human-readable form.
