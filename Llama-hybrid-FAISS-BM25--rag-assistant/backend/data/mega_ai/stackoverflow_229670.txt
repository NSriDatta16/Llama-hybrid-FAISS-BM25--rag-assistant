[site]: stackoverflow
[post_id]: 229670
[parent_id]: 229656
[tags]: 
No you can't, because generics aren't covariant in C# at the moment. .NET itself has some support (for delegates and interfaces) but it's not really used yet. If you were returning IEnumerable instead of IEnumerator (and assuming .NEt 3.5) you could use Enumerable.Cast - but you'll currently need to write your own extension method, e.g. public static IEnumerator Upcast (this IEnumerator source) where TChild : TParent { while (source.MoveNext()) { yield return source.Current; } } Alternatively in your case you could use Cast earlier: return this.Map.Values.Cast ().GetEnumerator();
