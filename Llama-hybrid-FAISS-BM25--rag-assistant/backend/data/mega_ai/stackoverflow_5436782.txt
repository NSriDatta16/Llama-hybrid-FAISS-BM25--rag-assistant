[site]: stackoverflow
[post_id]: 5436782
[parent_id]: 
[tags]: 
program logic to speed up processing

I have setup an application to parse about 3000 files a day where each contains around 4000-5000 posts in xml format with like 100 fields. It involves a lot of cleanup and parsing but on average it takes around 6 seconds per post. Now I tried threading but because of the way I have everything set up with variables being overwritten etc...I have divided the files into different folders and just created copies of the program to run and access the assigned folder. It is running on a windows 2008 server with 16 G of memory and I am told I need to reprogram to speed up the process and also not use so much memory. Does anyone have any suggestions or does this process I have set up seem fine? I am the new guy and literally everyone thinks I am an idiot. For i As Integer = 0 To fileLists.Count - 1 Do Try If Not completeList.Contains(fileLists(i).ToString) AndAlso fileLists(i).EndsWith("xml") Then If fileLists(i).Contains("Fa") Then inputFile = New StreamReader(fileLists(i)) data = String.Empty infile = fileLists(i).ToString swriter.WriteLine(infile.ToString) swriter.Flush() Dim objFileInfo As New FileInfo(fileLists(i)) fileDate = objFileInfo.CreationTime Dim length As Integer = objFileInfo.Length data = inputFile.ReadToEnd If Not data Is Nothing Then parsingTools.xmlLoad(data) tempList.Add(fileLists(i)) completeList.Add(fileLists(i)) End If inputFile.DiscardBufferedData() End If End If End If Ok I am not sure what code to post because there is literally a lot of code. The above is the main module and onece it reads in data it tries to load it into xml document, if it fails it parses it using ordinary text parsing. It navigates to each field I need to extract and also connects to a couple of web services to get more content before all this is added together to create a new xml file. manager.AddNamespace("x", "http://www.w3.org/2005/Atom") manager.AddNamespace("a", "http://activitystrea.ms/spec/1.0/") Dim nodecount As Integer = xmlParser.getNodesCount(navigator, "x:entry", manager) For i As Integer = 1 To nodecount statid = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:id", manager) contentDate = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:published", manager) template = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:title", manager) title = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:source/x:title", manager) ctext = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:summary", manager) htext = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/a:object/x:content", manager) author = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:author/x:name", manager) authorUri = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:author/x:uri", manager) avatarUrl = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/a:author/x:link[@rel='avatar']/@href", manager) Next
