[site]: stackoverflow
[post_id]: 1131683
[parent_id]: 1131421
[tags]: 
Perfect hashing means that read access takes constant time even in the worst case. For inserting keys there are no worst-case guarantees, the time bounds are only true on average (or maybe amortized). To make insertion fast enough the second level hash table is chosen very large for the number of keys (k 2 ), large enough so that collisions become sufficiently unlikely. This is not a problem w.r.t. size because the first level hash distributes keys evenly so that on average second level hash tables are still small. The hash function for the second level tables are chosen at random from a set of parameterized hash functions.
