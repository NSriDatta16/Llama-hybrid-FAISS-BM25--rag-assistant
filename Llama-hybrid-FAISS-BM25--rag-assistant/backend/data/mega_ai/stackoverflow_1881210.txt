[site]: stackoverflow
[post_id]: 1881210
[parent_id]: 1846592
[tags]: 
Use C++ and if your neural network is simple enough don't use weird frameworks out there. Maybe 5 years ago I did a Sokoban solver using Reinforcement Learning. At the time we decided to go with Java and use some Agent Framework developed by an Italian University. First bad decision here was to use this Framework. It basically had bugs here and there which caused us to waste loads of time debugging the framework's code. Once we got to the point where everything was stable, training the Neural Network was just dead slow. We left it running overnight in a quite powerful machine and still it solved very few puzzles. Basically Java object allocation and garbage collection were damaging the whole performance of the system quite badly. We tweaked a bit the app by creating pools of objects instead of allocating them all the time but the program's performance was still an order of magnitude less than a similar assignment that was implemented in C++ using sockets directly. Hope this helps!
