[site]: stackoverflow
[post_id]: 1636755
[parent_id]: 
[tags]: 
How many different ways are there to concatenate two files line by line using Perl?

Suppose file1 looks like this: bye bye hello thank you And file2 looks like this: chao hola gracias The desired output is this: bye bye chao hello hola thank you gracias I myself have already come up with five different approaches to solve this problem. But I think there must be more ways, probably more concise and more elegant ways, and I hope I can learn more cool stuff :) The following is what I have tried so far, based on what I've learnt from the many solutions of my previous problems. Also, I'm trying to sort of digest or internalize the knowledge I've acquired from the Llama book. Code 1: #!perl use autodie; use warnings; use strict; open my $file1,' ) and defined(my $line2 = )){ die "Files are different sizes!\n" unless eof(file1) == eof(file2); $line1 .= $line2; $line1 =~ s/\n/ /; print "$line1 \n"; } Code 2: #!perl use autodie; use warnings; use strict; open my $file1,' ; open my $file2,' ; for (my $n=0; $n Code 3: #!perl use autodie; use warnings; use strict; open my $file1,' ) and defined(my $line2 = )) { chomp $line1; chomp $line2; my ($key, $val) = ($line1,$line2); $hash{$key} = $val; } print map { "$_ $hash{$_}\n" } sort keys %hash; Code 4: #!perl use autodie; use warnings; use strict; open my $file1,' ) and defined(my $line2 = )) { $line1 =~ s/(.+)/$1 $line2/; print $line1; } Code 5: #!perl use autodie; use warnings; use strict; open my $file1,' ; open my $file2,' ; while ((@file1) && (@file2)){ my $m = shift (@file1); chomp($m); my $n = shift (@file2); chomp($n); $m .=" ".$n; print "$m \n"; } I have tried something like this: foreach $file1 (@file2) && foreach $file2 (@file2) {...} But Perl gave me a syntactic error warning. I was frustrated. But can we run two foreach loops simultaneously? Thanks, as always, for any comments, suggestions and of course the generous code sharing :)
