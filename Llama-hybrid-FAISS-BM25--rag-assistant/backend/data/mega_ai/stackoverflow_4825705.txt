[site]: stackoverflow
[post_id]: 4825705
[parent_id]: 
[tags]: 
Calling QApplication::processEvents() inside an OpenMP loop?

Greetings all, In my QT application, I use OpenMP to parallelize loops.In the loop , I want to update progressbar values of the current QMainWindow. Following code snippet shows how I am trying to do this : #ifdef OPENMP_ENABLE #pragma omp parallel for #endif for (int i = 0; i setProgress(currProg); //change the value of QProgressBar QApplication::processEvents(); //update events,widgets //Do some processing } Here getMainWindow()->SetProgress() method simply change the values of the QProgressbar attached to statusbar of the QMainWindow. When compile and run the application with OpenMP enabled , it gives the following error: ASSERT failure in QCoreApplication::sendEvent: "Cannot send events to objects owned by a different thread. Current thread 161975a0. Receiver 'MainWindowClass' (of type 'MainWindow') was created in thread 13d78f8", file kernel\qcoreapplication.cpp, line 348 Any tips how to call QApplication::processEvents() with OpenMP ? Thanks in advance.
