[site]: stackoverflow
[post_id]: 4274861
[parent_id]: 4274806
[tags]: 
Ignoring the fact that Unit Tests should be written before/during development, I would say that it is possible. It might be a right bitch, but it is definitely possible. In this case the hardest part is going to be getting familiar with the code to understand what each method should be doing, rather than what the code says the code is doing. It makes no sense to test for bugs if you are writing the tests to pass with the current code. (This point goes back to the fact that the unit tests should be written before/during). You are probably going to end up getting a good percentage for code coverage, but you will probably end up missing some code execution paths and edge cases that should/would have been addressed when the methods were written. In this case, when a bug or error comes up, make sure that some tests are written for that case so that once that bug is fixed it can never be reintroduced into the application. I would say that it is fairly poor form on the part of the company to have written an entire project of that size and to have waited to dump writing the tests on to a graduate trainee after it has all been written, but that is just my opinion.
