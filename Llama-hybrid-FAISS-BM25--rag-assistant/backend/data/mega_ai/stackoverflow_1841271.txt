[site]: stackoverflow
[post_id]: 1841271
[parent_id]: 1836622
[tags]: 
For those who might be interested, here's the implementation of the given answer I'm using: void ShellBrowserDlgImpl::ViewModeDropDown(const CPoint & pt) { // ask the view for its context menu interface CComPtr pcm; if (FAILED(m_hresult = m_shell_view->GetItemObject(SVGIO_BACKGROUND, IID_PPV_ARGS(&pcm))) || !pcm) throw CLabeledException("Unable to query the context menu interface from the shell view: "); // create a blank menu to store it in CMenu menu; if (!menu.CreateMenu()) throw CContextException("Unable to create an empty menu in which to store the context menu: "); // populate the context menu if (FAILED(m_hresult = pcm->QueryContextMenu(menu, 0, SCRATCH_QCM_FIRST, SCRATCH_QCM_LAST, CMF_NORMAL))) throw CLabeledException("Unable to query the context menu for the current folder"); // obtain the "view" submenu to use as our drop-down menu //HACK: we assume that the view pop-up is the first entry (true in English) //TODO: We need some way to scan for the correct submenu // if we knew of a given command that exists under view - we could FindMenuContaining() // of if we could scan for an invariant command name using a similar technique // or we could possibly...? CMenu * pViewMenu = menu.GetSubMenu(0); // get the proper orientation for the drop-menu UINT uFlags = ::GetSystemMetrics(SM_MENUDROPALIGNMENT) ? TPM_RIGHTALIGN|TPM_HORNEGANIMATION : TPM_LEFTALIGN|TPM_HORPOSANIMATION; // display the menu to the user BOOL nCmdID = ::TrackPopupMenu(*pViewMenu, TPM_RETURNCMD|uFlags, pt.x, pt.y, 0, m_shell_view_hwnd, NULL); // check if the user canceled the menu if (!nCmdID) return; // create the command to execute CMINVOKECOMMANDINFO ici = {0}; ici.cbSize = sizeof(ici); ici.hwnd = m_shell_view_hwnd; ici.lpVerb = MAKEINTRESOURCE(nCmdID-1); //NOTE: not sure if the -1 is due to the position of the submenu we're pulling out, or something else - might be invalid for other OSes or languages if (FAILED(m_hresult = pcm->InvokeCommand(&ici))) throw CLabeledException("Unable to execute your command"); }
