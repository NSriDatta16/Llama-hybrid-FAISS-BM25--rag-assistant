[site]: stackoverflow
[post_id]: 4338126
[parent_id]: 4337974
[tags]: 
You can do it like this: Example: http://jsfiddle.net/patrick_dw/T5acF/4/ function animateThis() { var length = $('.bars div').stop().each(function(i, val) { $(val).delay(i * 2000).animate({ height: (i * 62) + 49 }, 2000, function() { if (i === (length - 1)) { $('.bars div').animate({ height: 0 }, 2000, animateThis); } }); }).length; } $(document).ready(function() { animateThis(); }); EDIT: Didn't notice the animation back to 0 . Fixed with this updated version. EDIT: Adding .stop() before the new .each() seemed to clean up the issue I was having. EDIT: Made it a little more efficient by replacing $(this).index() with i (which represents the same index). I'm obviously not paying close enough attention. You didn't want to animate the height back to 0 , but rather wanted to delay 5000 milliseconds, then immediately reset. Example: http://jsfiddle.net/patrick_dw/T5acF/5/ function animateThis() { var length = $('.bars div').each(function(i, val) { $(val).delay(i * 2000).animate({ height: (i * 62) + 49 }, 2000, function() { if (i === (length - 1)) { setTimeout(function() { $('.bars div').height(0); animateThis(); }, 5000); } }); }).length; } $(document).ready(function() { animateThis(); });
