[site]: stackoverflow
[post_id]: 4472852
[parent_id]: 4333121
[tags]: 
I used this piece of code some moths ago, but I cannot remember where I found it. It do the trick, after all, but is not an elegant solution. Bye, Nando ... //call the web service method var myResponseData = ws.CallMyWebServiceMethod(myRequestData) //call this method just after the web servcice method call, or it will not work! DiagnoseResponseProblem(); ... private void DiagnoseResponseProblem() { HttpContext hc = HttpContext.Current; string SoapResponse = null; string SoapRequest = null; // Post processing debugging pull out the actual soap message and debug it. if (hc != null) { SoapRequest = hc.Items["SOAPRequest"].ToString(); SoapResponse = hc.Items["SOAPResponse"].ToString(); } else { try { SoapResponse = System.Runtime.Remoting.Messaging.CallContext.GetData("SOAPResponse").ToString(); SoapRequest = System.Runtime.Remoting.Messaging.CallContext.GetData("SOAPRequest").ToString(); System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot("SOAPResponse"); System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot("SOAPRequest"); //NANDO: saving SOAP messages XmlDocument xmlDoc = new XmlDocument(); xmlDoc.LoadXml(SoapRequest); xmlDoc.Save(@"C:\temp\soap-request.xml"); xmlDoc = new XmlDocument(); xmlDoc.LoadXml(SoapResponse); xmlDoc.Save(@"C:\temp\soap-response.xml"); } // Ignore...most likely this system does not // have the remote message context setup. catch (Exception ex) { //... } } }
