[site]: stackoverflow
[post_id]: 1389371
[parent_id]: 1389287
[tags]: 
If I were in your position i'd consider rendering the table in an iframe. This way you could easily have the full table the size you want it, the user would have to scroll to see those columns. It is possible to attach a keyPress event to the iframe and hook those keypresses to scroll if you think it would make it easier for users. The second option I can think of is to make all the cells a bit narrower such that there is a little spare space on the edge of the screen. Add a class to each element of the table stating which row it is in (this makes it easier to reference them together). Attach a click event to the table and use event.target to get the cell clicked on (this will eat less browser memory than attaching event to each cell). That click event will then expand the width of that column to display all the data and add a class label to the corresponding cell in the first row. Then next time a cell in that column is clicked the table could check in the first row if it is expanded and decide if it should contract back to original or expand. In such a large table users are probably only interested in correlations between a few columns at a time, this method has the advantage that only those columns of interest to them are expanded at any given time. The third and final option I can think of is to use a humble div. Attach a click element as in the last paragraph, but this time have the event handler create a div over the cell of interest which is large enough to contain all the text and then make it disappear if that div is clicked on. The most appropriate solution depends on how the users are going to want to use the table data. If you want code snippets for any of the above suggestions, just drop in a comment and/or send me an email. Good luck! ;)
