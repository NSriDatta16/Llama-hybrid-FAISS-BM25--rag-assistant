[site]: stackoverflow
[post_id]: 4562337
[parent_id]: 4561951
[tags]: 
For this case, I think that join is better alternative than using a lock.. join is simple and elegant. But if you use a lock, you should also use notify method , and synchronized block and of course you need a lock object.. join sample , calling thread code ; t1.start(); System.out.println("waiting for thread t1"); t1.join(); System.out.println("thread t1 has finished its job"); lock sample : calling thread code ; Object lock = new Object(); synchronized(lock) { try { t1.start(); System.out.println("waiting for thread t1"); lock.wait(); System.out.println("thread t1 has finished its job"); }catch (InterruptedException ex) { e.printStackTrace(); } } Here is thread t1 code; synchronized(lock) { try { System.out.println("doing heavy work"); // ..... lock.notify(); }catch (InterruptedException ex) { e.printStackTrace(); } }
