[site]: stackoverflow
[post_id]: 2278298
[parent_id]: 2270308
[tags]: 
Sometimes if I want a brief of an XML structure (or have a recursive list to use in other forms such as searches), I can print out a tabbed list of nodes in the XML using the following script: open System open System.Xml let path = "C:\\XML\\" let xml_file = path + "Test.xml" let print_element level (node:XmlNode) = [ for tabs in 1..level -> " " ] @ [node.Name] |> (String.concat "" >> printfn "%s") let rec print_tree level (element:XmlNode) = element |> print_element level |> (fun _ -> [ for child in element.ChildNodes -> print_tree (level+1) child ]) |> ignore new XmlDocument() |> (fun doc -> doc.Load(xml_file); doc) |> (fun doc -> print_tree 0 doc.DocumentElement) I am sure it can be optimised/cut down and would encourage by others' improvements on this code. :)
