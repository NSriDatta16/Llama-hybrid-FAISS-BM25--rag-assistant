[site]: stackoverflow
[post_id]: 2703436
[parent_id]: 
[tags]: 
Access block level storage via kernel

How to access block level storage via the kernel (w/o using scsi libraries)? My intent is to implement a block level storage protocol over network for learning purpose, almost the same way SCSI works. Requests will be generated by initiator and sent to target (both userspace program) which makes call to kernel module and returns the data using TCP protocol to initiator. So far, I have managed to build a simple "Hello" module and run it (I am new at kernel programming), but unable to proceed with block access. After searching a lot, I found struct buffer_head * bread(int dev,int block) in linux/fs.h , but the compiler throws error. error: implicit declaration of function ‘bread’ Please help, also feel free to advice on starting with kernel programming. Thank you! bread as used in old kernels. Looking into struct request *blk_get_request(struct request_queue *, int, gfp_t); in linux/blkdev.h Accessing the block device has to be accomplished via kernel.
