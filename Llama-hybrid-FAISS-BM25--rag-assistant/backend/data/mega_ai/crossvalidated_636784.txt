[site]: crossvalidated
[post_id]: 636784
[parent_id]: 
[tags]: 
LOOCV: Which Aggregation of the Performance Metric to Report?

The target variable is revenue, with 81 observations and 10 features. The target distribution is such that a standard log transformation doesn't yield an approximately normal distribution, but revenue**(1/4) does. Prospective models are trained on that transformed target but evaluated on the back-transformed predicted values. As my performance metric, I have chosen RMSLE because it is a relative measure that penalizes underestimations higher than overestimations. LOOCV is utilized for hyper-parameter tuning, model selection, and final model validation. But to start making decisions, I need to choose an aggregation method. Shown below is an example of the distribution of RMSLE scores: My understanding is that the mean is usually reported for LOOCV. However, given this distribution would using/reporting the median or the geometric mean be more appropriate? EDIT: A commenter noted that a nested CV would be more appropriate here. I believe I am doing that (my apologies for not being more descriptive), but I may be mistaken: from sklearn.linear_model import Ridge alpha_range = np.logspace(-2,2,20,base=10,endpoint=True) rmsle_df_ridge = pd.DataFrame(columns=list(map(str, alpha_range))) for i, (train_index, test_index) in enumerate(kf.split(X)): X_train = X.iloc[train_index] X_test = X.iloc[test_index] y_train = y.iloc[train_index] y_test = y.iloc[test_index] for alpha in alpha_range: ridge = Ridge(alpha=alpha) col_tf = make_column_transformer((StandardScaler(), scaler_cols), remainder='passthrough') pip_dt = make_pipeline(col_tf, ridge) pip_dt.fit(X_train, y_train) y_pred = pip_dt.predict(X_test) rmsle = mean_squared_log_error(y_test**4, y_pred**4)**0.5 rmsle_df_ridge.loc[i, str(alpha)] = rmsle And then plot is generated by: sns.lineplot(x=np.log10(alpha_range),y=rmsle_df_ridge.mean(axis=0)) plt.title('LOOCV Ridge') plt.ylabel('RMSLE_mean') plt.show() plt.clf() print('RMSLE_mean: ',np.min(rmsle_df_ridge.mean(axis=0))) So RMSLE values are stored in n x m matrix with n = # rev_obs = 81 and m = len(alpha_range) where RMSLE (i,j) represents the RMSLE obtained by training with the ith observation left out and then testing on i, while using j as the hyperparameter alpha for ridge regression. Then I aggregate using the arithmetic mean over each column to obtain mx2 matrix RMSLE_agg with rows corresponding to (alpha, RMSLE_mean_LOOCV). If this is incorrect, please advise. Regardless, I am still in the dark as to whether or not aggregating with the arithmetic mean- as opposed to the median or geometric mean- is most appropriate here, given the distribution of RMSLE scores as shown above.
