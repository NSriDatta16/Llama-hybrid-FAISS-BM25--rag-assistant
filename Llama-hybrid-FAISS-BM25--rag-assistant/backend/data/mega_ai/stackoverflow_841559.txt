[site]: stackoverflow
[post_id]: 841559
[parent_id]: 841464
[tags]: 
The shortest code: (not effecient) #include #include #include #include #include int main() { std::ifstream f("plop"); std::string buffer; std::copy(std::istreambuf_iterator (f), std::istreambuf_iterator (), std::back_inserter(buffer)); } How I would probably do it: #include #include #include #include #include #include int main() { // Find the size of the file std::ifstream file("Plop"); file.seekg(0,std::ios_base::end); std::streampos size = file.tellg(); // Read the file in one go. file.seekg(0); std::vector buffer(size); // pre-szie the vector. file.read(&buffer[0],size); // or // Until the next version of the standard I don't think string gurantees contigious storage. // But all the current versions I know do use continious storage so it should workd. file.seekg(0); std::string buffer1(size); file.read(&buffer1[0],size); }
