[site]: stackoverflow
[post_id]: 2238211
[parent_id]: 2225325
[tags]: 
Okay, so I've done some experimenting. I'll write up the results here, but first I want to say that based on what I've seeen and know, I'm confident that using temporary parameters in 2005 and 2008 is exactly equivalent to using 2008's OPTIMIZE FOR UNKNOWN . At least in the context of stored procedures. So this is what I've found. In the procedure above, I'm using the AdventureWorks database. (But I use similar methods and get similar results for any other database) I ran: dbcc show_statistics ('Sales.SalesOrderDetail', IX_SalesOrderDetail_ProductID) And I see statistics with 200 steps in its histogram. Looking at its histogram I see that there are 66 distinct range rows (i.e. 66 distinct values that weren't included in stats as equality values). Add the 200 equality rows (from each step), and I get an estimate of 266 distinct values for ProductId in Sales.SalesOrderDetail. With 121317 rows in the table, I can estimate that each ProductId has 456 rows on average. And when I look at the query plan for my test procedure (in xml format) I see something like: ... ... ... So I know where the EstimateRows value is coming from (accurate to three decimals) and Notice that the ParameterCompiledValue attribute is missing from query plan. This is exactly what a plan looks like when using 2008's OPTIMIZE FOR UNKNOWN
