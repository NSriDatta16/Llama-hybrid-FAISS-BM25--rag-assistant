[site]: stackoverflow
[post_id]: 317818
[parent_id]: 316879
[tags]: 
Are your problems specifically with the IOKit callback routines? The problem with the specific example you gave is that the IOServiceMatchingCallback takes only 2 parameters, not 3. You need your RawDeviceAdded() and BulkTestDeviceAdded() callback functions to match the IOServiceMatchingCallback prototype and to accept self as the first parameter (refCon), not the 3rd. Also, you need to pass in self as the second-to-last parameter of IOServiceAddMatchingNotification() to get it passed back to you by the callback. A common method for handling C callbacks in Objective-C code is just to have a static function that forwards the callback to your instance. So, your example callback code would look like this: static RawDeviceAdded(void* refcon, io_iterator_t iterator) { [(MyClass*)refcon rawDeviceAdded:iterator]; } @implementation MyClass - (void)setupCallbacks { // ... all preceding setup snipped kr = IOServiceAddMatchingNotification(gNotifyPort,kIOFirstMatchNotification, matchingDict,RawDeviceAdded,(void*)self,&gRawAddedIter ); // call the callback method once to 'arm' the iterator [self rawDeviceAdded:gRawAddedIterator]; } - (void)rawDeviceAdded:(io_iterator_t)iterator { // take care of the iterator here, making sure to complete iteration to re-arm it } @end
