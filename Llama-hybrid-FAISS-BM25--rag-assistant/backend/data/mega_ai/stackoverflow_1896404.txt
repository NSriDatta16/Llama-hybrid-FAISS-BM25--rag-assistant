[site]: stackoverflow
[post_id]: 1896404
[parent_id]: 
[tags]: 
fread speeds managed unmanaged

Ok, so I'm reading a binary file into a char array I've allocated with malloc. (btw the code here isn't the actual code, I just wrote it on the spot to demonstrate, so any mistakes here are probably not mistakes in the actual program.) This method reads at about 50million bytes per second. main char *buffer = (char*)malloc(file_length_in_bytes*sizeof(char)); memset(buffer,0,file_length_in_bytes*sizeof(char)); //start time here read_whole_file(buffer); //end time here free(buffer); read_whole_buffer void read_whole_buffer(char* buffer) { //file already opened fseek(_file_pointer, 0, SEEK_SET); int a = sizeof(buffer[0]); fread(buffer, a, file_length_in_bytes*a, _file_pointer); } I've written something similar with managed c++ that uses filestream I believe and the function ReadByte() to read the entire file, byte by byte, and it reads at around 50million bytes per second. Also, I have a sata and an IDE drive in my computer, and I've loading the file off of both, doesn't make any difference at all(Which is weird because I was under the assumption that SATA read much faster than IDE.) Question Maybe you can all understand why this doesn't make any sense to me. As far as I knew, it should be much faster to fread a whole file into an array, as opposed to reading it byte by byte. On top of that, through testing I've discovered that managed c++ is slower (only noticeable though if you are benchmarking your code and you require speed.) SO Why in the world am I reading at the same speed with both applications. Also is 50 million bytes from a file, into an array quick? Maybe I my motherboard is bottle necking me? That just doesn't seem to make much sense eather. Is there maybe a faster way to read a file into an array? thanks. My 'script timer' Records start and end time with millisecond resolution...Most importantly it's not a timer #pragma once #ifndef __Script_Timer__ #define __Script_Timer__ #include extern "C" { struct Script_Timer { unsigned long milliseconds; unsigned long seconds; struct timeb start_t; struct timeb end_t; }; void End_ST(Script_Timer *This) { ftime(&This->end_t); This->seconds = This->end_t.time - This->start_t.time; This->milliseconds = (This->seconds * 1000) + (This->end_t.millitm - This->start_t.millitm); } void Start_ST(Script_Timer *This) { ftime(&This->start_t); } } #endif Read buffer thing char face = 0; char comp = 0; char nutz = 0; for(int i=0;i
