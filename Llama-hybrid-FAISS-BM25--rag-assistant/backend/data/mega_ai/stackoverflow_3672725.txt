[site]: stackoverflow
[post_id]: 3672725
[parent_id]: 3672303
[tags]: 
There is both an abstract and factory pattern. The Gang of Four book talks about two patterns: Factory Method , and Abstract Factory. A Factory method is just what it sounds like, an abstract method used to create an object: public interface SomeInterface { Foo create(); // factory method } public class SomeClass implements SomeInterface { Foo create() { // the concrete type being constructed is abstracted by the factory method return new DerivedFoo(); } } An abstract factory is a type that defines an abstraction for creating objects. In the example above, SomeInterface is an abstract factory. The two are not always coupled to each other. It's perfectly valid to have a regular concrete class with some functionality that also has a factory method. An abstract factory says that the purpose of the entire class is to create one or more objects.
