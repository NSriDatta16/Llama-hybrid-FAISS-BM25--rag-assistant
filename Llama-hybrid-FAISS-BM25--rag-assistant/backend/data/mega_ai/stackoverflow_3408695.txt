[site]: stackoverflow
[post_id]: 3408695
[parent_id]: 3407712
[tags]: 
The problem is that you're using StackPanels to arrange items in both directions so you're losing any sort of stretching. StackPanel allows its children to stretch only in the direction opposite the Orientation. The other direction will only be given as much space as it needs in order to allow the rest of the items as much space as possible. So for a default Vertical StackPanel anything you put inside will stretch horizontally but squeeze toward the top vertically. Since you have Vertical StackPanels inside a Horizontal StackPanel you're items are getting squeezed both ways. There are a few options depending on what you want your items to do. Changing to a DockPanel will allow the last item to stretch and fill the space (the vertical one would need to set DockPanel.Dock=Top in the ItemContainerStyle). A Grid with * sized Rows and Columns works well for normal layouts but not in the case of ItemsControls since the Row and Column need to be set for each item (it can be done using ItemsControl.AlternationIndex but it's a pain and fragile). Using a 1 row/column UniformGrid (as in the answer you referenced) will evenly divide the available space and doesn't require any additional settings on the items. If you need some more complex layout strategy with different items getting different amounts of space or stretching behavior you'll need a custom Panel.
