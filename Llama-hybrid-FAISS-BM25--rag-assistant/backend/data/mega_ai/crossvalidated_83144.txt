[site]: crossvalidated
[post_id]: 83144
[parent_id]: 
[tags]: 
Why do coxph() and survreg(, dist="exponential") NOT return the same coefficient (except for expected opposite sign) in R?

If I understand correctly, the coefficient of a covariate X under a Weibull accelerated failure time (AFT) model is related to the log(hazard ratio) of the Cox proportional hazard (PH) model in the following way: d1 = -c1/shape.gamma where d1 is the AFT coefficient, c1 is the Cox PH coefficient log(hazard ratio) , and shape.gamma is the shape parameter of the Weibull distribution. See for example slide 36 in this handout . So for shape.gamma=1 (the Weibull distribution is then equal to the exponential distribution) d1 and c1 should be equal (except for sign). My question is: Why, using the survival package in R, do coxph() and survreg(, dist="exponential") NOT return the same coefficient estiamtes (in absolute value)? Below is the code I used to check this. I first simulate uncensored data using the exponential AFT parametrization and, as expected, survreg() returns 'on average' d1=0.5 (the value I used to simulate the data). So far so good, However, the coefficient returned by coxph is quite different and seems to depend very much on the scale.lambda parameter of the exponential distribution. How does this mismatch relate to the theoretical equivalence (in absolute value) of the coefficients of the exponential AFT model and the Cox PH model? What am I missing? library(survival) # sample size n
