[site]: stackoverflow
[post_id]: 4334563
[parent_id]: 4334518
[tags]: 
No. tagMyStruct is the name of the struct. In C, unlike C++, you must explicitly use the struct keyword every time you use the struct type. For example tagMyStruct x; //error struct tagMyStruct x; //OK To avoid writing struct all the time, struct tagMyStruct is typedef 'd to MYSTRUCT . Now you can write MYSTRUCT x; //ok, same as struct tagMyStruct x; What you thought this was (a variable definition) would be without the typedef keyword, like this struct tagMyStruct { int numberOne; int numberTwo; } MYSTRUCT; BTW MYSTRUCT pStruct = new MYSTRUCT; //error cannot convert MYSTRUCT* to MYSTRUCT is not valid C or C++ anyway. Maybe you mean MYSTRUCT* pStruct = new MYSTRUCT; //valid C++ (invalid C - use malloc instead of new in C) hth
