[site]: stackoverflow
[post_id]: 3251371
[parent_id]: 3251336
[tags]: 
No - quite often the compiler/linker will place variables in wildly different locations that bear no relation to their location in the source files. I've had the distinct pleasure to have to work with C code that was translated from assembly that made this assumption all over the place (in assembly, when you have 2 variables next to each other in the same segment/section, that's what you'll get in the image). That wasn't fun... Note that you may have tools at your disposal (linker config files or compiler pragmas, for example) that might give you some control over the placement of variables in memory. But at that point, you're decidedly in 'implementation specific' territory, and you still might have to deal with alignment issues and whatnot (though if the structs are the same size, that's probably not going to be a concern). A portable way to have 2 structs adjacent to one another is to wrap them inside another struct (again, there might still be issues with pointer arithmetic and aliasing, though).
