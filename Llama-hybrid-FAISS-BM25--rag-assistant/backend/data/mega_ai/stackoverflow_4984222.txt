[site]: stackoverflow
[post_id]: 4984222
[parent_id]: 4983986
[tags]: 
When you request a resource with a .aspx extension, the ASP.net runtime uses the default page handler to process the request. So the answer to your question is that the page handler is hit first, and then it deals with the .aspx file you requested. Edit: In the tutorial you link to in your comment, this is the relevant paragraph that spells this out: Once the HTTP page handler class is fully identified, the ASP.NET runtime calls the handler's ProcessRequest to start the process. This implementation begins by calling the method FrameworkInitialize(), which builds the control trees for the page. This is a protected and virtual member of TemplateControl class, class from which page itself derives. Next the processRequest() makes page transits various phases: initialization, loading of viewstate and postback data, loading of page's user code and execution postback server-side events. Then page enters in render mode, the viewstate is updated and HTML generated is sent to the output console. Finally page is unloaded and request is considered completely served. It's the handler's ProcessRequest method that runs the aspx page through the page lifecycle. This MSDN page has a good description of the process, as well. See step 10 & 15 of the box that says "The request is processed by the HttpApplication pipeline."
