[site]: stackoverflow
[post_id]: 1794999
[parent_id]: 1794986
[tags]: 
If you want to connect to multiple databases, be aware that mysql_connect() returns a resource for that database, which can be used as an optional parameter with mysql_select_db() , mysql_query() and so on. If you don't specify the link to use, the last one opened will be used so: mysql_connect($hostname, $username, $password); mysql_select_db($database); ... mysql_connect($host2, $user2, $pass2); mysql_select_db($db2); // uses the database just opened mysql_query('SELECT * FROM sometable'); // also uses the second database or, more explicitly: $res1 = mysql_connect($host1, $user1, $pass1); $res2 = mysql_connect($host2, $user2, $pass2); mysql_query('...', $res1); // use first database mysql_query('...', $res2); // use second database That all being said, rarely is it a good idea to different databases by user as a partitioning scheme. For one thing, most people tend to grossly overestimate the size or performance requirements of their databases or the likely usage or storage requirements. Secondly, it can greatly complicate things that you will probably be interested in doing, like finding all the user's (databases) that fit a particular profile. This will now involve connecting to N databases, running N queries and somehow aggregating the results rather than just running a simple (or even not-so-simple) SQL query. Edit: You can use mysql_pconnect() if you want connections to be retained between requests. Nothing in PHP is retained between requests (barring storage to some persistence medium like the session or a database). But that's actually the beauty of PHP. Even using persistent connections involves a whole new set of problems like them going stale, needing to reconnect them and so on. Keep it simple. Also, storing in the session is a reasonable approach but be aware that anything in the session is readable by other sites in a shared hosting environment (although it can be hard, but not impossible, to figure out who it belongs to).
