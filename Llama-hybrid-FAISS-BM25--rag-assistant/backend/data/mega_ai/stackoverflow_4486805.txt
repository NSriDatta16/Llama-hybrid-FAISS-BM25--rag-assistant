[site]: stackoverflow
[post_id]: 4486805
[parent_id]: 4486768
[tags]: 
One thing you could do is to create a helper function that takes an additional Enum parameter that you can use to determine the event type, and then you can just enclose the dummy events in a region so you can collapse them. Off-hand, I don't know of an elegant way to determine what event actually fired from the event itself (that is, without using Reflection...) My suggestion: Private Sub picButton_MouseEnter(ByVal sender As Object, ByVal e As System.EventArgs) Handles picButton.MouseEnter UniversalEvent(this, e, EventType.MouseEnter) End Sub Private Sub picButton_MouseLeave(ByVal sender As Object, ByVal e As System.EventArgs) Handles picButton.MouseLeave UniversalEvent(this, e, EventType.MouseLeave) End Sub Private Sub UniversalEvent(ByVal sender As Object, ByVal e As System.EventArgs, ByVal eventType As EventType) If MouseEnter Then 'Code for mouseEnter' ElseIf MouseLeave Then 'Code for mouseLeave' End If' End Sub Edit: As mentioned before, Reflection is a possibility, though not ideal due to the amount of overhead involved (especially in the case of events like these which could be called quite frequently). That being said, I whipped up a working example using Reflection simply to illustrate that it's possible. (Actually StackTrace , which is what I used, is in System.Diagnostics . Not exactly Reflection but it's close enough for me...) Please don't send the raptors... Public Class Form1 Private Sub PictureBox_Events(ByVal sender As System.Object, ByVal e As System.EventArgs) _ Handles PictureBox1.MouseLeave, PictureBox1.MouseEnter Select Case GetEventType(New StackTrace()) Case EventType.MouseEnter Console.WriteLine("Enter") Case EventType.MouseLeave Console.WriteLine("Leave") Case Else Console.WriteLine("Dunno") End Select End Sub Private Function GetEventType(ByRef callStack As StackTrace) As EventType 'I laugh in the face of NullReferenceExceptions...' Dim callerName As String = callStack.GetFrames()(1).GetMethod().Name If "OnMouseEnter".Equals(callerName, StringComparison.OrdinalIgnoreCase) Then Return EventType.MouseEnter ElseIf "OnMouseLeave".Equals(callerName, StringComparison.OrdinalIgnoreCase) Then Return EventType.MouseLeave End If Return EventType.Dunno End Function Enum EventType Dunno MouseEnter MouseLeave End Enum End Class
