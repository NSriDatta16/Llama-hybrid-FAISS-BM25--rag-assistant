[site]: stackoverflow
[post_id]: 3927052
[parent_id]: 3926273
[tags]: 
There have been several Tcl-Python alloys. As Rafe Kettler's comment above sketches, the place to start is with a standard Python installation. This includes Tkinter, which builds in a full Tcl interpreter, accessible as described in the Wiki page mentioned. So, yes, it is feasible to "do this in Python". I really don't get what this has to do with vmd , though. vmd builds in a Tcl interpreter already. While I entirely support the aim of "reduction of moving parts", so that you have, for example, one script, rather than two, coding something in Python, when vmd already exposes Tcl, doesn't seem like a step in the direction Jason R. Mick wants to go. SOMEWHAT LATER: after an exchange of comments with Jason R. Mick, it occurred to me he might find #!/bin/bash echo "Here's a bit of bash-iness." MYSCRIPT=' puts "Here I am, inside Tcl." puts "See? I can do calculations: [expr 3 + 5]." exit 0 ' tclsh suggestive. Its output, of course, is Here's a bit of bash-iness. Here I am, inside Tcl. See? I can do calculations: 8. I wrote this in terms of tclsh , but, if I'm keeping up, Jason R. Mick will actually want to use vmd . The appropriate homologue for * vmd is something like ... vmd -dispdev text -eofexit output.log $MYSCRIPT HERE While I can think of several other ways to meld bash and Tcl, I believe this one is most in the spirit of the original question. I want to note, too, that, from the little I know of vmd , it would be entirely appropriate to do the same with Python in place of Tcl: vmd is equally adept with either. Finally, both Python and Tcl are general-purpose languages, with approximately the same power as bash , so yet another direction to take this project would be to write it entirely in Tcl (or Python), rather than bash. Embedding scripts in the way illustrated above is at least as easy in Tcl (or Python) as in bash.
