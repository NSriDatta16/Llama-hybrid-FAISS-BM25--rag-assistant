[site]: crossvalidated
[post_id]: 558465
[parent_id]: 299353
[tags]: 
This answer assumes $\mu$ is known. One very flexible way to get MLE's in R is to use STAN via rstan . STAN has a reputation for being an MCMC tool, but it also can estimate parameters by variational inference or MAP. And you're free to not specify the priors . In this case, what you're doing is very similar to their hurdle-model example . Here is the STAN code for that example. data { int N; int y[N]; } parameters { real theta; real lambda; } model { for (n in 1:N) { if (y[n] == 0) target += bernoulli_lpmf(1 | theta); else target += bernoulli_lpmf(0 | theta) + poisson_lpmf(y[n] | lambda); } } To adapt this for your own use, you could: Replace poisson_lpmf with the log-density for your $f_A$ . Add a third case to the if-else so that it checks for exceeding $\mu$ , not just 0. As the meat of that third case, use the log pmf for your extreme value distribution of choice. Replace bernoulli_lpmf with categorical_lpmf and make the mixture probability parameter into a vector. To incorporate covariates, you can add regression parameters, and make all your other parameters functions of them. It may help to use categorical_logit_lpmf in place of categorical_lpmf . Truncate one mixture component at $\mu$ from above and the other at $\mu$ from below, depending on your perspective on the dilemma raised by Jarle Tufto in the comments. It seems like you could get VERY different estimates depending on how exactly you decide to handle this. A nice sanity check: generate a fake dataset from the fitted parameters and make sure it has the right amount at 0, amount above $\mu$ , etc. Once you have a file with the right STAN code, you can use STAN with lots of different toolchains. To use it with R, check out these examples . I simplified one to get an MLE, using rstan::optimizing instead of sampling : install.packages("rstan") library("rstan") model = stan_model("Example1.stan") fit = optimizing(model) There are also some tricks for faster/better optimization that could help in practice.
