[site]: stackoverflow
[post_id]: 186794
[parent_id]: 186494
[tags]: 
When can Short Circuiting be beneficial Short circuit optimizations can be helpful only when: the cost of comparison is low compared to the cost of the full test the comparison often results in short circuiting Mathematically, let S be cost of Short Circuiting condition, F cost of full condition, and P be percent of cases where Short Circuiting happens (full condition is not necessary). The average cost of original case (no Short Circuiting) is F The average cost of Short Circuiting optimization is S + F * (1-P) Therefore, if the optimization is to have any benefit at all, following must apply: S + F * (1-P) i.e. S String comparison cost Further you wrote: which obviously takes more time then simple integer comparison. This is not obvious at all. The string comparison terminates when first difference is found, therefore depending on what strings you process, it may terminate on first or second character in vast majority of cases. Moreover, the comparison may be optimized even for longer strings by first comparing DWORDS (4 characters at once) as long as there is enough data in both strings. Your case The major difference between random test data and scripting parsing is the real data are far from random. The parser is most likely deterministic, and once it matches, it does not compare any more. Even the script data are not random - some keywords are likely to be used a lot more than other ones. If the parser is constructed in such a way it checks most commonly used keyword first, a surprisingly high number of comparisons may need the full compare to be done, as full compare always needs to be done when string are matching.
