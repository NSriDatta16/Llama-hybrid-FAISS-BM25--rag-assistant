[site]: stackoverflow
[post_id]: 2368923
[parent_id]: 2365508
[tags]: 
If you really want to be able to eliminate user data, store the user data on the file system. Somewhere like "Documents and Settings\username\Application Data\Your Organization\Your Application". That data would be trivial to remove on uninstall, with an entry in the RemoveFile table. The Windows Installer development team specifically addressed this on their blog. See "Rule 26". http://blogs.msdn.com/windows_installer_team/archive/2006/05/12/595950.aspx Update: Many years ago I wrote code that does what you describe with the registry, and quickly came to regret it. It was a pain, but more than that, it had an issue related to privileges. The short version is that the Installer service doesn't run with all the privileges that Admin has. They're not just disabled, they're absent from the security token of the process. Notably this includes the privilege needed to load and unload registry hives (se_restore_privilege as I recall). That caused the code to break for silent install and uninstall, even if the invoking user was Admin, and I couldn't just disallow silent install and uninstall. Another issue that hasn't come up yet is Active Directory. I'm not certain, but I'm thinking that what you describe is going to have serious additional hoops to jump through in an AD environment. In general, I try very hard to avoid having installs or uninstalls touch the HKCU hive. I've found doing that to be a consistent source of significant pain for minimal benefit.
