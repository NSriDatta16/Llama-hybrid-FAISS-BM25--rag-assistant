[site]: stackoverflow
[post_id]: 2419341
[parent_id]: 2415557
[tags]: 
I guess grid.py is trying to find the optimal value for C (or Nu)? I don't have an answer for the amount of time it will take, but you might want to try this SVM library, even though it's an R package: svmpath . As described on that page there, it will compute the entire "regularization path" for a two class SVM classifier in about as much time as it takes to train an SVM using one value of your penalty param C (or Nu). So, instead of training and doing cross validation for an SVM with a value x for your C parameter, then doing all of that again for value x+1 for C, x+2, etc. You can just train the SVM once, then query its predictive performance for different values of C post-facto, so to speak.
