[site]: stackoverflow
[post_id]: 4195612
[parent_id]: 4195540
[tags]: 
Well, you might start with the File.ReadAllLines() method. Then, iterate through the lines in that file, checking to see if they match a pattern. If they do, extract the necessary text and do whatever you want with it. Here's an example that assumes you want lines in the format [(field 1)][(field 2)] : // Or wherever your file is located string path = @"C:\MyFile.edf"; // Pattern to check each line Regex pattern = new Regex(@"\[([^\]]*?)\]"); // Read in lines string[] lines = File.ReadAllLines(path); // Iterate through lines foreach (string line in lines) { // Check if line matches your format here var matches = pattern.Matches(line); if (matches.Count == 2) { string value1 = matches[0].Groups[1].Value; string value2 = matches[1].Groups[1].Value; Console.WriteLine(string.Format("{0} - {1}", value1, value2)); } } This outputs them to the console window, but you could obviously do whatever you want with value1 and value2 (write them to another file, store them in a data structure, etc). Also, please note that regular expressions are not my strong point -- there's probably a much more elegant way to check if a line matches your pattern :) If you want more info, check out MSDN's article on reading data from a text file as a starting point.
