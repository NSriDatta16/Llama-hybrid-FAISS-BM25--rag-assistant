[site]: stackoverflow
[post_id]: 720383
[parent_id]: 720326
[tags]: 
Most of your thoughts about the direction to take are solid; the problem comes in when you're calling Job2->some_method() as opposed to $job->some_method() . That is, your class method calls are only a problem because they're a bad idea in the first place -- which you're seeing because they're interfering with you leveraging OOP. What I would do in your situation is write my code so that I use object method calls rather than class method calls, and give each project install a configuration hash that can be used to tell it what class it wants to use for a given purpose. So it'd look something like: my $job2_class = $project->conf->{job2_class} || 'Job2'; my $job2 = new $job2_class; $job2->some_method();
