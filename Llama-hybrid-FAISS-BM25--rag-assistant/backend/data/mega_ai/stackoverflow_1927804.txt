[site]: stackoverflow
[post_id]: 1927804
[parent_id]: 1927264
[tags]: 
You could do following, create a class where you encapsulate the retrieval of the connection string. something like this public static class ConnectionStringBuilder { const string ConnStringDefault = @"defaultConnString"; static readonly string _connString = string.Empty; public static string Build() { return _connString; } /// /// Builds connection string from the config file with the given name /// /// The name. /// public static string Build(string name) { if (ConfigurationManager.ConnectionStrings[name] != null) return ConfigurationManager.ConnectionStrings[name].ConnectionString; throw new ArgumentException("Connectionstring with given name '" + name +"' not found! ", "name"); } /// /// Initializes the class. /// static ConnectionStringBuilder() { if (ConfigurationManager.ConnectionStrings["default"] != null) { log.Info("conn string in config found"); _connString = ConfigurationManager.ConnectionStrings["default"].ConnectionString; } else { log.Info("no default connection string found, using test connection string"); _connString = ConnStringDefault; } } } and the usage would be something like this using(var conn = new SqlConnection(ConnectionStringBuilder.Build()) { // do some stuff... } hope that helps
