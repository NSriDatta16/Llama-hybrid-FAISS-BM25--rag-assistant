[site]: stackoverflow
[post_id]: 515302
[parent_id]: 515133
[tags]: 
making the GeneralMode an abstract class definitely is the way to go to get the polimorphic behavior straight (as correctly explained by Frederik Gheysels). one other important OO paradigm is to favor composition over inheritance ( Item 14, 'Effective Java' by Josh Bloch ) if your bulleted list represents your current inheritance hierarchy (ignore my comment if it doesn't...), i would strongly encourage you to change it so that your GUI Class is composed of a mode (rather than the mode being an extension of it -- the classical "is a" vs "has a" question). extracting whatever GUI settings into a parameter object which you will then pass to the modes to do their work would reduce the coupling even further.
