[site]: stackoverflow
[post_id]: 4800870
[parent_id]: 4800853
[tags]: 
There is certainly no compelling reason to do that. In fact, if the users of the interface need not be aware of the concrete class, and if there are multiple implementations, and if the group defining the interface is different from the group implementing a certain version of it (all of which are valid cases), then it is probably wise to separate the implementation and interface namespaces. I am not too sure about C#, but in Java, package membership is an important organizational pattern to enforce method visibility. If you want to make use of package-private things you basically have to group implementation classes together in the same package (so that you probably cannot put them together with the interfaces).
