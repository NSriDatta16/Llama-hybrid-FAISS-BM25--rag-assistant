[site]: stackoverflow
[post_id]: 3805081
[parent_id]: 
[tags]: 
Design pattern to handle settings in subclasses?

I have a small hierarchy of classes that all implement a common interface. Each of the concrete class needs to receive a settings structure containing for instance only public fields. The problem is that the setting structure has a part common to all classes has another part that vary from one concrete class to another I was wondering if you had in your mind any elegant design to handle this. I would like to build something like: BaseFunc doer = new ConcreteImplementation1(); with ConcreteImplementation1 implements BaseFunc. And have something like doer.setSettings(settings) but have the ''settings'' object having a concrete implementation that would be suitable to ConcreteImplementation1. How would you do that?
