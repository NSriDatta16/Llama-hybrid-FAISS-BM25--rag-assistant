[site]: stackoverflow
[post_id]: 3301829
[parent_id]: 3299853
[tags]: 
I'm not sure if I'm understanding your question correctly, but you basically want to be able to edit the draggable/droppable item. Here's a bit of code that I modified from your code above where I hook up the showing of a modal dialog when you click on one of the dropped items: function detailRemoveButton() { $("#cart ol > li").button({ icons: { primary: 'ui-icon-stop' }, text: true }).click(function () { $('#txtName').val($(this).text()); //set the dialog's text box to the clicked item's text var item = $(this); //grab on to this as we'll reference it in the dialog (closure) $('#dialog').dialog( { //open up the dialog autoOpen: true, modal: true, title: 'Edit Droppable Text', buttons: { 'Save' : function() { //update the dropped text when we click Save item.text($('#txtName').val()); $(this).dialog('close'); } } }); //$(this).remove(); //commented this out $("#cart ol").sortable('refresh'); }); } The only change I made to your HTML markup was the addition of a dialog placeholder whose display is set to 'none': Text: So when you place this code into your sample, you should be able to click on a dropped item, see a modal pop-up with the dropped item's text in the text box, edit the text, click OK and see the updated text in the dropped item. I commented out the code that removes the dropped item when you click on it. The only issue I found was that changing the text changed the height of the dropped item. Not sure if that's due to the sortable-refresh call or not at this point. I'll keep looking at it. I hope this helps. Please let me know if you were trying to do something else or if you have other questions. Good luck!
