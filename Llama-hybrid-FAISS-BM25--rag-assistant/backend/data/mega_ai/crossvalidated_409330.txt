[site]: crossvalidated
[post_id]: 409330
[parent_id]: 
[tags]: 
Inputting playing card values to aneural network

I am trying to create a NN to play a card game wherein each state is represented by the hands of 4 players. Every round, the hand of each player is decreased by 1 (discarded). Each player starts with a hand of 8 cards. I feel inclined to represent each card as a one-hot vector: {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}{1, 0, 0, 0} value suit = [1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0] for the Ace of Hearts My question relates simply to how to structure the input layer/s of the NN. The order of cards within a player's hand does not matter, but the NN needs to know that a certain card belongs to a certain hand. How do I input this encoded data to a NN. Do I need $17(onehotcard)*8(maxcards/hand)*4(players)=544$ input neurons? Could someone please explain the best way to input one-hot data to a NN (one neuron per binary value?) where the order of a maximum of 8 cards is irrelevant within a hand but the association of a given card to a given hand is important? Will the consistently reducing number of cards per hand (number of players is constant) be an issue? Thank you!
