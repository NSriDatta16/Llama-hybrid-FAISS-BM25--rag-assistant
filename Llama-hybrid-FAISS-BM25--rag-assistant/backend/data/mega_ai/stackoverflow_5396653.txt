[site]: stackoverflow
[post_id]: 5396653
[parent_id]: 5396144
[tags]: 
Well I would certainly try to leverage what is in the standard library if I could. The signature for the config parser classes look like this: class ConfigParser.SafeConfigParser([defaults[, dict_type[, allow_no_value]]]) Notice the dict_type argument. When provided, this will be used to construct the dictionary objects for the list of sections, for the options within a section, and for the default values. It defaults to collections.OrderedDict . Perhaps you could pass something in there to get your desired multiple-key behavior, and then reap all the advantages of ConfigParser . You might have to write your own class to do this, or you could possibly find one written for you on PyPi or in the ActiveState recipes. Try looking for a bag or multiset class. I'd either go that route or just suck it up and make a list: foo = value1, value2, value3
