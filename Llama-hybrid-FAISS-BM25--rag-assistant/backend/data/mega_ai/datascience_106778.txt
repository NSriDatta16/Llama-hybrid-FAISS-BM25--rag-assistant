[site]: datascience
[post_id]: 106778
[parent_id]: 
[tags]: 
Find the Outlier

I have data that contains points (geo coordinates of a random planet, integer pairs) that represent places where land is definitely there. Here is an example with points representing the Earth. My goal is to go through samples (also integer pair points, but we don't know their values) and determine where the land is and where it isn't. I tried to use Novelty/Outlier Detection and used sklearn here are the algorithms that I used: prediction1 = OneClassSVM(nu=2e-1, kernel='rbf', gamma=2.5e-3).fit(data).predict(samples) prediction2 = OneClassSVM(nu=0.01, kernel='rbf', gamma=2.5e-3).fit(data).predict(samples) predictions = np.maximum(prediction1, 0, prediction1) + np.maximum(prediction2, 0, prediction2) predictions = np.where(predictions >= 1, 1, 0) And a prediction (for creation of the image I just test each point) Here you can see the separation between layers My problem is that my approach is not accurate enough, so I'd like to hear about other algorithms that could help solve this problem and hopefully will be better suited. Here are some more predictions and data points so you can experiment with this Earth Second planet Waves Geometric shapes
