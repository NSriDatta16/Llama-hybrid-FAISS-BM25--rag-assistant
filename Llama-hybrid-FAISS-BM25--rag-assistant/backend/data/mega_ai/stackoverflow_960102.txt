[site]: stackoverflow
[post_id]: 960102
[parent_id]: 960072
[tags]: 
It is right. Note that Java has nothing to do with it, the problem is inherent in floating point math in ANY language. You can often get away with it with classroom-level problems but it's not going to work in the real world. Sometimes it won't work in the classroom. An incident from long ago back in school. The teacher of an intro class assigned a final exam problem that was proving a real doozy for many of the better students--it wasn't working and they didn't know why. (I saw this as a lab assistant, I wasn't in the class.) Finally some started asking me for help and some probing revealed the problem: They had never been taught about the inherent inaccuracy of floating point math. Now, there were two basic approaches to this problem, a brute force one (which by chance worked in this case as it made the same errors every time) and a more elegant one (which would make different errors and not work.) Anyone who tried the elegant approach would hit a brick wall without having any idea why. I helped a bunch of them and stuck in a comment explaining why and to contact me if he had questions. Of course next semester I hear from him about this and I basically floored the entire department with a simple little program: 10 X = 3000000 20 X = X + 1 30 If X Despite what every teacher in the department thought, this WILL terminate. The 3 million seed is simply to make it terminate faster. (If you don't know basic: There are no gimmicks here, just exhausting the precision of floating point numbers.)
