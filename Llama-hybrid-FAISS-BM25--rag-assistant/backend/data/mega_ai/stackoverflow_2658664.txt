[site]: stackoverflow
[post_id]: 2658664
[parent_id]: 
[tags]: 
Translation of clustering problem to graph theory language

I have a rectangular planar grid, with each cell assigned some integer weight. I am looking for an algorithm to identify clusters of 3 to 6 adjacent cells with higher-than-average weight. These blobs should have approximately circular shape. For my case the average weight of the cells not containing a cluster is around 6, and that for cells containing a cluster is around 6+4, i.e. there is a "background weight" somewhere around 6. The weights fluctuate with a Poisson statistic. For small background greedy or seeded algorithms perform pretty well, but this breaks down if my cluster cells have weights close to fluctuations in the background i.e. they will tend to find a cluster even though there is nothing. Also, I cannot do a brute-force search looping through all possible setups because my grid is large (something like 1000x1000) and I plan to do this very often (10^9 times). I have the impression there might exist ways to tackle this in graph theory. I heard of vertex-covers and cliques, but am not sure how to best translate my problem into their language . I know that graph theory might have issues with the statistical nature of the input, but I would be interest to see what algorithms from there could find, even if they cannot identify every cluster. Here an example clipping: the framed region has on average 10 entries per cell, all other cells have on average 6. Of course the grid extends further. | 8| 8| 2| 8| 2| 3| | 6| 4| 3| 6| 4| 4| =========== | 8| 3||13| 7| 11|| 7| |10| 4||10| 12| 3|| 2| | 5| 6||11| 6| 8||12| =========== | 9| 4| 0| 2| 8| 7|
