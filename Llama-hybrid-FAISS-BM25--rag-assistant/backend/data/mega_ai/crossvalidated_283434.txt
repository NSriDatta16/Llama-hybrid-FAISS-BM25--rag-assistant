[site]: crossvalidated
[post_id]: 283434
[parent_id]: 
[tags]: 
Genetic algorithms on Titanic data set - overfitting or the real deal?

As you're likely aware, predicting survivors from the Titanic disaster has been turned into an educational data science challenge on Kaggle.com . A few "competitors" have perfect scores, presumably due to using actual historical records. Whatever. But then there is a tier of competitors with scores hovering around 88% accuracy. The posted solutions in this range all seem to be based on the use of genetic algorithms . Below is a small fraction of one of the genetic algorithm scripts : def GeneticFunction(data): return ((np.minimum( ((((0.058823499828577 + data["Sex"]) - np.cos((data["Pclass"] / 2.0))) * 2.0)), ((0.885868))) * 2.0) + np.maximum( ((data["SibSp"] - 2.409090042114258)), ( -(np.minimum( (data["Sex"]), (np.sin(data["Parch"]))) * data["Pclass"]))) + (0.138462007045746 * ((np.minimum( (data["Sex"]), (((data["Parch"] / 2.0) / 2.0))) * data["Age"]) - data["Cabin"])) + np.minimum( ((np.sin((data["Parch"] * ((data["Fare"] - 0.720430016517639) * 2.0))) * 2.0)), ((data["SibSp"] / 2.0))) + np.maximum( (np.minimum( ( -np.cos(data["Embarked"])), (0.138462007045746))), (np.sin(((data["Cabin"] - data["Fare"]) * 2.0)))) + -np.minimum( ((((data["Age"] * data["Parch"]) * data["Embarked"]) + data["Parch"])), (np.sin(data["Pclass"]))) + np.minimum( (data["Sex"]), ((np.sin( -(data["Fare"] * np.cos((data["Fare"] * 1.630429983139038)))) / 2.0))) + np.minimum( ((0.230145)), (np.sin(np.minimum( (((67.0 / 2.0) * np.sin(data["Fare"]))), (0.31830988618379069))))) + ... [ + another 40 lines or so ] I don't know much at all about genetic algorithms, but the Titanic data set isn't exactly ImageNet in terms of its complexity. There aren't that many rows and only a handful of features, and I have my suspicions that there is overfitting going on despite a good score on the test set. Are genetic algorithms really this good for predicting survivors in the Titanic data set? If so, how do I build my own monstrosity like the one above?
