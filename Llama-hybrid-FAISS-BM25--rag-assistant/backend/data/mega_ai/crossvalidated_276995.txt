[site]: crossvalidated
[post_id]: 276995
[parent_id]: 
[tags]: 
Splitting Stock Price data for SVM classification

I'm trying to use SVM to predict whether the price of a security will go up in the next 7 days using a prediction of the last 14 days of data. So far, I have extracted a dataset with 15 features and around 3000 samples (dates). However, I'm a little confused on how I should split my data for the x training set and y training set (and also for the testing sets for that matter). Would this kind of split make sense in training? x training set: (Pseudo code) [Features from days 1-14 , Features from days 22-35, ......] y training set: (Pseudo code) [1 if price(day 21) > price(day 14) else -1 ,1 if price(day 42) > price(day 35) else -1, ....] However, I feel like I'm losing alot of data due to the nature of the y-training set. Are there any better ways to model this? Thanks
