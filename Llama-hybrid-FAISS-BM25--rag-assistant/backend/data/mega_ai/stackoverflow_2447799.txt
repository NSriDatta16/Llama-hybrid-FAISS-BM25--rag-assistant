[site]: stackoverflow
[post_id]: 2447799
[parent_id]: 1825061
[tags]: 
Finally got a proper solution to this, even though it is a bit "hacky" as well. What I do is I set the foreground div with the draggables as the droppable, but use the dropover and dropout features to determine if the item is outside the foreground div. When it's outside the div, I bind the mouseup event to do the drop functionality. When it's back in I unbind the mouseup event so it doesn't fire. Because when dragging I'm already holding the mouse button down, releasing it is the same as dropping what I have in my "hand". $("#foregroundDiv").droppable({ accept: ".draggableThingy", tolerance: "pointer", out: function(event, ui) { $(ui.helper).mouseup(function() { doSomethingTo(ui.draggable); }); }, over: function(event, ui) { $(ui.helper).unbind("mouseup"); } });
