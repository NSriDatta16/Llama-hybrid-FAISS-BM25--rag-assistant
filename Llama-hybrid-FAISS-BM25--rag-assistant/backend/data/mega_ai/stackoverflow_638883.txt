[site]: stackoverflow
[post_id]: 638883
[parent_id]: 638850
[tags]: 
I expect the real answer is simply: there wasn't a good use-case. For instances, the advantage is that it enables a fluent-API over existing types (that don't themselves provide the logic) - i.e. var foo = data.Where(x=>x.IsActive).OrderBy(x=>x.Price).First(); which enables LINQ: var foo = (from x in data where x.IsActive order by x.Price select x).First(); With static methods, this simply isn't an issue, so there is no justification; just use the static method on the second type. As it is, extension methods are not properly object orientated - they are a pragmatic abuse to make life easier at the expense of purity. There was no reason to dilute static methods in the same way.
