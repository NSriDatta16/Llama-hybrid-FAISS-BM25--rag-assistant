[site]: crossvalidated
[post_id]: 415654
[parent_id]: 
[tags]: 
Optimizing architecture of a Neural Network

I'm applying NN in R with the neuralnet package. The model prototype is performing well and now I want to generalize it by looping it over ~100 more different data-sets. In the prototype model I have defined an architecture with 3 layers (20,10,5). The problem is that this architecture is not always performing well in the rest 100 sets,as the cross-validation error becomes quite high. For the sets the error is high I've tuned manually the model to a different architecture (10,5,5) and it improved. How can I make the model self-adapting and finding its best architecture for each loop it makes. I'm thinking of heuristic approach by iterating the architectures (i,j,z) over each data-set, but not sure if there's a more efficient way to achieve this. Thank you for your thoughts.
