[site]: stackoverflow
[post_id]: 2637518
[parent_id]: 2637377
[tags]: 
Interfaces are incredibly overused in Java partly because of the language design and partly because people think making lots of interfaces is good design. Abstract classes would be superior to interfaces if Java allowed multiple inheritance. Scala a new programming language for the JVM has a concept of Traits which are essentially abstract classes with MI capability. The advantage to an abstract class is that you can add behavior to the abstract class with out breaking existing classes that extend it. Thus an abstract class is also better as an extension mechanism (plugin) then interfaces. Unfortunately JMock and its brethren encourage lots of interfaces for BDD testing but this is not necessarily true because there are at least a couple of libraries to mock concrete objects.
