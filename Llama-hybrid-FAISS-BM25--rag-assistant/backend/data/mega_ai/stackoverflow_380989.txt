[site]: stackoverflow
[post_id]: 380989
[parent_id]: 380889
[tags]: 
If I understand your question correctly, then I encourage you to do a little research on: SET ANSI_NULLS OFF If you use this command in your stored procedure, then you can use = NULL in your comparison. Take a look at the following example code to see how this works. Declare @Temp Table(Data Int) Insert Into @Temp Values(1) Insert Into @Temp Values(NULL) -- No rows from the following query select * From @Temp Where Data = NULL SET ANSI_NULLS OFF -- This returns the rows where data is null select * From @Temp Where Data = NULL SET ANSI_NULLS ON Whenever you SET ANSI_NULLS Off, it's a good practice to set it back to ON as soon as possible because this may affect other queries that you run later. All of the SET commands only affect the current session, but depending on your application, this could span multiple queries, which is why I suggest you turn ansi nulls back on immediately after this query.
