[site]: stackoverflow
[post_id]: 4632639
[parent_id]: 4632595
[tags]: 
The problem is that you are using an anonymous type that the user of the method has no way of casting back to. An easy way out (besides reflection or creating a class) would be using dynamic , since you know the properties you want to access are there: Example: (very made up I admit) public static IEnumerable GetAccounts() { return Enumerable.Range(0, 10) .Select(x => new { Id = x, Name = "herbert" }); } //... foreach (dynamic account in GetAccounts()) { Console.WriteLine(string.Format("Id: {0}, Name: {1}", account.Id, account.Name)); } Back to your code that would mean just changing the calling code: foreach (dynamic acc in accounts) { Console.WriteLine(string.Format("{0:00} {1}", acc.account_id, acc.name + " " + acc.description)); }
