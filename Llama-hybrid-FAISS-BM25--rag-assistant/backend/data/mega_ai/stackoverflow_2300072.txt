[site]: stackoverflow
[post_id]: 2300072
[parent_id]: 2299478
[tags]: 
If you'd like to use the multiprocessing module, it includes a very nice parallel imap_unordered , which would reduce your problem to the very elegant: import multiprocessing, sys class ParallelDownload: def __init__(self, urls, processcount=3): self.total_items = len(urls) self.pool = multiprocessing.Pool(processcount) for n, status in enumerate(self.pool.imap_unordered(self.download, urls)): stats = (n, self.total_items, n/self.total_items) sys.stdout.write(status + " [%d/%d = %0.2f %%]\n"%stats) def download(self, url): system_call = "wget -nc -q {0} -O {1}".format(url, local_file) os.system(system_call) status = "\rDownloaded " + url.split('/')[-1] return status
