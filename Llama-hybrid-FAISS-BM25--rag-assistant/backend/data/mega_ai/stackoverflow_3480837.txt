[site]: stackoverflow
[post_id]: 3480837
[parent_id]: 
[tags]: 
key comparisons in c++ map not working

I have created a map with ClassExpression as the key and std::string as the value. The key comparator is given below class ClassExpressionComparator { public: bool operator()(const ClassExpression& lhs, const ClassExpression& rhs) const { return ((lhs.quantifier == rhs.quantifier) && (lhs.property.compare(rhs.property) == 0) && (lhs.concept.compare(rhs.concept) == 0)); } }; ClassExpression contains the 3 fields mentioned in the comparator. I compare all the 3 fields. When I use find() of map, even if the key is not present in the map, it says that it found the key and gives an existing key as the result (getting first key as the result). I tried the following boost::shared_ptr > cemap( new std::map ()); ClassExpression ce1; ce1.quantifier = com::xxxx::kb::SOME; ce1.property = " "; ce1.concept = " "; populateMap(cemap, ce1); ClassExpression ce2; ce2.quantifier = com::xxxx::kb::SOME; ce2.property = " "; ce2.concept = " "; populateMap(cemap, ce2); ClassExpression ce3; ce3.quantifier = com::xxxx::kb::SOME; ce3.property = " "; ce3.concept = " "; std::map ::iterator ceIterator = cemap->find(ce3); if (ceIterator == cemap->end()) { std::cout second populateMap() just does an insert, in my actual code, I do a few more things in it, I wanted to keep the same flow, so left it that way. The output of cmp(ce1, ce3) is 0 but when I do a find(ce3) , the result is that it found it at the first key position instead of returning end() . Where am I going wrong here? Thank you. Raghava.
