[site]: stackoverflow
[post_id]: 3238486
[parent_id]: 3238080
[tags]: 
If I understand your problem description correctly, you want to repeat the loop body (in certain cases) rather than "the iteration". If that's the case, one workable approach is to make the loop body into a possibly-recursive function, returning True if the loop is to break, False if it is to continue, as well as the possible title. For example, a most-direct (though probably not maximally elegant) function: def body(line): global title_flag # skip over comments if line[0] == '#': return None, False # skip over blank lines if re.search(r'^\s+$', line): return None, False # Find the line where the title is defined if 'DEFINE_MENU' in line and title_flag == 0: type, name = line.split() title = name title_flag = 1 return title, body(line) # If DEFINE_MENU is found and flag has been raised, this # signifies a new menu definition. if 'DEFINE_MENU' in line and title_flag == 1: return None, True and the main-line code becomes: title_flag = 0 with open('some_file', 'r') as afile: for line in afile: thetitle, mustbreak = body(line) if thetitle is not Note: title = thetitle if mustbreak: break BTW: do not name your own variables by usurping built-in names like file -- that's a separate subject;-). BTW2: I'm using with (assuming Python 2.6 or better, or 2.5 with an "import from the future") only because it's the right way to open and close a file;-). BTW3: I removed the re.search because it's wanton, inexplicable overkill when a simple in operator clearly does the same job. I'm posting this code mostly to check in a concrete way whether I understood your specs, because, behavior-wise, this is definitely overkill -- there's no need (from the code you posted) to repeat the checks for comments and empty lines, nor the search for 'DEFINE_MENU" , etc... you could just exit as soon as you've set the title (and body could then become inline code again). But, I imagine that you have a reason for posting your question, i.e., that the simple behavior this has (and which could be had much more simply) is not optimal for you -- maybe by seeing the solution to your literal question you can point out what you want different than this, and then we can actually help you;-).
