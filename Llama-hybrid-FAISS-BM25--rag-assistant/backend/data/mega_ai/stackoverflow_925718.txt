[site]: stackoverflow
[post_id]: 925718
[parent_id]: 923922
[tags]: 
You should take a look at the Boost ASIO library. It is designed to dispatch events asynchronously. It can be paired with the Boost Thread library to build the system that you described. You would need to instantiate a single boost::asio::io_service object and schedule a series of asynchronous events ( boost::asio::io_service::post or boost::asio::io_service::dispatch ). Next, you call the run member function from n threads. The io_service object is thread-safe and guarantees that your asynchronous handlers will only be dispatched in a thread from which you called io_service::run . The boost::asio::strand object is also useful for simple thread synchronization. For what it is worth, I think that the ASIO library is a very elegant solution to this problem.
