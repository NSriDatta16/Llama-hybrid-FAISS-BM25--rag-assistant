[site]: stackoverflow
[post_id]: 2004149
[parent_id]: 2003135
[tags]: 
You should be able to build an app like this in a way that it won't slow down linearly with the number of hits. From what you said, it sounds like you have two main potential performance bottlenecks. The first is inserts. If you can have your inserts happen at the end of the table, that will minimize fragmentation and maximize throughput. If they're in the middle of the table, performance will suffer as fragmentation increases. The second area is the aggregations. Whenever you do a significant aggregation, be careful that you don't cause all in-memory buffers to get purged to make room for the incoming data. Try to minimize how often the aggregations have to be done, and be smart about how you group and count things, to minimize disk head movement (or maybe consider using SSDs). You might also be able to do some of the accumulations at the web tier based entirely on the incoming data rather than on new queries, perhaps with a fallback of some kind if the server goes down before the collected data is written to the DB. Are you using INNODB or MyISAM? Here are a few performance principles: Minimize round-trips from the web tier to the DB Minimize aggregation queries Minimize on-disk fragmentation and maximize write speeds by inserting at the end of the table when possible Optimize hardware configuration
