[site]: stackoverflow
[post_id]: 4308919
[parent_id]: 4308787
[tags]: 
There are two kinds of nesting you can do: a tree and a nested set. acts_as_tree stores only a parent_id and so it is really fast to write new entries, but you have to recursively walk the chain of id numbers to get a list of all the children. This is not a good choice when you need to do lots of reads. awesome_nested_set records three bits of information: parent_id , lft and rgt . The left and right values are calculated so that they contain all the children ids for that entry. This is very fast for read operations but slower to write. In your case I think awesome_nested_set is more appropriate. You might think it seems overkill, but nested sets get complicated in a hurry. You need to use the nested set pattern to efficiently query children. You only need to use two methods to render the entire tree of comments: iterate over Comment.roots and for each comment, render comment.children . class ModelController 'comment', :object => comment %> 'comment', :collection => comment.children %> To save a nested comment, simply fill in the parent_id and awesome_nested_set will do the rest. I don't think rolling your own solution will be any more elegant than this. Update : Looks like the awesome_nested_set hasn't been updated in some time. Check out ancestry instead. Does basically the same things.
