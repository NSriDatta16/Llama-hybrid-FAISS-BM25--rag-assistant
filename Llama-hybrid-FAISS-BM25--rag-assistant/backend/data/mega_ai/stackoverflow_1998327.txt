[site]: stackoverflow
[post_id]: 1998327
[parent_id]: 1998109
[tags]: 
The purpose of metrics is to have more control over your project. They are not a goal on their own, but can help to increase the overall quality and/or to spot design disharmonies. Cyclomatic complexity is just one of them. Test coverage is another one. It is however well-known that you can get high test coverage and still have a poor test suite, or the opposite, a great test suite that focus on one part of the code. The same happens for cyclomatic complexity. Consider the context of each metrics, and whether there is something to improve. You should try to avoid accidental complexity , but if the processing has essential complexity , you code will anyway be more complicated. Try then to write mainteanble code with a fair balance between the number of methods and their size. A great book to look at is " Object-oriented metrics in practice ".
