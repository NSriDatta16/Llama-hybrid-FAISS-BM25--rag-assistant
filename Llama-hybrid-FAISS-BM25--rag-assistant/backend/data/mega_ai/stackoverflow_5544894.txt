[site]: stackoverflow
[post_id]: 5544894
[parent_id]: 
[tags]: 
Test Driven Development - Unit Testing (in CakePHP)

I am having some issues getting my head round Unit Testing in CakePHP, in particular when testing database insert/updates. Let's say I have a model that something like this: class User { var $name = 'User'; function updatePassword($data) { return $this->updateAll($data); } } class UserTestCase { function testUpdatePassword() { $tmpData = array( 'User' => array( 'password' => sha1(uniqid('', true)) //dummy pass ); $result = $this->User->updatePassword($tmpData); $this->assertTrue($result); } } The problem I have is that in my test case: I have to provide dummy data that would normally be retrieved from forms The format of the dummy data does not take into account the fact that the actual form data might be incorrect I am only testing whether or not the update succeeds: it seems like a lot of effort to create all the dummy data to test this This example might seem a bit contrived (I could do an update in the controller without having created an extra model method for example) but the main point is that, when testing update/inserts, the data is dummy data and data retrieved from forms might differ and the benefits don't seem to outweigh the costs. Your approaches to TDD and unit testing are appreciated and an idea of what kind of coverage you generally try to give to cases would be nice. Cheers
