[site]: stackoverflow
[post_id]: 5187692
[parent_id]: 
[tags]: 
is there a pragmatic reason to use "if (0 == p) " instead of "if (!p)"?

I'm inclined to write if statements by using logical negation operator: if (!p) some_code(); Some people around me tend to use explicit comparison, so that the code looks like: if (FOO == p) some_code(); where FOO is one of false , FALSE , 0 , 0.0 , NULL , etc. I prefer the short form because it is: operator!= friendly generic programming friendly laconic (and even more beautiful , as for me) What are the pragmatic benefits of writing this otherwise (if any)?
