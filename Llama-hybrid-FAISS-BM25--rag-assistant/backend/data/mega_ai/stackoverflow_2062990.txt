[site]: stackoverflow
[post_id]: 2062990
[parent_id]: 2062824
[tags]: 
Your old table was bit confusing as it seems like it only rates 1 teacher or teachers as a whole. Now it seems like your new design process requires you to: - store rating and averages of teachers - track historical ratings from students rating table should look something like Table: rating rating_id student_id teacher_id grade_id date_created 1 101 21 1 2010-01-23 04:24:51 2 102 21 1 2010-01-23 04:26:51 3 102 22 2 2010-01-23 04:28:51 4 103 24 1 2010-01-23 04:44:51 Your code usage: $rating_value = $_GET['rating']; // Remember to sanitize your inputs $student_id = $_GET['student_id']; $teacher_id = $_GET['teacher_id']; rate_a_teacher($teacher_id, $student_id, $rating_value); Your method: function rate_a_teacher($teacher_id, $student_id, $rating_value) { // Find the corrosponding to specified rating value $grade_id = find_grade_id($rating_value); //TODO $sql = " INSERT INTO rating ('student_id', 'teacher_id', 'grade_id', 'date_created') VALUE ($student_id, $teacher_id, $grade_id, NOW); "; mysql_query($sql); } I skipped implementation for find_grade_id() for you to fill it in yourself. The purpose of splitting your calcualted values to individual records is so that you can start do interesting reports, like such: Find average rating value of each teacher for the past 3 months: SELECT teacher_id, (SUM(points)/COUNT(rating_id)) AS average_score FROM rating LEFT JOIN grades ON grades.id = rating.grade_id WHERE date_created > SUBDATE(NOW(), INTERVAL 3 MONTH) GROUP BY teacher_id
