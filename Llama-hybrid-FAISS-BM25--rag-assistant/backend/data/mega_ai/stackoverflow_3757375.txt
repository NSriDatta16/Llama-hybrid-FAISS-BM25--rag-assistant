[site]: stackoverflow
[post_id]: 3757375
[parent_id]: 3756924
[tags]: 
The sanitization you propose is not enough. An attacker could redirect to a data:uri url that contains base64 encoded html/javascript. This would allow the attacker to execute arbitrary javascript code. For example, this code snippet will alert 'xss' (in firefox, safari and opera) var data = 'data:text/html;base64,PHNjcmlwdD5hbGVydCgiWFNTIik8L3NjcmlwdD4='; location.replace(data); Besides, it may be possible to redirect to a anonymous FTP url, or use some other obscure protocol. Instead of blacklisting protocols/keywords, use a whitelist approach instead. Maintain a list of good urls in your javascript code. Then, read the fragment identifier and see if it is in this known list of urls. If it is not, stop the process. In security, whitelists are always preferable to blacklists.
