[site]: stackoverflow
[post_id]: 3201211
[parent_id]: 3201154
[tags]: 
As of CMake 3.1+ the developers strongly discourage users from using file(GLOB or file(GLOB_RECURSE to collect lists of source files. Note: We do not recommend using GLOB to collect a list of source files from your source tree. If no CMakeLists.txt file changes when a source is added or removed then the generated build system cannot know when to ask CMake to regenerate. The CONFIGURE_DEPENDS flag may not work reliably on all generators, or if a new generator is added in the future that cannot support it, projects using it will be stuck. Even if CONFIGURE_DEPENDS works reliably, there is still a cost to perform the check on every rebuild. See the documentation here . There are two goods answers ( [1] , [2] ) here on SO detailing the reasons to manually list source files. It is possible. E.g. with file(GLOB : cmake_minimum_required(VERSION 2.8) file(GLOB helloworld_SRC "*.h" "*.cpp" ) add_executable(helloworld ${helloworld_SRC}) Note that this requires manual re-running of cmake if a source file is added or removed, since the generated build system does not know when to ask CMake to regenerate, and doing it at every build would increase the build time. As of CMake 3.12, you can pass the CONFIGURE_DEPENDS flag to file(GLOB to automatically check and reset the file lists any time the build is invoked. You would write: cmake_minimum_required(VERSION 3.12) file(GLOB helloworld_SRC CONFIGURE_DEPENDS "*.h" "*.cpp") This at least lets you avoid manually re-running CMake every time a file is added.
