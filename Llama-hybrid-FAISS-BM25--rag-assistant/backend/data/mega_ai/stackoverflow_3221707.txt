[site]: stackoverflow
[post_id]: 3221707
[parent_id]: 3221687
[tags]: 
Besides looking at the framework, you also need to consider a lot of things about yourself (and any other team members) when evaluating the risks: If the framework is a new, immature, "bleeding-edge" framework, are you going to be willing and able to debug it and fix or work around whatever problems you encounter? If there is a small community, you'll have to do a lot of this debugging and diagnosis yourself. Will you have time to do that and still meet whatever deadlines you may have? Have you looked at the framework yourself to determine how good it is, or are you willing to rely on what others say about it? Why do you trust their judgment? Why do you want to use this rather than the "officially sanctioned Java EE framework"? Is it a pragmatic reason, or just a desire to try something new? If problems with the framework cause you to miss deadlines or deliver a poor product, how will you talk about it with your boss or customer?
