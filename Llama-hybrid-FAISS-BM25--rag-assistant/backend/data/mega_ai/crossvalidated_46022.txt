[site]: crossvalidated
[post_id]: 46022
[parent_id]: 
[tags]: 
LibSVM cost weights for unbalanced data doesn't work

I have a dataset where the number of negative labeled values is 163 times the number of positive labeled values. That is, I have an unbalanced data set. I tried: model = svmtrain(trainLabels, trainFeatures, '-h 0 -b 1 -s 0 -c 10 -w1 163 -w-1 1'); [predicted_label, accuracy, prob_estimates] = svmpredict(testLabels, testFeatures, model, '-b 1'); Accuracy was nearly 99%. I searched and found a post (#7) [dead link?] where it says: have you tried weighting on a smaller scale (ie: I changed my model to: model = svmtrain(trainLabels, trainFeatures, '-h 0 -b 1 -s 0 -c 10 -w1 0.5 -w-1 0.003'); [predicted_label, accuracy, prob_estimates] = svmpredict(testLabels, testFeatures, model, '-b 1'); I have still high accuracy every time because of unbalanced data. Any ideas? PS: I am trying to implement the first challenge of KDD Cup 2008 - Breast Cancer. I want to rank the candidates by decreasing order.
