[site]: stackoverflow
[post_id]: 104252
[parent_id]: 104196
[tags]: 
It's a trade-off. For an individual developer who wants to improve his understanding of the framework and guidelines, I would definitely encourage it. FxCop generates a lot of noise / false positives, but I've also found the following benefits: it detects bugs (e.g. a warning about an unused argument may indicate you used the wrong argument in the method body). understanding the guidelines FxCop is following helps you to become a better developer. However with a mixed-ability team, FxCop may well generate too many false positives to be useful. Junior developers will have difficulty appreciating whether some of the more esoteric violations thrown up by FxCop should concern them or are just noise. Bottom line: If you're developing reusable class libraries, such as an in-house framework, make sure you have good developers and use FxCop. For everyday application development with mixed-ability teams, it will probably not be practicable.
