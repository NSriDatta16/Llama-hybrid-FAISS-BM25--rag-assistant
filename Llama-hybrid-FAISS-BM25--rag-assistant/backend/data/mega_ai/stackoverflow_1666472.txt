[site]: stackoverflow
[post_id]: 1666472
[parent_id]: 1666238
[tags]: 
Defining the struct in C# When defining your struct in C# make sure you use datatypes which match the C++ implementations. Char in C++ as Byte in C# etc... You need to add some attributes to ensure your struct memory layout in C# matches the C++ implementation [StructLayout(LayoutKind.Sequential, Size=TotalBytesInStruct),Serializable] public struct MyStruct { } Passing the struct Declare a struct in C# using the same data structure. Pass a pointer to the struct to your C# app from C++ and cast it to the new struct in C#. Calling you C# dll For calling your C# DLL, your best option is to use a mixed mode assembly in C++. This allows you to use the pragmas managed and unmanaged to switch between native and managed code. This way you can nicely wrap you C# class with a workable C++ wrapper. See this Microsoft article . Be aware though, this is not supported on Mono.
