[site]: stackoverflow
[post_id]: 4257834
[parent_id]: 4256799
[tags]: 
I would read each CSV row, and then store it in a Student struct. const unsigned int MaxFields = 5; const unsigned int MaxContents = 80; void readRow(FILE * f, char dataRow[MaxFields][MaxContents]) { int c; unsigned int i; char buffer[MaxContents]; int pos; int field; // Empty all fields for(i = 0; i } This way, you are reading the contents in a vector of strings. The vector of strings is initialised to the empty string so there is no problem if one field is empty or missing. Once a row is read, you can store it in a Student struct: char * safeStrDup(const char * src) { char * toret = strdup( src ); if ( toret == NULL ) { fprintf( stderr, "Not enough memory\n" ); exit( EXIT_FAILURE ); } return toret; } void store(Student *s, char dataRow[MaxFields][MaxContents]) { s->matriculationNumber = atoi( dataRow[ 0 ] ); s->firstName = safeStrDup( dataRow[ 1 ] ); s->lastName = safeStrDup( dataRow[ 2 ] ); s->birthday = safeStrDup( dataRow[ 3 ] ); s->averageGrage = atof( dataRow[ 4 ] ); } Take into account that some steps are missing. But this skeleton should give you a good starting point. Hope this helps.
