[site]: stackoverflow
[post_id]: 1271353
[parent_id]: 1271320
[tags]: 
Generators can't be rewound. You have the following options: Run the generator function again, restarting the generation: y = FunctionWithYield() for x in y: print(x) y = FunctionWithYield() for x in y: print(x) Store the generator results in a data structure on memory or disk which you can iterate over again: y = list(FunctionWithYield()) for x in y: print(x) # can iterate again: for x in y: print(x) The downside of option 1 is that it computes the values again. If that's CPU-intensive you end up calculating twice. On the other hand, the downside of 2 is the storage. The entire list of values will be stored on memory. If there are too many values, that can be unpractical. So you have the classic memory vs. processing tradeoff . I can't imagine a way of rewinding the generator without either storing the values or calculating them again. You could also use tee as suggested by other answers, however that would still store the entire list in memory in your case, so it would be the same results and similar performance to option 2.
