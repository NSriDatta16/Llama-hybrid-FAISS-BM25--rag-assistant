[site]: stackoverflow
[post_id]: 1339186
[parent_id]: 1338201
[tags]: 
Ultimately, you're asking how to tell the ViewComments function which button's properties it's working with. Do you understand what the Sender parameter is doing in the OnClick event? It's telling the event handler which object's event is being handled. It's serving precisely the role that you're looking to bring to the ViewComments function. That's what Mason was getting at in his answer. Rather than pass all the property values, pass the object itself : procedure ViewComments(CommentButton: TCustomSpeedButton); Then call it from all your buttons' event handlers: procedure TForm1.CustomSpeedButton1Click(Sender: TObject); begin ViewComments(CustomSpeedButton1); end; procedure TForm1.CustomSpeedButton2Click(Sender: TObject); begin ViewComments(CustomSpeedButton2); end; No strings, no case statements, no lookups. That should answer your question, but you can do it even better. Remember what I said before about the Sender parameter? When someone clicks the first button, the Sender parameter of that OnClick handler will be the button, so we can rewrite the first event handler like this: procedure TForm1.CustomSpeedButton1Click(Sender: TObject); begin ViewComments(Sender as TCustomSpeedButton); end; And you can rewrite the second event handler like this: procedure TForm1.CustomSpeedButton2Click(Sender: TObject); begin ViewComments(Sender as TCustomSpeedButton); end; Hmm. They're the same. Having two identical functions is wasteful, so get rid of one and rename the other so it doesn't sound button-specific: procedure TForm1.CommentButtonClick(Sender: TObject); begin ViewComments(Sender as TCustomSpeedButton); end; Then set the OnClick properties of both buttons to refer to that one event handler. You can't do that just by double-clicking the property in the Object Inspector. You'll need to either type the name yourself, choose it from the drop-down list, or assign the event property at run time: CustomSpeedButton1.OnClick := CommentButtonClick; CustomSpeedButton2.OnClick := CommentButtonClick; I'd also like to encourage you to use more meaningful names for your controls. That Label15 is particularly egregious. How can you remember that the fifteenth label is the one that indicates that editing is in progress? Call it EditInProgressLabel , for instance.
