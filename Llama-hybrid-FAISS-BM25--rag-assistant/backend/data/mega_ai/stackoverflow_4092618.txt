[site]: stackoverflow
[post_id]: 4092618
[parent_id]: 4089008
[tags]: 
As you have alluded to, you have 2 choices: 1) Encrypt the current state of the game and put it into a cookie This can definitely be done so that the client cannot modify the state, by using a encryption. You will however need to send a plain text version of the game state down to the client as well. When the client sends back their move, you would decrypt the cookie to get the last state, validate their move and modify the state. Rinse and repeat. The downside of this is the increased traffic and the need to implement the de/encryption. 2) Store the game state on the server and use a cookie as the user identifier (or a login system) This is probably the best solution as it will allow you to structure the data properly and reduce the amount of traffic to the user. You will just need to send the current state of the game down to the client. The client then just sends back their move. When you receive their move, you load the game from storage, validate the client made a valid mode, then adjust the state. The downside is that you need to keep the state at your end for some time, either in a DB or a cache (Velocity?). Also consider a NoSQL solution for this perhaps.
