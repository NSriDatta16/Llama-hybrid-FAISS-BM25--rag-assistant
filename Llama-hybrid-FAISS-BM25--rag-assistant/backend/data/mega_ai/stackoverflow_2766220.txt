[site]: stackoverflow
[post_id]: 2766220
[parent_id]: 2757590
[tags]: 
You have to ask yourself, "why do we normalize?" There are three primary reasons: Data consistency Update Speed Size Data Consistency It's nice having drop downs and all the rows that mean the same thing having the same FK, right? Pretty obvious. This is really important for DB's with multiple data "editors". But this is only as good as our processes. Let's say it's a Flight database and there's an entry for National Airport in Washington DC... and some adds a NEW entry for Reagan National Airport in Washington DC... the FK's will be there, and be used in the children table but won't be worth much... But it's still a good thing to do so... Update Speed What we should have done is Update the row for National Airport with a new name. Because there's just one parent row, makes it a very simple change. If my flight table had the text I would have been updating millions of rows. Size If I did store "Reagan National Airport" on every record, it would take more space than an FK of say, 19. Size used to be a really big deal, but SAN makes it pretty irrelevant. Conclussions Ok, So are you worried that your SOLO data collection app can't keep the names of the instruments straight? Is data consistency going to be a challenge? Ok, So How many times do you think you'll change the name of instrument or data point? I mean Dissolved O2 is Dissolved O2, Turbidity is Turbidity, right? But If you did need to do a mass update I bet you'll have downtime between runs to do it. So this isn't an issue. Ok, So size, sure... that's a lot of measurements; but, Don't make the measurement "Dissolved Oxygen", DO2 is fine... how much bigger is that than some FK like "7? Spend the space to save time. Don't Normalize because you've always been told that the thing good database designers do. Know why you're doing it and why you're choosing what you're choosing.
