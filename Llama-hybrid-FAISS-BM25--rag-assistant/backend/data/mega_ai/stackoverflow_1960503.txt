[site]: stackoverflow
[post_id]: 1960503
[parent_id]: 
[tags]: 
Passing objects as arguments in VBScript

I'm working on a project to capture various disk performance metrics using VBScript and would like to use a sub procedure with an object as an argument. In the following code samples the object I'm referring to is objitem.AvgDiskQueueLength which will provide a value for the disk queue length. I haven't found a way to make it work since it is recognized as a string and then doesn't capture the value. My goal is to make it easy for anyone to change the counters that are to be captured by only having to make a change in one location(the procedure call argument). The way I'm going about this may not be the best but I'm open to suggestions. The sub procedure call is below. PerfCounter "Average Disk Queue Length", "disk_queueLength", "objItem.AvgDiskQueueLength" The following code is the sub procedure. Sub PerfCounter(CounterDescription, CounterLabel, CounterObject) Set colItems = objWMIService.ExecQuery("SELECT * FROM Win32_PerfFormattedData_PerfDisk_PhysicalDisk",,48) args_index = args_index + 1 arrCriteria = split(command_line_args(args_index),",") strDriveLetter = UCase(arrCriteria(0)) intCriticalThreshold = arrCriteria(1) intWarningThreshold = arrCriteria(2) For Each objItem in colItems With objItem WScript.Echo "objitem.name = " & objitem.name If InStr(objItem.Name, strDriveLetter & ":") > 0 Then intChrLocation = InStr(objItem.Name, strDriveletter) strInstanceName = Mid(objItem.Name, intChrLocation, 1) End If If strDriveLetter = strInstanceName AND InStr(objItem.Name, strDriveLetter & ":") > 0 Then If intActiveNode = 1 OR Len(intActiveNode) CInt(intCriticalThreshold) Then arrStatus(i) = "CRITICAL: " & strDriveLetter & ": " & CounterDescription arrTrendData(i) = CounterLabel & "=" & CounterObject intExitCode = 2 arrExitCode(i) = intExitCode ElseIf CInt(CounterOjbect) => CInt(intWarningThreshold) AND CInt(CounterObject)
