[site]: crossvalidated
[post_id]: 446439
[parent_id]: 
[tags]: 
How is R producing these ARIMA forecasts?

I am trying to understand what R is doing to produce forecasts for a particular ARIMA model I fitted. I used R to fit an ARIMA (1,0,0)(1,0,0)[5] error model with the following data. Time Series: Start = 1 End = 113 Frequency = 1 [1] -7.14350665 -6.73165280 -7.83548281 -4.30565291 -2.88642538 -8.02231296 [7] -1.51434007 -7.03125494 -4.90820782 -7.37263594 -6.99763160 1.61536844 [13] -6.65929571 -7.08597878 -6.71677058 -6.84377671 -0.67738303 -5.94119848 [19] -2.60765436 -0.72883740 -2.19761607 -3.26346896 -7.12577627 -2.04590492 [25] -0.10615455 -5.74073754 -0.55885525 -4.45595224 -2.31422721 -1.51466722 [31] -1.07916082 -7.14001403 2.56805438 -1.00693993 -1.86195796 -4.40997737 [37] -3.03161377 -2.22823164 -5.75399905 -5.74919856 -5.89791612 -1.45997721 [43] -1.50145004 0.87110026 0.80863650 -5.51231682 -5.41865691 -5.48808301 [49] -5.73650485 -5.16338305 -5.93872588 -1.60867764 -4.96849580 -5.68901940 [55] -0.24450719 -5.43569136 0.21061774 0.17970190 0.49289760 -4.95969802 [61] -5.38250360 0.12825664 -4.96919159 4.91420400 -1.64231438 -5.04322677 [67] -4.85993664 -5.57683987 4.49079441 2.06421751 -0.85523832 -0.75936491 [73] -0.73331619 -0.67445696 0.47672500 0.52226478 -5.01028727 -0.34117444 [79] 0.06680984 2.85285597 2.19874190 -4.79919738 3.84652672 -1.56689807 [85] 5.17368392 0.48262304 0.67389789 0.57239262 0.51711997 0.67139680 [91] 1.01257370 1.08726740 1.17538371 3.44020625 2.81917055 2.46195644 [97] -0.49988983 2.44369015 3.79962767 1.68364602 4.22746379 0.36932087 [103] 2.33035539 3.31986940 -0.29803386 4.31593086 2.18883434 0.64759198 [109] 2.44158613 1.65587246 -0.35450341 -0.12559422 3.60052663 R fitted the following seasonal model. Series: tsdata ARIMA(1,0,0)(1,0,0)[5] with drift Coefficients: ar1 sar1 intercept drift 0.0069 0.2615 -5.8280 0.0724 s.e. 0.0954 0.0916 0.6218 0.0094 sigma^2 estimated as 6.491: log likelihood=-264.16 AIC=538.32 AICc=538.88 BIC=551.96 I used the following code to do this: modeltest The residuals of the model are as follows: Time Series: Start = 1 End = 113 Frequency = 1 [1] -1.33958175 -1.00272634 -2.14026149 1.20469075 2.48405984 -2.28224209 [7] 4.09675615 -1.22867217 -0.04582958 -2.94278213 -1.25813615 5.58791270 [13] -1.34463507 -2.33255587 -1.36514602 -1.65029884 2.21201128 -0.96779960 [19] 2.44561312 4.15104160 2.65010973 -0.07162532 -2.59191657 1.58018249 [25] 2.94647973 -2.36704291 3.07669244 0.09897993 0.87898341 1.11255235 [31] 2.96656604 -4.51574308 6.20955663 1.94741957 0.85870792 -1.84896031 [37] 1.07975326 -0.72931622 -3.36124250 -3.16805913 -2.70505533 1.31574830 [43] 0.98297984 4.22626918 4.08675736 -2.24794822 -3.32472654 -3.42903781 [49] -4.35063205 -3.80827087 -2.98764901 1.25876933 -2.16565186 -2.85126006 [55] 2.39479697 -2.68318935 1.81198201 2.57556037 3.01826552 -3.91477077 [61] -2.98562252 0.98893558 -4.18131624 5.60216092 0.35101571 -2.95704586 [67] -4.24538732 -3.67357541 3.75193158 2.93541617 0.85721847 0.86606202 [73] 1.02618596 -1.60249048 0.14796761 0.89163639 -4.72465092 -0.07713191 [79] 0.23024025 2.65942770 1.92319139 -3.67632002 3.73346870 -1.89091287 [85] 4.10599741 -0.50851438 1.49099180 -0.93863870 0.38505445 -1.28598866 [91] 0.24003801 0.20081530 0.26222277 2.48762505 1.75744694 1.26247814 [97] -1.76891114 1.11908664 1.80949315 -0.20241804 2.39520048 -0.75959536 [103] 0.39977440 0.97337604 -2.14859781 1.76812047 0.56973994 -1.52974926 [109] -0.03346987 0.06333687 -3.20791607 -2.45362229 1.61708100 Finally, R produced the following forecasts: Point Forecast Lo 80 Hi 80 Lo 95 Hi 95 114 2.534172 -0.73096624 5.799310 -2.459426 7.527769 115 2.371187 -0.89402849 5.636402 -2.622529 7.364903 116 1.898794 -1.36642181 5.164009 -3.094922 6.892510 117 2.012113 -1.25310213 5.277329 -2.981603 7.005829 118 3.040056 -0.22515960 6.305271 -1.953660 8.033772 119 2.814627 -0.56040282 6.189657 -2.347036 7.976289 120 2.825455 -0.54957938 6.200490 -2.336215 7.987126 121 2.755365 -0.61967014 6.130400 -2.406306 7.917035 122 2.838455 -0.53657995 6.213490 -2.323215 8.000125 123 3.160746 -0.21428935 6.535780 -2.000925 8.322416 124 3.155243 -0.22717250 6.537659 -2.017715 8.328201 125 3.211529 -0.17088706 6.593945 -1.961430 8.384488 126 3.246652 -0.13576403 6.629068 -1.926307 8.419611 127 3.321836 -0.06057973 6.704252 -1.851123 8.494795 128 3.459578 0.07716242 6.841994 -1.713380 8.632537 129 3.511593 0.12867294 6.894513 -1.662137 8.685323 130 3.579767 0.19684709 6.962687 -1.593963 8.753497 131 3.642407 0.25948658 7.025327 -1.531323 8.816137 132 3.715523 0.33260326 7.098444 -1.458207 8.889253 133 3.805001 0.42208063 7.187921 -1.368729 8.978731 134 3.872058 0.48910331 7.255013 -1.301725 9.045841 135 3.943341 0.56038664 7.326296 -1.230441 9.117124 136 4.013177 0.63022248 7.396132 -1.160606 9.186960 I would really like to understand the actual equation that's being used to generate these forecasts. I'm not too clear on how ARIMA error models with seasonal components work.
