[site]: stackoverflow
[post_id]: 5633246
[parent_id]: 5474578
[tags]: 
Didn't need to use any of the above in the end. Ony of my collegues solved the problem in the end (Thanks Tony Broodie). The way to do this was to compare to seqval, then take+1. Simples. SqlExecutor.ExecuteReader(cnn, string.Format("SELECT {0} , __$start_lsn, __$seqval , __$update_mask " + "FROM cdc.fn_cdc_get_all_changes_{1}(@startLsn,@endLsn,'all update old') cdc {2} " + "where __$operation = {3} ORDER BY __$start_lsn, __$seqval", columns, captureInstance, joins, (int)operation), reader => { if (reader != null) items.Add(createEntity(reader)); }, 5, 60, new SqlParameter("@startLsn", lsn), new SqlParameter("@endLsn", endLsn)); }); startLsn = lsn; seqVal = sequence; var startIndex = sequence == null ? 0 : items.FindIndex(0, item => item.Lsn.SequenceEqual(lsn) && item.Seqval.SequenceEqual(sequence)) + 1; //
