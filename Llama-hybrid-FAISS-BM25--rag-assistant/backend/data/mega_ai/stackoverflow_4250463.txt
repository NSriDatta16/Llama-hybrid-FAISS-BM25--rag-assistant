[site]: stackoverflow
[post_id]: 4250463
[parent_id]: 
[tags]: 
Binding Javascript keypress events

I have a need to monitor the state of the Shift key, whether it is up or down. Its purpose is to notify the user that while the shift key is held down, the drag and drop operation they are about to perform is going to COPY the node(s), and not move them. I have it working perfectly with the code below, however, if I hold the Shift key and perform the drag and drop, the hook no longer exists; the screen no longer responds to the key press and remains in the "pressed" state. I'm guessing there is either an order of operations issue or a missing piece. Javascript experts please advise. document.onkeydown = KeyDownHandler; document.onkeyup = KeyUpHandler; var SHIFT = false; function KeyDownHandler(e) { var x = ''; if (document.all) { var evnt = window.event; x = evnt.keyCode; } else { x = e.keyCode; } DetectKeys(x, true); ShowReport(); } function KeyUpHandler(e) { var x = ''; if (document.all) { var evnt = window.event; x = evnt.keyCode; } else { x = e.keyCode; } DetectKeys(x, false); ShowReport(); } function DetectKeys(KeyCode, IsKeyDown) { if (KeyCode == '16') { SHIFT = IsKeyDown; } else { if (IsKeyDown) CHAR_CODE = KeyCode; else CHAR_CODE = -1; } } function ShowReport() { var copyLabel = document.getElementById(" "); if (SHIFT) { copyLabel.style.display = "inline"; ob_copyOnNodeDrop = true; } else { copyLabel.style.display = "none"; ob_copyOnNodeDrop = false; } }
