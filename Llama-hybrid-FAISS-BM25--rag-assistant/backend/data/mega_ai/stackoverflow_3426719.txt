[site]: stackoverflow
[post_id]: 3426719
[parent_id]: 3426299
[tags]: 
The problem is that when you are data binding the subcategories dropdown, there is no DataBinding Context (see here for more info, pay attention to David Fowler's comments). I don't think the UpdatePanel is the issue as the behavior is the same with or without it (and if you wrap the entire DetailsView in an UpdatePanel). A solution is to load the items individually instead of data binding the control. It seems a little clumsy, I admit, but it does work. protected void category_select_index_changed(object sender, EventArgs e) { DropDownList ddl_categories = (DropDownList)dvw.FindControl("ddl_categories"); IEnumerable sections = new SUBCATEGORY[] { new SUBCATEGORY() { Name = "First " + ddl_categories.SelectedValue, Subcategory_id = "1" }, new SUBCATEGORY() { Name = "Second", Subcategory_id = "2" } }; DropDownList ddl_subcategories = (DropDownList)dvw.FindControl("ddl_subcategories"); ddl_subcategories.Items.Clear(); foreach (SUBCATEGORY cat in sections) { ddl_subcategories.Items.Add(new ListItem(cat.Name, cat.Subcategory_id)); } } A better option would be to not use Bind in the control, and just set the value in the ObjectDataSource's parameters on Insert/Update. Update: You can set the ObjectDataSource value directly. Add an event handler for the OnInserting (or OnUpdating as needed) as follows: protected void ods_OnInserting(object sender, ObjectDataSourceMethodEventArgs e) { DropDownList ddl_subcategories = (DropDownList)dvw.FindControl("ddl_subcategories"); e.InputParameters["Subcategory_id"] = ddl_subcategories.SelectedValue; } I can't actually test this right now, but it should be close.
