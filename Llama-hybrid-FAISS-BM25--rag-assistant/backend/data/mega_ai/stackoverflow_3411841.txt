[site]: stackoverflow
[post_id]: 3411841
[parent_id]: 3411192
[tags]: 
Courtesy of Itzik Ben-Gan: WITH tblRanges AS ( SELECT 1 AS ID UNION SELECT 2 AS ID UNION SELECT 3 AS ID UNION SELECT 9 AS ID UNION SELECT 10 AS ID UNION SELECT 11 AS ID UNION SELECT 13 AS ID UNION SELECT 15 AS ID UNION SELECT 16 AS ID ), StartingPoints AS ( SELECT ID, ROW_NUMBER() OVER(ORDER BY ID) AS rownum FROM tblRanges AS A WHERE NOT EXISTS (SELECT * FROM tblRanges AS B WHERE B.ID = A.ID - 1) ), EndingPoints AS ( SELECT ID, ROW_NUMBER() OVER(ORDER BY ID) AS rownum FROM tblRanges AS A WHERE NOT EXISTS (SELECT * FROM tblRanges AS B WHERE B.ID = A.ID + 1) ) SELECT S.ID AS start_range, E.ID AS end_range FROM StartingPoints AS S JOIN EndingPoints AS E ON E.rownum = S.rownum; You can read a full explanation from his chapter in SQL Sever MVP Deep Dives called Gaps and Islands . He explains various techniques (including cursors) and compares them in terms of performance.
