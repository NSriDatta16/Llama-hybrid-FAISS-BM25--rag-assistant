[site]: stackoverflow
[post_id]: 5641242
[parent_id]: 5631420
[tags]: 
This macro will define a function that turns its non-nil arguments into an alist bound during execution of the body: (defmacro defnamed (fun-name alist-sym (&rest args) &body body) `(defun ,fun-name (,@args) (let ((,alist-sym)) ,@(mapcar (lambda (s) `(when ,s (push (cons ',s ,s) ,alist-sym))) (reverse args)) ,@body))) Demonstration: (defnamed make-my alist (a b c) alist) (make-my 1 NIL 3) => ((A . 1) (C . 3))
