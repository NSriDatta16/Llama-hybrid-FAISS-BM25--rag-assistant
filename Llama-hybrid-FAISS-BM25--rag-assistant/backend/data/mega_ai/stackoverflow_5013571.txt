[site]: stackoverflow
[post_id]: 5013571
[parent_id]: 
[tags]: 
Is there a nicer way to convert a string into a data set in python?

I've just done an assignment for one of my classes in Python, it works fine and I'm satisfied with it, but it looks so ugly! I've already submitted this code as we are not being marked on how it looks, but that it runs properly. I wouldn't mind some tips and pointers on how to convert strings to data sets for future projects though. The input is a grid made up of nodes and edges, an example would be: "4:(1,2;4),(2,6;3),(3,7;15),(4,8;1),(5,6;1),(6,7;1),(5,9;9),(6,10;2),(7,11;1),(8,12;23),(9,10;5),(9,13;7),(10,14;6),(11,15;3),(12,16;3),(13,14;4),(15,16;7)" The first number before ":" is the size of the grid (4x4), (1,2;4) means a edge going from node 1 to 2 with cost 4. The following code converts this to an array where array[0] is grid size, and array[1] is a dictionary formated like (node1,node2)=cost. def partitionData(line): finalDic = dict() #partition the data around the formating line = line.split(":") line[1] = line[1].split("),(") #clean up data some more line[1][0] = line[1][0][1:] end = len(line[1])-1 line[1][end] = line[1][end][:len(line[1][end])-2] #simplify data and organize into a list for i in range(len(line[1])): line[1][i] = line[1][i].split(",") line[1][i][1] = line[1][i][1].split(";") #clean up list for j in range(len(line[1][i])): line[1][i].append(line[1][i][1][j]) del line[1][i][1] #convert everything to integer to simplify algorithm for i in range(len(line[1])): for j in range(len(line[1][i])): line[1][i][j] = int(line[1][i][j]) line[0] = int(line[0]) newData = dict() for i in range(len(line[1])): newData[(line[1][i][0],line[1][i][1])] = line[1][i][2] line[1] = newData for i in line[1]: if not ((min(i),max(i)) in finalDic): finalDic[(min(i),max(i))] = line[1][i] else: print "There is a edge referenced twice!" exit() line[1] = finalDic return line I had something cleaner at first, but it did not take into account that the digits could be larger than 9. I think this is very ugly, there has to be a prettier way to do this.
