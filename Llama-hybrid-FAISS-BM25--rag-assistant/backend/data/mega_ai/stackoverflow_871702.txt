[site]: stackoverflow
[post_id]: 871702
[parent_id]: 871035
[tags]: 
it's certainly usable. For simple concepts it is adequate. I find that I'm often trying to get a user to input something he doesn't understand. At times, it's been data I don't understand. Then I feel it's REALLY IMPORTANT to get a good understanding of exactly what your data represents, and then rather than ask for a table of numbers, find a way to inform your user of what he's entering at the same time as he's entering it. For instance, in the very simple example you give (pretend it's complicated), you could actually display a picture of a box on the screen as well as the data. As you input the data, the box may shift a little or visibly resize itself. You could then further this by allowing them to drag the edges of the box and have the drag update the fields. Although this is too simple an example to warrant that kind of effort, I've had a lot of success--for instance setting up a circuit where you must contain a DS0 in a group of DS0s inside a DS1 or T1 which is in a bundle of T1s in an OC-3 which is on one of 3 channels on a fiber loop. It was actually much more complicated than that and took 10 engineers 2 days to document correctly once they figured out what I was asking. At one point we had 4 white boards full of permutations, then we refactored them down to a single (very crowded) piece of paper. Once I could understand that, I made a GREAT UI for it. Also that paper became a marketing document itself--they had never described what their box actually does before (and that's exactly what their marketing manager said when he looked at the paper). So the shorter take-away version: For anything that isn't obvious, try to fully analyze and comprehend the business problem behind the data you are presenting to/requesting from the customer. When you grok it, figure out exactly what caused the break-through and turn it into a GUI.
