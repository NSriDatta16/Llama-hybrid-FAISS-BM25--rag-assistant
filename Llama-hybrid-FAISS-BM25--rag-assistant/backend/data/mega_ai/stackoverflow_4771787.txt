[site]: stackoverflow
[post_id]: 4771787
[parent_id]: 4660587
[tags]: 
One additional point should be noted: If you want to display a message box in an application that is neither a windows forms application or a forms application (such as a .NET console application), you should not drag in assembly references for either as seems to be the common mantra all over the internet. Instead, you should use pinvoke and call into User32 as follows: [DllImport("user32.dll", SetLastError = true, CharSet = CharSet.Auto)] public static extern MessageBoxResult MessageBox(IntPtr hWnd, String text, String caption, int options); /// /// Flags that define appearance and behaviour of a standard message box displayed by a call to the MessageBox function. /// [Flags] public enum MessageBoxOptions : uint { Ok = 0x000000, OkCancel = 0x000001, AbortRetryIgnore = 0x000002, YesNoCancel = 0x000003, YesNo = 0x000004, RetryCancel = 0x000005, CancelTryContinue = 0x000006, IconHand = 0x000010, IconQuestion = 0x000020, IconExclamation = 0x000030, IconAsterisk = 0x000040, UserIcon = 0x000080, IconWarning = IconExclamation, IconError = IconHand, IconInformation = IconAsterisk, IconStop = IconHand, DefButton1 = 0x000000, DefButton2 = 0x000100, DefButton3 = 0x000200, DefButton4 = 0x000300, ApplicationModal = 0x000000, SystemModal = 0x001000, TaskModal = 0x002000, Help = 0x004000, //Help Button NoFocus = 0x008000, SetForeground = 0x010000, DefaultDesktopOnly = 0x020000, Topmost = 0x040000, Right = 0x080000, RTLReading = 0x100000, } /// /// Represents possible values returned by the MessageBox function. /// public enum MessageBoxResult : uint { Ok = 1, Cancel, Abort, Retry, Ignore, Yes, No, Close, Help, TryAgain, Continue, Timeout = 32000 } var result = User32.MessageBox(IntPtr.Zero, "Debugging Break", "Your Console Application", (int)User32.MessageBoxOptions.Ok);
