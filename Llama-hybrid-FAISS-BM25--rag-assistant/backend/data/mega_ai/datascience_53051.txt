[site]: datascience
[post_id]: 53051
[parent_id]: 52978
[tags]: 
I am also currently working on a binary classification problem with an imbalanced data set! Here's what I've found useful: Use class weights. If you're using Keras you can pass this as an argument to model.fit(). Here is a notebook from Francois Chollet, creator of Keras, using this on an imbalanced data set for a binary classification problem. Use a large batch size during training so that each batch will have at least a few True data points. Use an appropriate metric. For example, accuracy is generally not a good one to use with imbalanced data - for example if you were trying to optimize accuracy, the model would ultimately learn to just classify a sample as False every time as it would end up with an accuracy of 99% which seems great but completely defeats the purpose of what you're trying to do. Area under the precision-recall curve is a good choice for imbalanced datasets, but I encourage you to do some reading and find a metric that works best for your problem. Hope this helps and let me know if you have any more questions!
