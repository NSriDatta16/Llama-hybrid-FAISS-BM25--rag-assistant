[site]: datascience
[post_id]: 109590
[parent_id]: 15989
[tags]: 
Multiclass Averaging Introduction I refer you to the original article for more details. Sklearn documentation defines the average briefly: 'macro' : Calculate metrics for each label, and find their unweighted mean. This does not take label imbalance into account. 'micro' : Calculate metrics globally by counting the total true positives, false negatives and false positives. Macro averaging Macro averaging reduces your multiclass predictions down to multiple sets of binary predictions, calculates the corresponding metric for each of the binary cases, and then averages the results together. As an example, consider precision for the binary case. $P =\dfrac{TP}{TP+FP}$ In the multiclass case, macro averaging reduces the problem to multiple one-vs-all comparisons. The precision is calculated for each “relevant” column. This process is repeated for the other levels. The results are then averaged together. The formula representation looks like this. For k classes: $ P_{macro} = \dfrac{P_a + P_b + ... + P_n}{k}$ Note that in macro averaging, all classes get equal weight when contributing their portion of the precision value to the total. This might not be a realistic calculation when you have a large amount of class imbalance. In that case, a weighted macro average might make more sense Micro averaging Micro averaging treats the entire set of data as an aggregate result, and calculates 1 metric rather than k metrics that get averaged together. For precision, this works by calculating all of the true positive results for each class and using that as the numerator, and then calculating all of the true positive and false positive results for each class, and using that as the denominator. The formula representation looks like this. For k classes: $ P_{micro} = \dfrac{TP_a + TP_b + ... + TP_n}{\left(TP_a + TP_b + ... + TP_n\right) + ( FP_a + FP_b + ... + FP_n)}$ In this case, rather than each class having equal weight, each observation gets equal weight. This gives the classes with the most observations more power.
