[site]: stackoverflow
[post_id]: 195444
[parent_id]: 190461
[tags]: 
Storing the password hash in the database is not optimal secure in case the database contents get into unauthorized hands. There is no way to reverse the hash directly, but there are online dictinonaries (like here ) for reversing hashed (pass)words. In the DB you should store somethig like: md5(login_name + domain_or_appname_salt + password); The salt in the middle prevents many forms of dictionary attacks. On the clients side (in the browser) you would have a login form with username and password. A small piece of javascript would hash the userame + app_salt_ and password, so only the login_name and generated hash are sent to the server. Now, the plaintext password will never be send to the server in plain text. So you should not have to rely on HTTPS here. The same technique can be used in the password update form. Thus the server never knows the plaintext password. I hope you got some inspiration from this and the other answers. Happy Hacking! Huibert
