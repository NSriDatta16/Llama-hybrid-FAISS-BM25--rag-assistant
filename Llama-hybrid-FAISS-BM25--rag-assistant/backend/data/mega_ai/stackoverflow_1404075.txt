[site]: stackoverflow
[post_id]: 1404075
[parent_id]: 
[tags]: 
Visual Studio 2005 C compiler problem when optimizing a switch statement

General Question which may be of interest to others: I ran into a, what I believe, C++-compiler optimization (Visual Studio 2005) problem with a switch statement. What I'd want to know is if there is any way to satisfy my curiosity and find out what the compiler is trying to but failing to do. Is there any log I can spend some time (probably too much time) deciphering? My specific problem for those curious enough to continue reading - I'd like to hear your thoughts on why I get problems in this specific case. I've got a tiny program with about 500 lines of code containing a switch statement. Some of its cases contain some assignment of pointers. double *ptx, *pty, *ptz; double **ppt = new double*[3]; //some code initializing etc ptx, pty and ptz ppt[0]=ptx; ppt[1]=pty; // The middle statement seems to hang the compiler. The compilation never ends. OK, I didn't wait for longer than it took to walk down the hall, talk to some people, get a cup of coffee and return to my desk, but this is a tiny program which usually compiles in less than a second. Remove a single line (the one indicated in the code above) and the problem goes away, as it also does when removing the optimization (on the whole program or using #pragma on the function). Why does this middle line cause a problem? The compilers optimizer doesn't like pty. There is no difference in the vectors ptx, pty, and ptz in the program. Everything I do to pty I do to ptx and ptz. I tried swapping their positions in ppt, but pty was still the line causing a problem. I'm asking about this because I'm curious about what is happening. The code is rewritten and is working fine. Edit: Almost two weeks later, I check out the closest version to the code I described above and I can't edit it back to make it crash. This is really annoying, embarrassing and irritating. I'll give it another try, but if I don't get it breaking anytime soon I guess this part of the question is obsolete and I'll remove it. Really sorry for taking your time.
