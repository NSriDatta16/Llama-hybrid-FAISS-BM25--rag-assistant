[site]: stackoverflow
[post_id]: 504402
[parent_id]: 
[tags]: 
How to handle escape sequences in string literals in ANTLR 3?

I've been looking through the ANTLR v3 documentation (and my trusty copy of "The Definitive ANTLR reference"), and I can't seem to find a clean way to implement escape sequences in string literals (I'm currently using the Java target). I had hoped to be able to do something like: fragment ESCAPE_SEQUENCE : '\\' '\'' { setText("'"); } ; STRING : '\'' (ESCAPE_SEQUENCE | ~('\'' | '\\'))* '\'' { // strip the quotes from the resulting token setText(getText().substring(1, getText().length() - 1)); } ; For example, I would want the input token " 'Foo\'s House' " to become the String " Foo's House ". Unfortunately, the setText(...) call in the ESCAPE_SEQUENCE fragment sets the text for the entire STRING token, which is obviously not what I want. Is there a way to implement this grammar without adding a method to go back through the resulting string and manually replace escape sequences (e.g., with something like setText(escapeString(getText())) in the STRING rule)?
