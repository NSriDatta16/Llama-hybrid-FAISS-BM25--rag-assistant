[site]: stackoverflow
[post_id]: 292375
[parent_id]: 292363
[tags]: 
From wikibooks : There are three basic kinds of scope for variables in Java: local variable, declared within a method in a class, valid for (and occupying storage only for) the time that method is executing. Every time the method is called, a new copy of the variable is used. instance variable, declared within a class but outside any method. It is valid for and occupies storage for as long as the corresponding object is in memory; a program can instantiate multiple objects of the class, and each one gets its own copy of all instance variables. This is the basic data structure rule of Object-Oriented programming; classes are defined to hold data specific to a "class of objects" in a given system, and each instance holds its own data. static variable, declared within a class as static, outside any method. There is only one copy of such a variable no matter how many objects are instantiated from that class. So yes, memory consumption is an issue, especially if the ArrayList inside run() is local.
