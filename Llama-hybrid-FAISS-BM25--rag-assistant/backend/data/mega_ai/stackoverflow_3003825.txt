[site]: stackoverflow
[post_id]: 3003825
[parent_id]: 2896249
[tags]: 
The short answer is, you don't. The important question to ask yourself when writing these specs, is why do we do them? What is the value in the spec? The value in the spec usually comes in communicating the ideas of the business with the development team. Scrum is designed to bring the business (in the form of the Product Owner) to the development team. By interacting with the team frequently (remember, individuals and interactions over processes and tools), and by seeing working software frequently, the business can work hand in hand with developers to produce software that solves business problems better than by trying to spec out the whole thing before you get to try it out. This is how Agile projects do a better job of delivering the product the business wants instead of the product they requested. That said, there are certain base criteria that need to be met. We can test for this, and as with any good tests, we can automate it. Have a look at BDD and Cucumber . In addition to your User Story, it's good to have a basic set of conditions of satisfaction, preferably in the "Give/When/Then" format. These conditions are the minimum set of criteria for the story to be accepted as complete. For example, "Given I am logged in, when I log out, then I am taken back to the home page". If you're going to have acceptance criteria, you're going to want to automate it. The worst part of most specifications is they often end up out of date and collecting dust when the project is complete. Also, you shouldn't be assigning tasks to the team. Scrum teams are self organizing and anyone should be able to grab any task they feel they can work on while respecting the priority of the stories. Swarming is a big part of the performance benefits of Scrum. You may want to consider bringing in an outside coach to assist with your transition.
