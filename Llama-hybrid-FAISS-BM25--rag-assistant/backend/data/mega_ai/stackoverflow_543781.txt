[site]: stackoverflow
[post_id]: 543781
[parent_id]: 541344
[tags]: 
Before we had operating systems people building applications would sit down and discuss things like: how will we store data on disks what file system structure will we use what hardware will our application work with etc, etc Operating systems emerged from collections of 'developer libraries'. The beauty of an operating system is that your UNWRITTEN software has certain characteristics, it can: talk to permanent storage talk to the network run in a command line be used in batch talk to a GUI etc, etc Once you have shifted to an operating system - you don't go back to the status quo ante... Erlang/OTP (ie not Erlang) is an application system - it runs on two or more computers. The beauty of an APPLICATION SYSTEM is that your UNWRITTEN software has certain characteristics, it can: fail over between two machines work in a cluster etc, etc... Guess what, once you have shifted to an Application System - you don't go back neither... You don't have to use Erlang/OTP, Google have a good Application System in their app engine, so don't get hung up about the language syntax. There may well be good business reasons to build on the Erlang/OTP stack not the Google App Engine - the biz dev guys in your firm will make that call for you.
