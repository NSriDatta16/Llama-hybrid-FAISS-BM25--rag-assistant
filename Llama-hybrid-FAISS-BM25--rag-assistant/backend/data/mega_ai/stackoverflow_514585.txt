[site]: stackoverflow
[post_id]: 514585
[parent_id]: 512984
[tags]: 
Bruno, thank you so much for your assistance! The FirstOrDefault() was probably the largest help. Following some of what you did, and another resource I came up with the following that seems to work beautifully! This LINQ query below gave me nearly an exact replication of the SQL I posted above. Here's the other resource I found on doing a LEFT OUTER JOIN in LINQ: Blog Post Final Answer: from pmt in products_mainTable join opt in orders_productsTable on pmt.guid equals opt.products_mainTableGUID into tempProducts from orderedProducts in tempProducts.DefaultIfEmpty() join omt in orders_mainTable on orderedProducts.orders_mainTableGUID equals omt.guid into tempOrders from ordersMain in tempOrders.DefaultIfEmpty() group pmt by new { pmt.sku, orderedProducts.color, orderedProducts.size } into g orderby g.FirstOrDefault().sku select new { g.FirstOrDefault().guid, g.Key.sku, g.Key.size, QTY = g.FirstOrDefault().orders_productsTable.Sum(c => c.qty), SUM = g.FirstOrDefault().orders_productsTable.Sum(c => c.itemprice * c.qty), AVG = g.FirstOrDefault().orders_productsTable.Average(c => c.itemprice * c.qty), Some = g.FirstOrDefault().orders_productsTable.Average(p => p.qty).GetValueOrDefault(0), }
