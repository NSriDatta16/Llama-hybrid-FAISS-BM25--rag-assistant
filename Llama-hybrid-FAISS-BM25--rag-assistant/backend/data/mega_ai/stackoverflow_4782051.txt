[site]: stackoverflow
[post_id]: 4782051
[parent_id]: 
[tags]: 
Print size of a vector through an iterator

I'm trying to print the size of a vector . Sounds easy, but the vector is in a map . Currently I have an iterator on a map looking like this: map , vector > > >::iterator it; I am trying to display the size like this: EDIT: The iterator is intialised like this: it = csvMap.find(commandList.at(lineCount)); cout second.size() It's not working, the program crashes. I think a way would be to make a temp vector and fill it with the value it->second; But just to get the size is kind of wasting space isn't it? Is there a better way to do so? Thanks in advance! EDIT2: removed old code EDIT 3: new code: map , vector > parameterMap; parameterMap.insert(pair , vector > ( part1_input, part2_output)); map , vector > > >::iterator it; cout second.size() no need to search for something. Just insert the fist entries */ listedParameterMap.insert(listedParameterMap.end(), 1, parameterMap); csvMap.insert(pair , vector > > > (commandList[lineCount], listedParameterMap)); cout , vector > > > (commandList[lineCount], listedParameterMap)); } else { /* * it != csvMap.end() * The command is found. Append the parameterMap to the vector in the map */ cout second.size()-1 second.push_back(parameterMap); } } cout second.size() I hope someone is still reading this... I found now that it.second seems to be the problem on the first interation. But I don't get why. Code snippet (also in the code above): if(csvMap.size() == 0) { /* * csvMap is empty -> no need to search for something. Just insert the fist entries */ listedParameterMap.insert(listedParameterMap.end(), 1, parameterMap); csvMap.insert(pair , vector > > > (commandList[lineCount], listedParameterMap)); cout second.size() This seems not to work. Although its goning into it. Any idea why? comanndList and listedParameterMap are as far as I see OK.
