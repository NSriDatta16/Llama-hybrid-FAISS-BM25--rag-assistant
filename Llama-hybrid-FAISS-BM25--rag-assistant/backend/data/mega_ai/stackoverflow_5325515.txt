[site]: stackoverflow
[post_id]: 5325515
[parent_id]: 5325096
[tags]: 
The simplest solution is to have two separate class models, one for Hibernate and one for JSON, and convert between them as necessary. It's not very elegant, though, so Jackson (which is the the JSON implementation used by Spring) provides an extension mechanism (called Modules ), which in turn allows you to register custom deserialization logic (i.e. how to turn JSON tokens into java objects). Have a look at that, see if it works for you. You;d then have to configure Jackson in the Spring context to use the custom mapper.
