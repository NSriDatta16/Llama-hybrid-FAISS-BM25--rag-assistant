[site]: stackoverflow
[post_id]: 2744728
[parent_id]: 2318952
[tags]: 
Thre is bug in 3.5.1 After cr.setProjection(Projections.countDistinct("memberId")); SQL result is count(memberId) bo not count(distinct memberId) after debug .... public final class Projections { public static CountProjection countDistinct(String propertyName) { return new CountProjection(propertyName).setDistinct(); } distinct is noticed but not used. public class CountProjection extends AggregateProjection { private boolean distinct; protected CountProjection(String prop) { super("count", prop); } public String toString() { if ( distinct ) { return "distinct " + super.toString(); } else { return super.toString(); } } public CountProjection setDistinct() { distinct = true; return this; } } and ... in AggregateProjection only getFunctionName() = functionName = "count" is used !!! public class AggregateProjection extends SimpleProjection { protected AggregateProjection(String functionName, String propertyName) { this.functionName = functionName; this.propertyName = propertyName; } public String getFunctionName() { return functionName; } public String getPropertyName() { return propertyName; } ... public String toSqlString(Criteria criteria, int loc, CriteriaQuery criteriaQuery) throws HibernateException { final String functionFragment = getFunction( criteriaQuery ).render( buildFunctionParameterList( criteria, criteriaQuery ), criteriaQuery.getFactory() ); return functionFragment + " as y" + loc + '_'; } protected SQLFunction getFunction(CriteriaQuery criteriaQuery) { return getFunction( getFunctionName(), criteriaQuery ); }
