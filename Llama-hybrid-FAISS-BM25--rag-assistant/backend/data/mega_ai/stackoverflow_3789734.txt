[site]: stackoverflow
[post_id]: 3789734
[parent_id]: 
[tags]: 
Has anyone succesfully got Tomcat running via Spring OSGi Web in ServiceMix4?

We've been using Fuse's Apache ServiceMix version 4.2.0-fuse-02-00 for a while now for standard OSGi applications and have been fairly successful. We've also been leveraging CXF for making web services available. Now we'd like to deploy our webapps to servicemix4 and leverage the OSGi layer for dependencies and services. However it seems that the packed in PAX Web does not support taglibs, which we've used heavily: Richfaces, facelets, etc. It seems that the springDM solution which allows for working taglibs outlined here: http://static.springsource.org/osgi/docs/current/reference/html/web.html should work, however I've had a hard time starting up the webserver, i currently get this error. Exception in thread "WebExtender-Init" java.lang.NoClassDefFoundError: org/apache/catalina/Loader at org.springframework.osgi.web.extender.internal.activator.WarListenerConfiguration.createDefaultWarDeployer(WarListenerConfiguration.java:194) at org.springframework.osgi.web.extender.internal.activator.WarListenerConfiguration. (WarListenerConfiguration.java:105) at org.springframework.osgi.web.extender.internal.activator.WarLoaderListener$1.run(WarLoaderListener.java:366) at java.lang.Thread.run(Thread.java:619) Caused by: java.lang.ClassNotFoundException: org.apache.catalina.Loader at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:494) at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:410) at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:398) at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:105) at java.lang.ClassLoader.loadClass(ClassLoader.java:248) ... 4 more I've created 2 Fragments as the Spring documentation suggests. but they will not resolve, they remain as Installed 1) the webserver config fragment has the following fragment host defined: org.springframework.osgi.web.extender and has a file META-INF/spring/extender/tomcat-deployer.xml containing 2) and a Catalina Config fragment with the following host: org.springframework.osgi.catalina.start.osgi and a conf/server.xml defined which is mostly a copy of a generic windows install of tomcat 6 server.xml file. I've also been messing with the dependencies for a few days now, it has been difficult. but here are the features I've been messing with to get this far. I've also been installing the fuse-servicemix default "jpa-hibernate" feature. mvn:org.osgi/org.osgi.compendium/4.1.0 mvn:javax.el/com.springsource.javax.el/1.0.0 mvn:javax.xml.ws/com.springsource.javax.xml.ws/2.1.1 mvn:javax.xml.stream/com.springsource.javax.xml.stream/1.0.1 mvn:javax.xml.rpc/com.springsource.javax.xml.rpc/1.1.0 mvn:javax.xml.soap/com.springsource.javax.xml.soap/1.3.0 mvn:javax.persistence/com.springsource.javax.persistence/1.99.0 mvn:org.aspectj/com.springsource.org.aspectj.tools/1.6.8.RELEASE mvn:org.apache.commons/com.springsource.org.apache.commons.logging/1.1.1 mvn:org.apache.commons/com.springsource.org.apache.commons.lang/2.4.0 mvn:org.apache.xmlcommons/com.springsource.org.apache.xmlcommons/1.3.4 mvn:org.jboss.el/com.springsource.org.jboss.el/2.0.0.GA mvn:org.jboss.javassist/com.springsource.javassist/3.9.0.GA mvn:org.aopalliance/com.springsource.org.aopalliance/1.0.0 spring-dependencies mvn:org.springframework.osgi/org.springframework.osgi.core/1.2.1 mvn:org.springframework.osgi/org.springframework.osgi.io/1.2.1 mvn:org.springframework.osgi/org.springframework.osgi.extender/1.2.1 mvn:org.springframework.osgi/org.springframework.osgi.extensions.annotation/1.2.1 mvn:org.springframework/org.springframework.aop/3.0.4.RELEASE mvn:org.springframework/org.springframework.asm/3.0.4.RELEASE mvn:org.springframework/org.springframework.aspects/3.0.4.RELEASE mvn:org.springframework/org.springframework.beans/3.0.4.RELEASE mvn:org.springframework/org.springframework.context/3.0.4.RELEASE mvn:org.springframework/org.springframework.context.support/3.0.4.RELEASE mvn:org.springframework/org.springframework.core/3.0.4.RELEASE mvn:org.springframework/org.springframework.expression/3.0.4.RELEASE mvn:org.springframework/org.springframework.jms/3.0.4.RELEASE mvn:org.springframework/org.springframework.jdbc/3.0.4.RELEASE mvn:org.springframework/org.springframework.transaction/3.0.4.RELEASE mvn:org.springframework/org.springframework.orm/3.0.4.RELEASE mvn:org.springframework.security/org.springframework.security.core/3.0.3.RELEASE mvn:org.springframework.osgi/org.springframework.osgi.web/1.2.0 mvn:org.springframework.osgi/org.springframework.osgi.web.extender/1.2.0 spring mvn:javax.ejb/com.springsource.javax.ejb/3.0.0 mvn:javax.activation/com.springsource.javax.activation/1.1.1 mvn:javax.mail/com.springsource.javax.mail/1.4.1 mvn:org.apache.coyote/com.springsource.org.apache.coyote/6.0.18 mvn:org.apache.juli/com.springsource.org.apache.juli.extras/6.0.18 mvn:org.apache.catalina/com.springsource.org.apache.catalina/6.0.18 mvn:org.springframework/org.springframework.instrument.tomcat/3.0.4.RELEASE spring-dependencies tomcat-dependencies mvn:javax.servlet/com.springsource.javax.servlet/2.5.0 mvn:javax.servlet/com.springsource.javax.servlet.jsp/2.1.0 mvn:javax.servlet/com.springsource.javax.servlet.jsp.jstl/1.2.0 mvn:javax.faces/com.springsource.javax.faces/1.2.0.09 mvn:javax.portlet/com.springsource.javax.portlet/2.0.0 > mvn:org.springframework/org.springframework.web/3.0.4.RELEASE mvn:org.springframework/org.springframework.web.servlet/3.0.4.RELEASE mvn:org.springframework/org.springframework.web.portlet/3.0.4.RELEASE mvn:org.springframework.webflow/org.springframework.binding/2.0.9.RELEASE mvn:org.springframework.webflow/org.springframework.js/2.0.9.RELEASE mvn:org.springframework.webflow/org.springframework.webflow/2.0.9.RELEASE mvn:org.springframework.webflow/org.springframework.faces/2.0.9.RELEASE mvn:com.sun.facelets/com.springsource.com.sun.facelets/1.1.14 I've considered switching to SpringDM but it seems like the project has been moved to Virgo which is only in incubator right now. Plus we've been mostly happy with Sericemix, including it's maven install feature. Any insight or resources would be appreciated, thanks, Jeremy
