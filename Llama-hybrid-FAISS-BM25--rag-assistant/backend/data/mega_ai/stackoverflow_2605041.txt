[site]: stackoverflow
[post_id]: 2605041
[parent_id]: 2515903
[tags]: 
This has worked for really weird heisenbugs. (I'd also recommend getting a copy of "Debugging" by Dave Argans, these ideas are partly derived form using his ideas!) (0) Check the ram of the system using something like Memtest86! The whole system exhibits the problem, so make a test jig that exercises the whole thing. Say it's a server side thing with a GUI, you run the whole thing with a GUI test framework doing the necessary input to provoke the problem. It doesn't fail 100% of the time, so you have to make it fail more often. Start by cutting the system in half ( binary chop) worse case, you have to remove sub-systems one at a time. stub them out if they can't be commented out. See if it still fails. Does it fail more often ? Keep proper test records, and only change one variable at a time! Worst case you use the jig and you test for weeks to get meaningful statistics. This is HARD; but remember, the jig is doing the work. I've got No threads and only one process, and I don't talk to hardware If the system has no threads, no communicating processes and contacts no hardware; it's tricky; heisenbugs are generally synchronization, but in the no-thread no processes case it's more likely to be uninitialized data, or data used after being released, either on the heap or the stack. Try to use a checker like valgrind. For threaded/multi-process problems: Try running it on a different number of CPU's. If it's running on 1, try on 4! Try forcing a 4-computer system onto 1. It'll mostly ensure things happen one at a time. If there are threads or communicating processes this can shake out bugs. If this is not helping but you suspect it's synchronization or threading, try changing the OS time-slice size. Make it as fine as your OS vendor allows! Sometimes this has made race conditions happen almost every time! Obversely, try going slower on the timeslices. Then you set the test jig running with debugger(s) attached all over the place and wait for the test jig to stop on a fault. If all else fails, put the hardware in the freezer and run it there. The timing of everything will be shifted.
