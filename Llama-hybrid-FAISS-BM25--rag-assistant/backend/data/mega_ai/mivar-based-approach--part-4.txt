{\displaystyle z} and required variables are denoted by w in the row ( m + 1 ) {\displaystyle (m+1)} . For example, z {\displaystyle z} denotes positions: 1,2,3 in the row ( m + 1 ) {\displaystyle (m+1)} ), the variable w {\displaystyle w} denotes the position ( n − 2 ) {\displaystyle (n-2)} . The search of such rules that can be fired, that is, all the input variables of which are known, is implemented successively, for example, top-down. Absent such rules, no logical inference path exists and input data refinement (addition) is requested. Rules that can be fired, are labeled in the corresponding place of service row. For example, we can write 1 in the matrix cell, which is illustrated in the cell ( 1 , n + 1 ) {\displaystyle (1,n+1)} . Given several such rules, the choice of rules to fire first is implemented according to previously determined criteria. Several rules can be fired simultaneously if sufficient resources are available. Rule (procedure) firing simulation is implemented by assigning the values “known” to the variables inferred in this rule, that is, z {\displaystyle z} in this example. A fired rule can be marked additionally, for example by number 2 for convenience of further work. For example, the corresponding changes are made in the cells ( m + 1 , n − 1 ) , ( m + 1 , n ) {\displaystyle (m+1,n-1),(m+1,n)} and ( 1 , n + 1 ) {\displaystyle (1,n+1)} . After rule firing simulation, goal achievement analysis is carried out, that is, required value acquisition is analyzed by comparing special characters in the service row. Given at least one “unknown” ( w {\displaystyle w} ) value in the service row ( m + 1 ) {\displaystyle (m+1)} , logical inference path search is carried out. Otherwise, the task is considered to be solved successfully and the rules fired in a corresponding order form the logical inference path searched. The availability of the rules that can be fired after defining new values at the previous stage is assessed. Absent firearable rules, no inference path exists and actions are taken analogous to step 2. Given fireable rules the inference path search continues. In this example such rules exist. In cell ( 2 , n + 1 ) {\displaystyle (2,n+1)} the number 1 is obtained as an indication that this rule can be fired. At the next stage, analogous to stage 4, the rules are fired (rule firing simulation), analogous to stages 5 and 6 necessary actions are performed to obtain the result. Stages 2–7 are implemented until the result is achieved. A path may or may not be found. Deducibility of the variables 4 and 5 in the cells ( m + 1 , 4 ) {\displaystyle (m+1,4)} and ( m + 1 , 5 ) {\displaystyle (m+1,5)} is obtained, and indication that the rule has already been fired in the cell ( 2 , n + 1 ) {\displaystyle (2,n+1)} is formed, that is, the number 2 is set. After that the analysis of the service row is carried out, which shows that not all the required variables are known. Thus, it is necessary to continue processing matrix V {\displaystyle V} of dimension ( m + n ) × ( n + 1 ) {\displaystyle (m+n)\times (n+1)} . The analysis of this matrix demonstrates the possibility of rule m {\displaystyle m} firing. When rule m is fired, new values are obtained for required variables as well. Thus, no required rules are in the service row and new values are obtained in the cells of the matrix: 2 appears in the cell ( m , n + 1 ) − 2 , {\displaystyle (m,n+1)-2,} and we got the value z {\displaystyle z} instead of w {\displaystyle w} in the cell ( m + 1 , n − 2 ) {\displaystyle (m+1,n-2)} . So, positive result is obtained, consequently, a logical inference path exists with given input values. References External links «Mivar» official website.