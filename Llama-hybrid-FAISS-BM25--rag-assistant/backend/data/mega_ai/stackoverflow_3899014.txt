[site]: stackoverflow
[post_id]: 3899014
[parent_id]: 3898873
[tags]: 
Don't write queries that use functions on columns to compare with constants. It makes them un-SARG-able and an eventual index on the setDate column cannot be used. Don't use literals where you can use a parameter If you must use literals for datetime, use the unseparated string format as is not language dependent and is always interpreted as ymd . In conclusion: SELECT COUNT(td.timeSheetID) FROM TimeSheet t INNER JOIN TimeSheetDetail td ON t.timeSheetID = td.timeSheetID WHERE t.setDate BETWEEN @dateFrom AND @dateTo AND t.employeeID = @employeeId; or (worse): SELECT COUNT(td.timeSheetID) FROM TimeSheet t INNER JOIN TimeSheetDetail td ON t.timeSheetID = td.timeSheetID WHERE t.setDate BETWEEN '20120810' AND '20120812' AND t.employeeID = 300; As for your question, the best way to scan a 'day' in a datetime range is to express the day as a range: SELECT COUNT(td.timeSheetID) FROM TimeSheet t INNER JOIN TimeSheetDetail td ON t.timeSheetID = td.timeSheetID WHERE t.setDate >= '20120811' AND t.setDate This will cover all hours of 20120811. Is it still better to parameters instead of literals, of course. And finally, the real question will be if you have a covering index for this query. Time series, like a 'timesheet' table, are almost always interogated by daterange, so a clustered index by (employeeID, setDate) is probably a good choice. A second best choice is a nonclustered index on the same.
