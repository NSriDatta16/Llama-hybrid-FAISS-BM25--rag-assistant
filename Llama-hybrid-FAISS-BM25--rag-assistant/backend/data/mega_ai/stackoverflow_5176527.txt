[site]: stackoverflow
[post_id]: 5176527
[parent_id]: 5174122
[tags]: 
If I'm not mistaken (which I most certainly may be), you can't do a query like you're trying to do with Wordpress's built in functions. What you can do is in your functions.php file (where one stores the theme's custom functions) having a function which takes an array of argument arrays and loops through them with every pass adding the returned posts to an array. I think get_posts() would be the best function to use for this since it returns the posts in an array instead of needing the Loop. function query_posts_multiple($arrArgs) { if (!is_array($arrArgs)) return false; // Prevents warnings and fatal errors. $posts = array(); foreach ($arrArgs as $args) { $posts = array_merge($posts, get_posts($args)); } return $posts; } For the args array, here's an example: $args = array(); $args[] = array( 'numberposts' => 7, 'tag' => "50", ); You would just use a foreach() loop in your theme. You would access the data using a $post-> column fashion. $posts = get_posts_multiple($args); foreach ($posts as $post) { // call all the $post->COLUMNs your heart desires } unset($posts); // Delete that variable just to be safe. To limit the number of posts, just keep count and stop the loop when you reach a certain number. To randomize your array, you can use shuffle() . This is probably a very, very dirty way of doing this, blame it on my extreme tiredness... Logan
