[site]: stackoverflow
[post_id]: 4124784
[parent_id]: 
[tags]: 
Java Web Start hangs when constructing a JFrame

I need help when starting my program with Java Web Start. I start my program from the homepage the program just hangs with a javaw-process in the process handler. When I dump the threads, using jvisualvm, I see that it hung in the "AWT-EventQueue-0" thread (when constructing my JFrame): "AWT-EventQueue-0" prio=6 tid=0x02da7c00 nid=0x1414 runnable [0x0367f000] java.lang.Thread.State: RUNNABLE at sun.awt.windows.WToolkit.getScreenInsets(Native Method) at sun.awt.windows.WToolkit.getScreenInsets(Unknown Source) at java.awt.Window.init(Unknown Source) at java.awt.Window. (Unknown Source) at java.awt.Frame. (Unknown Source) at javax.swing.JFrame. (Unknown Source) at se.testing.Application$2.run(Application.java:170) at java.awt.event.InvocationEvent.dispatch(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) Here is what the main looks like: public static void main(String... args) { .... SwingUtilities.invokeLater(new Runnable() { public void run() { JFrame f = new JFrame("Test"); ... } }); } Update : And here is the jnlp file: Application Testing What could be wrong?! (It is the first place I touch the GUI and I'm on Windows XP.) Also, I noticed that I have another AWT thread (??!?!) also hanging at different places: From run 1 I got it to hang here: "AWT-EventQueue-1" prio=6 tid=0x03448800 nid=0x152c runnable [0x036cf000] java.lang.Thread.State: RUNNABLE at sun.awt.windows.WComponentPeer.nativeHandleEvent(Native Method) at sun.awt.windows.WComponentPeer.handleEvent(Unknown Source) at sun.awt.windows.WWindowPeer.handleEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.KeyboardFocusManager.redispatchEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.SequencedEvent.dispatch(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.run(Unknown Source) And from run 2: "AWT-EventQueue-1" prio=6 tid=0x03448800 nid=0x1638 runnable [0x036cf000] java.lang.Thread.State: RUNNABLE at sun.awt.windows.WToolkit.isWindowTranslucencySupported(Native Method) at com.sun.awt.AWTUtilities.isWindowTranslucencySupported(Unknown Source) at com.sun.awt.AWTUtilities.isTranslucencySupported(Unknown Source) at javax.swing.RepaintManager.updateWindows(Unknown Source) at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source) at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source) at javax.swing.RepaintManager.seqPaintDirtyRegions(Unknown Source) at javax.swing.SystemEventQueueUtilities$ComponentWorkRequest.run(Unknown Source) at java.awt.event.InvocationEvent.dispatch(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.run(Unknown Source)
