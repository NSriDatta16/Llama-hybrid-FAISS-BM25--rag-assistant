[site]: stackoverflow
[post_id]: 1310856
[parent_id]: 1307936
[tags]: 
Okay first of, silverlight is not asp.net, WCF by design is stateless, unless otherwise constructed to keep state. Then if you want to keep state in silverlight 3, you could just create a static class with static properties and maintain these values across pages. But this is not an elegant solution. This is possible since SL is a clientside runtime, and your app exists within a xap assembly that is downloaded when you navigate to the url, so basically its like having a windows desktop app downloaded then running in a restricted security context. I dont want to get into the implications of this now, but its important you know this exists. A better way to solve your problem is to use the IsolatedStorage like so IsolatedStorageSettings.ApplicationSettings.Remove("UserName"); IsolatedStorageSettings.ApplicationSettings.Add("UserName", UserName); IsolatedStorageSettings.ApplicationSettings.Remove("Password"); IsolatedStorageSettings.ApplicationSettings.Add("Password", UserPassword); By doing this you could actually save data to the applicationsettings and re-use it on the next time the application is started. Remember everything stored in the IsolatedStorage is basically cleartext, accessible only from the same domain/site. You must secure your WCF service using one of the many security schemes available otherwise, the information SL3 transfers to the WCF service will be in cleartext and readable by anyone who puts in a little effort, and anyone can call your wcf service bypassing your SL app completely, so remember to properly secure everything.
