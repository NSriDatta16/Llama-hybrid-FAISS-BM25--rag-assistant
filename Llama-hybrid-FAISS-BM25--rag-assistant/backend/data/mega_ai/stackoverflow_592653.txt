[site]: stackoverflow
[post_id]: 592653
[parent_id]: 590919
[tags]: 
Your problem is your custom control's InitializeComponent() method. I have no idea why that is there. You would get that method automatically if you were implementing a UserControl, but inheriting from a standard control that method should not be there. With your base class having an InitializeComponent() method and your subclass also having one, someone is overwriting someone else. I just subclassed a label in C#. I dragged this on my form and the font displayed as the new font, not the base (Label) class's font. using System.Drawing; using System.Windows.Forms; namespace WindowsFormsApplication1 { public class MyLabel : Label { public MyLabel() { Font = new Font("Candara", 14); } } } I then created a second label, called MySubLabel which inherited from the MyLabel class. When I changed the ForeColor on the MyLabel class, the MySubLabel automatically updated. So this should work. Caveat: in Visual Studio you need to recompile the assembly before trying to see updates in the designer.
