[site]: crossvalidated
[post_id]: 511990
[parent_id]: 511982
[tags]: 
For a target state $s$ and any state $a,$ let $v_a(s,T)$ be the expected number of visits to state $s$ (not counting the current state) upon making $T\ge 0$ transitions from state $a.$ From basic properties of expectation and the Markov property, we know $v_a(s,0)=0$ for all $a.$ $v_a(s,T) = \sum_{r\in S} P_{ar} v_r(s,T-1)+ \mathcal{I}(r=s) .$ This is conveniently expressed in matrix notation by letting $\mathbf{v}(s,T)$ be the vector $(v_a(s,0))_{a\in S}:$ $\mathbf{v}(s,0) = \mathbf{0}.$ $\mathbf{v}(s,T) = \mathbb{P} \mathbf{v}(s,T-1) + \mathbf{e}_s.$ $\mathbf{e}_s = (0,\ldots, 0,1,0,\ldots,0)^\prime$ has its unique $1$ at position $s.$ By inspection, the solution (easily verified) is $$\mathbf{v}(s,T) = \mathbb{P}\left(\mathbb{P}\left(\cdots \mathbf{e}_s\right) + \cdots\right) + \mathbf{e}_s = \left(\mathbb{P}^T + \mathbb{P}^{T-1} + \cdots + \mathbb{P} + \mathbb{I}_3\right)\mathbf{e}_s.$$ In the question with $s=3$ and $a=1$ you would take the first entry in this vector, $v_1(3,T).$ To illustrate, here is brute-force R code to compute $\mathbf{v}(s,n):$ v (For long sequences of transitions you would want to diagonalize $\mathbb{P}$ and sum the resulting geometric series appearing the diagonal--but that's standard Markov Chain machinery which we needn't discuss here.) Here is R code to simulate 10,000 transitions starting at state a : sim Run these calculations with your favorite transition matrix to compare the results. If you don't have a favorite, here is code to generate interesting ones (they have a bunch of zeros in them): d For instance, after setting the seed with set.seed(17) , the output was > c(mean(sim), v[a]) [1] 2.132200 2.137539 showing good agreement between the observed frequency and computed value.
