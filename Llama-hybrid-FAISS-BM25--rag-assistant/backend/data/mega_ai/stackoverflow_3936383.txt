[site]: stackoverflow
[post_id]: 3936383
[parent_id]: 3928996
[tags]: 
If anyone is interested, I managed to get this working. The one thing that really helped me the most in fixing this was the Rails debugging console (which I finally started to properly use) which allowed me to look more closely at the variables in the Paperclip::Thumbnail class that my Autobackground class is inheriting from. Here's what I did: I changed the :auto_bg style to point to a special string that I could identify in my processor. Since my processor is subclassed from Paperclip::Thumbnail , the string that the style points to gets saved to @options[:geometry] . All I have to do in the overridden transformation_command method is check if @options[:geometry] is set to the special auto_bg string and then run my create_auto_bg method instead of letting the Thumbnail class do it's usual thing. My old create_auto_bg method wasn't properly creating the array of strings that Thumbnail needs to create the ImageMagick command, so I rewrote that and used the @current_geometry variable to find the height of the original image instead of the faulty target = @attachment.instance method that I had copied from Ryan Bate's railscast (not sure how it works in his code). I'm sure there's a more elegant solution to this, but I'm still quite new to Ruby and RoR, so this will have to do for now. I Hope this helps anyone facing a similar challenge :) #/app/models/image.rb class Image { :thumb => "32x32#", :auto_bg => "auto_bg" }, :processors => [:autobackground] end #/lib/paperclip_processors/Autobackground.rb module Paperclip class Autobackground
