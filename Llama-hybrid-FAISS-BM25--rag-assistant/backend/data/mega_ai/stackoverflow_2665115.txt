[site]: stackoverflow
[post_id]: 2665115
[parent_id]: 2665095
[tags]: 
I guess you could use a singleton but that would somewhat fall into the global category. class Librarian { static $instance = null; function __toString() { return 'Librarian Object'; } function foo() { return 'bar'; } function singleton() { if (is_null(self::$instance)) { self::$instance = new Librarian(); } return self::$instance; } } function basic() { echo Librarian::singleton(); // Librarian Object echo Librarian::singleton()->foo(); // bar } You can also have the singleton outside the class: class Librarian { function __toString() { return 'Librarian Object'; } function foo() { return 'bar'; } } function singleton() { static $instance = null; if (is_null($instance)) { $instance = new Librarian(); } return $instance; } function basic() { echo singleton(); // Librarian Object echo singleton()->foo(); // bar } What you want isn't possible, at least I don't see any simple or elegant way to do it.
