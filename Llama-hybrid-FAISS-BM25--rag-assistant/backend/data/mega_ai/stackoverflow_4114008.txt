[site]: stackoverflow
[post_id]: 4114008
[parent_id]: 4113888
[tags]: 
The question is quite broad. I find the administrative part is more complex than the technological part when it comes to PKIs. There's not so much to do when setting up a basic CA: keep the private key safe (as always), receive certificate requests, verify the identity of the requester somehow, issue the certificate and store it somewhere (you can implement revocation mechanisms on top of this). I'm simplifying the picture slightly, but that's roughly the whole process, and you can implement that in a number of languages with existing libraries without much difficulty. Using BouncyCastle in Java works, but I'm sure other tools work too, for example OpenSSL with Perl. Not all languages expose the whole OpenSSL API (if they use it under the hood), and it can be handy to have a library that can read and write ASN.1 structures (especially if you want specific extensions). For storage, it may be useful to combine this with a directory structure (for example, some LDAP based system), but this may depend on what you already have in terms of user-management system. The other aspect to take into account how simple it has to be for the users to request a certificate. This can be painful for users who have to request/use a certificate but don't have time to learn what it's all about. In-browser key-generation can be handy, instead of making them generate a CSR (more or less by hand). For in-browser generation, it's a combination of using (the form element introduced by Netscape for this - works on Firefox and Opera for example), ActiveX (for MSIE) or the Mozilla Javascript extensions . Instead of ActiveX, you could also have a standalone "wizard" that's a full application (it will have more permissions to do some certificate related operations, as otherwise, what's available through JScript/ActiveX from within MSIE is limited and depends on various security settings.) The other thing to take into account is the system whereby you verify the user's identity upon application. If it's relatively small, there's not much to do, but if it's a wider structure, you may need local representatives and various services that allow them to communicate those assertions by to the people who're going to issue the certificates. Most of what you need here will depend on the level of assurances you require. You might be interested in OpenCA .
