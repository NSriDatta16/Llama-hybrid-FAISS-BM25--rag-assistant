[site]: stackoverflow
[post_id]: 5552546
[parent_id]: 5552117
[tags]: 
Assuming you genuinely want to do this from scratch rather than using one of the perfectly good existing stack implementations then I would recommend: Create a "MyStack " class which implements any interfaces you want (perhaps List ?) Within MyStack create a "private static final class Node " inner class for each linked list item. Each node contains a reference to an object of type T and a reference to a "next" Node. Add a "topOfStack" Node reference to MyStack. The push and pop operations just need to operate on this topOfStack Node. If it is null, the Stack is empty. I'd suggest using the same method signatures and semantics as the standard Java stack, to avoid later confusion..... Finally implement any other methods you need. For bonus points, implement "Iterable " in such a way that it remembers the immutable state of the stack at the moment the iterator is created without any extra storage allocations (this is possible :-) )
