[site]: stackoverflow
[post_id]: 4771149
[parent_id]: 
[tags]: 
Can someone explain Maven 2 (or 3) dependency resolution to me?

I used Maven before in quite a few projects but they we already configured by someone else. I quickly understood the main concepts (groups, artifacts and versions for jars, local and remote repositories) so I assumed that if I'm asked I'll be able to set up a new project from scratch easily. That turned out not to be the case when I deal with multiple modules which depend on one another. I poked around maven docs but they are either way too concise or way too technical (sometimes I get a feeling that Maven people wrote it for themselves and not for Maven users). So I'm asking for community help. Here's a typical scenario: Three repositories: My local repo at /.m2 My company repo at http://maven.mycompany.com/repository Maven Central at http://repo1.maven.org/maven2/ I'm building a normal Java EE project consisting of one EJB jar with a corresponding client jar, a web module and a JPA module (I like keeping my entities and all db-connectivity separated from business logic). That gives me 5 project in my IDE: myapp-ear myapp-ejb myapp-ejb-client myapp-jpa myapp-web myapp-jpa is used by myapp-ejb and myapp-web . myapp-ejb-client contains business interfaces for my EJBs. How should I set all that up? I suspect that I need some kind of parent project but I'm not sure how should I organize inter-project dependency resolution. For example: currently when I specify com.mycompany.myapp myapp-jpa 0.1-SNAPSHOT in myapp-ejb 's pom.xml maven tries to search for it in my repository and tells me that the .jar can't be found. Even if I build and install all app components into my local repository one by one Maven always fails to build the ear file itself :( I'd love to get it working under Eclipse or NetBeans.
