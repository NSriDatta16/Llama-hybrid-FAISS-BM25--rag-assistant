[site]: crossvalidated
[post_id]: 370611
[parent_id]: 
[tags]: 
Training a probability density from realization data

I want to learn a function that estimates a probability density over some 3D volume. I have a neural network that would work for this task and I would readily be able to train it, if I had density training values. However, let's say I've only got data samples from this probability density. All the data in my training set consist of (x,y,z) coordinates I know were sampled from the probability I'm trying to learn. Is there a standard way to go about this? The direct way of learning the output of my function doesn't work as my labels don't provide any density. They are all 'ones' as those are point that were actually sampled. I could manually create a large volume of small cubes (voxels) and compute the observed density in each cube and use that to train. However, this feels like a very round-about way of going about this. And it feel it would need lots of data as many voxels would end up empty. Is there any more direct way to learn a probability density from a realization of points sampled from it?
