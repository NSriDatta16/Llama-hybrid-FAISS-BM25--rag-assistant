[site]: stackoverflow
[post_id]: 3096613
[parent_id]: 3096402
[tags]: 
There isn't automatic formatting like this built into Python. (The .format function syntax is borrowed from C#.) After all, Perl was "Practical Extraction and Report Language" and Python isn't designed for formatting reports. Your output could be done with the textwrap module, e.g. from textwrap import fill def formatItem(left, right): wrapped = fill(right, width=41, subsequent_indent=' '*15) return ' {0: >> print(formatItem('0123', 'This is some long text which would wrap past the 80 column mark and go onto the next line number of times blah blah blah.')) 0123 This is some long text which would wrap past the 80 column mark and go onto the next line number of times blah blah blah. Note that this assumes the "left" does not span over 1 line. A more general solution would be from textwrap import wrap from itertools import zip_longest def twoColumn(left, right, leftWidth=13, rightWidth=41, indent=2, separation=2): lefts = wrap(left, width=leftWidth) rights = wrap(right, width=rightWidth) results = [] for l, r in zip_longest(lefts, rights, fillvalue=''): results.append('{0:{1}}{2:{5}}{0:{3}}{4}'.format('', indent, l, separation, r, leftWidth)) return "\n".join(results) >>> print(twoColumn("I'm trying to format some strings for output on the command-line", "report style, and am looking for the easiest method to format a string such that I can get automatic paragraph formatting.")) I'm trying to report style, and am looking for the format some easiest method to format a string such strings for that I can get automatic paragraph output on the formatting. command-line
