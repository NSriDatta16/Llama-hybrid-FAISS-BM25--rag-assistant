[site]: stackoverflow
[post_id]: 728413
[parent_id]: 728319
[tags]: 
Danbrucs solution is more elegant, but here is a solution using a custom IComparer. This might be useful if you need more advanced conditions for your sort ordering. string[] svals = new string[] {"A", "B", "A", "C", "B", "C", "D", "E"}; List list = svals.OrderBy(a => a, new CustomComparer()).ToList(); private class CustomComparer : IComparer { private string firstPref = "A"; private string secondPref = "B"; private string thirdPref = "C"; public int Compare(string x, string y) { // first pref if (y == firstPref && x == firstPref) return 0; else if (x == firstPref && y != firstPref) return -1; else if (y == firstPref && x != firstPref) return 1; // second pref else if (y == secondPref && x == secondPref) return 0; else if (x == secondPref && y != secondPref) return -1; else if (y == secondPref && x != secondPref) return 1; // third pref else if (y == thirdPref && x == thirdPref) return 0; else if (x == thirdPref && y != thirdPref) return -1; else return string.Compare(x, y); } }
