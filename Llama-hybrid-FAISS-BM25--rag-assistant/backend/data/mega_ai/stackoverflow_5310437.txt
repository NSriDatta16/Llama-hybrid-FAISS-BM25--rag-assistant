[site]: stackoverflow
[post_id]: 5310437
[parent_id]: 5162120
[tags]: 
Like fudgy wrote you may consider setting your defaults outside the init method. I tried following that same tutorial and came up with the following code combining settings and methods, but I ran into some other disadvantage. (function( $ ){ var config, methods = { init: function(customSettings) { var config = { debug: true } return this.each(function () { if (customSettings) { $.extend(config, customSettings); } }); }, someMethod: function(arg) { if(options.debug) { // do something alert('debug ' + arg); } else { alert('no debug' + arg); } } } $.fn.myplugin = function (method) { if ( methods[method] ) { return methods[method].apply( this, Array.prototype.slice.call( arguments, 1 )); } else if ( typeof method === 'object' || ! method ) { return methods.init.apply( this, arguments ); } else { $.error( 'Method ' + method + ' does not exist on jQuery.myplugin' ); } }; })( jQuery ); But when your call it like: $('p.one').myplugin({ 'debug' : 'false' }); For the second paragraph debug is unfortunately still false. $('p.two').myplugin('someMethod', 'hmm!'); I first need to init the paragraph with 'true' again to be able to debug it. $('p.two').myplugin({ 'debug' : 'true' }); $('p.two').myplugin('someMethod', 'hmm!'); Did I oversee something in the tutorial?
