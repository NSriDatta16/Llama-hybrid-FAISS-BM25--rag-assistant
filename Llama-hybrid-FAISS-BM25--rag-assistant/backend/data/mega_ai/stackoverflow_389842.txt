[site]: stackoverflow
[post_id]: 389842
[parent_id]: 389680
[tags]: 
This is kind of a hack, but we use it for similar reasons with Findbugs and Checkstyle. You can set up an Ant task to do the following (this can be split out into multiple tasks, but I'm combining them for brevity): Run tests with coverage Parse the coverage results and get the coverage percentage Read tmp/lastCoverage.txt from last build (see step #5a) Compare the current coverage percentage with the percentage read from lastCoverage.txt If percentage DIDN'T decrease, write the new percentage over the contents of tmp/lastCoverage.txt If percentage DID decrease, keep the original file and echo "COVERAGE FAILURE" (with ant's echo task). Note that steps 2 through 5 don't necessarily need to be done with native Ant tasks - you could use something like Ant's javac task to run a Java program to do this for you. Then, configure Hudson: Under "Source code management", make sure "Use Update" is checked. This will allow your lastCoverage.txt file to be retained between builds. Note that this could be problematic if you really, really need things to be cleaned between builds. Use the Hudson Text Finder plugin with a regular expression to search for "COVERAGE FAILURE" in the build output (make sure that "Also search console output" is checked for the plugin). The text finder plugin can mark the build unstable. You can obviously replace things like the file name/path and console output to whatever fits within the context of your build. As I mentioned above, this is rather hacky, but it's probably one of the few (only?) ways to get Hudson to compare things in the previous build to the current build.
