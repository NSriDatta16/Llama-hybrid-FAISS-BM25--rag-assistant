[site]: stackoverflow
[post_id]: 5761142
[parent_id]: 5760866
[tags]: 
First, just to clear up the paragraph that was previously here, using b in its own (dynamic) initialisation here is not UB. Before the expression is evaluated, b is not uninitialised but zero-initialised. The temporary A must live for precisely as long as the full expression: Temporary objects are destroyed as the last step in evaluating the full-expression (1.9) that (lexically) contains the point where they were created. [ISO/IEC 14882:2003(E) 12.2/3] The line bool b = A(b).yield(); is a declaration, which is a statement, which is not an expression. The expression at hand is found only to the RHS of the = . [ISO/IEC 14882:2003(E) A.6] This would mean that the temporary should be destroyed before the dynamic initialisation takes place, no? Sure, the value true is held in the temporary that contains the result of the expression 1 until the initialisation completes, but the original A temporary should be destroyed before b is actually modified. Therefore I'd expect the output false , every time. 1 The first context is when an expression appears as an initializer for a declarator defining an object. In that context, the temporary that holds the result of the expression shall persist until the objectâ€™s initialization is complete" [ISO/IEC 14882:2003(E) 12.2/4]
