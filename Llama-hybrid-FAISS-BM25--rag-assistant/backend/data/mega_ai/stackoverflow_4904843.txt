[site]: stackoverflow
[post_id]: 4904843
[parent_id]: 
[tags]: 
Converting a rails 2 count calculation to rails 3

I am attempting to convert this rails 2 count calculation to rails 3 but I'm having some issues answers.count('user_agents.browser', :joins => :user_agent, :group => 'user_agents.browser', :order => 'COUNT(user_agents.browser) DESC') That is from rails 2 and gives me an error of PGError: ERROR: column answers.user_agents.browser does not exist LINE 1: SELECT COUNT("answers"."user_agents.browser") AS "count_... ^ : SELECT COUNT("answers"."user_agents.browser") AS "count_user_agents_browser", user_agents.browser AS user_agents_browser FROM "answers" INNER JOIN "user_agents" ON "user_agents"."id" = "answers"."user_agent_id" WHERE (answers.survey_id = 18) GROUP BY user_agents.browser ORDER BY COUNT(user_agents.browser) DESC I've tried converting myself, this is as close as I have gotten answers.select('COUNT(user_agents.browser)').joins(:user_agent).group('user_agents.browser').order('COUNT(user_agents.browser) DESC') But that still doesn't work and gives me this error undefined method `keys' for [# , # , # ]:ActiveRecord::Relation Some background, I am getting an array of answers from my question model that has_many Answers. Answers also belongs to the UserAgent model which has_many Answers. My end goal is to take an array of answers and figure out how many came from each UserAgent. This code work in rails 2. I am using Postgresql for the db.
