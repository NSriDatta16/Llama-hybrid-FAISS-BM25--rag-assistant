[site]: stackoverflow
[post_id]: 1415704
[parent_id]: 1415680
[tags]: 
The const char* returned by the c_str() method of a std::string points to a buffer owned by the std::string and only remains valid until the next call to a mutating method of the std::string . If you want to retain the contents of this buffer, you need to copy its contents somewhere else. Edit: Alternatively, you could retain an array of std::string to manage the storage of the strings and temporarily store the c_str() pointers in a parallel array of const char* as required for the interface. This obviates the need to copy the strings or manually deallocate the copies. In any case, it's important to not change any std::string while you are holding the const char* value returned by a prior call to c_str() .
