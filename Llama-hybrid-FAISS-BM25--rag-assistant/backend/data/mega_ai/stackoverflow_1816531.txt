[site]: stackoverflow
[post_id]: 1816531
[parent_id]: 
[tags]: 
Fluent NHibernate PersistenceSpecification CheckList

I am currently working on a college project in which we are using Fluent NHibernate. I am working on figuring how to create testing for our entities and Fluent mappings. I have, however, hit a dead end while trying to figure how to use the CheckList of PersistenceSpecification. The unit test fails with the following error: MvcShop.Core.Tests.EntitiesTests.ItemTest.CanMapItem threw exception: NHibernate.PropertyValueException: not-null property references a null or transient valueMvcShop.Core.Entities.ItemPicture.Item. The test is defined as: private IList _itemPictures = new List () { new ItemPicture { Filename = "test.jpg", Title = "Test title", PrimaryPicture = true}, new ItemPicture { Filename = "test2.jpg", Title = "Test title 2" } }; [TestMethod] public void CanMapItem() { new PersistenceSpecification (Session) .CheckProperty(i => i.Title, "Test item") .CheckProperty(i => i.Description, "Test description") .CheckProperty(i => i.SalesPrice, (decimal)0.0) .CheckList(i => i.ItemPictures, _itemPictures) // Complains that Item on ItemPicture is null. .VerifyTheMappings(); } My mappings are defined as: public ItemMap() { Table("Item"); Id(i => i.ItemID).GeneratedBy.Identity().Column("Item_id"); Map(i => i.ItemNo).Nullable().Length(30); Map(i => i.Title).Not.Nullable().Length(250); Map(i => i.Description).Nullable(); Map(i => i.SalesPrice).Not.Nullable().Precision(18); Map(i => i.AverageRating).Precision(18).Nullable(); Map(i => i.Visible).Not.Nullable(); Map(i => i.Weight).Not.Nullable().Precision(18); Map(i => i.TimesPurchased); Map(i => i.InStock).Not.Nullable(); Map(i => i.DateAdded).Not.Nullable(); HasManyToMany(i => i.ItemCategories).Cascade.All().Inverse().Table("ItemCategoryItem"); HasMany(i => i.ItemPictures).Cascade.AllDeleteOrphan().Inverse().LazyLoad(); HasMany(i => i.Comments).Cascade.AllDeleteOrphan().Inverse().LazyLoad(); HasMany(i => i.Ratings).Inverse().LazyLoad(); } public ItemPictureMap() { Table("ItemPicture"); Id(i => i.ItemPictureID).GeneratedBy.Identity().Column("ItemPicture_id"); Map(i => i.Title).Nullable(); Map(i => i.Filename).Not.Nullable(); Map(i => i.PrimaryPicture).Not.Nullable(); References(i => i.Item).Not.Nullable().Column("Item_id"); } I really can't figure how I can populate the Item property of ItemPicture when using the PersistenceSpecification class. Any ideas? Best Regards, Kenneth, Denmark
