[site]: datascience
[post_id]: 126986
[parent_id]: 
[tags]: 
What algorithm can I use to get the product that would give me the most profit given its buying cost, selling cost, sell volume and buy volume?

I'm working on an app for evaluating the products sold on a market in a videogame. The products can be bought for cheap and sold for expensive. I want to evaluate the best product to buy and sell, but this requires analyzing a few parameters. The parameters I can get for each product are: buy_summary sell_summary quick_status buy_summary and sell_summary are the current top 30 orders for each transaction type. quick_status is a computed summary of the live state of the product: sellVolume and buyVolume are the sum of item amounts in all orders. sellPrice and buyPrice are the weighted average of the top 2% of orders by volume. buyMovingWeek and sellMovingWeek is the historic transacted volume from last 7d + live state. sellOrders and buyOrders are the count of active orders. More info bout the parameters: https://api.hypixel.net/#tag/SkyBlock/paths/~1v2~1skyblock~1bazaar/get So far what I've done is: divide sellMovingWeek and buyMovingWeek by 7, and then divide the result by sellVolume and buyVolume respectively to get if all the orders will be cleared in a day. Example: if I sellMovingWeek has a value of 70, and sellVolume has a value of 10 i would get (70/7)/10=1 this means that in 1 day approximately all orders for this item are cleared. A value of 2 would mean that in half of a day, all orders are cleared... This is done for all products. The name i gave this values are sellAvailability and buyAvailability . Get the money that the user has available to spend, and divide the cost of each item by the money to get how many he can afford. Multiply the amount of each product by the cost of each of them (might sound redundant but if my wallet contains 10 coins and a product costs 3, i would actually spend 9 coins, not all 10). Multiply the amount of each product by the price it is sold. Subtract the total cost price from the selling price to get the profit Normalize all the values so sellAvailability , buyAvailability and Profit have the same magnitud. I get the difference between sellAvailability and buyAvailability for each product Normalize the difference, average and profit to get them on the same order of magnitude. I calculate a product score based on a weighted average using the difference between availabilities, the average of availabilities and the profit. This does not work because even tweaking the weights, i get products with high scores that would make someone go bankrupt. My major is not on economics and I guess that in that field there might be some formula that would solve my problem but after searching on internet i came emptyhanded and chatGPT didn't help at all. I wonder if any could come up with an algorithm get what product will give me the most profit taking in account the buying and selling volume.
