[site]: stackoverflow
[post_id]: 5059784
[parent_id]: 5059744
[tags]: 
If you want to copy some memory, you could just tell the compiler to do that: Edit: added a function for more readable code: #include using std::cout; using std::endl; #include template T memcpy(const U& source) { T temp; memcpy(&temp, &source, sizeof(temp)); return temp; } int main() { float f = 4.2; cout (f); cout [Code] [Updated Code] Edit: As user/GMan correctly pointed out in the comments, a full-featured implementation could check that T and U are PODs . However, given that the name of the function is still memcpy , it might be OK to rely on your developers treating it as having the same constraints as the original memcpy . That's up to your organization. Also, use the size of the destination, not the source. (Thanks, Oli.)
