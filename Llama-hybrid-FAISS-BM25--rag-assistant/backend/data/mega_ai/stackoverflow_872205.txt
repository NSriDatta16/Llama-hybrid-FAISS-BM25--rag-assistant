[site]: stackoverflow
[post_id]: 872205
[parent_id]: 867993
[tags]: 
You could also use the Windows Registry to store app-specific state. There are per-user and per-machine keys in the registry - either or both are available to you . For example, some people use the registry to store the location and size of the app window upon exit. Then when the app is restarted, you can position and size the window according to its last known size. This is a small example of the sort of state you can store in the registry. To do it you would use different APIs for storage and retrieval. Specifically the SetValue and GetValue calls on the Microsoft.Win32.RegistryKey class. There may be libraries that are helpful in persisting complex state to the registry. If you have simple cases ( a few strings and numbers) then it is easy to just do it yourself. private static string _AppRegyPath = "Software\\Vendor Name\\Application Name"; public Microsoft.Win32.RegistryKey AppCuKey { get { if (_appCuKey == null) { _appCuKey = Microsoft.Win32.Registry.CurrentUser.OpenSubKey(_AppRegyPath, true); if (_appCuKey == null) _appCuKey = Microsoft.Win32.Registry.CurrentUser.CreateSubKey(_AppRegyPath); } return _appCuKey; } set { _appCuKey = null; } } private void RetrieveAndApplyState() { string s = (string)AppCuKey.GetValue("textbox1Value"); if (s != null) this.textbox1.Text = s; s = (string)AppCuKey.GetValue("Geometry"); if (!String.IsNullOrEmpty(s)) { int[] p = Array.ConvertAll (s.Split(','), new Converter ((t) => { return Int32.Parse(t); })); if (p != null && p.Length == 4) { this.Bounds = ConstrainToScreen(new System.Drawing.Rectangle(p[0], p[1], p[2], p[3])); } } } private void SaveStateToRegistry() { AppCuKey.SetValue("textbox1Value", this.textbox1.Text); int w = this.Bounds.Width; int h = this.Bounds.Height; int left = this.Location.X; int top = this.Location.Y; AppCuKey.SetValue("Geometry", String.Format("{0},{1},{2},{3}", left, top, w, h); } private System.Drawing.Rectangle ConstrainToScreen(System.Drawing.Rectangle bounds) { Screen screen = Screen.FromRectangle(bounds); System.Drawing.Rectangle workingArea = screen.WorkingArea; int width = Math.Min(bounds.Width, workingArea.Width); int height = Math.Min(bounds.Height, workingArea.Height); // mmm....minimax int left = Math.Min(workingArea.Right - width, Math.Max(bounds.Left, workingArea.Left)); int top = Math.Min(workingArea.Bottom - height, Math.Max(bounds.Top, workingArea.Top)); return new System.Drawing.Rectangle(left, top, width, height); } That code uses Microsoft.Win32.Registry.CurrentUser, and so it sets and retrieves user-specific app settings. If you are setting or retrieving machine-wide state, you want Microsoft.Win32.Registry.LocalMachine.
