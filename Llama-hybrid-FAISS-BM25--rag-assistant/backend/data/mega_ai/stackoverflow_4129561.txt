[site]: stackoverflow
[post_id]: 4129561
[parent_id]: 4129469
[tags]: 
It is quite possible that those large devices (tablets) have much larger screens (width and height) than a typical phone. Anyways, I'll share a function I wrote that will resize a bitmap to your desired width and height (so you can calculate this based off of the screen size, then have it re-scaled). Of course, all this is doing is scaling it so make sure you have appropriate mdpi, hdpi versions. public Bitmap getBitmap(Resources resources, String bitmapName, int width, int height) { // this is just a Map of String, Bitmaps I use for cacheing Bitmap _bitmap = GraphicAssets.get(bitmapName); if(_bitmap != null) { return _bitmap; // return cached result } else { int fieldValue = 0; try { fieldValue = getFieldValue(bitmapName, R.drawable.class); } catch (Exception e) { Log.e("getBitmap", "Cannot read field value", e); } Bitmap _bitmapPreScale = BitmapFactory.decodeResource(resources, fieldValue); int oldWidth = _bitmapPreScale.getWidth(); int oldHeight = _bitmapPreScale.getHeight(); int newWidth = width; int newHeight = height; // calculate the scale float scaleWidth = ((float) newWidth) / oldWidth; float scaleHeight = ((float) newHeight) / oldHeight; // createa matrix for the manipulation Matrix matrix = new Matrix(); // resize the bit map matrix.postScale(scaleWidth, scaleHeight); // recreate the new Bitmap Bitmap _bitmapScaled = Bitmap.createBitmap(_bitmapPreScale, 0, 0, oldWidth, oldHeight, matrix, true); return _bitmapScaled; } public int getFieldValue(String name, Class obj) throws NoSuchFieldException, IllegalArgumentException, IllegalAccessException { Field field = obj.getDeclaredField(name); int value = field.getInt(obj); return value; } So call it by: Bitmap bitmap = getBitmap(GetResources(), "name_of_image_in_res/drawable_folder_without_file_extension", DesiredWidth, DesiredHeight);
