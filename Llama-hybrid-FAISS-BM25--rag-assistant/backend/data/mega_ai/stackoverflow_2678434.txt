[site]: stackoverflow
[post_id]: 2678434
[parent_id]: 2676601
[tags]: 
DSP programming using tools like Code Composer studio is not too different from any other kind of programming. You can develop your algorithms in C, make sure they run correctly, and the profile them to see if you need to speed anything up. If you do, the first step is to use the compiler's built in optimization options. The next two steps are more DSP-specific: there might be C-callable pragma's to speed up particular math operations, like fractional fixed-point math. And finally, you can get down into the assembly language level and use the DSP-specific capabilities like circular addressing, bit-reversed addressing, and single-cycle multply-accumulate. TI might be able to provide libraries to do some of the more common tasks, like FFT, FIR filtering, and IIR filtering, so you might be able to avoid writing (and debugging) your own assembly.
