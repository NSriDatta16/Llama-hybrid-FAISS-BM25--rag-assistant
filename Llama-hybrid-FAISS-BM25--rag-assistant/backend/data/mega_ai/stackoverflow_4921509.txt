[site]: stackoverflow
[post_id]: 4921509
[parent_id]: 
[tags]: 
Nesting objects (and FormFieldFactory) in Vaadin

I have a setup where I wan't to use a FormFieldFactory that returns a Form that also has a Form with a FormFieldFactory. My entities are Subscription that has a name and a collection of Prices. A Price has a country and a price. I have a Form to present the Subscription, and the FormFieldFactory that is attached returns a TextField for the name, and another Form for the price entities. The Price entity form returns a table where each Price should be shown as an Item. My problem is that I can not get this to work. The result is just a page with the Subscription and nothing else. Both the FormFieldFactories are called and a Table is returned in the last, so the expected calls are made. One thing that puzzles me is that PriceFormFieldFactory.createField() is called twice, first with the property "prices" that contains my collection and second with the property "empty" that contains the value "false". I would expect this to only be one call, since I only have one Subscription with one Collection. Could someone enlighten me on this? Thomas The code: import com.vaadin.data.Item; import com.vaadin.data.util.BeanItem; import com.vaadin.data.util.BeanItemContainer; import com.vaadin.ui.*; import java.util.ArrayList; import java.util.Collection; public class SubscriptionComponent extends CustomComponent { private HorizontalLayout mainLayout; public SubscriptionComponent() { buildMainLayout(); } private void buildMainLayout() { mainLayout = new HorizontalLayout(); mainLayout.setSizeFull(); mainLayout.setSpacing(true); Subscription subscription = createSubscription(); mainLayout.addComponent(new SubscriptionForm(subscription)); setCompositionRoot(mainLayout); } private Subscription createSubscription() { Collection prices = new ArrayList (); prices.add(new Price("Elbonia", 1)); prices.add(new Price("El Honduragua", 2)); return new Subscription("First subscription", prices); } public class Subscription { private String name; private Collection prices; public Subscription(String name, Collection prices) { this.name = name; this.prices = prices; } public String getName() { return name; } public Collection getPrices() { return prices; } } public class SubscriptionForm extends Form { public SubscriptionForm(Subscription subscription) { setFormFieldFactory(new SubscriptionFormFieldFactory()); setItemDataSource(new BeanItem (subscription)); } } public class SubscriptionFormFieldFactory implements FormFieldFactory { @Override public Field createField(Item item, Object propertyId, Component uiContext) { String pid = (String) propertyId; if (pid.equals("name")) { return new TextField(); } else if (pid.equals("prices")) { Collection prices = (Collection ) item.getItemProperty("prices").getValue(); return new PriceForm(prices); } return null; } } public class PriceForm extends Form { public PriceForm(Collection prices) { setFormFieldFactory(new PriceFormFieldFactory()); setItemDataSource(new BeanItem (new PriceFormItem(prices))); } } public class PriceFormFieldFactory implements FormFieldFactory { @Override public Field createField(Item item, Object propertyId, Component uiContext) { String pid = (String) propertyId; if (pid.equals("prices")) { return new PriceTable(new PriceContainer((Collection ) item.getItemProperty("prices").getValue())); } return null; } } public class PriceFormItem { private Collection prices; public PriceFormItem(Collection prices) { this.prices = prices; } public Collection getPrices() { return prices; } } public enum PriceColumns { name("Name"), price("Price"); private String value; PriceColumns(String value) { this.value = value; } @Override public String toString() { return value; } } public class PriceContainer extends BeanItemContainer { public PriceContainer(Collection prices) { super(Price.class); for (Price price : prices) { addItem(price); } } } public class Price { private String country; private double price; public Price(String name, double price) { this.country = name; this.price = price; } public String getCountry() { return country; } public double getPrice() { return price; } } public class PriceTable extends Table { public PriceTable(PriceContainer countryRatesContainer) { setContainerDataSource(countryRatesContainer); setColumnCollapsingAllowed(true); setColumnReorderingAllowed(true); setColumnExpandRatio(PriceColumns.name.name(), .7f); setColumnAlignment(PriceColumns.price.name(), ALIGN_CENTER); } } } This has been cross-posted on: http://vaadin.com/forum/-/message_boards/message/302906
