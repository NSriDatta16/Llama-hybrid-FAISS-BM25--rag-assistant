[site]: stackoverflow
[post_id]: 5222725
[parent_id]: 5213439
[tags]: 
This has some flaws in it, but is this closer to what you wanted ? NWS. with Ada.Text_Io; procedure Main is generic type Element_T is private; Zero : Element_T; One : Element_T; type Vec_T is array (Integer range <>) of Element_T; with function "+"(Left, Right : in Element_T) return Element_T is <>; with function "/"(Left, Right : in Element_T) return Element_T is <>; package Arrayops is function Sum (Vec : in Vec_T) return Element_T; function Count (Vec : in Vec_T) return Element_T; function Average (Vec : in Vec_T) return Element_T; end Arrayops; package body Arrayops is function Sum (Vec : in Vec_T) return Element_T is S : Element_T := Zero; begin for I in Vec'First .. Vec'Last loop S := S + Vec(I); end loop; return S; end Sum; function Count (Vec : in Vec_T) return Element_T is C : Element_T := Zero; begin for I in Vec'First .. Vec'Last loop C := C + One; end loop; return C; end Count; function Average (Vec : in Vec_T) return Element_T is S : constant Element_T := Sum (Vec); Len : constant Element_T := Count (Vec); begin return S / Len; end Average; end Arrayops; type Fl_Arr_T is array (Integer range <>) of Float; package Fl_Arr is new Arrayops (Element_T => Float, Zero => 0.0, One => 1.0, Vec_T => Fl_Arr_T); type Int_Arr_T is array (Integer range <>) of Integer; package Int_Arr is new Arrayops (Element_T => Integer, Zero => 0, One => 1, Vec_T => Int_Arr_T); My_Ints : constant Int_Arr_T (1 .. 5) := (6,7,5,1,2); My_Floats : constant Fl_Arr_T (1 .. 7) := (6.1,7.2,5.3,1.4,2.5,8.7,9.7); Int_Sum : constant Integer := Int_Arr.Sum (My_Ints); Int_Count : constant Integer := Int_Arr.Count (My_Ints); Int_Avg : constant Integer := Int_Arr.Average (My_Ints); Float_Sum : constant Float := Fl_Arr.Sum (My_Floats); Float_Count : constant Float := Fl_Arr.Count (My_Floats); Float_Avg : constant Float := Fl_Arr.Average (My_Floats); begin Ada.Text_Io.Put_Line ("Integers => Sum: " & Integer'Image (Int_Sum) & ", Count: " & Integer'Image (Int_Count) & ", Avg: " & Integer'Image (Int_Avg)); Ada.Text_Io.Put_Line ("Floats => Sum: " & Float'Image (Float_Sum) & ", Count: " & Float'Image (Float_Count) & ", Avg: " & Float'Image (Float_Avg)); end Main; Result : Integers => Sum: 21, Count: 5, Avg: 4 Floats => Sum: 4.09000E+01, Count: 7.00000E+00, Avg: 5.84286E+00
