[site]: stackoverflow
[post_id]: 5145253
[parent_id]: 5135815
[tags]: 
Here is a simplistic implementation. Since the median is just the point at which half the values are above and half are below, you can sort the list and find the middle point. Depending on whether the number of elements is odd or even you can either take the middle point in the sorted list (odd) or the average of the two middle points (even) (define (median lst) (let ((len (length lst)) (nlst (sort lst >))) (if (even? len) (/ (+ (list-ref nlst (/ len 2)) (list-ref nlst (- (/ len 2) 1))) 2) (list-ref nlst (truncate (/ len 2)))))) If this is homework, such a nasty version might get you a 'D', but it does work. > (median (list 5 2 6 2)) 3 1/2 > (median (list 5 2 6 3 1)) 3 >
