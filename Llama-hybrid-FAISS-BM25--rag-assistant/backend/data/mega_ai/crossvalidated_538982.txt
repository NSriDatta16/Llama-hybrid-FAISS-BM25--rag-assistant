[site]: crossvalidated
[post_id]: 538982
[parent_id]: 
[tags]: 
How to test for under performing robots in production results

TLTR; version: Question: What statistical test would be helpful in finding a defective robot in a production run which has 10 different robots based on only the total amount produced for each run over 1000 runs? Longer version: Statistics isn't my strong point, so I may be going about this all wrong. I'm looking for some help understanding how to tackle a problem. Description of the problem: I'm trying to determine how I would identify under performing robots in a process based solely on the outcome. Let's say I do 1000 production runs. Each run uses 10 different types of robots that do the 10 different steps of the production. There are multiple of each robot type, but that number is not equal in each step. For example, there are 70 robots total. Step1 (3 robots), step2 (2 robots), step3 (10 robots), step4 (5 robots), step5 (6 robots), step6 (4 robots), step7 (3 robots), step8 (10 robots), step9 (7 robots), step10 (20 robots). Now each production run has a total number of widgets produced (600,000-1,500,000) per run. The 1000 runs have a normal distribution in that range. The goal is to determine which robots might be under performing (say below 850k units produced) and the associated effect size, but I'm struggling with what statistical tests to use since this is not the type of data I'm used to working with. What I've tried: At first I thought I'd just assign the total widgets produced in a run to each robot from the run it was in and do a K-S test to see which if a robots distribution varied from the total distribution of all runs. That probably wasn't a proper analysis technique. It did identify robots that had different distributions, but they all seemed to be above the average. Then I thought I'd do a Cohen's D using the same method as the K-S by assigning the total widgets produced in a run to each robot from that run and comparing it to the distribution of the total runs. Then I compared the D values (d>.05) to which robots were in the lowest performing runs (ie: below 850k). I'm still not convinced that was correct since it doesn't' really take into account how many times a particular robot showed up in the low performing runs. I'm using Python to code this if that helps. Any pointers would be greatly appreciated.
