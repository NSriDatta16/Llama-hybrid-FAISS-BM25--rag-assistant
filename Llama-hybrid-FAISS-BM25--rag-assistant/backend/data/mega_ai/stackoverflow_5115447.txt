[site]: stackoverflow
[post_id]: 5115447
[parent_id]: 5111831
[tags]: 
Nexus is primarily a Maven repository, this means one must adapt to the way Maven structures artifacts. Since you're focused on bulk loading Nexus I suggest looking at the answer to the following question: Upload artifacts to Nexus, without Maven If you wish to stick with ivy read on..... Background Need a Maven POM Your first issue is that your Maven module(s) will need a POM file. This file describes the maven module and can be easily generated from the contents of your ivy.xml file (See solution below). Secondly, Maven assumes that there is one primary artifact being built. For example: 4.0.0 com.myspotontheweb donaldduck 1.0.1 txt A Maven client would translate this information into the following URL: http:// / /com/myspotontheweb/donaldduck/1.0.1/donaldduck-1.0.1.txt This demonstrates how Nexus can store any type of binary dependency. The packaging parameter defaults to "jar". How maven handles additional module artifacts While Maven focuses on a single build artifact, it is possible to add additional supplementary artifacts by posting them into the same directory (as you've done). These are not listed in the Maven POM. Instead a Maven uses a special "classifier" attribute. The following is a possible dependency declaration. com.myspotontheweb donaldduck 1.0.1 metadata n3 A Maven client would translate this into the following URL: http:// / /com/myspotontheweb/donaldduck/1.0.1/donaldduck-1.0.1-metadata.n3 Open source projects typically release their source code in this manner. Ivy Solution So finally how does one publish files into Nexus using ivy? First of all decide which artifact is the "main" build artifact and add an additional entry for your POM file: The other files can also be listed but each must have a unique classifier attribute..... Here you will be faced with one of the classic problems translating an ANT project into Maven.... Each jar file you publish, will probably need to have a separate POM. They not really "supplementary" artifacts..... Pretending that you don't need to publish multiple modules.... Use the following build targets to publish your module: Nexus credentials And for completeness here's the ivysettings.xml file containing the Nexus repository location and credentials: Update Downloading artifacts To retrieve all the published artifacts (not just the main one), you need to list them as follows: Functionally the same as the following Maven fragment: com.myspotontheweb donaldduck 1.0.1 txt com.myspotontheweb donaldduck 1.0.1 metadata n3 com.myspotontheweb donaldduck 1.0.1 distro zip
