[site]: crossvalidated
[post_id]: 408575
[parent_id]: 
[tags]: 
MCMC - how to compute prior()

Question How to compute the prior $P()$ and $P(')$ in MCMC when calculating the posteriors? Prior I thought prior keeps updated with the accepted Î¸'. However, the way it is computed in the articles referenced seem to do different ways. From Scratch: Bayesian Inference, Markov Chain Monte Carlo and Metropolis Hastings, in python is using 1. def prior(x): #x[0] = mu, x[1]=sigma (new or current) #returns 1 for all valid values of sigma. Log(1) =0, so it does not affect the summation. #returns 0 for all invalid values of sigma ( MCMC sampling for dummies keeps using the initial prior, mu_prior_mu=0, mu_prior_sd=1. (In this article, log is applied to the P, hence using norm.pdf directly). def sampler(data, samples=4, mu_init=.5, proposal_width=.5, plot=False, mu_prior_mu=0, mu_prior_sd=1.): ... # Compute prior probability of current and proposed mu prior_current = norm(mu_prior_mu, mu_prior_sd).pdf(mu_current) prior_proposal = norm(mu_prior_mu, mu_prior_sd).pdf(mu_proposal) Metropolis-Hastings sample also keep using the initial prior. In this article, the distribution is binomial so using beta function. def target(lik, prior, n, h, theta): if theta 1: return 0 else: return lik(n, theta).pmf(h)*prior.pdf(theta) # Are these correct ways? If so, kindly explain why no need to use the updated .
