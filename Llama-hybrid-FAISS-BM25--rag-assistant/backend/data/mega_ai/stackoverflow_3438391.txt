[site]: stackoverflow
[post_id]: 3438391
[parent_id]: 3438289
[tags]: 
What is meant is that JavaEE is a programming platform that provides many abstractions to build distributed, multi-tier systems. You can also do that all by yourself without using the JavaEE abstractions and using RMI or sockets, etc. directly but then you can't consider your solution to be JavaEE. That said, the term application server refers to a software that is use to host other applications. Think of it like Tomcat which is a web server that can be used to host multiple web app. The term middleware or container is also sometimes used to refer to such kind of software. The term server here must not be confused with the notion of server as a physical machine. So what is meant, is that the each computer in the network runs an application server that is used to host the JavaEE application. JavaEE application follow usually a layered architecture. A layer is a logical concept, a tier is a phyisical/deployment consideration. All layers can be in the same computer, in which case you won't speak of true multi-tier. You can also split the layers on different tiers. The trend is to simplify things, and most project I've seen were layered, but not split across physical tiers. And finally, SOA is an architectural style to build large enterprise system. A JavaEE application can integrate in a SOA architecture. Again, JavaEE is a set of abstractions, you can use them in more or less creative ways to write web app or other applications, including things that would integrate in a SOA architecture, notably web services. Hope it answers your questions.
