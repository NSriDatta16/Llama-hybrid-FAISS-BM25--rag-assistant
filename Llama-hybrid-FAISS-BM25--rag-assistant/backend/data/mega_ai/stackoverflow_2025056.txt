[site]: stackoverflow
[post_id]: 2025056
[parent_id]: 
[tags]: 
How much flexibility in business requirements is too much?

I feel like I'm beating my head against a brick wall sometimes. I was just talking to someone in my company about the need to encourage our [company's internal] client to put thought into their requirements up front and make a bigger effort to ensure that they're fixed before providing them to my development team to start on. The argument against was essentially, "They're paying the bills so they should be able to change their mind as much as they want" and "They're paying us so we should just do what we're told". While I recognise and agree that the client should be able to change their requirements (especially when using a Lean or Agile methodology), I also feel that there should be a point at which some (any!) fixed, approved and signed-off requirements are supplied to my team. I'm therefore trying to implement a simplified Lean Software Development process that requires the client to have fixed a set of requirements (not necessarily everything; just enough to keep my team occupied for a 3-week development & testing iteration) before work can start. This allows me to: Provide a more accurate estimate Plan my team's resourcing (I'm the Team Lead) Create Work Items in TFS (or Stories if I'm using an Agile flavour) Write unit tests ahead of development rather than after the development is in a state where it's not going to change anymore Provide reports at the end of an iteration of - for example - actual effort cost vs estimated Is the argument of "They're paying, so just do what you're told and don't argue" a reasonable one? What are the counter-arguments if not? If the client (or internal business reps in my case) holds the view that: they don't care about how many times my team has to do their work over again they don't care if expected delivery dates need to be moved out they aren't concerned about the wastage incurred with all the do-overs Do I have a reasonable basis for concern?
