[site]: crossvalidated
[post_id]: 624228
[parent_id]: 
[tags]: 
Associating a constant value over time with predictor variables

Question: How do you model a static response variable (change between baseline and final timepoint) with a variable that changes over time? Background: A person's inflammation levels are measured at 0, 6, and 20 weeks. Inflammation may have increased or decreased over time. Here is some toy data to demonstrate. As you can see, I calculate the total change in the value, which is then held constant at the ID level. set.seed(123) exampleDT head(exampleDT) ID Time.weeks ProteinI Inflammation Inflammation.change Baseline.inflammation 1: 1 0 33.13307 30 13 30 2: 1 6 58.37787 6 13 30 3: 1 20 51.53373 43 13 30 4: 2 0 38.61863 8 14 8 5: 2 6 62.53815 22 14 8 6: 2 20 54.26464 22 14 8 Hypothesis: The reduction in inflammation (calculated between week 0 and 20) is associated with changes to ProteinI level. The bigger the inflammation reduction, the steeper the increase in the level of ProteinI over time. My first thought was that I could model this with linear mixed models. In lme4 syntax, I thought to model this as: Inflammation.change ~ ProteinI*Time.weeks + Baseline.inflammation + (1|ID) The model fails to converge (see output pasted below). I'm not sure but I think issue here is that the Inflammation.change status is constant for each time point at the patient level. If decide on a threshold for the response variable and gave it a binary value (Inflammation.improvement = 0,1), then I could use mixed effects logistic regression, but I want to keep all available information for this model. > lmer(Inflammation.change ~ ProteinI*Time.weeks + (1|ID), exampleDT) Linear mixed model fit by REML ['lmerModLmerTest'] Formula: Inflammation.change ~ ProteinI * Time.weeks + (1 | ID) Data: exampleDT REML criterion at convergence: -118.603 Random effects: Groups Name Std.Dev. ID (Intercept) 1.156e+01 Residual 6.406e-07 Number of obs: 15, groups: ID, 5 Fixed Effects: (Intercept) ProteinI Time.weeks ProteinI:Time.weeks 1.000e+01 4.575e-15 2.425e-14 -4.779e-16 optimizer (nloptwrap) convergence code: 0 (OK) ; 0 optimizer warnings; 2 lme4 warnings Warning messages: 1: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv, : unable to evaluate scaled gradient 2: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv, : Model failed to converge: degenerate Hessian with 1 negative eigenvalues 3: In as_lmerModLT(model, devfun) : Model may not have converged with 1 eigenvalue close to zero: 1.2e-11 Edit: For what it's worth, I'm interested in making inferences based on my output rather than actually predicting the change, so I wondered if I could switch the response and predictor, i.e. ProteinI ~ Inflammation.change*Time.weeks + Baseline.inflammation + (1|ID) On my actual data, this runs without singularity issues. Is that a reasonable workaround? I have included Baseline.inflammation here because in the real data, if you have high baseline inflammation then your inflammation reduction is more likely to be larger so I try to account for this in the model.
