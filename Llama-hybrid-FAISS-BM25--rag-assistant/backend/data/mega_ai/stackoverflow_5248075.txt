[site]: stackoverflow
[post_id]: 5248075
[parent_id]: 
[tags]: 
-webkit-transform and accommodating the cascade (how to not over-ride previous settings)

The dilemma: In my CSS file, I have this: div { -webkit-transform: scale(0.5); } In my jQuery, I then later do this: $('div).css('-webkit-transform','rotate(3deg)') What happens (as you can maybe guess) is that setting -webkit-transform inline via jQuery over-rides the original setting. Normally this is fine/expected. But the issue here is that I'm actually setting two entirely different styles (scale and rotatation) but due to how webkit uses the same property name for both, one 'over-rides' the other. Can anyone think of an elegant way to handle this? The best I can think of is to come up with a jQuery function that will parse this particular style and append to/subtract from a comma delimited list of values (akin to remove/addClass). That still may be a challenge, though, if one is dynamically updating nested elements all with different transformations. (for instance, I have a wrapper DIV that I want scale to apply to (and its children). One of the children also need to do a rotation, but still preserve the scale). UPDATE: Upon further investigation, this appears to not necessarily be a DOM updating issue but rather just an odd CSS cascade issue. Sample code: #parentSpan { -webkit-transform: scale(.25); } hello I'm setting a scale style in the HEAD and then a rotate style inline. The inline rotate completely over-rides the scale since they are both '-webkit-transform' properties. Is that just the way it is? UPDATE 2: I think I have a workaround. Turns out, I don't think this is an inheritance issue. My above example is over-writing the transform declaration, not adding to (inheritance). The workaround would appear to add some extra markup. Apply the scale transform to a wrapper div, then apply the rotation transform to a child div. That child div will then have rotation AND also be scaled down visually due to the parent being scaled.
