[site]: crossvalidated
[post_id]: 290538
[parent_id]: 
[tags]: 
Bugs in xgboost logistic regression?

Here is a simple data simulation and a function that fits a logistic regression on the simulated data and returns the maximum of the fitted values: library(xgboost) # Simulate some gaussian predictors and binary outcomes data set.seed(1) x = sapply(1:10, function(k) rnorm(100)) y = rbinom(n = 100, size = 1, prob = 0.5) # Fit an xgboost regression and return the maximum fitted value maximum_fitted_value = function(obj, n){ params = list(seed = 1, objective = obj) bst = xgboost(data = x, label = y, params, nround = n, verbose = 0) fits = predict(bst, newdata = x) return(max(fits)) } This makes it easy to demonstrate two deeply troubling problems: xgboost thinks that logitraw values should be the same as logit values: > maximum_fitted_value(obj = "binary:logit", n = 2) [1] 0.7487798 > maximum_fitted_value(obj = "binary:logitraw", n = 2) [1] 0.7487798 xgboost probabilities can exceed 1: > maximum_fitted_value(obj = "binary:logit", n = 50) [1] 1.000616 Is there an error in my code, or does this reveal real xgboost (or R interface) bugs?
