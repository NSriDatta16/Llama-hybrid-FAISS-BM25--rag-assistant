[site]: stackoverflow
[post_id]: 5719921
[parent_id]: 5718587
[tags]: 
UPDATE: the Shift key's code isn't 56 , according to Events.h: ... kVK_Shift = 0x38, ... (EDIT: of course those of you who are paying attention (I wasn't) realize that HEX 38 == DEC 56.) I also realized how to get modifier key presses: flagsChanged: . So using this keycode, I can catch Shift key presses in flagsChanged: , and the repeat works fine; I also get repeated key events for "normal" keys in keyDown: and keyUp: without difficulty. It sounds like you may not have access to/want to change the event-handling code (to add flagsChanged: ) though, so if that keycode doesn't work for you, I'm stumped and can only say "Good luck!" I believe that the field you're setting is used to indicate not that the event should be repeated by the system, but that an event is an auto-repeat of a previous event. You still have to generate each event yourself. Something like (EDITED to use a timer instead of a loop): CGEventSourceRef eventSource = CGEventSourceCreate(kCGEventSourceStateHIDSystemState); CGEventRef eventDown = CGEventCreateKeyboardEvent(eventSource, (CGKeyCode)1, true); // Post the initial keydown CGEventPostToPSN(&pidNumber, eventDown); // Keep track of how many Shift keydown events have been sent shiftKeyRepeatCount = 1; [NSTimer scheduledTimerWithTimeInterval:0.3 // I don't know exactly what the interval should be, of course target:self selector:@selector(repeatShiftKeyDown:) userInfo:nil repeats:YES]; CFRelease(eventDown); - (void)repeatShiftKeyDown:(NSTimer *)tim { if( shiftKeyRepeatCount >= kRepeatCountForSpecialTool ){ [tim invalidate]; [self sendShiftKeyUp]; return; } shiftKeyRepeatCount++; GEventSourceRef eventSource = CGEventSourceCreate(kCGEventSourceStateHIDSystemState); CGEventRef eventDown = CGEventCreateKeyboardEvent(eventSource, (CGKeyCode)1, true); // Set the auto-repeat field CGEventSetIntegerValueField(eventDown, kCGKeyboardEventAutorepeat, 1); CGEventPostToPSN(&pidNumber, eventDown); CFRelease(eventDown); } I'm not certain whether you can reuse the first event with a changed field or you'll need to generate a new event to use when repeating.
