[site]: stackoverflow
[post_id]: 1655485
[parent_id]: 1654762
[tags]: 
You are correct, there are strategies that you can implement to help with separation of concerns without using MVC. Microsoft's ASP.NET MVC framework is one strategy that can be employed, and that is what I think you are asking about. This MVC framework makes such separation of concerns easy. The other major advantage of MVC is testability - (depends on whether you believe in unit testing - I do). The MVC framework ensures that all orchestration logic is on your controllers and through the FormControls collection allows full unit testing of all aspects of your application except for how it is presented. As the MS MVC framework encourages adherence to common rules and structure of the application which should lead to greater maintainability . The major downside of MVC is the code-in-front code weaving required for presentation, but this can be easily overcome.
