[site]: crossvalidated
[post_id]: 341798
[parent_id]: 
[tags]: 
Latent features from neural network recommendation models

TL;DR version - What are the equivalent of SVD's $U$ and $V$ in an auotencoding neural network? We currently use either SVD or ALS for a collaborative filtering model, but unlike most applications, we don't want the recommendations themselves. Instead, we use the latent "user vector" as a multi-dimensional feature set for input to other predictive models. For example, imagine we created a user-item recommender where the items are books or movies. We don't actually use the model to recommend new items. We use the latent user vectors from the model to predict some other label using logistic regression or some other supervised learning algorithm. What I have been wondering is whether we can build these features using a neural network Autoencoder. I have read several articles/tutorials about creating an Autoencoder for doing CF, but it is not yet clear to me what the equivalent of the user- (and item-) vectors are in this model. Would it be, for example, equivalent to taking the last layer of the network and using that? Or does that layer have users and items "mixed" together essentially? I don't even know if what I'm asking is possible, but figured someone here has probably thought about it as well.
