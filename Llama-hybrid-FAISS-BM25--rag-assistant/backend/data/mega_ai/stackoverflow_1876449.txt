[site]: stackoverflow
[post_id]: 1876449
[parent_id]: 1876289
[tags]: 
I've run into this problem as well. My solution was to declare commands in a list or tuple, format them into the usage parameter of OptionParser and then use the args list provided by the parser to determine if a command was provided or not, since it technically has to be args[0] . Eg: self.commands = ('foo', 'bar' ...) self.parser = (self.options, self.args) = parser.parse_args() if len(self.args) == 0: self.parser.error("Command required") self.command = self.args[0] if not self.command in self.commands: self.parser.error("Command not recognized") #... etc This kinda gets you a command system that looks like Subversion's, but admittedly optparse could be better. I've heard the argparse module is supposed to make it into the stdlib, but with 2.7 being the last of the 2 series releases, I guess you'd have to wait for it to be incorporated into 3.x. Of course you can just install argparse, but that's a drag in some cases.
