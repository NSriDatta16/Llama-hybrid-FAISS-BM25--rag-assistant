[site]: stackoverflow
[post_id]: 5637973
[parent_id]: 5637808
[tags]: 
I will be interested in knowing how you implement your listener framework for email notification. But I digress. If you want to have a background service, then the best way to do is polling. If you keep your service running in the background, the service becomes a prime candidate for android to kill, if it runs low on resource. But polling may not work for you, if you are trying to leverage existing email client in android. ( As I understand, you need to keep a listener running when the email message is received..) So the best bet is to have a polling service using AlarmManager and writing your own custom email client code ( NO need for a UI). In periodic intervals you can poll your email server to check if there are new emails and then call the android inbuild email client as a pending Intent. I assume there could be some logistic problems in implementing this. ( For eg: You poll the email client, but when you notify user and the user responds to notification, you will open the android email client and that would still not have the new email, so it might confuse the users), but this is what I could think of.
