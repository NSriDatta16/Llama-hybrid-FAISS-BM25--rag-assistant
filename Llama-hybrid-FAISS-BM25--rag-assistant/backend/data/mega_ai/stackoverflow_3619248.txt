[site]: stackoverflow
[post_id]: 3619248
[parent_id]: 3618012
[tags]: 
The method you are using to update is wrong, it is syntactically invalid (you're missing an end ). It should be: def update @user = User.find(params[:id]) current_email = @user.email if @user.update_attributes(params[:user]) UserMailer.deliver_email_changed (@user) if email_changed?(current_email, @user.email) flash[:notice] = " Account updated! " redirect_to edit_user_path(@user) else flash.now[:error] = "Sorry, something went wrong" render :action => :edit end end It should be two forms indeed, as I'm guessing you don't want any of the values of one form to submit if the user performs the other action. Now, organize your controllers. You are calling @user = User.find(params[:id]) on your ProfilesController, but the id you're passing is an user's one. Either this should be on the user's controller, and update the associated profile from there, or you should receive the id of the profile object instead. I'd go with the first one. You can update the Profile object of a user using accepts_nested_attributes_for , and your forms would be like: ... %> { :multipart => true } do |f| %> 'form', :locals => {:f => profile_form, :title => 'Edit Profile'} %> 'text_align:right'%> If the error is that the password cannot be blank, may be due to a validates_presence_of :password, :password_confirmation . You should use a conditional validation there
