[site]: stackoverflow
[post_id]: 3036902
[parent_id]: 3036396
[tags]: 
It is dangerous to use that. Since there an implicit cast from a unsigned char* to an int*, if the number is more than 0xFF it is going to use bytes (max 3) next to the variable in the stack and corrupt their values. The issue with %hhd is that depending of the size of an int (not necessarily 4 bytes), it might not be 1 byte. It does not seem sscanf support storage of numbers into a char, I suggest you use an int instead. Although if you want to have the char roll-over, you can just cast the int into a char afterward, like: int dest; int len; len = sscanf(source,"%c%d",&separator,&dest); dest = (unsigned char)dest;
