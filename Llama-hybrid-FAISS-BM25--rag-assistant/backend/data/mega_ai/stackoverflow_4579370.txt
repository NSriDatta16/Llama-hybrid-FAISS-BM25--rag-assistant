[site]: stackoverflow
[post_id]: 4579370
[parent_id]: 4579349
[tags]: 
Your controller action looks very strange, one would say classic WebForms code, not ASP.NET MVC. Normally controller actions return ActionResult : public ActionResult ServeAudioFile() { Response.AppendHeader("Content-Disposition", "inline; filename=music.wav"); return File(audioFilename, "audio/wav"); } As far as embedding the player inline inside the browser you may take a look at the tag and point the url to this controller action (don't use Html.RenderAction ). And here's another example of using the object tag. As far as preventing direct access is concerned this is not possible, the music file is played on the client and if you prevent access to it you won't be able to play it. It is the same as trying to hide the HTML of your site. This simply is something that shouldn't be done. On the other hand you could allow only authenticated users to access this controller action by decorating it with the [Authorize] attribute.
