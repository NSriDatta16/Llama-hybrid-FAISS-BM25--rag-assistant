[site]: stackoverflow
[post_id]: 222195
[parent_id]: 
[tags]: 
Are there gotchas using varargs with reference parameters

I have this piece of code (summarized)... AnsiString working(AnsiString format,...) { va_list argptr; AnsiString buff; va_start(argptr, format); buff.vprintf(format.c_str(), argptr); va_end(argptr); return buff; } And, on the basis that pass by reference is preferred where possible, I changed it thusly. AnsiString broken(const AnsiString &format,...) { /* ... the rest, totally identical ... */ } My calling code is like this: AnsiString s1 = working("Hello %s", "World"); // prints "Hello World" AnsiString s2 = broken("Hello %s", "World"); // prints "Hello (null)" I think this is due to the way va_start works, but I'm not exactly sure what's going on.
