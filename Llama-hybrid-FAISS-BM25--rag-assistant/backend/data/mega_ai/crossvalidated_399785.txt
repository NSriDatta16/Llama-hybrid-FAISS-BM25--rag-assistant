[site]: crossvalidated
[post_id]: 399785
[parent_id]: 
[tags]: 
Limiting neural network output to realizable instances

At the moment I have a behavioral model which predicts some output values for some instances (input). Afterwards I sort them and get the instance with the minimum output. Now I want to model it the "right" way, not running the predictions for every instance, but rather directly using gradient descent or simulated annealing to find the minimum realizable input (instance). The problem is that not everything is allowed, only the combinations of values from the instances. Explaining it more visually: Instance 1: a = 4 b = 8 c = 232 Instance 2: a = 6 b = 10 c = 172 I predict the output value (e.g. y1) for both instances and pick either Instance 1 or Instance 2, depending on which had a lower predicted y1 value. Now I want to reverse it, I want the values of the instances to be the output while limiting to only those possible instances. So for example an output with the values a=15, b=14, c=120 is not possible, because there is no instance with those values. Is there any performant way to model this? Thanks in advance.
