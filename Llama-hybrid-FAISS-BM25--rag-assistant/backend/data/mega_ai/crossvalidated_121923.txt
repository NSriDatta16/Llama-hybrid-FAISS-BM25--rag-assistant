[site]: crossvalidated
[post_id]: 121923
[parent_id]: 120415
[tags]: 
TL;DR: First choose how many components you want to keep, and then pass only those components to varimax() . Long answer: I did the same thing once :) Principal component analysis will find the one component that explains most of the joint variability, then the one component that explain most of the remaining joint variability, and so on. Since the aim of PCA is variable reduction, you typically don't want to keep all the components, just the most important ones (however you may define "important"). varimax() does not enforce it, but its documentation states that the first argument must be a loading matrix with less columns (components) than rows (variables). According to Wikipedia : Varimax is so called because it maximizes the sum of the variances of the squared loadings. [...] Intuitively, this is achieved if, (a) any given variable has a high loading on a single factor but near-zero loadings on the remaining factors and if (b) any given factor is constituted by only a few variables with very high loadings on this factor while the remaining variables have near-zero loadings on this factor. Thus, if you rotate all of your components with varimax, you get your old variables back. Forget about the negative values. They are said to be platform-dependent and you can multiply all loadings in a factor by -1 if you will. What you've got to do is to choose how many components you want to keep, and pass only those components to varimax() . In example, if you want to keep 2 components: d2.varimax
