[site]: stackoverflow
[post_id]: 5420264
[parent_id]: 4799078
[tags]: 
This is already answered, but anyway, here's my oop implementation: middleclass . That lib provides the bare minimum for creating classes, instances, inheritance, polymorphism and (primitive) mixins, with an acceptable performance. Sample: local class = require 'middleclass' local Person = class('Person') function Person:initialize(name) self.name = name end function Person:speak() print('Hi, I am ' .. self.name ..'.') end local AgedPerson = class('AgedPerson', Person) -- or Person:subclass('AgedPerson') AgedPerson.static.ADULT_AGE = 18 --this is a class variable function AgedPerson:initialize(name, age) Person.initialize(self, name) -- this calls the parent's constructor (Person.initialize) on self self.age = age end function AgedPerson:speak() Person.speak(self) -- prints "Hi, I am xx." if(self.age Output: Hi, I am Billy the Kid. I am underaged. Hi, I am Luke Skywalker. I am an adult.
