[site]: stackoverflow
[post_id]: 4448301
[parent_id]: 
[tags]: 
Options for composing the components of a service orientated application

I work for a polygot organisation where we code in multiple different languages and architectural styles. I have been writing Service Orientated Application's for around two years now, and have gotten comfortable with the way I do things, and that's the problem. At the Big SOA level we all agree on how to use SOA principles to connect different pieces of the solution/enterprise. At the component level we all differ slightly; Currently I take the every high level component as a service approach to SOA, favouring capability driven interfaces and softeware fortresses. Be the implemenation beans or wcf services the pattern remains unchanged. Like so, SOA Design Pattern Others in my organisation opt for the rich domain model of standard classes underneath a facade. Architectural styles like SOAP, REST have both been used at this level. We also differ in the style of method call, command style messages vs more activity descriptive messages. I have used both and am happy with either, my question are there other methods are other engineers using to compose their SOA. I am interesed in new ideas, how ever wacky, to stimulate new ways of thinking around the topic of building a SOA.
