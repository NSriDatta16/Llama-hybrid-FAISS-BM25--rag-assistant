[site]: crossvalidated
[post_id]: 216135
[parent_id]: 215980
[tags]: 
Since your outcome variable is logSum, you have to exponentiate the coefficients. This is very easy to do in R. For teplota, the exponentiated coefficient would be 1.17732. In r, the code is very straight forward: exp(.163241) This means that, for a one unit increase in teplota, there would be a 17 % increase in the outcome variable (see here: http://www.ats.ucla.edu/stat/mult_pkg/faq/general/log_transformed_regression.htm .) The clusters are simply the groups of the id variable, in this case den. You have 24 levels of den and the largest group is 16. As for the correlation structure, autogressive AR(1) is generally used for time series data. This is because time points are often correlated with one another. You may not need this. In order to check for autocorrelation, you need to generate an acf plot. I am not sure how to do this using geeglm, so I will use lme4 with the lmer function. install.packages("lme4") install.packages("itsadug") require(lme4) require(itsadug) den If you have autocorrelation, as indicated by the acf plot, you can proceed with your original model. You could explore other packages, for instance, nlme or lme4. I would recommend lme4, but you will have to do a little work to get p-values that you are comfortable with. In the package description, you will have to browse the table of contents for pvalues. car::Anova(m1) ## for p-values If you do not have autocorrelation, my model using lme4 would be appropriate. If this answered your question, please mark your post as answered. If this does not answer your original question, please describe your situation in more detail.
