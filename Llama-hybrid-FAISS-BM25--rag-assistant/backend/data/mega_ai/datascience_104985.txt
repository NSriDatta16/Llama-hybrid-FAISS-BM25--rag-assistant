[site]: datascience
[post_id]: 104985
[parent_id]: 
[tags]: 
Deep learning - edge detection

I am trying to build a model, which would be used for edge detection of the iris. For this purpose, I have built a U-net model, which successfully works for image segmentation tasks. Also, I have a dataset that has annotated regions of the iris (mask) and for the purpose of creating labels for edge detection, I have used those mask images and applied a Canny edge detector on them thus getting labels with edges. These images of edge detection labels are binary, such as those of the masks. So True for the location of the edge, False for others. The problem I am having is that the model is not learning when I am trying to fit it. I have tried binary cross-entropy loss and even minimal square error loss, but so far I have not got any improvement. As far as I know, the model predicts that all pixels are black, i.e. False (as the majority of them actually are, considering that the edge takes only a small part of the image). I am using TF with Keras, and am wondering if there are any suggestions for my approach, either with preprocessing the data or with the model/loss itself. Thank you! These is how I load the data: X_train = np.zeros((numImages, image_size[0], image_size[1], image_size[2]), dtype=np.float32) Y_train = np.zeros((numImages, image_size[0], image_size[1], 1), dtype=np.bool) canny = cv2.Canny(mask,100,200) canny = canny/255.0 Y_train[image_index,:,:,0] = canny.astype(np.bool) X_train[image_index,:,:,0] = im/255.0 And the model and loss function (the architecture is U-net): losses = {"bce": tf.keras.losses.BinaryCrossentropy()} loss_weights = {"bce": 1} metrics = {"bce": tf.keras.metrics.BinaryAccuracy()} model.compile(optimizer='adam', loss=losses, loss_weights=loss_weights, metrics=metrics) And finally an example of my train image and label pair (the same goal is required for test images): The given image is cropped on the sides so it looks like a wrong edge label, but the data set is not, so misaligned edges are not a problem!
