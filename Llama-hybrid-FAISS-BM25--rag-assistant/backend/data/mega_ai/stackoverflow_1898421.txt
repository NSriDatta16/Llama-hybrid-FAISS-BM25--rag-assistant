[site]: stackoverflow
[post_id]: 1898421
[parent_id]: 387514
[tags]: 
If you are creating a scheduling system, you are much better off writing a windows service. Even though they are hard to debug, if you move all the functionality out of the service and into helper and service agent classes, you can easily test the functionality without needing to bother with the service. You can then expose whatever information you need to provide to a front end via WCF services. They can be hosted in any executable now, so windows service works just fine. The advantage to the windows service tactic is that you don't need a desktop. Scheduled tasks are (or should be) intended to run in the background. Windows services are a good approach to background tasks. I've looked at after-market 3rd party scheduling systems, open souce schedulers and quartz.net. We have chosen the latter. If you budget can foot the bill, look at scheduling systems like JAMS or others.
