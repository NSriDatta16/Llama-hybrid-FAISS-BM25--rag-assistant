[site]: stackoverflow
[post_id]: 989577
[parent_id]: 983588
[tags]: 
Another possible thing to look at (before partitioning) is your model. Are you in a normalized database? Are there further steps which could improve performance by different choices in the normalization/de-/partial-normalization? Are there options to transform the data into a Kimball-style dimensional star model which is optimal for reporting/querying? If you aren't going to drop partitions of the table (sliding window, as mentioned) or treat different partitions differently (you say any columns can be used in the query), I'm not sure what you are trying to get out of the partitioning that you won't already get out of your indexing strategy. I'm not aware of any table limits on rows. AFAIK, the number of rows is limited only by available storage.
