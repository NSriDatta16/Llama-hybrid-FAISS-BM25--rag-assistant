[site]: stackoverflow
[post_id]: 3979991
[parent_id]: 3979821
[tags]: 
There is an interesting SE Radio interview with "Pragmatic" Dave Thomas about code Archeology, about just this topic. Some ideas, some from that talk, some not: Do you have access the VC repo? What are the hot spots where lots of changes occurred? This gives you a hint about where lots of development time was spent. What is the biggest file. Unfortunately code tends to accumulate where it's used and without work to split it up again it stays there. The biggest file is often the most important one too. Is there a bug tracker? What components have the most bugs, this also tells you where problems occur (and probably where development has been concentrated due to that logic being important.) A good IDE makes tracking a lot easier as you can jump to definitions and back again. A documentation generator, even if it there aren't any comments, can often make good graphical representations of classes or function calls that guides you to the right place.
