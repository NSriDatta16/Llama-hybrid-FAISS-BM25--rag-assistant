[site]: stackoverflow
[post_id]: 1457734
[parent_id]: 1457718
[tags]: 
If you look at Linq ExpressionNode (internal class) IsNumeric method, it is basically testing against every type. if (!IsFloat(type)) { return IsInteger(type); } return true; And the two function are testing against the primitive type, like internal static bool IsInteger(StorageType type) { if ((((type != StorageType.Int16) && (type != StorageType.Int32)) && ((type != StorageType.Int64) && (type != StorageType.UInt16))) && (((type != StorageType.UInt32) && (type != StorageType.UInt64)) && (type != StorageType.SByte))) { return (type == StorageType.Byte); } return true; } StorageType is a Linq specific class, but you get the idea: just test against every type. It is the easiest way to know if the value is a numeric type.
