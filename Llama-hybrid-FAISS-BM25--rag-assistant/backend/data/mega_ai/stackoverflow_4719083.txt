[site]: stackoverflow
[post_id]: 4719083
[parent_id]: 
[tags]: 
Python: inject new functions into an instance of class?

I tried to manipulate the __mro__ but it it read-only The use case is as follow: The Connection object created from pyodbc (a DBAPI) used to provide a property called 'autocommit'. Lately I have wrapped a SQLAlchemy db connection pool around the pyodbc for better resource management. The new db pool will return a _ConnectionFairy , a connection proxy class, which no longer exposes the autocommit property. I would very much want to leave the thrid party code alone. So inheritance of _ConnectionFairy is not really an option (I might need to override the Pool class to change how it creates a connection proxy. For source code, please see here ) A rather not-so elegant solution is to change all occurance of conn.autocommit = True to # original connection object is accessible via .connection conn.connection.autocommit = True So, I would like to know if it is possible at all to inject a set of getter, setter and property to an instance of _ConnectionFairy
