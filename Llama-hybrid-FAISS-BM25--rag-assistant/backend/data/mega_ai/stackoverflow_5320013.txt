[site]: stackoverflow
[post_id]: 5320013
[parent_id]: 5228720
[tags]: 
To my knowledge this is hard to achieve, in a solution I work on I did the following to get 'frame number': public int NumberOfFrames { get { return (int)(Duration / AverageTimePerFrame); } } public double AverageTimePerFrame { get { return videoInfoHeader.AvgTimePerFrame / 10000000.0; } } public int GetCurrentFrame(double currentTime) { int noOfFrames = (int)(Duration / AverageTimePerFrame); return Convert.ToInt32(Math.Min(noOfFrames - 1, Math.Floor(currentTime / AverageTimePerFrame))); } I got the videoInfoHeader by doing: // Get the media type from the SampleGrabber AMMediaType media = new AMMediaType(); hr = sampGrabber.GetConnectedMediaType(media); DsError.ThrowExceptionForHR(hr); if ((media.formatType != FormatType.VideoInfo) || (media.formatPtr == IntPtr.Zero)) { throw new NotSupportedException("Unknown Grabber Media Format"); } // Grab the size info videoInfoHeader = (VideoInfoHeader)Marshal.PtrToStructure(media.formatPtr, typeof(VideoInfoHeader)); DsUtils.FreeAMMediaType(media); However this is obviously tailored to my own use-case, hopefully it helps you a bit though. Good luck! Updated Added CurrentTime code (the locker is for my own usage you can most likely remove that): public double CurrentTime { set { lock (locker) { IMediaPosition mediaPos = fFilterGraph as IMediaPosition; int hr; if (value >= 0 && value
