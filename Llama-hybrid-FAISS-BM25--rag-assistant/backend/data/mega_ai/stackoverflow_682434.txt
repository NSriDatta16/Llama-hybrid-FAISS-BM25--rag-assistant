[site]: stackoverflow
[post_id]: 682434
[parent_id]: 
[tags]: 
What's the difference between these two classes?

Below, I'm not declaring my_ints as a pointer. I don't know where the memory will be allocated. Please educate me here! #include #include class FieldStorage { private: std::vector my_ints; public: FieldStorage() { my_ints.push_back(1); my_ints.push_back(2); } void displayAll() { for (int i = 0; i And in here, I'm declaring the field my_ints as a pointer: #include #include class FieldStorage { private: std::vector *my_ints; public: FieldStorage() { my_ints = new std::vector (); my_ints->push_back(1); my_ints->push_back(2); } void displayAll() { for (int i = 0; i size(); i++) { std::cout main() function to test: int main() { FieldStorage obj; obj.displayAll(); return 0; } Both of them produces the same result. What's the difference?
