[site]: crossvalidated
[post_id]: 520169
[parent_id]: 
[tags]: 
In NLP what does it mean when text data is clustered? What does each cluster represent?

I am reading about NLP and text analysis and am studying clustering of text data. I have a large csv file that is a collection of online responses. I am first converting each response to a TFIDF vector using from sklearn.feature_extraction.text import TfidfVectorizer vectorizer = TfidfVectorizer(max_features=1000, lowercase=True, analyzer='word', stop_words='english', ngram_range=(1, 1)) and then clustering these vectors using k-means. from sklearn.cluster import KMeans clusters = 4 model = KMeans(n_clusters=clusters, init='k-means++', max_iter=500, n_init=10) model.fit(X) Now, the clustering went through and the algorithm managed to group all the text into the 4 clusters. But looking at each cluster, I want to understand how these are clustered together? What can I claim about each cluster? For example, when clustering is applied on a colour image and asked to segment the colours into 4, so Kmeans tries to group all the colours into 4. This is a visual output and I understand what has happened and I can explain the output, I dont feel the same way about this result. What can I say about each cluster? Are the words contained within it related and likely to be used together? If that is the case then how did it find this similarity? As the tf-idf vector just penalizes the very frequent works by giving it a low weight and gives the less frequent words a higher weight.. From this vector how are the words clustered and what can I claim the output represents?
