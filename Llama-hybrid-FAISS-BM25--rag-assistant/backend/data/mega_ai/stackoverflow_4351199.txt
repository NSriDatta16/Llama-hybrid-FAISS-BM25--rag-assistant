[site]: stackoverflow
[post_id]: 4351199
[parent_id]: 
[tags]: 
Could someone please help me with some Operating System concepts I cannot grasp - re Interrupts

Sorry, I wasn't sure if this was a suitable place to ask this, but I hope it is acceptable, apologies if it isn't ! :) I am currently doing a module in Operating Systems theory and I have a few concepts that I am unable to grasp - would this be the right place to ask questions ? My main question is about interrupts. When the CPU detects that there has been an interrupt, I understand that it must find out where this interrupt originated. My understanding is as follows, could anyone tell me if this is correct, and explain a few gaps in my knowledge ? For the CPU to detect where the interrupt originated, it could query all objects to identify the source, but these I/O based questions would take a long time. Instead, it uses the interrupt cycle, and expects an interrupt identifier on the data bus. If it is an 8 bit data bus, there is 256 interrupt levels (i.e 2^8). (Why is this?) So an Interrupt Service Routine (ISR) is written for every possible interrupt level and stored in a table at a fixed location (interrupt vector) which is standardized by the processor. In my notes is says "Location must be known before getting the address" (What does this mean?) The interrupt level identifier received as part of the interrupt cycle is used as an index into the interrupt vector (Can someone break this down a little please?). My understanding is that a value, the interrupt level identifier is passed to the CPU and used to point at the interrupt vector. Also, what does it mean when an interrupt is said to be "serviced"? Thank you very much, and sorry for the long paragraphs, I am just a little confused by many aspects of this !
