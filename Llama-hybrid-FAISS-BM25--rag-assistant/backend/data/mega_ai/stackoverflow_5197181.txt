[site]: stackoverflow
[post_id]: 5197181
[parent_id]: 
[tags]: 
Questions that are independent of programming language. These questions are typically more abstract than other categories. A typical usage scenario with this tag is that you have a problem and you don't know how to solve much less what to write in a specific programming language. So you would first ask a how type question with the tag language-agnostic and usually algorithm . Then when you get an acceptable answer you would code it in a specific programming language. If you have problems then you can refer back to the related question with the tag language-agnostic then in the new what question add the specific programming language, e.g. javascript , python Free Language Agnostic Programming Books 97 Things Every Programmer Should Know Algorithms and Data-Structures (PDF) Algorithms (course) The Architecture of Open Source Applications The Art of Unix Programming Best Kept Secrets of Peer Code Review Binary Trees (PDF) The Cathedral and the Bazaar Clever Algorithms Communicating Sequential Processes (PDF) - Tony Hoare Compiler Construction (PDF) Computer Musings (lectures by Donald Knuth) Data Structures and Algorithms: Annotated Reference with Examples Database Fundamentals (PDF) Data-Intensive Text Processing with MapReduce (PDF) The Definitive Guide to Building Code Quality Designing Interfaces by Jennifer Tidwell Digital Signal Processing For Engineers and Scientists Domain Driven Design Quickly Don't Just Roll the Dice (PDF) Essentials of Metaheuristics by Sean Luke Essential Skills for Agile Development A Field Guide To Genetic Programming Flow based Programming Foundations of Computer Science - Al Aho and Jeff Ullman Foundations of Programming Getting Real Getting started with Open source development (PDF) The Great Tree List Recursion Problem Guide to the Software Engineering Body of Knowledge How Computers Work How to Design Programs How to Think Like a Computer Scientist How to Write Parallel Programs How to write Unmaintainable Code I Am a Bug An Introduction to the Theory of Computation Introduction to Functional Programming (class lectures and slides) Introduction to Information Retrieval Is Parallel Programming Hard, And, If So, What Can You Do About It? Learn to Program Let's Build a Compiler Linkers and loaders Linked List Basics Linked List Problems Mathematical Logic - an Introduction (PDF) Matters Computational Mining of Massive Datasets NASA Manager Handbook for Software Development (PDF) NASA Software Measurement Handbook Object-Oriented Reengineering Patterns Online Course Materials Operating Systems and Middleware (PDF and LaTeX) Patterns and Practices: Application Architecture Guide 2.0 Patterns of Software: Tales from the Software Community (PDF) Planning Algorithms PNG: The Definitive Guide Pointers And Memory Producing Open Source Software Programming Languages: Application and Interpretation Programming Methodology Programming Pearls Project Oberon (PDF) Seamless Object-Oriented Software Architecture (PDF) Security Engineering Structure and Interpretation of Computer Programs Summary of the GoF Design Patterns The Little Book of Semaphores The TCP/IP Guide Think Stats: Probability and Statistics for Programmers (PDF, code written in Python) Type Theory and Functional Programming Understanding IP Addressing: Everything you ever wanted to know (PDF) References : Dictionary of Algorithms and Data Structures ( NIST )
