[site]: stackoverflow
[post_id]: 3771511
[parent_id]: 3770109
[tags]: 
My implementation (Works very well with Delphi 2010. Must add ActiveX, ShellApi to uses to compile): procedure TfMain.vstTreeDragDrop(Sender: TBaseVirtualTree; Source: TObject; DataObject: IDataObject; Formats: TFormatArray; Shift: TShiftState; Pt: TPoint; var Effect: Integer; Mode: TDropMode); var I, j: Integer; MyList: TStringList; AttachMode: TVTNodeAttachMode; begin if Mode = dmOnNode then AttachMode := amInsertBefore else if Mode = dmAbove then AttachMode := amInsertBefore else if Mode = dmBelow then AttachMode := amInsertAfter else AttachMode := amAddChildLast; MyList := TStringList.Create; try for i := 0 to High(formats) - 1 do begin if (Formats[i] = CF_HDROP) then begin GetFileListFromObj(DataObject, MyList); //here we have all filenames for j:=0 to MyList.Count - 1 do begin Sender.InsertNode(Sender.DropTargetNode, AttachMode); end; end; end; finally MyList.Free; end; end; procedure TfMain.GetFileListFromObj(const DataObj: IDataObject; FileList: TStringList); var FmtEtc: TFormatEtc; // specifies required data format Medium: TStgMedium; // storage medium containing file list DroppedFileCount: Integer; // number of dropped files I: Integer; // loops thru dropped files FileNameLength: Integer; // length of a dropped file name FileName: string; // name of a dropped file begin // Get required storage medium from data object FmtEtc.cfFormat := CF_HDROP; FmtEtc.ptd := nil; FmtEtc.dwAspect := DVASPECT_CONTENT; FmtEtc.lindex := -1; FmtEtc.tymed := TYMED_HGLOBAL; OleCheck(DataObj.GetData(FmtEtc, Medium)); try try // Get count of files dropped DroppedFileCount := DragQueryFile( Medium.hGlobal, $FFFFFFFF, nil, 0 ); // Get name of each file dropped and process it for I := 0 to Pred(DroppedFileCount) do begin // get length of file name, then name itself FileNameLength := DragQueryFile(Medium.hGlobal, I, nil, 0); SetLength(FileName, FileNameLength); DragQueryFileW( Medium.hGlobal, I, PWideChar(FileName), FileNameLength + 1 ); // add file name to list FileList.Append(FileName); end; finally // Tidy up - release the drop handle // don't use DropH again after this DragFinish(Medium.hGlobal); end; finally ReleaseStgMedium(Medium); end; end;
