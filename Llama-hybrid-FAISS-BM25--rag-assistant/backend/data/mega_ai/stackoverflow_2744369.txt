[site]: stackoverflow
[post_id]: 2744369
[parent_id]: 2680743
[tags]: 
The problem of connecting to SQLite 3 DBs and similar problems are covered and discussed on a forum post entitled, "Connecting to SQLite3 database from PHP 5.25" This may answer some of your queries. The latest build of SQLite is compiled-in to PHP5 and is enabled via PDO. It shows in PHPINFO.PHP as 2.0-dev "$Id: sqlite.c,v 1.166.2.13.2.12 2008/12/31 11:17:44 sebastian Exp $" Sounds more like a problem with the test code. Have you cross-checked by running on an SQLite system with standard Apache and the same version of PHP? What are the result from phpinfo() , etc? The recent MicroApache distros come with a PHP/SQLite guestbook as a demo/test. Does this not work? Come to think of it you may not have spotted that there's an SQLite distro. Why not revisit the site and check the other versions out (just unzip and run). MicroApache 2.0.63+PHP 4.4.9+SQLite: As always I point out that MicroApache isn't intended to be used on a public-facing webserver without paying specific attention to the security config. It was developed merely as a way of sharing information locally via floppy or USB stick. It's easy enough to harden though. I'm sure you are aware that the SQLite developer renamed a number of the functions with the advent of SQLite3 including the open function - (See here: An Introduction To The SQLite C/C++ Interface ) - I'm not sure how this has been handled by the PHP developers including this codebase into PHP. The suggestion from the page linked above is that you can open PHp3 DBs "as is" with the right PHP code. Mixing DLLs from different distros of PHP isn't recommended. I don't recommend any other use of the MicroApache distro other than "as is". Adding or mixing DLLs from differing versions of PHP etc. to MicroApache may introduce serious bugs or security problems. There has been little or no interest in SQLite with MicroApache to date so I've really not dug too deeply into it other than to check the functionality works. I don't rely too heavily on what's reported by phpinfo() . Perhaps you can update with your info to confirm if the version being reported is accurate. Update I've had time to research a little more and a discussion on php5-sqlite3 at the Mac OS Forge mailing list answers your problem. The PHP implementation is partial and not well documented. Some SQLite3 procedural function calls are only exposed by an object based hierarchy. The procedural API only offers the ability to open SQLite 2 DBs so you're stuck with using objects by the looks of it. There is also a PECL extension, php-sqlite3, which was developed during 2008, currently at version 0.6. This is what the php5-sqlite3 port installs. But it does not provide the sqlite3_open function you are seeking. Rather, it gives you an object-oriented interface based around three classes: SQLite3, SQLite3Stmt and SQLite3Result. It is described here, rather incompletely, notably the installation instructions are totally missing: MicroApache 2.0.63+PHP 5.2.9+SQLite MicroApache 1.3.41+PHP 4.4.9+SQLite MicroApache 1.3.41+PHP 4.4.9+SQLite MicroApache 1.3.41+PHP 4.4.9+SQLite+GD2 Hopefully you can play with these distros and solve your problems. There is an SQLite3.DLL included with the distro as a courtesy which can be accessed directly from VB5/6 or any compatible language which can call the DLL. Using SQLITE 3 from Visual BASIC 5 This was a separate project I had a look at some while ago. This was produced in MSVC by editing the original source. This DLL isn't compatible with PHP/PDO but could be used via a CGI interface. Alternately the original SQLite 3 DLL could be obtained and used via Delphi etc.
