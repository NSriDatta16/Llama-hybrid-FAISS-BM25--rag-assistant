[site]: stackoverflow
[post_id]: 4284777
[parent_id]: 4284424
[tags]: 
For understanding purpose, lets take a simple table Employee with below schema EmployeeId - int EmployeeName varchar(50) Age int Lets populate with duplicate values. Please note primary key is not duplicated in this case INSERT INTO Employee(EmployeeId,EmployeeName,Age) VALUES (1,'Mark',20) INSERT INTO Employee(EmployeeId,EmployeeName,Age) VALUES (2,'Tom',22) INSERT INTO Employee(EmployeeId,EmployeeName,Age) VALUES (3,'Sam',24) INSERT INTO Employee(EmployeeId,EmployeeName,Age) VALUES (4,'Mark',20) INSERT INTO Employee(EmployeeId,EmployeeName,Age) VALUES (5,'Tom',22) INSERT INTO Employee(EmployeeId,EmployeeName,Age) VALUES (6,'Tom',22) GO we can make use of CTE in finding the duplicate rows. Gather duplicate rows by using Group by/Count statement. Once Duplicate rows are Identified, we select those rows from the main table using join condition. Now rank those Rows and delete all the rows apart from the rows with rank 1. I find this a lot more elegant. WITH TotalDuplicates(EmployeeName,Age,Total) AS ( SELECT EmployeeName,Age,COUNT(employeeId) AS Total FROM Employee GROUP BY EmployeeName,Age HAVING COUNT(employeeId) > 1 ) ,DistinctRows(EmployeeId,EmployeeName,Age) AS ( SELECT E.EmployeeId,E.EmployeeName,E.Age FROM Employee AS E INNER JOIN TotalDuplicates AS D ON (E.EmployeeName = D.EmployeeName AND E.Age = D.Age) ) ,OrderedDuplicateTables(EmployeeId,EmployeeName,Age,Ranking) AS ( SELECT EmployeeId, EmployeeName, Age, RANK() OVER (PARTITION BY EmployeeName, Age ORDER BY EmployeeId DESC) FROM DistinctRows ) DELETE FROM Employee WHERE EmployeeId IN (SELECT EmployeeId FROM OrderedDuplicateTables WHERE Ranking > 1)
