[site]: crossvalidated
[post_id]: 436895
[parent_id]: 
[tags]: 
Training model on data one year before an event

i'm fairly new to machine learning and have a fundamental question. Lets look at the following example: I want to take a look at abandoned projects on NPM. I consider projects that have not received an update in a year or have a flag "deprecated" set to true as abandoned. The idea is before using a new npm module in a software project to pass its meta-data to the model and see if its likely that it will be abandoned in one year. So it will be a binary classification problem. Either "abandoned" or "not abandoned". So i thought about taking all projects that had their flag set to true and take their state one year before it was set (number of downloads at this time, number of contributers at this time etc.) and train a model on that. The idea is that a project could already show some sign of abandoment one year before. So if i were to pass a new package to this model it would tell me if it shows the same signs of abandoment (i.e. it is assigned the class "abandoned" not "healthy" of the binary classification). The Question is: can i do that? Is there any literature where somebody has done something similar? I could not find anything. tl;dr: Train a Model on the state of a project one year before its marked as "failed" to see if a current project shows signs of failing in one year or less from now. Additional question: for healthy projects (rows for the "healthy class"), would i also use data one year ago from now or present data? Thanks in advance for all answers.
