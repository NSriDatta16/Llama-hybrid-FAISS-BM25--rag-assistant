[site]: stackoverflow
[post_id]: 5634610
[parent_id]: 
[tags]: 
Java Timer & KeyEvents problem

I have been making Tetris game and it's almost complete. I have a problem with KeyEvents and a Timer. My Timer calls actionPerformed every 400ms which drops down tetris block. Problem is that if I press something from the keyboard (down, left, right etc), those commands are noted also every 400 milliseconds. How can I make the timer call actionPerformed every 400ms but so that I can press whenever and how many times I want something from the keyboard and it's instantly recognized/responded to? EDIT: Here's some of code like people asked public class Game extends JPanel implements ActionListener { public static final HashMap colors = new HashMap (); Timer timer; Block kpl; Grid gameBoard; char[][] grid; boolean paused = false; public Game() { colors.put('P', Color.blue); colors.put('S', Color.green); colors.put('D', Color.pink); colors.put('L', Color.red); colors.put('Z', Color.orange); colors.put('A', Color.cyan); colors.put('T', Color.magenta); kpl = new Block(); gameBoard = new Grid(21,10); // 21x10 sized gameboard grid = gameBoard.getGrid(); addKeyListener(new KeyListening()); setDoubleBuffered(true); setFocusable(true); timer = new Timer(100, this); timer.start(); } @Override public void paint(Graphics g) { // draws the current game situation super.paint(g); int height = getHeight()/grid.length; int width = getWidth()/grid[0].length/2; for (int row = 0; row } Had to translate the variables a little since I have been naming them with my own language. GUI is also pretty simple since I made first a text version of my Tetris so it basically runs the text version of it in the background and just paints the situation of the game. Text version itself is char typed matrix where I move the blocks, for example: ..P.. ..ppp ..... ..... SOLVED: Problem solved! In public void keyPressed() after every command coming from keyboard I just called repaint()-method again like public void keyPressed(KeyEvent e) { int key = e.getKeyCode(); switch (key) { case KeyEvent.VK_LEFT: gameBoard.move("v"); repaint(); break; Originally my game responded to my keyboard commands instantly but drew the current state of game every 400ms in actionPerformed() where the repaint() was called. Now my blocks can be moved whenever I want without any "delay" and they're still dropping steady every 400ms :)
