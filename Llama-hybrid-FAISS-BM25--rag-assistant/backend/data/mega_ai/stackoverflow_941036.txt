[site]: stackoverflow
[post_id]: 941036
[parent_id]: 940982
[tags]: 
In my experience it is rarely necessary to optimize using C. I prefer to identify bottlenecks and improve algorithms in those areas completely in Python. Using hash tables, caching, and generally re-organizing your data structures to suit future needs has amazing potential for speeding up your program. As your program develops you'll get a better sense of what kind of material can be precalculated, so don't be afraid to go back and redo your storage and algorithms. Additionally, look for chances to kill "two birds with one stone", such as sorting objects as you render them instead of doing huge sorts. When everything is worked to the best of your knowledge, I'd consider using an optimizer like Psyco . I've experienced literally 10x performance improvements just by using Psyco and adding one line to my program. If all else fails, use C in the proper places and you'll get what you want.
