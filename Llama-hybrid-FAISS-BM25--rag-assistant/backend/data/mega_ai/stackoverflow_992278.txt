[site]: stackoverflow
[post_id]: 992278
[parent_id]: 992076
[tags]: 
Welcome to Stack Overflow! The trick here is to realize that your Python program should look almost like the pseudocode. First let's try to understand exactly what the pseudocode is doing. If we had to interact with the program described by the pseudocode, it would look something like this: Think of a number between 1 and 1000 and press Enter. >>> Is it 500? Enter -1 if it's lower, 0 if I guessed right, or 1 if it's higher. >>> 1 Is it 750? Enter -1 if it's lower, 0 if I guessed right, or 1 if it's higher. >>> -1 Is it 625? Enter -1 if it's lower, 0 if I guessed right, or 1 if it's higher. etc. When we first think of our number, the program knows only that it is between 1 and 1000. It represents this knowledge by setting the variable 'low' to 1 and the variable 'high' to 1000. Its first guess is the average of these numbers, which is 500. After we tell the program that our number is greater than 500, it updates the value of 'low' to 501. In other words the program then knows that our number is between 501 and 1000. It then guesses the average of 501 and 1000, which is 750. We tell it that our number is lower, so the program updates the value of 'high' to 749 and guesses the average of 501 and 749 next, and so on until it guesses right, or it has narrowed the possible range down to a single number (meaning its next guess will be right). So back to writing the program in Python: We basically just translate the pseudocode line for line. For example our program loop should look just like it does in the pseucode: while high > low: # Guess (high + low) / 2 and ask user to respond # Handle user response There is no need for a for-loop as you have in your code. To take input we can do something like this: guess = (high + low) / 2 response = input('Is it ' + str(guess) + '? Enter -1 if it's lower, 0 if I guessed right, or 1 if it's higher.') Now the user input is stored in the variable 'response', and we can handle the possibilities with if statements like 'if response == -1:' for example. Just remember to print the instructions and set 'high' and 'low' to their initial values before entering the while loop and you should be all set. Good luck!
