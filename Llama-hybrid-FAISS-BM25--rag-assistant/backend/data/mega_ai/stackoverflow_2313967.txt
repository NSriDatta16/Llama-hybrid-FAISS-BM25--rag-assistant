[site]: stackoverflow
[post_id]: 2313967
[parent_id]: 1836387
[tags]: 
Here's what I've found: Doing this with regular expressions is a nightmare. You can get most of it done with just a few simple expressions, but then edge cases are a killer. I've ended up with horrible, fragile mess that barely works with one codebase. It's doable with built-in tokenizer and simple recursive descent parser that handles only simplified subset of the language. I've ended up with rather ugly design (parser and transformer in one â€“ mostly just changing or re-emitting tokens), because it seemed too much work to build useful syntax tree with whitespace maintained (I wanted resulting code to be human-readable). I wanted to try phc for this, but couldn't convince its configure that I have built required version of Boost library. I haven't tried ANTLR for this yet, but it's probably the best tool for that kind of tasks.
