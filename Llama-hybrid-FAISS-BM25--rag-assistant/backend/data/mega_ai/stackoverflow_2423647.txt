[site]: stackoverflow
[post_id]: 2423647
[parent_id]: 2418926
[tags]: 
First of all the exception occurs because you map the same column twice in your class and that is not allowed. check this IndexOutOfRangeException Deep in the bowels of NHibernate Secondly (and according to your latest comment) having an OrganizationId and an Organization property in your Person class is sort-of going against the grain. You don't need it. You can access it via per1.Organization.Id If you already have an Organization in your db (say Id=5) and you map the Organization class to the Person class using the OrganizationId foreign key, then when you code Organization theOrganizationWithId5 = nhSession.Get (5); per1.Organization = theOrganizationWithId5; nhSession.Save(per1); NHibernate will just set the value 5 on the OrganizationId column in your Person table. You will not be populating Organization.
