[site]: stackoverflow
[post_id]: 600395
[parent_id]: 
[tags]: 
Best Data Structure for The Following Constraints?

Here are some constraints for a data structure I need. It seems like none of the common data structures (I will mention the ones I've thought of below) fit these all that well. Can anyone suggest one that I maybe haven't thought of? I need to be able to perform lookups by unsigned integer keys. The items to be stored are user-defined structs. These indices will be sparse, usually extremely so. Regular arrays are out. The frequency of each index will have a non-uniform distribution, with small indices being much more frequent than large indices. N will usually be small, probably no larger than 5 or 10, but I don't want to rely on that too heavily because it might occasionally be much larger. The constant term matters a lot. I need really fast lookups when N is small. I already tried generic hash tables and, empirically, they are too slow, even when N=1, meaning no collisions , probably because of the amount of indirection involved. However, I'd be open to suggestions about specialized hash tables that take advantage of other constraints mentioned. Insertion time is not important as long as retrieval time is fast. Even O(N) insertion time is good enough. Space efficiency is not terribly important, though it is important enough not to just use regular arrays.
