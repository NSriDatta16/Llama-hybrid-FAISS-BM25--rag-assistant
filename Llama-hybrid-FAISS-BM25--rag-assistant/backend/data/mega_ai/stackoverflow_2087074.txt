[site]: stackoverflow
[post_id]: 2087074
[parent_id]: 
[tags]: 
Creating a Publish-Subscribe Pattern to integrate to the DAO pattern

Based on the question ( How to create a client notification service for a webapp or should I use an Observer Pattern? ) I will like to know. I have a fully implemented DAO with Entity beans containing only getters and setters method. Each entity is mapped to an EntityManager. Currently there are no way of notifying users of any changes added/deleted/updated to a persistent storage such as a database. I want to know, how will I implement the Publish-Subscribe pattern (also known as Observer pattern) such that I don't have to extend my current DAO architecture. I don't want my entities to inherit the Publisher because not all entities are update-able. If there are any tools/frameworks/libraries that I can use for my situation, please let me know. Also, I'm not using any persistent framework at all (framework such as Hibernate), the DAO manager and Factory was completely written from scratch by me. Regards,
