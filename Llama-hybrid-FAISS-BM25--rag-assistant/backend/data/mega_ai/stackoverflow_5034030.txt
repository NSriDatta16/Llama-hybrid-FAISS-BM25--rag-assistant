[site]: stackoverflow
[post_id]: 5034030
[parent_id]: 5018971
[tags]: 
There are usually - at least - two manifests involved when building the activation context for registration free COM. There is the EXE manifest, that specifies its dependent assemblies, including the assembly containing the COM components, and there is the assembly manifest, describing the dll's, window classes, and COM objects in the assembly. This Blog contains information about what the .2 means. Basically, when the system looks for a manifest, it looks for modulename.exe[.resid].manifest - In the case that resid is 1, it is omitted. So, you are using MFC, which means DevStudio, which means that your project should already be configured to produce a RT_MANIFEST resource automatically with the c-runtime and common control 6 settings in it. Visual Studio 2005 supports this syntax to merge dependentAssembly elements with your applications manifest without having to try and merge XML directly: #pragma comment(linker, \ "\"/manifestdependency:type='Win32' "\ "name='client' "\ "version='1.0.0.0' "\ "processorArchitecture='*' "\ "language='*'\"") So, if you add that to a cpp or header in your .exe, and then save your client.exe.2.manifest as "client.manifest", you should be all systems go.
