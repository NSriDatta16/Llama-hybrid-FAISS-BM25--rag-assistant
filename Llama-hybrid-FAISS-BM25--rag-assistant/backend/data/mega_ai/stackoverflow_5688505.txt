[site]: stackoverflow
[post_id]: 5688505
[parent_id]: 5688484
[tags]: 
There are a few where the best case scenario is O(n), but it's probably because the collection of items is already sorted. You're looking at O(n log n) on average for some of the better ones. With that said, the Wiki on sorting algorithms is quite good. There's a table that compares popular algorithms, stating their complexity, memory requirements (indicating whether the algorithm might be "in place"), and whether they leave equal value elements in their original order ("stability"). http://en.wikipedia.org/wiki/Sorting_algorithm Here's a little more interesting look at performance, provided by this table (from the above Wiki): http://en.wikipedia.org/wiki/File:SortingAlgoComp.png Some will obviously be easier to implement than others, but I'm guessing that the ones worth implementing have already been done so in a library for your choosing.
