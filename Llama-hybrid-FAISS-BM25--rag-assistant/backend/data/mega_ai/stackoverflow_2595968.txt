[site]: stackoverflow
[post_id]: 2595968
[parent_id]: 2595772
[tags]: 
See Asynchronous procedure execution . This is the only method that guarantees the execution even if the ASP process crashes. It also self tuning and can handle spikes of load, requests are queued up and processed as resources become available. The gist of the solution is leveraging the SQL Server Activation concept, which allows you to run a stored procedure in a background thread in SQL Server without a client connection . Solutions based on SqlClient asynch methods or on CLR thread pool are unreliable, the calls are lost as the ASP process is recycled, and besides they build up in-memory queues of requests that actually trigger a process recycle due to memory consumption. Solutions based on tables and Agent jobs are better, as they are reliable, but they lack the self tuning of Activation based solutions.
