[site]: stackoverflow
[post_id]: 5679844
[parent_id]: 5679029
[tags]: 
If it were me, I'd leverage as much of the standard library as I could: struct Command { /* Abstract Base Class */ ... }; struct VCommand : Command { std::vector dims; ... } struct FCommand : Command { std::vector vertexes; ... } struct FootCommand : Command { enum {LEFT, RIGHT, IN, OUT} e; ... } std::vector commandList; // DANGER: raw pointers void ParseInput(std::istream& in) { // untested code: std::string line; while(getline(in, line)) { std::stringstream lineStream(line); std::string command; lineStream >> command; if(command == "v") { std::istream_iterator (lineStream) begin; std::istream_iterator end; // Add the "v" command to the parse tree commandList.push_back(new VCommand(begin, end)); } else if (command == "f") { std::istream_iterator (lineStream) begin; std::istream_iterator end; // Add the "v" command to the parse tree commandList.push_back(new FCommand(begin, end)); } else if (command == "quit") { ... } else if (command == "put_your_left_foot_in") { ... commandList.push_back(new FootCommand(LEFT, IN)); } } }
