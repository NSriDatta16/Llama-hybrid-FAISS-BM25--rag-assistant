[site]: stackoverflow
[post_id]: 2136330
[parent_id]: 2136091
[tags]: 
The simple answer is to setup your associations in reverse of what you have, like so: # app/models/content.rb class Content 'Image' has_one :background_image, :class_name => 'Image' end # app/models/image.rb class Image You don't need the foreign keys 'background_image_id' and 'profile_image_id' in the content table at all. However, there's a more elegant solution: single table inheritance. Set it up now in case you want background and profile images to behave even slightly differently in the future, plus it will clarify your code today. First, add a column to your images table called type: # command line script/generate migration AddTypeToImages type:string rake db:migrate Now setup your models like this: # app/models/content.rb class Content Now you can do all kinds of things like getting a list of all background images: # script/console BackgroundImage.all This is more true to the data model you're trying to create, allows the easiest expandability in the future, and gives you some cool new methods today. UPDATE: I've since created a blog article called Single-Table Inheritance with Tests that goes into more detail, and covers testing.
