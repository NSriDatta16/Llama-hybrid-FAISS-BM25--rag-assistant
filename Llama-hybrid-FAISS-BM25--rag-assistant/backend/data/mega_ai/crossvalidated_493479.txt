[site]: crossvalidated
[post_id]: 493479
[parent_id]: 
[tags]: 
Efficiently sampling a symmetric posterior with MCMC

I am using MCMC (via emcee ) to sample a posterior distribution $p(\vec\theta|Y)$ where $\vec\theta = (\theta_1, \theta_2, \ldots)$ are parameters for a physical model of the process generating an experimental dataset $Y$ . Due to the symmetry of the model, I know that swapping parameters $\theta_1$ and $\theta_2$ has no effect on the posterior probability. In other words, the posterior is even with respect to $\theta_{1,2} = \theta_1 - \theta_2$ . This means that the posterior typically has two modes, symmetrical of one another. It seems like a waste of resource to sample both of them. The walkers tend to split into two groups (one for each mode) and waste a lot of proposals in the region that separates the two modes (around $\theta_{1,2} = 0$ ) The two modes are typically not sampled equally because a few more walkers would lend into either of them, failing to transition between equally important modes. How could I tune my usage of emcee to perform this sampling more efficiently? The ideas I had so far were: Combine the statistics of the modes. This is the most straightforward way, though it does not address problem (2). For each sample used for analysis, I could create a duplicate obtained by swapping its values for $\theta_1$ and $\theta_2$ . This guarantees a symmetric distribution (addressing (3)) and doubles the samples available for each mode (addressing (1)). Enforce a prior imposing $\theta_{1,2} > 0$ . This would forces the walkers to sample only one mode at a time, but I am concerned that it would lead to a large number of rejections if the mode is located near $\theta_{1, 2} = 0$ . Enforce a mirror-like boundary condition at $\theta_{1,2} = 0$ . If a proposal lands in the $\theta_{1,2} region, move it to the symmetric point in the $\theta_{1, 2} > 0$ region before evaluating the likelihood. My main concern with solution (1) is that it does not address problem (2). For the other two solutions, I am unsure whether these would violate detailed balance and alter the mode's statistics. I am especially interested in canonical solutions to this problem, if any exists.
