[site]: stackoverflow
[post_id]: 3849776
[parent_id]: 3849724
[tags]: 
A derived class can be converted to only an accessible and unambiguous base class at a given point R. There is no dearth of references and what other place than the C++ standard itself. $10.2 is a good reference: A derived class can itself serve as a base class subject to access control; see 11.2. A pointer to a derived class can be implicitly converted to a pointer to an accessible unambiguous base class (4.10). An lvalue of a derived class type can be bound to a reference to an accessible unambiguous base class (8.5.3). â€”end note ] And again $10.3 - "The base-specifier-list specifies the type of the base class subobjects contained in an object of the derived class type.[..] Here, an object of class Derived2 will have a subobject of class Derived which in turn will have a subobject of class Base.[...] In terms of OOAD principles: I would personally recommend Robert Martin's articles for getting a good hold on this especially the OCP principle. It is not possible for me to beat the clarity and authority with which the author explains these legendary OOAD guidelines Also look at LSP as explained in @Steves' post
