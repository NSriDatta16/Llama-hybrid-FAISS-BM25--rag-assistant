[site]: stackoverflow
[post_id]: 2488088
[parent_id]: 2487944
[tags]: 
Higher-level "primitives" (spheres, cubes, etc.) carry with them more semantic information about what exactly they are, along with lower bandwidth/storage requirements (a sphere requires 2 parameters - center position and radius - while, say, an isosphere requires as many triangles as necessary to render the sphere). Going with the primitives also allows the client-side engine to adjust its rendering based on local capabilities. If you say "sphere", one client can render with M subdivisions and another with N; if you send the triangles, then the information necessary to re-render at a different resolution is missing. Also, it gives you opportunity to do things such as increase the subdivision count as you move closer to the object. I don't know what Linden Labs was thinking, as I have never worked with Second Life, but if I were building something like SL I would probably lean towards the primitives as the definition and transport format because they carry with them more information which can be used for things like re-rendering, hit detection, etc. Of course, in the end they'll be converted to polygons for rendering, but that is an implementation detail.
