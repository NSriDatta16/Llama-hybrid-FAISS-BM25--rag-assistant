[site]: stackoverflow
[post_id]: 5277239
[parent_id]: 
[tags]: 
Configure Vim to insert text for Lines of Code

I'm using Vim for all program editing and I have a standard header I use at the top of all my source code files. I have a .vimrc file set up to update certain fields in this header (like Last Modified) when I save any changes using :w My question is, how do I put in a function to count lines of code, following the basic rule that only non-blank lines are counted? I know within an open vim buffer, I can use :%s/\n//gn to count all lines, and :%s/\n\n//gn to count blank lines (basically count how many times two newlines appear in a row, indicating a blank line). But how do I put this in my .vimrc file? Here's the code fragment from my .vimrc that updates the header fields: function! LastModified() if &modified let save_cursor = getpos(".") let n = min([20, line("$")]) keepjumps exe '1,' . n . 's#^\(.\{,10}Last Modified:\).*#\1' . \ strftime(' %a %b %d, %Y %I:%M%p') . '#e' keepjumps exe '1,' . n . 's#^\(.\{,10}Filename:\).*#\1' . \ ' ' . @% . '#e' keepjumps exe '1,' . n . 's#^\(.\{,10}LOC:\).*#\1' . \ ' ' . '' . '#e' call histdel('search', -1) call setpos('.', save_cursor) endif endfun Also, I would just like to add, I know there are numerous other ways to do this (like using wc --lines from the shell) but I'm interested in learning how to really configure my editor (so call it a learning exercise).
