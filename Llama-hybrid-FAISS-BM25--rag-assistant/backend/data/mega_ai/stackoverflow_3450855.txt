[site]: stackoverflow
[post_id]: 3450855
[parent_id]: 3449928
[tags]: 
See if the below solves the problem. Note that I tried to clean up the code a bit as well, but it could still be a lot simpler. You don't need all the separate IDs for each LI, since you are using index() -- I removed them from the JS. Couple of other points: If you will end up with hundreds or thousands of LIs, you should use event delegation rather than binding to click (event delegation might simplify this code further anyway). For elements handling clicks, it's usually nicer/better to use rather than . You can then at least have them do something for people without JavaScript. var mlo, item_positions, numAdded; var disableAdd = false; $(function() { mlo = $('#ml_organize'); mlo .sortable({ placeholder: 'ui-state-highlight', cursor: 'pointer', start: function() { disableAdd = true; }, stop: function() { setTimeout('disableAdd = false', 1000); } }) .disableSelection(); .find('li') .click(addMlRow); item_positions = mlo.sortable('toArray'); $('#org_submit') .click(function() { item_positions = mlo.sortable('toArray'); }) .button(); }); function addMlRow() { if(disableAdd) return false; var that = $(this); var rowNo = that.index(); numAdded++; $(' HL ') .insertBefore(that) .find('span.ui-icon-minusthick') .click(function() { $(this).parent().remove(); item_positions = mlo.sortable('toArray'); }) .end() .find('input') .focus(function() { $(this).css('background','#DDD'); }) .blur(function() { $(this).css('background','#FFF'); }) .focus(); item_positions = mlo.sortable('toArray'); }
