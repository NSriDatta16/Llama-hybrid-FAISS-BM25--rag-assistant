[site]: stackoverflow
[post_id]: 5278795
[parent_id]: 5266626
[tags]: 
Here's the final solution I came up with based on all of the great feedback I got. I think this is an elegant solution that can be reused in any scenario where deep associations are required. In the binder_controller I unbound the Doc model, and bound it back using the finderQuery to select only the Docs that a user has permission to see. Then in joined the binders_users table selecting only the binders that users have permissions to. Thank you everyone for all your help! $this->Binder->unbindModel(array('hasMany' => array('Doc'))); $this->Binder->bindModel( array('hasMany' => array( 'Doc' => array( 'className' => 'Doc', 'foreignKey' => 'binder_id', 'dependent' => false, 'finderQuery' => 'SELECT Doc.* FROM docs AS Doc INNER JOIN docs_users AS DocsUser ON DocsUser.doc_id = Doc.id AND DocsUser.user_id = ' . $this->Auth->user('id') ) ) ) ); $binders = $this->Binder->find( 'all', array( 'joins' => array( array( 'table' => 'binders_users', 'alias' => 'BindersUser', 'type' => 'inner', 'foreignKey' => false, 'conditions'=> array( 'BindersUser.binder_id = Binder.id', 'BindersUser.user_id = ' . $this->Auth->user('id') ) ) ) ) ); More on binding/unbinding models
