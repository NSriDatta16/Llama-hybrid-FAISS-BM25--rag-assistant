[site]: stackoverflow
[post_id]: 626567
[parent_id]: 
[tags]: 
Style of C API function

I am working on a library that support multiple programming environment such as VB6 and FoxPro. I have to stick with C convention as it is the lowest common denominator. Now I have a question regarding the style. Suppose that the function process input and returns a string. During the process, the error can happen. The current proposed style is this: int func(input params... char* buffer, unsigned int* buffer_size); The good thing about this style is that everything is included in the prototype, including error code. And memory allocation can be avoided. The problem is that the function is quite verbose. And because the buffer_size can be any, it requires more code to implement. Another option is to return char*, and return NULL to indicate error: char* func(input params...); This style requires caller to delete the buffer. Memory allocation is required so a server program could face memory fragmentation issue. A variant of the second option is to use a thread local variable to hold the returned pointer char*, so that the user does not need to delete the buffer. Which style do you like? And reason?
