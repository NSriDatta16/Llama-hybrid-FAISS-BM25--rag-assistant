[site]: stackoverflow
[post_id]: 5583496
[parent_id]: 5582960
[tags]: 
Some good practices: Aim for a "one click build" approach. Try to put all your projects for an app under a single solution. That way, you can build the whole stuff with a single command. Plus, with projects like SharePoint ones, you can create all packages during build (this requires customizing the .csproj files, but it's worthy), I have to try it but this may work $(PostBuildEventDependsOn); CreatePackage; This also helps you in searching across "Entire Solution", so all devs can be in sync without ambiguities. Make sure to have some good naming convention. For ex. a solution like MyApp containing projects like MyApp.Model, MyApp.View and MyApp.Presenter if you are following an MVP pattern, etc. Which brings us to another point: aim for a layered organization of your code. A project for utilities, another for your business model, another for presenters, yet another for your UI, etc. That facilitates testing, reusability, etc. Either case, just try with different approaches and evaluate by yourself pros and cons.
