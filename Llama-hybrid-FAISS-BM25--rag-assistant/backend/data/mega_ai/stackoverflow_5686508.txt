[site]: stackoverflow
[post_id]: 5686508
[parent_id]: 5685964
[tags]: 
I don't know of any, and neither does Google CodeSearch: http://www.google.com/codesearch?q=getAdditionalProductIdentification Anyway, writing your own isn't that difficult. This one took me less than an hour: package so5685964; import java.util.Map; import org.joda.time.DateMidnight; import com.google.common.collect.Maps; public class GS1Code128Data { /** Maps the AI to the corresponding data from the barcode. */ private final Map data = Maps.newHashMap(); private static final Map aiinfo = Maps.newHashMap(); static class AII { final int minLength; final int maxLength; public AII(String id, int minLength, int maxLength) { this.minLength = minLength; this.maxLength = maxLength; } } private static void ai(String id, int minLength, int maxLength) { aiinfo.put(id, new AII(id, minLength, maxLength)); } private static void ai(String id, int length) { aiinfo.put(id, new AII(id, length, length)); } static { ai("00", 18, 18); ai("01", 14); ai("02", 14); ai("10", 1, 20); ai("11", 6); ai("12", 6); // TODO: continue according to http://en.wikipedia.org/wiki/GS1-128 } /** * Decodes a Unicode string from a Code128-like encoding. * * @param fnc1 The character that represents FNC1. */ public GS1Code128Data(String s, char fnc1) { StringBuilder ai = new StringBuilder(); int index = 0; while (index 0) { throw new IllegalArgumentException("Unknown AI \"" + ai + "\"."); } } private static DateMidnight asDate(String s) { if (s == null) { return null; } String century = s.compareTo("500000") And some demonstration code: package so5685964; public class BarcodeDemo { public static void main(String[] args) { String barcode = "12110416"; GS1Code128Data data = new GS1Code128Data(barcode, '\f'); System.out.println(data.getDueDate()); } } When you assume that your input is already a String , pay attention to encoding issues. The FNC1 code does not have a corresponding Unicode Code Point, so it has to be encoded in some other way.
