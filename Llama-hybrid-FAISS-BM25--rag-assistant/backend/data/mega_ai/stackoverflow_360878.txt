[site]: stackoverflow
[post_id]: 360878
[parent_id]: 360849
[tags]: 
uh...i read the TDD cycle as write the test first, which will fail because the code is just a stub write the code so that the test passes refactor as necessary there's no obligation to keep writing tests that fail, the first one fails because there's no code to do anything. the point of the first test is to decide on the interface! EDIT: There seems to be some misunderstanding of the "red-green-refactor" mantra. According to wikipedia's TDD article In test-driven development, each new feature begins with writing a test. This test must inevitably fail because it is written before the feature has been implemented. In other words, the must-fail test is for a new feature , not for additional coverage! EDIT: unless you're talking about writing a regression test to reproduce a bug, of course!
