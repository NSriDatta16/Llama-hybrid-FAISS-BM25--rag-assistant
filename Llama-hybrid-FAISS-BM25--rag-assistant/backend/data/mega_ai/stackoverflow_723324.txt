[site]: stackoverflow
[post_id]: 723324
[parent_id]: 
[tags]: 
PHP and the goto statement to be added in PHP 5.3

The "goto" statement comes straight out of ASM or any other assembler language. Here's a link: https://www.php.net/manual/en/control-structures.goto.php I'm wondering: what can this do to make my code more well-organized? How can I implement this in larger projects, without screwing it up. Since the goto will allow you to jump back and forth, accidental assignments and infinite loops are waiting to happen if you use this the wrong way. Can someone give me an example of a good use of this? EDIT: allright, I've seen some of the replies and apparently a wide consensus exists about the use of the "goto" statement and it being bad. So I'm still wondering: why would PHP bother to add it to the language. If they didn't see something in it, they wouldn't do it... so why? Also: A discussion here on StackOverflow about "goto" in general EDIT2: Seeing as this question induced a lot of bad things to be sad about the goto statement, I went and asked my father. He's 52 years old and is an Industrial Engineer. He told me a couple of times he did a good amount of programming in his days and mostly in FORTRAN and COBOL. Nowadays he does IT services, server&networkmanagment and such. Anyways, he said some stuff about "back in my day..." After discussing that a bit, he came back to the goto statement, saying that even back in his days as a student, they allready knew it wasn't a smart idea to use it, but they didn't have much better back then. Try/catch was still years away and error handling hardly excisted. So what did you do to check your program? Add a few lines at the end that allow you to print output and everything you need to check in your code, and then you place the line: "goto printing;", or something like that, to start the printing of your data. And in this manner, you gradually debugged your code. He agrees that the use of goto in the modern programming world is pretty useless. The only use he finds justified is an "emergency break", to be used in extreme debugging and unexpected situations. Kinda like goto fatal_error; , and have the "fatal_error" part of your code do some things to show you in-depth results. But only during the creation of something. A finished product should not have goto-statements. LATE EDIT: Another discussion about "goto" in PHP5.3/PHP6
