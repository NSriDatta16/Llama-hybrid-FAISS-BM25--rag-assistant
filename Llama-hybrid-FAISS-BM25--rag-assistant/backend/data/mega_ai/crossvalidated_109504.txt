[site]: crossvalidated
[post_id]: 109504
[parent_id]: 
[tags]: 
Binary version of Probabilistic Matrix Factorization in pymc?

I'm a newby in statistics, this is my first post, sorry for any possible mistake. There is a good Bayesian Probabilistic Matrix Factorization model introduced in: Bayesian Probabilistic Matrix Factorization using Markov Chain Monte Carlo I was trying to implement a Binary version of it, i.e., all the Entries in the rating matrix is 0 or 1, you may think of it as indicating whether each rating is missing or not. So I guess the latent vectors U and V should also be changed to Binary. Now, since I'm not good at statistics, my guess is that I should make the following change on the generative model of 1 : Change the Multivariate Gaussian Priors on U,V into a set of Bernoulli priors, e.g., for a latent vector $U_i$, its elements are deemed to be generated from $$ U_{i,k} \sim \mathrm{Bernoulli}(\pi_k) \\ \pi_k \sim \mathrm{Beta}(\alpha,\beta) $$ $k=1...D$, $D$ is the dimension of latent factors, $\alpha,\beta$ are certain hyperparameters. Is this the right model? If so, is it possible to implement its MCMC parameter estimation using pymc? Just show me a simple outline of the pymc code will be perfect. This is a huge problem for me. Thanks in advance!
