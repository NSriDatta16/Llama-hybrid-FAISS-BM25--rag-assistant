[site]: stackoverflow
[post_id]: 4531251
[parent_id]: 4531196
[tags]: 
You can do it in steps like these: Rename the fossil's main function to something else so that you can call it Before calling fossil's main, redirect stdout/stderr to the file of your choice with: freopen("filename.out", "w", stdout); Form an argument array, call fossil_main, read the output from the files. You'll need to restore stdout stream state; there is no cross-platform mechanism for that, but you can use some pseudo-handles (i.e. CONOUT$ on Windows). However, please note that this is fragile: There may be global variables that are supposed to be zero-initialized at the beginning of main(), which will not be true for the second call to main() fossil may change some process/thread state (locale, current directory, etc.), you won't be able to reliably restore it. An especially bad case of this is calling exit(n). There will be no usual cleanup on process termination - expect file handles that are left open (so that you would not be able to open them again, if they're opened without sharing), memory leaks, etc. Obviously, now crashes/hangs in fossil will be harder to handle (you can sometimes work around that) Generally, you can do this, but don't unless you have a good reason to (i.e. performance) and you're ready to face the consequences and fix bugs yourself.
