[site]: stackoverflow
[post_id]: 2167255
[parent_id]: 295538
[tags]: 
OK... I can resond.. Disclaimer: I just had an 18+ hour day (again).. I'm old and forgetfull.. I can't spell.. I have a short attention span so I better respond fast.. :-) Question: Is it possible to change the thread principal to an user with no account on the local machine? Answer: Yes, you can change a thread principal even if the credentials you are using are not defined locally or are outside the "forest". I just ran into this problem when trying to connect to an SQL server with NTLM authentication from a service. This call uses the credentials associated with the process meaning that you need either a local account or a domain account to authenticate before you can impersonate. Blah, blah... But... Calling LogonUser(..) with the attribute of ????_NEW_CREDENTIALS will return a security token without trying to authenticate the credentials. Kewl.. Don't have to define the account within the "forest". Once you have the token you might have to call DuplicateToken() with the option to enable impersonation resulting in a new token. Now call SetThreadToken( NULL, token ); (It might be &token?).. A call to ImpersonateLoggedonUser( token ); might be required, but I don't think so. Look it up.. Do what you need to do.. Call RevertToSelf() if you called ImpersonateLoggedonUser() then SetThreadToken( NULL, NULL ); (I think... look it up), and then CloseHandle() on the created handles.. No promises but this worked for me... This is off the top of my head (like my hair) and I can't spell!!!
