[site]: stackoverflow
[post_id]: 5559390
[parent_id]: 
[tags]: 
Add some meta data associated to a particular field when I am assigning a value to the field of a class?

I have a class, and I am doing some nifty things with reflection. Now I have a need to add some meta data associated to a particular field when I am assigning a value to the field of a class using reflection (I don't know what the class will be). I would like to do this without the clients to my implementation knowing (having to do anything special of their own). Having a designated "meta" field or object within the class would work, but doesn't feel very elegant since it requires the child class to do something to be "compatible". I would like to dynamically attach this meta information to the existing class, but still allow it to be treated like the same class be the rest of the application. I would like to be able to recover this meta information later. Class gets passed in Values get assigned (mapped) via Reflection with Meta information attached Class returned *This process should have no side effects in regard normal operations and the object type of the class. To the general application the class should be the same before and after. Application does "normal" work with the class (assign values, get values, validate information ,etc.) Class gets passed back in later Use the values along with meta information to do something Broken down to the simplest terms, I am basically looking for a way to "Piggy-back" extra information on any arbitrary class instance without special compile-time modification. I realize this is an odd problem with some odd constraints, but can it be done?
