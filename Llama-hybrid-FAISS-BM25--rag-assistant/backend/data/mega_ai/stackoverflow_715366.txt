[site]: stackoverflow
[post_id]: 715366
[parent_id]: 715234
[tags]: 
A simple diffing function is easy to write. Depending on how often you need it, it may be faster than the more elegant ObservableDict by S.Lott. def dict_diff(a, b): """Return differences from dictionaries a to b. Return a tuple of three dicts: (removed, added, changed). 'removed' has all keys and values removed from a. 'added' has all keys and values that were added to b. 'changed' has all keys and their values in b that are different from the corresponding key in a. """ removed = dict() added = dict() changed = dict() for key, value in a.iteritems(): if key not in b: removed[key] = value elif b[key] != value: changed[key] = b[key] for key, value in b.iteritems(): if key not in a: added[key] = value return removed, added, changed if __name__ == "__main__": print dict_diff({'foo': 1, 'bar': 2, 'yo': 4 }, {'foo': 0, 'foobar': 3, 'yo': 4 })
