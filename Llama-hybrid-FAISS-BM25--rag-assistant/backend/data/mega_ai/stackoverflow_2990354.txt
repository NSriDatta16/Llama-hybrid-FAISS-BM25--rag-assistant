[site]: stackoverflow
[post_id]: 2990354
[parent_id]: 2978286
[tags]: 
Many clustering methods including scipy.cluster start by sorting all pairwise distances, ~ 60 million in your case, not too big. How long does the following take for you ? import scipy.cluster.hierarchy as hier import pylab as pl def fcluster( pts, ncluster, method="average", criterion="maxclust" ): """ -> (pts, Y pdist, Z linkage, T fcluster, clusterlists) ncluster = n1 + n2 + ... (including n1 singletons) av cluster size = len(pts) / ncluster """ pts = np.asarray(pts) Y = scipy.spatial.distance.pdist( pts ) # ~ N^2 / 2 Z = hier.linkage( Y, method ) # N-1 T = hier.fcluster( Z, ncluster, criterion=criterion ) # clusters = clusterlists(T) return (pts, Y, Z, T) hier.dendrogram( Z ) How to permute the matrix and plot nicely was asked here in So in March, with a partial answer.
