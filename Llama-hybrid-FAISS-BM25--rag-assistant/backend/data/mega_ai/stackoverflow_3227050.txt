[site]: stackoverflow
[post_id]: 3227050
[parent_id]: 
[tags]: 
Any good reason to #include source (*.c *.cpp) files?

i've been working for some time with an opensource library (" fast artificial neural network "). I'm using it's source in my static library. When i compile it however, i get hundreds of linker warnings which are probably caused by the fact that the library includes it's *.c files in other *.c files (as i'm only including some headers i need and i did not touch the code of the lib itself). My question: Is there a good reason why the developers of the library used this approach, which is strongly discouraged? (Or at least i've been told all my life that this is bad and from my own experience i believe it IS bad). Or is it just bad design and there is no gain in this approach? I'm aware of this related question but it does not answer my question. I'm looking for reasons that might justify this. A bonus question: Is there a way how to fix this without touching the library code too much? I have a lot of work of my own and don't want to create more ;)
