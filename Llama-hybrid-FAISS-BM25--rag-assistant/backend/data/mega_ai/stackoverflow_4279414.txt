[site]: stackoverflow
[post_id]: 4279414
[parent_id]: 4278868
[tags]: 
Here's an extract of some code I used to do a boyer-moore type search. It's mean to work on pcap files, so it operates record by record, but should be easy enough to modify to suit just searching a long binary file. It's sort of extracted from some test code, so I hope I got everything for you to follow along. Also look up boyer-moore searching on wikipedia, since that is what it's based off of. int[] badMatch = new int[256]; byte[] pattern; //the pattern we are searching for //badMath is an array of every possible byte value (defined as static later). //we use this as a jump table to know how many characters we can skip comparison on //so first, we prefill every possibility with the length of our search string for (int i = 0; i // search the packet starting at offset, and try to match the last character // if we loop, we increment by whatever our jump value is for (i = offset + pattern.Length - 1; i = 0) && (payload[k] == pattern[j]) && cont; j--) { k--; } // if we matched every character, then we have a match, add it to the packet list, and exit the search (cont = false) if (j == -1) { //we MATCHED!!! //i = end; cont = false; } }
