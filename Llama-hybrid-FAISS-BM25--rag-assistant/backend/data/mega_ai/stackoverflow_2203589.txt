[site]: stackoverflow
[post_id]: 2203589
[parent_id]: 2203554
[tags]: 
You can express a lot of concepts much more concisely in a functional language like F#. Functions are first class objects, and can be applied directly to collections to perform transformations/filtering much more efficiently. Immutability is encouraged in functional languages, and this makes (for instance) multi-threaded code much more reliable (you know data structures aren't changing under you). By being able to write multi-threaded code more reliably and more easily it's much easier to take advantage of multiple processors/cores (increasingly important now Moore's law doesn;t apply so much). Note that you can use your existing C# objects within F#. As such, you may want to write certain parts of your code in F# and other parts in C#. You should be able to mix and match according to your requirements and the suitability of each approach.
