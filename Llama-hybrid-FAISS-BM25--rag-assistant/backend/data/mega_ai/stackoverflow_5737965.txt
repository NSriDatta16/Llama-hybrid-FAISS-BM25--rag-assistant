[site]: stackoverflow
[post_id]: 5737965
[parent_id]: 5737905
[tags]: 
In a declaration Actually, you can't leave out the rightmost or the leftmost dimension entirely. However, the leftmost only can be deduced for you if you have an initialiser. In a function argument list When you pass an array into a function by value, you're actually passing a pointer to the first element of that array. Yes, it looks from the syntax like you're passing an array but, no, you're not. Consider: void f(int ar[3]) void f(int ar[]) Both are confusing syntax for the equivalent: void f(int* ar) No trace of an array, let alone one of specifically three elements. Now: void f(int ar[][3]) This is confusing syntax for the equivalent: void f(int (*ar)[3]) where int (*)[3] is the type of a pointer to the first element of your array (pointer to int[3] ). In conclusion, don't pay too much attention to the array-like syntax that looks like [] ; it's not really representative of what's truly happening.
