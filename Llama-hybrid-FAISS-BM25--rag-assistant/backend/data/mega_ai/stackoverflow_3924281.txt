[site]: stackoverflow
[post_id]: 3924281
[parent_id]: 3924135
[tags]: 
// does an arraySize have to be const always? is it so it doesnt channge after the array has been created? Yes, it has to be const, moreover, it must be a constant expression, which means its size must be known at compile-time (not at runtime). If you want to resize arrays, then the best is to use the standard container std::vector. Or use dynamically allocated arrays if you want a fixed-size array, but the size is not known until runtime /* this array is being created in the function averageN() but why? cant i just create it up top and reference it in? */ if you speak about decimals, then no, it is a global variable, you can use it from anywhere. // why do you have to write the name of the function up here before you even create it? You must declare any name in C++ prior to its use. Since you call this function in main, it must be at least declared beforehand. You can also provide the definition (body) before main. // why does the array have to be created here? Oops, it appears that there's a big mixup in your code. As a matter of fact, you have 2 functions named averageN, one is averageN that takes no parameters, other is AveraeN taking an array of double.You never defined the first one, just declared. Errors: doubleTotal is not initialized. Well it is not double arrayTotal; change to double arrayTotal = 0.0; unresolved extenal in main - that's the AverageN function in main you are caling. You never wrote a body for it. You created a function that takes an array, which wasn't useful since your array is global. Just delete the array parameter from AverageN definition. HTH P.S. Read S. Lippmann's C++ Primer. It's the best book for beginners ther is for C++. IMO :)
