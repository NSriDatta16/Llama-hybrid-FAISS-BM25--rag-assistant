[site]: stackoverflow
[post_id]: 5246995
[parent_id]: 5246765
[tags]: 
Probably not the most elegant way, but doable on the client side: svn export HEAD of trunk into directory A svn checkout BAD_COMMIT of trunk into directory B copy over files from A to B B now contains all commits after BAD_COMMIT as local changes (you lose differentiation between these commits). Now: svn checkout BAD_COMMIT-1 of trunk into directory C do the svn merge of your branch, and starting point of your branch in trunk into working copy C copy over C to A Now you have the correct merge in directory A as local changes to HEAD. Commit A. Trunk now has the correct merge as HEAD. Finally: svn update B to HEAD resolve conflicts commit B At this point you have commited a sane merge and all changes after the bad merge. You loose some history, but have less hassle then working with dumps on the server side. Good luck!
