[site]: crossvalidated
[post_id]: 530003
[parent_id]: 
[tags]: 
Forecasting demand with stock-out

I'm using machine learning (gradient boosting) to forecast demand for a weekly magazine . Every week, a new issue is shipped, while all stores wraps and returns the issue from the previous week. The return tells us how many magazines were sold by each store. To optimize the number of magazines shipped, I need to predict the demand for each store. The challenge is that i don't really have demand data, i only have sales data. For example, let's say that we shipped 10 magazines to a store. If 9 were sold, then I know that the demand was 9. If 10 were sold, then the demand could have been 10, but it could also have been 11 or more. We can say that the recorded sale is always the lowest of demand and quantity shipped. s = min(d,q) I've been pondering various ways to approximate d: Make s the dependent variable and use q (quantity shipped) as one of the independent variables. I was hoping the model would notice that s was limited by q, and so, if i put q really high in the test set, then s would be a good approximation for d. The problem with this approach, however, is that I expect the model will not use q as a limiting factor. Instead, it will use it as its most important factor to predict s, because the two numbers are always very similar. (We already have a decent understanding of how many magazines we should ship to each store.) What if we flag all stock-out situations (no returned magazines) with 1, vs 0 for non stockout. Would that allow us to use s as an approximation for d, if we use flag value 0 in the test set? I doubt it - since average sales in flag=0 situations are lower than average sales in flag=1 situations, I expect that using flag=0 in the test set will make d lower than the actual s, not higher. It feels like this is a basic problem that should have a basic solution - I just cannot see it.
