[site]: stackoverflow
[post_id]: 5044366
[parent_id]: 
[tags]: 
Different colours for different articles using a:hover

I'm trying to assign three different colours to three different articles on a single page using a:hover in Wordpress. This is the site http://paragrams.wpshower.com/ At present all the articles turn pale yellow on a:hover . I'm trying to create different colours for each article (for example, first article to be yellow, the second article red, third blue and so on). Below is the php & CSS for the a:hover at present. I assume I need to wrap each thumb id in a different div and specify the colour in the CSS? PHP: trim(strip_tags( $post- >post_excerpt )), 'title' => trim(strip_tags( $post- >post_title )), ); $thumbID = get_the_post_thumbnail( $post->ID, 'background', $imgsrcparam ); ?> " class="preview"> " title=" "> and CSS: .li_container { background-attachment: scroll; background-image: url(images/main-bg.gif); background-repeat: repeat-y; background-position: left top; } .li_container .article:hover { background-color:#57bfeb; } This is the js: # * Splits a / -list into equal-sized columns. # * # * Requirements: # * # * "ul" or "ol" element must be styled with margin # * # * # * @see http://www.codeasily.com/jquery/multi-column-list-with-jquery # */ jQuery.fn.makeacolumnlists = function(settings){ settings = jQuery.extend({ cols: 3, // set number of columns colWidth: 0, // set width for each column or leave 0 for auto width equalHeight: 'li', // can be false, 'ul', 'ol', 'li' startN: 1 // first number on your ordered list }, settings); if(jQuery('> li', this)) { this.each(function(y) { var y=jQuery('.li_container').size(), height = 0, maxHeight = 0, t = jQuery(this), classN = t.attr('class'), listsize = jQuery('> li', this).size(), percol = Math.ceil(listsize/settings.cols), contW = t.width(), bl = ( isNaN(parseInt(t.css('borderLeftWidth'),10)) ? 0 : parseInt(t.css('borderLeftWidth'),10) ), br = ( isNaN(parseInt(t.css('borderRightWidth'),10)) ? 0 : parseInt(t.css('borderRightWidth'),10) ), pl = parseInt(t.css('paddingLeft'),10), pr = parseInt(t.css('paddingRight'),10), ml = parseInt(t.css('marginLeft'),10), mr = parseInt(t.css('marginRight'),10), col_Width = Math.floor((contW - (settings.cols-1)*(bl+br+pl+pr+ml+mr))/settings.cols); if (settings.colWidth) { col_Width = settings.colWidth; } var colnum=1, percol2=percol; jQuery(this).addClass('li_cont1').wrap(' '); for (var i=0; i settings.cols) colnum = 1; var eq = jQuery('> li:eq('+i+')',this); eq.addClass('li_col'+colnum); colnum++; //if(i>=percol2) { percol2+=percol; colnum++; } //var eq = jQuery('> li:eq('+i+')',this); //eq.addClass('li_col'+ colnum); //if(jQuery(this).is('ol')){eq.attr('value', ''+(i+settings.startN))+'';} } jQuery(this).css({cssFloat:'left', width:''+col_Width+'px'}); for (colnum=2; colnum '); } else { jQuery('li.li_col'+ colnum, this).appendTo('#li_container' + y).wrapAll(' '); } } if (settings.equalHeight=='li') { for (colnum=1; colnum maxHeight) ? height : maxHeight; }); } for (colnum=1; colnum maxHeight) ? height : maxHeight; }); } for (colnum=1; colnum '); }); } } jQuery.fn.uncolumnlists = function(){ jQuery('.li_cont1').each(function(i) { var onecolSize = jQuery('#li_container' + (++i) + ' .li_cont1 > li').size(); if(jQuery('#li_container' + i + ' .li_cont1').is('ul')) { jQuery('#li_container' + i + ' > ul > li').appendTo('#li_container' + i + ' ul:first'); for (var j=1; j ol > li').appendTo('#li_container' + i + ' ol:first'); for (var j=1; j
