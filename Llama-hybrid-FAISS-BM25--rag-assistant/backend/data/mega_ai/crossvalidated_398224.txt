[site]: crossvalidated
[post_id]: 398224
[parent_id]: 
[tags]: 
Expected value for max weight of two stones (given independent uncertainty in each)

If I have two stones A and B with estimated weights (and associated uncertainties) of A=100 +/- 5kg B=102 +/- 2kg Is there any formula (or good approximation) to compute the expected value of max(A,B)? That is, the best guess at how much the heavier of the two stones will weigh? It's obvious to me that this expected value should be slightly higher than 102 ("the expected value of the stone that's most likely to be the heaviest"). Also helpful to me would be Is there a way to compute the uncertainty of the expected value of max(A,B)? Is there a way to extend the formula to apply to "N-stone" situation? The best I've been able to do is run a 1-billion-sample simulation pulling values for A and B from their respective 95% confidence intervals, then computing the average of max(A,B) over all simulations to get close approximation of what the expected value should be: Max(A,B) = 102.375 +/- 2.340 (stddev = 1.194) Admittedly, this tells me nothing about how to solve the problem, but it does allow me to check the validity of proposed solutions. EDIT: Duplicate verified. Formula at link was able to replicate my simulated results Simulated E(max(A,B)) = 102.3751. The formula on the "duplicate" link indicates expected value of this max function should be: E(X) = u1*CDF((u1-u2)/θ) + u2*CDF((u2-u1)/θ) + θ*PDF((u2-u1)/θ) where θ = sqrt((2.55*2.55)+(1.0209*1.0209)) θ = 2.747 Substituting θ, u1, and u2: E(X) = 100*CDF((100-102)/θ) + 102*CDF((102-100)/θ) + θ*PDF((100-102)/θ) E(X) = 100*CDF(-0.728) + 102*CFD(0.728) + 2.747*PDF(-0.728) E(X) = 100*0.233+102*0.767+2.747*0.306 E(X) = 102.3746 The same paper linked in duplicate also has direct formula for variance/stddev of E(X). Thus, I am only missing a direct "N-stone" formula. I'll search using recommended search strings - but if that comes up empty, could I just apply the 2-stone solution to N-stone problem iteratively? So for 4 stones, A, B, C, D; I just compute 2-stone(A,B) to get A', then compute 2-stone(A',C) to get A'', and then compute 2-stone(A'',D) to get 4-stone(A,B,C,D) max-val stats.
