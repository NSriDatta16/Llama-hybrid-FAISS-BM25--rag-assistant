[site]: crossvalidated
[post_id]: 456182
[parent_id]: 456157
[tags]: 
It's not mandatory when you do the the other way correct as you've explained in the first part, because conceptually at every step models are competing with each other, so the type of the algorithm doesn't matter. Algorithms $A$ , $B$ with hyper-parameter sets $\mathcal{H}_A$ and $\mathcal{H}_B$ can be selected by making the list of models as $$\{(A,\mathcal{h_a}_1),(A,\mathcal{h_a}_2),\dots,(B,\mathcal{h_b}_1),(B,\mathcal{h_b}_1),\dots\}$$ and inputting them into the usual CV loop. Note that, nested and usual CV might give different outputs, but size of the data decreases the variance of decision. Just to complicate things, think of logistic regression and neural networks, where the former can be thought of as a special case of neural net (if used the same optimizer & loss). So, there can be overlaps between different algorithms, which indicates that the boundaries of CV might be softer. Example outside ML : Imagine a national competition that we want to select the best student in all the country. Nested CV: Select the best student from the city, then make them race for the state, and then make them race for the whole country. Usual CV: Put all students over the country to the contest, and pick the best one. But, in the end, you'll still pick the best one, assuming your evaluation metric is unbiased.
