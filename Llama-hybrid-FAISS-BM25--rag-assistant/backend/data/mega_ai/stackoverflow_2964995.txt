[site]: stackoverflow
[post_id]: 2964995
[parent_id]: 2964941
[tags]: 
If you read the MSDN documentation , the first paragraph says: Note Before using this function, please read Calling Internal APIs . Which says that: (I highlighted the important parts) The Winternl.h header file exposes prototypes of internal Windows APIs. There is no associated import library, so developers must use run-time dynamic linking to call the functions described in this header file. The functions and structures in Winternl.h are internal to the operating system and subject to change from one release of Windows to the next, and possibly even between service packs for each release. To maintain the compatibility of your application, you should use the equivalent public functions instead. Further information is available in the header file, Winternl.h, and the documentation for each function. If you do use these functions, you can access them through run-time dynamic linking using LoadLibrary and GetProcAddress . This gives your code an opportunity to respond gracefully if the function has been changed or removed from the operating system. Signature changes, however, may not be detectable. So you'll have to load the functions you want to use from NtDll.dll before being able to use them. Here is a non-tested example code sample: typedef NTSTATUS (__stdcall *NtCreateFile)( OUT PHANDLE FileHandle, IN ACCESS_MASK DesiredAccess, IN POBJECT_ATTRIBUTES ObjectAttributes, OUT PIO_STATUS_BLOCK IoStatusBlock, IN PLARGE_INTEGER AllocationSize OPTIONAL, IN ULONG FileAttributes, IN ULONG ShareAccess, IN ULONG CreateDisposition, IN ULONG CreateOptions, IN PVOID EaBuffer OPTIONAL, IN ULONG EaLength ); NtCreateFile _NtCreateFile = (NtCreateFile)GetProcAddress(GetModuleHandle("ntdll.dll"),"NtCreateFile"); // You can now use the function _NtCreateFile(/* params */); // Don't forget the release the resources
