[site]: stackoverflow
[post_id]: 1020137
[parent_id]: 1020070
[tags]: 
Objective-C treats functions as "messages" and as such, you can send a "message" to any object - even one that doesn't explicitly state in its interface that it can accept. As a result, there are no such things as private members in Obj-C. This can be very powerful, but is a source of confusion for new Obj-C programmers - especially those coming from C++, Java or C#. Here are the basic rules of thumb: You should define all public methods in your @interface so that consumers know what messages you expect to handle. You should define @private methods in your @interface to avoid compiler messages and avoid having to order the methods in your @implementation. You should use protocols when implementing a particular convention of methods for your class. Much of this is personal preference, however it helps to avoid annoying compiler warnings and keeps your code organized. and easy to understand.
