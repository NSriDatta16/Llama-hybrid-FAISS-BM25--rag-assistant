[site]: stackoverflow
[post_id]: 2797972
[parent_id]: 2797853
[tags]: 
If you want to do something like that, you easily do that with the Chrome extensions API. The areas to look for are: Chrome Extension Tab API Chrome Extension Browser Action API HTML5 localStorage or HTML5 webdatabase Now the first step is to create your popup.html file and remember that it is transient, that is, it only lives when you click on the browser action, then dies if it exits (closes). What I am trying to say, if you have a lot of computation and you want it to happen in the background and happen even if the popup is closed, move everything to the background page . And in your popup, you can easily access the background page by using chrome.extension.getBackgroundPage() Within your popup.html, you would need to get the URL of the current tab, to do so, the Tab API has a " getSelected " function that allows you to get the Tab object for the selected Tab. So something like this: popup.html Loading ... popup.js chrome.tabs.getSelected(null, function(tab) { document.getElementById('currentLink').innerHTML = tab.url; }); The reason why you cannot place JavaScript code in the HTML file is of Chrome's limitation to protect its users of JavaScript attacks: Inline scripts and event handlers disallowed Now that will allow you to show the Url in the popup for the current page as a browser action. Your next step is to use simple HTML5 features such as localStorage, or Webdatabase (in my opinion that will be better). To store the saved pages into, then you can render them on the savedLinks page same as I have done for the currentLink. Good Luck!
