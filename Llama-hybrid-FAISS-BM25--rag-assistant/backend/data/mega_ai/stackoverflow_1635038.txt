[site]: stackoverflow
[post_id]: 1635038
[parent_id]: 1221758
[tags]: 
Ok here's the real answer (I wrote the dependency plugin): The unpack and copy goals have to replicate some of the core resolution code. Unfortunately that resolution code was not really in a useable form api-wise. Because of this, those goals do not handle version ranges, and also don't resolve artifacts directly from the reactor (I frankly just never implemented them because it broke too many of the existing use cases, yeah core the resolution code was that bad) A much better approach is to use the xxx-dependencies forms of these goals. These goals ask Maven to do the resolution before they are invoked and so it's 100% compatible. You can use the filters like the groupId and artifactId filter to effectively get the list of artifacts you want and the end result will be the same. The copy and unpack are definately more flexible and were intended for a much simpler use case I had at the time. Knowing what I know now, I probably would have implemented it more like the xxx-dependencies forms to start with. All that said, in Maven 3, the resolution code is finally completely decoupled...the dependency plugin driving most of the use cases needed for this. I'll be starting to work on a new version of the plugin to fully leverage this soon...and while it will require maven 3, it will finally work 100% with all the goals.
