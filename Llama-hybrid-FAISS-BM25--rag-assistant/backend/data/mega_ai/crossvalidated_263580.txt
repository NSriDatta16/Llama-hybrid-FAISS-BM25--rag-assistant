[site]: crossvalidated
[post_id]: 263580
[parent_id]: 263564
[tags]: 
The common definition from Wikipedia is: In statistics and machine learning, one of the most common tasks is to fit a "model" to a set of training data, so as to be able to make reliable predictions on general untrained data. In overfitting, a statistical model describes random error or noise instead of the underlying relationship. So, overfitting is just sensitivity to a random noise. The good video about what it is: https://www.youtube.com/watch?v=u73PU6Qwl1I . When talking about object detection it's best to conclude about overfitting from the number (portion) of misdetected examples, MSE is also popular as well. But mean average precision or let's say F2-score are ok too - it's just the curve itself might look kind of different. About the plot, I'd refer you to DeepLearning book for more info. There is a technique called early stopping meant to prevent overfitting. So you should worry only when validation error is starting to increase and your mAP is around value 56. Early-stoping recommendations are applicable to your case. So, you're not overfitting much yet. A better approach is to save some intermediate weights now and then, so you could roll-back to the state where cv-error is lowest. The real curve might look like this (especially when you're using cross-validation): Source: http://www.byclb.com/TR/Tutorials/neural_networks/ch10_1.htm If you decrease learning rate (bigger step) - it could make learning faster, but depending on your data your model might skip local/global minima, so it might take even more time. The overall recommendation is to try different rates like 0.1, 0.01, 0.001. Actually increasing learning rate (smaller step) might help your model to find more optimal values. If you use SGD, you can make the process quite faster by applying momentum. Hyper-parameters you might also try to change to make it faster less neurons in hidden layer (less width), more hidden layers (more depth) for CNN - reduce size of receptive field for CNN - apply pooling Keep in mind, that it all comes at a risk of loosing important details about input.
