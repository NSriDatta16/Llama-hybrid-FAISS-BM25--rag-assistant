[site]: stackoverflow
[post_id]: 3230319
[parent_id]: 
[tags]: 
How to read a user's input from the console into a Unicode string?

A C++ beginner's question. Here is what I have currently: // From tchar.h #define _T(x) __T(x) ... // From tchar.h #define __T(x) L ## x ... // In MySampleCode.h #ifdef _UNICODE #define tcout wcout #else #define tcout cout #endif ... // In MySampleCode.cpp CAtlString strFileName; if (bIsInteractiveMode) { char* cFileName = new char[513]; tcout >> "); cin.getline(cFileName, 512); strFileName = cXmlFileName; } // Demonstrates how CAtlString can be printed using `tcout`. tcout This happens to "work" in the US, but I have no idea what will happen if ... say a French user is running this app and starts to enter weird characters such as Çanemeplaîtpas.xml on command line. I am looking for a clean way to populate a string of the CAtlString type. The maximum length of the input can always be set long enough, but ideally I would like to limit the unicode, and non-unicode entries to the same number of characters. Hopefully doing so is reasonably easy and elegant.
