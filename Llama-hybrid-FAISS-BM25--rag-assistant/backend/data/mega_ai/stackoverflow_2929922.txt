[site]: stackoverflow
[post_id]: 2929922
[parent_id]: 
[tags]: 
Why might the Large Object Heap grow rather than throw an exception?

In a previous question I asked possible programatic ways of maximising the largest block allocatable on the LOH . I'm still seeing the problems, but now I'm trying to get my head around why the LOH seems to grow and shrink in size, yet I'm still seeing OutOfMemoryExceptions that tally with what others have reported as being due to LOH fragmentation. Why might one call to, for example, StringBuilder.EnsureCapacity throw an OutOfMemoryException for me, but another call from somewhere else result in the LOH expanding in size (according to the performance counters, it is growing and shrinking)?
