[site]: crossvalidated
[post_id]: 166721
[parent_id]: 
[tags]: 
Optimal method for identifying correlation of a stock price and various moving average durations for Python

I am trying to find the optimal method in trying to find the relationship between daily stock price and rolling correlation of another stock. For example, let's say I have a hunch that there is a relationship between MSFT and the semi conductor ETF SMH. I have a daily prices in MSFT and SMH. Here's one for MSFT below: 47.330002 46.740002 46.619999 47.580002 47.540001 46.810001 46.700001 46.880001 46.290001 45.34 45.349998 45.939999 46.110001 ............ etc... So I have two sets of price series (MSFT and SMH) Let's say this time series goes back 250 trading days and I have a hunch that when the 30 day correlation between MSFT and SMH are rising, then I buy MSFT, when they are falling, I sell MSFT. I then do this for 50 day rolling correlation, 70 day correlation, 100 day correlation.... it could take forever to find the 'ideal' rolling correlation days to use. Is there a statistical method I can do using Python (numpy, scipy, pandas, etc) to find the optimal rolling correlation days that best explains the relationship between the price of MSFT and the correlation between SMH and MSFT?
