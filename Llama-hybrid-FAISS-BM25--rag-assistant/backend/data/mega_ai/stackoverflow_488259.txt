[site]: stackoverflow
[post_id]: 488259
[parent_id]: 335293
[tags]: 
I think what you need to know varies depending upon the type of application you are trying to develop and the user environment it will be in. From the enormous company/product perspective - it's wise to have an HMI/UI Style Guide that spells out the basic precepts developers should be using their interface designs for the specific goals of their software. In many cases, it's as important to be consistent as it is to be correct, so having a single guide for a big product, or suite of products gets really important. It also keeps the software experts from also having to be user experts. If there is just one source, I would say that the internal style guide would be it. Ideally, they should be written (and updated) to do exactly what you ask - be a reference point of all the things to consider when making a design. I'm not sure you will ever find a single guide for all aspects of user interface design that is a one size fits all source. Different types of technology require different techniques - for example the two design ideas above are useful for two very different types of applications (voice transmissions and video games). And neither one is particularly helpful for web applications. Worse yet, user needs change as a given technology becomes more widely adopted - for example, Web 2.0 GUIs use some layouts and design concepts that violate older early web UI design practices. General principles that I find useful for my work in the web app world: Always consider what the user is trying to do as the first priority Consider other systems the user is already familiar with and copy them when possible* Focus attention on the most important decision/information (see first bullet) - attention can be focused in many ways, depending on technology - size, movement, position, color, sound, or any other sensory input. Consider the user - age, disablity/ability, prior experience with this technology, and almost anything else you can think of. Then design with the key aspects of the user in mind. Consider the user's environment - hardware, network, physical surroundings Make the user do as little activity as possible to accomplish their goals - ie, mouse clicks, key strokes, voice commands Sadly, mileage may vary - I have always worked in the world of applications that people must use, but would never willingly use if they didn't need to do their jobs - hopefully the tool makes work easier, but it's still work. Things like video games - which people willingly pay money for just for the fun of using them - are a whole different ball game. In those cases, you may not be trying to make everything easy - but you are trying to add challenge in a way that is enjoyable. *(Edit - Added) - when possible and when it makes sense. Don't be afraid to reinvent the wheel when you have a better idea so long as you have a good case for it really being better.
