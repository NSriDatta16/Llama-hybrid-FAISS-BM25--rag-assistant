[site]: datascience
[post_id]: 8718
[parent_id]: 8705
[tags]: 
One advantage of many ML-based recommendation techniques is they allow you to work in a lower-dimensional space. Matrix factorization techniques for example, allow you to view a user or an item in terms of a learned latent-variable space. This allows for easier computations after the model has been trained (which is often very expensive). Some of the best results on the MovieLens recommendation dataset have been achieved by autoencoders . These also have the benefit of reducing the dimensionality of the problem. Furthermore learned representations of the data likely represent (perhaps non-linear, in the case of auto-encoders) combinations of features. Navigating the edges of a graph is likely to focus on one feature at a time. If your idea for using neo4j came from here , one thing to remember is that the data you're talking about is not just ratings/likes data (common in collaborative filtering), but also content-based data. You might want to read about hybrid recommender systems to leverage both content-based and collaborative filtering based recommendation.
