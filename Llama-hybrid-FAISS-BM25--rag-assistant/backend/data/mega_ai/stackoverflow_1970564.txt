[site]: stackoverflow
[post_id]: 1970564
[parent_id]: 
[tags]: 
Rails migrations for postgreSQL schemas

I'm working on a multi-tenant rails application using PostgreSQL schemas for different clients. Rails migrations don't work with multiple schemas out of the box, so I made the following rake task to migrate all schemas and it seems to work. My question is if others have implemented better and more elegant solutions. I would also be really happy with a good tutorial including rails code examples for PostgreSQL using multiple schemas. So far I have only found a good presentation on the subject http://aac2009.confreaks.com/06-feb-2009-14-30-writing-multi-tenant-applications-in-rails-guy-naor.html and an example of what I'm aiming for tomayko.com/writings/rails-multiple-connections desc 'Migrates all postgres schemas' task :schemas do # get all schemas env = "#{RAILS_ENV}" config = YAML::load(File.open('config/database.yml')) ActiveRecord::Base.establish_connection(config[env]) schemas = ActiveRecord::Base.connection.select_values("select * from pg_namespace where nspname != 'information_schema' AND nspname NOT LIKE 'pg%'") puts "Migrate schemas: #{schemas.inspect}" # migrate each schema schemas.each do |schema| puts "Migrate schema: #{schema}" config = YAML::load(File.open('config/database.yml')) config[env]["schema_search_path"] = schema ActiveRecord::Base.establish_connection(config[env]) ActiveRecord::Base.logger = Logger.new(STDOUT) ActiveRecord::Migrator.migrate('db/migrate', ENV["VERSION"] ? ENV["VERSION"].to_i : nil) end end
