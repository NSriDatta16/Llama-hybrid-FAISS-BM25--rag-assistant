[site]: stackoverflow
[post_id]: 1510458
[parent_id]: 1035576
[tags]: 
I know this user solved their problem already, but for others looking for an answer. This post is not perfect, but it will point you to what you need to solve this problem. With asp.net GetMachineStoreForAssembly seems to work in most cases, and it probably the desired mode when using isolated storage from a web app. Because even if you use GetUserStoreForAssembly, it will be isolated by the user account running the asp.net app and it will always be the same for each website user, unless you are somehow mapping each login to an windows user(oh and if you are doing this then it would be working). The problem is then you try to use GetUserStoreForAssembly because it needs a user with rights to isolated storage, the default IIS user for applications do not get rights for this I guess. There are 2 solutions: use GetMachineStoreForAssembly If you must use GetUserStoreForAssembly set the App to run as user with rights. This is not solved by folder permissions. There are several ways to get security setup.(IIS7) You can set it on the App pool, or under basic settings > Connect As, or under Authenication > Anonymous Authenication. I am not sure exactly what rights the user needs, but this will get you going in the right direction. Here is some bonus code than may help you figure out your problem: Dim storageFile As IsolatedStorageFile If Request("storage") = "user" Then storageFile = IsolatedStorageFile.GetUserStoreForAssembly() Else storageFile = IsolatedStorageFile.GetMachineStoreForAssembly() End If Response.Write(storageFile.GetType.GetField("m_RootDir", Reflection.BindingFlags.NonPublic Or Reflection.BindingFlags.Instance).GetValue(storageFile).ToString()) GetUserStoreForAssembly is here: C:\Documents and Settings\Gabe\Local Settings\Application Data\IsolatedStorage\ GetMachineStoreForAssembly is here: C:\Documents and Settings\All Users\Application Data\IsolatedStorage\
