[site]: stackoverflow
[post_id]: 2925435
[parent_id]: 2906416
[tags]: 
Requirements: Allow pasting into protected sheets Retain content in the locked cells after paste operation Retain protection status of the sheet Method: Handle all possible paste operations in user defined module, instead of Excel's way Since unprotecting removes contents from clipboard paste to a temp sheet make a note of user intended paste location make a note of locked cells in the protected sheet (content and address) unprotect the sheet paste to intended cells from temp sheet remove temp sheet and protect main sheet I referred to Jan Karel's Catch Paste sample for reference. You might want to add all the ways he is catching paste operations. In the ThisWorkbook module add below code Private mdNextTimeCatchPaste As Double Private Sub Workbook_Activate() REM Add Paste event handler CatchPaste End Sub Private Sub Workbook_BeforeClose(Cancel As Boolean) REM Restore Paste event handler StopCatchPaste mdNextTimeCatchPaste = Now Application.OnTime mdNextTimeCatchPaste, "'" & ThisWorkbook.Name & "'!UnProtectPasteToSheet" End Sub Private Sub Workbook_Deactivate() REM Restore Paste event handler StopCatchPaste On Error Resume Next REM Cancel scheduled macroREM s, REM because we might be closing the file Application.OnTime mdNextTimeCatchPaste, "'" & ThisWorkbook.Name & "'!UnProtectPasteToSheet", , False End Sub Private Sub Workbook_Open() REM Add Paste event handler CatchPaste End Sub Add a new Module and add below code REM Add Paste event handler Public Sub CatchPaste() REM these are the ways you can Paste in to Excel REM refer to http://www.jkp-ads.com/articles/catchpaste.asp for more details Application.OnKey "^v", "UnProtectPasteToSheet" Application.OnKey "^{Insert}", "UnProtectPasteToSheet" Application.OnKey "+{Insert}", "UnProtectPasteToSheet" Application.OnKey "~", "UnProtectPasteToSheet" Application.OnKey "{Enter}", "UnProtectPasteToSheet" End Sub REM restore all default events Public Sub StopCatchPaste() Application.OnKey "^v", "" Application.OnKey "^{Insert}", "" Application.OnKey "+{Insert}", "" Application.OnKey "~", "" Application.OnKey "{Enter}", "" End Sub REM Here we will check the sheet is protected, if it is then paste to a temp sheet, REM unprotect main sheet, paste the values, and restore locked cells Private Sub UnProtectPasteToSheet() On Error GoTo ErrHandler Dim bProtected As Boolean, oSheet As Worksheet, oTempSheet As Worksheet, sPasteLocation As String Dim oCell As Range, oCollAddress As New Collection, oCollValue As New Collection, iCount As Integer REM check protection status If Not ThisWorkbook.ActiveSheet.ProtectContents Then Selection.PasteSpecial Paste:=xlAll Else bProtected = True Set oSheet = ThisWorkbook.ActiveSheet REM save paste location sPasteLocation = Selection.Address REM unprotecting clears Clipboard in Excel!! strange but true.. REM So paste it to a new sheet before unprotecting Set oTempSheet = ThisWorkbook.Worksheets.Add REM oSheet.Visible = xlSheetVeryHidden oTempSheet.Paste REM unprotect the sheet oSheet.Unprotect REM make a note of all locked cells For Each oCell In oSheet.UsedRange If oCell.Locked Then oCollAddress.Add oCell.Address oCollValue.Add oCell.Value End If Next REM paste oTempSheet.UsedRange.Copy oSheet.Activate oSheet.Range(sPasteLocation).Select REM you need to paste only values since pasting format will lock all those cells REM since in Excel default status is "Locked" Selection.PasteSpecial xlValues REM remove temp sheet Application.DisplayAlerts = False oTempSheet.Delete Application.DisplayAlerts = True REM restore locked cells For iCount = 1 To oCollAddress.Count Range(oCollAddress.Item(iCount)) = oCollValue.Item(iCount) Next REM restore protection oSheet.Protect End If Exit Sub ErrHandler: Debug.Print Err.Description If bProtected Then ThisWorkbook.ActiveSheet.Protect End If End Sub Note: I am adding REM instead of ' to keep the Stackoverflow formatter happy. Give it a try and let me know how it goes..
