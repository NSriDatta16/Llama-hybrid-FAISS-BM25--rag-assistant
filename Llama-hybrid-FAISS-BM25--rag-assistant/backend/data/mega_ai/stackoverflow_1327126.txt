[site]: stackoverflow
[post_id]: 1327126
[parent_id]: 
[tags]: 
Solution to classic "Blockbuster"

In the UK throughout the 80's and 90's (70's too I believe!) there was a classic TV program called "Blockbuster", which had a display of hexagons in a honeycomb grid, like this (sorry for blurry pic!): (source: ukgameshows.com ) As you can see, there are 5 columns of letters and four rows. 1 person or team is trying to travel horizontally, one is trying to travel vertically. You win a hexagon by answering a question, and the answer will begin with the letter displayed in that hexagon. The winning person or team is the first to "connect a line" - note, that could be going back on itself (e.g. if it is blocked by the opposing team winning that hexagon) so there are many, many possible winning combinations. Years ago, when I was just starting out coding, I wrote a conference game based on this puzzle (we made it alternating octagons and squares to avoid copyright infringement!) but the bit I always struggled with was the algorithm to check when a complete line was made. The easy ones are fine, but ones going up, down, back and forth I got really stuck on! I ended up basically coding a massive brute-force loop that still didn't catch every eventuality. I therefore had to put a button on the conference organiser's screen to enable them to quickly declare a winner if the logic didn't detect it! Talk about dirty hack... Now I think back to this puzzle I had to solve, and I wonder if any of you out there would care to propose a more elegant solution? Language agnostic of course (all including pseudocode happily accepted). Edit It's fine to store your data how you want. I stuck it in an array.
