[site]: stackoverflow
[post_id]: 1964772
[parent_id]: 1964722
[tags]: 
One of the possible solution is something between 1. and 2. Use pools for small objects: one pool per object size. In this case you can easy find pool by storing pointers in array. And in addition you can have one pool for large objects. In this case fragmentation is less probable and time overhead is not so critical because large objects are not allocated and deallocated very frequently. Note about boost::pool . When testing performance of boost::pool , test not only allocation but also deallocation. I experienced that boost::pool and boost::fast_pool deallocation time can be extremally large. My case consisted of allocations and de-allocations of small objects of different sizes in one pool
