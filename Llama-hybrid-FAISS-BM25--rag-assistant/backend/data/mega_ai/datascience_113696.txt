[site]: datascience
[post_id]: 113696
[parent_id]: 113681
[tags]: 
What do you mean by $f$ is a "physical model"? If you mean something like, "Given some $x$ , domain experts then use their experience/discretion to estimate $f(x)$ ", which you then feed into some statistical model $g$ , then I see no issue at all here. (E.g. $x$ is some weather data, we then ask some weather experts their thoughts on the chance of rain tomorrow $f(x)$ , and then use that as features for some machine learning model.) In fact, that is simply feature engineering. If $g$ is a flexible ML model like neural networks, forests, etc, then worst case these features don't contribute anything but should not really degrade performance. If $g$ is a rigid statistical model like OLS or something, then you might run into some various model-specific issues like multi-collinearity etc. Hard to say without knowing what $g$ is. Now if $f$ is also a statistical model, then you might run into some issues with overfitting. For example, training a random forest to get $f(x)$ then using both $x$ and $f(x)$ as features in a neural network. But you can work around this with some proper cross-validation and data splitting.
