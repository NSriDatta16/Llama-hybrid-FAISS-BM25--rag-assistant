[site]: stackoverflow
[post_id]: 634773
[parent_id]: 623397
[tags]: 
I don't know of an elegant solution. The easiest for a small application seems to be to TabPages.Add/Insert/Remove as suggested above. In our large application, we override the TabControl and the TabPage class-- call them MyTabControl and MyTabPage-- and added our own Visible property. Setting tabPage.Visible = false causes the tab page to remove itself from the tabControl.TabPages collection. Making the page visible again causes it to insert itself to the tab control's collection at the original index. The Visible property made the rest of our code a little easier to manage. However, the subclasses made our MyTabControl subclass slightly harder to design. TabControl.TabPages is a TabPageCollection. The Visual Studio designer wants to create and add TabPages to it. We needed it to hold our MyTabPage subclasses, so we also created a MyTabPageCollection. We also have many places where different groups of controls on a tab are visible depending on user choices. We group controls on different panels and show the panel that corresponds to the appropriate settings settings.
