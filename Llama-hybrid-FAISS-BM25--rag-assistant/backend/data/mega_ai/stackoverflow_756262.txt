[site]: stackoverflow
[post_id]: 756262
[parent_id]: 756223
[tags]: 
Not entirely to the point I must admit after some comments, but the code below can be used to generate a random permutation of a finite sequence. It's a variation of the Fisher-Yates shuffle algorithm . The example uses a sequence of int 's but you can use any Enumerable of course. var ints = Enumerable.Range(0, 51); var shuffledInts = ints.OrderBy(a => Guid.NewGuid()); You order by a random value (in this case a Guid ) which essentially permutates your list. Whether NewGuid is a good source of randomness is debatable, but it's an elegant and compact solution (albeit for another problem then the question was actually about). Taken from Jeff Atwood (Coding Horror) .
