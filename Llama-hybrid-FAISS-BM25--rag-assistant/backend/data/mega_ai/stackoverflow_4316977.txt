[site]: stackoverflow
[post_id]: 4316977
[parent_id]: 
[tags]: 
Task scheduler created in C++ could not be started

I created an scheduler in C++.I have set all the parameters and the task is configured to run only when the user is logged on with the user name provided(Done by setting the TASK_FLAG_RUN_ONLY_IF_LOGGED_ON flag). When I try to run the task I get a status "Could not start". Now suppose I manually edit any property in task property and click on OK the task runs fine. Note:The manual edit specified may be anything, like just adding a space at the end of the excecutable name or the user name. What may be the problem? Below is the code i am using: #include #include #include #include #include #include #include #include #pragma comment(lib, "Mstask.lib") #pragma comment(lib, "ole32.lib") int main(int argc, char **argv) { HRESULT hr = S_OK; ITaskScheduler *pITS; /////////////////////////////////////////////////////////////////// // Call CoInitialize to initialize the COM library and then // CoCreateInstance to get the Task Scheduler object. /////////////////////////////////////////////////////////////////// hr = CoInitialize(NULL); if (SUCCEEDED(hr)) { hr = CoCreateInstance(CLSID_CTaskScheduler, NULL, CLSCTX_INPROC_SERVER, IID_ITaskScheduler, (void **) &pITS); if (FAILED(hr)) { CoUninitialize(); return 1; } } else { return 1; } LPCWSTR pwszTaskName; ITask *pITask; pwszTaskName = L"TestTask"; hr = pITS->NewWorkItem(pwszTaskName, CLSID_CTask, IID_ITask, (IUnknown**)&pITask); if (FAILED(hr)) { wprintf(L"Failed calling ITaskScheduler::NewWorkItem: "); wprintf(L"error = 0x%x\n",hr); CoUninitialize(); return 1; } LPCWSTR pwszApplicationName = L"C:\\windows\\notepad.exe"; hr = pITask->SetApplicationName(pwszApplicationName); if (FAILED(hr)) { wprintf(L"Failed calling ITask::SetApplicationName: "); wprintf(L"error = 0x%x\n",hr); pITS->Release(); pITask->Release(); CoUninitialize(); return 1; } pITask->SetAccountInformation(L"USERNAME", NULL); pITask->SetFlags(TASK_FLAG_RUN_ONLY_IF_LOGGED_ON); pITask->SetWorkingDirectory(L"C:\\windows"); ITaskTrigger *pITaskTrigger; WORD piNewTrigger; hr = pITask->CreateTrigger(&piNewTrigger, &pITaskTrigger); if (FAILED(hr)) { wprintf(L"Failed calling ITask::CreatTrigger: "); wprintf(L"error = 0x%x\n",hr); pITask->Release(); CoUninitialize(); return 1; } pITS->AddWorkItem(pwszTaskName, pITask); pITS->Release(); // Release sceduler hr = pITask->Run(); if (FAILED(hr)) { wprintf(L"Failed calling ITask::Run, error = 0x%x\n",hr); pITask->Release(); CoUninitialize(); return 1; } pITask->Release(); CoUninitialize(); _getch(); return 0; }
