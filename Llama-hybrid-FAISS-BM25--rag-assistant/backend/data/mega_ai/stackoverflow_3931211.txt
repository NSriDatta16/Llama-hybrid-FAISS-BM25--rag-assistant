[site]: stackoverflow
[post_id]: 3931211
[parent_id]: 3930833
[tags]: 
Why can a CMediaType object be cast to AM_MEDIA_TYPE ? This is a design decision. You can't cast everything to everything else, and you definitely don't want to . Also, while you can cast objects from base-to-derived or derived-to-base, you can cast between unrelated classes if the classes define conversion operators. I suspect that the sample code creates a CMediaType object to take advantage of RAII . But the function called doesn't take a CMediaType , so the object is cast to an AM_MEDIA_TYPE . Is such feature available in c? There are casts in C, but the system is different. There is no way to define conversion operators, and there is no language concept of base or derived classes. You can write functions that take objects of one type and return objects of another. You may be interested in the GTK+ object model , which is implemented in C. what's the principle behind cast[ing] subclasses to their base classes, can I do it the other way around? The sample code uses a C-style cast. I highly discourage that in C++ code. static_cast , dynamic_cast , const_cast and reinterpret_cast all do different things, and it is very useful to distinguish between them. Since there are no type hierarchies in C there is no downcasting or upcasting . So, answering your question for C++: casting from a derived to a base class is always safe. You don't even have to write the cast: // BTW, prefer smart pointers like boost::scoped_ptr Derived* foo = new Derived(); Base* bar = foo; // or you could write simply "Base* bar = new Derived()" Casting back is not necessarily safe, so you must write the cast and dynamic_cast was created so you know if the cast actually succeeded: Base* foo = new Derived(); Derived* bar = dynamic_cast (foo); if (bar == NULL) { // foo didn't point to a Derived or something derived from Derived return; } // foo DID point to a Derived or something derived from Derived, access it through bar ... Again, C doesn't have anything like dynamic_cast because C doesn't have type hierarchies. You can use a C-style cast, but there is no way for a C-style cast to report "sorry, there is no way to cast between those objects." You want to know when objects aren't related, and for that you need to use dynamic_cast .
