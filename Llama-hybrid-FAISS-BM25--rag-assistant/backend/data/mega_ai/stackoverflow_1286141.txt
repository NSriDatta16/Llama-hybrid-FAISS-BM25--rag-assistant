[site]: stackoverflow
[post_id]: 1286141
[parent_id]: 
[tags]: 
OO Style - Simple question

Simple question for all you pragmatic object-oriented fellas. I have read many times to avoid classes like "Processor", and "xxxxHandler" in order to agree to OO standards: and I believe it's a good measure for understandability of the system code. Let's assume we have a software that scans some file structure, let's say a bunch of specific CSV files. Let's say we have an independent module called CsvParser. class CsvParser { public string GetToken(int position) { .. } public bool ReadLine() { .. } } class MyCsvFile { public string FullPath { get; } public void Scan() { CsvParser csvp(FullPath); while (csvp.ReadLine()) { /* Parse the file that this class represents */ } } } This will save having a "FileScanner" class, which is a -Processor- type class. Something that will collect say, a bunch of files from a directory, and scan each. class MyFileScan { public string[] Files { get; set; } public void GetFiles() { this.Files = Directory.GetFiles(..); } public void ScanFiles() { foreach (string thisFilePath in Files) { CsvParser csvp(thisFilePath); /* ... */ } } } The OO approach dictates having the MyCsvFile class, and then a method representing the operation on the object. Any thoughts? What do you programmers think.
