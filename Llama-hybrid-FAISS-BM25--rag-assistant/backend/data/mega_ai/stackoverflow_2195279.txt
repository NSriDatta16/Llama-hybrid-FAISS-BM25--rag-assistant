[site]: stackoverflow
[post_id]: 2195279
[parent_id]: 2195234
[tags]: 
There is probably a data structure that would be more optimal for your given case than a relational database. Having said that, there are many reasons to go with a relational DB including robust code support, backup & replication technology and a large community of experts. Your use case is similar to high-volume financial applications and telco applications. Both are frequently inserting data and frequently doing queries that are both time-based and include other select factors. I worked on a mid-sized billing project that handled cable bills for millions of subscribers. That meant an average of around 5 rows per subscriber times a few million subscribers per month in the financial transaction table alone. That was easily handled by a mid-size Oracle server using (now) 4 year old hardware and software. Large billing platforms can have 10x that many records per unit time. Properly architected and with the right hardware, this case can be handled well by modern relational DB's.
