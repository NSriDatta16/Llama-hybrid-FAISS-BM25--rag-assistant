[site]: stackoverflow
[post_id]: 4232882
[parent_id]: 4232843
[tags]: 
How would you provide read-only access to the CarCollection? I don't see what's wrong with solution 4. It should be obvious to users of CGarage that a reference to its car collection is tied to the lifetime of the garage. If they need the car collection to outlive the garage then they can always take a copy if they like. Alternatively, make CGarage hold a shared_ptr to the car collection and return that, but I wouldn't recommend it. Does your solution change, if CarCollection is a vector with pointers to Car? For collections of owned objects (i.e. reference types), it is best to use a different container. The std:: containers are all designed for value types, and don't handle reference types very well (especially constness). For these, use something like Boost's ptr_vector . If you allow read and write access to the collection, is it acceptable to make the collection public? Depends on your specific situation. Are the semantics of the collection likely to change? If not, then you can safely make it public (e.g. std::pair ). I wouldn't recommend that you do this for domain specific problem though.
