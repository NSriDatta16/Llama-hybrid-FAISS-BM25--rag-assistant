[site]: datascience
[post_id]: 37332
[parent_id]: 37328
[tags]: 
A: ABC Notebook, Large, Released: 2018-02-20, 150mm x 100mm. B: Notebook (ABC), L, Date: 18/02/2018, 150mm x 100mm It doesn't seem like a clustering problem. Rather, it's more like a text mining problem. E.g., you extract "ABC" and "Notebook" from the names of both A and B, and then decide they are the same. Besides that, there are also some format detection needed, like mapping date string to datetime format, L to Large. After you extracted these features and constructed a feature matrix, you can simply determine if two entries are different items/people by their commonly existing features in the matrix (since there will be NAs in your matrix). You don't really need a machine learning clustering algorithm. A: Doe, Jane, DOB 1970-06-23, 123 ML Ave, F B: John Doe, DOB 1971-04-33, 123 ML Avenue, M C: J. Doe, Born '71 E.g., A and B are not the same since there are mismatches in DOB and sex. B and C can be treated as same, as they both have 2 features - name and DOB - show up in your data set, and both 2 features matched. You might need a bit more complex algorithm, since there might be a D: John Doe, DOB 1971-03-12, F , with which you should leave B, C, D alone. But that's all it need, I guess.
