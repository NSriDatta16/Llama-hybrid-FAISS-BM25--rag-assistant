[site]: crossvalidated
[post_id]: 565954
[parent_id]: 565867
[tags]: 
It would give bad point estimates, too. Consequently, point forecasts would also be poor. You can simulate a trajectory of a nonstationary AR(p) process with known parameter values and fit an AR(p) model. Do that many times and see how the point estimates compare to the true parameter values. Here is a simple simulation showing that point estimates of the slope coefficients in a unit-root AR(1) model (a.k.a. a random walk) are biased (and do not follow a normal distribution asymptotically): m=1e3 # number of simulations n=1e3 # length of time series bhat=rep(NA,m) # for saving estimates of the slope coefficient for(i in 1:m){ set.seed(i); eps=rnorm(n) x=cumsum(eps) bhat[i]=coef(lm(x[-1]~x[-n]))[2] } par(mfrow=c(2,1)); plot(density(bhat),main="Density of bhat"); hist(bhat); par(mfrow=c(1,1))
