[site]: stackoverflow
[post_id]: 4540627
[parent_id]: 4538381
[tags]: 
I suggest you use a page event: myWriter.setPageEvent(new BackgroundPageEvent(backgroundImage)); class BackgroundPageEvent extends PdfPageEventHelper { Image backgroundImage = null; public BackgroundPageEvent( Image img ) { backgroundImage = img; } public void onStartPage(PdfWriter writer, Document doc) { PdfContentByte underContent = writer.getDirectContentUnder(); underContent.addImage(backgroundImage); } } With the above code, backgroundImage will be added to the "under content" as each page is created. No need to worry about when to add it yourself... iText will figure that out for you, and the first thing in the underContent of each page will be your image. You might need to play around with the various overrides of addImage to get the size you want. I believe you can also query doc for the current page size if it varies in your program. If not, you should be able to create the image you pass in with an absolute position/scale (which may be what you're doing already). PdfPageEvent has a number of other events you can override. PdfPageEventHelper covers all the bases with "no ops" so you can just override the event[s] you want: OnStartPage OnEndPage OnCloseDocument OnParagraph OnParagraphEnd OnChapter OnChapterEnd OnSection OnSectionEnd OnGenericTag Generic tag is actually Really Handy. You can give a generic tag (a string) to just about anything within your document, and your OnGenericTag override will be called with the rect that was used to draw whatever it was you tagged. All kinds of spiffy possibilities.
