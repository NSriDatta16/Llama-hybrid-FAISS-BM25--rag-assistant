[site]: stackoverflow
[post_id]: 4814072
[parent_id]: 4813954
[tags]: 
For in memory entities, bi-directional navigation can be really convenient. However, this poses issues when persisting, notably: Storage in an RDBMS - as per Leppie. For one to many relationships, the Parent FK is stored on the Child records. For one to one relationships, store the relationship to the other as a FK, but only the one way. Serialization across the wire can also cause major headaches. Typically, in a one to many relationship, the children are nested underneath the parent (relationship is preserved by hierarchy). However, if the child entity has a reference to the parent, the parent entity reference is typically not marked as serializable, due to recursion (cycles). (PreserveObjectReferences Although WCF 3.5+ has now addressed this with (IsReference = true)). Either way, bidirectional relationship references need to be 'fixed up' after rehydrating the graph from storage / deserialization. (have a look at the code generated by Linq2Sql)
