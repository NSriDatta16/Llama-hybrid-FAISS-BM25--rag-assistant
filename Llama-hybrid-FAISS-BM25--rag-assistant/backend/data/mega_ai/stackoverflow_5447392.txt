[site]: stackoverflow
[post_id]: 5447392
[parent_id]: 
[tags]: 
How do I set ORDER BY in SQL query to a value depending by the SQL query itself?

Imagine an auction (ebay auction, for example). You create an auction, set the start bidding value, let's say, 5 dollars. This gets stored as a minimal bid value to the auctions table.At this point, the current bid value of this auction is 5 dollars . Now, if someone bids to your auction, let's say, 10 dollars, this gets stored to the bids table.At this point, the current bid value of this auction is 10 dollars . Now let's imagine you want to retrieve 5 cheapest auctions. You will write a query like this: SELECT `auction_id`, `auction_startPrice`, MAX(bids.bid_price) as `bid_price` FROM `auctions` LEFT JOIN `bids` ON `auctions`.`auction_id`=`bids`.`bid_belongs_to_auction` GROUP BY `auction_id` LIMIT 5 Pretty simple, and it works! But now you need to add an ORDER BY clause to the query. The problem is, however, that we want to ORDER BY either by auctions.auction_startPrice or by bid_price , depending on whichever of this is higher , as explained in the first paragraphs. Can this be understood? I know how to do this using 2 queries, but I am hoping it can be done with 1 query. Thanks! EDIT: Just a further explanation to help you imagine the problem. If I set ORDER BY auction_startPrice ASC , then I will get 5 auctions with their lowest initial bid price, but what if there are already bids placed on those auctions? Then their current lowest price is equal to those bids, NOT to the start price, therefore my query is wrong.
