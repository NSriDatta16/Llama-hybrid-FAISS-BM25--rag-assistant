[site]: stackoverflow
[post_id]: 4120086
[parent_id]: 4119876
[tags]: 
1) No, not for the general case of C#, but a small subset, yes. Either through a runtime (check Tidepowerd GPU.NET) or via language support (LINQ or Code Quotations). 2) Yes, DirectCompute (DX11 Compute Shaders) and OpenCL are both vendor independent, mature APIs and you can find .NET binding for them. 3) No, as James said, they are different beast. GPU are high latency processors optimized for high throughput data parallel applications whereas CPU are low latency processors optimized for sequential general purpose applications. The only research project I know that tries to address this issue is the SPAP language. My advice, don't try to find the perfect universal API/runtime because there's none. Pick an existing technology (DirectCompute or OpenCL) and see how you can leverage it for your business. Useful links for starting: Microsoft DirectCompute SDK (DirectCompute is part of the DirectX SDK) NVIDIA Compute SDK (ton of samples, CUDA, DirectCompute and OpenCL ones) AMD Stream SDK (mostly OpenCL samples)
