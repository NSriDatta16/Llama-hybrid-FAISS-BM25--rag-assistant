[site]: stackoverflow
[post_id]: 933486
[parent_id]: 933439
[tags]: 
Django 1.1 (trunk at the time of posting this) has aggregates , these allow you to perform counts , mins , sums , averages , etc. in your queries. What you're looking to do would probably be accomplished using multiple querysets. Remember, each row in a table (even a generated results table) is supposed to be a new object. You don't really explain what you're summing so I'll consider it dollars : book_years = Books.object.all().order_by('year').distinct() # I use a list comprehension to filter out just the years for year in [book_year.created.year for book_year in book_years]: sum_for_year = Book.objects.filter(created__year=year).aggregate(Sum(sales))
