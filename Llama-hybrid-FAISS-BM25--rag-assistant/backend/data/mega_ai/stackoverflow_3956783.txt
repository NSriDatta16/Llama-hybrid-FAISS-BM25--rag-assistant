[site]: stackoverflow
[post_id]: 3956783
[parent_id]: 3956741
[tags]: 
To address the abstract statement: Unless there is structure in the similarity function that is known a priori, there is no better method than "try everything". Your problem is studied under the term "nearest neighbor search" . For this problem a cover tree is vaguely suitable. This page has pointers to code. A kd-tree may also be suitable. In the absence of further information about the structure or coverage of the database of reference colors, it's hard to make further suggestions. For instance, if the database is known to have a worst case sparsity, then the query can be constrained to those entries whose R component differs from the test color's R component by less than the sparsity and so on for the G and B components, reducing the entire database to a smaller cubical section guaranteed to contain the result. (Using this method requires a proof that no point in the cube is further than X from some point in the database, which at least can be predetermined only once for a fixed database.)
