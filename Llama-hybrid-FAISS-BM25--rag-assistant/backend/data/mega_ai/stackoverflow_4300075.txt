[site]: stackoverflow
[post_id]: 4300075
[parent_id]: 4299928
[tags]: 
A TextBox simply shows single or multiline text with no formatting options - it can have a font but that applies to the TextBox and not to the text, so you can't have paragraph settings like line spacing as far as I know. My first suggestion would be to use a RichTextBox, but then again, RTF doesn't have a code for line spacing so I believe that would be impossible as well. So my final suggestions is to use an owner-drawn control. It shouldn't be too difficult with a fixed-width font - you know the location of each character is (x*w, y*h) where x and y are the character index and w and h are the size of one character. Edit: Thinking about it a bit more, it's even simpler - simply separate the string to lines and draw each line. Here's a simple control that does just that. When testing it I found that for Font = new Font(FontFamily.GenericMonospace, 10, FontStyle.Regular) , the best value for Spacing was -9 . /// /// Displays text allowing you to control the line spacing /// public class SpacedLabel : Control { private string[] parts; protected override void OnPaint(PaintEventArgs e) { Graphics g = e.Graphics; g.Clear(BackColor); float lineHeight = g.MeasureString("X", Font).Height; lineHeight += Spacing; using (Brush brush = new SolidBrush(ForeColor)) { for (int i = 0; i /// Controls the change in spacing between lines. /// public float Spacing { get; set; } }
