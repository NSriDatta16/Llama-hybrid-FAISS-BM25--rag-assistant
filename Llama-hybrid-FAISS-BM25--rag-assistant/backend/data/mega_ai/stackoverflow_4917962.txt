[site]: stackoverflow
[post_id]: 4917962
[parent_id]: 4917864
[tags]: 
I agree that a key-value table is probably the best solution. My first inclination would be to just store a text column, like vBulletin did. But, if you wanted to add the ability for the data store to be a bit more extensible and searchable like you've laid out, I might suggest: 1 medium/longtext or medium/longblob field for arbitrary text/binary storage (whatever is stored + overhead of 3-4 bytes for string length). Only reason to choose medium over long is to limit what can be stored to 2^24 bytes (16.7 MB) versus 2^32 bytes (2 GB). 1 integer (4 bytes) or bigint (8 bytes) 1 datetime (8 bytes) Perhaps 1 float or double (4-8 bytes) for floating point storage These fields will allow you to store nearly any type of data in the table but without inflating the width of table** (like a varchar would) and avoid any redundant storage (like having tinyint and mediumint etc). The text stored in the longtext field can still be reasonably searched using a fulltext index or a regular limited length index (e.g. index longtext_storage(8) ). ** all blob values, such as longtext, are stored independently from the main table.
