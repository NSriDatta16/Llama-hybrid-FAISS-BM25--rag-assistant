[site]: stackoverflow
[post_id]: 3689282
[parent_id]: 3689228
[tags]: 
Use an auto ptr: int myFunc() { static GLfloat arrs[4] = {1, 1, 1, 1}; static std::auto_ptr quad = gluNewQuadric(); // Do Stuff } The static variable is initialised on first use. Then it is destroyed when the application is terminated. Because it is a smart pointer it will delete the pointer. 1: Is arrs[] stack- or heap-allocated? And so, would I need to delete it? Neither. And no you don;t need to delete it. It has static storage duration, this just means that it will live until after main exits then be destroyed with the other static storage duration objects (in reverse order of creation). 2: In the case of GLUquadric, obviously the compiler would not know how to properly delete it, for now I've used a RAII wrapper class which worked beautifully, but I'm looking if there's an even simpler approach. No. Just use a standard one to make it as simple as possible.
