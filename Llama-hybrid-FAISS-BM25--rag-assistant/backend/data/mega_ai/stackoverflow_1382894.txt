[site]: stackoverflow
[post_id]: 1382894
[parent_id]: 1380303
[tags]: 
The folder organization doesn't really matters - the major goal is easy-to-find-my-class. With a modern tools like ReSharper you usually have powerfull GoToClass helpers, so if you name your class properly, you can easilly find it. Howerer, its more important to separate your code to assemblies properly - to handle class visibility in a right way with public/internal visibility scope. My small project usual solution template: Acme.MyProject.Components.csproj DAO Models Controllers Exceptions Services Utils Acme.MyProject.Tests.csproj (depends on Components) DAO Models Controllers Services Utils Acme.MyProject.Site (aspnet web sie, depends on Components) App_Code Controls Layout When using WCF, I also create a small assembly .Entities, where I store all Data- and Operation contracts, to easilly reuse one in WCF clients
