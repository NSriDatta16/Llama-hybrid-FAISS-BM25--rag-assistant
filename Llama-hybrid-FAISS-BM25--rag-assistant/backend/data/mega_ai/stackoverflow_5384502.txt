[site]: stackoverflow
[post_id]: 5384502
[parent_id]: 5384399
[tags]: 
While @moe's answer is perfectly correct, you probably don't want to do that for error handling. Why? Because next you'll find yourself having to return a two-element array from every function with the real data in one element and a possible error in the other, and then you're going to need to check the error every single time, even if you can't do anything about it. That's gonna get tedious really quick. You're dealing with errors, so treat them like errors! When an error happens, throw an exception . If the calling code can elegantly recover from an error, it can look for and expect to deal with the exception. If the calling code can't recover from an error, then the exception will crawl up the chain until it hits a default exception handler , which you can configure to elegantly and delicately handle the responsibility of telling the user that something broke.
