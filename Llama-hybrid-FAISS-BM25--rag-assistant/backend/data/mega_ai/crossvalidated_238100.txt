[site]: crossvalidated
[post_id]: 238100
[parent_id]: 191951
[tags]: 
My answer might not be the full answer/truth you are looking for but 8 month after asking I feel confident that it's better than nothing ^^ General difference Regression/Classification: Classification means predicting a discrete valued output (e.g. type 1 or 2 or 3) Regression means predicting a continuous-valued output (e.g. housing prices related to house size) If you take a look at the sklearn examples here you will realize that the iris data is used for Linear Classifier, Neural Network, and a Custom Model (also a DNN). All those have in common that they are for classification. Linear Regression on this page uses boston.data instead. What I want to say is that there are algorithms that better fit your data and those that are worse. iris data seems to be meant to be classified (they are for flowers cite Wikipedia "this data set became a typical test case for many statistical classification") and boston.data seems to be continuous-valued via regression (boston house-prices etc., classic for regression). I can't tell you to what degree it is wrong to convert the regressor to a classifier but it's using the wrong math for the problem. It might work but sure has a downside like maybe you need a lot more training data. I'm not that deep into the math, sorry. But what I can say is even if one algorithm outperforms the other on your machine it doesn't mean it would be faster if you ran it on your GPU instead of CPU or in the Cloud. Either you have a performance issue because of massive datasets and/or hardware limitations and need an algorithm that might not take care of everything or you take what is allegedly the best and test and compare with alternatives. Often e.g. with large datasets you can just drop some random datasets and solve your performance issue that way.
