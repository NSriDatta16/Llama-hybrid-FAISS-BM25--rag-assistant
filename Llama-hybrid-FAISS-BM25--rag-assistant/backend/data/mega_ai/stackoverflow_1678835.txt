[site]: stackoverflow
[post_id]: 1678835
[parent_id]: 1584552
[tags]: 
Option 1: Only one login type is allowed Here's my suggestion (UPDATED to prevent the need to edit all business logic related to username ): Create a new column called loginid to allow the storage of OpenIDs and old usernames, Add the UNIQUE INDEX on this column as well. Populate loginid with existing data from username DELETE INDEX from username to allow them to be non-unique. When creating a new user from OpenID, set username value to unknown(google) as described. Keep password for legacy logins, ignore it for OpenID. Update only the AUTH portion of your code to look for loginid rather than username. Option 2: Allow multiple logins (also easily extends to linking multiple profiles from various sources) Create a new table to stand as a master user table and contain all required fields per user (maybe email from your example above). Create a table to store authentication containing: userid ( FK to master record), username (stores the username appropriate to the login scheme), password There are obviously flaws with both of these options, but it will hopefully get you started in the right direction.
