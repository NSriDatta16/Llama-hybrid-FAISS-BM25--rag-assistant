[site]: stackoverflow
[post_id]: 5551294
[parent_id]: 5551016
[tags]: 
I would turn this round slightly and think about: (1) putting in place simple(ish) measures so that your program isn't trivial to hack, so e.g. in Java: obfuscate your code so at least make your enemy have to go to the moderate hassle of looking through a decompilation of obfuscated code maybe write a custom class loader to load some classes encrypted in a custom format look at what information your classes HAVE to expose (e.g. subclass/interface information can't be obfuscated away) and think about ways round that put some small key functionality in a DLL/format less easy to disassemble However, the more effort you go to, the more serious hackers will see it as a "challenge". You really just want to make sure that, say, an average 1st year computer science degree student can't hack your program in a few hours. (2) putting more subtle copyright/authorship markers (e.g. metadata in images, maybe subtly embed a popup that will appear in 1 year's time to all copies that don't connect and authenticate with your server...) that hackers might not bother to look for/disable because their hacked program "works" as it is. (3) just give your program away in countries where you don't realistically have a chance of making a profit from it and don't worry about it too much-- if anything, it's a form of viral marketing. Remember that in many countries, what we see in the UK/US as "piracy" of our Precious Things is openly tolerated by government/law enforcement; don't base your business model around copyright enforcement that doesn't exist.
