[site]: stackoverflow
[post_id]: 221345
[parent_id]: 
[tags]: 
How to get the file size of a "System.Drawing.Image"

I am currently writing a system that stores meta data for around 140,000 ish images stored within a legacy image library that are being moved to cloud storage. I am using the following to get the jpg data... System.Drawing.Image image = System.Drawing.Image.FromFile("filePath"); Im quite new to image manipulation but this is fine for getting simple values like width, height, aspect ratio etc but what I cannot work out is how to retrieve the physical file size of the jpg expressed in bytes. Any help would be much appreciated. Thanks Final solution including an MD5 hash of the image for later comparison System.Drawing.Image image = System.Drawing.Image.FromFile(filePath); if (image != null) { int width = image.Width; int height = image.Height; decimal aspectRatio = width > height ? decimal.divide(width, height) : decimal.divide(height, width); int fileSize = (int)new System.IO.FileInfo(filePath).Length; using (System.IO.MemoryStream stream = new System.IO.MemoryStream(fileSize)) { image.Save(stream, System.Drawing.Imaging.ImageFormat.Jpeg); Byte[] imageBytes = stream.GetBuffer(); System.Security.Cryptography.MD5CryptoServiceProvider provider = new System.Security.Cryptography.MD5CryptoServiceProvider(); Byte[] hash = provider.ComputeHash(imageBytes); System.Text.StringBuilder hashBuilder = new System.Text.StringBuilder(); for (int i = 0; i
