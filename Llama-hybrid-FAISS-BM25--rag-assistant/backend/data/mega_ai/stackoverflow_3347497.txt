[site]: stackoverflow
[post_id]: 3347497
[parent_id]: 3347368
[tags]: 
Firstly, assigning onclick="" directly is bad practice. Using jQuery's click() method is not that much more work, but even if it was, it is cleaner and much more recommended. It keeps your HTML markup separate from your JS functionality and makes it easier to change things later on. That's the very first thing you should refactor. What I do with my JS is create one main library JS file with all of my classes/core functionality. I then use inline tags on specific pages to call the method that hooks up the links to the functions. In the global app.js file, I'll have a function: function initLinksOnPageX() { $('#button').click(function() { MYSITE.message.send('1234', '1234'); }); /* ... setup any other events ... */ } In the page body: $(initLinksOnPageX); Again, this keeps your markup clear of any JS code, so your JS related updates happen in one file (or fewer). With this setup you shouldn't strictly need page-specific JS files, though organizationally speaking it might make sense-- I don't know exactly how big your JS is.
