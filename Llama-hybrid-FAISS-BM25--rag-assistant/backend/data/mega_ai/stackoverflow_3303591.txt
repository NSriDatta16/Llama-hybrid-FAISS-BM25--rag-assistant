[site]: stackoverflow
[post_id]: 3303591
[parent_id]: 3303459
[tags]: 
If you follow the single responsibility principle (and based on the tone of your question, I think you do follow it), then the answer is clear: A class is too big when it does more than one thing; and A class is too small when it fails to fulfill its purpose. That's very broad and indeed subjective -- hence the struggle with your colleague. On your side, you can argue: There's absolutely no problem in creating additional classes -- It's a non-issue, compile-wise and runtime-wise. The current implementation of the service may suggest that these classes "belong" to it, but that may change. You can test each functionality separately. You can apply dependency injection. You ease the cognitive load of understanding the inner working of the service, because its code is smaller and better organized. Furthermore, I think your boss has a misguided understanding of cohesion . Think of it as focus : the narrower the focus of your program, the higher the cohesion. If the code on your satellite classes is merged within the service class, the latter becomes less focused (less cohesive). It's generally accepted that higher cohesion is preferred over lower cohesion. Try to enlighten his/her view about it.
