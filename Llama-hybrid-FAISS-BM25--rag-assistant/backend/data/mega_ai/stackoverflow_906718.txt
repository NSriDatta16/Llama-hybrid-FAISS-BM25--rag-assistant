[site]: stackoverflow
[post_id]: 906718
[parent_id]: 903573
[tags]: 
I've seen first hand web sites that passed all unit test, passed all automated interface tests, passed load tests, passed just about every test, but clearly and obviously, had issues when viewed by a human. That lead to code analysis, which discovered memory leaks, caching issues, bad code, and design flaws. How did this happen when more than one testing methodology was followed and all tests passed? None of the "units" had memory leaks or caching issues, only the system as a whole. Personally I believe it's because everything was written and designed to pass tests, not to be elegant, simple and flexible in design. There is a lot of value in testing. But just because code passes a test, doesn't mean it's good code. It means it's "book smart" code, not "street smart" code.
