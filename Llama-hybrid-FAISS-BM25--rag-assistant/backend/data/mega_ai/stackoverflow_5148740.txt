[site]: stackoverflow
[post_id]: 5148740
[parent_id]: 5148506
[tags]: 
jobMgr = findResource(parameters for your cluster's job manager...); job = createJob(jobMgr); set(job, 'JobData', yourdata); set(job, 'MaximumNumberOfWorkers', yourmaxworkers); set(job, 'PathDependencies', yourpathdeps); set(job, 'FileDependencies', yourfiledeps); set(job, 'Timeout', yourtimeout); for m = 1:numjobs task(m) = createTask(job, @parallelfoo, 1, {m}); % Calls taskFinish when the task completes set(task(m), 'FinishedFcn', {@taskFinish, m}); end Elsewhere, you'll have defined a function taskFinish that gets a callback when each task completes. function taskFinish(taskObj, eventData, tasknum) disp(['Task ' num2str(tasknum) ' completed']); end Note, this code was written for the original release of the Distributed Computing Toolbox (which was subsequently renamed the Parallel Computing Toolbox), so it's possible that there are more elegant ways of accomplishing what you're trying to do. This gets the job done though, with one caveat -- my understanding is that this callback functionality only works if you're running the MATLAB job manager on your cluster (not one of the third party MPI job managers such as TORQUE).
