[site]: stackoverflow
[post_id]: 1355354
[parent_id]: 1355336
[tags]: 
Well, some relational DB will probably fit your bill quite nicely. For starters, you should check out SQLite , it's a SQL db that is made for embedding. That way, you get to use regular SQL (or an ORM of your choice) right from the start, and you can relatively painlessly migrate to a "bigger" SQL db if you later need it. To address your points: Is it suitable for small applications? (Important) yes, especially useful for embedded use with little overhead Is it suitable for larger applications? How large an application could it support? depends on your precise needs, but you can always migrate to a different db later The application will store data locally, but in the future may end up sharing a schema with something on the network/in the cloud. SQLite will store data locally, another db could be used for network storage Are there any good libraries/ORMs for using it? at least Hibernate supports it explicitly, other ORM should work as it is a SQL db Are there any cool features that may not be obvious to a newbie? - Why do you like using it? low overhead, fast, easy to set up, yet an SQL dbms Is it a relational database? Or something else? relational My app will need to version pieces of "content" at some point no special support, but usually handled inside the schema anyway
