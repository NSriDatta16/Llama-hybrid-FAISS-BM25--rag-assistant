[site]: stackoverflow
[post_id]: 3229507
[parent_id]: 3222761
[tags]: 
The claim is NOT that theorems in plane geometry can be proven using Lisp primitives. To think that is to miss the analogy. I rewrote the sentence to hopefully discourage people from thinking that. The correct analogy is not new; Graham's paper opens with the observation that McCarthy "did for programming something like what Euclid did for geometry." Systems of mathematical reasoning were on McCarthy's mind when he was designing Lisp. In his 1979 retrospective on the history of Lisp, he notes that "it is now easier to prove that pure Lisp programs meet their specifications than it is for any other programming language in extensive use." And this is because Lisp primitives have referential transparency, a property they share with mathematical notation. Any program which can be implemented by the primitives shares the property. Mathematical neatness pays dividends when you have to reason about your program. The concept that "a proof is a program" is made precise by the Curry-Howard correspondence. References: McCarthy on "mathematical neatness" the Curry-Howard Correspondence (wikipedia) The Roots of Lisp, Paul Graham Referential Transparency (wikipdia)
