[site]: stackoverflow
[post_id]: 2904255
[parent_id]: 
[tags]: 
Using classes in PHP to store function

I need some advise on my PHP code organisation. I need classes where I can store different functions, and I need access to those classes in different parts of my project. Making an object of this classes each time is too sadly, so I've found a two ways have to solve it. First is to use static methods, like class car { public static $wheels_count = 4; public static function change_wheels_count($new_count) { car::$wheels_count = $new_count; } } Second is to use singleton pattern: class Example { // Hold an instance of the class private static $instance; // The singleton method public static function singleton() { if (!isset(self::$instance)) { $c = __CLASS__; self::$instance = new $c; } return self::$instance; } } But author of the article about singletons said, that if I have too much singletons in my code I should reconstruct it. But I need a lot of such classes. Can anybody explain pros and cons of each way? Which is mostly used? Are there more beautiful ways?
