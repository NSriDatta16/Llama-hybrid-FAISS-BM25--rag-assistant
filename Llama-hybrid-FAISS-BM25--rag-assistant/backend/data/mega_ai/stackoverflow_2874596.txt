[site]: stackoverflow
[post_id]: 2874596
[parent_id]: 2874270
[tags]: 
It looks mostly Pythonic enough for me. The ternary operation should look like this though (I think this will return the result you expect): return defval if not key in item else item[key] Yeah, you can pass a dictionary (or any other value) in basically any order. The only difference is if you use the *args, **kwargs (named by convention. Technically you can use any name you want) which expect to be in that order and the last one or two arguments. For inserting into a DB you can use the odbc module: import odbc conn = odbc.odbc('servernamehere') cursor = conn.cursor() cursor.execute("INSERT INTO mytable VALUES (42, 'Spam on Eggs', 'Spam on Wheat')") conn.commit() You can read up or find plenty of examples on the odbc module - I'm sure there are other modules as well, but that one should work fine for you. For retrieval you would use cursor.execute("SELECT * FROM demo") #Reads one record - returns a tuple print cursor.fetchone() #Reads the rest of the records - a list of tuples print cursor.fetchall() to make one of those records into a dictionary: record = cursor.fetchone() # Removes the 2nd element (at index 1) from the record mydict[record[1]] = record[:1] + record[2:] Though that practically screams for a generator expression if you want the whole shebang at once mydict = dict((record[1], record[:1] + record[2:] for record in cursor.fetchall()) which should give you all of the records packed up neatly in a dictionary, using the name as a key. HTH
