[site]: stackoverflow
[post_id]: 1236798
[parent_id]: 966031
[tags]: 
Use tuntap as a bridge is a good idea, and tap (not tun) can give you complete ethernet packet including ehternet(mac) header. Here I have a question for you, how does your user space stack handle the incoming packets. In your post, you mentioned that it use libpcap to grab packets, but as I know, libpcap will just get a copy of the incoming packet, and then that packet will still pass into the normal kernel stack path and that may be not what you want. For example, if it's a tcp packet for your application which is running based on the user space tcp/ip stack, and kernel doesn't know it and possibly just send a rst packet out which may break your normal connection. So I think your user space tcp/ip stack may apply some special methods to prevent the incomming packet be passed into kernel, right? How does it make that?
