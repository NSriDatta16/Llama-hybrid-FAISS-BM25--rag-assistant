[site]: stackoverflow
[post_id]: 639255
[parent_id]: 
[tags]: 
JOIN Performance: Composite key versus BigInt Primary Key

We have a table that is going to be say 100 million to a billion rows (Table name: Archive) This table will be referenced from another table, Users. We have 2 options for the primary key on the Archive table: option 1: dataID (bigint) option 2: userID + datetime (4 byte version). Schema: Users - userID (int) Archive - userID - datetime OR Archive - dataID (big int) Which one would be faster? We are shying away from using Option#1 because bigint is 8 bytes and with 100 million rows that will add up to allot of storage. Update Ok sorry I forgot to mention, userID and datetime have to be regardless, so that was the reason for not adding another column, dataID, to the table.
