[site]: stackoverflow
[post_id]: 1819581
[parent_id]: 310164
[tags]: 
I've also just started this book and had exactly the same problem although the code you have included looks further along than where I am. The 'subscript out of range' occurred for 2 reasons, first as Ron explains he was just testing and so returned a hard-coded value of 3 before he wrote the CursorLine() function, which means you I think at least 4? lines of text which as you say need to be pasted in, or maybe set the text to this value before running, also as you say they need to have carriage returns to make txtbox.Lines return an array of strings. The second reason occurs even after CursorLine() has been implemented but only happens if the text box is empty as txtbox.Lines returns string[0] but I think Ron is implementing a 'User Story' which says that when text has been entered and user presses enter, so not sure if he fixes this later, but will probably find out! The author's do state that they are learning C# and will show the development wart's and all, which is one of the reasons I have chosen to study this book as I think it is encouraging me to develop projects. I also try to do the code first before looking at his solutions to see if I'm thinking the same way, but maybe I know C# a little better than I give myself credit for, or I'm completly crap, but I've noticed a few things, first he says that overriding OnKeyDown() doesn't work, but I think he must have got confused and tried to do in Form, instead of deriving from TextBox and overriding there. This was my code when reading the 'User Story': int curPos = txtbox.SelectionStart; string Wrd = Environment.NewLine + " " + Environment.NewLine; txtbox.SelectedText = Wrd; int pl = Environment.NewLine.Length + 3; // " " length is 3 // Put text cursor inbetween tags txtbox.SelectionStart = curPos + pl; It works differently to Ron's code, but was just my interpretation of the 'User Story' and not sure how should act if text is selected or wether to split line if text cursor in the middle etc. Also in 'My Adventures' in Extreme Programming Adventures in C# txtbox.GetLineFromCharIndex(txtbox.SelectionStart) gets the cursor line position and doesn't matter if no carriage returns or resized, as far as I can tell, I done little test with: txtbox.GetLineFromCharIndex(txtbox.TextLength) which returns the total amount of lines, which will vary if you resize the text box. Using C# I always look for solutions which already exsist and people may slate me for this but I think MS have created a great language with great components which do what you expect them to do, so don't have to re-create the wheel each time. Although like I say it's early days in this book and perhaps these simple solutions aren't extensible enough and maybe Ron's taking that into account, although he did mention just get it working then worry about that later is more the XP way. Warren.
