[site]: stackoverflow
[post_id]: 2672148
[parent_id]: 2672069
[tags]: 
First, the distance between two points is the square root of the sum of the squares of the pairwise differences of the coordinates. (For example, the distance from (0,0,0) to (1,1,1) is sqrt(3) but this works for arbitrary points in any number of dimensions.) This distance is known as the l2-norm (lower-case L) or Euclidean norm. Write norm(A,B) for the distance between points A and B. On to the interesting problem of average distances... (Note that finding the minimum distance from a point to a line or between line segments is a much more common problem. There was an answer here with good pointers for that problem but it seems it was deleted in the meantime.) To find the average distance from a point C to a line segment AB, consider the distance to an arbitrary point between A and B, namely (1-k)A+kB where k ranges from 0 to 1. That's norm(C, (1-k)A+kB). So the average distance is the integral from k = 0 to 1 of norm(C, (1-k)A+kB). Mathematica can do that integral for any specific A, B, and C. Here's a Mathematica implementation: avgd[A_,B_,C_] := Integrate[Sqrt@Dot[(1-k)*A+k*B-C, (1-k)*A+k*B-C], {k, 0, 1}] The integrand can also be written Norm[(1-k)*A+k*B-C] . Either way, Mathematica can do it for specific points but can't integrate it symbolically, though apparently David got it to do so somehow. Here's David's example from the comments: > avgd[{0, 0, 0}, {4, 0, 0}, {4, 3, 0}] // N 3.73594 For the problem of the average distance between two line segments, in theory I think this should work: avgd[A_,B_,C_,D_] := Integrate[Norm[(1-k)A+k*B - (1-j)C - j*D], {k,0,1}, {j,0,1}] But Mathematica seems to choke on that even for specific points, let alone symbolically.
