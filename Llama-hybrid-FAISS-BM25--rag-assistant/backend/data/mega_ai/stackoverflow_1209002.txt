[site]: stackoverflow
[post_id]: 1209002
[parent_id]: 
[tags]: 
Streaming a File in ASP.NET works in Firefox but not Internet Explorer

I am dynamically generating a Zip file in a ASP.NET page and then sending the stream to Response. In Firefox, I can download the file named Images.zip . It works correctly. In Internet Explorer 7 it tries to download a file called ZipExport.aspx or if it's in a Generic Handler, ZipExport.ashx and it says it cannot be found on the server and fails. Here's my code: Response.BufferOutput = true; Response.ClearHeaders(); Response.ContentType = "application/octet-stream"; Response.AddHeader("content-disposition", "attachment; filename=Images.zip"); Response.Cache.SetCacheability(HttpCacheability.NoCache); Response.Cache.SetNoServerCaching(); Response.Cache.SetNoStore(); Response.Cache.SetMaxAge(System.TimeSpan.Zero); ZipFile zip = new ZipFile(); zip.AddFile(Server.MapPath("sample1.png")); zip.Save(Response.OutputStream); I don't want to make an HTTPHandler for a certain file and register it with IIS. Is there something simple I'm missing or is Internet Explorer at fault for ignoring my content-disposition header? Edit: I removed these lines and things worked: Response.Cache.SetCacheability(HttpCacheability.NoCache); Response.Cache.SetNoStore(); Edit: Here is the working code if anyone is interested: public void ProcessRequest(HttpContext context) { context.Response.Clear(); context.Response.BufferOutput = false; context.Response.ContentType = "application/octet-stream"; context.Response.AddHeader("content-disposition", "attachment; filename=ChartImages.zip"); context.Response.Cache.SetNoServerCaching(); context.Response.Cache.SetMaxAge(System.TimeSpan.Zero); using(ZipFile zip = new ZipFile()) { zip.AddFile(context.Server.MapPath("sample1.png")); zip.Save(context.Response.OutputStream); } context.ApplicationInstance.CompleteRequest(); }
