[site]: stackoverflow
[post_id]: 4107244
[parent_id]: 4106681
[tags]: 
What I would do in this situation is first and foremost review HOW you will insert your comments into the DB. The Schema you define is the most critical component to this whole piece. I referenced a similar question on SO here: Fast Relational method of storing tree data (for instance threaded comments on articles) The user is stumped as to how to store this comment data, and the Drupal format is really something efficient. And by looking at it this way you can create a clean approach, which will eliminate your multiple x SQL queries. Simply create your comment ID's like so (string): 1 - main 1.1 - comment 1 1.2 - comment 2 1.2.1 - nested comment for comment 2 1.2.1.1 - nested comment for comment 2, nested comment 1 1.2.2 1.2.3 1.2.2.1 1.1.1 - (this comment you could order by your sql call to be 3rd from the top, etc) That allows you to make a single SELECT * FORM call (get all ids that are x.% etc), and then order all your comments properly, with the ability to use the ID as a conditional check to nest or not. I think you need to re-think your schema first, then tackle the PHP code which becomes just a bunch of entries it looks like. @RobertPitt 's answer is 'ok' but it does nothing for you, as it just cleans up your code from sequential if conditions to a proper recursive function.
