[site]: stackoverflow
[post_id]: 3513370
[parent_id]: 3512820
[tags]: 
This is a huge question, and in many ways it will depend on your specific project. But here are some practices to think about: Put lots of comments in your code. Things that seem perfectly logical now will be confusing when you go back to make changes in a year or two. Maintain a development version of the site with its own database. You can test changes to the site before publishing to your production site. Use a PHP framework (such as CakePHP, CodeIgniter, etc). If you are far along on your project, this may be difficult to do. But it will help you write code in a way that is easy to update, and will include a lot of stable, mature functions that you won't have to write from scratch. Using one of these frameworks (and following its best practices) is probably the best way for a beginner to learn to think about writing modular code that's easy to update. This will also encourage you to develop your database in a way that is consistent with the structure of your site. Write tests (the framework should help you with this) to programatically check your code for errors. Use a version control system such as Subversion or Git. This allows you to track changes to the site, and easily roll back changes if/when you realize they are buggy.
