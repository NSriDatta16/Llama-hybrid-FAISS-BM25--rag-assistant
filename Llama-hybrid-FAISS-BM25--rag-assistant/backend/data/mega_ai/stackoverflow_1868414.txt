[site]: stackoverflow
[post_id]: 1868414
[parent_id]: 
[tags]: 
Is Typemock the only framework that can mock a Linq To SQL Table class?

I am trying to setup unit tests for my Linq To SQL code. My code uses the System.Data.Linq.Table class (generated by the designer). Because this class is sealed and the constructor is internal it is completely impervious to unit testing frameworks like Rhino Mocks . (Unless you want to alter you code to use the repository pattern, which I would rather not.) Typemock can (some how) mock this class. (See here for an example.) However, Typemock is also $800 a license. I don't see my employer springing for that anytime soon. So here is the question. Are there any other mocking frameworks out there that don't rely on Interfaces to create the mocks? Edit: Example of code that I need to test: public class UserDAL : IUserDAL { private IDataClassesDataContext _ctx; public UserDAL() { string env = ConfigurationManager.AppSettings["Environment"]; string connectionString = ConfigurationManager .ConnectionStrings[env].ConnectionString; _ctx = new DataClassesDataContext(connectionString); } public UserDAL(IDataClassesDataContext context) { _ctx = context; } public List GetUsersByOrganization(int organizationId) { IOrderedQueryable vUsers = (from myUsers in _ctx.Users where myUsers.Organization == organizationId orderby myUsers.LastName select myUsers); return vUsers.ToList(); } public bool IsUserInOrganization(User user, int orgainzationID) { // Do some Dal Related logic here. return GetUsersByOrganization(orgainzationID).Contains(user); } } I have shorted this up to make it easier to read. The idea is that I have some code (like IsUserInOrganization that calls another method (like GetUsersByOrganization ) that does a Linq query. I would like to unit test the IsUserInOrganization method. Do do that I would need to mock _ctx.Users which is a Table class (that is sealed and has an internal constructor).
