[site]: stackoverflow
[post_id]: 4673012
[parent_id]: 4672603
[tags]: 
A simple way to think of XML Schemas (XSD) would be as strong typing for your XML definitions. The biggest advanage being that you could provider the XSD in place of WSDL so that people understand your message/payload definitions. The biggest downside being you have a much tighter platform so partial fragments could be much more difficult. If you are consuming your own stuff and not providing public APIs then XSD may or may not be useful. As I do more with XML I have started to write the related XSD files so members of my team see the options in a known way. We can also use tooling to validate that inputs and outputs are formatted correctly and the XSD files even provider Intellisence for the related XML files within Visual Studio (I work primarily with .Net) Long story short, it's up to you.
