[site]: stackoverflow
[post_id]: 3875100
[parent_id]: 3753504
[tags]: 
There are more tools out there to tune your mysql database: http://www.day32.com/MySQL/ and http://www.maatkit.org/doc/ and http://hackmysql.com/mysqlsla In most cases you don't no need to write queries and test them against the server. Just enable the slow query log to identify your slow queries aggregate them with mysqlsla and explain them with maatkit: You could paste the slowest queries from the mysqla results to a text file and execute them with maatkit. mk-visual-explain –host hostname –user username –password passwort –database \ databasename -c query1.sql >> query1_data.txt - mk-query-profiler –host hostname –user username –password passwort –database \ databasename query1_data.txt >> query1_data.txt Often coosing a newer mysql version is critical to performance. I experienced that the execution plans for complex queries are very different when you compare for example mysql 5.0.23 to 5.1.4. They are executed in our environment much faster with 5.1.4. Lot's of useful information about mysql can be found at http://www.mysqlperformanceblog.com/ and in the book "High Performance MySQL". Tabe Cache: According to the book "the table cache stores objects that represent tables. Each object in the cache contains the associated table's parsed .frm file plus other data, depending on the table's storage engine. The table cache's design is a little MyISAM centric - this is one of the areas where the seperation between the server and the storage engine is not completely clean, for historical reasons. The table cache is a little less important for InnoDB, because InnoDB doesn't rely on it for as many purposes(such as holding file descriptors; it has its own version of a table cache for this purpose). However, even InnoDB benefits from caching the parsed .frm files.". If you raise the table cache, there might be errors with the open files limit. You also need to increase the open_files_limit variable on the server and perhaps the operating system open files limit: http://www.cyberciti.biz/faq/linux-increase-the-maximum-number-of-open-files/ . Thread Cache: The thread cache holds the threads that aren't currently associated with a connection but are ready to serve new connections. As long as MySQL has a free thread in the cache, it can respond very rapidly to connect requests, because it doesn't have to create a new thread for each connection. [!!] Temporary tables created on disk: 46% (400K on disk / 869K total) If tmp_table_size and max_heap_table_size are not set yet, increase them. Disk operations are very slow compared to RAM-operations. Does wordpress use lots of blob/text columns? then you won't see much benefits, because BLOB and Text columns are not allowed in memory tables. [OK] Highest usage of available connections: 53% (53/100) To save RAM you could decrease the allowed max connections. On the other hand you might run out of connections in peak times. Using an opcode cache for PHP is a very good idea!
