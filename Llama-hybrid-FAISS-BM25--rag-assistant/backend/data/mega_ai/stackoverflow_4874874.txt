[site]: stackoverflow
[post_id]: 4874874
[parent_id]: 4874654
[tags]: 
No. The initialisation is defined to happen when the declaration is reached. If you jump over the initialisation, the variable exists but is uninitialised. One relevant part of the C standard is ยง6.2.4: If an initialization is specified for the object, it is performed each time the declaration is reached in the execution of the block; otherwise, the value becomes indeterminate each time the declaration is reached. (Note that this text applies only to objects with automatic storage duration ). Another is ยง6.8: The initializers of objects that have automatic storage duration, and the variable length array declarators of ordinary identifiers with block scope, are evaluated and the values are stored in the objects (including storing an indeterminate value in objects without an initializer) each time the declaration is reached in the order of execution, as if it were a statement, and within each declaration in the order that declarators appear.
