[site]: crossvalidated
[post_id]: 396608
[parent_id]: 
[tags]: 
Efficiently estimating the area of an unknown number of regions given that one sample is enough to compute the area of a region

(Apologies if the title may sound confusing - I'm not a native English speaker) This problem is a (very coarse) simplification of a research project I've been working on. I hope my attempt at abstracting the technical details will make the core issues more understandable. The Problem Let's say that my little nephew received a really big (n-dimensional) coloring book as a gift. Since he doesn't have any coloring pencils or paint, so he asks me to buy some. Given the absurd size of the book (and that I'm kind of an 'Uncle Scrooge'), I ask my little nephew to give me a precise estimate of how much paint he'll need. After a couple of hours, my nephew returns with a computer program $C(x)$ that, given a point $x$ in the book, computes: The partition of the coloring book (e.g. the goose's hat in the link above) that contains x . All partitions are unique and completely disjoint from each other; The color that he plans to paint that partition; The exact amount of paint needed to paint the partition. $C(x)$ also has a "fast" mode, $C_f(x)$ , that only returns the color for that partition, but it is an order of magnitude faster than the default mode. Enumerating all partitions in the book is possible, but completely infeasible in general given the massive size of the search space. We also don't know how many regions are associated with each color. We can test, however, if a sample $x$ is inside of a specific partition $A$ very quickly. Given all of the above, how would you estimate how much paint of a specific color (e.g. blue) you need to buy? Comments The basic solution I've implemented is a basic Hit-or-Miss Monte Carlo, but I can't see how to use the information provided by $C(x)$ efficiently (i.e. how to avoid sampling in the regions where I know the exact answer). Maybe a fancier MC algorithm (MCMC & friends) could help? Extensions Brightness : $C(x)$ (in both modes) now also reports the brightness (in a continuous scale) of the pigment that should be used to paint the partition (e.g. "light blue"). How can I estimate what's the brightest "hue" for a certain color?
