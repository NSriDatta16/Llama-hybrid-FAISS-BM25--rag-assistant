[site]: stackoverflow
[post_id]: 5373308
[parent_id]: 5372773
[tags]: 
There are several such APIs in existence (and delivered with the JDK), some of them build in in the Java Compiler (javac). The most extensive is the Compiler Tree API , which gets you access to individual expressions (and subexpressions) in the Java source. The language model API models types and members of types (constructors, methods, fields) - it is used by the compiler tree API and also for annotation processing. It does not give access to the contents of the methods. Of course, on runtime you have the Reflection API ( java.lang.Class and java.lang.reflect.* , together with java.lang.annotation ). To use the compiler tree API, you have to invoke the compiler, with the compiler API . Additionally, there is the Doclet API for Javadoc, which gives you a similar view like the language model API, but additionally with the documentation comments (and parsed tags). I once used a combination of Doclet API and Compiler Tree API to format source code beautifully (this is not online, sadly).
