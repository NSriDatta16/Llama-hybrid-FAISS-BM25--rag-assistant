[site]: crossvalidated
[post_id]: 485490
[parent_id]: 
[tags]: 
Negative binomialâ€™s predicted counts are too high with skewed predictors

I am modeling count data (disease incidence) using negative binomial regression, and a couple of my predictors are extremely right-skewed. When I include these predictors, the model's predicted counts are many orders of magnitude too high for observations with the highest actual counts. I am wondering why these predictors are an issue, i.e. what assumptions I might be violating, and if I should use negative binomial on this data or if I need to find a new approach. The data I am using are confidential with ~3000 observations, but I made a small dummy data set that replicates the problem (pasted below). Here, variable V1 is the skewed predictor. menbreg realcount v1 v2, exposure(exp) || clust:, irr predict predcount When I run this STATA code, which is a mixed-effects negative binomial with an exposure, I get predicted values that are very inflated for the largest observed counts. This phenomenon happens whether I used fixed or mixed effects, if I try Poisson, if I Z-standardize the offending covariates, if I drop the exposure, and various other model re-specifications. Interestingly, a simple linear regression produces predictions that are all plausible in magnitude! Note also that V1 is highly correlated with the outcome (and similar in scale). I can reduce the problem by log-transforming the variables, but this seems inelegant because a.) the skewed variables include zeroes, so I have to add a constant before log-transforming; b.) predictions remain somewhat inflated; and c.) I thought there were no assumptions regarding the distribution of independent variables in generalized linear models. I have not found anything on the internet about this problem, so I suspect I am missing something in asking this question. I am asking: Why are the predictions so incorrect? What, if any, assumptions I am violating of the negative binomial model? If I am violating assumptions, are there other approaches within the GLM family that I should use instead? Data: realcount v1 v2 exp clust 0 0 0.2 10009 1 0 1 0.13 12032 5 0 1 0.43 45012 2 0 0 0.11 11098 2 0 0 0.04 66738 2 0 1 0.63 21592 5 0 0 0.29 21291 8 0 1 0.11 32904 7 0 0 0.05 18294 8 0 0 0.25 78024 2 0 0 0.21 12353 2 0 1 0.2 19878 1 1 0 0.78 44581 2 1 0 0.21 22583 4 1 1 0.53 55839 5 1 2 0.33 78159 8 1 1 0.26 29043 7 1 0 0.44 56781 8 2 1 0.45 54900 4 2 2 0.37 23891 3 2 3 0.53 38902 2 3 4 0.41 57816 8 4 4 0.38 61445 4 5 6 0.41 67899 7 7 4 0.65 48203 2 10 13 0.71 88901 9 10 11 0.5 160982 5 13 9 0.66 78901 3 15 14 0.76 240582 6 21 22 0.69 180327 6 29 23 0.8 198733 6 41 43 0.51 58901 7 52 56 0.67 345928 9 83 90 0.72 87260 1 109 190 0.23 121303 2 113 100 0.93 180923 9 160 200 0.86 90987 9 284 450 0.88 450911 7 426 600 0.37 74342 8 592 500 0.77 541009 2 882 781 0.95 498211 5 1032 1246 0.78 1348821 1
