[site]: stackoverflow
[post_id]: 3573508
[parent_id]: 3573313
[tags]: 
You can do function unsetValue(array $array, $value, $strict = TRUE) { if(($key = array_search($value, $array, $strict)) !== FALSE) { unset($array[$key]); } return $array; } You can also use spl_object_hash to create a hash for the objects and use that as array key. However, PHP also has a native Data Structure for Object collections with SplObjectStorage : $a = new StdClass; $a->id = 1; $b = new StdClass; $b->id = 2; $c = new StdClass; $c->id = 3; $storage = new SplObjectStorage; $storage->attach($a); $storage->attach($b); $storage->attach($c); echo $storage->count(); // 3 // trying to attach same object again $storage->attach($c); echo $storage->count(); // still 3 var_dump( $storage->contains($b) ); // TRUE $storage->detach($b); var_dump( $storage->contains($b) ); // FALSE SplObjectStorage is Traversable , so you can foreach over it as well. On a sidenote, PHP also has native interfaces for Subject and Observer .
