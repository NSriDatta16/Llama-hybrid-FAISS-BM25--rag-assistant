[site]: stackoverflow
[post_id]: 5660612
[parent_id]: 
[tags]: 
NumPy: using loadtxt or genfromtxt to read a ragged structure

I need to read an ASCII file into Python, where an excerpt of the file looks like this: E M S T N... ... 9998 1 1 128 10097 10098 10199 10198 20298 20299 20400 20399 9999 1 1 128 10098 10099 10200 10199 20299 20300 20401 20400 10000 1 1 128 10099 10100 10201 10200 20300 20301 20402 20401 10001 1 2 44 2071 2172 12373 12272 10002 1 2 44 2172 2273 12474 12373 The above should ideally be following NumPy schema: array([(9998, 1, 1, 128, (10097, 10098, 10199, 10198, 20298, 20299, 20400, 20399)), (9999, 1, 1, 128, (10098, 10099, 10200, 10199, 20299, 20300, 20401, 20400)), (10000, 1, 1, 128, (10099, 10100, 10201, 10200, 20300, 20301, 20402, 20401)), (10001, 1, 2, 44, (2071, 2172, 12373, 12272)), (10002, 1, 2, 44, (2172, 2273, 12474, 12373))], dtype=[('E', ' Where the last object, N , is a tuple with between 2 and 8 integers. I would like to load this ragged structure using either np.loadtxt or np.genfromtxt , except that I'm not sure if this is possible. Any built-in tips, or do I need to do a custom split-cast-for-loop?
