[site]: crossvalidated
[post_id]: 301284
[parent_id]: 301267
[tags]: 
1) Assuming, you are looking to predict the next output value $Output_{t+1}$ given an input vector $[OutputA, OutputB]_{t}$, LSTM is not literally going to store the input vector for each time step. It will rather decide whether the input affects the next outputs. If yes, it will use this input vector and update its current state. 2) Implementations of RNNs include rolling it out upto certain time steps. So, yes, it will include(and/or exclude) the effect of not only current input ($t$) but also the inputs of past $t_{i}s$ upto the point you have unrolled your RNN.
