[site]: stackoverflow
[post_id]: 765111
[parent_id]: 765090
[tags]: 
For transfer and offline storage, serialization is fine; but for active use, some kind of database is far preferable. Typically (as you say), without a database, you need to deserialize the entire stream to perform any query, which makes it hard to scale. Add the inherent issues with threading etc, and you're asking for pain. Some of your other pain points about serialization aren't all true - as long as you pick wisely. Obviously, BinaryFormatter is a bad choice for portability and versioning , but " protocol buffers " (Google's serialization format) has versions for Java, C++, C# , and a lot of others , and is designed to be version tolerant.
