[site]: stackoverflow
[post_id]: 4866038
[parent_id]: 4864266
[tags]: 
Since TypeMock requires you to use their own runner program, TMockRunner, there's no way to just use the GUI options in TeamCity to get everything set up. Instead, what I ended up doing was to first build a custom msbuild file with this contents: C:\Program Files (x86)\TypeMock\Isolator\6.0 "C:\TeamCity\buildAgent\plugins\dotnetPlugin\bin\JetBrains.BuildServer.NUnitLauncher.exe" C:\Program Files (x86)\NCover\NCover.Console.exe This file I save to a directory on my TeamCity server. Since I didn't want the test script to be part of my repository, I didn't add it to source control (I can build and right-click and run tests from within Visual Studio, if I get something not so tied to my build server I might change that decision later). Also, I only have 1 build-agent for my TeamCity server so this works for me for the time being. In addition to the above file, I added the following batch-file: @echo off setlocal set CURDIR=%CD% copy c:\dev\sqldatabases\tests.msbuild .\ msbuild tests.msbuild /target:TestWithTypeMock rd /s /q c:\dev\sqldatabases\codecoverage md c:\dev\sqldatabases\codecoverage "c:\program files\ncover\ncover.reporting.exe" c:\temp\coverage.xml //or FullCoverageReport:Html:c:\dev\sqldatabases\codecoverage cd \dev\sqldatabases\codecoverage del %CURDIR%\coverage.zip 7z a -r %CURDIR%\coverage.zip And then I added the following two build-steps to my TeamCity build configuration: Visual Studio Solution: Build the debug configuration. Execute C:\Dev\SqlDatabases\Tests.bat (the above batch file) I made sure that coverage.zip was listed under artifacts in my build configuration, and now I got code coverage, typemock, and unit tests. Only thing I haven't figured out how to get so far is that if I click on the build result of a build configuration that uses the normal TeamCity GUI for setting up everything (minus TypeMock), I get a code coverage short summary listed, this is not present in the above setup, but the full report is, and the tab in the TeamCity build results. Hopefully this can save someone else some trouble.
