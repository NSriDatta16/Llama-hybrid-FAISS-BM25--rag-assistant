[site]: stackoverflow
[post_id]: 4233025
[parent_id]: 4232934
[tags]: 
See this link: http://www.shredzone.de/cilla/page/53/how-to-fetch-a-random-entry-with-hibernate.html Criterion restriction = yourRestrictions; Object result = null; // will later contain a random entity Criteria crit = session.createCriteria(Picture.class); crit.add(restriction); crit.setProjection(Projections.rowCount()); int count = ((Number) crit.uniqueResult()).intValue(); if (0 != count) { int index = new Random().nextInt(count); crit = session.createCriteria(Picture.class); crit.add(restriction); result = crit.setFirstResult(index).setMaxResults(1).uniqueResult(); } This is what you want. Keep Hibernate as an abstraction layer while still being able to query a random object. Performance suffers a bit, though. Although I've been using Hibernate a lot, I don't know a more elegant way that is easy to use. Imho you should wrap that method behind a facade.
