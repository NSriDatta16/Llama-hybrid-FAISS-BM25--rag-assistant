[site]: stackoverflow
[post_id]: 443923
[parent_id]: 429508
[tags]: 
Another way - turn the check into a local function: DECLARE l_selected APEX_APPLICATION_GLOBAL.VC_ARR2; ...snip... FUNCTION dup_exists ( p_org_id org_county_accountable.organization_id%TYPE , p_county_id org_county_accountable.county_id%TYPE ) RETURN BOOLEAN IS v_dup_check org_county_accountable.county_id%TYPE; BEGIN SELECT county_id INTO v_dup_check FROM org_county_accountable WHERE organization_id = p_org_id AND county_id = p_county_id; RETURN TRUE; EXCEPTION WHEN NO_DATA_FOUND THEN RETURN FALSE; END; BEGIN -- get the list ids l_selected := APEX_UTIL.STRING_TO_TABLE(:P4_SELECT_LIST); -- process each in a nice loop FOR i IN 1..l_selected.count LOOP -- do some data checking stuff... -- here we have code we only want to execute if there are no dupes already IF NOT dup_exists (:P4_ID, v_county_id) THEN -- if not a duplicate record, proceed... END; END LOOP; END; Of course, the local function could be re-written to use the count method if you prefer: FUNCTION dup_exists ( p_org_id org_county_accountable.organization_id%TYPE , p_county_id org_county_accountable.county_id%TYPE ) RETURN BOOLEAN IS l_count INTEGER; BEGIN SELECT COUNT(*) INTO l_count FROM org_county_accountable WHERE organization_id = p_org_id AND county_id = p_county_id; RETURN (l_count > 0); END;
