[site]: crossvalidated
[post_id]: 299454
[parent_id]: 205970
[tags]: 
To start with we will explore different ways that repeating patterns can appear in time series data and how we can model those patterns. This may be over kill for the question, however I do think that this answer will help you think about what is happening in the models and design better experiments to model your data going forward. Simple daily seasonality To begin with, lets think about a daily seasonal ARIMA model. This type of model is looking for some type of pattern that repeats where we see the same thing every day. A time series that this type of model might work well for might look like this: set.seed(0) # create a pattern that repeats every 24 hours daily We can then fit a seasonal AR model to the data and get a pretty good forecast for the series. Since we know that the pattern is pretty stable over time, I will use two seasonal lags rather than just one because this will allow the model to smooth out any noise in the data better. > (dsmodel This is just about perfect, the intercept is near zero, which it should be, and the sum of the coefficients on the seasonal lags is close to 1, meaning the forecast is about an average of them (eg. we predict the value tomorrow at noon is about the average of today and yesterday at noon). It is important to note we let the ARIMA model know how often the pattern repeated itself by making a ts object and setting the frequency = 24 . Alternatively, we could have used a vector for the series and set seasonal = list(order = c(1L, 0L, 0L), period = 24) . This works well when we have a simple repeating pattern, but what if we have a day of week effect. Daily Seasonality with a Day of Week effect A day of week effect is an consistant impact on the underlying series we see based on the day of the week. We can add a day of week effect to our data using: # Create an adjustment for day of week: we will leave Monday as 0 # so later it is easy to see the change in other days relative to # Monday. (doweffect We handle this new pattern in our data in one of two ways 1) adding external regressors to our original ARIMA model or 2) thinking of the weekly repeating pattern in the data as the new seasonality of the data. In an ARIMA model with external regressors, we are looking for some sort of ARIMA type pattern that is "thrown off" by some amount by the things quantified by the external regressors. In the model with weekly seasonality, we are looking for the interaction of the daily and weekly pattern and ignoring that the daily pattern is still present in each day of the week. Below we create the original seasonal model as well as the 2 variants. # Creates a model matrix to indicate the day of week for values in # our time series. Note the model matrix does not have a column to # indicate Monday. The purpose of the model matrix is to allow the # model to include the impact of a value relative to some baseline, # usually the first factor level; in this case, Monday. We also # remove the intercept term since intercept is already part of the # ARIMA models. > dowreg colnames(dowreg) (dowsmodel Hmm, that doesn't look great, our intercept is near zero and our seasonal coefficients are nearly canceling each other out. Lets look at our external regressor model: # Creates a model where the day of week effect is accounted for using # an external regressor > (dowxreg This is much better, the two seasonal lags ( sar1 and sar2 ) are basically taking an average again like they did in our other model, and the external regressors are adjusting the days by the correct amount (1 for Tues, 2 for Weds, -1 for Thurs, -2 for Fri, -3 for Sat and 3 for Sun). How about our weekly seasonal model: # Creates a model where the day of week effect is accounted for by # increasing the seasonality to weekly rather than daily. This time # we can only use 1 seasonal lag because our data only don't have # enough seasonal periods at the weekly frequency. > (dowlongs Once again, this looks good, it is predicting next Monday at noon should be the same as last Monday at noon, which makes sense for this data. Lets look at how this turns out in the forecasts: par(mfrow = c(1,1)) plot(forecast(dowsmodel, 48), PI = FALSE, xlim = c(8, 17), main = "Forecasts from Various Seasonal AR models") lines(forecast(dowxreg, 48, xreg = dowreg[1:48, ])$mean, col = "red", lwd = 2) lines(forecast(dowlongs, 48)$mean, col = "green", lwd = 2) abline(v = 8, lty = 2) legend("topleft", bty = "n", c("Seasonal AR", "Seasonal AR with DoW", "Long Seasonal AR"), fill = c("blue", "red", "green")) While the original mode that worked so well before falls apart, we see that both of the other approaches work well for this new data. The model with external regressors is able to find the daily pattern that is occurring once it takes into account the effect of the day of week. The weekly seasonal model is missing the daily pattern, but is able to overcome that by seeing the larger pattern that repeats every week. Distinct pattern for each day of the week Now we are finally going to get into what you claim to see in your data; a daily pattern which is different for each day of the week. We can make a series with this property as follows: # Creates a time series where each day of week has a unique pattern dailysig We see that Monday's pattern doesn't really look like Tuesday's or Wednesday's etc. Lets examine what happens if we try and make each of our 3 types of models for this data set. # Makes the same three models as last time > (dowsmodel (dowxreg (dowlongs plot(forecast(dowsmodel, 48), PI = FALSE, xlim = c(8, 17), + main = "Forecasts from Various Seasonal AR models for Different DoW Effects") > lines(forecast(dowxreg, 48, xreg = dowreg[1:48, ])$mean, col = "red", lwd = 2) > lines(forecast(dowlongs, 48)$mean, col = "green", lwd = 2) > abline(v = 8, lty = 2) > legend("topleft", bty = "n", + c("Seasonal AR", "Seasonal AR with DoW", "Long Seasonal AR"), + fill = c("blue", "red", "green")) Results fell apart for the first two models this time. Since there isn't an underlying daily pattern any more, the model with external regressors was only able to see that certain days of the week are higher or lower on average, but the pattern from hour to hour was missed. The weekly seasonal model however was still about to see the weekly repeat and make a reasonable model. Your Data Now that we have seen the importance of seasonality in our models, lets see what happens if we try running auto.arima again, but this time making your data a seasonal time series. > tsTrain (dowsmodel (dowxreg (dowlongs plot(forecast(dowsmodel, 24), PI = FALSE, xlim = c(8, 16), + main = "Forecasts from Various Seasonal AR models for Different DoW Effects") > lines(forecast(dowxreg, 24, xreg = dowreg[1:24, ])$mean, col = "red", lwd = 2) > lines(ts(forecast(dowlongs, 24)$mean, start = 15, frequency = 24), + col = "green", lwd = 2) > abline(v = 8, lty = 2) > legend("topleft", bty = "n", + c("Seasonal AR", "Seasonal AR with DoW", "Long Seasonal AR"), + fill = c("blue", "red", "green")) The "each weekday seems to have a distinct 24 hour pattern" doesn't seem to be happening as seen by the trouble fitting a the weekly seasonal model, but there does seem to be a daily seasonality the models are picking up on since. Personally, I would trust the plain seasonal model (no external regressors) the most since it is less prone to over fitting than the one with external regressors, but that is your call. In general, you might feel disappointed since the forecasts don't look much like your data. This is because there is a lot of noise in your data that the model still can't account for. Conclusions A seasonal model will allow your data to find repeating patterns in your data. Adding external regressors to your model can allow the model to find the underlying pattern when the pattern is obscured by another influence. If every day of the week has a different pattern, that is a weekly seasonality, not a day of week effect.
