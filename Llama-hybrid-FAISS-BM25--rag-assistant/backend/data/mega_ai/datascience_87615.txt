[site]: datascience
[post_id]: 87615
[parent_id]: 87614
[tags]: 
from sklearn.compose import ColumnTransformer from sklearn.pipeline import Pipeline from sklearn.ensemble import RandomForestRegressor df.head() Service Tasks Difficulty Hours 0 ABC 24 1 0.833333 1 CDE 77 1 1.750000 2 SDE 90 3 3.166667 3 QWE 47 1 1.083333 4 ASD 26 3 1.000000 df.shape (998,4) X = df.drop(["Hours"],axis = 1) y = df.Hours ct = ColumnTransformer([("cat", OneHotEncoder(handle_unknown = "ignore"),[0])], remainder="passthrough") rf_model = RandomForestRegressor(random_state = 1) model = Pipeline([("preprocessing",ct),("model",rf_model)]).fit(X,y) x_test = pd.DataFrame({"Service":"SDE", "Tasks":90, "Difficulty":3}, index = [0]) # Ideally you split your data into train and test,in this case you need to pass x_test that is a pandas dataframe with the values you want to predict model.predict(x_test)
