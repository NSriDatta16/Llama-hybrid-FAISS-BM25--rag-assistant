[site]: crossvalidated
[post_id]: 289441
[parent_id]: 289410
[tags]: 
Edit: As Amoeba pointed out there was an error in my code, and the first plot is from an unpaired t-test. I re-ran with paired t-tests and different alpha and beta, and the results are at the bottom. I simulated it in Matlab with the code below. I generated 1000 random alphas (1x3 vectors); corresponding betas are made by adding a smaller-magnitude, random 1x3 vector to each alpha. The result is that alpha and beta are correlated. The resulting p-value distribution is given here ( unpaired t-test). As you can see it's skewed to near-1 values. Unpaired t-test pp = zeros(1000,1); for iter = 1:1000 alpha = rand(1,3); beta = alpha + rand(1,3)*.1; [~,pp(iter)] = ttest2(alpha,beta); end Edit: Paired t-test pp = zeros(10000,1); for iter = 1:10000 alpha = randn(1,3); beta = alpha + [rand 0.1 -1*rand]; [~,pp(iter)] = ttest(alpha,beta); end To achieve the right-skewed distribution with a paired t-test I had to make different assumptions about beta: beta = alpha + [r1 0.1 r2] , where $r1$ and $r2$ are uniform random numbers, and $r1$ is in the range [0 1] and $r2$ is in the range [-1 0]. That is $r1$ is always positive, $r2$ is always negative, and their combined effect on alpha-beta is, on average, 0. The effect is to fairly reproduce your original histogram. If this actually describes your data, it means that if e.g. gene methylation is high in one replicate, it's low in another replicate. Which is weird. Although it could happen if your data is a ratio and you've swapped numerator and denominator in one replicate. To test that, can you make scatter plots / calculate correlation between each pair of replicates, i.e. between df[1,] and df[3,] , df[1,] and df[5,] , etc. If your replicates are good they should all have high positive correlation - if any are negatively correlated then that's evidence for swapping the numerator and denominator.
