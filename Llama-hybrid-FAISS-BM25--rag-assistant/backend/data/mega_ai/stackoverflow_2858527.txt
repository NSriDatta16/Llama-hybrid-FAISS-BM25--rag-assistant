[site]: stackoverflow
[post_id]: 2858527
[parent_id]: 2834824
[tags]: 
Thanks for your replies. It seems that the problem was related to casting: /** * */ public class Manipulator { // both constructors call parseConfiguration() protected void parseConfiguration() throws InvalidConfigurationException { // don't do anything. this is a default method that can optionally be // overridden by subclasses } } I was referring in some places to the object as a DirectoryAcquirer, an at other times it was upcast to a Manipulator. I think that this was interfering so the empty parseConfiguration method was called after the child one was called -- or something like that. Anyway, I made the parseConfiguration method in the superclass abstract, and now it's fine.
