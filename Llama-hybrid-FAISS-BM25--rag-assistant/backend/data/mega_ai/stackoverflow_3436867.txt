[site]: stackoverflow
[post_id]: 3436867
[parent_id]: 
[tags]: 
source code trees: wide or deep

After writing a few python appengine apps I find myself torn between two approaches to organizing my source code tree: wide or deep. For concreteness, consider an internal application for a small consulting shop to manage business operations like contact management, project tracking & reporting, and employee management. The application might use key entities like: Company, Users, Contacts, Customers, Projects, Timesheets, etc. Without going into details, one can imagine that these models are cross-cutting across the functions of the website. This likely means there is some coupling. In this example, is it preferable to organize in a deep-manner, e.g.: models/ people.py accounting.py projects.py foo.py controllers/ reporting.py employeeops.py accounting.py crm.py views/ ... or a wide-manner, e.g., by "application": people/ models/ views/ controllers/ contact-mgmt/ models/ views/ controllers/ time-tracking/ models/ views/ controllers/ project-reporting/ models/ views/ controllers/ I know all design involves trade-offs, so when responding can you indicate your preference and some reasoning (e.g., assumptions, modulating concerns, framework limits, scalability issues, code maintenance considerations, impact of development team structure, etc.).
