[site]: stackoverflow
[post_id]: 5711578
[parent_id]: 5698624
[tags]: 
Well, the following is the code that I was originally looking for. This will give the element an ID attribute, and this code runs within the scope of the iframe. Of course, it only works if the iframe is on the same domain as the parent page (which, in my case, it initially is). var foundMyself = false; $("iframe", parent.document).each(function() { if (this.contentWindow == self) { $(this).attr("id", "myframe"); foundMyself = true; } }); The following is the code that I'm using to create the appropriate script tag on the parent page (bear in mind that my application sets a fragment #h-xxxxx denoting the height of the page): if (foundMyself) { var script = document.createElement("script"); script.type = "text/javascript"; script.text = "function resizeApp() { var app = document.getElementById(\"myframe\"); var hash = app.contentWindow.location.hash; app.style.height = hash.substring(3); } setInterval('resizeApp();', 500);"; parent.document.body.appendChild(script); } window.location = "https://my-app-real-location.com" The new problem I'm running into now is that once the iframe has navigated away, I'm not allowed to access the contentWindow property.
