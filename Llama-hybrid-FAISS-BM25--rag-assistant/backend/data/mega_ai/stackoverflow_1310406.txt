[site]: stackoverflow
[post_id]: 1310406
[parent_id]: 1310018
[tags]: 
The book Programming Challenges and the associated website provide a large list of algorithmic problems, with automatic online judging in several languages (Java, C, C++). Any algorithm textbook can give you lots of examples of basic data structures and procedures to try and implement, which is often a nice way to get some practice with basic language syntax and features. My personal favourite for this is The Algorithm Design Manual , which is language agnostic, but there are plenty of good language-specific books available as well ( Mastering Algorithms in Perl or Data Structures and Algorithms in Java , for example). If you're interested in a general set of mathematical problems to try and solve, Project Euler is a great resource. For more day to day problems, I find the cookbook approach most helpful. For example, both Perl and Python have excellent O'Reilly cookbooks, as well as online resources , which provide short examples of many common and important problems. As mentioned in another answer , the key here is to find canonical examples of basic features you will need, particularly by leveraging what's available in standard libraries. I usually try and build up my own small library of examples as I go along, e.g. a socket example, a DB access example, a file reading example, a simple numerical solver, etc, which I then pillage for ideas when it's time to write production code.
