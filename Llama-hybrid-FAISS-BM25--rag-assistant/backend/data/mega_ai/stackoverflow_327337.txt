[site]: stackoverflow
[post_id]: 327337
[parent_id]: 
[tags]: 
Does it make sense to convert DB-ish queries into Rails ActiveRecord Model lingo?

mysql> desc categories; +-------+-------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +-------+-------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | name | varchar(80) | YES | | NULL | | +-------+-------------+------+-----+---------+----------------+ mysql> desc expenses; +-------------+---------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +-------------+---------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | created_at | datetime | NO | | NULL | | | description | varchar(100) | NO | | NULL | | | amount | decimal(10,2) | NO | | NULL | | | category_id | int(11) | NO | MUL | 1 | | +-------------+---------------+------+-----+---------+----------------+ Now I need the top N categories like this... Expense.find_by_sql("SELECT categories.name, sum(amount) as total_amount from expenses join categories on category_id = categories.id group by category_id order by total_amount desc") But this is nagging at my Rails conscience.. it seems that it may be possible to achieve the same thing via Expense.find and supplying options like :group, :joins.. Can someone translate this query into ActiveRecord Model speak ? Is it worth it... Personally i find the SQL more readable and gets my job done faster.. maybe coz I'm still learning Rails. Any advantages with not embedding SQL in source code (apart from not being able to change DB vendors..sql flavor, etc.)? Seems like find_by_sql doesn't have the bind variable provision like find . What is the workaround? e.g. if i want to limit the number of records to a user-specified limit.
