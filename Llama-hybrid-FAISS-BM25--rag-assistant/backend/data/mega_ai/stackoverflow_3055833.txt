[site]: stackoverflow
[post_id]: 3055833
[parent_id]: 
[tags]: 
Displaying Unicode Characters

I already searched for answers to this sort of question here, and have found plenty of them -- but I still have this nagging doubt about the apparent triviality of the matter. I have read this very interesting an helpful article on the subject: http://www.joelonsoftware.com/articles/Unicode.html , but it left me wondering about how one would go about identifying individual glyphs given a buffer of Unicode data. My questions are: How would I go about parsing a Unicode string, say UTF-8? Assuming I know the byte order, what happens when I encounter the beginning of a glyph that is supposed to be represented by 6 bytes? That is, if I interpreted the method of storage correctly. This is all related to a text display system I am designing to work with OpenGL. I am storing glyph data in display lists and I need to translate the contents of a string to a sequence of glyph indexes, which are then mapped to display list indices (since, obviously, storing the entire glyph set in graphics memory is not always practical). To have to represent every string as an array of shorts would require a significant amount of storage considering everything I have need to display. Additionally, it seems to me that 2 bytes per character simply isn't enough to represent every possible Unicode element.
