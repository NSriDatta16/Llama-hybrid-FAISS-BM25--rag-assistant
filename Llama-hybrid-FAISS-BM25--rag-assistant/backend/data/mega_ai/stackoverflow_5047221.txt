[site]: stackoverflow
[post_id]: 5047221
[parent_id]: 808547
[tags]: 
Yes, there's a way to do this without the plugin! But it is not as clean and elegant as using the mentioned plugin. Here it is. Assuming it's Rails 3 (I don't know if it's different in previous versions), keep this in your model: validates_presence_of :song_rep_xyz, :message => "can't be empty" and in the view, instead of leaving @instance.errors.full_messages as it would be when we use the scaffold generator, put: @instance.errors.first[1] And you will get just the message you specified in the model, without the attribute name. Explanation: #returns an hash of messages, one element foreach field error, in this particular case would be just one element in the hash: @instance.errors # => {:song_rep_xyz=>"can't be empty"} #this returns the first element of the hash as an array like [:key,"value"] @instance.errors.first # => [:song_rep_xyz, "can't be empty"] #by doing the following, you are telling ruby to take just the second element of that array, which is the message. @instance.errors.first[1] So far we are just displaying only one message, always for the first error. If you wanna display all errors you can loop in the hash and show the values. Hope that helped.
