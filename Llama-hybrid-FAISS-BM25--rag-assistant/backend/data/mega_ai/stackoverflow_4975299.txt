[site]: stackoverflow
[post_id]: 4975299
[parent_id]: 4975242
[tags]: 
SQL Server does this under the covers (and tools like ClearTrace ). One way is to use a regular expression to normalise (not exactly what you are looking for) such as this SQL CLR method based on work done by Itzik Ben-Gan and modified by Adam Machanic: [Microsoft.SqlServer.Server.SqlFunction(IsDeterministic = true)] public static SqlString sqlsig(SqlString querystring) { return (SqlString)Regex.Replace( querystring.Value, @"([\s,(=<>!](?![^\]]+[\]]))(?:(?:(?:(?:(?# expression coming )(?:([N])?(')(?:[^']'')*('))(?# character )(?:0x[\da-fA-F]*)(?# binary )(?:[-+]?(?:(?:[\d]*\.[\d]*[\d]+)(?# precise number )(?:[eE]?[\d]*)))(?# imprecise number )(?:[~]?[-+]?(?:[\d]+))(?# integer )(?:[nN][uU][lL][lL])(?# null ))(?:[\s]?[\+\-\*\/\%\&\\^][\s]?)?)+(?# operators )))", @"$1$2$3#$4"); } but accuracy of output may not catch every possible parameterisable phrase. I'm curious as to why you need this? Update: As Martin mentioned, there is also the RML Utilities for SQL Server Description of the Replay Markup Language (RML) Utilities for SQL Server
