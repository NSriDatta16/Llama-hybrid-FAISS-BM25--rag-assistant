[site]: stackoverflow
[post_id]: 1781680
[parent_id]: 1781657
[tags]: 
There are several parts to this question so I'll try to answer them in turn: 1: Its really up to you, there are no hard-and-fast rules beyond those for establishing that a directory should be treated as a package and so on. Some frameworks will prescribe a directory structure using a script to generate scaffolding (a bit like Rails does in the Ruby world) but this is purely a convenience or convention of the given framework. Organise your code and modules so they make sense logically as you would in any other language. 2: What you have there is absolutely fine. Alternatively you can use an installed script if you are using distutils, a console_script as part of a .egg install, or as a last resort just call the main.py (or whatever you name it) script directly. The console_script is quite common though and is used by tools such as the nose testing framework for example. 3: There is a PEP for this specific topic. In my experience though you should really prefer absolute imports to relative ones. To force this behaviour you can do: from __future__ import absolute_import
