[site]: stackoverflow
[post_id]: 4416845
[parent_id]: 4416501
[tags]: 
I would strongly discourage static classes having state, it doesn't differ from global variables, static classes with state just wraps globals into a class. And we all know why globals are bad . I think you should get some kind of inversion of control solution, that will allow you to get non-static, already initialized instance of your helper class. Your IoC container may use singleton internally to ensure there is single configuration object used. For example the structure may be: public class VisualStudioEvents { public VisualStudioEvents(VisualStudioEventsConfig config) { // ... } // ... } and on application initialization you can create an VisualStudioEventsConfig instance, configure it and add to IoC container as the only instance to be used for the type. Then, every call for VisualStudioEvents instance will be initialized with this prepared configuration instance.
