[site]: crossvalidated
[post_id]: 434226
[parent_id]: 
[tags]: 
Why does my implementation of the Metropolis algorithm converge incorrectly for a non-uniform prior distribution?

I am trying to estimate the integral of sine from $0$ to $\pi$ using the Metropolis algorithm from a prior distribution of $p(x) = e^{-(x-\pi/2)^2}$ $$\int_0^\pi \sin(x)\,\text{d}x$$ The integral ought to converge to $2$ but instead it repeatedly converges to $1.16\pm0.01$ : Curiously enough, if I instead run the same script for a uniform distribution as the prior distribution, the integral converges to the right number: I would appreciate to know why my initial approach leads to an incorrect estimate of the integral. I'm also a bit confused as to why the sample distribution follows that of the prior and not that of the posterior. Also, should my "candidate" function follow the uniform distribution or that of $p(x)$ ? Choosing the latter the integral converges to $1.13$ instead. (I try to follow these explanations . I believe my code follows the pseudocode exactly, except perhaps for computing the actual ensemble average in step 9, where instead of $\frac{1}{n}\sum_i^n f(x_i)$ I compute $\frac{1}{n}\sum_i^n f(x_i)/p(x_i)$ . However, doing the latter causes the integral to again converge incorrectly, to $0.80$ .) #Define bounds of sampling: x_1, x_2 = 0., np.pi n = 3000 #Number of trials x = 0. #Initial x X = np.zeros((n, 1)) I_conv = np.zeros(n) #Integrand def f(x): if x_1
