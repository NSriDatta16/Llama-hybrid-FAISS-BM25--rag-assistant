[site]: stackoverflow
[post_id]: 2077219
[parent_id]: 
[tags]: 
Optimizing MySQL query for fetching data using time range

I'm building a line chart for a product sales report by using the Google Chart API and are separating the data on a per day basis with basically running the same query in a loop for each day using UNION ALL as glue. E.g. A report for a whole year will repeat the query, using UNION ALL 365 times. I'm guessing this is not a -best practice- example so if anyone would be so kind and point me in the right direction of how to optimize this query, I would greatly appreciate it. SELECT SUM(op.qty) AS qty FROM uc_order_products op LEFT JOIN uc_orders o ON o.order_id = op.order_id LEFT JOIN node n ON n.nid = op.nid LEFT JOIN node_type nt ON nt.type = n.type WHERE (o.created > 1247695200) AND (o.created 1247781600) AND (o.created Thanks for all the quick replies! With the query example from jspcal, my query ended up like this: SELECT SUM(op.qty) AS qty, DATE_FORMAT(FROM_UNIXTIME(o.created),'%d-%m-%Y') AS day FROM uc_order_products op LEFT JOIN uc_orders o ON o.order_id = op.order_id LEFT JOIN node n ON n.nid = op.nid LEFT JOIN node_type nt ON nt.type = n.type WHERE (o.created > 1247695200) AND (o.created And with PHP, I combine a complete date range array (matching array keys with strtotime($data->day) from the query result) to get days with no sale.
