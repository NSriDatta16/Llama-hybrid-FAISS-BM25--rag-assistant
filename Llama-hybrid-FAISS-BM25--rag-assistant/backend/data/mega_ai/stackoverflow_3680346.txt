[site]: stackoverflow
[post_id]: 3680346
[parent_id]: 
[tags]: 
Elegant way to split string into 2 strings on word boundaries to minimize length difference

I have a working solution right now, but it seems really ugly for something so (seemingly) simple. I tried just breaking it when adding a word goes over the halfway mark, both splitting before and after adding the word, but depending on the length of the words it's either imbalanced towards the first or second line. Sample inputs that I was initially having trouble with before the convoluted fix: Input "Macaroni Cheese" and "Cheese Macaroni" Should output "Macaroni Cheese" and "Cheese Macaroni" respectively. But simpler solutions either worked on the first but not the second, or the other way around. So here's what I have that works, but I'm wondering if there's a more elegant way to do this. public string Get2LineDisplayText(string original) { string[] words = original.Split(new[] {' ', '\r', '\n'}, StringSplitOptions.RemoveEmptyEntries); //Degenerate case with only 1 word if (words.Length "); } else { builder.Append(" "); builder.Append(' ' + word); } addedBr = true; } else //Past halfway and already added linebreak, just append { builder.Append(' ' + word); } } return builder.ToString(); } Sample input/output:
