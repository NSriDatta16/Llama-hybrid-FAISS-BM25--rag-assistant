[site]: stackoverflow
[post_id]: 4175268
[parent_id]: 4175134
[tags]: 
Synchronizing the user defaults in -dealloc is no different than anywhere else. This is because, crazy though it may seem, -dealloc is not in any way magical, and unlike, say, C++ destructors, -dealloc is actually exactly a typical method. You could be slightly more worried about passing self.filenamesArray to userDefualts, because thats actually something that may be held past the actual deallocation, but I trust that the user defaults retains it. As to when you should [userDefaults synchronize]; , people vary, and I personally disagree with @Joshua -- I never explicitly -synchronize, but rather let NSUserDefaults take care of it. Unless I am very much mistaken, it fires automatically when the app closes, as well as periodically otherwise. As it knows when it has been updated, and it needs to write the entire plist file at once, I think that I would rather let Apple's algos handle when its time to write the defaults, since it is takes non-trivial time (because it writes to the file system). (Note that none of the last paragraph applies if you have special circumstances surrounding your user defaults, such as another application reading/writing them)
