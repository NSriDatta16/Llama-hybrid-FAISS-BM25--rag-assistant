[site]: stackoverflow
[post_id]: 5254178
[parent_id]: 5225367
[tags]: 
It turns out both Animator and LayoutTransition each has a start delay value. The Animator start delay is already zero, so changing that didn't help. What is weird is that the start delay for LayoutTransition appears to be greater than zero, at least for the case of LayoutTransition.APPEARING . Here's the working code: public class DebugExampleFour extends Activity { private int numButtons = 1; @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.debug_example_four); final ViewGroup frame = (ViewGroup) findViewById(R.id.frame_container); LayoutTransition transitioner = new LayoutTransition(); Animator appearingAnimation = ObjectAnimator.ofFloat(null, "translationX", 600, 0); appearingAnimation.addListener(new AnimatorListenerAdapter() { public void onAnimationEnd(Animator anim) { View view = (View) ((ObjectAnimator) anim).getTarget(); view.setTranslationX(0f); } }); transitioner.setAnimator(LayoutTransition.APPEARING, appearingAnimation); transitioner.setDuration(LayoutTransition.APPEARING, 300); transitioner.setStartDelay(LayoutTransition.APPEARING, 0); frame.setLayoutTransition(transitioner); Button addButton = (Button) findViewById(R.id.addNewButton); addButton.setOnClickListener(new View.OnClickListener() { public void onClick(View v) { Button newButton = new Button(DebugExampleFour.this); newButton.setText("Click To Remove " + (numButtons++)); newButton.setOnClickListener(new View.OnClickListener() { public void onClick(View v) { frame.removeView(v); } }); frame.addView(newButton, new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT)); } }); } }
