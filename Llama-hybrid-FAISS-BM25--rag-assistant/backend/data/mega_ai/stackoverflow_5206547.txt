[site]: stackoverflow
[post_id]: 5206547
[parent_id]: 5206448
[tags]: 
Well, others already have pointed out the error in your code. But here is one elegant way you can read the file and count the letters in it: struct letter_only: std::ctype { letter_only(): std::ctype (get_table()) {} static std::ctype_base::mask const* get_table() { static std::vector rc(std::ctype ::table_size,std::ctype_base::space); std::fill(&rc['A'], &rc['z'+1], std::ctype_base::alpha); return &rc[0]; } }; struct Counter { std::map letterCount; void operator()(char item) { if ( item != std::ctype_base::space) ++letterCount[tolower(item)]; //remove tolower if you want case-sensitive solution! } operator std::map () { return letterCount ; } }; int main() { ifstream input; input.imbue(std::locale(std::locale(), new letter_only())); //enable reading only leters only! input.open("filename.txt"); istream_iterator start(input); istream_iterator end; std::map letterCount = std::for_each(start, end, Counter()); for (std::map ::iterator it = letterCount.begin(); it != letterCount.end(); ++it) { cout first second This is modified (untested) version of this solution: Elegant ways to count the frequency of words in a file
