[site]: stackoverflow
[post_id]: 4200269
[parent_id]: 4200247
[tags]: 
I would suggest a library for each of the platform. Let me explain. Let's say the full .NET Framework includes a bunch of features, methods that are not part of the .NET Compact Framework as the one you may find with Windows CE and smartphones. So, in order to fully take advantage of the full load of possibilities of each platform, I would leverage a common library plenty of interfaces, then you implement those interfaces within a .NET Framework platform specific class library that will allow you to take fully advantage over what is offered on a specific platform. On the other hand, if common reuse of code, and for the sake of maintainability, you might prefer to go with a single "do-them-all" library. Under such requirements, you will need to be fully aware of each of the differences between the many platforms you wish to support. This is obviously an important analysis and architecture question, as of both will suffer the lacks of one platform over the other. Here's how I would proceed in front of such a situation: I would investigate the differences between the platform specific .NET Framework; I would put aside all (as needed) the common objects you think you might need; I would highlight the differences, that is, objects you can use under one platform, but not the other; This is an organic analysis you will have to perform in order to see what's coming up next. That is, for a some sort of Waterfall approach. As for a Scrum approach, if I may say so as this suggests empiricism, I would say try a single common library for them all, and see what you can do. If you come across some things you absolutely cannot do, then it might be relevant to only create another class library which would depend on your "do-them-all" library so that you have a common block for each platform, then some other specific libraries for what you can't do in the common. Do so, and see what advantages you got from it, and find a way out of trouble when comes the time to be more specific.
