[site]: crossvalidated
[post_id]: 15251
[parent_id]: 15161
[tags]: 
A basic rule of thumb for when to neural networks is, if you (as a human) can see what the right answer is quickly, but coding the rules for how you see that is hard, then it might be a good candidate for a neural network. I don't claim to follow all of your use case above, but it doesn't off hand seem like something that a human could look at and easily see the right answer. Neural networks are good at balancing a lot of different inputs, assigning some relevant weight to each of them. This is often what a human does when making a decision. It's not what normal computer logic is good at, since conventional logic is looking at one or two values at any given point in the code. So, my take on it is I don't think it's an ideal use for a neural network, unless I am misunderstanding your use case (which is possible).
