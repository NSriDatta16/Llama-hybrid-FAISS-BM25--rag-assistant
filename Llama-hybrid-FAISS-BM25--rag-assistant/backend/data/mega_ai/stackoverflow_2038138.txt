[site]: stackoverflow
[post_id]: 2038138
[parent_id]: 2038042
[tags]: 
Backend and frontend are two different projects, which happen to query the same database, therefore seperate them into two different websites. Split responsibilities. Furthermore, having different websites has these advantages: Secure more easily (in IIS) Different behaviors, custom error messages Processor/memory caps Bring down either the backend or the frontend, which is important when due to some bug the backend system drags the frontend down with him Different domains per project Easily move one of the projects to another server Use some distributed caching system like memcached, both projects can access the same cache, though I'd rather not interact with each others cache. At last, the BLL in a webservice is perfectly common behavior. Our backend process access an extended version of our public API which is IP blocked, and has a security token to gain rights.
