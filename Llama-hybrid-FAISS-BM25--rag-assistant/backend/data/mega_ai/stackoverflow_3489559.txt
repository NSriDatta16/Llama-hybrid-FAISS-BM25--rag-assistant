[site]: stackoverflow
[post_id]: 3489559
[parent_id]: 3489192
[tags]: 
We do something similar in our web app. The users can choose between several predefined layouts. There is a static CSS file loaded normally with common styles shared by all layouts. Then the function below receives a CSS string delivered by the server: var setStyle = function (css){ //css has the format: selector{...style...} var styleNode, cur = document.getElementById('_theme'); cur && cur.parentNode.removeChild(cur); styleNode = document.createElement('style'); styleNode.setAttribute('type', 'text/css'); styleNode.setAttribute('id', '_theme'); document.getElementsByTagName('head')[0].appendChild(styleNode); if((/MSIE/).test(navigator.userAgent)){ styleNode.styleSheet.cssText = css; }else{ styleNode.appendChild(document.createTextNode(css)); } } The function adds a STYLE tag with the id _theme and insert the CSS definition in it. And the layout is applied to the page. If the id _theme exists already, it is replaced. More recently we developed a mobile version of our web app and we changed radically the technique. The style is not defined by a static CSS anymore but from a JSON that we can generate dynamically, using variables, functions, etc... directly from the browser. We made a small JS lib of it, the code is available at: http://github.com/pure/jstyle
