[site]: stackoverflow
[post_id]: 3863491
[parent_id]: 3862518
[tags]: 
It is either/or. and that has nothing to do with Drupal, but with the nature of HTTP POST. Either you use #type=>value and Drupal maintains its storage outside of the form, inside of Drupal, trough a session, Or you post to external, in which case that internal session storage cannot help. Drupals security system in the Form API relies on the fact that Drupal "knows" the exact form itself and therefore can avoid incorrect values, by comparing them to the original form. An external site knows nothing about the original form, and therefore knows nothing about how to validate it. You will need to perform validation on the end of the receiver of the POST (that external site), nothing else will be secure (enough). That validation could be a local script running on the remote site, wich simply validates against whitelists or regular expressions. Alternatively, that remote site could request (e.g. over HTTP-SOAP, or XMLRPC) the form on the original Drupal-site, but that is going to be pretty hard to achieve. A third alternative, and IMHO the simplest, is to let Drupal handle the entire form locally, and if validated process it in the submit hook. In there, you can either post the values to the remote site in a secure way, or you can simply stick it in the database or some spool-system of that remote site. In any case: in the submit hook, after Drupal validated the form, you push it on to the remote site.
