[site]: stackoverflow
[post_id]: 5712839
[parent_id]: 
[tags]: 
Easy way to count lines of code using reflection

I need a (very rough) estimation on the lines of code (none-blank, none-comment) of an .net Assembly (c#). Is there an easy way to do this using reflection? I would prefer a hand-written tool (so I am asking about pointers here...) but I would also settle with a free (as in speech) tool. The following is my use-case: I am part of a team, on a not-so-large project having virually no code coverage. We have a report on the coverage which states about 60% coveage (talking about unit-test here.) but this report does not display assemblies that have no unit-tests at all. So to get the report anywhere near correct I thouhgt I write a small tool that could be called for every assembly without unit-tests (I can find those) and produce an xml like the one produced by our coverage-tool stating that nothing was coverd. As a first approximation for "statements" I thought I count "lines of code".
