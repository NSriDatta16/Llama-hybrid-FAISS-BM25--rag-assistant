[site]: stackoverflow
[post_id]: 5124613
[parent_id]: 5112329
[tags]: 
Umm, is the web view the main view? Either way, I'd do this: One view controller that contains two main areas. One is your UIWebView, and another is your layover. If you do this in Interface Builder, put the Layover on top of the UIWebView. All you have to do is animate it in and out based on certain input. A bad idea is to say "hide menu" and make the UIWebView take up all the space, so you can't get it back. Then use use one view controller for both. The recommended method of communicating between view controllers, if that's subviewed, is to create properties in the view controller that you can pass. Eg: the web view needs to tell the main view what site it's on. So put an NSString in your main controller as a property, then pass it the string on viewWillDisappear or whatever that name is. (Or, use viewWillAppear on the top level and have it grab that property from the 2nd view). Essentially it's just a branching tree, and you have to pass data up one node to reach the others. You "can" use the application's delegate itself/(the application) and from anywhere, call [UIApplication sharedApplication].property (after creating a property), and use it as a global, but that's not considered reusable code. Since you're used to basic, it might work for you. Finally, C++ globals do work, and there are many examples on the web for using globals in an iPhone program with externs. (even less recommended). Now, it sounds like you need to read the Views Programming Guide, even though it has severe grammar issues in areas (they may have corrected the homonyms in the 3rd paragraph of the intro by now, but other areas are totally confusing because of that), to get an understanding of how views respond to input, and what happens when input is ignored and bubbles up the tree. (that's basically what it does, lol... but layers and views have intricacies and it's good to understand them and how they function together). No, it's not a bad idea. But without understanding layers, view animation, and design maybe it is, until you do. NazCode
