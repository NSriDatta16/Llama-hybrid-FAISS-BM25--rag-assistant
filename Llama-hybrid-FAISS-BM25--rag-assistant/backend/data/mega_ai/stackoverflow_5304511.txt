[site]: stackoverflow
[post_id]: 5304511
[parent_id]: 
[tags]: 
How can I improve the performance of this Zend_Search_Lucene query?

How can I improve the query as seen below? My index is fully optimized and all fields are unstored except for item_id which is a keyword field. The problem is in the "if ($auth) {" section. If this section is removed search times are always under 1 sec but when this section is added in search times are 5 sec or more. Obviously it's a more complex query but I can't live without it. I need the logic in that section to get only search results that the user is authorized to view. I know the slowdown is in the search effort itself because if I remove the line "if ($authQuery) { $query->addSubquery($authQuery, true); }" the search is quite fast. I'm trying to basically effect the following logic in the "if ($auth) {" section: lucene fields gi_aro, gc_aro, i_access and c_access all consist of nothing more than a single integer each if ((array_in({gi_aro}, $gmid) OR {i_access} {} = lucene fields // keywords query $keywords = explode(' ', $keyword); $keywordQuery = new Zend_Search_Lucene_Search_Query_Multiterm(); foreach ($keywords as $term) { $keywordQuery->addTerm(new Zend_Search_Lucene_Index_Term($term, 'content')); $keywordQuery->addTerm(new Zend_Search_Lucene_Index_Term($term, 'search_display_name')); } // topcat query if (!empty($topcat)) { $term = new Zend_Search_Lucene_Index_Term($topcat, 'topcats'); $topcatQuery = new Zend_Search_Lucene_Search_Query_Term($term); } // cat query if (!empty($cat)) { $term = new Zend_Search_Lucene_Index_Term($cat, 'cats'); $catQuery = new Zend_Search_Lucene_Search_Query_Term($term); } // only authorized items query if ($auth) { $user = JFactory::getUser(); $gid = (int)$user->get('aid'); $gmid = explode(',', $user->gmid); // flexicontent cat auth $gcQuery = new Zend_Search_Lucene_Search_Query_MultiTerm(); foreach ($gmid as $g) { $gcQuery->addTerm(new Zend_Search_Lucene_Index_Term($g, 'gc_aro')); } // stock joomla cat auth $lowCAccessTerm = new Zend_Search_Lucene_Index_Term(0, 'c_access'); $highCAccessTerm = new Zend_Search_Lucene_Index_Term($gid, 'c_access'); $cAccessQuery = new Zend_Search_Lucene_Search_Query_Range($lowCAccessTerm, $highCAccessTerm, true); // ORed flexicontent cat auth & stock joomla cat auth $catAuthQuery = new Zend_Search_Lucene_Search_Query_Boolean(); $catAuthQuery->addSubquery($gcQuery); $catAuthQuery->addSubquery($cAccessQuery); // flexicontent itm auth $giQuery = new Zend_Search_Lucene_Search_Query_MultiTerm(); foreach ($gmid as $g) { $giQuery->addTerm(new Zend_Search_Lucene_Index_Term($g, 'gi_aro')); } // stock joomla itm auth $lowIAccessTerm = new Zend_Search_Lucene_Index_Term(0, 'i_access'); $highIAccessTerm = new Zend_Search_Lucene_Index_Term($gid, 'i_access'); $iAccessQuery = new Zend_Search_Lucene_Search_Query_Range($lowIAccessTerm, $highIAccessTerm, true); // ORed flexicontent itm auth & stock joomla itm auth $itmAuthQuery = new Zend_Search_Lucene_Search_Query_Boolean(); $itmAuthQuery->addSubquery($giQuery); $itmAuthQuery->addSubquery($iAccessQuery); // ANDed itmAuthQuery & catAuthQuery $authQuery = new Zend_Search_Lucene_Search_Query_Boolean(); $authQuery->addSubquery($catAuthQuery, true); $authQuery->addSubquery($itmAuthQuery, true); } // composite query $query = new Zend_Search_Lucene_Search_Query_Boolean(); $query->addSubquery($keywordQuery, true); // if cat query is set we don't need topcat to restrict result set if ($catQuery) { $query->addSubquery($catQuery, true); } elseif ($topcatQuery) { $query->addSubquery($topcatQuery, true); } if ($authQuery) { $query->addSubquery($authQuery, true); } // search $execTime = new JProfiler(); $this->hits = $index->find($query); echo $execTime->mark('executed');
