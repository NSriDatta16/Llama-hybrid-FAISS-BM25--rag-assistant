[site]: stackoverflow
[post_id]: 4929716
[parent_id]: 
[tags]: 
Sharing data between two lists

First let me say that I thought that the way data storage worked in python is that everything is an object so there is no need for such things as pointers. If you pass an piece of data into a function then that function has the real piece of data. When you exit out of that function it the data passed in could have been modified. Now I was working with lists and I thought that if I put the same piece of data on two lists then modifying it in one place would modify it in the other. How can I have one piece of data that is on two, or more, different lists? I would want to change this data in one place and then have the other change. For example take the following: p = 9 d = [] f = [] d.append(p) f.append(p) print 'd',d print 'f',f p = 3 print 'd',d print 'f',f When this is run the output is: d [9] f [9] d [9] f [9] I would like the second set of data to be 3 but it doesn't seem to work. So where in my thought process did I go wrong? Is there an implicit copy operation when putting data onto a list?
