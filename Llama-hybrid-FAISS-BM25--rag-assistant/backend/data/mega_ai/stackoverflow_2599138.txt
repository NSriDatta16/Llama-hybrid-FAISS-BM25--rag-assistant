[site]: stackoverflow
[post_id]: 2599138
[parent_id]: 2598970
[tags]: 
You can get around the circular dependency issue if your lazy loading code loads the repository at runtime ( Activator.CreateInstance or something similar) and then calls the appropriate method via reflection. Of course there are performance penalties associated with reflection, but often turn out be insignificant in most solutions. Another way to solve this problem is to simply compile to a single dll - here you can still logically separate your layers using different namespaces, and still organise your classes by using different directories.
