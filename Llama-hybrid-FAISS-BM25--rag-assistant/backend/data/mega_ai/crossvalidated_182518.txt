[site]: crossvalidated
[post_id]: 182518
[parent_id]: 
[tags]: 
Testing an SVM performance - unnormalized data performing better than normalized

I'm training a SVM on a dataset in OpenCV that contains 14 features and thousands of observations. I understand that for optimal performance, it is recommended to perform principal component analysis on your features before training the SVM on the features. So I ZMUV'ed my features, and then performed PCA and trained the SVM on that. Then I tested on the training dataset and I got a whopping 41% error rate. I took out the PCA part, and I got the error rate down to 29%. And then I took out ZMUV normalization altogether and I got down to just 21%. Does anyone know why this is happening, or is my understanding of SVM/PCA incorrect? I admit I am new to this. PS. When I took out ZMUV and just did PCA, my error rate is around 22%.
