[site]: stackoverflow
[post_id]: 5745650
[parent_id]: 
[tags]: 
Oracle DB testing strategy

At work we are trying to simplify an application that was coded with an overkill use of Spring Remoting. This is how it works today: (Controllers) Spring MVC -> Spring Remoting -> Hibernate Everything is deployed in a single machine, Spring Remoting is not needed (never will be needed) and adds complexity to code maintenance. We want it out. How to ensure everything works after our changes? Today we have 0% code coverage! We thought on creating integration tests to our controllers so when we remove Spring Remoting they should behave exactly the same. We thought on using a mix of Spring Test framework in conjunction with DBUnit to bring up Oracle up to a known state every test cycle. Has anyone tried a similar solution? What are the drawbacks? Would you suggest any better alternative?
