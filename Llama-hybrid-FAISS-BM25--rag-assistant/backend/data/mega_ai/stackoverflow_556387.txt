[site]: stackoverflow
[post_id]: 556387
[parent_id]: 556155
[tags]: 
Usually for these kinds of samplers there's one extra thing you usually specify, and that is sampler resolution . In your case assuming your description the sampler resolution can be either 1 second or 1 tick. If the resolution you want for the sampler is 1 second then here's a algorithm proposition that might work well enough. create a linked list. The list nodes hold [timestamp, Success count, Failure count, previousNode] store a reference to the last node of the list as lastNode and a reference to the first node firstNode ( lastNode will be the tail of the list, and the firstNode is the latest added node, the head) hold in two global variables gSuccess, gFail, the sum of successes and failures in the last X seconds timeframe. When a new event is received: Compare event [timestamp] with firstNode timestamp IF (eventTimestamp.TotalSeconds > firstNode.TotalSeconds) Add a new node a at the begining of the list (insert before firsNode) with Succes and Failure count 0. firstNode.Previous = newNode firsNode = newNode; END IF Increment firstNode.Success or firstNode.Failure count by 1 *Increment gSuccess or gFail by 1 (after each event added) REMOVE_EXPIRED_NODES WHILE ( lastNode != nil AND curentTime.TotalSeconds - lastNode.TotalSeconds > X) gSuccess -= lastNode.Succes (decrease gSuccess by node to be removed Success count) gFail -= lastNode.Fail (decrease gFail by node to be removed Fail count) Remove lastNode END WHILE getting gFail and gSuccess should always be preceded by REMOVE_EXPIRED_NODES. The advantages of this approach : Global counters for the Fail and Success are not recomputed from all events, but instead gradually incremented events are added, and decremented when nodes from the list that are older than X seconds are removed. it uses sampler resolution of 1 second instead of storing a list of all events (which might be hundreds per second, ensuring that a total of 2 list operations for each second are performed (add + remove operations)) regardless of the number of events, list operations count per second on average is 2 (1 add operation, 1 remove operation)
