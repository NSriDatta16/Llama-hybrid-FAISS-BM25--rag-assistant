[site]: stackoverflow
[post_id]: 4136290
[parent_id]: 4135497
[tags]: 
Having descriptive variable names when possible allows someone to understand the code more easily. However, there definitely comes the time when names become too long and the readability suffers. Remember that the objective of variable names is to make the program easier to understand. If there is information about the data that isn't relevant, you shouldn't include it. For example: function getTasksByDate($year, $month, $day) { $tasks = getTasks(); return $tasks[$year][$month][$day]; } In this case, who cares to rename $tasks to $tasks_by_year_month_day ? It is more than clear what the indexing order is. Moreover, this example suggests the idea of an abstract data type. With an abstract data type, you can expose greatly descriptive function names that operate on the task structure. This means that the only case where you really have to care about the order of indexing is in the functions which expose the ADT. At that point, you can comment the index order at the top of the file. In short, you cannot hope to include every piece of information in your variable name. Most of the time no one wants every piece either. Try leveraging the current context to shorten your variable names and clarify your overall goal.
