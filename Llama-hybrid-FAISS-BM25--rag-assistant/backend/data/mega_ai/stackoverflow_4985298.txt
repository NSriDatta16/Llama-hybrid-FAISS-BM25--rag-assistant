[site]: stackoverflow
[post_id]: 4985298
[parent_id]: 4984437
[tags]: 
See scala.xml.transform._ and the corresponding Stack Overflow questions. It will probably look somewhat like this: import scala.xml._ import transform._ case class Article( title: String, content: String ) val articleList = List( Article("title 1","content 1"), Article("title 2","content 2") ) class TransformArticle(title: String, content: String) extends RewriteRule { override def transform(n: Node): Seq[Node] = n match { case div @ => div match { case elem: Elem if elem \ "@class" contains Text("title") => elem copy (child = Text(title)) case elem: Elem if elem \ "@class" contains Text("content") => elem copy (child = Text(content)) case other => other } case other => other } } val article_template = Group( articleList.flatMap( article => { new RuleTransformer(new TransformArticle(article.title, article.content)) transform article_template }) )
