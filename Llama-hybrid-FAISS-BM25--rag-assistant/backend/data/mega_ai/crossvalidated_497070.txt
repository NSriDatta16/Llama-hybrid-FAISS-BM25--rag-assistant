[site]: crossvalidated
[post_id]: 497070
[parent_id]: 
[tags]: 
How to combine confidence intervals of a regression when calculating a mean of estimated value

I am facing the following problem: I have a regression similar to the following: fit 100) ~ cyl + wt + disp + am,data = mtcars) The idea is more or less to estimate the probability of having hp > 100. I then calculate the mean estimation for each category of am : tapply(predict(fit),mtcars$am,mean) 0 1 0.8421053 0.5384615 This works for me. Now I would like to have confidence intervals for these estimates. I can do predict(fit,interval ="confidence" ) fit lwr upr 1 0.7848704 0.58406685 0.9856739 2 0.8131518 0.58796047 1.0383431 3 0.2948876 0.10013362 0.4896416 4 0.5771351 0.38357191 0.7706984 5 0.9762073 0.72139354 1.2310211 6 0.6588185 0.50067156 0.8169655 7 0.9906253 0.76233687 1.2189137 8 0.2156066 -0.04845223 0.4796655 9 0.2209163 -0.04090334 0.4827359 10 0.7514166 0.50829030 0.9945429 11 0.7514166 0.50829030 0.9945429 12 1.1851648 0.92950067 1.4408290 13 1.1474563 0.92047532 1.3744373 14 1.1530017 0.92392416 1.3820792 15 0.9919425 0.66900143 1.3148836 . . . And I get the confidence of each estimation. How can I combine these confidence interval to get the confidence interval of the mean ? Edits Isabella Ghement pointed out that I should use glm instead of lm for binary variable. I actually used lm because for the calculation I want to perform, both lm and glm are equivalent (I am not interested in individual estimation, but on the average probability on two subgroups): model 100) ~ cyl + wt + disp + am, data = mtcars, family = binomial(link="logit")) tapply(predict(model, type = "response"),mtcars$am,mean) 0 1 0.8421053 0.5384615 But predict(model, type = "response",interval = "confidence") does not give the confidence interval of individual estimation, where it does for lm . My question is to know if there is a way of calculating the CI of the two values 0.8421053 for am = 0 and 0.5384615 for am = 1 from the individual CI given by predict(fit,interval ="confidence" ) , to avoid computer intensive calculation such as bootstraping.
