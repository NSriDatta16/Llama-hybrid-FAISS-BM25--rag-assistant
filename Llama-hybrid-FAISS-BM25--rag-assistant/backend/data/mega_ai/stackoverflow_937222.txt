[site]: stackoverflow
[post_id]: 937222
[parent_id]: 937157
[tags]: 
There are a few ways, including type Animal() = class end type Cat() = inherit Animal() type Dog() = inherit Animal() let animals1 : list = [upcast new Cat(); upcast new Dog()] let animals2 = ([upcast new Cat(); upcast new Dog()] : list ) let animals3 = [(new Cat() :> Animal); upcast new Dog()] animals1: type annotation at the var declaration, upcast each element animals2: type annotation on the list expression, upcast each element animals3: explicit type on first element, upcast rest In a future version of F#, the upcast is likely to become unnecessary. (See also http://cs.hubfs.net/forums/thread/9953.aspx , but nothing 'new' there.)
