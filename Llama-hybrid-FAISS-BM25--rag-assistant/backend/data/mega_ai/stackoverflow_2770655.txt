[site]: stackoverflow
[post_id]: 2770655
[parent_id]: 2770553
[tags]: 
CakePHP says: Models represent data and are used in CakePHP applications for data access. A model usually represents a database table but can be used to access anything that stores data such as files, LDAP records, iCal events, or rows in a CSV file. ( http://book.cakephp.org/view/66/Models ) Basically, the model represents persistent storage of your business data. Normally, this is a database. Once we begin talking about databases and objects, it usually falls into the realm of the much debated 'object-relational mapping' which is how many PHP frameworks implement Models. A Model usually represents a row in a table, but it could also be a group of rows from multiple tables. A Model could be represented in an infinite number of ways: from something as complex and bloated as a Doctrine db object to something as simple as a text file. My preferred way of representing models is one-row per model on the main table joined with any related parent tables and containing member objects of any child tables. The only way to effectively implement this is to use a 'Collection' class of some sort so that all the objects can be fetched at once and so you don't make unnecessary queries. Edit: To directly answer your question, yes, a "finder" or "Collection" class is absolutely necessary if you want to minimize the number of trips to a database. If each model was self sufficient, you'd be doing hundreds of individual 'SELECT FROM table WHERE id=x' queries. A finder or Collection can just SELECT multiple rows and dump the data into Model objects.
