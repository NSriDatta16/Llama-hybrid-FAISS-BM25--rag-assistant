[site]: stackoverflow
[post_id]: 648547
[parent_id]: 648290
[tags]: 
Don't be afraid to use local variables. The difference in memory usage and performance is very small, or in some cases none at all. In your specific case the local variables may use 8 bytes (16 bytes on a 64-bit application) of stack space. However, the compiler can create local variables by itself if it's needed for temporary storage, so it's possible that both versions have the same set of local variables anyway. Also, the compiler can use processor registers instead of stack space for some local variables, so it's not even certain that creating a local variable actually uses any stack space at all. Allocating stack space is very cheap anyhow. When the method is called, a stack frame is created for the local data in the method. If more memory has to be allocated, that will only change how much the stack pointer is moved, it will not produce any extra code at all. So, just write the code so that it's maintainable and robust, and trust the compiler to optimize the variable usage.
