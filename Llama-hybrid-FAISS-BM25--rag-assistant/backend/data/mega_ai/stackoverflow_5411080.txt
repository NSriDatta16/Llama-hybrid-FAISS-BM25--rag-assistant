[site]: stackoverflow
[post_id]: 5411080
[parent_id]: 5397290
[tags]: 
Your code looks like it should work, but it has lots of extra functionality that is not strictly required. I would cut it down to an absolute minimum and go from there. It's really only a gut feeling, but I think it might be the using statement giving you grief. This enture function could be written (presuming the container already exists) as: public void UploadToBlob(Stream stream, string BlobContainerName, string fileName, string contentType) { // Setup the connection to Windows Azure Storage CloudStorageAccount storageAccount = CloudStorageAccount.Parse(GetConnStr()); CloudBlobClient BlobClient = storageAccount.CreateCloudBlobClient(); CloudBlobContainer BlobContainer = BlobClient.GetContainerReference(BlobContainerName); CloudBlockBlob blob = BlobContainer.GetBlockBlobReference(fileName); stream.Position = 0; blob.UploadFromStream(stream); } Notes on the stuff that I've removed: You should set up diagnostics just once when you're app starts, not every time a method is called. Usually in the RoleEntryPoint.OnStart() I'm not sure why you're trying to set ParallelOperationThreadCount higher if you have more instances. Those two things seem unrelated. It's not good form to check for the existence of a container/table every time you save something to it. It's more usual to do that check once when your app starts or to have a process external to the website to make sure all the required containers/tables/queues exist. Of course if you're trying to dynamically create containers this is not true.
