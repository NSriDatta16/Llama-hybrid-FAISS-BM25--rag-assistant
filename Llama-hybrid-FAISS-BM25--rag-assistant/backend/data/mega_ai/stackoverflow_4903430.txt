[site]: stackoverflow
[post_id]: 4903430
[parent_id]: 4903253
[tags]: 
Mapping, in general, is a pain. I don't care what tool you have to use. If you have to map 100 arbitrary fields on one side to 100 different arbitrary fields on the other, the you get the great joy and pleasure of mapping those 100 relationships by hand. It sucks, but it's Just Work (vs having to think and figure something out). You question is too broad to say whether XSLT would be better or not for your case. I can say that one advantage of XSLT, being a plain text format, is that you could possibly automate the boiler plate you need to perform the mapping. For example, if you had a list of pairs for mapping: fieldABC QEDField fieldDEF XYZField and that turned in to XSLT like: Then it would be straightforward to write a script in, well, most any language, to generate the final template from those pairs. That way, you just have to capture the actual mapping (the cognitive part) and then a small program can do the "work" part of generating the final script. I know I would rather type in a bunch of field mappings, line after line, than fight some drag and drop gui to do the dame thing. D&D is great the first 2 times, but after that it because real tedious real fast. If your tool has a usable text format, then you could, perhaps, generated that mapping file for the tool instead. So, anyway, that's one possible advantage XSLT can have over using a tool with an interface. Also, to paraphrase some unknown author, one of my favorite XSLT quotes is "Remember, you can use XSLT to generate XSLT." Of course, it has to be said that there's time involved in creating these scripts etc vs Just Doing The Work in the tool. If you save time in the end, it's a win, so that's the first criteria to think about, especially if you don't need to do a LOT of this kind of work.
