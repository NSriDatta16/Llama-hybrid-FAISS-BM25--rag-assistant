[site]: stackoverflow
[post_id]: 2038861
[parent_id]: 2038717
[tags]: 
Quote> My question is, what's the rule about the number of vptrs in inheritance? There are no rulez, every compiler vendor is allowed to implement the semantics of inheritance the way he sees fit. class B: public A {}, size = 12. That's pretty normal, one vtable for B that has both virtual methods, vtable pointer + 2*int = 12 class C : public A, public B {}, size = 20. C can arbitrarily extend the vtable of either A or B. 2*vtable pointer + 3*int = 20 Virtual inheritance: that's where you really hit the edges of undocumented behavior. For example, in MSVC the #pragma vtordisp and /vd compile options become relevant. There's some background info in this article . I studied this a few times and decided the compile option acronym was representative for what could happen to my code if I ever used it.
