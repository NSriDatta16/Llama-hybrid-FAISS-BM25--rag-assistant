[site]: stackoverflow
[post_id]: 879437
[parent_id]: 866056
[tags]: 
I don't think that this is possible. This link discusses using CopySymbolicHotKeys as well. However, the function lists keyboard shortcuts that are not listed in the System Preference for Keyboard Shortcuts. If there was someway to differentiate between actually reserved keys and just standard keys, that would be ideal. The best answer seems to be parsing the actual plist file, "com.apple.symbolichotkeys.plist" which I found in Apple's Carbon Email Discussion List. However, this answer assumes that you know what each and every key is (which I don't). I also found a link describing what the modifier key values are. Here is the code that was posted for disabling a known key in the System Shortcut Key Preferenes: #include static CFStringRef gApplicationID = CFSTR("com.apple.symbolichotkeys"); static CFStringRef gKeyASHK = CFSTR("AppleSymbolicHotKeys"); static CFStringRef gKey73 = CFSTR("73"); static CFStringRef gKeyEnabled = CFSTR("enabled"); int main(int argc, const char *argv[]) { #pragma unused (argc, argv) CFPropertyListRef hotkeysCFPropertyListRef = CFPreferencesCopyAppValue(gKeyASHK, gApplicationID); if ( !hotkeysCFPropertyListRef ) { fprintf(stderr, "%s, CFPreferencesCopyAppValue(\"AppleSymbolicHotKeys\", \"com.apple.symbolichotkeys.plist\" returned NULL.\n", __PRETTY_FUNCTION__); return (-1); } // make sure it's a dictionary if ( CFGetTypeID(hotkeysCFPropertyListRef) != CFDictionaryGetTypeID() ) { fprintf(stderr, "%s, CFGetTypeID(hotkeysCFPropertyListRef) != CFDictionaryGetTypeID().\n", __PRETTY_FUNCTION__); return (-1); } // get the "73" value from that dictionary CFPropertyListRef hotkey73CFPropertyListRef = NULL; if ( !CFDictionaryGetValueIfPresent(hotkeysCFPropertyListRef, gKey73, &hotkey73CFPropertyListRef) ) { fprintf(stderr, "%s, CFDictionaryGetValueIfPresent(...,\"73\",...) returned FALSE.\n", __PRETTY_FUNCTION__); return (-1); } //CFShow(hotkey73CFPropertyListRef); // make sure it's a dictionary if ( CFGetTypeID(hotkey73CFPropertyListRef) != CFDictionaryGetTypeID() ) { fprintf(stderr, "%s, CFGetTypeID(hotkey73CFPropertyListRef) != CFDictionaryGetTypeID().\n", __PRETTY_FUNCTION__); return (-1); } // get the "73" value from that dictionary CFPropertyListRef hotkey73EnabledCFPropertyListRef = NULL; if ( !CFDictionaryGetValueIfPresent(hotkey73CFPropertyListRef, gKeyEnabled, &hotkey73EnabledCFPropertyListRef) ) { fprintf(stderr, "%s, CFDictionaryGetValueIfPresent(...,\"enabled\",...) returned FALSE.\n", __PRETTY_FUNCTION__); return (-1); } //CFShow(hotkey73EnabledCFPropertyListRef); // make sure it's a boolean if ( CFGetTypeID(hotkey73EnabledCFPropertyListRef) != CFBooleanGetTypeID() ) { fprintf(stderr, "%s, CFGetTypeID(hotkey73EnabledCFPropertyListRef) != CFBooleanGetTypeID().\n", __PRETTY_FUNCTION__); return (-1); } // get its value Boolean value = CFBooleanGetValue(hotkey73EnabledCFPropertyListRef); CFBooleanRef hotkey73EnabledCFBooleanRef = value ? kCFBooleanFalse : kCFBooleanTrue; // note: toggle value // create a mutable copy of the hot key 73 dictionary CFMutableDictionaryRef newHotkey73CFCFMutableDictionaryRef = CFDictionaryCreateMutableCopy(kCFAllocatorDefault, 0, hotkey73CFPropertyListRef); if ( !newHotkey73CFCFMutableDictionaryRef ) { fprintf(stderr, "%s, CFDictionaryCreateMutableCopy(..., hotkey73CFPropertyListRef) returned NULL.\n", __PRETTY_FUNCTION__); return (-1); } // set the new value for the "enabled" item CFDictionarySetValue(newHotkey73CFCFMutableDictionaryRef, gKeyEnabled, hotkey73EnabledCFBooleanRef); //CFShow(newHotkey73CFCFMutableDictionaryRef); // create a mutable copy of the hot key dictionary CFMutableDictionaryRef newHotkeysCFPropertyListRef = CFDictionaryCreateMutableCopy(kCFAllocatorDefault, 0, hotkeysCFPropertyListRef); if ( !newHotkeysCFPropertyListRef ) { fprintf(stderr, "%s, CFDictionaryCreateMutableCopy(...,hotkeysCFPropertyListRef) returned NULL.\n", __PRETTY_FUNCTION__); return (-1); } // set the new value for the "73" item CFDictionarySetValue(newHotkeysCFPropertyListRef, gKey73, newHotkey73CFCFMutableDictionaryRef); CFRelease(newHotkey73CFCFMutableDictionaryRef); //CFShow(newHotkeysCFPropertyListRef); CFPreferencesSetAppValue(gKeyASHK, newHotkeysCFPropertyListRef, gApplicationID); if ( !CFPreferencesAppSynchronize(gApplicationID) ) { fprintf(stderr, "%s, CFPreferencesAppSynchronize returned false.\n", __PRETTY_FUNCTION__); return (-1); } // note: value is opposite of what we just set (so invert logic) printf("%s, /AppleSymbolicHotKeys/73/enabled set to %s.\n", __PRETTY_FUNCTION__, value ? "FALSE" : "TRUE"); return (0); } // main
