[site]: crossvalidated
[post_id]: 363130
[parent_id]: 
[tags]: 
Is it a good idea to train a Neural Network on continiously randomly generated training data?

Hello everyone I'm building a license plate detection model in Tensorflow. I built a function that chooses a license plate at random from a collection of ~5000 plates and puts it in a random place in on a random background and saves the coordinates. At first I thought to generate about 40K images this way and train the network on with the generated data. But wouldn't it be a good idea to just continiously keep generating new data to feed to the network and basically eliminate any chance of it getting overfitted?
