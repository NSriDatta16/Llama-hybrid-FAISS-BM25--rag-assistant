[site]: crossvalidated
[post_id]: 341671
[parent_id]: 
[tags]: 
predictions with random forest in caret

I recently got confused on how to do correct predictions for random forrests. Here is an example: library(caret) n So basically I run a simple random forest to predict Sepal.Length. Now > print(rf) Random Forest 120 samples 4 predictor No pre-processing Resampling: Cross-Validated (10 fold, repeated 3 times) Summary of sample sizes: 107, 108, 107, 108, 106, 108, ... Resampling results across tuning parameters: mtry RMSE Rsquared MAE 1 0.4121244 0.8035960 0.3294848 2 0.3466976 0.8485902 0.2917225 3 0.3340895 0.8547870 0.2811055 RMSE was used to select the optimal model using the smallest value. The final value used for the model was mtry = 3. This tells me that the parameter mtry = 3 performed best on the training set with a RMSE of 0.33. I went on to check for this RMSEa and tried to calculate it by hand: > sqrt(mean((predict.train(rf, newdata = traindat, type = "raw") - traindat$Sepal.Length)^2)) [1] 0.1736768 What did I do wrong? Is predict.train the right way to do predictions for random forests? Glad to hear your advice. Thank you.
