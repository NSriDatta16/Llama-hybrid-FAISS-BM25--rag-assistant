[site]: stackoverflow
[post_id]: 576018
[parent_id]: 555807
[tags]: 
Almost anything. Have you read Code Complete ? (Because StackOverflow says you really should .) In Chapter 22 it says "100% statement coverage is a good start, but it is hardly sufficient". The rest of the chapter explains how to determine which additional tests to add. Here's a brief taster. Structured basis testing and data flow testing means testing each logic path through the program. There are four paths through the contrived code below, depending on the values of A and B. 100% statement coverage could be achieved by testing only two of the four paths, perhaps f=1:g=1/f and f=0:g=f+1 . But f=0:g=1/f will give a divide by zero error. You have to consider if statements and while and for loops (the loop body might never be executed) and every branch of a select or switch statement. If A Then f = 1 Else f = 0 End If If B Then g = f + 1 Else g = f / 0 End If Error guessing - informed guesses about types of input that often cause errors. For instance boundary conditions (off by one errors), invalid data, very large values, very small values, zeros, nulls, empty collections. And even so there can be errors in your requirements, errors in your tests, etc - as others have mentioned.
