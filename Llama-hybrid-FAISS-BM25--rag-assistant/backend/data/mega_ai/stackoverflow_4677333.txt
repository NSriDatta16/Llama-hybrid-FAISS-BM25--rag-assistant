[site]: stackoverflow
[post_id]: 4677333
[parent_id]: 4676691
[tags]: 
Are you an engineer? This is a nice example of some simple task, solved by a perfectly working but overly complex solution. Unless the content you put in takes exactly as many bytes as the content you take out, writing "in" a file will actually cause the whole following part after your writing position to be rewritten to disk. Append is much cheaper . Renaming the file to store the pointer works - but it's not very elegant , and makes stuff more complex (for one, your process needs write rights to the directory in which the file resides - else just write access to two files is sufficient) Unless disk space is an issue (and really, it rarely is), your approach is less efficient than say, append everything to a file, and rotate the file when it reaches its maximum size . This way you always have the last 3MB of logs available, and maximum 3MB more in your current file. It will make parsing the file a lot easier too, instead of recalculating the entire pointer position thing. Update to answer your comment: Renaming a file every minute (or even every second) shouldn't slow down your system significantly, don't worry about that. Our concerns are mainly with "why you think you need to rename the file". It's not better technically, it's not better from a logical point of view, it makes a lot of other (future) tasks harder. You could store the file pointer in a seperate file, or at the end of your file, and there are better^H^H^H^H^H^H simpler solutions that don't require the file pointer at all.
