[site]: crossvalidated
[post_id]: 254507
[parent_id]: 254489
[tags]: 
Instead of framing it as a 10-way classification problem and predicting which banner to use, or producing 10 scores, you could frame it as a binary classification problem and predict whether a banner leads to a conversion or not. This approach has the advantage that it generalizes more easily to many banners, possibly without retraining for every new banner. The neural network takes as input some information about the user and the page, let's call that $\mathbf{x}$, and some information describing the banner, $\mathbf{b}$. $\mathbf{b}$ could represent a number from $\{1, ..., 10\}$ ( one-hot encoded ) or a real-valued vector describing generic features of the banner such as its topic, $\mathbf{b} \in \mathbb{R}^N$. The output of the network, $f(\mathbf{x}, \mathbf{b})$, is the probability with which the banner lead to a conversion. After training, you pick the best banner by feeding representations $\mathbf{b}_i$ for all of them through the network and picking the one with highest probability of conversion, $$\text{argmax}_i \, f(\mathbf{x}, \mathbf{b}_i).$$ Training takes as input page descriptions and banners, and as outputs binary labels indicating whether or not there was a conversion.
