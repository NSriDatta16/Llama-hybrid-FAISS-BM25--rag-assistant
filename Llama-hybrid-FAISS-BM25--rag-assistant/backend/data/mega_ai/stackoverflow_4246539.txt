[site]: stackoverflow
[post_id]: 4246539
[parent_id]: 4246394
[tags]: 
A regex match approach is going to be awkward here. As you can see from your own samples, the version details for Firefox on Ubuntu are in a different place entirely. You could use a simple split regex which will separate the string into different parts: // Split on ;, ( or ), removing the white-space at either side var parts = navigator.userAgent.split(/\s*[;)(]\s*/); Result: ["Mozilla/5.0", "Windows", "U", "Windows NT 6.1", "en-US", "AppleWebKit/534.7", "KHTML, like Gecko", "Chrome/7.0.517.44 Safari/534.7"] The added benefit here is that you can extract the information you need without an overly complicated regular expression. A simple conditional from here could tell you where the OS/version data is stored, followed by further processing to extract just the version number. For example: var result; if (/^Linux/.test(parts[3])) result = parts[6].split("/").pop(); // "8.10" (Ubuntu) else result = parts[3].split(" ").pop(); // "6.1" (Win 7) Working demo: http://jsfiddle.net/AndyE/p6Uzc/ Further conditionals will be required for other browsers/systems (like browsers on mobile phones). For example, Opera 10 on Windows 7 has a user agent string containing: Opera/9.80 (Windows NT 6.1; U; en) Presto/2.6.30 Version/10.63 Also remember that the USER AGENT string can be spoofed to look completely different or contain different information.
