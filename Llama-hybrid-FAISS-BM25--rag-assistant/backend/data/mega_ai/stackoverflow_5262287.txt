[site]: stackoverflow
[post_id]: 5262287
[parent_id]: 5254113
[tags]: 
You can add mouse event handling by using the isPointInPath method of canvas. Something like this below (untested). // add click event handler to canvas // on click var rect = canvas.getBoundingClientRect(); var mouseX = e.clientX - rect.left; var mouseY = e.clientY - rect.top; ctx.beginPath() // draw stuff if (ctx.isPointInPath(mouseX, mouseY)) { // handle click } This will recognize any shape, which is very useful if you are drawing anything other than rectangles and circles. However, the major drawback to this is that you have to redraw on every click (or mousemove if you are adding mouseovers). In my experience I can get away with drawing at least 300 objects before I start seeing issues with performance. I should also note there is a bug in firefoxes implementation of isPointInPath that remains unfixed for some reason. But happily the fix is easy enough CanvasRenderingContext2D.prototype.isPointInPath_mozilla = function( x, y ) { if (navigator.userAgent.indexOf('Firefox') != -1){ this.save(); this.setTransform( 1, 0, 0, 1, 0, 0 ); var ret = this.isPointInPath( x, y ); this.restore(); } else var ret = this.isPointInPath( x, y ); return ret; } just replace ctx.isPointInPath(x,y) with ctx.isPointInPath_mozilla(x,y) and everything works
