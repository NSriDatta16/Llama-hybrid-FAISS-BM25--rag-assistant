[site]: datascience
[post_id]: 23682
[parent_id]: 23671
[tags]: 
So you want your algorithm to pick a horse that is more likely to win than the odds would suggest in order to profit? The odds are set in a way such that, taking expert opinions and loads of data into account, the bookkeepers are minimising their expected losses. It seems unlikely that you have more information on the horses than they do, so I think it will be difficult to beat them at their own game! Anyway, the approach I would take here would be to add a new feature into the data that looks at the horses position and odds in their most recent race(s): $$ score = \frac{odds}{position} $$ So, for example, say the odds for three particular horses and their corresponding positions in some race are as follows: $$\begin{array}{c|c|c|} & \text{Predicted Odds} & \text{Actual Position} & \text{Score} \\ \hline \text{Horse A} & 9:1 & 2 & 4.5 \\ \hline \text{Horse B} & 1.3:1 & 1 & 1.3\\ \hline \text{Horse C} & 3:1 & 6 & 0.5 \\ \hline \end{array}$$ This way, horses that are overperforming will have high scores, and horses that are underperforming will have low scores. You can average this score over the last $n$ races that the horse participated in to get a more stable scoring to evaluate the horses current form. This feature can then be used by any standard machine learning algorithm along with any other features you may have.
