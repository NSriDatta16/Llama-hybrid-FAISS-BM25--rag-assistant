[site]: stackoverflow
[post_id]: 4571574
[parent_id]: 
[tags]: 
how to avoid this duplicate code by using delegates / lambdas

i have this code below that loops through a data structure builds up a dictionary. I have this code duplicated multiple times with the only difference being the Key to the dictionary so in the below code it happens to be: task.Project + task.Name that is the key to the dictionary but in other cases its just: task.Project or just task.Name here is an example of one of hte hard coded "Bucket" methods. My goal is to have a generic "Bucket" method where i can have a callback or some way to pass in the function for calculating the key. What is the best way of doing this ?? private Dictionary BucketByProjectTask(Dictionary timebookings) { Dictionary dict = new Dictionary (); foreach (var name in timebookings.Keys) { TimeBooking tb = timebookings[name]; Person p = tb.Person; foreach (var booking in tb.WeeklyTimeBookings.Keys) { var item = tb.WeeklyTimeBookings[booking]; foreach (var task in item.TaskSlices) { if (dict.ContainsKey(task.Project + task.Name)) { TeamHours th = dict[task.Project + task.Name]; th.Hours = th.Hours + task.Hours; } else { TeamHours th = new TeamHours(); th.Hours = task.Hours; th.Project = task.Project; th.Task = task.Name; th.Workstream = tb.Person.OrganisationalUnitName; dict[task.Project + task.Name] = th; } } } } return dict; }
