[site]: stackoverflow
[post_id]: 4866249
[parent_id]: 4863599
[tags]: 
Here's how I would do it: Create a subclass of UISwipeGestureRecognizer . The purpose of this subclass would simply be to remember the very first and last UITouch objects that it receives in its touchesBegan:withEvent: method. Everything else would be forwarded on to super . When your recognizer triggers its action, the recognizer will be passed in as the sender parameter. You can ask it for the initial and final touch objects, then use the locationInView: method and the timestamp property to figure out the velocity of the swipe (velocity = change in distance / change in time). So it'd be something like this: @interface DDSwipeGestureRecognizer : UISwipeGestureRecognizer @property (nonatomic, retain) UITouch * firstTouch; @property (nonatomic, retain) UITouch * lastTouch; @end @implementation DDSwipeGestureRecognizer @synthesize firstTouch, lastTouch; - (void) dealloc { [firstTouch release]; [lastTouch release]; [super dealloc]; } - (void) touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { [self setFirstTouch:[touches anyObject]]; [super touchesBegan:touches withEvent:event]; } - (void) touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event { [self setLastTouch:[touches anyObject]]; [super touchesEnded:touches withEvent:event]; } @end Then elsewhere you'd do: DDSwipeGestureRecognizer *swipe = [[DDSwipeGestureRecognizer alloc] init]; [swipe setTarget:self]; [swipe setAction:@selector(swiped:)]; [myView addGestureRecognizer:swipe]; [swipe release]; And your action would be something like: - (void) swiped:(DDSwipeGestureRecognizer *)recognizer { CGPoint firstPoint = [[recognizer firstTouch] locationInView:myView]; CGPoint lastPoint = [[recognizer lastTouch] locationInView:myView]; CGFloat distance = ...; // the distance between firstPoint and lastPoint NSTimeInterval elapsedTime = [[recognizer lastTouch] timestamp] - [[recognizer firstTouch] timestamp]; CGFloat velocity = distance / elapsedTime; NSLog(@"the velocity of the swipe was %f points per second", velocity); } Warning: code typed in a browser and not compiled. Caveat Implementor.
