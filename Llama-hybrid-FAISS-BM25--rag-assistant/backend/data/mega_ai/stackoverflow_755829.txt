[site]: stackoverflow
[post_id]: 755829
[parent_id]: 754838
[tags]: 
While it is true that Git is a good choice, do not forget that a "growing application footprint" entails other issues you will have to deal with, no matter what SCM you end up using . Namely: Application Architecture in order to divide your application into more manageable and independent (from one another) "modules" (or components) Merge workflow : your SCM need to deal with 3-way merge , while avoiding sideway-merges . This is especially true in maintenance phase, when you have both a release in production to maintain, and a new development for the next version to make. Delivery storage in order to easily query your deliveries into a test environment, homologation environments, production environment... Regarding the merge feature, Perforce or Git are better than Subversion, because they allow you to merge any subtree you want, while memorizing the merge information, and with many merging strategies (ours, theirs, ...). Even in its latest 1.6 version, Subversion does only support reliably merges from the root directory of a branch (you can merge subtrees, but the log will not be accurate for merges to subtree outside the ones you have currently checked out)
