[site]: crossvalidated
[post_id]: 473376
[parent_id]: 
[tags]: 
Is there a way to find the most adapted NN?

I'm trying to build a NN that uses one or two time series to predict the value of another one, using history. For example, in the next graph : Blue is the input Orange is the predicted output Green is the expected (real) output I already build a LSTM NN ( tensorflow in python) with these layers : LSTM Dropout Dense Dropout Dense I made a small loop that help me to detect best hyper-parameters (batch and buffer size, percentage of dropout,... event history) using sklearn 's ParameterSampler . I'm also using RMSprop (default value) as optimizer. I was wondering if there is a way to know if my NN is adapted to my case: Is the layer's composition and organization correct ? Should I use something else ? GRU, NTM, etc. Is there a better optimizer for my case ?
