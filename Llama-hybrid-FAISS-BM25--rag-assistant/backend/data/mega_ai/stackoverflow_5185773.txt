[site]: stackoverflow
[post_id]: 5185773
[parent_id]: 
[tags]: 
why its not safe to return value on function stack

I came across the following paragraph while reading bruce eckel..where he was trying to explain why its not safe for function to return value on stack Now imagine what would happen if an ordinary function tried to return values on the stack .you can,t touch any part of the stack that's above the return address,so the function would have to push the values below the return address. But when the assembly language return is executed ,the stack pointer must be pointing to the return address(or right below it depending on your machine),so right before the RETURN ,function must move the stack pointer up,thus clearing of all the local variables .If you are trying to return values on the stack below the return address, you become vulnerable at the moment because an interrupt could come along.The ISR would come the stack pointer down to hold its return address and its local variables and overwrite your return value would you like to help me for comprehend the bold italic text?
