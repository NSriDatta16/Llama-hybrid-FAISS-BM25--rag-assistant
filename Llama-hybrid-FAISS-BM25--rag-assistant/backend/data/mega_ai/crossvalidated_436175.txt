[site]: crossvalidated
[post_id]: 436175
[parent_id]: 436085
[tags]: 
A node is a (usually non-linear) function that combines the input. The entirety of the neural network is an additive model of nodes that in turn are connected to either the next hidden layer, or the output layer. Training learns the weight of connections: How different combinations of the input relate to the output. From my understanding, the NN is now trained to put out 8. This is where your confusion arises. The networks has learned neither to output $8$ , nor $3$ , but instead how to combine the input such that the predicted output is close to the actual recorded output. $^\dagger$ I may be reading too much into your question, but it also seems you might be confused about what the input is: It is possible for the input to be the same as the output (this is the case for autoencoders ), but more generally, you have a completely different input (e.g. images of animals) used to learn the output (e.g. the type of animal). $\dagger$ : I say close because we do not want to learn how the input relates output of the sample , but rather how the input of any sample from this population relates to the outcome of any sample from this population. If it would predict exactly the recorded output in the sample (e.g. $8$ and $3$ ), the problem is either very simple, or it is overfitting .
