[site]: stackoverflow
[post_id]: 1341318
[parent_id]: 1341271
[tags]: 
Try this: arr = [5, 6, 7, 8] arr.inject{ |sum, el| sum + el }.to_f / arr.size => 6.5 Note the .to_f , which you'll want for avoiding any problems from integer division. You can also do: arr = [5, 6, 7, 8] arr.inject(0.0) { |sum, el| sum + el } / arr.size => 6.5 You can define it as part of Array as another commenter has suggested, but you need to avoid integer division or your results will be wrong. Also, this isn't generally applicable to every possible element type (obviously, an average only makes sense for things that can be averaged). But if you want to go that route, use this: class Array def sum inject(0.0) { |result, el| result + el } end def mean sum / size end end If you haven't seen inject before, it's not as magical as it might appear. It iterates over each element and then applies an accumulator value to it. The accumulator is then handed to the next element. In this case, our accumulator is simply an integer that reflects the sum of all the previous elements. Edit: Commenter Dave Ray proposed a nice improvement. Edit: Commenter Glenn Jackman's proposal, using arr.inject(:+).to_f , is nice too but perhaps a bit too clever if you don't know what's going on. The :+ is a symbol; when passed to inject, it applies the method named by the symbol (in this case, the addition operation) to each element against the accumulator value.
