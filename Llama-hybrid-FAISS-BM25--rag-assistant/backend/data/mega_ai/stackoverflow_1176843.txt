[site]: stackoverflow
[post_id]: 1176843
[parent_id]: 1106309
[tags]: 
As John Fisher pointed out already you are looking for Registration-Free COM Interop . There are plenty of questions already regarding this, look for the 'tag at hand' regfreecom and the closely related tag sxs too. You'll easily see, however, that this can be a tricky arena, in particular: There appears to be a confirmed bug affecting this on Windows XP, see here for details. A hotfix is available already though, which might be sufficient as long as you are targeting a controlled environment only, e.g. your build machine. Since you are targeting ASP.NET you should be aware that in contrast to e.g. a desktop application this implies you are not in control of the hosting process, which may vary depending on the deployment platform. This means it won't be easy to supply the required application manifest to control the runtime binding and activation of your COM component within the host (see next point for a potential alternative). ASP.NET 2.0 seems to complicate things even more by dropping side by side functionality for unmanaged components. I haven't found an official source for this but the author of Isolating ASP .Net 2.0 Applications seems to be in the know; he is offering a workaround at least, which looks complicated and potentially fragile though. Summarizing this I'd like to stress that 'Registration-Free COM Interop' can be very helpful and ease many scenarios a lot. Still it may not make things easier or even be possible at all for your particular scenario and environment (hosted ASP.NET). Good luck, please let us know whether you succeeded!
