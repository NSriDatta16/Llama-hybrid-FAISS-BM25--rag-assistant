[site]: stackoverflow
[post_id]: 2606471
[parent_id]: 2604597
[tags]: 
is there a more elegant way? Yes, in ECMAScript Fifth Edition: setTimeout(this.updateTime.bind(this), 1000); However, until all browsers support Fifth Edition (which they don't yet by a long measure), you should add your own implementation of Function.bind as fallback. eg.: // Add ECMA262-5 method binding if not supported natively // if (!('bind' in Function.prototype)) { Function.prototype.bind= function(owner) { var that= this; if (arguments.length You might also prefer to use setInterval to avoid the repeated setTimeout calls. Finally, you should remember to declare all your variables ( timeEnd , diff , etc.) as var , otherwise you're getting accidental globals, which can cause you horrible debugging heartache.
