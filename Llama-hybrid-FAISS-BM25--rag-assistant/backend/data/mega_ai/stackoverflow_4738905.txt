[site]: stackoverflow
[post_id]: 4738905
[parent_id]: 4738348
[tags]: 
I think that would work. I would like to add as answer, how I'm using java.net.URI class get information from that URI. class Demo { public static void main( String ... args ) throws Exception { System.out.println( inspect( new URI("smtp://user:port@host:25"))); } // invoke all the getXyz methods on object and construct // a string with the result. private static String inspect( Object o ) throws Exception { StringBuilder builder = new StringBuilder(); for( Method m : o.getClass().getMethods() ) { String name = m.getName(); if( name.startsWith("get")) { builder.append( name ) .append(" = " ) .append( m.invoke( o ) ) .append( "\n" ); } } return builder.toString(); } } Output getAuthority = user:port@host:25 getFragment = null getPath = getQuery = null getScheme = smtp getHost = host getPort = 25 getUserInfo = user:port getRawAuthority = user:port@host:25 getRawFragment = null getRawPath = getRawQuery = null getRawSchemeSpecificPart = //user:port@host:25 getRawUserInfo = user:port getSchemeSpecificPart = //user:port@host:25 getClass = class java.net.URI
