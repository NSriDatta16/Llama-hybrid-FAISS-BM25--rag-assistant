[site]: datascience
[post_id]: 26309
[parent_id]: 26307
[tags]: 
I haven't attempted this, but I'm pretty sure it would work reasonably well. Identify all points that are connected to more than two lines. We know these must be vertex points. For for all the points that are attached to only one line, identify their nearest neighbor and draw a line between them (this would connect that hole on the right wall of your house). All points should now be either labeled as a vertex or touching only two lines. For each point touching two lines, calculate the angle between the two lines. Find the min and max of these angles. Use these as prototypes to classify angles into two proximity clusters using agglomerative clustering. Alternatively, pick a fixed angle value as your threshold (maybe around 120 degrees) and use that as the decision boundary for this classification. The angles that clustered with the min correspond to the missing vertices. Infer the vertex-vertex connectivity graph through the non-vertex points.(i.e. find all paths between pairs of vertices that do not pass through a third vertex). Draw the graph. Find the cycle's in the graph and color each one separately. Everything doesn't have to be a big fancy neural network :)
