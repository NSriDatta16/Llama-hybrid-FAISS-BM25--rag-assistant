[site]: stackoverflow
[post_id]: 796076
[parent_id]: 
[tags]: 
NHibernate Projection to DTO

I am unfamiliar with NHibernate projection. I am attempting to use it so I can return a List<> rather that an IList<>. I am not having much luck with projecting to the DTO as of yet. I have the following query and Domain objects. So to begin I am just trying to get a list of Orders given an EmployeeID. I am looping through the resulting list and adding it to a List because I wish to be able to serialize this list. Can anyone tell me how far off I am with the Projection? I have searched and found some examples that are not similar to my own. Basically.. I just want to create a List of of the DTOs. Thanks! public List GetEmployessOrdersDTO(int empid) { var emporders = new List (); ICriteria criteriaSelect = NHibernateSessionManager.Instance.GetSession().CreateCriteria(typeof (Orders)) .CreateCriteria("Employees") .Add(Expression.Eq("EmployeeID", empid)); criteriaSelect.SetProjection( Projections.ProjectionList() .Add(Projections.Property("Products"), "OrderedProducts")); criteriaSelect.SetResultTransformer(NHibernate.Transform.Transformers.AliasToBean(typeof(EmployeeOrder))); criteriaSelect.List (); foreach (var order in emporders) { emporders.Add(order); } return emporders; } Orders: public class Orders { public virtual int OrderID { get; private set;} public virtual string CustomerID { get; set; } public virtual DateTime OrderDate { get; set; } public virtual DateTime RequiredDate { get; set; } public virtual DateTime ShippedDate { get; set; } public virtual Employees Employee { get; set; } public virtual IList Products { get; private set; } } Employees: public class Employees { public virtual int EmployeeID { get; private set;} public virtual string LastName { get; set;} public virtual string FirstName { get; set;} public virtual string City { get; set; } public virtual DateTime HireDate { get; set; } public virtual string Title { get; set; } public virtual IList Orders { get; private set; } } EmployeeOrderDTO: public class EmployeeOrder { public virtual string EmployeeName { get; set; } public virtual string EmployeeTitle { get; set; } public virtual DateTime RequiredDate { get; set; } public virtual List OrderedProducts { get; set; } }
