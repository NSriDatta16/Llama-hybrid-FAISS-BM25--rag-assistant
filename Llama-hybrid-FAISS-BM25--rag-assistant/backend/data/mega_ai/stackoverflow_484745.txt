[site]: stackoverflow
[post_id]: 484745
[parent_id]: 481879
[tags]: 
A major difference between MySQL and almost every other database out there, with the exception of SQLite, is that MySQL only knows one kind of join -- a nested loop. This is ok for the kind of OLTP, bare-bones workload MySQL was ostensibly designed for (the same design principles led to not implementing features like triggers, views, and subqueries for a while), but it's deadly for major OLAP work. Don't take my word for it, read Peter Zaitsev: http://peter-zaitsev.livejournal.com/758.html . It is also horribly slow on subqueries, which it learned to do just recently. Small steps, I suppose.. Oracle is very advanced, has a lot of features, and a lot of them cost extra money. It's a bear to set up and support; but if you can afford the DBAs and the maintenance, it performs very well. Did I mention cost and maintenance? Just thought I'd repeat that. Nothing but respect for the Oracle engineers, though, they have built some awesome stuff. One place where Oracle fails (as do most others) is multi-terabyte workloads. For that, you want to go to specialists like Teradata (best in class, extremely expensive), Greenplum, AsterData, Netezza, and others. I've heard nothing but good things about SQL Server -- except the fact that it runs only on Windows. MySQL is easy to set up, fast for OLTP, and generally takes the approach of doing few things, and doing them well. PostgreSQL is kind of the opposite -- it's a database researcher's favorite playground, which means it has a dozen different join strategies, storage engines, advanced optional packages, and all kinds of stuff. It's slower than MySQL when doing things MySQL does well, and blows it out of the water when doing things MySQL just doesn't know how to do (see above, with hash joins). DB2 is supposed to be good; no personal experience. It better be good, with all those people at Almaden.. Same with Sybase.
