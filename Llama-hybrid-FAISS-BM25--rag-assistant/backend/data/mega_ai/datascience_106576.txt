[site]: datascience
[post_id]: 106576
[parent_id]: 
[tags]: 
Naive Bayes ValueError: Dimension Mismatch

I am attempting to make predictions of categories of text data, one of which is Naive Bayes. The training data contains 7 categories, 802 data points. After balancing with SMOTE all 7 categories now have 134 data points for a total of 938. Training Data: df_train['Categories'].value_counts() Category 1 134 Category 2 130 Category 3 128 Category 4 106 Category 5 103 Category 6 101 Category 7 100 X = df_train['Element'] y = df_train['Categories'] count_vect = CountVectorizer(ngram_range=(1,2)) X_vect = count_vect.fit_transform(X) print(X_vect.shape) X_res, y_res = sm.fit_resample(X_vect, y) print(X_res.shape) (802, 747) (938, 747) My test data to be predicted upon contains 46 text elements that vectorizes into 280 features. df_test_bagofwords = count_vect.transform(df_test['Elements']) print(df_test_bagofwords.shape) (46, 280) mnb = MultinomialNB().fit(X_res, y_res) mnb_pred = mnb.predict(df_test_bagofwords) ValueError: dimension mismatch When attempting the same with SVM I get further information: ValueError: X.shape[1] = 280 should be equal to 747, the number of features at training time I thought count_vect.transform() would fit the test data to the vectorized and fitted training data. But this error is consistent.
