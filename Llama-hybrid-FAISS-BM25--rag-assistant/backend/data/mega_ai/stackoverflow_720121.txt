[site]: stackoverflow
[post_id]: 720121
[parent_id]: 719588
[tags]: 
An ID uniquely identifies an element within the entire document, whereas a class name is like a 'tag' - many tags can be added to an element, and the tags can be re-used. Here's a comparison list: You can add multiple class names to an element separated by spaces, but you can only add a single ID. You can re-use a class name on multiple elements, but can use an ID only once within an entire document. An ID can be used as a fragment identifier on the URL, and the browser will scroll to that ID. For example, http://example.com/mypage.htm #someid . It is not possible to do this with classes. An ID makes it much easy and efficient to find a particular element in Javascript. For example, document.getElementById('someid') (or $("#someid") in jQuery). Note that libraries like jQuery make it possible to find elements by their class name too, but it's not nearly as efficient. Other properties of IDs It is possible for an element to contain both an ID and a number of class names, and it doesn't matter, or mean anything, if the ID is the same as one of the class names. Frames, iframes and traditional popup windows count as separate documents, so it is possible to use the same ID on elements within these different windows. Some browsers do not follow the specification properly, and allow for the same ID to be used multiple times, and for it to behave in some ways like a class name but still kind-of work in document.getElementById() . For instance, a CSS selector based on that ID may match multiple elements as if it were a class. This is a really messy situation and you should never rely on it. I'd be happy if browsers stopped trying to support this.
