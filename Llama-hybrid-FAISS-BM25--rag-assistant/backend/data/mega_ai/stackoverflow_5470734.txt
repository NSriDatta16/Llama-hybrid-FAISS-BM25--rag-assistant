[site]: stackoverflow
[post_id]: 5470734
[parent_id]: 5469216
[tags]: 
You can use setViewControllers:animated: to modify the controller stack, but I'd encourage you to reconsider whether you really want your login view controller to be the root of your navigation stack. When users see a navigation controller, they expect to be navigating up and down a hierarchy of screens organized in a tree structure. Changing the root of that tree undermines the metaphor somewhat. Consider using modal presentation to communicate the the fact that the login experience falls outside of your app's main hierarchical navigation structure. Here are a couple options: A. Start on login view controller, and present the navigation controller modally. If your login view controller is always going to be the first screen the user sees, you could add its view directly to the window without the navigation controller. Then once the user logs in, create the navigation controller and present it by calling presentModalViewController:animated: from your login view controller. B. Initialize the navigation controller with its true root, and present the login view controller modally. This option may be worth considering if the login prompt isn't always the first view the user sees, especially if the login prompt can pop up in other contexts. For example, I used this approach in an app that allows the user to access some sections while offline or anonymous. The login prompt gets presented modally when the user tries to access content requiring authentication.
