[site]: crossvalidated
[post_id]: 495704
[parent_id]: 
[tags]: 
Maximum likelihood estimation of a discrete parameter for a continuous unknown distributions

I have access to a black-box sampler (a neural network trained by someone else). The sampler takes as an input a discrete $m \in \{1,2,\dotsc,10\}$ and produces a continuous $5$ -dimensional random $Q \in \mathbb R^5$ drawn from $P(Q; m)$ . I don't know much about $P(Q; m)$ , but it seems to be a "good" continuous distribution for each value of $m$ . By executing the sampler with different inputs many times, I can generate a sample $(m_1, q_1), \dotsc, (m_n, q_n)$ , where each $q_i$ is drawn (by the aforementioned black-box sampler) from $P(Q; m_i)$ . I can control how $m_i$ 's are generated (in particular, make them uniform over $\{1,2,\dotsc,10\})$ . From this sample, I would like to construct a maximum likelihood estimator (MLE) for the parameter $m$ so that I can further produce estimates $\hat m$ from $Q$ . How to do that? I have two initial ideas, feel free to comment on them. Approximate $Q$ by a discrete variable. In particular, split $\mathbb R^5$ into non-overlapping $k$ regions $\mathbb R^5 = V_1 \cup V_2 \cup \dotsb \cup V_k$ and transform the sample $(m_i, q_i)$ into the sample $(m_i, j_i)$ such that $q_i \in V_{j_i}$ (i.e., register which of the regions $Q$ belongs to). Then estimate probabilities $P(Q \in V_j | m)$ and construct MLE via arg max decision rule. (I.e., for each new $Q$ , I check which region it belongs to, and output $\hat m$ that maximises the likelihood of getting into the region.) Assume that $P(Q;m)$ can be approximated well enough by some rich parametric distribution and then use MLE of the parameters of the distribution. In case 1, I am afraid of dimensionality curse, i.e., that I will need a very large $k$ and therefore prohibitevely large size of the sample, $n$ . In case 2, I am not sure which parametric distribution to use so that it is a) rich enough to approximate $P(Q;m)$ well, and b) relatively easy to estimate its parameters.
