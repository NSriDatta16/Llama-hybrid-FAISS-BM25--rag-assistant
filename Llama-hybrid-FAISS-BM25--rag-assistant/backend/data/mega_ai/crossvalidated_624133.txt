[site]: crossvalidated
[post_id]: 624133
[parent_id]: 624064
[tags]: 
Another approach is Bayesian canonical polyadic decomposition (BCPD), which is generally considered to be an exploratory method. You would start with the notion that your data array $\mathcal{A}$ can be decomposed as a linear combination of tensor products: $\mathcal{A} = \sum_{k=1}^r \lambda_k \bigotimes_{j=1}^h \vec X_{k,j}$ See Tamara G. Kolda: "Tensor Decomposition" for a (non-Bayesian) explanation of canonical polyadic decomposition and some of the visualization techniques. For a Bayesian version of those decomposition plots you can either plot the MAP values or make a contour or surface plot of the posterior. For a more detailed review of tensor decomposition, I suggest the landmark paper Kolda & Bader 2009 . The gist of CPD is signal separation according to different combinations of levels of factors. Why I like BCPD is for encoding background information and imputing missing values. Offhand I don't know of a package that does this, especially with customizable priors. But it can be readily built using probabilistic programming packages (PyMC, Stan, etc). At some point I should package my own code to share.
