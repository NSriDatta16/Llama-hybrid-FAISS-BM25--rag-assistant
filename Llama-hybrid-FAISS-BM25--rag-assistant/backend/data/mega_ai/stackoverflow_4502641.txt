[site]: stackoverflow
[post_id]: 4502641
[parent_id]: 4499808
[tags]: 
You can use the regex strings themselves as the 'serialized' regex - just save those to a file, then when you want to reconstitute the regex objects, just pass the saved strings to the regex constructor. The only drawbacks I can think of: it might take some more time to 'reconstitute' the regex database, but I really don't know how much (I suspect that the time would be dominated by I/O anyway, so I'm not sure if the difference would be significant - I really don't know how much overhead there is in regex compilation by the boost library's implementation) if you want the stored regexes obfuscated, you'll have to do that yourself instead of relying on the compiled-binary state to be unreadable The advantages to this are: it's 100% supported, so it's not fragile/brittle it's portable across compiler versions and platforms (ie., not fragile/brittle) Is the time to compile the regex database (excluding I/O) really significant enough to warrant trying to save the compiled state?
