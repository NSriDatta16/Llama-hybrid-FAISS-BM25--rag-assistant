[site]: stackoverflow
[post_id]: 4939141
[parent_id]: 4924917
[tags]: 
I too had a problem with RPy2, and I never actually got it to work - after days and days of trying all different sorts of solutions. I encourage you to try all of the great ideas people are telling you, and I'm interested to see if any of them work! If you fail as I did, you may be able to use a workaround in the following way depending on your purposes: Write R code with all of the functions you would like to use which also calls the libraries you want to use. Put all of these functions and library calls into one file (temp.r). For example, maybe my file looks like CurrentYear Use python to prompt for user input to do function calls. I did this with a GUI, you can probably just do it with script in the terminal. Use python to create a string with the R function calls. For example, we might have stuff = '\nCurrentYear("%(birth.year)d", "%(age)d")\n' %vars() where birth.year and age have been input by the user in the python program. Add stuff to the end of temp.r using python: # Creates a copy of temp.r, so as not to disturb its contents for future use. tocall = copyfile("C:\My Documents\temp.r", "C:\My Documents\tocall.r") # Open the copy with the intent to append it (hence the "a") inp = open("C:\tocall.r", "a") # Adds the function call to the R script inp.write(stuff) inp.close() # Navigate to the correct directory, use "Rscript" to # run the code in the shell dostuff = call('cd C:\My Documents &Rscript temp.r', shell = True) Profit I'm not sure what the disadvantages of this method are, but it works for me. Hope this helps if you fail with the whole RPy2 thing!
