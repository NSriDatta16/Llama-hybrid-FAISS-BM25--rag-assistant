[site]: stackoverflow
[post_id]: 5453793
[parent_id]: 5453776
[tags]: 
It is information sent by the client. It's usually set as the page from which you clicked the link on. It also can absolutely can be spoofed. You can do it yourself by setting the HEADER in a PHP cURL request. curl_setopt( $ch, CURLOPT_HTTPHEADER, array( 'Host: www.google.com', 'Referer: http://google.com/', 'FaKeHEADER: ThisIsFakeButItWillBeSentAnyways')); The receiving server will see those in the header, even though it was never sent from google.com. You can also spoof everything else you would see in the Header (user agents, cookies, etc). You're gonna have a difficult time detecting spoofed headers unless you know exactly what each one should look like from each source. Best thing you can do is work with IPs and limit the Header types you accept (for example, if a page can only use GET requests, reject all POST requests). Even then if someone wants to spoof you, chances are they will and you won't know it. If you are trying to secure a connection between 2 sites of your's, you should be limiting the connection with more than just a Header, that's not secure at all. Edit: You can even send really fake headers. I updated the example to show what I mean. Some sites use custom(like the fake one) headers to pass authentication around.
