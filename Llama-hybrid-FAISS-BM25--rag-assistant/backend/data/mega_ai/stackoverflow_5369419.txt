[site]: stackoverflow
[post_id]: 5369419
[parent_id]: 
[tags]: 
Moving controls in a gridpanel with Delphi

In a previous question here I asked about drag n drop within the gridpanel. Drag N Drop controls in a GridPanel The question I have next is that I am having weird behavior whenever I try to move controls diagonally when they are near other controls. Controls that not suppose to move are shifting cells. Up and down, sideways it is fine. But diagonal moves, when the moved cell contents are on the same row/column with other cells which hold controls will cause unexpected shifts. I have tried beginupdate/endupdate the shifts still happen. There is a LOCK function for the gridpanel but lock anything. It happens when the drop is on an empty cell, and even cells that already have contents. here is the test project (Delphi 2010 w/o exe) http://www.mediafire.com/?xmrgm7ydhygfw2r type TForm1 = class(TForm) GridPanel1: TGridPanel; btn1: TButton; btn3: TButton; btn2: TButton; lbl1: TLabel; procedure FormCreate(Sender: TObject); private { Private declarations } procedure GridPanelDragDrop(Sender, Source: TObject; X, Y: Integer); procedure btnDragOver(Sender, Source: TObject; X, Y: Integer; State: TDragState; var Accept: Boolean); procedure btnDragDrop(Sender, Source: TObject; X, Y: Integer); public { Public declarations } end; var Form1: TForm1; implementation {$R *.dfm} procedure SetColumnWidths(aGridPanel: TGridPanel); var i,pct: Integer; begin aGridPanel.ColumnCollection.BeginUpdate; pct:=Round(aGridPanel.ColumnCollection.Count/100); for i := 0 to aGridPanel.ColumnCollection.Count - 1 do begin aGridPanel.ColumnCollection[i].SizeStyle := ssPercent; aGridPanel.ColumnCollection[i].Value := pct; end; aGridPanel.ColumnCollection.EndUpdate; end; procedure SetRowWidths(aGridPanel: TGridPanel); var i,pct: Integer; begin aGridPanel.RowCollection.BeginUpdate; pct:=Round(aGridPanel.RowCollection.Count/100); for i := 0 to aGridPanel.RowCollection.Count - 1 do begin aGridPanel.RowCollection[i].SizeStyle := ssPercent; aGridPanel.RowCollection[i].Value := pct; end; aGridPanel.RowCollection.EndUpdate; end; procedure TForm1.FormCreate(Sender: TObject); begin btn1.OnDragOver := btnDragOver; btn2.OnDragOver := btnDragOver; btn3.OnDragOver := btnDragOver; GridPanel1.OnDragOver := btnDragOver; GridPanel1.OnDragDrop := GridPanelDragDrop; btn1.OnDragDrop := btnDragDrop; btn2.OnDragDrop := btnDragDrop; btn3.OnDragDrop := btnDragDrop; SetColumnWidths(GridPanel1); SetRowWidths(GridPanel1); end; procedure TForm1.btnDragOver(Sender, Source: TObject; X, Y: Integer; State: TDragState; var Accept: Boolean); begin Accept := (Source is TButton); end; procedure TForm1.btnDragDrop(Sender, Source: TObject; X, Y: Integer); var src_x,src_y, dest_x, dest_y: Integer; btnNameSrc,btnNameDest: string; src_ctrlindex,dest_ctrlindex:integer; begin if Source IS tBUTTON then begin //GridPanel1.ColumnCollection.BeginUpdate; btnNameSrc := (Source as TButton).Name; btnNameDest := (Sender as TButton).Name; src_ctrlindex := GridPanel1.ControlCollection.IndexOf(Source as tbutton); src_x := GridPanel1.ControlCollection.Items[src_ctrlindex].Column; src_y := GridPanel1.ControlCollection.Items[src_ctrlindex].Row; dest_ctrlindex := GridPanel1.ControlCollection.IndexOf(Sender as tbutton); dest_x := GridPanel1.ControlCollection.Items[dest_ctrlindex].Column; dest_y := GridPanel1.ControlCollection.Items[dest_ctrlindex].Row; GridPanel1.ControlCollection[src_ctrlindex].Column := dest_x; GridPanel1.ControlCollection[src_ctrlindex].Row := dest_y; //GridPanel1.ColumnCollection.EndUpdate; lbl1.Caption := Format('"%s" from cell %d:%d to Cell %s=%d:%d', [btnNameSrc,src_x,src_y,btnNameDest,dest_x,dest_y]); end; end; procedure TForm1.GridPanelDragDrop(Sender, Source: TObject; X, Y: Integer); var DropPoint: TPoint; CellRect: TRect; i_col, i_row, src_x,src_y, dest_x, dest_y: Integer; btnNameSrc,btnNameDest: string; src_ctrlindex:integer; begin if Source is tbutton then begin btnNameSrc := (Source as TButton).Name; btnNameDest := ''; src_ctrlindex := GridPanel1.ControlCollection.IndexOf(Source as tbutton); src_x := GridPanel1.ControlCollection.Items[src_ctrlindex].Column; src_y := GridPanel1.ControlCollection.Items[src_ctrlindex].Row; DropPoint := Point(X, Y); for i_col := 0 to GridPanel1.ColumnCollection.Count-1 do for i_row := 0 to GridPanel1.RowCollection.Count-1 do begin CellRect := GridPanel1.CellRect[i_col, i_row]; if PtInRect(CellRect, DropPoint) then begin // Button was dropped over Cell[i_col, i_row] dest_x := i_col; dest_y := i_row; Break; end; end; lbl1.Caption := Format('"%s" from cell %d:%d to Cell %s=%d:%d', [btnNameSrc,src_x,src_y,btnNameDest,dest_x,dest_y]); GridPanel1.ControlCollection[src_ctrlindex].Column := dest_x; GridPanel1.ControlCollection[src_ctrlindex].Row := dest_y; end; end;
