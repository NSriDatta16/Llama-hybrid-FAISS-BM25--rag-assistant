[site]: crossvalidated
[post_id]: 410578
[parent_id]: 
[tags]: 
Predict periodic event with multiple guesses and re-alignment

Suppose there's a metronome set to 60 bpm . Without hearing or looking at the metronome, we need to predict when it ticks. A prediction is considered correct if it is sufficiently close to the actual tick with some small absolute tolerance $\epsilon$ . When no prediction has been within the tolerance $\epsilon$ of a tick for 5 consecutive ticks, the metronome will stop until it is aligned with our next prediction and then it starts again. There are no direct penalties for false positives : predicting a tick that never occurred. What we are looking for is avoiding consecutive false negatives : failing to predict an actual tick. We can make as many predictions as we want, but have to wait $w$ seconds, where $\epsilon \lt w$ , between each prediction. To make things interesting, the metronome is slightly faulty and its true speed is perturbed by noise: $speed = 60bpm + \mathcal{N}(0, \sigma^2)$ where $\sigma^2$ is unknown. Now the goal is to make all predictions before the metronome starts and make as few consecutive errors as possible over a period of time $T=1000s$ . As such, predicting every other tick correctly is better than correctly predicting the first 800 ticks but missing the remaining 200. We cannot observe the results when the experiment has started but we can observe the results after $T=1000s$ and make new predictions on another run. What's a good way to model this? And how can it be optimized? Can we make any guarantees on how many consecutive ticks we will miss at most? Edit for clarification: The numbers are made up so I'm looking for a solution that does not depend on these exact realizations. My na√Øve solution would be to: Linearly space out predictions at $\mathop{\mathbb{E}}[speed] = 60bpm$ and perturb them independently with some noise $\eta$ . Squeeze in as many ticks as possible between predictions in 1). Optimize $\eta$ using MCMC. Questions answered: What do you get to observe about the metronome? We can observe the results after $T=1000$ but not when the metronome is running. Are you informed when your predictions are sufficiently close? Only after the metronome has finished, eg at $T=1000$ . Are you informed when it stops and starts? Only after the metronome has finished, eg at $T=1000$ . How is a "false negative" defined? By false negative I mean not predicting an actual tick. Do you know the metronome's rate or not? We know the expected $rate=60bpm$ but it's faulty and might be a little faster or little slower. If you must "make all predictions before [it] starts," how could you learn anything or have any basis to make those predictions? Good question. It would be interesting to know if there's an optimal way to place the predictions given we know the rate but not the variance in the error for a one-shot experiment. However, let's instead assume we can collect observations after the metronome stops and we can start over again with the same faulty metronome. How can no penalties for false negatives be consistent with the goal to "make as few consecutive errors as possible"? There are no penalties for false positives, eg we predicted a tick that never occurred. We only care about missing an actual tick. How many "consecutive errors" would four in a row be--two or four? Four *Is failing to predict a tick an "error"? Yes. This is what we want to avoid.
