[site]: stackoverflow
[post_id]: 1445866
[parent_id]: 
[tags]: 
MVC - Linq - Populate List with Records in Another Table

I'm prototyping my first MVC application, it's a simple forum. I've done part of the domain model and I'm trying to figure out how to do something that's pretty basic in SQL alone, but I can't figure it out in my application. Here are my Entities: [Table(Name="Users")] public class User { [Column(IsPrimaryKey=true, IsDbGenerated=true, AutoSync=AutoSync.OnInsert)] public int Id { get; set; } [Column] public string Username { get; set; } [Column] public string Password { get; set; } [Column] public string PasswordHash { get; set; } [Column] public string PasswordSalt { get; set; } [Column] public string FirstName { get; set; } [Column] public string LastName { get; set; } public List AllowedForums { get; set; } [Column] public DateTime LastLogin { get; set; } [Column] public DateTime MemberSince { get; set; } } [Table(Name="Forums")] public class Forum { [Column(IsPrimaryKey=true, IsDbGenerated=true, AutoSync=AutoSync.OnInsert)] public int Id { get; set; } [Column] public int ParentId { get; set; } [Column] public string Title { get; set; } [Column] public string Description { get; set; } [Column] public bool IsGlobal { get; set; } [Column] public int DisplayOrder { get; set; } } I also have a linking table called AllowedForums that looks like: userid forumid 1 4 In order to select the forums that a user is allowed to view and forums where IsGlobal == true I'd do this in SQL: SELECT * FROM Forums LEFT OUTER JOIN AllowedForums ON Forums.id = AllowedForums.Forumid WHERE AllowedForums.Userid = 1 OR Forums.IsGlobal = 1 How should I populate the public List AllowedForums field using C#/Linq to SQL? Should AllowedForum be a value object with its own table mapping? That seems like overkill but I could easily join on it. I looked briefly at EntitySet but the simple example I saw didn't seem to fit. It feels like there should be an elegant way to get a collection of Forum objects for each User, but I can't come up with any. BTW, I'm new to C# & OO. I should also mention that since these are the early stages of the app, I'm open to changing the structure/relationships of the entities or tables if there's a better approach I'm not seeing.
