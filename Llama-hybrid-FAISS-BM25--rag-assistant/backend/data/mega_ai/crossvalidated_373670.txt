[site]: crossvalidated
[post_id]: 373670
[parent_id]: 373648
[tags]: 
Here is a simulation in R that I did using a the average of $n = 20$ observations, where $\lambda = 5.$ The parameter par is $P(X = 1) = \lambda e^{-\lambda}.$ The estimate par.fcn , which tries to estimate $P(X = 1)$ merely as a function of the average, is biased. My version of your UMVUE for $P(X=1)$ using a function of average a (instead of total) seems to work OK. set.seed(2018); m = 10^5; n = 20; lam=5; par=dpois(1, lam) x = rpois(m*n, lam); MAT=matrix(x, nrow=m) # each row a sample of size 20 a = rowMeans(MAT) lam.umvue = a; lam; mean(lam.umvue); sd(lam.umvue) [1] 5 # exact lambda [1] 5.000788 # mean est of lambda [1] 0.4989791 # aprx SD of est par.fcn = exp(-lam.umvue)*lam.umvue; par; mean(par.fcn); sd(par.fcn) [1] 0.03368973 # exact P(X=1) [1] 0.03620296 # slightly biased [1] 0.01444379 sqrt(mean((par.fcn - par)^2)) [1] 0.01466074 # aprx root mean square error (rmse) of par.fun par.umvue = a*(1-1/n)^(n*a - 1); par; mean(par.umvue); sd(par.umvue) [1] 0.03368973 # exact P(X=1) [1] 0.03365454 # mean est of P(X=1), seems unbiased [1] 0.01388531 sqrt(mean((par.umvue - par)^2)) [1] 0.01388528 # aprx rmse of umvue of P(X=1); smaller than rmse of par.fun
