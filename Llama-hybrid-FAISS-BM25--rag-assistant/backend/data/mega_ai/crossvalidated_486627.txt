[site]: crossvalidated
[post_id]: 486627
[parent_id]: 
[tags]: 
ML approach for complex Pattern-finding

I am trying to build a model that can find patterns in data (like seq2seq but for a very specific domain). So I have 2 files- the first one has all the input sequences of the same length and the second one has all the corresponding outputs for the inputs. So the main task is to somehow find patterns between the input and output data. I will probably use embeddings to represent the data (which is alphanumeric in inputs and numeric in outputs) and find the relation between the vectors involved. I have 5 Million data points/sequences for the training and want to use a very deep NN since the pattern is a bit complex. So it is like a mix for text generation and sequence2sequence. In the end, all it does have to is to somehow map an input to output. Now, I wish to use any Deep Learning architecture for this problem, but I cannot find any good ones. RNN 's are not very good for finding patterns and would probably be inefficient, and I don't think LSTM's would be particularly useful. Those architectures find patterns in the placement and occurrence in the data. I would like to find out the mathematical pattern, where the output is always deterministic (so no doing probabilities with softmax). Unlike NMT, they would not change since the pattern remains the same. One thing I do have in mind is for a model to predict the "n" most likely outputs for the inputs, where I can use some code to trial-and-error through the whole outputs list and find the correct output. It is an idea, but I do not think it has been implemented anywhere. So, can someone suggest an architecture which is:- Preferable an already established one and has been used for training on complex data Has a large number of parameters to train on, guaranteeing more complex features absorbed Is very good for pattern finding and able to handle vectorized data (optional) or tokenized sequences (embeddings form appreciated) I have tried to evaluate several such models on the internet but what I think is that a model with "Dense" layers would probably work the best, but am unsure about it. Are there any established models composed of only Dense/Fully Connected layers which I can train on? Also, would appreciate if ML/DL regarding advice be given instead of general algorithms. It would become too cumbersome and complex with standard algos like clustering (T-Sne, PCA, k-means) or function based.... Any help?
