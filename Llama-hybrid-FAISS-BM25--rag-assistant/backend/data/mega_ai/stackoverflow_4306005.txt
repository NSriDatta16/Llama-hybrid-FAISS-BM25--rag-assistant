[site]: stackoverflow
[post_id]: 4306005
[parent_id]: 4305969
[tags]: 
You have to decide how important it is that the information you want to exchange is tied to the executable file itself. Updating the config file during the built is a workable model, but it places the information in a location where it could be altered by anyone with access and a text editor. Updating information after a build in a compiled assembly is certainly possible, but it's fragile and breaks down if you ever decide to sign the assemblies. It's also a lot of work, since there's no built it support for re-writing assembly files in this manner. An alternative you should consider, is creating your own custom assembly-level metadata attributes and assigning them during the build process. You could even place them in a separate code file (or append them to AssemblyInfo.cs) as part of you build. You could also consider creating an embedded resource (an XML file, for instance), and retrieving it from the assembly manifest at runtime. Either of the above approaches would require you to use a pre-build custom step rather than a post-build step. Personally, I find the metadata attributes a convenient approach if there isn't a lot of data. Otherwise, I would consider using an embedded resource file.
