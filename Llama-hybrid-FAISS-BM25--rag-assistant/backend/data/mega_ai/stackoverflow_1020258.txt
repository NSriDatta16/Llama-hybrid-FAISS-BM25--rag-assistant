[site]: stackoverflow
[post_id]: 1020258
[parent_id]: 103439
[tags]: 
LSL's llHTTPRequest function and corresponding http_response event are definitely your best bet. Contrary to the assumption posed in your question, using http does not necessitate using "html forms". The POST (or PUT) payload can contain data organized however you want. A REST interface is a good way to do the kind of machine-to-machine http communication we're talking about. One advantage of REST over html or xml is that REST can be much less verbose. This is important when you start approaching LSL's 2048 character limit on http responses. Though LSL has two other methods of communicating with the rest of the internet (email and xml-rpc), their use in LSL scripts is highly discouraged these days. Both of these systems (as currently implemented in Second Life) rely on centralized servers to route messages to their destinations. This doesn't scale well. These servers are under ever-increasing load as Second Life grows. llHTTPRequest on the other hand runs entirely on the simulator running your script, which means you don't have to worry about missing messages because of overloaded central servers. Finally, there will soon be a new feature added to LSL allowing any script to act as an http server (see http://wiki.secondlife.com/wiki/LSL_http_server ). It's currently (as of June 2009) deployed on the beta grid, but should be on the main grid with the next major update. With this addition, many of the current LSL-to-web programs that regularly poll a web server for updated data will instead be able to have updates pushed to them when they happen.
