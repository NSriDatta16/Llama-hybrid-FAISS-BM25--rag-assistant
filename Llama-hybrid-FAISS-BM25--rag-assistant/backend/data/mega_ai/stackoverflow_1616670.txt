[site]: stackoverflow
[post_id]: 1616670
[parent_id]: 190493
[tags]: 
Folks here have probably also seen in various other blog posts the following approach to "get the movie-player window" -- at index = 1. Though this approach (see snippet below) is also possibly a bit "fragile", it's likely a bit "safer" since it does not make use of any undocumented or non-public methods in MPMoviePlayerController. Note also that you should wait until you get a MPMoviePlayerContentPreloadDidFinishNotification, so that the movie-player window (idx=1) will indeed exist ;-) Note I'm also assigning an arbitrary (integer-valued) view "tag" to myOverlayView here -- so that I can re-use the view when possible, i.e. check if it's already been added to the parent player window. anyhoo, here's the relevant code-snippet: // use slight "hack" to get our (parent) movie-player window, should always (?) be the UIWindow at index = 1 // UIWindow *moviePlayerWindow= [[[UIApplication sharedApplication] windows] objectAtIndex:1]; myOverlayView.center = CGPointMake( moviePlayerWindow.bounds.size.width - (myOverlayView.bounds.size.height / 2) - myOverlayView.display_origin.y, moviePlayerWindow.center.y ); // center our overlay-view myOverlayView.hidden = NO; // and show it if( [moviePlayerWindow viewWithTag: MY_OVERLAY_VIEW_TAG] == nil ) { // haven't added our overlay-view as a sub-view to the main MoviePlayer window yet... so do that now myOverlayView.tag = MY_OVERLAY_VIEW_TAG; [moviePlayerWindow addSubview: myOverlayView]; } [moviePlayerWindow bringSubviewToFront: myOverlayView]; // in any case, bring it to the foreground
