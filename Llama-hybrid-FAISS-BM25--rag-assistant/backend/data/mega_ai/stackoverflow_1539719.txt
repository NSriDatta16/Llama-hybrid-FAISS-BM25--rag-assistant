[site]: stackoverflow
[post_id]: 1539719
[parent_id]: 1534455
[tags]: 
It isn't unpack, but since you have groups of 4 characters, you could use a limited split, with a capture: my ($dir, $name, file, $ext) = grep length, split /(....)/, $filename, 4; This is pretty obfuscated, so I probably wouldn't use it, but the capture in a split is an ofter overlooked ability. So, here's an explanation of what this code does: Step 1. split with capturing parentheses adds the values captured by the pattern to its output stream. The stream contains a mix of fields and delimiters. qw( a 1 b 2 c 3 ) == split /(\d)/, 'a1b2c3'; Step 2. split with 3 args limits how many times the string is split. qw( a b2c3 ) == split /\d/, 'a1b2c3', 2; Step 3. Now, when we use a delimiter pattern that matches pretty much anything /(....)/ , we get a bunch of empty (0 length) strings. I've marked delimiters with D characters, and fields with F : ( '', 'a', '', '1', '', 'b', '', '2' ) == split /(.)/, 'a1b2'; F D F D F D F D Step 4. So if we limit the number of fields to 3 we get: ( '', 'a', '', '1', 'b2' ) == split /(.)/, 'a1b2', 3; F D F D F Step 5. Putting it all together we can do this (I used a .jpeg extension so that the extension would be longer than 4 characters): ( '', 1000, '', 2000, '', 3000, '.jpeg' ) = split /(....)/, '100020003000.jpeg',4; F D F D F D F Step 6. Step 5 is almost perfect, all we need to do is strip out the null strings and we're good: ( 1000, 2000, 3000, '.jpeg' ) = grep length, split /(....)/, '100020003000.jpeg',4; This code works, and it is interesting. But it's not any more compact that any of the other solutions. I haven't bench-marked, but I'd be very surprised if it wins any speed or memory efficiency prizes. But the real issue is that it is too tricky to be good for real code. Using split to capture delimiters (and maybe one final field), while throwing out the field data is just too weird. It's also fragile: if one field changes length the code is broken and has to be rewritten. So, don't actually do this. At least it provided an opportunity to explore some lesser known features of split .
