[site]: stackoverflow
[post_id]: 5064879
[parent_id]: 
[tags]: 
How to download large file with binary mode in python?

I am code a download function in python. The file size >1GB. The server is linux, HTTP server is Karrigell. Client is browse, Firefox or IE. I meet a big trouble. At first, I use sys.stdout() to send file content. file = open(path, 'rb') size = os.path.getsize(path) RESPONSE['Pragma'] = 'public' RESPONSE['Expires'] = '0' RESPONSE['Cache-Control'] = 'must-revalidate, pre-check=0' RESPONSE['Content-Disposition'] = 'attachment; filename="' + os.path.basename(path) + '"' RESPONSE['Content-type'] = "application/octet-stream" RESPONSE['Content-Transfer-Encoding'] = 'binary' RESPONSE['Content-length'] = str(os.path.getsize(path)) sys.stdout.flush() chunk_size = 10000 handle = open(path, "rb") while True: buffer = handle.read(chunk_size) if buffer: STDOUT(buffer) else: break sys.stdout.flush() The problem is the server out of memory! I know, stdout write content to memory first, then memory send to socket. So, I modify the function. Send content to socket directly. I use the py-sendfile module. http://code.google.com/p/py-sendfile/ file = open(path, 'rb') size = os.path.getsize(path) sock = REQUEST_HANDLER.sock sock.sendall("""HTTP/1.1 200 OK\r\nPragma: no-cache\r\nExpires: 0\r\nCache-Control: no-cache, no-store\r\nContent-Disposition: attachment; filename="%s"\r\nContent-Type: application/octet-stream\r\nContent-Length: %u\r\nContent-Range: bytes 0-4096/%u\r\nLocation: "%s"\r\n\r\n""" % (os.path.basename(path), size, size, os.path.basename(path))) offset = 0 nbytes = 4096 while 1: try: sent = sendfile.sendfile(sock.fileno(), file.fileno(), offset, nbytes) except OSError, err: if err.errno in (errno.EAGAIN, errno.EBUSY): # retry continue raise else: if sent == 0: break # done offset += sent This time, the server memory is OK, but browse die! The browse memory rise quickly! Not free until the socket accept whole file content. I don't know how to deal with these problems. I think the second idea is right, send content to socket directly. But why browse can't free memory while accept data?
