[site]: stackoverflow
[post_id]: 2733722
[parent_id]: 2733447
[tags]: 
You should be able to specify the path to the private key in the server element in your settings.xml: The repositories for download and deployment are defined by the repositories and distributionManagement elements of the POM. However, certain settings such as username and password should not be distributed along with the pom.xml. This type of information should exist on the build server in the settings.xml. ... server001 my_login my_password ${user.home}/.ssh/id_dsa some_passphrase 664 775 ... id : This is the ID of the server (not of the user to login as) that matches the id element of the repository/mirror that Maven tries to connect to. username , password : These elements appear as a pair denoting the login and password required to authenticate to this server. privateKey , passphrase : Like the previous two elements, this pair specifies a path to a private key (default is ${user.home}/.ssh/id_dsa) and a passphrase, if required. The passphrase and password elements may be externalized in the future, but for now they must be set plain-text in the settings.xml file. filePermissions , directoryPermissions : When a repository file or directory is created on deployment, these are the permissions to use. The legal values of each is a three digit number corresponding to *nix file permissions, ie. 664, or 775. Note: If you use a private key to login to the server, make sure you omit the element. Otherwise, the key will be ignored. Password Encryption A new feature - server password and passphrase encryption has been added to 2.1.x and 3.0 trunks. See details on this page . Pay a special attention to the "note": If you use a private key to login to the server, make sure you omit the element. Otherwise, the key will be ignored. So the final configuration will be close to: ... ssh-repository your username in the remote system /path/to/your/private/key sUp3rStr0ngP4s5wOrD ... ...
