[site]: stackoverflow
[post_id]: 4343239
[parent_id]: 3581450
[tags]: 
You are right - Doxygen is more of a documentation extraction application than a "commenting standard" per se. It supports many different documentation styles - JavaDoc (with '@' introducing a command), a Doxygen variant (with '\' introducing the same commands), Documentation XML, and many variations on the comment block format that is allowed. It is also able to use the formatting of comments to indicate what content is (e.g. brief descriptions need not be tagged as such, and can be taken from the first sentence or paragraph of the text, etc.) As such, it is highly configurable but allows almost every programmer to have their own style which leads to a nonstandard mess from one project to another, and often between different comments within a single project - even when they are written by a single programmer! The plus side is that as long as the comment stays within the basic style, Doxygen will correctly extract the docs for you and format them all into a consistent external document. The minus side is that although many programmers "use doxygen comments" (which sounds standardised), their comment formats can often be totally dissimilar. One solution (for Visual Studio) that can at least help with this disparity of styles within your own project/team/company is an addin I've written, AtomineerUtils . This helps you to author and update Doxygen, JavaDoc and XML documentation format comments - it auto-generates documentation to save lots of time, and updates comments to keep them in sync with changes to the code. During this process it can reformat the comment to achieve a very consistent and readable style (order the entries in a standard format, enforce blank lines between comments and code and between entries, word-wrap the text in entries, etc). The user can set up templates that control exactly how all of this works, so it's easy to achieve precisely the style you want, but make it consistent across all your projects. This improves consistency a lot when you have more than one programmer working on a body of code. If you are documenting in Visual Studio, I would recommend the XML documentation format. It's not as human-readable as Doxygen/JavaDoc styles can be, but it's used by the IDE to provide live intellisense data on code as you type, and is exported to XML files that any application can easily process, which gives you a lot more flexibility. Doxygen can build docs from this format, so you can stil use the Doxygen tools with XML source comments too.
