[site]: stackoverflow
[post_id]: 354098
[parent_id]: 354019
[tags]: 
I must disagree with this statement in the last paragraph: It seems to me that the having a book base-class, and then two subclasses for publisher and publisher name is the correct choice. Subclasses are used to represent "is-a-kind-of" relationship. (The old tired stereotype is a Fruit class, with Apple and Orange as subclasses.) A more realistic example would be a payroll system with an Employee class, specialized by HourlyEmployee and SalariedEmployee classes. In each case, the subclass represents a specific category within the superclass. In contrast, a publisher is not a kind of book. A better model would be to have a Book class and a Publisher class, with a many-to-one relationship between them (a book has a single publisher, but a publisher may produce multiple books). A book has many potential attributes, such as title, ISBN, publisher, and author; a publisher's potential attributes include business name and address (possibly multiple addresses) and a list of books published. Depending on what you are trying to model, you may also need an Author class, but that's outside the scope of your original question.
