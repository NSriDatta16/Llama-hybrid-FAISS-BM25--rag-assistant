[site]: stackoverflow
[post_id]: 2067837
[parent_id]: 2067824
[tags]: 
If you're dealing with a list, you need only look at the siblings. The list itself with only have li elements, and nothing else, so the following will be sufficient: $(this).siblings().andSelf(); If you're not sure of the nodeName, you could lift that from the first element: var elem = $("#container :first-child"); elem.siblings( elem.prop("nodeName") ).andSelf(); If you find yourself needing to perform this logic over and over, it might be wise to provide a method for yourself by extending jQuery.fn: jQuery.extend( jQuery.fn, { typeSiblings: function(){ return this.siblings( this.prop("nodeName") ); } }); Which permits you to call the new method like any other filter method: $("#container :first-child").typeSiblings().andSelf(); So in this case, whatever type of the first child is, that is the types of siblings we will retrieve. If it's a paragraph, we'll get all paragraphs. If it's an image, we'll get all images. Note however that this is based on the tagname alone, and not the class (though that would be just as easy to accomplish).
