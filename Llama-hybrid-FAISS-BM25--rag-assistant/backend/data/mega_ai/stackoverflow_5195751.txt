[site]: stackoverflow
[post_id]: 5195751
[parent_id]: 5195669
[tags]: 
A diagram will help show how it is organized: Stack layout Local variables (like i in your example) may be on the stack, but it depends on the compiler. A typical stack layout will show the local variables area but, for example, some compilers may use a register for a variable instead. The name myF does not have an address, but the function does. The address will generally be in a separate area of executable code. There is not an 'ending address' - instead a return address is saved by the calling function. When myF reaches the end of the function and is performing any cleanup operations, it will then branch to the return address. This can actually be an issue because there are some exploits which seek to change this return address and cause the code to branch to malicious code to be executed.
