[site]: crossvalidated
[post_id]: 404854
[parent_id]: 403772
[tags]: 
gam1 and gam2 are fine; they are different models, although they are trying to do the same thing, which is model group-specific smooths. The gam1 form y ~ f + s(x, by = f) does this by estimating a separate smoother for each level of f (assuming that f is a standard factor), and indeed, a separate smoothness parameter is estimated for each smooth also. The gam2 form y ~ f + s(x) + s(x, by = f, m = 1) achieves the same aim as gam1 (of modelling the smooth relationship between x and y for each level of f ) but it does so by estimating a global or average smooth effect of x on y (the s(x) term) plus a smooth difference term (the second s(x, by = f, m = 1) term). As the penalty here is on the first derivative ( m = 1 ) for this difference smoother, it is penalising departure from a flat line, which when added to the global or average smooth term ( s(x) ) reflects a deviation from the global or average effect. gam3 form y ~ s(x, by = f) is wrong regardless of how well it may fit in a particular situation. The reason I say it is wrong is that each smooth specified by the s(x, by = f) part is centred about zero because of the sum-to-zero constraint imposed for model identifiability. As such, there is nothing in the model that accounts for the mean of $Y$ in each of the groups defined by f . There is only the overall mean given by the model intercept. This means that smoother, which is centred about zero and which has had the flat basis function removed from the basis expansion of x (as it is confounded with the model intercept) is now responsible for modelling both the difference in the mean of $Y$ for the current group and the overall mean (model intercept), plus the smooth effect of x on $Y$ . None of these models is appropriate for your data however; ignoring, for now, the wrong distribution for the response ( density can't be negative and there is a heterogeneity issue which a non-Gaussian family would fix or address), you haven't taken into account the grouping by flower ( SampleID in your dataset). If your aim is to model Taxon specific curves then a model of the form would be a starting point: m1 where I have added a random effect for SampleID and boosted the size of the basis expansion for the Taxon specific smooths. This model, m1 , models the observations as coming from either a smooth wl effect depending on which species ( Taxon ) the observation comes from (the Taxon parametric term just sets the mean density for each species and is needed as discussed above), plus a random intercept. Taken together, the curves for individual flowers arise from shifted versions of the Taxon specific curves, with the amount of shift given by the random intercept. This model assumes that all individuals have the same shape of smooth as given by the smooth for the particular Taxon that individual flower comes from. Another version of this model is the gam2 form from above but with an added random effect m2 This model fits better but I don't think it is solving the problem at all, see below. One thing I think it does suggest is that the default k is potentially too low for the Taxon specific curves in these models . There is still a lot of residual smooth variation that we're not modelling if you look at the diagnostic plots. This model is more than likely too restrictive for your data; some of the curves in your plot of the individual smooths do not appear to be simply shifted versions of the Taxon average curves. A more complex model would allow for individual-specific smooths too. Such a model can be estimated using the fs or factor-smooth interaction basis . We still want Taxon specific curves but we also want to have a separate smooth for each SampleID , but unlike the by smooths, I would suggest that initially, you want all of those SampleID -specific curves to have the same wiggliness. In the same sense as the random intercept that we included earlier, the fs basis adds a random intercept, but also includes a "random" spline (I use the scare quotes as in a Bayesian interpretation of the GAM, all these models are just variations on random effects). This model is fitted for your data as m3 Note that I have increased k here, in case we need more wiggliness in the Taxon -specific smooths. We still need the Taxon parametric effect for the reasons explained above. That model takes a long time to fit on a single core with gam() â€” bam() will most likely be better at fitting this model as there are a relatively large number of random effects here. If we compare these models with a smoothness parameter selection-corrected version of AIC we see just how dramatically better this latter model, m3 , is compared to the other two even though it uses an order of magnitude more degrees of freedom > AIC(m1, m2, m3) df AIC m1 190.7045 67264.24 m2 192.2335 67099.28 m3 1672.7410 31474.80 If we look at this model's smooths we get a better idea of how it is fitting the data: (Note this was produced using draw(m3) using the draw() function from my gratia package. The colours in the lower-left plot are irrelevant and don't help here.) Each SampleID 's fitted curve is built up from either the intercept or the parametric term TaxonSpeciesB plus one of the two Taxon -specific smooths, depending on to which Taxon each SampleID belongs, plus its own SampleID -specifc smooth. Note that all these models are still wrong as they don't account for the heterogeneity; gamma or Tweedie models with a log link would be my choices to take this further. Something like: m4 But I'm having trouble with this model fitting at the moment, which might indicate it is too complex with multiple smooths of wl included. An alternative form is to use the ordered factor approach, which does an ANOVA-like decomposition on the smooths: Taxon parametric term is retained s(wl) is a smooth that will represent the reference level s(wl, by = Taxon) will have a separate difference smooth for each other level. In your case, you'll have only one of these. This model is fitted like m3 , df but the interpretation is different; the first s(wl) will refer to TaxonA and the smooth implied by s(wl, by = fTaxon) will be a smooth difference between the smooth for TaxonA and that of TaxonB .
