[site]: stackoverflow
[post_id]: 5560711
[parent_id]: 5258803
[tags]: 
We've used AppFabric successfully with the seeding strategy you mention above. We actually do use both solutions: Seed known data where possible (we have a limited set, so this is actually easy for us to figure out) Within each cache access method, make sure to do look-aside as necessary, and populate cache on retrieval from data store. The look-aside is necessary, as items may be evicted due to memory pressure, or simply because they were missed in the seeding operation. We have a "warming" service that pulses on an interval (an hour) and keeps the cache populated with the necessary data. We keep analysis on cache misses, and use that to tweak our warming strategy if we see frequent misses during the warming interval.
