[site]: stackoverflow
[post_id]: 2937894
[parent_id]: 2937818
[tags]: 
At any given point, you have recorded both the total value ax + by + cz + ... = pq and the total weight a + b + c + ... = p . Knowing both then gives you the average value pq/p = q . The problem is that pq and p are large sums that overflow, even though you just want the moderately sized q . The next step adds, for example, a weight of r and a value s . You want to find the new sum (pq + rs) / (p + r) by using only the value of q , which can only happen if p and pq somehow "annihilate" by being in the numerator and denominator of the same fraction. That's impossible, as I'll show. The value that you need to add in this iteration is, naturally, (pq + rs) / (p + r) - q Which can't be simplified to a point where p*q and p disappear. You can also find (pq + rs) / q(p + r) the factor by which you'd multiply q in order to get the next average; but again, pq and p remain. So there's no clever solution. Others have mentioned arbitrary-precision variables, and that's a good solution here. The size of p and pq grow linearly with the number of entries, and the memory usage and calculation speed of integers/floats grows logarithmically with the size of the values. So performance is O(log(n)) unlike the disaster that it would if p were somehow the multiple of many numbers.
