[site]: stackoverflow
[post_id]: 708047
[parent_id]: 
[tags]: 
The Value of Unit Testing

Here are some typical answers(ranked in ascending order of corniness) I get from managers/bosses whenever I bring up the importance of having unit tests and code coverage as an integral part of the development cycle "That is the job of QA, just focus on features and development" "The application is not mission critical, if there are some bugs it's not the end of the world" "We can't afford to spend time on unit testing" "Try not to get too fancy" In spite of having the best intentions of doing a good job, at the end of the day when time comes for the blame game, the burden finally falls on the developer. It's all too often that I've seen that things break in production, some of which which could have been avoided by catching these bugs statically by running unit tests. I just wanted to get a conversation going to see what peoples experiences have been and what is the best way to tackle this. UPDATE: Thanks everyone for a lot of insightful advice. There are several answers that I wish I could select as the right answer.
