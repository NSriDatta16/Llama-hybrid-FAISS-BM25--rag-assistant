[site]: stackoverflow
[post_id]: 3955633
[parent_id]: 3888817
[tags]: 
Sitecore native scheduling is executed within Sitecore context, that means that you can easily communicate with Sitecore this way but the app has to be alive for the task to execute. This is pretty much why it is impossible to run a scheduled agent at a specific time, only on scheduled intervals, as there is no guarantee that application is healthy at a given moment. Windows tasks are executed outside of the context and can be scheduled at a specific time, but this approach lacks that much needed Sitecore context which may complicate the design a bit, but you can always create a Sitecore web service to handle that. Among the real world examples I've seen where Windows scheduler approach has been implemented is scenario with "publishing at specific time": http://sitecoreblog.alexshyba.com/2007/02/publish-at-specific-time.html Also I've seen large data pushes implemented, like the one you are talking about. You can pretty much have import code run outside of Sitecore context in a console app. Having access to Sitecore.Configuration.Factory, you can instantiate databases, get items and create items. That's all you need. Plus it is more effective that running such code within http context.
