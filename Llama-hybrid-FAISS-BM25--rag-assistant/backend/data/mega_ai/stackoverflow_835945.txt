[site]: stackoverflow
[post_id]: 835945
[parent_id]: 835893
[tags]: 
to parallelise the child thread, simply put a pragma before the loop: #pragma omp parallel for for (i=0; i Job done. Now, you're quite right you cannot get any threading library to do one bit before another in a fully parallel way (obviously!), and openMP doesn't have a 'lock' or 'wait' feature (it does have a 'wait for all to finish' keyword - Barrier), its not designed to emulate a thread library, but it does allow you to store values "outside" the parallel section, and to mark certain sections as 'single threaded only' (Ordered keyword) so this may help you to assign the indexes in a parallel loop while other threads are assigning elements. Take a look at a getting started guide . If you're using Visual C++, you'll also need to set the /omp flag in your compiler build settings.
