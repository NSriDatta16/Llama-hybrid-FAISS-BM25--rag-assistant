[site]: stackoverflow
[post_id]: 2519561
[parent_id]: 2519381
[tags]: 
So assuming that you've got some stuff in the paragraphs that is going to break XML format, or you're just looking to learn a bit more about regexp parsing, this should get the job done for the example you've posted. It's not particularly robust, but that's why people like to use XML, because it's got a formal syntax that makes it easy to parse. or easier, anyway. In particular this solution depends on the string that's being parsed starting with a paragraph tag and ending with a paragraph close tag, and also on there being nothing but whitespace in between each pair of paragraphs. So it's a very literal solution to your example problem. But then since this is the only existing specification document for your custom data format it was the best I could do :) $string = " apples are red... john is a boy.. this is dummy text...... "; $paragraphs = preg_replace('/(^\s* | \s*$)/', '', preg_split('/(? )\s*(?= )/', $string)); What's going on here is that you're using, in the preg_split function call, zero-width lookaround assertions to find the beginning and end of each paragraph, and then calling preg_replace to crop out the tags from the beginning and end of each chunk. You end up with the contents of $paragraphs being array ( 0 => 'apples are red...', 1 => 'john is a boy..', 2 => 'this is dummy text......', )
