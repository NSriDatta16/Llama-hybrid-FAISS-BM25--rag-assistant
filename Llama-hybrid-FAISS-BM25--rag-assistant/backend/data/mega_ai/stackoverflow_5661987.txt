[site]: stackoverflow
[post_id]: 5661987
[parent_id]: 5660503
[tags]: 
Rather defining the padding in pixels , you need to define it in dips (density independent pixels) and then convert the dips to pixels at run time. So you would need to do something similar to private static final float PADDING_IN_DP = 10.0f; // 1 dip = 1 pixel on an MDPI device private final int mPaddingInPixels; public TicTacToeAdapter(Context context) { .... // Convert the dps to pixels final float scale = context.getResources().getDisplayMetrics().density; mPaddingInPixels = (int) (PADDING_IN_DP * scale + 0.5f); } ... public View getView(int position, View convertView, ViewGroup parent) { ... if (convertView == null) { ... imageView.setPadding(mPaddingInPixels, mPaddingInPixels, mPaddingInPixels, mPaddingInPixels); } ... } ... The scale you get in your constructor will differ depending on the density of the screen of the device your app is running on. (Note: dip and dp are the same thing)
