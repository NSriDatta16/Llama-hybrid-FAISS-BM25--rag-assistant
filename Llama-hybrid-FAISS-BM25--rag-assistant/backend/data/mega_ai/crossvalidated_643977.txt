[site]: crossvalidated
[post_id]: 643977
[parent_id]: 137057
[tags]: 
One could use row augmentation to get something that approximates the ridge penalty. The GLM regression with response $y_i$ and predictors $X_i$ minimizes the terms $$w_i\frac{(y_i-g(\beta X_i))^2}{V(g(\beta X_i))}$$ where $g$ is the inverse link function, $V$ a function that describes the variance as function of the mean, and $w_i$ an additional weight. For logistic regression we could augment rows with $y_i = 0.5$ and for one of the $x_{ij}$ in $X_i$ some very small value (and the others zero) such that the inverse link function is approximately linear $$g(\beta X_i) = \frac{1}{1+e^{-\beta_j x_{ij}}} \approx \frac{1}{2} + \frac{x_{ij}}{4} \beta_j$$ and with $V(\mu) = \mu(1-\mu)$ for logistic regression, the additional term will be approximately $$w_i\frac{(y_i-g(\beta X_i))^2}{V(g(\beta X_i))} \approx w_i\frac{(0.5-(0.5+0.2 5 x_{ij} \beta_{j}))^2}{0.5^2} = 0.25 w_ix_{ij}^2 \beta_j^2$$ Then by changing the weight $w_i$ the amount of regularisation can be changed. Demonstration with some code library(glmnet) ### settings n = 100 lambda = 1 set.seed(1) ### create data x0 = rep(1,n) x1 = runif(n,-3,3) x2 = runif(n,-3,3) p = 1/(1+exp(-x0-x1-x2)) y = rbinom(n,1,p) ### logistic regression with ridge penalty ### using glmnet function mod1 = glmnet(cbind(x1,x2), y, family = binomial(link = "logit"), alpha = 0, lambda = lambda, thresh = 10^-12, standardize = FALSE) ## augment data for penalty x = 0.001 w_penalty = 4*lambda*n/x^2 y = c(y,0.5,0.5) x0 = c(x0,0,0) x1 = c(x1,x,0) x2 = c(x2,0,x) ## create a weights vector w = c(rep(1,n) , rep(w_penalty,2)) ### logistic regression with ridge penalty ### using augmented data mod2 = glm(y ~ 0+x0+x1+x2, family = binomial(), weights = w, control = glm.control(maxit = 10^5, epsilon = 10^-12)) mod1 $a0 mod1$ beta # s0 # 0.6600794 # 2 x 1 sparse Matrix of class "dgCMatrix" # s0 # x1 0.2250353 # x2 0.2392547 mod2$coefficients # x0 x1 x2 # 0.6600794 0.2250353 0.2392547 The same approach may be used for other link functions and distribution families if the inverse link function has linear approximation near zero $g(\beta) \approx a+b\beta$ .
