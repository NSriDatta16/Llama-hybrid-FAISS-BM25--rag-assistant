[site]: stackoverflow
[post_id]: 3925079
[parent_id]: 3924694
[tags]: 
Common problem, canned answer: The behavior of NOT IN clause may be confusing and as such it needs some explanations. Consider the following query: SELECT LastName, FirstName FROM Person.Contact WHERE LastName NOT IN('Hedlund', 'Holloway', NULL) Although there are more than a thousand distinct last names in AdventureWorks.Person.Contact, the query returns nothing. This may look counterintuitive to a beginner database programmer, but it actually makes perfect sense. The explanation consist of several simple steps. First of all, consider the following two queries, which are clearly equivalent: SELECT LastName, FirstName FROM Person.Contact WHERE LastName IN('Hedlund', 'Holloway', NULL) SELECT LastName, FirstName FROM Person.Contact WHERE LastName='Hedlund' OR LastName='Holloway' OR LastName=NULL Note that both queries return expected results. Now, let us recall DeMorgan's theorem, which states that: not (P and Q) = (not P) or (not Q) not (P or Q) = (not P) and (not Q) I am cutting and pasting from Wikipedia (http://en.wikipedia.org/wiki/De_Morgan_duality). Applying DeMorgan's theorem to this queries, it follows that these two queries are also equivalent: SELECT LastName, FirstName FROM Person.Contact WHERE LastName NOT IN('Hedlund', 'Holloway', NULL) SELECT LastName, FirstName FROM Person.Contact WHERE LastName<>'Hedlund' AND LastName<>'Holloway' AND LastName<>NULL This last LastName<>NULL can never be true
