[site]: crossvalidated
[post_id]: 214999
[parent_id]: 214871
[tags]: 
It's not true. Intuitively, we can make the variance of the minimum of $n$ iid samples small by using a distribution $F$ that has a high concentration of probability near its minimum. To make the covariance of the two lowest values high, we need to create some chance that both the lowest and second lowest will frequently be very much greater than the minimum. This is a delicate balancing act, but it's possible. As an example I offer a mixture distribution (whose parameters were found through trial and error): $5\%$ of it is a standard Lognormal (giving a concentrated probability in the range from $0$ to $10$) and the remaining $95\%$ is a Gamma$(30)$ distribution, scaled by a factor of $2$, so that most of its values are between $40$ and $100$: On the left of the figure is the bivariate density of $(X_{[1;n+1]}, X_{[2;n+1]})$. It was drawn by simulating $100,000$ pairs of values and plotting them as transparent gray dots. On the right is the histogram of $X$ (based on the same simulation). Since I don't care to work out the integrals that give these values, I will offer results of a simulation. In each iteration $n+1=100$ iid values are drawn from this distribution, then $X_{[1;n+1]}$ and $X_{[2;n+1]}$ are found by sorting them. One of the $n+1$ values is then randomly removed and $X_{[1;n]}$ is found as their minimum. This is repeated $20,000$ times and the variance of $X_{[1;n]}$ as well as the covariance of $(X_{[1;n+1]}, X_{[2;n+1]})$ are estimated. The entire process is iterated one hundred times. The average of the variances is around $8.2$ and the average of the covariances around $9.2$, reversing the expected inequality. In all hundred instances the variance is less than the covariance, providing convincing evidence that these results are significant. The conjecture in the question supposes that on average the dots will plot below the line. That clearly is not true in this case: the covariances (on the vertical axis) exceed the variances (on the horizontal axis). Here is the R code that was used (modified to make the simulation smaller; it still produces significant results). f
