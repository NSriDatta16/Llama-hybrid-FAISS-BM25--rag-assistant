[site]: stackoverflow
[post_id]: 528404
[parent_id]: 527196
[tags]: 
Test your routing. You should use RouteLink to remove ambiguity when you generate a URL in your View, but when you submit a URL, you are dependent upon the routing system to select the correct route. So test that the URL patterns you support do in fact return the correct route. Test your controller actions. Use a mock repository, and test that manually invoking each action has the results you expect. Test all business logic in your model. This is obvious, and little different from non-MVC applications. Test any custom view helpers you write. Although I don't generally unit test views, view helpers are different. Test your JavaScript. There are unit testing frameworks for this, that testing JavaScript is so easy that such frameworks are hardly necessary. But testing JavaScript is incredibly important, due to the tendency of the language to hide errors from you. If you have written any custom model binders, they need special attention. For one thing, it is a lot easier to debug a model binder via a unit test than when it is "live" in the application.
