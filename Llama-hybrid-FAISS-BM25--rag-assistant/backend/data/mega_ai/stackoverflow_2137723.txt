[site]: stackoverflow
[post_id]: 2137723
[parent_id]: 2106835
[tags]: 
When I first started learning MVC, I put a lot of conditional code in the view to manage the display of the data and controls. However, once I figured out the benefit of HTML helpers, I found that it not only reduced the code in my views, but it also made it easier to test the resulting output. As an example, this is a code fragment for an entry form that would appear in the finished HTML page: Last Name: First Name: Job Title: Building the view using standard MVC helpers would result in code that looks something like this: Last Name: First Name: Job Title: However, I was able to create HTML helpers that allowed me to make the view look like this: Here are the HTML helpers: private string Edit_Field(string prompt, string fieldName, string value) { string textBox = helper.TextBox(fieldName, value); return string.Format(" {0} {1} ", prompt, textBox); } public string Edit_LastName(this HtmlHelper helper, string value) { return EditField("Last Name:", "LastName", value); } public string Edit_FirstName(this HtmlHelper helper, string value) { return EditField("First Name:", "FirstName", value); } public string Edit_JobTitle(this HtmlHelper helper, string value) { return EditField("Job Title:", "JobTitle", value); } This method is not nearly as straightforward as the standard method, but if you have similar controls that are used on multiple views, this approach clearly helps with maintenance. For example, if you want to change the prompt text from "Job Title" to "Position", you just change the prompt string in the Edit_JobTitle method and the change is reflected in every view where that method is called.
