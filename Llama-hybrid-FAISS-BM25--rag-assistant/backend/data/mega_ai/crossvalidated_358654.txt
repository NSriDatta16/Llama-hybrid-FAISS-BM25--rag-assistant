[site]: crossvalidated
[post_id]: 358654
[parent_id]: 10607
[tags]: 
This is an excellent question that sits at the nexus of mathematics and science. As someone who teaches a linear models course that touches on "logistic regression" and its several possible link functions, I feel compelled to answer. First, I believe that SAS is fitting a generalized linear model (GLM) and estimating the parameters using MLE (or qMLE ) in its "logistic" function. As such, any appropriate link function that transforms (0, 1) into (-\inf, \inf) is appropriate. Of that infinite class of functions, the logit, the probit, and the complementary log-log are members... so are all quantile functions. Second, there is little appreciable difference between the logit and the probit link functions. While the coefficient estimates will tend to differ by a factor of about 3.8, the predictions will be very similar. Third, the logit and probit functions are symmetric about (0, 0.5), while the complementary log-log function is not symmetric. This constitutes the primary difference between the logit/probit functions and the complementary log-log function. Recall that the dependent variable is the probability of a success and the independent variable is the linear predictor. For the logit/probit links, the function value approaches 0 at the same rate as it does 1. For the complementary log-log function, however, that is not true. The cloglog function approaches 1 more sharply than it approaches 0. [Side note: the log-log function is the complement of the cloglog. It approaches 0 more sharply than 1.] Fourth... I'm not sure what that actually means in terms of your last question. My experience is that the science has not advanced enough to suggest a "correct" link function. As a result, I instruct my students to fit their model using several link functions. If the coefficient results differ by "a lot," then there is something wrong with their model. Otherwise, the model is robust to the selection of the link function. While this is an answer to ayush biyani, I think #4 could drive an interesting discussion about link functions.
