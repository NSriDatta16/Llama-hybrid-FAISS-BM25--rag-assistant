[site]: stackoverflow
[post_id]: 1293956
[parent_id]: 1220655
[tags]: 
One way ive used in the past is to capture the POST values from the Form Object and stored that using a momemto class that is serializable using the soapformatter. When required to restore, all I do is GET to a HttpHandler class with querystring parameters that parses the intended id and deserilizes the state for restoration which renders hidden fields to simulate the user doing a post from the original page. Here are the two classes. NOTE that you are capturing the state of the FORM so when you restore the form you will restore the state to a state in which you are asking for a restore, you may need to handle this if you are finding a problem. ''' ''' This class encapsulates the form state ''' _ Public NotInheritable Class FormState Private _path As String Private _form As NameValueCollection ''' ''' Constructor. ''' ''' The path of the original form post request. ''' The form to save. Public Sub New(ByVal path As String, ByVal form As NameValueCollection) _path = path _form = form End Sub ''' ''' Serializer Ctor. ''' ''' Sub New() End Sub ''' ''' The path of the original form post request. ''' Public ReadOnly Property Path() As String Get Return _path End Get End Property ''' ''' The saved form. ''' Public ReadOnly Property Form() As NameValueCollection Get Return _form End Get End Property End Class ''' ''' This http handler will render a small page that will reconstruct the form as it was before session timeout, using hidden fields. ''' The page will submit itself upon loading, meaning that the user will barely see it. ''' Public Class FormStateRestoreHandler Implements IHttpHandler, IRequiresSessionState Private _state As FormState Private _dealGuid As Guid ''' ''' The form state. ''' Protected ReadOnly Property FormState() As FormState Get Return _state End Get End Property ''' ''' Gets a value indicating whether another request can use this IHttpHandler instance. ''' Public ReadOnly Property IsReusable() As Boolean Implements IHttpHandler.IsReusable Get Return False End Get End Property ''' ''' Processes the web request - this is where the page is rendered. ''' ''' Public Sub ProcessRequest(ByVal context As HttpContext) Implements IHttpHandler.ProcessRequest Dim Id = context.Request.QueryString("id") If Id Is Nothing Then Return _state = LoadFormState(Id) Using writer As HtmlTextWriter = CreateHtmlTextWriter(context.Response.Output, context.Request.Browser) Me.Render(writer) End Using End Sub ''' ''' Loads the specified FormState by id ''' ''' The unique id of the saved form state. ''' Private Shared Function LoadFormState(ByVal id As Guid) As FormState Dim _storageProvider = ConfigurationFacade.GetUnityContainer.Resolve(Of IDealProvider)() Dim result As FormState = Nothing Dim bytes = _storageProvider.LoadUserState(id) Dim soapFormatter = New SoapFormatter Using ms = New IO.MemoryStream(bytes) result = soapFormatter.Deserialize(ms) ms.Close() End Using Return result End Function ''' ''' Renders a small page that will resubmit the saved form ''' ''' Protected Overridable Sub Render(ByVal writer As HtmlTextWriter) writer.RenderBeginTag(HtmlTextWriterTag.Html) writer.RenderBeginTag(HtmlTextWriterTag.Head) writer.RenderBeginTag(HtmlTextWriterTag.Title) writer.Write("Restoring form") writer.RenderEndTag() ' TITLE writer.RenderEndTag() ' HEAD writer.AddAttribute("onload", "document.forms[0].submit();") writer.RenderBeginTag(HtmlTextWriterTag.Body) writer.AddAttribute("method", "post") writer.AddAttribute("action", Me.FormState.Path) writer.RenderBeginTag(HtmlTextWriterTag.Form) Dim form As NameValueCollection = Me.FormState.Form For Each name As String In form.Keys RenderHiddenField(writer, name, form(name)) Next writer.AddAttribute(HtmlTextWriterAttribute.Align, "center") writer.RenderBeginTag(HtmlTextWriterTag.P) writer.Write("You should be redirected in a moment.") writer.WriteFullBeginTag("br") writer.Write("If nothing happens, please click ") RenderSubmitButton(writer, "Submit") writer.RenderEndTag() ' P writer.RenderEndTag() ' FORM writer.RenderEndTag() ' BODY writer.RenderEndTag() ' HTML End Sub ''' ''' Renders a hidden field. ''' ''' The writer to use. ''' The name of the hidden field. ''' The value of the hidden field. Protected Shared Sub RenderHiddenField(ByVal writer As HtmlTextWriter, ByVal name As String, ByVal value As String) writer.AddAttribute(HtmlTextWriterAttribute.Type, "hidden") writer.AddAttribute(HtmlTextWriterAttribute.Name, name) writer.AddAttribute(HtmlTextWriterAttribute.Value, value) writer.RenderBeginTag(HtmlTextWriterTag.Input) writer.RenderEndTag() ' INPUT End Sub ''' ''' Renders a submit button. ''' ''' The writer to use. ''' The text of the button. Protected Shared Sub RenderSubmitButton(ByVal writer As HtmlTextWriter, ByVal text As String) writer.AddAttribute(HtmlTextWriterAttribute.Type, "submit") writer.AddAttribute(HtmlTextWriterAttribute.Value, text) writer.RenderBeginTag(HtmlTextWriterTag.Input) writer.RenderEndTag() ' INPUT End Sub ''' ''' Gets a HtmlTextWriter to write output to, based on a TextWriter. ''' ''' The Text writer holding the output stream. ''' The browser capabilities of the client browser. ''' Protected Shared Function CreateHtmlTextWriter(ByVal writer As TextWriter, ByVal browser As HttpCapabilitiesBase) As HtmlTextWriter If browser Is Nothing Then Return New HtmlTextWriter(writer) End If Return browser.CreateHtmlTextWriter(writer) End Function End Class
