[site]: stackoverflow
[post_id]: 4870722
[parent_id]: 4869934
[tags]: 
Haven't seen CS101, but I hope I solved your problem: (define (avg xs) (/ (foldl + 0 xs) (length xs))) (define (list-max xs) (let loop ((xs xs) (e (car xs))) (if (empty? (cdr xs)) e (loop (cdr xs) (max e (car xs)))))) (define (average-above-median xs ys) (let* ((xsnum (filter number? xs)) (ysnum (filter number? ys))) (if (empty? ysnum) 0 (if (empty? xsnum) (avg ysnum) (avg (filter (lambda(x) (> x (list-max xsnum))) ysnum)))))) Example: > (average-above-median (list 2 'a 1) (list 'b 5 3 1)) 4 > (average-above-median (list) (list 'b 5 3 1)) 3 > (average-above-median (list 2 'a 1) (list)) 0 > (average-above-median (list) (list)) 0 Hope that helps.
