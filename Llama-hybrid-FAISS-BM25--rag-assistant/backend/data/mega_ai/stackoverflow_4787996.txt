[site]: stackoverflow
[post_id]: 4787996
[parent_id]: 4787580
[tags]: 
This will throw an error if there are recursions - not foolproof and not ver elegant, though use strict; my %HoA = ( group1 => [ "user1", "user2" ], group2 => [ "group1", "user3" ], group3 => [ "group1", "group2" ], group4 => [ "group3", "user2" ], ); my %ex=(); # expanded hash foreach my $g ( keys %HoA ) { # first population $ex{$g} = {}; AddArrayToHash($ex{$g},$HoA{$g}); } my $goon = 1; my $cont =0; while($goon) { # iterate $goon=0; die "too many iterations RECURSIVE DEFINITION?" if($cont++ >10) ; foreach my $g ( keys %ex ) { foreach my $u ( keys %{$ex{$g}} ) { if($ex{$u}) { delete $ex{$g}->{$u}; AddArrayToHash($ex{$g},[ keys %{$ex{$u}}] ); $goon = 1; } } } } foreach my $group ( sort keys %ex ) { print "$group: " . join(" ",sort keys %{$ex{$group}}) ."\n"; } sub AddArrayToHash { my($refhash,$refarray)=@_; foreach my $e (@$refarray) { $refhash->{$e} = 1; } }
