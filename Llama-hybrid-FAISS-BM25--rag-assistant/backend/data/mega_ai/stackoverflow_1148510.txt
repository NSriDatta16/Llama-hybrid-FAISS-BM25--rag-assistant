[site]: stackoverflow
[post_id]: 1148510
[parent_id]: 470208
[tags]: 
first of all i think you have circular dependency .. your last paragraph sums it up. You need to rethink your application and decide if you have responsibilities setup correctly. Why circular dependency: For the new dll to be generated it requires MyApp.exe; MyApp.exe cannot be used without the new dll. maybe post what your goal is and we can help structure your app correctly. With proper responsibility delegated MyApp.exe should be making the new generated assembly do work not require MyApp.exe to use objects from the new dll. Example you should only have Execute on the new generated assembly ..... public static void RenderTemplate(String templatepath, System.IO.Stream outstream, XElement xml, Dictionary otherdata) { var templateFile = System.IO.File.ReadAllText(templatepath); var interpreter = new Interpreter(); interpreter.ReferencedAssemblies.Add("System.Core.dll"); // linq extentions interpreter.ReferencedAssemblies.Add("System.Xml.dll"); interpreter.ReferencedAssemblies.Add("System.Xml.Linq.dll"); interpreter.UsingReferences.Add("System.Linq"); interpreter.UsingReferences.Add("System.Xml"); interpreter.UsingReferences.Add("System.Xml.Linq"); interpreter.UsingReferences.Add("System.Collections.Generic"); interpreter.Execute(templateFile, outstream, xml, otherdata); }
