[site]: stackoverflow
[post_id]: 1704687
[parent_id]: 1704565
[tags]: 
Original answer (Nov. 2009, GitHub has only 1 years, Git only 4) I really do not know, but I would venture "better Windows support", Windows being potentially the main platform for most of their client base. Git is still too much a "unix/linux" product, with a "hopeful" Windows support through mSysGit . Just read the tone of some of the MSysGitHerald articles, like the ninth one : For a very long time, msysGit was pushed forward by the gang formed of Hannes, Steffen, Sebastian Schuberth and myself [Johannes Schindelin]. At some stage I got so frustrated that I stopped working on msysGit altogether. The reason is simple: it was no more fun. Way too many people asked for fixes or enhancements, and none of them offered contributions of their own. As I am not a Windows person (being a happy Linux user since 1994), the work on mSysGit was not rewarding enough for me to continue. So I stopped. But in the meantime, things have changed. We got contributions by ... That does not inspire a great deal of confidence when it comes to push forward that tool to your IT boss. I am very happy with Git for a personal usage, and very grateful from the hard work of all mSysGit contributors, but in a big company, I would have a hard time making Git the default DVCS tool adopted by our Windows developers. Both because of the learning curve, but mainly because the support level is not there yet. That is only a personal opinion, and if you have a different experience deploying Git successfully, more power to you. Mercurial being the closest DVCS to Git, and based on portable Python scripts (and not linux/unix-based sh scripts), it may be a pragmatic choice. Update 2018, seven years later: yes, the Windows support for Git is now a reality. And Microsoft has its entire Windows codebase into one (giant) Git repository: See " The largest Git repo on the planet ": 3.5M files, 300GB, 4,000 engineers producing 1,760 daily “lab builds” across 440 branches in addition to thousands of pull request validation builds. But this is with the addition of GVFS (Git Virtual FileSystem) , which allows to dynamically download only the portions you need based on what you use. This is not yet in Git native, although its integration has begun last Dec. 2017, with the implementation of a narrow/partial cloning . Kiln advertises Git support as well : Kiln , our best-in-class DVCS hosting solution, supports Git as well as Mercurial! GitHub is great. FogBugz is great. What could be even better? How about integrating them! FogBugz can be notified by GitHub Web Hooks whenever an incoming changeset comment mentions a case.
