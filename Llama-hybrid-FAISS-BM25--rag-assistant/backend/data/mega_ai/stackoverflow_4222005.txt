[site]: stackoverflow
[post_id]: 4222005
[parent_id]: 4217019
[tags]: 
In Ruby there really are no such things as class methods. Since everything is an object in Ruby (including classes), when you say def self.class_method , you are just really defining a singleton method on the instance of the class Class . So to answer your question, saying class X def self.a puts "Hi" end class Hi X.b # => there is two ways of saying the same thing. Both these methods are just singeton (eigen, meta, ghost, or whatever you want to call them) methods defined in the instance of your Class object, which in your example was X . This topic is part of metaprogramming, which is a fun topic, that if you have been using Ruby for a while, you should check out. The Pragmatic Programmers have a great book on metaprogramming that you should definitely take a look at if you interested in the topic.
