[site]: stackoverflow
[post_id]: 4908630
[parent_id]: 4908103
[tags]: 
I think most of what needs to be said here has already been said by folks with far more experience than myself. However, as one who migrated from VB6/VBA to the Endless And WOnderful World of True Inheritance available in .net, I can say that discouraging the newcomer from seeing it as an end-all solution is not necessarily a bad thing. When I first began exploring the idea, I found all kinds of cool things to do through inheritance. But in the end, I ended up with some pretty poor code, difficult-to-maintain class hierarchies, and overall mess. It looks like an almost magical solution to the newcomer (and even MORE so to those who have endured the pain of VB6/VBA for years first). The reality is, like design patterns, inheritance is often used "because I can" instead of "because I need to". I am betting the author intended to convey the point that inheritance, often seen as a "first-order" solution to those with less experience, should REALLY only be used when it is the proper solution. And that it is easy to think it may be a proper solution in the wrong circumstances. It can be tempting to use inheritance as a means to make the work of coding easier. In my early days learning vb.net, I of course had some difficulties, and often, inheriting from a class which had been a struggle to create seemed like an attractive solution to the problem of creating a different flavor of that difficult code. Of course, for one who is learning, todays difficult code is tomorrows preferred code. Inheritance IS a core concept in OOP. But it is easily abused and/or applied improperly. Careful design of a class hierarchy is critical to proper use of the inheritance concept, and theree seem to most definitely be cases in which containment and delegation are prefferred ways to get things done. But to say inheritance is useless is patently absurd. For a good way to examine Interface/Base class/Inheritance modelling, look at the .net framework itself. From the object explorer one can examine the Inheritance model as it is applied to the core components we use every day.
