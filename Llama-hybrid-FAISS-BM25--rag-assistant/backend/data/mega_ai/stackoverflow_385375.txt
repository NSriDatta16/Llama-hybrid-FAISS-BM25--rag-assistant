[site]: stackoverflow
[post_id]: 385375
[parent_id]: 385238
[tags]: 
Your model is oversimplified and underspecified. But let's ignore that for the moment ;-) in the examples below i am also ignoring the details of properties and stubbing the constructors so as not to confuse the main modeling issue Student and Teacher are both People (as Charlie Martin and others pointed out) //people have names public class Person { public Person(string _name) { Name = _name; } public string Name; } A Student is a Person, and has a grade and a teacher //students are people with a grade and a teacher public class Student : Person { public Student(string _name, int _grade, Teacher _teacher) : base(_name) { Grade = _grade; Teacher = _teacher; Teacher.Students.Add(this); //add to the teacher's collection } public int Grade; public Teacher Teacher; } Teachers are people, with a course average grade and a set of Students. public class Teacher : Person { public Teacher(string _name) : base(_name) { } public int CourseAverage; public IList Students = new List (); public void ComputeAverageGrade() { int sum = 0; foreach(Student s in Students) { sum += s.Grade; } CourseAverage = sum / Students.Count; } } In your example you have some students and compute the average grade public class Program { public static void Main(string [] args) { Teacher JohnSmith = new Teacher("John Smith"); Student Jim = new Student("Jim",100,JohnSmith); Student Sue = new Student("Sue",90,JohnSmith); Student Sally = new Student("Sally",70,JohnSmith); Student Robert = new Student("Robert",100,JohnSmith); //add our resident overachiever Student JonSkeet = new Student("Jon Skeet",150,JohnSmith); JohnSmith.ComputeAverageGrade(); Console.WriteLine("Course Average for " + JohnSmith.Name + " is " + JohnSmith.CourseAverage.ToString()); } } In a more realistic model, each student would likely be taking more than one course, and each teacher would probably be teaching more than one course, so you would need to model the Courses. Courses only exist for the duration of a Semester or a Quarter, etc.
