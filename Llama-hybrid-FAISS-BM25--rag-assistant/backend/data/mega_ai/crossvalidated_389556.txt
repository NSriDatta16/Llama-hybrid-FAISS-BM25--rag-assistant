[site]: crossvalidated
[post_id]: 389556
[parent_id]: 389545
[tags]: 
EDIT: I originally thought OP knew which observations came from which species. OP's edit makes it clear that my original approach is not feasible. I'll leave it up for posterity, but the other answer is much better. As a consolation, I've coded up a mixture model in Stan. I'm not saying a Bayesian approach is particularly good in this case, but it is just something neat I can contribute. Stan Code data{ //Number of data points int N; real y[N]; real x[N]; } parameters{ //mixing parameter real theta; //Regression intercepts real beta_0[2]; //Regression slopes. ordered[2] beta_1; //Regression noise real sigma[2]; } model{ //priors theta ~ beta(5,5); beta_0 ~ normal(0,1); beta_1 ~ normal(0,1); sigma ~ cauchy(0,2.5); //mixture likelihood for (n in 1:N){ target+=log_mix(theta, normal_lpdf(y[n] | beta_0[1] + beta_1[1]*x[n], sigma[1]), normal_lpdf(y[n] | beta_0[2] + beta_1[2]*x[n], sigma[2])); } } generated quantities { //posterior predictive distribution //will allow us to see what points belong are assigned //to which mixture matrix[N,2] p; matrix[N,2] ps; for (n in 1:N){ p[n,1] = log_mix(theta, normal_lpdf(y[n] | beta_0[1] + beta_1[1]*x[n], sigma[1]), normal_lpdf(y[n] | beta_0[2] + beta_1[2]*x[n], sigma[2])); p[n,2]= log_mix(1-theta, normal_lpdf(y[n] | beta_0[1] + beta_1[1]*x[n], sigma[1]), normal_lpdf(y[n] | beta_0[2] + beta_1[2]*x[n], sigma[2])); ps[n,]= p[n,]/sum(p[n,]); } } Run The Stan Model From R library(tidyverse) library(rstan) #Simulate the data N = 100 x = rnorm(N, 0, 3) group = factor(sample(c('a','b'),size = N, replace = T)) y = model.matrix(~x*group)%*% c(0,1,0,2) y = as.numeric(y) + rnorm(N) d = data_frame(x = x, y = y) d %>% ggplot(aes(x,y))+ geom_point() #Fit the model N = length(x) x = as.numeric(x) y = y fit = stan('mixmodel.stan', data = list(N= N, x = x, y = y), chains = 8, iter = 4000) Results Dashed lines are ground truth, solid lines are estimated. Original Answer If you know which sample comes from which variety of daffodil, you can estimate an interaction between variety and soil PH. Your model will look like $$ y = \beta_0 + \beta_1 \text{variety} + \beta_2\text{PH} + \beta_3\text{variety}\cdot\text{PH} $$ Here is an example in R. I've generated some data that looks like this: Clearly two different lines, and the lines correspond to two species. Here is how to estimate the lines using linear regression. library(tidyverse) #Simulate the data N = 1000 ph = runif(N,5,8) species = rbinom(N,1,0.5) y = model.matrix(~ph*species)%*% c(20,1,20,-3) + rnorm(N, 0, 0.5) y = as.numeric(y) d = data_frame(ph = ph, species = species, y = y) #Estimate the model model = lm(y~species*ph, data = d) summary(model) And the result is > summary(model) Call: lm(formula = y ~ species * ph, data = d) Residuals: Min 1Q Median 3Q Max -1.61884 -0.31976 -0.00226 0.33521 1.46428 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 19.85850 0.17484 113.58 For species labeled 0, the line is approximately $$ y = 19 + 1\cdot \text{PH}$$ For species labeled 1, the line is approximately $$ y = 40 - 2 \cdot \text{PH} $$
