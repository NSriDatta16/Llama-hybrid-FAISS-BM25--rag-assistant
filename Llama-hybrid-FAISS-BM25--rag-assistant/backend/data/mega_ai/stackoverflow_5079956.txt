[site]: stackoverflow
[post_id]: 5079956
[parent_id]: 5079074
[tags]: 
I'd like to contradict all the other answers given by my fellows : before you go off using OOP stuff or higher level languages, you have to know what's going on under the hood of all the fancy garbage-collection-template-multiple-inheritance-whatever-voodoo or you will get into trouble sooner or later. It is absolutely essential to know that every single memory allocation is expensive and that you have to take care of your memory, for example. I started programming using C and find it quite easy to learn new languages with my C background. Programming isn't about creating fancy user interfaces by dragging-and-dropping controls from a toolbox: that is just the topping. But before applying topping, you need some cake to put it on. If you don't know how to bake the cake, you'll never create a fancy one. C is a simple language where you learn how to code some loops, conditionals and so on. It has – aside from pointers and sick #defines – almost no weird language constructs. Once you know how to set up the basic stuff, it'll be easy for you to transfer that knowledge to any other language. I think, learning C is the first step to become the Duct Tape Programmer . If you're not interested in that, then it would be perfect to start programming with BF , Whitespace , FALSE or any other language...
