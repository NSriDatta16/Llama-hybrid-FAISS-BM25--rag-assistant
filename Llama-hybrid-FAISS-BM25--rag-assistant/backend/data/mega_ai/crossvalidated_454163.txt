[site]: crossvalidated
[post_id]: 454163
[parent_id]: 
[tags]: 
Creating final machine learning model: how many times to train?

I am using a nested cross-validation framework where I optimize the number of features and box constraint parameter for linear SVM using grid search in the inner CV split and assess how good the model is in the outer CV split. Having done this several times, we have now selected a candidate model which we want to test on an held out dataset. To train the final model, I take all the data which was being used for nested CV, run a single CV to find the final optimum values of number of features and box constraint, and train the final model. However, there will definitely be some instability at this stage with both these parameters varying somewhat depending on how the split was made. My question is: how many times should I repeat the process of creating a final model? I am currently repeating the process 50 times and then taking the median of optimal hyperparameters; I am then using these median values for creating the final model. Are there better ways of creating the final model that would account for these instabilities?
