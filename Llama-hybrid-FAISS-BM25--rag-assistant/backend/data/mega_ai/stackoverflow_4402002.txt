[site]: stackoverflow
[post_id]: 4402002
[parent_id]: 4401913
[tags]: 
Check this ... From the docs - pay attention to the highlighted section: The beforeSend , error , dataFilter , success and complete options all take callback functions that are invoked at the appropriate times. The this object for all of them will be the object in the context property passed to $.ajax in the settings; if that was not specified it will be a reference to the Ajax settings themselves. So, in the error() callback (also success and complete , etc), this will be the object passed to $.ajax() - unless you are using the context parameter to change it. As a note, the data param passed into $.ajax() will be converted to a serialized string for a GET or POST request The other option, is to just make sure your error() callback has access to the variable in the same scope: (function() { // create a scope for us to store the data: var data = {id: 1}; $.ajax({ url: '/something-to-genereate-error', data: data, error: function() { console.log(this, data); } }); })(); // call the function immediatey See this fiddle for an example - Note that the data inside of this is "id=1" wereas the data we held a copy of is still {id:1} Also - Note that the closure here ( (function() { .... })() ) Is pretty much unnecessary, it is just showing a way to store the data variable before passing it into $.ajax() and the using it in the callback. Most likely this ajax call already lies within a function where you could do this.
