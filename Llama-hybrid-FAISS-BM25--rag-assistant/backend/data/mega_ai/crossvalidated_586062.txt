[site]: crossvalidated
[post_id]: 586062
[parent_id]: 
[tags]: 
understanding coefficients in negative binomial regression (glm.nb)

Hi CrossValidated Community, I have a very simple question about the interpretation of coefficients produced by fitting a negative binomial to some toy data. I generate the toy data by sampling from a negative binomial using four different mean values defined by the vector untreated_avg . I then repeated this process but with means defined by a second vector, treated_avg . I am looking to use the negative binomial regression to determine the effect of treatment (reproducible code chunk at end of question). When the effect of treatment is the same for each of the four groups ( treated_avg ) then the exponentiated regression coefficients are consistent with the toy data and the intercept represents the untreated mean for group "A". In addition all coefficients have p-values group_names 1 A 0 1.01 2 A 1 0.51 3 B 0 1.97 4 B 1 0.999 5 C 0 4.02 6 C 1 1.98 7 D 0 7.97 8 D 1 4.04 My confusion is when the effect of treatment varies by group. I could introduce interaction terms to account for this but where interactions are not expected how can I interpret the coefficients and what should I be mindful of. To illustrate this I change the response of groups "C" and "D" to the treatment from 0.5 to 5 ( treated_avg ). The following is contrary to what I expected and I would be very grateful for any explanation/insight: It appears: (1) The intercept no longer represents the untreated mean for group "A" but has decreased from 1 to 0.5. (2) The coefficient for treatment (2.34) is not the mean treatment effect across the groups (2.75). (3) The coefficients for groups C and D (12.9 and 25.6) are not consistent their untreated averages (~4 and ~8). (4) The treatment coefficient again reports a p-value group_names print(exp(glm_model_fit$coefficients)) (Intercept) treated groupB groupC groupD 0.4912656 2.3443343 2.1530202 12.9072694 25.6466305 group treated `mean(incidents)` 1 A 0 0.971 2 A 1 0.502 3 B 0 2.00 4 B 1 0.988 5 C 0 3.93 6 C 1 20.0 7 D 0 7.96 8 D 1 39.8 Any insight on this from the community would be truly appreciated. Reproducible example: group_names % mutate(group = group_names[ii], treated = 0) treated_df % mutate(group = group_names[ii], treated = 1) experiment_df % group_by(group, treated) %>% summarise(mean(incidents)))
