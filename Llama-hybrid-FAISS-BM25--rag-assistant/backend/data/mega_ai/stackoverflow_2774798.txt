[site]: stackoverflow
[post_id]: 2774798
[parent_id]: 2774625
[tags]: 
You can use $(element).offset().top and $(element).offset().left to get the absolute positions of all of the focusable elements on the page. You will then need to compare the element's positions/dimensions [x,w,width,height] to those of the currently focused element taking into account the intended direction for navigation. For example: If UP is pressed you will need to find all elements ABOVE the currently focused element by comparing their offset().top+height() to the focused element's offset().top and then determine which of those elements is closest [to the currently focused element] I began writing code for this but it seems to be pretty complicated. The idea is this: var keys = {"UP":40,"DOWN":38/*etc*/}; var elements = $(".focusable"); var focused = $(".focused"); var positions = calculatePositions(elements); // returns [{"element":element,"dimensions":{"x": x, "y": y, "w": width, "h": height}]; $(document).keypress(e){ var keycode = e.keycode, var candidates; // up switch (keycode){ case keys.UP : candidates = filterToElementsAbove(focused, positions); break; case keys.DOWN : candidates = filterToElementsBelow(focused, positions); break; // etc... default; return true; } focused.removeClass("focused"); focused = findClosestElement(focused, candidates).addClass("focused"); } The code above won't actually work...but it could set you in the right direction.
