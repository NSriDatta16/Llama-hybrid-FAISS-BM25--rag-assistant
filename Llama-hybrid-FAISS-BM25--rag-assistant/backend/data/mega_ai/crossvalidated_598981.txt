[site]: crossvalidated
[post_id]: 598981
[parent_id]: 
[tags]: 
How to visualize the results of a method which predicts binned probabilities?

I'm attempting to create a machine learning model that predicts some real-valued data points. If I was using a straight regression approach (that is, one where the output is a real-valued number), I would know how to visualize it. For example, I could use a scatter plot of predictions versus known. Or I could take the residuals and plot them against some other value, either as a scatter plot for continuous data, or as a violin plot for categorical. There are a number of options, and standard plotting tools are well set up for this sort of N x 1 against N x 1 plotting. However, some of the models I'm trying don't predict the real-valued output directly, but rather do binned probability prediction -- that is, they predict the probability the value is within a particular sub-range for a discrete set of sub-ranges. (Or technically, they predict logits for each bin which can be easily converted to probabilities with a softmax function.) I'm not sure how to handle this data for visualization, given that there isn't a single number per input, but rather Nbins of them, and the data is not a direct value, but rather a binned probability distribution. I guess I could imagine some sort of heatmap, perhaps, but I'm not sure if that would be useful in practice, or how one might go about actually creating something like that from the inputs. As I understand it, this sort of binned prediction is a standard approach in machine learning. Are there standard methods people use to visualize the outputs? What sort of plots are common for this sort of thing? Also, are there standard (preferably Python) tools for converting an N x Nbins array of binned probabilities and an associated N x 1 array of abscissa values into such a figure?
