[site]: stackoverflow
[post_id]: 5691940
[parent_id]: 5691874
[tags]: 
It sounds like you want to trigger a task on an interval of some kind (30-60 seconds.) The trick is to have ASP.NET open and iterate through the cache at your desired interval (30 or 60 seconds) without having an incoming web request trigger this. Some discussion on this article: Easy Background Tasks With ASP.NET . I'll suggest 2 options for storage with this approach: 1.. For an ASP.NET and IIS only solution, you could write to the ASP.NET Application Cache . List myLogs = new List (); myLogs.Add(new Log{ Text = "foo"}); Cache["MyLogs"] = myLogs; Consider this problem, though. The ASP.NET Application Cache isn't durable storage. What happens when your application dies, or IIS is reset, or the machine loses power? Do you care about what was in cache? 2.. Embed a SQL Compact database in your application. Write your Logs there. Combine this storage mechanism with the Easy Background Tasks With ASP.NET . IMO, I'd fully go with MSMQ or SQL Server Service Broker option suggested in another answer. This guarantees durability for you. Hopefully you've got full control of that web server to leverage these components. One requires Windows components to be installed/enabled/secured, and the other is a SQL Server specific feature.
