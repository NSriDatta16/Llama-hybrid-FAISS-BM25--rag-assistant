[site]: stackoverflow
[post_id]: 5104248
[parent_id]: 5103916
[tags]: 
delete -int a global pointer value will not result in a memory leak, but could result to an aliased dangling pointer. Imagine int * ptr; int main() { ptr = new int; int * alias = ptr; delete ptr; *alias = 5; // Undefined Behaviour return 0; } Using this memory location now will result in Undefined Behaviour. When two pointers "point" to the same location, this situation is called Aliased Pointer It should be better to design your system in a better way and try to not use global variables. However, the same problem could still exist even in a local function body. Also, it should be noted that ptr when your program starts execution is automatically initialized to 0 (cause of its storage class), so if you try to do a delete ptr on the first line of your program nothing bad will happen (and yes, global variables are initialized before execution of main() starts). There was a somehow maybe relevant post 1-2 days ago, and I think (since it is C++ ) that you might find it interesting and helpful. Take a look
