[site]: stackoverflow
[post_id]: 623614
[parent_id]: 620226
[tags]: 
A high disk queue length does not mean you have an I/O bottleneck if you have a SAN or NAS, you may want to look at other additional counters. Check out SQL Server Urban Legends discussed for more details. 1: The following operations heavily utilize tempdb Repeated create and drop of temporary tables (local or global) Table variables that use tempdb for storage purposes Work tables associated with CURSORS Work tables associated with an ORDER BY clause Work tables associated with an GROUP BY clause Work files associated with HASH PLANS These SQL Server 2005 features also use tempdb heavily: row level versioning (snapshotisolation) online index re-building As mentioned in other SO answers read this article on best practice for increasing tempdb performance. 2: Looking at the amount of free RAM on the server i.e. looking at the WMI counter Memory->Available Mbytes doesn't help as SQL Server will cache data pages in RAM, so any db server that's running long enough will have little free RAM. The counters you should look at that are more meaningful in telling you if adding RAM to the server will help are: SQL Server Instance:Buffer Manager->Page Life Expectancy (in seconds) A value below 300-400 seconds will mean that Pages are not in memory very long and data continually is being read in from disks. Servers that have a low page life expectancy will benefit from additional RAM. and SQL Server Instance:Buffer Manager->Buffer Cache hit Ratio This tells you the percentage of pages that were read from RAM that didn't have to incur a read from disk, a cache hit ratio lower then 85 will mean that the server will benefit from additional RAM 3: Yes, can't go wrong here. Having tempdb on a separate set of disks is recommended. Look at this KB article under the heading: Moving the tempdb database on how to do this.
