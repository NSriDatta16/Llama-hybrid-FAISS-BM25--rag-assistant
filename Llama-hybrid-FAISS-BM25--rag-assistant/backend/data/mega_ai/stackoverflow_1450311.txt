[site]: stackoverflow
[post_id]: 1450311
[parent_id]: 1450085
[tags]: 
I'm assuming that you're not relying on any particular ordering of the input (that it might not have been pre-sorted on the key (second) field) and that you'd prefer to preserve the order of the input lines in your output ... printing copies of the first and all subsequent lines which contain duplicate values in the second field. Here's the quickest snippet of code I could come up with in Python: import fileinput seen = dict() for line in fileinput.input(): fields = line.split(';') key = fields[1] if key in seen: if not seen[key][0]: print seen[key][1], seen[key] = (True, seen[key][1]) print line, else: seen[key] = (False, line) The fileinput module lets us handle our input lines in a manner similar to the default awk file/input processing ... or to the semantics of Perl's -n command line switch. From there we simply keep track of the first line we see with a unique value in the second field, and a flag indicating whether we've printed this one before. When we first find a duplicate we print the first line that had that key, and mark it as having been printed, then we print the current line. For all subsequent duplicates we just print the current line. Obviously for any non-dupe we simply post it as an entry to our dictionary. There's probably a more elegant way to handle that "first dupe" boolean ... but this was most obvious to me and shouldn't pose any undo additional overhead. Creating a very simple object/class with its own state (I've been printed) would be an option. But I think that would make the overall gist of the code more difficult to understand. It should be obvious that this can be done in any scripting or programming language which support for associative arrays (hashes, dictionaries, tables whatever your preferred language calls them). The only difference between this code and most of the other examples I've seen in this thread is in the assumptions I'm making about your requirements (that you'd prefer to preserve the relative order of the input and output lines).
