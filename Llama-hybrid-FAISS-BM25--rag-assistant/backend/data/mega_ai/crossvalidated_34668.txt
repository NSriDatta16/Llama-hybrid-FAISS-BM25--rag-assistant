[site]: crossvalidated
[post_id]: 34668
[parent_id]: 33823
[tags]: 
Spectral coherence, if used correctly would do it. Coherence is computed at each frequency and hence is a vector. Hence, a sum of a weighted coherence would be a good measure. You would typically want to weight the coherence at frequencies that have a high energy in the power spectral density. That way, you would be measuring the similarities at the frequencies that dominate the time series instead of weighting the coherence with a large weight, when the content of that frequency in the time series is negligible. So, in simple words, the basic idea is to find the frequencies at which the amplitude(energy) in the signals are high (interpret this as the frequencies that dominantly constitute each signal) and then to compare the similarities at these frequencies with a higher weight and compare the signals at the rest of the frequencies with a lower weight. The area which deals with questions of this kind is called cross-spectral analysis. http://www.atmos.washington.edu/~dennis/552_Notes_6c.pdf is an excellent introduction to cross-spectral analysis. Optimal Lag: Also look at my answer over here: How to correlate two time series, with possible time differences This deals finding the optimal lag, using the spectral coherence. R has functions to compute the power spectral densities, auto and cross correlations, Fourier transforms and coherence. You have to write code to find the optimal lag to obtain the max. weighted coherence. That being said, a code for weighting the coherence vector using the spectral density must also be written. Following which you can sum up the weighted elements and average it to get the similarity observed at the optimal lag.
