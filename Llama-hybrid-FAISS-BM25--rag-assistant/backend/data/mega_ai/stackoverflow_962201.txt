[site]: stackoverflow
[post_id]: 962201
[parent_id]: 961942
[tags]: 
The worse language I've ever seen come from the tool praat, which is a good audio analysis tool. It does a pretty good job until you use the script language. sigh bad memories. Tiny praat script tutorial for beginners Function call We've listed at least 3 different function calling syntax : The regular one string = selected("Strings") Nothing special here, you assign to the variable string the result of the selected function. Not really scary... yet. The "I'm invoking some GUI command with parameters" Create Strings as file list... liste 'path$'/'type$' As you can see, the function name start at "Create" and finish with the "...". The command "Create Strings as file list" is the text displayed on a button or a menu (I'm to scared to check) on praat. This command take 2 parameters liste and an expression. I'm going to look deeper in the expression 'path$'/'type$' Hmm. Yep. No spaces. If spaces were introduced, it would be separate arguments. As you can imagine, parenthesis don't work. At this point of the description I would like to point out the suffix of the variable names. I won't develop it in this paragraph, I'm just teasing. The "Oh, but I want to get the result of the GUI command in my variable" noliftt = Get number of strings Yes we can see a pattern here, long and weird function name, it must be a GUI calling. But there's no '...' so no parameters. I don't want to see what the parser looks like. The incredible type system (AKA Haskell and OCaml, praat is coming to you) Simple natives types windowname$ = left$(line$,length(line$)-4) So, what's going on there? It's now time to look at the convention and types of expression, so here we got : left$ :: (String, Int) -> String lenght :: (String) -> Int windowname$ :: String line$ :: String As you can see, variable name and function names are suffixed with their type or return type. If their suffix is a '$', then it return a string or is a string. If there is nothing it's a number. I can see the point of prefixing the type to a variable to ease implementation, but to suffix, no sorry, I can't Array type To show the array type, let me introduce a 'tiny' loop : for i from 1 to 4 Select... time time bandwidth'i'$ = Get bandwidth... i forhertz'i'$ = Get formant... i endfor We got i which is a number and... (no it's not a function) bandwidth'i'$ What it does is create string variables : bandwidth1$ , bandwidth2$ , bandwidth3$ , bandwidth4$ and give them values. As you can expect, you can't create two dimensional array this way, you must do something like that : band2D__'i'__'j'$ The special string invocation outline$ = "'time'@F'i':'forhertznum'Hz,'bandnum'Hz, 'spec''newline$'" outline$ >> 'outfile$' Strings are weirdly (at least) handled in the language. the '' is used to call the value of a variable inside the global "" string. This is _weird_. It goes against all the convention built into many languages from bash to PHP passing by the powershell. And look, it even got redirection. Don't be fooled, it doesn't work like in your beloved shell. No you have to get the variable value with the '' Da Wonderderderfulful execution model I'm going to put the final touch to this wonderderderfulful presentation by talking to you about the execution model. So as in every procedural languages you got instruction executed from top to bottom, there is the variables and the praat GUI. That is you code everything on the praat gui, you invoke commands written on menu/buttons. The main window of praat contain a list of items which can be : files list of files (created by a function with a wonderderfulful long long name) Spectrogramm Strings (don't ask) So if you want to perform operation on a given file, you must select the file in the list programmatically and then push the different buttons to take some actions. If you wanted to pass parameters to a GUI action, you have to follow the GUI layout of the form for your arguments, for example " To Spectrogram... 0.005 5000 0.002 20 Gaussian " is like that because it follows this layout: Needless to say, my nightmares are filled with praat scripts dancing around me and shouting "DEBUG MEEEE!!". More information at the praat site, under the well-named section "easy programmable scripting language"
