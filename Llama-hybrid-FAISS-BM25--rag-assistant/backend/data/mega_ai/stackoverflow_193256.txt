[site]: stackoverflow
[post_id]: 193256
[parent_id]: 193161
[tags]: 
Non-python data is best bundled inside your Python modules using the package_data support in setuptools . One thing I strongly recommend is using namespace packages to create shared namespaces which multiple projects can use -- much like the Java convention of putting packages in com.yourcompany.yourproject (and being able to have a shared com.yourcompany.utils namespace). Re branching and merging, if you use a good enough source control system it will handle merges even through renames; Bazaar is particularly good at this. Contrary to some other answers here, I'm +1 on having a src directory top-level (with doc and test directories alongside). Specific conventions for documentation directory trees will vary depending on what you're using; Sphinx , for instance, has its own conventions which its quickstart tool supports. Please, please leverage setuptools and pkg_resources; this makes it much easier for other projects to rely on specific versions of your code (and for multiple versions to be simultaneously installed with different non-code files, if you're using package_data ).
