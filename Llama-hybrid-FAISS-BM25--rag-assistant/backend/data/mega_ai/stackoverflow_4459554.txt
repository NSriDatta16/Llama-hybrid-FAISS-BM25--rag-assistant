[site]: stackoverflow
[post_id]: 4459554
[parent_id]: 4050715
[tags]: 
Depends on whether you are using IIS7 Classic or Integrated Pipeline Mode. The standard way to do this with Integrated Pipeline mode is as follows: But to be safe you probably want to support a combination of IIS7 Classic/Integrated with graceful degradation on IIS5/6 (in case your dev box uses a different OS), Rick Strahal recommends using the following code on the web config to support both and bypass the nasty error thrown by IIS if you make it backwards-compatible: You will also notice an addition of runAllManagedModulesForAllRequest="true", this is relevant since otherwise the code in your HttpModule will only be executed when the browser calls for .aspx, .ashx, .asmx, etc files that are managed by the .NET framework. Also, in order to actually rewrite the url (instead of redirect the user) you will need to use the context.RewritePath(string) method inside your event handler. The way this works is that the application.Request.Path comes in with a 'friendly' string, which I imagine looks like this in your application: http://www.domain.com/robertp Which gets rewritten as follows: http://www.domain.com/Profiles/profile.aspx?AccountID=59 To do this instead of using context.Response.Redirect() you will need to use context.RewritePath() as follows: string UserURL = "~/Profiles/profile.aspx?AccountID=" + account.AccountID.ToString(); context.RewritePath(UserURL); ... TADA!! This should ensure that the url being passed through to the server is the one with profiles.aspx?AccountID=59 while the user gets a more friendly robertp on their browser. As for configuration options, so long as you stick to IIS7 you should be fine with the web config settings above. Its when you try testing on your Dev PC running IIS6 or IIS5 that you might have a problem and this will generally revolve around the fact that robertp does not have a recognizable file extension so your HttpModule code will not be executed unless you add a file extension that uses the .NET ISAPI. Hope that was useful.
