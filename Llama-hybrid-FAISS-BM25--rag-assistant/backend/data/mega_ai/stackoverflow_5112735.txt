[site]: stackoverflow
[post_id]: 5112735
[parent_id]: 
[tags]: 
Database layout for category-specific fields

I am working on a service request system for a city government call center. Citizens call in, and the call center agents input their request into a web form, which is then transmitted to the appropriate city agency. My question here pertains to the web form. The best way to explain this is to give an example. If Caller A is calling to report graffiti, after the agent selects 'graffiti' from the category list, I would like there to be separate fields for things like: Location/address of graffiti Color of paint needed to cover it Ladder necessary? (etc.) Whereas if Caller B is calling to report an abandoned vehicle, the fields offered should be things like: Location/address of vehicle Make/model of vehicle License plate number Color of vehicle (etc.) Obviously fields like location/address are pretty universal to any category of call, but the other fields are not, and are often relevant to only one type of call. So the question is how do I layout my database to accommodate for this? One idea that comes to mind, of course, is just to have all of these fields in the calls table and somehow specify which fields pertain to which types of calls, leaving the rest null ( license_plate would be null for a graffiti complaint, etc.). But the number of fields could certainly add up with that option. Another idea I had was to have separate tables, i.e. a graffiti_calls table, and have the fields defined there, although certain categories of calls would not need to have custom fields (such as someone calling to get a phone number). Lastly, a more complex way I thought to achieve this would be to have a category_questions table with id, category_id, question and a field_responses table with id, call_id, question_id, response . This option seems to be the most versatile but also the most complicated. What would be the best way to do this? Note that I have experience with PHP/MySQL; this is more of a concept question. Thanks in advance! EDIT: So I played around a bit with the 3rd option, and came up with this layout . I'm still open to suggestions though if you think this could be achieved in a better way.
