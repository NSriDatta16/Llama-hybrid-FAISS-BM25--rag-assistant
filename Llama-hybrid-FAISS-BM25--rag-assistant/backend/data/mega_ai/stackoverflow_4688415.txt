[site]: stackoverflow
[post_id]: 4688415
[parent_id]: 
[tags]: 
Help with Java errors,

All of this is compiled and run in bluej, so no main method is required, i am recieving many errors and i am new to java so i do not know how to fix them. Any help would be great appreciated. This one has errors`import java.util.*; public class LettingAgent{ private ArrayList myProperty; private int propertyNo; public LettingAgent(){ myProperty = new ArrayList (); propertyNo = 0; } public void addProperty(String newAddress, char newLocation, int newMonthlyRent, int newNoOfBedrooms){ Property newProperty = new Property(newAddress, newLocation, newMonthlyRent, newNoOfBedrooms); myProperty.add(newProperty); } public void removeProperty(int propertyNo){ if(propertyNo>myProperty.size() || propertyNo myProperty.size() || propertyNo myProperty.size()){ System.out.println("No Such Property."); }else{ break; } } } public void propertyList(Char location, int maxRent, int minBedrooms){ for(Property Property : myProperty){ if((Property.getLocation().equals(location))&& (Property.get(newMonthlyRent).equals(maxRent))&& (myProperty.get(newNoOfBedrooms).equals(minBedrooms))){ System.out.println(propertyNo); Property.displayDetails(); }else{ System.out.println("Property Does Not Fit Search Criteria!"); } } } } ` this is the associated class `//Property class public class Property{ //initialised variables private String address; private char location; private int monthlyRent; private int noOfBedrooms; private boolean occupied; private String tenantName; //constructor, to create a new property public Property( String newAddress, char newLocation,int newMonthlyRent, int newNoOfBedrooms){ address = newAddress; location = newLocation; monthlyRent = newMonthlyRent; noOfBedrooms = newNoOfBedrooms; occupied = false; tenantName = ""; } //method to return the address of created property public String getAddress(){ return address; } //method to return the location of created property public char getLocation(){ return location; } //method to return the rent of created property public int getMonthlyRent(){ return monthlyRent; } //method to return the number of bedrooms of created property public int getNoOfBedrooms(){ return noOfBedrooms; } //method to return the occupied status of created property public boolean getOccupied(){ return occupied; } //method to return the name of the tenant of created property public String getTenantName(){ return tenantName; } //method to set a new monthly rent public void newRentRate(int newMonthlyRent){ monthlyRent = newMonthlyRent; } //method to set a new tenant, but only works if current property is empty public void newTenant(String newTenant){ if(occupied){ System.out.println(" ERROR! Property is already occupied. "); }else{ tenantName = newTenant; occupied = true; } } //method used to remove tenant and reset the occupied status to false public void removeTenant(){ if(occupied){ tenantName = " "; occupied = false; }else{ System.out.println("ERROR! Property is already empty. "); } } //method implements a switch statement to switch the char type in to a more understandable string type // and also then displays the full property details. public void displayDetails(){ String fullLocation; switch(location){ case 'n': case 'N': fullLocation = " North London"; break; case 's': case 'S': fullLocation = " South London"; break; case 'e': case 'E': fullLocation = " East London"; break; case 'w': case 'W': fullLocation = " West London"; break; default: fullLocation = " unknown"; } System.out.println("Address :" + address); System.out.println("Location :" + fullLocation); System.out.println("Monthly Rent : " + monthlyRent); System.out.println("Number of bedrooms : " + noOfBedrooms); System.out.println("Occupied Status : " + occupied); if(occupied){ System.out.println("Tenants Name : " + tenantName); }else{ System.out.println(" "); } } } `
