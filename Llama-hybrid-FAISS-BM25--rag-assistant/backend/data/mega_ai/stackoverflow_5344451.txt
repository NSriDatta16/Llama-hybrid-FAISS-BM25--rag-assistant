[site]: stackoverflow
[post_id]: 5344451
[parent_id]: 
[tags]: 
Help in managing a iostream

Suppose that I get a stringbuf with some content that include certain character sequences who must be removed: std::stringbuf string_buff; std::iostream io_stream (&string_buff); io_stream There, the CRLF pairs must be removed, so I've tested some as: int pos = 0; while (true) { pos = string_buff.str().rfind("\r\n"); if (pos == string_buff.str().npos) { break; } else { std::string preamble = string_buff.str().substr(0, pos); std::string postamble = string_buff.str().substr(pos +2); io_stream.seekp(0); io_stream But the sequence remains of the same length. So, I get the following result: part-onepart-twopart-threeENDNDNDND I suppose that there are some way to do this -and more elegant- but I'm unable to find the way. By the way. It seems that the direct manipulation on the inner string does not work. I say tings like: string_buff.str().clear(); Neither io_stream.clear(); or io_stream.flush(); Unfortunately I mistaken in my initial approach As I mentioned earlier, the real problem is related to a boost::asio::streambuf and my mistake was in try to mimic that, with a std::istream in a separate console application for test purposes. Of course, with an asio::streambuf y can't do some as strembuf.str(""); So the real situation is this: boost::asio::streambuf stream_buff; std::iostream response_stream(&stream_buff); response_stream My apologies for the confussion. The question remains the same: How can I remove the CRLF -or any other- character sequence from the input?
