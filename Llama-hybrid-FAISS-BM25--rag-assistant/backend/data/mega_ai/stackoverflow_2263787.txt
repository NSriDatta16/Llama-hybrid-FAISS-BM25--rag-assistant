[site]: stackoverflow
[post_id]: 2263787
[parent_id]: 2235889
[tags]: 
It should be possible to use something like this: select section, coalesce(select avg(Price) from table iq1 where Listingdate > dateadd(day,-10,getdate()) and oq.section =iq1.section, select avg(price) from table iq2 where Listingdate > dateadd(day,-30,getdate()) and oq.section =iq2.section,0) as averageprice from table oq group by section A couple of notes: sorry I'm not in front of my pc so I couldn't proof read this and the brackets may be out, but that's the idea in general-use coalesce to either the first criteria and providing there are no records the average should return null and use the second criteria and if that has none finally 0. The other thing is to use the date add function as above to make the expression SARGable and there able to use indexes. Hope this helps, Steve EDIT Here is the code which I have done basic testing on. It is simple, and will give you first the average for that section for the last 10 days, failing that, the last 30 days for the section, failing that the last 10 days for all sections and failing that the last 30 days for all sections. It will also give an avergageType of 1,2,3 or 4 respectively. I apologise in advance for the state of the SQL display - I am yet to work out how to format it nicely-and its really late :) select sectionID, coalesce ( (select avg(Price) from Prices iq1 where Listingdate > dateadd(day,-10,getdate()) and > oq.sectionID = iq1.sectionID), (select avg(price) from Prices iq2 where Listingdate > dateadd(day,-30,getdate()) and > oq.sectionID =iq2.sectionID), (select avg(Price) from Prices iq1 where Listingdate > dateadd(day,-10,getdate())), (select avg(Price) from Prices iq1 where Listingdate > dateadd(day,-30,getdate())), 0 ) as averageprice, CASE WHEN (select > avg(Price) from Prices iq1 where Listingdate > dateadd(day,-10,getdate()) and oq.sectionID = iq1.sectionID) IS NOT NULL THEN 1 ELSE CASE WHEN (select > avg(price) from Prices iq2 where Listingdate > dateadd(day,-30,getdate()) and oq.sectionID =iq2.sectionID) IS NOT NULL THEN 2 ELSE CASE WHEN (select > avg(Price) from Prices iq1 where Listingdate > dateadd(day,-10,getdate())) IS NOT NULL THEN 3 ELSE CASE WHEN (select > avg(Price) from Prices iq1 where Listingdate > dateadd(day,-30,getdate())) IS NOT NULL THEN 4 ELSE 5 END END END END AS AverageType from Prices oq where sectionID = @SectionID group by sectionID
