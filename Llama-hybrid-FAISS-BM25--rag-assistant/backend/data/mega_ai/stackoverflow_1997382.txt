[site]: stackoverflow
[post_id]: 1997382
[parent_id]: 1950817
[tags]: 
In Emacs, to start automatic wrapping, enter auto-fill-mode . To set the line width, run C-u ⟨ columns ⟩ C-x f . Emacs, or really CC Mode, will anticipate your commenting structure, so that typing /// This is a really long line that shoul will result in /// This is a really long line that /// shoul‸ And you can refill a paragraph at any time with M-q . If you want to do refills automatically with each keypress, well there may well be some interal command or third-party library out there, but off-hand you can use this elisp code: ;;; Can't advise SELF-INSERT-COMMAND, so create a wrapper procedure. (defun self-insert-refill (n) (interactive "p") (self-insert-command n)) ;;; Advise SELF-INSERT-REFILL to execute FILL-PARAGRAPH after every ;;; keypress, but *only* if we're inside a comment (defadvice self-insert-refill (after refill-paragraph) (let ((face (or (get-char-property (point) 'read-face-name) (get-char-property (point) 'face))) ) (if (and (eq face 'font-lock-comment-face) (not (string= " " (this-command-keys)))) ; Spaces would get deleted on refill. (fill-paragraph)))) (ad-activate 'self-insert-refill) (add-hook 'c-mode-hook ;; Remap SELF-INSERT-COMMAND to be SELF-INSERT-REFILL. (local-set-key [remap self-insert-command] 'self-insert-refill) )) This is probably not very robust or in keeping with best-practice, and likely not wholly satisfactory, as it won't work for general editing, e.g. C-d and backspace , and it slows down the editor somewhat, but it's a start.
