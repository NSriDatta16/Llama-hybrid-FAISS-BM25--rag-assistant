[site]: stackoverflow
[post_id]: 680277
[parent_id]: 680162
[tags]: 
The only native way to do this in ClearCase is to use attribute within a config-spec . According to the version selector rules, you can make a "selection by query" rule, based for instance on an attribute: element * ...{MY_ATTRIBUTE_NAME=="aValue"} would select the LATEST version on any branch with an attribute ' MY_ATTRIBUTE_NAME ' with ' aValue ' in it. That mean you need to change the attribute value on the old branch, put it on the new branch, ' cleartool setcs ' your view again, and you should have a new content based on a new version selection. Not very straight forward, but it could work, except for the mkbranch part (which needs a fixed name). Regarding GeekCyclist's answer , a few comments: The solution to include a common config spec can work for Base ClearCase solution, but: need to be in a share available by all concerned developer the setcs is indeed necessary to Ccuses the view_server to flush its caches and reevaluate the current config spec, which is stored in file config_spec in the view storage directory. This includes: Evaluating time rules with nonabsolute specifications (for example, now, Tuesday) Reevaluating â€“config rules, possibly selecting different derived objects than previously Re-reading files named in include rules all the other developers need to be notified when the common included config spec file changes (there is no native notification included in ClearCase) If you need to have one "environment" (i.e. one "view" or workspace) with a variable content (depending on a different branch), you need to define a symbolic link (or a windows subst) pointing to different views (each with their own config spec) That way, you only have to change the link (or the path subst'ed) in order to change the config spec associated with a given fixed path.
