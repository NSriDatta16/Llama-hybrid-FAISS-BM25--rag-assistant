[site]: stackoverflow
[post_id]: 4864824
[parent_id]: 
[tags]: 
Nested forms with triggers

I'm trying to build a product configurator with several business rules. I have two models, one is product, the second is component. a product has many components, but the same component could be used in different products. I have the models and relations etc, and trying to build my show view in the product controller --in controller def show @product = Product.find(params[:id]) @productelements = Product.find(params[:id]).elements end --in view So far so good, except it needs to hold certain rules. This is to be able to configure products like computers. Quantities are user defined (in some cases) but they might affect other elements. For example if I have the following: Element Quantity Processor A 1 RAM in GB 2 HDD Type B 2 User can change the processor to processor B, but in this case the quantity of the HDD will need to change to 1. This is just to illustrate. So I'm trying to figure out how to: - Wrap this looping through elements into a form. - Make the form responsive to changes and call a function which would validate and adjust where needed. - render the product with the validated fields. Any advice you can give me? Or maybe the approach is not at all realistic? Mind there's many products and many rules, so I didn't want to make case statements inside the controller as it would drag for miles! Thanks!
