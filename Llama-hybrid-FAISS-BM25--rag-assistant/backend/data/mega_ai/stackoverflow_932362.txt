[site]: stackoverflow
[post_id]: 932362
[parent_id]: 932237
[tags]: 
First, I'd get a good word list. This NPL page has a good list of word lists of varying sizes and sources. What I would do is build a hash table of all the words in the word list, and then test each word that is output by strings against the word list. This is pretty easy to do in Python: import sys dictfile = open('your-word-list') wordlist = frozenset(word.strip() for word in dictfile) dictfile.close() for line in sys.stdin: # if any word in the line is in our list, print out the whole line for word in line.split(): if word in wordlist: print line break Then use it like this: strings myexecutable.elf | python myscript.py However, I think you're focusing your attention in the wrong place. Eliminating debug strings has very diminishing returns. Although eliminating debugging data is a Technical Certification Requirement that Nintendo requires you to do, I don't think they'll bounce you for having a couple of extra strings in your ELF. Use a profiler and try to identify where you're using the most memory. Chances are, there will be a way to save huge amounts of memory with little effort if you focus your energy in the right place.
