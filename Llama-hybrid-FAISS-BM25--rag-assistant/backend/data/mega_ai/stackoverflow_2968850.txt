[site]: stackoverflow
[post_id]: 2968850
[parent_id]: 2968640
[tags]: 
To increase the heap space size beyond the default 64MB, you need to execute the application with -Xmx parameter (for the applet add it in the Java Runtime Settings which you can find in the administration tools on any OS). I guess though it's not an option in case this is gonna be a web application where you'll have to modify a lot of end-user machines. I'd like to find out more about that storage in an x-dimensional array. What exactly do you store? Why 4-byte floats? The uncompressed raw image is usually stored in an WIDTHxHEIGHT array where each cell contains a color object (e.g. 3 shorts describing RGB space). Such an array for a 500x500 image would require 500 * 500 * 3 (the amount of color dimensions) * 2(bytes for a short) = 1 500 000 bytes, way less than 500 * 500 * 5 (still haven't figured out why 5, probably you store color + coordinates) * 4 (bytes in float) = 5 000 000 bytes. Have in mind that exactly for this reason compression algorithms (like JPEG) have been developed, so that you don't have to keep in memory 1.5MB for each image. As of the iterations, but mostly for consequent storage of those, there's not much to say, unless you want to get into the hassle to write something like MPEG format where you'll have to only save the changes between frames.
