[site]: stackoverflow
[post_id]: 1044897
[parent_id]: 1044518
[tags]: 
Have you considered using MadExcept ? If you catch the error in the interface methods you can either log the call stack or show a dialog to the user and return a standard EOleSysError back to the calling exe. Something like this: except on e: Exception do begin MadExcept.HandleException(); raise EOleSysError.Create('InitializeObject Failed', ErrorNumberToHResult(1 + CODE_BASE), 1); end; If the application hangs but not not throw and exception you can see what is happening by using the MadExcept utility madTraceProcess. That will let you generate a call stack for the running application. Your dll will not be on the main thread, but you will be able to see your call stack. That is a good way to tell if your dll is actually doing anything when the hang happens. I have a COM dll that interacts with a exe that does not use MadExcept and this approach has worked well for me.
