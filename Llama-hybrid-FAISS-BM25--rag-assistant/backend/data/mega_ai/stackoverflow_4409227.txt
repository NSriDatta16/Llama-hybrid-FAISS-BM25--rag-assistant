[site]: stackoverflow
[post_id]: 4409227
[parent_id]: 4408074
[tags]: 
Ok, even I am the one who asked the question, I would like to share my opinion as well; but thanks to all of you for your responses. My opinion-although I don't want to insist as it is the best practice- is basically something like below. (@AgentConundrumIt: Yes, you are right, this is my own project.) The list of things I plan to do before selecting class to write in the first place : Get the final requirements needed for the application from the customer Have a picture in your mind on the possible the UI Decide what development tools, environment, technologies, tools etc. you need to use List the modules of the application and see which modules are dependent or in relation to other ones directly in terms of domain logic List the possible " INDEPENDENT " or " Stand-alone " classes you need to create for each module of the application Design them " on the paper " with the best OOP structure so that they can be testable Score them with their logical complexity, possible dependencies(if still exist) and probability of possible future changes Choose a class to start with the lowest score (High score means hard to implement and possible to be changed in the future and harder to unit-test at this stage as well, relatively) Start writing the TEST(s) that fails for the chosen class Develop your first class; keep going developing your first class until you pass all your tests for it. So basically I have something like this in my mind as a start-up. What do you think?
