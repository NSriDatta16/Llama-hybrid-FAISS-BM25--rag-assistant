[site]: stackoverflow
[post_id]: 1995303
[parent_id]: 1980596
[tags]: 
With the hints kindly provided above, here's what I found most useful as someone pretty new to JMockit: JMockit provides the Deencapsulation class to allow you to set the values of private dependent fields (no need to drag the Spring libraries in), and the MockUp class that allows you to explicitly create an implementation of an interface and mock one or more methods of the interface. Here's how I ended up solving this particular case: @Before public void setUp() { IMarketMakerDal theMock = new MockUp () { @Mock MarketMakerDcl findByMarketMakerGuid( String marketMakerGuid ) { MarketMakerDcl marketMakerDcl = new MarketMakerDcl(); marketMakerDcl.setBaseCurrencyCode( CURRENCY_CODE_US_DOLLAR ); return marketMakerDcl; } }.getMockInstance(); setField( unitUnderTest, theMock ); } Thanks everyone for the help.
