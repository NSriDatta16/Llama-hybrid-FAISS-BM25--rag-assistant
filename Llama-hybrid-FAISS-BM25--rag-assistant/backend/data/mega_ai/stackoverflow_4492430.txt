[site]: stackoverflow
[post_id]: 4492430
[parent_id]: 4491027
[tags]: 
Ok first you need to create a parser Below is the code to do this: public static void readTemplateFile(Context context) { /** Include File Checking */ try { XML_Handler_Template myExHan = new XML_Handler_Template(); InputStreamReader isr = new FileReader( new File(Environment.getExternalStorageDirectory().getPath() + "/Library Template.xml" )); XML_Handler_Template.context = context; SAXParserFactory spf = SAXParserFactory.newInstance(); SAXParser sp = spf.newSAXParser(); XMLReader xr = sp.getXMLReader(); xr.setContentHandler((ContentHandler) myExHan); xr.parse(new InputSource(isr)); } catch (Exception e) { Toast.makeText(context, ">" + e.getMessage(), Toast.LENGTH_LONG).show(); } } You then need a Handler Class. In the above example my class is called XML_Handler_Template. FileReader( new File(Environment.getExternalStorageDirectory().getPath() + "/FILEPATH/FILE.XML" )); Here is the XML_Handler_Class at the moment it is blank: import org.xml.sax.Attributes; import org.xml.sax.SAXException; import org.xml.sax.helpers.DefaultHandler; public class XML_Handler_Template extends DefaultHandler{ public static Context context = null; @Override public void startDocument() throws SAXException { //this is called when the document is first read } @Override public void startElement(String namespaceURI, String localName, String qName, Attributes atts) throws SAXException { //This is called when a new Tag is opened //localName holds the Tag Name, the Value is got from the //Characters function at the end of this class //the attributes for each tag are stored in the atts array, you can either handle the attribute values here or pass the information to a separate function to handle them, if (atts.getLength()>0){ for (int i=0;i } have a play with this and see how you get on for now =0) I passed a context to the class so whilst i was learning I could use toasts to show me the values that were being read.
