[site]: stackoverflow
[post_id]: 2092421
[parent_id]: 2092319
[tags]: 
I think you should use different collections for different needs. For example, you can incapsulate this logic into one class that contains several containers that optimized for specific needs: class Key {} class Value {} class MySpecificStorage { public void AddSomeEntry(Key key, Value value) { dictionary[key] = value; values.Add(value); } public Value FindValueByKey(Key key) { //very simple return dictionary[key]; } public IEnumerable GetSomeRange() { //use LINQ or something else //to fetch many structs, say 1% or less of all items, by another field. //You can even use different Dictionaries for that return ...; } private Dictionary dictionary = new Dictionary (); private List values = new List (); //or List > values; }
