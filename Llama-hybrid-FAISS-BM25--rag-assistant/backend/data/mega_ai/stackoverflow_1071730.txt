[site]: stackoverflow
[post_id]: 1071730
[parent_id]: 1071716
[tags]: 
I'm not quite sure what you're getting at, but you can call a second function on the object returned from the first function - in fact, it is very much encouraged to return a jQuery object from your plugins, and the reason why you can chain commands in jQuery. Using your examples var actionBox = $('actionBox').actionList(options); //Many light-cycles later actionBox.refreshData(data); would work fine, so long as both .actionList() and .refreshData(data) commands both return a jQuery object. And $('actionBox').actionList.refreshData(data); would need to be $('actionBox').actionList().refreshData(data); EDIT: Looking at the jQuery source code, jQuery.fn = jQuery.prototype = { /* Load of 'property' functions of jQuery object... */ } so, adding properties (a.k.a plugins) to jQuery.fn extends the prototype of the jQuery object. When you call $(selector, context); a new jQuery object is returned, using the init property function of the jQuery object jQuery = window.jQuery = window.$ = function( selector, context ) { // The jQuery object is actually just the init constructor 'enhanced' return new jQuery.fn.init( selector, context ); },
