[site]: stackoverflow
[post_id]: 4383813
[parent_id]: 4383805
[tags]: 
fire() needs to be virtual - that way, if you call it, the proper implementation will be called. Declare it as virtual void fire(); You then just assign objects of the appropriate type, for example weapon[0] = new flamer(); - be sure to delete it when you're done, or before reassigning another object on the same slot. Other than that, your approach is exactly how polymorphism should be implemented. (Of course, you could consider a different storage than a C-style array, or be sure that you implement proper bounds checking, but that's beyond the scope of your question). (Side note: If you have virtual functions, you also need to add a virtual destructor.)
