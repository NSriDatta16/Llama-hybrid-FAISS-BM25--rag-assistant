[site]: stackoverflow
[post_id]: 3642699
[parent_id]: 3642222
[tags]: 
Here's another way: class FileCleaner extends FilterIterator { public function __construct($srcFile) { parent::__construct(new ArrayIterator(file($srcFile))); } public function accept() { list($num) = explode(' ', parent::current(), 2); return ($num > 0); } public function write($file) { file_put_contents($file, implode('', iterator_to_array($this))); } } Usage: $filtered = new FileCleaner($src_file); $filtered->write($new_file); Logic and methods can be added to the class for other stuff, such as sorting, finding the highest number, converting to a sane storage method such as csv, etc. And, of course, error checking.
