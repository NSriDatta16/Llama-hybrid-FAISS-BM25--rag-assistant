[site]: stackoverflow
[post_id]: 2382746
[parent_id]: 2377222
[tags]: 
It would be a good idea to split the cache and allocate each array in a different part of it. Unfortunately that is not possible. The caches of the CortexA8 just are not that flexible. The good old StrongArm had a secondary cache for exactly this splitting purpose, but it's not available anymore. We have L1 and L2 caches instead (overall a good change imho.) However, there is a thing you can do: The NEON SIMD unit of the CortexA8 lags behind the general purpose processing unit by around 10 processor cycles. With clever programming you can issue cache prefetches from the general purpose unit but do the accesses via NEON. The delay between the two pipelines gives the cache a bit of time to do the prefetches, so your average cache miss time will be lower. The drawback is that if you must never move the result of a calculation back from NEON to the ARM unit. Since NEON lags behind this will cause a full CPU pipeline flush. Almost if not even more costly as a cache miss. The difference in performance can be significant. Out of the blue I would expect something between 20% and 30% of speed improvement.
