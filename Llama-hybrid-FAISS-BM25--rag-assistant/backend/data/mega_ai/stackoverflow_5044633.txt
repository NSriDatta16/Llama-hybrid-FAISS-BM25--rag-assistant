[site]: stackoverflow
[post_id]: 5044633
[parent_id]: 
[tags]: 
Python: how to create a function pointer with a set argument?

My problem: Given the following: def foo(a,b) I am trying to call the python 'map' function while passing in a list for 'a' but use a set value for 'b.' Another relevant fact is that 'b' is user input and thus, I cannot use the syntax: def foo(a,b='default value') I want my 'map' call to look like this: map(foo_wrapper,list_for_a) where 'foo_wrapper' is some function that takes in 'a' but uses the user specified 'b.' I don't know whether function pointers can be specified this way and suspect that they cannot. My solution to this problem uses globals, so if there's a more elegant way and the above is impossible, I will mark that as the answer as well. Here is my solution in a nutshell: b = '' def foo(a,b): print b,a def foo_wrapper(a): foo(a,b) def main(): if sys.argv[1]: a = ['John', 'Jacob', 'Jingle all the way'] global b b = sys.argv[1] map(foo_wrapper,a) There may be a typo or two in the above; I am simplifying the problem from what I actually need to do. Thanks for the replies!
