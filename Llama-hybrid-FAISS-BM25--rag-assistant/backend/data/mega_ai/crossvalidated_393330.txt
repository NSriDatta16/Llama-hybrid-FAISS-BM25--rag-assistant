[site]: crossvalidated
[post_id]: 393330
[parent_id]: 
[tags]: 
sklearn Support Vector Regression - test data prediction is constant

I am just getting into learning some basic machine learning for a project at university and I am having a little trouble with SVR on sklearn. When training a model I can change the epsilon value and see the prediction changing from almost perfect replication to good estimates. However nothing I seem to do changes the output predictions on the testing data, the values are constant. I have a feeling it could be due to data formatting because at one point I changed the index column to be the first column on my csv and the first testing output changed however after that they became constant again. import numpy as np import pandas as pd KPN = pd.read_csv('Regression.csv').astype('float32') def Split_Train_Test(data, test_ratio): train_set_size = 1 - int(len(data) * test_ratio) train_set = data[:train_set_size] test_set = data[train_set_size:] return train_set, test_set train, test = Split_Train_Test(KPN, 0.1) The data has 1200 rows so I am just going to use the first 100 for an example: X = train.iloc[:50,0:1] y = train["output"][0:50] X_test = train.iloc[50:100,0:1] from sklearn.svm import SVR svr_rbf = SVR(kernel='rbf', epsilon=0.05) svr_rbf.fit(X,y) svr_rbf.predict(X) array([2.72315689, 2.65343986, 2.61527852, 2.63005085,...,2.53509259]) svr_rbf.predict(X_test) array([2.5851449, 2.6134029 , 2.6134029, 2.6134029,..., 2.6134029]) The X values are just time points, so 1,2,3,.... and the Y values are just points of a time series. edit: Added time plots
