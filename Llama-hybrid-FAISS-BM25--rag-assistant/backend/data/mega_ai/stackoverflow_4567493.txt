[site]: stackoverflow
[post_id]: 4567493
[parent_id]: 4567485
[tags]: 
Typically IDs are unique to each element in a document. (EDIT should be) You can access an ID quickly with the famous "dollar function": function $(idString) { return document.getElementById(idString); } ...which will return the element with that ID, e.g. var targetTable = $('ctable'); and you can go to work on it. The name attribute can be used to group elements together. You can then use getElementsByName() to get the group (except in IE). Also, the name attribute is not strictly valid for most elements, so it's not really encouraged to use that. However, I find that method quite useful anyway. This function will work in all browsers: function $N(name,parentObj) { //Can provide parent object to optimize search var ALL, E = new Array(); parentObj ? ALL = $T("*",parentObj) : ALL = $T("*"); for(a=0;a ...which will return a group of elements with the same name. Since we're on the subject, a strictly valid method of collecting a group of elements is having a common value in their class attribute. The JQuery library has various functions that do all of this.
