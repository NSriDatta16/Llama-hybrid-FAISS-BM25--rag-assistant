[site]: stackoverflow
[post_id]: 5045729
[parent_id]: 5045509
[tags]: 
The simple-minded workaround is: preg_replace("# [>][^ This ensures that there's one closing > angle bracket before the word. (And \K makes it forget that matched part). However it will only ever replace the very first occurence of word1 per enclosing tag / paragraph / etc. So a much better solution would be to use preg_replace_callback("/>([^ and the second word1|word2|word3 regex (your existing code) in the callback function instead.
