[site]: stackoverflow
[post_id]: 5700444
[parent_id]: 5575047
[tags]: 
The simplest solution consist of using 1 blob per counter (aka Blob Storage). The blob would actually contain not just the final count but the identifiers of the voting users as well . This would ensure no double voting. Open source libraries such as Lokad.Cloud can help you for this (disclaimer: I work at Lokad). One drawback of this approach is that you counter won't scale above ~10 votes / second - which is already a lot for most web apps. Then, if you are really thinking about super-heavy duty counters, you should think of sharded counters which can be implemented both with Table Storage and Blob Storage. Another angle to look at this is to think CQRS , and let the voting issue a command message for async processing while Javascript takes care of providing immediate feedback to the user. The most notable benefit here is that it becomes possible to have a single blob representing the entire state of the page , voting counters along with other stuff to speed-up reads . Check Lokad.CQRS to do this.
