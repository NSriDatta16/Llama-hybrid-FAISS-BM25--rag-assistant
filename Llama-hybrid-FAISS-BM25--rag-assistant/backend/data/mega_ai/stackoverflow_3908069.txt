[site]: stackoverflow
[post_id]: 3908069
[parent_id]: 3749990
[tags]: 
I'm doing this exact thing using jQuery. In my main page where the tiles are defined, I have: Then, in the places where I want to call a page fragment I have: And lower in the same page where I want the fragment to appear, I have: And I have some element with an ID of "addNewFragment" so that when I click on it, the jQuery function executes. I have a controller called FragmentController.java. It takes the form of: import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.springframework.stereotype.Controller; import org.springframework.ui.ModelMap; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; @RequestMapping("/fragments/**") @Controller public class FragmentController { // Add request mappings as you need to. @RequestMapping(value = "/fragments/target.page", method = RequestMethod.GET) public String getFragment(ModelMap modelMap, HttpServletRequest request, HttpServletResponse response) { //Add model elements as you need to. return "fragmentView"; } } Finally, I have a view in the views.xml file declared which maps the "fragmentView" view back to an actual .jspx page. As an aside, jspx pages are naturally XML based. jQuery can't insert XML into an HTML based DOM. Make sure you start them with: Otherwise, you get a mysterious JavaScript error: Error: uncaught exception: [Exception... "Node cannot be inserted at the specified point in the hierarchy" code: "3" nsresult: "0x80530003 (NS_ERROR_DOM_HIERARCHY_REQUEST_ERR)" location: "http://127.0.0.1:8080/path/to/jquery/jquery-1.4.2.min.js Line: 113"] Hope this helps!
