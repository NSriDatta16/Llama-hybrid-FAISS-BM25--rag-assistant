[site]: stackoverflow
[post_id]: 218824
[parent_id]: 218123
[tags]: 
I've had a lot of stupid rules, but not a lot that I considered downright strange. The sillyiest was on a NASA job I worked back in the early 90's. This was a huge job, with well over 100 developers on it. The experienced developers who wrote the coding standards decided that every source file should begin with a four letter acronym, and the first letter had to stand for the group that was responsible for the file. This was probably a great idea for the old FORTRAN 77 projects they were used to. However, this was an Ada project, with a nice hierarchal library structure, so it made no sense at all. Every directory was full of files starting with the same letter, followed by 3 more nonsense leters, an underscore, and then part of the file name that mattered. All the Ada packages had to start with this same five-character wart. Ada "use" clauses were not allowed either (arguably a good thing under normal circumstances), so that meant any reference to any identifier that wasn't local to that source file also had to include this useless wart. There probably should have been an insurrection over this, but the entire project was staffed by junior programmers and fresh from college new hires (myself being the latter). A typical assignment statement (already verbose in Ada) would end up looking something like this: NABC_The_Package_Name.X := NABC_The_Package_Name.X + CXYZ_Some_Other_Package_Name.Delta_X; Fortunately they were at least enlightened enough to allow us more than 80 columns! Still, the facility wart was hated enough that it became boilerplate code at the top of everyone's source files to use Ada "renames" to get rid of the wart. There'd be one rename for each imported ("withed") package. Like this: package Package_Name renames NABC_Package_Name; package Some_Other_Package_Name renames CXYZ_Some_Other_Package_Name; --// Repeated in this vein for an average of 10 lines or so What the more creative among us took to doing was trying to use the wart to make an acutally sensible (or silly) package name. (I know what you are thinking, but explitives were not allowed and shame on you! That's disgusting). For example, I was in the C ommon code group, and I needed to make a package to interface with the W orkstation group. After a brainstorming session with the Workstation guy, we decided to name our packages so that someone needing both would have to write: with CANT_Interface_Package; with WONT_Interface_Package;
