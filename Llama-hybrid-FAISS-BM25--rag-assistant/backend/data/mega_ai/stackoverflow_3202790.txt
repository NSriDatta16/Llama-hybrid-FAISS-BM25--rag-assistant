[site]: stackoverflow
[post_id]: 3202790
[parent_id]: 
[tags]: 
how can i integrate ticker in iphone application

i want to run my view based window application with ticker.i have code for ticker but it is in cocoa.. so how can i integrate cocoa application in my project.? this is TickerView.h file #import @interface TickerView : NSTextView { @private NSTimer *mTimer; double mOffset; } - (NSString *)stringValue; - (void)setStringValue:(NSString *)stringValue; - (void)appendString:(NSString *)s; - (IBAction)startAnimation:(id)sender; - (IBAction)stopAnimation:(id)sender; @end This is TickerView.m file #import "TickerView.h" @implementation TickerView - (id)initWithFrame:(NSRect)frame { self = [super initWithFrame:frame]; if (self) { [self setEditable:NO]; NSTextContainer *container = [self textContainer]; [container setWidthTracksTextView:NO]; [container setContainerSize:NSMakeSize(99999., frame.size.height)]; } return self; } - (void)dealloc { [self stopAnimation:self]; [super dealloc]; } - (void)drawRect:(NSRect)rect { [super drawRect:rect]; } - (NSString *)stringValue { return [[self textStorage] string]; } - (NSDictionary *)standardAttributes { return [NSDictionary dictionaryWithObjectsAndKeys: [NSFont fontWithName:@"Helvetica" size:([self frame].size.height * 0.8)], NSFontAttributeName, [NSColor redColor], NSForegroundColorAttributeName, nil]; } - (void)setStringValue:(NSString *)s { NSRange fullRange = NSMakeRange(0, [[self textStorage] length]); NSAttributedString *sa = [[[NSAttributedString alloc]initWithString:s attributes:[self standardAttributes]] autorelease]; [[self textStorage] replaceCharactersInRange:fullRange withAttributedString:sa]; } - (void)appendString:(NSString *)s { NSRange endRange = NSMakeRange([[self textStorage] length], 0); NSAttributedString *sa = [[[NSAttributedString alloc]initWithString:s attributes:[self standardAttributes]] autorelease]; [[self textStorage] replaceCharactersInRange:endRange withAttributedString:sa]; } - (IBAction)startAnimation:(id)sender { if (nil == mTimer) { mTimer = [NSTimer scheduledTimerWithTimeInterval:1./60. target:self selector:@selector(step:) userInfo:nil repeats:YES]; } } - (IBAction)stopAnimation:(id)sender { if (mTimer) { [mTimer invalidate]; [mTimer release]; mTimer = nil; } } - (void)step:(NSTimer *)timer { mOffset -= 2; // pixels per tick [self setTextContainerInset:NSMakeSize(mOffset, 0)]; [self setNeedsDisplay:YES]; } @end
