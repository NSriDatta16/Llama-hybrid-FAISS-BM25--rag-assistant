[site]: stackoverflow
[post_id]: 5198228
[parent_id]: 
[tags]: 
Defining attributes for objects/entities in python/google app engine

I've seen repeated examples like this: from google.appengine.ext import db import datetime class Book(db.Expando): pass obj = Book() obj.title = 'The Grapes of Wrath' obj.author = 'John Steinbeck' obj.copyright_year = 1939 obj.author_birthdate = datetime.date(1902, 2, 27) obj.put() It's the first time I've come across this sort of code, where the attributes are set outside of the class definition. It strikes me as a very bad practice. I prefer: class Book(db.Model): title = db.StringProperty() author = db.StringProperty() copyright_year = db.IntegerProperty() author_birthdate = db.DateProperty() ... obj = Book(title='The Grapes of Wrath', author='John Steinbeck', copyright_year=1939, author_birthdate=datetime.date(1902, 2, 27)) Can someone offer an assurance over the nature of the author's practice? Where and when such a method would be acceptable? It was mentioned that google's model for data storage allows for unusual flexibility. I thought this example may be a poor and overly subtle introduction to that concept. The author has actually pointed out the disadvantages of this style, yet goes on to keep repeating it. So, there might be some advantage to it.
