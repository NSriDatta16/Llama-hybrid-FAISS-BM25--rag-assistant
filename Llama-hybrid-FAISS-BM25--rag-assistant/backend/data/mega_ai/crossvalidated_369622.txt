[site]: crossvalidated
[post_id]: 369622
[parent_id]: 
[tags]: 
Is this random forest logical correct and correct implemented with R and gbm?

For professional reasons I want to learn and understand random forests. I feel unsafe if my understanding is the correct or if I am doing logical errors. I got a data set with 15 million entries and want to make a regression for a numerical target (time). The data structure is: I have 7 categorical variables, 1 date and 4 numerical features. After data preparation I split the data into training and test data set. Than I defined a gradient boosting machine model and search for the right parameters by try and error, research and more try and error. Is this approach correct as far? #train and test are the prepared data frames #RMSE is an implementation of the root mean squared error function #gradient boosting machine training model gbmTraining $target) errorTrain target print("meanTrainError(predicted, actual):") print(mean(errorDiffTrain)) #write and save results print("summary training") print(head(data.frame("Actual" = train $target, "Predicted" = fitTrain))) print(summary(data.frame("Actual" = train$ target, "Predicted" = fitTrain))) trainTable Here I want to know if I use the correct arguments if I calculate the errors. Do I calculate the errors between the fitted data and data from the test data set or do I use here the data from the training data set? If I found good parameters and want to go to validation the implementation becomes shorter because I use the found parameters. I create a new model for the tests: #gbm testing model gbmTesting = gbm(test$target~., data=test, distribution = "gaussian", n.trees = 500, n.cores=2, verbose = FALSE, shrinkage = .03, interaction.depth = 42, n.minobsinnode = 15) #make test prediction fitTest $target) errorTest target print("meanTestError(predicted, actual):") print(mean(errorDiffTest)) print("summary testing") print(head(data.frame("Actual" = test $target, "Predicted" = fitTest))) print(summary(data.frame("Actual" = test$ target, "Predicted" = fitTest))) testTable Is this correct or do I fall into a mental tripping hazard? p.s. the stack exchange community is so huge I am not sure if this has to be in some of the other sites? If yes, which one?
