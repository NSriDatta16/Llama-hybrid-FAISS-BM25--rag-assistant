[site]: datascience
[post_id]: 116585
[parent_id]: 
[tags]: 
How does the concatenation work between CNN and normal features

I have a problem. I have trained a CNN model for an NLP classification problem and combined it with other features. I am using Concatenate to concatenate the two layers with it. My question is how does this chaining work? How can this be thought of? class CNN_1D: def __init__(self, x, y): self.x = x self.y = y def forward(self): # filter_sizes = [1,2,3,5] # num_filters = 32 extra_nb_features = df_train.shape[1] inp = Input(shape=(maxlen, )) extra_inp = Input(shape=(extra_nb_features, )) x = Embedding(embedding_matrix.shape[0], 300, weights=[embedding_matrix], trainable=False)(inp) x = SpatialDropout1D(0.4)(x) x = Conv1D(256, 7, activation='relu')(x) x = MaxPooling1D()(x) x = Dropout(0.2)(x) x = Flatten()(x) combined = Concatenate(axis=-1)([x, extra_inp]) combined = Dropout(0.15)(combined) outp = Dense(numbmer, activation="softmax")(combined) model = Model(inputs=[inp, extra_inp] , outputs=outp) model.summary() return model
