[site]: crossvalidated
[post_id]: 367316
[parent_id]: 367314
[tags]: 
You probably misunderstood how t-SNE works. Instead of performing some invertible transformation, it finds an embedding of a dataset into a low-dimensional space by minimizing some non-convex loss function. Quoting the author's website : Once I have a t-SNE map, how can I embed incoming test points in that map? t-SNE learns a non-parametric mapping, which means that it does not learn an explicit function that maps data from the input space to the map. Therefore, it is not possible to embed test points in an existing map (although you could re-run t-SNE on the full dataset). A potential approach to deal with this would be to train a multivariate regressor to predict the map location from the input data. Alternatively, you could also make such a regressor minimize the t-SNE loss directly, which is what I did in this paper. To put it very bluntly: you put the data in and you get some embedding out. But there is no way to use this "fitted" embedding for new points or to recover their original representations. These are, among others, the reasons why t-SNE is actually mainly aimed for data visualization.
