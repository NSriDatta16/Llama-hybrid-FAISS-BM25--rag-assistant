[site]: crossvalidated
[post_id]: 283532
[parent_id]: 
[tags]: 
State description and rewards in reinforcement learning for card stacking game

The challenge is finding the optimal state representation and setting the rewards. The game: there are n stacks of (playing) cards, which can each be filled up with at most h cards. There is a certain schedule of unique cards which are to stacked and retrieved in a predefined order. For example, card_a must be stacked, card_b must be stacked, card_c must be stacked, card_a must leave the stacks. In order to retrieve a card, it must be at the top of its stack: if it is not, the cards on top must be relocated to other stacks before. The goal of the agent is to process the card arrival and retrieval schedule, needing as little card relocations as possible. The agent fails to converge using RL or DQN-RL approach, the mean reward over 100 episodes is either oscillating or stuck at a non-optimal point, depending on how whether I also penalize illegal moves or just ignore them and on whether I offer positive reward for each retrieved card or only at the end of the game. My current approach is: Rewards: +200 for finishing processing the schedule +3 for each retrieved card -1 for each relocated card State description: Option 1) for each stack, there are three informations: the stack height, the index in the departing schedule of the earliest departing card, and the number of cards blocking this earliest departing one. A last, extra column describes the index in the departing schedule of the next three scheduled cards. The state representation then consists of the flattened array (a vector). Option 2) The complete configuration of the stacks as a flattened matrix (a vector). The entries are the indexes in the departing schedule (0 if no card is present for that slot, and maxint if the card is not to be retrieved and stays forever in the stack). The vector is then expanded by 3 further entries, representing like in option 1 the indexes in the departing schedule of the next three scheduled cards. What is an optimal state description for this game? How do I optimally set the rewards?
