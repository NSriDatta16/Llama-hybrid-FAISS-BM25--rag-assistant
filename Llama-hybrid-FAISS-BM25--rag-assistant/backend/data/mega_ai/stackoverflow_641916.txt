[site]: stackoverflow
[post_id]: 641916
[parent_id]: 641911
[tags]: 
The point of it being test driven is that the tests drive the design as well as the implementation. In some cases that's not appropriate - it may be blatantly obvious what the design should look like, especially if it's implementing an existing interface (or some similarly restricted choice) but when you've got a large "design space" TDD encourages you to writes tests demonstrating how you want to be able to use the class, rather than starting off with you how you think you want to implement it. Generally if something is easy to test, it will be easy to use.
