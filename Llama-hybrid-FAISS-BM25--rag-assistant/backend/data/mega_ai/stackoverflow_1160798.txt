[site]: stackoverflow
[post_id]: 1160798
[parent_id]: 1085462
[tags]: 
Are you sure this is what you want? The only reason I ask is, once you add the filter on Parts off of Dealerships, your results are no longer Dealerships. You're dealing in special objects that are, for the most part, very close to Dealerships (with the same properties), but the meaning of the "Parts" property is different. Instead of being a relationship between Dealerships and Parts, it's a filtered relationship. Or to put it another way, if I pull a dealership out of your results and passed to a method I wrote, and then in my method I call: var count = dealership.Parts.Count(); I'm expecting to get the parts, not the filtered parts from Brazil where the price is less than $100. If you don't use the dealership object to pass the filtered data, it becomes very easy. It becomes as simple as: var query = from d in dealerships select new { DealershipName = d.Name, CheapBrazilProducts = dealership.Parts.Where(d => d.parts.Any(p => p.price s.country == "brazil")) }; If I just had to get the filtered sets like you asked, I'd probably use the technique I mentioned above, and then use a tool like Automapper to copy the filtered results from my anonymous class to the real class. It's not incredibly elegant, but it should work. I hope that helps! It was an interesting problem.
