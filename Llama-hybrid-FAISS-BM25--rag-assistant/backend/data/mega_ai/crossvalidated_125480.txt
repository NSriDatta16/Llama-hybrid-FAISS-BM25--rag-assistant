[site]: crossvalidated
[post_id]: 125480
[parent_id]: 124978
[tags]: 
Two ideas. First, use Cholesky decomposition to create uncorrelated series from correlated as follows in MATLAB code: >> rho=0.5 rho = 0.5000 >> sig=[1 rho;rho 1] sig = 1.0000 0.5000 0.5000 1.0000 >> r=mvnrnd([0 0],sig,10000); >> corr(r) ans = 1.0000 0.4979 0.4979 1.0000 >> sigp=chol(sig) sigp = 1.0000 0.5000 0 0.8660 >> rp=r*inv(sigp); >> corr(rp) ans = 1.0000 -0.0015 -0.0015 1.0000 This example creates correlated multivariate Normal random series with $\rho=0.5$ correlation. This will work with any other series, I used Normal for convenience. This does NOT create independent series, but uncorrelated . Note, that Cholesky is usually applied to the inverse problem, i.e. creating correlated series from uncorrelated in Monte Carlo simulation . Second option, use PCA : as in the example with the same series created above in MATLAB: >> [coeff,score]=pca(r); >> coeff coeff = 0.7059 0.7083 0.7083 -0.7059 >> corr(score) ans = 1.0000 -0.0000 -0.0000 1.0000 This creates new variables (factors) from your variables. The factors are uncorrelated. I printed out the coefficients for a reference. You can see that the factors are approximately:$f_1=x_1+x_2$ and $f_2=x_1-x_2$.
