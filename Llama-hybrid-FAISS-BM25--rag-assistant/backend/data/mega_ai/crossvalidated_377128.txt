[site]: crossvalidated
[post_id]: 377128
[parent_id]: 300272
[tags]: 
Keras offers the ability to apply weight to every sample invdividually. You can view the entire keras model api here . The description of the sample_weight parameter of keras "fit" function is as follows: sample_weight: Optional Numpy array of weights for the training samples, used for weighting the loss function (during training only). You can either pass a flat (1D) Numpy array with the same length as the input samples (1:1 mapping between weights and samples), or in the case of temporal data, you can pass a 2D array with shape (samples, sequence_length), to apply a different weight to every timestep of every sample. In this case you should make sure to specify sample_weight_mode="temporal" in compile(). As far as i know keras is used for neural networks, so this feature is available for those but not for other models like svm or random forest
