[site]: datascience
[post_id]: 759
[parent_id]: 758
[tags]: 
The topic of reproducible research (RR) is very popular today and, consequently, is huge , but I hope that my answer will be comprehensive enough as an answer and will provide enough information for further research , should you decide to do so. While Python-specific tools for RR certainly exist out there, I think it makes more sense to focus on more universal tools (you never know for sure what programming languages and computing environments you will be working with in the future). Having said that, let's take a look what tools are available per your list. 1) Tools for data version control . Unless you plan to work with (very) big data , I guess, it would make sense to use the same git , which you use for source code version control. The infrastructure is already there. Even if your files are binary and big, this advice might be helpful: https://stackoverflow.com/questions/540535/managing-large-binary-files-with-git . 2) Tools for managing RR workflows and experiments . Here's a list of most popular tools in this category, to the best of my knowledge (in the descending order of popularity): Taverna Workflow Management System ( http://www.taverna.org.uk ) - very solid, if a little too complex, set of tools. The major tool is a Java-based desktop software. However, it is compatible with online workflow repository portal myExperiment ( http://www.myexperiment.org ), where user can store and share their RR workflows. Web-based RR portal, fully compatible with Taverna is called Taverna Online , but it is being developed and maintained by totally different organization in Russia (referred there to as OnlineHPC : http://onlinehpc.com ). The Kepler Project ( https://kepler-project.org ) VisTrails ( http://vistrails.org ) Madagascar ( http://www.reproducibility.org ) EXAMPLE . Here's an interesting article on scientific workflows with an example of the real workflow design and data analysis, based on using Kepler and myExperiment projects: http://f1000research.com/articles/3-110/v1 . There are many RR tools that implement literate programming paradigm, exemplified by LaTeX software family. Tools that help in report generation and presentation is also a large category, where Sweave and knitr are probably the most well-known ones. Sweave is a tool, focused on R, but it can be integrated with Python-based projects, albeit with some additional effort ( https://stackoverflow.com/questions/2161152/sweave-for-python ). I think that knitr might be a better option, as it's modern, has extensive support by popular tools (such as RStudio ) and is language-neutral ( http://yihui.name/knitr/demo/engines ). 3) Protocol and suggested directory structure . If I understood correctly what you implied by using term protocol ( workflow ), generally I think that standard RR data analysis workflow consists of the following sequential phases: data collection => data preparation (cleaning, transformation, merging, sampling) => data analysis => presentation of results (generating reports and/or presentations). Nevertheless, every workflow is project-specific and, thus, some specific tasks might require adding additional steps. For sample directory structure, you may take a look at documentation for R package ProjectTemplate ( http://projecttemplate.net ), as an attempt to automate data analysis workflows and projects: 4) Automated build/run tools . Since my answer is focused on universal (language-neutral) RR tools, the most popular tools is make . Read the following article for some reasons to use make as the preferred RR workflow automation tool: http://bost.ocks.org/mike/make . Certainly, there are other similar tools, which either improve some aspects of make , or add some additional features. For example: ant (officially, Apache Ant: http://ant.apache.org ), Maven ("next generation ant ": http://maven.apache.org ), rake ( https://github.com/ruby/rake ), Makepp ( http://makepp.sourceforge.net ). For a comprehensive list of such tools, see Wikipedia: http://en.wikipedia.org/wiki/List_of_build_automation_software .
