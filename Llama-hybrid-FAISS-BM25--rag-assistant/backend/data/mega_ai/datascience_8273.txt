[site]: datascience
[post_id]: 8273
[parent_id]: 8266
[tags]: 
No, currently there isn't a package in Python that does segmented linear regression as thoroughly as those in R (e.g. R packages listed in this blog post ). Alternatively, you can use a Bayesian Markov Chain Monte Carlo algorithm in Python to create your segmented model. Segmented linear regression, as implemented by all the R packages in the above link, doesn't permit extra parameter constraints (i.e. priors), and because these packages take a frequentist approach, the resulting model doesn't give you probability distributions for the model parameters (i.e. breakpoints, slopes, etc). Defining a segmented model in statsmodels , which is frequentist, is even more restrictive because the model requires a fixed x-coordinate breakpoint. You can design a segmented model in Python using the Bayesian Markov Chain Monte Carlo algorithm emcee . Jake Vanderplas wrote a useful blog post and paper for how to implement emcee with comparisons to PyMC and PyStan. Example: Segmented model with data: Probability distributions of fit parameters: Link to code for segmented model . Link to (large) ipython notebook .
