[site]: stackoverflow
[post_id]: 1224657
[parent_id]: 595469
[tags]: 
I have written about a variation of MVP/MVVM design patterns called MVP-VM, which is a tailor made solution for winforms applications that require full testing coverage and use data binding as main mechanism for keeping the presentation updated with model data. MVVM for .NET Winforms MVVM (Model View View Model) introduces similar approach for separating the presentation from the data in an environment that empowers data binding (WPF). Since .NET framework 2.0 already offers advanced data binding infrastructure that also allows design time binding of application objects - the ‘View Model’ entity can fit quite well in MVP based environment.
