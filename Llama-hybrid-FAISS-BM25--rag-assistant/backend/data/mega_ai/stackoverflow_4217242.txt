[site]: stackoverflow
[post_id]: 4217242
[parent_id]: 4216873
[tags]: 
I do not think that hierarchical structure is what you need here. Because user may select first platform or manufacturer. If he selects first Android you want to show 3 devices. If he selects first Acer he will see 2 devices. So, my suggesting is the following. create class Device with properties manufacturer, model, platform. create a plain linked list that contains all these devices. Create 2 maps: manufaturerIndex and plarformIndex that look like: Map > manufacturerIndex; Iterate once over the list and populate all indexes maps. Like this: for(Device d : devices) { Collection selected = manufacturerIndex.get(d.getManufacturer()); if (selected == null) { selected = new ArrayList (); manufactuerIndex.put(d.getManufacturer(), selected); } selected.add(d); // the same for the second index } Now you can use the data structure. manufactuerIndex.get("Nokia") -> returns all Nokia devices. Pay attention that this data structure is extendable. You can always add as many indexes as you want.
