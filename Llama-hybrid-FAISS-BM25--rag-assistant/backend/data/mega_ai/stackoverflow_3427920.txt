[site]: stackoverflow
[post_id]: 3427920
[parent_id]: 3427824
[tags]: 
1) From the perspective of the client to this function, wouldn't it be better if the return type was bool[] (from 0 to number perhaps)? Internally, you have three states ( KnownPrime , KnownComposite , Unknown ), which could be represented by an enumeration. Storing an an array of this enumeration internally, prepopulated with Unknown , will be faster than a dictionary. 2) If you stick with the dictionary, the part of the sieve that marks multiples of the current number as composite could be replaced with a numberArray.TryGetValue() pattern rather than multiple checks for ContainsKey and subsequent retrieval of the value by key.
