[site]: stackoverflow
[post_id]: 2687082
[parent_id]: 
[tags]: 
What does MVC class organization look like for multiple views and controllers?

The idea of MVC itself seems clear to me but I have trouble understanding how the concept 'scales up' to multiple views and controllers. It appears that Cocoa takes the approach of the controller being the 'switchboard' between the model and the view. How would the application be organized and function in case of multiple views? If there is a controller associated with every view, would the main application have to keep track of all the controllers it spawns, or each controller would have 'nested' controllers it instantiates, e.g. an application would create a window, the window would create a toolbar etc? What if the entire application would need to work with the same model, or would you break the models down into smaller ones? It seems like what I'm really asking is how you would split a multi-window/view application into its logical blocks while retaining the modular MVC structure. I've attempted to look at code from the WordPress iPhone app as well as Adium but both seem to have a relatively large code base that I get lost in.
