[site]: crossvalidated
[post_id]: 629105
[parent_id]: 
[tags]: 
Time Series Prediction with Partial Future Data (Presales)

I have a data set that contains tickets sold up to a certain point in time, and then presold tickets for future events. Just for demonstrative purposes, I'll use the Australian total wine sales data set. import numpy as np import pandas as pd import matplotlib.pyplot as plt import pmdarima as pm data = pm.datasets.load_wineind(as_series=True) data.index = pd.to_datetime(data.index, format='%b %Y') past, future = pm.model_selection.train_test_split(data, train_size=150) np.random.seed(1) future = future.reset_index() future.rename({'index': 'Date', 0:'Sales'}, axis=1, inplace=True) future['Presales'] = future['Sales'] - np.random.uniform(1000)*future.index We have some tickets sold for future events already, but we'll sell a few more tickets for events that are happening in the near future and (hopefully) many more for events in the future. Now, I've no problem fitting a SARIMA model using past observations: model = pm.auto_arima(past, start_p=1, start_q=1, max_p=3, max_q=3, m=12, start_P=0, seasonal=True, d=1, D=1, trace=True, error_action='ignore', suppress_warnings=True, stepwise=True) But this completely ignores the useful presale information that I already have. Is there a way to incorporate this into my SARIMA model? UPDATE: I actually am able to obtain snapshots of what ticket sales looked like on previous dates. For example, if I pull the data for 2 random days, say, 1/5/23 and 3/14/23, it would look like: df = pd.DataFrame({'date': pd.date_range(start = '1/1/23', end='1/5/23'), 'total sales for all events on 1/5/23':[0, 10, 30, 50, 100]}) df2 = pd.DataFrame({'date': pd.date_range(start = '3/10/23', end='3/14/23'), 'total sales for all events on 3/14/23':[0, 30, 40, 80, 85]}) df date sales for all events on 1/5/23 0 2023-01-01 0 1 2023-01-02 10 2 2023-01-03 30 3 2023-01-04 50 4 2023-01-05 100 df2 date total sales for all events on 3/14/23 0 2023-03-10 0 1 2023-03-11 30 2 2023-03-12 40 3 2023-03-13 80 4 2023-03-14 85 Presumably this helps me greatly. Is the correct procedure then to engineer some features (I'm thinking month, list of events actually on the day in question (5/1/23 and 14/4/23), etc) and then to fit an RNN/LSTM, and the to use this to predict sales for future dates (tomorrow onwards)? I know that just trying this myself would answer my question, but the data I have is of course a lot more complicated than this toy example and don't want to waste time if there's a flaw in that approach.
