[site]: crossvalidated
[post_id]: 465945
[parent_id]: 
[tags]: 
Explanation of standard errors of predicted probabilities in mgcv ocat (ordinal logistic) family

I am using mgcv 's ocat family to fit an ordinal logistic regression model. Ultimately I would like to obtain the fitted expected value of the outcome variable, i.e. $$\hat{\mu}(x) = \sum_{j=1}^R v_j \hat{p}_j(x)$$ for some value $x$ of the covariate vector, where $v_j$ is a numerical value assigned to each of the $R$ categories and $p_j(x) = \Pr(Y = j; x)$ . This is straightforward enough, given that predict(..., type = "response") returns the fitted probabilities in each category. But I would also like to get a standard error for $\hat{\mu}(x)$ . predict(, se = TRUE) returns an additional vector of the standard errors of these probabilities, but I have two questions: What is the derivation of their calculation? Looking under the hood of the predict function for ocat (via ocat(R = 5)$predict ) reveals the code (NB this is a little confusing because it uses R differently to the documentation): function (family, se = FALSE, eta = NULL, y = NULL, X = NULL, beta = NULL, off = NULL, Vb = NULL) { ocat.prob 0 prob[ind, i + 1] I can follow the calculation of the predicted probabilities $p$ from the cumulative probabilities $q$ : $$q_{i,j} = \begin{cases} 0 & j = 1 \\ \mathrm{logit}^{-1}(\theta_{j-1} - l_i) & j = 2, \cdots, R \\ 1 & j = R+1 \end{cases}$$ $$p_{i,j} = p_{i,j+1} - p_{i,j} \qquad j = 1, \cdots, R$$ where $\theta_j$ are the thresholds and $l_i$ the linear predictors. But I don't follow how the standard errors are calculated: $$r_{i,j} = \begin{cases} 0 & j = 1 \\ -q_{i,j}(1 - q_{i,j}) & j = 2, \cdots, R \\ 0 & j = R + 1 \end{cases}$$ $$s_{i,j} = \sigma_{i,j} \times | r_{i,j+1} - r_{i,j} |$$ where $\sigma_{i,j}$ is the se calculated below the if (se) { line about 3/4 of the way down the code above. I don't understand what that part is doing. How could I ultimately calculate $\hat{\mathrm{SE}}(\hat{\mu}(x))$ ? I'd expect the fitted probabilities to be correlated, so I thought I would also need $\mathrm{Cov}(\hat{p}_j(x), \hat{p}_k(x))$ , which isn't returned.
