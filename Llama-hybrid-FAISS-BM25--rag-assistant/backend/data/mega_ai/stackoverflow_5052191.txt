[site]: stackoverflow
[post_id]: 5052191
[parent_id]: 4406462
[tags]: 
in pseudo-language: if ( varVal.bstr.contains("1.#INF" ) ) { // assign plus infinity to your variant see http://stackoverflow.com/questions/2538339/infinity-in-msvc } else if ( varVal.bstr.contains("-1.#INF" ) ) { // assign minus infinity to your variant see http://stackoverflow.com/questions/2538339/infinity-in-msvc } else if ( varVal.bstr.contains("NaN" ) { // assign NaN to your variant see http://stackoverflow.com/questions/235386/using-nan-in-c } else { // your original working code for regular float values } Please pay attention because it is a fragile solution: it relies on the string representations of infinity and NaN and maybe Microsoft can change them without warning. This is an unofficial yet authoritative information by Raymond Chen: What does -1.#IND mean?: A survey of how the Visual C runtime library prints special floating point values , even if it is not related to VARIANT . Output Meaning 1#INF Positive infinity -1#INF Negative infinity 1#SNAN Positive signaling NaN -1#SNAN Negative signaling NaN 1#QNAN Positive quiet NaN -1#QNAN Negative quiet NaN 1#IND Positive indefinite NaN -1#IND Negative indefinite NaN An official information is printf Type Field Characters .
