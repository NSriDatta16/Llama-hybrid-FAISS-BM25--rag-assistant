[site]: stackoverflow
[post_id]: 4209127
[parent_id]: 
[tags]: 
General inheritance behavior / best practice wanted

I have a general design pattern question converning inheritance of objects. No, I don't mean class inheritance like public class dog : animal, I need some "best practice" information on the following situation. I have three classes of the same type with a name and different values. They have a hierachical order, so one is the parent, first and second child. Let's assume, every class should have a property called color. I create an instance of a parent class and give it the color "BLUE". Now I create a child of the same type which should inherit all attributes by reference to the parent, as long as there is no special value set. It's not a clone, since I don't want to copy the values into the new class. So every change in the parent is automatically shown in the child. So I create a new child under the first one - I don't have set any special color to the first one, so my second child is "BLUE", too. In short form it would look like this: BLUE (Parent) --> BLUE (Child1) --> BLUE (Child2) Now I change Child1 to "RED": BLUE (Parent) --> RED (Child1) --> RED (Child2) This would be a nice way to store only the differences to the base, so in case of large structures, I could simply save storage. Any best practices for such a contruct / articles to read / links? Thanks in advance Roland
