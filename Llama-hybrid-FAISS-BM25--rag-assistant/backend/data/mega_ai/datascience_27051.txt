[site]: datascience
[post_id]: 27051
[parent_id]: 
[tags]: 
My CNN predicts everything as zero

I have ~4000 3D images with 0,1,2 labels. 70% of the labels are zeros. The dimension of each image is [40, 30, 30] The values usually range between -50 to 50 and about 10% of each image has non-zero values(bigger than 10^-4). The below is my 3D CNN model with 3 pooling layers and 3 fully connected layers. self.conv1 = conv3d(self.X, 10, 1, 32, name='conv1') self.norm1 = tf.contrib.layers.batch_norm(self.conv1, center=True, scale=True, scope='bn1') self.pool1 = max_pool(self.norm1, 3, 2, name='pool1') self.conv2 = conv3d(self.pool1,8,1,64, name='conv2') self.norm2 = tf.contrib.layers.batch_norm(self.conv2, center=True, scale=True, scope='bn2') self.pool2 = max_pool(self.norm2, 3, 2, name='pool2') self.conv3 = conv3d(self.pool2,8,1,64, name='conv3') self.pool3 = max_pool(self.conv3, 3, 2, name='pool3') proddim = np.prod(self.pool3.get_shape()[1:], dtype=np.uint) self.flat = tf.reshape(self.pool3, [-1,proddim ]) self.fc4 = fc(self.flat, num_output=1024, name='fc4') self.dropout4 = tf.layers.dropout(inputs=self.fc4, rate=0.2, training=self.dropout_train, name='dropout4') self.fc5 = fc(self.dropout4, num_output=384, name='fc5') self.dropout5 = tf.layers.dropout(inputs=self.fc5, rate=0.2, training=self.dropout_train, name='dropout5') self.fc6 = fc(self.dropout5, num_output=3, name='fc6') I double, triple checked that the inputs are correct but my model always predict everything as zero. Is it because my tensor or labels mostly have zero values? Or do I have too little data?
