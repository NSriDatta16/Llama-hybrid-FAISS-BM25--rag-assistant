[site]: crossvalidated
[post_id]: 472220
[parent_id]: 472198
[tags]: 
Let me expand a bit over what has been discussed in the comments. The bottleneck of your problem is an expensive evaluation of an unknown black-box function $f$ and somewhat high dimensionality of a problem (if I understood correctly we're looking at a set of weights, $\mathcal{M} = [0, 1]^{150}$ ), which seems like an ideal problem to be solved by Bayesian Optimisation , which quantitatively represents the uncertainty of "unseen" regions in the search space, allowing for efficient selection of next evaluation candidates, making search very time-efficient. However, Bayesian Optimisation might struggle with high-dimensional spaces, see A Tutorial on Bayesian Optimization, Peter I. Frazier or, as discussed in the abstract in High-dimensional Bayesian optimization using low-dimensional feature spaces, Riccardo Moriconi, Marc P. Deisenroth, K. S. Sesh Kumar : Bayesian optimization (BO) is a powerful approach for seeking the global optimum of expensive black-box functions and has proven successful for fine tuning hyper-parameters of machine learning models. However, BO is practically limited to optimizing 10-20 parameters. To scale BO to high dimensions, we usually make structural assumptions on the decomposition of the objective and/or exploit the intrinsic lower dimensionality of the problem, e.g. by using linear projections. Which indicates that most likely you will need to approach the problem from one of the two perspectives: Heuristics Proxy Heuristic methods would include, as already mentioned Particle Swarm Optimisation , Genetic Algorithms , Simulated Annealing etc. but don't give you any guarantees about the optimum. However, if you're an expert (or have sufficient knowledge) in the field you're studying you might be better off by trying to define some assumptions about the shape/form of the underlying black box and then trying to fit a proxy function (see Surrogate model ) that approximates your $f$ , which would allow you to use e.g. gradient/hessian methods and find optimum quickly (with respect to the proxy function). Lastly - again assuming you have enough expert knowledge - maybe you can reduce the dimensionality manually such that Bayesian Optimisation is feasible for your problem.
