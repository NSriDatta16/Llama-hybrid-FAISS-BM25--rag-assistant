[site]: datascience
[post_id]: 120327
[parent_id]: 
[tags]: 
Integrating time context in a machine learning model

Basically, what I'm curious about, are there any methods in machine learning to make the model take into account events that happen in real time that affect the data points during that time period. Then, we can have the model put less weight on those data points or something like that in the fitted model. For example, let's say we are making a customer churn prediction model for Netflix. We have training data for the last 1 year. We have the metadata and behavioural data of customers for every month as features, and use these to predict whether the customer will churn. That is typically the standard way of doing, but would it make sense that Covid would have affected customer behaviour and probably decrease churn of customers during the covid time. These customers could be very different to customers after Covid. In addition to that, there could be updates to Netflix that affected customers behaviour. Would it be too complicated to teach the model to treat certain customers differently based on the date in the training of the model? I'm guessing it would and probably cause overfitting. It might be better just to generalise the model, but I'm curious what others think.
