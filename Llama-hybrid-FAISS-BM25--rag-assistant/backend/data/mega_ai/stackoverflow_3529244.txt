[site]: stackoverflow
[post_id]: 3529244
[parent_id]: 3526434
[tags]: 
This question actually involves many concepts and I won't cover them all in details. For more exhaustive details, I suggest reading the whole Chapter 5 - Entity Managers and Persistence Contexts of the JPA 1.0 specification (and the other relevant sections mentioned at the end of this answer). I will rather try to describe the most common scenario in a Java EE environment. Within an EJB environment, one would typically use: A container-managed entity manager (must be a JTA entity manager) transaction-scoped in Stateless Session Beans (SLSB) extended in Stateful Session Beans (SFSB) JTA Transaction Management (and not resource-local transactions unless this is really what you want) Here is how a persistence.xml for a JTA entity manager that uses a data source with a JNDI name java:comp/env/jdbc/AppDataSource can be set up, OpenJPA being the persistence provider used by WebSphere: org.apache.openjpa.persistence.PersistenceProviderImpl java:comp/env/jdbc/AppDataSource com.acme.domain.Foo com.acme.domain.Bar true For the OpenJPA properties, refer to the OpenJPA documentation . And here is how a SLSB (using Container Managed Transactions) could get a container managed Entity Manager injected: @Stateless public class EmployeeServiceBean implements EmployeeService { @PersistenceContext(unitName="MyPu") private EntityManager em; public Employee createEmployee(int id, String name, long salary) { Employee emp = new Employee(id); emp.setName(name); emp.setSalary(salary); em.persist(emp); return emp; } ... } And that's all. The life cycle of the entity manager is managed by the container transparently for the application (no createEM/close) and the entity manager participates in the JTA transaction managed by the container (no explicit begin/commit). As previously hinted, I'm just scratching the surface, my goal is somehow to put you on the right path. To go further, I suggest grabbing a book (e.g. EJB3 in Action). Meanwhile, the references below would be a good reading. References JPA 1.0 specification Section 5.2.1 "Obtaining an Entity Manager in the Java EE Environment" Section 5.5 "Controlling Transactions" Section 5.6 "Container-managed Persistence Contexts" Section 6.2.1.2 "transaction-type" Section 6.2.1.4 "provider" Section 6.2.1.5 "jta-data-source, non-jta-data-source" Resources Leveraging OpenJPA with WebSphere Application Server V6.1
