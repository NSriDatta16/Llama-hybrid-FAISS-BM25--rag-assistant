[site]: stackoverflow
[post_id]: 454231
[parent_id]: 454229
[tags]: 
My current concept: When a new user arrives, the app decides, based on cookies (see below), the Accept-Language: header and the user agent string (used to identify mobile browsers) which version to show, but does not reflect this in the URL (no redirects) It defaults to the non-simplified English version There are prominently displayed icons (flags, a stylized mobile phone) to choose other versions When the user explicitly chooses a different version, this is reflected both in a changed URL and a browser cookie The URL schema is / for the "automatic" version, /en/, /de/, etc. for the language version, /mobile/ for the simplified version, /normal/ for the non-simplified one, and combinations thereof i.e. /mobile/en/ and /normal/de/ mod_rewrite is used to strip these URL prefixes and convert them to GET parameters for the app to parse robots.txt disallows /mobile/ and /normal/ Advantages: The different language versions are all indexed separately by search engines Cookies help, but are not necessary There'S a good chance that people will see the version that's ideal for them without having to make any choice The user can always explicitly choose which version he wants (this makes the /normal/ URL necessary) Each version has an URL which will display exactly that version when passed to others /mobile/ and /normal/ are ignored by search engines; they would only be duplicate content. Disadvantages: Requires heavy use of mod_rewrite, which I find rather cryptic Users could send their current URL to someone and that person, when visiting it, could end up seeing a different version, which could cause confusion There is still duplicate content between / and /en/ - I can't disallow / in robots.txt - should I trust the search engines not to penalize me for exact duplicate content on the same domain, or disallow /en/ and accept that people coming to / via a search engine may see a different version than what they found in the search engine?
