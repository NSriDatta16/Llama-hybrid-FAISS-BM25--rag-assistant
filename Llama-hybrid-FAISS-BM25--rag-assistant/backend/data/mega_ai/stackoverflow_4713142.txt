[site]: stackoverflow
[post_id]: 4713142
[parent_id]: 4711702
[tags]: 
For both, you pass OpenGL some buffers containing vertex data. glDrawArrays is basically "draw this contiguous range of vertices, using the data I gave you earlier". Good: You don't need to build an index buffer Bad: If you organise your data into GL_TRIANGLES, you will have duplicate vertex data for adjacent triangles. This is obviously wasteful. If you use GL_TRIANGLE_STRIP and GL_TRIANGLE_FAN to try and avoid duplicating data: it isn't terribly effective and you'd have to make a rendering call for each strip and fan. OpenGL calls are expensive and should be avoided where possible With glDrawElements, you pass in buffer containing the indices of the vertices you want to draw. Good No duplicate vertex data - you just index the same data for different triangles You can just use GL_TRIANGLES and rely on the vertex cache to avoid processing the same data twice - no need to re-organise your geometry data or split rendering over multiple calls Bad Memory overhead of index buffer My recommendation is to use glDrawElements
