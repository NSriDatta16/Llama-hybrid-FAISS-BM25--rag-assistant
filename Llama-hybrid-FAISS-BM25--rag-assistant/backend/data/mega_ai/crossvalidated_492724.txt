[site]: crossvalidated
[post_id]: 492724
[parent_id]: 
[tags]: 
merge two neural networks at test time

I am currently using one network which gives me a bad resolution result, so then I use another network to enhance the resolution of my output. My question is: is there an easy way to use both of them at test time? I mean, I can train them separately and ok, but once I have the weights, how can I "merge" the execution of the two of them? I never wrote a script that uses two different neural networks. For now they are both in separate project folders. UPDATE: By merging I mean just using them sequentially. Cause this needs to be an automatic pipeline used by non-computer scientists. So I guess I don't need to merge the architectures. I am not really confident in python so I wanted to understand, is it possible to write a script that runs both of the networks? In that case, there would be a problem of compatibility of the different libraries versions the two networks are using. This is why I am asking. Or do you know any other better method to develop a pipeline that uses both of them without libraries conflicts?
