[site]: stackoverflow
[post_id]: 286658
[parent_id]: 286629
[tags]: 
In my experience it refers to a memory barrier , which is an instruction (explicit or implicit) to synchronize memory access between multiple threads. The problem occurs in the combination of modern agressive compilers (they have amazing freedom to reorder instructions, but usually know nothing of your threads) and modern multicore CPUs. A good introduction to the problem is the " The 'Double-Checked Locking is Broken' Declaration ". For many, it was the wake-up call that there be dragons. Implicit full memory barriers are usually included in platform thread synchronization routines, which cover the core of it. However, for lock-free programming and implementing custom, lightweight synchronization patterns, you often need just the barrier, or even a one-way barrier only.
