[site]: stackoverflow
[post_id]: 3834026
[parent_id]: 3833923
[tags]: 
Read the jQuery plugin authoring suggestions , also look at the unminified jQuery . Notice the last line: window.jQuery = window.$ = jQuery; So there are two global variables window.jQuery and window.$ . To delve into this issue a little deeper, read more about the documentation on using jQuery with other libraries and jQuery.noConflict() : // Trigger no conflict mode. $.noConflict(); // Code that uses other library's $ can follow here. For writing plugins, make sure to pay special attention to the section called Maintaining Chainability (since jQuery makes use of chainability so nicely). You have to explicitly return this in your plugins to maintain chainability. Additionally, speaking of clashing with other variables, make sure you stop your plugin from clashing with other code by using a closure: // Use a closure so you can use the dollar sign in your plugin, // but you don't clash with other uses of the dollar sign in the script // around where you define your plugin (other libraries, etc.) (function( $ ){ // Adding your plugin to jQuery $.fn.yourPlugin = function() { // Maintain chainability return this.each(function() { // ... }); }; }( jQuery )); There's a lot of other great information on that plugin authoring page. The above is just the bare bones. There's info on defaults and options, namespacing, and many other things. Also, if you're concerned about your variables clashing, you can also make use of closures for you own "regular" code... not just jQuery plugins. To do this, enclose your script in a self invoking anonymous function : (function() { var ... // these vars will not clash with // anything outside this anonymous function // You can do your jQuery in here if you need to access // the local vars: $(function() { ... }); }()); For example: // global 'clash' var clash = "test"; (function() { // local 'clash' var clash = "something else"; // this 'clash' shadows but doesn't change the global 'clash' }()); alert(clash); // The global 'clash' has stayed unaffected by the local `clash` // Output: test jsFiddle example
