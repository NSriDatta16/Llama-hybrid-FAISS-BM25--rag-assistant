[site]: stackoverflow
[post_id]: 2298596
[parent_id]: 2284150
[tags]: 
Douglas Davidson of Apple provided me with the clues to get to the answer via the cocoa-dev@apple.lists.com email list. I've resolved the problem by updating the updateMyTextViewTextAttributes function like so: - (void)updateMyTextViewTextAttributes { NSMutableParagraphStyle* paragraphStyle = [[myTextView defaultParagraphStyle] mutableCopy]; if (paragraphStyle == nil) { paragraphStyle = [[NSParagraphStyle defaultParagraphStyle] mutableCopy]; } float charWidth = [[myFont screenFontWithRenderingMode:NSFontDefaultRenderingMode] advancementForGlyph:(NSGlyph) ' '].width; [paragraphStyle setDefaultTabInterval:(charWidth * 4)]; [paragraphStyle setTabStops:[NSArray array]]; [myTextView setDefaultParagraphStyle:paragraphStyle]; NSMutableDictionary* typingAttributes = [[myTextView typingAttributes] mutableCopy]; [typingAttributes setObject:paragraphStyle forKey:NSParagraphStyleAttributeName]; [typingAttributes setObject:scriptFont forKey:NSFontAttributeName]; [myTextView setTypingAttributes:typingAttributes]; /** ADDED CODE BELOW **/ NSRange rangeOfChange = NSMakeRange(0, [[myTextView string] length]); [myTextView shouldChangeTextInRange:rangeOfChange replacementString:nil]; [[myTextView textStorage] setAttributes:typingAttributes range:rangeOfChange]; [myTextView didChangeText]; [paragraphStyle release]; [typingAttributes release]; }
