[site]: crossvalidated
[post_id]: 258065
[parent_id]: 257867
[tags]: 
For an ML-based solution you generally would want a sequence learner like a conditional random field or a recursive neural network. Now each symbol has a binary label for classification representing whether the current symbol is a sentence boundary or not. Supervised learning on such data will result in your required classifier. You could theoretically also try a sliding window approach on feed forward architectures, although I'd expect it to perform quite a bit worse. Perhaps have a look at the relevant parts of NLTK, if you want an overview of various sentence tokenization methods: http://www.nltk.org/api/nltk.tokenize.html Here is an example of how to perform supervised sentence segmentation: http://www.nltk.org/book/ch06.html
