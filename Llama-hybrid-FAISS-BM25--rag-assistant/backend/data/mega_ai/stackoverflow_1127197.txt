[site]: stackoverflow
[post_id]: 1127197
[parent_id]: 1127122
[tags]: 
First ideal: have a "gatekeeper" so that your data's consistency does not depend upon each developer applying the same rules. Simple validation such as range validation may reasonably be implemented in the DB. If it changes at least you have somewhere to put. Trouble is the "business rules" tend to get much more complex. It can be useful to offload processing to the application tier where OO languages can be better for managing complex logic. The trick then is to structure the app tier so that the gatekeeper is clear and unduplicated. In a small organisation (no DBA ergo, small?) I would tend to put the business rules where you have strong development expertise. This does not exclude doing initial validation in higher levels, for example you might validate all the way up in the UI to help the user get it right, but you don't depend upon that initial validation - you still have the gatekeeper.
