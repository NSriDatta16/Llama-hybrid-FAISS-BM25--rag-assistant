[site]: stackoverflow
[post_id]: 2266878
[parent_id]: 2266804
[tags]: 
I usually organize my JavaScript using namespacing to prevent function name clashing and further add each object into it's own .js file for organization purposes var MyObject = function() { return { method_1 : function() { // do stuff here }, method_2 : function() { // do stuff here } }; }(); MyObject.method_1(); MyObject.method_2(); I then import whatever is needed on my pages. Having a few extra global functions that aren't used on a page won't make a noticeable change in performance. Some people turn the whole onclick in HTML into a grand philosophical debate... for me, it's dirty, yet easy to read and quick to implement. Binding events works great and completely separates JavaScript from HTML but sometimes can be difficult to maintain if your HTML being maintained by many developers gets very sloppy Keeping the HTML bits in JavaScript has worked fine for me
