[site]: stackoverflow
[post_id]: 216196
[parent_id]: 216155
[tags]: 
Your chances of detecting malicious code reliably by scanning inputted HTML are about nil. There are so many possible ways to inject script (including browser-specific malformed HTML), you won't be able to pick them all out. If big webmail providers are still after years finding new exploits there is no chance you'll be able to do it. Whitelisting is better than blacklisting. So you could instead require the input to be XHTML, and parse it using a standard XML parser. Then walk through the DOM and check that each of the elements and attributes is known-good, and if everything's OK, serialise back to XHTML, which, coming from a known-good DOM, should not be malformed. A proper XML parser with Unicode support should also filter out nasty 'overlong UTF-8 sequences' (a security hole affecting IE6 and older Operas) for free. However... if you allow embed/objects from any domain, you are already allowing full script access to your page from an external domains, so HTML injection is the least of your worries. Plug-ins such as Flash are likely to be able to execute JavaScript without any kind of trickery being necessary. So you should be limiting the source of objects to predetermined known-good domains. And if you're already doing that, it's probably easier to just allow the user to choose a video provider and clip ID, and then convert that into the proper, known-good embedding code for that provider. For example if you are using a bbcode-like markup, the traditional way to let users include a YouTube clip would be something [youtube]Dtzs7DSh[/youtube].
