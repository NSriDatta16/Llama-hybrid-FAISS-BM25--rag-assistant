[site]: crossvalidated
[post_id]: 41463
[parent_id]: 
[tags]: 
How to decide whether to reuse old code or reinvent the wheel?

For a long time now, I have been thinking about working with neural networks and genetic algorithms. I have never been able to decide whether it makes sense to start writing my own code, or to reuse the many, many options made by others. In my experience, assuming the programmer knows what he or she is doing to a reasonable extent, there is very little that replaces C or C++ code crafted to the individual users preferences. For one thing, it empowers you to do almost anything with the code due to having complete knowledge of its workings. One can for instance incorporate whatever new advances that one happens to read about in the literature. On the other hand, one person will often find it hard to do as much as a team of people. As an individual, it's always possible that one will miss various bugs. There are many other disadvantages to being a loner. So, for those who have some experience in machine learning, I would like to hear what actually works in the real world. Is it more common to use a few well-known programming packages or do many people write their own custom implementations? I am specifically interested in the areas of RBM, neural networks, genetic programming and clustering. Assume that I am willing to put a lot of time into learning about machine learning and that I will put at least as much time and effort into it as a graduate student would.
