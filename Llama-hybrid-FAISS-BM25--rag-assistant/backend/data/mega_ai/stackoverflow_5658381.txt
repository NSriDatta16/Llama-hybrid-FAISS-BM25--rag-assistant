[site]: stackoverflow
[post_id]: 5658381
[parent_id]: 5647609
[tags]: 
If you are interested in patterning your restful API after Twitter's, then I suggest studying the way Twitter has organized their API resources (see the method docs under the links in the right sidebar here ), how they support different resource formats (by changing the extension, like .xml or .json, of the requested resource), how they version the endpoint, and which verbs are supported per resource (for example, how the oauth/request_token method supports both POST and GET methods). So, study the interface that Twitter produced, ignoring the actual implementation behind it for now, and use it to help answer your design questions. Focus on what you want to expose through your interface. How do you plan to project the objects you expose via the interface? What resource formats will you choose to support? How do you plan to version the service endpoint? By the way, if you're interested in looking at other restful APIs, you can spelunk around using apigee ; they have a console for Twitter here .
