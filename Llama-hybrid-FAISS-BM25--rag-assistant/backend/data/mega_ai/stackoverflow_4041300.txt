[site]: stackoverflow
[post_id]: 4041300
[parent_id]: 
[tags]: 
Can I replace a Spring bean definition at runtime?

Consider the following scenario. I have a Spring application context with a bean whose properties should be configurable, think DataSource or MailSender . The mutable application configuration is managed by a separate bean, let's call it configuration . An administrator can now change the configuration values, like email address or database URL, and I would like to re-initialize the configured bean at runtime. Assume that I can't just simply modify the property of the configurable bean above (e.g. created by FactoryBean or constructor injection) but have to recreate the bean itself. Any thoughts on how to achieve this? I'd be glad to receive advice on how to organize the whole configuration thing as well. Nothing is fixed. :-) EDIT To clarify things a bit: I am not asking how to update the configuration or how to inject static configuration values. I'll try an example: So there's a bean constructorInjectedBean that uses constructor injection. Imagine the construction of the bean is very expensive so using a prototype scope or a factory proxy is not an option, think DataSource . What I want to do is that every time the configuration is being updated (via configurationService the bean constructorInjectedBean is being recreated and re-injected into the application context and dependent beans. We can safely assume that constructorInjectedBean is using an interface so proxy magic is indeed an option. I hope to have made the question a little bit clearer.
