[site]: stackoverflow
[post_id]: 5570447
[parent_id]: 
[tags]: 
C++: How do I pass N arguments to a function where N can be any number > 0? (The function already exists as part of an external library)

This is the way I currently call the function: struct fann *ann = fann_create_standard( num_layers, num_in, optional_num_1, optional_num_2, num_out); the function above can have at least 3 arguments... the required arguments are num_layers, num_input, and num_output) the optional arguments are the hidden layers of the neural network (what they are call isn't important.... but basically... it could look like this: fann_create_standard(#layers, #input, #hidden1, #hidden2, #hidden3, #hidden4, ..., #hiddenN, #output); what I want to be able to do, is pass in command line arguments to change how many layers, and what the values of each of the hidden layers are (the middle arguments in this function call), so that I don't have to re-compile the program every time I want to re-configure the network.
