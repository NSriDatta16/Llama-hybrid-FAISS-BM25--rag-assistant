[site]: crossvalidated
[post_id]: 294363
[parent_id]: 294310
[tags]: 
The thing to recognize here is that although this looks different than a prototypical classification problem, it is ultimately the same. Instead of having data on various individuals, you have sets of data on pairs of individuals. The classes to which you want to assign your inputs aren't, say, spam vs. good, but brothers vs. not-brothers. You would need think carefully about how you design the neural network if you want optimal performance, and not just use a default fully-connected feed-forward network. For example, you might want a convolutional NN with specific receptive fields. You might also want to do some preprocessing of your data and feed that into the network for training instead of using the raw data. For example, you might want to determine similarities between each pair of measurements (e.g., heights) according to various measures of similarity, and use one set of similarities as your inputs instead of two sets of raw measurements. This would certainly be a more complex project than the standard textbook examples, but the point is that it is ultimately similar.
