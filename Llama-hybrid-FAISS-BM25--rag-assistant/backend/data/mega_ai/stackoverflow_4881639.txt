[site]: stackoverflow
[post_id]: 4881639
[parent_id]: 4881535
[tags]: 
Edit: This seems to work, it doesn't give a completely un-mangled name, but the function name is there #define DLOG( proto...) \ __asm__(".pushsection __dlog, \"S\", @note\n\t" \ ".asciz \"" __FILE__ ":%0:" #proto "\"\n\t" \ ".popsection\n\t" \ : \ : "s" ( __func__ ) ) int main(int argc, char*argv[]) { DLOG(int argc, char*argv[]); return 0; } extern "C" void test(int bar) { DLOG(bar); } g++-4.4 test.cpp && xxd a.out | less -p test.cpp 0001020: 7465 7374 2e63 7070 3a24 5f5a 5a34 6d61 test.cpp:$_ZZ4ma 0001030: 696e 4538 5f5f 6675 6e63 5f5f 3a69 6e74 inE8__func__:int 0001040: 2061 7267 632c 2063 6861 722a 6172 6776 argc, char*argv 0001050: 5b5d 0074 6573 742e 6370 703a 245f 5a5a [].test.cpp:$_ZZ 0001060: 3474 6573 7445 385f 5f66 756e 635f 5f3a 4testE8__func__: 0001070: 6261 7200 4743 433a 2028 5562 756e 7475 bar.GCC: (Ubuntu Original Answer: In gcc-3.3 using c mode, __func__ is treated like a const char [] . If c++ mode, and in gcc > 3.3, __func__ is always a variable. I guess you could use an older version of gcc, in c-mode, to accomplish this. See the last paragraph on http://gcc.gnu.org/onlinedocs/gcc/Function-Names.html
