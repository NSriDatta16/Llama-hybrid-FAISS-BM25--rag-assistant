[site]: stackoverflow
[post_id]: 5660470
[parent_id]: 5660138
[tags]: 
One of the classical way to get rid of this : rewrite it without recursion. For example, use a while loop, then as soon as you find the result, use a break to go out. You can have a look at following code (not compiled, just written quickly from your own code) bool binsearch(const string& phrase, const vector &words, int from, int to) { bool retVal = false; int start = from; int end = to; while(start 0) { start=mid+1; } else { retVal = true; break; } } return retVal; } There is no elegant or portable way to jump out of a full call stack, it's at best fairly risky. Moreover, the derecursified function will be much quicker : it does not need to push stuff on stack and do a a function call Edit added missing return concerning performances : just benchmark it. In this particular case, code complexity (for the human reader) is almost the same, but depending on the algo, it can be much more complex (or even impossible).
