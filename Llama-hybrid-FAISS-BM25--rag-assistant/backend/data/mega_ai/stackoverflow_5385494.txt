[site]: stackoverflow
[post_id]: 5385494
[parent_id]: 5385223
[tags]: 
Generally you don't. It is possible with a CREATE TABLE ... AS SELECT .... ORDER BY But you then get into the business of dropping the old table and renaming the new one - plus grants, constraints etc. But IOTs have to be organised on the primary key. That might not be the "primary" index if you mean the index used for most range scans on the table. Consider, a CUSTOMERS table with an ID as primary key and a customer name. If you are looking for a customer based on id, then clustering doesn't have any benefit, because you aren't really interested in the customers with IDs just above or below. If you are looking from customers called "Seinfeld", then you would do a range scan and there might be a benefit in having all the Seinfeld table records in the one block. If you are then going to filter on first_name, you would probably be better off just including that in the index so you don't need to access the table records. In an 'ORDER_LINES' table, you'd probably find all the lines for a particular order on the same block anyway, as they are probably created at the same time. Clustering factor on the index would tell you. A CUSTOMER_INVOICES table might benefit from being clustered on the customer id if you have a lot of queries for all invoices for a particular customer. In that case you might look at Single Table Hash Clusters as a way to cluster data on a column value. But it would be way down my list of things to do
