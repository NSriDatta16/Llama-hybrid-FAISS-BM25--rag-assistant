[site]: stackoverflow
[post_id]: 2121515
[parent_id]: 2121399
[tags]: 
As others are saying, this problem needs to be defined a little bit more. Lets say you have these objects in table 1: Big, red, sweet apple Small, green, tart apple Medium, orange, sweet peach Medium, orange, sour tangerine And these objects in table 2: Small, red, sweet plum Big, red, sweet apple Small, green, sour apple Small, orange, sweet tangerine Now, let's go through table 1: Big, red, sweet apple matches item 2 in table 2 Small, green, tart apple has no match - which column(s) mismatch? table 2, item 1 - mismatches on size, color, taste, and fruit table 2, item 1 - mismatches on size, color, and taste ... ... (also has no match) ... ... ... ... (also has no match) ... ... ... ... As you can see, this becomes an exponential problem very quickly. With just four items in each list, you have 12 mismatched pairs to list columns for. If you had 100,000 items and 10,000 were mismatches, you'd have to list 100 million pairs. If you redefine your query so that it lists only items that differ on one attribute (column), then it might be a little more doable. Something like this: -- warning untested code -- SELECT 'agent' AS MismatchedColumn , p.agent AS MismatchedValue , i.agent , i.agency , i.customer , i.company FROM table_1 AS i LEFT OUTER JOIN table_2 AS p ON i.agent != p.agent AND i.agency = p.agency AND i.customer = p.customer AND i.company = p.company UNION SELECT 'agency' AS MismatchedColumn , p.agency AS MismatchedValue , i.agent , i.agency , i.customer , i.company FROM table_1 AS i LEFT OUTER JOIN table_2 AS p ON i.agent = p.agent AND i.agency != p.agency AND i.customer = p.customer AND i.company = p.company UNION SELECT 'customer' AS MismatchedColumn , p.customer AS MismatchedValue , i.agent , i.agency , i.customer , i.company FROM table_1 AS i LEFT OUTER JOIN table_2 AS p ON i.agent = p.agent AND i.agency = p.agency AND i.customer != p.customer AND i.company = p.company UNION SELECT 'company' AS MismatchedColumn , p.company AS MismatchedValue , i.agent , i.agency , i.customer , i.company FROM table_1 AS i LEFT OUTER JOIN table_2 AS p ON i.agent = p.agent AND i.agency = p.agency AND i.customer = p.customer AND i.company != p.company I believe this will list all the records in table 1 that match on all but one column in table 2.
