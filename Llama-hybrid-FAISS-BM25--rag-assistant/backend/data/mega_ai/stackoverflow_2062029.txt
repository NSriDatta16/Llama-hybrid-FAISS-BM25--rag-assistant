[site]: stackoverflow
[post_id]: 2062029
[parent_id]: 2062010
[tags]: 
Floating point values have a [much] greater range than integers. Also, they can represent fractional values. These features however are provided at the cost of a loss of precision. Edit : (what I mean by loss of precision ) Integer arithmetic is always exact, so long that one doesn't provide operand which cause an overflow, or a division by zero. This is not the case with floating point arithmetic, whereby some portions of values may be lost when using such values in simple operations. The reason for this is that the tremendous range offered by floating point values, is such that it is impossible to represent all contiguous values within the range, given the [relatively] small storage (typically 8 or 16 bytes).
