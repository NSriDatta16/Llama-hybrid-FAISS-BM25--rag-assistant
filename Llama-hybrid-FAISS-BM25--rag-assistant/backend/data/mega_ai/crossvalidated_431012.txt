[site]: crossvalidated
[post_id]: 431012
[parent_id]: 423120
[tags]: 
It is explained on page 12 here in great detail. and is also discussed here although in not as much detail. Compute the negative log likelihood in base e, apply change of base for converting log base e to log base 2, then divide by the number of pixels (e.g. 3072 pixels for a 32x32 rgb image). To change base for the log, just divide the log base e value by log(2) -- e.g. in python it's like: (nll_val / num_pixels) / numpy.log(2) and As noted by DWF, the continuous log-likelihood is not directly comparable to discrete log-likelihood. Values in the PixelRNN paper for NICE's bits/pixel were computed after correctly accounting for the discrete nature of pixel values in the relevant datasets. In the case of the number in the NICE paper, you'd have to subtract log(128) from the log-likelihood of each pixel (this is to account for data scaling). I.e. -((5371.78 / 3072.) - 4.852) / np.log(2.) = 4.477
