[site]: stackoverflow
[post_id]: 1593405
[parent_id]: 435003
[tags]: 
Well, I had similar issue, but came with the following solution that works for me: Supposedly, the combobox shows the list of authors and the listbox all books and I want to filter the books by selected author or show all books unfiltered. The pertinent window XAML fragment: Binding itself is done like this on the window constructor: DataContext = new BookViewModel(this); And the view model is defined as such: public class BookViewModel { private Author _filterAuthorBy; public BookViewModel(IBookView view) { ... _books = new CollectionViewSource(); _books.Source = _bookRepository.FindAll().ToArray(); _books.Filter += (sender, e) => { Book book = e.Item as Book; if (_filterAuthorBy == null) { e.Accepted = true; } else { e.Accepted = book.Authors.Contains(_filterAuthorBy); } }; } public CollectionView Books { get { return _books.View; } } public ObservableCollection Authors { get { return new ObservableCollection (_bookRepository.FindAllAuthors()); } } public Author FilterAuthorBy { get { return _filterAuthorBy; } set { _filterAuthorBy = value; _books.View.Refresh(); } } } The selected author is passed down to the ViewModel and the listbox is updated by calling collectionViewSource.View.Refresh()
