[site]: datascience
[post_id]: 32915
[parent_id]: 32893
[tags]: 
Without knowing what algorithm was used to generate the check digit, it's not possible to say whether machine learning will be effective at reverse-engineering that data. As an easy case, given sufficient data, it's likely that a recurrent neural network could learn the Luhn algorithm. It would likely be a particularly inefficient and suboptimal way to do it, and you might need an awful lot of training data, but I expect it'd probably work. As a hard case, if the check digit is generated using a cryptographically secure hash function and a secret key, then no machine learning algorithm is ever going to reverse-engineer that. So it's simply not possible to say, in the abstract. The answer depends on the check digit algorithm that is being used. In general, machine learning isn't a silver bullet. It isn't magic fairy dust that can be used to solve all problems. My sense is that machine learning is probably not going to be particularly well-suited to this kind of situation. It might be more effective to start by trying some common check digit algorithms (e.g., use linear algebra to check whether it is a linear checksum, and so on).
