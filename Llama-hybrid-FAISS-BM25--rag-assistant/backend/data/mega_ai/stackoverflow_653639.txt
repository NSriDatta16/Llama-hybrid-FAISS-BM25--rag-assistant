[site]: stackoverflow
[post_id]: 653639
[parent_id]: 653534
[tags]: 
If by productivity your manager really means "how long will it take to write feature X?" then quite possibly you will not be as productive in the short term with ASP.NET MVC. However, the much better seperation of concerns in the framework, when compared to webforms, means it is much easier to test and write well structured code for. This will give you improved long term productivity but probably at the expense of short term productivity. If you can get your manager to see past this then you're on to a winner. Good luck with that one! To answer your direct questions: Will it scale? Definitely, it's built upon the highly performant ASP.NET framework and doesn't bring a lot of the Webforms baggage with it. Is it going to be easy for developers to pick up in a short period "weeks"? Depends on the current skillset of your developers. If they are familiar with web development and the MVC pattern it should come to them easily. If they are only familiar with ASP.NET Webforms drag-and-drop-with-some-code-behind then they will have a whole new paradigm to learn which will take time. Are there any real life systems that are built using ASP.NET MVC? This site is a great example of one. How can MVC save some developing time over ASP.NET? Covered in my initial answer. However, it can also save time in the long run as you don't really lean on the framework very much so you won't code yourself into a corner of workarounds which can happen frequently with Webforms.
