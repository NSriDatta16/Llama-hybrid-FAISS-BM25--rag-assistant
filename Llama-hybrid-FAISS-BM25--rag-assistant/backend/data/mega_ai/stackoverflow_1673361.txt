[site]: stackoverflow
[post_id]: 1673361
[parent_id]: 1673324
[tags]: 
Developing distributed applications is much the same unless you are using a platform designed for concurrency and distributed processing like Erlang. The principles for C#, Java and the rest are the same. If your application consists of a multi-tier setup with many application instances connecting to a database then there isn't much you need to worry about. Locking semantics, transactions and state integrity are implemented in the database but you still need to know the fundamentals. If you are taking a custom approach where you are writing the data storage engine or backend (instead of oracle or another RDBMS) then you do need to know the down and dirty of distributed and concurrent systems. You will have to deal with time, state, concurrency control, redundancy and tons of other stuff. As I say, if it is a traditional database backed application, then you just need to know the basics and where problems will arise in Oracle itself, what you need to lock (if anything).. If you want to learn the basics, start with thread and async programming stuff and work your way up to network distributed systems. Hope that helps in some way
