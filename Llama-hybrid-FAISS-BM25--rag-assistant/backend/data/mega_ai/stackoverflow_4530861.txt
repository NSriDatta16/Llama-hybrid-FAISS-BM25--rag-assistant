[site]: stackoverflow
[post_id]: 4530861
[parent_id]: 4530642
[tags]: 
you definitely need to use swingworker as trashgod suggested. to make this connection clear, heres an example i strongly suggest you try out. check "A More Complex Image Icon Example" in this link, and understand the code. it perfectly solves your problem. http://download.oracle.com/javase/tutorial/uiswing/components/icon.html in particular, pay attention to this bit of code: public IconDemoApp() { setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); setTitle("Icon Demo: Please Select an Image"); // A label for displaying the pictures photographLabel.setVerticalTextPosition(JLabel.BOTTOM); photographLabel.setHorizontalTextPosition(JLabel.CENTER); photographLabel.setHorizontalAlignment(JLabel.CENTER); photographLabel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5)); // We add two glue components. Later in process() we will add thumbnail buttons // to the toolbar inbetween thease glue compoents. This will center the // buttons in the toolbar. buttonBar.add(Box.createGlue()); buttonBar.add(Box.createGlue()); add(buttonBar, BorderLayout.SOUTH); add(photographLabel, BorderLayout.CENTER); setSize(400, 300); // this centers the frame on the screen setLocationRelativeTo(null); // start the image loading SwingWorker in a background thread loadimages.execute(); } you can see in this constructor how event dispatch is occuring separately from loadimages.execute(), which uses the swingworker to load images in the background. i'll be happy to clarify any doubts.
