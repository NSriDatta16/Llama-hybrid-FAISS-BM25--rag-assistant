[site]: datascience
[post_id]: 115894
[parent_id]: 68167
[tags]: 
There is a python package created exactly for this purpose of finding label errors and training ML models robustly and reliably even when your data has issues or you have noisy labels: https://github.com/cleanlab/cleanlab -- it works for any dataset you can train a classifier on and for most data formats, ML and deep learning frameworks, and data modalities, e.g. image, text, tabular, and audio data. I am an author on this package. link to python package: https://github.com/cleanlab/cleanlab Find label issues in 1 line of code from cleanlab.classification import CleanLearning from cleanlab.filter import find_label_issues # Option 1 - works with sklearn-compatible models - just input the data and labels ãƒ„ label_issues_info = CleanLearning(clf=sklearn_compatible_model).find_label_issues(data, labels) # Option 2 - works with ANY ML model - just input the model's predicted probabilities ordered_label_issues = find_label_issues( labels=labels, pred_probs=pred_probs, # out-of-sample predicted probabilities from any model return_indices_ranked_by='self_confidence', ) Train a model as if the dataset did not have errors -- 3 lines of code from sklearn.linear_model import LogisticRegression from cleanlab.classification import CleanLearning cl = CleanLearning(clf=LogisticRegression()) # any sklearn-compatible classifier cl.fit(train_data, labels) # Estimate the predictions you would have gotten if you trained without mislabeled data. predictions = cl.predict(test_data) Documentation and runnable tutorials for cleanlab: https://docs.cleanlab.ai/ Journal of AI Research (with theory to prove it works): https://arxiv.org/abs/1911.00068publication errors found using cleanlab: https://labelerrors.com/
