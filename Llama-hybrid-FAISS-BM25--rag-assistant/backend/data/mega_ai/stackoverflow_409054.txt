[site]: stackoverflow
[post_id]: 409054
[parent_id]: 404989
[tags]: 
In response to the comments from DK, I tested to what extend string concatenation is slower. I made this setup with three options; concatenating the string calling sw.Write twice calling sw.WriteLine On my machine, the second option is about 88% faster than average. At 10000000 iterations they use 3517, 2420 and 3385 milliseconds. It should only be significant if this is code that is called many times in your program. using System; using System.IO; using System.Text; class Program { static void Main(string[] args) { const string myString = "kdhlkhldhc√∏ehdhkjehdkhekdhk"; int iterations=getIntFromParams(args, 0, 10); int method = getIntFromParams(args, 1, 0); var fileName=Path.GetTempFileName(); using (StreamWriter sw = new StreamWriter(fileName, false, Encoding.Default)) { switch (method) { case 0: Console.WriteLine("Starting method with concatenation. Iterations: " + iterations); var start0 = DateTimeOffset.Now; for (int i = 0; i
