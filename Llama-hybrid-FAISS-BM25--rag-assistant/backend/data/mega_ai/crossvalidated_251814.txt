[site]: crossvalidated
[post_id]: 251814
[parent_id]: 229255
[tags]: 
Depending on your desired output, this is either a question about learning in time series, or a question about multiple instance learning . This will strongly inpact your experimental design. If your set up is "I have this set of people and their data up to week t and I want to predict their running time in week t + 1 to week t + h " then this is a time series problem. In this case you are trying to use past performance of a particular person to predict future performance. In this case you should use time series cross-validation to evaluate your model. In time series cross-validation, you pretend to go back in to the past to date t - n and only give your model the training data that would have been available at that time (data from week t - n and earlier). You then evaluate the model for week (t - n + 1) : (t - n + h) . This is repeated for the desired number of folds of cross-validation. If your set up is "I have data for one group of people and their run times in weeks 1 : t and I want to predict what the performance of a new group of people will be in weeks 1 : t " this is an example of multiple instance learning. In this case you would want to take the second approach you mentioned where you make your cross-validation folds keeping all of the data for an individual together as training or testing for each fold. In this case information about what person is being evaluated can strongly impact the model (ex. person A always runs about 60) so including other information about the same person in the training data could keep the model from generalizing to a new person. A good rule of thumb for cross-validation (or training/testing splits) is you should try and make you CV folds look like mini versions of the experiment you want to run. Anything that will be new when the model is implemented should be new in the validation data. If your time points will be new, you need to divide the data by time. If the people will be new, you need to divide it up by people.
