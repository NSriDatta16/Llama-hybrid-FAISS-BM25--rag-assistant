[site]: crossvalidated
[post_id]: 531337
[parent_id]: 
[tags]: 
Understanding the Neural Network Output using a Custom Gym Env continuous boundaries

I need help understanding some concepts on neural networks while using a Custom Gym Environment. self.action_space = gym.spaces.Box(low=np.array([0.,0.]), high=np.array([4.,0.02]), shape=(2,), dtype=np.float32) I have set the action_space as a continuous action space. Where the first element has a bound of [0, 4] and the second element has a bound of [0, 0.02]. I have tested to make sure that a random action sample, env.action_space.sample() will generate variables between theses bounds. for i in range(10): print(env.action_space.sample()) [2.874337 0.01467643] [1.2939405 0.01185006] [2.8685462 0.0141508] [3.6843169 0.01945442] [0.14828023 0.00132717] [1.7021259 0.00837106] [0.42704833 0.00118186] [3.3209796 0.00849273] [3.2173667 0.00427724] [0.9189667 0.00806994] So far so good. Now, I have initialize a state which is env.states = np.array([0, 23]) . I will feed this into my neural network with a input of two variables, two hidden layers, and a two outputs (hoping the give me values within the bounds as mentioned above. state = env.reset() # [0, 23] results = Actor(state) results tensor([-1.9830, 0.0177], grad_fn= ) # Output So I am a little confused on why am I having a negative value. It seems like the first variable regardless on what values will always be negative. My activation function are ReLU, so I would assume be 0 or a positive value. Bonus questions: How do you add standard deviation to your neural network output? To my understanding, the output should be a mean of the two action space values, but if I need their standard deviation, how would I approach this? Is it as easy as changing my output to 4? How does the neural network know?
