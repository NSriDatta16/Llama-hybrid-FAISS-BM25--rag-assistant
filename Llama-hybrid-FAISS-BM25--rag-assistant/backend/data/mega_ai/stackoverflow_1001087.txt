[site]: stackoverflow
[post_id]: 1001087
[parent_id]: 1000878
[tags]: 
Make the action unavailable (by hiding, disabling, or using an error message) only if the action is logically impossible for the current state of the task, or to encode organizational rules on the actions certain users are permitted to do (e.g., privileges/permissions). Whenever possible make the user actions always available: Use status indicators to discourage unnecessary actions, but allow them anyway. Use verification and undo to prevent permanent damage from unadvisable actions, rather than disallowing the actions. Users may need to do something some day that is usually “unadvisable.” Alter app design to make actions always possible in some way. For example, if a field needs to be filled out before an action can be done, prompt the user for the field, rather than disallowing the action. Control user behavior through organizational policy, not software. Policies are easier to change when the business rules change or when there’s an exception or emergency. Use disabling when: The user can do something in the app to make the action available. Availability is achieved through controls in the same window or its parent. The user can easily figure out which control does this. Use toggling controls rather than disabling for turning processes on and off. Use read-only text boxes rather than disabled text boxes for data that is applicable for the current state unchangeable by the user. Use hiding (“dynamic UI”): For actions that are never available to the user in his or her current job. For indicating different virtual places or things (e.g,. pages on a tab control, where each “tab” is a different place or thing). Make sure visual design is compatible with this: if you are representing different places, then make it look like different places (e.g., the way tabs do) For swapping large numbers of controls with alternative controls. Use layout, symbols, and text to explain unavailability, especially disabling. For example, mark your required fields; use tooltips to say why a button is disabled. Use error messages rather than disabling or hiding when there no other means to indicate graphically or textually how to make an action available. Further details and rationale at http://www.zuschlogin.com/?p=40 .
