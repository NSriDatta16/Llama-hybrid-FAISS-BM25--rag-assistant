[site]: stackoverflow
[post_id]: 3589019
[parent_id]: 3588673
[tags]: 
Ok, this isn't a rewrite because I don't have time nor the requirements to meet your needs but here are a couple of tips... Get rid of your table valued function if you don't need it; move that logic into your stored procedure. Get rid of your IF @StoreCatItem IS NULL statement and use a construct like WHERE (@StoreCatItem IS NULL OR a.StoreItemCatID = @StoreCatItem) instead in your WHERE clause to consolidate into 1 SELECT statement. If your intent was to encourage appropriate index usage add the OPTION(RECOMPILE) hint to the end of your query instead of duplicating sql. I see that you're doing paging in your stored procedure. The temp table is a good idea but change its definition and your insert query to only include the primary key values of the full resultset ordered in the correct fashion plus your IDENTITY column, but you very likely just need an INT column there, not BIGINT, not that it matters much here on a temp table. The first query that inserts into your table variable is where you filter with your WHERE condition. Use the construct mentioned above like so for each of your criteria. WHERE (@StoreCatItem IS NULL OR a.StoreItemCatID = @StoreCatItem OR a.StoreItemCatID IN ( SELECT x.StoreItemCatID FROM StoreItemCat x WHERE x.ParentID = @StoreItemCatID)) AND FREETEXT (a.ProductName, @SearchStr) AND a.StoreItemCatID = @StoreItemCatID AND a.Deleted = 0 AND a.Active = 1 The final select statement that returns your records should do a simple INNER JOIN between the keys you have in your table variable and your real data again; this is where you select all of the real fields you want and you don't need to repeat your criteria again since the join will filter your results. There is no substitute for iterative creation if you're just learning. Start with what you know works and build on it. Enjoy!
