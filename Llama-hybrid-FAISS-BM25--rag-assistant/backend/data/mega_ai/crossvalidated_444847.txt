[site]: crossvalidated
[post_id]: 444847
[parent_id]: 184713
[tags]: 
For a Bayesian approach, you can use mcp to fit a Poisson or Binomial model (because you have counts from fixed-interval periods) with autoregression applied to the residuals (in the log space). Then compare a two-segment model to a one-segment model using cross-validation. Before we start, note that for this dataset, this model does not fit well and cross-validation looks unstable. So I would refrain from using the following in high-stakes scenarios, but it illustrates a general approach: # Fit the change point model library(mcp) model_full = list( count ~ 1 + ar(1), # intercept and AR(1) ~ 1 # New intercept ) fit_full = mcp(model_full, data = df, family = poisson(), par_x = "year") # Fit the null model model_null = list( count ~ 1 + ar(1) # just a stable AR(1) ) fit_null = mcp(model_null, data = df, family = poisson(), par_x = "year") # Compare predictive performance using LOO cross-validation fit_full $loo = loo(fit_full) fit_null$ loo = loo(fit_null) loo::loo_compare(fit_full $loo, fit_null$ loo) For the present dataset, this results in elpd_diff se_diff model2 0.0 0.0 model1 -459.1 64.3 I.e., an elpd_diff/se_diff ratio of around 7 in favor of the null model (no change). Possible improvements include: modeling the periodical trend using sin() or cos() . adding prior information about the likely location of the change, e.g., prior = list(cp_1 = dnorm(1999.8, 0.5) . Read more about modeling autoregression, doing model comparison, and setting priors the mcp website . Disclosure: I am the developer of mcp .
