[site]: stackoverflow
[post_id]: 5540012
[parent_id]: 
[tags]: 
Detecting touch sprites and convertToNodeSpaceAR

I'm having a really hard time getting something as simple as detecting touch on a sprite to work... Can anybody help? I'm trying to create a method as a category for CCSprite that given a point or touch will return YES if the point is within the sprite, NO if it isn't. At the moment I have one implementation that seems to work when the sprite is not part of a cropped texture from Zwoptex (ie. the image used for sprite was not trimmed) CGPoint point = [touch locationInView:[touch view]]; point = [[CCDirector sharedDirector] convertToGL: point]; CGRect spriteRect = self.textureRect; spriteRect.origin = ccpAdd(ccpSub(self.positionInPixels, self.anchorPointInPixels), self.offsetPositionInPixels); return CGRectContainsPoint(spriteRect, point); I have found though that this does not work if the sprite was trimmed in the original texture. This variation seemed to do the trick CGRect spriteRect = self.textureRect; spriteRect.origin = ccpAdd(self.offsetPositionInPixels, self.positionInPixels); return CGRectContainsPoint(spriteRect, [self convertTouchToNodeSpaceAR:touch]); But now I have another set of sprites from a frame cache that do not seem to like this! They are trimmed and I can't see any difference from the sprites used with the code above. Can someone shed some light on the meaning of convertTouchToNodeSpaceAR:? I'm sure the problem lies in my ignorance and that there is a common elegant way of doing this in the Cocos2d framework...
