[site]: crossvalidated
[post_id]: 532756
[parent_id]: 
[tags]: 
Key diagnostic features in diagnosing fit for non-gaussian GAM

I have run the below model > supply.negbinom The model summary gives me a negative adjusted R squared value but a high percentage deviance explained. > summary(supply.negbinom) Family: Negative Binomial(1.855) Link function: log Formula: NumberRequests ~ s(nMonth, bs = "cc", k = 12) + s(nMonth, bs = "cc", k = 12, by = State) + s(Time) + s(Time, by = State) + State + Weight Parametric coefficients: Estimate Std. Error z value Pr(>|z|) (Intercept) -5.600567 1.915070 -2.924 0.00345 ** StateSA 2.296414 1.958935 1.172 0.24109 StateACT 2.722882 1.931200 1.410 0.15856 StateNT 2.741779 1.936817 1.416 0.15689 StateTAS 2.840822 1.931547 1.471 0.14136 StateWA 3.663745 1.926950 1.901 0.05726 . StateQLD 4.558119 1.918682 2.376 0.01752 * StateNSW 5.180326 1.916782 2.703 0.00688 ** Weight 0.024802 0.001211 20.483 The model also produces a good looking rootogram. root_nb2 but diagnostic plots produced by gam.check() (via appraise() from gratia package) look average and gam.check() also flags all my Time related smooth as potentially problematic. Method: REML Optimizer: outer newton full convergence after 17 iterations. Gradient range [-0.000111227,0.0001177008] (score 1252.014 & scale 1). eigenvalue range [-0.0001176733,46.7456]. Model rank = 180 / 180 Basis dimension (k) checking results. Low p-value (k-index Q: What are the key diagnostic features to look at here to diagnose an ill fitting model? The models adjusted R squared is negative. In models with a gaussian error distribution I believe that this can indicate an over-fitted model. However, I note that the summary.gam() page suggests that for non-normal error distributions the deviance explained is probably more important, which is this case, the deviance explained is good and quite high. The results of gam.check() also do not look good, with the plots looking poor and all the Time related smooths being significant with a K-index below 1. However, again, I believe this to be more important for models with a gaussian error distribution; I note that gam.check() suggests that the residuals extracted from the gam object are not standardised for the family used . Lastly, my model produced a great looking rootogram, which I believe to be important for assessing the fit of count distribution model (good post on interpreting rootograms here ).
