[site]: stackoverflow
[post_id]: 1121715
[parent_id]: 
[tags]: 
How to send an iCal meeting request using Java Mail, and receive the response

I'm trying to send an iCal to an outlook, using Java Mail Library, I've read already the Question , and I already have some sample code public class SendMeetingRequest { String host = "" ; String port = "" ; String sender = "" ; public static SimpleDateFormat dateFormat = new SimpleDateFormat( "yyyyMMdd'T'HHmm'00'" ) ; public static SimpleDateFormat dateParser = new SimpleDateFormat( "dd-MM-yyyy HH:mm" ) ; public static void main(String[] args) throws Exception { SendMeetingRequest sender = new SendMeetingRequest() ; sender.sendInvitation( “LogicaCMG Inschrijf Site” , new String[] { “robert willems of brilman logicacmg com” } , “Outlook Meeting Request Using JavaMail” , dateParser.parse( “28-08-2006 18:00″ ) , dateParser.parse( “28-08-2006 21:00″ ) , “LIS-42″ , “Bar op scheveningen” , “ Aanwezigheid verplicht! We gaan lekker een biertje drinken met z’n allen.” ) ; } void sendInvitation( String organizer , String[] to , String subject , Date start , Date end , String invitationId , String location , String description ) throws Exception { try { Properties prop = new Properties(); prop.put(”mail.smtp.port”, port ); prop.put(”mail.smtp.host”, host ); Session session = Session.getDefaultInstance(prop); session.setDebug(true); // Define message MimeMessage message = new MimeMessage(session); message.setFrom(new InternetAddress(sender)); // Set TO if( to != null && ( to.length > 0 ) ) { InternetAddress[] address = new InternetAddress[ to.length ] ; for( int i = 0; i \”" ) ; messageText.append( “\n” + ”BEGIN:VALARM\n” + ”TRIGGER:-PT15M\n” + ”ACTION:DISPLAY\n” + ”DESCRIPTION:Reminder\n” + ”END:VALARM\n” + ”END:VEVENT\n” + ”END:VCALENDAR” ) ; Multipart mp = new MimeMultipart(); MimeBodyPart meetingPart = new MimeBodyPart() ; meetingPart.setDataHandler( new DataHandler( new StringDataSource( messageText.toString(), “text/calendar”, “meetingRequest” ) ) ) ; mp.addBodyPart( meetingPart ) ; MimeBodyPart descriptionPart = new MimeBodyPart() ; descriptionPart.setDataHandler( new DataHandler( new StringDataSource( description, “text/html”, “eventDescription” ) ) ) ; descriptionPart.setContentID( “ ” ) ; mp.addBodyPart( descriptionPart ) ; message.setContent( mp ) ; // send message Transport.send(message); } catch (MessagingException me) { me.printStackTrace(); } catch (Exception ex) { ex.printStackTrace(); } } private static class StringDataSource implements DataSource { private String contents ; private String mimetype ; private String name ; public StringDataSource( String contents , String mimetype , String name ) { this.contents = contents ; this.mimetype = mimetype ; this.name = name ; } public String getContentType() { return( mimetype ) ; } public String getName() { return( name ) ; } public InputStream getInputStream() { return( new StringBufferInputStream( contents ) ) ; } public OutputStream getOutputStream() { throw new IllegalAccessError( “This datasource cannot be written to” ) ; } } } But its being sent as an attachment to the outlook 2007 and outlook 2003, and even If I click the attachment to view and accept, I don't receive the Answer, which is the purpose of the application to have a similar functionality like outlook. Is there any procedure I need to know of, or is it the Invitation ID that makes the thing rough?
