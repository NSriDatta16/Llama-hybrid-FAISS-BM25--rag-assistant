[site]: stackoverflow
[post_id]: 3298917
[parent_id]: 3296624
[tags]: 
Opening the web app in its own page with no browser controls starts making sense when the app becomes rich enough to rival a desktop application, rather than being a bunch of pages the user browses with minimal input to each. Among the usability advantages: Unsaved user input to fields cannot be lost due to navigating to another page. In an ordinary web app, the user is trapped in completing input to one page before looking at any other, in essence constituting an application made entirely of modal dialog boxes. Exiting the app is unambiguous, since clicking an Exit/Logout button can close the window. There are no pages left behind on the Back button history list to give the false impression the session is still going and input is still accepted. This may also have security benefits. The user’s “work space” is control by the application, which can be designed to ensure the user has ready access to anything they’re working on. In an ordinary web app, clicking Back then clicking a link “prunes” the history list, resulting in the loss of easy access to pages the user may have been working on. The web app must be rich enough to support all needs so the users won’t miss the browser controls. For example, it should have controls for Print, Find, text size, etc. These should have a look and feel similar to typical apps, such as browsers (e.g., be located in roughly the same place, perhaps within File – Edit – View pull-down menus). User’s lose the familiarity of the browser environment, but trade it for the familiarity of a desktop environment –most desktop apps lack Back buttons and that works fine. Hiding the browser controls not only discourages the user from doing anything damaging, like opening a new page from Favorites, but also signals to the user that they’re no longer in a browser environment, so new rules apply. Giving the app a desktop look and feel would also help in this regard. The app should be self-contained in a single page so that paging is unnecessary. However, if the app is too complex for this, I recommend you open any new page in its own window so that the app is consistent with itself and consistent with desk-top apps. Don’t mix a page-back-forward navigation model with an open-in-new-window model or else users will get confused on how to get to previous pages. The usability guideline to avoid opening a web page in a new window is really a guideline to not mix models.
