[site]: stackoverflow
[post_id]: 4270239
[parent_id]: 4259335
[tags]: 
Tim's answer is reasonable. I would normally do the same: Make table B identical to table A except for making table B's PK not an auto-incrementing column. (Attempting to always insert the data in the same order would be a bad idea. It would certainly be fragile, as Tim mentioned. But really, it would be worse than that. First, you could not do bulk inserts. You would need to commit each row individually. Also, you normally cannot be certain that the next value used will be the next integer. It's the DBMSs responsibility to pick the next value. There are lots of situations where the next value inserted will not be the next higher integer.) But an important detail is that DBMSs handle auto-incrementing fields differently. In many cases the behavior of the auto-incrementing field is to provide a value if the inserted value is NULL but to accept an explicit value if one is provided. In other cases the database will reject attempts to insert a value into an auto-incrementing field. So if you are facing the former case then it's really not a problem to leave table A and table B as completely identical. Your ETL job will insert values into table B, and the auto-incrementing nature of the PK column will just be ignored.
