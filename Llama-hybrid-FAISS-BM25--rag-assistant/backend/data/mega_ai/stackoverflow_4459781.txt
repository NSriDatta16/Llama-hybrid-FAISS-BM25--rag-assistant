[site]: stackoverflow
[post_id]: 4459781
[parent_id]: 
[tags]: 
PHP: variable scope in multiple foreach

EDIT: Problem solved by using $i+1 in function call. I have trouble using variables in multiple foreaches. The problem commeth when I try to call a function inside foreach. Whenever I do this the main loop's iterator value is suddenly zero (no matter which lap it's on) but when I comment out the function call the iterator value shows as it should again. Could someone point me to the right direction in accessing variables in following examples: This works as it shoulds for($i=0; $i But this doesn't work, iterator shows up as a 0. for($i=0; $i addStuff($i, $moreSomething); // i = 0, moreSomething is correct } } } EDIT: I'm adding example code to reproduce the problem. Note that this is about the behaviour of $i's value, not the correct order of the names or something like that. I'm just concerned as why the $i's value suddenly changes. Might be my logic, but see for yourself (when using $i or $b in addName() function $i's output is 000000000012, when using $a then $i's output suddenly changes to 00000000001111111222) class RockPaperScissors { private $nameArray; // constructor function RockPaperScissors () { $this->nameArray = array(); } function addName($level, $name) { $this->nameArray[$level][] = $name; } function getNames($level) { $array = array(); foreach ($this->nameArray as $key => $value) { if ($key == $level) { foreach ($value as $name) { $array[] = $name; } } } return $array; } function printArray() { print_r($this->nameArray); } } function getNewNames($name) { $array = array(); switch ($name) { case "Mickey": $array[] = "Morty"; $array[] = "Ferdie"; break; case "Donald": $array[] = "Houie"; $array[] = "Dewey"; $array[] = "Louie"; break; case "Goofy": $array[] = "Gilbert"; break; case "Morty": $array[] = "Morty-B"; break; case "Ferdie": $array[] = "Ferdie-B"; break; case "Houie": $array[] = "Houie-B"; break; case "Dewey": $array[] = "Dewey-B"; break; case "Louie": $array[] = "Louie-B"; break; case "Gilbert": $array[] = "Gilbert-B"; break; } return $array; } $MAX_LEVELS = 3; $RPS = new RockPaperScissors(); $RPS->addName(0, "Mickey"); $RPS->addName(0, "Donald"); $RPS->addName(0, "Goofy"); $a = 0; $b = 0; for ($i=0; $i getNames($i); echo $i; foreach($namesFromRPS as $name) { echo $i; $newNames = getNewNames($name); foreach($newNames as $newName) { echo $i; // try switching $i to $a or $b and notice the behaviour change of $i $RPS->addName($i, $newName); } $a++; } $b++; } //$RPS->printArray();
