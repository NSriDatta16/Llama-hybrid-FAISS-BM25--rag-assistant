[site]: stackoverflow
[post_id]: 4395568
[parent_id]: 4395141
[tags]: 
Please, don't use regular expressions for irregular strings: it stirs the sleeping god . Instead, use XPath: function strip_opening_lines($html) { $dom = new DOMDocument(); $dom->preserveWhitespace = FALSE; $dom->loadHTML($html); $xpath = new DOMXPath($dom); $nodes = $xpath->query("//p"); foreach ($nodes as $node) { // Remove non-significant whitespace. $trimmed_value = trim($node->nodeValue); // Check to see if the node is empty (i.e. ). // If so, remove it from the stack. if (empty($trimmed_value)) { $node->parentNode->removeChild($node); } // If we found a non-empty node, we're done. Break out. else { break; } } $parsed_html = $dom->saveHTML(); // DOMDocument::saveHTML adds a DOCTYPE, , and // tags to the parsed HTML. Since this is regular data, // we can use regular expressions. preg_match('# (.*?) #is', $parsed_html, $matches); return $matches[1]; } Reasons why all the regex solutions presented are bad: Won't match empty paragraph elements with attributes (e.g. ) Won't match empty paragraph elements that are not literally empty (e.g. )
