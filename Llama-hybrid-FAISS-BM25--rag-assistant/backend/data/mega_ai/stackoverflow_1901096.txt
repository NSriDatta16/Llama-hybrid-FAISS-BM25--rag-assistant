[site]: stackoverflow
[post_id]: 1901096
[parent_id]: 1223163
[tags]: 
See Ayende's site: Efficiently Selecting a Tree . I have successfully used this technique in my own applications. With ICriteria, it looks like this: session.CreateCriteria () .SetFetchMode("SubCategories", FetchMode.Join) .SetResultTransformer(new DistinctRootEntityResultTransformer()) .List () .Where(x => x.ParentCategory == null); The main difference between this version and what you tried is how the "ParentCategory == null" filter is applied. It has to be left out of the query that is sent to the database in order to retrieve the whole tree - but we still need the query to only return the root nodes of the tree, so we'll use linq to find those after the database query has completed.
