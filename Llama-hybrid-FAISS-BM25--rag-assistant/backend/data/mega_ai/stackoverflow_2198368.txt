[site]: stackoverflow
[post_id]: 2198368
[parent_id]: 2198303
[tags]: 
As I understand you should look for the initial angle (when you clicked, the line between the anchor and your click) and the current angle (when you are dragging, same line). That angle (independent from the current distance to anchor point) will give you the rotation. So you have to: rotate(anglenow - angle0) How to find it: In both cases (initial click and mouse move event) you have to find angle between anchor and mouse point thinking the anchor as the origin. I would use a method (getAngle(x1,y1,x2,y2). That method (except for race conditions like same x or same y, easily detectable) should calculate arctan(dy/dx). Sign But when you are dividing dy/dx it can be: + / + -> + + / - -> - - / + -> - - / - -> + It is, four posibilities give you two kind of results. So, you have to look some condition to detect them. I should review arctan doc or source to see what values it gives (between 0 and pi, or -pi/2 and +pi/2) and check then sign of the dx or the dy (depending on what range arctan returns) and use it to add/decrement pi to then resulting angle. Then you'll get a getAngle method that return correctly the 360ยบ space. Edit Javadoc says: Math.atan retuns the arc tangent of an angle, in the range of -pi/2 through pi/2. So, assuming your angle of value 0 is for the X axis as I assumed, the range it returns is the right hemisphere. So you have to distiguish the right hemisphere from the left one. If you calculate dx = xtarget - xorigin (as you did for the division) it will be positive if the correct hemisphere is the right one, and negative if it's not. So if dy Edit: pseudocode, please double check! onmousedown { startpoint = (x,y); startangle = getAngle(origin, startpoint); } onmousemove { currentpoint = (x,y); currentangle = getAngle(origin, currentpoint); originalimage.rotate(currentangle - startangle); } getAngle(origin, other) { dy = other.y - origin.y; dx = other.x - origin.x; if (dx == 0) // special case angle = dy >= 0? PI/2: -PI/2; else { angle = Math.atan(dy/dx); if (dx
