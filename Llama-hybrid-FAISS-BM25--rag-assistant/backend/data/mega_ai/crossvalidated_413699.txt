[site]: crossvalidated
[post_id]: 413699
[parent_id]: 413498
[tags]: 
In general, when we want to predict something, we want the predictive algorithm to return consistent results, i.e. same inputs should lead to same outputs . In some cases it may make sense to randomize the predictions (e.g. classification algorithm predicts two classes with equal probabilities, and you need to force choice of a single category), but this is something to be considered on case-by-case basis. As about neural networks (including convolutional networks), they are defined in terms of algebraic operations (mostly matrix multiplications), activation functions, and some other stuff that is also deterministic. We can use randomization in neural networks, but even if we use things like dropout during training , we turn it off during the prediction phase. Different story is if we want to simulate the outputs from neural networks using (e.g. autoencoders, GANs, some algorithms in NLP that generate text), then we want them to be randomized. TL;DR My question is, if i feed the same image to an object detector many times, will the results of each time be the same? Yes.
