[site]: stackoverflow
[post_id]: 169986
[parent_id]: 169404
[tags]: 
You most probably do want to use smart pointers here, it really simplifies the problem. However, just as an excercise, it's quite easy to determine if given type is pointer. Rough implementation (could be more elegant, but I dont want to introduce int2type): typedef char YesType; typedef char NoType[2]; template struct IsPointer { typedef NoType Result; }; template struct IsPointer { typedef YesType Result; }; template struct MyContainer { ~MyContainer() { IsPointer ::Result r; Clear(&r); delete[] data; } void Clear(YesType*) { for (int i = 0; i };
