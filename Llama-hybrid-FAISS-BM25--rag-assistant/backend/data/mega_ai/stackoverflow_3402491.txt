[site]: stackoverflow
[post_id]: 3402491
[parent_id]: 
[tags]: 
NSFetchedResultsController predicate is a little too real time...?

So I've got an NSFetchedResultsController that I activate on ViewDidLoad with the managedobjectcontext that has been passed on from the appdelegate on load. I put a predicate on some field let's call it "sectionNumber" and say it needs to equal 1 in my predicate. NSFetchResultsController works fine until I add a new object to the MOContext... I use MyMO *newObj = [NSEntityDescription insertnewentity]... start filling the different fields [newobj setName:@"me"]; [newobj setAge:12]; etc... Once I put [newobj setSectionNumber:1] - it finds it at that very instant and causes the app to crash with different weird errors that all lead to EXC_BAD_ACCESS. All of this happens on the MAIN THREAD. Any ideas why? How could one get around that? UPDATE: It only happens when I use my saveMOC method which is called at the end of an NSXMLParser specific thread I spawned off. The saveMOC is called on a successful parse with the [self performSelectorOnMainThread].... If i just added the extra managedobject via ViewDidLoad (just to check weather this is related somehow to to threading) the problem does NOT occur. So it's obviously something with the new thread even tho the selector should have been run on the main thread. UPDATE #2: This is my spawned thread for the XML Parser: -(void)getAndParseXML { NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init]; DLog(@"Online storage"); NSXMLParser *parser = [[NSXMLParser alloc] initWithContentsOfURL:theUrl]; XMLTranslator *translator = [[XMLTranslator alloc] init]; [parser setDelegate:translator]; if ([parser parse]) { //success call MOC change routine on main thread DLog(@"success parsing"); [self performSelectorOnMainThread:@selector(saveMOC:) withObject:translator waitUntilDone:NO]; } else { DLog(@"error: %@",[parser parserError]); } [parser setDelegate:nil]; [parser release]; DLog(@"XML parsing completed"); [pool release]; } Then this is my saveMOC: -(void)saveMOC:(XMLTranslator*)translator { NSDateFormatter *formatter = [[NSDateFormatter alloc] init]; [formatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"]; for (NSDictionary *dict in [translator retrievedData]) { APost *newPost = [NSEntityDescription insertNewObjectForEntityForName:@"APost" inManagedObjectContext:managedObjectContext]; //parse time into NSDate [newPost setTime:[formatter dateFromString:[dict objectForKey:@"time"]]]; //author, category, description [newPost setAuthor:[dict objectForKey:@"author"]]; [newPost setCategory:[dict objectForKey:@"category"]]; [newPost setContent:[dict objectForKey:@"description"]]; //create a post id so that the validation will be alright [newPost setPostid:[NSNumber numberWithInteger:[[dict objectForKey:@"postid"] integerValue]]]; [newPost setSectionDesignator:sectionDesignator]; } This saveMoc method continues and has a [managedobjectcontext save:&error] and more... but it's not relevan to our case as my method crashes I've discovered thru commenting one line after another at the point where I set the sectionDesignator since it equals to the current predicate in my NSFetchedResultsController.
