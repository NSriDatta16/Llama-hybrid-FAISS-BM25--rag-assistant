[site]: stackoverflow
[post_id]: 3422562
[parent_id]: 3421609
[tags]: 
While the technique of converting to a string and then adding the decimal digits together is elegant, it either requires division or is inefficient in the conversion-to-a-string step. Is there a way to apply the idea directly to a binary number, without first converting to a string of decimal digits? It turns out, there is: Given a binary number, the sum of its odd bits minus the sum of its even bits is divisible by 3 iff the original number was divisible by 3. As an example: take the number 3726, which is divisible by 3. In binary, this is 111010001110 . So we take the odd digits, starting from the right and moving left, which are [1, 1, 0, 1, 1, 1]; the sum of these is 5 . The even bits are [0, 1, 0, 0, 0, 1]; the sum of these is 2 . 5 - 2 = 3, from which we can conclude that the original number is divisible by 3.
