[site]: stackoverflow
[post_id]: 4287531
[parent_id]: 
[tags]: 
How to generate random numbers in parallel?

I want to generate pseudorandom numbers in parallel using openMP, something like this: int i; #pragma omp parallel for for (i=0;i I've tested it on windows and I got huge speedup, but each thread generated exactly the same numbers. I've tested it also on Linux and I got huge slowdown, parallel version on 8core processor was about 10 time slower than sequential, but each thread generated different numbers. Is there any way to have both speedup and different numbers? Edit 27.11.2010 I think I've solved it using an idea from Jonathan Dursi post. It seems that following code works fast on both linux and windows. Numbers are also pseudorandom. What do You think about it? int seed[10]; int main(int argc, char **argv) { int i,s; for (i=0;i PS.: I haven't accepted any answer yet, because I need to be sure that this idea is good.
