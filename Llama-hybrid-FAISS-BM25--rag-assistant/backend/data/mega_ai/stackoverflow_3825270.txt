[site]: stackoverflow
[post_id]: 3825270
[parent_id]: 
[tags]: 
Unity auto-factory with params

I'm trying to figure out the correct way to inject an auto-factory which takes params, or even if this is possible with Unity. For example I know I can do this: public class TestLog { private Func logFactory; public TestLog(Func logFactory) { this.logFactory = logFactory; } public ILog CreateLog() { return logFactory(); } } Container.RegisterType (); TestLog test = Container.Resolve (); ILog log = test.CreateLog(); Now what I'll like to be able to do is: public class TestLog { private Func logFactory; public TestLog(Func logFactory) { this.logFactory = logFactory; } public ILog CreateLog(string name) { return logFactory(name); } } Container.RegisterType (); TestLog test = Container.Resolve (); ILog log = test.CreateLog("Test Name"); Unfortunately this doesn't work. I can see how you can set up custom factories for creating instances in Unity, just can't seem to fund any clear examples for this example. Obviously I could create my own factory but I'm looking for an elegant way to do this in Unity and with minimum code.
