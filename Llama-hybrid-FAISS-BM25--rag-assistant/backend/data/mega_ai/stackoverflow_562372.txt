[site]: stackoverflow
[post_id]: 562372
[parent_id]: 562196
[tags]: 
I recently faced a very similar problem and a friend gave me some advice that helped a great deal. He said: "keep yourself out of it." What he meant was, that you must communicate the problems because they are real, costly problems with consequences in terms of time and money. But when you do communicate, talk only about the consequences for the organization. Do not mention the consequences to you, because then it just sounds like whining and will be ignored. For example: Not keeping yourself out of it: "The other developers use these obscure, misleading identifiers and then I have to spend hours going over the code trying to discover what they meant. It's taking up a lot of my time." Keeping yourself out of it: "It would be very helpful and cost effective to do some refactoring of class and variable names and also establish some coding standards around identifiers. The immediate payoff will be an easier-to-understand codebase for everyone, leading to better productivity. The longer-term payoff will be that later we'll be able to modify the code and fix things faster. If a critical bug is discovered right before a release, an understandable codebase will be really important." I hope that helps.
