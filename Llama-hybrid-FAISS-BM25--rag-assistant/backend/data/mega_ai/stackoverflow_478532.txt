[site]: stackoverflow
[post_id]: 478532
[parent_id]: 476348
[tags]: 
The thing that made OO click for me is learning about Prototype based OO like in Io and Self . C#'s OO is a very different beast: not elegant and simple, but hairy and complex. Simple doesn't mean less powerful, on the contrary! I suggest learning a simple and elegant system first. Then you can see the OO in C# if you squint. Another A-Ha moment was understanding how a type system can prevent calling the wrong methods on the wrong objects at compile time. C#'s type system doesn't do this in all cases because of casts. I got this A-Ha moment when reading the articles on type theory from the Journal of Object Technology.
