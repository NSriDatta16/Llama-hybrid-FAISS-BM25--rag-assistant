[site]: stackoverflow
[post_id]: 4345424
[parent_id]: 4345121
[tags]: 
I guess that you need so called 'singleton' object - one object which is accessed by your whole system. Even 'static' from Java won't help you here too much: there can be more than one copy of a static variable in JavaEE, for example when you use clustering, each machine in the cluster will run its own copy of the application, so will have its own copy of the 'static' variable. If you have (let's say) 10 clients (in Flash or Flex), and 10 clustered servers, each client may get its own server, so each client may get its own static variable on the server. What's more, when the server is restarted, but the client is still alive, all your static variables are lost. The only way to make the true, system-level singleton is to use a more complex solution, like: save the 'singleton' data to some file on the server side, so all nodes in the cluster and all clients can access this file; save the 'singleton' data to the database; use application-scoped Enterprise Java Beans; use Terracotta, which can turn 'static' variables into really static, persistent ones automatically with no changes in your code.
