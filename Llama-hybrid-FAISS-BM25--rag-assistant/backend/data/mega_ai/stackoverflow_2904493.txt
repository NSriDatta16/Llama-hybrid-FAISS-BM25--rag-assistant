[site]: stackoverflow
[post_id]: 2904493
[parent_id]: 2891459
[tags]: 
I'm not sure what you mean by "a new concept called category", perhaps you can give an example? If you mean that you want to add additional metadata, perhaps as a way of organizing information in the user interface, there is no need to extend the semantic web languages or storage systems - they can already do what you want. Suppose you have data for a school from the UK Government schools dataset (using Turtle encoding for brevity): @prefix sch-ont: . a sch-ont:School; sch-ont:establishmentStatus ; sch-ont:MSOA ; sch-ont:establishmentName "Guildhall School of Music and Drama"; ... You can directly query that data from the SPARQL end-point , or you can download the data and store it locally in your own triple store. Either way, you're perfectly at liberty to add extra information that's useful to your users. For example: @prefix ankurs-app: . ankurs-app:category ankurs-app:wkdCool. You can store this new triple in the same graph as the downloaded data, or you can store it in a separate named-graph to indicate that it's information that has a different provenance than the source data. Either way, it's then simple to query it either programmatically from Jena, or via a SPARQL query. Doing a layout for efficiently querying schemaless triple-centric data is a well-studied, and hard, problem. Most of the RDF platforms, including Jena, have well-optimised code for querying and updating triples from their own database schemes. You would have to have very good reasons for embarking on your own relational table layout :) If you really do need to take an existing relational table scheme and map it to a Jena RDF model, look at D2RQ .
