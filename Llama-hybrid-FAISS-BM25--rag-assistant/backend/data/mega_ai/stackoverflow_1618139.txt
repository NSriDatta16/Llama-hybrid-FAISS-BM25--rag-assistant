[site]: stackoverflow
[post_id]: 1618139
[parent_id]: 580577
[tags]: 
I still don't see why a child namespace conflicts with a root namespace? All types under a namespace can be fully qualified, and the fully qualified names refer to different types. e.g. System.Abc.Xyz.Type has nothing in relation to Abc.Xyz.System.Type The System in the first case refers to a completely different concept (The Company name under the guidelines), whereas the System in the second case could refer to the product or subsystem name. If root namespaces can cause this kind of interference then surely that's a big problem because I may choose to call my new rainforest monitoring product Amazon and put all my types under MyCompany.Amazon . Then later on I may choose to store my data using the S3 storage and suddenly the namespace Amazon causes a conflict. We've just run into the same issue as our project is split into 3 major sub-systems - Database, User and System. These seem like obvious child namespaces under our MyCompany root namespace. Remember, this has nothing to do with Using statements as Simon said "It will occur even in files, such as generated code for web services that doesn't contain any reference to RR.System" UPDATE: The following Stack Overflow question is along the same lines. However the MSDN article it points to discusses a class name called System hiding a namespace (fair enough) and also using System as a top-level namespace (fair enough). However it does not discuss why a child namespace conflicts with a root one. Stack Overflow Q: Is global:: a bad code smell in C#? MSDN Article: How to: Use the Namespace Alias Qualifier
