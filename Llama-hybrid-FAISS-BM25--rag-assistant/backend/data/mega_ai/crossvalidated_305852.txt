[site]: crossvalidated
[post_id]: 305852
[parent_id]: 
[tags]: 
How to train neural network with False Positives to give correct result after training

I am using keras with Tensorlow as backend, It is normal fully connected sequential network . It is giving me 97.8222% accuracy with 5.5769% loss. However my issue here is that when I will deploy this model on production it is sure that it will give False positive and False Negative results on some dataset. I want to find out when I get any False Positive or False Negative. How I can retrain my network with FP/FN datasets so that on next prediction/testing it should not give FP/FN on the same dataset. Keras Neural Network : model = Sequential() model.add(Dense(32, input_dim=99, kernel_initializer='uniform', activation='relu')) model.add(Dropout(0.2)) model.add(Dense(24, kernel_initializer='uniform', activation='relu')) model.add(Dropout(0.2)) model.add(Dense(2, kernel_initializer='uniform', activation='softmax')) model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
