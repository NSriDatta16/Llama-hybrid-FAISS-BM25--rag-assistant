[site]: crossvalidated
[post_id]: 72608
[parent_id]: 72606
[tags]: 
I am not sure if there is a "standard" thing to do in the case one of the initial centroids is completely off. You can easily test this by specifying the initial centroids and see how things evolve! For instance, R will just give you an error. Say you do: # Set the RNG seed to ensure reproducibility set.seed(12345) # Let's create 3 visually distinct clusters n Now, R has obviously no issue in discriminating the 3 clusters when you let it choose the initial centroids, but when you run it the second time it will just say: Error: empty cluster: try a better set of initial centers I guess that if you are implementing your own algorithm you may choose to use this behaviour or rather give the user a warning and let the algorithm choose the centroids by itself. Obviously, as others pointed out, there are algorithms such as k-means++ that help in choosing a good set of starting centroids. Also, in R you can use the nstart parameter of the kmeans function to run several iterations with different centroids: this will improve clustering in certain situations. EDIT : also, note from the R kmeans help page The algorithm of Hartigan and Wong (1979) is used by default. Note that some authors use k-means to refer to a specific algorithm rather than the general method: most commonly the algorithm given by MacQueen (1967) but sometimes that given by Lloyd (1957) and Forgy (1965). The Hartigan–Wong algorithm generally does a better job than either of those, but trying several random starts (nstart> 1) is often recommended. For ease of programmatic exploration, k=1 is allowed, notably returning the center and withinss. Except for the Lloyd–Forgy method, k clusters will always be returned if a number is specified. If an initial matrix of centres is supplied, it is possible that no point will be closest to one or more centres, which is currently an error for the Hartigan–Wong method.
