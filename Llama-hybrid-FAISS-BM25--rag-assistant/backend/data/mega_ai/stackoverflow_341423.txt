[site]: stackoverflow
[post_id]: 341423
[parent_id]: 
[tags]: 
Javascript's setTimeout function not calling

The setTimeout function always seems to give me trouble. Right now I have a function that is recursive (calls itself through setTimeout) and changes the elements height. The function is sent two arguments: the element to be altered and that elements maximum height. The purpose of the function is to unfold the element, or "slide down" at a constant pace. I'm aware I could probably solve this problem with jQuery, but I'm trying my own function. function slide_down(element, max_height) { if(element.clientHeight = max_height) ? max_height : (element.clientHeight + factor); element.style.height = new_height + 'px'; var func_call = 'slide_down(' + element + ', ' + max_height + ');'; window.setTimeout(func_call, 10); } } I have tested the arguments when the function is initially called. max_height is set to 20 because it is the elements desired height (I got this value from .scrollHeight). When the function is done, I want to have it call itself until max_height is the element's height. I do that with this setTimeout call: var func_call = 'slide_down(' + element + ', ' + max_height + ');'; window.setTimeout(func_call, 10); And it is not working. THIS does work: var func_call = 'alert(1);'; window.setTimeout(func_call, 10); I have also tried putting the function call directly into the setTimeout statement, still does not work. Note that the element's height DOES change the first iteration, the function just never calls itself. So the element variable is set correctly, and I used alert() to display the max_height which is also correct. alert(func_call); Alerts this: slide_down([object HTMLParagraphElement], 20);
