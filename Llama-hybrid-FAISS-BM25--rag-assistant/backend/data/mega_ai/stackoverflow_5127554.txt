[site]: stackoverflow
[post_id]: 5127554
[parent_id]: 
[tags]: 
Parse XML to UL

I am trying to use JQuery to parse a sitemap.xml to look like this HTML: http://astuteo.com/slickmap/demo/ After working on it for a few hours I decided I really need some help in the right direction. the main template it has is this, where each indent is a different directory level: Home Services Graphic Design Web Development Internet Marketing Social Media Search Optimization Google AdWords Copywriting Photography I am using a google sitemap.xml which looks like this: http://meyers.ipalaces.org/sitemap_000.xml http://meyers.ipalaces.org/ 2011-02-26T09:32:18Z hourly 0.4 http://meyers.ipalaces.org/meyers/photos/Explorer 2011-02-26T09:31:33Z hourly 0.2 The method I came up with avoids setting everything exactly how it is on the css template, but instead I just focused on getting it to have the correct levels: What it does is takes the level of a URL goes through each level trying to create the list based on the previous level. So with the example www.example.com/brand/model/product/ : it gets the first [0] element, www.example.com this is level 1 so it checks is there a ul[id=1] , if not then run create_ul and append it to #content . Now attach a li to the ul it just made..level 1 is "special" because it has to be created first, thats why I have a lot of if level==1 in the code. For the next element [1] it gets brand which is level 2. This time it checks is there a li[id=www.example.com] ul[id=2] if there exist, it will create one and then attach a li to the ul . This method isn't working out for me at all, it also messes up if say level 8 has the same id and something from level 4. I just need a new idea on how to approach this. Here is my functions as of now, but im sure I should just scrap most of the code: function create_ul(level, id, prev_id) { var ul = $(' ',{ id: level }); if(level==1) { $('#content').append(ul); } else { $('ul[id='+(level-1)+'] li[id='+prev_id+']').append(ul); } } function create_li(level, id, prev_id){ if (level ==1){ if ($('ul[id='+level+']').length == 0) { create_ul(level, id, prev_id); } else if ($('ul[id='+level+'] li[id='+id+']').length > 0) { return; } var li = $(' ',{ id: id }); var a = $(' ',{ text: level + " - " + id, href: "nothing yet" }); $('ul[id='+level+']').append(li); return; } // If there is no UL for the LI, create it if ($('li[id='+prev_id+'] ul[id='+level+']').length == 0) { create_ul(level, id, prev_id); } else if ($('ul[id='+level+'] li[id='+id+']').length > 0) { return; } var li = $(' ',{ id: id }); var a = $(' ',{ text: level + " - " + id, href: "nothing yet" }); li.append(a); $('li[id='+prev_id+'] ul[id='+level+']').append(li); } $.ajax({ type: "GET", url: "/sitemap_000.xml", dataType: "xml", success: parseXml }); function parseXml(xml) { URLS = new Array(new Array(), new Array(), new Array()); $(xml).find("loc").each(function(){ var url = $(this).text(); URLS[1].push(url); url = url.replace("http://", "") var url_array = url.split("/"); URLS[0].push(url_array); var rawLastMod = $(this).parent().find('lastmod').text(); var timestamp = rawLastMod.replace(/T.+/g, ''); var lastMod = formatDate(timestamp); URLS[2].push(lastMod); }); $(URLS[0]).each(function(i, url_array){ $(url_array).each(function(index, fragment){ var level = index+1; var id = fragment; if(index!=0) { var prev_id = URLS[0][i][index-1]; } else { var prev_id = null; } if(id != "") { create_li(level, id, prev_id); } }); }); } I have decided to reply on a PHP solution instead of Javascript. I am using this PHP script: http://www.freesitemapgenerator.com/xml2html.html
