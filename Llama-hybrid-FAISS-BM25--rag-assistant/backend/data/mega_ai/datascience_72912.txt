[site]: datascience
[post_id]: 72912
[parent_id]: 
[tags]: 
Keras: Vector regression: ValueError:can not squeeze dim[1]

I'm trying to create a NLP model which takes x_train_padded_2 (padded/tokenized text sequences) as input and try to approximate Y_train_embedding_2 (dense embedded sentences). Input/target types and dimensions: print(x_train_padded_2.shape) print(type(x_train_padded_2[0][0])) (6960, 50) print(Y_train_embedding_2.shape) print(type(Y_train_embedding_2[0][0])) (6960, 16) The model architcture (the embedding layer is pre-trained): model_2 = tf.keras.Sequential([ embedding, tf.keras.layers.GlobalAveragePooling1D(), tf.keras.layers.Dense(16, activation='relu'), tf.keras.layers.Dense(embedding_dim) ]) embedding.trainable = False model_2.compile(loss='mse',optimizer='adam',metrics=['mse']) history_2 = model.fit(x_train_padded_2, Y_train_embedding_2, epochs=num_epochs, validation_split=0.1, callbacks=[earlyStopping], verbose=1) model_2.summary() Model: "sequential_1" _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= embedding (Embedding) (None, 50, 16) 16000 _________________________________________________________________ global_average_pooling1d_1 ( (None, 16) 0 _________________________________________________________________ dense_2 (Dense) (None, 16) 272 _________________________________________________________________ dense_3 (Dense) (None, 16) 272 ================================================================= Total params: 16,544 Trainable params: 544 Non-trainable params: 16,000 _________________________________________________________________ I get the following error: ValueError: in user code: /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:571 train_function * outputs = self.distribute_strategy.run( /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:951 run ** return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:2290 call_for_each_replica return self._call_for_each_replica(fn, args, kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:2649 _call_for_each_replica return fn(*args, **kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:543 train_step ** self.compiled_metrics.update_state(y, y_pred, sample_weight) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/compile_utils.py:406 update_state metric_obj.update_state(y_t, y_p) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/metrics_utils.py:90 decorated update_op = update_state_fn(*args, **kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/metrics.py:603 update_state matches = self._fn(y_true, y_pred, **self._fn_kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/metrics.py:3244 sparse_categorical_accuracy y_true = array_ops.squeeze(y_true, [-1]) /usr/local/lib/python3.6/dist-packages/tensorflow/python/util/dispatch.py:180 wrapper return target(*args, **kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py:507 new_func return func(*args, **kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py:4145 squeeze return gen_array_ops.squeeze(input, axis, name) /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_array_ops.py:9875 squeeze "Squeeze", input=input, squeeze_dims=axis, name=name) /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py:744 _apply_op_helper attrs=attr_protos, op_def=op_def) /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py:595 _create_op_internal compute_device) /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py:3327 _create_op_internal op_def=op_def) /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py:1817 __init__ control_input_ops, op_def) /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py:1657 _create_c_op raise ValueError(str(e)) ValueError: Can not squeeze dim[1], expected a dimension of 1, got 16 for '{{node Squeeze}} = Squeeze[T=DT_FLOAT, squeeze_dims=[-1]](IteratorGetNext:1)' with input shapes: [?,16]. Do you have any suggestions?
