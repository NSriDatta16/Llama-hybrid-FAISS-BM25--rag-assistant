[site]: stackoverflow
[post_id]: 1131072
[parent_id]: 1131060
[tags]: 
B-trees. Every index is stored as a B-tree -- even composite ones. If you're looking to do more research on how indexes are organized, look into B+ trees and B* trees. For SQL Server, Kalen Delaney's Inside SQL Server: The Storage Engine is an excellent book about the nuts and bolts of SQL Server, including its index organization. So you should definitely check that out. A commenter points out that Oracle can use bitmap indexes, which are structured very differently than B-trees, but those are rarely used for traditional relational databases -- they're used more often for OLAP type applications and in cases where you need fast access on a nonselective group of data. EDIT: SQL Server, for example, now uses Columnstore Indexes . If you do any work with large BI type workloads, it's definitely worth looking at these, as they store your data in an entirely different way than a B-Tree. SQL Server also uses a different mechanism now for memory optimized tables as well, and is something that's very useful for OLTP type queries.
