[site]: crossvalidated
[post_id]: 256879
[parent_id]: 255675
[tags]: 
Whereas the example you provide uses a distance matrix between all observations dist(as.matrix(mtcars)) , you currently have a matrix of raw data, which is not formatted properly. What you need to do in the first step is: Format your table so that for each object to be clustered (morphospecies?), all measurements are in a single row each type of measurement is in a single column. In the next step, you will want to compute the similarity (or as you say: relatedness) between each pair of objects. This is the distance matrix d . Therefore you will have to choose a distance metric / measure of similarity. The choice depends on which characteristics you want to capture. You could start with Euclidean Distance and later use more sophisticated measures. If you have this matrix, then you can simply use the commands in R that you presented: hc and the dendrogramm will be yours. Note here: I do not have domain knowledge, nor did you explain the abbreviations. Therefore this example might be wrong, yet it could help to illustrate. I will try to explain this using the table you provided: Assuming sp means species and sp1, sp2, ... are the objects to be clustered. sp technique mz abundance sp1 ESIneg 118.89 3.01 sp1 ESIneg 172.72 3.20 sp1 ESIneg 202.94 3.80 sp1 ESIpos 118.30 2.59 sp1 ESIpos 170.68 3.13 sp1 ESIpos 257.97 3.28 sp2 ESIneg 132.33 22.22 sp2 ESIneg 211.84 3.87 Now you want to have a single row for each sp such as: The feature n_mz1 here means technique: ESIneg, measure: mz, measurement: 1 sp n_mz1 n_mz2 n_mz3 p_mz1 p_mz2 p_mz3 n_ab_1 n_ab_2 ... sp1 118.89 172.72 202.94 118.30 170.68 257.97 3.01 3.20 ... sp2 .... Or you could instead compute features based on the all mz and ab measurements for a single species such as average mz and average ab: sp avg_mz avg_ab sp1 118.89 172.72 sp2 .... Based on such a feature matrix, you can compute the distance exactly as d
