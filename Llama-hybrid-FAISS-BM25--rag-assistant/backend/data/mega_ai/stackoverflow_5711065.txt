[site]: stackoverflow
[post_id]: 5711065
[parent_id]: 
[tags]: 
Toggle a dialogs "modal" property when open

So I need to set the modal to false when the dialog is open already and have the overlay behind the dialog hide. This is what I have tried, when I open the dialog I have a set of functions that query a drag drop event on a calendar if it is a multiple event then I need to make the dialog NOT modal and allow further interactivity with th calendar to move another event.. then validate. $(this).dialog("option", "modal", false); When I use this It doesn't make the dialog's overlay hide. Am I getting something obvious wrong??? Full code: $(' Change Appointment Time: ' + CV.timeString(fromTime) + ' to ' + CV.timeString(toTime) + ' On = ' + (weekday[day]) + ' the ' + CV.dateAbbrv(monthDay) + ' of ' + (months[month]) + ' ' + year + ' Inspector ' + $eventDateAndTime.inspector["name"] + ' ').dialog({ autoOpen: true, width: 600, modal: true, dialogClass: 'dragDropDialog', buttons: { Move: function() { var counterForFinal = 0; $.each(inspectorEventList, function(index, evt) { if (jQuery.data(eventBeingDragged, "fromTo").eventId == evt.eventId) { counterForFinal++; } }); if (counterForFinal > 1) { $(this).dialog("option", "modal", false); alert($(this).dialog("option", "modal")); } else { $(this).dialog("close"); $(ui.draggable).animate({opacity: 0}, 200); ui.draggable.css({top:ui.position.top, left:ui.position.left}); CV.updateDroppedEvent($calEvent, $eventDateAndTime); dragEndHelp.css({"display": "none"}); $(ui.draggable).animate({opacity: 1}, 1000); var bgColorStore = $(ui.draggable).css("background-color"); $(ui.draggable).animate({backgroundColor: "#FF2222"}, 500, function() { $(ui.draggable).animate({backgroundColor: bgColorStore}, 1000); }); } // if there the event is not a final then we can just move it }, Copy: function() { $(this).dialog("close"); ui.draggable.css({top:ui.draggable.top, left:ui.draggable.left}); $(dragEndHelp).animate({opacity: 0}, 200); $(ui.draggable).animate({opacity: 0}, 200); $(dragEndHelp).animate({opacity: 1}, 500); $(ui.draggable).animate({opacity: 1}, 500); var bgColorStore = $(ui.draggable).css("background-color"); var bgColorStore = $(dragEndHelp).css("background-color"); $(ui.draggable).animate({backgroundColor: "#FF2222"}, 500, function() { $(ui.draggable).animate({backgroundColor: bgColorStore}, 1000); }); $(dragEndHelp).animate({backgroundColor: "#FF2222"}, 500, function() { $(dragEndHelp).animate({backgroundColor: bgColorStore}, 1000); }); CV.updateDroppedEvent($calEvent, $eventDateAndTime); }, Cancel: function(event, ui) { dragEndHelp.css({"display": "none"}); $(this).dialog("close"); } }, close: function(event, ui) { $(this).dialog("destroy"); }, open: function(event, ui) { //// SOME UI CHANGES TO MAKE BUTTONS MORE INTUITIVE var buttons = $('.dragDropDialog .ui-dialog-buttonpane').children('button'); ////ADD ICON CLASS ACCEPTANCE buttons.removeClass('ui-button-text-only').addClass('ui-button-text-icon'); ////CHANGE THE BUTTONS DEFAULT SATE TO RED AND GREEN $(buttons[0]).removeClass('ui-state-default').addClass('ui-state-submit'); $(buttons[1]).removeClass('ui-state-default').addClass('ui-state-copy'); $(buttons[2]).removeClass('ui-state-default').addClass('ui-state-cancel'); ////APPEND THE ICONS TO THE BUTTON $(buttons[0]).append(" "); $(buttons[1]).append(" "); $(buttons[2]).append(" "); ////PUSH THE CANCEL BUTTON TO THE LEFT SIDE OF THE DIALOG //$(buttons[2]).css('position','absolute').css('left','25px'); } });
