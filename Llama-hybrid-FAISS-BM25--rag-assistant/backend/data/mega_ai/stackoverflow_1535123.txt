[site]: stackoverflow
[post_id]: 1535123
[parent_id]: 1535076
[tags]: 
OK, my assumption is that you will enter a numeric grade 0-100, and that the letter grades you want go as "90-100: A; 80-89: B; ...; 60-69: D; 0-59: F". If that is not the case, your first lesson to be learned about programming is: the most important part of coding is clearly writing out specifications and requirements Having said that, there are smart and dumb approaches. Dumb approach: Use a switch on the "input" as you do now Since values 90, 91... 100 are all supposed to be treated the same, put them all in as separate switch cases but only do the work in the last one (known as fall-through; see SwitchDemo2 on this page for how that works ) For the last value (say, 90 if you start from 100 and go down), the switch statement would be letterGrade = "A"; break; once you reach case of 89, you repeat the same logic as you did for 100 through 90 Lather, Rinse, Repeat, till 60 Handle Fs as a default case. This will be very long, quite dumb (as in, brute force) and very annoying to write, and a brilliant teaching tool for why you never want to write dumb code again if you can help it. More elegant solution ( insert appropriate Star Wars quote here ) What do you see in common between every # that correspons to "A"? Right, it's the fact that, aside from 100, they all are 2-diit #s starting with 9. So, to handle them all in 1 case statement, wouldn't it be wonderful to switch on some value that gives you "9" for all #s between 90 and 99? I hope you know the answer right away... hint below... Yes, just divide whole by 10! So, you need to have a switch on your numeric grade diveded by 10, with cases of 10, 9, 8, 7, 6 and default mapping to F. Hope this covers enough ground for you to come up with working solution, while showing how the analysis might work as well.
