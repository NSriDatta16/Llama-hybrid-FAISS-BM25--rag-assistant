[site]: stackoverflow
[post_id]: 404266
[parent_id]: 404210
[tags]: 
Simple problems often require simple solutions although some hard problems are very simple. Complicated problems on the other hand could be solved in organized fashion or by dirty spaghetti code. Many have tried to organize the software designs and some of the "patterns" emerged and got the names. I think patterns are useful vocabulary to have when you communicate your design intent to others, but it's not something you shove it into design. As you make your code de-coupled as needed, you apply patterns as needed. For example, putting in builder pattern when you find yourself making very complicated constructor. De-coupling data layer and UI layer from your business logic to me is something you should do just as good design. Again, low coupling, DRY , and maintainable code should be the goal, not patterns.
