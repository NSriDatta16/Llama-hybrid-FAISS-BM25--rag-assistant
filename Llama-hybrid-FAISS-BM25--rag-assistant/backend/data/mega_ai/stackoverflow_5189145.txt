[site]: stackoverflow
[post_id]: 5189145
[parent_id]: 5051159
[tags]: 
It has to do with the way the OutputCacheAttribute works, specifically on its dependency on RouteData not being null. The relevant part is: public override void OnResultExecuting(ResultExecutingContext filterContext) { if (filterContext == null) { throw new ArgumentNullException("filterContext"); } if (!filterContext.IsChildAction) { new OutputCachedPage(this._cacheSettings).ProcessRequest(HttpContext.Current); } } The ResultExecutingContext filterContext derives from ControllerContext . This is the source for ControllerContext.IsChildAction : public virtual bool IsChildAction { get { RouteData routeData = this.RouteData; if (routeData == null) { return false; } return routeData.DataTokens.ContainsKey("ParentActionViewContext"); } } So, why is this relevant to your question? Because when you omit the "/" then your Route does not match anything. The default route is " / ". An article that explains this more in depth is here: http://www.58bits.com/blog/2008/09/29/ASPNet-MVC-And-Routing-Defaultaspx.aspx . It was written to explain why the Default.aspx file was necessary in ASP.NET MVC 1 projects, but the reason is rooted in the same place. So, basically, the RouteData is null, so the OutputCacheAttribute can't work. You can solve your problem by doing what Michael Jasper suggested and leveraging URL Rewriting.
