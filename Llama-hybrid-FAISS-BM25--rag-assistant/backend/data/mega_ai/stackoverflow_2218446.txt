[site]: stackoverflow
[post_id]: 2218446
[parent_id]: 2218435
[tags]: 
The static keyword is not part of the type, depending on the context it is a storage or scope specifier and has no influence whatsoever on the type. Therefore, it cannot be used as part of the type definition, which is why it is invalid here. A typedef is a type definition, i.e. you're saying 'this name' now refers to 'this type', the name you give must be an identifier as defined by the language standard, the type has to be a type specifier, i.e. an already named type, either base type or typedef'd, a struct, union, class, or enum specifier, with possible type qualifiers, i.e. const, or volatile. The static keyword however does not change the type, it says something about the object, (in general, not in the OOP sense.) e.g. it is the variable that is placed in static storage, not the type. It looks like you're trying to use a typedef as a macro, i.e. #define MYINT static int
