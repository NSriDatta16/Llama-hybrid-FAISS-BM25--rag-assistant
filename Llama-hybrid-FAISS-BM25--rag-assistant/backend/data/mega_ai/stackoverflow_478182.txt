[site]: stackoverflow
[post_id]: 478182
[parent_id]: 478002
[tags]: 
The time complexity of in_array() is O(n) . To see this, we'll take a look at the PHP source code . The in_array() function is implemented in ext/standard/array.c . All it does is call php_search_array() , which contains the following loop: while (zend_hash_get_current_data_ex(target_hash, (void **)&entry, &pos) == SUCCESS) { // checking the value... zend_hash_move_forward_ex(target_hash, &pos); } That's where the linear characteristic comes from. This is the overall characteristic of the algorithm, becaus zend_hash_move_forward_ex() has constant behaviour: Looking at Zend/zend_hash.c , we see that it's basically just *current = (*current)->pListNext; As for the time complexity of array_unique() : first, a copy of the array will be created, which is an operation with linear characteristic then, a C array of struct bucketindex will be created and pointers into our array's copy will be put into these buckets - linear characteristic again then, the bucketindex -array will be sorted usign quicksort - n log n on average and lastly, the sorted array will be walked and and duplicate entries will be removed from our array's copy - this should be linear again, assuming that deletion from our array is a constant time operation Hope this helps ;)
