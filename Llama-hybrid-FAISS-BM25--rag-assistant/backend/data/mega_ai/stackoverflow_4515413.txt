[site]: stackoverflow
[post_id]: 4515413
[parent_id]: 
[tags]: 
Is the second-level cache support for caching the query result exclude the entity

Normal query manner: Session sess=factory.getCurrentSession(); sess.beginTran....(); String hql="from Entity en where en......"; Query q=sess.createQuery(hql).setCacheble(true); List list=q.list(); In this case,the object in the list are "entity"s. They will be cached. However I wonder if cache would work if the hql is like this: hql="select new Result(count(xx),sum(xxx)) from Entity en ...."; class Result{ long num; long sum; //constructor,getter and setter } Now,the type of the objects in the result list will be Result . List list=q.list(); My question is if the Result Object can be saved at the second-level cache? Also how about the ResultTransformer ? q.setResultTransformer(AliasToEntityMapResultTransformer.INSTANCE); At this case,the type of the objects in the q.list() will be Map ,does these maps can be cached also?
