[site]: stackoverflow
[post_id]: 2302731
[parent_id]: 2302675
[tags]: 
It is difficult to diagnose performance issues without seeing the XSLT or knowing how large/complex the XML and XSLT are. You could be paying the cost of parsing the file(s), either the XSLT or the XML and/or you could have a very inefficient XSLT stylesheet. For instance: Lots of // XPATH statements, which if not needed can hurt performance for very large XML files. Logic buried inside of templates that could be moved up into the template @match criteria, which provides the opportunity for XSLT engines to optimize. There are XSLT profilers that you can use to see where the bottlenecks are in your XSLT. For instance, oXygen has a very nice debugger/profiler : If you will be running the XSLT many times, then you should cache the transformer object . That way, you only pay the cost to load and instantiate it once and re-use many times. For instance, move the instantiation of your XSLT Template object into your severlet init() TransformerFactory transFact = TransformerFactory.newInstance(); Templates cachedXSLT = transFact.newTemplates(xsltSource); and then where you perform the transform, use the cached TransformerFactory obj: Transformer t= cachedXSLT.newTransformer(); t.transform(xmlSource, result);
