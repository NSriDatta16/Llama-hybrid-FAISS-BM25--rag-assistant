[site]: stackoverflow
[post_id]: 856914
[parent_id]: 856453
[tags]: 
You can actually reduce a site to a single assembly, a web.config file and a global.asax file. To do this, embed all your static content (images etc.) in an assembly using embedded resources. This is what component vendors like Telerik do to provide single assembly deployments for their controls. The embedded resources can then be served up using a virtual path provider. There is a good article to get going with virtual path providers on msdn. Whn using a web application project, you can even embed pages (.aspx) and user controls (.ascx) as resources. Using the routing module you can implement almost transparent translation of URL's to the pages embedded in the assembly. There are a couple of limitations though. IIS6 will not serve static content from your assembly by default. Either use a custom handler (e.g. files.ashx/my/static/content.jpg) or configure IIS to route all requests to your application using a wildcard mapping. You will lose some of the designer support in Visual Studio when embedding pages in an assembly.
