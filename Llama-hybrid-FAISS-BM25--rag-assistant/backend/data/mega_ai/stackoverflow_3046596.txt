[site]: stackoverflow
[post_id]: 3046596
[parent_id]: 
[tags]: 
Concurrency in SQL Server 2008

There is a stored procedure: CREATE PROCEDURE [dbo].[TestProc] AS BEGIN SET NOCOUNT ON; create table #thistable (rid char(32)) insert into #thistable(rid) select A0RID from tblCdbA0 with (nolock) END When the procedure is executed alone it takes 400-500 ms, but when 10 threads are executing the same procedure in parallel, then the first thread finishes in 1300 ms, the last - in 6000 ms and average is 4800 ms. As you can see there is no locking where threads wait when other finish to execute. Moreover, server CPU is loaded at less then 100%, i.e. there are enough resources in order to execute them at the same time. How could that be? EDIT: Found a good article about concurrent inserts: Resolving PAGELATCH Contention on Highly Concurrent INSERT Workloads
