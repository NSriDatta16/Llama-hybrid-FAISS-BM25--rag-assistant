[site]: stackoverflow
[post_id]: 5681244
[parent_id]: 5681186
[tags]: 
Well, synchronized blocks predate classes like ReentrantLock by many years; the classes in that package were introduced to provide some more sophisticated and higher-level capabilities than what Java the language had previously offered -- although many of those capabilities are needed only in very specific circumstances. But in this specific case, I would say that using a synchronized block (and wait(N) instead of sleep(N)!) would be more elegant. I understand your analogy, and I'd say that sometimes it holds; certainly for this sort of run-of-the-mill-case, using a synchronized block is like using the RAII pattern in C++ -- it's the clearest way to make sure things are cleaned up when needed.
