[site]: stackoverflow
[post_id]: 5149551
[parent_id]: 4998561
[tags]: 
I would like to share a nice hack proposed by Todd Gayley (Wolfram Research) in connection with the given question. Perhaps for somebody it will be useful as also for me. This hack solves the problem in question in rather elegant way. One technique is to leave the FormatType at OutputForm for computations, but override the handling of Message to temporarily switch to StandardForm, so that only Message output comes back in StandardForm: LinkWrite[link, Unevaluated[EnterExpressionPacket[ Unprotect[Message]; Message[args___]:= Block[{$inMsg = True, result}, SetOptions[$Output, FormatType->StandardForm]; result = Message[args]; SetOptions[$Output, FormatType->OutputForm]; result ] /; !TrueQ[$inMsg] ] ]] You will get back an ExpressionPacket for the content of a message. To print that as a Message cell in the notebook: cell = Cell[ , "Message", "MSG"] CellPrint[cell] Advanced approach: everything is printed in the StandardForm For having everything except output returned in StandardForm we could redefine variables $Pre and $Post in the slave kernel in a special way (the following code should be evaluated in the slave kernel): SetOptions[$Output, {PageWidth -> 72, FormatType -> StandardForm}]; (*$inPost is needed for tracing mode compatibility (could be switched on by evaluating On[] in the slave kernel) in which Messages are printed during evaluation of $Post.*) $inPost = False; Protect[$inPost]; $Pre := Function[inputexpr, SetOptions[$Output, FormatType -> StandardForm]; Unevaluated[inputexpr], HoldAllComplete]; $Post := Function[outputexpr, Block[{$inPost = True}, SetOptions[$Output, FormatType -> OutputForm]; Unevaluated[outputexpr]], HoldAllComplete]; Protect[$Pre]; Protect[$Post]; $inMsg = False; Protect[$inMsg]; Unprotect[Message]; Message[args___] /; $inPost := Block[{$inMsg = True}, SetOptions[$Output, FormatType -> StandardForm]; Message[args]; SetOptions[$Output, FormatType -> OutputForm]] /; ! $inMsg; Protect[Message];
