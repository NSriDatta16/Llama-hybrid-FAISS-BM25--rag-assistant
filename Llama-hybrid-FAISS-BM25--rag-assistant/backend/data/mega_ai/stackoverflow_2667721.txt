[site]: stackoverflow
[post_id]: 2667721
[parent_id]: 2667675
[tags]: 
First, unsigned short isn't guaranteed to be only 16 bits, just at least 16 bits. You could do this: struct Data { unsigned short size : 16; unsigned char version : 3; unsigned char crc : 1; }; Assuming you want no padding between the fields, you'll have to issue the appropriate instructions to your compiler. With gcc, you can decorate the structure with __attribute__((packed)) : struct Data { // ... } __attribute__((packed)); In Visual C++, you can use #pragma pack : #pragma pack(push, 0) struct Data { // ... }; #pragma pack(pop)
