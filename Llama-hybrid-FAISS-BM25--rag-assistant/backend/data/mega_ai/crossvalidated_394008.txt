[site]: crossvalidated
[post_id]: 394008
[parent_id]: 
[tags]: 
Good algorithm to use for classifying keywords

I have looked at the suggested posts but none addresses this specific problem I have groups of keywords which describe textual resources derived using word2vec I would like to train a supervised algorithm to relate groups of five or six keywords (as tokens) to one of several predefined categories ie. warm, hot, sunny, bucket, sea || beach work, laptop, meeting, desk || office etc I have used and deployed a working LSTM model with tensorflow/keras which I could adapt to use a softmax classification output but as i dont need memory in any sense, the positional relationship of the tokenised keywords is irrelevant, and due to the simplicity of the problem it seems like overkill for an RNN and maybe even a neural network altogether Does anyone have a suggestion of a lightweight cheap (computationally) model that would be best suited for this I like the idea of using softmax to predict probability of each category as we may ultimately classify a list of keywords in more than one category using the probability as a threshold. Can be in either R or Python, i added tensorflow as a tag as there may be a good tensorflow solution, but this is not important, could be an R algorithm or SciKit Learn etc Thanks for your advice! Danny
