[site]: datascience
[post_id]: 60853
[parent_id]: 60845
[tags]: 
If the breeding at one point doesn't result into "new" children/chromosomes, the algorithm will run very inefficiently. Assume that all individuals in the population have the same chromosome, then crossovers will result into the same individuals until a mutation occurs in one of the chromosomes This is correct, but in theory this case should happen only when the algorithm has already converged, meaning that the chromosome is actually optimal. If this happens by chance before reaching an optimal solution, then it's probably because the size of the population is too low and should be higher in order to maintain diversity and allow mutations from time to time. For example, if the population size is 100 and the mutation rate is 0.02 then there are in average two mutations for a particular gene at every generation. This maintains a bit of diversity, as the mutated gene is likely to be reproduced at the next generation if it turns out to be beneficial. My experience with genetic algorithms is that many variants are possible and imho it's a good idea to explore various variants with a dataset, including non-standard parameters such as this idea of "automatically mutating", because why not? The danger I can imagine with that is that this could cause too much variation and prevent or slow down the convergence, but testing is the best way to see what happens.
