[site]: stackoverflow
[post_id]: 1335335
[parent_id]: 1334510
[tags]: 
A brainstorm answer. I don't know if it will work. The issue is threads get terminated when a request is finished so create a thread outside of a request in Application_Start to avoid the problem. To keep everything organized and simple; Have a master class that acts as a utility controlling the amount of each process you would like to launch and to do the actual launching. Call the class in void Application_Start(object sender, EventArgs e) to create the initial master thread which will launch any process (or threads) you'll need. Allow it to put itself to sleep and use the utility methods to wake it up and pass messages. Then handle the rest as needed :)
