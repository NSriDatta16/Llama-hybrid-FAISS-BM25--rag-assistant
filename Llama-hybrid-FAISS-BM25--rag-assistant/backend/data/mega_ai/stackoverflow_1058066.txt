[site]: stackoverflow
[post_id]: 1058066
[parent_id]: 1057867
[tags]: 
Lets start by getting the average time between B's start and finish: 1) You first need the time difference between the start and finish of each B object so you would do this: List timeSpans = new List (); foreach (B myB in BList) { TimeSpan myTimeSpan = myB.CompletedDate.Subtract(myB.CreatedDate); timeSpans.Add(myTimeSpan); } 2) You now need to get the average of this. You can do this by using lambda expressions: //This will give you the average time it took to complete a task in minutes Double averageTimeOfB = timeSpans.average(timeSpan => timeSpan.TotalMinutes); You can now do the same thing to get the average time between A's start and B's finish as follows: 1)Get the time difference for A's start date and each of B's completion date: List timeSpans_2 = new List (); foreach (B myB in BList) { TimeSpan myTimeSpan = myB.CompletedDate.Subtract(objectA.CreatedDate); timeSpans_2.Add(myTimeSpan); } 2) Get the average of these time differnces exactly like the one above: //This will give you the average time it took to complete a task in minutes Double averageTimeOfAandB = timeSpans_2.average(timeSpan => timeSpan.TotalMinutes); And you're done. I hope that this helps. Please note that this code has not been tested. EDIT: Remember that LINQ uses Lamda Expressions but is more of syntactic sugar (don't know much about the implementation so I hope you don't hold it against me). And also you could wrap the implementaions I provide in methods so that you can call them multiple times for a List of A objects.
