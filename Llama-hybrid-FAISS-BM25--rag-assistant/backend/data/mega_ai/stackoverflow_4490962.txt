[site]: stackoverflow
[post_id]: 4490962
[parent_id]: 4490857
[tags]: 
I have been using code contracts and for casual use, they address 2 code problems for me that didn't have nice solutions earlier: checking return values checking invariants appear to be a poorly named combined parameter check/entry point and return value/exit point assertion. I could declare a temp variable for the return value and assert some things before return it, but it's extra friction. checking parameters already had a solution: throw ArgumentException. Code contracts adds one tiny thing to ArgumentException-- it makes you check arguments very early, which in my opinion is a good thing. There is much more going on with Code Contracts, but I've just dipped my toe into and I don't have the edition that does super-comprehensive static checks. I plan to work my way up to using Code Contracts more completely, and once I have done so-- it will be more elegant to check parameters using the same framework instead of switching back and forth between Code Contracts and if/then/throw ArgumentException
