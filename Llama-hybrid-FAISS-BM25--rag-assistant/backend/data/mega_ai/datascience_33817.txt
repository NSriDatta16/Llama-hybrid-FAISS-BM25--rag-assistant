[site]: datascience
[post_id]: 33817
[parent_id]: 
[tags]: 
1d time series to time series approximation using deep learning

I have a basic question about choosing right architecture of my deep learning task. I have input signal $X(t)$ as a function of time when it is fed to the system, it generates output $Y(t)$ which is also a function of time. I have a bunch of experiments performed with many input signals $X_1, X_2, X_3 ,...$ and many output signals $Y_1,Y_2,Y_3,...$. Instead of performing more experiments I would like to generate neural net where I can feed input signal X (t) and get output Y (t). I want to use already measured data as training data. To me, this looks like like regression problem but involves time series data. One of the neural network architectures that come to mind is RNN LSTM OR CNN. People mainly use LSTM for forecasting problem (knowing history to predict the future) not regression. So can I use CNN, use 1D filters and then some pooling and fully connected layers? Will this work? What kind of set up should I use?
