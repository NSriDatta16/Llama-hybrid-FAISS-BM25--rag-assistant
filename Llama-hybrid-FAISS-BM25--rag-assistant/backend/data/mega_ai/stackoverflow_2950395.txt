[site]: stackoverflow
[post_id]: 2950395
[parent_id]: 2511147
[tags]: 
well, depending on how you have your Bitmap data stored you might do things differently. Are you reading it from a file and dropping it straight into your tree? If so, .BMP files (if I recall correctly) tell you their width and height right at the top, so you could actually use that to figure out exactly how many levels you'll have, which might help you build something. Also, depending how big your images are, you could store all of the pixels in a 2D array of nodes and have the tree sort of "sit on top of" the array, so that your leaves were in the array and everything else is elsewhere. If you were to do that you could write some nested loops that'd go through and grab groups of four nodes, calculate their average, and lump 'em together, and then do the same thing with the nodes it's just created. This would probably be faster than building the tree from the top down, because you'll never be averaging more than four pixels, whereas building from the top down would need to average more than four pixels every step except the last one. If you don't want to do it in an array, the easiest thing, to my mind, would be to have each node keep track of its x,y coordinates. That would allow you to do basically the same thing as with the array, but you wouldn't just be plugging in indexes. Is this helpful? How are you storing the Bitmaps? What is the end goal?
