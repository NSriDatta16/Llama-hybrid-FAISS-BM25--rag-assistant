[site]: stackoverflow
[post_id]: 2350555
[parent_id]: 2349175
[tags]: 
First you will need to parse the URL at foo.com. In django you could have an url like this(not tested): url(r'(?P .*)$', my_proxy_view, name = 'proxy') So http://foo.com/bar.com/baz/ will give you an url of 'bar.com/baz/' you may use as you please in your view. Then you have to retrieve the page at bar.com, using a library like urllib2. When you have the contents of the remote page, you need to change all links(anchor elements) that point to bar.com to point to the URLs of your proxy. If you want to proxy images, stylesheets and javascript you need to change the links of those as well. You probably want to cache as much as possible as well. And be sure to set a user-agent on the urllib request that will let the other site know that this is some kind of robot or proxy. With that said, this sounds like a really stupid idea. What is your use case?
