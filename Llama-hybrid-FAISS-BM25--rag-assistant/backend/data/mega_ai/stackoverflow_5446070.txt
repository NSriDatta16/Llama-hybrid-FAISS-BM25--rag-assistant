[site]: stackoverflow
[post_id]: 5446070
[parent_id]: 5445944
[tags]: 
Yeah, you can deal with creation in the user model. Defining a has_one association automatically includes methods for building and creation (in this case it would be User#create_profile and User#build_profile). A good practice is to set up a before_create callback that calls build_profile, so that you won't get an orphaned User record if the profile doesn't save. As far as controllers are concerned, I usually don't even like to make separate controllers for user profiles. Since there will always be one Profile record for every User record you can think of profile attributes as being logically equivalent to User attributes (they are put in their own table mainly organization's sake). That way you can just tack on profile stuff to the usual User CRUD operations. If you really like the idea of a separate profiles_controller, consider setting it up as a nested resource, since you will always have a user_id whenever you are dealing with a profile.
