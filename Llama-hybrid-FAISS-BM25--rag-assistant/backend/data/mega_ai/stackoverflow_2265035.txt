[site]: stackoverflow
[post_id]: 2265035
[parent_id]: 2264844
[tags]: 
As @DR says, Java does not force you to assign the result of a method call. A void or non-void method call is valid as a complete statement in Java. I would surmise that the reasons Java is designed this way include the following: Convenience: most developers would find it a nuisance if the result of every non-void method call had to be assigned. Tradition: C, C++ and almost no other language force you to do this. (I have vague recollections of some language that did ... but that was long ago.) Futility: you cannot stop the developer from assigning the result to a temporary variable and then ignoring it. Or writing a wrapper method that does the same thing. Better alternatives: if you want to encourage the developer to pay attention to an error in Java, throw an appropriate checked exception.
