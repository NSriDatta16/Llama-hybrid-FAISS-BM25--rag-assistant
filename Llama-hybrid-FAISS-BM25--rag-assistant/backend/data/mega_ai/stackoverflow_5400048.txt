[site]: stackoverflow
[post_id]: 5400048
[parent_id]: 5399821
[tags]: 
Honestly, I would do a thorough check of the class structure to see if there was a better design than making everything global. Using paradigms like MVC can really simplify your code organization. I don't know what your specific needs are, but usually a good design allows you to access the needed data in a simple way. //A possible heirarchy PlayableCharacter |-Stats | |-int totalHealth | |-int currentHealth | |-int speed | \-int strength | |-List inventory |-Helmet head //Helmet would be a subclass of Equipment |-HandEquipment leftHand |-HandEquipment rightHand |-ChestEquipment torso \-LegEquipment legs With an organization structure that both fits your needs and is a good abstraction of the game world, accessing your variables would be easy and meaningful. public int getAttackLevel() { return leftHand.getAttackPoints() + rightHand.getAttackPoints() + stats.getStrength(); } If you do find that there are some global variables that are unavoidable, I would again try to organize them in a meaningful way. GameVariables |-LocationVariables | |-int worldX | |-int worldY | \-int worldZ | |-QuestVariables | |-String questName | \-double questProgress | |-GameSettings | |-int resolutionX | |-int resolutionY | \-Difficulty difficultyLevel | | //And so on....
