[site]: stackoverflow
[post_id]: 1104036
[parent_id]: 1103839
[tags]: 
First, there are two distinct things here: geographical information and political/organizational information. There are can be shared zip codes, but geographically any object is completely located inside another object. When we had to solve the problem we just make a generic tree structure, where each geo node had reference to each parent. Top-level nodes (countries in our case) had no parent references. What is more, for different countries we had different structures. The only requirement is that it had to be hierarchical. After that we was able to speedup the geo queries by precomputing the tree traversal information. We traversed the tree, computed traversal order and stored it in the geo node. After that simple int comparison in the query was enough to check if one geo is inside another and so on. At the same time, storing things like the zip codes information looks like parallel data structure here, to be stored in different table with references to the geo nodes in the geo structure.
