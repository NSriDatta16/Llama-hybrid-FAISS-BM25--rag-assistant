[site]: stackoverflow
[post_id]: 5214260
[parent_id]: 5206817
[tags]: 
With an if-then-else this can be done more elegantly (no cut involved): delete_from_list([], _, []). delete_from_list([X|Xs], Y, Result) :- (X = Y -> Result = Result0 ; Result = [X|Result0] ), delete_from_list(Xs, Y, Result0). And note that the predicate is still tail-recursive , meaning it doesn't allocate extra stack frames and uses a constant amount of memory apart from building up the Result list. And yes, it can be done in one clause, but it's not pretty: delete_from_list(Xs, Y, Result) :- (Xs = [] -> true ; Xs = [X|Xs0], delete_from_list(Xs0, Y, Result0), (X = Y -> Result = Result0 ; Result = [X|Result0] ) ).
