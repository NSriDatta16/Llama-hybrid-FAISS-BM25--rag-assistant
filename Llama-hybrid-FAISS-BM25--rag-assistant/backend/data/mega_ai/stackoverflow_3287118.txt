[site]: stackoverflow
[post_id]: 3287118
[parent_id]: 3286526
[tags]: 
EDIT: Changed to include clearer requirements. Given a list that contains contiguous date ranges, the code doesn't have to be hard at all. In fact, you don't even have to write an actual loop: public const int FYBeginMonth = 7, FYBeginDay = 1; public static int FiscalYearFromDate(DateTime date) { return date.Month > FYBeginMonth || date.Month == FYBeginMonth && date.Day >= FYBeginDay ? date.Year : date.Year - 1; } public static IEnumerable FiscalYears(IEnumerable continuousDates) { int startYear = FiscalYearFromDate(continuousDates.First().Begin), endYear = FiscalYearFromDate(continuousDates.Last().End); return from year in Enumerable.Range(startYear, endYear - startYear + 1) select new DateRangeWithPeriods { Range = new DateRange { Begin = FiscalYearBegin(year), End = FiscalYearEnd(year) }, // start with the periods that began the previous FY and end in this FY Periods = (from range in continuousDates where FiscalYearFromDate(range.Begin) year select new DateRange { Begin = FiscalYearBegin(year), End = FiscalYearEnd(year) }) }; } This assumes some DateRange structures and helper functions, like this: public struct DateRange { public DateTime Begin { get; set; } public DateTime End { get; set; } } public class DateRangeWithPeriods { public DateRange Range { get; set; } public IEnumerable Periods { get; set; } } private static DateTime Min(DateTime a, DateTime b) { return a This test code: static void Main() { foreach (var x in FiscalYears(new DateRange[] { new DateRange { Begin = new DateTime(2001, 1, 1), End = new DateTime(2001, 8, 14) }, new DateRange { Begin = new DateTime(2001, 8, 15), End = new DateTime(2002, 7, 10) } })) { Console.WriteLine("from {0:yyyy MMM dd} to {1:yyyy MMM dd}", x.Range.Begin, x.Range.End); foreach (var p in x.Periods) Console.WriteLine( " period: {0:yyyy MMM dd} to {1:yyyy MMM dd}", p.Begin, p.End); } } outputs: from 2000 Jul 01 to 2001 Jun 30 period: 2001 Jan 01 to 2001 Jun 30 from 2001 Jul 01 to 2002 Jun 30 period: 2001 Jul 01 to 2001 Aug 14 period: 2001 Aug 15 to 2002 Jun 30 from 2002 Jul 01 to 2003 Jun 30 period: 2002 Jul 01 to 2002 Jul 10
