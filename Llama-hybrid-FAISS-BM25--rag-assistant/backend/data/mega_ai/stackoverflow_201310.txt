[site]: stackoverflow
[post_id]: 201310
[parent_id]: 201148
[tags]: 
Note that headers are unnecessary in some web applications, as HTML was designed to semantically describe the structure of documents , not web apps. Ideally, there would be a separate XML-based language that all browsers support the rendering of specifically for web applications. Something like XUL or XAML would probably suit the requirements. But since that's not the environment we make web applications in today, you're often stuck with HTML, which is generic at best (div, span) and irrelevant elsewhere (you don't need semantic headers in a web app). The best approach from a pragmatic point of view, therefore, is to ignore semantically meaningful HTML tags in many cases and instead use classnames and id's to define structure. This way you'll still be developing your own semantic environment and programming in a way that separates presentation from content, which is one of the benefits of HTML and CSS, but not needlessly attaching yourself to the format "just because that's how it's done". Hence, some answers in this thread miss the point: you're developing a web app, for which HTML was not designed. Don't force a square peg into a round hole. Edit: Bobby Jack commented that there are, of course, still some web apps that define document-like views, such as Stack Overflow. So in those cases, of course, where relevant, use the correct semantic markup.
