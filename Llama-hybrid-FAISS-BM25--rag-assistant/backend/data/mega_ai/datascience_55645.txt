[site]: datascience
[post_id]: 55645
[parent_id]: 
[tags]: 
How to use logistic regression with decay

I have a dataset with binary outcomes. I use Logistic regression for making the prediction. example of my data : id Col_A ... y 1 5 ... 1 2 10 ... 1 3 500 ... 0 4 705 ... 0 5 2 ... 1 I would like to apply a decay on my logistic regression function i.e. the prediction result will depend on col_A: if col_A contains a high value the prediction must be converged to 0 (an exponential function). So that I will get probability value instead of binary Is it possible to do that? and if it is possible how can I achieve it? I use the followig Logistic regression source code: class LogisticRegressionUsingGD: @staticmethod def sigmoid(x): return 1 / (1 + np.exp(-x)) @staticmethod def logit(theta, x): return np.dot(x, theta) def p_hat(self, theta, x): return self.sigmoid(self.logit(theta, x)) def cost_function(self, theta, x, y): m = x.shape[0] a = y * np.log(self.p_hat(theta, x)) b = (1 - y) * np.log(1 - self.p_hat(theta, x)) total_cost = -(1 / m) * np.sum(a + b) return total_cost def gradient(self, theta, x, y): m = x.shape[0] return (1 / m) * np.dot(x.T, self.sigmoid(self.logit(theta, x)) - y) def fit(self, x, y, theta): opt_weights = fmin_tnc(func=self.cost_function, x0=theta, fprime=self.gradient, args=(x, y.flatten())) self.w_ = opt_weights[0] return self def predict(self, x): theta = self.w_[:, np.newaxis] return self.p_hat(theta, x)
