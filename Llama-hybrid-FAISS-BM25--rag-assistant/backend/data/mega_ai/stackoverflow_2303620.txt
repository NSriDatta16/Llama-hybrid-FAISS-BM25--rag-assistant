[site]: stackoverflow
[post_id]: 2303620
[parent_id]: 2303098
[tags]: 
I've used LingPipe -- a suite of Java libraries for the linguistic analysis of human language -- for text mining (and other related) tasks. It is a very well documented software package, and the site contains several tutorials which thoroughly explain how to do a certain task with LingPipe, such as named entity recognition . There is also a newsgroup, wherein you can post any question you have about the software (or NLP related tasks), and have a prompt reply from the authors of the package themselves; and of course, a blog . The source code is also very easy to follow and well documented which, for me, is always a big plus. As for Machine Learning algorithms, there are plenty, from Na√Øve Bayes to Conditional Random Field . On the other hand, for dictionary-matching algorithms, they have an ExactDicitonaryChunker , which is an implementation of the Aho-Corasich algorithm (a very, very, fast algorithm for this task). In sum, I think it is one of the best NLP software package for Java (I haven't used every single package that is out there, so I can't say it's the best), and I definitely recommend it for the task that you have at hand.
