[site]: stackoverflow
[post_id]: 4269296
[parent_id]: 
[tags]: 
Is the usage of eval() justified here?

The JavaScript object data has an attribute 'amplitudes' which is a string concatenated bunch of bitmask arrays coming from the server. var data = { "amplitudes": "[1,1,1,4,1,1],[1,1,1,1,1,1],[1,1,4,1,9,1],[1,1,9,1,16,1],[1,32,1,1,1,9],[4,4,4,1,1,1]" } . This needs be broken down into six independant arrays. I am using a combination of split() and eval() to accomplish it in the following way: var amplitudes = []; amplitudes = data.amplitudes.split("],["); for(var i=0;i 0 ? amplitudes[i] = amplitudes[i] + "]" : amplitudes[i] = "[" + amplitudes[i]; amplitudes[i] = eval(amplitudes[i]); } Questions 1) Is there a more elegant and efficient way to do this?? I am not too happy with the usage of eval(), but had a feeling split is more efficient than a regex? I haven't run a benchmark yet. 2) I am also open to manipulating the format in which the field 'amplitudes' is stored in database so that my overall design gets simpler. Suggestions welcome
