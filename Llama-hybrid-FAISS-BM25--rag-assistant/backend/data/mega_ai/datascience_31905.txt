[site]: datascience
[post_id]: 31905
[parent_id]: 
[tags]: 
Dynamic rnn for toysequence classification

i am trying to use the dynamic rnn for toy sequence clasification . the code is copied from github link as: https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/dynamic_rnn.py . The errors i am getting during predc function are as: ValueError Traceback (most recent call last) ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py in _apply_op_helper(self, op_type_name, name, **keywords) 509 as_ref=input_arg.is_ref, --> 510 preferred_dtype=default_dtype) 511 except TypeError as err: ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx) 1103 if ret is None: -> 1104 ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref) 1105 ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in _TensorTensorConversionFunction(t, dtype, name, as_ref) 946 "Tensor conversion requested dtype %s for Tensor with dtype %s: %r" % --> 947 (dtype.name, t.dtype.name, str(t))) 948 return t ValueError: Tensor conversion requested dtype int32 for Tensor with dtype float32: 'Tensor("Reshape_4:0", shape=(?, 1), dtype=float32)' During handling of the above exception, another exception occurred: TypeError Traceback (most recent call last) in () ----> 1 pred = dynamicRNN(x, seqlen, weights, biases) in dynamicRNN(x, seqlen, weights, biases) 2 x = tf.transpose(x, [1, 0, 2]) 3 x = tf.reshape(x, [-1, 1]) ----> 4 x = tf.split(0, seq_max_len, x) 5 lstm_cell = tf.nn.rnn_cell.BasicLSTMCell(n_hidden) 6 outputs, states = tf.nn.rnn(lstm_cell, x, dtype=tf.float32, sequence_length=seqlen) ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py in split(value, num_or_size_splits, axis, num, name) 1389 if size_splits._rank() == 0 and size_splits.dtype.is_integer: 1390 return gen_array_ops.split( -> 1391 axis=axis, num_split=num_or_size_splits, value=value, name=name) 1392 1393 if num is None: ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py in split(axis, value, num_split, name) 7707 num_split = _execute.make_int(num_split, "num_split") 7708 _, _, _op = _op_def_lib._apply_op_helper( -> 7709 "Split", split_dim=axis, value=value, num_split=num_split, name=name) 7710 _result = _op.outputs[:] 7711 _inputs_flat = _op.inputs ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py in _apply_op_helper(self, op_type_name, name, **keywords) 531 if input_arg.type != types_pb2.DT_INVALID: 532 raise TypeError("%s expected type of %s." % --> 533 (prefix, dtypes.as_dtype(input_arg.type).name)) 534 else: 535 # Update the maps with the default, if needed. TypeError: Input 'split_dim' of 'Split' Op has type float32 that does not match expected type of int32. â€‹
