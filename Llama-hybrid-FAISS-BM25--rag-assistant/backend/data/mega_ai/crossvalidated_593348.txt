[site]: crossvalidated
[post_id]: 593348
[parent_id]: 
[tags]: 
Nominal and cyclical features encoding should be done before or after feature selection?

In a dataset I'm using to learn machine learning I have beside many others, one nominal and two cyclical features like bellow: Location: "Orlando", "NewYork", "LosAngeles"... Date: "2012-01-25", "2010-08-06", "2016-11-30"... WinDir: "N", "S", "NW"... I'm at the feature engineering step of the pipeline and after that I'm gonna make a feature selection. The idea is using chi-squared or maybe mutual information statistic test for these features because the label is binary. Here the transformations I would do to the mentioned features: Location: OrdinalEncoder() and after that LeaveOneOutEncoder() Date: pd.to_datetime() and split these dates in Year, Day, Month new features. After that I would do a cyclical encoding(sin/cos technique) in Day and Month. WinDir: Same cyclical encoding as before with date Well, here is my problem. I believe after these transformations(cyclical and leaveoneout) the features will lose the properties needed for the tests I intend to make. So, I was wondering doing a basic transformation making an OrdinalEncoding in "Location" and "WinDir" first, make the feature selection, and if I decide to keep these features make the cyclic encoding and use LeaveOneOutEncoder after. What do you think about this? Any suggestion? Don't know if you need but here the code for cyclic encoding class CatCyclicEncoder(BaseEstimator, TransformerMixin): def __init__(self): pass def fit(self, X, y=None): return self def transform(self, X, y=None): X_aux = [] cols = range(X.shape[1]) for index in cols: column = X[:, index] max_value = column.max() sin_values = [math.sin((2 * math.pi * x) / max_value) for x in list(column)] cos_values = [math.cos((2 * math.pi * x) / max_value) for x in list(column)] X_aux.append(sin_values) X_aux.append(cos_values) X_encoded = np.array(X_aux).transpose() return X_encoded
