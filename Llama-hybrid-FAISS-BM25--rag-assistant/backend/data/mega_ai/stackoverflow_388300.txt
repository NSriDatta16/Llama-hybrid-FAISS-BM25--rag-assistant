[site]: stackoverflow
[post_id]: 388300
[parent_id]: 387893
[tags]: 
Even in C, this is a dangerous thing to do IMO. If you use a different compiler, operating system, architecture etc you can very easily "break" your data files - you're absolutely relying on the layout of the data in memory. It's a bit like exposing fields directly instead of properties - the in-memory layout should be an implementation detail which can be changed without the public form (the file) changing. There are lots of ways of storing data, of course. For example: Binary serialization (still pretty fragile, IMO) XML serialization Google's Protocol Buffers Thrift YAML Hand-written serialization/deserialization e.g. using BinaryReader and BinaryWriter There are balances in terms of whether the file is human readable, speed, size etc. See this question for answers to a similar question about Java.
