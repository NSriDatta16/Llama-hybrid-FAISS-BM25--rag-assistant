[site]: crossvalidated
[post_id]: 157250
[parent_id]: 
[tags]: 
Autoencoder doesn't work (can't learn features)

I am completely new to machine learning and am playing around with the theanets package. What I am currently trying to do is to get an Autoencoder to reproduce a series of Gaussian distributions: def gen_inputs(x=28, sigma=2.0): target = np.array([skimage.filters.gaussian_filter(i, sigma) for i in ((np.eye(x*x)*2)).reshape(x, x, x*x).transpose()]).reshape(x*x, x*x) return target I then attempted to use an Autoencoder (28*28, 9, 28*28) to train it. The parameters were as follows: learning_rate = 0.01 input_noise = 0.01 I used SGD with sigmoid activation function, along with linear output function. But my network couldn't reproduce the input. It seems to always converge to an average distribution of weights, resulting in random noise-like results. The loss function (MSE) converges as it should. Here are the results:
