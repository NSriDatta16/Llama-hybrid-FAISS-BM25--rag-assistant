[site]: stackoverflow
[post_id]: 3492967
[parent_id]: 3492302
[tags]: 
Here's a summary of Dimitris Andreou's link . Remember sum of i-th powers, where i=1,2,..,k. This reduces the problem to solving the system of equations a 1 + a 2 + ... + a k = b 1 a 1 2 + a 2 2 + ... + a k 2 = b 2 ... a 1 k + a 2 k + ... + a k k = b k Using Newton's identities , knowing b i allows to compute c 1 = a 1 + a 2 + ... a k c 2 = a 1 a 2 + a 1 a 3 + ... + a k-1 a k ... c k = a 1 a 2 ... a k If you expand the polynomial (x-a 1 )...(x-a k ) the coefficients will be exactly c 1 , ..., c k - see Vi√®te's formulas . Since every polynomial factors uniquely (ring of polynomials is an Euclidean domain ), this means a i are uniquely determined, up to permutation. This ends a proof that remembering powers is enough to recover the numbers. For constant k, this is a good approach. However, when k is varying, the direct approach of computing c 1 ,...,c k is prohibitely expensive, since e.g. c k is the product of all missing numbers, magnitude n!/(n-k)!. To overcome this, perform computations in Z q field , where q is a prime such that n Bertrand's postulate . The proof doesn't need to be changed, since the formulas still hold, and factorization of polynomials is still unique. You also need an algorithm for factorization over finite fields, for example the one by Berlekamp or Cantor-Zassenhaus . High level pseudocode for constant k: Compute i-th powers of given numbers Subtract to get sums of i-th powers of unknown numbers. Call the sums b i . Use Newton's identities to compute coefficients from b i ; call them c i . Basically, c 1 = b 1 ; c 2 = (c 1 b 1 - b 2 )/2; see Wikipedia for exact formulas Factor the polynomial x k -c 1 x k-1 + ... + c k . The roots of the polynomial are the needed numbers a 1 , ..., a k . For varying k, find a prime n EDIT: The previous version of this answer stated that instead of Z q , where q is prime, it is possible to use a finite field of characteristic 2 (q=2^(log n)). This is not the case, since Newton's formulas require division by numbers up to k.
