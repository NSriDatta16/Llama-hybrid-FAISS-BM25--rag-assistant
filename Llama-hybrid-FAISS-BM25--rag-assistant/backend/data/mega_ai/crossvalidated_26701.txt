[site]: crossvalidated
[post_id]: 26701
[parent_id]: 
[tags]: 
What is a good optimization algorithm for finding the MAP?

I'm working on a Bayesian inference package and I have a function that finds the maximum a posteriori point. Right now I'm using scipy's implementation of BFGS to find that minimum of the log posterior, but I've had some trouble with handling large negatives and -infinities. I'd like to see if there's a better algorithm, particularly something that works well on problems that Will be stiff in some dimensions (like scale parameters) Have boundaries (like uniform distributions) Have a largish number of dimensions (say at least 100) I'm looking for suggestions on what optimization algorithms to look at. I'm okay with implementing something myself.
