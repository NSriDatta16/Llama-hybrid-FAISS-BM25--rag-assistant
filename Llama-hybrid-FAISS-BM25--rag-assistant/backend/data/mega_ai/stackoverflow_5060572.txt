[site]: stackoverflow
[post_id]: 5060572
[parent_id]: 5042426
[tags]: 
The 'right' way to do it is to call the server, then close it with the response. You can do this with an ajax behavior: ModalTestPage.java public class ModalTestPage extends WebPage { public ModalTestPage(PageParameters parameters) { super(parameters); final ModalWindow modal = new ModalWindow("modal"); modal.setContent(new Fragment(modal.getContentId(), "window", this)); add(modal); add(new AjaxLink ("link") { @Override public void onClick(AjaxRequestTarget target) { modal.show(target); } }); add(new CloseOnESCBehavior(modal)); } private static class CloseOnESCBehavior extends AbstractDefaultAjaxBehavior { private final ModalWindow modal; public CloseOnESCBehavior(ModalWindow modal) { this.modal = modal; } @Override protected void respond(AjaxRequestTarget target) { modal.close(target); } @Override public void renderHead(Component component, IHeaderResponse response) { response.renderJavaScriptReference("https://ajax.googleapis.com/ajax/libs/jquery/1.5.0/jquery.min.js"); response.renderJavaScript("" + "$(document).ready(function() {\n" + " $(document).bind('keyup', function(evt) {\n" + " if (evt.keyCode == 27) {\n" + getCallbackScript() + "\n" + " evt.preventDefault();\n" + " }\n" + " });\n" + "});", "closeModal"); } } } ModalTestPage.html SHOW Press ESC to dismiss
