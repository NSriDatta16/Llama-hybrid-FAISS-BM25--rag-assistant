[site]: stackoverflow
[post_id]: 4477330
[parent_id]: 4421639
[tags]: 
O(NlogN) easy to implement solution that does not require extra storage: Say you want to randomize L: is L has 1 or 0 elements you are done create two empty lists L1 and L2 loop over L destructively moving its elements to L1 or L2 choosing between the two at random. repeat the process for L1 and L2 (recurse!) join L1 and L2 into L3 return L3 Update At step 3, L should be divided into equal sized (+-1) lists L1 and L2 in order to guaranty best case complexity (N*log N). That can be done adjusting the probability of one element going into L1 or L2 dynamically: p(insert element into L1) = (1/2 * len0(L) - len(L1)) / len(L) where len(M) is the current number of elements in list M len0(L) is the number of elements there was in L at the beginning of step 3
