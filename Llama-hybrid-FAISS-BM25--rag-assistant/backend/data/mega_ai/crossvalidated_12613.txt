[site]: crossvalidated
[post_id]: 12613
[parent_id]: 12580
[tags]: 
No idea what you mean by bullet 1. Perhaps an explanation of what the code is doing will help? You have a data frame ( mtcars ), which you standardise (using the scale() function) so that the variables have zero mean and unit variance. This has been performed because the data are measured in different units and you ideally want each variable to contribute equally to the dissimilarity measurements used to form the cluster analysis. Finally, this scaled data frame is converted to a matrix and transposed. Because you transposed the matrix, the first clustering groups the variables in the original ( mpg , cyl etc) into groups that have similar profiles over the different cars. The ordering implied by this clustering is recorded. The procedure is repeated on the transpose of x so now the clustering is in the more familiar way, finding groups of cars that are similar in terms of the design and performance. Again, the ordering of the data implied by this second clustering is recorded. Next comes the levelplot code. This produces a heatmap of the standardised data x , but we reorder the matrix using the two orderings generated by the cluster analyses earlier. The colours on the levelplot represent the actual data in each cell of matrix x ; you have in fact just plotted the matrix but instead of showing the actual data, the individual data points are shown by colours. That should now explain what the colour scale is; it is showing the mapping from the actual data (the standardised data, zero mean, unit variance) to colours used on the plot. Pink colours represent lower than average values and blues the opposite. By reordering the data plotted, we emphasise the group structure in the data. The clear pattern is one of two groups of cars, one that is fuel efficient (above average mpg etc and lower cyl ) shown in the lower rows of the levelplot. The upper rows are the sportier, less efficient cars with larger engines and higher fuel consumption. To the best of my knowledge, such a plot is not possible with ggplot2 .
