[site]: crossvalidated
[post_id]: 493851
[parent_id]: 
[tags]: 
Time series prediction completely off using ESN

I am attempting to predict closing prices based on closing prices extracted from OHLC data from a two-month window with 10 minute intervals (roughly 8600 data points). For this attempt, I am building an echo-state network (ESM), following this tutorial . With the code below, the prediction is fairly worthless. It looks like noise around an arbitrary average, which does not even resemble the latest data point in the training data. This is nothing close to what the ESN in the tutorial managed at this point. I have tried to alter the results by manually tweaking the hyperparameters n_reservoir , sparsity , and spectral_radius , but all to no avail. During a 4-week course last spring ESNs were briefly touched upon, but not enough for me to understand where I am at fault. My code: import numpy as np import pandas as pd import seaborn as sns from matplotlib import pyplot as plt from pyESN import ESN import warnings warnings.filterwarnings('ignore') df = pd.read_csv('path') data = df['close'].to_numpy() n_reservoir = 500 sparsity = 0.2 spectral_radius = 1.2 noise = .0005 esn = ESN(n_inputs = 1, n_outputs = 1, n_reservoir = n_reservoir, sparsity=sparsity, spectral_radius = spectral_radius, noise=noise) trainlen = 7000 future = 10 futureTotal = 100 pred_tot = np.zeros(futureTotal) for i in range(0,futureTotal,future): pred_training = esn.fit(np.ones(trainlen),data[i:trainlen+i]) prediction = esn.predict(np.ones(future)) pred_tot[i:i+future] = prediction[:,0] plt.plot(range(0,trainlen+futureTotal),data[0:trainlen+futureTotal],'b',label="Data", alpha=0.3) plt.plot(range(trainlen,trainlen+futureTotal),pred_tot,'k', alpha=0.8, label='Free Running ESN') lo,hi = plt.ylim() plt.plot([trainlen,trainlen],[lo+np.spacing(1),hi-np.spacing(1)],'k:', linewidth=4) plt.title(r'Ground Truth and Echo State Network Output') plt.xlabel(r'Time', labelpad=10) plt.ylabel(r'Price ($)', labelpad=10) plt.legend(loc='best') sns.despine() plt.show()
