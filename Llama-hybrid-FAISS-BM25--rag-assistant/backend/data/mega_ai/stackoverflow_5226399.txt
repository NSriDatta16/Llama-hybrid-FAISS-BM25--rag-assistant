[site]: stackoverflow
[post_id]: 5226399
[parent_id]: 5226368
[tags]: 
There's a constructor overload for DataContext that you can pass a connection string - in that case you can take the setting from anywhere you like. Edit based on updated question: I would really like to avoid changing all references to the EF context with an overloaded method including the connection string. The problem is that the Entities context created by the T4 script generates a const property that is used as connection string public const string ConnectionString = "name=FooEntities"; public FooEntities() : base(ConnectionString, ContainerName) { this.ContextOptions.LazyLoadingEnabled = true; } Since you can't override the default constructor of the partial class, your only other option would be to change the T4 script itself - you should see the following in your .TT script file: public () : base(ConnectionString, ContainerName) { } To force your connection string to be used you could modify the constructor call to determine the connection string by calling a static method that you define in a separate file (but for the same partial class FooEntities ): public () : base(GetCustomConnectionString(), ContainerName) { } Now GetCustomConnectionString() can be defined separately public partial class FooEntities : ObjectContext { public static string GetCustomConnectionString() { return "Foobar"; //however you want to determine connection string here } } You see this is getting complicated and fragile very fast, so I would not advise doing this - but you could.
