[site]: stackoverflow
[post_id]: 3241668
[parent_id]: 3201311
[tags]: 
I'm assuming that response time is not critical and that the problem is finding an existing address in a database, not merging duplicates. I'm also assuming the database contains a large number of addresses (say 3 million), rather than a number that could be cleaned up economically by hand or by Amazon's Mechanical Turk . Pre-computation - Identify address fragments with high information content. Identify all the unique words used in each database field and count their occurrences. Eliminate very common words and abbreviations. (Street, st., appt, apt, etc.) When presented with an input address, Identify the most unique word and search (Street LIKE '%Jones%') for existing addresses containing those words. Use the pre-computed statistics to estimate how many addresses will be in the results set If the estimated results set is too large, select the second-most unique word and combine it in the search (Street LIKE '%Jones%' AND Town LIKE '%Anytown%') If the estimated results set is too small, select the second-most unique word and combine it in the search (Street LIKE '%Aardvark%' OR Town LIKE '%Anytown') if the actual results set is too large/small, repeat the query adding further terms as before. The idea is to find enough fragments with high information content in the address which can be searched for to give a reasonable number of alternatives, rather than to find the most optimal match. For more tolerance to misspelling, trigrams, tetra-grams or soundex codes could be used instead of words. Obviously if you have lists of actual states / towns / streets then some data clean-up could take place both in the database and in the search address. (I'm very surprised the Armenian postal service does not make such a list available, but I know that some postal services charge excessive amounts for this information. ) As a practical matter, most systems I see in use try to look up people's accounts by their phone number if possible: obviously whether that is a practical solution depends upon the nature of the data and its accuracy. (Also consider the lateral-thinking approach: could you find a mail-order mail-list broker company which will clean up your database for you? They might even be willing to pay you for use of the addresses.)
