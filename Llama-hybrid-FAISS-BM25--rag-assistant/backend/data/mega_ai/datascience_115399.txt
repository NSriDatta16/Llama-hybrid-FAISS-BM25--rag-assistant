[site]: datascience
[post_id]: 115399
[parent_id]: 73598
[tags]: 
Contrary to popular belief, and no matter how many software implementations do so, logistic regression on its own does not do classification. Logistic regression returns event probabilities. If you choose to use that probability to inform a discrete decision, that is an additional step beyond the logistic regression, and you would want to consider the costs of wrong decisions. For instance, a typical software implementation would get a predicted probability of $0.3$ and round that to a prediction of $0$ . However, if that is a $30\%$ chance of you dying, you might be more hesitant than if that is a $30\%$ chance of you getting rained on slightly. That is, if there is a $30\%$ chance of death, you might act like a particular action will kill you and avoid it, whereas a $30\%$ chance of rain might not be enough to get you to bring your umbrella. (An important feature of this is that not everyone has to agree on the action to take, given a probability. For instance, there is a small but not zero probability of dying when you go skydiving. I once decided that the fun of skydiving was worth the small risk of death, but someone who was on that vacation with me decided that it was not worth the risk and did not go up in the plane with me.) Frank Harrell, founding chairman of biostatistics at Vanderbilt University School of Medicine, has two good blog posts about risk estimation (predicting probabilities) vs classification (predicting discrete classes) that are worth reading. Damage Caused by Classification Accuracy and Other Discontinuous Improper Accuracy Scoring Rules Classification vs. Prediction
