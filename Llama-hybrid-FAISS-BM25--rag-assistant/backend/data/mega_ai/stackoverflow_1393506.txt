[site]: stackoverflow
[post_id]: 1393506
[parent_id]: 1393461
[tags]: 
Re your comment: private int GetCount(IQueryable table, int intID) Is that the PKID? Shouldn't the answer be 0 or 1? Anyway... you would have to build the Expression dynamically. Something like (untested, based on this ): static TEntity GetCount (this DataContext ctx, int key) where TEntity : class { return GetCount (ctx, key); } static TEntity GetCount (this DataContext ctx, TKey key) where TEntity : class { var table = ctx.GetTable (); var pkProp = (from member in ctx.Mapping.GetMetaType(typeof(TEntity)).DataMembers where member.IsPrimaryKey select member.Member).Single(); ParameterExpression param = Expression.Parameter(typeof(TEntity), "x"); MemberExpression memberExp; switch (pkProp.MemberType) { case MemberTypes.Field: memberExp = Expression.Field(param, (FieldInfo)pkProp); break; case MemberTypes.Property: memberExp = Expression.Property(param, (PropertyInfo)pkProp); break; default: throw new NotSupportedException("Invalid primary key member: " + pkProp.Name); } Expression body = Expression.Equal( memberExp, Expression.Constant(key, typeof(TKey))); var predicate = Expression.Lambda >(body, param); return table.Count(predicate); }
