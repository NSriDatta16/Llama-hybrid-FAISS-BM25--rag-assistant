[site]: crossvalidated
[post_id]: 366405
[parent_id]: 366272
[tags]: 
Hashing functions are purposefully designed to be difficult to model, so (as pointed out already) this is likely to be very difficult. Nevertheless, any weakness in the hashing function will reduce its entropy, making it more predictable. Regardless if this is "Possible", what algorithm would be the best approach? A useful example is the Physically Unclonable Function , or PUF - which is analogous to a hardware hashing function. Typically, manufacturing variations are purposefully used to give each PUF a slightly different response so that their 'hashed' output is different for a given input. Design weaknesses limit the entropy, however, and given enough challenge-response pairs it is often possible to build a black-box model of the PUF so that the response for a new, previously unseen challenge can be predicted. Logistic regression is the most commonly used approach for these modelling attacks, such as in this paper by RÃ¼hrmair . Genetic algorithms (or more generally evolutionary strategies) may be an alternative approach, as they are applicable to problems that are not differentiable and/or linearly separable. They are also discussed in the above paper.
