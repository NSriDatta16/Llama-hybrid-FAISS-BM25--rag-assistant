[site]: stackoverflow
[post_id]: 948285
[parent_id]: 948264
[tags]: 
There is only one good argument I've heard in favor of CVS, and that is in situations where you have a project that will have many different releases and branches, in CVS it is easier to just push an arbitrary file into the branch or tag you need when you need it. SVN is more formal about these things, and makes it harder to just pick on one file and merge it as you need it. It is a dangerous thing, but like direct memory pointers, sometimes you just need them. That being said, if CVS is already in place, that may be a different story. There the calculus is is there a benifit in switching. One might be that SVN gives you better ability to code on your laptop disconnected from the office. You can schedule files for adding and deleting, and you can check that in when you get back to the office. Some organizations wouldn't dream of letting their developers out with the source code on their laptop, so this doesn't apply to them. My view is that SVN should be your default choice for new projects. It is mature, its tool support is as good as CVS, if not better in some cases, and doesn't really have any important deficiences over CVS. That being said, GIT is up and coming. It still a little immature (for example Windows support hasn't hit the mature stage) and the tool support is still catching up, but if distributed branching is important to you, it is worth taking a good look.
