[site]: stackoverflow
[post_id]: 816934
[parent_id]: 816852
[tags]: 
Maybe it's not the most elegant solution from the standpoint of object oriented design, but if you are going to use data binding, it's often a good idea to implement INotifyPropertyChanged in a base class. This way you can minimize the burden of having to implement it in all your entities. In the case of change tracking you should take a look at the Unit of Work pattern if you want to separate that responsibility from your base class, although it's very common to see change tracking implemented as you point out in .net applications that don't rely in an ORM.
