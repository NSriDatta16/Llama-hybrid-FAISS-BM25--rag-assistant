[site]: datascience
[post_id]: 53994
[parent_id]: 53991
[tags]: 
Since Neural Networks can learn any non-linear function, I would go for an Autoencoder for dimensionality reduction first, and then run a k-Means clustering on the encoded features. If a regular (non-linear) pattern in the data exist, an Autoencoder that is " deep enough " should be able to account for that. For the same reasons (i.e. non-linear patterns) I would avoid linear techniques such as PCA. If this suits you, you can check my Notebooks. I implemented Autoencoders in TensorFlow 1.x here , and in TensorFlow 2.0 here .
