[site]: stackoverflow
[post_id]: 4237350
[parent_id]: 4237319
[tags]: 
That it is poor coding practice and that I should just include all methods within the primary class [...] and only use other class when absolutely needed. I absolutely disagree. This line of thinking would eventually lead to a few blown-up, kitchen-sink classes that just end up doing everything . Your colleague would be right if we were talking about structured programming , where you might only have subroutines but no classes â€” the primary means of organising functionality would be to divide it up into subroutines. But here we're talking object-oriented programming , which also gives you the means of dividing up functionality into different classes. Classes are there to be used, after all, otherwise we wouldn't be calling this OOP! If I were you, I'd prefer a rather liberal approach of defining new classes when you need them. P.S.: It goes without saying that there are indeed best practices that help you decide whether you need a new class for something, and how you should design it. (See e.g. Cody Gray's answer.) I merely want to point out here that it definitely doesn't make sense in OOP to actively avoid classes.
