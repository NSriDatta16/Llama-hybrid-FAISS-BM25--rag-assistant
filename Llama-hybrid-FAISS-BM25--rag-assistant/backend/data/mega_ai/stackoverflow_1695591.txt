[site]: stackoverflow
[post_id]: 1695591
[parent_id]: 
[tags]: 
Jquery draggable makes input text fields uneditable (swallows onfocus?)

I have written code (below) to be able to drag an input field onto another, but it seems that draggable swallows input[text].onfocus . This results in the problem, that all draggable input fields act as disabled (firefox) and clicking the mouse does not focus them. I can edit the input field if I focus on them using the TAB key, but I have to traverse all the necessary tab-indexes. So it seems draggable swallows the input[text].onfocus mouse event. Is there a way to workaround this during bind-time? $(document).ready( function() { $("#drag-table tr td input").draggable({helper: 'clone', revert: 'invalid', cancel: null, cursor: 'move', addClasses: false, containment: $("#drag-table"), handle: 'h2', opacity: 0.8, scroll: true }); $("#drag-table tr td input").droppable({ addClasses: false, drop: function(ev, ui) { alert('value='+ ui.draggable.val() + ", text=" + ui.draggable.text() + " and deeper=" + ui.draggable[0].value); $(this).insertAtCaret(ui.draggable.val()); ui.draggable.val(null); $(this).trigger('change'); } }); }); $.fn.insertAtCaret = function (myValue) { return this.each(function(){ //IE support if (document.selection) { this.focus(); sel = document.selection.createRange(); sel.text = myValue; this.focus(); } //MOZILLA / NETSCAPE support else if (this.selectionStart || this.selectionStart == '0') { var startPos = this.selectionStart; var endPos = this.selectionEnd; var scrollTop = this.scrollTop; this.value = this.value.substring(0, startPos)+ myValue+ this.value.substring(endPos,this.value.length); this.focus(); this.selectionStart = startPos + myValue.length; this.selectionEnd = startPos + myValue.length; this.scrollTop = scrollTop; } else { this.value += myValue; this.focus(); } }); };
