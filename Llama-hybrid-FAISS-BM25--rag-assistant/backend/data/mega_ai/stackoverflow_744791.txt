[site]: stackoverflow
[post_id]: 744791
[parent_id]: 744762
[tags]: 
The two solutions are essentially implementations of the same root design pattern (the "Observer" pattern as defined by the Gang of Four.) In the former case, you are making the ArrayList itself "observable", in the latter you are making the domain object which uses the array list "observable." My tendency would be to do the latter: make the domain object observable. This is primarily because you may eventually have other things that could change about the domain object (for which the GUI should be updated.) If it is already observable, you're already set. Note that you don't strictly have to extend java.util.Observable - you can implement the design pattern without doing that.
