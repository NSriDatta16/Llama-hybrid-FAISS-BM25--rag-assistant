[site]: crossvalidated
[post_id]: 442410
[parent_id]: 221402
[tags]: 
Inspired by "PolBM"'s answer, an intuitive example helps understand the usefulness of the discount factor. Imagining that there are two stocks we can purchase. Stock A: Rising ten dollars on Monday of every week and falling ten dollars on Tuesday of every week. Stock B: Falling ten dollars on Monday of every week and rising ten dollars on Tuesday of every week. Both stocks are unchanged on other days of a week. Now, we want to design a policy to purchase a stock on Sunday. In the long term (without discount factor), both stocks have zero expected rewards. Therefore, it seems like we can purchase either stock mentioned above. However, Stock A is better than Stock B, because we will never lose money by purchasing the stock A. For example, if we buy the stock A on Sunday and sell it on Monday, then we will earn ten dollars. And if we buy the stock A on Sunday and sell it on other days in a week, then we will not get any revenue. Similarly, if we buy the stock B on Sunday and sell it on Monday, then we will lose ten dollars. And if we buy the stock on Sunday and sell it on other days in a week, then we will not get any revenue. This scenario is quite common in the reinforcement learning domain, such as the classical Multi-armed bandit problem. Even though the expectations of two slot machines are the same, the real rewards may be significantly different. Therefore, in these scenarios, the discount factor is necessary.
