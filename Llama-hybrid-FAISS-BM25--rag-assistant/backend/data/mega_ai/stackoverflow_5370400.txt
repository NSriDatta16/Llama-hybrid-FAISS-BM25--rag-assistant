[site]: stackoverflow
[post_id]: 5370400
[parent_id]: 5364062
[tags]: 
You can now leverage Google Chrome's storage API to do this as well. Unlike localStorage , this is accessible from content scripts as well. // Somewhere in your manifest... { "permissions": [ "storage" ] } // Usage: // PERSISTENT Storage - Globally // Save data to storage across their browsers... chrome.storage.sync.set({ "yourBody": "myBody" }, function(){ // A data saved callback omg so fancy }); chrome.storage.sync.get(/* String or Array */["yourBody"], function(items){ // items = [ { "yourBody": "myBody" } ] }); // LOCAL Storage // Save data to storage locally, in just this browser... chrome.storage.local.set({ "phasersTo": "awesome" }, function(){ // Data's been saved boys and girls, go on home }); chrome.storage.local.get(/* String or Array */["phasersTo"], function(items){ // items = [ { "phasersTo": "awesome" } ] }); More info on how these shenanigans work here: https://developer.chrome.com/extensions/storage#type-StorageArea Former answer: Use localStorage . Google Chrome implements some features of HTML5, and it is one of them. //Pull text from user inputbox var data = document.getElementById("this_input").value; //Save it to the localStorage variable which will always remember what you store in it localStorage["inputText"] = data; You should note you can only access your storage from the background page (no content scripts) so you'll have to use messaging for that.
