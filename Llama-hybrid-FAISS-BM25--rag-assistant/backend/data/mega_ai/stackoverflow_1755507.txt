[site]: stackoverflow
[post_id]: 1755507
[parent_id]: 1755437
[tags]: 
Test Driven Development. If you want to get the best possible coverage, you could try test driving out all the code you write. It requires a lot of discipline and is even better when you pair program, but if you do it correctly, I would expect 100% code coverage. Another tip is to minimise the number of unit tests you write where you test a single class atomically and thus stubbing out other classes. The most powerful of tests (e.g. system tests or acceptance tests or whatever you wish to call them) are those that start as high up in the chain of classes (right at the entry point of your application if possible) and then test without stubbing or mocking anything. At worst you would be running a complete system talking to just an in-memory database such as hsqldb containing your test data. Writing tests such as these would help reduce the number of test classes (and therefore tests) you have and also makes it easier to refactor production code as well as maintain those tests in the future as you add new functionality.
