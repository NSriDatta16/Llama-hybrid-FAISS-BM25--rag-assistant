[site]: stackoverflow
[post_id]: 519058
[parent_id]: 518267
[tags]: 
You may be having issues related to the mixing of fields and methods in your annotations. For example, if you have an @Id annotation in your parent class BaseParent, then Hibernate will by default look at fields and not methods. So basically if you had something like this: public class BaseParent { @Id private Integer id; protected List children; } public class Parent extends BaseParent { @ManyToOne public List getChildren() {super.getChildren();} } Hibernate is going to have a problem determining the @ManyToOne annotation. Also, that would probably explain why adding the annotation to the field in the parent class made it work. On the same page that is mentioned above ( http://docs.jboss.org/ejb3/app-server/HibernateAnnotations/reference/en/html_single/index.html#d0e253 ), there is also this paragraph: Depending on whether you annotate fields or methods, the access type used by Hibernate will be field or property. The EJB3 spec requires that you declare annotations on the element type that will be accessed, i.e. the getter method if you use property access, the field if you use field access. Mixing EJB3 annotations in both fields and methods should be avoided . Hibernate will guess the access type from the position of @Id or @EmbeddedId. So, to get it to work, you probably want to choose one or the other (field vs method) and be consistent. That way, you will not come across these "strange" hibernate issues. Anyways, hope that is helpful.
