[site]: datascience
[post_id]: 57539
[parent_id]: 57492
[tags]: 
First of all, thank you for your answer, I think your idea is the ideal one for my problem, you find the architecture update as well as a piece of code that represents the construction of the architecture graph, please take a look and give your opinion. M = 4 # number of matrix per sample n = 50 # number of rows for each matrix k = 50 # number of columns for each matrix A1 = Input(shape=(M,n,k,1),name='A1') # 1 represents the number of channels A2 = TimeDistributed(Conv2D(64,2,data_format='channels_last'), input_shape=(M,n,k,1))(A1) A3 = TimeDistributed(Flatten())(A2) A4 = LSTM(8)(A3) A5 = Dense(12)(A4) output_layer = Dense(1, activation='softmax', name='softmax_output')(A5) merged = Model(inputs=[A1],outputs=output_layer) plot_model(merged,to_file='graph_cnn_rnn.png',show_shapes=True)
