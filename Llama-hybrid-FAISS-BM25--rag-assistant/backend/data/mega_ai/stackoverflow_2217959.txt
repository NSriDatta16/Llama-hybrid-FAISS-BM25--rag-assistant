[site]: stackoverflow
[post_id]: 2217959
[parent_id]: 2217702
[tags]: 
You need a Finite State Machine In a sense, every program is a state machine, but typically in the programming racket by " state machine " we mean a strictly organized loop that does something like: while (1) { switch(current_state) { case STATE_IDLE: if (evaluate some condition) next_state = STATE_THIS; else next_state = STATE_THAT; break case STATE_THIS: // some other logic here break; case STATE_THAT: // yet more break; } state = next_state; } Yes, you can solve this kind of program with general spaghetti code . Although legacy spaghetti code with literal jumps isn't seen any more, there is a school of thought which resists grouping lots and lots of conditionals and nested conditionals in a single function, in order to minimize cyclomatic complexity . To mix metaphors, a big rat's-nest of conditionals is kind of the modern version of spaghetti code. By at least organizing the control flow into a state machine you compress some of the logic into a single plane and it becomes much easier to visualize the operations and make individual changes. A structure is created that, while rarely the shortest possible expression, is at least easy to modify and incrementally alter.
