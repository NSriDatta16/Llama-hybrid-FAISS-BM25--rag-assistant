[site]: stackoverflow
[post_id]: 4753953
[parent_id]: 4753930
[tags]: 
Something like: ideal_response = api_response.group_by{|i| i[:id]} #=> {1=>[{:id=>1, :foo=>"bar"}], 2=>[{:id=>2, :foo=>"another bar"}]} It uses Enumerable's group_by , which works on collections, returning matches for whatever key value you want. Because it expects to find multiple occurrences of matching key-value hits it appends them to arrays, so you end up with a hash of arrays of hashes. You could peel back the internal arrays if you wanted but could run a risk of overwriting content if two of your hash IDs collided. group_by avoids that with the inner array. Accessing a particular element is easy: ideal_response[1][0] #=> {:id=>1, :foo=>"bar"} ideal_response[1][0][:foo] #=> "bar" The way you show at the end of the question is another valid way of doing it. Both are reasonably fast and elegant.
