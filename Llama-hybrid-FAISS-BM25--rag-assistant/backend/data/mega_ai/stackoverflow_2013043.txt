[site]: stackoverflow
[post_id]: 2013043
[parent_id]: 2012473
[tags]: 
1 and 2: File scope (global) variables have static extent, meaning that they are stored differently from local (auto) variables, and should not cause stack overflow. Frankly, if you're overflowing the stack because your (local) variables are too big or you have too many of them, or if you regularly exhaust memory from the heap, then you need to take a step back and rethink your design. 3 and 4: The idiomatic way to use malloc() is T *p = malloc(sizeof *p * number_of_elements); In your case, you would call it as myStruct *foo = malloc(sizeof *foo); or myStruct *foo; ... foo = malloc(sizeof *foo); Unless you are working with a very old (pre-C89) compiler, or you're compiling this code as C++ (in which case you should be using new instead of malloc() , you do not need to cast the result of malloc() , and in fact the practice is discouraged.
