[site]: stackoverflow
[post_id]: 3598307
[parent_id]: 3598282
[tags]: 
You would have to somehow hide the implementation of the class you want the factory to create so that the only method available is to use the factory. Otherwise you cannot stop people directly creating instances of the class. Another technique would be to hide the constructors of the class if you cannot hide the class itself. Most commonly this is done (in java) through the use of private and package private classes and methods. But consider this, it is not uncommon for a developer to need access to the class. A good example might be in unit test. So if you cannot fully hide it, consider how you might be able to "discourage" developers from directly instantiating it, but still have it available for those times they might need to not use the factory.
