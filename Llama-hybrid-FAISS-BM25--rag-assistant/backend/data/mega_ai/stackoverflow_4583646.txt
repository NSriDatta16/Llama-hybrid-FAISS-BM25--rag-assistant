[site]: stackoverflow
[post_id]: 4583646
[parent_id]: 4583386
[tags]: 
If you look at this page from the tcpdump website, you can see the follwing: Opening the device for sniffing The task of creating a sniffing session is really quite simple. For this, we use pcap_open_live(). The prototype of this function (from the pcap man page) is as follows: pcap_t *pcap_open_live(char *device, int snaplen, int promisc, int to_ms, char *ebuf) The first argument is the device that we specified in the previous section. snaplen is an integer which defines the maximum number of bytes to be captured by pcap. promisc, when set to true, brings the interface into promiscuous mode (however, even if it is set to false, it is possible under specific cases for the interface to be in promiscuous mode, anyway). to_ms is the read time out in milliseconds (a value of 0 means no time out; on at least some platforms, this means that you may wait until a sufficient number of packets arrive before seeing any packets, so you should use a non-zero timeout) . Lastly, ebuf is a string we can store any error messages within (as we did above with errbuf). The function returns our session handler. If this does not work, let us know.
