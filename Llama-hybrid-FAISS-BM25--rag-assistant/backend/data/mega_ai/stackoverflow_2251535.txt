[site]: stackoverflow
[post_id]: 2251535
[parent_id]: 
[tags]: 
Memory Leak in large Array - Will subclassing IList fix it?

I need to improve memory performance on my application and I could see that I have problems with memory fragmentation. I've read an interesting article on large objects from Andrew Hunter of Red Gate, and one of the solutions he recommends is: If large data structures need to live for a long time, and especially if they need to grow in size over time, the best approach is simply to consider using or writing a different data structure to store them. Arrays can contain up to around 10,000 elements before they are put on the large object heap and can cause problems, so a very effective way to store 100,000 entries might be to store 10 arrays each containing 10,000 elements: none will end up on the large object heap so no fragmentation will occur. This could be written as an IList subclass, which would make it easy to drop in transparently to replace existing code. How do I implement his suggestion in my code? My program has a very complex form (with an object that leaves residual memory every time it opens. I found a complex list that may be the culprit, and I'd like to implement his suggestion to see if it fixes the issue.
