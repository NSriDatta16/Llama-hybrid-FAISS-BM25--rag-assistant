[site]: stackoverflow
[post_id]: 3581267
[parent_id]: 2013536
[tags]: 
Here's a simplified version... It basically takes a string, calculates the MD5 hash, extracts the first four bytes as an unsigned long (effective mapping the string to a 4-byte number), converts that to base36 and then swaps out the "oh" and "zero" chars for "X" and "Y". Then, it ensures the final string is only six chars, padding with "Z" chars if needed. require 'digest/md5' # create an easy-to-read 6-digit unique idno idno = original # starting string idno = Digest::MD5.digest(idno).unpack("N").first # digest as unsigned long idno = idno.to_s(36).upcase.tr("0O","XY") # convert to base34 (no "oh" or "zero") idno = idno[0,6].ljust(6,"Z") # final 6-digit unique idno (pad with "Z" chars)
