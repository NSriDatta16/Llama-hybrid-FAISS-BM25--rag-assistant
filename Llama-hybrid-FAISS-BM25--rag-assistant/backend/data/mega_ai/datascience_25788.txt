[site]: datascience
[post_id]: 25788
[parent_id]: 
[tags]: 
Situations where advanced theoretical knowledge of ML helped solve a real world problem?

I've invested lot of time trying to understand the theoretical aspects of Deep Learning and Neural Networks - but I'm now questioning whether it is worth it or not, given that I am someone who works mainly on the applied/business side of things. By advanced theoretical knowledge, I mean things: Like understanding the details of how the Kernel trick works in SVM, the "no free lunch" theorem and its relationship to machine learning, the details of how neural networks are universal approximators, the VC dimension of a classifier, etc... By applied Data Scientist, I mean someone who solves business problems using existing algorithms as opposed to someone who develops new ones. So my question: Are there situations in an applied Data Scientist's life where such theoretical knowledge is useful? Or is this type of knowledge useful only for people who work on developing new algorithms?
