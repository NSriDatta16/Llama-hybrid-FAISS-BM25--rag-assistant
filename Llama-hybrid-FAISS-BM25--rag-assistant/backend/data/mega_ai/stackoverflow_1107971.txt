[site]: stackoverflow
[post_id]: 1107971
[parent_id]: 1107368
[tags]: 
I haven't used PyProtocols, only the Zope Component Architecture, but they are similar enough for these principles to be the same. Your error is that you have two adapters that can adapt the same thing. You both have an averaging filter and an inversion filter. When you then ask for the filter, both are found, and you get the "ambigous adapter" error. You can handle this by having different interfaces for averaging filters and inverting filters, but it's getting silly. In the Zope component architecture you would typically handle this case with named adapters. Each adapter gets a name, by default ''. In this case you would give the adapter names like "averaging" and "inverting", and you'd look them up with that name, so you know if you get the averaging or the inverting filter. For the more general question, if the design makes sense or not, it's hard to tell. You having three different kinds of outputs and three different kinds of filters doesn't seem like a good idea. Perhaps you could make the sequence and dict outputs into composites of the single value output, so that each output value gets it's own object, so it can be filtered independently. That would make more sense to me.
