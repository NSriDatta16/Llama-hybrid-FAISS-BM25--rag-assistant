[site]: crossvalidated
[post_id]: 591274
[parent_id]: 591269
[tags]: 
There is no clear singular answer to that question. There are times where it may be necessary, but in general MARS regressions are pretty flexible. So, the questions comes down to this model, or more accurately SET of models. If you are going to do clustering which requires standardization, then continue on with your standardized variables in the MARS regression. It does make interpretation more difficult, but if you use a transformer method to do the work, you can de-standardize too. It should not hurt your model to use standardized data. EDIT TO ADDRESS COMMENT: Note: I used the 'transformation' to describe standardizing the data, just a little linguistic sleight of hand. How can I understand that standardized values ​​harm a model? With r2 and gcv values? – Standardize Variables Do Not Harm Regression Models You can prove this to yourself by building two models and seeing what happens. Example: The coefficients will change for sure (because the magnitude of the values has changed so more or less X is necessary to create y). However, the actually quality of the model is unchanged. A regressions ability to capture patterns is about understanding variation between data points both within and across variables (This is true with most types ML models). In the case of a regression, which is unit-less, this means no change in accuracy or predictiveness occurs when you scale & center (which I will show below). However, in some types of models, the predictive capability is hugely improved by standardizing. To prove this for regressions you can do a simple experiment: require(earth) data(mtcars) #sample data Standard_cars You can see from the results below Without Standardization: Call: lm(formula = mpg ~ cyl + disp + hp, data = mtcars) Residuals: Min 1Q Median 3Q Max -4.0889 -2.0845 -0.7745 1.3972 6.9183 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 34.18492 2.59078 13.195 1.54e-13 *** cyl -1.22742 0.79728 -1.540 0.1349 disp -0.01884 0.01040 -1.811 0.0809 . hp -0.01468 0.01465 -1.002 0.3250 --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Residual standard error: 3.055 on 28 degrees of freedom Multiple R-squared: 0.7679, Adjusted R-squared: 0.743 F-statistic: 30.88 on 3 and 28 DF, p-value: 5.054e-09 Adjusted R-squared: 0.743 p-value: 5.054e-09 With Standardization: Call: lm(formula = mpg ~ cyl + disp + hp, data = Standard_cars) Residuals: Min 1Q Median 3Q Max -0.6784 -0.3459 -0.1285 0.2318 1.1479 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) -3.821e-17 8.961e-02 0.000 1.0000 cyl -3.637e-01 2.363e-01 -1.540 0.1349 disp -3.874e-01 2.139e-01 -1.811 0.0809 . hp -1.670e-01 1.667e-01 -1.002 0.3250 --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Residual standard error: 0.5069 on 28 degrees of freedom Multiple R-squared: 0.7679, Adjusted R-squared: 0.743 F-statistic: 30.88 on 3 and 28 DF, p-value: 5.054e-09 Adjusted R-squared: 0.743 p-value: 5.054e-09 There are no changes in the predictive capabilities or the confidence we in this model, just the coefficients. However, if you use mean/sd standardization you can revert to real-world values pretty easily. You might wonder if this is true also for MARS: summary(earth(mpg~cyl + disp+ hp, data = mtcars)) Call: earth(formula=mpg~cyl+disp+hp, data=mtcars) coefficients (Intercept) 20.7581870 h(140.8-disp) 0.1564930 h(disp-140.8) -0.0255449 Selected 3 of 8 terms, and 1 of 3 predictors Termination condition: RSq changed by less than 0.001 at 8 terms Importance: cyl-unused, disp, hp-unused Number of terms at each degree of interaction: 1 2 (additive model) GCV 6.844552 RSS 155.9274 GRSq 0.8174584 RSq 0.8615267 summary(earth(mpg~cyl + disp+ hp, data = Standard_cars)) Call: earth(formula=mpg~cyl+disp+hp, data=Standard_cars) coefficients (Intercept) 0.1107629 h(-0.725535-disp) 3.2181355 h(disp- -0.725535) -0.5253080 Selected 3 of 8 terms, and 1 of 3 predictors Termination condition: RSq changed by less than 0.001 at 8 terms Importance: cyl-unused, disp, hp-unused Number of terms at each degree of interaction: 1 2 (additive model) GCV 0.18843 RSS 4.292672 GRSq 0.8174584 RSq 0.8615267 Again different coefficients, but same GRSq & RSq so, it is safe to assume that the model you built on standardized data is equivalent to the same model built on unstandardized data.
