[site]: stackoverflow
[post_id]: 4808967
[parent_id]: 
[tags]: 
Replacing unicode punctuation with ASCII approximations

I am reading some text files in a Java program and would like to replace some Unicode characters with ASCII approximations. These files will eventually be broken into sentences that are fed to OpenNLP. OpenNLP does not recognize Unicode characters and gives improper results on a number of symbols (it tokenizes "girl's" as "girl" and "'s" but if it is a Unicode quote it is treated as a single token).. For example, the source sentence may contain the Unicode directional quotation U2018 (â€˜) and I would like to convert that to U0027 ('). Eventually I will be stripping the remaining Unicode. I understand that I am losing information, and I know that I could write regular expressions to convert each of these symbols, but I am asking if there is code I can reuse to convert some of these symbols. This is what I could, but I'm sure I will make mistakes/miss things/etc.: // double quotation (") replacements.add(new Replacement(Pattern.compile("[\u201c\u201d\u201e\u201f\u275d\u275e]"), "\"")); // single quotation (') replacements.add(new Replacement(Pattern.compile("[\u2018\u2019\u201a\u201b\u275b\u275c]"), "'")); replacements is a custom class that I later run over and apply the replacements. for (Replacement replacement : replacements) { text = replacement.pattern.matcher(text).replaceAll(r.replacement); } As you can see, I had to find: LEFT SINGLE QUOTATION MARK RIGHT SINGLE QUOTATION MARK SINGLE LOW-9 QUOTATION MARK (what is this/should I replace this?) SINGLE HIGH-REVERSED-9 QUOTATION MARK (what is this/should I replace this?)
