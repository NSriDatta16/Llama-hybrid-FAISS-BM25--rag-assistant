[site]: stackoverflow
[post_id]: 2748395
[parent_id]: 2748282
[tags]: 
Since you know how to write loops and functions, I suggest you change your design. Create functions that operate on an Exam. Create three separate Exam variables. Call the functions on each Exam. In other words, only one exam will be passed as a parameter to a function. Some example function names: Exam_Calculate_Distribution Output_Distribution According to the minimal information you presented, the data is organized by rows of students and columns of scores. This would be the exception to the theme, since 3 exams would be easier to load. In this assignment, the distribution may be easier to calculate using an array of 10 sections, each represent a range of 10. The calculation is simplified: grade_index = grade / 10; distribution[grade_index]++; With this method, there is no need for using if-else statements. The cost is a few more memory cells for the extra slots in the array. In this case, I believe simplicity out weighs the extra used space. One more step is required: after the distribution is calculated, sum up the regions 0 through 5. This represents the failures (F grades). You will have to figure out how to handle the special case of a perfect score. Remember, if your program is too complex for you to understand, you probably need to review the design. Programs should be a simple as possible but no simpler. -- paraphrasing Albert Einstein.
