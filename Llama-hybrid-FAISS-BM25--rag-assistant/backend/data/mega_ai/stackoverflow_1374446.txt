[site]: stackoverflow
[post_id]: 1374446
[parent_id]: 1374317
[tags]: 
Yes, it is OK. Whether it is recommended depends heavily on your specific situation. We do something similar using Oracle and the flexibility is great but our custom web framework (Java servlet that produces web pages/apps based on modules written in XML) makes heavy use of XML and we have specific systems in place to deal with storing data in a single XML column so my opinion and experience is based on scenarios where it is convenient. For example (and I know this might sound horrid to people), if you are going to be searching based on data inside your XML this might initially pose a problem because running XPaths and extracting data from the XML on every row every time you search is a massive performance hit. We have a system in place similar to materialised views which utilizes triggers and a stored query. Any time a row in the basetable (containing the XML column) is altered, the triggers fire, your query is run and extracts data out from the XML and inserts it into a relational table which in turn has a view over it to ensure you don't modify the relational data (since this does not reflect back into the XML). For the purposes of something like large numbers of web based forms doing CRUD operations where the schema and thus data model may often change it is fantastic. It means you could pull out your XML fragment and instantly have the underlying model for your page and saving it is as simple as simply sticking the XML fragment back in. For fast read-only access we have instant access to a relational view of the XML.
