[site]: stackoverflow
[post_id]: 2549514
[parent_id]: 1119722
[tags]: 
I once wrote a script to do this aswell, I think it's quite elegant :) import string # Remove the `_@` below for base62, now it has 64 characters BASE_LIST = string.digits + string.letters + '_@' BASE_DICT = dict((c, i) for i, c in enumerate(BASE_LIST)) def base_decode(string, reverse_base=BASE_DICT): length = len(reverse_base) ret = 0 for i, c in enumerate(string[::-1]): ret += (length ** i) * reverse_base[c] return ret def base_encode(integer, base=BASE_LIST): if integer == 0: return base[0] length = len(base) ret = '' while integer != 0: ret = base[integer % length] + ret integer /= length return ret Example usage: for i in range(100): print i, base_decode(base_encode(i)), base_encode(i)
