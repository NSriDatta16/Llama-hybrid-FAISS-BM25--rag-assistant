[site]: stackoverflow
[post_id]: 4047321
[parent_id]: 4047031
[tags]: 
If you want to know about the 'theory' of pixelation, read up on resampling (and downsampling in particular). Pixelation algorithms are simply downsampling an image (using some downsampling method) and then upsampling it using nearest-neighbour interpolation . Note that in code these two steps may be fused into one. For downsampling in general, to downsample by a factor of n the image is first filtered by an appropriate low-pass filter, and then one sample out of every n is taken. An "ideal" filter to use is the sinc filter , but because of issues with implementing it, the Lanczos filter is often used as a close alternative. However, for almost all purposes when doing pixelization, using a simple box blur should work fine, and is very simple to implement. This is just an average of nearby pixels. If you don't need to change the output size of the image, then this means you divide the image into blocks (the big resulting pixels) which are k Ã— k pixels, and then replace all the pixels in each block with the average value of the pixels in that block.
