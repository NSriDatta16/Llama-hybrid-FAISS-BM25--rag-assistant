[site]: stackoverflow
[post_id]: 255400
[parent_id]: 
[tags]: 
Serializing Name/Value Pairs in a Custom Object via Web Service

This is a very complicated question concerning how to serialize data via a web service call, when the data is not-strongly typed. I'll try to lay it out as best possible. Sample Storage Object: [Serializable] public class StorageObject { public string Name { get; set; } public string Birthday { get; set; } public List OtherInfo { get; set; } } [Serializable] public class NameValuePairs { public string Name { get; set; } public string Value { get; set; } } Sample Use: [WebMethod] public List GetStorageObjects() { List o = new List () { new StorageObject() { Name = "Matthew", Birthday = "Jan 1st, 2008", OtherInfo = new List () { new NameValuePairs() { Name = "Hobbies", Value = "Programming" }, new NameValuePairs() { Name = "Website", Value = "Stackoverflow.com" } } }, new StorageObject() { Name = "Joe", Birthday = "Jan 10th, 2008", OtherInfo = new List () { new NameValuePairs() { Name = "Hobbies", Value = "Programming" }, new NameValuePairs() { Name = "Website", Value = "Stackoverflow.com" } } } }; return o; } Return Value from Web Service: Matthew Jan 1st, 2008 Hobbies Programming Website Stackoverflow.com What I want: Programming Stackoverflow.com The Reason & Other Stuff: First, I'm sorry for the length of the post, but I wanted to give reproducible code as well. I want it in this format, because I'm consuming the web services from PHP. I want to easily go: // THIS IS IMPORANT In PHP => "$Result["StorageObject"]["OtherInfo"]["Hobbies"]". If it's in the other format, then there would be no way for me to accomplish that, at all. Additionally, in C# if I am consuming the service, I would also like to be able to do the following: // THIS IS IMPORANT In C# => var m = ServiceResult[0].OtherInfo["Hobbies"]; Unfortunately, I'm not sure how to accomplish this. I was able to get it this way, by building a custom Dictionary that implemented IXmlSerializer (see StackOverflow: IXmlSerializer Dictionary ), however, it blew the WSDL schema out of the water. It's also much too complicated, and produced horrible results in my WinFormsTester application! Is there any way to accomplish this ? What type of objects do I need to create ? Is there any way to do this /other than by making a strongly typed collection/ ? Obviously, if I make it strongly typed like this: public class OtherInfo { public string Hobbies { get; set; } public string FavoriteWebsite { get; set; } } Then it would work perfectly, I would have no WSDL issues, I would be able to easily access it from PHP, and C# (.OtherInfo.Hobbies). However, I would completely lose the point of NVP's, in that I would have to know in advance what the list is, and it would be unchangeable.. say, from a Database. Thanks everyone!! I hope we're able to come up with some sort of solution to this. Here's are the requirements again: WSDL schema should not break Name value pairs (NVP's) should be serialized into attribute format Should be easy to access NVP's in PHP by name ["Hobbies"] Should be easy to access in C# (and be compatible with it's Proxy generator) Be easily serializable Not require me to strongly type the data Now, I am /completely/ open to input on a better/different way to do this. I'm storing some relatively "static" information (like Name), and a bunch of pieces of data. If there's a better way, I'd love to hear it.
