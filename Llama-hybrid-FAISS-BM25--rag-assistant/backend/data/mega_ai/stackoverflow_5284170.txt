[site]: stackoverflow
[post_id]: 5284170
[parent_id]: 
[tags]: 
organizing many python scripts, in a large corporate environment

We've been doing a fair amount of Python scripting, and now we have a directory with almost a hundred loosely related scripts. It's obviously time to organize this, but there's a problem. These scripts import freely from each other and although code reuse is generally a good thing it makes it quite complicated to organize them into directories. There's a few things that you should know about our corporate environment: I don't have access to the users' environment. Editing the PYTHONPATH is out, unless it happens in the script itself. Users don't install things. Systems are expected to be already installed and working on, so setup.py is not a solution unless I can run it once for all users. I'm quite willing to edit my import statements and do some minor refactoring, but the solutions I see currently require me to divide all the code strictly between "user runnable scripts" and "libraries", which isn't feasible, considering the amount of code. Has anyone out there solved a similar problem? Are you happy with it? --Buck Another way to state the same question: When looking at google code search, this kind of code is rampant (below). Is everyone happy with this? Is there a good alternative? sys.path.insert(0, os.path.dirname(os.path.dirname( os.path.dirname(os.path.abspath(__file__)) )))
