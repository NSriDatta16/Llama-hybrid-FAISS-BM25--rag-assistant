[site]: stackoverflow
[post_id]: 711593
[parent_id]: 711539
[tags]: 
Would it be bad design to just put everything together so everything is separated by function rather than class type? There's no general rule, it depends on the situation, your personal preferences and change patterns in your code. However I would suggest doing the following: Keep as much of the common code in the superclasses to eliminate any redundancy. Maybe then some of the subclasses won't even be needed. I'm not sure what you mean by "modules", but I would recommend separating the stuff using namespaces+subdirectories in the same project and not by using separate assemblies. Use assemblies only for deployment separation purposes and similar stuff. Those "helper" classes you mention sound a bit code-smelly. They could be a violation of OO principles. Check out this link for more info: http://blogs.msdn.com/nickmalik/archive/2005/09/06/461404.aspx . Maybe you can reorganize the code, reduce the need for such classes AND get a benefit of a cleaner OO design at the same time?
