[site]: stackoverflow
[post_id]: 4458810
[parent_id]: 4455238
[tags]: 
Having separate sites for content/custom development will probably end up more work in the long run. Every time you update the theme on Drupal, you'll need to update it on your Kohana project too. In addition, maybe in the future you will need more integration - for example you may want certain pages to be visible only by users who are logged in. For situations like this I usually develop an extremely basic CMS for the content part of the site. It's not too big a task - make a 'CMS' module so you can reuse your code in other projects. Create a 'pages' table and model to store the pages. Use TinyMCE or similar for the page editing interface. In the CMS module's init.php, you can create a loop which goes through all the pages and creates routes for them (these would be checked before the default / route) find_all(); foreach($pages as $page){ Route::set('page_'.$page->id, $page->uri) ->defaults(array( 'controller' => 'pages', 'action' => 'display')); } If you're only going to be editing the content pages yourself, you could skip the whole page edit interface and just edit the raw html in the database. Not quite as elegant as Drupal, but you'll have much tighter integration and you'll save yourself the bloat that comes with Drupal.
