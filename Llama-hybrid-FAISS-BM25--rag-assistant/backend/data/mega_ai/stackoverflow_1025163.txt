[site]: stackoverflow
[post_id]: 1025163
[parent_id]: 1024948
[tags]: 
I'd say that the minimum features for using Java EE are: Servlets and JSPs, written using JSTL (no scriptlets) JDBC JNDI for pooling database connections (optional but recommended) Basic authentication for security You can accomplish a great deal knowing just those. If you want to minimize the learning curve, I'd recommend starting with those and staying away from EJBs, JMS, Struts, JSF, etc. Another benefit is that this subset of features is common to both servlet/JSP engines, like Tomcat, Jetty, Resin, etc. and full-blown Java EE app servers like WebLogic, JBOSS, WebSphere, etc. An app that runs on one should be portable to any of the others, as long as you stay away from app engine-specific extensions. You should realize that there's a trade-off here. You'll have to develop pieces that might be easier if you leverage the app server more. But hopefully you'll start with some simpler problems and work your way up once you're comfortable with the basics. There's another approach: Hire an experienced guide to help you with training and mentoring for the first project. A six-month gig with a reputable consulting firm might get you started. Last of all, I'd recommend Spring. It would also have a learning curve, but it's a good alternative to Java EE EJB development.
