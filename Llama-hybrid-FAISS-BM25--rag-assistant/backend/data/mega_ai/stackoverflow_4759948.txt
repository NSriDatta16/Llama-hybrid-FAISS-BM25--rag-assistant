[site]: stackoverflow
[post_id]: 4759948
[parent_id]: 4759513
[tags]: 
Object orientation is the a means for achieving software engineering goals. Goal: Ease of maintenance, Extensibility, Organized source code (searchability etc.) OO Construct: Encapsulation (only methods owned by the 'data type/structure' can operate on its data) Goal: Ability to develop new features without modifying existing ones, Code reuse OO Construct: Implementation inheritance, Polymorphism Goal: Abstractions (you don't have to commit to a particular type or operations, change of implementation without changing the clients) OO Construct: Interface inheritance, interfaces, abstract classes The goals don't need justification. Whether you want/need the support of an OO language or not is depend on your particular situation. If you need to use C you can still mimic some OO construct, and hopefully enjoy the benefits of it. Mind you, there is absolutely possible to develop a bigg mess of code with adhering to all of the OO principles. I'm sure others can list other goals and examples (and know how to edit tables in stackoverflow posts)
