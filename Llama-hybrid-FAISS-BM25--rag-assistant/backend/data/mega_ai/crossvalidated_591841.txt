[site]: crossvalidated
[post_id]: 591841
[parent_id]: 
[tags]: 
Working with vector representation of individual feature

Generally, training data is of shape $\mathbb{R}^{n \times m}$ data where $n$ is the number of samples and $m$ is the number of features. The training data can be represented in a table such as feat1 feat2 ... feat n label Val1 Val2 ... Val n label1 Val1 Val2 ... Val n label2 In this case, as you can see each feature is represented by a single value. Now, I have a dataset where each feature is represented with a vector instead of a value. For example, feat1 feat2 ... feat n label [Vec 1] [Vec 2] ... [Vec n] label1 [Vec 1] [Vec 2] ... [Vec n] label2 Each vector is the same size. And the values within the vector are all numbers are $\ge 0$ . Do I just convert my training data as following feat1 val1 feat1 val2 ... feat_n val1 feat_n val2 ... label Val11 Val12 ... Valn1 Valn2 ... label1 Val11 Val12 ... Valn1 Valn2 ... label2 This does kinda solve the issue, but it seems like a whacky solution. Also, if I split the feature from a vector representation to a list of scalar representation and treat each of them as individual features, that kinda lose the true representation of the feature in the first place. I am assuming we can use the convolutional neural network, however, if the number of training data is small (i.e. 100s), a neural network might not be the best option. Also, If the objective is the find the important features eventually, what feature selection/ML method might work?
