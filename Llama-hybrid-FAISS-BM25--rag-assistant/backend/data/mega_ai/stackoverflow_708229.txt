[site]: stackoverflow
[post_id]: 708229
[parent_id]: 
[tags]: 
Compile errors while read/write size of multiple structs to file

I've already asked 2 questions kind of related to this project, and i've reached this conclusion. Writing the size of the Struct to the file , and then reading it back is the best way to do this. I'm creating a program for a homework assignment that will allow me to maintain inventory. I need to read / write multiple structs of the same type to a file. The problem is... this is really complicated and i'm having trouble wrapping my head around the whole process. I've seen a bunch of examples and i'm trying to put it all together. I'm getting compile errors... and I have zero clue on how to fix them. If you could help me on this I would be so appreciative... thank you. I'm so lost right now... **** HOPEFULLY THE LAST EDIT #3 ************* My Code: // Project 5.cpp : main project file. #include "stdafx.h" #include #include #include #include #include using namespace System; using namespace std; #pragma hdrstop int checkCommand (string line); template void readFromFile(Template&); template void writeToFile(Template&); template void writeVector(ofstream &out, const vector &vec); template void readVector(ifstream& in, vector & vec); struct InventoryItem { string Item; string Description; int Quantity; int wholesaleCost; int retailCost; int dateAdded; } ; int main(void) { cout structList; ofstream out("data.dat"); writeVector( out, structList ); while (1) { string line = ""; cout void readFromFile(Template& t) { ifstream in("data.dat"); readVector(in, t); Need to figure out how to pass the vector structList via a Template in.close(); } template void writeToFile(Template& t) { ofstream out("data.dat"); readVector(out, t); Need to figure out how to pass the vector structList via a Template out.close(); } template void writeVector(ofstream &out, const vector &vec) { out ::const_iterator i = vec.begin(); i != vec.end(); ++i) { out vector readVector(ifstream &in) { size_t size; in >> size; vector vec; vec.reserve(size); for(int i = 0; i > tmp; vec.push_back(tmp); } return vec; } My Compile Errors: 1>.\Project 5.cpp(128) : error C2679: binary ' C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\include\ostream(653): could be 'std::basic_ostream &std::operator >(std::basic_ostream &,const char *)' 1> with That is the only error i'm getting now. I see your code is SO Much better. My new compiler error is SUPER long. I've shown where it the error points to. Could you help me just one last time?
