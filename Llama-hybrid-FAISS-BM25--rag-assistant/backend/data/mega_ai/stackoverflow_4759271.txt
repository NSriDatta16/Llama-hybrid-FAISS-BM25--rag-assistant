[site]: stackoverflow
[post_id]: 4759271
[parent_id]: 4759157
[tags]: 
The fastest solution is likely the last one you posted -- choose directions randomly, repeating until you get a valid one. That will take at most four tries (the worst case is when there is only one valid neighbor). Something more elegant is to iterate through all possible directions, updating a variable randomly at each valid neighbor, such as this pseudocode: c = 1 r = invalid for i in neighbors: if (valid[i]): if (rand() and then r is the answer ( c is the number of valid neighbors found so far).
