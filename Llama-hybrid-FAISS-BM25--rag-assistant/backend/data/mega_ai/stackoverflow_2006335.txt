[site]: stackoverflow
[post_id]: 2006335
[parent_id]: 2006053
[tags]: 
Notwithstanding any benefits / drawbacks of its use, which are discussed in other threads ( MyISAM versus InnoDB ), migration is a nontrivial process. Consider Functionally testing all components which talk to the database if possible - difference engines have different semantics Running as much performance testing as you can - some things may improve, others may be much worse. A well-known example is SELECT COUNT(*) on a large table. Checking that all your code will handle deadlocks gracefully - you can get them without explicit use of transactions Estimate how much space usage you'll get by converting - test this in a non-production environment. You will doubtless need to change things in a large software platform; this is ok, but seeing as you (hopefully) have a lot of auto-test coverage, change should be acceptable. PS: If "Something is starting to tax the CPU", then you should a) Find out what, in a non-production environment, b) Try various options to reduce it, in a non-production environment. You should not blindly start doing major things like changing database engines when you haven't fully analysed the problem. All performance testing should be done in a non-production environment, with production-like data and on production-grade hardware. Otherwise it is difficult to interpret results correctly.
