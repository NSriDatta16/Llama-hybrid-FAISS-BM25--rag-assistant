[site]: stackoverflow
[post_id]: 3928748
[parent_id]: 
[tags]: 
How can I execute an Oracle function from within a LINQ expression in Entity Framework 4?

I am using Visual Studio 2010, C#, Entity Framework 4 and Oracle 10g. I need to be able to return the result of a database function as a scalar property of an anonymous type. My Oracle schema has two tables, PARENT and CHILD, and a function FNC_ADD. I have created an entity model using the Visual Studio ADO.NET Entity Data Model template, including both tables and the function. The StorageModels section of my .edmx file looks like this: I created an extension method to define the function for the entity data model that looks like this: public partial class LINQtest2Entities { [EdmFunction("LINQtest2Model", "FNC_ADD")] public decimal FNC_ADD(decimal V1, decimal V2) { // donâ€™t need to implement the function throw new ApplicationException(); } } I call the function in a LINQ expression like this: using (var context = new LINQtest2Entities()) { var parents = from p in context.PARENTs select new { children = from c in p.Children select new { p.PARENT_ID, c.CHILD_ID, a = context.FNC_ADD(p.PARENT_ID, c.CHILD_ID) } }; foreach (var parent in parents) { foreach (var child in parent.children) { Console.WriteLine("P {0} C {1} A {2}", child.PARENT_ID, child.CHILD_ID, child.a); } } } Everything compiles correctly, but when I run the code I get this: The specified method 'System.Decimal FNC_ADD(System.Decimal, System.Decimal)' on the type 'LINQtest2.LINQtest2Entities' cannot be translated into a LINQ to Entities store expression. What am I doing wrong?
