[site]: stackoverflow
[post_id]: 1054381
[parent_id]: 1052279
[tags]: 
C++0x adds the "thread_local" storage specifier, so in namespace (or global) scope your example would be int x; // normal process-wide global variable thread_local int y; // per-thread global variable You can also use thread_local with static when declaring class members or local variables in a function: class Foo { static thread_local int x; }; void f() { static thread_local int x; } Unfortunately, this doesn't appear to be one of the C++0x features supported by Visual Studio 2010 or planned GCC releases.
