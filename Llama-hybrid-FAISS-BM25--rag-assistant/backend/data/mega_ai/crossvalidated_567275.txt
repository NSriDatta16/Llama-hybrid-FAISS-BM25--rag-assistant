[site]: crossvalidated
[post_id]: 567275
[parent_id]: 
[tags]: 
Rolling forecast in R with a time series

I'm currently using the predict_rolling function in R from the tsDyn package in R. I'm having some difficulty understanding how to manipulate the function to do what I want when it comes to creating a rolling forecast for a time series I have. I'm not looking for anyone to troubleshoot my code but more to get a better understanding of the characteristics of the function. What I expect is to have a model that is trained up to 30 ( $m=30$ ) number of observations out of a total number of 40 ( $n=40$ ) observations in a time series. I now want to be able to predict the values of 31 to 40 using a rolling forecast where after each forecast the model is trained with the new actual value. For example, the model predicts that $pred_{31}=0.52$ but the actual is $act_{31}=0.5$ and the model now takes the $act_{31}=0.5$ and is retrained with that value along with the previous 30 values. This now occurs all the way up to the 40th observation. My understanding is that the fit.every=1 in the function is supposed to refit the model at every new observation. However, when I run the function without the command I still get the same MSE value $0.06762242$ . So I do not understand what the difference is and whether or not the model is being updated correctly? Below is how I defined the two rolling predictions along with the model that I am using. The full code along with the data will be provided at the end. test_aar Lastly, I also want to do this to create a two-day-ahead rolling forecast. In a similar situation as outlined above. And the same question comes to mind as once again I get the same MSE value $0.01180301$ , regardless of using fit.every=1 or not. pred_roll_aar1_2d Going along with the two-day-ahead forecast, I would expect to get an output of 9 values, but when I check the values of either two-day-ahead forecasts there are 10 values. I would suspect that on observation 30 I should get the prediction for observation 32, for observation 31 I should get the prediction for observation 33,..., all the way to observation 38 I should get the prediction for observation 40. At least that was my understanding from the documentation that stated, "unlike usual predict() methods, specifying n.ahead=2 will not generate a 1 step-ahead and a 2 step-ahead forecasts, but only enroll 2 step-ahead forecasts." (Source of the documentation for the predict_rolling function: https://www.rdocumentation.org/packages/tsDyn/versions/0.9-44/topics/predict_rolling ) SOURCE CODE test_data1 $pred), unlist(pred_roll_aar1$ true))[1,2]^2 pred_roll_aar1_mse pred_roll_aar2 $pred), unlist(pred_roll_aar2$ true))[1,2]^2 pred_roll_aar2_mse # Two day ahead pred_roll_aar1_2d $pred), unlist(pred_roll_aar1_2d$ true))[1,2]^2 pred_roll_aar1_mse_2d pred_roll_aar2_2d $pred), unlist(pred_roll_aar2_2d$ true))[1,2]^2 pred_roll_aar2_mse_2d
