[site]: stackoverflow
[post_id]: 5624594
[parent_id]: 878405
[tags]: 
I figured it out...the PNG, bounding box transparency issue and being able to click through to another image behind: var hitTestPoint1:Boolean = false; var myHitTest1:Boolean = false; var objects:Array; clip.addEventListener(MouseEvent.MOUSE_DOWN, doHitTest); clip.addEventListener(MouseEvent.MOUSE_UP, stopDragging); clip.buttonMode = true; clip.mouseEnabled = true; clip.mouseChildren = true; clip2.addEventListener(MouseEvent.MOUSE_DOWN, doHitTest); clip2.addEventListener(MouseEvent.MOUSE_UP, stopDragging); clip2.buttonMode = true; clip2.mouseEnabled = true; clip2.mouseChildren = true; clip.rotation = 60; function doHitTest(event:MouseEvent):void { objects = stage.getObjectsUnderPoint(new Point(event.stageX, event.stageY)); trace("Which one: " + event.target.name); trace("What's under point: " + objects); for(var i:int=0; i function stopDragging(event:MouseEvent):void { event.target.stopDrag(); } function realHitTest(object:DisplayObject, point:Point):Boolean { /* If we're already dealing with a BitmapData object then we just use the hitTest * method of that BitmapData. */ if(object is BitmapData) { return (object as BitmapData).hitTest(new Point(0,0), 0, object.globalToLocal(point)); } else { /* First we check if the hitTestPoint method returns false. If it does, that * means that we definitely do not have a hit, so we return false. But if this * returns true, we still don't know 100% that we have a hit because it might * be a transparent part of the image. */ if(!object.hitTestPoint(point.x, point.y, true)) { return false; } else { /* So now we make a new BitmapData object and draw the pixels of our object * in there. Then we use the hitTest method of that BitmapData object to * really find out of we have a hit or not. */ var bmapData:BitmapData = new BitmapData(object.width, object.height, true, 0x00000000); bmapData.draw(object, new Matrix()); var returnVal:Boolean = bmapData.hitTest(new Point(0,0), 0, object.globalToLocal(point)); bmapData.dispose(); return returnVal; } } }
