[site]: stackoverflow
[post_id]: 3268873
[parent_id]: 3268717
[tags]: 
The coverage_set_id in both the HAVING and count part of the SELECT should be benefit_id. Since benefit_id is also in table a you can do the following SELECT a.coverage_set_id, COUNT (a.benefit_id) AS "COUNT" FROM coverage_set_detail_view a WHERE a.coverage_set_id in ( SELECT b.coverage_set_id FROM contracts_by_sub_group_view b WHERE b.valid_from_date BETWEEN to_date('10/01/2010','mm/dd/yyyy') AND to_date('12/01/2010','mm/dd/yyyy')) AND a.coverage_set_id in ( SELECT b2.coverage_set_id FROM contracts_by_sub_group_view b2 INNER JOIN request c on c.request_id=b2.request_id WHERE c.request_status = 1463) AND ?.summary_attribute = 2004687 AND a.benefit_id <> 1092333 GROUP BY a.coverage_set_id HAVING COUNT (a.benefit_id) > 1 This removes the JOIN magnification that was occurring on the FROM since those tables are not needed to pull coverage_set_id and benefit_id. The only remaining need for the other 2 tables is to filter out data based on criteria, which is in the WHERE clause. I'm not sure what table summary_attribute lives in but it would follow a similar pattern to valid_from_date, request_status, or benefit_id.
