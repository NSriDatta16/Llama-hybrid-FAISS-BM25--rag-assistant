[site]: stackoverflow
[post_id]: 646510
[parent_id]: 634087
[tags]: 
I've founded one new elegant way to solve this problem. I've got many interest ideas when read answers: wrap iterator, for transform std::pair to std::string; wrap std::pair, for have a chance to overload operator use usual std::for_each with printing functor; use std::for_each with boost::labda - looks nice, except accessing to std::pair ::first and std::pair ::second members; I think I will use all of this ideas in future for solve different other problems. But for this case I've understaded that I can formulate my bproblem as "transform map's data to strings and write them to output stream" instead "copy map's data to ouput stream". My solution looks like: namespace { std::string toString( const std::pair & data) { std::ostringstream str; str ( std::cout, "\n" ), toString ); I think this method is most short and expressive than others.
