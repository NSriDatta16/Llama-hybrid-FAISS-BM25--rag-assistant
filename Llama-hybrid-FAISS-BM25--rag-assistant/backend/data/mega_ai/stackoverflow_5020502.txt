[site]: stackoverflow
[post_id]: 5020502
[parent_id]: 5019665
[tags]: 
If things could be happening concurrently (in particular if the staggingtasks can be inserted into while the other process happens), then none of the existing solutions are safe. You need to Insert the data to a temp table, then insert the data from the temp table and then delete the data from the staging table based on the records in the temp table. This ensures you only deleted the records you inserted and not some others added while the insert happens. And of course you should put all this in a transaction as @Ardman showed. Further you should not ever do an insert without specifying the fields you are inserting into. Suppose someone recreated the table and rearranged the fields, then your insert would insert into the wrong fields (if the datatypes are compatible) or fail. SELECT [tour], tourname, [taskname], [deptdate], [tasktype], [desc], [duedate], [compdate], [comments], [agent], [compby], [graceperiod], completed , canceled INTO #TasksToInsert FROM staggingtasks WHERE NOT EXISTS(SELECT * FROM dashboardtasks WHERE (staggingtasks.tour=dashboardtasks.tour AND staggingtasks.taskname=dashboardtasks.taskname AND staggingtasks.deptdate=dashboardtasks.deptdate AND staggingtasks.duedate=dashboardtasks.duedate AND staggingtasks.tourname=dashboardtasks.tourname) ) INSERT INTO dashboardtasks ([tour], tourname, [taskname], [deptdate], [tasktype], [desc], [duedate], [compdate], [comments], [agent], [compby], [graceperiod], completed , canceled ) SELECT [tour], tourname, [taskname], [deptdate], [tasktype], [desc], [duedate], [compdate], [comments], [agent], [compby], [graceperiod], completed , canceled FROM #TasksToInsert DELETE FROM staggingtasks WHERE EXISTS (SELECT * FROM #TasksToInsert WHERE (staggingtasks.tour=#TasksToInsert.tour AND staggingtasks.taskname=#TasksToInsert.taskname AND staggingtasks.deptdate=#TasksToInsert.deptdate AND staggingtasks.duedate=#TasksToInsert.duedate AND staggingtasks.tourname=#TasksToInsert.tourname) ) And if this hasn't gone to production yet, please fix the misspelling of StagingTasks. Or it will annoy your developers for years! I would also consider putting in a surrogate key to the dashboardTasks table as a multiple field PK like you have is likely to cause performance issues that a smaller int key would not especially if there are child tables. But still make a unique index on the natural key.
