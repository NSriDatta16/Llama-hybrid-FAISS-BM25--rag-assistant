[site]: stackoverflow
[post_id]: 3649629
[parent_id]: 3647082
[tags]: 
Assuming that you are going to force all your clients to install a new middle tier, I can't think of an argument against making it a Java web app. As already mentioned you have the benefit of controlling all access into your platform over HTTP, which allows easy resale, just with firewall configuration. There's no reason you can't make use of Javascript within a web front end, you may be interested in DWR , which allows you to interact directly with Java objects via Javascript. I've used this before to add some simple Ajax interaction to a Spring MVC webapp. The reasons I like this approach, you're already migrating code into Java middle tier, so Already imposing Java server hardware cost on clients, hosting app server / web server is comparable Already have Java expertise, can be leveraged with DWR Can use as much/little Javascript as appropriate (I've used DWR with IE6, Firefox 3, Chrome) I think you're right to be wary of pushing too much functionality to the client, I'd go for as thin a client as possible. The only reason I'd look at the first two stack choices would be if you have some developer expertise in a particular area, and not Java webapp/Javascript.
