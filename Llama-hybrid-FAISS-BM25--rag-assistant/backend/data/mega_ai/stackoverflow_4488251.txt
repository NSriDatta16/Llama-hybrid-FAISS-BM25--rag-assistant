[site]: stackoverflow
[post_id]: 4488251
[parent_id]: 4487914
[tags]: 
I see why this is interesting to explore. In real code this would probably be hardly useful however. As others pointed out, virtual inheritance is more of a fix-this-bad-design-to-work-somehow tool, than a valid desing tool. Your code produces warnings in VS2010 - the compiler is making you know that dominance is being used. Of course thats not a show stopper, but another discouragement to use this. If you introduce Der3 like this class Der3 : public virtual Base { public: void bar() {} }; class Join : public Der1, public Der2, public Der3 {} the code fails to compile because of ambiguous inheritance of 'void Base::bar(void)'
