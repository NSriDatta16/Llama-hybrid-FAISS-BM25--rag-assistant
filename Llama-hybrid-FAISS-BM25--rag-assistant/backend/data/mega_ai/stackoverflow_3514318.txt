[site]: stackoverflow
[post_id]: 3514318
[parent_id]: 3514035
[tags]: 
You could go the iterator adapter approach, but I'd suggest doing it correctly if you do. Either you need to override all the stuff that makes an iterator an "Iterator", or use Boost.Iterator, a library meant to make such things easier. The other approach you would use is make a functor and use std::transform instead of std::copy. This would seem to me a much easier approach. If you're using a C++0x compiler you could even just use a lambda. Edit: The person who suggested using an adapter pulled his answer so the first paragraph might not make a lot of sense. It used a wrapper around the vector iterators that returned B* instead of A* but it left out a whole lot of work that would be necessary to do it correctly.
