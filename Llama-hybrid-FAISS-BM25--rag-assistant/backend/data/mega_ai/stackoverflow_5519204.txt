[site]: stackoverflow
[post_id]: 5519204
[parent_id]: 5517246
[tags]: 
I guess you want to eliminate the dependence of your class on storage access method. That's my solution: class GuiWidget(): def __init__(self, accessFunc): self.accessFunc = accessFunc def inc(self): self.accessFunc(self.accessFunc() + 1) storage = {"k1":0, "k2":0} def getAccessFunc(key): return lambda v = None: v is not None and storage.update({key: v}) or storage[key] w1 = GuiWidget(getAccessFunc("k1")) w2 = GuiWidget(getAccessFunc("k2")) # calls from gui thread print storage w1.inc() print storage w2.inc() print storage
