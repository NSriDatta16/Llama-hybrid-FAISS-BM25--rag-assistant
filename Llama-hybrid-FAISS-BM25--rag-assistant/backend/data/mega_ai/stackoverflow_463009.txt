[site]: stackoverflow
[post_id]: 463009
[parent_id]: 460766
[tags]: 
You can change the first 'compiler no like' to let mutable error_s : float = 0.0 and the compiler seems to like that. As for the second question, I am not seeing the same error as you, and this [ ] type km //define a unit of measure let someFloatFn x = x + 1.2 //this is a function which takes 'vanilla' floats let MapSeqToNonUnitFunction (x:seq >) = Seq.map (float >> someFloatFn) x let testList = [ 1 .. 4 ] |> List.map float |> List.map ((*) 1.0 ) let testList2 = testList :> seq let result = MapSeqToNonUnitFunction testList2 printfn "%A" result compiles for me (though the upcast to seq is a little annoying, I am not sure if there is an easy way to get rid of it or not). Aside, I think convention is to name units parameters 'u, 'v, ... rather than 'a, 'b, ...
