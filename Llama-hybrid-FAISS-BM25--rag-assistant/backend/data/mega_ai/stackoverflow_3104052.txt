[site]: stackoverflow
[post_id]: 3104052
[parent_id]: 3076078
[tags]: 
My first thought when I saw the question was: int count=0; if (a) ++count; if (b) ++count; if (c) ++count; return count>=2; After seeing other posts, I admit that return (a?1:0)+(b?1:0)+(c?1:0)>=2; is much more elegant. I wonder what the relative runtimes are. In any case, though, I think this sort of solution is much better than a solution of the return a&b | b&c | a&c; variety because is is more easily extensible. What if later we add a fourth variable that must be tested? What if the number of variables is determined at runtime, and we are passed an array of booleans of unknown size? A solution that depends on counting is much easier to extend than a solution that depends on listing every possible combination. Also, when listing all possible combinations, I suspect that it is much easier to make a mistake. Like try writing the code for "any 3 of 4" and make sure you neither miss any nor duplicate any. Now try it with "any 5 of 7".
