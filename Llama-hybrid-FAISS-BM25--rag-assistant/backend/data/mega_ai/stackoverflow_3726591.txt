[site]: stackoverflow
[post_id]: 3726591
[parent_id]: 3709872
[tags]: 
Thanks, Robert. I guess I could rephrase a bit...what guidelines have others found to be useful for keeping their controller responsibilities organized and logical? While my example above only touches 3 of our areas, I expect to eventually replace most/all of the application with MVC. Furthermore, each of the 3 areas I mentioned has relationships to multiple other areas.(eg, maps can be used to plot several location-based entities, preferences can apply to any area of the system, and, like maps, is capable of searching for several kinds of business entities (one at a time, not all together). So the lines are blurry. I'm interested in hearing how others have found workable guidelines for controller organization. Oh, and at the very least, we are sticking to the skinny controller/fat model paradigm!
