[site]: stackoverflow
[post_id]: 2330745
[parent_id]: 825018
[tags]: 
I was searching an answer for the same question. After reading some articles and some practice I prefer using "Pure virtual class interfaces" . They are more straight forward (this is a subjective opinion). Pimpl idiom makes me feel I'm writing code "for the compiler", not for the "next developer" that will read my code. Some testing frameworks have direct support for Mocking pure virtual classes It's true that you need a factory to be accessible from the outside. But if you want to leverage polymorphism: that's also "pro", not a "con". ...and a simple factory method does not really hurts so much The only drawback ( I'm trying to investigate on this ) is that pimpl idiom could be faster when the proxy-calls are inlined, while inheriting necessarily need an extra access to the object VTABLE at runtime the memory footprint the pimpl public-proxy-class is smaller (you can do easily optimizations for faster swaps and other similar optimizations)
