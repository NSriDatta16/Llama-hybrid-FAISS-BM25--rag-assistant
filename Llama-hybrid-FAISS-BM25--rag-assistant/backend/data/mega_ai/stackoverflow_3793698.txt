[site]: stackoverflow
[post_id]: 3793698
[parent_id]: 3793324
[tags]: 
When working in multi-zone environment it's wise to have time zone set to UTC. That's perfectly valid in your application.rb Rails will automatically transform all time to the current time zone , that can be set with Time.zone = "some-zone" What I use is a before_filter in ApplicationController where I set the time zone according to the current user. Then all operations works within this zone and you don't need to think about it in your controllers/models/views. Suppose that you have some model Foo with some datetime field. Then working in the irb console: Time.zone = "Prague" x = Foo.create(:it_will_happen_at => Time.zone.now) x.it_will_happen_at # => Sat, 25 Sep 2010 13:45:46 CEST +02:00 Time.zone = "London" # it is needed to refresh the field after a time zone has changed. # In normal situation it'd not be needed, it's just for this console example x.reload x.it_will_happen_at # => Sat, 25 Sep 2010 12:44:46 BST +01:00 When you take a look into the DB, you'll find that value is Sat, 25 Sep 2010 11:45:46 UTC. As for the zone value I prefer names of cities as it works smoothly with daylight savings (summer / winter time).
