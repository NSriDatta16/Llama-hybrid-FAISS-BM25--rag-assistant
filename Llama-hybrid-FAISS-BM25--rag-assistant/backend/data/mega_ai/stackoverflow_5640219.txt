[site]: stackoverflow
[post_id]: 5640219
[parent_id]: 
[tags]: 
HTML form to PDF sent to e-mail

I use the Form to PDF-script from http://koivi.com/fill-pdf-form-fields/ and would like it to send the PDF to e-mail. Fortunally he has already made this possible by using the file: "process-xfdf.php". However I can't seem to find out how to use this file correctly as I always get the "This script is meant to be used in conjunction with the web forms on our website only."-error message. What am I doing wrong? Index.php ',"\n"; // because short_open_tags = On causes a parse error. ?> Using HTML forms to fill in PDF fields with PHP and FDF @import url(http://koivi.com/styles.css); _uacct = "UA-207722-1"; urchinTracker(); Using HTML forms to fill in PDF fields with PHP and FDF Using a simple HTML form and a small PHP function, it is possible to fill in the fields of a PDF form file for viewing without having to install any PHP libraries or modules. This is accomplished by using a pre-made PDF file with all the form fields necessary and FDF files. By taking values provided via a GET or POST web request from an HTML form or hyperlink, we can generate an FDF file that, when opened, will provide the values to fill the PDF form fields in the original document. Tutorial I have now posted a tutorial on how to use the programming found in this article for those of you who need just a little extra help implementing this. Your Result You can now ">download the file you just created. When downloaded, open the FDF file with your Adobe Acrobat or Acrobat Reader program to view the original PDF document with the fields filled in with the information you posted through the form below. Creating the PDF file First, you need to have created your PDF form file . I do this using the form tools in Adobe Acrobat. Remember to name each field in your document, you will need those names later when you create the HTML form. Creating the HTML form Next, you need to create the form fields to fill out in an HTML form. Below is an example that fits with the above PDF file. Note that the field names in your HTML form must match the field names in your PDF file. Name " /> Title " /> Email " /> Address " /> City " /> State " /> Zip " /> Phone " /> Fax " /> Processing the POST request When the form is submitted, the $_POST array is passed to a function along with the location of the PDF file. The function returns the contents of an FDF file. This can them be used to write an FDF file to download an view. The code behind this Code for using XFDF formatted data Code Download Because of the number of requests I have received for help getting this to work or copies of the code and PDF files, I have created a ZIP archive of this entire directory and am making it available for download (~180K - updated 2006-09-08). Inside this zip file you will also find a file named process-xfdf.php which contains sample code for sending results as an email attachment as well as sending the output directly to the browser. Updates Seriously, read these updates as they may have some additional information about what YOU are trying to accomplish 2011-01-18 Unbelievably, I am still getting a TON of email about this article. The most often-asked question I receive is how to send the result via email attachment. For those of you that missed it, check under the "Code Download" section of the article. I added that mid 2009. I will no longer reply to emails asking for an example of how to do this since the answer is right next to where you click to download. (There are a lot of people that don't take the time to read!) The next most frequent question is where to find the final PDF file. This process does not create a PDF file. It only creates FDF or XFDF files. However, there have been a few people nice enough to reply back to me with a solution after I explained that my code doesn't do it. While I have not tried it myself (as I haven't had the time or need to do so), PDFLabs' pdftk boasts "Fill PDF Forms with FDF Data or XFDF Data and/or Flatten Forms." If anyone wants to write a how-to for this process, give me a URL and I will link over to you. Alternatively, email it to me, and I will create a page to put up with this article as well. 2010-02-17 Minor update to the createXFDF function to allow for html entities in the values posted to the script. 2009-07-15 It has been a few years since I posted this and nearly as long since I have used it. However, I still get emails about this all the time. Apparently the programming is still useful for people to store the form data. I did receive an email about a month or so ago about a rogue line of code in the createXFDF function that was left over from the createFDF version of the function. Thank you AndreasDo&ouml;ler for bringing this to my attention. I have now updated the function and download appropriately. 2006-09-08 For those of you having problems with using PDF files created from Acrobat 7 or Designer, you'll be please to hear that I have an update for you. The problems were stemming from the way that the latest Acrobat, Acrobat Reader and Designer handle form data. Instead of using the previous FDF format, these programs are now defaulting to the newer XFDF file format. This is basically an XML-like file structure to define the values that would be filled into the fields. 2005-09-12 In the move from my last web server, I found that some of my files were corrupted, and this particular demonstrations was not working correctly. That should be all fixed up now. Also, I did update the createFDF function a little as well. It turned out that Acrobat 7 was having problems importing data into the PDF form if there were spaces in the field definitions inside the FDF file. I have removed those spacer, and tested on a couple simple files. I will test on a better file with more options when I have a chance. 2005-04-21 - Thanks to Adrian James for submitting information about the FDF format of a multiple value selection field ( &lt;select multiple="multiple"&gt; HTML equivalent). The createFDF function has now been updated to support these fields as well. process-xfdf.php: $v){ if(in_array($k,$text_fields)){ // this field was an "accepted" field // verify contents (these are single lines, so no \r or \n) if(preg_match('`[\r\n]+`',$v)){ $clean[$k]=''; // bad data - send empty }else{ $clean[$k]=$v; } }else{ // bad field option, we do nothing with this unset($_POST[$k]); } } // get the XFDF file contents $xfdf=createXFDF($pdf_file,$clean); // this seems to be the most popular request, so we will mail the xfdf to an account // this is the file attachment's name - you may want to customize this to fit your needs. $fileattname = "{$clean['__NAME__']}-{$clean['__PHONE__']}.xfdf"; $fileatttype = "application/vnd.adobe.xfdf"; $data=chunk_split(base64_encode($xfdf)); $mime_boundary = '==Multipart_Boundary_x'.md5(time()).'x'; $headers = "From: $from\n". "MIME-Version: 1.0\n". "Content-Type: multipart/mixed;\n". " boundary=\"{$mime_boundary}\""; $message = "This is a multi-part message in MIME format.\n\n". "--{$mime_boundary}\n". "Content-Type: text/plain; charset=\"iso-8859-1\"\n". "Content-Transfer-Encoding: 7bit\n\n". $message."\n\n". "--{$mime_boundary}\n". "Content-Type: {$fileatttype};\n". " name=\"{$fileattname}\"\n". "Content-Disposition: attachment;\n". " filename=\"{$fileattname}\"\n". "Content-Transfer-Encoding: base64\n\n". $data."\n\n". "--{$mime_boundary}--\n"; if(!mail($mailto,$subject,$message,$headers)){ // mail failed! mail( $mailto, 'ERROR in '.__FILE__, 'Unable to send xfdf file via attachment. Data follows:'."\n----- Begin -----\n$xfdf\n----- End -----\n" ); } $file_name=time().'-'.$fileattname; if(strlen($file_directory) && file_exists($file_directory) & is_writeable($file_directory)){ // if we have defined a writable directory on the server, write the results there as well $target=$file_directory.'/'.$file_name; if($fp=fopen($target,'w')){ fwrite($fp,$xfdf,strlen($xfdf)); fclose($fp); // mail notification of file creation mail($mailto,'XFDF file saved to server',$target); }else{ // can't open the file for writing... mail($mailto,'XFDF file cannot be saved',"File cannot be written to server: $target\n"); } }else if(strlen($file_directory)){ // can't use this directory - exists on server? writeable by web server process? mail($mailto,'XFDF file directory cannot be used',"File cannot be written to server directory: $file_directory\n"); } if(strlen($redirect)){ // success - redirect if a redirect url is provided header('Location: '.$redirect); exit; }else{ // if no redirect, we want to just send the data to the browser // send the XFDF headers for the browser header('Content-type: application/vnd.adobe.xfdf'); header('Content-Disposition: attachment; filename="'.$file_name.'"'); echo $xfdf; } }else{ die('This script is meant to be used in conjunction with the web forms on our website only.'); } ?> Can any of you guys help me? I desperately need help!
