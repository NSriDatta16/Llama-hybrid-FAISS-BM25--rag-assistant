[site]: stackoverflow
[post_id]: 2048870
[parent_id]: 2048857
[tags]: 
This is a common but tricky question. Personally I don't like overly fragmented dlls, as it makes it quite hard (IMO) to track and deploy. I prefer a limited number of more chunky dlls. In addition to project/dll management, this also reduces the amount of work "Fusion" has to do when loading things. You should obviously aim for reusable components, but just don't go mad making them too granular - consider "System.Windows.Forms.dll", for example; quite a lot in there! Vertically, the obvious ones to keep separate are UI / repository / logic concerns; horizontally I tend to have one column of dlls per logical area - but you can still compartmentalize that with namespaces , so you don't have to keep a dll to just one thing.
