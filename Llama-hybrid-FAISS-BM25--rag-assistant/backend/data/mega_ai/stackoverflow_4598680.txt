[site]: stackoverflow
[post_id]: 4598680
[parent_id]: 
[tags]: 
What am I doing wrong with Java generics in this interface and method?

EDIT: There is another wrinkle in here that I missed that turns out to make a big difference. The method signature of doAnotherThing is instead the following: T doAnotherThing(List > foo) { return foo.get(0).doSomething(); } Disregard the fact that it is a List , just pay attention to the fact that List is a generic class/interface. I'm calling the method like so: doAnotherThing(new ArrayList ); So, I have a class and interface defined like so: abstract class Bar { // some neat stuff } class BarImpl extends Bar { // some cool stuff } interface Foo { T doSomething(); } class FooImpl implements Foo { BarImpl doSomething() { // Does something awesome } } This is all fine and dandy and works great. Now, I have a method like so: T doAnotherThing(List > foo) { return foo.get(0).doSomething(); } This method is a generic method in a completely different class and is not part of the chain above. However, when I try to use this method in the following manner, I'm getting an error saying that the types don't match: doAnotherThing(new FooImpl()); FooImpl implements Foo , so I don't see how this is an error? Maybe I'm misunderstanding something? Thanks
