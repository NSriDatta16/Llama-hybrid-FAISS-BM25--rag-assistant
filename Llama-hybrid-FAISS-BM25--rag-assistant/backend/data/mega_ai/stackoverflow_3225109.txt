[site]: stackoverflow
[post_id]: 3225109
[parent_id]: 3225065
[tags]: 
There's a hundred different ways to solve this problem. The ASP.NET infrastructure includes something called ViewState , which allows the page and its controls to persist arbitrary data and objects across page views. There is a single , but you can have an unlimited number of links and buttons which submit the form in different ways - each one can trigger its own method when the page posts back . A simple way to leverage this in your case is to store the page parameter on the "next page" link. This is a very simple example that assumes you only need to know the page number, but it gets the point across: ... void Page_Load(object sender, EventArgs e) { if(!IsPostBack) { LoadData(0); } } void LoadData(int page) { //pull page of data from twitter & show on page next_page.CommandArgument = (page+1).ToString(); } void NextPage_Click(object sender, EventArgs e) { int page = int.Parse(((LinkButton)sender).CommandArgument); LoadData(page); } In this example we set the CommandArgument property of the LinkButton to the page index we want. The LinkButton triggers the NextPage_Click method to be called, and ASP.NET's ViewState infrastructure allows the CommandArgument value is persisted.
