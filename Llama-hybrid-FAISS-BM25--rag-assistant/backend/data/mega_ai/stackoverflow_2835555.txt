[site]: stackoverflow
[post_id]: 2835555
[parent_id]: 2835505
[tags]: 
Use a HTML parser like Jsoup . This has my preference above the other HTML parsers available in Java since it supports jQuery like CSS selectors . Also, its class representing a list of nodes, Elements , implements Iterable so that you can iterate over it in an enhanced for loop (so there's no need to hassle with verbose Node and NodeList like classes in the average Java DOM parser). Here's a basic kickoff example (just put the latest Jsoup JAR file in classpath): package com.stackoverflow.q2835505; import org.jsoup.Jsoup; import org.jsoup.nodes.Document; import org.jsoup.nodes.Element; import org.jsoup.select.Elements; public class Test { public static void main(String[] args) throws Exception { String url = "https://stackoverflow.com/questions/2835505"; Document document = Jsoup.connect(url).get(); String question = document.select("#question .post-text").text(); System.out.println("Question: " + question); Elements answerers = document.select("#answers .user-details a"); for (Element answerer : answerers) { System.out.println("Answerer: " + answerer.text()); } } } As you might have guessed, this prints your own question and the names of all answerers.
