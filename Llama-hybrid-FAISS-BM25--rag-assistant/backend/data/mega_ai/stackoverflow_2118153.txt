[site]: stackoverflow
[post_id]: 2118153
[parent_id]: 2117959
[tags]: 
for example, NSXMLParser delegate methods - they exist, the delegate is defined, but I dont want to call them as self in my view controller... what other option do I have? You can specify another custom class to handle the delegate methods, if you wish. Simply create a class, call it MyXMLParserDelegate or something similar. Then, all you have to do is tell your NSXMLParser object that it should use an instance of your class as its delegate. If you are using Interface Builder, add a new object to the XIB file, set its class to MyXMLParserDelegate , and then drag a connection from your NSXMLParser object's delegate selector to the new object. If you are doing it programmatically, the basic operation looks like this: MyXMLParserDelegate * myDelegate = [[MyXMLParserDelegate alloc] init]; [someXMLParser setDelegate:myDelegate]; Keep in mind, however, that delegates are not retained, so in order to do this without leaking memory, you should add an ivar of type MyXMLParserDelegate to your viewController class, and then do the following: // in your @interface block: { ... MyXMLParserDelegate * myDelegate; } // in your init method: myDelegate = [[MyXMLParserDelegate alloc] init]; // in your awakeFromNib method (or anywhere else it seems appropriate): [someXMLParser setDelegate:myDelegate]; // in your dealloc method: [myDelegate release];
