[site]: datascience
[post_id]: 6917
[parent_id]: 6911
[tags]: 
It depends on what your specific situation is - I think you need to add more detail for you to get a good answer on this. e.g. what problems are you experiencing with data storage currently? What are you trying to change or achieve in the future? Your data (you don't mention what exactly the data is, but I assume this is bank transactions, customer info etc?) will be in a traditional relational database management system (RDBMS), probably SQL based, for a very good reason - traditional RDBMSs are extremely good at transactional processing, i.e. being able to add new records, update and delete existing records, extremely quickly and without 'messing up' the data - e.g. if two updates on the same customer records occur almost simultaneously, the database system will order the updates correctly, 'lock' the relevant records to prevent conflicts, etc. so that you are never left with inconsistent data. That would be EXTREMELY bad for a bank - imagine if someone's bank account accidentally got overwritten with the wrong balance! This is generally referred to as OLTP (online transaction processing). For this reason I imagine most banks will continue to use these systems for many many years into the future, which are extremely mature, well tested, well understood, and there are tons of people to hire with the necessary skills. Also, to change the underlying storage system for a banking system would be extremely risky, hence why most banks run very old software - the risk of something going wrong by updating software is just too big. However, if you are talking about just wanting to produce analytical reports on this data, and keep the original source data as-is, then yes Hadoop may well be a useful system to investigate. The general idea will be to export your raw data from your banking system into HDFS for example, and use Hadoop to produce analytical reports. the benefit of this kind of system is that it may be much faster (and safer) to create a query such as 'what is the average bank balance of all my customers', without locking-up your source database system while the query runs (again, that would be really, really bad for a bank!). Hadoop and similar systems excel at this kind of task, generally called OLAP (offline analytical processing), but are no good at all for OLTP. Sounds like you need to really think about what you're trying to do here and do lots of research into the differences in OLAP and OLTP as a starter, and go from there. Hope that helps.
