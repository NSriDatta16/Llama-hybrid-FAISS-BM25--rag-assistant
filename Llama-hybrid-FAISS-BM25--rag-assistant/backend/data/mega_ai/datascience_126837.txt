[site]: datascience
[post_id]: 126837
[parent_id]: 
[tags]: 
PyG Autoencoder reconstruction loss criterion node vs link prediction

In link_pred.py they use this criterion in computing the loss (which is like what we used in SRP). criterion = torch.nn.BCEWithLogitsLoss() https://github.com/pyg-team/pytorch_geometric/blob/master/examples/link_pred.py . see line 52. In the auto-encoder example, they reference the use of positive and negative edges but don't use the same criterion in computing the reconstruction loss. See line#98 and then line#101. In 98 they do make reference to pos_edges which makes sense. In the test function the pass both pos & neg edges so this hints to an architecture typically seen in Link prediction. Since the loss is not calculated using torch.nn.BCEWithLogitsLoss and since the AEs imported in line 9 are built on GCN layers ... does that imply that the AE is canonically built as node classification criterion for the reconstruction loss ? https://github.com/pyg-team/pytorch_geometric/blob/master/examples/autoencoder.py
