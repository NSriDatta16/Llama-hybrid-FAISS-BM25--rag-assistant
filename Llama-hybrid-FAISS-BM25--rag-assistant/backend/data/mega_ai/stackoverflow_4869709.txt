[site]: stackoverflow
[post_id]: 4869709
[parent_id]: 4869382
[tags]: 
Okay, so I looked at some of your other questions, and I think I might have something that will work for you. For this to work, you will need to have a column in the database (I'll call it attachment_storage ) where you can store these attachments after you serialize them. Basically you want to get the attachments into an array first, and then serialize it into a string so that you can store it into the database. Here's some code to get that done. attachment_storage = [] (1..params[:attachments].to_i).each do |attachment_num| attachment_storage Here we're building the symbols for the params hash using the string and to_sym to turn it into a symbol like :attachment1 , :attachment2 , etc. Then you want to put in the database, so you can store it as noted in the [ActiveRecord Documentation][1] under the section "Saving arrays, hashes, and other non-mappable objects in text columns". In order for the serialization to work, you need to add serialize :attachment_storage to your model, and then to store it you would assign it just like any other parameter as above. Then save your model and it will be serialized for you.
