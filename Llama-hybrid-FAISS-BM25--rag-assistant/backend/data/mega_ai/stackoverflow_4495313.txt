[site]: stackoverflow
[post_id]: 4495313
[parent_id]: 4309032
[tags]: 
If you can't get the ContentPaneFactory suggested in Infragistics blog to fill the TabGroupPane through binding, you might consider these alternative approaches: keep your VM with BindableCollection in place, subscribe VM change notification in code-behind and change the TabGroupPane programmatically according to the actual change occurred in observed collection build a custom IResult and invoke it from VM (using Coroutine.Execute) according to the desired TabGroupPane variation. In IResult.Execute body you have access to ActionExecutionContext.View, so you can reach the TabGroupPane by name and operate whathever action you need on it. This way you keep your VM free from direct reference to the particular UI control library. define an interface abstracting the whole Docking Manager, and use it as a service from VM (see this post about the implementation of a Docking Manager ). This approach diverges quite a lot from the MVVM idea, but unfortunately most docking library are not very MVVM friendly...
