[site]: stackoverflow
[post_id]: 5527100
[parent_id]: 
[tags]: 
Why does maven not copy the properties files during the build process?

Nothing I've found has been able to help me solve this one specific case. I recently switched from a plain old java web app project (which was working) to a maven web project. I get the following runtime exception: java.util.MissingResourceException: Can't find bundle for base name com.myapp.config, locale en I am using Netbeans to create a JSF 2.0, Spring, and Hibernate web app. I have the following directory structure: src\main\java\com\myapp Contains config.properties src\main\resources Empty target\myapp\WEB-INF\classes\com\myapp Contains compiled class files without config.properties src\main\java\com\myapp Contains config.properties Inspection of the WAR file in the target folder does not show any sign of the properties file so it's as if the Maven build plug-in is not copying over properties files. I know there is a tag you can place inside the pom but it didn't work for me. The link below mentions that the resources folder (empty for me) has its contents included during the build but if that is the case, how do you do it from Netbeans? I just want the properties file to be packaged with my war so it is accessible when it is deployed to the server. http://maven.apache.org/plugins/maven-war-plugin/examples/adding-filtering-webresources.html pom.xml: 4.0.0 com.myapp myapp war 1.0-SNAPSHOT myapp http://maven.apache.org java.net Repository hosting the Java EE 6 artifacts http://download.java.net/maven/2 javax.faces jsf-api 2.1 provided javax javaee-web-api 6.0 provided org.springframework spring-hibernate3 2.0.8 com.amazonaws aws-java-sdk 1.1.8 net.authorize java-anet-sdk 1.4.2 mysql mysql-connector-java 5.1.15 junit junit 3.8.2 test org.apache.maven.plugins maven-compiler-plugin 2.3.2 1.6 1.6 org.apache.maven.plugins maven-war-plugin 2.1.1 false ${artifactId} endorsed sun.boot.class.path org.apache.maven.plugins maven-compiler-plugin ${settings.localRepository}/javax/javaee-endorsed-api/6.0/javaee-endorsed-api-6.0.jar${path.separator}${sun.boot.class.path} javax javaee-endorsed-api 6.0 gfv3ee6
