[site]: stackoverflow
[post_id]: 1046209
[parent_id]: 1046068
[tags]: 
The last time I looked at the Java language spec, it contained a ridiculous gotcha in the section on integer boxing. Integer a = 100; Integer b = 100; System.out.println(a == b); That is guaranteed to print true . Integer a = 300; Integer b = 300; System.out.println(a == b); That is not guaranteed to print true . It depends on the runtime. The spec left it completely open. It's because boxing an int between -128 and 127 returns "interned" objects (analogous to the way string literals are interned), but the implementer of the language runtime is encouraged to raise that limit if they wish. I personally regard that as an insane decision, and I hope they've fixed it since (write once, run anywhere?)
