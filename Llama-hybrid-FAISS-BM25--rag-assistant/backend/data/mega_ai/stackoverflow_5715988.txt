[site]: stackoverflow
[post_id]: 5715988
[parent_id]: 
[tags]: 
Mixed C++/CLI code with Berkeley DB

I'm traying to use Berkeley DB in C++/CLI with /clr mode. I wrote this code: Edit: // DB_test1.cpp : main project file. #include "stdafx.h" #pragma comment(lib,"libdb51") using namespace System; using namespace System::Runtime::InteropServices; int main(array ^args) { Db SigDb(0,0); unsigned int oFlags= DB_CREATE; SigDb.open(NULL,"SigDb.db",0,DB_BTREE,oFlags,0); String^ HexSig="D8B1048900ABFF8B"; wchar_t* a=( wchar_t* )Marshal::StringToHGlobalUni(HexSig).ToPointer() ; wchar_t* A=( wchar_t* )Marshal::StringToHGlobalUni(HexSig).ToPointer();; Dbt key1(&a,100); Dbt data1(&A,100); Marshal::FreeHGlobal(IntPtr(A)); int ret= SigDb.put(NULL,&key1,&data1, DB_NOOVERWRITE); if(ret==DB_KEYEXIST){ Console::WriteLine("You are trying to insert an exist key!"); } wchar_t DDData[200]; Dbt getKey, getData; getKey.set_data(&a); getKey.set_size(100); getData.set_data(DDData); getData.set_ulen(200); getData.set_flags(DB_DBT_USERMEM); Marshal::FreeHGlobal(IntPtr(a)); if(SigDb.get(NULL,&getKey,&getData,0)==DB_NOTFOUND) Console::WriteLine("Not Found !"); else Console::WriteLine(" {0}",Marshal::PtrToStringUni((IntPtr)DDData)); return 0; } The code is compiled successfully but it shows wrong output. I am just traying to store String^ HexSig="D8B1048900ABFF8B"; in SigDb.db and then directly read the same string and print it!. The result does not appear like D8B1048900ABFF8B as it expected, but it appears as a random string. Any ideas? After Editing: This segment of code is always executed Console::WriteLine("Not Found !");
