[site]: stackoverflow
[post_id]: 2621876
[parent_id]: 2621525
[tags]: 
A DBMS is a database management system. There are two crucial features a DBMS must provide: storing data standardised access to the data The second function is the crucial one. I can connect to a DBMS with a generic client (e.g. through JDBC and discover the organisation of the data stored therein. I can do this because a real DBMS maintains metadata - data about the date it stores - in a data dictionary or an INFORMATION_SCHEMA. So we can see that flat files do not constitute a DBMS. They handle the first part, persistence, easily enough, but they fail on the second: only the application (or person) which wrote the data can interpret the data structure. This means that spreadsheets don't count as a DBMS either (although a case can be made for XML files). An RDBMS is a particular type of DBMS which implements Codd's famous Twelve Rules . Many database theoreticians would arge that the products you list (Oracle, MySQL, MS Access) are examples of SQL DBMS rather than RDBMS because they fail to satisfy two or more of Codd's rules: they all fail Rule 0 and then at least one other rule. There are other types of DBMS. There is the hierarchical form, of which the most venerable is MUMPS . There are object-oriented OODBMS, such as Intersystems Cache . There are network (graph) DBMS e.g. IDMS and Neo4J . And thene there's the whole raft of other NoSQL databases most of which probably qualify as DBMSes.
