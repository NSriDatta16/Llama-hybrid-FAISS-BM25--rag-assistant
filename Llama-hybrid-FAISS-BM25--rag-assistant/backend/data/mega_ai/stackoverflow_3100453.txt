[site]: stackoverflow
[post_id]: 3100453
[parent_id]: 3044912
[tags]: 
Its surprisingly easy to do this: You need to, firstly, average all your vertices. This gives you the center position. This is done as follows in C++ (Sorry my C# is pretty rusty but it should give ya an idea): D3DXVECTOR3 avgPos; const rcpNum = 1.0f / (float)numVerts; // Do this here as divides are far more epxensive than multiplies. int count = 0; while( count Now you need to go through every vert and work out which vert is the furthest away from the center point. Something like this would work (in C++): float maxSqDist = 0.0f; int count = 0; while( count maxSqDist ) { maxSqDist = sqDist; } count++; } const float radius = sqrtf( maxSqDist ); And you now have your center position (avgPos) and your radius (radius) and, thus, all the info you need to define a bounding sphere.
