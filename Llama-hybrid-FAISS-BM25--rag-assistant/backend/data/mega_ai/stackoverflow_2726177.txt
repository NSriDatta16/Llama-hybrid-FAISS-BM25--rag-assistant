[site]: stackoverflow
[post_id]: 2726177
[parent_id]: 2726130
[tags]: 
Just some remarks. while(!in.eof()) This will not stop the inside of the loop from seeing an EOF error. You want while ( in >> readInt ) Also, if(this->front == NULL) and void DLLIntStorage::insertion(int inValue) { node* temp; temp = this->front; if(temp->value >= inValue) do not mix. Either the front can be NULL, or it cannot. Likewise, you need to decide whether to use temp->next!=NULL or temp!=this->back , but not both, as a loop termination condition. My guess would be that some inconsistency between multiple linking conventions is causing the errant value to get pushed into the middle of the list.
