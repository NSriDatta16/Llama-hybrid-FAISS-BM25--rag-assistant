[site]: stackoverflow
[post_id]: 5612138
[parent_id]: 
[tags]: 
Hashing and access

I want to use hashed storage for my objects. Is this really faster, than std::map ? I mean searching. As I know, boost process a lot of optimizing. And I'm not sure my code is right. Does it really use hashed keys when searching/inserting, etc? using boost::multi_index_container; using namespace boost::multi_index; struct Object { std::string name; Object(std::string name_): name(name_) {} }; typedef multi_index_container > > ObjectSet; ObjectSet objects; objects.insert(Object("test1")); objects.insert(Object("test2")); objects.insert(Object("test3")); // And testing: objects.find("test2");
