[site]: stackoverflow
[post_id]: 5218879
[parent_id]: 
[tags]: 
C# multi-thread ping

I'm working on a network monitoring application, that pings a (not known) number of hosts. So far I have the code below. I've made a class PingHost with a function zping and I called it with the help of a timer once every 2 seconds to let the 2 pings to finish, even if one of them gets TimedOut . But I think a better solution is to generate a new thread for every ping, so that the ping of every host would be independent. Can anyone give me a hint how to do this? namespace pinguin { public partial class Form1 : Form { public Form1() { InitializeComponent(); } private void timer1_Tick(object sender, EventArgs e) { PingHost caca = new PingHost(); PingHost caca1 = new PingHost(); this.label1.Text = caca.zping("89.115.14.160"); this.label2.Text = caca1.zping("89.115.14.129"); } } public class PingHost { public string zping(string dest) { Application.DoEvents(); Ping sender = new Ping(); PingOptions options = new PingOptions(); options.DontFragment = true; string data = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"; byte[] buffer = Encoding.ASCII.GetBytes(data); int timeout = 50; int failed = 0; int pingAmount = 5; string stat = ""; PingReply reply = sender.Send(dest, timeout, buffer, options); if (reply.Status == IPStatus.Success) { stat = "ok"; } else { stat = "not ok!"; } return stat; } } }
