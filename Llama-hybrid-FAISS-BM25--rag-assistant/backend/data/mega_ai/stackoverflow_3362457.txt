[site]: stackoverflow
[post_id]: 3362457
[parent_id]: 1361396
[tags]: 
It irritates me when PLC programming is viewed with scorn by so-called "real" programmers. Several posts here have hinted at the basic fact that PLC programming is a discipline unto itself. "Understand that PLC programming is about control and feedback in realtime. Most standard programming langauges (e.g. Java) address this poorly if at all." "So people starts to come out with analysis tools for consequence & logic contradiction checking, separate temporal & state modeling, etc, actually not making things simpler, and is deviating from engineering principle of problem space reduction." To insinuate that ladder logic is the "discipline time forgot" is to disparage the tool for performing it's function. After all, Ladder was the first language to actually represent physical devices in software - it's the birthplace of object-oriented programming as a paradigm. Additionally, let us not forget that the PC, and PC-based controls is entirely untrustworthy. It crashes; componenet go obsolete and cannot be purchased within the space of a few years, at best; it crashes; it gets corrupted by viruses and people putting "Donkey Kong" on their work-stations; it crashes; bored operators un-install the software on third shift; and did I mention, it crashes? PLCs continue to exist after so many years of so-called "advancement" in the PC world because to this day, PCs are still bug-addled disposable commodities. And your multi-million dollar assembly line is not. Lastly, I hold up the humor test - The part that cracks me up is seeing IT guys trying to write PLC code. The never-ending question (literally and figuratively) that we seem to get is, "Why do I get a watchdog error when I jump back to the start of the program?" Or another personal favorite - "How do I write a for-next loop in ladder?" Both betray a fundamental lack of knowledge about how PLCs work, and further serve to illustrate that automation programming is a separate discipline, requiring separate tools. TM
