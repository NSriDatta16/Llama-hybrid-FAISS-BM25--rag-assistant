[site]: crossvalidated
[post_id]: 221814
[parent_id]: 
[tags]: 
Which is the best classifier and with what performance measures?

I tried to implement a Classifier comparison like in the scikit-learn for text classification. I used an 81 instances as a training sample and a 46 instances as a test sample. I tried several situation with three classifier the K-Nearest Neighbors, the Random Forest Classifier and the Decision Tree Classifier. To measures theirs performance I used different performance measures. Edit 2: As PhilippPro mentioned in his comment, there was indeed a problem in my experiment, I repeated the experiment by considering an 81 samples that was found by an unsupervised classification as a first train model and a 13 samples labeled manually as a second train sample to test a 46 samples. In the end this is what I got. So my question is, could I say with certitude that the best classifier in this situation is the Decision Tree Classifier with an F1-score of 82.02%. Edit 1: Like in the comment of halilpazarlama I considered the idea of Cross Validation which i found in the [Cross_validation_sklearn] for only the 46 samples (I was wrong before) with the code below: # Cross Validation def cross_validation_score(model): text_clf = Pipeline([('vect', CountVectorizer()), ('tfidf', TfidfTransformer()), ('clf', model),]) #text_clf = text_clf.fit(X_train, Y_train) #Y_pred = text_clf.predict(X_test) return cross_validation.cross_val_score(text_clf, X_test, Y_pred, cv=7) print('\n################Cross Validation Score###########\n') for i in models: scores=cross_validation_score(models[i]) print(i + ':\n' + str(scores)) print("Accuracy: %0.2f (+/- %0.2f)" % (scores.mean(), scores.std() * 2)) print('#######################################\n') and this is the result that I got for the three classifier: K-Nearest Neighbors: [ 87.5 37.5 62.5 71.42857143 80. 60. 40. ] Accuracy: 62.70 (+/- 35.04) # Random Forest Classifier: [ 87.5 87.5 87.5 100. 100. 100. 60. ] Accuracy: 88.93 (+/- 26.30) # Decision Tree Classifier: [ 87.5 87.5 87.5 100. 100. 100. 100. ] Accuracy: 94.64 (+/- 12.37) # Sorry but I am a little confused, does it mean that I got an accuracy of 95% with the Decision Tree Classifier for a supervised classification. What did change exactly? Thanks
