[site]: stackoverflow
[post_id]: 1264063
[parent_id]: 1263886
[tags]: 
Where did you, or would you, draw the line on taking the "next step" in building an architecturally sound, and scalable system? I don't understand this part of the question. What are some of the factors you consider while designing the architecture for a new project? Do you have a consistent project design you often use, are you n-tier from the start, or do you evaluate as each project comes in? I've been fortunate enough to do almost all of my work in small teams, and unfortunate enough to do almost all of it on teams with high turnover. I've learned never to try to architect a system all by myself ; results are better with a team effort. Sometimes we've done rapid prototyping, but if the team is good I've found that you can get surprisingly far with a whiteboard, index cards, and a paper design. We definitely do not have a consistent project design; each architecture is potentially one-off for the project—but I've worked almost exclusively in research and advanced development. Factors considered: Does the team think the architecture will get the job done? Trumps all other considerations. Can the architecture be easily learned by junior team members or newcomers? Other groups will steal your best people, they will leave to start companies. In one case we had a group that was just too busy servicing field requests to learn a new architecture, even though the architecture they had was holding them back. Does the structure of the architecture reflect the structure of the organization that needs to create it? :-) Somewhat tongue in cheek, but we need to believe we can build it with the people and the time we have, not the perfect development team. So being able to identify pieces of the architecture that match with individuals is a good thing. Are there parts we don't understand—or worse, are there parts we're afraid of? If so, major red flags. Is it beautiful? Is it something we'd be proud to talk about at lunch with people from other teams? If not, the design/architecture probably isn't good enough yet. Is there an identifiable new idea? Something that others can learn from? (This is important in a research environment, but I suspect not important elsewhere.)
