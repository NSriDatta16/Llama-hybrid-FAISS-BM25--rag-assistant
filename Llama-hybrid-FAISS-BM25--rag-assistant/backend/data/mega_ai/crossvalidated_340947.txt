[site]: crossvalidated
[post_id]: 340947
[parent_id]: 
[tags]: 
How to use convolutional neural nets on 'cylindrical images'

Suppose I have a data-set of images that 'live on a cylinder' (for example, if my images were taken by panorama shots that wrap around onto themselves). How would I modify a convolutional neural network to take this into account? A few simple 'hacks' I can imagine performing (and why I consider them not as full solutions): Currently, I am representing the cylindrical image as a rectangular image (with a cut along the cylinder), and then 'cylindrically padding' by taking the leftmost few columns and adding them to the right: the idea being that now the network has access to the information that the star is near the 1, but this doesn't 'actually work' in my mind, like it might work for the first convolutional layer, but if I have multiple layers it seems that I actually want my network architecture to reflect the cylindrical symmetry Do the same rectangular representation as above, but augment my data-set by taking each image and rotating it about the cylindrical axis pixel by pixel. Again, this feels like a hack and not a real solution I'm using Keras, and am mostly interested in 'practical solutions', I would have thought Keras would have an option to deal with this situation (maybe like cylindrical padding or something) but I can't find any. The next idea I had in my mind was to write my own Keras layers to deal with this problem (modifying the existing convolutional/pooling layers) but I'm not sure how to start
