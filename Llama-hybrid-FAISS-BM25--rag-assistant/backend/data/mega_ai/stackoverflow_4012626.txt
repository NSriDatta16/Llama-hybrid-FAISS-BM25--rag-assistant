[site]: stackoverflow
[post_id]: 4012626
[parent_id]: 3675929
[tags]: 
Do you happen to cache the credential cache? If not, you can neglect all the following:) I don't know which authentication mode you choose, here I have an sample using Windows authentication mode in my iphone app. When server side challenges client side, my app will send back a NSURLCredential object: NSURLCredential* credential = [NSURLCredential credentialWithUser:login password:password persistence:NSURLCredentialPersistenceForSession]; Here you can see the parameter NSURLCredentialPersistenceForSession, following are the description: typedef enum { NSURLCredentialPersistenceNone, // Credential won't be stored. NSURLCredentialPersistenceForSession, // Credential will be stored only for this session. NSURLCredentialPersistencePermanent // Credential will be stored in the user’s keychain and shared with other applications. } NSURLCredentialPersistence; As you can see, if you use NSURLCredentialPersistenceForSession， the credential will be cached, and the callback connection: didReceiveAuthenticationChallenge: will never be called when server challenges client unless you clear it in NSURLCredentialStorage. So this makes your change of credential useless. You can use NSURLCredentialPersistenceNone to disable the cache or clear the cache when necessory.
