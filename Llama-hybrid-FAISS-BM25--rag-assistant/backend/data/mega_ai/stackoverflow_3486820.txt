[site]: stackoverflow
[post_id]: 3486820
[parent_id]: 3486806
[tags]: 
I assume you are talking about theList.BinarySearch(2) , because 1 exists and the return value should be 0 . The bitwise complement operator does not produce the same effect as negating the integer, which I think is the source of your confusion. In any case, you do not need to understand how the operator works to accurately branch on the search-result; the MSDN paragraph in your question, and the fact that ~~a = a , directly implies this snippet: int index = theList.BinarySearch(num); if (index >= 0) { //exists ... } else { // doesn't exist int indexOfBiggerNeighbour = ~index; //bitwise complement of the return value if (indexOfBiggerNeighbour == theList.Count) { // bigger than all elements ... } else if (indexOfBiggerNeighbour == 0) { // smaller than all elements ... } else { // Between 2 elements int indexOfSmallerNeighbour = indexOfBiggerNeighbour - 1; ... } }
