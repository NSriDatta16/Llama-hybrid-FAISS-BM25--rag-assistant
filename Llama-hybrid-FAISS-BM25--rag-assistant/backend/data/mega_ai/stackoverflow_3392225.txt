[site]: stackoverflow
[post_id]: 3392225
[parent_id]: 3391639
[tags]: 
You could do this in O(n*k^2) (n is the number of people, k is the average number of items they have/want) by keeping hash tables (or, in a database, indexes) of all the people who have and want given items, then giving scores for all the people who have items the current user wants, and want items the current user has. Display the top 10 or 20 scores. [Edit] Example of how this would be implemented in SQL: -- Get score for @userid wants SELECT UserHas.UserID, SUM(Items.Weight) AS Score FROM UserWants INNER JOIN UserHas ON UserWants.ItemID = UserHas.ItemID INNER JOIN Items ON Items.ItemID = UserWants.ItemID WHERE UserWants.UserID = @userid GROUP BY UserWants.UserID, UserHas.UserID This gives you a list of other users and their score, based on what items they have that the current user wants. Do the same for items the current user has the others want, then combine them somehow (add the scores or whatever you want) and grab the top 10.
