[site]: datascience
[post_id]: 122295
[parent_id]: 
[tags]: 
Approaches to improve the performance in defect prediction of source code?

I have the task to do defect detection on C source code (on function level) starting from this repo (using RoBERTa): https://github.com/microsoft/CodeXGLUE/tree/main/Code-Code/Defect-detection It does already have a working pipeline to train the model. I have adapted it a little to run in a Jupyter notebook but that's all so far. Now I need to add "my own idea" to that, like doing something more than just running their code. I thought of adding AST information to the embeddings or in a layer of the model, however creating an ast of c code given just the function is a little too tricky. Do you have any other ideas on what I could add / do differently than just plain training?
