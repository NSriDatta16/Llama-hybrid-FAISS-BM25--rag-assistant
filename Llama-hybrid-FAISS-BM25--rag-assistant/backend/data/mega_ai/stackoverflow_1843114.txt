[site]: stackoverflow
[post_id]: 1843114
[parent_id]: 
[tags]: 
Making a superclass have a static variable that's different for each subclass in c#

Without any code in the subclasses , I'd like an abstract class to have a different copy of a static variable for each subclass. In C# abstract class ClassA { static string theValue; // just to demonstrate public string GetValue() { return theValue; } ... } class ClassB : ClassA { } class ClassC : ClassA { } and (for example): (new ClassB()).GetValue(); // returns "Banana" (new ClassC()).GetValue(); // returns "Coconut" My current solution is this: abstract class ClassA { static Dictionary theValue; public string GetValue() { return theValue[this.GetType()]; } ... } While this works fine, I'm wondering if there's a more elegant or built-in way of doing this? This is similar to Can I have different copies of a static variable for each different type of inheriting class , but I have no control over the subclasses
