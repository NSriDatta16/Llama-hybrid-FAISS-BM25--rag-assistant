[site]: stackoverflow
[post_id]: 713589
[parent_id]: 713490
[tags]: 
I like both of these: Don't pass in an IDataStore to the GizmoManager and WidgetManager constructors. Bad because it reduces testability (you can't easily pass in a MockDataStore). Do something magic with factories. Doesn't seem to solve anything because you need to pass the same IDataStore to both GizmoManager and WidgetManager and thus the client assembly still needs to assign an IDataStore to a variable (which it can't because IDataStore is internal). To solve testability but hide implementation, the public interface should only offer the option of whether the stores should be live, testable, pre-prod etc. So you could delegate responsibility for correct IDataStore construction to another party that is inside the assembly. E.g. a factory concept that only allows you to set "testing", "deploy", "debug", etc. Have default constructors (or singletons or whatever) that refer internally to the factory for the correct storage given the "mode" setting.
