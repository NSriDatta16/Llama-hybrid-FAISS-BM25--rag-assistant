[site]: stackoverflow
[post_id]: 836006
[parent_id]: 835893
[tags]: 
As gbjbaanb mentioned , you can do this easily - it just requires a pragma statement to parallelize this. However, there are a few things to watch out for: First, you mention that order is crutial here. If you need to preserve ordering in flattening a hierarchical structure, parallelizing (at this level) is going to be problematic. You're likely going to completely lose your ordering. Also, parallelizing recursive functions has many problems. Take an extreme case - say you have a dual core machine, and you have a tree where each "parent" node has 4 children. If the tree is deep, you very, very quickly "over-parallelize" the problem, typically making things worse, not better, performance wise. If you're going to do this, you should probably put a level parameter, and only parallelize the first couple of levels. Take my 4 child-per-parent example, if you parallelize the first 2 levels, you already are breaking this into 16 parallel chunks (called from 4 parallel chunks). From what you mentioned, I'd leave this portion serial, and focus instead of the second where you mention: "Then it traverses that array multiple times to draw objects/overlays, etc." That sounds like an ideal place to parallelize.
