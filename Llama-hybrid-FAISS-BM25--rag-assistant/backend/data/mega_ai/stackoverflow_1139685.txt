[site]: stackoverflow
[post_id]: 1139685
[parent_id]: 1139582
[tags]: 
Your build process must include a production build with unit tests executed against it. If it does not, you cannot guarantee that someone hasn't slipped up with pragmas (release vs. debug for example). What I always do in the case of logging is use Log4Net . During development and testing the log messages are set at the most verbose level, and in production I tend to leave them in error or info level, but set to more verbose for troubleshooting as necessary. IMO the best way to perform what you are trying to accomplish with SetLogWriter is actually to use a inversion of control container, like StructureMap , to assign concretes at runtime based on various configurations. During unit test time you can use a library like Moq to manufacture concretes that behave in an expected manner (a SQL query which always returns the same exact result) though in your particular case you are performing just the opposite (desired logging during unit tests vs. no logging at production run time).
