[site]: crossvalidated
[post_id]: 584120
[parent_id]: 584114
[tags]: 
Don't fit an ARIMA model by hand. It's much better to rely on a tested software implementation, like the forecast and fable packages for R. library(forecast) tickets Don't take the labels on the horizontal axis seriously. They are very probably off, since I don't know on what precise date your series starts. The point is that the likely weekly seasonality of your ticket sales is not overly blatant, but one day ("Friday" in the plot, but per above, that may well be a different day, probably Sunday) does show systematically lower sales. So there is probably some seasonality in here. Fit a model using auto.arima() . This searches through models based on seasonality tests and information criteria. It is the gold standard for automatic time series forecasting. I believe that there is a reimplementation in the pmdarima package for Python. model_arima auto.arima() fits a SARIMA model, with a decaying seasonal forecast. This makes sense, but it is not very good - as we see, the actuals leave the prediction intervals quite often. Here are accuracy measures: > accuracy(fcst_arima, test) ME RMSE MAE MPE MAPE MASE ACF1 Theil's U Training set -0.5000957 23.73706 19.00397 -64.26156 89.02182 0.8079806 -0.01727246 NA Test set 17.2089423 43.91135 35.64475 -75.64584 128.12766 1.5154873 0.50709598 0.6938199 Since your series is very noisy and the prediction intervals indeed go below zero (nonsensically), I would completely disregard the MAPE and rather trust the RMSE. We can also fit an exponential smoothing model: model_ets This looks a little more sophisticated. The seasonal forecast does not decay, as the ARIMA one does. However, the accuracy is almost exactly the same: > accuracy(fcst_ets, test) ME RMSE MAE MPE MAPE MASE ACF1 Theil's U Training set -0.792637 25.35551 19.49958 -51.77954 77.60262 0.8290523 0.2308526 NA Test set 16.393501 43.86697 36.97665 -72.40524 129.73652 1.5721147 0.4747224 0.8154524 It looks like your series is just not very forecastable. If you get explanatory information on what drives ticket sales, you may be able to improve on these pure time series methods. How to know that your machine learning problem is hopeless? The tag wiki for the forecasting tag contains pointers to both introductory and advanced literature, all of it freely accessible.
