[site]: stackoverflow
[post_id]: 138137
[parent_id]: 137868
[tags]: 
The final modifier, especially for variables, is a means to have the compiler enforce a convention that is generally sensible: make sure a (local or instance) variable is assigned exactly once (no more no less). By making sure a variable is definitely assigned before it is used, you can avoid common cases of a NullPointerException : final FileInputStream in; if(test) in = new FileInputStream("foo.txt"); else System.out.println("test failed"); in.read(); // Compiler error because variable 'in' might be unassigned By preventing a variable from being assigned more than once, you discourage overbroad scoping. Instead of this: String msg = null; for(int i = 0; i You are encouraged to use this: for(int i = 0; i Some links: The final story (free chapter of the book "Hardcore Java") Some final patterns Definite assignment
