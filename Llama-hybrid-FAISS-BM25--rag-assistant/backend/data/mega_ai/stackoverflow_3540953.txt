[site]: stackoverflow
[post_id]: 3540953
[parent_id]: 3540209
[tags]: 
I would do it in the business logic layer, with a business logic class that is different from the database related classes. I wouldn't bubble up the sql error or even enforce it in the database. In my opinion the database should only be concerned with the shape and consistency of the data. Not with the actual data itself. Your rule about 50 characters is a business rule, not a logical, relational or "structural" rule. It could just as easily be 51 characters or 49. You arbitrarily picked 50, which is fine. That is what the business layer objects are there for. To enforce those rules. Any business access to your data, should again be through the business layer, exposed via services, direct reference or some other method you choose. The only "direct" access to your database should again be things which care about the shape and consistency of your data, not the actual data itself. Things like backup, replication, clustering, load balancing, auditing etc. So the ORM classes are just the glue between a business object of Person and the storage of Person in an actual database. The database should only care about the overall shape and structure of the database and the underlying infrastructure and mechanics of the actual data storage. The business object should determine the "nature" of the object and define what it truly is. That a Person should always have at least a firstname, that their age cannot be greater than 110 years, their height cannot be more than 7 feet, etc. etc. Thats my philosophy/rule of thumb anyway :-)
