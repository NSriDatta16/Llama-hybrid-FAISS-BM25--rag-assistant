[site]: crossvalidated
[post_id]: 106057
[parent_id]: 
[tags]: 
Creating classification features from wavelet transformed time series

I'm interested in using a wavelet transform, Haar for example, to create classification variables from time series data to use in logistic regression. Simple example. Let's say I'm trying to predict payment defaults and I have a person's monthly expense data and I know that someone with consistent expenses is better than someone with increasing expenses in the the most recent 4 months. If I have two sample borrowers: Borrower A - Good - expensesA = c(100,110,95,105), default = 0 Borrower B - Bad - expensesB = c(75,100,150,200), default = 1 If I am using logistic regression to create a classification model, using the R wavelets package dwt() function for a "haar" transform of the time series I get the features below. W s are wavelet coefficients and the V s the scaling coefficients. Do I need to use all four W1 and V1 values as variables to properly model this or is it okay to try just the W1 s without V1 s (or vice versa)? Is it worthwhile to try only the single W2 and V2 s as variables? Or is it better to try to use a clustering algorithm and label them based on clusters created from these coefficients? I know it of course also depends on the data, but I'm looking for a starting point regarding best practices. tr = dwt(expensesA, filter = "haar") tr An object of class "dwt" Slot "W": $W1 [,1] [1,] 7.071068 [2,] 7.071068 $W2 [,1] [1,] -5 Slot "V": $V1 [,1] [1,] 148.4924 [2,] 141.4214 $V2 [,1] [1,] 205 Slot "filter": Filter Class: Daubechies Name: HAAR Length: 2 Level: 1 Wavelet Coefficients: 7.0711e-01 -7.0711e-01 Scaling Coefficients: 7.0711e-01 7.0711e
