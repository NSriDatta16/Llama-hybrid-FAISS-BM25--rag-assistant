[site]: stackoverflow
[post_id]: 1121654
[parent_id]: 1121628
[tags]: 
You simply want to use the Marshal.SizeOf method in the System.Runtime.InteropServices namespace. foreach (var fieldInfo in typeof(MyClass).GetFields(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)) { Console.WriteLine(Marshal.SizeOf(fieldInfo.FieldType)); } Do however take note of the following paragraph in the Remarks section: The size returned is the actually the size of the unmanaged type. The unmanaged and managed sizes of an object can differ. For character types, the size is affected by the CharSet value applied to that class. These differences are probably inconsequential though, depending on your purpose... I'm not even sure it's possibly to get the exact size in managed memory (or at least not without great difficulty).
