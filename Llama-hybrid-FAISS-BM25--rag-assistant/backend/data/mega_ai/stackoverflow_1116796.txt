[site]: stackoverflow
[post_id]: 1116796
[parent_id]: 1101144
[tags]: 
If you're using System.DirectoryServices ( .Protocols ) in .NET you could set the SearchScope to OneLevel to only search in the People-OU (and no child-OUs). But that won't work if you have any OU=Good,OU=People,DC=mydomain,DC=com ... The second option would be to query the People-OU for all sub-OU:s ( objectClass=organizationalUnit ) and then issue multiple search requests; one for each of them (except the "Evil" one). Edit: @geoffc - that will be really difficult to implement. By default all authenticated users have read access to all objects in Active Directory. Just setting a "Deny Read" on the Evil OU won't do the trick because the read right for authenticated users is set on the individual user object (in this case) and thus has precedence over the Deny ACL set on the OU. You will essentially have to set the Deny Read ACL on each of the objects in the Evil-OU and always make sure new objects added to the directory get the same Deny rights set. You could edit the Active Directory schema and remove the rights for Authenticated Users but that will break a lot of other things (including Exchange) and is not supported by Microsoft.
