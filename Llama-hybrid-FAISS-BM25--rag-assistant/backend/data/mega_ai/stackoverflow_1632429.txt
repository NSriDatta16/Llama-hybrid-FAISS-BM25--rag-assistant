[site]: stackoverflow
[post_id]: 1632429
[parent_id]: 
[tags]: 
C - alternative to #ifdef

I'm trying to streamline large chunk of legacy C code in which, even today, before doing the build guy who maintains it takes a source file(s) and manually modifies the following section before the compilation based on the various types of environment. The example follows but here's the question. I'm rusty on my C but I do recall that using #ifdef is discouraged. Can you guys offer better alternative? Also - I think some of it (if not all of it) can be set as environment variable or passed in as a parameter and if so - what would be a good way of defining these and then accessing from the source code? Here's snippet of the code I'm dealing with #define DAN NO #define UNIX NO #define LINUX YES #define WINDOWS_ES NO #define WINDOWS_RB NO /* Later in the code */ #if ((DAN==1) || (UNIX==YES)) #include #endif #if ((WINDOWS_ES==YES) || (WINDOWS_RB==YES) || (WINDOWS_TIES==YES)) #include #include #include #endif /* And totally insane harcoded paths */ #if (DAN==YES) char MasterSkipFile[MAXSTR] = "/home/dp120728/tools/testarea/test/MasterSkipFile"; #endif #if (UNIX==YES) char MasterSkipFile[MAXSTR] = "/home/tregrp/tre1/tretools/MasterSkipFile"; #endif #if (LINUX==YES) char MasterSkipFile[MAXSTR] = "/ptehome/tregrp/tre1/tretools/MasterSkipFile"; #endif /* So on for every platform and combination */
