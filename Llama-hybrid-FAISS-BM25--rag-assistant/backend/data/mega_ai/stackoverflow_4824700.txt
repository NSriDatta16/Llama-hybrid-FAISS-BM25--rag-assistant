[site]: stackoverflow
[post_id]: 4824700
[parent_id]: 
[tags]: 
Rails: Storing static data like ActiveRecords

I've been looking for a while for gems and/or plugins that implement static storage similar ActiveRecords but is not database-based. Let's call this class NonDBRecord. It should have the following property: class Foo 'some value', :property2 => 'some more value') add_item('b', :property1 => 'some value', :property2 => 'some more value') end class Bar 'Foo' end # NonDBRecord declare constants automatically [ Foo::A, Foo::B ] # NonDBRecord is enumerable Foo.all # returns [Foo::A,Foo::B] # NonDBRecord is id-based Bar.create(:foo_id => Foo::A.id) # ...so you can search by it x = Bar.find(:first, :conditions => { :foo_id => Foo::A.id }) # ...and is stored, retrieved, and instantiated by its id x.foo # returns Foo::A I've thought about simply using ActiveRecords (and database storage), but I don't feel good about it. Plus I've had to tip-toe around some eager loading problems with the ActiveRecord solution. Any help would be appreciated before I start writing my own solution. edit These records are meant to be enumerations. For example, let's say you're making a card game. I want to be able to do something like class Card 'Card' end
