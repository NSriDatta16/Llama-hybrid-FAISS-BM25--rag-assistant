[site]: stackoverflow
[post_id]: 4742085
[parent_id]: 
[tags]: 
Use XMLReader to access child nodes with duplicate names

Using the XML fragment below, how would I access the child node of the node using XMLReader? If I iterate over the nodes looking for a node name of "amt" I return the last node amount of which is 0.00. 11883382 30.00 USD 60.00 USD 0.00 USD 1.00 USD 0.00 Is the code below even the best way to do this? Test Code: using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.IO; using System.Xml; namespace TestConsole { public class ParseXML { static void Main(string[] args) { try { FileStream file; XmlReader baseReader; XmlTextReader reader; XmlReaderSettings readerSettings; file = new FileStream(@"C:\Data.xml", FileMode.Open, FileAccess.Read); file.Seek(0, SeekOrigin.Begin); reader = new XmlTextReader(file, XmlNodeType.Element, null); reader.Normalization = false; readerSettings = new XmlReaderSettings(); readerSettings.ConformanceLevel = ConformanceLevel.Fragment; readerSettings.IgnoreWhitespace = false; readerSettings.IgnoreComments = true; readerSettings.CheckCharacters = false; baseReader = XmlReader.Create(reader, readerSettings); int x = 0; while (baseReader.Read()) { if (baseReader.Name.Equals("transactionUnit") && (baseReader.NodeType == XmlNodeType.Element)) { string amt = null; XmlReader inner = reader.ReadSubtree(); while (inner.Read()) { if (inner.Name.Equals("ns:amt")) { amt = inner.ReadElementString(); } } Console.WriteLine("amt: {0}", amt); inner.Close(); x = x + 1; } } Console.WriteLine("{0} transactions found", x.ToString()); baseReader.Close(); file.Close(); } catch (XmlException xe) { Console.WriteLine("XML Parsing Error: " + xe); } catch (IOException ioe) { Console.WriteLine("File I/O Error: " + ioe); } } } }
