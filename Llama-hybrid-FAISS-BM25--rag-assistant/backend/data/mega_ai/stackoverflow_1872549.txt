[site]: stackoverflow
[post_id]: 1872549
[parent_id]: 1846592
[tags]: 
I tried using both higher-abstraction level languages (matlab, java) and lower ones (C). Both using toolboxes and libraries and coding them myself. The overall response? Neither is the perfect tool. Please keep in mind that: a prototype might not be enough: often you need to run the network over large samples, or several times over a subset of samples (in case of evolving neural networks) to get decent results. If you have to run a network a million times, even a small performance gain might be a huge help and time-saver (i.e. C over matlab); if, on the other hand, you need ease of coding you might want to use one of the many pre-packaged libraries (javaNN, etc); what kind of neural network are you using? continuous-time recurring neural networks (CTRNN)? Backprop? How do you do train them? How do you verify their results? Is accuracy important? (i.e. are you running them on a small device, such as a memory-limited robotic control board, like Arduinos?) If you have time to spare, I'd suggest learn the concepts using a higher-level language, or even pseudocode first; once you are familiar with all intricacies, especially if using evolving neural networks, choose a language they are already familiar with then you might want to start researching how to optimize for speed, memory footprint, etc. Hope this helps.
