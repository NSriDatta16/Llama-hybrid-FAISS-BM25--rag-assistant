[site]: stackoverflow
[post_id]: 4626545
[parent_id]: 4626447
[tags]: 
Going back to straight SQL and ADO from an ORM inspired me to create a simple way to do data extraction rather than the way you're doing it (and the way I used to do it). There is a lot of code to show here but I will give you a brief overview of how you can take care of this. Create a Column class that inherits from Attribute On your Agent class decorate your Properties like so: [Column("is_active")] public bool IsActive { get; set; } [Column("user_id")] public int UserId { get; set; } From this point you should be able to get those custom attributes off of the class Properties and get a column and set a property value: property.SetValue(t, value, null); If you get this right, you should end up with something like: agent = dt.Rows[0].ExtractAs (); where the signature of that method could be: public static T ExtractAs (this DataRow row) where T : class, new() { /* map columns to properties */ }
