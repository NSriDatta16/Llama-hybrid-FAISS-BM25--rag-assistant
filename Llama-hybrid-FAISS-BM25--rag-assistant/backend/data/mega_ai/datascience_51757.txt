[site]: datascience
[post_id]: 51757
[parent_id]: 44727
[tags]: 
So, I can point a few things that may cause a sub-optimal result: Your model may be too simple. Although using CNNs, which are pretty much the state of the art in Neural Networks based image processing, you need to pay attention to the archietcture you are using. For instance, you can take a look into that paper , where the authors have used CNNs + residual learning to denoise images Your dataset isn't complex enough/isn't big enough. As far as you said, you have pre-trained the network on a much larger dataset, however, the notion of "large dataset" isn't precise enough. Maybe you don't have enough data to train the model. In that sense, it may be useful use a well documented existing architecture where you can compare your results with those reported, and see if you indeed have the data needed to train it. Another concern is about the noise on train/test data. If your model is to complex, and your data too poor, it may be memorizing the mechanics of denoising gaussian noise (which seems to be the noise component in your training data), and hence does not generalize good on Poisson noise. To solve this, you may consider change the noise component on the train data (if it was generated artificially), or getting a different dataset. Change losses, take a look on other metrics. Loss choice have a great impact on the final model, since they determine how the gradient is calculated. For instance, following Goodfellow, Bengio and Aaron reasoning on the book "Deep Learning", For example, mean squared error applied to the pixels of an image implicitly specifies that an underlying cause is only salient if it significantly changes the brightness of a large number of pixels. This can be problematic if the task we wish to solve involves interacting with small objects. Goodfellow, Ian, Yoshua Bengio, and Aaron Courville. Deep learning. MIT press, 2016. Hence, despite looking into RMSE, I may recommend Peak to Signal Noise Ratio ( PSNR ) or Structural Similarity ( SSIM ).
