[site]: stackoverflow
[post_id]: 5525315
[parent_id]: 5519695
[tags]: 
Here is a quick try, based on our discussion above. I tried not to change your script too much here is a summary Values are dumped into an array (the pipes you had cause the math to occur at a subshell, results would not make it up to the 'main' shell Added more processing in the sed expression to strip leading zeros (but make sure there is at least one digit) I didnt follow why to calculate average you divided by 10, so I use the actual count of items in the array finally, assuming you want the average in the same unit of meeasurement as the input - I am printing with printf the result of dividing by 100. - #! /bin/sh # FILES=/home/myfiles FILES=a for f in $FILES do echo " Processing $f file.." values=($(grep real ${f} | sed -e "s/[^0-9]//g" -e "s/^0*//" -e "s/^$/0/")) sum=0; for value in ${values[@]}; do echo $value ((sum+=value)) done average=$((sum/${#values[@]})); printf "AVG: %d.%02d\n" $((average/100)) $((average%100)) done
