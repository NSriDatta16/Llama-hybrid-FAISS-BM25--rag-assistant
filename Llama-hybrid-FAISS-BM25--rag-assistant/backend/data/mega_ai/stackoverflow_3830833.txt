[site]: stackoverflow
[post_id]: 3830833
[parent_id]: 
[tags]: 
Cleanup Strategies after Building Source Code using eg. Git

I (mostly) use git to download and compile various projects from their source code, keeping my source in /usr/local/src and installing the binaries in /usr/local/bin . Following the building procedure, usually with ./configure && make && make install , I'm left with a lot of cruft that ends up as 'new' files in my local git repository. To my understanding, make clean , make distclean and possibly also (?) ./configure clean are thinkable procedures in order to trash most leftover files. But in specific scenarios (see example below) I'm left clueless what thing to do in order to "stay clean", such as I was prior to the installation... A recent example – installing jscoverage (via git svn ) from http://svn.siliconforks.com/jscoverage/trunk jscoverage: The building instructions for this project prompted me to use ./bootstrap.sh && make && make install . In this case, after compiling and installing was finished, I tried all of the aforementioned cleanup commands (by random), but didn't manage to get rid of everything. To wrap my question up: Is there any all-mighty, superior cleaning strategy that I haven't grasped? How do you approach this cleanup issue when using a VCS such as git, in a typical workflow where you 1.) download – 2.) build – 3.) pull updates from upstream repository – 4.) build once again – and so forth?
