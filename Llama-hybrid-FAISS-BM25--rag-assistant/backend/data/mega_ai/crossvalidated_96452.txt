[site]: crossvalidated
[post_id]: 96452
[parent_id]: 
[tags]: 
Accuracy changes with permutation of input data in Libsvm with precomputed kernel?

I'm doing quite simple SVM classification at the moment. I use a precomputed kernel in LibSVM with RBF and DTW. When I compute the similarity (kernel-) matrix, everything seems to work very fine ... until I permute my data, before I compute the kernel matrix. An SVM is of course invariant to permutations of input-data. In the below Matlab-code, the line marked with ' My csv-files are formatted as: LABEL, val1, val2, ..., valN and all the csv-files are stored in the folder dirName. So the string array contains the entries '10_0.csv 10_1.csv .... 11_7.csv, 11_8.csv' (not permuted) or some other order when permuted. I also tried to permute the vector of sample serial numbers, too, but that makes no difference. function [SimilarityMatrixTrain, SimilarityMatrixTest, trainLabels, testLabels, PermSimilarityMatrixTrain, PermSimilarityMatrixTest, permTrainLabels, permTestLabels] = computeDistanceMatrix(dirName, verificationClass, trainFrac) fileList = getAllFiles(dirName); fileList = fileList(1:36); trainLabels = []; testLabels = []; trainFiles = {}; testFiles = {}; permTrainLabels = []; permTestLabels = []; permTrainFiles = {}; permTestFiles = {}; n = 0; sigma = 0.01; trainFiles = fileList(1:2:end); testFiles = fileList(2:2:end); rng(3); permTrain = randperm(length(trainFiles)) %rng(3); I'd be very thankful for any answer! Regards Benjamin
