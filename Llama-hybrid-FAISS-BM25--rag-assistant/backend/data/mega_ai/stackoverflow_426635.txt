[site]: stackoverflow
[post_id]: 426635
[parent_id]: 126260
[tags]: 
Here is a list from mindprob : Java Web Start applications are painfully slow to start. The monitor loads a fresh JVM for itself and for each application. Applications always check on the web for updates, downloading and processing an entire new JNLP file, rather than just checking its date. However, if it takes 80 seconds or so to check for a new version, it means you are likely having trouble with a proxy server. Start javaws.exe and click edit ⇒ Preferences ⇒ Network Settings ⇒ Direct. You don’t want JWS trying to use the Google Accelerator proxy. Also check in IE, click tools ⇒ Internet Options ⇒ Connections ⇒ LAN Settings and make sure all is as you expect. Updates take just about as long to download as the original application. There has been almost no cleverness applied to make the updates compact. It requires custom code running on the ISP to properly serve the jardiff files or to use the coming pack200 hyper compression. It has not changed much since its initial release. It may be yet another orphaned product. It does not deserve to be. However, Sun has released a new beta 1.2 after a year or so of nothing happening, and it has been integrated into the JRE, so we’ll see if it is picking up steam again. There are some major problems they have ignored, such as the certificate OK hiding behind the splash screen, and requiring ok for every jar separately. Even if it is orphaned nothing to terrible will happen. Unless you write unsigned JWS apps and use the JWS sandbox, your JWS apps will run fine standalone. It requires special configuring of the JNLP MIME type both at the ISP and in the client’s browser. Neither of these are under the developer’s direct control. If you have an urgent update, you can’t force it to be installed before the app is ever run again. It needs a rigid scheme to assign hard disk space on the client’s machine that has the following properties: The names of the directories assigned must avoid name clashes with other vendors. They should incorporate the main package name of the application. The names must be meaningful to the end user. They should be something he can remember, find and type when he needs to find files with desktop tools. The scheme must provide a place both for per-user and per-application files. A program should work on any platform without modification to deal with finding its files.
