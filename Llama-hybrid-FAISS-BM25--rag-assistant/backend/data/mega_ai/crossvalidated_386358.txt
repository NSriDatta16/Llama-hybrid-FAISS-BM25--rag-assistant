[site]: crossvalidated
[post_id]: 386358
[parent_id]: 
[tags]: 
How to use log probabilities in PCA mixture EM algorithm

I'm trying to implement PCA mixtures (Tipping & Bishop 2006 Appendix C) on the Tobomovirus. I'll summarize the mathematical background and algorithm here: For a single PCA model, we assume a latent variable model $$ \mathbf{t} = \mathbf{Wx} + \boldsymbol\mu + \boldsymbol\epsilon. $$ This implies a probability distribution $$ p(\mathbf{t}|\mathbf{x}) = (2\pi\sigma^2)^{-d/2}\mathrm{exp}\{-\frac{1}{2\sigma^2}||\mathbf{t} - \mathbf{Wx}- \boldsymbol\mu||^2\} $$ since the noise term $\boldsymbol\epsilon$ is zero-mean Gaussian with variance $\sigma^2$ . We define the Gaussian prior $$ p(\mathbf{x}) = (2\pi)^{-q/2}\mathrm{exp}\{-\frac{1}{2}\mathbf{x}^T\mathbf{x}\} $$ which allows us to derive the marginal distribution $$ p(\mathbf{t}) = (2\pi)^{-d/2}|\mathbf{C}|^{-1/2}\mathrm{exp}\{-\frac{1}{2}(\mathbf{t} - \boldsymbol\mu)^T\mathbf{C}^-1(\mathbf{t} - \boldsymbol\mu)\} $$ where $\mathbf{C} = \sigma^2\mathbf{I} + \mathbf{WW}^T$ . The PCA mixture model means that we use a mixture of PCA models like this: $$ p(\mathbf{t}) = \sum_{i=1}^M \pi_i p(\mathbf{t}|i) $$ The algorithm: Initialize $\pi_i$ , $\boldsymbol\mu_i$ , $\mathbf{W}_i$ , $\sigma_i^2$ . These are the mixing coefficient, mean (of the marginal), weight matrix and variance of each model. Calculate the responsibilities, $$ R_{ni} = \frac{p(\mathbf{t}_n|i)\pi_i}{p(\mathbf{t}_n)} $$ where $p(\mathbf{t}|i)$ is the probability for a single PCA model $i$ . Calculate mixing coefficients $$ \tilde\pi_i = \frac{1}{N}\sum^N_{n=1} R_{ni}. $$ Calculate the means $$ \tilde{\boldsymbol\mu}_i = \frac{\sum_{n=1}^N R_{ni}\mathbf{t}_n}{\sum_{n=1}^NR_{ni}} $$ Calculate the new weight matrices $$ \mathbf{\tilde W}_i = \mathbf{S}_i \mathbf{W}_i(\sigma^2 \mathbf{I}+\mathbf{M}^{-1}\mathbf{W}_i^T\mathbf{S}_i\mathbf{W}_i)^{-1} $$ where $\mathbf{S}_i = \frac{1}{\tilde\pi_i N}\sum^N_{n=1}R_{ni}(\mathbf{t}_n - \tilde{\boldsymbol\mu})(\mathbf{t}_n - \tilde{\boldsymbol\mu})^T$ . Repeat from step 2. The tilde operator means that it is a new parameter being calculated. Here's my problem: When implementing this on the Tobomovirus dataset, the long 18x1 feature vectors and the resulting 18x18 $\mathbf{C}$ matrix lead to the probabilities $p(\mathbf{t})$ in step 2 becoming very very small, leading to underflow. I would like to work with the log probabilities instead, but I'm not sure how this will affect the algorithm and what exactly I need to change.
