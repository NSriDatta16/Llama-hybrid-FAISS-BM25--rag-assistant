[site]: stackoverflow
[post_id]: 1280228
[parent_id]: 1280116
[tags]: 
This is important for maintainable design as well as code, and it makes it easier to produce other output types later on. With PHP, one of the simplest libraries for separating the two is Smarty templates. Using Smarty (or any other templating library), you can write an HTML file with the layout and some simple loops or other constructs, and then render that template using a data structure. At the very least, I would suggest altering your class to utilize a template and produce output that way, rather than a mish-mash of print or echo statements with a bunch of HTML in them. I'd even shy away from @zombat's solution of echo statements in HTML fragments, they quickly become ugly. Example Smarty template to achieve something like what you want: {section name=i loop=$posts} {$posts[i].author} &mdash; {$post[i].text} {/section} And some PHP supporting code: // Instantiate Smarty object $smarty = new Smarty(); // Assign a hash of data $smarty->assign('posts', array( array('author' => 'Jim', 'text' => 'Hi this is my post!'), array('author' => 'Sally', 'text' => 'My first post to the system') ) ); // Use the file with the above template in it $smarty->display('posts.html'); The part where you assign data to the template should probably be done via some programmatic means to convert your list of class objects into a list of hashes. This way you can easily change the way the output looks just by editing the HTML template and you don't have to worry about touching any code to change the output.
