[site]: stackoverflow
[post_id]: 401390
[parent_id]: 401215
[tags]: 
Queuing may be overly complicated. A simpler solution is to give your class a variable for the time the service was last called. Whenever the service is called (!1), set waitTime to delay - Now + lastcalltime . delay should be equal to the minimum allowable time between requests. If this number is positive, sleep for that long before making the call (!2). The disadvantage/advantage of this approach is that it treats the web service requests as being synchronous. The advantage is that it is absurdly simple and easy to implement. (!1): Should happen right after receiving a response from the service, inside the wrapper (probably at the bottom of the wrapper). (!2): Should happen when the python wrapper around the web service is called, at the top of the wrapper. S.Lott's solution is more elegant, of course.
