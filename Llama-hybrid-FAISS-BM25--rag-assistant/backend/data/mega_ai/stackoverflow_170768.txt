[site]: stackoverflow
[post_id]: 170768
[parent_id]: 170751
[tags]: 
I do assume you read " Code covered vs. Code Tested ", right ? As stated in that question, Even with 100% block coverage + 100% arc coverage + 100% error-free-for-at-least-one-path straight-line code, there will still be input data that executes paths/loops in ways that exhibit more bugs. Now, I use eclemma , based on EMMA and that code-coverage tool explains why 100% code is not always possible: because of partially covered lines due to: Implicit branches on the same line. Shared constructor code. Implicit branches due to finally blocks. Implicit branches due to a hidden Class.forName(). So all those 4 cases might be good candidates for refactoring leading to a better code coverage. Now, I agree with Frank Krueger's answer. Some non-covered code might also be an indication of some refactoring to be done, including some code to actually delete ;)
