[site]: stackoverflow
[post_id]: 2438605
[parent_id]: 2438142
[tags]: 
For a given type T (non-contiguous): size_t dim0, dim1, dim2; ... T ***arr = malloc(sizeof *arr * dim0); //type of *arr is T ** if (arr) { size_t i; for (i = 0; i Unless you are working with a very old (pre-C89) implementation, you do not need to cast the result of malloc() , and the practice is discouraged. If you forget to include stdlib.h or otherwise don't have a prototype for malloc() in scope, the compiler will type it to return int , and you'll get an "incompatible type for assignment"-type warning. If you cast the result, the warning is suppressed, and there's no guarantee that a conversion from a pointer to an int to a pointer again will be meaningful.
