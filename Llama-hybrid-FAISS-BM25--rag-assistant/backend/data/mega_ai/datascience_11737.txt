[site]: datascience
[post_id]: 11737
[parent_id]: 11723
[tags]: 
You can't know the next best step unless you know the whole best path. Your task is something similar to TSP (traveling salesman problem). So, how to find the best path? Probably you can add penalties (not known) to each state. Then you can define your goal as path with minimal total penalty. (For robot from your example floor will have 0 penalty and some obstacles >0 penalty). As I know you can't avoid brute forcing through all possible paths unless your task have additional restrictions. You need to approximate penalties with data you already have. (So, penalties is parameters in your machine learning task) When you estimated penalties you can compute total penalty for each path, so you can find all paths by brute force and find "best" one.(with smallest penalty)
