[site]: stackoverflow
[post_id]: 911175
[parent_id]: 
[tags]: 
LINQ table enumeration with column enumeration

How do you get a list of all the tables and use that list to enumerate the columns? I've found posts that describe one or the other, but not both. My net-result is I want to generate a static class which contains names of all the columns in each tables so I could, for example, do: comboBoxFoo.DisplayMember = SomeNamespace.SomeTable.SomeDisplayColumnName; comboBoxFoo.ValueMember = SomeNamespace.SomeTable.SomeIDColumnName; comboBoxFoo.DataSource = dingo; I'm currently using this method which while it works, it means I have to manually create my tables in a list. I have a seperate command line project which generates the SomeNameSpace.SomeTable class manually and I add the generated class file in to the project. Ideally, if I could loop through via a foreach of tables and do something like this: foreach(var table in someTableNumerationMethodForAGivenContext()) { var columnList = databaseContext.ColumnNames (); foreach(var columnData in columnList) { DoJazz(columnData.Name); } } Is there a better way to do this other than manually have to do the databaseContext.ColumnNames() ? Edit 1: We're using LinqToSQL. Moving to ADO.NET also an option on the table, but at the moment we have no pressing need to. Edit 2: I know L2S does databinding but what I'm after is getting a list of column names as strings from a table. L2S doesn't offer this or it's not apparent on my side. I'd like to do something like: SomeTable.SomeColumn.ToString() or something. SubSonic has this. Final: Thanks everyone. all are very good answers and lead me to the answer. You guys rock!
