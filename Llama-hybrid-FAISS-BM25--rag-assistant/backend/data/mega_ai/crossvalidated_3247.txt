[site]: crossvalidated
[post_id]: 3247
[parent_id]: 3244
[tags]: 
As an enthusiast user of R, bash, Python, asciidoc, (La)TeX, open source sofwtare or any un*x tools, I cannot provide an objective answer. Moreover, as I often argue against the use of MS Excel or spreadsheet of any kind (well, you see your data, or part of it, but what else?), I would not contribute positively to the debate. I'm not the only one, e.g. Spreadsheet Addiction , from P. Burns. MS Excel’s precision and accuracy , a post on the 2004 R mailing-list L. Knusel, On the accuracy of statistical distributions in Microsoft Excel 97 , Computational Statistics & Data Analysis, 26: 375–377, 1998. ( pdf ) B.D. McCullough & B. Wilson, On the accuracy of statistical procedures in Microsoft Excel 2000 and Excel XP , Computational Statistics & Data Analysis , 40: 713–721, 2002. M. Altman, J. Gill & M.P. McDonald, Numerical Issues in Statistical Computing for the Social Scientist , Wiley, 2004. [e.g., pp. 12–14] A colleague of mine loose all his macros because of the lack of backward compatibility, etc. Another colleague tried to import genetics data (around 700 subjects genotyped on 800,000 markers, 120 Mo), just to "look at them". Excel failed, Notepad gave up too... I am able to "look at them" with vi, and quickly reformat the data with some sed/awk or perl script. So I think there are different levels to consider when discussing about the usefulness of spreadsheets. Either you work on small data sets, and only want to apply elementary statistical stuff and maybe it's fine. Then, it's up to you to trust the results, or you can always ask for the source code, but maybe it would be simpler to do a quick test of all inline procedures with the NIST benchmark . I don't think it corresponds to a good way of doing statistics simply because this is not a true statistical software (IMHO), although as an update of the aforementioned list, newer versions of MS Excel seems to have demonstrated improvements in its accuracy for statistical analyses, see Keeling and Pavur, A comparative study of the reliability of nine statistical software packages ( CSDA 2007 51: 3811). Still, about one paper out of 10 or 20 (in biomedicine, psychology, psychiatry) includes graphics made with Excel, sometimes without removing the gray background, the horizontal black line or the automatic legend (Andrew Gelman and Hadley Wickham are certainly as happy as me when seeing it). But more generally, it tend to be the most used "software" according to a recent poll on FlowingData, which remind me of an old talk of Brian Ripley (who co-authored the MASS R package, and write an excellent book on pattern recognition, among others): Let's not kid ourselves: the most widely used piece of software for statistics is Excel (B. Ripley via Jan De Leeuw), http://www.stats.ox.ac.uk/~ripley/RSS2002.pdf Now, if you feel it provides you with a quick and easier way to get your statistics done, why not? The problem is that there are still things that cannot be done (or at least, it's rather tricky) in such an environment. I think of bootstrap, permutation, multivariate exploratory data analysis, to name a few. Unless you are very proficient in VBA (which is neither a scripting nor a programming language), I am inclined to think that even minor operations on data are better handled under R (or Matlab, or Python, providing you get the right tool for dealing with e.g. so-called data.frame). Above all, I think Excel does not promote very good practices for the data analyst (but it also applies to any "cliquodrome", see the discussion on Medstats about the need to maintain a record of data processing, Documenting analyses and data edits ), and I found this post on Practical Stats relatively illustrative of some of Excel pitfalls. Still, it applies to Excel, I don't know how it translates to GDocs. About sharing your work, I tend to think that Github (or Gist for source code) or Dropbox (although EULA might discourage some people) are very good options (revision history, grant management if needed, etc.). I cannot encourage the use of a software which basically store your data in a binary format. I know it can be imported in R, Matlab, Stata, SPSS, but to my opinion: data should definitively be in a text format, that can be read by another statistical software; analysis should be reproducible, meaning you should provide a complete script for your analysis and it should run (we approach the ideal case near here...) on another operating system at any time; your own statistical software should implement acknowledged algorithms and there should be an easy way to update it to reflect current best practices in statistical modeling; the sharing system you choose should include versioning and collaborative facilities. That's it.
