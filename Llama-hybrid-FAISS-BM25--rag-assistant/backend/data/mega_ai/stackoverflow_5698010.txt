[site]: stackoverflow
[post_id]: 5698010
[parent_id]: 5697629
[tags]: 
You could try the following modified code. #include using namespace std; struct Node { int item; // storage for the node's item Node* next; // pointer to the next node }; /************** use reference **************/ void addNode(Node*& head, int data , int& count) { Node * q; // new node q = new Node; // allocate memory for the new mode q->item = data; // inserting data for the new node q->next = head; // point to previous node ?? how would i do that? ( am i doing it correctly?) count++; // keep track of number of node head = q; } int main() { int a, count = 0; int data; bool repeat; Node *head = NULL; // assuming it is an empty list at the beginning and crating a new node below Node *temp; temp = new Node ; cout > a ; temp->item = a; temp->next = head; head = temp; //^^ assuming thats creating the first node ^^ do { cout > data; addNode(head, data, count); cout > repeat; } while (repeat == true); // assuming this is the print function temp = head; while(temp != NULL) { cout item next; //next element } return 0; }
