[site]: stackoverflow
[post_id]: 821260
[parent_id]: 812685
[tags]: 
I must say I don't really understand your exact problem. Is the problem that your database is left in an altered state after you've run the test? Yes, there are actually two issues here. First one being the problem with the database left in an inconsistent state after running the test cases. The second one being that I'm looking for an elegant solution in terms of end-to-end testing of web services. For efficient unit testing you should be able to create the SUT without the context. It sounds like you have some hidden dependencies somewhere. That might be the root of some of your headache. That indeed was the root cause of my headaches which I am now about to do away with with the help of a mocking framework. It seems you are worried about the database's constistency after you have running the tests. If possible use a own database for testing, where you don't need care about it. If you have such a sandbox database you can delete data as you wish. This is indeed one of the solutions to the problem I mentioned in my previous post but this might not work in all the cases esp when integrating with a legacy system in which the database/data isn't in your control and in cases when some DAO methods require a certain data to be already present in a given set of tables. Should I look into database unit testing frameworks like DBUnit? In this case it pays of the stub/fake/mock the layer talking to the network. Or consider https://wsunit.dev.java.net/ . Ah, looks interesting. I've also heard of tools like SOAPUI and the likes which can be used for functional testing. Has anyone here had any success with such tools? Thanks for all the answers and apologies for the ambiguous explanation; English isn't my first language. -sasuke
