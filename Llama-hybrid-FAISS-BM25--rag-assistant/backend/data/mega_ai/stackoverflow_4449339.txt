[site]: stackoverflow
[post_id]: 4449339
[parent_id]: 4448811
[tags]: 
Fortunately, moving a Sitecore installation around is a fairly simple task, and there are a number of approaches you could be using. Here's what I would normally do (somewhat simplified). Set the target environment up. Meaning IIS, SQL Server, security settings and so on Detach my local databases, stop the local IIS Copy everything from the root solution folder and down, to the target environment Attach the databases to the target SQL server Create the IIS website, and point it to your Website folder Modify ConnectionStrings.config Modify your absolute path to your data folder Press GO! Whether you want to use Sitecore Installler or not is a matter of personal preference. It does set a lot of configuration issues for you, but personally I never use it. I go with "Zip of the root". I don't think I could come up with a full list of things you should be paying particular attention to, but here's a few of the most common ones Test environments should resemble live as much as possible, so do move your /data folder outside the webroot. You don't want people to be able to download your license file by simply typing website/data/license.xml ;-) Consider creating a .config include file for your machine specific settings (i.e. mail servers, external components and so on) Start on a continueous (erm...) integration cycle , start deploying your updates via packages to the target so you work up experience on lifecycle managing your eventual live environment Make sure you keep the same Sitecore version across your environments And don't worry too much ;-) Sitecore, although extensive, is a "simple" ASP.NET application from a deployment perspective. Hope this provides a bit of insight :-)
