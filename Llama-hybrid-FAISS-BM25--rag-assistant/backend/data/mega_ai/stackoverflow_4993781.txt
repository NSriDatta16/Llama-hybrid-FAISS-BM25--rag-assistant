[site]: stackoverflow
[post_id]: 4993781
[parent_id]: 4993737
[tags]: 
You can do this: package some.package.name; class Foo extends some.other.package.Foo { ... } I would not recommend this, however, as it will probably lead to less-clear code, and encourage programming errors. A better way to do this sort of thing is to abstract the common functionality into an interface, and then write different implementing classes: class FooImpl implements Foo { ... } class OtherFooImpl implements Foo { ...} then you'd use it like this, in some other bit of code somewhere: ... Foo myFoo = new FooImpl(); // use myFoo ... and if you want to change the implementing class, then you simply change how it's instantiated: ... Foo myFoo = new OtherFooImpl(); // use myFoo ... This is a much more common practice in Java than what you asked about.
