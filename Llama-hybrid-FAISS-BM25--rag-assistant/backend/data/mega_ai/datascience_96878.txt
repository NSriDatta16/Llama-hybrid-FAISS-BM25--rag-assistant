[site]: datascience
[post_id]: 96878
[parent_id]: 
[tags]: 
Multiple timestamp values for training data

I am trying to extract features from audio WAV-files with the openl3 package. It is working so far, but since openl3 works with windows, I have now for each WAV-file two numpy files, one with the embeddings (feature values) and one with the timestamp values. For example the output for one WAV-file with 3 windows/timestamps looks like this: timestamps: [0. 1. 2.] embeddings (with each list 6144 values/features long): [[ 2.430837 1.1149534 1.8192575 ... -0.42393693 2.429424 2.069307 ] [ 1.8306035 0.93579465 2.0597208 ... -0.41671506 2.2733474 1.8177178 ] [ 4.8046613 1.4510491 3.1910005 ... -0.3726427 2.195802 0.5922224 ]] Now I have not figured out yet how to pass these values correctly to a ML-model as training data. I have looked into time series, but I am not really sure, if that is the correct way here, since the time series is technically the WAV-file itself and the openl3-tool has already extracted the features from it. I have found another suggestion to just concatenate all (in this case) 3 lists and pass as data, but since the WAV-files are of different length, they also have a different number of timestamps/windows and therefore more or less 'embedding lists' So I do not think it would work to simply concatenate the lists or am I wrong here? If someone could point me in the right direction, your help would be much appreciated!
