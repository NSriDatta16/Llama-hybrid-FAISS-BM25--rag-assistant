[site]: stackoverflow
[post_id]: 587756
[parent_id]: 587280
[tags]: 
I think it is important to create a pseudo code or algorithm of the problem first and then if it works deal with the programming later . Otherwise you'll be solving two things at the same time 1. Problem logic and 2. Implementation details. This is how I would do it. //The three numbers should be entered by a user in the main method. MAIN PROGRAM starts declare a , b , c as numbers //The numbers should be positive and less than 200. // see validNumCheck below. //part 1.If not, the program asks the user to renter the number. //part 2.The user will have three chances to enter a valid number for each number. //part 3. If the number is still invalid after the three trials, the program displays an error message to the user and ends. // ok then read a number and validate it. attempts = 0; maxAttempts = 3; //part 2. three chances... . loop_while ( attemtps And this would be the function to "validNumCheck" // You are encouraged to write a separate method for this part of program â€“ for example: validNumCheck bool validNumCheck( num ) begin if( num 200 ) then // invalid number return false; else return true; end end So, we have got to a point where a number "a" could be validated but we need to do the same for "b" and "c" Instead of "copy/paste" your code, and complicate your life trying to tweak the code to fit the needs you can create a function and delegate that work to the new function. So the new pseudo code will be like this: MAIN PROGRAM STARTS declare a , b , c as numbers a = giveMeValidUserInput(); b = giveMeValidUserInput(); c = giveMeValidUserInput(); print( a, b , c ) MAIN PROGRAM ENDS And move the logic to the new function ( or method ) The function giveMeValidUserInput would be like this ( notice it is almost identical to the first pseudo code ) function giveMeValidUserInput() starts maxAttempts = 3; attempts = 0; loop_while ( attemtps The validNumCheck doesn't change. Passing from that do code will be somehow straightforward. Because you have already understand what you want to do ( analysis ) , and how you want to do it ( design ). Of course, this would be easier with experience. Summary The steps to pass from problem to code are : Read the problem and understand it ( of course ) . Identify possible "functions" and variables. Write how would I do it step by step ( algorithm ) Translate it into code, if there is something you cannot do, create a function that does it for you and keep moving.
