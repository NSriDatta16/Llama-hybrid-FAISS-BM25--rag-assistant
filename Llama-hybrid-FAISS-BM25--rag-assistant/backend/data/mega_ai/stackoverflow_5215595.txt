[site]: stackoverflow
[post_id]: 5215595
[parent_id]: 5215495
[tags]: 
Most commonly, modern systems are what you call "byte-accessible". This means: One memory location stores 1 byte (8 bits). The basic storage unit for memory is 1 byte. If you need to store 4 bytes, and place the first byte at 0001, the last byte will be at 0004. That's one byte at each of 0001, 0002, 0003, and 0004. Keep in mind while systems have different CPU word sizes (a 32-bit system has a 32-bit or 4-byte word), memory is usually addressed by byte. The CPU's registers used in arithmetic are 4 bytes, but the "memory" programmers use for data storage is addressed in bytes. On x86 systems, many memory-accessing instructions require values in memory to be "aligned" to addresses evenly divisible by the word size. e.g. 0x???0, 0x???4, 0x???8, 0x???C. So, storing an int at 0001 won't happen on most systems. Non-numeric data types can usually be found at any address. See Wikipedia: Alignment Word (Computing) Memory Address
