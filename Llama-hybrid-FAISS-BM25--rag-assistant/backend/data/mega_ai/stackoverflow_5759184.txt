[site]: stackoverflow
[post_id]: 5759184
[parent_id]: 5759063
[tags]: 
Models are not just for dealing with database, but for working with data in principle. As far as we don't know what situations you mean I can just present some situations. Ajax call for big Math calculating. It is not touching database and even it can be calculating in tableless model. # in your controller def calculating Calculator.get_integral_log_and_furie params[:data] end # in your model class Calculator def self.get_integral_log_and_furie(data) ... # multi line code end end So you can see that you can calculate it right in your controller, but it should be calculated in your model, so it is reusable and clean solution. Another example is using some virtual attributes. Names. You can store first, second and third name in saparate columns, so you need to join it. You can create privae method in controler, but of course it is bad idea. class User So you can call it everywhere in your project: @user.full_name # Peter Jhonson, or mu is too short And so on and so on
