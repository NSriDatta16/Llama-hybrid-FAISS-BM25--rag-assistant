[site]: stackoverflow
[post_id]: 3299180
[parent_id]: 3299002
[tags]: 
When Matz wrote Ruby, he tried to follow the 'Principle of Least Surprise'. Often this meant that there'd be more than one way to do the same thing, for example assigning to arrays by using square brackets, or an insert method. I enjoy it, because I find that rather than trying to remember which exact name to use in which situation (I always used to pause for a moment for size vs length in Java), I just just write what seems logical, and usually it will work. When reading the code, it's normally not a problem to use a different name, as the names are usually self-explanatory. So, I don't worry about which is most adequate or popular, I choose the most logical at the time. Matz was also inspired by Perl, which has 'There's more than one way to do it' as its slogan. I don't believe Matz was worried about what would be most popular, he just wanted to write the language he wanted to use. I'm not going to try to explain and vs && though...
