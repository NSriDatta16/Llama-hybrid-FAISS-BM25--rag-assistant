[site]: stackoverflow
[post_id]: 418640
[parent_id]: 418600
[tags]: 
I'll take a stab, but I'm not 100% sure of the question. Transactions, in terms of databases, tend to have scopes. This indicates a coverage of the amount of data that is being changed within the transaction. They are implemented in the database server, and cannot be changed "in code". Each database server will have its own implementation, and each server (oracle, MSSQL, MySQL) will have their own behaviours. Generally a transaction will lock out any other connections from reading data that it is in the middle of modifying. The scope of the transaction will start as small as possible, and then expand as the amount of data being changed grows. It's in the database's best interest to lock as little data as possible, and it does this by: Locking a single column in a single row of data then locking a single row of data then locking a page of data (8096 bytes perhaps?) then locking an entire table of data If your update modifies multiple rows of data, the transaction scope will expand to a page size (custom for each server), or to lock the entire table. Some database servers will allow other connections to read the table as it was before the update while the transaction is in progress, and other database servers will block any selects on data until the transaction is committed. Basically the deal is that you cannot modify the way the server has been implemented, and transaction scope isn't something you should worry too much about. Just be sure to have transactions only used around succinct updates that are dependant on each other. I typically don't use transactions. But then again, I'm not working with bank accounts or any other referentially critical systems. Hope this helps!
