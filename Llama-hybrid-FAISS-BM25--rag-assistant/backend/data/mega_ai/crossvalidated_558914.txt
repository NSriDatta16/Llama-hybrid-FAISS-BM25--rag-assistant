[site]: crossvalidated
[post_id]: 558914
[parent_id]: 558906
[tags]: 
If you go for a CNN (with only one "color" channel), which sounds like a good idea, you don't need to do much except glueing multiple observations together across an additional dimension. So for training a CNN with Keras, the input would be a n Ã— 4 x 4 x 1 array and the output a one-dimensional vector of length n. For less flexible modeling techniques like a random forest, an old trick with complex input is to derive a couple of meaningful features and use these as input: largest value on diagonal mean value on diagonal standard deviation on diagonal largest value off diagonal ... This is an alternative to just flatten the numbers. However, if your sample is very large, then flattening is not a bad approach either.
