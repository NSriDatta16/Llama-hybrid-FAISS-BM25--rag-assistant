[site]: crossvalidated
[post_id]: 585433
[parent_id]: 585378
[tags]: 
Look at this post to see how to normalize between 0, 1 with Stata. And this post for the general idea. The coefficient for f_opennavg is $-0.261$ , so assuming your model looks like $log(y)=\beta_0 + \beta_1x + u$ , the interpretation would be: "An increase in $x$ by one unit is associated with a change in $y$ by $100* \beta_1$ % approximately, on average, all other things equal." So when f_opennavg changes from $1$ to $2$ , you would expect that this leads to a change of $-26.1$ % in whatever is your $y$ . Keep in mind that the model is linear which implies that a change from -2 to -1 has the same marginal effect as a change from -1 to 0 etc. This is not neccessarily a reasonable assumption, i.e. in cases where you have "bunching" around -1 and 1 (or so) and few "extreme" observations at the top/bottom end of the scale (e.g. North Korea would be extremely "closed" and at the same time is very different to most other countries). You could try to use a dummy to differentiate "extreme" cases from others (or more technically speaking: to "control for the effect of extreme values in openness"). You could also use a GAM model ( as described here ) to see if the effect of f_opennavg on $y$ can be assumed to be linear. There seem to be GAM models for Stata as well. When you change the scale of $x$ (e.g. by squeezing it into the interval 0,1), the OLS coefficient will be "scaled" as well (but will not change its fundamental meaning). So putting $x$ on a scale between 0 and 1 will not change the overall result. Data: y x 1 1 0 2 5 0 3 4 5 4 3 5 5 6 5 6 8 10 Regression: Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 2.5882 1.2255 2.112 0.102 x 0.4588 0.2269 2.022 0.113 Data with $x$ in range 0,1: y x 1 1 0.0 2 5 0.0 3 4 0.5 4 3 0.5 5 6 0.5 6 8 1.0 Regression: Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 2.588 1.225 2.112 0.102 x 4.588 2.269 2.022 0.113 So the coefficient for $x$ is simply "sclaed" $\beta*10$ (the former max value in my data) R-Code: df = data.frame(y=c(1,5,4,3,6,8), x=c(0,0,5,5,5,10)) summary(lm(y~x,df)) xs = (df $x- min(df$ x)) / (max(df $x)-min(df$ x)) dfs = data.frame(y=df$y, x=xs) summary(lm(y~x,dfs))
