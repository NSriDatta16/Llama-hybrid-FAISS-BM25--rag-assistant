[site]: stackoverflow
[post_id]: 5727108
[parent_id]: 
[tags]: 
Cannot add items to Win32 List Box Control

Backstory: I'm creating an Extension for Game Maker, a popular game development suite. An extension is a DLL that adds new functions to the built in scripting language, but is written in C or Pascal or whatever. Typically, it's used to allow games to use external libraries. In my case, I'm adding FMOD support. This isn't relevant. What's relevant is that for debugging purposes, I am also adding a dialog that I display at runtime that shows me the internal state of my library. I need help with this window. I have literally done absolutely no raw Win32 forms programming before today (.NET WinForms 4eva), so I'm probably doing something really clueless. Anyway. I have a listbox, and I want to add things to the list box, but when I try to add them, it fails. My code: extern DebugDialog * debugDialog; DebugDialog::DebugDialog(HWND owner, HINSTANCE hInst) { this->hWnd = 0; HWND hWnd = CreateDialogParam(hInst, MAKEINTRESOURCE(IDD_DEBUGDIALOG), owner, DialogProc, reinterpret_cast (this)); ShowWindow(hWnd, SW_SHOW); } DebugDialog::~DebugDialog(void) { DestroyWindow(this->getHWnd()); debugDialog = NULL; } BOOL CALLBACK DebugDialog::DialogProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) { DebugDialog * self; if(message == WM_INITDIALOG) { self = reinterpret_cast (lParam); self->hWnd = hWnd; SetWindowLongPtr(hWnd, GWLP_USERDATA, reinterpret_cast (self)); } else { self = reinterpret_cast (GetWindowLongPtr(hWnd, GWLP_USERDATA)); } if(self) { return self->HandleMessage(message, wParam, lParam); } else { return FALSE; } } BOOL DebugDialog::HandleMessage(UINT uMsg, WPARAM wParam, LPARAM lParam) { switch(uMsg) { case WM_INITDIALOG: MessageBox(this->getHWnd(), "Okay!", "Debug", 0); return TRUE; case WM_COMMAND: switch(LOWORD(wParam)) { case ID_CLOSE: case IDOK: case IDCANCEL: delete this; return TRUE; default: return FALSE; } return TRUE; } return false; } void DebugDialog::loadedSound(FMODGM_Sound * sound) { HWND hwndList = GetDlgItem(this->getHWnd(), IDC_LIST); LPARAM sound_text = (LPARAM)sound->file.c_str(); LRESULT lResult = SendMessage(hwndList, LB_ADDSTRING, NULL, sound_text); SendMessage(hwndList, LB_SETITEMDATA, lResult, (LPARAM)sound); } DebugDialog is a simple class that wraps the window, and lets me manipulate it from the outside. Basically, at some other point, I do this: debugWindow = new DebugDialog(owner, hInst); And then as I execute and do interesting things, I do this: FMODGM_Sound * sound = ...; if(debugWindow) debugWindow->loadedSound(sound); In loadedSound , I send a message to the list box saying "Hey, here's an item. Go ahead and make with the adding.", and it doesn't return an error. However, it also doesn't add anything to the box. It returns 0 each and every time I call it. According to the documentation, 0 means that it added an item, whose index is 0. However, that item doesn't exist. I have a theory as to why it's not working. I have no control over the message pump that Game Maker runs, so if it's doing anything funky, I don't know about it, nor can I change it. That said, everything else about the dialog works, including moving it, clicking on my Close button, and drawing the marquee thing inside the listbox with the mouse. Someone, please tell me what I'm doing horribly wrong :( Edit: Someone asked about the FMODGM_Sound struct, so here it is: struct FMODGM_Sound { FMOD::Sound * sound; std::vector channels; std::string file; public: FMODGM_Sound() { sound = NULL; } }; Nothing particularly fancy.
