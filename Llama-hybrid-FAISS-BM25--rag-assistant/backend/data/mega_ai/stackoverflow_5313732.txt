[site]: stackoverflow
[post_id]: 5313732
[parent_id]: 5294584
[tags]: 
The problem is with UIScrollView only, I also made a rage about it: https://i.stack.imgur.com/dqx3d.png [UPDATE 1] Here the solution: The situation: A UIViewController's view has a UIScrollView as subview (the scroll view paging is disabled). Code I use to attach the gesture the the UIView: UISwipeGestureRecognizer *swipeLeftRecognizer = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(swipedScreenLeft:)]; [swipeLeftRecognizer setNumberOfTouchesRequired:2.0f]; swipeLeftRecognizer.delegate = self; [swipeLeftRecognizer setDirection:UISwipeGestureRecognizerDirectionLeft]; [self.view addGestureRecognizer:swipeLeftRecognizer]; [swipeLeftRecognizer release]; To be iOS 4.3 enabled, I only had to add the UIViewController as a UIGestureRecognizerDelegate Then, I used the following delegate method to intercept and allow the simultaneous recognition of the scrollView's panGesture with the view's swipe one. Here the code: - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer{ if ([gestureRecognizer isKindOfClass:[UISwipeGestureRecognizer class]] && [otherGestureRecognizer isKindOfClass:[UIPanGestureRecognizer class]]) { return YES; } return NO; } [UPDATE 2] To disable the UIScrollView panning with two fingers, I THINK that you have to make your scrollview, a custom subclass of the UISCrollView class and alter some behavior of the panGesture detector, BUT I didn't tried to do that. Instead I choosed a lazier solution, basically I enable/disable the scrollView scroll functionlity based on the current state of the UISwipeGestureRecognizer. Moreover, in order to prevent double touch movement in the other direction too, I attached another recognizer just for that purpose. You have to create two properties for your swipe detectors. @property (nonatomic,assign) UISwipeGestureRecognizer *swipeRightRecognizer; @property (nonatomic,assign) UISwipeGestureRecognizer *swipeLeftRecognizer; Then I coded like this: [self setSwipeRightRecognizer:[[UISwipeGestureRecognizer alloc] initWithTarget:nil action:nil]]; [swipeRightRecognizer setNumberOfTouchesRequired:2.0f]; swipeRightRecognizer.delegate = self; [swipeRightRecognizer setDirection:UISwipeGestureRecognizerDirectionRight]; [self addObserver:self forKeyPath:@"swipeRightRecognizer.state" options:(NSKeyValueObservingOptionNew | NSKeyValueObservingOptionOld) context:NULL]; [self.view addGestureRecognizer:swipeRightRecognizer]; [swipeRightRecognizer release]; [self setSwipeLeftRecognizer:[[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(swipedScreenLeft:)]]; [swipeLeftRecognizer setNumberOfTouchesRequired:2.0f]; swipeLeftRecognizer.delegate = self; [swipeLeftRecognizer setDirection:UISwipeGestureRecognizerDirectionLeft]; [self addObserver:self forKeyPath:@"swipeLeftRecognizer.state" options:(NSKeyValueObservingOptionNew | NSKeyValueObservingOptionOld) context:NULL]; [self.view addGestureRecognizer:swipeLeftRecognizer]; [swipeLeftRecognizer release]; then add this method: - (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context { if (self.swipeRightRecognizer.state == UIGestureRecognizerStateFailed) { self.scrollView.scrollEnabled = YES; return; } if ([self.swipeRightRecognizer numberOfTouches] != 2.0f) { self.scrollView.scrollEnabled = YES; } else{ self.scrollView.scrollEnabled = NO; } } And update the existing method I posted in the previous "[UPDATE]": - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer{ if ([gestureRecognizer isKindOfClass:[UISwipeGestureRecognizer class]] && [otherGestureRecognizer isKindOfClass:[UIPanGestureRecognizer class]]) { if ([gestureRecognizer numberOfTouches] != 2.0f) { self.scrollView.scrollEnabled = YES; } else{ self.scrollView.scrollEnabled = NO; } return YES; } return NO; } Finally, remove the observers in the dealloc: [self removeObserver:self forKeyPath:@"swipeRightRecognizer.state"]; [self removeObserver:self forKeyPath:@"swipeLeftRecognizer.state"]; I bet there is a cleaner solution, but it works.. . Hope it helps ;)
