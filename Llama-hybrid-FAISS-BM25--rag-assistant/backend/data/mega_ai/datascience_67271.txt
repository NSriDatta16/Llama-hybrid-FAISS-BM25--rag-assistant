[site]: datascience
[post_id]: 67271
[parent_id]: 
[tags]: 
How to perform node classification using Graph Neural Networks

I'm am trying to perform node classification using graph neural network methods. My initial plan was to convert my graphs to adjacency matrices and train my network on that, with the node features being my target. However, my graphs all have a different number of nodes, so I believe adjacency matrices will not work. I then found information about node embeddings and applications in biology (see here ). It infers here that embedding your nodes no longer matters about graph size. What I am wondering, is if using embeddings is actually the solution to my problem? Then, how, practically, do I build a Graph Neural Network out of this method? The link (in the slides for part 2) still says I need to train my network to learn the embeddings - but now I have my original problem, how can I train the network on many different-sized graphs? Doing node classification on small, differently sized graphs seems to be somewhat commonly done. What I am slightly confused by is the step from theory to practice. Could anyone please offer any advice? Or links to more material that could solve some of my queries?
