[site]: stackoverflow
[post_id]: 2054156
[parent_id]: 2054013
[tags]: 
Using numpy, you can use np.average with the axis keyword: import numpy as np x=np.arange(12) y=x.reshape(3,4) print(y) # [[ 0 1 2 3] # [ 4 5 6 7] # [ 8 9 10 11]] print(np.average(y,axis=1)) # [ 1.5 5.5 9.5] Note that to reshape x , I had to make x start with a length evenly divisible by the group size (in this case 4). If the length of x is not evenly divisible by the group size, then could create a masked array and use np.ma.average to compute the appropriate average. For example, x=np.ma.arange(12) y=x.reshape(3,4) mask=(x>=10) y.mask=mask print(y) # [[0 1 2 3] # [4 5 6 7] # [8 9 -- --]] print(np.ma.average(y,axis=1)) # [1.5 5.5 8.5]
