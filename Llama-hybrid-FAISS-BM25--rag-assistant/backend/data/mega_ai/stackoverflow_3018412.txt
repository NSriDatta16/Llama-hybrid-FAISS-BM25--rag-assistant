[site]: stackoverflow
[post_id]: 3018412
[parent_id]: 3017522
[tags]: 
When trying to figure out connection properties for ArcObjects, I find it helpful to set up an OleDB connection in arccatalog using the GUI. Once it tests successfully, I then run this VBA script to list the connection properties, which I can then copy and paste into my code. Sub ListConnProps() Dim pGxApp As IGxApplication Set pGxApp = Application If Not TypeOf pGxApp.SelectedObject Is IGxDatabase Then Debug.Print "select a geodb first" Exit Sub End If Dim pGXdb As IGxDatabase2 Set pGXdb = pGxApp.SelectedObject Dim names As Variant, values As Variant Debug.Print pGXdb.WorkspaceName.WorkspaceFactoryProgID pGXdb.WorkspaceName.ConnectionProperties.GetAllProperties names, values Dim l As Long For l = 0 To UBound(names) Debug.Print names(l), values(l) Next l End Sub Update: Here's some code that I tested successfully after downloading the provider from here , and a test accdb file from here . I wasn't using a password, so couldn't test that. public static void TestOleDB() { IWorkspaceFactory wsf = new OLEDBWorkspaceFactoryClass(); IPropertySet ps = new PropertySetClass(); string connStr = "Provider=Microsoft.ACE.OLEDB.12.0;" + @"Data Source=D:\Projects\AmberGIS\Forums\MikeGarage\MikeGarage.accdb;" + "Persist Security Info=False"; // if you're using a password, use next line (??) //((IOleDBConnectionInfo)wsf).SetParameters(connStr, ""); ps.SetProperty("CONNECTSTRING", connStr); IWorkspace ws = wsf.Open(ps, 0); IEnumDatasetName enumDsn = ws.get_DatasetNames(esriDatasetType.esriDTAny); IDatasetName dsn; while((dsn=enumDsn.Next())!= null) Debug.Print(dsn.Name); }
