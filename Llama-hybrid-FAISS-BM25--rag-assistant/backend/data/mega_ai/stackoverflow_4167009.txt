[site]: stackoverflow
[post_id]: 4167009
[parent_id]: 
[tags]: 
A cleaner/shorter way to solve this problem?

This exercise is taken from Google's Python Class : D. Given a list of numbers, return a list where all adjacent == elements have been reduced to a single element, so [1, 2, 2, 3] returns [1, 2, 3]. You may create a new list or modify the passed in list. Here's my solution so far: def remove_adjacent(nums): if not nums: return nums list = [nums[0]] for num in nums[1:]: if num != list[-1]: list.append(num) return list But this looks more like a C program than a Python script, and I have a feeling this can be done much more elegant. EDIT So [1, 2, 2, 3] should give [1, 2, 3] and [1, 2, 3, 3, 2] should give [1, 2, 3, 2]
