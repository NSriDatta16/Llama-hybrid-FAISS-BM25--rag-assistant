[site]: stackoverflow
[post_id]: 4514227
[parent_id]: 
[tags]: 
Possible to "listen" to a CSS value for a DOM element and tell another DOM element to match it?

I'm trying to hack Drupal's colorpicker module so that as my user drags it around picking colors, he sees colors changing on the web site's in real-time. Right now the colorpicker's js changes the color of the picker widget in real-time. I want to hack the js so that the color of the picker widget AND a specific DOM element change background colors at once. Is there a way I can write some code that "listens" to the background-color setting of the colorpicker input and then changes the background-color of ? Here's the code where Drupal is applying settings from the colorpicker widget to its input: Drupal.behaviors.colorpicker = function(context) { $("input.colorpicker_textfield:not(.colorpicker-processed)", context).each(function() { var index = $('body').find('input.colorpicker_textfield').index($(this)); Drupal.colorpickers[index] = new Drupal.colorpicker($(this).addClass('colorpicker-processed')); Drupal.colorpickers[index].init(); }); What can I add to this to tell it to "listen" to the background color of "input.colorpicker_textfield" and then set that value to "body" in real time as it changes?
