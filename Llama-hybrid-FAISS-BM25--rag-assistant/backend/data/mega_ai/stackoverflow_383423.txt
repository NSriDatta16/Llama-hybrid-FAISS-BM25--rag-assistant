[site]: stackoverflow
[post_id]: 383423
[parent_id]: 383402
[tags]: 
I have just read some parts of Crockford 's book " JavaScript: The Good Parts ". I get the feeling that he considers everything that ever has bitten him as harmful: About switch fall through: I never allow switch cases to fall through to the next case. I once found a bug in my code caused by an unintended fall through immediately after having made a vigorous speech about why fall through was sometimes useful. (page 97, ISBN 978-0-596-51774-8) About ++ and --: The ++ (increment) and -- (decrement) operators have been known to contribute to bad code by encouraging excessive trickiness. They are second only to faulty architecture in enabling viruses and other security menaces. (page 122) About new: If you forget to include the new prefix when calling a constructor function, then this will not be bound to the new object. Sadly, this will be bound to the global object, so instead of augmenting your new object, you will be clobbering global variables. That is really bad. There is no compile warning, and there is no runtime warning. (page 49) There are more, but I hope you get the picture. My answer to your question: No, it's not harmful. but if you forget to use it when you should you could have some problems. If you are developing in a good environment you notice that. In the 5th edition of ECMAScript there is support for strict mode . In strict mode, this is no longer bound to the global object, but to undefined .
