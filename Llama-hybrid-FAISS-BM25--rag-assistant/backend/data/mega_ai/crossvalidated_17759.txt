[site]: crossvalidated
[post_id]: 17759
[parent_id]: 17597
[tags]: 
Very interesting question Alex! Part 1 First, I would suggest normalizing all the heuristics and outcome to return a value in [0,1]. If you know the properties of these values, you could use log and divide by the max available value. Next, you want to build a model that maps the heuristics to an expected outcome. I would use a series of vectors based on your simulation to derive $f(H_1, H_2, .. H_n) = y$. You could use either regression analysis or SVM light if you want to be fancy. Quick tip: If you believe the relationship between the heuristics can be more complex, you can create combination variables in the form of $(H_i \times H_j)$ to feed to your SVM. Part 2 Once you have established a good heuristic function, it sounds like your next goal is given a fixed amount of power, to maximize the derived value. So in a sense your problem of power allocation % is the same as before, with a $y$ defined as overall system value. For this one I would recommend using linear solver with some constraints (i.e. power allocation can not be negative, and total amount to 100%) for getting the best values for each robot. I would love to hear more details about what exactly are you trying to do, and possibly refine my answer based on that.
