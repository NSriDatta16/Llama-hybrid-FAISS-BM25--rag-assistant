[site]: stackoverflow
[post_id]: 3325101
[parent_id]: 3323926
[tags]: 
OK, two points: 1) You said "improve". While code golf is "cool" and, if studied and applied properly, helps the developer increase their knowledge and grokking of the nuances and depths of the chosen language, the resulting golf code is, broadly speaking, NOT an improvement from software development point of view. While good, elegant code often results in shorter program, the opposite is not necessarily (or usually) true. Merely having shorter code more likely than not means the code is harder to read and harder to maintain, and these two qualities are pretty much paramount as far as good software development. 2) Having said that, Perl does provide many syntactic facilities and idioms that achieve better code while shortening it as a side effect. I will try to point out some possible changes to your code that would make it more idiomatic in my opinion, though not necessarily shorter. OLD: my @input_arr = (); push @input_arr, @$arr_ref; NEW: my @input_arr = (@$arr_ref); Explanation: You don't need to declare an array and initialize it separately. OLD: if (scalar(@input_arr) NEW: if (@input_arr Explanation: Arrays in Perl, when evaluated in scaalar context (which a numeric comparison operator like imposes), evaluate to the size of array. So scalar() is superfluous. More to be added later - gotta run
