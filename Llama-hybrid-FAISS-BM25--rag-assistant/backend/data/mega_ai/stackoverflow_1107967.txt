[site]: stackoverflow
[post_id]: 1107967
[parent_id]: 1107940
[tags]: 
It's hard to say what the issue is without seeing your complete source. The best way to debug issues like this is to use g++'s "-E" parameter to produce pre-processor output, and then look at that to figure out what's going on in your includes. Here's what the g++ info page says about "-E": -E Stop after the preprocessing stage; do not run the compiler proper. The output is in the form of preprocessed source code, which is sent to the standard output. Also, why not just include sys/types.h at the top of the file? Addendum: On my system, I've created a short file called foo.cc that contains only: #include And then I've run: g++ -E /tmp/foo.cc > /tmp/foo.pp Looking at this output in much detail is very important. For example, I learned that /usr/include/bits/types.h has a typedef for __time_t, and that /usr/include/types.h then uses that typedef to say "typedef __time_t time_t". But, there are interesting other macros surrounding that definiton. Pay special attention to things like the macro "__BEGIN_NAMESPACE_STD" in /usr/include/time.h, which on my system seems to be an empty define. But, I can imagine that some other systems may have a different value for this macro, forcing the definition of time_t into some other namespace. Read the Cpp info page, section "9 Preprocessor Output" that defines the format of the lines of the file. Of particular note is the section on: Source file name and line number information is conveyed by lines of the form # LINENUM FILENAME FLAGS And then goes on to describe "FLAGS" which are of interest for this level of debugging.
