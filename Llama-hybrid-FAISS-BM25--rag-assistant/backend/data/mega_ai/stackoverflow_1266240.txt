[site]: stackoverflow
[post_id]: 1266240
[parent_id]: 1264412
[tags]: 
Having read the @Romam's response to my comment, I think a better solution would be to add a simple server-side remote monitoring interface that responded to a client request, gathered the relevant object data, and returned it to the client. If the server side monitoring was compatible with JMX, you may not even need to implement any client code. There are a number of problem with using JDPA for this, including: Security: if the user can use your custom client to remote access your server, they can probably also use a regular remote debugger. That allows them to see any state they want to, and possibly remotely change state as well. Complexity: driving the JDPA protocol from the client side is most likely not a simple thing to do. Fragility: unless I'm very mistaken, your client will need to have hard-coded (e.g. in Strings) knowledge of class names, member names and member types for the server-side codebase. If you change implementation details of your server-side objects, your JDPA code may well break.
