[site]: stackoverflow
[post_id]: 5053146
[parent_id]: 5052540
[tags]: 
Assuming you've pasted that code in the order written in your source code and newBoundsFromBounds:forHandle:withDelta: isn't declared (as distinct from being defined) at some earlier point, I think the problem is just that at nb = [self newBoundsFromBounds:... the compiler doesn't yet know what the return type will be. An NSRect is a C-style struct rather than an Objective-C class, so the compiler really does need to know. As a solution, either put the definition of newBoundsFromBounds:... before mouseDragged:, add it to the @interface in your header file if you want it to be exposed to everyone or declare it internally to the implementation file as a category method. To do the final one, add the following to the top of your .m, assuming your class is called WikiDrawsView: @interface WikiDrawsView (private) - (NSRect)newBoundsFromBounds:(NSRect) old forHandle:(int) whichOne withDelta:(NSPoint) p; @end The 'private' is just a name you get to pick, it has no special meaning. Something like 'private' is often used to signify that you're using a category in a similar way that you might use private class member functions in C++ or a language like that. The quick way to describe categories is that they patch additional methods onto existing classes at runtime, and they use the @interface [classname] ([category name]) syntax, with no member variable section. I'm sure your tutorial will get to them, Apple's documentation on them is here . This is a common use of categories but not the primary use.
