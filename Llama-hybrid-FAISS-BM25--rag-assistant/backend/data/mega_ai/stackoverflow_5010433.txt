[site]: stackoverflow
[post_id]: 5010433
[parent_id]: 4964944
[tags]: 
I would think that even in this case you might want to consider having a centralized key/value store system rather than a series of independent ones on each server. Unless your load balancer always redirects the same users to the same servers you could run into a case where a user's requests are routed to different servers each time so each node would have to retrieve the game state instead of accessing it from a shared cache. Also the memory strain that a local key/value store on each system might incur could slow down your game server's other functions. Though that largely depends on the amount of data being cached. In general the best approach would be to run some benchmarks to see what kind of performance you'd get with a memcached cluster and the types of objects you're storing vs local storage. Depending on what other features you want from you key/value store you might also want to look into some alternatives like mongodb ( http://www.mongodb.org /).
