[site]: stackoverflow
[post_id]: 1888636
[parent_id]: 1888521
[tags]: 
You only want to expose the API and keep everything else hidden. Why? Ok lets assume you want to make an awesome Matrix library so you make class Matrix { public Object[][] data //data your matrix storages ... public Object[] getRow() } By default any other programmer that use your library will want to maximize the speed of his program by tapping into the underlying structure. //Someone else's function Object one() {data[0][0]} Now, you discover that using list to emulate the matrix will increase performance so you change data from Object[][] data => Object[] data causes Object one() to break. In other words by changing your implementation you broke backward compatibility :-( By encapsulating you divide internal implementation from external interface (achieved with a private modifier). That way you can change implementation as much as possible without breaking backward compatibility :D Profit!!! Of course if you are the only programmer that is ever going to modify or use that class you might as well as keep it public. Note: There are other major benefits for encapsulating your stuff, this is just one of many. See Encapsulation for more details
