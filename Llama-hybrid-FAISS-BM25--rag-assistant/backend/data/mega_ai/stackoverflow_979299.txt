[site]: stackoverflow
[post_id]: 979299
[parent_id]: 979260
[tags]: 
In both the last two structures, you've allocated storage for the structure called person. What I mean is if you have something like this: struct person { int age; char name[32]; }; It's just a declaration; no variable allocation is there and hence cannot be used inside the code. You can start using this structure after you have declared as follows: struct person p1; Then, p1 can be utilized p1.age or p1.name, etc. In terms of real-world code, instead of struct _person { int age; char name[32]; }person; we usually see typedef struct _person { int age; char name[32]; } person_t; In this case, we can save typing and more importantly the structure behaves like any other built-in type such as int, etc. For example, person_t p1; person_t *p1; And, so on.
