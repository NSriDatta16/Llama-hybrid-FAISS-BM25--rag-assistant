[site]: stackoverflow
[post_id]: 3339972
[parent_id]: 3339876
[tags]: 
In the real world, secret keys are stored securely (emphasis mine) in a HSM if they're meant to be stored securely, for an extended period of time (ranging from hours to years). There is the PKCS#11 standard that is meant to aid in interfacing with such systems, but I'll state the least - most HSMs have their own preferred mechanisms for interfacing with the HSM, and the PKCS#11 interface usually turns out to be a crippled one. Secret keys can also be stored securely in other devices like smart cards and USB tokens, but that is meant for key distribution among a mass populace, rather than key storage for a back-end system. Not everyone gets a budget for HSMs however, and a lot of other less secure (and obviously cheaper) alternatives are used. Some systems (I'll take the case of the Glassfish application server) store a master password, that is used to protect other passwords. The same holds good for keys - there would be a master key that is used to protect other keys (in a way, this is similar to how HSMs work internally). Of course, you're then stuck with securing the master key. In certain environments, this is easy, as you can place the key in a file that is restricted to a system administrator and the application, and no one else. Disclaimer : None of this should be treated as advice that is to be ingested blindly :-). If your keys need to be protected at all costs, invest in a HSM.
