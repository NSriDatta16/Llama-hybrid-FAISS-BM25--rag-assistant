[site]: stackoverflow
[post_id]: 443450
[parent_id]: 441816
[tags]: 
There have been several attempts at this. APL which used a selection of special symbols to represent each operation. This still exists in the form of the "J" language which -- wait for it -- replaced all the symbols with two or three letter ASCII character combinations. IBMs Visual Age circa 1998. Had a graphical IDE where you did things like drag a "socket" icons to your work space and join it to a "stream" icon. It just generated C++ though, and, after the intial g-whizz most programmers found the "text view" option and stuck with it. Suns Fortress -- still textual but it lets you use unicode symbols like âˆš as operators. Most published examples programs seem to stick with the ASCII character set though. There are two problems here. Text is very very good! People have been able to draw pretty good pictures for thousands of years but 99% of the books Amazon sells contain only simple text. There is probably a good reason for this. While a graphic for a "socket" and the associated "connection" points may be easy to use, its not trivial to develop. Instead of doing a method signature and perhaps a bit of Javadoc you now need a graphic designer to design an "Error message display icon" and define a set of rules as to how and where the graphic can be used.
