[site]: crossvalidated
[post_id]: 245656
[parent_id]: 
[tags]: 
Solving SVM with multiple linear kernels

I am trying to implement a variant of SVM in C++ that takes in a gram matrix G and a target vector Y. Here is the formulation of the problem: $$min \frac{1}{2}\alpha^TY(\sum_{t=1}^{T}u_tX_t{X_t}^T)Y\alpha + \frac{1}{2}\alpha^T\alpha + \sum_{i=1}^{m}\beta_i\alpha_i$$ $$\alpha_i \in [0, C]$$ Here the betas are some given coefficients. For some reasons, I want to use an API that allows me to directly input the gram matrix. I have checked LibSVM, they allow user to input the gram matrix but I did not see any API for that one. Besides, their formulation is of the standard SVM form, which is different from mine. And since my problem involves linear Kernel, it seems unreasonable to use LibSVM because essentially they use SMO, which is quadratic in the number of instances. Then I went to checkout LibLinear, but again they do not have API for precomputed kernel matrices and still they have different formulations. Can anyone give me some advice about how to tackle this problem? Now the only solution that I can think of is to use SMO algorithm because in solving the problem, SMO only requires a certain entry in the kernel matrix. But I am not so sure if I can directly adapt SMO to my formulation of SVM.
