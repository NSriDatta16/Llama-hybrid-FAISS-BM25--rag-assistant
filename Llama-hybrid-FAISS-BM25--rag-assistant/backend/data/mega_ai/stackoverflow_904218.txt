[site]: stackoverflow
[post_id]: 904218
[parent_id]: 732582
[tags]: 
I'm not quite sure what kind of sorting you're trying to do (you should specify with some examples). But optimally, you wouldn't be loading XML fragments into your array. $xmlfile=" "; //Extract each item $xml = new SimpleXMLElement($xmlfile); foreach ($xml->Level2[0] as $result) { $VAR1Array[] = (int) $result['VAR1']; $VAR2Array[] = (int) $result['VAR2']; //... etc etc } Last, sort() works by reference, so don't equate it to a variable (i.e. just say sort($array); as the entire line, and then $array will be sorted. If you cast as int s like I do in the above example you can use php's default sort function without using a user-defined comparison function like others suggested. And array_push is a little bit slower and harder to read than using php's $var[] syntax to add a new element to an array.
