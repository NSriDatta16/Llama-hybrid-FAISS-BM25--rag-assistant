[site]: stackoverflow
[post_id]: 1701695
[parent_id]: 1699683
[tags]: 
For another pespective - having used many of the above solutions, and liking them very much for bug tracking, wiki documentation and tracking information - I tend to move towards keeping much of my project "meta-data" (summary information pulling together wiki, bugs, schedules, communication) in spreadsheets now. For those now climbing onto the top rope of the ring preparing for a takedown, here's why... I come from a programming background, and one of the best books I read early in my career was The Pragmatic Programmer. One of the tenets they preach is finding a fundamental editor that you like, and get good with it (for various Very Good Reasons). After trying (frustratingly) to port and adapt my PM/Dev Management approach multiple times to multiple systems, I've extrapolated that Pragmatic tooling philosophy to the product/project management world I now inhabit. To stretch the metaphor, my editor is now Excel. I can't guarantee that for any company I work with, they have "Software Project Management xyz" or "Bug Tracking System abc" with the proper plugins - but I can be darn well sure they have Excel or some variant available. I know if I get ninja-like with that tool, I can continue to use it - and focus on the project, not the tools. This spreadsheet approach comes with some caveats: Excel done poorly can suck. We've all seen that. Watch for bloat and stupidity. Keep the bugs in the bug tracking system, the wiki stuff in the wiki. The spreadsheet is meant to pull this stuff together, not replace it. Keep it readable. Don't stuff everything in just because you can. Summary sheets are good. Try to standardize your templates and macros meaningfully for tasks and information, to maximize reuse over time and projects. Just like good programming. Back it up - use a document management system if you can. This approach isn't in the cloud or hosted centrally by default, so be aware of that.
