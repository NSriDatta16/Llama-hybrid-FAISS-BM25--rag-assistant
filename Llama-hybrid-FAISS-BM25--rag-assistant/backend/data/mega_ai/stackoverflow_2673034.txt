[site]: stackoverflow
[post_id]: 2673034
[parent_id]: 2672973
[tags]: 
1) When the user logs out of the system I would recommend doing a Session.Abandon(). If the user clicks the Back button in the browser he might see the cached version of the old page (this is entirely browser dependant), but he won't be able to do anything anyway. Disable the caching in your pages and the user shouldn't even see the cached old version :) A simple way to do this would be to add the following into Global.asax's Application_BeginRequest : HttpContext.Current.Response.Cache.SetCacheability(HttpCacheability.NoCache); HttpContext.Current.Response.Cache.SetNoStore(); 2) In your web.config set the session lifetim to 10 minutes, incremental.. That will do the trick 3) You can do this using authorization rules in web.config. If you want no anonymous users to access your website just enable access only to logged in users like this: If you want to restrict access not to the whole website, but only to some areas (like the MyAccount area, then you can add this instead.. Note: Web.config can have multiple elements! There's one important note about the location tag. The Path does NOW start with a '/'! So if you want to secure the /MyAccount folder, then your tag will start like this:
