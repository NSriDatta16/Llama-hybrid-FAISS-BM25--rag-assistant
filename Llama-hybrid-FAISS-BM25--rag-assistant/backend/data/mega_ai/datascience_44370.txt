[site]: datascience
[post_id]: 44370
[parent_id]: 44367
[tags]: 
A CNN network should easily achieve close to 100% accuracy on this task. Few aspects make this task easier : Clean High-contrast images generated from program Only 1 shape per image Given few images of a shape, libraries can generate thousands of training samples automatically with various transformations like rotations / scaling / flip Within few layers network should identify edge-detection patterns for vertices and learn the 3 vertices = triangle and so on For example, this code can generate training examples based on few input images : https://keras.io/preprocessing/image/ datagen = ImageDataGenerator( featurewise_center=True, featurewise_std_normalization=True, rotation_range=20, width_shift_range=0.2, height_shift_range=0.2, horizontal_flip=True) Few articles : https://www.researchgate.net/publication/312328148_Binary_shape_classification_using_Convolutional_Neural_Networks https://towardsdatascience.com/object-detection-with-neural-networks-a4e2c46b4491
