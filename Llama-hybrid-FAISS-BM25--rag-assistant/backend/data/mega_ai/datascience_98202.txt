[site]: datascience
[post_id]: 98202
[parent_id]: 
[tags]: 
Parsed source code classification - a text classification problem?

I'm new to machine learning, so excuse me if this is a foolish question. I'm working on a data science project in R , where I try to predict whether a Swift code sample from a coding problem will be accepted or rejected. The code samples come from IBM's Project CodeNet , which has 14 million code samples from coding problem websites (of which ~6000 are in Swift). Each code sample is annotated with whether it was accepted, or rejected. What I'd like to do is parse all of the Swift code samples into their Abstract Syntax Trees (in this case the Swift AST ), which is essentially an ultra-labelled version of the source code, and then feed that into a neural net so that it can then predict, just from its AST, whether a code sample will be accepted or rejected. What I'm not sure about is how I should treat this â€“ Is this a simple text classification problem? The Abstract Syntax Tree is indeed just text, and I'm just trying to classify a code sample in "accepted" or "rejected", but it's also extremely structured data. Is there another kind of neural net / machine learning model I should be using in this situation? PS. I'll most likely be using the R interface to tf.keras .
