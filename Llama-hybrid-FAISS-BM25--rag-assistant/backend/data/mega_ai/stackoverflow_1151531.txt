[site]: stackoverflow
[post_id]: 1151531
[parent_id]: 709070
[tags]: 
You can do this with Direct3D. It will easily handle large images for panning and zooming by drawing a textured quad. Due to the size of your images and the size of the screen (you don't have a 6Kx4K display, do you?), you'll want to create a system for paging your large image into textures on demand. Given the size of your input data, I think you'll find that the dominating factor in how fast you can get stuff into the card is the I/O bandwidth between the disk and the card. You may find that it is worthwhile to create a way of storing the images on disk that exploits spatial coherence in two dimensions (i.e. a tiled storage layout, not a scanline storage layout) as well as calculating point-sampled lower resolution versions. You can do all this yourself with uncompressed RGB, you don't need JPEG2000 in order to do this. You could do this data storage as a low priority background process once they select an image. First get what's going to be visible on screen into the card ASAP and then start reorganizing it on disk for faster streaming/zooming.
