[site]: stackoverflow
[post_id]: 3047593
[parent_id]: 3047567
[tags]: 
Is the code correct? Yes your code is (almost) fine, because "string" is a string literal and located in static storage. Note: A pointer is just a variable which stores a memory address. This line simply stores the address of the string literal "string" inside a variable called temp . char *temp = "string"; The C++ standard guarantees that the string literal will stay in memory for the duration of the program as defined below. Which means you are free to use that memory address in any scope anywhere during the whole life of your program. Why? The C++03 standard (current) has this to say: An ordinary string literal has type “array of n const char” and static storage duration (3.7), And section 3.7.1 - 1: All objects which neither have dynamic storage duration nor are local have static storage duration. The storage for these objects shall last for the duration of the program. Warning: In your code you are returning a char* , you should really be returning a const char * . It is undefined behavior if you try to modify a string literal, and your function return value shouldn't pretend to allow it. On a related side note to the warning. If you have in your code in 2 different places a string called "string" then whether or not they are distinct strings is implementation defined.
