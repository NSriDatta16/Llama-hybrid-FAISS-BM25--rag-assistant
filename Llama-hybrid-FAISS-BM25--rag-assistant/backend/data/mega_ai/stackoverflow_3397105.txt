[site]: stackoverflow
[post_id]: 3397105
[parent_id]: 3396958
[tags]: 
Usually, the most expensive parts of compilation are (a) reading the source files ( ALL of them) and (b) loading the compiler into memory for each source file. If you have 52 source (.cc) files, each of which #includes 47 #include (.h) files, you are going to load the compiler 52 times, and you are going to plow through 2496 files. Depending on the density of comments in the files, you may be spending a fair chunk of time eating useless characters. (In one organization I have seen, header files varied between 66% and 90% comments, with only 10%-33% of the file being "meaningful". The single best thing that could be done to enhance readability of those files was strip out every last comment, leaving only code.) Take a long look at how your program is physically organized. See whether you can combine source files, and simplify your hierarchy of #include files. Decades ago, companies like IBM understood this, and would write their compilers so that the compiler could be handed a list of files to compile, not just one file, and the compiler would only be loaded once.
