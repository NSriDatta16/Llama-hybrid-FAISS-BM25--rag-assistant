[site]: stackoverflow
[post_id]: 2021932
[parent_id]: 
[tags]: 
LINQ method with varying parameters

I have a LINQ method for the Search page of an in house app. The method looks as below public static DataTable SearchForPerson(String FirstName, String MiddleName, String LastName, String SSN, DateTime? BirthDate) { var persons = (from person in context.tblPersons where person.LastName == LastName || person.LastName.StartsWith(LastName) join addresse in context.tblAddresses on person.PersonID equals addresse.PersonID orderby person.LastName select new { person.PersonID, person.LastName, person.FirstName, person.SSN, addresse.AddressLine1 }); var filteredPersonsList = persons.Where(p => p.LastName == LastName).ToList(); if (filteredPersonsList.Count == 0) filteredPersonsList = persons.Where(p => p.LastName.StartsWith(LastName)).ToList(); var dataTable = filteredPersonsList.CopyLinqToDataTable(); return dataTable; } Now, as you can no doubt see, I made a slight oversight when creating this as it only searches by LastName . I was in process of expanding this when it occured to me that I may not be going about this properly. So, finally to my question; Is it more desirable( read-best practice, more efficient, etc... ) to have a single method like this with a mechanism( I am thinking a SWITCH on non-empty param ) to tell which parameter to search with or should I simply make multiple versions, a la SearchForPersonByLastName & SearchForPersonBySSN ? Additionally, is there an even more elagent solution to this, I would think common, issue?
