[site]: stackoverflow
[post_id]: 4418506
[parent_id]: 
[tags]: 
Problems INSERTing record if similar doesn't already exist

I'm trying to check whether a record already exists in the database (by similar title), and insert it if not. I've tried it two ways and neither quite works. More elegant way (?) using IF NOT EXISTS if mode=="update": #check if book is already present in the system cursor.execute('IF NOT EXISTS (SELECT * FROM book WHERE TITLE LIKE "%s") INSERT INTO book (title,author,isbn) VALUES ("%s","%s","%s") END IF;' % (title,title,author,isbn)) cursor.execute('SELECT bookID FROM book WHERE TITLE LIKE "%s";' % (title)) bookID = cursor.fetchall() print('found the bookid %s' % (bookID)) #cursor.execute('INSERT INTO choice (uid,catID,priority,bookID) VALUES ("%d","%s","%s","%s");' % ('1',cat,priority,bookID)) #commented out because above doesn't work With this, I get an error on the IF NOT EXISTS query saying that "author" isn't defined (although it is). Less elegant way using count of matching records if mode=="update": #check if book is already present in the system cursor.execute('SELECT COUNT(*) FROM book WHERE title LIKE "%s";' % (title)) anyresults = cursor.fetchall() print('anyresults looks like %s' % (anyresults)) if anyresults[0] == 0: # if we didn't find a bookID print("I'm in the loop for adding a book") cursor.execute('INSERT INTO book (title,author,isbn) VALUES ("%s","%s","%s");' % (title,author,isbn)) cursor.execute('SELECT bookID FROM book WHERE TITLE LIKE "%s";' % (title)) bookID = cursor.fetchall() print('found the bookid %s' % (bookID)) #cursor.execute('INSERT INTO choice (uid,catID,priority,bookID) VALUES ("%d","%s","%s","%s");' % ('1',cat,priority,bookID)) #commented out because above doesn't work In this version, anyresults is a tuple that looks like (0L,) but I can't find a way of matching it that gets me into that "loop for adding a book." if anyresults[0] == 0, 0L, '0', '0L' -- none of these seem to get me into the loop. I think I may not be using IF NOT EXISTS correctly--examples I've found are for separate procedures, which aren't really in the scope of this small project. ADDITION: I think unutbu's code will work great, but I'll still getting this dumb NameError saying author is undefined which prevents the INSERT from being tried, even when I am definitely passing it in. if form.has_key("title"): title = form['title'].value mode = "update" if form.has_key("author"): author = form['author'].value mode = "update" print("I'm in here") if form.has_key("isbn"): isbn = form['isbn'].value mode = "update" It never prints that "I'm in here" test statement. What would stop it getting in there? It seems so obvious--I keep checking my indentation, and I'm testing it on the command line and definitely specifying all three parameters.
