[site]: stackoverflow
[post_id]: 401066
[parent_id]: 400772
[tags]: 
For us the integration test is generally performed by the developer before a commit. Just simple surface test to see that nothing obvious is broken. Then we deploy the code from trunk on a development server connected to a test database that is a complete copy of the production database and have the users responsible for the new functionality do acceptance test and further integration tests on that server. We have a concept of "super user" to organize this. Super users are responsible for educating other users in their area of expertise and answering helpdesk questions related to the usage of the system. The super users are also the people who are involved in feature requests and requirement discussions for all features related to their work. So when a new feature is developed the super user is the one who first validate the design suggestion and than performs the final stages of testing before deployment. This setup is good because it ensures that domain experts are the ones who validate the system functionality and removes some responsibilities from the IT-department. The bad thing is that they are not usually very technical or good testers. As users they tend to see the the system for what is is rather than what it could be. The fact that they also have their ordinary functions in the organization as full time employees also means that they are a very limited resource in terms of testing.
