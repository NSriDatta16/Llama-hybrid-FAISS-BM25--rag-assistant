[site]: stackoverflow
[post_id]: 2273327
[parent_id]: 2267646
[tags]: 
I think I have got it. For the benefit of anyone who runs into the same problem, there was an interesting lesson to be learned about some lesser known features of Windows: The link Marvin mentioned above... http://support.microsoft.com/kb/306149 ...says: To display your assembly in the Add Reference dialog box, you can add a registry key, such as the following, which points to the location of the assembly [HKEY_CURRENT_USER\SOFTWARE\Microsoft\.NETFramework\AssemblyFolders\MyAssemblies]@="C:\\MyAssemblies" where MyAssemblies is the name of the folder in which the assemblies reside. So I did just that, replacing "myAssemblies" with "C:\Windows\Assembly". Nothing happened. I changed the value of the empty standard key to "C:\Windows\Assembly". Nothing. I tried some variations of the theme: double backslashes, ending with a backslash, the return of the son of the backslash. No cigar. So I tried to work the other way around by trying to copy the necessary dll from c:\windows\assembly into one of the directories that are being watched by the "add reference" dialog. On my machine, these paths are conveniently listed under [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft.NETFramework\v2.0.50727\AssemblyFoldersEx] When I tried to copy the dll from c:\windows\assembly, there was no "copy" option in the context menu. Drag'n'drop didn't work either. For this problem, I found several alternative solutions here: http://geekswithblogs.net/pavelka/archive/2006/05/05/WindowsExplorerAndTheGlobalAssemblyCache.aspx I opted for solution 2: Add DisableCacheViewer Registry Key Another way to disable to create a new dword key under HKLM\Software\Microsoft\Fusion\ with the nane DisableCacheViewer and set itâ€™s [DWORD] value to 1. After I had done that, I could see the real directory structure below c:\windows\assembly; almost each and every dll has its own subdirectory. As soon as DisableCacheViewer was set, I could traverse the real directory tree that was hidden under c:\windows\assembly copy dlls and paste them to one of the directories listed under "AssemblyFoldersEx" deduce the correct path to my dlls and create a fresh key to that path just below "AssemblyFoldersEx". Thank you very much to everyone who answered, and a special thanks goes to hannes pavelka, whose blog entry helped to solve my problem. P.S.: I'm almost certain that I never had to do this under Windows XP. IIRC, all of the interop assemblies were available without this kind of registry fumbling.
