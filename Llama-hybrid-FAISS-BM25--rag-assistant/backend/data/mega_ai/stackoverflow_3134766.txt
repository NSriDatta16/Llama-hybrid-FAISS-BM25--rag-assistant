[site]: stackoverflow
[post_id]: 3134766
[parent_id]: 3134681
[tags]: 
Couldn't you do this: int handleDragon() { int rc = 0; if (dragonSlayer.on_vacation()) { cout and then: int monster() { int rc = 0; // some statements ... rc = handleDragon(); // rest of long method... return rc; } or if you want to do something with the return code: int monster() { int rc = 0; // some statements ... int handleDragonReturnCode = handleDragon(); if(handleDragonReturnCode == 0) { // do something } else { // do something else } // rest of long method... return rc; } Is this what you want? On a general note, avoid using magic numbers like 1 and 2 for your return codes. Use constants, #define , or enum . Concerning return , try to have one exit point from your function. As you have found out, having multiple return statements can make refactoring hard (as well as understanding the logic unless it's really simply).
