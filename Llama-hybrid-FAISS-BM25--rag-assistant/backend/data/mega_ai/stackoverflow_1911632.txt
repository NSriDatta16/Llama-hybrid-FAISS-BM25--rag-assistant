[site]: stackoverflow
[post_id]: 1911632
[parent_id]: 471935
[tags]: 
The best solution I've found for this problem is to have the following in a common header: // compiler_warning.h #define STRINGISE_IMPL(x) #x #define STRINGISE(x) STRINGISE_IMPL(x) // Use: #pragma message WARN("My message") #if _MSC_VER # define FILE_LINE_LINK __FILE__ "(" STRINGISE(__LINE__) ") : " # define WARN(exp) (FILE_LINE_LINK "WARNING: " exp) #else//__GNUC__ - may need other defines for different compilers # define WARN(exp) ("WARNING: " exp) #endif Then use #pragma message WARN("your warning message here") throughout the code instead of #warning Under MSVC you'll get a message like this: c:\programming\some_file.cpp(3) : WARNING: your warning message here Under gcc you'll get: c:\programming\some_file.cpp:25: note: #pragma message: WARNING: your warning message here Not perfect, but a reasonable compromise.
