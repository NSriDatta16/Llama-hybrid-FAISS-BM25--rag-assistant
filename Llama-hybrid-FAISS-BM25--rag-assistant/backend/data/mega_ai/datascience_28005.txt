[site]: datascience
[post_id]: 28005
[parent_id]: 
[tags]: 
OneClass SVM classification for text data

Problem: I need to classify whether a document is checked or not checked. I have only text dataset for check document and if a document does not consist the check data it can automatically be classified as not checked. I found that it can be doe using OneClass SVM. Below are the dataset and program implemented by me. Code: from sklearn import svm import pandas as pd from nltk.stem import PorterStemmer from nltk.corpus import stopwords from sklearn.model_selection import cross_val_score from sklearn.feature_extraction.text import TfidfVectorizer ps = PorterStemmer() stop = stopwords.words('english') data_test = pd.DataFrame({"Keywords":["Barge ID", "Check"]}) data = pd.DataFrame({"Keywords":["Vessel Name", "Barge ID", "Barge/Vessel", "VESSEL"]}) data['Keywords'] = data['Keywords'].apply(lambda x: ' '.join([word for word in x.split() if word not in (stop)])) data['Keywords'] = data['Keywords'].str.replace('[^\w\s]',' ').replace('\s+',' ') data_test['Keywords'] = data_test['Keywords'].apply(lambda x: ' '.join([word for word in x.split() if word not in (stop)])) data_test['Keywords'] = data_test['Keywords'].str.replace('[^\w\s]',' ').replace('\s+',' ') vectorizer = TfidfVectorizer( max_features = 200, ngram_range = ( 1,3 ), sublinear_tf = True ) data_features = vectorizer.fit_transform( data['Keywords'] ) clf = svm.OneClassSVM(nu=0.1, kernel="rbf", gamma=0.1) clf.fit(data_features) test_data_features = vectorizer.transform(data_test['Keywords']) print(clf.predict(test_data_features)) I tried it for a small sample code but then to it did not work. it is wrongly indicating as -1 for Barge ID and 1 for Check
