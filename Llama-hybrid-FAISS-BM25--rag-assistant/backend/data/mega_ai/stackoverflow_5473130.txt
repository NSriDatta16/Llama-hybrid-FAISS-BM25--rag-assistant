[site]: stackoverflow
[post_id]: 5473130
[parent_id]: 
[tags]: 
Query for items using filter for most recent entry in a related table

Hello I seem be having a problem with querying. I have a list of items. Any Item can have a status set to it (In, out, Collected, Destroyed, etc.). Here is my views. def client_summary(request, client_id): client = None items = None try: client = models.Client.objects.get(pk = client_id) items = client.storageitem_set.all() total_items = items.count() except: return HttpResponse(reverse(return_clients)) return render_to_response('client_summary.html', {'items':items, 'total_items':total_items, 'client':client}, context_instance = RequestContext(request)) If I have in my template {%for item in items%} {{item.itemstatushistory_set.latest}} {%endfor%} This will display the all the latest status. Now I want to only to print out all items that their status is Destroyed only. For some reason I can't seem to do this. Here is some more information from my models as well. class StorageItem(models.Model): type = models.ForeignKey(StorageObject) client = models.ForeignKey(Client) company_id = models.PositiveIntegerField(unique = True, blank = True, null = True) content = models.TextField(blank = True) alternative_id = models.CharField(verbose_name = 'Client no.', max_length = 60, blank = True) title = models.CharField(max_length = 100) format = models.ForeignKey(Format, blank = True, null = True) location = models.CharField(max_length = 20, blank = True) item_class = models.TextField(blank = True) def __unicode__(self): return self.title class Status(models.Model): description = models.CharField(max_length = 60) notes = models.TextField(blank = True) def __unicode__(self): return self.description class Meta: verbose_name_plural = 'Status' get_latest_by = 'date' ordering = ['date'] class ItemStatusHistory(models.Model): date = models.DateTimeField(auto_now = True) contact = models.ForeignKey(Contact) item = models.ForeignKey(StorageItem) status = models.ForeignKey(Status) user = models.ForeignKey(User) def __unicode__(self): return str(self.status EDIT : There are still some problems because the relation between an item could have many statuses. But I want to only list the most recent status only for destroyed items. Example: Supposing there are 3 items and they have sets item1 = [in, out, destroyed] , item2 = [destroyed, in] , item3 = [destroyed , collected, destroyed] , item4 = [in] where [1st status, 2nd status, 3rd status, etc] . I only want to display the latest status for that item. Both Mike and kriegar will get a result like [item1, item2, item3, item3] . Because Yuji used the distinct function, he will get [item1, item2, item3] . The answer I need to get at the end should be [item1, item3] .
