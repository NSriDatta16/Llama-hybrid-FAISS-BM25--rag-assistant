[site]: datascience
[post_id]: 55749
[parent_id]: 
[tags]: 
how to reduce the load time of tensorflow text classification model.?

I want to reduce the load time of the model, when testing the model to predict the categories using tensorflow text classification. I am getting the raw data from mongodb collection, which has over 1 million of data. It is taking a long time for prediction. I have used multilabel binarizer for the multi categories estimator = tf.contrib.estimator.DNNEstimator( head=multi_label_head, hidden_units=[64, 10], feature_columns=[descriptions_embeddings]) labels = np.array(train_encoded) features = {'descriptions': np.array(train_descriptions)} train_input_fn = tf.estimator.inputs.numpy_input_fn( features, labels, shuffle=True, batch_size=32, num_epochs=20) estimator.train(input_fn=train_input_fn) eval_input_fn = tf.estimator.inputs.numpy_input_fn( {'descriptions':np.array(test_descriptions).astype(np.str)}, test_encoded.astype(np.int32), shuffle=False) estimator.evaluate(input_fn=eval_input_fn) raw_test = ["Pemeriksaan pilihan makanan kita dan makanan yang kita masukkan ke dalam tubuh kita. Berdasarkan memoar Jonathan Safran Foer.", #Documentary "When a lawyer shows up at the vampire doorstep, he falls prey to his charms and joins him in his search for fresh blood. Enter Dr. van Helsing, who may be the only one able to vanquish the count."] predict_input_fn = tf.estimator.inputs.numpy_input_fn( {'descriptions': np.array(raw_test).astype(np.str)}, shuffle=False) prediction = estimator.predict(predict_input_fn) for movie_genres in prediction: top_2 = movie_genres['probabilities'].argsort()[-3:][::-1] for genre in top_2: text_genre = encoder.classes_[genre] print(text_genre) I am expecting to have the minimum load time when testing the model, Does TF serving will be suitable and how i can integrate into it.
