[site]: stackoverflow
[post_id]: 3689848
[parent_id]: 3687116
[tags]: 
I think RRUZ mostly got it all. You can also look at SimpleStorage because it was made just with task like this in mind. I use it for all my program settings manipulation. For example here is one of such examples I use (you can see it simplifies code because you don't need to check if a node or a value exist): The XML: ********* ********* ************ 1000 8778 ******* ISAPI 5 500 And The code: procedure THydraSettings.LoadSettings(const RootPath: string); var Settings: ISimpleStorage; DefaulNode: IElement; DefExtDir: string; begin DefExtDir := ExtractFilePath(ParamStr(0)) + DIR_EXTENSIONS; Settings := StorageFromFile(RootPath + XML_SettingsFile); FExtensionsDir := Settings.Get(cNode_Extensions).AsStringDef(DefExtDir); FExtensionsDir := IncludeTrailingPathDelimiter(FExtensionsDir); // IPC server based settings FIPC.Name := Settings.Get(cNode_IPCName).AsStringDef('AI_Hydra'); // http server based settings FHTTP.ServerPort := Settings.Get(cNode_HttpPort).AsIntegerDef(80); FHTTP.ListenQueue := Settings.Get(cNode_ListenQueue).AsIntegerDef(100); // get the defaults settings for modules DefaulNode := Settings.Get([cNode_Modules, cNode_Default]); FProtocol := DefaulNode.Get(cNode_Protocol).AsStringDef('ISAPI'); FMaxProcNum := DefaulNode.Get(cNode_MaxProcNum).AsIntegerDef(5); FMemoryLimit := DefaulNode.Get(cNode_MemoryLimit).AsIntegerDef; FTimeout := DefaulNode.Get(cNode_MemoryLimit).AsIntegerDef(30); FUnload := DefaulNode.Get(cNode_Unload).AsBooleanDef; end;
