[site]: stackoverflow
[post_id]: 4996351
[parent_id]: 
[tags]: 
Need help designing video transcoding processing using EC2?

I'm currently transcoding user uploaded videos in a linode server and using s3 to store them, but, being the optimist I am, I want to move the transcoding to Amazon EC2 to scale up if necessary, also to gain experience from using it. This is my work flow so far: Upload videos directly to s3, bypassing nginx/Rails stack Create an entry in Amazon simple queue service with video url See if any instances of EC2 are running, if not start one with a simple ruby script as startup script (I believe Amazon allows startup scripts under 6kb) Ruby script connects to simple queue and runs the ffmpeg command to transcode the video Script sees if there are any additional queues and runs them Shutdowns the instance when there are no more queues (might make it run the full hour since Amazon charges for full hour for any part of the hour EC instance is running) Obviously the above is basic and doesn't use EC2 to its full purpose. I've thought about using threads to connect to queue and run new jobs on same EC2 instance or create additional EC2 instances, where the startup script will run the ruby script. With the former we'll need to limit number of jobs in same EC2 based on cpu usage. The latter seems a waste, but given video transcoding is cpu intensive, maybe two ffmpegs at same time is not feasible. I've also thought about Amazon's auto scaling to create new instances, but using Ruby seems simpler and easier to me. My question is what is the best way to do this efficiently? Is running two ffmpegs considered bad practice? (Let's assume the video size will be around 200mbs average.) Is using Ruby threads optimal given the bad name they seem to have? Should I look into EventMachine in place of threads? I don't want to run any EC2 instances unless necessary, get the maximum juice out of the instances, but not let my users wait too long for their videos to be transcoded. Based on this article http://stream0.org/2009/10/h264-video-encoding-on-amazons.htmlhttp://stream0.org/2009/10/h264-video-encoding-on-amazons.html High-CPU, Extra Large Instance seems to be the best option. Of course I plan to do some of my own testing, but I wanted to get some expert opinion before I dive in. Thanks! This turned out to be an essay, sorry for the length.
