[site]: stackoverflow
[post_id]: 5435859
[parent_id]: 5434885
[tags]: 
If it is what it looks like and the content is HTML-encoded, you can't do it in one step. You must retrieve every description text and parse into its own DOM (unless you want to resort to regex, which I would strongly discourage) . When in doubt, you can pass it through Tidy before. DOMDocument has loadHTML() , which is pretty resilient, but it is not guaranteed that it can load any HTML. // beware, this is untested. it should give you an idea, though. $dom = new DOMDocument; libxml_use_internal_errors(TRUE); $dom->load('http://www.myrss.com'); libxml_clear_errors(); $xPath = new DOMXPath($dom); $items = $xPath->query('/rss/channel/item'); foreach($items as $item) { $descr = $xPath->query('./description', $item); // there should be at most one, but foreach gracefully // handles the case where there is no foreach ($descr as $d) { $temp_dom = new DOMDocument(); $temp_dom->loadHTML( $d->nodeValue ); // error handling/Tidy here! $temp_xpath = new DOMXPath($temp_dom); $img = $temp_xpath->query('//img'); $txt = $temp_xpath->query('//span[@class="Apple-style-span"]'); // now do something with $img and $txt } }
