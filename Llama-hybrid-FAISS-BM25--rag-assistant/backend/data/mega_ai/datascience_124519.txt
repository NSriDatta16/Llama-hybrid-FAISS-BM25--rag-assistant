[site]: datascience
[post_id]: 124519
[parent_id]: 
[tags]: 
Neural Network for binary classification not working

I have made a neural network that was working correctly as a multi-class classifier, but after changing the loss and the activation function, plus the output layer to just 1 neuron, it is not working correctly. I hope you can tell me what is wrong with my code: # Define the MLP model model = Sequential() model.add(Dense(X_train.shape[1], input_dim= X_train.shape[1], activation= 'sigmoid')) model.add(Dense(2*X_train.shape[1], activation= 'sigmoid')) model.add(Dense(2*X_train.shape[1],activation= 'sigmoid')) model.add(Dense(1,activation= 'sigmoid', kernel_initializer='normal')) model.compile(loss='binary_crossentropy', optimizer='Adam', metrics=['accuracy']) monitor = EarlyStopping(monitor='val_loss', min_delta=1e-3, patience=5, verbose=1, mode='auto', restore_best_weights=True) # Train the model model.fit(X_train, Y_train,validation_data=(X_test,Y_test),callbacks=[monitor], epochs=10, batch_size=64, verbose=1) # Evaluate the model on the test set y_pred = model.predict(X_test) y_pred_classes = y_pred y_preds = np.argmax(y_pred_classes, axis=1) # Calculate and print accuracy accuracy = accuracy_score(Y_test, y_preds) print('Accuracy of MLP: ' + str(accuracy)) # Calculate and print precision, recall, and F1-score precision, recall, fscore, _ = precision_recall_fscore_support(Y_test, y_preds, average='weighted') print('Precision of MLP: ' + str(precision)) print('Recall of MLP: ' + str(recall)) print('F1-score of MLP: ' + str(fscore)) # Print the classification report and confusion matrix print(classification_report(Y_test, y_preds,target_names=target_names)) import matplotlib.pyplot as plt import seaborn as sns cm=confusion_matrix(Y_test,y_preds) f,ax=plt.subplots(figsize=(10,10)) sns.heatmap(cm,annot=True,cmap='Blues',linewidth=0.5,fmt=".0f",ax=ax,xticklabels=target_names, yticklabels=target_names) plt.xlabel("Predicted") plt.ylabel("Real") plt.show() Thanks for your help.
