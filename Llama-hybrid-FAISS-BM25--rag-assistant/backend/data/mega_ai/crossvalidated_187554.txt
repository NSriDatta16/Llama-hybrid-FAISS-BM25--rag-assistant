[site]: crossvalidated
[post_id]: 187554
[parent_id]: 181853
[tags]: 
Here is an expanded version of my comment. R's internal sample() function is implemented as per https://svn.r-project.org/R/trunk/src/main/random.c . There are two methods implemented. The first is the "classic" inversion approach- sample $U\sim$Uniform$(0,1)$ and find $k$ such that $\sum_{j As Brian Ripley reported https://stat.ethz.ch/pipermail/r-devel/2005-August/034412.html , we looked at efficient algorithms for sample() in 2005. It is difficult to come up with a good one-size-fits all rule but as mentioned a basic rule of thumb is to use Walker's algorithm if there are more than 200 probabilities >= 0.1/n. And this is what is in the source code (the ?sample documentation says 250 but that is incorrect). So, for the Markov chain application you mentioned, inversion sampling would always be used , not Walker's method. As you've probably realised this might not be great for Markov chain (and similar) simulations where you will often take small (n=1 for Markov Chains) samples from the same, or similar, distributions. In particular, for some transition matrices, it might be much more efficient to compute the lookup table for Walker's algorithm at the beginning. (It also depends on how many update steps you want to do in the Markov chain etc).
