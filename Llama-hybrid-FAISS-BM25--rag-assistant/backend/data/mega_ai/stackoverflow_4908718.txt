[site]: stackoverflow
[post_id]: 4908718
[parent_id]: 
[tags]: 
CUDA version slower than CPU version?

I am writing a image subsampler in CUDA and use the threads to perform the averaging operation.However if I do this without calling the kernel it runs much faster compared to when I actually call the CUDA kernel.Image size right now is 1280x1024. Does the kernel call usually take substantial time or is there something wrong with my implementation? P.S I tried calling just the kernel(with code removed) and it is pretty much same time as kernel with code.Also my code w/o kernel call runs approx 350 ms whereas with Kernel call runs close to 1000ms. __global__ void subsampler(int *r_d,int *g_d,int *b_d, int height,int width,int *f_r,int*f_g,int*f_b){ int id=blockIdx.x * blockDim.x*blockDim.y+ threadIdx.y*blockDim.x+threadIdx.x+blockIdx.y*gridDim.x*blockDim.x*blockDim.y; if (id I define blockSizeX and blockSizeY to be 1 and 1 ( i tried making them 4,16) but somehow this is the fastest dim3 blockSize(blocksizeX,blocksizeY); int new_width=img_width/2; int new_height=img_height/2; int n_blocks_x=new_width/blocksizeX+(new_width/blocksizeY == 0 ?0:1); int n_blocks_y=new_height/blocksizeX+(new_height/blocksizeY == 0 ?0:1); dim3 gridSize(n_blocks_x,n_blocks_y); and then I call the kernel with gridSize,BlockSize.
