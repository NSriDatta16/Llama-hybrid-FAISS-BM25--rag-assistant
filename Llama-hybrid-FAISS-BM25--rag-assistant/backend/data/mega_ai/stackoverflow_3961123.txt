[site]: stackoverflow
[post_id]: 3961123
[parent_id]: 3961016
[tags]: 
(1) Is appending Base to the name of base classes useful? This is a matter of personal preference. I personally can't stand it. I hate seeing code like RestCallBase instance = new SomeConcreteRestCall(); instance is a RestCall . Period. (2) Is there a good way to decide on the ordering/grouping of members? I have seen code that uses #region for this, but I feel like it's not pervasive. I like to see related items grouped together. I hate #region (it's just a way to hide code and it increases maintenance costs trying to keep all the #region s organized) and I consider it a code smell. (3) How do you feel about using the same name for type and identifier in cases like this? Love it. Please see my previous answer on this subject. I go back and forth because on one hand it feels cleaner than using underscore ( _MyPrivateProperty ) or camel cased ( myPrivateProperty ). I do not like the leading underscore anymore (I have to admit I use to). Now I prefix members with this ; it's just clearer to me. (4) Is it clear that the target of the lone verb comprising the method name is the noun which is the name of the class? To me, it is redundant to say PrepareForRestCall . I could go either way on this one but would probably lean towards the shorter Prepare but if someone argued that PrepareForRestCall is clearer or asked what is Prepare preparing for, I would probably concede the point. (5) Here a region is used in place of a comment, but I have not seen any other code that uses regions this way. I hate regions. The way it is used here is ridiculous. (6) I changed this from sw to writer after code review. Would you have as well? Yes. (7) Would you use curly braces for a single statement? I opt to save two lines so I can see more code on the screen. Oh you better believe I would. Clearer, reduces maintenance costs.
