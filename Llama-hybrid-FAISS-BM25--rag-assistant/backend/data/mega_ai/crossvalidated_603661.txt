[site]: crossvalidated
[post_id]: 603661
[parent_id]: 
[tags]: 
Which models to use when forecasting time series data that shows exponential decay?

I'm working through "Forecasting: Principles and Practice (3rd edition)" by Rob J Hyndman and George Athanasopoulos to better understand times series forecasting in an R environment. This resource relies on the fable and feasts packages for forecasting. I need guidance for finding a reasonable model for forecasting a time series where the data shows significant autocorrelation, no seasonality, and “exponential decay” when plotted over time; if someone could please point me in the right direction. The same data is easily converted into a “logarithmic” curve by expressing the unit transitions as a percentage of population initial units. The example data (dataframe code with data is presented at the bottom of this post) shows 32 monthly unit transitions into dead state “StateX” (exponential decay), and such transitions as a percentage of initial units (“rateCumX”), as depicted here: I believe a log transformation is required because the number of units reaching State X can never be negative. In my experience this type of data tends to form a lognormal distribution around the forecast mean with a rather long tail. Let’s suppose we have data for the first 12 months and would like point and interval forecasts for the next 20 months. I can run the below ARIMA model and graph the results as follows: library(dplyr) library(tidyr) library(feasts) library(fabletools) library(fable) library(ggplot2) library(tsibble) library(tsibbledata) # running the below recommends ARIMA(0,2,1) or linear exponential smoothing fit % model(ARIMA(log(StateX))) report(fit) # run forecast for State X using the above fit for ARIMA(0,2,1) fit %>% forecast(h=20) %>% autoplot(data[1:12,]) + labs(y = "Units", title = "Transitions to State X") Alternatively, I can run an ETS model as shown below which shows implausible graphed results: # running the below recommends ETS model (ETS(M,Ad,N)) fit1 % model(ETS(log(StateX))) report(fit1) # run forecast for State X using ETS model fit1 %>% forecast(h=20) %>% autoplot(data[1:12,]) + labs(y = "Units", title = "Transitions to State X") And I can run a random walk (RM) with drift as shown below with the following graphed results: fit2 % model(RW(log(StateX)~drift())) report(fit2) fit2 %>% forecast(h=20) %>% autoplot(data[1:12,]) + labs(y = "Units", title = "Transitions to State X") Please point me in the right direction for autocorrelated exponential decay data or its corollary. Or should I instead by forecasting rateCumX, the logarithmic curve function? Either StateX (unit transitions) or rateCumX (unit transitions/total initial units) will get me where I need to go. Here is the code for the example data I show the plots for: data % as_tsibble(index = Month)
