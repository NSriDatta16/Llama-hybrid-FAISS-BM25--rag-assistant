[site]: stackoverflow
[post_id]: 1675462
[parent_id]: 1675398
[tags]: 
You can find the BNF for C here and I think it was taken from K&R, which you could check out. You could also check out the SQL BNF here which may provide more information on formulating good sequences. This will provide some convention information. In terms of AST generation, it really doesn't matter how 'clunky' your definition is providing it parses the source correctly for all permutations. Then just add the actions to build your AST. Just make sure you are constructing your grammer for the right parser generator such as an LL or LR parser as you may run into problems with reduction, which will mean some rules need rewriting in a new way. See this on eliminating left recursion . You may also want to check out Bison/Yacc examples such as these or these . Also check out the Dragon Book and a book called "Modern Compiler Implementation in C"
