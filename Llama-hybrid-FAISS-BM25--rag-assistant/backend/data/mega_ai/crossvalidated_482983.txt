[site]: crossvalidated
[post_id]: 482983
[parent_id]: 482771
[tags]: 
I will explain using a somewhat simpler model, but with the same kind of discrepancy. Consider the pigs dataset in the emmeans package. require(emmeans) require(multcomp) data(pigs) pigs $pct = factor(pigs$ percent) I'll fit an ordinary regression model, making the contrast coding explicit so there is no question about how it is parameterized: mod = lm(conc ~ source*pct, data = pigs, contrasts = list(source = "contr.treatment", pct = "contr.treatment")) Here is the emmeans analysis, showing both the estimated marginal means (EMMs) and the comparisons: (emm = emmeans(mod, "source")) ## NOTE: Results may be misleading due to involvement in interactions ## source emmean SE df lower.CL upper.CL ## fish 30.0 1.52 17 26.8 33.3 ## soy 39.1 1.67 17 35.6 42.6 ## skim 47.3 1.74 17 43.6 50.9 ## ## Results are averaged over the levels of: pct ## Confidence level used: 0.95 pairs(emm) ## contrast estimate SE df t.ratio p.value ## fish - soy -9.06 2.26 17 -4.012 0.0025 ## fish - skim -17.24 2.31 17 -7.467 And here are the comparisons using glht : summary(glht(mod, mcp(source = "Tukey"))) ## Warning in mcp2matrix(model, linfct = linfct): covariate interactions found -- ## default contrast might be inappropriate ## ## Simultaneous Tests for General Linear Hypotheses ## ## Multiple Comparisons of Means: Tukey Contrasts ## ## ## Fit: lm(formula = conc ~ source * pct, data = pigs, contrasts = list(source = "contr.treatment", ## pct = "contr.treatment")) ## ## Linear Hypotheses: ## Estimate Std. Error t value Pr(>|t|) ## soy - fish == 0 8.8833 4.3051 2.063 0.1272 ## skim - fish == 0 9.6500 4.3051 2.242 0.0923 . ## skim - soy == 0 0.7667 3.8506 0.199 0.9784 ## --- ## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ## (Adjusted p values reported -- single-step method) Note that, as in the OP, the glht estimates are not the same as the emmeans estimates. Here is something to consider: Challenge question 1 The emmeans analysis shows that the results of pairs comprise pairwise differences of the emm estimates. But in the glht results, what is being compared? That is, find estimates g such that the glht estimates are pairwise comparisons of g . I will answer that in a little bit. But first let's consider a different model -- or rather a re-parameterization of the same model using different contrast codings for pct : Re-parameterized model modr = update(mod, contrasts = list(source = "contr.treatment", pct = "contr.poly")) pairs(emmeans(modr, "source")) ## NOTE: Results may be misleading due to involvement in interactions ## contrast estimate SE df t.ratio p.value ## fish - soy -9.06 2.26 17 -4.012 0.0025 ## fish - skim -17.24 2.31 17 -7.467 Note that these results are identical to the previous ones for emmeans summary(glht(modr, mcp(source = "Tukey"))) ## Warning in mcp2matrix(model, linfct = linfct): covariate interactions found -- ## default contrast might be inappropriate ## ... (lines omitted) ... ## Linear Hypotheses: ## Estimate Std. Error t value Pr(>|t|) ## soy - fish == 0 9.058 2.258 4.012 0.00234 ** ## skim - fish == 0 17.237 2.308 7.467 These estimates are not the same as the previous glht estimates. In fact, they now seem a lot like the emmeans estimates. Challenge question 2 What is going on here? In particular, why are the glht results different depending on how we parameterize the other factor? Answers to challenge questions To answer these, first note that both packages issue warnings about the presence of interaction(s). These messages are not shown in the OP, but they are pertinent. The main point is that the glht estimates are based only on the coefficients involving source , without taking into account the interactions. The answer to challenge question 1 is that g comprises the predictions when pct is held at its first level. That is because with the contrast coding in mod , all the interaction contrasts are zero when pct is at its first level. The answer to challenge question 2 is more complicated, but basically it has to to with making the pct contrasts average to zero so that the interactions don't confound the source effects. Finally, note there is an option in mcp to average over the interactions: summary(glht(mod, mcp(source = "Tukey", interaction_average = TRUE))) ## ... (lines omitted) ... ## ## Linear Hypotheses: ## Estimate Std. Error t value Pr(>|t|) ## soy - fish == 0 9.058 2.258 4.012 0.00251 ** ## skim - fish == 0 17.237 2.308 7.467 If you use that option, the discrepancies disappear. I wish they had chosen a different default but I think it is this way to be compatible with old versions of multcomp . My advice is to take warning messages seriously; and, generally, be very cautious in computing marginal means of factors that are involved in interactions. It is usually best to re-fit the model without the interactions. (And when the interaction effects are non-negligible, to not compute marginal means at all.) Created on 2020-08-14 by the reprex package (v0.3.0)
