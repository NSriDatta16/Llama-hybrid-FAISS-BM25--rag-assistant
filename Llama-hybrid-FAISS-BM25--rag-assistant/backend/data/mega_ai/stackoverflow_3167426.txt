[site]: stackoverflow
[post_id]: 3167426
[parent_id]: 3161380
[tags]: 
As people say, it depends on the project but the way we work everyone is expected to have basic skills right down the architecture stack from web front end, through java to SQL and they take functional areas to work on doing the whole thing. That works for us because most of our front end and SQL stuff is relatively simple so in depth skills are rarely needed here, and because our work neatly fragments into nice size functional chunks. If that's not the case with you then it won't work. As a rule if this is possible I think this works best as within each bit of functionality you get someone who is focused on the complete end product and as a result you end up with a better user experience. You also reduce the dependencies between individuals in the team which means you're less likely to have people wasting time waiting for someone else to finish something. Exceptions to this I tend not to mess around with: Designers - developers generally produce ugly web work and designers generally write poorer code. I'd usually consider designer a specialist role for anything where the front end is key. DBAs - if you have a complex database then you want a DBA (or at least a developer with solid experience) to pull that all together and keep it solid. In extreme cases they'll more than pay for themselves in the optimisation they do and the hardware savings. But as a rule I like generalists. There are exceptions but for the most part I don't believe that the sort of systems being developed by most companies have a level of complexity which demands, for instance, a JBoss specialist who does nothing else.
