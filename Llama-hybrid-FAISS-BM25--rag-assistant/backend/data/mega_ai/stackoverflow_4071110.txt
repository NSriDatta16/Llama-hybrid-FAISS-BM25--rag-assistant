[site]: stackoverflow
[post_id]: 4071110
[parent_id]: 4070892
[tags]: 
I'll actually make this an answer instead of a comment: (from the J2SE 1.5, Runtime.exec(String[]) ) Assuming you can preprocess, use a String array to alleviate the problems with spaces in commands, the following should work: String[] args = {"C:\Program Files\app\app.exe","C:\Data Files\data1.dat"}; Runtime.exec(args); From there it depends on being able to figure out what is a space between two commands and what is a space in a path. EDIT This will work if the spaces appear in the executable's path, but won't help you on spaces in the arguments. String input = "c:\\program files\\someapp\\someapp.exe -someParam=bar"; int firstSplit = input.indexOf(".exe") + 4; //account for length of ".exe" String command = input.substring(0,firstSplit); String args = input.substring(firstSplit).trim(); //trim off extraneous whitespace String[] argarray = args.split(" "); String[] cmdargs = new String[argarray.length + 1]; cmdargs[0] = command; for (int i = 0; i Note that this is still fairly fragile (and only works for exe's, not bat's or whatever else). If you need to account for spaces in the arguments, you'll need to do more processing to either the args string or the argarray . The proper solution is to get your users (or the input process) to properly differentiate all the arguments.
