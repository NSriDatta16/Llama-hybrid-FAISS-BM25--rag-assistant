[site]: stackoverflow
[post_id]: 611922
[parent_id]: 610458
[tags]: 
It isn't an error because it's part of the spec, but you're obviously asking about the rationale, which we can all guess at. My guess is that the source of this is actually to allow a method in a class to invoke a static method in the same class without the hassle. Since calling x() is legal (even without the self class name), calling this.x() should be legal as well, and therefore calling via any object was made legal as well. This also helps encourage users to turn private functions into static if they don't change the state. Besides, compilers generally try to avoid declaring errors when there is no way that this could lead to a direct error. Since a static method does not change the state or care about the invoking object, it does not cause an actual error (just confusion) to allow this. A warning suffices.
