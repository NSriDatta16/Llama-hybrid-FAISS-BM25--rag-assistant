[site]: stackoverflow
[post_id]: 5362174
[parent_id]: 
[tags]: 
How do I optimize retrieval of related records in self referencing model in django?

I am creating a form from a model. This form contains a category. The category model is a self referencing model. I want to display the categories in a dropdown on the form so they show their parent categories too. ie, parentcat3 > parentcat2 > parentcat1 > leafcategory the last category is denoted by leafCategory=True . I have overridden my ModelForm to select records only that are leaf (end) categories using; self.fields['primaryCategory'].queryset = Category.objects.exclude(leafCategory=False) The ModelForm dropdown then uses the return value from __unicode__ in the model which is; getFullPathString() This walks back up the 'tree' to find the parent categories. This is the part that is slow (there are 10,000 categories) How can I optimize the retrieval of the parent records? Here is the code I am using: Model class Category(models.Model): name = models.CharField(max_length=200) parent = models.ForeignKey("self",related_name='related_category',null=True) leafCategory=models.BooleanField(default=False) def __unicode__(self): return u"%s" % self.getFullPathString() def getParentArray(self): """Create an array of parent objects from the current category """ itemArray=[] itemArray.insert(0,self) parentCat=self.parent while parentCat: itemArray.insert(0,parentCat) parentCat=parentCat.parent return itemArray def getFullPathString(self): """Get the parent category names, cat 1 > cat 2 etc""" returnText="" for item in self.getParentArray(): returnText += item.name if not item.isLeaf(): returnText += " > " return returnText Form class InventoryForm(ModelForm): def __init__(self, *args, **kwargs): super(InventoryForm, self).__init__(*args, **kwargs) self.fields['primaryCategory'].queryset = Category.objects.exclude(leafCategory=False)
