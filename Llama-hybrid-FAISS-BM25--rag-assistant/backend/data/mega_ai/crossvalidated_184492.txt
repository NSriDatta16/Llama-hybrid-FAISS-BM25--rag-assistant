[site]: crossvalidated
[post_id]: 184492
[parent_id]: 184488
[tags]: 
You are correct that only one set of coefficients is necessary here. But the function can also handle more than just binary classification, so the storage arrangement is general enough to handle that. You should find that the (1,1) coefficients are empty, and the (1,2) coefficients match the (2,1) coefficients but with opposite sign. Of course for a three-class problem there would also be (1,3) and (2,3) coefficients that are not redundant with the (1,2) coefficients. If I try this: C = c.Coeffs(1,2).Const; L = c.Coeffs(1,2).Linear; score = C + x*L I see that high scores favor class 1 over class 2. The inverse logit transformation converts the scores to probabilities. x = [4 3 2 1]; x = 4 3 2 1 [~,score] = predict(c,x) score = 0.5884 0.4116 0.0000 1./(1+exp(-C-x*L)) ans = 0.5884
