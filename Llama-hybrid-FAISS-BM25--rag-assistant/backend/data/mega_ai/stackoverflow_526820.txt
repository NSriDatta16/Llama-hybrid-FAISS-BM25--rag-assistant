[site]: stackoverflow
[post_id]: 526820
[parent_id]: 526317
[tags]: 
Since it looks, from the comments, like you're specifically trying to avoid infringing on anyone else's patents in your software development process, I'll address that point in particular. I don't know of any software process methodology that specifically addresses the point of "lawyer-clean" code, but plenty (most?) of them address "clean" code in general (via code reviews), so getting it "lawyer-clean" is more-or-less just another phase of code review. In practice, the costs of having a lawyer review all (or some "risky" subset) of your code base as it's developed is unlikely to be cost-effective for a customer, and I doubt you'll find anyone willing to pay for it -- the risk/benefit ratio, especially for custom code (which nobody else is going to see source for). I can theoretically envisage some ultra-paranoid company wanting it, so there might be a niche market for it, like high-reliability/formal verification development tools/processes. Don't expect it to ever be mass-market. Also, on the other side, you'd have to find a lawyer willing to do all of the hard yards in understanding your code and finding any relevant patents that might apply. I know a couple of patent-searching lawyers (doing IT for them was a speciality of a former job), and it's not a simple task to identify which patent(s) might infringe a chunk of code you've written. I'd expect that you'd almost need a patent lawyer per developer to keep up with the output volume, and the rates they'll charge will make the most outrageous hourly rate you've seen from an IT contractor seem like chicken feed. Lawyers are also notoriously conservative creatures -- they'll typically say "no go" to anything that looks even vaguely suspect. You can't second-guess them, either, otherwise all those carefully-crafted protections you're selling to your customers are utterly worthless, so your code will have to be squeaky-clean to pass the lawyer(s)' scrutiny. Good luck writing code at a reasonable pace without using any new technology, process, or algorithm from the last 25 years... Finally, assuming all of the above comes together, and you find a customer, a lawyer or several, and you manage to produce code that passes their paranoia filters, what do you do if your lawyer(s) miss a patent, and your customer gets sued? They'll sue you, and you'll have to sue the lawyer who stuffed up (or, rather, his/her professional indemnity insurance) to get any money out of them. What's more, all the patent search agreements I've seen have been of the "all care, but no responsibility" form. You might be able to crack that facade, with some extra legal maneuvering, but it'll cost you more again. Very similar things apply to trademarks, incidentally. Copyright is a different beast, and something that your lawyer won't be able to detect in advance (how do they know that a programmer hasn't ripped a pile of code out of a previous employer's product?). For copyright, your best protection is to educate your developers on what constitutes copyright infringement, and thwack hard anyone dumb enough to break the rules.
