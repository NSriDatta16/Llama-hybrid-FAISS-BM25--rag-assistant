[site]: stackoverflow
[post_id]: 2041220
[parent_id]: 2039468
[tags]: 
You'll just have to expire the SharedObject yourself. It's not complicated. This way your .swf will be completely self contained, not relying on anything external which IMO is a good thing. package { import flash.display.Sprite; import flash.net.SharedObject; import flash.net.SharedObjectFlushStatus; public class SharedObjectExample extends Sprite { private var _so:SharedObject; private var _now:Date; private var _last_played:Number; private static const EXPIRE_TIME:Number = 1000 * 60 * 60 * 24; // 24hrs in msec public function SharedObjectExample() { // create a new date for the current time to compare against _now = new Date; // create a new shared object _so = SharedObject.getLocal("application-name", "/"); // try read from the shared object if (_so.data.last_played) _last_played = _now; // if no value is set we play the video and set the current time if (!_last_played) { // play video here _last_played = _now.time; // check if the "cookie" has expired and it's time to play again } else if ( _now.time - _last_played > EXPIRE_TIME) { // play video here _last_played = _now.time; } else { // do nothing } // and finally, save saveValue(); } private function saveValue(event:MouseEvent):void { // i've removed the code that asks the user for permission if the request for storage is denied _so.data.last_played = _last_played; var flushStatus:String = null; try { flushStatus = _so.flush(1000); } catch (error:Error) { trace("Could not write SharedObject to disk"); } } } }
