[site]: stackoverflow
[post_id]: 5024473
[parent_id]: 5020720
[tags]: 
If you wanted to use a VBA macro to do this then here's the code you would need. You need to set a reference to "Microsoft XML, v6.0" then create and run this macro: Option Explicit Sub main() Dim domResult As DOMDocument60 Dim ixnlLi As IXMLDOMNodeList Dim iRow As Integer Dim sResult As String Dim iDashPos As Integer Set domResult = New DOMDocument60 domResult.setProperty "ProhibitDTD", False domResult.setProperty "SelectionNamespaces", "xmlns:ns='http://www.w3.org/1999/xhtml'" domResult.resolveExternals = True domResult.validateOnParse = False domResult.async = False domResult.Load "http://en.wikipedia.org/wiki/List_of_colloquial_names_for_universities_and_colleges_in_the_United_States" Set ixnlLi = domResult.selectNodes("id('bodyContent')/ns:ul/ns:li") With ThisWorkbook.Worksheets("Sheet1") .UsedRange.ClearContents For iRow = 1 To ixnlLi.Length sResult = ixnlLi(iRow - 1).Text iDashPos = InStr(sResult, "-") If (iDashPos > 0) Then .Cells(iRow, 1).Value = Trim$(Left$(sResult, (iDashPos - 1))) .Cells(iRow, 2).Value = Trim$(Mid$(sResult, (iDashPos + 1))) Else .Cells(iRow, 1).Value = sResult .Cells(iRow, 2).Value = "" End If Next iRow .UsedRange.Columns.AutoFit End With End Sub This will be quite a fragile solution though because if someone alters the page structure, the XPath expression used in selectNodes would break. You could use a simpler and less fragile expression //ns:li in selectNodes but this will pull through some other extraneous values from the page which you would have to delete from your list. That Wikipedia page is not valid XHTML (due to two empty tag pairs)
