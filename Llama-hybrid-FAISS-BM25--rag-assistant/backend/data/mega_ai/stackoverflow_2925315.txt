[site]: stackoverflow
[post_id]: 2925315
[parent_id]: 2924804
[tags]: 
The fastest way is probably: A one-dimensional array, indexed like a multi-dimensional array ( array[x, y] array[x + y * columns] ) Accessed through pointers if random read/writes occur. Reuse the array as much as possible, don't allocate new ones constantly. Especially if it's big, because if the size is > 85K, it gets allocated on the Large Object Heap, which doesn't get compacted by the GC after a collection, causing eventual fragmentation if you constantly reallocate the array. Accessed as much as possible in parallel. Just gotta make sure multiple threads never, ever write to the same element. Of course, this is a generic answer, because the question is also pretty generic. Can't really go wrong with it, though.
