[site]: stackoverflow
[post_id]: 2280761
[parent_id]: 
[tags]: 
Python imports with different directory structures

I'm working on a project where all the code in the source tree is separated into module directories, e.g.: modules/check/lib/check.py modules/edit/lib/edit.py During installation, the Python files are put in the same directory program_name under Python's site-packages . All the modules therefore use the syntax import program_name.edit . Because of the directory and import structure, the source modules are unable to import each other, so you'd have to install them each time you want to run anything in the source tree. My questions are therefore: Without modifying the directory structure, how can I make sure that modules/check/lib/check.py imports from modules/edit/lib/edit.py and that site-packages/program_name/check.py imports from site-packages/program_name/edit.py ? And for a possible reorganization, what are best practices for the directory structure and imports in an environment like this?
