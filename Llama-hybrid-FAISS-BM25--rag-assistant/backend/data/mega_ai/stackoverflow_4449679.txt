[site]: stackoverflow
[post_id]: 4449679
[parent_id]: 
[tags]: 
How can I improve performance of average method in SQL?

I'm having some performance problems where a SQL query calculating the average of a column is progressively getting slower as the number of records grows. Is there an index type that I can add to the column that will allow for faster average calculations? The DB in question is PostgreSQL and I'm aware that particular index type might not be available, but I'm also interested in the theoretical answer, weather this is even possible without some sort of caching solution. To be more specific, the data in question is essentially a log with this sort of definition: table log { int duration date time string event } I'm doing queries like SELECT average(duration) FROM log WHERE event = 'finished'; # gets average time to completion SELECT average(duration) FROM log WHERE event = 'finished' and date > $yesterday; # average today The second one is always fairly fast since it has a more restrictive WHERE clause, but the total average duration one is the type of query that is causing the problem. I understand that I could cache the values, using OLAP or something, my question is weather there is a way I can do this entirely by DB side optimisations such as indices.
