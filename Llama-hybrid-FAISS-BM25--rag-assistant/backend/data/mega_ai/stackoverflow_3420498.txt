[site]: stackoverflow
[post_id]: 3420498
[parent_id]: 3418247
[tags]: 
I am Trying to understand what you are trying to do, and I get the hunch that you are not going with accepted practices, which is going to make your process delicate and brittle. The "accepted" way of compiling and running Java is to use Ant or Maven and then build those on a build machine. You do not need eclipse or any other tools to build just a Java JDK or SDK (The names are interchangeable) and either ant or maven on your computer. You would put the Java code directory structure on the machine and run it through ant or maven and then would end up with class files or JAR,EAR,WAR or whatever you are developing to. The proper way to deploy is to usually deploy the class files to the machine you are going to run on, which in turn would require a JRE (Java Runtime Environment). The reason for JAR files is to take the directory structure of class files and put it in one file. So it is a good thing that is easy to deploy. Since you have control of the "build machine" you can make sure that you have both the JDK and ant on it to be able to compile. The challenge is making sure that the machines you are deploying to have a JRE. To make sure that the machines have a JRE. You have several options. Use JNLP and have the installer prompt the user to download the proper JRE if he does not have it. Compile your code to Native Code using GCJ (Has some issues - Does not work with all code) Prompt your users to install Java some other way.
