[site]: stackoverflow
[post_id]: 5367877
[parent_id]: 5367867
[tags]: 
I think that the problem is that in C++, using static data members in a class is a two-step process. First, you need to declare the static variable, indicating that it has a name and type, and then you must define the static variable to give it storage space in one of the translation units. My guess is that you have done that first step but not the second. To define a static variable, put a definition like this one into the .cpp file: vector CUdpSocket::BuffStack1; Note that you do not repeat the static keyword here. Instead, you just give the type and fully-qualified name of the static data member. If you want to use a non-default constructor for the static data member, you can do so here as well. Hope this helps! PS. Please don't use labels and goto s to implement your loop... use a while(true) loop instead! :-) EDIT: If you're going to be accessing these vector s from the thread, make sure you have some appropriate synchronization in place. It is not safe to read and write a vector from multiple threads without ensuring at the most one thread can modify it at any one time.
