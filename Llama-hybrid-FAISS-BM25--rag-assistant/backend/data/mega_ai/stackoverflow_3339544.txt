[site]: stackoverflow
[post_id]: 3339544
[parent_id]: 3339511
[tags]: 
My question is why does it work when the line is uncommented, but return garbage when commented out. The commented line is what is masking the bug caused by CreateArray. Commenting it out exposes the bug. But the bug is there regardless. As the specification clearly states: All stack allocated memory blocks created during the execution of a function member are automatically discarded when that function member returns. The CreateArray function allocates a block, you store a pointer to the block, the block is discarded, and now you have a pointer to a garbage block. You are required to never store a pointer to a stackalloc'd block such that the storage can be accessed after the block becomes invalid. Heap allocate the block if you need to store a reference to it, and remember to deallocate it when you're done. Remember, in unsafe code you are required to fully understand everything about the managed memory model. Everything . If you don't understand everything about managed memory, don't write unsafe code. That said, let's address what seems to be your larger confusion, which is "when do you have to fix memory to obtain a pointer?" The answer is simple. You have to fix memory if and only if it is movable memory. Fixing transforms movable memory into immovable memory; that's what fixing is for . You can only take the address of something that is immovable; if you take the address of something that is movable and it moves then obviously the address is wrong. You are required to ensure that memory will not move before you take its address, and you are required to ensure that you do not use the address after it becomes movable again.
