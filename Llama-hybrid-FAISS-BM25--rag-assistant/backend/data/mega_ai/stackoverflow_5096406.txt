[site]: stackoverflow
[post_id]: 5096406
[parent_id]: 
[tags]: 
Is it possible to pass an unset variable to a function or otherwise validate forms without isset()?

I've got a project that passes JSON between the frontend and the backend. So, the frontend PHP would generate the statement { "command" : "getuser", "parameters" : { "userid" : 1 } } and send it to the backend. The backend then executes if ($command == 'getuser') { validate($parameters['userid']); if ($this->valid) { > } } Validate checks the variable and sets $this->valid . It creates an error message if necessary. I want to create an error message in case the front end passes in { "command" : "getuser", "parameters" : "" } . In this case, $parameters['userid'] is never set, and validate() will complain that it was passed an unset variable. I've come up with two solutions. The first solution is to set $parameters['userid'] = "unset" before loading in the JSON, and then check for it in the validator. The other solution is to use if (isset($parameters['userid'])) { validate($parameters['userid']); } else { echo("Error"); } It'd be nice if validate() could figure out on its own whether or not the variable is there. Is there a more elegant way I should be doing things?
