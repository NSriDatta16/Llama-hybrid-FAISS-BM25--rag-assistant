[site]: stackoverflow
[post_id]: 5196080
[parent_id]: 5187903
[tags]: 
You tagged your question with java-ee, so here's an answer that leverages the technologies and APIs available in the Java Enterprise Edition platform: Configure queue in an JMS server. Depending on your setup, you can either use the JMS server provided with the application server, or use an external message server. Implement an enterprise application with a Timer bean and a stateless Session bean. The Timer bean will be set to fire every day/hour/other appropriate interval. When it wakes up, it calls the stateless Session bean. The stateless Session bean has a single business method which reads all messages off the JMS queue and performs actions according to each message. Deploy the two beans in an enterprise application on the application server. Provide information to customers about how to connect to the queue and the message format, or implement client applications that submit messages to the queue on behalf of customers. If you connect to a JMS queue that supports transactions , then any failure while handling a message in the stateless Session bean will cause the message to be put back into the queue and re-send. This design does not use an Message-Driven Bean to consume the messages from the queue because then you would have to worry about persisting the messages through other means until the timer service fires.
