[site]: crossvalidated
[post_id]: 110611
[parent_id]: 
[tags]: 
Retreiving Integrated Fitted Data from Stationary Fitted Data

Note that this is a simplified example: I have some time series that I made stationary by differencing twice. Then I ran arima on it, and set d = 0 to prevent additional differencing (I'm aware that auto.arima could detect the order of integration, but I'm hard-coding this myself for other reasons). Now I want to use fitted data from my arima object to determine what the non-stationary fit would look like. For example: library('forecast') # simulate ARIMA(1,2,0) time series: rawData In this particular instance, my AR(1) coefficeints are 0.5511049 and 0.5511048. I also forced my ARIMA to exclude an intercept, so these ARIMA objects so be similar. # plot of rawData and the fitted values plot(rawData, type = "l") lines(fitted(rawDataFit), col = "slategrey") Here's an example of what that plot could look like: I want to recreate the above plot, without using the rawDataFit object # using the diffinv function, I can easily replicate the rawData: recoveredRawData Here's the attempt to recreate the above plot, using the results from my stationaryDataFit: The shape looks correct, but the values are clearly off. I am not expecting to recover exactly the same results from both methods of fitting, but I still expect them to be reasonably close. I strongly suspect the problem is with my choice of xi in the diffinv function, since that's really the only place I'm making any assumptions. But I'm having trouble reconciling the issue. To integrate the data, diffinv requires the first observations of the integrated data. This is how I can convert the stationaryData back to the rawData, by passing the first two values of rawData to the diffinv xi argument. But I'm unsure what to use as the starting values to integrate fitted(stationaryDataFit) . The first two values of the (integrated) rawData are 0, so that's what I'm trying for now... Any ideas? EDIT: Is this a legitimate work-around? Take the residuals from my stationaryDataFit object, and just subtract those from my rawData? For example: # prefix 2 zeros, so the vectors are the same length (due to secord-differencing): recoveredFit My concern is about whether I need to transform my residuals from the stationaryDataFit somehow? In fact, the residuals from both fits are extremely close (within several decimals). Thank you!
