[site]: stackoverflow
[post_id]: 5493146
[parent_id]: 
[tags]: 
Help me optimize this graph animation

I need some help with this simple animation on my Android phone. I'm a newbie with animation and graphics. I'm graphing accelerometer data as a sliding time series window. As new accelerometer data is read, its data is plotted on the right, pushing previous data to the left, as shown below: My program is running pretty smoothly, but I would like some help optimizing the animation. Here are my main concerns: My current implementation reads all the accelerometer data in one thread and keeps the data in a fixed-size FIFO queue to capture the width of the time series window. I then use Timer.scheduleAtFixedRate() to plot out the entire contents of the queue so that the whole graph is re-drawn every 50 milliseconds. Can I improve upon this? Do I really need to re-draw the graph so often like this? In another similar program I've seen, each pixel column is copied to one pixel to the left, rippling down the graph; the newest data's column is drawn on the far-right pixel column. Is this better? I redraw the legend (in the upper left) in the drawing thread that runs the draw function every 50 milliseconds. Is there any way to "keep" that legend in place instead of having to constantly re-draw it? Any other help would be appreciated. I have heard of optimizations like double-buffering but am clueless if that would help me.
