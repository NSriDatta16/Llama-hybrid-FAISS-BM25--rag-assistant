[site]: stackoverflow
[post_id]: 174514
[parent_id]: 146931
[tags]: 
Since I didn't really get the answers I was looking for I am providing my own best guess based on my less than desirable learning experience. The events themselves actually don't have behaviors, it is the handlers of the events that have behaviors. The events just represent the data model. I rewrote the code to just treat events as object arrays of properties so that I can use Java's new variable arguments and auto-boxing features. With this change, I was able to delete around 100 gigantic classes of code and accomplish much of the same logic in about 10 lines of code in a single class. Lesson(s) learned: It is not always wise to apply OO paradigms to the data model. Don't concentrate on providing a perfect data model via OO when working with a large, variable domain. OO design benefits the controller more than the model sometimes. Don't focus on optimization upfront as well, because usually a 10% performance loss is acceptable and can be regained via other means. Basically, I was over-engineering the problem. It turns out this is a case where proper OO design is overkill and turns a one-night project into a 3 month project. Of course, I have to learn things the hard way!
