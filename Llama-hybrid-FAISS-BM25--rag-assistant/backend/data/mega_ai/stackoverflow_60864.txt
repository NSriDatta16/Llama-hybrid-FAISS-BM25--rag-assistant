[site]: stackoverflow
[post_id]: 60864
[parent_id]: 60757
[tags]: 
I'd go with 2 but use some salt. Some pseudocode: SetPassword(user, password) salt = RandomString() hash = Hashfunction(salt+password) StoreInDatabase(user, salt, hash) CheckPassword(user, password) (salt, hash) = GetFromDatabase(user) if Hashfunction(salt+password) == hash return "Success" else return "Login Failed" It is important to use a well known hash function (such as MD5 or SHA-1), implemented in a library. Don't roll your own or try implementing it from a book its just not worth the risk of getting it wrong. @Brian R. Bondy: The reason you use salt is to make dictionary attaks harder, the attacker can't hash a dictionary and try against all the passwords, instead she have to take the salt + the dictionary and hash it, which makes the storage requierments expode. If you have a dictionary of the 1000 most commaon passwords and hash them you need something like 16 kB but if you add two random letters you get 62*62*16 kB â‰ˆ 62 Mb. Else you could use some kind of One-time passwords I have heard good things about OTPW but havent used it.
