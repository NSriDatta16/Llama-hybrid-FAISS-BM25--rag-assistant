[site]: stackoverflow
[post_id]: 3001236
[parent_id]: 3000727
[tags]: 
The basic answer to your question is yes, you have to iterate through the values to find the modified ones. Now the rest of this answer is going to read like a code review. So many warning bells went off in my head when I read your code that I felt compelled to do so. 1) First off your code will on even work. That's because you are treating the keys into the Dictionary like indexes into a List or Array . Your for loop starts i at 0 and increments it to the Count (which is the number of KeyValuePair s by the way). But what if I don't have a value in the Dictionary with a key equal to 0? Basically you'll get an exception for something like this: RecA_Dic myD = new RecA_Dic(); myD.Add(10,new Rec_A()); myD.getModifiedItems(); //throws KeyNotFoundException Now if you are adding values into the Dictionary with a zero based index then that begs the question of why use a Dictionary when a List would do? 2) You don't need to do the casts on this[i] . Because you told the Dictionary that it will contain Rec_A values, it will return the values as Rec_A . That's the beauty of generics. 3) You don't need to compare modified to true in the if statement. When working with bool variables is is typically considered good etiquette to not compare them to true or false . On a side note you might want to consider renaming modified to IsModified . That better adheres to many standard naming conventions and makes the code more readable. 4) Whenever possible try to use foreach instead of for . In this case a foreach would actually fix the problem I mentioned in 1. 5) As Humberto mentioned you might want to consider returning IEnumerable and using yield return . This gives you the benefit of delayed execution. 6) Finally why are you even inheriting from Dictionary ? Based on your code I would guess you could just create a Dictionary and make your getModified method static and make it take the Dictionary (or List if that's all you really need) as a parameter. I hope some of my suggestions will help you out.
