[site]: stackoverflow
[post_id]: 5058780
[parent_id]: 5031890
[tags]: 
Problem in solved! The problem turned out to be a bug elsewhere in my code and had nothing to do with webstart, jnlp, or JnlpDownloadServlet. There was a flaw in how image resources where being accidentally pre-processed during the build process and as a result getting corrupted. The correct way to reference resources was how I had it originally as follows: String icon = "icons/Find.png"; //Notice no leading '/' URL url = getClass().getClassLoader().getResource(icon); ImageIcon imageIcon = new ImageIcon(url); Above code works fine when the resource is inside a jar in the webstart directory of the webapp. It also works fine if it is found as a local file on the classpath. It works whether the app is running within javaws or as a standalone app outside javaws.
