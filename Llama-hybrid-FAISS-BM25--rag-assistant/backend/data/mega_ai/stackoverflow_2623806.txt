[site]: stackoverflow
[post_id]: 2623806
[parent_id]: 2623641
[tags]: 
This is a very generic question, and are multiple issues you raise explicitly, and many more issue correlated of which you may be or may not be aware. One issue is HTTP vs. other protocols (or message exchange patterns, to be accurate). HTTP is request-response and many communication patterns don't fit a request response paradigm. A persisted connection allows for message oriented protocols that are more flexible, like a typical full duplex chat exchange pattern. Since you mention WOW, they use UDP not TCP. TCP offers stream guarantee semantics, with order guarantee and no duplicates. But to achieve this a heavy price is payed in terms of latency. A game like WOW is much more interested in latency and does not care about order guarantee: latest packet is always the best and supersedes any previous packet information. There are more issue lurking under the surface: outbound firewall traversal (almost always allowed for HTTP) invasive proxies that read and understand HTTP headers inbound NAT traversal issues And finally there is the issue you just ask about: TCP socket limits. They depends per OS. For example a typical out-of-the-box Windows Server will choke at around 1000 TCP sockets due to TCP port exhaustion. It has to be specifically tuned for higher numbers . Even tuned, it will hardly approach 64K open, functioning, sockets. For servers that need to connect to millions of clients the connections have to be multiplexed by mid-tiers and the messaging protocols have to be prepared with the issues that arise from forwarding, most importantly message order reversal. This problem space is vast and there are many dragons under every bridge.
