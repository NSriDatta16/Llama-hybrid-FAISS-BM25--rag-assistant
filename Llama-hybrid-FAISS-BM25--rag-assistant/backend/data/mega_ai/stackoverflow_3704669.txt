[site]: stackoverflow
[post_id]: 3704669
[parent_id]: 3704565
[tags]: 
I know you said you don't want to use IsolatedStorage because you don't want each user to have to have their own setup. But have you looked at IsolatedStorage using the MachineStore? If I understand correctly (and I could be wrong, wouldn't be the first time) this should be shared by all users accessing your application. using(IsolatedStorageFile store = IsolatedStorageFile.GetMachineStoreForApplication()) { // check if file exists or not try { using(IsolatedStorageFileStream isfs = new IsolatedStorageFileStream(STG_FILE_NAME, FileMode.OpenOrCreate, store)) { StreamWriter sw = new StreamWriter(isfs); foreach(string key in m_values.Keys) { sw.WriteLine(key + "::" + m_values[key]); } // foreach sw.Flush(); } // using } catch(IOException) { // generally because file is locked by another process...do nothing } } // using Alternatively, you could change your application's config file's permissions to allow everyone access. This could be done by a privileged user the first time your app is run. http://www.techtalkz.com/c-c-sharp/153732-saving-files-so-any-user-can-access-them.html FileInfo fileInfo = new FileInfo(path); FileSecurity fileSecurity = fileInfo.GetAccessControl(); fileSecurity.AddAccessRule(new FileSystemAccessRule( "Users", FileSystemRights.FullControl, AccessControlType.Allow) ); fileInfo.SetAccessControl(fileSecurity);
