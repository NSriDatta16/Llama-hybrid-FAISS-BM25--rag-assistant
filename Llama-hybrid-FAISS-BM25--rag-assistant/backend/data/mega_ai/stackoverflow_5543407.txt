[site]: stackoverflow
[post_id]: 5543407
[parent_id]: 
[tags]: 
Connecting IMPEG2DEMULTIPLEXER and ffdshow Directshow Filter

Essentially I am building a HDV capture graph. I have the graph functioning in graph builder and it works well. The graph builder graph can be seen here . In code the graph so far should go HDV Camera -> Demultiplexer -> FFDshow. But I get a VFW_E_NO_ACCEPTABLE_TYPES "There is no common media type between these pins." error. I have tried using different submedia types in the mt structure but no luck. Edit to clarify: the error is connecting the multiplexer and the ffdshow decoder. Relevant code (getPin enumerates the pins on an object and returns the LPCOLESTR named IPin) HRESULT hr = S_OK; //graph builder CComPtr pBuilder; hr = pBuilder.CoCreateInstance(CLSID_CaptureGraphBuilder2); CHECK_HR(hr, "Can't Create Capture Graph Builder"); hr = pBuilder->SetFiltergraph(pGraph); //add Canon XH A1S CComPtr pCanonXHA1S = GetCaptureDevice(CLSID_VideoInputDeviceCategory, L"Canon XH A1S"); hr = pGraph->AddFilter(pCanonXHA1S, L"Canon XH A1S"); CHECK_HR(hr, "Can't add Canon XH A1 to Graph"); //add MPEG-2 Demultiplexer CComPtr pMPEG2Demultiplexer; hr = pMPEG2Demultiplexer.CoCreateInstance(CLSID_MPEG2Demultiplexer); CHECK_HR(hr, "Can't create MPEG-2 Demultiplexer"); hr = pGraph->AddFilter(pMPEG2Demultiplexer, L"MPEG-2 Demultiplexer"); CHECK_HR(hr, "Can't add MPEG-2 Demultiplexer to graph"); //connect Canon XH A1S and MPEG-2 Demultiplexer hr = pGraph->ConnectDirect(GetPin(pCanonXHA1S, L"MPEG2TS Out"), GetPin(pMPEG2Demultiplexer, L"MPEG-2 Stream"), NULL); CHECK_HR(hr, "Can't connect Canon XH A1S and MPEG-2 Demultiplexer"); //This block configures the demultiplexer IMpeg2Demultiplexer *pDemux; IPin *pDemuxPin; IMPEG2PIDMap *pPidMap; AM_MEDIA_TYPE mt; ZeroMemory(&mt, sizeof(AM_MEDIA_TYPE)); mt.majortype = MEDIATYPE_Video; pMPEG2Demultiplexer->QueryInterface(IID_IMpeg2Demultiplexer, (void**)&pDemux); if(hrcheck(hr, "Can't find MPEG2 Demux interface")) return E_FAIL; hr = pDemux->CreateOutputPin(&mt, L"MPEG2 Out", &pDemuxPin); if(hrcheck(hr, "Can't create Output Pin on MPEG2 Demux")) return E_FAIL; hr = pDemuxPin->QueryInterface(IID_IMPEG2PIDMap, (void**)&pPidMap); if(hrcheck(hr, "Can't create PIDMap")) return E_FAIL; // Assign PID 0x31 to pin 0. Set the type to "PES payload." ULONG Pid = 0x30; hr = pPidMap->MapPID(1, &Pid, MEDIA_ELEMENTARY_STREAM); if(hrcheck(hr, "Problem mapping PID pins")) return E_FAIL; CComPtr pFFDshowVideoDecoder; hr = pFFDshowVideoDecoder.CoCreateInstance(CLSID_FFDshowVideoDecoder); CHECK_HR(hr, "Can't create ffdshow Video Decoder"); hr = pGraph->AddFilter(pFFDshowVideoDecoder, L"ffdshow Video Decoder"); CHECK_HR(hr, "ffdshow Video Decoder"); hr = pGraph->ConnectDirect(pDemuxPin, GetPin(pFFDshowVideoDecoder, L"In"), &mt); if(hrcheck(hr, "Problem with renderstream")) return E_FAIL;
