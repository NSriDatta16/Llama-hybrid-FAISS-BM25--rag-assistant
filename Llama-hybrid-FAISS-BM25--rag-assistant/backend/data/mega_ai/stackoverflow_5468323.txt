[site]: stackoverflow
[post_id]: 5468323
[parent_id]: 
[tags]: 
WCF Authentication NT Challenge response

How can I get my console app to connect with an IIS hosted WCF service when basic and/or windows authentication is switched on and anonymous authentication turned off? The site is internal and stringent security is not required. There is no domain controller. However, I need to turn off anonymous access. I have searched for days and have tried many methods including using a self hosted certificate and overriding the certification validation, overriding the UserNameValidator and using client.ClientCredentials.Windows.ClientCredentials.UserName or client.ClientCredentials.UserName.UserName . None of these have worked. I am at a point where it would be nice if someone would be so kind as to look and run the code and help me get the sample running with authentication. I have taken the liberty of uploading a sandbox solution containing, HostWebSite, ClientConsole and API projects. I have hosted the zip file on my Windows Live SkyDrive: WCF_Authentication.zip Some small setup steps. I added to the hosts file 127.0.0.1 hostwebsite.local I added a website to IIS -- location: HostWebSite project root , -- binding: hostwebsite.local -- app pool: Classic 4.0 app pool . Applied security Everyone read access to the HostWebSite project directory. Verify can see service http://hostwebsite.local/services/EchoService.svc Verify the console echoes back hello world. Then turn off anonymous via IIS / Authentication and turn on either basic and/or windows authentication. thank you For the benefit of readers, I have included code snippets here Project: API namespace API.Contract { [ServiceContract] public interface IEcho { [OperationContract] string SendEcho(string message); } } namespace API.Proxy { public class EchoProxy : IEcho { public string SendEcho(string message) { return string.Concat("You said: ", message); } } } namespace API.Service { [System.Diagnostics.DebuggerStepThroughAttribute()] [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")] public class EchoService : System.ServiceModel.ClientBase , IEcho { public EchoService() { } public EchoService(string endpointConfigurationName) : base(endpointConfigurationName) { } public EchoService(string endpointConfigurationName, string remoteAddress) : base(endpointConfigurationName, remoteAddress) { } public EchoService(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : base(endpointConfigurationName, remoteAddress) { } public EchoService(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : base(binding, remoteAddress) { } public string SendEcho(string message) { return base.Channel.SendEcho(message); } } } Project: ClientConsole static void Main(string[] args) { EchoService client = new EchoService("WSHttpBinding_IEcho"); try { Console.WriteLine(client.SendEcho("Hello World")); client.Close(); // i tried putting this in the finally block but the client would close in an errored state it said. } catch (Exception ex) { Console.WriteLine(ex.Message); } finally { } Console.WriteLine("Press any key to exit."); Console.ReadKey(); } Client Config Project: HostWebSite
