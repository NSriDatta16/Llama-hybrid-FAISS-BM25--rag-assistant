[site]: stackoverflow
[post_id]: 868580
[parent_id]: 868464
[tags]: 
Oracle's DATE type pre-dates the SQL standard version (as does Informix's), which makes this extremely difficult - if not impossible - to do in a DBMS-neutral fashion. Of course, there is a question of "why does the data representation chosen include time". In standard SQL, the obvious technique would be to cast the TIMESTAMP to a DATE. We also don't have a clear explanation of the data you have to search with. SELECT CAST(DateOfBirth AS DATE), ...other columns... FROM TheMysteryTable -- Why do people hate giving tables names? WHERE CAST(DateOfBirth AS DATE) = CAST(TIMESTAMP '1950-01-01 10.22.06.010101120' AS DATE) But that assumes that you write the 'date to search with' as a literal. If it is a host variable, then the type of the host variable should be DATE, not TIMESTAMP. And the DateOfBirth column should probably be a DATE, not a TIMESTAMP. You should not use TIMESTAMP unless the time part is relevant - it wastes storage and it wastes computation time. Note that because of the casts, it is unlikely that the DBMS will be able to use any indexes or anything. If the types were sane, then the query would be simply: SELECT DateOfBirth, ...other columns... FROM TheMysteryTable WHERE DateOfBirth = DATE '1950-01-01'
