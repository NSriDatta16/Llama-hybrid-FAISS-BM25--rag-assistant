[site]: stackoverflow
[post_id]: 3460818
[parent_id]: 3460456
[tags]: 
Ah, good question! Will the subclass inherit the use statements from the parent? Well this depends on what you mean by inherit. I won't make any assumptions until the end, but the answer is maybe . You see, perl mixes the ideas of Classes , and Namespaces -- a package is a term that can describe either of them. Now the issue is the statement use all it does is force a package inclusion, and call the targets import() sub. This means it essentially has unlimited control over your package - and by way of that your class. Now, compound this with all methods in perl being nothing more than subs that take $self as a first argument by convention and you're left with perl5. This has an enormous upside for those that know how to use it. While strict is a lexical pragma, what about Moose ? package BigMooseUser; use Moose; package BabyMooseUser; our @ISA = 'BigMooseUser'; package Foo; my $b = BabyMooseUser->new; print $b->meta->name; Now, where did BabyMooseUser get the constructor (new) from? Where did it get the meta class from? All of this is provided from a single use Moose; in the parent class (namespace). So Will the subclass inherit the use statements from the parent? Well, here, in our example, if the effects of the use statement are to add methods, than certainly. This subject is kind of deep, and it depends if you're talking about pragmas, or more obscure object frameworks, or procedural modules. If you want to mitigate a parents namespace from affecting your own in the OO paradigm see namespace::autoclean .
