[site]: stackoverflow
[post_id]: 2435665
[parent_id]: 2390955
[tags]: 
This considers that you have a file small enough to fit in computer memory. Even 10MB file should be good. It has 2 parts: DataTransformer which does all the required transformation of data TreeNode is custom simple Tree data structure public class DataTransformer { public static void main(String[] args) throws IOException { InputStream in = DataTransformer.class .getResourceAsStream("source_data.tab"); BufferedReader br = new BufferedReader( new InputStreamReader(in)); String line; TreeNode root = new TreeNode("ROOT", Integer.MIN_VALUE); TreeNode currentNode = root; while ((line = br.readLine()) != null) { int level = getLevel(line); String value = line.trim(); TreeNode nextNode = new TreeNode(value, level); relateNextNode(currentNode, nextNode); currentNode = nextNode; } printAll(root); } public static int getLevel(String line) { final char TAB = '\t'; int numberOfTabs = 0; for (int i = 0; i children = new ArrayList (); private String value; private int level; public TreeNode(String value, int level) { this.value = value; this.level = level; } public void addChild(TreeNode child) { child.parent = this; this.children.add(child); } public void addSibbling(TreeNode sibbling) { TreeNode parent = this.parent; parent.addChild(sibbling); } public TreeNode getParent() { return parent; } public List getChildren() { return children; } public String getValue() { return value; } public int getLevel() { return level; } public boolean isRoot() { return this.parent == null; } public String toString() { String str; if (this.parent != null) { str = this.parent.value + '\t' + this.value; } else { str = this.value; } return str; } }
