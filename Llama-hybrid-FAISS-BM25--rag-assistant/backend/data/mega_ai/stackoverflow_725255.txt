[site]: stackoverflow
[post_id]: 725255
[parent_id]: 725203
[tags]: 
Actually, lots of stuff wrong here with the most obvious being violation of a Single responsibility principle . Basically, your function should do only one strictly defined task (that is, retrieve a Partner from the DB). Next goes multithreading. Web sites are inherently multithreaded, so this should be taken into account. More specifically, an item can be removed from cache between calls to If Current.Cache(key) Is Nothing and Return DirectCast(Current.Cache(key), Model.Partner) . Locking is required to solve this issue, but this will bloat the function even more (see first paragraph). Furthermore, item can be added to cache while your DB code is executed. This will result in an error, since Cache.Add does not overwrite values with the same key, which will already be there (think multithreading). And finally I question uniqueness of a StoreURL .
