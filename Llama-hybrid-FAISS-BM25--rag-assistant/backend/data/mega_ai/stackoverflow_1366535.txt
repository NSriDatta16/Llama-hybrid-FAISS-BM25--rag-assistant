[site]: stackoverflow
[post_id]: 1366535
[parent_id]: 
[tags]: 
Maven reuse in poms

In our Maven project, we are trying the following directory structure (with about 80 projects total, only a few are shown so that you get the idea): myappli (pom) -- module1 (pom) --|-- utils (pom) --|-- ejb (pom) --|--|-- myappli-module1-a-ejb (jar) --|--|-- myappli-module1-b-ejb (jar) --|-- war (pom) --|-- applet (pom) ... -- module6 (pom) --|-- utils (pom) --|-- ejb (pom) --|--|-- myappli-module6-c-ejb (jar) --|-- war (pom) --|-- applet (pom) Note: This is a flat structure for Maven, as all non-leaf projects have a packaging value of "pom". (cf BetterBuildsWithMaven book). We define the dependency versions in " dependencyManagement ", in the " myappli " pom. This works fine. Our problem is with the reuse of the dependencies themselves . For example, the ejb dependencies are common to all ejb projects (by design). We don't want to cut'n-paste, and maintain all that with each change! We were thinking to use some " import notion " for the ejb dependencies, and define our ejb dependencies once at the application level. Our unsuccessful attempts were: The Maven " parent pom " notion would be fine, but it is already used by the modules, so it is not available for our requirement. No import facility found in Maven (except for dependencyManagement) XML entity definition is not recognized. We tried a pom like the following, and got the error " Reason: Parse error reading POM. Reason: could not resolve entity named 'ejbDependencies' ": ]> ... &ejbDependencies; ... Edited : I am trying the solution suggested by Robert, but something is wrong. When I compile my ejb project, it doesn't find the dependencies themselves. I get an error when compiling (mvn compile), saying the javax.ejb package is missing. Note: I did run "mvn install" on the dependencies project before. This is my configuration : 4.0.0 com.company myproj-maven 3.1-SNAPSHOT com.company myproj-maven-ejb ${myproj-version} pom javax.ejb ejb ojdbc ojdbc --------------------------------- 4.0.0 com.company myproj-identite-ejb 3.1-SNAPSHOT com.company myproj-identite-metier SNR IDENTITE METIER 2.0.1 ejb com.company myproj-maven-ejb ${myproj-version} pom I don't know if it changes something, but we have a hierarchy that relates the two poms. We have a strict Maven structure, where each directory declares all subdirectories as maven modules, and each subdirectory declares the parent as a maven parent. And the common parent directory is part of this structure. +---maven | \---ejb +---identite | +---ejb | | \---SNR_IDENTITE_METIER Edited : The answer given by reef seem correct. It is impossible to do with Maven, because our dependency are provided, and therefore not transitive :-( We really have many problems with setup up Maven. So many little things just don't work. Today I found out that the site target cannot handle properties, that we are using for version numbers!
