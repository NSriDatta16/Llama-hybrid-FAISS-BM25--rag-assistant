[site]: stackoverflow
[post_id]: 4619083
[parent_id]: 4211099
[tags]: 
It's the so-called varargs syntax. In the method body, you can read the members parameter as it were an array - actually, it /is/ 'just' an array. However, the magic bit is in calling the method. Before the varargs syntax was introduced, you'd call the method a bit like so: setMembers(new Members[] {member1, member2, member3}); With the new varargs syntax however, you don't need to explicitly create the array anymore, and you can pass: setMembers(member1, member2, member3); This does mean however that a varargs argument has to be the last argument in a method. Something like this is therefore not permitted: void setMembers(Member ... members, String memberType); Summarized: It's a bit of syntactic sugar, really. I'm no expert on the inner workings of the Java compiler, but I'm pretty sure that methods calling a method that accept a varargs parameter are rebuilt into methods that build an array of the given type.
