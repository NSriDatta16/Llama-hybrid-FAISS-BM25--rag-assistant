[site]: crossvalidated
[post_id]: 120933
[parent_id]: 
[tags]: 
Maximizing Log-Likelihood Estimation for Changepoint Detection

I'm trying to code the changepoint detection algo described here: Link to original ppt: http://www.slideshare.net/kuma0177/velocity-ny-2014v5-39160794 Slides: 13-16 Slide 16: https://i.stack.imgur.com/PkfB8.jpg It is my understanding that the slides use a rolling median as input to calculate lambda on slide 16. However, I'm not entirely sure how you plug the median into that lambda equation. My stats background is pretty weak. My guess is that this algorithm is not an online one, but a batch one. I think what happens is that you have a time series of medians (x0,y0), (x1,y1), ... (xn,yn) then you split this into 2 time series in all possible ways: change_point_Tau1@(x0,y0), (x1,y1), (x2,y2), ... (xn,yn) (x0,y0), change_point_Tau1@(x1,y1), (x2,y2), ... (xn,yn) (x0,y0), (x1,y1), change_point_Tau1@(x2,y2), ... (xn,yn) ... ... (x0,y0), (x1,y1), (x2,y2), ... change_point_Tau1@(x(n-1),y(n-1)), (xn, yn) (x0,y0), (x1,y1), (x2,y2), ... (x(n-1),y(n-1)), change_point_Tau1@(xn, yn) Then for each of these 2 halves you want to calculate some Theta. Since we can't get theta we use an approximation for it, shown as Theta hat. Theta is sth called a probability density function. I'd need this function to be simpler enough so that it can be approximated using a programming language like Scala or Java. Q: How do you calculate this theta hat? There are 2 of them in equation ML. Q: Is my understanding of this algorithm correct? Q: How to calculate all those probabilities? For example I see P(y(1:Tau1) | Theta_hat) - probability no change points exists at Tau1 given Theta hat. Using Bayes, this becomes: P(y(1:Tau1) | Theta_hat) = P(Theta_hat | y(1:Tau1))*P(y(1:Tau1)) / P(Theta_hat) Now where would I get those new probabilities like P(Theta_hat | y(1:Tau1)), P(y(1:Tau1)) and P(Theta_hat)? I know, lots of questions all crammed in here..
