[site]: stackoverflow
[post_id]: 1621691
[parent_id]: 1621532
[tags]: 
I don't think your suggested solution is hack at all, I think that's the right solution. You have the client-middle layer with a synchronous protocol, and then the middle-server layer using an asynchronous layer, to which you have to add a reply path in order to satisfy the synchronous semantics. That's what middleware is for. Remember that that JMS provides explicit support for temporary reply-to queues, you won't need to mess with the payload at all. A more left-field possibility is the leverage the fact that SOAP 1.2 was designed with JMS in mind, and so you could use web service layer between middleware and server layer which does SOAP-over-JMS. That means you can keep SOAP from end-to-end, with the middleware changing only the transport. The only web service stack that I know of that supports JMS transport is Spring Web Services , where the process and development is documented here . This would also give you the opportunity to port your SOAP layer to Spring-WS, which kicks ass :)
