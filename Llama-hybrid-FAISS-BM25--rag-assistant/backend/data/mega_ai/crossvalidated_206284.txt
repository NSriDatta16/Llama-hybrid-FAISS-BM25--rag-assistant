[site]: crossvalidated
[post_id]: 206284
[parent_id]: 
[tags]: 
Can I use LSTM for Text Classification into Categories?

I want to train an LSTM Network, since it accepts Sequences as Input, and I plan to instead of using the bag-of-words representation, I want to replace each word with it's semantic vector, provided by word2vec or GloVe for example. I'm trying to use that on Keras, and as output, I only want K outputs, representing the K categories that the text should belong. Here is what I'm trying to do, but I can't figure out how can I finish it: dataset = pd.read_csv('/home/brunoalano/data.csv', header=None, names=["text", "category"]) word_vector_model = Word2Vec() index_dict = { w:i for i,w in enumerate(word_vector_model.model.model.index2word) } model = Sequential() model.add( Embedding( output_dim=word_vector_model.model.dimension, input_dim=n_symbols, mask_zero=True, weights=[embedding_weights], input_length=input_length ) ) model.add(LSTM(word_vector_model.model.dimension)) model.add(Dropout(0.5)) # try 0.3 model.add(Dense(1, activation='sigmoid')) # Compile the model model.compile(loss='binary_crossentropy', optimizer='adam') So, it's possible to use this model for my purpose?
