[site]: crossvalidated
[post_id]: 251523
[parent_id]: 
[tags]: 
How to check the correctness of calculations with a gamma distribution?

I’m reading Ponomareva, Roman, and Date (2015) and trying to generate vector $P$ of the $2Ns + 3$ probability weights: $$P =\{\underbrace{p_1, p_2, \ldots, p_s, p_1, p_2, \ldots, p_s,p_1, p_2, \ldots, p_s}_{2\cdot N \text{ times}} , p_{s+1}\cdot w_0, p_{s+1}\cdot w_1, p_{s+1}\cdot w_2\}.$$ In the paper the value $s$ equals to the one number from the set $\{1, 3, 6, 9, 15, 18, 27, 126\}$ , and $N=20$ . I had a problem because some generated probabilities $P$ were negative . In private communication with the author, it was confirmed that this is a problem. Authors proposed the three-steps method. I included a short discription of first and second steps only. Step 1: Parameters for scenario generation Scenario generation procedure has the following inputs: mean $\mu$ of the random vector $r$ , vector’s covariance matrix $\Sigma$ , dimension $N$ and average marginal moments $\bar{\kappa}$ and $\bar{\zeta}$ : N User needs to choose an arbitrary positive integer $s$ , an arbitrary nonzero deterministic vector $Z$ , such that $\Sigma - ZZ^\top> 0$ , and a scalar $\rho \in (0,1)$ : s 0, print("Sigma - ZZT>0"), print("Sigma - ZZT The remaining parameters $\phi_1$ , $\phi_2$ , $\alpha$ , $\beta$ , $w_0$ , $w_1$ , $w_2$ , $\gamma$ can be calculated as follows: $$\phi_1 = \frac{N \bar{\kappa} \sqrt{p_{s+1}} } {\sum_{j=1}^N Z_j^3},$$ $$\phi_2 = p_{s+1} \frac{N \bar{\zeta} - \frac{1}{2s^2}\sum_{l,k}L^4_{l,k}\sum_{i=1}^s\frac{1}{p_i}}{\sum_{j=1}^N{Z_j^4}},$$ $\alpha = 0.5\phi_1 + 0.5\sqrt{4\phi_2-3\phi_1^2}$ , $\beta = -0.5\phi_1 + 0.5\sqrt{4\phi_2-3\phi_1^2}$ , $w_1 = \frac{1}{\alpha(\alpha+\beta)}$ , $w_2 = \frac{1}{\beta(\alpha+\beta)}$ , $w_0 = 1 - \frac{1}{\alpha \beta}$ , $$\gamma=2s^2\frac{N\bar{\zeta} - \frac{3}{4} \sum_{j=1}^N Z_j^4\bigg(\frac{N\bar{\kappa}}{\sum_{j=1}^NZ_j^3}\bigg)^2}{\sum_{l,k}L^4_{lk}}$$ gamma Step 2: Probability weights Generate real scalars $p_i \in (0, 1)$ , for $i = 1,2,..., s$ such that $$\sum_{i=1}^s p_i $$\sum_{i=1}^s \frac{1}{p_i} $$p_{s+1}=1 - 2N\sum_{i=1}^s p_i. \tag{C3}$$ One way to generate $p_i$ that satisfy the constraints is to choose: $$p_i=\frac{s}{N\gamma}+\bigg(\frac{1}{2Ns}-\frac{s}{N\gamma}\bigg)U, \tag{way 1}$$ where $U \in (0, 1)$ is a uniformly distributed random variable. Another way is to generate $p_i$ from a gamma distribution, for example $$p_i=-\ln(U), \tag{way 2}$$ with $U \in (\frac{1}{e}, 1)$ . Note it is necessary to normalise the weights generated using this method, for example $$p_i'=\frac{p_i}{Ns(2\sum p_i +\max p_i)}$$ to ensure that $\sum_{i=1}^s p_i' constraint is satisfied. p = 1/(2*N)")) ifelse( sum(q) = gamma")) # another way to generate p_i # U I have tried two ways proposed in the paper in order to generate $p_i$ . It's known that if $U$ is uniformly distributed on $(0, 1]$ , then $X=−\ln(U)$ is distributed $\Gamma(1, 1)$ , i.e. $X=−\ln(U) \sim \Gamma(1, 1)$ . In the first case (way 1) I have a problem with the constraint (C2): $\sum_{i=1}^s(1/p_i) . It is not satisfied. In the second case (way 2) I have a problem with the value $(4\phi_2-3\phi_1^2)$ which should be positive (see the numerator of $\alpha$ and $\beta$ ), but it is negative. Question. Could one please give me idea how to fix the problem and get a result? I hope there are not bugs in the code. And the reason of problem is a random vector $U$ . Authors wrote (p. 7): There are many more different ways to generate pi and Z while matching the moments, and a natural question to ask whether the results are sensitive to the choice of these parameters. The full code is below. # Based on the paper by Ponomareva, Roman & Date, Published in 2015 # An algorithm for moment-matching scenario generation with application to financial portfolio optimisation N 0, print("Sigma - ZZT>0"), print("Sigma - ZZT = gamma")) ifelse( sum(p) = 1/(2*N)")) # another way to generate p_i #U = 0) print("TRUE") P Reference. K. Ponomareva, D. Roman, P. Date (2015) An algorithm for moment-matching scenario generation with application to financial portfolio optimisation. European Journal of Operational Research, 240 , p. 678–687. This is the link for a draft copy of the text; it's free for download.
