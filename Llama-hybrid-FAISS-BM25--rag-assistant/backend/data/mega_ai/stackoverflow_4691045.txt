[site]: stackoverflow
[post_id]: 4691045
[parent_id]: 4690448
[tags]: 
I'm not sure if this is exactly what you are looking for, but I'll tell you about a practice that is working for me. My Java code is plugged together using Google's DI framework called Guice , the API for which I call from within my Scala code. By way of example, here's a module - that's a Guice configuration thing - that binds interfaces to their implementations. The API is a Java API, but I'm interacting with it from Scala code. class UserSessionModule(storage: ActorRef) extends AbstractModule { protected def configure: Unit = { bind(classOf[ActorRef]). annotatedWith(Names.named("storage")).toInstance(storage) bind(classOf[UserSession]).toProvider(classOf[UserSessionProvider]) } } I've found this to be a very hassle-free approach.
