[site]: stackoverflow
[post_id]: 5158540
[parent_id]: 5158291
[tags]: 
It's disappointing that you can't just write: (flag) ? function1() : function2(); But that's not valid. If function1 and function2 return the same type, you could write: var trash = (flag) ? function1() : function2(); Whether that's more readable is questionable. And, of course, there's the option of putting everything on a single line: if (flag) function1(); else function2(); Again, readability is questionable. If that kind of thing is pervasive in your code, then one could argue that it's a common enough idiom. But in general I would discourage something like that in a code review. Again, if it's pervasive in your code you could write a method to handle it for you: bool IfTrueFalseToggle(bool flag, Action trueFunc, Action falseFunc) { if (flag) trueFunc(); else falseFunc(); return !flag; } And then you'd call it with: flag = IfTrueFalseToggle(flag, function1, function2); It probably needs a better name, and I wouldn't go that route unless I had lots of code that used it. Plus, you'd probably end up having to write a zillion different similar methods to handle all the different types of Action or Func you'd want to call with it. All things considered, I'd say that in general what you have is about as clean as it's going to get.
