[site]: stackoverflow
[post_id]: 4089734
[parent_id]: 4089440
[tags]: 
This is an extremely difficult problem to solve using existing Java classes. For one reason, you've ignored the fact that you can't actually pass in an InputStream to a BufferedReader, you need to pass in a Reader. Files deal in bytes, but Readers deal with Characters. Since any given character can take up an arbitrary number of bytes in an arbitrary character set, you would need to record how many bytes each character took up to be able to compute the number of bytes that a certain number of characters represent in the file. If you are willing to go for a very fragile approach, you could assume that every byte in your file represents a character (e.g. ASCII) and that every line is terminated by "\n" . Then it would just be a matter of recording how many characters you've read. Something like this: public class CountingBufferedReader extends BufferedReader { private int position = 0; public String readLine() { String line = super.readLine(); position += line.length() + 1; return line; } public int getPosition() { return position; } } Making it work generically for any input and any character set is much more difficult, and would probably involve rewriting many existing classes to be efficient.
