[site]: stackoverflow
[post_id]: 846170
[parent_id]: 846121
[tags]: 
What you probably want is something like this: std::vector allParagraphs; std::string currentParagraph; while (std::getline(read, line)) { if (line == "#") { // modify this condition, if needed // paragraph ended, store to vector allParagraphs.push_back(currentParagraph); currentParagraph = ""; else { // paragraph continues... if (!currentParagraph.empty()) { currentParagraph += "\n"; } currentParagraph += line; } } // store the last paragraph, as well // (in case it was not terminated by #) if (!currentParagraph.empty()) { allParagraphs.push_back(currentParagraph); } // this is not extremely random, but will get you started size_t selectedIndex = rand() % allParagraphs.size(); std::string selectedParagraph = allParagraphs[selectedIndex]; For better randomness, you could opt for this instead: size_t selectedIndex = rand() / (double) (RAND_MAX + 1) * allParagraphs.size(); This is because the least significant bits returned by rand() tend to behave not so randomly at all.
