[site]: stackoverflow
[post_id]: 5104125
[parent_id]: 5103849
[tags]: 
If you look in the debugger at the point where the exception is raised, you'll see that sender isn't a Button , so trying to do an explicit cast to Button will obviously throw an InvalidCastException . You can use the VisualTreeHelper to walk up the tree from your actual sender to the Button element: VisualTreeHelper.GetParent((sender as DependencyObject)); UPDATE: In your instance sender is the MenuItem in the ContextMenu . You can get to the parent ContextMenu from the MenuItem by using the VisualTreeHelper , but unfortunately, ContextMenu does not expose any public members that enable you to access the owner; the Owner property is internal. You could get the source code for the Toolkit and expose the Owner property as publi instead, or use a completely different approach. Have you thought of using an MVVM framework (such as MVVM Light ) to wire up commands to these context menu items? Your current approach is very fragile and will break as soon as you change the visual tree. If you used commands, you could pass any additional information that you need for processing via the command parameter.
