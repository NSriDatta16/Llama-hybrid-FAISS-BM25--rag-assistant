[site]: stackoverflow
[post_id]: 2211150
[parent_id]: 2210720
[tags]: 
Really, you shouldn't ever ever catch Error, but here's how you can find initializer problems wherever they might occur. Here's an agent that will make all ExceptionInInitializerErrors print the stack trace when they are created: import java.lang.instrument.*; import javassist.*; import java.io.*; import java.security.*; public class InitializerLoggingAgent implements ClassFileTransformer { public static void premain(String agentArgs, Instrumentation inst) { inst.addTransformer(new InitializerLoggingAgent(), true); } private final ClassPool pool = new ClassPool(true); public byte[] transform(ClassLoader loader, String className, Class classBeingRedefined, ProtectionDomain protectionDomain, byte[] classfileBuffer) { try { if (className.equals("java/lang/ExceptionInInitializerError")) { CtClass klass = pool.makeClass(new ByteArrayInputStream(classfileBuffer)); CtConstructor[] ctors = klass.getConstructors(); for (int i = 0; i It uses javassist to modify the classes. Compile and put it in a jar file with javassist classes and the following MANIFEST.MF Manifest-Version: 1.0 Premain-Class: InitializerLoggingAgent Run your app with java -javaagent:agentjar.jar MainClass and every ExceptionInInitializerError will be printed even if it is caught.
