[site]: stackoverflow
[post_id]: 3941048
[parent_id]: 3941016
[tags]: 
Trust me, you don't want to do that. Take a look at boost::shared_ptr : it allows you to deal with pointers in an elegant way, without having to care too much about their deletion. class Foo { public: boost::shared_ptr p; }; Foo *f1 = new Foo(); Foo *f2 = new Foo(); f1->p.reset(new int(1)); f2->p = f1->p; delete f2; // ok delete f1; // no error and its guaranteed ! If you don't want to use boost , some compilers already provide std::tr1::shared_ptr which has similar semantics.
