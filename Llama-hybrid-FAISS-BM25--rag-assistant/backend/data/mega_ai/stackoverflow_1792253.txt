[site]: stackoverflow
[post_id]: 1792253
[parent_id]: 
[tags]: 
Default template parameters with forward declaration

Is it possible to forward declare a class that uses default arguments without specifying or knowing those arguments? For example, I would like to declare a boost::ptr_list in a Traits class without dragging the entire Boost library into every file that includes the traits. I would like to declare namespace boost { template class ptr_list ; } , but that doesn't work because it doesn't exactly match the true class declaration: template > class ptr_list { ... }; Are my options only to live with it or to specify boost::ptr_list in my traits class? (If I use the latter, I'll also have to forward declare boost::heap_clone_allocator and include , I suppose.) I've looked through Stroustrup's book, SO, and the rest of the internet and haven't found a solution. Usually people are concerned about not including STL, and the solution is "just include the STL headers." However, Boost is a much more massive and compiler-intensive library, so I'd prefer to leave it out unless I absolutely have to.
