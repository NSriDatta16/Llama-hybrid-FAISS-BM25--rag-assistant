[site]: stackoverflow
[post_id]: 4765257
[parent_id]: 4764516
[tags]: 
Rather than figuring out where each pixel in the original image goes, you should figure out where each pixel in the new image came from. You can do this just by rotating negative 105 degrees. old_x = avg_pos_x+(math.cos(math.radians(-105))*radius) old_y = avg_pos_y-(math.sin(math.radians(-105))*radius) Then copy the color of (old_x, old_y) to (x, y). Here's where you could do interpolation if you like -- e.g. taking a weighted average color of the four pixels whose centers form a square containing (old_x, old_y). By doing the transformation in reverse, you're sure to figure out the color for each pixel of the new image exactly once. If you do it "forwards", some pixels in the new image will be hit more than once, and some won't be hit at all. These pixels not being hit at all might be your "random" pixels -- holes in your final image that end up with a default color or somesuch.
