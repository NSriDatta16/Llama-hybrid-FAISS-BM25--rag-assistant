[site]: stackoverflow
[post_id]: 2790681
[parent_id]: 2258800
[tags]: 
I have translated the c code to AS3 and fixed the few errors in the code as well. dmin was calculating the max in the rgb to hsb function as well as when calculating the hue when blue is the max it should be red - green else cyan and magenta get turned backwards. RGB to HSB private function RGBtoHSB(_rgb:uint):Object { var red:Number = ((_rgb >> 16) & 0xFF) / 255.0; var green:Number = ((_rgb >> 8) & 0xFF) / 255.0; var blue:Number = ((_rgb) & 0xFF) / 255.0; var dmax:Number = Math.max(Math.max(red, green), blue); var dmin:Number = Math.min(Math.min(red, green), blue); var range:Number = dmax - dmin; var bright:Number = dmax; var sat:Number = 0.0; var hue:Number = 0.0; if (dmax != 0.0) { sat = range / dmax; } if (sat != 0.0) { if (red == dmax) { hue = (green - blue) / range; }else if (green == dmax) { hue = 2.0 + (blue - red) / range; }else if (blue == dmax) { hue = 4.0 + (red - green) / range; } hue = hue * 60; if (hue HSB to RGB private function HSBtoRGB(_hue:Number, _sat:Number, _value:Number):uint { var red:Number = 0.0; var green:Number = 0.0; var blue:Number = 0.0; if (_sat == 0.0) { red = _value; green = _value; blue = _value; }else { if (_hue == 360.0) { _hue = 0; } var slice:int = _hue / 60.0; var hue_frac:Number = (_hue / 60.0) - slice; var aa:Number = _value * (1.0 - _sat); var bb:Number = _value * (1.0 - _sat * hue_frac); var cc:Number = _value * (1.0 - _sat * (1.0 - hue_frac)); switch(slice) { case 0: red = _value; green = cc; blue = aa; break; case 1: red = bb; green = _value; blue = aa; break; case 2: red = aa; green = _value; blue = cc; break; case 3: red = aa; green = bb; blue = _value; break; case 4: red = cc; green = aa; blue = _value; break; case 5: red = _value; green = aa; blue = bb; break; default: red = 0.0; green = 0.0; blue = 0.0; break; } } var ired:Number = red * 255.0; var igreen:Number = green * 255.0; var iblue:Number = blue * 255.0; return ((ired
