[site]: stackoverflow
[post_id]: 3835885
[parent_id]: 3835857
[tags]: 
Absolutly not! The only "performance" difference is when variables are initialised int anint = 42; vs static int anint = 42; In the first case the integer will be set to 42 every time the function is called in the second case ot will be set to 42 when the program is loaded. However the difference is so trivial as to be barely noticable. Its a common misconception that storage has to be allocated for "automatic" variables on every call. This is not so C uses the already allocated space in the stack for these variables. Static variables may actually slow you down as its some aggresive optimisations are not possible on static variables. Also as locals are in a contiguous area of the stack they are easier to cache efficiently.
