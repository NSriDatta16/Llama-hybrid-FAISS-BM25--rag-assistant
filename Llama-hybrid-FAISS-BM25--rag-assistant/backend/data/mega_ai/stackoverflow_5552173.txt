[site]: stackoverflow
[post_id]: 5552173
[parent_id]: 
[tags]: 
How to populate ExtJS Tree with data from Spring MVC Controller?

As a newbie in ExtJS I'm trying to use it with Spring MVC Controller. So my structure is following: tree.jsp gets JSON data from SomeController.java. I'm using Tiles 2 to connect them. tree.jsp if (Ext.BLANK_IMAGE_URL.substr(0,5) != 'data'){ Ext.BLANK_IMAGE_URL = '/ext-3.3.1/resources/images/default/s.gif'; } Ext.onReady(function(){ var proxy = new Ext.data.HttpProxy({ api: { read: 'jsonTree' } }); var treeLoader = new Ext.tree.TreeLoader({ proxy: proxy }); // shorthand var Tree = Ext.tree; var tree = new Tree.TreePanel({ el:'tree-div', //we need to have a div in our html named this title: "Data Sources", useArrows:true, autoScroll:true, animate:true, enableDD:true, containerScroll: true, rootVisible: false, loader: treeLoader, root: { nodeType: 'async', text: 'Ext JS', draggable:false, id:'source' } }); // render the tree tree.render(); }); SomeController.java @Controller @RequestMapping("/some") public class SomeController { private Logger log = LoggerFactory.getLogger(CountryReferenceBookController.class); private static final String LIST_VIEW_KEY = "redirect:list.html"; @Autowired private RestTemplate restTemplate; @RequestMapping(value = "/jsonTree/{languageId:\\d+}") public @ResponseBody Map getJsonTreeInfo(@PathVariable("languageId") Long languageId) { List treeList = new ArrayList >(); List list = new ArrayList (); list = restTemplate.getForObject("http://localhost:8084/xcollector/restService/reference/list", list.getClass()); for (ReferenceBookTitleImpl title : list) { String description = restTemplate.getForObject("http://localhost:8084/xcollector/restService/reference/title/" + title.getId() + "/content/" + languageId, String.class); //create a child node that is a leaf Map child = new HashMap(); child.put("id", title.getId()); child.put("text", description); child.put("checked", Boolean.FALSE); child.put("leaf", Boolean.TRUE); treeList.add(child); } //the spring mvc framework takes a hashmap as the model..... :| so in order to get the json array to the View, we need to put it in a HashMap Map modelMap = new HashMap(); modelMap.put("JSON_OBJECT", treeList); log.info("jsonArray: " + treeList.toString()); return modelMap; } } When I send a GET response to the controller I get a file with json array instead of the populated tree. What is wrong with my code? Thanks a lot in advance, L.
