[site]: stackoverflow
[post_id]: 1472860
[parent_id]: 1472702
[tags]: 
The most efficient answer will depend on the contents of the file. Any algorithm we come up with will have complexity proportional to N (number of words in file) and L (average length of the strings) and possibly V (variety in the length of strings) If this were a real world situation, I would start with KISS and not try to overcomplicate it. Checking the length of the target string is simple but could help avoid lots of nlogn sort operations. target = sort_characters("target string") count = 0 foreach (word in inputfile){ if target.len == word.len && target == sort_characters(word){ count++ } }
