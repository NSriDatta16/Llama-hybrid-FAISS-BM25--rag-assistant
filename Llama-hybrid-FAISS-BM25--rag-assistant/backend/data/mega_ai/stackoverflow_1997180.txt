[site]: stackoverflow
[post_id]: 1997180
[parent_id]: 1997159
[tags]: 
I think the problem might be related to the 2 concurrent connections limit that most web browsers implement. It looks like the latency of your web service to respond is making your AJAX requests overlap, which in turn is exceeding the 2 concurrent connections limit. You may want to check out these articles regarding this limitation: The Dreaded 2 Connection Limit The Two HTTP Connection Limit Issue Circumventing browser connection limits for fun and profit This limit is also suggested in the HTTP spec: section 8.14 last paragraph , which is probably the main reason why most browsers impose it. To work around this problem, you may want to consider the option of relaunching your AJAX request ONLY after a successful response from the previous AJAX call. This will prevent the overlap from happening. Consider the following example: function autoUpdate () { var ajaxConnection = new Ext.data.Connection(); ajaxConnection.request({ method: 'GET', url: '/web-service/', success: function (response) { // Add your logic here for a successful AJAX response. // ... // ... // Relaunch the autoUpdate() function in 100ms. (Could be less or more) setTimeout(autoUpdate, 100); } } } This example uses ExtJS , but you could very easily use just XMLHttpRequest .
