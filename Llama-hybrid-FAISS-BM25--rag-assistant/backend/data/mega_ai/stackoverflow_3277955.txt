[site]: stackoverflow
[post_id]: 3277955
[parent_id]: 3277913
[tags]: 
If you don't mind probabilistic answers, you can time how long it takes to do DNS lookups on the hosts in question. If the DNS answer comes back very quickly, then they might have done a DNS request for that host recently. If the DNS answer comes back slower, then they might not have done a DNS request for that host recently. Of course, my cable modem is going to be giving much faster results than CDMA or GSM phones, so it might only be useful if you're comparing several sites on a single machine. Edit , in response to Alex's point about ISP DNS caching: For example: With a local DNS cache, my initial queries for domains took an average 1.6 seconds. (I assume because the cache was very cold, and needed to find .com, .co.uk, and .co.jp nameservers.) Hot-cache queries averaged 0.006 seconds. My DNS cache is a recursive resolver, so it does not use my ISP's caching resolvers. Without using my local DNS cache and using the DNS cache on my cute router, my initial queries averaged .910 seconds and hot-cache queries averaged .514 seconds. I don't know if the .4 seconds saved are from my router's DNS caching or my ISP's caching. But even .4 seconds should be visible in Javascript. There is enough data to make some guesses: if the time for the first and second attempts to resolve the domain name are similar, you can assume the cache was hot and the address had been used recently. (Perhaps hot at the ISP level, but this was marketed as a probabilistic method in any event. :) If the times are dissimilar, you can assume the cache was cold. When using my ISP's DNS, I guessed nine 'hot' domains and nine 'cold' domains, and the average lookup time for hot was .226 seconds, and the average lookup time for cold was .308 seconds. The difference of .082 seconds might not be large enough to notice in javascript, and it definitely pales in comparison to the differences between known-hot and known-cold lookups using a local cache or my cute little router for DNS. Of course 'hot' and 'cold' are relative to the TTL for each individual domain.
