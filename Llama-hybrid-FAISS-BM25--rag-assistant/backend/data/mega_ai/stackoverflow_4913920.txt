[site]: stackoverflow
[post_id]: 4913920
[parent_id]: 
[tags]: 
In software engineering, a design pattern is a general reusable solution to a commonly occurring problem within a given context in software design. A design pattern is not a finished design that can be transformed directly into code. It is a description or template for solving a problem that can be used in many different situations. Object-oriented design patterns typically show relationships and interactions between classes or objects without specifying the final application classes or objects involved. Many patterns imply object-orientation or a more generally mutable state, which may not be as applicable in functional programming languages, in which data is immutable or treated. Design patterns are generally described using the Unified Markup Language ([tag: UML]) - a class diagram shows the relationship between the design pattern components. In addition, UML has a sufficiently extensive and expressive vocabulary that helps describe the details of patterns. The seminal book that introduced the concept had four authors, often referred to as the "Gang of Four". Gang of Four design patterns Creational patterns: abstract-factory builder factory-method prototype-pattern singleton Structural patterns: adapter bridge composite decorator facade flyweight-pattern proxy-pattern Behavioral patterns: chain-of-responsibility command-pattern interpreter-pattern iterator mediator memento observer-pattern state-pattern strategy-pattern template-method-pattern visitor Concurrency patterns locking double-checked-locking threadpool scheduler reactor Other patterns dependency-injection front-controller lazy-initialization module model-view-controller multiton null-object-pattern parameter-object unit-of-work Useful links Wikipedia Article for Design Patterns 'Before' and 'After' refactoring examples Portland Pattern Repository Video Training in Java Design Patterns and Architecture by John Purcell Design Patterns Samples implemented in Java - Github Books Design Patterns: Elements of Reusable Object-Oriented Software (the "Gang of Four" book) Design Patterns For Dummies Design Patterns Explained: A New Perspective on Object Oriented Design, 2nd Edition Elemental Design Patterns Professional Java EE Design Patterns Pro Design Patterns in Swift Mastering Python Design Patterns Haskell Design Patterns Django Design Patterns and Best Practices Mastering JavaScript Design Patterns Scala Design Patterns: Patterns for Practical Reuse and Design Professional Design Pattern in C#
