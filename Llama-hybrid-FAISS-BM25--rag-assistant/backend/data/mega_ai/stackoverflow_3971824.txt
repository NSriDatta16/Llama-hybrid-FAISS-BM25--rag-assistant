[site]: stackoverflow
[post_id]: 3971824
[parent_id]: 3971049
[tags]: 
A couple of additional points re use of vector here. Unlike ArrayList and Array in Java, you don't need to do anything special to treat a vector as an array - the underlying storage in C++ is guaranteed to be contiguous and efficiently indexable. Unlike ArrayList , a vector can efficiently hold primitive types without encapsulation as a full-fledged object. When removing items from a vector , be aware that the items above the removed item have to be moved down to preserve contiguous storage. This can get expensive for large containers. Make sure if you store complex objects in the vector that their copy constructor and assignment operators are efficient. Under the covers, C++ STL uses these during container housekeeping. Advice about reserve() ing storage upfront (ie. at vector construction or initialilzation time) to minimize memory reallocation on later extension carries over from Java to C++.
