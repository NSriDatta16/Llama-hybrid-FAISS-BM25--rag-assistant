[site]: stackoverflow
[post_id]: 1239430
[parent_id]: 1228298
[tags]: 
As mentioned in one of the comments, I tried replicating a simpler version of what I was trying to do using a HelloWorld app, and it worked on the first try, with no problems, just as expected. Faced with that, I began to wonder a bit. Somewhere in all the googling I did to try to get an answer to this problem, I ran across a link where a person was having a problem with events not firing from a button, and it turned out that the problem was related to the view in which the button was placed and that view having another subview as a peer to the button, and that subview was somehow eating the events rather than allowing them to go where they'd been directed. The scenario wasn't exactly the same as mine, but it sounded close enough that investigation would be worthwhile. Despite all the excellent advice received here, none had yet borne fruit. Last night I decided to completely re-create the nib file from scratch (made a copy of what I had first), and I got it to work. The key difference seems to be that I in the original non-working nib file, I had dragged over a TableViewController from the palette, then changed its type to my subclass PZTableViewController . When I did that same thing in my new nib, the events didn't fire. If, on the other hand, I removed the dragged-over TableViewController and instead just dragged over an NSObject and changed its class to PZTableViewController and plumbed everything up, it all "just worked". I will try to chase down the link that got me started on this line of thinking and post it either as an edit or as a comment. This is also not a complete answer because I do not yet understand the difference between the from-the-palette TableViewController and my subclass. When I figure that out, I will update this answer via edit or comment.
