[site]: datascience
[post_id]: 117121
[parent_id]: 
[tags]: 
Python Library Trend time series multivariate

Our csv contains 36 columns 1 date time column collected every 30 mins 3 variables (count,latency,Totaltime) x 10 Features(user io, serverio ,concurrency ..etc ) Of different data points from the server: example user io count,user io latency, userio totaltime. other 5 are more static : server name,ip address.. We know when there is a peak in 1 of the features(userio, serverio) there is a issue in the server .. there is also times when it can be a combination of the features. In past one year data we can see if latency in any 1 feature : the outlier has some chances to become a bigger outlier(meaning we see the outlier keep increasing in 30 mins bucket and the biggest one matches our issue time) that causes a issue on the server. after loads of blogs, was able to get something like below working for 1 feature.. But we want to combine the other features as well to give us a consolidated result. # from sklearn.ensemble import IsolationForest # model = IsolationForest(contamination=0.004) # model.fit(df[['Concurrency Latency']]) # df['outliers']=pd.Series(model.predict(df[['Concurrency Latency']])).apply(lambda x: 'yes' if (x == -1) else 'no' ) # df.query('outliers=="yes"') # fig = px.scatter(df.reset_index(), x='STime', y='Concurrency Latency', color='outliers') # fig.update_xaxes( # rangeslider_visible=True, # ) # fig.show() Any idea which library can help to achieve this . Need it work with timeseries to understand trends and seasonality. Background : new in ML, have started python some time back. Any help is appreciated. The goal is to catch the outlier when it started off with a small alert.. so we are prepared few hours before hand.
