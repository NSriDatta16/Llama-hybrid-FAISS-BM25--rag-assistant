[site]: crossvalidated
[post_id]: 240871
[parent_id]: 
[tags]: 
Curve fitting vs function approximation

According to Wikipedia, curve fitting is defined as: the process of constructing a curve, or mathematical function, that has the best fit to a series of data points And function approximation is defined as: select a function among a well-defined class that closely matches ("approximates") a target function in a task-specific way Specifically, I am talking about the context of a deep neural network, which are often described as function approximators. But according to the above definitions, I do not see the difference between describing a network as a curve fitter, and a function approximator. Both attempt to learn a function which matches the observed data as closely as possible. What is the key difference?
