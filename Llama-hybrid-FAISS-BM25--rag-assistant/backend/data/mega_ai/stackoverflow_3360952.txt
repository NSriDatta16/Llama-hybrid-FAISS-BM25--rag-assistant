[site]: stackoverflow
[post_id]: 3360952
[parent_id]: 
[tags]: 
SqlDataReader getting rows when no data

This is incredibly urgent, I need to present this application in 3 and a half hours. My application checks against a data source to see if a value exists in the database and changes values depending on whether or not the value in question was found. The problem is that I've run the sql query with the value in question in SSMS and no rows were returned, and yet, my DataReader says it has rows. This means that my application is reporting inaccurately. Here's my code: Using conn As New SqlConnection("Data Source=.\SQLEXPRESS; Initial Catalog=Testing; Integrated Security=True;") Dim cmd As New SqlCommand(sql, conn) conn.Open() Dim reader As SqlDataReader = cmd.ExecuteReader If reader.HasRows Then Value = True AcctNumber = reader(1) End If reader.Close() End Using I've removed code that's not relevant to this post, but what you may want to know is: Value is Boolean AcctNumber is a String As this is an application for work, I'd rather not include the SQL Query. The problem is the reader. If I comment out Value = True , I get the right info, but leaving that out will mean that in a case where Value should be True, it'll report inaccurately as well. Thanks in advance! EDIT: Full Source Code: Case "Business" ' Change the number format to local because that's what it is in the db If Microsoft.VisualBasic.Left(NumberToCheck, 2) = "27" Then NumberToCheck = NumberToCheck.Replace(Microsoft.VisualBasic.Left(NumberToCheck, 2), "0") End If Dim sql As String = "SELECT a.TelNumber, c.AccountNumber " & _ "FROM TelInfo a " & _ "INNER JOIN Customers b ON a.CustID = b.pkguidId " & _ "INNER JOIN Accounts c ON b.pkguidId = c.CustID " & _ "WHERE a.TelNumber = '" & NumberToCheck & "'" Using conn As New SqlConnection("Data Source=.\SQLEXPRESS; Initial Catalog=Testing; Persist Security Info=True; " & _ "User Id=JoeSoap; Password=paoseoj;") Dim cmd As New SqlCommand(sql, conn) conn.Open() Dim reader As SqlDataReader = cmd.ExecuteReader If reader.Read Then Value = True AcctNumber = reader(1) End If reader.Close() End Using On the comments below made before 08/02/10 (mm/dd/yy): Value is just a boolean that gets returned by the function to indicate that the searched telephone number ( NumberToCheck ) exists in the database. So... Private AcctNumber As String Dim val As Boolean = False val = CheckNumber("3235553469") If val Then ' AcctNumber will have been set by CheckNumber Label1.Text = AcctNumber End If val will only be returned True if the NumberToCheck (in this example 3235553469) exists in the database. Having copied the value of NumberToCheck into SSMS and testing the query there, I can verify that the query does work as expected. No, I can't populate a DataSet because of the volume of information in the table (+/- 9.5m rows). Even with the 'WHERE' filter, the query is too heavy on resources and eventually ends in an OutOfMemory Exception which is why I went with a DataReader. I'm going to try the ExecuteScalar option as suggested as an answer by Darryl now, will update with the results.
