[site]: crossvalidated
[post_id]: 637169
[parent_id]: 
[tags]: 
What are the expected residual standard deviations from each of the fitted models and data-generating process?

I simulate data to be analyzed using a linear mixed-effects model. It is based on an experiment with 2 levels ( A and B ) of a single factor ( treatment ). There are a total of n experimental units, half in each factor level. There are m observations per experimental unit. In total, I have N = n*m observations. When I analyze such data using lmer(outcome~1+treatment+(1|exp.unit), data = original.data) , I expect the residuals standard deviation to be equal to the standard deviation between observations within experimental units ( sd.w ). I believe this reasoning is correct, as the sampling distribution of the residuals standard deviation is centered on sd.w . It also makes sense because the variability between experimental units ( sd.b ) is captured by the random intercept ( 1|exp.unit ), leaving only the variability from sd.w to be captured by the error term. At least, this is how I see it. Question 1: Are my reasoning and my expectation that residuals SD in this case equals sd.w correct? After using a mixed model, I analyze the same dataset using a simple linear model lm(outcome~1+treatment, data = original.data) , which I know is not appropriate (it leads to pseudoreplication as defined by Hurlbert in 1984). I build a histogram of the sampling distribution of residuals standard deviations (see middle plot). I this case I'm not sure if I can (and how to) obtain the expected residuals standard deviation using the values I set for the simulation (e.g., n , m , sd.b , sd.w , ...). Question 2: If possible in this case, how could I obtain the expected residuals SD independently from the simulation results? I want to add this value to the histogram as a vertical red line. Any guidance on this is appreciated! I use another simple linear model on the data averaged over experimental units lm(outcome~1+treatment, data = averaged.data) . In this case, I believe I can obtain the expected residuals standard deviation by calculating sqrt(sd.b*sd.b + sd.w*sd.w/m) . My reasoning is that the variability in residuals comes from the variability of averaging each group of m observations per experimental unit ( sd.w*sd.w/m ) plus the variability between experimental units ( sd.b*sd.b ). Question 3: Are my reasoning and my expected residuals SD correct? library(lmerTest) n = 10 # number of experimental units (half in each treatment) m = 3 # number of observations per exp. unit N = n*m # must be even number sd.b = 10 # sd between experimental units sd.w = 2 # sd between observation within experimental units expected.mixed.model.sigma = sd.w # what I expect residual sd from mixed model to be expected.averaged.model.sigma = sqrt(sd.b*sd.b + sd.w*sd.w/m) # what I expect residual sd from averaged model to be exp.unit = as.factor(rep(1:n, each = m)) treatment = as.factor((rep(LETTERS[1:2], each = N/2))) simulation = function(){ random.intercept = rep(rnorm(n, 0, sd.b), each = m) error = rnorm(N, 0, sd.w) outcome = random.intercept + error # build data frame original.data = data.frame(outcome, exp.unit, treatment) # average over experimental units averaged.data = aggregate(outcome~treatment+exp.unit, data = original.data, FUN = mean) # linear mixed-effects model original.data.mixed.model = lmer(outcome~1+treatment+(1|exp.unit), data = original.data) # simple linear model (original data; same as mixed model) original.data.simple.model = lm(outcome~1+treatment, data = original.data) # simple linear model (averaged data) averaged.data.simple.model = lm(outcome~1+treatment, data = averaged.data) # collect residual standard deviation from each model mixed.model.sigma = sigma(original.data.mixed.model) original.data.simple.model.sigma = sigma(original.data.simple.model) averaged.data.simple.model.sigma = sigma(averaged.data.simple.model) return(c(mixed.model.sigma, original.data.simple.model.sigma, averaged.data.simple.model.sigma)) } set.seed(100) x = replicate(1000, simulation()) par(mfrow = c(3,1)) # three plots on a 3 rows by 1 column grid hist(x[1,], xlab = "mixed model residual sd", main = "red line is what I expect") abline(v = expected.mixed.model.sigma, col = "red", lwd = 3) hist(x[2,], xlab = "simple model residual sd", main = "not sure what to expect") hist(x[3,], xlab = "averaged model residual sd", main = "red line is what I expect") abline(v = expected.averaged.model.sigma, col = "red", lwd = 3) Plot generated by the code above:
