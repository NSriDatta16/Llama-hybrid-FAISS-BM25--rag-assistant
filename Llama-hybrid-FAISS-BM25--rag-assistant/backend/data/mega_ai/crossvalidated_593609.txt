[site]: crossvalidated
[post_id]: 593609
[parent_id]: 593588
[tags]: 
For ease of writing, I assume here id refers to participants, i.e., each level of id = person. This may not be the best formulated reply, but the way I would approach this: If I understand correctly, your example has a "level 1" dependent variable (i.e., you have several values of y for each participant), but only a "level 2" independent variable (you have one value of x for each participant). This is common in, say, experience sampling studies when you predict a momentary feeling (a level 1 variable, many values per participant) from, say, a personality trait (a level 2 variable, one value per participant). In this case you cannot estimate a participant-specific slope between x and y (that you would get from (x|id) if you had a level 1 predictor), but you can estimate a participant-specific random intercept with (1|id). When you use mixed_mod and plot the results, you get, visually, a separate slope for each id (all slopes being parallel) - but this slope is in fact just the overall slope of y ~ x positioned at different levels for each participant as a function of their personal intercept + overall intercept. The usefulness of this is that you see how participants vary in terms of their average levels of outcome, given the grand average level of x. But you could say, as you do, that separate lines in this case are somewhat nonsensical. It could be said it would be more logical to plot participant-specific intercepts as, say, points and not lines and only plot the overall y ~ x effect as a line. As for your questions: the mixed_mod code you post would be correct for modelling this type of data. An alternative way would be to fit a single-level regression of y ~ x with clustered standard errors (r does not have a built-in way to do that, see here: https://www.r-bloggers.com/2021/05/clustered-standard-errors-with-r/ ).
