[site]: crossvalidated
[post_id]: 247622
[parent_id]: 200107
[tags]: 
I believe your 2nd answer is the correct one, if you train with cross-entropy the network will try to make predictions that match the actual probability and thus it won't output confident scores if it shouldn't be confident. Another option you have is to train a simple (linear, logistic...) model that takes as input all your predictions from your sensors and predicts the actual value. Also I find it strange that outputs from different sensors can be embeded in the same dimension and the same meaning each coordinate. If those coordinates don't always have the same meaning you should consider not sharing a Neural Network between different sensors.
