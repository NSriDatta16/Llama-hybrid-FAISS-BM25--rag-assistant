[site]: datascience
[post_id]: 114612
[parent_id]: 
[tags]: 
How do I match the number of the features of new text data to the data used in the training of the model

I am working on a classifier for some twitter data to predict who it was tweeted by. I am only using the text of the tweets to build the model. After all text related preprocessing here is how I prepare and vectorise train and test data x_train, x_test, y_train, y_test = train_test_split(tweets["tweet"], tweets["label"], test_size = 0.3, random_state = 42) count_vect = CountVectorizer(stop_words='english') transformer = TfidfTransformer(norm='l2',sublinear_tf=True) x_train_counts = count_vect.fit_transform(x_train) x_train_tfidf = transformer.fit_transform(x_train_counts) x_test_counts = count_vect.transform(x_test) x_test_tfidf = transformer.transform(x_test_counts) print(x_train_counts.shape) The output shape has 3792 features. I want to be able to do something like model.predict("enter tweet here") And have the predicted label as an output. However when I try to use a random tweet and vectorise it - the number of features is only 19, even if I put that tweet though all the same preprocessing steps, so when I try to run the prediction I get an error that number of features doesn't match. I don't fully understand where exactly are either of these numbers coming from (and why the first one is so large) but also what would I have to do to make this work? Thank you!
