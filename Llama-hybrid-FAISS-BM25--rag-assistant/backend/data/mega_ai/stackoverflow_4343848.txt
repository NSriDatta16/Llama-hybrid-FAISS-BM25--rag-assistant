[site]: stackoverflow
[post_id]: 4343848
[parent_id]: 4343717
[tags]: 
Could you please explain why you'd like to do that? The only reason I can see is to make it impossible to implement the interface for a user of your library. I don't think that's a good approach. Simply add some Javadoc and explain why it doesn't make sense to implement it. But finally, leave it to the user whether there's a valid reason to create a custom implementation. It's always difficult to foresee each and every use case. If somebody gots stuck with his approach it's certainly not your fault - he can't say he hasn't been warned :) To give an example, that's what you can find all over Apache Wicket's source code: /** * THIS IS WICKET INTERNAL ONLY. DO NOT USE IT. * * Traverses all behaviors and calls ... */ EDIT: just another though: you could try this, although I'd still discourage it - don't say you haven't been warned ;) public interface ExposedInterface { void foo(); } // only default visibility interface InternalInterface extends ExposedInterface { // nothing here } // and here some methods ExposedInterface get(); // user can use it void set(InternalInterface obj); // user is out of luck here
