[site]: stackoverflow
[post_id]: 3106524
[parent_id]: 3099275
[tags]: 
For Lua, check out Roberto's struct library. (Roberto is one of the authors of Lua.) It is more general than needed for the specific case in question, but it isn't unlikely that the need to interchange an int is shortly followed by the need to interchange other simple types or larger structures. Assuming native byte order is acceptable at both ends (which is likely a bad assumption, incidentally) then you can convert a number to a 4-byte integer with: buffer = struct.pack("l", value) and back again with: value = struct.unpack("l", buffer) In both cases, buffer is a Lua string containing the bytes. If you need to access the individual byte values from Lua, string.byte is your friend. To specify the byte order of the packed data, change the format from "l" to " for little-endian or ">l" for big-endian. The struct module is implemented in C, and must be compiled to a DLL or equivalent for your platform before it can be used by Lua. That said, it is included in the Lua for Windows batteries-included installation package that is a popular way to install Lua on Windows systems.
