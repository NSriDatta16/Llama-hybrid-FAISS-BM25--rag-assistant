[site]: stackoverflow
[post_id]: 1910288
[parent_id]: 1910223
[tags]: 
To answer (1): This is a judgement call you must constantly make. Ask, are the two types of things more alike than they are different? Sometimes it could go either way, and two good programmers might decide differently. Keep inheritance in mind, which is how you can have the best of both worlds: common functionality organized centrally with all the individualism you need. This is central to oop/d. (You might even eventually split domain item representation among multiple objects, driven by the single responsibility principal , but I wouldn't worry about that at first. One class for one domain item is a great place to start and is very straightforward.) To answer 2: Yes, you often have domain objects represent groups of items, as well as individual items. Quite often you will have both a car object as well as a cars object, which is called a collection object.
