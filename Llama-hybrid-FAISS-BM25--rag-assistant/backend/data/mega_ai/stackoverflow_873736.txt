[site]: stackoverflow
[post_id]: 873736
[parent_id]: 873704
[tags]: 
There are a few different uses for ThreadLocal . As in your example, an expensive to construct, thread-unsafe object can be cached. The object than can then be used in a safe manner without the overhead of construction every use. It's not necessarily a win (more, non-local memory is used, for instance), but it might be. It can also be used to 'sleaze' through a context argument into a callback that isn't designed to have context. Or just to make interfaces simpler. In this case the canonical reference to the ThreadLocal is probably not static. The object may also be deliberately mutable. I'm not a great fan of encouraging this technique, but some people (such as "crazy" Bob Lee) like it. ThreadLocal doesn't work so well when you fork tasks off into multiple threads. InheritableThreadLocal appears to have no good uses.
