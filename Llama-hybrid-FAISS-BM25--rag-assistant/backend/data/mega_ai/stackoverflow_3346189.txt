[site]: stackoverflow
[post_id]: 3346189
[parent_id]: 3345238
[tags]: 
Here's an idea. First calculate the number of each type and divide into the total. This would tell you approximately how often each should appear (i.e. every second index, every third, etc). Then iterate through the array, keeping counters for each element type. At each index increment all the counters, then check if the counter for the element type at that index is higher than the average distribution. If it is then swap it with the previous element, zero the counter for that type, and move on. If not just move on. It would take multiple passes but you would eventually have an evenly distributed list. I haven't done the pen and paper work, but it something like this is going to be your best bet. Edit - Tried it with pen and paper. If you start sorted it would probably take as many passes as you have elements. If you randomize first, and if the number of each type of element is similar, it would take much less time. This is all just arm waving though...
