[site]: stackoverflow
[post_id]: 4750271
[parent_id]: 4682524
[tags]: 
For option 3, you could use the Urchin tracking methods to simulate the data as it would be sent to Google Analytics, and instead send it to a local file which scrapes the request info and then sends it to Google when its done. So, your JS code would look like this: var pageTracker = _gat._getTracker("UA-XXXX-1"); pageTracker._setLocalServerMode(); //this disables external GA calls. pageTracker._setLocalGifPath("/foo/bar.gif"); pageTracker._trackPageview(); //or your transaction calls From looking at the URL request this makes against a regular __utm.gif request, it seems that the only important thing missing is the utmcc parameter, which appears to be a url-encoded version of the Google Analytics cookies. You'd want to track this as well (out of document.cookie, or on the server side), so that you could add it to the query string when you make your Google Analytics request. This is important because this is where the session and source information is stored; otherwise your tracking won't have context. Then, on the server, bar.gif could rewrite to bar.php, which captures the query string and request headers that Google would have sent to its servers (of primary importance is the query string and the user agent string and the IP address); , and then adds whatever data it needs, then takes the resulting query string and makes a cURL request to the Google Analytics version of that URL, with spoofed headers for browser, etc.
