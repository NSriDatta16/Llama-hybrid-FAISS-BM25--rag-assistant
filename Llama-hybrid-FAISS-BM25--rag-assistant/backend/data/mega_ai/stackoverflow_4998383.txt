[site]: stackoverflow
[post_id]: 4998383
[parent_id]: 4998155
[tags]: 
The warning is correct. Consider the following: int X; int Y; void SomeMethod() { SomeOtherMethod(this.X); } void SomeOtherMethod(int x) { x += this.Y; } Here the code modifies formal parameter x, and then never uses the modified x. This does not modify "this.X" You've done the same thing with the delegate. You modify the formal parameter and then never use the result; the original "OnPaint" is unchanged, just as "X" is unchanged in my example. Remember, just because a delegate is a reference type does not mean that you're passing around a reference to a variable when you pass around an instance . You're passing a reference to an instance, not a reference to the storage location of that instance.
