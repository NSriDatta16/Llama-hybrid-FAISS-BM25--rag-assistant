[site]: stackoverflow
[post_id]: 4401702
[parent_id]: 
[tags]: 
Scala XML.loadString vs literal expression

I have been experimenting with Scala and XML and I found a strange difference in behavior between a XML tag created with XML.load (or loadString) and writing it as a literal. Here is the code : import scala.xml._ // creating a classical link HTML tag val in_xml = // The same as a String val in_str = """ """ // Convert the String into XML val from_str = XML.loadString(in_str) println("in_xml : " + in_xml) println("from_str: "+ from_str) println("val_xml == from_str: "+ (in_xml == from_str)) println("in_xml.getClass() == from_str.getClass(): " + (in_xml.getClass() == from_str.getClass())) And here, the output : in_xml : from_str: val_xml == from_str: false in_xml.getClass() == from_str.getClass(): true The types are the same. But there is not equality. The order of the attributes changes. It is never the same as the original one. The attributes of the litteral are alphabetically sorted (only hazard ?). This would not be a problem if both solutions did not behave differently when I try to transform them. I picked up some intresting Code from Daniel C. Sobral at How to change attribute on Scala XML Element and wrote my own rule in order to remove the first slash of the "href" attribute. The RuleTransformer works well with the in_xml, but has no effect on from_str ! Unfortunately, most of my programs have to read there XML via XML.load(...). So, I'm stuck. Does someone know about this topic ? Best regards, Henri
