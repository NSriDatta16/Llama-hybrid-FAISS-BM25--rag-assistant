[site]: crossvalidated
[post_id]: 623975
[parent_id]: 623794
[tags]: 
A standard solution is to show a curve for each possible category and omit the scatterplot. Here is an automotive example using Stata showing the average probability of each type of repair record as a function of mileage: This shows the average predicted probability for each repair rating keeping foreign origin and length at the observed values and varying mpg. The average is taken over the estimation sample. For each value of mpg, the lines add up to one. Admittedly, this is a bit of Frankenstein calculation, but the model with just mpg was not very interesting. In a model with a single covariate, I would feel better about doing this. I suspect your graph comes from combining the highest probability sections of each curve. Here that would be Average until the first dashed line, Good in between the dashed lines, and Excellent after the second one. This gives you the kinks but can obscure what is happening. If you are doing something more complicated with the cutpoints, please add the details in the question. For example, had I plotted the confidence intervals or done a formal hypothesis test, the Average and Fair at mpg of 13 are not statistically distinguishable, even if Average curve is a tad higher. So why plot only Average around 13? Moreover, the curves have different trends: Poor and Fair are declining, while Excellent is increasing with mpg. In short, I would show all categories whenever legible, ideally with confidence intervals or hypothesis tests. You can also combine some probabilities. Here I would be tempted to combine Poor and Fair into Poor or Fair after fitting the model since they are both relatively low-sample, adjacent on the scale and behave similarly. This is not the same as collapsing to 4 categories from 5 before fitting the model. You can also leave out, emphasize, or combine based on other considerations of what is important for your analysis. This can help avoid a spaghetti mess, especially if you elect to show confidence intervals. @AdamO suggested stacking the probabilities to show the composition, which produces a graph something like this: I find these slightly easier at first glance, but comparing the magnitude of the intermediate groups requires doing arithmetic. This format also makes it impossible to add the confidence intervals. They also make my eyes hurt. Personally, I am not a fan, but your audience and goals may be different. The virtue of the stacking approach is that it emphasizes that the probabilities add to one. I might also consider playing with shades of a single color instead of the 31 Flavors aesthetic I have going on. Stata Code webuse fullauto, clear /* get clean value labels for legend */ levelsof rep77, local(levels) foreach l of local levels { local legendlab `"`legendlab' `l' "`: label (rep77) `l''""' } ologit rep77 i.foreign length mpg, nolog margins, at(mpg=(13(1)40) (asobserved) foreign length) saving("~/Desktop/ologit_phats.dta", replace) marginsplot, noci recast(line) legend(order(`legendlab') /// size(medsmall)) xlab(#20) xline(22.4 32.8) /// title("Predicted Probability of Each Type of Auto Repair Record Given MPG") name(g1, replace) use "~/Desktop/ologit_phats.dta", clear decode _predict , gen(cat) replace cat = substr(cat,-3,1) graph bar (asis) _margin, over(cat) over(_at3, label(labsize(small))) asyvars stack legend(order(`legendlab')) ylab(#10) ytitle("Probability") /// bar(1, color(tt_blue)) bar(2, color(tt_yellow)) bar(3, color(tt_green)) bar(4, color(tt_purple)) bar(5, color(tt_red)) intensity(*.8) name(g2, replace) I also can't resist adding this meme :
