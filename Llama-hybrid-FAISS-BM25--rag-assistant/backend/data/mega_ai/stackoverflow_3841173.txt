[site]: stackoverflow
[post_id]: 3841173
[parent_id]: 3841117
[tags]: 
None of your PHP functionality is AS elegantly implementable in C#, but except for the third they're all possible. 1: var b = new SomeClass(); var a = "Foo"; b.GetType().GetMethod(a).Invoke(b, /*object[] of parameters*/); 2: var a = new SomeClass(); foreach(MethodInfo mi in a.GetType.GetMethods()) { /*do something with method using mi*/ } You can implement an extension method ForEach() in 3.5 (may be available in 4.0's Linq library) to turn this into a method chain; the code in the curly braces would become a lambda. AFAIK, #3 is not possible in any built-in fashion in C#. You would work around it by trying to call the method reflectively in a try block, catching any TargetExceptions that are thrown when the call fails, and implementing your default behavior in the catch.
