[site]: stackoverflow
[post_id]: 1359095
[parent_id]: 
[tags]: 
Optional Database Entities

ORIGINAL (see UPDATED QUESTION below) I am designing a new laboratory database that tests a wide variety of tests on a wide variety of sample types. The following list is my current candidate for the list of main entities to best model the laboratory work. For each entity, a 1-to-many relationship exists from that entity to the entity below. In other words, every entity (except REQ) has at least columns for entity _id and parent _id. Main Entities: REQ: Request (a form) SAM: Sample (the material) TST: Test (requested procedures) SUB: ** Sub-Test (part of standard test) TRI: ** Trial (single instance: usually for mean,range, and stddev) MEA: Measurement (a measured number) ** Not all tests have subtests, and not all tests have trials. Sub-tests are a set of tests grouped together by a single name for easy referencing. For example, a lot acceptance test (LAT) for a particular product is defined as the following tests: viscosity, %-nitrogen, pH, and density. A trial is a single experiment performed multiple times for product assurance. For example, fifty bullets might be shot, and each shot is a trial. The accuracy of each bullet might be required to fall within a certain range, and the average accuracy of all fifty bullets might be required to be in a tighter range. Question: How should I model cases when sub-tests and/or trials are not needed? Option 1: Use a "blank" sub-test (or trial) if not needed. Option 2: Consider sub-tests and trials to be tests (and have a test_id as a parent), so that measurements always have a test as a parent. Option 3: Optional parents for measurement (trial, sub-test, or test) and trials (sub-test or test). Option x: Any other option worth considering. FYI: If required to answer the question, I will be using Oracle. UPDATED QUESTION In general, my schema is a heirarchy of entities where each entity (except top) must have ONE parent and (except bottom) must have at least one child. What is the best way to handle cases where an internal entity is unnecessary in certain situation, or what is the benefit/drawback to using a particular option? Option 1 (Dummy): Use a "dummy" entry to indicate entity does not apply in this case. Option 2 (Rollup): Roll-up optional entities into next higher parent entity. Option 3 (Pick-a-Parent): Entity (C) below optional entity (B) with required entity (A) must have ONE parent but the parent can be either the optional entity (B) or the next higher one (A). Option x: Any other option worth considering.
