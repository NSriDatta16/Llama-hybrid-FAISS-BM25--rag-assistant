[site]: stackoverflow
[post_id]: 4692700
[parent_id]: 4692485
[tags]: 
Are you looking at memory usage in Task Manager? This isn't an accurate way to profile your app: there will be a lot of irrelevant data bundled into that figure. For a managed app, I'd expect to see an increase due to having the runtime loaded at all. Furthermore, the .NET garbage collector isn't aggressive about reclaiming memory: it tries to delay collections until it's about to run out of memory. A garbage-collected app tends to allocate memory better than an unmanaged one. Unmanaged memory is liable to fragmentation: certain patterns of allocation leave holes throughout memory, and although there's enough total free memory for a new allocation, the new allocation can be bigger than the largest hole. The garbage collector avoids fragmentation by compacting memory each time it performs an allocation: it moves objects next to each other in memory to leave a large hole at the end. Subsequent allocations can be quick because of this: the managed memory allocator doesn't need to look through a list of holes, but can go straight to the end of the heap. [1] Don't worry about memory usage unless you're allocating a lot of memory. [1] This doesn't apply to the heap used for large objects (bigger than about 85KB). The large object heap works like a regular malloc / free heap.
