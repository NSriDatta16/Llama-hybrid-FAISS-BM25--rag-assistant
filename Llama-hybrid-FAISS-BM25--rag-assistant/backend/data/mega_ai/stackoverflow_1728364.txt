[site]: stackoverflow
[post_id]: 1728364
[parent_id]: 1727508
[tags]: 
The Kernel binding is a special object holding the context of a method call including all instance variables. What rakismet(&block) method does, is to temporary assign the current binding (the ActionController instance) to a class variable so it can be accessible by any rakismet method calls and execute the content of the block. The following code fragment unless Rakismet::Base.rakismet_binding.nil? { :referrer => 'request.referer', :user_ip => 'request.remote_ip', :user_agent => 'request.user_agent' }.each_pair do |k,v| data[k] = eval(v, Rakismet::Base.rakismet_binding) || '' end end checks whether a binding is available and if so, it tries to automatically collect some information from the current binding such as the ActionController#request.referer, the ActionController#request.remote_ip and so on. In a few words, this is a workaround to collect some variables from your current ActionController request that otherwise won't be available to Rakismet.
