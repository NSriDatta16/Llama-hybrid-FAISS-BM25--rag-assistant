[site]: stackoverflow
[post_id]: 3241670
[parent_id]: 3241615
[tags]: 
Don't munge your data. Store three separate fields: last name, first name, paternal initials. Then catenate the output: select concat( last_name, ' ', paternal_initials, ' ', first_name) as displayed_name from table order by last_name, paternal_initials, first_name; Update: I want to make it easier for the one adding the info and use one input field. â€“ Norbert But people don't think that way: last name, parental initials, first name. They'll tend to think of two separate entities: a student, with a name, and a student's father's name. If your users are in a culture where surnames come last, you could have a field Student's Name , and field Father's Name , and assume that the last word in each is the last name. Of course this fails if surnames are followed by suffixes like "Jr", "Senior", or "3rd", and for Spanish speaking countries which follow the surname with the mother's surname. Safest of course is separate, unambiguous fields. The additional "cost" to the user of having to tab to another field may in fact be less than the cognitive "cost" of having to figure out how to use an ambiguous field.
