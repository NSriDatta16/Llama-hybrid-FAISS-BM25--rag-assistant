[site]: stackoverflow
[post_id]: 4264882
[parent_id]: 3007759
[tags]: 
Create New JUnit as usual but use another name for the class say JavaClassTest2 then copy paste the generated method. Off Topic: I prefer "one is to one" mapping, unless I find a better approach with using one method per scenario. I want to avoid so many test scenarios identified by test method names. What I do is follow this pattern: List possible test scenarios based on the javadoc and expectations as test error message. This serves as scenario index so I can go back easily to study which scenario I may have missed. Implement the test for each scenario by paragraph following the indexing of step1 for variable names. @Test public void testRemoveHtmlTags() { String[] test = { "0. Null argument test failed.", "1. Case sensitive test failed.", "2. Case insensitive test failed." }; try { StringUtils.removeHtmlTags(null); fail(test[0]); } catch (IllegalArgumentException iae) {} String input1 = "The quick Brown Fox Jumps&nbsp;Over The Lazy Dog. &gt;&lt;"; String output1 = StringUtils.removeHtmlTags(input1); assertEquals(test[1], "The quick Brown Fox Jumps Over The Lazy Dog. > Fox Jumps&nbsp;Over The Lazy Dog. &gt;&lt;"; String output2 = StringUtils.removeHtmlTags(input2); assertEquals(test[2], "The quick Brown Fox Jumps Over The Lazy Dog. > }
