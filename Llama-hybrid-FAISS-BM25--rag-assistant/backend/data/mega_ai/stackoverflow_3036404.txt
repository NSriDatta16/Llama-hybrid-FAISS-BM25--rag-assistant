[site]: stackoverflow
[post_id]: 3036404
[parent_id]: 337344
[tags]: 
I am in the same boat, I am loving couchdb at the moment, and I think that the whole functional style is great. But when exactly do we start to use them in ernest for applications. I mean, yes we can all start to develop applications extremely quickly, cruft free with all those nasty hang-ups about normal form being left in the wayside and not using schemas. But, to coin a phrase "we are standing on the shoulders of giants". There is a good reason to use RDBMS and to normalise and to use schemas. My old oracle head is reeling thinking about data without form. My main wow factor on couchdb is the replication stuff and the versioning system working in tandem. I have been racking my brain for the last month trying to grok the storage mechanisms of couchdb, apparently it uses B trees but doesn't store data based on normal form. Does this mean that it is really really smart and realises that bits of data are replicated so lets just make a pointer to this B tree entry? So far I am thinking of xml documents, config files, resource files streamed to base64 strings. But would I use couchdb for structural data. I don't know, any help greatly appreciated on this. Might be useful in storing RDF data or even free form text.
