[site]: stackoverflow
[post_id]: 2219351
[parent_id]: 
[tags]: 
Access Violation With Pointers? - C++

I've written a simple string tokenizing program using pointers for a recent school project. However, I'm having trouble with my StringTokenizer::Next() method, which, when called, is supposed to return a pointer to the first letter of the next word in the char array. I get no compile-time errors, but I get a runtime error which states: Unhandled exception at 0x012c240f in Project 5.exe: 0xC0000005: Access violation reading location 0x002b0000. The program currently tokenizes the char array, but then stops and this error pops up. I have a feeling it has to do with the NULL checking I'm doing in my Next() method. So how can I fix this? Also, if you notice anything I could do more efficiently or with better practice, please let me know. Thanks!! StringTokenizer.h: #pragma once class StringTokenizer { public: StringTokenizer(void); StringTokenizer(char* const, char); char* Next(void); ~StringTokenizer(void); private: char* pStart; char* pNextWord; char delim; }; StringTokenizer.cpp: #include "stringtokenizer.h" #include using namespace std; StringTokenizer::StringTokenizer(void) { pStart = NULL; pNextWord = NULL; delim = 'n'; } StringTokenizer::StringTokenizer(char* const pArray, char d) { pStart = pArray; delim = d; } char* StringTokenizer::Next(void) { pNextWord = pStart; if (pStart == NULL) { return NULL; } while (*pStart != delim) // access violation error here { pStart++; } if (pStart == NULL) { return NULL; } *pStart = '\0'; // sometimes the access violation error occurs here pStart++; return pNextWord; } StringTokenizer::~StringTokenizer(void) { delete pStart; delete pNextWord; } Main.cpp: // The PrintHeader function prints out my // student info in header form // Parameters - none // Pre-conditions - none // Post-conditions - none // Returns - void void PrintHeader(); int main ( ) { const int CHAR_ARRAY_CAPACITY = 128; const int CHAR_ARRAY_CAPCITY_MINUS_ONE = 127; // create a place to hold the user's input // and a char pointer to use with the next( ) function char words[CHAR_ARRAY_CAPACITY]; char* nextWord; PrintHeader(); cout EDIT: Okay, I've got the program working fine now, as long as the delimiter is a space. But if I pass it a `/' as a delim, it comes up with the access violation error again. Any ideas? Function that works with spaces: char* StringTokenizer::Next(void) { pNextWord = pStart; if (*pStart == '\0') { return NULL; } while (*pStart != delim) { pStart++; } if (*pStart = '\0') { return NULL; } *pStart = '\0'; pStart++; return pNextWord; }
