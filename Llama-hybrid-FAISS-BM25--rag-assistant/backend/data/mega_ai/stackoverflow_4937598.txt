[site]: stackoverflow
[post_id]: 4937598
[parent_id]: 
[tags]: 
How to set up RSL (Runtime Shared Library)

Stack ! I'm having a little trouble setting up a new project (an e-Learning) that I think will benefit a lot from RSL. My case is something like this: Main.fla - A Shell Scenes.fla - I'll explain this in a minute Navigation.fla - Some kind of GUI Lots Of Fla Files - The Lessons The Main will be the first movie to be instantiated, then, all that is necessary from here will be download . Every lesson will be put in a fla/swf apart from the " Architecture " (that is the Main, Scenes, Navigation and a whole bundle of classes called Engine ) and will be added at runtime inside the Scenes. The Engine is responsible for handling repetitive and necessary tasks, events, common methods, communication with server, among other things. The Navigation is responsible for handling user input, as the navigation (next/prev lesson and such), and then passes it to the Engine, that will manipulate the Scenes (and it's children). Well, I have some restrictions too: Every swf file that will be handed to our client need to have less than 80kb, which means I'm tied. I can't compile the whole thing as a package ready to delivery. As size counts, I need means to alleviate the load as much as possible. So, I searched a lot these days and found out RSL. I've created some tests to know better how to use this and, of course, got into a trap. I haven't been able to set up my Flash correct, haven't any success with the "Library Path" (under AS3 configuration), haven't been able to compile classes inside the SWC... Another thing is that I won't make the lessons, only the Architecture. Those lessons will be created by people that may not have any knowledge in AS3 (OOP or program logic) at all. And I'm not inclined to delivery the whole engine (source code) to anyone from outside that may mess with it, making the whole app (apps, in fact, we'll produce hundreds of e-learnings). I really think I need help in some things (the clock is ticking away): How to use RSL efficiently How to bundle classes inside the SWC How to package all that is imperative for the whole thing work in the SWC, and then, delivery only this SWC I know that this thread is a little bit long, and that I'm asking a lot of things, but I'm cracking my head against the keyboard for a week now, and haven't been able to manage the set up. Thank for your attention... NemoStein
