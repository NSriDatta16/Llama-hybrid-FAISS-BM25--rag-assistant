[site]: stackoverflow
[post_id]: 397624
[parent_id]: 378669
[tags]: 
After some years with VB6, our projects tended to be structured like this: All project source (project and source) organized under the source folder. \project\source \project\source\project1\ \project\source\project2\ ... All binaries (.dll and .exe) in one bin folder. \project\bin\ All .dll set as binary compatible with resulting file in the single bin diretory. After initial build to make the binarycomptible stable, every non breaking build would be done by using a simple command file build.cmd placed in the folder above the source folder, maybe like this: "c:\Program Files\Microsoft Visual Studio\VB98\VB6.EXE" /M .\source\project1\proj1.vbp "c:\Program Files\Microsoft Visual Studio\VB98\VB6.EXE" /M .\source\project2\proj2.vbp "c:\Program Files\Microsoft Visual Studio\VB98\VB6.EXE" /M .\source\project3\proj3.vbp del .\\bin\\*.exp del .\\bin\\*.lib The build order must be in the order of dependance. Whenever a breaking change occured, the dependant VB project must be refrenced to the new binary. Without breaking changes, the build.cmd usually did the job.
