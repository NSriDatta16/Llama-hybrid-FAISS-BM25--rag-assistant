[site]: crossvalidated
[post_id]: 613457
[parent_id]: 
[tags]: 
Spatial autocorrelation correction with glmmTMB

I am currently working on a dataset (count data) in which one observation corresponds to one day of monitoring at a site. The overall protocol is to monitor groups of sites along transects. Almost all transects (and by extension almost all sites) were monitored several times. Sometimes, several transects were monitored at on given date. I would like to be able to predict the abundance of the studied species according to multiple landscape and meteorological metrics. To do so, I tried to construct GLMMs (with a negative binomial distribution) using the glmmTMB function: Abundance ~ environmental variables + meteorological variables + Julian day (and its quadratic effect) + year (in factor) + (1 | transect / site) + (1 | date) However, my models suffer from spatial autocorrelation. I tested it with the testSpatialAutocorrelation function from the DHARMa package: groupLocations = aggregate(countData[, which(colnames(countData) %in% c("x","y"))] , list(countData $xy), mean) groupLocations$ xy $xy) res xy) all(unique(res2 $group) == groupLocations$ xy) testSpatialAutocorrelation(res2,x=groupLocations $x,y=groupLocations$ y) I would thus like to correct it, ideally using a covariance structure like those presented in this vignette : https://cran.r-project.org/web/packages/glmmTMB/vignettes/covstruct.html So I tried to add exp(pos + 0 | group) to my model with (1) countData$pos , (2) with group being a dummy variable, my sites IDs or my date IDs... Whatever the solution I choose, it doesn't seem to work (R is working indefinitely). I guess my problem might come from two main issues: the factI don't fully understand what the "group" metric sould be, the fact that I have several observations at the same location (but at different dates), For information, latitude (y) and longitude (x) are in Lambert 93 in my dataset but I can transfrom them in WGS84 if needed. * EDIT Here is an example of the type of data I use (but not the real ones, which are very heavy) and my code. Interestingly with this small dataset, exp(pos + 0 |group) seems to work whether I define group as a dummy variable or as my site IDs, but with different results. In both cases, the testSpatialAutocorrelation function still detect spatial autocorrelation. library(DHARMa) library(glmmTMB) rm(list=ls()) ####I. Data creation#### newData $site date $X Y $explanatoryVar_scaled explanatoryVar) myModel $site), mean) groupLocations$ site $site) res site) all(unique(res2 $group) == groupLocations$ site) testSpatialAutocorrelation(res2,x=groupLocations $X,y=groupLocations$ Y) ####III. Model with correction#### newData $pos X), scale(newData $Y)) # newData$ group $group site) myModelCorrection $site), mean) groupLocations$ site $site) res site) all(unique(res2 $group) == groupLocations$ site) testSpatialAutocorrelation(res2,x=groupLocations $X,y=groupLocations$ Y)
