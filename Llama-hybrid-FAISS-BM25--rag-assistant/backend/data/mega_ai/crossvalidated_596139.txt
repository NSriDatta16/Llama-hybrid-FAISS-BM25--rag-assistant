[site]: crossvalidated
[post_id]: 596139
[parent_id]: 595561
[tags]: 
Here are two approaches: 1) loess Since the edit indicates that we do not need any specific parametric form we can use a nonparametric loess fit. (Alternately a nonparametric gam fit, not shown, as in this answer could be tried.) Using the data in the Note at the end and using R code, we define a prediction function, pred, that accepts a loess fit lo and the x values and returns the corresponding y values. We then run it for each of the y columns plotting the result and the maximum. The rates are the average growth and decline rates before and after the maximum is reached. span $x, DF[[yi]], xlab = "", ylab = yi) fo maximum result[yi, "ymax"] $objective result[yi, "growth"] objective - pred(lo[[yi]], rngx[1])) / (opt $maximum - rngx[1]) result[yi, "decline"] objective - pred(lo[[yi]], rngx[2])) / (opt$maximum - rngx[2]) } par(opar) result giving: xAtMax ymax growth decline y1 51.26490 8.6533897 0.014244016 -0.002362361 y2 21.94926 0.3911388 0.001521732 -0.000803318 y3 46.50930 3.0538271 0.011206357 -0.006279221 (continued after chart) 2) Two regression lines We can use two regression lines and take the minimum of them as our curve fit. This follows my answer here . It performs linear regression fits on the first 10 points and separately on the last 10 points and then uses those fits as starting values for a nonlinear regression that takes the minimum of two lines fitting all the data at once. In this case we can solve for the intersection of the lines and read the growth and decline right off the slopes of the lines. result giving xAtMax ymax growth decline y1 41.81144 8.6327074 0.017346330 -0.0014532939 y2 21.89605 0.3917683 0.001544078 -0.0008119577 y3 32.38736 3.0602008 0.016732095 -0.0049408889 Note Lines
