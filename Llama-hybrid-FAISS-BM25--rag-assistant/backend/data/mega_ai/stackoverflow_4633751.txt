[site]: stackoverflow
[post_id]: 4633751
[parent_id]: 4633650
[tags]: 
SQLite returns an error like "no such column: foo" if the table doesn't contain the column: select foo from yourTable limit 1 Also you can get the create-table statement: select sql from sqlite_master where tbl_name = 'YourTableName' and then parse the result, looking for the column-name. I don't know of an elegant way to query the list of columns for a specified table, though one may exist. Also if you attempt to do this: alter table YourTable add column foo {column-def whatever it is} you get an error from SQLite if the column already exists. You could trap that error too. Finally you could do this: select sql from sqlite_master where tbl_name = 'YOURTABLE' and sql like '%"foo" CHAR%'; -- or whatever type and if the specified table contains the column which is surrounded by double-quotes in the query, and with the type you have specified, you will get a result, otherwise an empty set. Specifying the datatype ensures that your LIKE substring match occurs on a column-name.
