[site]: stackoverflow
[post_id]: 2076429
[parent_id]: 2076146
[tags]: 
Some years ago I discovered what happens if I made my functions short : I could understand them. My brain is small, and long functions don't fit. Classes get complicated (lots of functions). But Extract Class produced small, cohesive, single-purpose classes. Again, small brain, so small classes required. The number of variables in a function (or class) is small. Remembering which is which from declaration time to use time is easy, because the distance is short . The number of scopes in my functions is small, so I don't have to figure out which variables go where. With all of that in place, how I name my variables doesn't matter much . The names don't have to make up for code that is otherwise hard to understand. Since the number of variables in a scope is small, and the purpose obvious, I rarely need to put any effort in to choosing a descriptive name. Since I don't want to strain my small brain any more than I have to, I never abbreviate . My default name for a variable is the name of the type. E.g. class Foo goes in variable foo . In my code, if it's ever something different, you know something special is happening, and you should pay attention. In the old days, my no-abbreviation habit would have produce unwieldy code, but since my methods and classes are small, the code doesn't suffer.
