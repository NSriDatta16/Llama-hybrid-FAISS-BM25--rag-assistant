[site]: stackoverflow
[post_id]: 1729904
[parent_id]: 
[tags]: 
How to debug driver load error?

I've made a driver for Windows, compiled it and tried to start it via SC manager, but I get the system error from the SC manager API: ERROR_PROC_NOT_FOUND The specified procedure could not be found. Is there a way to get more information about why exactly the driver fails to start? WinDbg or something? If I comment out all code in my DriverEntry routine, the driver starts. The only thing I'm calling is a procedure in another source module (in my own project, though). I can comment out all external dependencies and I still get the same error. Edit: I've also tried different DDKs, i.e. 2003 DDK und Vista WDK (but not Win7 WDK) Edit2: Here is my driver sour code file driver.cpp: #ifdef __cplusplus extern "C" { #endif #include #include #ifdef __cplusplus }; // extern "C" #endif #include "../distorm/src/distorm.h" void DriverUnload(IN PDRIVER_OBJECT DriverObject) { } #define MAX_INSTRUCTIONS 20 #ifdef __cplusplus extern "C" { #endif NTSTATUS DriverEntry(IN PDRIVER_OBJECT DriverObject, IN PUNICODE_STRING RegistryPath) { UNICODE_STRING pFcnName; // Holds the result of the decoding. _DecodeResult res; // Decoded instruction information. _DecodedInst decodedInstructions[MAX_INSTRUCTIONS]; // next is used for instruction's offset synchronization. // decodedInstructionsCount holds the count of filled instructions' array by the decoder. unsigned int decodedInstructionsCount = 0, i, next; // Default decoding mode is 32 bits, could be set by command line. _DecodeType dt = Decode32Bits; // Default offset for buffer is 0, could be set in command line. _OffsetType offset = 0; char* errch = NULL; // Buffer to disassemble. char *buf; int len = 100; // Register unload routine DriverObject->DriverUnload = DriverUnload; DbgPrint("diStorm Loaded!\n"); // Get address of KeBugCheck RtlInitUnicodeString(&pFcnName, L"KeBugCheck"); buf = (char *)MmGetSystemRoutineAddress(&pFcnName); offset = (unsigned) (_OffsetType)buf; DbgPrint("Resolving KeBugCheck @ 0x%08x\n", buf); // Decode the buffer at given offset (virtual address). while (1) { res = distorm_decode(offset, (const unsigned char*)buf, len, dt, decodedInstructions, MAX_INSTRUCTIONS, &decodedInstructionsCount); if (res == DECRES_INPUTERR) { DbgPrint(("NULL Buffer?!\n")); break; } for (i = 0; i My directory structure is like this: base_dir\driver\driver.cpp \distorm\src\all_the_c_files \distorm\distorm.h \distorm\config.h My SOURCES file: # $Id$ TARGETNAME=driver TARGETPATH=obj TARGETTYPE=DRIVER # Additional defines for the C/C++ preprocessor C_DEFINES=$(C_DEFINES) -DSUPPORT_64BIT_OFFSET SOURCES=driver.cpp \ distorm_dummy.c \ drvversion.rc INCLUDES=..\distorm\src; TARGETLIBS=$(DDK_LIB_PATH)\ntdll.lib \ $(DDK_LIB_PATH)\ntstrsafe.lib You can download diStorm from here: http://ragestorm.net/distorm/dl.php?id=8 distorm_dummy is the same as the dummy.c from the diStorm lib.
