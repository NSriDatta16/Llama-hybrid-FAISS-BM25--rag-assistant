[site]: stackoverflow
[post_id]: 2227665
[parent_id]: 2227395
[tags]: 
The code you've shown should work - the HttpSession is shared between the controllers, and you're using the same attribute name. Thus something else is going wrong that you're not showing us. However, regardless of whether or not it works, Spring provides a more elegant approach to keeping your model objects in the session, using the @SessionAttribute annotation (see docs ). For example (I haven't tested this, but it gives you the idea): @Controller @RequestMapping("/welcome.htm") @SessionAttributes({"user"}) public class WelcomeController { @RequestMapping(method = RequestMethod.POST) public String processSubmit(ModelMap modelMap){ User user = loginService.loginUser(loginCredentials); modelMap.addtAttribute(user); return "loginSuccess"; } } and then @Controller @SessionAttributes({"user"}) public class InspectionTypeController { @RequestMapping(value="/addInspectionType.htm", method = RequestMethod.POST ) public void addInspectionType(InspectionType inspectionType, @ModelAttribute User user) { System.out.println("User: "+ user.getUserDetails().getFirstName); } } However, if your original code isn't working, then this won't work either, since something else is wrong with your session.
