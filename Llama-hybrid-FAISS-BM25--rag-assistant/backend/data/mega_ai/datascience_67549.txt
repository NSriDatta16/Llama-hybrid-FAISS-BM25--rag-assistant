[site]: datascience
[post_id]: 67549
[parent_id]: 
[tags]: 
Validation Loss is not decreasing - Regression model

I'm trying to train a regression model with 6 input features. No. of tuples - 7287. Train set - 5465 Test set - 1822 I've tried changing no. of hidden layers and hidden neurons, early stopping, shuffling the data, changing learning and decay rates and my inputs are standardized (Python Standard Scaler). Validation loss doesn't decrease. NN_model = Sequential() NN_model.add(Dense(128, kernel_initializer='normal',input_dim = x_train.shape[1], activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(128,kernel_initializer='normal', activation='relu')) NN_model.add(Dense(1, kernel_initializer='normal',activation='linear')) #adam=optimizers.Adam(lr=0.01,decay=0.0001) NN_model.compile(loss='mse', optimizer='adam', metrics ['mean_absolute_error','mse']) es = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=200) NN_model.summary() history=NN_model.fit(x_train,y_train,epochs=1000,batch_size=64,validation_data=[x_test,y_test],callbacks=[es]) Loss graph looks like: Mean square error is very high and r2 score is 0.5276 for the train set and 0.3383 for the test set. I've tried other machine learning models like Gradient Boosting Regressor, Random forest regressor, decision tree regressor but they all have high mean square error. I'm new to keras and deep learning. How do I solve the issue? Is this amount of training data enough for the neural network? I can't get more data.
