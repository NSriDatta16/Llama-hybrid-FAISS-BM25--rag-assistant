[site]: stackoverflow
[post_id]: 413175
[parent_id]: 412314
[tags]: 
First, ASDF has nothing to do with installing libraries. It is simply a tool to compile and load a set of files in an order defined by dependencies between them. ASDF-INSTALL installs things, and it uses ASDF to determine dependencies (I think), but there are other mechanism for installing, like clbuild , extracting and symlinking by hand, or recent development Mudballs , which replaces ASDF as well. Special variable asdf:*central-registry* holds a list of directories which are searched for asdf systems. It usually contains a patch to a directory with symlinks to actual system definition files, but this is not necessary, as it can just contain every directory with a system definition file. This variable will be most of the time populated by startup scripts with system/site library registry, but you can change it to whatever you like, including isolated local directory. Regarding the one before last paragraph, note that it is not particularly common to run many applications on the same CL runtime. Normally some default bare core is launched and then libraries and application is loaded and run, and then shut down when it finishes. EDIT: ASDF is just a library and its variables are like any other lisp variable. In the case you describe you likely want to suppress the system/user startup script, which is implementation specific (in CCL it apparently is -n or --no-init command line argument), an then manually load asdf.lisp, (setf asdf:*central-registry* (list #p"pathtoprojectcentralregistry")) . Or possibly create a function to recursively scan project directory and push all subdirectories with .asd files there.
