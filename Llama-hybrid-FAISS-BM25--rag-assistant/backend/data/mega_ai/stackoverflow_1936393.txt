[site]: stackoverflow
[post_id]: 1936393
[parent_id]: 1936339
[tags]: 
1. What could be causing the duplicates? Some pages were getting too many views, I was suspecting duplicates, so I started logging IPs and User agents. It turns out in about 10% of the cases, the IP triggers the counter for the same page 2-3 times in a few minutes. There's no way to know if the host requesting the page sits behind a NAT router - to you the request would have the same IP but in reality is a different host. A cookie or session would help you isolate on a per workstation basis, though I wonder when you would write the info to the database. 2. How do I write that in a mysql query, while keeping my "ON duplicate KEY" statement? I don't see the need for the COUNT = COUNT + 1 , because SQL has a COUNT function: SELECT page_id, COUNT(*) 'num_hits' FROM ZZZ_NETWORK WHERE page_id = ? GROUP BY page_id If you used the following structure for ZZZ_NETWORK : page_id, primary key ip_address, primary key timestamp, primary key ...you wouldn't have to be concerned with duplicate key handling, and it would allow you to know how many hits you got in a specific day, week, month/etc. Including the timestamp would ensure there could never be duplicates . After a month I'd have thousands of rows in my table if I use one row per page view. Drive space is dirt cheap, and having a timestamp so you can datamine would be invaluable for reporting. But you don't have to keep all the data either - you could archive it by dumping the data to file so you could retrieve it if necessary. I don't understand how it would ensure I would never get a duplicate. A timestamp includes both date (Dec 25/09) and time (07:00:00 AM). Some datetime data types get down to fractions of a second. This makes it close to impossible to have the same date & time for a given page_id with a given IP address - I can't click the refresh button fast enough, even if I wanted to. So records could never be duplicates, because the last of the three columns would have a different value every time (no pun intended).
