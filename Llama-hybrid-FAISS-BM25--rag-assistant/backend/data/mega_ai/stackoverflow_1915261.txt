[site]: stackoverflow
[post_id]: 1915261
[parent_id]: 1915157
[tags]: 
There's no one answer to this question. Just to give two examples, Linux tends to use separate processes quite a bit. The kernel developers appear to have put considerable effort into optimizing process switching. Threads were added on quite a bit later, and don't seem to have received nearly as much attention. As a result, under Linux separate processes have a fairly low cost, and using threads instead doesn't save a huge amount. Current implementations of Windows, by contrast, go back to Windows NT. Windows NT was based fairly closely on OS/2, which had threads since day one. Process switching does not seem to have ever been optimized to the same degree as under Linux. As you might expect from that background, under the Windows the difference between a process switch and a thread switch is much larger. Consequently, you gain considerably more by writing code in multiple threads instead of multiple processes.
