[site]: stackoverflow
[post_id]: 861708
[parent_id]: 859013
[tags]: 
The basic issue you face is something Michael Feathers refers to in Working Effectively with Legacy Code as the Legacy Code Dilemma, a.k.a. the Refactoring Dilemma: When we refactor, we should have tests. To put tests in place, we often have to refactor. As a way out of the dilemma, the book describes a set of dependency-breaking techniques. These are relatively safe ways to pry apart dependencies in order to isolate code and get it under unit test. The book's examples are in Java, C++, C, and C#. I don't know enough about vb.net to say how many of the techniques would apply. There is also some general discussion/encouragement here on the c2 wiki.
