[site]: crossvalidated
[post_id]: 491714
[parent_id]: 491703
[tags]: 
This sounds like the shortest path problem. If you have an object of type $A$ and you need to convert it to object of type $D$ , you are effectively asking if it is better to first convert it to $B$ or to $C$ as an intermediate step. So, just fill in the matrix of losses from each element to each, and then solve for the shortest path using any algorithm you like. Viterbi seems like a stochastic algorithm, but in your case the problem is quite deterministic, so something as simple as Dijkstra's would work fine. Just pay attention that your losses are multiplicative. If after every operation you are left with a remainder fraction $R$ , then the total remainder will be the multiplicative $$R_{tot} = R_{AB} * R_{BC} * R_{CD}$$ and your loss will be $$L = 1 - R_{tot} = 1 - R_{AB} * R_{BC} * R_{CD}$$ Normally shortest path algorithms work with additive losses, so we need to do some math here in order to convert our problem to additive losses. Note that minimizing loss is the same as maximizing $R_{tot}$ Maximizing $R_{tot}$ is the same as maximizing $\log R_{tot}$ or minimizing - $\log R_{tot}$ . We use logarithm because logarithm of a product is a sum of logarithms - super useful to convert multiplication to addition. Thus, let $\epsilon=-\log R$ . We want to minimize the following additive quantity $$\epsilon_{tot} = \epsilon_{AB} + \epsilon_{BC} + \epsilon_{CD}$$ So you will need to fill your shortest path matrix not directly with losses, but with their negative logarithms. For example, if $A$ to $B$ incurs 5% loss, then $R_{AB} = 0.95$ and $\epsilon_{AB} = -\log_e R_{AB} \approx 0.051$ . I have used natural logarithm, but the base is irrelevant as long as you are consistent
