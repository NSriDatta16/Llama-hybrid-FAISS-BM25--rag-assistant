[site]: stackoverflow
[post_id]: 4022125
[parent_id]: 
[tags]: 
Problem using distance transform with new OpenCV C++ interface / How to ensure that Mat is a binary mask?

I'm porting my code to use the new OpenCV C++ interface. I like the possibility to strictly type everything, so derive all my images and matrices from the template class: Mat_ var; Now I have problems using the distanceTransform function. My code does something like this: Mat_ imgGray; Mat_ imgBinary; Mat_ imgDistance; // ... fill imgGray with data ... threshold(imgGray, imgBinary, 0.25, 255, CV_THRESH_BINARY); distanceTransform(imgBinary, imgDistance, CV_DIST_L2, CV_DIST_MASK_PRECISE); distanceTransform fails. It gives the following error: Unsupported format or combination of formats (source image must be 8uC1 and the distance map must be 32fC1 (or 8uC1 in case of simple L1 distance transform)) in unknown function, file ........\src\cv\cvdistransform.cpp, line 730 I figured out that the problem is the source parameter. It doesn't pass the CV_IS_MASK_ARR(src) test. From what I understand, threshold calls create on imgBinary to allocate the memory. So I don't have the possibility to control the exact type (should be CV_8UC1) of the imgBinary matrix, do I? How can I make sure that imgBinary is a proper binary mask to make distanceTransform happy? Thanks for your help! Cheers, Robert
