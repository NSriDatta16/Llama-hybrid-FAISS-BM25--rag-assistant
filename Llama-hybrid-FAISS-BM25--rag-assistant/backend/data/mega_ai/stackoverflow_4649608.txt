[site]: stackoverflow
[post_id]: 4649608
[parent_id]: 2798376
[tags]: 
I know this thread is a little old (sorry), but it has taken me so long to crack this nut I had to share the solution with someone... You only seem to be able to obtain the line numbers with SAX which doesn't build a DOM. The DOM parser does not give the line numbers, and neither does it let you near the SAX parser it is using. My solution is to do an empty XSLT transformation using a SAX source and a DOM result, but even then someone has done their best to hide this. See the code below. I add the location information to each element as an attribute with my own namespace, so I can find elements using XPath and report where the data came from. Hope this helps: // The file to parse. String systemId = "myxml.xml"; /* * Create transformer SAX source that adds current element position to * the element as attributes. */ XMLReader xmlReader = XMLReaderFactory.createXMLReader(); LocationFilter locationFilter = new LocationFilter(xmlReader); InputSource inputSource = new InputSource(new FileReader(systemId)); // Do this so that XPath function document() can take relative URI. inputSource.setSystemId(systemId); SAXSource saxSource = new SAXSource(locationFilter, inputSource); /* * Perform an empty transformation from SAX source to DOM result. */ TransformerFactory transformerFactory = TransformerFactory.newInstance(); Transformer transformer = transformerFactory.newTransformer(); DOMResult domResult = new DOMResult(); transformer.transform(saxSource, domResult); Node root = domResult.getNode(); ... class LocationFilter extends XMLFilterImpl { LocationFilter(XMLReader xmlReader) { super(xmlReader); } private Locator locator = null; @Override public void setDocumentLocator(Locator locator) { super.setDocumentLocator(locator); this.locator = locator; } @Override public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException { // Add extra attribute to elements to hold location String location = locator.getSystemId() + ':' + locator.getLineNumber() + ':' + locator.getColumnNumber(); Attributes2Impl attrs = new Attributes2Impl(attributes); attrs.addAttribute("http://myNamespace", "location", "myns:location", "CDATA", location); super.startElement(uri, localName, qName, attrs); } }
