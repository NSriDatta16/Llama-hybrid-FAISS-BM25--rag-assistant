[site]: stackoverflow
[post_id]: 1601339
[parent_id]: 1597930
[tags]: 
First step is to separate concerns. I'd split off with a separate MySQL server and possibly a dedicated memcached box, depending on how high your load is there. Then I'd monitor memory and CPU usage on each box and see where you can optimize where possible. This can be done with spinning off new Media Temple boxes. I'd also suggest Slicehost for a cheaper, more developer-friendly alternative. Some more low-budget PHP deployment optimizations: Using a more efficient web server like nginx to handle static file serving and then reverse proxy app requests to a separate Apache instance Implement PHP with FastCGI on top of nginx using something like PHP-FPM, getting rid of Apache entirely. This may be a great alternative if your Apache needs don't extend far beyond mod_rewrite and simpler Apache modules. If you prefer a more high-level, do-it-yourself approach, you may want to check out Scalr ( code at Google Code ). It's worth watching the video on their web site. It facilities a scalable hosting environment using Amazon EC2. The technology is open source, so you can download it and implement it yourself on your own management server. (Your Media Temple box, perhaps?) Scalr has pre-built AMIs (EC2 appliances) available for some common use cases. web : Utilizes nginx and its many capabilities: software load balancing, static file serving, etc. You'd probably only have one of these, and it would probably implement some sort of connection to Amazon's EBS, or persistent storage solution, as mentioned by dcaunt. app : An application server with Apache and PHP. You'd probably have many of these, and they'd get created automatically if more load needed to be handled. This type of server would hold copies of your ZF app. db : A database server with MySQL. Again, you'd probably have many of these, and more slave instances would get created automatically if more load needed to be handled. memcached : A dedicated memcached server you can use to have centralized caching, session management, et cetera across all your app instances. The Scalr option will probably take some more configuration changes, but if you feel your scaling needs accelerating quickly it may be worth the time and effort.
