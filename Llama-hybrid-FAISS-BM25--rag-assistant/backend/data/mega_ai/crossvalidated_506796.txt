[site]: crossvalidated
[post_id]: 506796
[parent_id]: 
[tags]: 
It is always necessary to include a Flatten layer after a set of 2D convolutional layers for convolutional neural networks in Keras?

It is no clear for me when to use the flatten operation for building convnets. It is always necessary to include a flatten operation after a set of 2D convolutions (and pooling)? For example, let us suppose these two models for binary classification. They take as input a 2D numerical matrix of 2 rows and 15 columns and has as output a vector of two positions (positive and negative). Model 1: model = keras.models.Sequential([ keras.Input(shape=(2,15,1)), keras.layers.Conv2D(32, kernel_size=(2, 1), activation="relu"), keras.layers.Flatten(), keras.layers.Dense(100, activation="relu"), keras.layers.Dropout(0.2), keras.layers.Dense(100, activation="relu"), keras.layers.Dropout(0.2), keras.layers.Dense(2, activation="softmax") ]) Model 2: model = keras.models.Sequential([ keras.Input(shape=(2,15,1)), keras.layers.Conv2D(32, kernel_size=(2, 1), activation="relu"), keras.layers.Dense(100, activation="relu"), keras.layers.Dropout(0.2), keras.layers.Dense(100, activation="relu"), keras.layers.Dropout(0.2), keras.layers.Dense(2, activation="softmax") ]) What is the difference between both? Do they have the same capacity?
