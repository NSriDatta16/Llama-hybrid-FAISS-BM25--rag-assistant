[site]: crossvalidated
[post_id]: 318707
[parent_id]: 
[tags]: 
Regression Model Predictions with Pseudo-Random Results

Situation I'm performing an experiment in which I will use machine learning to build a model around how fast people generally (voluntarily) react to a set of stimuli. To performs this, I will be using a Machine Learning Engine such as Google TensorFlow to train a model. My factors (X) will be a set of various stimuli and my measurement (Y) will be how fast a person reacts in milliseconds. The dataset contains a good amount of instances in which the factors are very similar, but the reaction (Y) is different. This is, of course, due to the incredibly immense amount of factors that go into human perception, cognition, etc. Since these immeasurable factors are still important, I want to account for them by treating them as a random variable. In this way, I want my model's predictions to give me a pseudo-random output, based on the distribution of reaction times for a given set of factors. My Question How can I use the "noise" of my data model to introduce randomness of a predicted Y output? As an example, if I were to generate thousands of reaction times given the same factors, the times should vary, with a mean, standard devation, variance, etc that would be statistically insignificant from the human model (most likely a Gaussian distribution).
