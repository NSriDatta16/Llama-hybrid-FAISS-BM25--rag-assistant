[site]: stackoverflow
[post_id]: 5560469
[parent_id]: 5560295
[tags]: 
XSS is about more than just stealing cookies. That said, many sites and applications store a reference to the server side session in a cookie variable (such as a JSESSIONID in Java). If XSS is used to store this value, an attacker may be able to forge your session and take it over, pretending to be you. This is sometimes called Cross-site Request Forgery. Imagine if you didn't click the "log off" button in your online banking session, then the stolen cookie value allows the attacker to resume your session from his computer, transferring money out of your account. In some cases, they inject XSS to forward you to a site that appears to be the valid site, but the site itself is a forgery. Then, this site can phish for your personal details or credit card numbers, all the while you are thinking you're still on a legitimate site. Some XSS attacks may be just annoying, consuming massive resources, crashing your browser, or perhaps just popping up SPAM ads, etc. XSS could also be used to scrape other information from the current browser window, and transmit it to a location the attacker has access to. Imagine a data element that has an XSS injection, but on the same screen there is also your account number. Check out owasp.org for more info. Their top 10 is essential for any web developer. I tell my developers, if you've coded an application, you've probably coded some vulnerabilities. Knowledge is power here. Memorize and understand the OWASP top 10, and you'll be in better than average shape.
