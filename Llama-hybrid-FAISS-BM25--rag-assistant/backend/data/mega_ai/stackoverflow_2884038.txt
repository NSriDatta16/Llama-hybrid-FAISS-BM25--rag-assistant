[site]: stackoverflow
[post_id]: 2884038
[parent_id]: 2883368
[tags]: 
Ideally, your main core code could be represented by web services (platform agnostic services, can be accessed by Android, iPhone, blackberry, WinMo, etc) and you could only need to write the UIs for each different platform. We've been looking at Android due to its openness, which provides us to beta test without going to market initially. This also allows us to distribute to a closed set of users, i.e. a specific organization, without having to release to the general market. The biggest issue with Android that we've noticed is the fragmentation issue between different devices, OS versions, etc. However, if your application is purely accessing and displaying data from your web services, you're 90% free from most fragmentation issues. As for the development, Android is in a Java-esque language, which is already similar to C# syntactically.
