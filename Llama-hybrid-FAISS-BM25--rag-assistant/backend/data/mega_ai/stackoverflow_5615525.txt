[site]: stackoverflow
[post_id]: 5615525
[parent_id]: 5615383
[tags]: 
The so-called Manager class handshakes with a server on the Internet and needs to do a variety of book-keeping activities every time the user the user enters and leaves the app. This might be a valid design pattern on iOS -- I have no idea. It is not a valid design pattern on Android. You don't "leave the app" on Android any more than you "leave the app" in a Web app. "Leave" is determined mostly as "you didn't come back in a while" in both Android and Web apps. 2) Application class: onStart and onDestroy for every time the app is started or killed Note that the method is onTerminate() , not onDestroy() , and it actually never gets called. The Application object is created when the process is and lives until the process is terminated outright. Its just not entirely clear how I could start/stop a service in Android as the user starts/stops/resumes an app without regard to the specific activity they're on at the time. You might elect to use a service for doing the "handshaking" -- in fact, that's probably likely. However, there is nothing built in for "leave the app". I would strongly encourage you to simply get rid of the concept entirely. If not, you're welcome to rig up a service that is notified on each onPause() and onResume() , does the bookkeeping to see if there are any live activities, and if there hasn't been for X period of time, does your "leave the app" logic, then shuts down. You'd also trigger the "leave the app" logic in onDestroy() , if the service is shutting down at OS request vs. your own shutdown request. This is not 100% guaranteed to work -- users can force-stop your service and the OS can kill the process with impunity.
