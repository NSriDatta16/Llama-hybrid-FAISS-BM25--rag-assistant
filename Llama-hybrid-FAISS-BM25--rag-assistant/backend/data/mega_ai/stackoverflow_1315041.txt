[site]: stackoverflow
[post_id]: 1315041
[parent_id]: 
[tags]: 
How can I iterate through a string and also know the index (current position)?

Often when iterating through a string (or any enumerable object), we are not only interested in the current value, but also the position (index). To accomplish this by using string::iterator we have to maintain a separate index: string str ("Test string"); string::iterator it; int index = 0; for ( it = str.begin() ; it The style shown above does not seem superior to the 'c-style': string str ("Test string"); for ( int i = 0 ; i In Ruby, we can get both content and index in a elegant way: "hello".split("").each_with_index {|c, i| puts "#{i} , #{c}" } So, what is the best practice in C++ to iterate through an enumerable object and also keep track of the current index?
