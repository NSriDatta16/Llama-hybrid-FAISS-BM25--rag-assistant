[site]: stackoverflow
[post_id]: 3052988
[parent_id]: 
[tags]: 
What is an instance of a field called?

This might be an odd question, but it has actually caused me some headache. In Object oriented programming, there are accepted names for key concepts. In our model, we have classes with methods and fields . Now, going to the data world: An instance of a class is called an object . An instance of a field is called... what? A value? Isn't the term value a little broad for this? I have been offered "property" as well, but isn't property also part of the model and not the data? (This is not purely academic, I am actually coding these concepts.) Updated: Let me take an example. I have a class "Person" with a field "age". If I create 20 Person instances, each such instance is called an object. So far so good. But let's say I take Person "Igor", and set his age to 20. What is the storage location that contains the number 20 now called? Is it a field, or a value, or something else? Another update: A quote from Pavel Feldman in this related question describes in different words what I tried to describe above: "I'd say that in class-based OOP field belongs to class and does not have a value. It is so when you look at reflection in c# or java - class has fields, field has type, name, etc. And you can get value of the field from object. You declare field once, in class. You have many objects with same fields but different values."
