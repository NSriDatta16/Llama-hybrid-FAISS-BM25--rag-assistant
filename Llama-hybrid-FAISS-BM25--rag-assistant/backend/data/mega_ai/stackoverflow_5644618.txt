[site]: stackoverflow
[post_id]: 5644618
[parent_id]: 5644275
[tags]: 
This code seemed to do the trick. function a() { var b = null; if(window.XMLHttpRequest) { b = new XMLHttpRequest(); }else if(window.ActiveXObject) { b = new ActiveXObject("Microsoft.XMLHTTP"); } if(!b) { b = new ActiveXObject("msxml2.XMLHTTP"); } return b; } var b = a(); function c() { var u = "ajax3_php.php?w="+ parseInt(Math.random()*88888, 10); b.open("get", u, true); b.onreadystatechange = function () { if(b.readyState === 4) { if(b.status === 200) { if(b.responseText) { document.getElementById("divid").innerHTML = b.responseText; } } } }; b.send(); } c(); I don't have a silver bullet answer as to why the error was popping up, but the call to b.status was throwing an error when the readyState wasn't 4 . However, that particular error was one I ran into recently (but a different error type) when sending an empty string via innerHTML to an element in IE 8 (I suspected your responseText was empty, causing the error). I took the liberty of fixing that code for you (along with a few other touches). There are no errors in IE 7-8, Quirks or none. I hope this helps you. -Matt EDIT: I stumbled upon this MSDN post. It's curious to see that their example code uses nested if blocks just like I did, yet no explanation. I'll investigate further. Link: http://msdn.microsoft.com/en-us/library/dd576252%28v=vs.85%29.aspx
