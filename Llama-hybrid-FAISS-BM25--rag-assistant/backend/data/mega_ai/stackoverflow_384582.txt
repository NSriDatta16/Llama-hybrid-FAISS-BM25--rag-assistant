[site]: stackoverflow
[post_id]: 384582
[parent_id]: 384419
[tags]: 
It seems that the way you represent your list is inconsistent. For your example, I imagine it should be: (A ((B (C D)) (E (F)))) . This way, a node is consistently either a leaf or a list where the car is the leaf and the cadr is the children nodes. Because of this mistake, I am assuming this is not a homework. Here is a recursive solution. (defun by-levels (ts) (if (null ts) '() (append (mapcar #'(lambda (x) (if (listp x) (car x) x)) ts) (by-levels (mapcan #'(lambda (x) (if (listp x) (cadr x) '())) ts))))) by-levels takes a list of nodes and collects values of the top-level nodes, and recursively find the next children to use as the next nodes. Now, (defun leafs-of-tree-by-levels (tree) (by-levels (list tree))) (leafs-of-tree-by-levels '(a ((b (c d)) (e (f))))) ; (A B E C D F) I hope that makes sense.
