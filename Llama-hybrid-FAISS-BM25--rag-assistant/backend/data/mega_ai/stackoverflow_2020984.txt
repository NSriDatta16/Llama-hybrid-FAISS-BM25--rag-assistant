[site]: stackoverflow
[post_id]: 2020984
[parent_id]: 
[tags]: 
A problem with Relative Path Resolution when setting an Image Source

I have built a small WPF application that allows users to upload documents and then select one to display. The following is the code for the file copy. public static void MoveFile( string directory, string subdirectory) { var open = new OpenFileDialog {Multiselect = false, Filter = "AllFiles|*.*"}; var newLocation = CreateNewDirectory( directory, subdirectory, open.FileName); if ((bool) open.ShowDialog()) CopyFile(open.FileName, newLocation); else "You must select a file to upload".Show(); } private static void CopyFile( string oldPath, string newPath) { if(!File.Exists(newPath)) File.Copy(oldPath, newPath); else string.Format("The file {0} already exists in the current directory.", Path.GetFileName(newPath)).Show(); } The file is copied without incident. However, when the user tries to select a file they just copied to display, A file not found exception. After debugging, I've found that the UriSource for the dynamic image is resolving the relative path 'Files{selected file}' to the directory that was just browsed by the file select in the above code instead of the Application directory as it seems like it should. This problem only occurs when a newly copied file is selected. If you restart the application and select the new file it works fine. Here's the code that dynamically sets the Image source: //Cover = XAML Image Cover.Source(string.Format(@"Files\{0}\{1}", item.ItemID, item.CoverImage), "carton.ico"); ... public static void Source( this Image image, string filePath, string alternateFilePath) { try {image.Source = GetSource(filePath);} catch(Exception) {image.Source = GetSource(alternateFilePath);} } private static BitmapImage GetSource(string filePath) { var source = new BitmapImage(); source.BeginInit(); source.UriSource = new Uri( filePath, UriKind.Relative); //Without this option, the image never finishes loading if you change the source dynamically. source.CacheOption = BitmapCacheOption.OnLoad; source.EndInit(); return source; } I'm stumped. Any thought's would be appreciated.
