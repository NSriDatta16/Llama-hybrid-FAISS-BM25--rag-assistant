[site]: stackoverflow
[post_id]: 3007175
[parent_id]: 2974712
[tags]: 
After some research, the quickest thing I found turns out to be just using linq to sql with a GridView. I was looking for a solution that can easily integrate into existing pages. Without the benefit of auto-scaffolding and generated pages, Dynamic Data kinda misses the mark. 99% of what I wanted was to avoid getting into writing SQL statements and handling the UpdateCommands manually. Here are the steps I wrote up for my own personal reference. It relies heavily on the designers, but for what I need, this is perfect: New project (or existing project) Add LinqToSqlClass file to project Add Relevant tables from datasource to design surface (use server explorer) Build project (so that datacontext class will get generated) Go to aspx page Drag a linqdatasource object from toolbox. Configure datasource (make sure to enable update if necessary) Drag a gridview from toolbox Set datasource to linqdatasource object you just created Customize columns if necessary (ie, set readonly property on non-editable columns, hide non-relevant columns.) As far as dynamic data is concerned, the documentation is currently lacking. There's a LOT of stuff that references earlier versions that doesn't work quite the same now. I watched the videos here and followed the steps here , but ultimately ran into problems when I tried hiding non-editable columns. The update statement generated by linq didn't reference the primary key and I got the Row not found or changed error. I gave up and used the solution above. Hope this helps someone else in the future!
