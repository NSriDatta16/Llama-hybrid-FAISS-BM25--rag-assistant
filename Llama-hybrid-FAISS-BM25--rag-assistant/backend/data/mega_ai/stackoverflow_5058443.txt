[site]: stackoverflow
[post_id]: 5058443
[parent_id]: 
[tags]: 
C++: how to compare several vectors, then make a new sorted vector that contains ALL elements of all vectors

Update : I have a couple of what are probably silly questions about commenter 6502's answer (below). If anyone could help, I'd really appreciate it. 1) I understand that data 1 and data 2 are the maps, but I don't understand what allkeys is for. Can anyone explain? 2) I know that: data1[vector1[i].name] = vector1[i].value; means assign a value to the map of interest where the correct label is... But I don't understand this: vector1[i].name and vector1[i].value . Are't "name" and "value" two separate vectors of labels and values? So what are they doing on vector1? Shouldn't this read, name[i] and value[i] instead? Thanks everyone. I have written code for performing a calculation. The code uses data from elsewhere. The calculation code is fine, but I'm having trouble manipulating the data. The data exist as sets of vectors. Each set has one vector of labels (names, these are strings) and a corresponding set of values (doubles or ints). The problem is that I need each data set to have the same name/label in the same column as the other data sets. This problem is not the same as sorting the data in the vectors (which I know how to do) because sometimes names/labels can be missing from some vectors. For example: Data set 1: vector names1 = Jim, Tom, Mary vector values1 = 1 2 3 Data set 2: vector names2 = Tom, Mary, Joan vector values2 = 2 3 4 I want (pseudo-code) ONE name vector that has all possible names. I also want each corresponding numbers vector to be sorted the SAME way: vector namesUniversal = Jim, Joan, Mary, Tom vector valuesUniversal1 = 1 0 3 2 vector valuesUniversal2 = 0 4 3 2 What I want to do is come up with a universal vector that contains ALL the labels/names sorted alphabetically and all the corresponding numerical data sorted too. Can anyone tell me whether there is an elegant way to do this in c++? I guess I could compare each element of each name vector with each element of each other name vector, but this seems quite clunky and I would not know how to get the data into the right columns in the corresponding data vectors. Thanks for any advice.
