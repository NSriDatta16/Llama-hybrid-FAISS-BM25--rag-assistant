[site]: stackoverflow
[post_id]: 5636233
[parent_id]: 5540995
[tags]: 
After a few days coding, i was able to do it exactly as i wanted, i'm going to share my solution: I started with an example i found here in SO , you can read the post here: Symfony sfDoctrineGuardPlugin custom login query it gave me an idea and i executed it, so, i create \lib\Util.class.php, with to functions, one for query backend users and another for frontend users static public function retrieveCustomer($username, $isActive = true) { $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('u') ->leftJoin('u.Groups g') ->leftJoin('g.Permissions p') ->where('u.username = ?', $username) ->addWhere('u.is_active = ?', $isActive) ->addWhere('g.name = ?', 'customers'); return $query->fetchOne(); } static public function retrieveAdmin($username, $isActive = true) { $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('u') ->leftJoin('u.Groups g') ->leftJoin('g.Permissions p') ->where('u.username = ?', $username) ->addWhere('u.is_active = ?', $isActive) ->whereIn('g.name', array('administrators','operators')); return $query->fetchOne(); } Now, in the app.yml of each app, i override the default query of the plugin #Example for apps/backend/config/app.yml all: sf_guard_plugin: retrieve_by_username_callable: Util::retrieveAdmin untill now all was good, but i started to face another problem, so i open a new thread: Overwriting isAuthenticated() in symfony and there i got the final step for my solution, that was setting differents session name for each app, so, in the factories.yml of each app: #apps\backend\config\factories.yml storage: class: sfSessionStorage param: session_name: backend and now all is set, frontend users can not log in in backend app and vice versa. feel free to comment
