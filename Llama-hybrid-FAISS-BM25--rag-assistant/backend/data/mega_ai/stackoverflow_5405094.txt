[site]: stackoverflow
[post_id]: 5405094
[parent_id]: 5405034
[tags]: 
maybe this helps you. its from david brackeen's bock developing games in java and calculates average granularity to fake a more fluent framerate: link public class TimeSmoothie { /** How often to recalc the frame rate */ protected static final long FRAME_RATE_RECALC_PERIOD = 500; /** Don't allow the elapsed time between frames to be more than 100 ms */ protected static final long MAX_ELAPSED_TIME = 100; /** Take the average of the last few samples during the last 100ms */ protected static final long AVERAGE_PERIOD = 100; protected static final int NUM_SAMPLES_BITS = 6; // 64 samples protected static final int NUM_SAMPLES = 1 =0; i--) { sum+=samples[(firstIndex + i) & NUM_SAMPLES_MASK]; // if the average period is already reached, go ahead and return // the average. if (sum >= AVERAGE_PERIOD) { Math.round((double)sum / (numSamples-i)); } } return Math.round((double)sum / numSamples); } /** Gets the frame rate (number of calls to getTime() or addSample() in real time). The frame rate is recalculated every 500ms. */ public float getFrameRate() { long currTime = System.currentTimeMillis(); // calculate the frame rate every 500 milliseconds if (currTime > startTime + FRAME_RATE_RECALC_PERIOD) { frameRate = (float)numFrames * 1000 / (currTime - startTime); startTime = currTime; numFrames = 0; } return frameRate; } }
