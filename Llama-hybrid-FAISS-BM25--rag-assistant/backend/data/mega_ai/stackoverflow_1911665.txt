[site]: stackoverflow
[post_id]: 1911665
[parent_id]: 1911646
[tags]: 
The only way to remove a subset of items from an IEnumerable is to loop through the superset and for each item in the superset loop through the subset, removing that item from the superset if it is found in the subset. This will give you O(nÂ²) on average. Now if there is additional information about these collections (perhaps one or both is a list or maybe one or both of the sequences are sorted) that could help you create a more performant solution. If you are interested, here is an extension method that will do what I just described: public static IEnumerable Exclude (this IEnumerable source, IEnumerable items) { foreach (T t in source) if (!items.Contains(t)) yield return t; } Nevermind, use the Enumerable.Except extension method: Produces the set difference of two sequences.
