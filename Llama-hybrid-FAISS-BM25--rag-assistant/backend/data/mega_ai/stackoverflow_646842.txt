[site]: stackoverflow
[post_id]: 646842
[parent_id]: 
[tags]: 
binary protocol - byte swap trick

lets say we have a binary protocol, with fields network ordered (big endian). struct msg1 { int32 a; int16 b; uint32 c } if instead of copying the network buffer to my msg1 and then use the "networkToHost" functions to read msg1 I rearrange / reverse msg1 to struct msg1 { uint32 c int16 b; int32 a; } and simply do a reverse copy from the network buffer to create msg1. In that case, there is no need for networkToHost functions. this idiomatic approach doesn't work in big endian machines but for me this is not a problem. Apart from that, is there any other drawback that I miss? thanks P.S. for the above we enforce strict alignment( #pragma pack(1) etc)
