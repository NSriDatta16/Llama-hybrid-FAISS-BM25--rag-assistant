[site]: stackoverflow
[post_id]: 4603092
[parent_id]: 4603027
[tags]: 
I'd just create two sessions, one business-logic session and one archive-session, delete the object from the business logic session and save the converted object to the archive-session. You could implement an archive method in your DAO. This will spare you a lot of trouble. I would not go as far as you and pollute my complete inheritance hierarchy with the archiving logic, unless it's used elsewhere in your business-logic (it probably isn't). Just use two session and put the archived records in another schema or database or table (the mapping for the session is up to you). BTW: The exception occurs due to your mapping strategy. With a Union-Subclass-Mapping all the identifiers are stored within the same table, so the archive records and the business logic records are fed IDs from the same pool. You'd need a custom generation strategy to avoid that exception or change the mapping. But why bother with it when there's a more elegant solution to your problem (archiving session)?
