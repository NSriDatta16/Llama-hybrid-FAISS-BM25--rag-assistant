[site]: stackoverflow
[post_id]: 4851084
[parent_id]: 
[tags]: 
Many tables or one table in Azure TableServiceContext file?

I'm working on creating an Azure application which would use around ten ttorage tables. I would like to adopt best practices but I am not sure if I should have just one single file with all the tables in the dataservicecontext.cs file or if I should have a different file for each table. Looks to me like both ways achieve the same thing. Anyone else have an opinion on what would be the best practice? public class ContactDataServiceContext : TableServiceContext { public ContactDataServiceContext(string baseAddress, StorageCredentials credentials) : base(baseAddress, credentials) { } public const string ContactTableName = "ContactTable"; public IQueryable ContactTable { get { return this.CreateQuery (ContactTableName); } } } namespace NerdDinner.Models { public class NerdDinnerDataContext : TableStorageDataServiceContext { /// /// Define an entry-point into our table. Dinners represents an "EntitySet". /// public DataServiceQuery Dinners { get { //Create the root of a LINQ query of type Dinner against the table Dinners return this.CreateQuery ("Dinners"); } } public DataServiceQuery RSVPs { get { //Create the root of a LINQ query of type RSVP against the table RSVPs return this.CreateQuery ("RSVPs"); } } } }
