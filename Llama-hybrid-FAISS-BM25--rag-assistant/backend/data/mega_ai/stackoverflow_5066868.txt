[site]: stackoverflow
[post_id]: 5066868
[parent_id]: 5066565
[tags]: 
You are misunderstanding the function void , which just make sure the return value is undefined. That prevents the browser from navigating away when you put it in a link. You can test that yourself by pasting the next addresses in your browser: javascript:1 // note: return value 1, browser will print "1" on screen javascript:void(1) // note: undefined return value, browser won't navigate away It's strongly discouraged to execute the hash part as Javascript, as it's vulnerable to XSS without proper validating it. You should watch the hash part, and on modification, do something. An example; watch every 50 milliseconds for modifications in the hash part, and insert in a element with ID targetElement an heading with the hash part. If the hash part is not valid, replace the current entry with home . var oldHash = ''; function watchHash(){ // strip the first character (#) from location.hash var newHash = location.hash.substr(1); if (oldHash != newHash) { // assume that the parameter are alphanumeric characters or digits var validated = newHash.match(/^(\w+)$/); // make sure the hash is valid if (validated) { // usually, you would do a HTTP request and use the parameter var code = " " + validated[1] + " "; var element = document.getElementById("targetElement"); element.innerHTML = code; } else { // invalid hash, redirect to #home, without creating a new history entry location.replace("#home"); } // and set the new state oldHash = newHash; } } // periodically (every 50 ms) watch for modification in the hash part setInterval(watchHash, 50); HTML code: Home About Me Contact
