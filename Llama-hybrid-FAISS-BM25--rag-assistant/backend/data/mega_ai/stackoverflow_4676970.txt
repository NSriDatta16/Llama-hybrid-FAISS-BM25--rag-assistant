[site]: stackoverflow
[post_id]: 4676970
[parent_id]: 4378267
[tags]: 
From my experience, a strongly enforced MVP pattern has been much better for data centric complex LOB applications. MVP offers greater seperation as your presenters have no knowledge of web centric concepts. Code coverage is also increased as you have no conditional code in the views. We have several apps that where the presenter is used between both web and windows apps. You presenter referes to a complete abstraction of the view, asp.net MVC relies on abstractions of view dependants (HttpContextBase etc.) That all said you need to design this into web forms, its not out of the box, but if you do it right first time and have developers that understand it and stick to it you end up with a very clean solution. there are some solid frameworks out there to support MVP in webforms: http://www.codeguru.com/csharp/.net/net_general/patterns/article.php/c15173 webformsmvp dot com as well.
