[site]: stackoverflow
[post_id]: 4451714
[parent_id]: 
[tags]: 
how can i improve my multi threading usage to decrease run time, python

Machine Info cpu_num 8 CPUs cpu_speed 2826 MHz mem_total 8173980 KB swap_total 16777208 KB Benchmarking When I increase the number of threads the performances gains i get look like (the numbers are averaged over 10 runs) Number of Threads Time 1 1.322187 2 0.789151 3 0.72232 5 0.613691 10 0.558912 40 0.531966 snapshot from top while running the code top - 01:40:42 up 7 days, 13:24, 9 users, load average: 0.34, 0.22, 0.27 Tasks: 364 total, 2 running, 362 sleeping, 0 stopped, 0 zombie Cpu(s): 28.2%us, 0.1%sy, 0.0%ni, 71.5%id, 0.0%wa, 0.1%hi, 0.0%si, 0.0%st Mem: 8173980k total, 7437664k used, 736316k free, 224748k buffers Swap: 16777208k total, 149244k used, 16627964k free, 6374428k cached PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 20365 ben.long 15 0 723m 208m 4224 S 226.2 2.6 0:37.28 python26 19948 ben.long 15 0 10996 1256 764 R 0.7 0.0 0:03.84 top 4420 ben.long 15 0 106m 3776 1360 R 0.0 0.0 0:03.06 sshd 4421 ben.long 15 0 64320 1628 1180 S 0.0 0.0 0:00.07 bash 4423 ben.long 15 0 64320 1596 1180 S 0.0 0.0 0:00.03 bash 19949 ben.long 15 0 64308 1552 1136 S 0.0 0.0 0:00.01 bash Code the stripped down code looks like from threading import Thread class testit(Thread): def __init__ (self,i): Thread.__init__(self) def run(self): some_task()#do processor heavy task num_threads_to_use = 10 thread_list = [] for i in range (0,num_threads_to_use): current = testit(i) thread_list.append(current) current.start() for thread in thread_list: thread.join() Questions Should I be using the multiprocessing module instead of the threading module? Is there a way to improve the solution below?
