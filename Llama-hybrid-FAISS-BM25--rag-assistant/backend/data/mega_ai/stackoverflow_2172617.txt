[site]: stackoverflow
[post_id]: 2172617
[parent_id]: 2172510
[tags]: 
I like Django 's way to organize folders. Let's try to imagine and adapt it to your php project: Root folder is the Project folder, let's say the name of the website. It contains common shared settings and values (ie. database access values, paths etc.), maybe helper functions (not Object Oriented), call it settings.php and/or utils.php or whatever a media folder that also has its own structure: css folder, for general css (ie. reset.css and common.css, for defining a general layout) image folder, for common shared images js folder, for common shared javascript code a template folder containing static common pages not belonging to particular categories of the website Each Root subfolder is an expression of an application of your project (ie. registration, news, announcements, faq, contacts, forum, ...) and contains: a model folder in which you put your Models in PHP (MVC pattern) a controller folder where you implement the Controllers in MVC pattern a view folder in which you put the Views of your MVC pattern (i.e. quite static php pages responsible just to present the results passed by the Views) a media folder structured exactly in the same way you structured the one for the root folder. In this folder you put elements only belonging to the particular part of the website you're developing. For connecting the components , you could directly call / include them based on their paths, or you could implement a php file inside the root directory and each subfolder that is responsible for mapping urls and redirect the requests. Call it index.php or urls.php or connector.php, whatever. It may seem redundant but it is not, and provides a high quality separation of concerns .
