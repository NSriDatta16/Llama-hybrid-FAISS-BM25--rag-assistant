[site]: stackoverflow
[post_id]: 2368161
[parent_id]: 2368064
[tags]: 
once someone takes a look at the code, they will understand it very easily and they can easily build it up themselves. So don't give anybody the source code. If I want to sell this product, what is the guarantee that someone much smarter than me will reverse engineer the whole thing and come up with better product? (a) So start selling it now and capture the market. Reverse engineering takes time, during which you are capturing market and 'mind-share'. (b) Put a provision in your licence agreement that prohibits reverse-engineering. (c) Make sure everybody who gets the product signs the agreement. Right now I am thinking of fragmenting the whole code. Adding lots of redundant code and tonnes of comments. That only has a point if you're going to distribute the source code. In which case nobody even needs to reverse-engineer. They have your source code. Don't give it to them. Is there any software ... There's lots of software that purports to do this job. However it is a technical solution to a business problem. All software can be reverse-engineered, because at some point or other it all has to be decrypted and de-obfuscated to the point where the CPU will understand it. At that point it is essentially plaintext. So no technical solution is formally speaking possible (short of something like code that executes in a tamper-proof HSM). I will add that there is another business mechanism you can use to defend against business loss, which is what this is all about: price. Make the price so high that the licensees will value their copy and not permit it to be inspected, or make it so low that reverse-engineering is cost-infeasible; or make it free and make your money on the support contract.
