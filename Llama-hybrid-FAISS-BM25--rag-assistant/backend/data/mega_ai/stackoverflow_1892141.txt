[site]: stackoverflow
[post_id]: 1892141
[parent_id]: 449872
[tags]: 
With com: Create a class that public extends IDropTarget Register your class for drops. Do this in WM_CREATE RegisterDragDrop(hwnd,static_cast (pointer_to_your_class)); In your class you need to override a couple of functions since they are pure virtual: virtual HRESULT STDMETHODCALLTYPE DragEnter( /* [unique][in] */ __RPC__in_opt IDataObject *pDataObj, /* [in] */ DWORD grfKeyState, /* [in] */ POINTL pt, /* [out][in] */ __RPC__inout DWORD *pdwEffect) = 0; virtual HRESULT STDMETHODCALLTYPE DragOver( /* [in] */ DWORD grfKeyState, /* [in] */ POINTL pt, /* [out][in] */ __RPC__inout DWORD *pdwEffect) = 0; virtual HRESULT STDMETHODCALLTYPE DragLeave( void) = 0; virtual HRESULT STDMETHODCALLTYPE Drop( /* [unique][in] */ __RPC__in_opt IDataObject *pDataObj, /* [in] */ DWORD grfKeyState, /* [in] */ POINTL pt, /* [out][in] */ __RPC__inout DWORD *pdwEffect) = 0; Each of those functions will get called when those events occur, i.e. when someone pass the mouse in your window with a file DragEnter on your class will get called. You will also need to implement a couple more functions that IDropTarget extends, check out IUnknown in your MSDN. Then you need to query IDataObject param to get the data: FORMATETC fdrop = {CF_HDROP, 0, DVASPECT_CONTENT, -1, TYMED_HGLOBAL}; if (SUCCEEDED(pDataObj->QueryGetData(&fdrop)) ){ STGMEDIUM stgMedium = {0}; stgMedium.tymed = TYMED_HGLOBAL; HRESULT hr = pDataObj->GetData(&fdrop, &stgMedium); if (SUCCEEDED(hr)) { HGLOBAL gmem = stgMedium.hGlobal; HDROP hdrop = (HDROP)GlobalLock(gmem); UINT numOfFiles = DragQueryFile( (HDROP) hdrop, 0xFFFFFFFF, NULL, 0 ); TCHAR buffer[MAX_PATH]; for( int i=0;i Cheers!
