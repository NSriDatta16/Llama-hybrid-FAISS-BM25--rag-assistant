[site]: stackoverflow
[post_id]: 300644
[parent_id]: 300605
[tags]: 
"adding user stories specifically for testing and documenting" While meta-user stories might make sense in some circles, it rarely works out well. Software folks rarely cope well with meta-user stories, they either don't get the idea that they can change their own processes by writing a story, or -- more typically -- they engineer the meta-user story to death. When you're interviewing users, it feels like they're making the user story up. Certainly, you're making it up as you listen to them and try to capture it. When an IT organization tries to make up its own user stories about how IT should work, the process falls apart. Until the organization has done the thing (testing, for example) a bunch of times manually, they're not really qualified to write user stories. Then, after they've done it, they don't need software development processes, they'll just automate the important bits a little at a time. I think change has to come from a less formal direction. Actually balking at calling something "done" that hasn't been tested is a good starting point. IT doesn't do things unless forced. So, meet the users and find out why they're not requiring testing. Coach them to require testing. Tell them the consequences and the words to use. A lot can go wrong in an organization to lead to poor processes. It's important to know what's wrong, and create a demand for change. The best possible thing is to have your boss complaining that you're not fixing it, rather than you suggesting that perhaps it would be good to fix it. [It doesn't feel right when your boss demands you fix the process, but it's about the only way change will happen.]
