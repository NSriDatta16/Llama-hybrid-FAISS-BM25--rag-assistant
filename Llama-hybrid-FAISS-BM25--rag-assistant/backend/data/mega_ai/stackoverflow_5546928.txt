[site]: stackoverflow
[post_id]: 5546928
[parent_id]: 5546270
[tags]: 
Short answer: set the size you want in the web page where you embed the SWF, rather than in the AS source. Full answer: As metadata, the width and height that get compiled into a SWF are essentially suggestions. When the SWF is displayed, its size is wholly decided by its container, so the only time the metadata gets honored is if the container chooses to read and honor it. Generally, they only container that does that is the standalone player - thus if you double-click the SWF it should launch at the size you specified in the source. But when you display the SWF embedded in a web page, the width/height metadata gets ignored entirely, and the SWF's size is determined similarly to all the other elements in your page (by the embedding HTML, CSS, and so on). That's all slightly beside the question of why the metadata doesn't take percentages, but hopefully it makes more sense in this context... and since the metadata doesn't affect what happens in a browser, it's a bit academic. I can't answer for how percentWidth etc. fit into things, as it doesn't seem to be documented, but I assume that setting those values doesn't affect the SWF's size in a browser either (unless of course FlashBuilder is generating HTML based on the metadata, or something fancy like that - I'm not too up on FB). Update I think I see your problem here. We need to back up a bit and talk about scaling. Any time the size of a SWF differs from the size of its viewport (i.e. the size allotted to Flash by its container), Flash makes a decision about how to scale the content, depending on the stageScaleMode . The details of the four scale options are described in that link, but basically the content is left unscaled, or it's scaled up or down in such a way as to preserve, or not preserve, aspect ratio. However, in order for Flash to know whether/how to scale the content, the content must have an "intrinsic" size. The height/width metadata we've been talking about is used as that size. So if your HTML container is 200x400 and you use the "exact fit" scalemode, then if your metadata describes a size of 100x200 your content will display at double size, and if your metadata said 400x800, the SWF will show up at half size. If you use the "no scale" scalemode, then your metadata will not affect the content's scaling. (Content still gets aligned within the container according to stageAlign .) Taking the previous into account, I hope it will be clear that the "correct" value to use for your size metadata depends on what kind of scaling you use and how your content will adapt (or not adapt) to different sized containers. If your content is laid out statically within a 259x398 area, then 259x398 is the proper metadata size to use. That way, if you were to view it in a larger container, your content would be scaled up as one would expect, depending on scale mode. However, if your content dynamically adjusts to variably-sized containers, and automatically lays out its content at runtime, then you almost certainly need to use "no scale" mode - in which case it doesn't matter very much what size metadata you use, so the flex default size should work fine. Incidentally, scale mode can be defined in the HTML embed parameters, but you can also override that setting at runtime. So work out what scale mode meets your needs, and set that mode before your content initializes, and then you should be able to find a metadata size that works.
