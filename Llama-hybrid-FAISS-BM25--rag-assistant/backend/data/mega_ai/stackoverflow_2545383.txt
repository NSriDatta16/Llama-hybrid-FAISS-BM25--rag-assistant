[site]: stackoverflow
[post_id]: 2545383
[parent_id]: 2545080
[tags]: 
Is there a sure way to really kill a thread? No, there is not. As you have observed Thread.interrupt() advises a thread to stop, but it may not notice, or it may decide to pay no attention. The only other alternative is Thread.stop() , and that is deprecated because it can seriously destabilize an application. Specifically, Thread.stop() causes all of the threads locks to be released, without any guarantee that the state guarded by the locks is in a fit state to be visible. At the same time, the unexpected exception means that the methods that were interrupted by the stop() don't get a chance to (for example) notify() other threads that are waiting. Finally, it is possible for a thread to catch (and not rethrow) the ThreadDeath exception object, causing the stop() to not stop the thread at all. In short calling Thread.stop() is a really, really bad idea.
