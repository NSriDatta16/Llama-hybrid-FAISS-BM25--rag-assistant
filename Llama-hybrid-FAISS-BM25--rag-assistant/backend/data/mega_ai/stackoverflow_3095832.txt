[site]: stackoverflow
[post_id]: 3095832
[parent_id]: 3095346
[tags]: 
The problem is that raster.getPixel(x, y, pixelColor); returns each RGB value in 8 bits (in my test image, the 0,0 pixel value is returned as 24,24,24 [8 bit values] when it should be 6168,6168,6168 [16 bit values]). That statement is incorrect. 16 bits per pixel does not mean 16 bits per Red or Green or Blue value. It means 16 bits represents the combined R and G and B values. So a 16 bit short value can be broken down to represent one pixel. 5 bits represent the Red value. 6 bits represent the Green value. 5 bits represent the Blue value. Red Green Blue ----- ------ ----- 10111 101010 11100 Combined you get 1011110101011100 binary or 48476 Decimal. Never having coded in Java, I would suspect that you would need to use a different function call to get the value you are looking for. Perhaps try [getDataElements][1] to obtain the 16 bit value for the pixel in question. Rememeber, each pixel is 16 bits. You are confusing that with 24 bit (each pixel is 8 bits) or 32 bit (each pixel is 8 bits plus an 8 bit alpha value.) This article from MSDN should help you retreive the RGB values from the 16 bit value. (You will also have to correct your averaging code.) [1]: http://java.sun.com/j2se/1.4.2/docs/api/java/awt/image/Raster.html#getDataElements(int , int, java.lang.Object)
