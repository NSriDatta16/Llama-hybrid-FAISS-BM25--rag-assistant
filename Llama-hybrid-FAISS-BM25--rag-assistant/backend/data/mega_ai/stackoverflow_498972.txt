[site]: stackoverflow
[post_id]: 498972
[parent_id]: 497802
[tags]: 
If and only if you're container layout is never going to change and you require to put your JavaSctipt/jQuery in an external file, you could use the generated ids within your jQuery selectors i.e. $('#ctl00_ContentPlaceHolder1_Label3').html(xml); Obviously, this approach requires you to find out what the generated ids will be and requires caution if you ever start changing the site/application construction. Otherwise, your best options are 1. Use the inline server side code markup. The downside to this approach is that you cannot put your js code in an external file - $('# ').html(xml); 2. Define unique CSS classes on each control you need to use in your jQuery, which would still allow you to put your js code in an external file - $('.label3').html(xml); 3. Use jQuery selectors to pattern match the original id, which again, would allow you to put your js code in an external file - $('[id$=Label3]').html(xml); This jQuery selector will select all elements with attribute id whose value ends with Label3 . The only potential downside that I could see with this approach is that in theory, it could be possible to have a Label control with id Label3 in say, a Master page and also in two content pages. In this example, using the jQuery selector above would match all three labels, which may have unwanted consequences. EDIT: I thought it might be useful to raise your attention to the IDOverride control . An Example page can be found here It allows you to specify which controls should have their mangled id within the outputted HTML markup overridden with the id as is given in the .aspx file when rendering out the HTML page. I have only played with it briefly with a single Master Page and Panels, but it appears to work well. Using this, you could use the original ids within your jQuery selectors. Be aware however, that the results are unpredictable if you were to have controls with the same ids in your Master page(s) and Content page(s) that are combined to render the HTML for one page.
