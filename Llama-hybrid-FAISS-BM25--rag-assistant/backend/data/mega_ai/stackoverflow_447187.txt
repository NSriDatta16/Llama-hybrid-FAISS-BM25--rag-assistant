[site]: stackoverflow
[post_id]: 447187
[parent_id]: 
[tags]: 
Pacman game class design

I have to write a multiplayer pacman game in Java for a university assignment and I'm after some feedback for my design so far. So I'm trying to go down an MVC style and this is what I've sketched out . I've never designed anything using MVC, so my knowledge is really only from the pragmatic programmer and a short lecture so it's quite possible I'll have misunderstood or misinterpreted it slightly. Also, most of the tutorials I've seen for designing simple games don't mention MVC at all so is this a case where MVC is not a good pattern to use? My idea so far is that the Game State class would be the main source of data storage as it were, and would use a 2d array to store the state of the game, where the ghosts are, where pacman is etc. The Game class would be the main controller class that would contain the main game loop and control all the interactions between the data ( game state ) and the view (probably a GUI representation - I just added text based really as an example). After I've got the game working I'm going to have to split it out into client/server. It seems to me, by using this model, that it wouldn't be too hard to keep most of the the data and processing on the server and have the clients interact with the controller and draw their own views. I have no idea (yet) how this may effect the performance of the game over a network so I'll have to research into that further once the single player version is done. Any tips or advice, based on my design so far, would be greatly appreciated - also bearing in mind that it will eventually have to be a multiplayer game. Cheers, Adam
