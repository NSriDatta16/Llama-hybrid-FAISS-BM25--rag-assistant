[site]: stackoverflow
[post_id]: 3905213
[parent_id]: 3905152
[tags]: 
If you are talking about a loop, then you have a series of operations that take place for all elements in the loop. I would model the operations done in the loop as a sequence diagram by itself, if the operation in the loop are fairly complex. I don't think we can have rules of thumb here, but when the process with the loop itself is complex, and the loop is relatively less complex, we can have them in a single sequence diagram. If the process that has the loop is not very complex, but the loop is complex, then I would draw a sequence diagram for the operations of the loop and have a note that this entire sequence is called by a loop. You can also have both sequence diagrams if needed. Update: We have to add some notes to the diagram because it is not straightforward to denote a "condition" in a sequence diagram. The validate is part is something like do validation if validation succeeds proceed to next (business or other) logic if validation fails feedback to user (or some other logic) +----+ +----+ +----------------+ +----------------+ |User| | UI | | Your Validator | | Business Logic | +----+ +----+ +----------------+ +----------------+ | select | | | |--------------->| doValidation | | | |------------------>|----+ | | | | | Validate | | | | | | | | | UPDATE 2 Why use sequence diagram in a case as mine? Because you still have to show the sequence of operations, and the developer still needs this information for coding :-) With UML, as you probably already know, nothing is imposed . You are at your freedom to denote something in some fashion, provided your team also understands it the way you intended. These notes are also helpful. I should have mentioned this before, some use an "option" fragment to denote a if else. This is more or less a note (I see it this way) but is perhaps more evident. I use them only when both the IF and the ELSE parts are both complex. +----+ +----+ +----------------+ +----------------+ |User| | UI | | UI - Backend | | Busines Logic | +----+ +----+ +----------------+ +----------------+ | Add Record | | | |--------------->| doinsertOrUpdate | | | |------------------>| | | | | exists(record) | | | |----------------------->| | | | | ____|________________|___________________|________________________|__________ |[Record exists] | | | | | | | | Get Record | | | | | |----------------------->| | | | | | | | | | | |--------+ | | | | | | | Set UI Values | | | | | | | | | | | | | | | | | Send Message | | | | | | | | | | | Send Message | | | | | | See this for an example using an alt block.
