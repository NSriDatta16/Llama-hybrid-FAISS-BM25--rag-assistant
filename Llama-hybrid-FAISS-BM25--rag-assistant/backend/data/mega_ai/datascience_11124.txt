[site]: datascience
[post_id]: 11124
[parent_id]: 11104
[tags]: 
To add some stuffs to what Neil Slater said: First I'm not sure you got (as I read your question) the fact that SVMs are quite good, as long as you use them with a proper kernel. Which means that you must find a way of transforming your images such that the resulting input data are linearly separable in the sens of your formula. If the SVM algorithm is very simple, using kernel is nontrivial. Then the best approach nowadays for image classification is deep neural network. Not because they are magic but mostly because of the use of convolutional layers. Let say that for 10 000 neurons in a network, 100 will do what SVM do: classification. The rest of it just act as a kernel. In the case of images, since features to recognize are intricately local and global, the use of successive convolutional layers can decorticate your image to retrieve the specifications you need (in your example, you could recognize brushstroke as well as global shapes). To sum up: Shallow learning (SVM for example) work great but you have to design your own kernel, or treat your data before using them. Deep learning (convolutional networks for example) do the work for you, but are harder to set up and to interpret.
