[site]: stackoverflow
[post_id]: 4315613
[parent_id]: 4315214
[tags]: 
I'd (also) recommend: Effective C++ , Effective STL by Steve Myers. They are easy to digest, yet very valuable - sometimes even illuminating. Code Complete (The 1993 edition is available cheaply and not that much different). It's lengthy, but it walks across the entire field from what it means to be a programmer to how a for loop should look . (It would be better if it was shorter - the way it is it covers so much ground it's hard to place it). I hold it dear because it illustrate two points very well: code is compromise There are know facts, (but we still manage to get by by gut feel) C++ FAQ Lite / C++ FAQ . I'd throw in Facts and Fallacies by Robert Glass - it doesn't fit your request very well, but go read it. It's natural that you are unhappy with other people's code. That's typical for programming - heck, even my own code of five years ago was written by a total n00b. That might be more articulated for C++, since it caters for different styles, and often puts freedom ("you can") over guildelines ("that's the way"). Still, mulling over existing code - yours or others - and considering how it can be improved. Also, figuring out why it is the way it is sometimes helps. (I remember a few TheDailyWTF's where everyone would chime in how stupid and unreasonable this is - yet somewhere, buried among the me too's, was someone with domain experience explaining convincingly under what circumstances this was better than the obvious solution).
