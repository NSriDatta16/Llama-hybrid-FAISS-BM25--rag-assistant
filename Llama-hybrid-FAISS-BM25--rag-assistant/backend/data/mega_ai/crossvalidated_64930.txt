[site]: crossvalidated
[post_id]: 64930
[parent_id]: 64723
[tags]: 
The cluster centroid, i.e., the theoretical true center sequence which minimizes the sum of distances to all sequences in the cluster, is generally something virtual which would be defined as a mix of states at each position (similarly as the average between integer values can take non integer values). TraMineR does not compute such virtual centers. However, it can compute the distance to the virtual center (for the used formula, see Studer, Ritschard, Gabadinho and Muller, 2011, Discrepancy analysis of state sequences, Sociological Methods and Research , Vol. 40(3), pp. 471-510). The distance to the center is returned by the disscenter function. To get the distance to the center from the sequence with highest silhouette in each cluster, we first retrieve the indexes of those sequences. ## Looking for the index of the first sequence with max ## silhouette in each cluster fclust Now, you may also consider comparing the sequence with maximum silhouette value to the medoid, i.e., the the sequence in the data with the smallest sum of distances to the other sequences in the cluster. You get a plot of the medoid of each cluster with seqrplot seqrplot(mvad.seq, group = fclust, dist.matrix = mvad.dist, criteria = "centrality", nrep=1) Alternatively, you can retrieve the index number of the medoids, and then print or plot the medoids as follows icenter You could indeed also compute the distances to the medoids by setting for instance refseq = icenter[1] in seqdist , for the distance to the medoid of the first cluster. Using the seqrep.grp function from TraMineRextras package, you get representativeness quality measures of the medoids (see Gabadinho, Ritschard, Studer, Muller, 2011, "Extracting and Rendering Representative Sequences", In Fred, A., Dietz, J.L.G., Liu, K. & Filipe, J. (eds) Knowledge Discovery, Knowledge Engineering and Knowledge Management. Series: Communications in Computer and Information Science (CCIS). Volume 128, pp. 94-106. Springer-Verlag) library(TraMineRextras) seqrep.grp(mvad.seq, group = fclust, mdis = mvad.dist, criteria = "centrality", nrep=1, ret = "both") Hope this helps.
