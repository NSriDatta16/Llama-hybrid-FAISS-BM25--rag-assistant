[site]: stackoverflow
[post_id]: 3317366
[parent_id]: 3317328
[tags]: 
So you want to remove the and tags? That can be done like this: >>> s = ' link_text_part1 another_text link_text_part2 ' >>> re.sub(" ", "", s) 'link_text_part1 another_text link_text_part2' In English, this searches for: A optionally followed by a / (to get the closing tags) followed by 'a' or 'em' followed by anything up to and including the first > character and replaces them with empty strings. However as Kos says, using regex to parse HTML is highly risky and fragile, unless you know that the format of the HTML you are parsing will never change.
