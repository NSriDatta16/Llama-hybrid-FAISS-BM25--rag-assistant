[site]: stackoverflow
[post_id]: 753273
[parent_id]: 
[tags]: 
Practical SOA for a newbie

I am a total newbie to the world of SOA. As such, I am looking at some "SOA frameworks/technologies", and trying to understand how to utilize them to build a highly scalable (Facebook class) website. There are several "pains" I am trying to solve here: Composability (+ managing dependencies, Pub/Sub) Language-independence of services Scalability & Performance High availability I looked into some technologies that answer a subset of the above criteria: Thrift - Facebook's cross-platform RPC platform WCF - supports SOAP, JSON & REST, so it can be considered language-interoperable. Generates WSDL files that can be use to generate java proxies. Microsoft DSS - just inclued it in my survey, but it doesn't seem relevant as it is highly state-driven and .NET specific. Web Services Now, I understand how I get some aspects of composability and language-independence out of the above. But, I haven't found much concrete information (not buzz) about how to use the above / other tools for scalability and high availability. So finally I get to my question: How does one leverage SOA technologies to solve the pains I defined above? Where can I find technical guides for that? I am looking for more than just system diagrams, but rather actual libraries, code samples, APIS...
