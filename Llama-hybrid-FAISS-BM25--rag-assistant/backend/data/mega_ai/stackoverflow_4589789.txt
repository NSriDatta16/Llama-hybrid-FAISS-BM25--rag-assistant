[site]: stackoverflow
[post_id]: 4589789
[parent_id]: 4589606
[tags]: 
So after playing with your code, here's the conclusion I've come to. It looks like the draggable jqueryui method is tracking its objects seperately. When you clone, that tracking isn't cloned. I modified your code as follows: jQuery.fn.swapWith = function(to) { return this.each(function() { var copy_to = $(to).clone(true).appendTo($("#wrapper")); var copy_from = $(this).clone(true).appendTo($("#wrapper")); //$(to).replaceWith(copy_from); //$(this).replaceWith(copy_to); }); }; You can see the fascinating results http://jsfiddle.net/XkUDv/16/ As you can see, if you drag the new cloned objects, it moves the original, not the cloned one. It's not an answer, but I hope it helps. UPDATE: after taking a closer look at clone I changed the javascript to: jQuery.fn.swapWith = function(to) { return this.each(function() { var copy_to = $(to).clone(); var copy_from = $(this).clone(); $(to).replaceWith(copy_from); $(this).replaceWith(copy_to); }); }; $(document).ready(function() { options = { revert: true }; $("li").draggable(options); $('#wrapper').droppable({ drop: function(event, ui) { window.setTimeout(function(){ $('#one').swapWith($('#two')); $("li").draggable(options); }, 600); } }); }); Now it works the way you wanted :) I'm guessing the issue is that since clone(true) copies the event handlers, when you try to reattach the draggable to the new clones it sees the old event handlers and ignores the elements. So instead of clone(true), I changed it to clone(); hope that helps! Working version: http://jsfiddle.net/XkUDv/21/
