[site]: stackoverflow
[post_id]: 975325
[parent_id]: 933077
[tags]: 
Lets take that piece by piece: int returnNumber = RandomNumber(1, 10); There is no inbuilt RandomNumber function; note that with the Random class, the end value is exclusive, so for a number in a range, you'll need something like: static readonly Random rand = new Random(); static int Random(int min, int max) { if(max However, you then throw away this value completely: int.TryParse(textBox1.Text, out returnNumber); The use of out means that the previous value of returnNumber is ignored completely. I'm not sure what your intent is, but it seems like you just want to check the value: if(int.TryParse(textBox1.Text, out returnNumber) && returnNumber >= 1 && returnNumber I've tried to look at the last example, but it really isn't clear what you are trying to do - can you clarify? (edited after question edit and comments) You would need a counter, which you increment for failed tries - something like: using System; using System.Drawing; using System.Windows.Forms; class MyForm : Form { Button btn; ListBox lst; TextBox tb; const int MaxTries = 3, MaxNumber = 10; int targetNumber, guessCount = 0; public MyForm() { targetNumber = new Random().Next(1, MaxNumber + 1); Text = "Guess a number"; Icon = SystemIcons.Question; Controls.Add(lst = new ListBox {Dock=DockStyle.Fill}); Controls.Add(btn = new Button {Text="Guess",Dock=DockStyle.Top}); Controls.Add(tb = new TextBox {Dock=DockStyle.Top}); btn.Click += btn_Click; } void btn_Click(object sender, EventArgs e) { int userNumber; if (int.TryParse(tb.Text.Trim(), out userNumber)) { if (userNumber MaxNumber) { lst.Items.Add("Did I mention... between 1 and " + MaxNumber); } else { if (userNumber == targetNumber) { lst.Items.Add("Well done! You guessed well"); btn.Enabled = false; // all done } else { lst.Items.Add(targetNumber = MaxTries) { btn.Enabled = false; lst.Items.Add("Oops, should have picked more wisely"); } } } } else { lst.Items.Add("Nice; now give me a number"); } } [STAThread] static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); Application.Run(new MyForm()); } }
