[site]: crossvalidated
[post_id]: 56952
[parent_id]: 56737
[tags]: 
There seem to be some misconceptions about what the Metropolis-Hastings (MH) algorithm is in your description of the algorithm. First of all, one has to understand that MH is a sampling algorithm. As stated in wikipedia In statistics and in statistical physics, the Metropolis–Hastings algorithm is a Markov chain Monte Carlo (MCMC) method for obtaining a sequence of random samples from a probability distribution for which direct sampling is difficult. In order to implement the MH algorithm you need a proposal density or jumping distribution $Q(\cdot\vert\cdot)$, from which it is easy to sample. If you want to sample from a distribution $f(\cdot)$, the MH algorithm can be implemented as follows: Pick a initial random state $x_0$. Generate a candidate $x^{\star}$ from $Q(\cdot\vert x_0)$. Calculate the ratio $\alpha=f(x^{\star})/f(x_0)$. Accept $x^{\star}$ as a realisation of $f$ with probability $\alpha$. Take $x^{\star}$ as the new initial state and continue sampling until you get the desired sample size. Once you get the sample you still need to burn it and thin it: given that the sampler works asymptotically, you need to remove the first $N$ samples (burn-in), and given that the samples are dependent you need to subsample each $k$ iterations (thinning). An example in R can be found in the following link: http://www.mas.ncl.ac.uk/~ndjw1/teaching/sim/metrop/metrop.html This method is largely employed in Bayesian statistics for sampling from the posterior distribution of the model parameters. The example that you are using seems unclear to me given that $f(x)=ax$ is not a density unless you restrict $x$ on a bounded set. My impression is that you are interested on fitting a straight line to a set of points for which I would recommend you to check the use of the Metropolis-Hastings algorithm in the context of linear regression. The following link presents some ideas on how MH can be used in this context (Example 6.8): Robert & Casella (2010), Introducing Monte Carlo Methods with R , Ch. 6, "Metropolis–Hastings Algorithms" There are also lots of questions, with pointers to interesting references, in this site discussing about the meaning of likelihood function. Another pointer of possible interest is the R package mcmc , which implements the MH algorithm with Gaussian proposals in the command metrop() .
