[site]: stackoverflow
[post_id]: 3450478
[parent_id]: 3450187
[tags]: 
In AS3 this is handled by adding a MouseEvent listener to the stage listening for the MOUSE_UP event. head.addEventListener(MouseEvent.MOUSE_DOWN, _handleDown); function _handleDown($evt:MouseEvent):void { // add a MouseEvent.MOUSE_UP listener to the stage stage.addEventListener(MouseEvent.MOUSE_UP, _handleUp); head.removeEventListener(MouseEvent.MOUSE_DOWN, _handleDown); head.addEventListener(MouseEvent.MOUSE_MOVE, _handleMove); head.addEventListener(MouseEvent.MOUSE_UP, _handleUp); head.startDrag(false, new Rectangle(stubDiv,0,width - stubDiv - ((levels-maxLevel)*stubDiv),0) } function _handleMove($evt:MouseEvent):void { updateLevel(); } function _handleUp($evt:MouseEvent):void { // remove the MouseEvent.MOUSE_UP listener from the stage stage.removeEventListener(MouseEvent.MOUSE_UP, _handleUp); head.removeEventListener(MouseEvent.MOUSE_UP, _handleUp); head.removeEventListener(MouseEvent.MOUSE_MOVE, _handleMove); head.addEventListener(MouseEvent.MOUSE_DOWN, _handleDown); head.stopDrag(); setHeadPos(); } As you can see, as a matter of style, I avoid using anonymous functions in my event listeners. This allows for far more flexibility in most cases, and in my opinion, is far easier to read. As far as your other issue, not having the "scroll handle" react to MOUSE_MOVE events... do you want it to still react even after you have rolled away from the handle? Depending on how you want this to work it could be done a variety of ways. Please clarify exactly what behavior you are looking for.
