[site]: stackoverflow
[post_id]: 5500057
[parent_id]: 
[tags]: 
How to define a function pointer pointing to a static member function?

#include "stdafx.h" class Person; typedef void (Person::*PPMF)(); // error C2159: more than one storage class specified typedef static void (Person::*PPMF2)(); class Person { public: static PPMF verificationFUnction() { return &Person::verifyAddress; } // error C2440: 'return' : cannot convert from // 'void (__cdecl *)(void)' to 'PPMF2' PPMF2 verificationFUnction2() { return &Person::verifyAddress2; } private: void verifyAddress() {} static void verifyAddress2() {} }; int _tmain(int argc, _TCHAR* argv[]) { Person scott; PPMF pmf = scott.verificationFUnction(); (scott.*pmf)(); return 0; } Question: I need to define a function pointer PPMF2 to pointing to a static member function verifyAddress2. How can I do it? #include "stdafx.h" class Person; typedef void (Person::*PPMF)(); typedef void (Person::*PPMF2)(); class Person { public: static PPMF verificationFUnction() { return &Person::verifyAddress; } PPMF2 verificationFUnction2() { return &Person::verifyAddress2; } private: void verifyAddress() {} static void verifyAddress2() {} }; int _tmain(int argc, _TCHAR* argv[]) { Person scott; PPMF pmf = scott.verificationFUnction(); (scott.*pmf)(); return 0; }
