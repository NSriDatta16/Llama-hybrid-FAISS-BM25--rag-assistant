[site]: stackoverflow
[post_id]: 333081
[parent_id]: 332952
[tags]: 
I can't speak to the other discussions you've seen, but there is at least one hashing algorithm that is guaranteed to be O(1). Cuckoo hashing maintains an invariant so that there is no chaining in the hash table. Insertion is amortized O(1), retrieval is always O(1). I've never seen an implementation of it, it's something that was newly discovered when I was in college. For relatively static data sets, it should be a very good O(1), since it calculates two hash functions, performs two lookups, and immediately knows the answer. Mind you, this is assuming the hash calcuation is O(1) as well. You could argue that for length-K strings, any hash is minimally O(K). In reality, you can bound K pretty easily, say K
