[site]: stackoverflow
[post_id]: 5500053
[parent_id]: 5499947
[tags]: 
Why don't you simply add a Label before the Donwload-Button in the ItemTemplate? You could set the Label's Text in RowDataBound(gridView2_DataBound). Edit: to show the header columns of the nested gridview in the header of the outer gridview, you could set ShowHeader="false" in the inner grid and use a HeaderTemplate with two labels for "Software Titles" and "Download here" and appropriate CSS-Styles to fit to the inner grid. Edit : Here is a working test-page. Pick the parts you didn't understand: aspx : ' runat="server" /> ' CommandName="Download" Text="Download" /> Codebehind (converted from vb.net to c#): public class WebForm1 : System.Web.UI.Page { protected void Page_Load(object sender, EventArgs e) { if (!IsPostBack) { this.GrdTransaction.DataSource = GetOuterGridSource(); this.GrdTransaction.DataBind(); } } private DataTable GetOuterGridSource() { DataTable tbl = new DataTable(); tbl.Columns.Add(new DataColumn("ID", typeof(Int32))); tbl.Columns.Add(new DataColumn("DateOfTransaction", typeof(DateTime))); DataRow row = tbl.NewRow(); row["ID"] = 1; row["DateOfTransaction"] = System.DateTime.Now; tbl.Rows.Add(row); row = tbl.NewRow(); row["ID"] = 2; row["DateOfTransaction"] = System.DateTime.Now; tbl.Rows.Add(row); row = tbl.NewRow(); row["ID"] = 2; row["DateOfTransaction"] = System.DateTime.Now; tbl.Rows.Add(row); return tbl; } private DataTable GetNestedGridSource() { DataTable tbl = new DataTable(); tbl.Columns.Add(new DataColumn("ID", typeof(Int32))); tbl.Columns.Add(new DataColumn("Doc", typeof(string))); DataRow row = tbl.NewRow(); row["ID"] = 1; row["Doc"] = "Smart Defrag"; tbl.Rows.Add(row); row = tbl.NewRow(); row["ID"] = 2; row["Doc"] = "Visio Viewer"; tbl.Rows.Add(row); row = tbl.NewRow(); row["ID"] = 2; row["Doc"] = "Rapid Typing"; tbl.Rows.Add(row); return tbl; } protected void GrdTransaction_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e) { if (e.Row.RowType == DataControlRowType.DataRow) { dynamic row = ((DataRowView)e.Row.DataItem).Row; dynamic GrdDocument = (GridView)e.Row.FindControl("GrdDocument"); GrdDocument.DataSource = GetNestedGridSource(); GrdDocument.DataBind(); GrdDocument.RowCommand += GrdDocument_RowCommand; } } protected void GrdDocument_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e) { if (e.Row.RowType == DataControlRowType.DataRow) { dynamic row = ((DataRowView)e.Row.DataItem).Row; dynamic LblFileName = (Label)e.Row.FindControl("LblFileName"); LblFileName.Text = row("Doc").ToString; } } protected void GrdDocument_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e) { if (e.CommandName == "Download") { dynamic docName = e.CommandArgument.ToString(); } } public WebForm1() { Load += Page_Load; } } I have set the LblFileName's Text poperty in GrdDocument_RowDataBound . That is redundant because i've always used eval on the aspx-page. I wanted to show both ways for the sake of completeness. This is result:
