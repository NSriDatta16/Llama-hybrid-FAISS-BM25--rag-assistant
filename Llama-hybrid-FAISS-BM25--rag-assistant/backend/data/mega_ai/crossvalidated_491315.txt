[site]: crossvalidated
[post_id]: 491315
[parent_id]: 
[tags]: 
Computation efficient time series causal graph representation?

I am trying to select the best features to train a Deep Learning model from a big database, consisting of stock/cryptocurrencies prices (and possibly technical indicators). I have found this algorithm, which uses K-Medoids clustering to select the best features. But I am still unsure of what is the best way to build the causality graph / matrix. I am looking for a computation efficient way to represent the causal graph of my time series. I guess this is an active research area, and I am struggling to find out what the best approach is. The Granger causality test got me interested, because as far as I understand, it is a computationally efficient way to find if a time series is useful at predicting another. But it seems like there is limitations to it, about data stationarity and linearity. I have found a lot of other methods to try in order to generate the graphs, some are extensions of Granger's test, other come from information or chaos theory. This article is a really good summary of possibilities , and I think the most promising one can be found here . I don't have a strong maths/stats background, so it is going to take me a long time to explore all these possibilities ... I would like to take advantage of some specificities of my use case : I don't need the graph to be highly reliable, I'd rather use a more computationally efficient method, as long as it works for most time series I can run the algorithm in multiple passes and increasing complexity methods : filtering most time-series with a basic approximation of the causality graph, then using a better / more complicated method to select features among remaining time series. Any insight about it would be appreciated.
