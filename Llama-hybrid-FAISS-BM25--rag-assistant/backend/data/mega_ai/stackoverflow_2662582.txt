[site]: stackoverflow
[post_id]: 2662582
[parent_id]: 2662508
[tags]: 
XHTML QA XHTML has mature QA tools, but looser DTDs (e.g. is a conformance error in HTML 4.01 and XHTML 1.0, but only a validity error in HTML 4.01 * ). This is despite XHTML 1.0 being, theoretically, HTML 4.01 expressed as XML. There are numerous differences, which are not documented in the " Differences with HTML 4 " section of the spec. An XHTML document when served with a MIME type of application/xhtml+xml (see below) needs to conform 100% to XML standards, i.e. it needs to be "well formed XML". Even a single unescaped ampersand can cause the parser (the browser) to throw a warning and refuse to render the document. When creating dynamic XHTML sites which may include content supplied by third parties (e.g. any user input), great care needs to be taken to escape any and all invalid character sequences, to not allow invalid tags or attributes and to properly nest all elements. Browser Support XHTML as text/html is well supported, but you have to jump through compatibility hoops. Without jumping through those hoops a perfectly valid page may fail to render (e.g. causing the rest of the document to be treated as a script instead of HTML) or display other issues. XHTML as application/xhtml+xml is reasonably well supported by most browsers (minor bugs may exist). It does not work at all in Internet Explorer MIME type application/xhtml+xml vs text/html XHTML served as text/html is neither XHTML nor HTML. It's handled like HTML by the browser, but since it's not HTML, it's treated as tag soup. Since Internet Explorer does not know how to handle XHTML using application/xhtml+xml, it will need to be served as text/html for IE only. Which means XHTML for IE is always tag soup, unless the differences between HTML and XHTML are tended to as well (see Differences with HTML 4 ). Welcome to a world of pain. You get downstream proxy issues (you have to vary caching based on whatever request header you perform your conditional on). The document structure changes (e.g. tables without a tag may or may not have a element depending on the content-type). It is a lot of work to produce, essentially, two almost identical documents. XHTML and Javascript When an XHTML document is parsed with a proper application/xhtml+xml MIME type, there may be differences when manipulating DOM elements via Javascript. Some scripts which have not been prepared properly may work differently or fail in an XHTML environment. Examples: under HTML, a JavaScript command like console.log(document.body.tagName); would output "BODY", whereas the same command under XHTML would output "body". And if you have .. in the markup, the table's firstChild in JavaScript would be the tr in XHTML, but a TBODY in HTML. Advantages of using XHTML (as application/xhtml+xml) Allows direct interleaving of other XML formats like MathML and SVG. Is theoretically faster to parse. The difference is negligible in practice though. * Paragraph needs some polishing.
