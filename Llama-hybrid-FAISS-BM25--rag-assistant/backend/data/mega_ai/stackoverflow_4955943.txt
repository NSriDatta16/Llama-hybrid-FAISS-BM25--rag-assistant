[site]: stackoverflow
[post_id]: 4955943
[parent_id]: 4924327
[tags]: 
putting your comments together, I tried the following: public class ValidatingAnnotationMethodHandlerAdapter extends AnnotationMethodHandlerAdapter { @Override protected ServletRequestDataBinder createBinder(HttpServletRequest request, Object target, String objectName) throws Exception { return new ServletRequestDataBinder(target, objectName) { @Override public T convertIfNecessary(Object value, Class requiredType) throws TypeMismatchException { try { return super.convertIfNecessary(value, requiredType); } catch (RuntimeException e) { throw new ControllerException("Could not parse parameter: " + e.getMessage()); } } @Override public T convertIfNecessary(Object value, Class requiredType, MethodParameter methodParam) throws TypeMismatchException { try { return super.convertIfNecessary(value, requiredType, methodParam); } catch (RuntimeException e) { throw new ControllerException("Could not parse parameter: " + e.getMessage()); } } }; } ControllerException is a custom exception which is catched by an @ExceptionController annotated method (I use this exception in all validator classes). Hope you like it, Jan
