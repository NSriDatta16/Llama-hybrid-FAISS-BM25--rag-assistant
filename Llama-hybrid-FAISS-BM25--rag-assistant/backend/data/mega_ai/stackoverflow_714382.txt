[site]: stackoverflow
[post_id]: 714382
[parent_id]: 714246
[tags]: 
Neil and Markus' answers are spot on. In Windows, we integrate continuously. Our source code control system (we call it "Source Depot") is hierarchical with "WinMAIN" being at the top, and a tree of branches underneath it that general correspond to the organizational structure. In general, changes flow up and down this tree in a process of "forward integrations" and "reverse integrations". This happens very regularly - almost every day for the top level branches under winmain, and a bit less often for the lower level branches. Each major branch builds fully every day in at least four flavors. The top level branches build in six flavors. A flavor is something like x86/fre, or x64/chk. We also get some daily pseudo localized builds as well. By "build" I mean build a fully installable Windows client product from source. This happens several hundred times per day. This works well for us - there are two important goals here: maintaining good code flow (we call it velocity) up and down the tree. The idea is that any branch is never too different from WinMAIN. Catching integration errors as early as possible. Markus is very correct that this amortizes integration costs over the life of the project. For us, this makes the costs a LOT lower than they would be if we deferred costs more toward the ends of cycles. This is how things used to work. Not to air too much dirty laundry, but when I started in Windows about 5 1/2 years ago, getting a build out took a very, very long time. They now happen every day, like clock work. The Windows Engineering Tools and Release group (WETR) gets all the credit for this. As many others have suggested in various forums - regular integration and full daily automated builds are essential for most projects. Note, daily and regular automated test are a whole other topic (its a massive effort as you can imagine).
