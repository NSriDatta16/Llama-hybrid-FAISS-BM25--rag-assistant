[site]: stackoverflow
[post_id]: 2970243
[parent_id]: 2970122
[tags]: 
Statistical Modeling: First, there are statistical computing languages like R which is powerful and open-source, with lots of packages for analysis and plotting. You will find some R packages that relate to finance: http://www.quantmod.com/ https://www.rmetrics.org/ https://www.rmetrics.org/ebooks-tseries Machine Learning and AI to train the system on past data: Weka Data Minig: http://www.cs.waikato.ac.nz/ml/weka/ libsvm (data classifiers http://www.csie.ntu.edu.tw/~cjlin/libsvm/ ) "Artificial Intelligence: Modern Approach" book (code: http://aima.cs.berkeley.edu/code.html ) Backtesting the trading system on past data: More often that not, broker trading platforms will provide facilities for trading automation, in form of scripts and languages with which you can program the logic of the trading "strategy" (some use common languages like Java, some use proprietary ones). They will also provide some minimal support to test the strategy on past data, and get a detailed report on the taken trades and their outcome. Connection to broker and System Testing: Either you use some broker-proprietrary trading API, or go with the more standardized FIX . Building a FIX server that does a quotation ticks playback to your trading system (which in this case will be a FIX client) is also a very good form of validation of the system. Most reputable ECN s will provide FIX access. So this is more portable than any other interface. QuickFIX/J is a full featured messaging engine for the FIX protocol. It is a 100% Java open source implementation of the popular C++ QuickFIX engine. http://www.quickfixj.org/
