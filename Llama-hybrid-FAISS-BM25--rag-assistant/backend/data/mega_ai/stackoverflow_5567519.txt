[site]: stackoverflow
[post_id]: 5567519
[parent_id]: 
[tags]: 
Why is this numpy array operation so slow?

I am a python beginner and I am trying to average two NumPy 2D arrays with shape of (1024,1024). Doing it like this is quite fast: newImage = (image1 + image2) / 2 But now the images have a "mask" that invalidate certain elements if set to zero. That means if one of the elements is zero, the resulting element should also be zero. My trivial solution is: newImage = numpy.zeros( (1024,1024) , dtype=numpy.int16 ) for y in xrange(newImage.shape[0]): for x in xrange(newImage.shape[1]): val1 = image1[y][x] val2 = image2[y][x] if val1!=0 and val2!=0: newImage[y][x] = (val1 + val2) / 2 But this is really slow. I did not time it, but it seems to be slower by a factor of 100. I also tried using a lambda operator and "map", but this does not return a NumPy array.
