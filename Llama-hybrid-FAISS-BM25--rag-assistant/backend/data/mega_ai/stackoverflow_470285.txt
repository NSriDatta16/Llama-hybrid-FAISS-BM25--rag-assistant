[site]: stackoverflow
[post_id]: 470285
[parent_id]: 
[tags]: 
"MouseDragged" but NSOpenGlView not refreshed until "MouseUp"

I have a curious problem about an App which MainView is inherited from NSOpenGlView. I am able to draw many things in it, like a basic OpenGL tutorial.... but when I try to implement a basic trackball, it looks like the app waits until I release the mouse button before it refreshes my view... even if I call directly the "DrawRect" callback from the "MouseDragged" callback, it acts the same. Then, I really can't find out how to do such a basic thing and what is the problem about my solution.. Any idea? My NSOpenGLVIew has double buffer, and and additional depth buffer. Here are the main messages. //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// - (void)mouseDragged:(NSEvent *)theEvent { //[[self openGLContext] makeCurrentContext]; float curPos[3], dx, dy, dz; dx = curPos[0] - lastPos[0]; dy = curPos[1] - lastPos[1]; dz = curPos[2] - lastPos[2]; angle = 90.0 * sqrt(dx*dx + dy*dy + dz*dz); axis[0] = lastPos[1]*curPos[2] - lastPos[2]*curPos[1]; axis[1] = lastPos[2]*curPos[0] - lastPos[0]*curPos[2]; axis[2] = lastPos[0]*curPos[1] - lastPos[1]*curPos[0]; //glutPostRedisplay(); //[self drawRect:self.bounds]; // different attempts [self setNeedsDisplay:YES]; // //[self display]; } #pragma mark Mouse Handling - (void)mouseDown:(NSEvent *)theEvent { m_PreviousMouseLoc = [self convertPoint:[theEvent locationInWindow] fromView:nil]; ptov(m_PreviousMouseLoc.x,m_PreviousMouseLoc.y,m_width,m_height,lastPos); } //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// - (void)mouseUp:(NSEvent *)theEvent { [self setNeedsDisplay:YES]; } //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// void ptov(int x, int y, int width, int height, float v[3]){ float a,d; // project x,y onto 1/2 sphere centered within width and height v[0] = (2.0*x - width)/ width; v[1] = (height - 2.0*y)/ height; d = sqrt(v[0]*v[0] + v[1]*v[1]); v[2] = cos((PI/2)*((d
