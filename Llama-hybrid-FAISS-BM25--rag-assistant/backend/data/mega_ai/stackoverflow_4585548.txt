[site]: stackoverflow
[post_id]: 4585548
[parent_id]: 
[tags]: 
Exchange BSON data with asp page

Good day. What am I trying to do is to exchange serialized data between client application and asp.net page. I use the following classes for exchange: public class Send { public Guid guidField; public string stringField1; public string stringField2; public byte[] data; } and public class Receive { public Guid guidField; public byte[] data; } On client side I use the following code to make a request: public Receive Exchange(Send send) { Receive receive = new Receive(); string address = "example.org"; HttpWebRequest client = (HttpWebRequest)WebRequest.Create(address); client.ContentType = "application/x-www-form-urlencoded"; client.Timeout = 90000; client.Method = "POST"; client.UserAgent = "AgentMe"; try { Stream stream = client.GetRequestStream(); PackSend(stream, send); stream.Flush(); stream.Close(); var response = client.GetResponse(); Stream outputStream = response.GetResponseStream(); UnpackReceive(outputStream, out receive); } catch (WebException ex) { } return receive; } On server side I do it similarly but in the opposite direction: protected void Page_Load(object sender, EventArgs e) { Stream inputStream = Request.InputStream; Send send; UnpackSend(inputStream, out send); // here goes some useful work Receive receive = Process(send); Response.ContentType = "application/x-www-form-urlencoded"; Stream stream = Response.OutputStream; PackReceive(stream, sent); Response.End(); } For packing and unpacking data I use Newtonsoft.Json : static void PackSend(Stream stream, Send message) { BsonWriter writer = new BsonWriter(stream); JsonSerializer serializer = new JsonSerializer(); serializer.Serialize(writer, message); writer.Flush(); writer.Close(); } void UnpackSend(Stream stream, out Send message) { BsonReader reader = new BsonReader(stream); JsonSerializer serializer = new JsonSerializer(); message = serializer.Deserialize (reader); } The code for PackReceive/UnpackReceive is analogous. When I use ContentType = "application/x-www-form-urlencoded" I'm able to do exchange but if only public byte[] data field size doesn't exceed ~1200 bytes. If size is larger I get Internal Server error 500 doing request. Using ContentType = "text/xml" ; any size of "public byte[] data" field is handled properly on server side. Useful work is done but when server tries to write into response stream I guess error occurs and automagicly request is repeated so client application is stuck, flooding server with multiple similar requests without throwing any error. ContentType = "application/octet-stream" - shows the same behavior as "text/xml". Can anyone suggest a proper ContentType string or give an advice how to proper handle this situation. Thank you.
