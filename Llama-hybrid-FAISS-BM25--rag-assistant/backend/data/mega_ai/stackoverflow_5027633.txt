[site]: stackoverflow
[post_id]: 5027633
[parent_id]: 5027045
[tags]: 
Robert is right that "inheritance" doesn't mean anything different in JS, but it is implemented differently than in many other languages. To say that an object or class inherits from another means that members (attributes, behavior) can be defined on the parent but accessed through the child. Before you ask what "members" means, objects are aggregate types (aka composite types ), and members are the components. JS was originally designed with prototype based inheritance , where parents are objects, but class based inheritance (of a sort) can be shoehorned in by various means. Classes (and thus class inheritance) may be added to later ECMAScript standards, which is the standard that defines JS, along with other languages such as ActionScript. ActionScript already supports classes. Closely related to "inheritance" is "extension", where a child extends a parent by adding or overriding members.
