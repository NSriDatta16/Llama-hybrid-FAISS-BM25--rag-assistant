[site]: stackoverflow
[post_id]: 780274
[parent_id]: 779788
[tags]: 
I could not find any sample code, but found an article that gives a high-level explanation of their process (from this other page about Flickr's feature to search for images with similar colors). Apparently, Google also lets you do this with their image search (but I don't know if that is from metadata tags or actual color matching). Now to the actual answer: Instead of just storing the average or aggregate color for an image, you will need to store a "color signature" of the image. My first (educated guess) idea would entail these steps: Generate the histogram for each color band from the image Generate some factors that describe each histogram curve (mean, variance, std-dev, etc? -- these factors will make up your digital signature of your image) Store those factors in your database (and each of these factors would have an index in the DB) Then, you would take your input (either a color, range of colors, or source image), run your histogram algorithm against that source, and search for matches to your computed factors.
