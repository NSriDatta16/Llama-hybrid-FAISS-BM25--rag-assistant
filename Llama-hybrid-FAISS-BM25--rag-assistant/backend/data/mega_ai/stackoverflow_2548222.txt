[site]: stackoverflow
[post_id]: 2548222
[parent_id]: 2548198
[tags]: 
In javascript you concatenate strings using + , but you don't even need that here. I would also use parseInt to extract the values. Total and vendors also need to be initialized. Finally, each will give you the index as a argument so there's no need for your counter. Edit : Note I changed the assignment to the returnDb array. Your original assigns an array containing an array of values to each array element in returnDb. The new code assigns an object with three properties (state, num, email) to each element in returnDb. Your original may have been correct -- I don't know how you are using it -- but I think the object approach is more usable in most instances. var returnDb = new Array(); var returnState = ''; var returnNum = ''; var returnEmail = ''; var total = 0; var vendors = 0; $("input:checked").each(function(i) { var value = parseInt( $(this).attr("title") ); var value_vendors = parseInt( $(this).attr("title") ); // These are causing my script to stop returnState = $(this).closest('tr').find('td:eq(1)').text(); returnNum = $(this).closest('tr').find('td:eq(2)').text(); returnEmail = $(this).closest('tr').find('td:eq(3)').text(); //returnDb[i] = [[returnState, returnNum, returnEmail]]; returnDb[i] = { state: returnState, num: returnNum, email: returnEmail }; total += value; vendors += value_vendors; });
