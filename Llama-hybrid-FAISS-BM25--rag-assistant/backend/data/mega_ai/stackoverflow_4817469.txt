[site]: stackoverflow
[post_id]: 4817469
[parent_id]: 4817396
[tags]: 
I would definitely try to do this on the server - try to avoid dragging down 400'000 rows just to calculate a single number (in the end). Also: I would try to do it without a cursor , if ever possible. Cursors are a nightmare on SQL Server - they should be avoided at all costs. In your case - not knowing your detailed table structure - you could definitely do e.g. a recursive CTE (Common Table Expression) that starts with the first element and a total distance of 0.0, and then recursively sums up all other way points, calculating the distance between point (x+1) and point x, and summing up to the previous total. At the end, you should have a CTE that shows all way points, all distances between any two waypoints, and the total distance of the entire journey. That CTE would be something like: ;WITH Waypoints AS ( -- anchor your query SELECT WaypointID, PrevWaypointID, Long, Lat, 0.0 as Distance, 0.0 as SumOfDistance FROM dbo.Waypoint WHERE PrevWaypointID IS NULL -- or some other condition UNION -- recurse SELECT WaypointID, Long, Lat, dbo.GetDistanceBetween(wp.WaypointID, pts.WaypointID), -- distance pts.SumOfDistance + dbo.GetDistanceBetween(wp.WaypointID, pts.WaypointID) -- sum FROM dbo.Waypoint wp INNER JOIN Waypoints pts ON wp.PrevWaypointID = pts.WaypointID WHERE (some condition; ID = 1 or PreviousWaypointID IS NULL or something) ) SELECT * FROM Waypoints
