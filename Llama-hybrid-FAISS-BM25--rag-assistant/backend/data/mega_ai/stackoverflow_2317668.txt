[site]: stackoverflow
[post_id]: 2317668
[parent_id]: 
[tags]: 
NHibernate query problem

these are my entities (simplified): public class IdentificationRequest { private int id; private ICollection stateHistoryItems; public virtual string Id { get { return id; } private set { id = value; } } public virtual IEnumerable StateHistoryItems { get { return stateHistoryItems; } private set { stateHistoryItems = new List (value); } } public void ChangeState(IdentificationRequestState state) { // state transition here var stateHistoryItem = new IdentificationRequestStateHistoryItem(state, this); stateHistoryItems.Add(stateHistoryItem); } } public class IdentificationRequestStateHistoryItem { private int id; private IdentificationRequestState state; private EntityTimestamp timestamp; public virtual string Id { get { return id; } private set { id = value; } } public virtual IdentificationRequestState State { get { return state; } private set { state = value; } } public virtual EntityTimestamp Timestamp { get { return timestamp; } private set { timestamp = value; } } } public class IdentificationRequestState { // possible states are // Received, then id = 10 // Finished, then id = 20 private int id; private string name; public virtual string Name { get { return name; } private set { name = value; } } public virtual string Id { get { return id; } private set { id = value; } } } public class EntityTimestamp { private DateTime createdOn; public virtual DateTime CreatedOn { get { return createdOn; } private set { createdOn = value; } } private IUser createdBy; public virtual IUser CreatedBy { get { return createdBy; } private set { createdBy = value; } } private DateTime changedOn; public virtual DateTime ChangedOn { get { return changedOn; } private set { changedOn = value; } } private IUser changedBy; public virtual IUser ChangedBy { get { return changedBy; } private set { changedBy = value; } } } So the above reads like the following and is also designed like that in the database. An IdentificationRequest can track its IdentificationRequestState transitions. So each time a new IdentificationRequestState is assigned, a new IdentificationRequestStateHistoryItem is created and put into a collection of multiple history items. That means, that the current IdentificationRequestState is the last added one (expressed by the createdOn date). So now my question is, how a query would look like, that lists all IdentificationRequest 's whos current state is Received, or Finished. This is what I got so far: private ICollection GetByCurrentState(IdentificationRequestState state) { var session = GetCurrentSession(); var subCriteria = DetachedCriteria.For(typeof(IdentificationRequestStateHistoryItem)) .SetProjection(Projections.Property("identificationRequest.Id" )); subCriteria.Add(Restrictions.Eq("State", state)); var criteria = session .CreateCriteria(typeof (IdentificationRequest)) .Add(Subqueries.PropertyIn("Id", subCriteria)) .SetResultTransformer(new NHibernate.Transform.DistinctRootEntityResultTransformer()); return criteria.List (); } But when using this query and when search for an identification request with its current state Received, I also get requests with its current state Finished since the request had the state Received before. So I need to do something with Max(CreatedOn) or so...? NHibernate mappings:
