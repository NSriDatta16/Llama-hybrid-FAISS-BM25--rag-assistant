[site]: stackoverflow
[post_id]: 2399371
[parent_id]: 2399355
[tags]: 
Several possibilities here, but the most obvious seems to be with HMMs, i.e. Hidden Markov Models . The NLTK kit includes [at least] one module for HMMs, although I must admit I never used it. Another possible snag is that AFAIK, NTLK is not yet ported to Python 3.0 This said, and while I'm quite keen on using NLP techniques where applicable, I think that a process which would use several paradigms, including some NLP tricks may be a better solution for this particular problem. For example, storing even a reduced dictionary of common family names (and first names) in a traditional database may offer both a more reliable and more computationally efficient way of filtering a significant portion of the input data, leaving precious CPU resources to be spent on less obvious cases.
