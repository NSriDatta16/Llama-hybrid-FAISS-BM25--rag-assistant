[site]: stackoverflow
[post_id]: 5404012
[parent_id]: 5402288
[tags]: 
Your example has the number commented out: #pragma warning disable // 0444 Eh, don't: #pragma warning disable 444 To disable it globally, you use /nowarn:444 (comma-separate other warnings to disable) with the compiler. If using an IDE there'll probably be somewhere in the project properties to set warnings to disable (Visual Studio has it on the "Build" tab, SharpDevelop has it on the "Compiling" tab, other IDEs will likely have it somewhere similar). Nant scripts have a element as an allowed child of (which also has a nowarn attribute, but that's deprecated). I'd avoid global disabling though, after all, doing something that triggers CS0444 is normally a bad idea. In your case above you've a good reason for doing so (you need functionality the compact version doesn't give you) and know that's what you are doing, but if you'd accidentally done it somewhere else, and you'd suppressed warnings, you'll be none the wiser. Edit: For that matter, I've a policy that I never disable a warning without at least a short comment as to why. An uncommented disabling of a warning can mean "I did something silly here, and then disabled the warning rather than fixed it", the comment can make it clear that this isn't the case, and that there's nothing in need of a fix.
