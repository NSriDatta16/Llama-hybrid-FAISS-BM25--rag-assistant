[site]: stackoverflow
[post_id]: 3664335
[parent_id]: 3664272
[tags]: 
Here's how the push_back method in vector works: The vector allocates X amount of space when it is initialized. As stated below it checks if there is room in the current underlying array for the item. It makes a copy of the item in the push_back call. After calling push_back X items: The vector reallocates kX amount of space into a 2nd array. It Copies the entries of the first array onto the second. Discards the first array. Now uses the second array as storage until it reaches kX entries. Repeat. If you're not reserving space its definitely going to be slower. More than that, if it's expensive to copy the item then 'push_back' like that is going to eat you alive. As to the vector versus array thing, I'm going to have to agree with the other people. Run in release, turn optimizations on, and put in a few more flags so that the friendly people at Microsoft don't #@%$^ it up for ya. One more thing, if you don't need to resize, use Boost.Array.
