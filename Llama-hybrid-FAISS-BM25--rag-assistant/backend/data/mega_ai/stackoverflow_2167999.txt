[site]: stackoverflow
[post_id]: 2167999
[parent_id]: 2167895
[tags]: 
P/Invoke can handle marshaling a managed delegate to a function pointer. So if you expose API's that register a call back function from your DLL and in C# pass a delegate to that function. There is an example on MSDN of doing this with the EnumWindows function. In that article be careful to pay attention to the line in point 4 that states: If, however, the callback function can be invoked after the call returns, the managed caller must take steps to ensure that the delegate remains uncollected until the callback function finishes. For detailed information about preventing garbage collection, see Interop Marshaling with Platform Invoke. What that is saying is that you need to make sure that your delegate isn't garbage collected until after the managed code is done calling it by either keeping a reference to it in your code, or pinning it.
