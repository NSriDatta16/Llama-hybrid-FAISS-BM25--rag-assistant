[site]: stackoverflow
[post_id]: 5076028
[parent_id]: 
[tags]: 
Basic mongodb theory

This will no doubt be a stupid question, and we can all laugh about how stupid it is when the answer points out the glaring simplicity of it all, but being firmly indoctrinated in the art of relational databases I can't seem to get my head entirely around mongodb - no matter how many articles I read or videos I watch. Here's my situation. I have a project which potentially will have millions of users. Core features: Have a list of users of 4 different types One type of these users can create events Other user types can apply to be perform at the event (there is then a request system between the applying party and organising party to agree upon terms) Other user types can attend the event All user types can follow the event Every user can upload an unlimited amount of images to their "gallery" Now I would instantly know how to go about normalising a MySQL database and joining queries to get the data I require, but what about mongodb? Since all of this information is relational to the users do I just create a single collection for users? For each user do I create a document? Does this document store all details of events, requests and images relevent to that user - or just some sort of id for these things that I then cross reference? If not wouldn't this replicate a lot of data - i.e. if I had to replicate all event data for every user following/attending/performing at that event and put it in that users document (I'm sure this isn't the case - but without joins how do I get "join" the user and all event data if events are stored in another collection?). What about images? A users document can be 16mb - but if I allow unlimited images and everything related to the user was stored in a single document then the images alone could grow larger than a single document? I'm sure that I'm not understanding pretty vital to understanding mongodb - enlighten me! Thanks.
