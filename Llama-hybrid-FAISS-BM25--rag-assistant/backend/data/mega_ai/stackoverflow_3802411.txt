[site]: stackoverflow
[post_id]: 3802411
[parent_id]: 3799219
[tags]: 
It looks like what you have in your requirement is to at the very least store a userID, username and a dynamic list of items for a user. You would need a schema which can hold the necessary information you need. A simple schema can allow for very fast retrieval and complex schemas can have a lot of integrity built in. There are pro's and con's for both different designs, and depending on what your requirement is, one schema design would work better than another. Here are some examples that you can consider (user - item schema relationship): many - many relationship schema requires that a user to have at least one item list if xml format changes many updates will be needed users can have the same items as other users will get you a list of items for a user without the need of any joins User userID userName Items (xml data type) one - many relationship schema example requires that a user to have at least one item list restricts users having the same unique item User userID userName ListItemID List ListID ListItemID ItemID Item one - many relationship schema example restricts users having the same unique item does not require a user to have one or many items User userID userName Item ItemID UserID Item many - many relationship schema example allows for a user to share the same item that other users have it can be very fast to retrieve information lots of redundant information. user and item information is stored multiple times if the details of a user changes, you will need to make updates to one or many records if the details of a item changes you will need to make updates to one or many records UserItems UserItemID userID userName ItemID Item many - many relationship schema example: this allows for a users to share the same unique item does not require a user to have a list of items it requires joining 3 tables to get information on the items the users have if user information changes only 1 record to update if the details of an item changes, only one record to update if user item list changes, the number of changes would be the number of updates/deletes/inserts needed User userID userName ItemList ItemListID UserID ItemID Item ItemID Item many - many relationship schema example: this allows for a users to share the same unique item requires that a user have a list of items (one or more) it requires joining 3 tables to get information on the items the users have if user information changes only 1 record to update if the details of an item changes, only one record to update if user item list changes, the number of changes would be the number of updates/deletes/inserts needed User userID userName ListItemID List ListID ListItemID UserID ItemID Item ItemID Item
