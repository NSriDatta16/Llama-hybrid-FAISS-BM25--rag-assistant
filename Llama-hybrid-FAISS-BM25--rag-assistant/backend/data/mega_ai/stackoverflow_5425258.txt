[site]: stackoverflow
[post_id]: 5425258
[parent_id]: 5424685
[tags]: 
If you have security concerns, they aren't unique to ajax, but there are simple ways to make things harder to mess with. 1) As Diodeus says - absolutely don't let people use your services without them being authenticated via a session. Same as any other page on a web site that requires you to be logged in. 2) Make session hijacking harder by embedding client info into the session key (cookie) and verifying it at the server, e.g. IP address, browser version. This can still be spoofed, though. 3) If a particular session makes more than x requests in a certain time period (e.g. 10 in a minute), log them out and ban them for an hour. Set a higher limit to ban them until restored by an admin. Have the code send yourself an email whenever this happens so you know if you ever have a problem. 4) If you are really worried, then use SSL. This is really the only way to absolutely prevent session hijacking (other than implementing your own private key encryption mechanism for session data). 5) If not using SSL you can't stop the possibility of session hijacking, but you CAN protect your user's passwords from being snooped easily. When authenticating, do this: Client script requests salt from the server (a random string) Server sends salt to client and remembers it with the session Client hashes the password using Sha-256 e.g., with the salt, and authenticates with their username & hashed password. Server hashes password associated with the user at its own end using same salt, and authenticates if it matches the hash sent by the client. Server forgets salt it used this one time. This way, someone watching a session could only see the hashed password, and because the hash is different every time, they couldn't actually log in again using that hash against your service. You still can't stop them from hijacking the session, but you can stop them from seeing your users' passwords or being able to log in on their own. In reality, session hijacking is not all that common, though the high-profile implementation is, of course, facebook via wifi. If someone comes out with a Firefox plugin to hack your social network, then you should be thrilled because you know you've made it.
