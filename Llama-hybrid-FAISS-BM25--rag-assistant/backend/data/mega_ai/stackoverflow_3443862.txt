[site]: stackoverflow
[post_id]: 3443862
[parent_id]: 
[tags]: 
Call dll function

I have to acces a c written dll function, prototyped as: #include "extcode.h" #pragma pack(push) #pragma pack(1) #ifdef __cplusplus extern "C" { #endif void __stdcall PSA_Send_BO(char hostname[], char BO_NumberIn[], char BO_NumberOut[], int16_t *Status, char Error_text[], int32_t *Error_code, int32_t *length_BO_NumberOut, int32_t *length_error_text); long __cdecl LVDLLStatus(char *errStr, int errStrLen, void *module); #ifdef __cplusplus } // extern "C" #endif #pragma pack(pop) My Delphi code: procedure Aaa(HostNaam: PChar; BO_To: PChar; BO_From: PChar; ErrorText: PChar; var OutputLength: LongInt; var ErrorLength: LongInt; var ErrorNumber: Longint ) ; far; stdcall; external 'aaa.dll' {$R *.dfm} procedure TForm1.Button1Click(Sender: TObject); var BO_From, ErrorText: Array[0..999] of Char; ErrorLength, BoLength, ErrorNumber: LongInt; begin Aaa(PChar(edtHostName.Text), PChar(edtBoNumber.Text), BO_From, ErrorText, BoLength, ErrorLength, ErrorNumber); Label1.Caption := 'BO_From = ' + BO_From ; Label2.Caption := 'BoLength = ' + IntToStr(BoLength); Label3.Caption := 'ErrorText = ' + ErrorText; Label4.Caption := 'ErrorLength = ' + IntToStr(ErrorLength); Label5.Caption := 'ErrorNumber = ' + IntToStr(ErrorNumber); end; When I run this example, the returned strings BO_From and ErrorText are empty, all other returned parameters are OK. When I comment one of the lines out where I do the display of the returned parameters, the strings are displayed well! Stepping into the code with the debugger has similar effect. Copying all returned parameters before displaying them has no effect. The length of the returned strings is far below the declared size. Does someone has any clue? Thanks in advance for any help, Cock
