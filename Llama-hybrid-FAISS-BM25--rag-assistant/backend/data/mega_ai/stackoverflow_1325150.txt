[site]: stackoverflow
[post_id]: 1325150
[parent_id]: 1324942
[tags]: 
This also would work if you want to do one-by-one initialization struct A { int a; float b; } A[2] as; as[0] = A(0, 0.0f); as[1] = A(5, 5.2f); void main() {} Every struct gets a default constructor taking each of the args in order if you don't explicitly define a constructor (i.e. static opCall). See StructLiteral But the down side is this will probably initialize the array to the default value first then change the values one by one. So it'll probably be more efficient to use the actual initialization syntax if you know all the values up front.
