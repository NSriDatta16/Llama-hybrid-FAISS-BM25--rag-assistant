[site]: stackoverflow
[post_id]: 464316
[parent_id]: 463593
[tags]: 
First, I second the "Working Effectively with Legacy Code" recommendation Jeffrey Frederick gave. As you stated in the question, you cannot change your code because you currently have no unit tests available to detect regressions, and you cannot add unit tests because your codebase is not unit-testable. In this situation, you can create characterization tests : end-to-end automatic tests that would help you detecting changes in the external behavior of your software. Once those are in place, you can start to slowly modify the code. However, putting your HUGE code base under test is an enormous effort, highly risked, and you'll probably burn out the team doing this as they will have to produce strong efforts with low reward in terms of test coverage. Putting the entire code base under test is an endless effort. Instead, develop new capability out of the code base , so that it won't hinder you. Once the new code is fully tested, integrate it in the code base. Also try to create unit-tests every single time you fix a problem in the code base. It will be hard the first times, but it will get easier once you'll have some unit testing environment ready to be setup.
