[site]: stackoverflow
[post_id]: 1137214
[parent_id]: 1137167
[tags]: 
One of the more popular approaches is to write the unit-tests as you modify the code. All new codes gets unit tests, and for any code you modify you first write its test, verify it, modify it, re-verify it, and then write/fix any tests that you need due to your modifications. One of the big advantages of having good unit test coverage is being able to verify that the changes you make don't inadvertently break something else. This approach allows you to do that, while focusing your efforts on your immediate needs. The alternate approach I've employed is to develop my unit tests via Co-Ops :)
