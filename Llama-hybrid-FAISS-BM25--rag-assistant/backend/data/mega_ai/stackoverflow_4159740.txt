[site]: stackoverflow
[post_id]: 4159740
[parent_id]: 4158854
[tags]: 
positiveCounter(seq) if typeof(first(seq)) == num if first(seq) > 0 return positiveCounter(rest(seq) + 1 else return positiveCounter(rest(seq) else #Handle Errors Somehow. Pseudocode for the recursive algorithm I would use. I don't know either Scheme or Clojure (which your square brackets remind me of). Or you could write a considerably snazzier applicative approach in Common Lisp- extra newlines for readability. (defun positiveCounter (seq) (reduce #'+ (mapcar #'(lambda (x) (if (atom x) (if (> x 0) 1 0) 0)) seq)))
