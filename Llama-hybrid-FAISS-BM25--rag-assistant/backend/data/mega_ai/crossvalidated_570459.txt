[site]: crossvalidated
[post_id]: 570459
[parent_id]: 570455
[tags]: 
To be able to learn an algorithm (any algorithm capable of learning) needs to be able to somehow track its progress so that it knows if it improves or not. For this, the algorithm needs a cost function. Regardless if it is a supervised or unsupervised learning problem, you always need some kind of function that tells you if you are going "in the right direction". Sometimes the cost function may be implicit (e.g. when calculating an arithmetic average, you are finding a value that minimizes squared error), but it is always there. Even if you generated a bunch of random solutions and just picked "the best one", you would need a cost function that tells you which one is the best. Since this is a very basic question, I'd recommend you to start with some introductory machine learning course or handbook that explains this in greater detail.
