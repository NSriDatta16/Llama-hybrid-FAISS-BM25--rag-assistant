[site]: datascience
[post_id]: 41424
[parent_id]: 23334
[tags]: 
I have taken a deep foray into the world of genetic algorithms and think that your inclusion of this tag may not be readily apparent in your question, but inadvertently may provide the best solution to your problem. I would suggest using a implementation of either hyperneat, or es-hyperneat, both of which evolve genotype cppns that in turn build phenotype neural network substrates, if you train and evolve your cppn with variable numbers of inputs I would suspect the cppn to evolve and to account for that (this may be by grouping inputs to create subnets, who knows). I currently use this to solve a similar problem that also has variable number of inputs, as long as you don't have a variable number of dimensions in your node layouts (im not sure how this could even happen) you should be able to use these algorithms.
