[site]: crossvalidated
[post_id]: 61469
[parent_id]: 
[tags]: 
Weighted least squares regression on random data, giving large t-statistics more often than "expected"

My question is about the distribution of the t-statistics in Weighted Least Squares regression. I'm finding that for a fixed Y and random X and W , the " t value " (t-statistic) reported by R (and separately calculated by hand in matlab) has an absolute value greater than 2 close to 10% of the time (as opposed to ~5%, which would be expected for random data). Here is my code: N = 100 runs = 10000 Y = rnorm(N); tstats = rbind(lapply(seq(10), function(X){W=abs(rnorm(100,1)); X = rnorm(100,1); summary(lm(Y~X,weights=W))$coefficient[2,3] })) This code is just running through a loop where for each row of M (which is a 10,000 x 100 random matrix) --- call the row in a given iteration X ---, it gets a new set of random (non-negative) “weights”, and then regresses Y against X using the weights W , and pulls out the "t value" (which is element (2,3) of the coefficients). Since the W’s are random each time, the average correlation between Y and W should be 0 (if that possibly had an affect). What's worse, even if I skip the weights, the following regression seems to have |t-statistic| greater than 2 about 10% of the time as well: lm( I(Y*sqrt(W)) ~ I(X*sqrt(W)) ) This regression would have the same inputs, except I'm keeping the intercept (constant vector) and not multiplying it by sqrt(W) as in the weighted regression case. This especially perplexes me. Alternatively, if you use the code above but replace the weighted lm() there with lm( Y ~ X ) You will see that the coefficient is significant only 5% of the time. What is going on here?
