[site]: stackoverflow
[post_id]: 1016744
[parent_id]: 1016676
[tags]: 
The problem in your code is that you want to print a string (char*) but you're giving it a char. Remember that P is an array of char*. When you de-reference it once, you get a char*; when you do it a second time, you just get the char at the beginning of the char*. When you try to use the char value with the %s specifier, it treats the value as a pointer, and tries to dereference that value. Hence, it will try to print the "string" at the memory location X, where X is the value of the char (i.e. a value from 0 to 255). This gives you an access violation/segmentation fault (the error you see at runtime). The best workarounds for this, as noted by Cătălin Pitiș and RBerteig , are to either: pass another parameter to specify the length of the array add an additional null at the end of the array.
