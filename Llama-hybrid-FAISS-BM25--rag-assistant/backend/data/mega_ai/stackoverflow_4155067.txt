[site]: stackoverflow
[post_id]: 4155067
[parent_id]: 4154924
[tags]: 
Actually, you don't need to use Normal whatsoever. A SparseArray plus a "normal" matrix gives you a "normal" matrix. Using Band is, on initial inspection, the most flexible approach, but an effective (and slightly less flexible) alternative is: DiagonalMatrix[newDiagList] + ReplacePart[mat, {i_,i_}->0] DiagonalMatrix also accepts a second integer parameter which allows you to specify which diagonal that newDiagList represents with the main diagonal represented by 0. The most elegant alternative, however, is to use ReplacePart a little more effectively: the replacement Rule can be a RuleDelayed , e.g. ReplacePart[mat, {i_,i_} :> newDiagList[[i]] ] which does your replacement directly without the intermediate steps. Edit : to mimic Band 's behavior, we can also add conditions to the pattern via /; . For instance, ReplacePart[mat, {i_,j_} /; j==i+1 :> newDiagList[[i]] replaces the diagonal immediately above the main one ( Band[{1,2}] ), and ReplacePart[mat, {i_,i_} /; i>2 :> newDiagList[[i]] would only replace the last two elements of the main diagonal in a 4x4 matrix ( Band[{3,3}] ). But, it is much simpler using ReplacePart directly.
