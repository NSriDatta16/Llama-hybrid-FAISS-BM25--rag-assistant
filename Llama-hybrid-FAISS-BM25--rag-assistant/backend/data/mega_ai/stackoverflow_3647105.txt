[site]: stackoverflow
[post_id]: 3647105
[parent_id]: 3647053
[tags]: 
With regards to this: And "inline" allows you to define the function multiple times in the program. I can think of one instance where this is useful: Making copy protection code harder to crack. If you have a program that takes user information and verifies it against a registration key, inlining the function that does the verification will make it harder for a cracker to find all duplicates of that function. As to other points: inline is just a recommendation to compiler, but there are #pragma directives that can force inlining of any function. Since it's just a recommendation, it's probably safe to explicitly ask for it and let the compiler override your recommendation. But it's probably better to omit it altogether and let the compiler decide. The obfuscation mentioned above is one possible benefit of inlining. As others have mentioned, inline would actually increase the size of the compiled code.
