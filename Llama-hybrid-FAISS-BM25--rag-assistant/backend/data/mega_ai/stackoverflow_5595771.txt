[site]: stackoverflow
[post_id]: 5595771
[parent_id]: 5592883
[tags]: 
Ok, i found a solution derived from http://www.qtcentre.org/threads/39839-QTextBrowser-height-adjusted-to-content . Is there a simpler/mor elegant solution? #include #include #include #include #include #include #include #include class MyBrowser : public QTextBrowser { private: QTextDocument *doc; public: MyBrowser(const QString &text, QWidget *parent = 0) : QTextBrowser(parent) { doc = new QTextDocument(this); doc->setHtml(text); setDocument(doc); } void adjust() { QMargins margins = contentsMargins(); int width = size().width() - margins.left() - margins.right() - doc->documentMargin()*2; doc->setPageSize(QSizeF(width,-1)); int height = doc->size().height() + margins.top() + margins.bottom(); setMaximumHeight(height); setMinimumHeight(height); } void showEvent(QShowEvent *) { adjust(); } void resizeEvent(QResizeEvent *) { adjust(); } }; int main(int argc, char *argv[]) { QApplication app(argc, argv); QScrollArea scrollArea; scrollArea.setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff); scrollArea.setWidgetResizable(true); QWidget *scrollWidget = new QWidget; QVBoxLayout *layout = new QVBoxLayout; for(int i=0;i text "; for(int j=0;j addWidget(browser, 0, 0); } scrollWidget->setLayout(layout); scrollArea.setWidget(scrollWidget); scrollArea.show(); return app.exec(); }
