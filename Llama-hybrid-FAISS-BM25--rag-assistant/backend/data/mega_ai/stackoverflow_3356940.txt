[site]: stackoverflow
[post_id]: 3356940
[parent_id]: 3356460
[tags]: 
s = "name1 name2 name3 v1 na v2" s = s.split(' ') names = s[:len(s)/2] values = s[len(s)/2:] names_and_values = zip(names, values) names, values = [], [] [(names.append(n) or values.append(v)) for n, v in names_and_values if v != "na"] names.extend(values) print ' '.join(names) Update Minor improvement after suggestion from Paul. I'm sure the list comprehension is fairly unpythonic, as it leverages the fact that list.append returns None , so both append expressions will be evaluated and a list of None values will be constructed and immediately thrown away.
