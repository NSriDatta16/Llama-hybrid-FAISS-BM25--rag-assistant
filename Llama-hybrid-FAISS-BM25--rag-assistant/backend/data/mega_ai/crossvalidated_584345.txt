[site]: crossvalidated
[post_id]: 584345
[parent_id]: 
[tags]: 
Time Series is not white noise but Random Walk

I have time series data which is as shown below To proceed with this series for building forecasting , I read many places if your data is not white noise and does not have random walk then you can model forecasting , Otherwise if your time series data is either white noise or has random walk then don't use time series forecasting Is above condition has any implication if it is white series or has random walk? However , when I check my time series it has not white noise but has random walk For white noise I checked it using ACF plot fig = plt.figure(figsize = (12,8)) ax1 = fig.add_subplot(211) fig = sm.graphics.tsa.plot_acf(df.Frequencylags = 50, ax= ax1) White noise distributions have approximately 0 autocorrelation at all lags. Above ACF plot does not show any 0 autocorrelation hence time series is not white noise When I check random walk by using 1 differencing and check its ACF plot then no learnable patterns are found in first order differencing. In short, donâ€™t even bother with forecasting. walk_diff = df['Frequency'].diff() fig = plt.figure(figsize = (12,8)) ax1 = fig.add_subplot(211) fig = sm.graphics.tsa.plot_acf(walk_diff.dropna(),lags = 40, ax= ax1) When I do second order differencing then I see lag 1 in ACF plot shows learnable patterns in data once the series is stationary.Is my understanding correct after second order differencing ,ACF plot shows that data is not random walk. So with second order differencing I can go and use forecasting modelling? walk_diff = data_dailies['Frequency'].diff().diff() fig = plt.figure(figsize = (12,8)) ax1 = fig.add_subplot(211) fig = sm.graphics.tsa.plot_acf(walk_diff.dropna(),lags = 40, ax= ax1) My question What an implication on forecasting modelling if your data is not white noise but has random walk by first order difference? What an implication on forecasting modelling if your data is not white noise and neither has random walk by second order differencing? Having with this above confusion when I model using SARMIAX and train it first 0 to 233 days and forecast on 234 to 281 then model give me almost same sum of counts as we have in actual data model=sm.tsa.statespace.SARIMAX(df_train['Frequency'],order=(1, 2, 0),seasonal_order=(0, 1, 1,44),dynamic = False) model_fit = model.fit() print(model_fit.summary()) Upon forecasting df_test['forecast'] = 0 df_test['forecast'] = model_fit.predict(df_test.index.min(),df_test.index.max(),dynamic=False) df_test[['Frequency','forecast']].plot(figsize=(12,8)); print(f'Actual Count {df_test.Frequency.sum()} Vs Predicted Count {df_test.forecast.sum()}') Actual Count 19471 Vs Predicted Count 20968.694112941106
