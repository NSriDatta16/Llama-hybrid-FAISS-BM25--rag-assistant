[site]: stackoverflow
[post_id]: 3740576
[parent_id]: 3469455
[tags]: 
I strongly recommend the use of diagrams/UML as a communication tool as opposed to specifications (see http://martinfowler.com/bliki/UmlMode.html and http://fragmental.tw/2008/11/07/trying-to-write-architecture-specs-that-dont-suck-much-part-i-the-spec/ ). That said, I often have to present diagrams to a larger audience using PowerPoint or Keynote slide decks. In presentations it is very important to keep in mind what the public you are presenting to already know about the architecture and technology and what to you want them to understand. If you present to a group of executives the message has to be abstracted and probably your diagrams should use a very simple notation of boxes and arrows. If you are presenting at your local user group you probably can use more semantic constructs in your diagrams --like aggregations and inheritance-- but you probably will need to abstract-out most of the things that are specific to your company and people from outside don't know about (e.g. replace a module called "XPTO 1.0" with "Legacy Billing System"). Once you know what level of detail you should use you can get a tool. i'd recommend simple diagram tools like OmniGraffle or Visio. If you want more UML features than those tools provide you may try JudeUML, it creates quite clean diagrams that can be easily edited in a proper graphic editor. I also recommend Dan Roam's "The Back of the Napkin" ( http://amzn.to/c5khDx ). It's a very interesting book on how simpler graphic models can be effective.
