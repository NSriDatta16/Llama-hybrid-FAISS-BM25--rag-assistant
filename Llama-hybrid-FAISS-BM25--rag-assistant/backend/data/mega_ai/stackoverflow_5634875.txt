[site]: stackoverflow
[post_id]: 5634875
[parent_id]: 5634523
[tags]: 
Actually you missed two storage classes: auto and register Register doesn't matter here but the default storage class is auto. Auto reserves space for a variable somewhere in the memory (which is usually what you want when you declare a variable). It should be noted that for 'auto variables' new space will be allocated every time the scope of the variable is entered. (i.e. calling the function func() from within func() when func() declares an 'auto' variable will result in two different variables and each call to func() will only know about its own variable. From this follows that auto variables declared at the global scope will be unique (since the scope is enterd only once). Static variables however are always unique. Unique in the sense that space will only be allocated once. This is useful when func() calls func() and you want both function calls to operate on the same variable. Extern variables are simply references to unique variables. You use these when you want to access a global variable declared in a different file. Given the files 1.c and 2.c it does not suffice to declare "int global;" in both files because space would be allocated twice and the name clash would result in a linking error. Hence what you do is in one file to reserve space (using "int global;") and in the other file tell the linker to look for a variable of the name "global" in another file by writing "extern int global;".
