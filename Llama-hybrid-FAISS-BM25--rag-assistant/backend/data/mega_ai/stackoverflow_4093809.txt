[site]: stackoverflow
[post_id]: 4093809
[parent_id]: 4093383
[tags]: 
By the sounds of what your trying to do you can make use of a temp table by inserting your data into it and referencing that table further down in the call stack of your session. So call proc1(insert rows into #MyTable)->proc2(read rows from #MyTable)->proc3 etc.. Most likely your coworker came from a Oracle shop where cursors are optimized and actually used all the time, though still not the ideal solution in most cases. In SQL Server cursors are normally considered the devil due to them not being optimized like they are for Oracle. In SQL Server 2008 and above you can also make use of table valued parameters to pass sets of data in and out of procedures. In reality you could always do this using session scoped temporary tables. Im on SQL Server 2012 and have yet to need to use table valued parameters because temp tables work so well, but I'm sure there are cases where the later may work the same or better. It is always important though in any relational database to leverage set based logic whenever possible and avoid any construct or design that will require you to loop row by row. Granted there are edge cases where maybe that is the only way, but make sure it's the only way.
