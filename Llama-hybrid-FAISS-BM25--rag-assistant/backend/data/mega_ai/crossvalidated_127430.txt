[site]: crossvalidated
[post_id]: 127430
[parent_id]: 127248
[tags]: 
There are two levels, on the implementation side the formula terms and eventually the columns of the design matrix are just a list of strings. In terms of what organizing components, it is a task for getting some meaningful structure into an unordered list of 90 items. To the second: Creating a structure on top of 90 items needs to depend on how this items can be meaningfully categorized. Without knowing anything about the specific application, I would separate it into core variables which are terms that are always included, and the rest defined by a hierarchy that is potentially multidimensional. One possibility is to categorize the latter by topic, variables that reflect spatial features, variables that reflect attributes of the individuals, attributes that reflect general market situation (just to make up a few items), and, secondly, categorize into main effects, interaction effects and non-linearities. This could also be refined, for examples for non-linearities we could sort them and include only optionally only some of them, or any additional variables could be assigned a rank in terms of importance. To the first item in terms of implementation, I would use something that can define a multi-index and hierarchy, for example a dictionary tree or dictionaries of list of strings, so it's easy to build the formulas and order the results by the categories. in python string concatenation formula = ' + '.join([i for i in core_vars + topic_A_main + topic_A_interaction + topic_B_main]) with, for example, topic_A_interaction being the selection of formula terms with topic=='A' and level=='interaction' Except for separating interactions and higher order polynomial or nonlinear terms, I don't see a way to define the categories in a way that doesn't depend on the specific subject matter.
