[site]: stackoverflow
[post_id]: 4925768
[parent_id]: 
[tags]: 
Is there any tip or trick to easily select the first word of (g)Vim's omni completion pop up?

For instance, if I write The following words may pop up (and php is highlighted in the menu but not displayed in the code): php phrase phrases If I hit Tab or CTRL + N it just goes "Back at original." If I press Shift + Tab or CTRL + P it goes to phrase . While php is highlighted in the menu, If I press enter ph doesn't get completed. I'm not sure if this is a normal behaviour in Vim or something wrong with my .vimrc: " SHORTCUTS nnoremap :set filetype=html nnoremap :set filetype=php nnoremap :TlistToggle " press space to turn off highlighting and clear any message already displayed. nnoremap :nohlsearch :echo " set buffers commands nnoremap :BufExplorer nnoremap :bn nnoremap :bp " open NERDTree with start directory: D:\wamp\www nnoremap :NERDTree /home/alex/www " open MRU nnoremap :MRU " open current file (silently) nnoremap :let old_reg=@" :let @"=substitute(expand("%:p"), "/", "\\", "g") :silent!!cmd /cstart " :let @"=old_reg " open current file in localhost (default browser) nnoremap :! start "http://localhost" file:///"%:p"" " open Vim's default Explorer nnoremap :Explore nnoremap :%s/\.html/.php/g " set completeopt=menu,preview,longest " REMAPPING " map leader to , let mapleader = "," " remap ` to ' nnoremap ' ` nnoremap ` ' " remap increment numbers nnoremap " COMPRESSION function Js_css_compress () let cwd = expand(' :p:h') let nam = expand(' :t:r') let ext = expand(' :e') if -1 == match(nam, "[\._]src$") let minfname = nam.".min.".ext else let minfname = substitute(nam, "[\._]src$", "", "g").".".ext endif if ext == 'less' if executable('lessc') cal system( 'lessc '.cwd.'/'.nam.'.'.ext.' &') endif else if filewritable(cwd.'/'.minfname) if ext == 'js' && executable('closure-compiler') cal system( 'closure-compiler --js '.cwd.'/'.nam.'.'.ext.' > '.cwd.'/'.minfname.' &') elseif executable('yuicompressor') cal system( 'yuicompressor '.cwd.'/'.nam.'.'.ext.' > '.cwd.'/'.minfname.' &') endif endif endif endfunction autocmd FileWritePost,BufWritePost *.js :call Js_css_compress() autocmd FileWritePost,BufWritePost *.css :call Js_css_compress() autocmd FileWritePost,BufWritePost *.less :call Js_css_compress() " GUI " taglist right side let Tlist_Use_Right_Window = 1 " hide tool bar set guioptions-=T "remove scroll bars set guioptions+=LlRrb set guioptions-=LlRrb " set the initial size of window set lines=46 columns=180 " set default font set guifont=Monospace " set guifont=Monospace\ 10 " show line number set number " set default theme colorscheme ir_dark " encoding set encoding=utf-8 setglobal fileencoding=utf-8 bomb set fileencodings=ucs-bom,utf-8,latin1 " SCSS syntax highlight au BufRead,BufNewFile *.scss set filetype=scss " LESS syntax highlight syntax on au BufNewFile,BufRead *.less set filetype=less " Haml syntax highlight "au! BufRead,BufNewFile *.haml "setfiletype haml " Sass syntax highlight "au! BufRead,BufNewFile *.sass "setfiletype sass " set filetype indent filetype indent on " for snipMate to work filetype plugin on " show breaks set showbreak=-----> " coding format set tabstop=4 set shiftwidth=4 set linespace=1 " CONFIG " keep the buffer around when left set hidden " enable matchit plugin source $VIMRUNTIME/macros/matchit.vim " folding set foldmethod=marker set foldmarker={,} let g:FoldMethod = 0 map ff :call ToggleFold() fun! ToggleFold() if g:FoldMethod == 0 exe 'set foldmethod=indent' let g:FoldMethod = 1 else exe 'set foldmethod=marker' let g:FoldMethod = 0 endif endfun " save and restore folds when a file is closed and re-opened "au BufWrite ?* mkview "au BufRead ?* silent loadview " auto-open NERDTree everytime Vim is invoked au VimEnter * NERDTree /home/alex/www " set omnicomplete autocmd FileType python set omnifunc=pythoncomplete#Complete autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS autocmd FileType html set omnifunc=htmlcomplete#CompleteTags autocmd FileType css set omnifunc=csscomplete#CompleteCSS autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags autocmd FileType php set omnifunc=phpcomplete#CompletePHP autocmd FileType c set omnifunc=ccomplete#Complete " Improve completion popup menu inoremap pumvisible() ? "\ " : "\ " inoremap pumvisible() ? "\ " : "\ " inoremap pumvisible() ? "\ " : "\ " inoremap pumvisible() ? "\ " : "\ " inoremap pumvisible() ? "\ \ \ " : "\ " inoremap pumvisible() ? "\ \ \ " : "\ " " Remove trailing white-space once the file is saved au BufWritePre * silent g/\s\+$/s/// " Use CTRL-S for saving, also in Insert mode noremap :update! vnoremap :update! inoremap :update! " DEFAULT set nocompatible source $VIMRUNTIME/vimrc_example.vim "source $VIMRUNTIME/mswin.vim "behave mswin " disable creation of swap files set noswapfile " no back ups wwhile editing set nowritebackup " disable creation of backups set nobackup " no file change pop up warning autocmd FileChangedShell * echohl WarningMsg | echo "File changed shell." | echohl None set diffexpr=MyDiff() function MyDiff() let opt = '-a --binary ' if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif let arg1 = v:fname_in if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif let arg2 = v:fname_new if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif let arg3 = v:fname_out if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif let eq = '' if $VIMRUNTIME =~ ' ' if &sh =~ '\ ' . arg3 . eq endfunction Is there a way to choose the first word immediately? EDIT: :map says: n A ZenCodingAnchorizeSummary n a ZenCodingAnchorizeURL n k ZenCodingRemoveTag n j ZenCodingSplitJoinTagNormal n / ZenCodingToggleComment n i ZenCodingImageSize n N ZenCodingPrev n n ZenCodingNext v D ZenCodingBalanceTagOutwardVisual n D ZenCodingBalanceTagOutwardNormal v d ZenCodingBalanceTagInwardVisual n d ZenCodingBalanceTagInwardNormal n ; ZenCodingExpandWord n , ZenCodingExpandNormal v , ZenCodingExpandVisual
