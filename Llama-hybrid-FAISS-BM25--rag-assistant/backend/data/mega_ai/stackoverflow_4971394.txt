[site]: stackoverflow
[post_id]: 4971394
[parent_id]: 1243563
[tags]: 
An object needs to implement IDisposable if it needs to ensure that something outside itself which might outlive it gets cleaned up prior to being abandoned. Some objects' properties are "connected" to other objects, so changing those properties will change the other objects; it is sometimes necessary to set those properties to null. In vb.net, a "WithEvents" field is really a property which attaches and detaches event handlers, and consequently WithEvents fields in vb.net should be set to Nothing. Note that it is generally not useful for an object to implement IDisposable purely for the purpose of nulling out its own fields. There are a few cases where it may be helpful (e.g. if an object which has been around a long time holds a reference to a recently-created object, clearing the reference may allow the more recently-created object to be collected sooner than it would otherwise) but it's certainly not necessary. What is necessary is to ensure that objects which need to clean up other objects implement IDisposable and ensure those other objects get cleaned up. I am peeved at Microsoft for encouraging people to write code which abandons event handlers. While it is true that one can get away with abandoning event handlers in cases where the event publishers don't outlive the subscribers, and such cases commonly occur with interlinked GUI elements, I really don't see any reason event shouldn't always be cleaned up as a matter of course.
