[site]: stackoverflow
[post_id]: 5656295
[parent_id]: 5650716
[tags]: 
In Plone 3 there is still some code left in the object creation logic which does indeed use sessions. It's there to support a widget-like interface, where object creation is spread across multiple actual requests. This support and the code is gone in Plone 4. This code in Plone 3 relies on accessing request.SESSION. The tricky bit is, that the code only uses the session if some other code already created it. No code in Plone (even Plone 3) should create the session in the first place, so usually it won't be there and won't be used. But if any code in the site does create the session, the object creation logic will use it as well. This should explain why you don't see the problem in most sites. All of this is especially tricky, since simply calling request.SESSION will create a session. The content_edit_impl.py script in Products.Archetypes therefor uses a different API to get to the session: # Avoid implicitly creating a session if one doesn't exists session = None sdm = getToolByName(context, 'session_data_manager', None) if sdm is not None: session = sdm.getSessionData(create=0) The create=0 tells the API to avoid implicitly creating a session if none exists yet. You can either try to find the code that creates the session, customize the code from Archetypes to remove the session part or move the session store into ZEO and share it across all Zope instances. While this isn't recommended for high traffic sites, it should work fine for simple scenarios (some hints at https://weblion.psu.edu/trac/weblion/wiki/TemporaryStorageInZeo ).
