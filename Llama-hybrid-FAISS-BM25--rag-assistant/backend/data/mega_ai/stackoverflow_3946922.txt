[site]: stackoverflow
[post_id]: 3946922
[parent_id]: 3946826
[tags]: 
Answering this question answers for bonus points, as well. It's all about getters & setters. self.someView.frame is a getter--it returns the frame & goes no deeper. It doesn't allow you to reach into the CGRect and alter values. Thus: CGRect r = self.someView.frame; r.origin.x += 10.0f; self.someView.frame = r; This is, no doubt, confusing if coming from a language where dot-notation is the typical way of getting & setting values regardless of context. Objective C dot-notation can be confusing in unforseen ways because Obj-C can invoke methods via dot syntax as well as get property values. Thus, there's no simple way of knowing that self.someView.frame is really self.someView.frame() (to use a Pythonic syntax). Not to sound annoying (really, I program Python daily), but you're really not beating around the bushes using the standard message-passing syntax of Obj-C. You can definitely leverage dot syntax to save yourself some steps, but bracketed message-passing has a certain amount of self-documenting helpfulness and helps you avoid such errors.
