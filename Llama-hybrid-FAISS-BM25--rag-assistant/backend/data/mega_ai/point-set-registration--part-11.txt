T}\operatorname {diag} (\mathbf {P} \mathbf {1} ){\hat {\mathbf {M} }})^{-1}} t := μs − Bμm σ 2 := 1 N P D ( tr ⁡ ( S ^ T diag ⁡ ( P T 1 ) S ^ ) − tr ⁡ ( S ^ T P T M ^ B T ) ) {\displaystyle \sigma ^{2}:={\frac {1}{N_{\mathbf {P} }D}}(\operatorname {tr} ({\hat {\mathbf {S} }}^{T}\operatorname {diag} (\mathbf {P} ^{T}\mathbf {1} ){\hat {\mathbf {S} }})-\operatorname {tr} ({\hat {\mathbf {S} }}^{T}\mathbf {P} ^{T}{\hat {\mathbf {M} }}\mathbf {B} ^{T}))} return {B, t}, σ2 It is also possible to use CPD with non-rigid registration using a parametrization derived using calculus of variations. Sums of Gaussian distributions can be computed in linear time using the fast Gauss transform (FGT). Consequently, the time complexity of CPD is O ( M + N ) {\displaystyle O(M+N)} , which is asymptotically much faster than O ( M N ) {\displaystyle O(MN)} methods. Bayesian coherent point drift (BCPD) A variant of coherent point drift, called Bayesian coherent point drift (BCPD), was derived through a Bayesian formulation of point set registration. BCPD has several advantages over CPD, e.g., (1) nonrigid and rigid registrations can be performed in a single algorithm, (2) the algorithm can be accelerated regardless of the Gaussianity of a Gram matrix to define motion coherence, (3) the algorithm is more robust against outliers because of a more reasonable definition of an outlier distribution. Additionally, in the Bayesian formulation, motion coherence was introduced through a prior distribution of displacement vectors, providing a clear difference between tuning parameters that control motion coherence. BCPD was further accelerated by a method called BCPD++, which is a three-step procedure composed of (1) downsampling of point sets, (2) registration of downsampled point sets, and (3) interpolation of a deformation field. The method can register point sets composed of more than 10M points while maintaining its registration accuracy. Coherent point drift with local surface geometry (LSG-CPD) An variant of coherent point drift called CPD with Local Surface Geometry (LSG-CPD) for rigid point cloud registration. The method adaptively adds different levels of point-to-plane penalization on top of the point-to-point penalization based on the flatness of the local surface. This results in GMM components with anisotropic covariances, instead of the isotropic covariances in the original CPD. The anisotropic covariance matrix is modeled as: where Σ m {\displaystyle \Sigma _{m}} is the anisotropic covariance matrix of the m-th point in the target set; n m {\displaystyle \mathbf {n} _{m}} is the normal vector corresponding to the same point; I {\displaystyle \mathbf {I} } is an identity matrix, serving as a regularizer, pulling the problem away from ill-posedness. α m {\displaystyle \alpha _{m}} is penalization coefficient (a modified sigmoid function), which is set adaptively to add different levels of point-to-plane penalization depending on how flat the local surface is. This is realized by evaluating the surface variation κ m {\displaystyle \kappa _{m}} within the neighborhood of the m-th target point. α m a x {\displaystyle \alpha _{max}} is the upper bound of the penalization. The point cloud registration is formulated as a maximum likelihood estimation (MLE) problem and solve it with the Expectation-Maximization (EM) algorithm. In the E step, the correspondence computation is recast into simple matrix manipulations and efficiently computed on a GPU. In the M step, an unconstrained optimization on a matrix Lie group is designed to efficiently update the rigid transformation of the registration. Taking advantage of the local geometric covariances, the method shows a superior performance in accuracy and robustness to noise and outliers, compared with the baseline CPD. An enhanced runtime performance is expected thanks to the GPU accelerated correspondence calculation. An implementation of the LSG-CPD is open-sourced here. Sorting the Correspondence Space 