[site]: crossvalidated
[post_id]: 427845
[parent_id]: 
[tags]: 
Is It Valid To Calculate Model-Averaged Confidence Intervals In the Same Way As Model Averaged Predictions?

I'm fitting a series of mixed-effects models, and I'm trying to calculate the model-averaged predictions and their confidence intervals. If I have a set of $R$ models $\{M_1,...,M_R\}$ I know that when calculating model-averaged predictions, the model-averaged estimator $\hat{\theta}$ of $\theta$ is calculated via: $$\hat{\theta} = \sum_{i=1}^R w_i\hat{\theta_i},$$ where $\hat{\theta_i}$ is the predicted value of $\theta$ under model $M_i$ and $w_i$ is the weight of $M_i$ . My question is regarding the confidence intervals. If I can get a confidence interval specifying a lower bound $x_i$ and and upper bound $y_i$ for each model $M_i$ , can I then calculate the model-averaged lower bound $\hat{x_i}$ (and subsequently the upper bound) as $$\hat{x_i} = \sum_{i=1}^R w_i\hat{x_i}.$$ The model type I'm working with ( glmmTMB ) doesn't support the re.form argument in predict() yet so I am having a hard time using existing methods ( MuMIn ) to calculate the model-averaged confidence intervals. So I'm curious if this is, while not ideal, a valid way to estimate the confidence intervals of the predictions.
