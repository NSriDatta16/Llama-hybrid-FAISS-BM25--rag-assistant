[site]: stackoverflow
[post_id]: 5581625
[parent_id]: 
[tags]: 
Objective-C Memory Management

I know there are several "similar" questions out there, but I think this is an issue a lot of programmers have issues with and needs extra attention. Say I have a factory method for a class that returns an autoreleased object: +(id)queueWithDelegate:(id)aDelegate { return [[[self alloc] initWithDelegate:aDelegate] autorelease]; } When I call this function and receive my queue object, must I explicitly retain it, or does the simple fact that I am assigning it to a variable do it? MyQueue q = [MyQueue queueWithDelegate:self]; // Does this need to be retained? Or am I confusing this with properties? If I have a property like so: @property (nonatomic, *retain*) myQueue; // Does the "retain" part of the property mean it's going to automatically add // to the retain count? self.myQueue = [MyQueue queueWithDelegate:self]; // Do I need to call retain? I think my issue may be that I've gotten properties mixed up with local variables. Thanks for any insight.
