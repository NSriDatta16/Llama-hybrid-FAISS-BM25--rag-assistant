[site]: stackoverflow
[post_id]: 5213038
[parent_id]: 5212704
[tags]: 
maybe I'll come back and add more... but for now I have just few in my mind: 1) Caching strategies. Enterprise servers are heavy loaded, to serve http requests it is important to know how can you deal with it. E.g. JS can be cached on client side, but you should know how to 'tell ' a client that new version is available. 2) There are different libraries which minify counts of requests to JS files just appending them (based on configuration). E.g. for Java it is Jawr (just one of). It's better to load 1,2,3 scripts (read 'files') instead of 100 (and this number becomes normal today, in era of RIA). One more nice trick Jawr does, it creates zipped bundles, so when client asks for script server does not need to zip it. 3) Your business logic can be processed by application server (sort of JBoss, GlassFish etc when we talk about java), but JavaScript is static so it can be server by http server (like Apache, or better lighttd, nginx). Again this way you minify server loading (critical for enterprise) 4) libraries like jquery can be loaded from Google CDN (or any other reliable source). 5) use Yslow , PageSpeed , Ajax DynaTrace to check performance, get ideas to improve etc. 6) try mod_pagespeed , it can 'eliminate' jawr, or make powerful company for it 7) one more issue used today is JavaScript-on-demand loading 8) offline storage Well, although you've specified topics you are interested in, the area still looks unlimited...
