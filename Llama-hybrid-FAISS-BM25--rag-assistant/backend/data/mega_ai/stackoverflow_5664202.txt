[site]: stackoverflow
[post_id]: 5664202
[parent_id]: 5662386
[tags]: 
Looking at the documentation for SPCascadeDropdowns , you have the ability to specify a callback function that executes whenever the parent column changes. This seems like exactly the hook you need to wire up what you're asking for. You posted no code samples, so I'll just have to make something up. Their demo page uses Region, State and City, so let's play with that. If I wanted to add a filter to "City" based on the selected value of "Region", I might use this: var sCamlQuery = ""; // Cascade definition for State dropdown $().SPServices.SPCascadeDropdowns({ relationshipList: "States", relationshipListParentColumn: "Region", relationshipListChildColumn: "Title", relationshipListSortColumn: "Title", parentColumn: "Region", childColumn: "State" completefunc: function() { sCamlQuery = " " + $("select[title='Region'] option:selected").text() + " "; }) }); // Cascade definition for City dropdown $().SPServices.SPCascadeDropdowns({ relationshipList: "Cities", relationshipListParentColumn: "State", relationshipListChildColumn: "Title", parentColumn: "State", childColumn: "City", CAMLQuery: sCamlQuery }); That's a pretty naive jQuery selector to find the SELECT element (looking at the TITLE attribute), but you should get the idea. The anonymous function defined for completefunc should run whenever the parent column ("Region") is changed, and updates the value of the global var sCamlQuery . When the "City" cascade runs, it will use the generated CAML query. Edit: Updated example to better match the OP scenario. When the top-most cascade runs ("Region"), it will trigger the completefunc anonymous method in the "State" cascade. This sets the value of the sCamlQuery variable, and will be used when the "City" cascade runs. Edit #2: Updated sample code to use a more general-purpose jQuery selector; it will retrieve the text value of the selected OPTION . If you want the OPTION value instead, you can simplify it to be: $("select[title='Region']").val()
