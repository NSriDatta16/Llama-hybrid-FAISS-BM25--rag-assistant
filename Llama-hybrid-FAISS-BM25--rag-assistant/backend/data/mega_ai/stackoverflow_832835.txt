[site]: stackoverflow
[post_id]: 832835
[parent_id]: 
[tags]: 
Hunting for PHP5 incompatibilities

Something in here is incompatible with PHP5, but I am totally lost as to what. I have an .htaccess file on my web server that has the line "AddHandler x-mapp-php5 .php", as it is required by just about everything else on the server and it defaults to PHP4...however; I need this one script to work, but it only works on PHP4. Any idea where the problem is? $megabyte) { /* literal.float */ $re_sized = sprintf("%01.2f", $size / $megabyte) . " Mb"; } elseif ($size > 1024) { $re_sized = sprintf("%01.2f", $size / 1024) . " Kb"; } else { $re_sized = $size . " bytes"; } return $re_sized; } /* get a list of the files/dirs, put them into a table. */ function generate_file_list($path) { global $download_path; global $PHP_SELF; $final_path = str_replace("//","/",str_replace("..","",urldecode($path))); $file_array = file_list("$download_path/$final_path/"); echo " $final_path/ \n"; echo " \n\n"; if ($file_array == false) { /* check if the dir is an array before we process it to foreach(); */ echo "directory empty\n"; } else { echo " \n"; echo " file size \n"; foreach ($file_array as $file_name) { $is_file = "$download_path/$final_path/$file_name"; $final_dir_name = urlencode($final_path); /* urlencode(); to prevent any broken links - decode on do_download(); */ $final_file_name = urlencode($file_name); $file_size = filesize("$download_path/$final_path/$file_name"); $final_file_size = file_size($file_size); if (is_file($is_file)) { print " $file_name $final_file_size \n"; } elseif (is_dir($is_file)) { print " $file_name/ &lt;dir&gt; \n"; /* we don't need a size for a directory */ } } echo " \n"; } } /* allow the user to download the file... */ function do_download($path,$file) { global $download_path; $get_path = str_replace("//","/",str_replace("..","",stripslashes(urldecode($path)))); /* fopen adds \ to ' - so we strip 'em. */ $get_file = str_replace("//","/",str_replace("..","",stripslashes(urldecode($file)))); header("Content-Disposition: atachment; filename=$get_file"); header("Content-Type: application/octet-stream"); header("Content-Length: ".filesize("$download_path/$get_path/$get_file")); header("Cache-Control: no-cache, must-revalidate"); header("Pragma: no-cache"); header("Expires: 0"); $fp = fopen("$download_path/$get_path/$get_file","r"); print fread($fp,filesize("$download_path/$get_path/$get_file")); fclose($fp); exit; } if (!isset($go)) { $go = "dirlist"; } if ($go == "dirlist") { generate_file_list(""); /* null, so we get a list for the root directory */ } elseif ($go == "list" && isset($path)) { if (isset($path)) { /* if the path is null - it returns a list for the root directory */ generate_file_list($path); /* get a list for the path specified */ } else { generate_file_list(""); } } elseif ($go == "download") { if (isset($path) && isset($file)) { do_download($path,$file); /* download the file... */ } else { echo "no file selected to download :)\n"; } } ?>
