[site]: stackoverflow
[post_id]: 505510
[parent_id]: 504857
[tags]: 
You can use lvalue subs as setters for object members: sub x : lvalue { my $self = shift; $self->{x}; } Then later: $foo->x = 5; This combines the intuitiveness of setting members directly with the flexibility of encapsulating the setter, in case you later want to change how the object is implemented. Compare to the following more traditional ways to set members in Perl: Intuitive but fragile; what if you change how $foo is implemented? $foo->{x} = 5; Traditional setter method; doesn't use assignment syntax for what amounts to an assignment: $foo->set_x(5); Of course, lvalue methods have never really been embraced by the Perl community, and use of lvalue subs is "weird" and whatever would be gained for intuitiveness would be lost by the strangeness of it all.
