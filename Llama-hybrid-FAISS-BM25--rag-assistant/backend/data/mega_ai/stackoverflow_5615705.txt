[site]: stackoverflow
[post_id]: 5615705
[parent_id]: 5615274
[tags]: 
Refactoring test code is just as important as refactoring production code. Both should be treated as first class citizens. So if you are extracting public methods to the base class then that should have its own set of tests. If your test cases are designed properly where each tests tests one thing each then the test refactoring should be easy. If you are extracting protected functionality then probably its it a slightly grey area. If test methods are new to the class then I would expect them to be tested in the derived class simply because they are probably there for the derived class to function properly. Ideally this should be kept to a minimum as the base class functionality becomes less obvious. The derived classes then will have the remaining public methods tested in their own set of tests. Again if you change the production code and not the tests then you should incorporate a coverage tool so you feel confident enough your tests are covered enough.
