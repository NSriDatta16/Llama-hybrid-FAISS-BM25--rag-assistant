[site]: stackoverflow
[post_id]: 3841489
[parent_id]: 3841375
[tags]: 
What you have described above in terms of using the flash drive as an intermediate storage location should work. My process would be: initial setup create repo on computer A (using hg init) clone the repo from computer A to flash drive hg clone C:/path/to/repo/A X:/path/to/flash/drive/repo clone the repo from flash drive to computer B hg clone X:/path/to/flash/drive/repo C:/path/to/repo/B working process edit/commit to repo on computer A push from computer A to flash drive hg push X:/path/to/flash/drive/repo pull from flash drive to computer B hg pull X:/path/to/flash/drive/repo edit/commit repo on computer B push from computer B to flash drive (same commands as above) pull from flash drive to computer A (same commands as above) Finally, how do I get this process started? Do I need to do something so Hg knows these are all part of one code base? Mercurial knows if two arbitrary repositories have a common ancestor by looking at the SHA1 hash keys of the commits in each repo. In other words, assuming both repos have at least one common hash key in their histories, Mercurial will attempt to merge them. In your specific case, where both repos are initially un-versioned, Mercurial will need some help. The best thing to do would be to get to a place where both repos are identical and then perform your hg init . Mercurial should handle sharing from this point on.
