[site]: stackoverflow
[post_id]: 3561503
[parent_id]: 3561435
[tags]: 
The generic name for this kind of thing is a union . You can use the union keyword to define a C-style union: a variable which may be treated as having one of several types. However, you need to do all the work to keep track of which type it is. union { char c; int i; } l; bool l_is_int; if ( x == 'c' ) { l_is_int = false; cin >> l.i; } else if ( x == 'n' ) { l_is_int = true; cin >> l.c; } There is a class boost::variant which does this more elegantly and safely: boost::variant l; if ( x == 'c' ) { char c; cin >> c; l = c; // set content type of l to char cout ( l ) > i; l = i; // set content type of l to int cout ( l ) For your immediate problem, using any kind of union is overkill, since an int can hold any char value: int l; bool l_is_int; if ( x == 'c' ) { char c; cin >> c; l = c; l_is_int = false; } else if ( x == 'n' ) { cin >> l; l_is_int = true; }
