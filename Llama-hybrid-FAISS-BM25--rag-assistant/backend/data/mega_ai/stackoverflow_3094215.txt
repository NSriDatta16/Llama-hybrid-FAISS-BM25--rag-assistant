[site]: stackoverflow
[post_id]: 3094215
[parent_id]: 2983191
[tags]: 
That code really has been smacked about with the ugly stick. If you're going to ask other people to find your bugs for you, it's a good idea to make things presentable first. Strangely enough, this will often help you to find them for yourself too. So, before I point out some of the more fundamental errors, I have to make a few schoolmarmly suggestions: Don't sprinkle your code with magic numbers . Is it really that hard to type a few lines like const ALuint SAMPLE_RATE = 22050 ? Trust me, it makes life a lot easier. Use variable names that you aren't going to mix up easily. One of your bugs is a substitution of alDatal for alDatar . That probably wouldn't have happened if they were called left and right . Similarly, what is the point of having a meaningful variable name like energy if you're just going to stick it alongside the meaningless but more or less identical aEnergy ? Why not something informative like average ? Declare variables close to where you're going to use them and in the appropriate scope. Another of your bugs is that you don't reset your calculated energy sum when you move your averaging window, so the energy will just add up and up. But you don't need the energy outside that loop, and if you declared it inside the problem couldn't happen. There are some other things I personally find a little irksome, like the random bracing and indentation, and mixing of C and C++ allocations, and odd inconsistent scraps of Hungarian prefixing, but at least some of those may be more a matter of taste so I won't go on. Anyway, here are some reasons why your code doesn't work: First up, look at the right hand side of this line: energy+= ((alDatal[i]*alDatal[i]) + (alDatal[i]*alDatar[i])); You want the square of each channel value, so it should really say: energy+= ((alDatal[i]*alDatal[i]) + (alDatar[i]*alDatar[i])); Spot the difference? Not easy with those names, is it? Second, you should be computing the total energy over each window of samples, but you're only setting energy = 0 outside the outer loop. So the sum accumulates, and consequently the current window energy will always be the biggest you've ever encountered. Third, your variance calculation is wrong. You have: V += (Ei[i]-aEnergy); But it should be the sum of the squares of the differences from the mean: V += (Ei[i] - aEnergy) * (Ei[i] - aEnergy); There may well be other errors as well. For instance, you don't allocate the data buffers if they're not NULL , but assume that they're the right length -- which you've only just calculated. You may justify that in terms of some consistent usage you've stuck to throughout your code, but from the perspective of what we can see here it looks like a pretty bad idea.
