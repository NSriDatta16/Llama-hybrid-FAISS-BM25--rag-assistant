[site]: stackoverflow
[post_id]: 4636818
[parent_id]: 
[tags]: 
How do I nest multiple ViewModels in a top level ViewModel, in a sort of hierarchy that can be dispersed throughout my Views?

Right now I have a rather large ViewModel called MainViewModel , that contains a lot of commands and properties that could be organized into more reasonably named ViewModels. I however, only have one window, and so need to be able to cherry-pick the valid data and Commands from each of the SubViewModels.... I figure this could be achieved using properties, but I'm not so sure how to approach this in the XAML. (Or if there is an implication in the ViewModels themselves) I realize that I can set the DataContext on SubViews as I see fit, but I want to avoid having my View dictate the hierarchy/organization of my ViewModels. Ex. pseudo code SubAViewModel mvmB = new SubBViewModel(); SubAViewModel mvmA = new SubAViewModel(); MainViewModel mvm = new MainViewModel( mvmA, mvmB ); //This is clearly wrong but is sort of what I am trying to achieve It's entirely possible that a MenuItem or some other UserControl would want to access a Command in SubBViewModel and a property in SubAViewModel .
