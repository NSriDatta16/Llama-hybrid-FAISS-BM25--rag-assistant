[site]: crossvalidated
[post_id]: 290553
[parent_id]: 
[tags]: 
Can neural networks figure out some unknown transform?

I am wondering can neural networks figure out some unknown transform? I have two vectors: $x$ - the original/truth value $x_{t}$ - the transformed version of $x$ One way to describe it would be $x_t=Fx$, where $F$ is the transfer matrix (Ex. Fourier matrix in Fourier transform). The problem here is that $F$ is an unknown transform, and it is not a regular known transform (Fourier, wavelet, ....etc.). But I have many $x$ and $x_t$, so I'm wondering if $F$ can be solved/known even empirically through neural network training? Input of the neural network would be $x_t$, through the adjustment via weights and bias inside the network, the output should be $x$. Of course, here the transform has to be assumed the same for each transformation operation. My vector size is 1024, meaning there are 1024 elements in both $x$ and $x_t$ Anyone can give some pointer how to do it with neural network? Seems to me a natural fit for a neural network problem. If neural network can do the job, is there any code/example/readings/literature on this topic? I am not asking how to data fitting, that's not what I am after. I am just wondering if this problem can be done via neural network. Thanks sincerely.
