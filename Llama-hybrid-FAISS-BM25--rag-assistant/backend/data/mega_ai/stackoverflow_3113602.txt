[site]: stackoverflow
[post_id]: 3113602
[parent_id]: 
[tags]: 
PHP openssl equivalents for Perl?

What would be a equivalent example in perl of the bellow code to create a Self-signed certificate ? All i have available is Crypt::OpenSSL::RSA (if there is another module let me know so i can verify it is available or possible to install as i am not the admin/owner and cannot do it myself due to rights issue) which i havent found on the documents on how to implement such... I did like to avoid command line commands if possible but not if it is the last resort for creating this... "UK", "stateOrProvinceName" => "England", "localityName" => "London", "organizationName" => "blabla", "organizationalUnitName" => "Bla bla Developer's Team", "commonName" => "blabla.com", "emailAddress" => "support@blabla.com" ); $configargs = array( 'digest_alg' => 'sha1', 'private_key_bits' => 1024, 'private_key_type' => OPENSSL_KEYTYPE_RSA, 'encrypt_key' => true ); // Generate a new private (and public) key pair $privkey = null; // Generate a certificate signing request $csr = openssl_csr_new($certificateInfo, $privkey); // You will usually want to create a self-signed certificate at this // point until your CA fulfills your request. // This creates a self-signed cert that is valid for 365 days $sscert = openssl_csr_sign($csr, null, $privkey, 365, $configargs);//, $configArgs // Now you will want to preserve your private key, CSR and self-signed // cert so that they can be installed into your web server, mail server // or mail client (depending on the intended use of the certificate). // This example shows how to get those things into variables, but you // can also store them directly into files. // Typically, you will send the CSR on to your CA who will then issue // you with the "real" certificate. openssl_csr_export($csr, $csrout); openssl_x509_export($sscert, $certout); openssl_pkey_export($privkey, $pkeyout, $passphrase); ?>
