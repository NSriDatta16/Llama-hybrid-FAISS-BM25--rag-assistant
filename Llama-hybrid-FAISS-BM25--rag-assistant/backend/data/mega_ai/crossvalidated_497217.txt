[site]: crossvalidated
[post_id]: 497217
[parent_id]: 496487
[tags]: 
I'm not sure about @whuber's cumulative sum approach, but the following, using zoo::rollsum() is reasonably fast. It leaves the problem that many of the spans it finds are nested within a larger span, but I'll leave that one with you. library(tidyverse) library(zoo) set.seed(1) df required_mean)){ starts[ix] = start stops[ix] = start + span lengths[ix] = span averages[ix] = rolling_mean[start] ix = ix + 1 } } result = data.frame(start=starts, stop=stops, length=lengths, average=averages) return(result[1:(ix-1),]) } spans = find_longest_spans(df$vol) spans %>% mutate(ix=1:n()) %>% ggplot(aes(xmin=start, xmax=stop, y=ix, color=average)) + geom_linerange() + coord_cartesian(xlim=c(0, 52)) + labs(x='Week', y='Span ID', color='Span mean') + scale_color_viridis_c() + theme_bw(base_size = 16)
