[site]: stackoverflow
[post_id]: 4251820
[parent_id]: 4251580
[tags]: 
yes. there are a few options. A. you can choose to use the startDrag() function and supply it's 2nd parameter with a bounds rectangle for your draggable object. something like; dragSprite.startDrag(false, new Rectangle(0, 0, 20, stage.stageHeight)); B. you can set your draggable object to listen for mouse events, moving it according to the mouse movements. something like: dragSprite.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownEventHandler); function mouseDownEventHandler(evt:MouseEvent):void { stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveEventHandler); stage.addEventListener(MouseEvent.MOUSE_UP, mouseUpEventHandler); } function mouseMoveEventHandler(evt:MouseEvent):void { //only move dragSprite horizontally //dragSprite.y = evt.stageY; dragSprite.x = evt.stageX; } function mouseUpEventHandler(evt:MouseEvent):void { stage.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveEventHandler); stage.removeEventListener(MouseEvent.MOUSE_UP, mouseUpEventHandler); }
