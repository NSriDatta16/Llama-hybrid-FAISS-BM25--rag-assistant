[site]: datascience
[post_id]: 66674
[parent_id]: 65864
[tags]: 
Text summarization can be divided into two categories 1. Extractive Summarization and 2. Abstractive Summarization Extractive Summarization : These methods rely on extracting several parts, such as phrases and sentences, from a piece of text and stack them together to create a summary. Therefore, identifying the right sentences for summarization is of utmost importance in an extractive method. Abstractive Summarization : Abstractive methods select words based on semantic understanding, even those words did not appear in the source documents. It aims at producing important material in a new way. They interpret and examine the text using advanced natural language techniques to generate a new shorter text that conveys the most critical information from the original text. What you are looking for is abstractive summarisation. Since you are working in R there is a nice library called lexRank taking an example from here would look something like #load needed packages library(xml2) library(rvest) library(lexRankr) #url to scrape monsanto_url = "https://www.theguardian.com/environment/2017/sep/28/monsanto-banned-from-european-parliament" #read page html page = xml2::read_html(monsanto_url) #extract text from page html using selector page_text = rvest::html_text(rvest::html_nodes(page, ".js-article__body p")) #perform lexrank for top 3 sentences top_3 = lexRankr::lexRank(page_text, #only 1 article; repeat same docid for all of input vector docId = rep(1, length(page_text)), #return 3 sentences to mimick /u/autotldr's output n = 3, continuous = TRUE) #reorder the top 3 sentences to be in order of appearance in article order_of_appearance = order(as.integer(gsub("_","",top_3$sentenceId))) #extract sentences in order of appearance ordered_top_3 = top_3[order_of_appearance, "sentence"] > ordered_top_3 [1] "Monsanto lobbyists have been banned from entering the European parliament after the multinational refused to attend a parliamentary hearing into allegations of regulatory interference." [2] "Monsanto officials will now be unable to meet MEPs, attend committee meetings or use digital resources on parliament premises in Brussels or Strasbourg." [3] "A Monsanto letter to MEPs seen by the Guardian said that the European parliament was not “an appropriate forum” for discussion on the issues involved." EDIT: How I like to think about abstractive summarisation: Y Using encoder-decoder architecture (extendended with transformers) for seq2seq problems you can essentially get an embeding of your text, where same sentences can be embedded differently in different context, giving same/similiar output.
