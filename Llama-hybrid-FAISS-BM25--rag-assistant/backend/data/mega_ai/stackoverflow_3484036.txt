[site]: stackoverflow
[post_id]: 3484036
[parent_id]: 3483474
[tags]: 
Scott Guthrie wrote an interesting article about webforms vs mvc: About Technical Debates (and ASP.NET Web Forms and ASP.NET MVC debates in particular) . I myself am busy with webforms professionally since 2002 and also took notice of MVC when it came out. My current assignment as a consultant is an MVC2 project. I read a couple of books, took some tutorials ( http://www.asp.net/mvc ) and made a couple of presentations about it for user groups . Personally I saw that MVC seems to get more attention than standard webforms. Mainly due to several reasons: it's a new team focussing on new technology and the way they develop is more agile webforms always were released with a new version of the .NET framework/Visual Studio. MVC has a more out of band approach and they don't (have to) stick to new releases of either the framework or the IDE. webforms is getting quite mature. Face it, it's already a way cool environment to work in. Lots of default controls, lots of third party controls, added Ajax support and the toolkit. I've written several small, average and quite big applications with webforms and I'm glad they all worked out for my clients. Go back and start again with MVC (as a Beginner, 49 years old)? I would like to answer with a quote: Live as if you were to die tomorrow. Learn as if you were to live forever. Mahatma Ghandi. MVC is different from webforms that's true but you also are using the same underlying platform. Session state, querystring, membership, Cache, ... all that's still there. What you're missing out most is the usage of server controls and a new way of requesting your "pages". I might not be able to convince you to take a look over the fence and to try out some of the simple tutorials over here but I sure hope you will at least take a look at them. Trying to learn at least the concepts will only benefit your career. At least try to read the 6 part tutorial of musicstore or the free eBook from Nerddinner .
