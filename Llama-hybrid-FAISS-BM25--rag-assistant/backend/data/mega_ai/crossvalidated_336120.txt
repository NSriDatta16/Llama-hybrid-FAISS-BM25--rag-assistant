[site]: crossvalidated
[post_id]: 336120
[parent_id]: 336107
[tags]: 
In your example the simplest solution is to factorize the inputs. Consider the orthgonality condition of yours: $$V'V=I$$ $$(XW_1)'XW_1=$$ $$W_1'X'XW_1=I$$ $$W_1W_1'X'XW_1W_1'=WW_1'$$ $$W_1W_1'X'X=I$$ $$W_1W_1'=(X'X)^{-1}$$ So, all you need to do in this case is to factorize the inverse of the covariance matrix $(X'X)^{-1}$ of inputs. This can be done with Cholesky decomposition , for instance. So, if you have NN and want to do this to a layer other than the first, then you'd have to plug this procedure manually, maybe implement your own layer. I don't think you could do this with out of the box layers in popular frameworks. A less elegant solution would be to impose this condition in the cost function. So, you'd store the $V$ matrix in cache, then when you calculate the cost function use its deviation from orthogonality as a component of the cost.
