[site]: stackoverflow
[post_id]: 2167078
[parent_id]: 978897
[tags]: 
Due to something like the code shown by benvolioT, that I suspect exists in the system, when I used selectAnnotation:animation: method, it did not show the callOut, I guessed that the reason was because it was already selected and it was avoiding from asking the MapView to redraw the callOut on the map using the annotation title and subtitle. So, the solution was simply to deselect it first and to re-select it. E.g: First, I needed to do this in Apple's touchMoved method (i.e. how to drag an AnnotationView) to hide the callOut. (Simply using annotation.canShowAnnotation = NO alone does not work, since I suspect that it needs redrawing. The deselectAnnotaiton causes the necessary action. Also, deselecting alone did not do that trick, the callOut disappeared only once and got redrawn straight away. This was the hint that it got reselected automatically). annotationView.canShowAnnotation = NO; [mapView deselectAnnotation:annotation animated:YES]; Then, simply using the code below in touchEnded method did not bring back the callOut (The annotation has been automatically selected by the system by that time, and presumably the redrawing of the callOut never occrrs): annotationView.canShowAnnotation = YES; [mapView selectAnnotation:annotation animated:YES]; The solution was: annotationView.canShowAnnotation = YES; [mapView deselectAnnotation:annotation animated:YES]; [mapView selectAnnotation:annotation animated:YES]; This simply bought back the callOut, presumably it re-initiated the process of redrawing the callOut by the mapView. Strictly speaking, I should detect whether the annotation is the current annotation or not (selected, which I know it is) and whether the callOut is actually showing or not (which I don't know) and decide to redraw it accordingly, that would be better. I, however, have not found the callOut detection method yet and trying to do so myself is just a little bit unnecessary at this stage.
