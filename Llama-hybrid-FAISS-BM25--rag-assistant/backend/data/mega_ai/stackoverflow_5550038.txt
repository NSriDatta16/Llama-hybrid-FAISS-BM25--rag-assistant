[site]: stackoverflow
[post_id]: 5550038
[parent_id]: 5549920
[tags]: 
In your button handler you have several references to _root . This is probably the cause of the problem, as I imagine drag1, drag2 etc are all inside your container. The code in this function is executing in the scope of your button, so if the button is on the same timeline as the drop movieclips then you can safely replace all the occurrences of _root with _parent . A better approach though would be to change the scope of the button handler to that of you container, meaning you need neither root nor parent. This is done using delegate: btn.onRelease = Delegate.create(this,buttonHandler); function buttonHandler() { if ((eval(drag1._droptarget) == target1) && (eval(drag2._droptarget) == target2) && (eval(drag3._droptarget) == target3)) { // only if all three dragable objects are dropped to their respective targets sentence returns true if (first == 1) { first = 0; result += } comment = "Great! correct answer"; attachMovie("glamour", "glamour2", 202); glamour2._x = 226; glamour2._y = 153; } else { comment = "try again!!"; first = 0; } Be sure to import the Delegate class at the top of your script for this to work: import mx.utils.Delegate; This second approach is better because you don't have to worry about different scopes, and also it is similar to the approach used in AS3.
