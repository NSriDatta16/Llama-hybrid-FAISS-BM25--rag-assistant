[site]: stackoverflow
[post_id]: 4553916
[parent_id]: 
[tags]: 
Uploading PNG File (HTTP POST) with C++ Winsock API

I'm trying to upload a PNG file through Winsock2 HTTP Post. Here's my request string: boundary = "-----rueldotme"; request += "POST " + uri + " HTTP/1.1\r\n"; request += "Host: " + hostname + "\r\n"; request += "User-Agent: " + UserAgent + "\r\n"; request += "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"; request += "Accept-Language: en-us,en;q=0.5\r\n"; request += "Accept-Encoding: gzip,deflate\r\n"; request += "Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\r\n"; request += "Keep-Alive: 115\r\n"; request += "Connection: keep-alive\r\n"; request += "Content-Length: " + fileSize + "\r\n"; request += "Content-Type: multipart/form-data, boundary=" + boundary + "\r\n"; request += "\r\n"; request += "--" + boundary + "\r\n"; request += "Content-Disposition: form-data; name=\"filename\"; filename=\"" + fileName + "\"\r\n"; request += "Content-Type: image/png; charset=binary\r\n"; request += "Content-Transfer-Encoding: binary\r\n"; request += "\r\n"; request += "%s\r\n"; request += "\r\n"; The connection is OK, no errors and such, the fileCon by the way is from ReadFile() . And there's no error code. The number of bytes read is the same as the output of GetFileSize() . I tried displaying the contents of fileCon but only gave me this: Don't mind the title " Error " (I set it). Also, the request takes ages to complete, and gives me a blank response. Yep, blank with no HTTP headers. Am I doing the request right? Should I really have to include the file contents at the POST data? Thanks in advance. EDIT : The PNG size is about 256KB. I'm in a 1mbps connection. EDIT : Sorry if the information was insufficient. Anyway, here's what I did lately: int flz; char bdata[BSIZE]; DWORD dwe, bytesRead = 0; HANDLE fh = CreateFile(fileName.c_str(), GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL); LPVOID fbuff = NULL; flz = GetFileSize(fh, NULL); fbuff = malloc(flz); ReadFile(fh, fbuff, flz, &bytesRead, NULL)); ... sprintf_s(bdata, BSIZE, request.c_str(), reinterpret_cast (fbuff)); //BSIZE = 1024 ... send(sock, bdata, std::strlen(bdata), 0);
