[site]: stackoverflow
[post_id]: 1568387
[parent_id]: 
[tags]: 
Aggregate detail values in Master-Detail view

I have a master-detail relationship in some custom entities. Say I have the following structure: class Master : INotifyPropertyChanged { public int Id { get; set; } // + property changed implementation public string Name { get; set; } // + property changed implementation public ObservableCollection Details { get; } } class Detail : INotifyPropertyChanged { public int Id { get; private set; } public string Description { get; set; } public double Value { get; set; } // + property changed implementation } My goal is to have a ListView, using a GridView, showing a list of Master objects. When I select a specific Master, I'll have a separate ListView for the details, allowing editing. Basically, a fairly standard Master-Detail view. However, I also want the GridView for the Master to show the Sum of all of that master's Detail elements, ie: Details.Select(d => d.Value).Sum(); This is fairly easy to display using a custom IValueConverter. I can convert from the details collection directly to a double displaying sum, and bind a TextBlock's Text to the Details OneWay, via the IValueConverter. This will work, and show the correct values when I open the window. However, if I change one of the detail members, this will not update (even though detail implements INotifyPropertyChanged), since the collection itself is still the same (the ObservableCollection reference hasn't changed). I want to have an aggregated value in a master list, showing the sum (or average/count/etc) within the detail list, and have this stay up to date when the user changes properties in details. How can I go about implementing this? Edit: Ideally, I would prefer if there is a means of accomplishing this that doesn't involve changing the Master class directly. The application in question is using the MVVM pattern, and I'd really prefer to not change my Model classes in order to implement a specific View. Is there a way to do this without introducing custom logic into the model?
