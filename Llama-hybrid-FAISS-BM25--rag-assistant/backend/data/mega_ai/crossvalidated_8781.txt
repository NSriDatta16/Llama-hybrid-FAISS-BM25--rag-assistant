[site]: crossvalidated
[post_id]: 8781
[parent_id]: 4276
[tags]: 
Since there is quite some variation in how the steps look, you could try a statistical approach. Which could, for example, be done in the following steps: Generate the feature vector. Filter the signal by a number of filters, each having a different frequency response. A set foo (haar)-wavelets might be a reasonable starting points. if your original signal has N samples, and you have K filters, this filtering should result in an N-by-K matrix. take the element-wise square to determine the energy in each of the signals. Generate ground truth. Write down the sample numbers which mark the start of each step, store them in vector S. Use this to make ground truth output data: Y = zeros(N,1); Y(S) = 1. Train your classifier. Now you can apply a generic classification algorithm (e.g. LDA or logistic regression) to the results of step 1 and 2. Matlab implementations should not be hard to find. Apply you classifier on new data. For new data, repeat step 1. this can then be used to as input for the classifier resulting from step 3. It might be necessary to post-process this data, for example by low-pass filtering it. Setting a threshold with some hysteresis should then give you the start of each step
