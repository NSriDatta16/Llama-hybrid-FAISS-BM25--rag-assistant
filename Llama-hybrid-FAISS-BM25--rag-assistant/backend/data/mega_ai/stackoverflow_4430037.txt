[site]: stackoverflow
[post_id]: 4430037
[parent_id]: 4424532
[tags]: 
Yes. By definition, any recursive function can be transformed into an iteration as long as it has access to an unbounded stack-like construct . The interesting question is whether it can be done without a stack or any other unbounded data storage. A tail-recursive function can be turned into such an iteration only if the size of its arguments is bounded. In your example (and almost any recursive function that uses continuations), the cont parameter is for all means and purposes a stack that can grow to any size. Indeed, the entire point of continuation-passing style is to store data usually present on the call stack ("what to do after I return?") in a continuation parameter instead.
