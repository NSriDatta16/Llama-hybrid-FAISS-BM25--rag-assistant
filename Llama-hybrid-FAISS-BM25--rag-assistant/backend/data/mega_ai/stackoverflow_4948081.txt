[site]: stackoverflow
[post_id]: 4948081
[parent_id]: 4947954
[tags]: 
Breaking the information about your class members into the correct parts (summary, returns, param, exception) allows other tools, like object browser, intellisense, class view, etc to work better. I'd suggest (not saying this is a "best practice", but it works for me): - tell me what the member's purpose is. What responsibility does it perform? - give me a description of the parameter. If you use , future developers will get links to that documentation as well. - describe what is being returned - tell the developer what exceptions can be thrown by the method. This gives them the opportunity to catch specific exceptions if desired, rather than just System.Exception. I don't do this very much. I think the biggest benefit of breaking the information into smaller pieces rather than putting it all into summary is that you get to leverage all of the tooling built around the xml documentation.
