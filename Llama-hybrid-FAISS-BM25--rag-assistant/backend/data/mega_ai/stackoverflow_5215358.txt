[site]: stackoverflow
[post_id]: 5215358
[parent_id]: 5215216
[tags]: 
I see this as all as a way of organizing your data; if you're dealing with things like customers, and orders, they should be separate tables, anyways. Depending on the resources available, you could probably do something like CREATE TEMPORARY TABLE `new_table` LIKE `old_table`; INSERT INTO `new_table` SELECT * FROM `old_table`; Where you would have a perfect copy of the table you would like to get the report to work on. If your resources are limited, you could probably batch it, like so: CREATE TEMPORARY TABLE `new_table` LIKE `old_table`; INSERT INTO `new_table` SELECT * FROM `old_table` LIMIT 100; ...and on the next iteration: DROP TABLE `new_table`; CREATE TEMPORARY TABLE `new_table` LIKE `old_table`; INSERT INTO `new_table` SELECT * FROM `old_table` LIMIT 100 OFFSET 100; As far as archiving the information goes, it depends on the environment you are working in. For example, in the environment my stuff works in, it's 24/7 and extremely high-demand. I have an interim data engine which keeps all the data in an in-RAM database, and when a record is seen as "closed", it is moved into a MySQL database for archiving. This way, when the need be, I can run whatever reports on the MySQL database, without impacting the operational run-time of the live data. I can offer some ideas on how to archive your data, but that would require you to put forth a description of the type of volume and demand you're dealing with.
