[site]: stackoverflow
[post_id]: 2196598
[parent_id]: 2196444
[tags]: 
As it says in the manual, a the state created by new thread shares global state with other threads. If you want per-thread storage you'll have to create a special key to use in the registry. From the manual (emphasis mine): lua_State *lua_newthread (lua_State *L); Creates a new thread, pushes it on the stack, and returns a pointer to a lua_State that represents this new thread. The new state returned by this function shares with the original state all global objects (such as tables) , but has an independent execution stack. There is no explicit function to close or to destroy a thread. Threads are subject to garbage collection, like any Lua object.
