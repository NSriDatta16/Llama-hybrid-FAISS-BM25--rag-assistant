[site]: stackoverflow
[post_id]: 1751375
[parent_id]: 1749905
[tags]: 
Ruby, 58 57 56 53 52 characters This is my first-ever code golf entry, so please be gentle. def f(n,c)d,e=c.find{|i,j|n%j Usage: irb> f 108, [[455, 33], [11, 13], [1,11], [3,7], [11,2], [1,3]] => 15625 irb> f 60466176, [[455, 33], [11, 13], [1, 11], [3, 7], [11, 2], [1, 3]] => 7888609052210118054117285652827862296732064351090230047702789306640625 Pretty version (252): def fractran(instruction, program) numerator, denominator = program.find do |numerator, denominator| instruction % denominator Ruby, 53 52 using Rational Inspired by gnibbler's solution I was able to get a solution using Rational down to 53 52 characters. Still one longer than the (less elegant) solution above. def f(n,c)c.map{|i|return f(n*i,c)if i*n%1==0};n end Usage: irb> require 'rational' irb> f 60466176, [Rational(455, 33), Rational(11, 13), Rational(1, 11), Rational(3, 7), Rational(11, 2), Rational(1, 3)] => Rational(7888609052210118054117285652827862296732064351090230047702789306640625, 1) (A to_i call for prettier output would add 5 more characters.)
