[site]: crossvalidated
[post_id]: 501601
[parent_id]: 
[tags]: 
LSTM : Best approach for embedding phrases

I'm learning about LSTM for classifying an event sequence to determine if it required human intervention or if it's on its "normal" way What I have is a list of events with timestamps for each sequence, of the form : Time => User logged in Time => User edited his profile Time => Documents requested to the user Time => User uploaded new documents Time => Documents requested to the user Time => Documents requested to the user Time => User uploaded new documents [...] Each event is codified, there are approximately 150 distinct event types, with some "unknown/uncodified" events popping up from time to time (when an agents intervenes in the process, she can leave a comment which then shows in this event log) I read a bunch of article about machine learning, and I think i should build a LSTM with an embedding layer as the first layer, to come up with a representation of my events What I can't really decide on is if I should train / feed this layer with individual words of my event log, or if I should consider each event type as an individual "word" and the full sequence as a "phrase" composed of those "words" ? Subsequent question : how would this layer react to unknown/uncodified events ? should i disregard them ? would the former choice (word vs full sentences) impact this second question ?
