[site]: stackoverflow
[post_id]: 3154907
[parent_id]: 3153762
[tags]: 
tl;dr : no-cache was turned on Long Version i stumbled across a blog post from a guy having a similar problem: Debugging the Internet Explorer View Source problem with Fiddler and fixing ASP.NET Using the automatic debugging feature of Fiddler (a feature i'd never used), he narrowed it down the presence of a particular entry in the response headers: Vary: * He didn't understand why this header is causing IE to break, but he was able to remove it, and it fixed his problem. i don't have the vary: 0 header in my response, but it did give me a direction. i was reading the documentation that deals with this option: HttpCachePolicy.SetOmitVaryStar Method . One thing caught my eye: Note The use of the vary:* header can disable all client caching. And so i wondered if the reason that "the XML source isn't available for viewing" is that there's a policy in place forcing IE to delete the XML source as soon as it's done (i.e. don't cache it) Following in this guy's footsteps, i dug out fiddler and turned on the Automatic breakpoints after response feature. Turns out you can then muck with the response headers, rearranging, adding, changing, deleting stuff. Original headers (fails) HTTP/1.1 200 OK Date: Thu, 01 Jul 2010 02:53:35 GMT Server: Microsoft-IIS/7.0 Cache-Control: no-cache Pragma: no-cache Content-Type: text/xml; charset=utf-8 X-AspNet-Version: 2.0.50727 X-Powered-By: ASP.NET Content-Length: 134772 Via: 1.1 www.example.com ... i noticed that my headers have entries relating to caching: Cache-Control: no-cache Pragma: no-cache perhaps if i remove those? i go into the spot in fiddler and manually delete those two lines, leaving: Remove cache control headers HTTP/1.1 200 OK Date: Thu, 01 Jul 2010 02:55:06 GMT Server: Microsoft-IIS/7.0 Content-Type: text/xml; charset=utf-8 X-AspNet-Version: 2.0.50727 X-Powered-By: ASP.NET Content-Length: 134772 Via: 1.1 www.example.com ... Note: The headers are not there by mistake, the content is always stale, and i want the client to refresh every time. My initial solution fixes the problem, but introduces a new one - since the content is always stale. While i want ie to fetch every time, i don't really want it to delete its own local copy. The line in the ashx that's giving me grief is: //client don't cache it (it's too volatile) context.Response.Cache.SetCacheability(HttpCacheability.NoCache); which turns into: Cache-Control: no-cache Removing the line leaves Cacheability as its default (Private), giving the response value: Cache-Control: private This allows the client to cache the content, and i can view source in the browser.
