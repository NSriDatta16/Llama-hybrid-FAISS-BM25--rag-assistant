[site]: stackoverflow
[post_id]: 1579012
[parent_id]: 1573144
[tags]: 
I figured a work around until the sql_query associations gets fixed. The performance is worse than using the left joins but at the same time it reduces the amount of external code needed to make it work. So the define index was changed to use the SQL fragment to get the specific column directly instead of relying on any joins. define_index do has "(SELECT `value` " + "FROM `product_attributes` " + "WHERE `product_id` = `products`.`id` " + " AND `key` = 'Magnification' " + "LIMIT 0, 1)", :type => :float, :as => :magnification has "(SELECT `value` " + "FROM `product_attributes` " + "WHERE `product_id` = `products`.`id` " + " AND `key` = 'Objective Lens Diameter' " + "LIMIT 0, 1)", :type => :float, :as => :objective_lens_diameter end Generated sql_query SELECT `products`.`id` * 2 + 1 AS `id`, `products`.`id` AS `sphinx_internal_id`, 123456789 AS `class_crc`, IFNULL('987654321', 0) AS `subclass_crcs`, 0 AS `sphinx_deleted`, (SELECT `value` FROM `product_attributes` WHERE `product_id` = `products`.`id` AND `key` = 'Magnification' LIMIT 0, 1) AS `magnification`, (SELECT `value` FROM `product_attributes` WHERE `product_id` = `products`.`id` AND `key` = 'Objective Lens Diameter' LIMIT 0, 1) AS `objective_lens_diameter` FROM `products` WHERE `products`.`id` >= $start AND `products`.`id`
