[site]: stackoverflow
[post_id]: 3823447
[parent_id]: 3820155
[tags]: 
I don't think the sentence detection model provided with OpenNLP is a good fit for your task because it has been trained on data where whitespace follows sentence-final punctuation, since this is fairly standard in English orthography. English sentence detectors are typically intended to distinguish between sentence-final punctuation and punctuation used mid-sentence in abbreviations, quotes, etc. In all cases, your run-of-the-mill sentence detector is going to expect some kind of whitespace between sentences. If you want to use OpenNLP, I think the easiest solution would be to preprocess your data to add a space where you detect a pattern like [a-z][.?!][A-Z] . (This pattern clearly isn't sufficient, but just to give an idea.) There aren't many abbreviations that have formats like Nnnn.Nnnn or Nnnn?Nnnn so I bet you could achieve good results without using anything fancier than a regular expression, but that would depend on what your data looks like. Alternatively, you could use some kind of tokenizer with a custom model to find these cases. It's also possible you could train your own sentence detection model that doesn't expect whitespace between sentences, but it looks like that's going to be tricky with OpenNLP. Their provided training programs expect training data with one sentence per line, so there's no way to avoid inserting whitespace between sentences.
