[site]: stackoverflow
[post_id]: 3197818
[parent_id]: 
[tags]: 
Silverlight MVVM - How Can I Declaratively Bind a ComboBox in a DataGrid CellEditingTemplate using a ViewModel?

I am trying to declaratively bind a ComboBox within a DataGrid CellEditingTemplate using a ViewModel. The ComboBox is not being bound. What am I doing wrong? XAML: VIEW MODEL: using System.Collections.ObjectModel; using SilverlightApplication1.EmployeeService; using SilverlightApplication1.ViewModels; namespace SilverlightApplication1 { public class EmployeeDetailsViewModel : ViewModelBase { readonly IEmployeeServiceAgent _serviceAgent; ObservableCollection _employeeStatuses { get; set; } ObservableCollection _employees { get; set; } public EmployeeDetailsViewModel() : this(new EmployeeServiceAgent()) { } public EmployeeDetailsViewModel(IEmployeeServiceAgent serviceAgent) { if (!IsDesignTime) { _serviceAgent = serviceAgent; GetAllEmployees(); GetEmployeeStatuses(); } } public ObservableCollection Employees { get { return _employees; } set { if(_employees!=value) { _employees = value; OnNotifyPropertyChanged("Employees"); } } } public ObservableCollection EmployeeStatuses { get { return _employeeStatuses; } set { if (_employeeStatuses != value) { _employeeStatuses = value; OnNotifyPropertyChanged("EmployeeStatuses"); } } } private void GetAllEmployees() { _serviceAgent.GetAll((s, e) => Employees = e.Result); } private void GetEmployeeStatuses() { _serviceAgent.GetEmployeeStatuses((s, e) => EmployeeStatuses = e.Result); } } } Update: This seems wrong but I figured out how to get the binding working by re-referencing the ViewModel in the ItemSource Binding: However, a am now experiencing a problem where the SelectedItem is not bound! What am I doing wrong?
