[site]: stackoverflow
[post_id]: 4310116
[parent_id]: 4309445
[tags]: 
What's happening here is that jQuery is hijacking the value of this in the anonymous function used as a handler for the click event. It's kind of confusing, but jQuery's behavior is to assign the DOM element that triggered the event to this . There are a couple ways to set the value of this explicitly (the "context") for the callback function: Function.prototype.bind - Part of the ECMAScript 5 standard, just starting to be implemented in browsers. For legacy support, you can extract it from the Prototype library. $.proxy - jQuery's crappy equivalent of Function.prototype.bind, which was introduced in jQuery 1.4. I wrote a couple posts on my blog that explain these in more detail if you're interested: Organizing JavaScript with Namespaces and Function Prototypes Understanding jQuery 1.4's $.proxy() method In both cases, since this will now be your object and not the triggering DOM element, you can get the triggering DOM element by inspecting the event object, which will be the second parameter to your callback function.
