[site]: stackoverflow
[post_id]: 4943774
[parent_id]: 4856917
[tags]: 
Uploading files is actually possible with AJAX these days. Yes, AJAX, not some crappy AJAX wannabes like swf or java. This example might help you out: https://webblocks.nl/tests/ajax/file-drag-drop.html (It also includes the drag/drop interface but that's easily ignored.) Basically what it comes down to is this: document.getElementById('files').addEventListener('change', function(e) { var file = this.files[0]; var xhr = new XMLHttpRequest(); (xhr.upload || xhr).addEventListener('progress', function(e) { var done = e.position || e.loaded var total = e.totalSize || e.total; console.log('xhr progress: ' + Math.round(done/total*100) + '%'); }); xhr.addEventListener('load', function(e) { console.log('xhr upload complete', e, this.responseText); }); xhr.open('post', '/URL-HERE', true); xhr.send(file); }); (demo: http://jsfiddle.net/rudiedirkx/jzxmro8r/ ) So basically what it comes down to is this =) xhr.send(file); Where file is typeof Blob : http://www.w3.org/TR/FileAPI/ Another (better IMO) way is to use FormData . This allows you to 1) name a file, like in a form and 2) send other stuff (files too), like in a form. var fd = new FormData; fd.append('photo1', file); fd.append('photo2', file2); fd.append('other_data', 'foo bar'); xhr.send(fd); FormData makes the server code cleaner and more backward compatible (since the request now has the exact same format as normal forms). All of it is not experimental, but very modern. Chrome 8+ and Firefox 4+ know what to do, but I don't know about any others. This is how I handled the request (1 image per request) in PHP: if ( isset($_FILES['file']) ) { $filename = basename($_FILES['file']['name']); $error = true; // Only upload if on my home win dev machine if ( isset($_SERVER['WINDIR']) ) { $path = 'uploads/'.$filename; $error = !move_uploaded_file($_FILES['file']['tmp_name'], $path); } $rsp = array( 'error' => $error, // Used in JS 'filename' => $filename, 'filepath' => '/tests/uploads/' . $filename, // Web accessible ); echo json_encode($rsp); exit; }
