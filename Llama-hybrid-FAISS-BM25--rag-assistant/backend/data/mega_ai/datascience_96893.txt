[site]: datascience
[post_id]: 96893
[parent_id]: 
[tags]: 
How to train a neural network with symmetrical output?

I am attempting to train a neural network to predict output that is symmetric with respect to certain operations. It seems to me this creates a problem for training, because there are multiple equally acceptable answers. An example of a task that has this problem is prediction of the normal vector to a surface based on a cloud of points: $\vec{n}$ and $-\vec{n}$ are equally valid answers. What is the proper way to account for this? I have defined my loss function to return the distance from the "closest" correct answer, but still my model is unable to achieve any degree of accuracy. This question is similar to mine, but never received a satisfactory answer. One comment suggests comparing model output to whichever of two equivalent outputs would yield the lowest loss to calculate the loss function (which I have already done), and the only answer suggests to instead have the model predict both (equivalent) outputs. This unfortunately has the same problem: if $a$ and $b$ are the correct outputs, then the model outputs $(a, b)$ and $(b, a)$ are once again equally valid.
