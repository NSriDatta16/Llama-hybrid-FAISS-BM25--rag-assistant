[site]: stackoverflow
[post_id]: 2600020
[parent_id]: 2194153
[tags]: 
I have been able to accomplish something like what you want. Here is what I did, but I don't know if it works into the Infragistics package: 1- I downloaded the JQuery UI autofill textbox 2- I modified a little bit the sample given on the site. 3- I applied something to modify all my dropdown having a class named XYZ for the auto complete. I used a delegate, so when it generate a dropdown on the UI, it replaces it automatically by my autofill textbox. Sorry if my english is not perfect, it is not my first language. here's some code (Note: In the sample I haven't used the live() or delegate() function): (function($) { $.widget("ui.autoCompleteDDL", { _create: function() { var self = this; var select = this.element.hide(); var _isHoverUl = false; var input = $(" ") .addClass("ig_Edit igtxt_Edit") .width(select.width()) .addClass(select.attr("class")) .removeClass("AutoComplete DropDownList") .click(function(e){this.select(); }) .insertAfter(select) .autocomplete({ source: function(request, response) { var matcher = new RegExp(request.term, "i"); response(select.children("option").map(function() { var text = $(this).text(); if (!request.term || matcher.test(text)) return { id: $(this).val(), label: text.replace(new RegExp("(?![^&;]+;)(?! ]*)(" + request.term.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), " $1 "), value: text }; })); }, delay: 100, select: function(e, ui) { if (!ui.item) { // remove invalid value, as it didn't match anything $(this).val(""); return false; } $(this).focus(); select.val(ui.item.id); self._trigger("selected", null, { item: select.find("[value='" + ui.item.id + "']") }); }, minLength: 1 }) .blur(function(e){ var curInput= $(this); if (!_isHoverUl){ setTimeout(function(){ curInput.val(select.get(0).options[select.get(0).selectedIndex].text); input.autocomplete("close"); }, 150); // 150 is because of the autocomplete implementation. } }); // Fix for the scrollbar in IE7/8 $("body") .delegate(".ui-autocomplete", "mouseover", function(evt){ _isHoverUl = true;}) .delegate(".ui-autocomplete", "mousemove", function(evt){input.focus();}) .delegate(".ui-autocomplete", "mouseout", function(evt){_isHoverUl = false;}); // Possibility of showing an arrow button. $(" &nbsp; ") .insertAfter(input) .addClass("ui-icon-combo-arrow") .mouseover(function(){$(this).toggleClass("ui-icon-combo-arrow ui-icon-combo-arrowH"); }) .mouseout(function(){$(this).toggleClass("ui-icon-combo-arrow ui-icon-combo-arrowH"); }) .removeClass("ui-corner-all") .css({"display":"inline"}) .position({ my: "left center", at: "right center", of: input, offset: "-1 0" }) .attr("title", "") .click(function() { // close if already visible if (input.autocomplete("widget").is(":visible")) { input.autocomplete("close"); return; } // pass empty string as value to search for, displaying all results input.autocomplete("search", ""); input.focus(); }); input.val(select.get(0).options[select.get(0).selectedIndex].text); } }); })(jQuery); $(function() { $("select.AutoComplete").autoCompleteDDL(); }); I hope this helped
