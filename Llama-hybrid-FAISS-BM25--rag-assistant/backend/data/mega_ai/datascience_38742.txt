[site]: datascience
[post_id]: 38742
[parent_id]: 
[tags]: 
Reinforcement learning - How to deal with varying number of actions which do number approximation

I am a new to Reinforcement learning, but I am trying to use RL in this task: Given a function definition in written e.g. in C with 1 to 10s of input arguments (only numerical ones - integer, float, etc.) and the body of the function (represented as a Abstract Syntax Tree/ Abstract Decision Tree with data dependencies - how the internal variable values change) I would like to approximate the values of these input parameters so for e.g. a certain decision block is executed. For this I thought of a recurrent network with LSTM cells. Now, to achieve this, I would traverse one path in the tree leading to the block and take note of any data changes and decision blocks in the path. These steps would influence my parameter input predictions - what values to insert into/change in the input parameters if I wish to have a certain decision block executed. Action: Changing the value of one chosen input parameter of the function OR Changing the value of all input parameters individually (with mathematical different operation). After action execution, moving onto the next node in the tree. Reward: How close I am to executing the given decision block (thus satisfying the condition) with given input parameter values. Goal: Have a condition in the code satisfied and a decision block thus executed (e.g. an if condition is met). State: Current position in the AST/ADT with data dependencies. Assuming that I already have a way to evaluate, how far I am from executing the wanted decision block given current parameter input values, I came across two problems: How would I deal with varying number of function input parameters in RL? If I want to change their values to be closer to the execution of the wanted decision block, the number of given actions changes with the number of parameters defined for the given function. If I already did chose one parameter, what is the best way to do number approximation using RL? In the function body there could be numerous very complex mathematical operations happening, so should there be defined action as logarithm, exponentiation, division, multiplying, etc. or is there a better way with maybe just adding/subtracting from the current value?
