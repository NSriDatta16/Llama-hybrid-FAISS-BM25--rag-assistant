[site]: crossvalidated
[post_id]: 178328
[parent_id]: 178321
[tags]: 
Imagine you have a mixture of two normal distributions, the one on the left (L) and the one on the right (R) side of the plot presented below. To estimate $\mu_L$ and $\mu_R$ parameters you decide to use MCMC approach. Generally, in such case you would draw lots of random values so to substitute the $\mu_L$ and $\mu_R$ parameters and among those values you would look for the best candidates. The problem is that the sampler is dumb, it does not know that "obviously" $\mu_L$ label switching problem and it is very common problem when estimating mixtures with MCMC. It is called label switching because what you get from such simulation is two vectors $\boldsymbol{\mu_1}$ and $\boldsymbol{\mu_2}$ and each of those vectors would contain samples for both $\mu_L$ and $\mu_R$ parameters, sampler would not "know" that it should save all $\mu_L$ in $\boldsymbol{\mu_1}$ and $\mu_R$ in $\boldsymbol{\mu_2}$, so from time to time (randomly!) it would switch. What could be done about this problem? In such simple case there is an obvious solution: force an restraint that always $\mu_L$ mu1 and mu2 variables, or using different informative priors for each value). There is more ways of dealing with this problem (see this thread ), but unfortunately they not always work and not always are so simple as the one described. In many cases the problem is pretty easy to spot on traceplots. For example, look at the traceplots that you provided. If you compare plots for mu0 and mu1 , you will notice that until 3000th iteration the green chain was sampling for the "higher" $\mu$ and then switched to "lower" $\mu$, to make many more such exchanges during the whole simulation.
