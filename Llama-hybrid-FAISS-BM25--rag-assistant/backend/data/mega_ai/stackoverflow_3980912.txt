[site]: stackoverflow
[post_id]: 3980912
[parent_id]: 3980773
[tags]: 
Without any idea of your application's logic or table structure I can't comment further than saying that it has been my experience that the complexity of your queries will increase as the flexibility of the data model increases. With this comes performance pain as well. Also, in regards to foreign keys, I found this... reasons for defining foreign key constraints They physically define the business by preventing data integrity issues in your database. (e.g. The database prevents line items from being created without an existing order header) They logically document the business by showing how all data relates to each other. To someone new to your organization, this allows him/her to get a good understanding of how the business works. (e.g. Every order taken must have a valid customer assigned) Foreign Keys are native to SQL Server and are designed to prevent data integrity issues. Business logic developers should not be in the business of verifying table relationships. If defined and indexed correctly, they can be leveraged by the SQL Server query engine to generate extremely efficient query plans. from http://www.mssqltips.com/tip.asp?tip=1296
