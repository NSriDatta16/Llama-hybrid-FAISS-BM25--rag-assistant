[site]: stackoverflow
[post_id]: 3562249
[parent_id]: 
[tags]: 
How a class that wraps and provides access to a single file should be designed?

MyClass is all about providing access to a single file. It must CheckHeader() , ReadSomeData() , UpdateHeader(WithInfo) , etc. But since the file that this class represents is very complex, it requires special design considerations. That file contains a potentially huge folder-like tree structure with various node types and is block/cell based to handle fragmentation better. Size is usually smaller than 20 MB. It is not of my design. How would you design such a class? Read a ~20MB stream into memory? Put a copy on temp dir and keep its path as property? Keep a copy of big things on memory and expose them as read-only properties? GetThings() from the file with exception-throwing code? This class(es) will be used only by me at first, but if it ends good enough I might open-source it. (This is a question on design, but platform is .NET and class is about offline registry access for XP)
