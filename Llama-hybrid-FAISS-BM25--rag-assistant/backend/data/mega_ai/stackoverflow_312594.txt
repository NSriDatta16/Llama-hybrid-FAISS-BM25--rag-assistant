[site]: stackoverflow
[post_id]: 312594
[parent_id]: 220585
[tags]: 
It depends on the type of application and data load of your database but Access is quite efficient, even over the network. Depending on the amount of data your users deal with you could easily scale up to a 100 users on a network just using a from and back-end Access database. Looks like in your case a rewrite may be in order. If your application is data-centric if doesn't make much sense to develop it in VB6: the tools given by Access are much better than anything you'd be able to make, especially when considering Access 2007. Upsizing to SQL Server is only really required if you're getting into issues of: Security : you need to make sure that only the rights users can access data. You can do your own security in Access, but it's never going to be as strong as SQL Server. Scalability : you're dealing with lots of data and complex queries or a lot of users and it would be better to have dedicated hardware to handle the load for the clients. The issue with this though is that while removing the pressure from the less-capable clients machines, you're adding a lot more to the server. Integrity : With the back-end database being just a file that needs R/W access for all connected clients, there's always the possibility that someone is going to do something bad or that a client may crash and leave the database corrupted. If your number of users is average (I'd say 30), then there's probably no real need to upscale: Use MS Access 2007 to develop your application, then just use the MS Access 2007 Runtime (it's free!) on all client machines to get a more modern user interface (uses the Ribbon and has lots of UI enhancements over previous versions). You can't be the cheapness of that solution : you only need full retail version of MS Access and all the rest is free, regardess of the number of users! Don't think that moving to SQL Server is going to improve performance of your queries: MS Access often does a better job of optimizing the queries for you (it knows what needs to be displayed and does lots of caching and optimization). Make sure you only edit small amounts of data at any one time (don't use dynaset queries just to display vast amounts of data in a datasheet; use a snapshot instead and open a detail form that only contains the data to edit when necessary. Cache complex queries locally. Built some caching mechanism that leaves a copy of the results of a complex query on the local machine. The gain in performance is pretty amazing and if the query doens't change much (for instance a log of stock operations) you can just persist the complex/big query locally and append new records as necessary. There is so much more to say. Bottom line is: you may be looking at a rewrite, but don't dismiss Access as the solution because your current application was poorly written.
