[site]: crossvalidated
[post_id]: 525534
[parent_id]: 525479
[tags]: 
This is not my area of expertise, but I'll give it a go. According to the documentation in the vegan package for the diversity function, the Shannon or Shannon--Weaver (or Shannon--Wiener) index is defined as $H = -\sum p_i log(b) p_i$ , where $p_i$ is the proportional abundance of species $i$ and $b$ is the base of the logarithm. It is most popular to use natural logarithms, but some argue for base $b = 2$ (which makes sense, but no real difference). The package provides an example dataset, and shows how to obtain the Shannon index on that dataset. So let's take a quick look: ## data(BCI) ## dim(BCI) [1] 50 225 So the example dataset has 50 rows and 225 columns, let's take a look at the first 15 rows of the first 5 columns: ## head(BCI[, 1:5], 15) Abarema.macradenia Vachellia.melanoceras Acalypha.diversifolia Acalypha.macrostachya Adelia.triloba 1 0 0 0 0 0 2 0 0 0 0 0 3 0 0 0 0 0 4 0 0 0 0 3 5 0 0 0 0 1 6 0 0 0 0 0 7 0 0 0 0 0 8 0 0 0 0 0 9 0 0 0 0 5 10 1 0 0 0 0 11 0 0 0 0 0 12 0 0 0 0 1 13 0 0 0 0 1 14 0 0 0 0 0 15 0 0 0 0 2 So it looks like the columns are species, and the rows are counts for each species. The shannon index is obtained by: ## shan So it returns a vector of numbers, one for each row. Now let's apply this to your data. Let's take a look (I called the dataframe dt ): ## head(dt) Year Site Zone Species 1 2013 1 c Amblyglyphidodon curacao 2 2013 1 c Amblyglyphidodon curacao 3 2013 1 f Amblyglyphidodon curacao 4 2013 1 f Amblyglyphidodon leucogaster 5 2013 1 f Chaetodon semeion 6 2013 1 c Chromis analis The first issue is that your data is in long format, but the diversity function wants it in wide format with a column for each species. Also you don't have counts, you just have the species name if it was present or not in each year/site/zone. So we need to reshape the data. We can do this with the tidyr package (this is a little bit tricky and I had to use stackoverflow to find out how to do it, so if you are new to R, don't worry about it!). library(tidyr) dt %>% count(across(everything())) %>% pivot_wider(names_from = "Species", values_from = "n", values_fill = 0) -> dt.wide So here is the first columns of the reshaped data ( dt.wide ): ## head(dt.wide[, 1:6]) # A tibble: 6 x 6 Year Site Zone `Amblyglyphidodon curacao` `Chromis analis` `Ctenochaetus striatus` 1 2013 1 c 4 2 2 2 2013 1 f 1 0 0 3 2013 1 s 1 2 1 4 2013 2 c 2 1 1 5 2013 2 f 1 0 0 6 2013 2 s 0 1 1 Now we can call the diversity function. Note that it requires just a matrix/dataset of numbers so we need to exclude the first 3 columns: ## dt.wide2 So there you have the diversity indices for each year/site/zone Hope it helps !
