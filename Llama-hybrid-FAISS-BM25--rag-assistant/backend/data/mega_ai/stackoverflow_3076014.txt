[site]: stackoverflow
[post_id]: 3076014
[parent_id]: 
[tags]: 
Java. How to properly synchronize getters and setters?

If I have several mutable properties in an object that will be acted upon by several threads, I understand they should be synchronized. class Doggie { private String name; private int age; public void setName(String name) { this.name = name; } public String getName() { return this.name; } public void setAge(int age) { this.age = age; } public int getAge() { return this.age; } } Questions: Are not return and assignment atomic operations in Java? Since properties might not necessarily be interrelated, it does not always make sense to synchronize with the same lock. How to organize the locking structure? Is it better to go with the intrinsic lock or a private Object lock pattern?
