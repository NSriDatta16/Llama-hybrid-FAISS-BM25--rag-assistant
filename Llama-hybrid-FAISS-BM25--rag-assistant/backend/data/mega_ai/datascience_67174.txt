[site]: datascience
[post_id]: 67174
[parent_id]: 
[tags]: 
Deep reinforcement learning with multi-dimensional action

I am trying to design reinforcement learning algorithm. My action and state space are continuous. Action, which I would like to take can be represented by a matrix, lets say of dimension $n \times n$ . And I would like to use reinforcement learning to find optimal entries of this matrix. So far, I looked into deep reinforce algorithm. However, it is not clear to me how to design network/algorithm, such that it allows for modifying entries of the matrix. As far as I understood, output of the network should represent probability, with which we take certain action. I wonder, do I need to model each dimension of the action(each element of the matrix) as an independent prob. process? Is it good idea to model it by the same network?
