[site]: stackoverflow
[post_id]: 2990072
[parent_id]: 2989626
[tags]: 
Your overthinking the problem. By default, all references to all objects are pointers. This: IBOutlet UIButton *but1; ... defines a pointer. Therefore, all default operations with objects use pointers. You usually don't even have to think about it. To add a pointer to a UIButton to a NSMutableArray just use (note the self notation): [self.buttons addObject:self.but1]; The IBOutlet designation has not effect on references in code. It is just there so Interface Builder can parse source and figure out which properties is supposed pay attention to. Otherwise, it does nothing and you can ignore it. Of course, I have to ask: Why are you putting buttons that are already named properties into an array? Instead of this: [[buttons objectWithId:0] setImage:[UIImage imageNamed:@"image1.png"]]; ... why not just do this? [self.but1 setImage:[UIImage imageNamed:@"image1.png"] forState:UIControlStateNormal]; There's not much sense in using named properties if you don't use the names as the primary reference.
