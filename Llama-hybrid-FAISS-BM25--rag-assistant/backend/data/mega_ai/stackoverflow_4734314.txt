[site]: stackoverflow
[post_id]: 4734314
[parent_id]: 4733249
[tags]: 
Try not using any indexes. How many rows are there in the table overall? I notice that you are looking for 10k rows out of about 48k rows matching on just RemoveMeDate - the table must be large or you must be selecting a large proportion of the table. SELECT PageName FROM pads USE INDEX() WHERE RemoveMeDate = '2001-01-01 00:00:00' ORDER BY PadID DESC LIMIT 20000 , 30000 Not using any indexes forces it to just scan the table. Now if that doesn't help and is slower, try to make a specific index that orders DESC, e.g. try one of the two below CREATE INDEX IX_pads_rmd_iddesc ON pads (RemoveMeDate, PadID DESC, PageName) CREATE INDEX IX_pads_rmd_iddesc ON pads (RemoveMeDate, PadID DESC) In conjunction with FORCE INDEX in case it doesn't get selected automatically SELECT PageName FROM pads USE INDEX(IX_pads_rmd_iddesc) WHERE RemoveMeDate = '2001-01-01 00:00:00' ORDER BY PadID DESC LIMIT 20000 , 30000 Note that even though the indexes re created "PadID DESC", it is ignored by MySQL. One can hope that one day when it gets implemented it will fall into place. An index_col_name specification can end with ASC or DESC. These keywords are permitted for future extensions for specifying ascending or descending index value storage. Currently, they are parsed but ignored; index values are always stored in ascending order.
