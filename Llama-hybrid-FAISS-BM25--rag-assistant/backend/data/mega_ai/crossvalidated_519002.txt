[site]: crossvalidated
[post_id]: 519002
[parent_id]: 
[tags]: 
why does grid search cross validation give some value of mean square error for different values of c, gamma, epsilon in support vector machine?

I am using libsvm in matlab for time series prediction using support vector machine. when i use grid search cross validation to select paramaters C , GAMMA & EPSILON The value of cross validation mean square error is coming same for different values of these parameters so, by default the best parameters C, GAMMA & EPSILON are the first values in the given range of parameters which is clearly not the case. this is my code can you please suggest best parameter ranges (c, gamma,and Epsilon) % TRAINING DATASET SPECTR = csvread('train.csv'); % read a csv file trainlabels = SPECTR(:, 1); % labels from the 1st column trainfeatures = SPECTR(:, 2:end); trainfeatures_sparse = sparse(trainfeatures); % features must be in a sparse matrix libsvmwrite('SPECTRlibsvm.train', trainlabels, trainfeatures_sparse); % TESTING DATASET SPECTE = csvread('test.csv'); % read a csv file testlabels = SPECTE(:, 1); % labels from the 1st column testfeatures = SPECTE(:, 2:end); testfeatures_sparse = sparse(testfeatures); % features must be in a sparse matrix libsvmwrite('SPECTElibsvm.test', testlabels, testfeatures_sparse); idx1=[]; %GRID SEARCH [C,gamma,eps] = meshgrid(2:0.1:4, -2:0.1:0, -9:0.1:-6); for j=1:numel(C) cmd = ['-s 3 -t 2 -v 5 -c ', num2str(2^C(j)), ' -g ', num2str(2^gamma(j)), ' -p ', num2str(2^eps(j)),'-h' 0]; mse(j) = svmtrain(trainlabels, trainfeatures, cmd); sprintf('-c %f -g %f -p %f',2^C(j), 2^gamma(j),2^eps(j)); end [~,idx] = min(mse); idx1=[idx1 idx]; mse_cv =mse(idx); best_C = 2^C(idx); best_gamma = 2^gamma(idx); best_eps = 2^eps(idx);
