[site]: stackoverflow
[post_id]: 3270084
[parent_id]: 3270048
[tags]: 
Yes , so many files can be a problem. No , it is probably not a problem in your case , since this is only a back-end, which is probably accessed by a few people, and not too often. In general, I would discourage having more than 20 PHP files called on each page. This is because even the website and the server are highly optimized, for every page, the server must go and look at every file to see at least if it changed since the last request (if there is no cache implemented on this level). Even if the time to access a file is tiny, it is a time you are loosing at each request. This tiny period of time multiplied by 148 can become an issue (and a huge scalability problem). When I worked on a PHP framework project, I used a trick to reduce the number of files. Several files were combined to one minified file, and this single file was cached. Then, if there was a need to update the framework or the website, the cached file was automatically removed, then rebuilt. Even if I personally discourage you to minify the source code (because it is difficult to do, difficult to test, and creates a bunch of problems, like the meaningless numbers of lines in errors), you can probably do the same thing by combining all your files into a single file. Be careful: if a page A uses half of those files, and page B - another half, combining everything will probably decrease the performance , since PHP engine will have to parse more code.
