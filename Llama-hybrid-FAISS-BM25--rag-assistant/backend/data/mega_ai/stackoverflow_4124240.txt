[site]: stackoverflow
[post_id]: 4124240
[parent_id]: 
[tags]: 
State pattern and Hibernate without Enum

I've searched for the implementation of the State pattern in Java with Hibernate and found several references to a solution using Enums in order to provide a flexible way to add new States to the situation. I liked the solution here, where reflection is used to create the state object from the value of the table field "state" where the ConcreteState class name is saved: http://nerdboys.com/2007/06/08/state-pattern-persistence-with-hibernate/ But this solution was discouraged because holding a String value of the type com.myCompany.myProject.asdasd.ConcreteState in the DB would be a waste of space, in contrast to hold an integer value. So I wonder if there's a way to save the possible states in a table like: customer_states (PK id INT, className VARCHAR) And modify my customers table in order to have a FK to the state, like: customers (PK id INT, name VARCHAR, FK state INT) So I won't use more disk space than needed, and I would mantain the consistence of customer states so it is easy to add a new state to the situation... But, how would you implement this in your UserType??? Thanks!
