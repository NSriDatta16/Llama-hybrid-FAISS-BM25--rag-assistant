[site]: stackoverflow
[post_id]: 369710
[parent_id]: 369665
[tags]: 
When designing a database structure, it's best to normalize first and change for performance after you've profiled and benchmarked your queries. Normalization aims to prevent data-duplication, increase integrity and define the correct relationships between your data. Bear in mind that performing the join comes at a cost as well, so it's hard to say if your idea would help any. Proper indexing with a normalized structure would be much more helpful. And regarding row-level locks, that depends on the storage engine - some use row-level locking and some use table-locks.
