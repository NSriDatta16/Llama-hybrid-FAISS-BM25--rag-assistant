[site]: stackoverflow
[post_id]: 1306678
[parent_id]: 1302257
[tags]: 
Thanks to everyone for the answers! The best solution appears to be using "prebuilt building blocks": n x n arrays with already-selected cells, and covering the pixel array with these. For example, a 4 x 4 array with 12.5% coverage would be: 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 With 6.3% coverage: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 To get a % coverage between these, just alternate between these blocks according to a running tally of the overall actual % coverage so far. To cover a width that's not a multiple of 4, use some 3 x 3 blocks. To cover a larger area more efficiently, just use larger blocks. This covers the whole array efficiently with no distance calculations or floating-point arithmetic.
