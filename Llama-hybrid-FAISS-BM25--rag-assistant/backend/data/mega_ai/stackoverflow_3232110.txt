[site]: stackoverflow
[post_id]: 3232110
[parent_id]: 
[tags]: 
Parse file containing XML Fragments in Java

I inherited an "XML" license file containing no root element, but rather two XML fragments ( and ) so when I try to parse the file, I (expectantly) get an error about a document that is not-well-formed. I need to get both the XmlCreated and Product tags. Sample XML file: May 11 2009 21072832521007 72060034465DE1C3 500 8 Here is the current code that I use to attempt to load the XML. It does not work, but I've used it before as a starting point for well-formed XML. public static void main(String[] args) { try { File file = new File("C:\\path\\LicenseFile.xml"); DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance(); DocumentBuilder db = dbf.newDocumentBuilder(); Document doc = db.parse(file); } catch (Exception e) { e.printStackTrace(); } } At the db.parse(file) line, I get the following Exception: [Fatal Error] LicenseFile.xml:6:2: The markup in the document following the root element must be well-formed. org.xml.sax.SAXParseException: The markup in the document following the root element must be well-formed. at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source) at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source) at javax.xml.parsers.DocumentBuilder.parse(Unknown Source) at com.mycompany.licensesigning.LicenseSigner.main(LicenseSigner.java:20) How would I go about parsing this frustrating file?
