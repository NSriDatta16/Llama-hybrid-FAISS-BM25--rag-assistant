[site]: stackoverflow
[post_id]: 482515
[parent_id]: 482506
[tags]: 
I think one of the key points is to write code that is easily changable. This normally favours the specific instead of the abstract. There are also some design patterns that tend to build very big pillars through your code. Such pillars have a tendency to make changes happen in the wrong places because you get afraid of changing those monumental central pieces of your code that you really should be changing. Test coverage is a really great helper in allowing you to do fearless refactoring. It's the parachute that makes the difference between the crazy and the sane test plane pilot.
