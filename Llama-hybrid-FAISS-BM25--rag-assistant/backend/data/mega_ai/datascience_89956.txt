[site]: datascience
[post_id]: 89956
[parent_id]: 88687
[tags]: 
First, I don't understand why are you using naniar package for just a simple task of replacing values. You can use a very simple method to replace values. After getting data just use this to replace ? values in your data - > crx = as.data.frame(crx) > crx[crx == '?'] You will see summary like this - > summary(crx) V1 V2 V3 V4 V5 V6 V7 V8 V9 ? : 0 22.67 : 9 Min. : 0.000 ? : 0 ? : 0 c :137 v :399 Min. : 0.000 f:329 a :210 20.42 : 7 1st Qu.: 1.000 l : 2 g :519 q : 78 h :138 1st Qu.: 0.165 t:361 b :468 18.83 : 6 Median : 2.750 u :519 gg : 2 w : 64 bb : 59 Median : 1.000 NA's: 12 19.17 : 6 Mean : 4.759 y :163 p :163 i : 59 ff : 57 Mean : 2.223 20.67 : 6 3rd Qu.: 7.207 NA's: 6 NA's: 6 aa : 54 j : 8 3rd Qu.: 2.625 (Other):644 Max. :28.000 (Other):289 (Other): 20 Max. :28.500 NA's : 12 NA's : 9 NA's : 9 V10 V11 V12 V13 V14 V15 V16 f:395 Min. : 0.0 f:374 g:625 00000 :132 Min. : 0.0 -:383 t:295 1st Qu.: 0.0 t:316 p: 8 00120 : 35 1st Qu.: 0.0 +:307 Median : 0.0 s: 57 00200 : 35 Median : 5.0 Mean : 2.4 00160 : 34 Mean : 1017.4 3rd Qu.: 3.0 00080 : 30 3rd Qu.: 395.5 Max. :67.0 (Other):411 Max. :100000.0 NA's : 13 Run function str to get an idea about variable's values- > str(crx) 'data.frame': 690 obs. of 16 variables: $ V1 : Factor w/ 3 levels "?","a","b": 3 2 2 3 3 3 3 2 3 3 ... $ V2 : Factor w/ 350 levels "?","13.75","15.17",..: 158 330 91 127 45 170 181 76 312 257 ... $ V3 : num 0 4.46 0.5 1.54 5.62 ... $ V4 : Factor w/ 4 levels "?","l","u","y": 3 3 3 3 3 3 3 3 4 4 ... $ V5 : Factor w/ 4 levels "?","g","gg","p": 2 2 2 2 2 2 2 2 4 4 ... $ V6 : Factor w/ 15 levels "?","aa","c","cc",..: 14 12 12 14 14 11 13 4 10 14 ... $ V7 : Factor w/ 10 levels "?","bb","dd",..: 9 5 5 9 9 9 5 9 5 9 ... $ V8 : num 1.25 3.04 1.5 3.75 1.71 ... $ V9 : Factor w/ 2 levels "f","t": 2 2 2 2 2 2 2 2 2 2 ... $ V10: Factor w/ 2 levels "f","t": 2 2 1 2 1 1 1 1 1 1 ... $ V11: int 1 6 0 5 0 0 0 0 0 0 ... $ V12: Factor w/ 2 levels "f","t": 1 1 1 2 1 2 2 1 1 2 ... $ V13: Factor w/ 3 levels "g","p","s": 1 1 1 1 3 1 1 1 1 1 ... $ V14: Factor w/ 171 levels "?","00000","00017",..: 70 13 98 33 39 117 56 25 64 17 ... $ V15: int 0 560 824 3 0 0 31285 1349 314 1442 ... $ V16: Factor w/ 2 levels "-","+": 2 2 2 2 2 2 2 2 2 2 ... Here you see your columns V2 and V14 have more than 53 levels (categories). Random Forest can't be used with variables having more than 53 categories. So you can't use these in missForest. If you use, you will get error like this - Error in randomForest.default(x = obsX, y = obsY, ntree = ntree, mtry = mtry, : Can not handle categorical predictors with more than 53 categories. So your option is to use other variables except these two. > crx_impute = missForest(crx[,c(1,3,4,5,6,7,8,9,10,11,12,13,15,16)]) Then you can use crx_impute$ximp to get your imputed data.
