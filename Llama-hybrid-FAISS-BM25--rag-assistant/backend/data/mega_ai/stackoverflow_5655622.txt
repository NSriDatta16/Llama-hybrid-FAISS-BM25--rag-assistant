[site]: stackoverflow
[post_id]: 5655622
[parent_id]: 556396
[tags]: 
One way to 'test' an i18n application is to make sure you are addressing all the locale specific behaviors and translated resources. This usually requires setting up a QA plan. Among the steps you'll have to perform is making sure the formatting of currency, numbers, dates, times or other measurements are done properly, based on each locale. There is not specific tool that I know of to check for that. Another aspect is to make sure all the user visible strings are indeed out of the code and in the resource bundles, whichever type that may be (from .properties to .po to .xml ... the choice is large). Some QA team set up a 'pseudo-localization' strategy, meaning a resource bundle is created with the original strings in it but with prefix and suffix 'special' characters, such as Japanese Hiragana's for instance. Then invoking the application with the pseudo locale shows all the strings with the prefix and suffix while allowing the developer to see what is missing (those strings without the hiragana's) and how the layout management is behaving (cropping text which it should not). There are a number of tools to do that, like Globalyzer from Lingoport which deals with i18n in general and the pseudo localization is one part of it (in the menus, it's actually called "PseudoJudo"). It allows to grow the text by a given percentage, have only the prefix or only the suffix or both appended to the original string. Hope that answers your question, at least partly.
