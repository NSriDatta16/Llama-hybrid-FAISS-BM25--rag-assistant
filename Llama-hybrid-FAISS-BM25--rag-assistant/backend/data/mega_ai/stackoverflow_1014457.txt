[site]: stackoverflow
[post_id]: 1014457
[parent_id]: 1014369
[tags]: 
The idea of MVC is to decouple the application architecture into three independent tiers, and allow each of these tiers to use a different implementation without affecting the other tiers. Mostly the distinction is between business logic (the Model) and presentation (the View). Many PHP frameworks try to use the Ruby on Rails philosophy of "opinionated software" so the correct functioning of the Model and View together require that both conform to a certain implementation. That is, classes have to be named a certain way, files in the project have to be organized according to a certain directory structure, notation in the View scripts have to follow a convention, etc. This makes it hard to substitute different implementations of each tier independently, and this is against MVC's objective of decoupling the tiers from one another.
