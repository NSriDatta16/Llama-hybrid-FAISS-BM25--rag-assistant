[site]: stackoverflow
[post_id]: 4441837
[parent_id]: 
[tags]: 
Hibernate throws HibernateQueryException: could not resolve property

So I have a table that I've defined as an entity in hibernate like this: @Entity @Table(name = "sec_Preference") public class Preference { private long id; @Column(name = "PreferenceId", nullable = false, insertable = true, updatable = true, length = 19, precision = 0) @GeneratedValue(strategy = GenerationType.AUTO) @Id public long getId() { return id; } public void setId(long id) { this.id = id; } private long systemuserid; @Column(name = "SystemUserId", nullable = true, insertable = true, updatable = true, length = 19, precision = 0) @Basic public long getSystemUserId() { return systemuserid; } public void setSystemUserId(long systemuserid) { this.systemuserid = systemuserid; } private long dbgroupid; @Column(name = "DBGroupId", nullable = true, insertable = true, updatable = true, length = 19, precision = 0) @Basic public long getDBGroupId() { return dbgroupid; } public void setDBGroupId(long dbgroupid) { this.dbgroupid = dbgroupid; } private long externalgroupid; @Column(name = "ExternalGroupId", nullable = true, insertable = true, updatable = true, length = 19, precision = 0) @Basic public long getExternalGroupId() { return externalgroupid; } public void setExternalGroupId(long externalgroupid) { this.externalgroupid = externalgroupid; } private long securityroleid; @Column(name = "SecurityRoleId", nullable = true, insertable = true, updatable = true, length = 19, precision = 0) @Basic public long getSecurityRoleId() { return securityroleid; } public void setSecurityRoleId(long securityroleid) { this.securityroleid = securityroleid; } public void setEnum(com.vitalimages.common.server.security.Preference pref) { this.preferencekey = pref.name(); } private String preferencekey; @Column(name = "PreferenceKey", nullable = false, insertable = true, updatable = true, length = 255, precision = 0) @Basic public String getKey() { return preferencekey; } public void setKey(String key) { this.preferencekey = key; } private String preferencevalue; @Column(name = "PreferenceValue", nullable = true, insertable = true, updatable = true, length = 255, precision = 0) @Basic public String getValue() { return preferencevalue; } public void setValue(String value) { this.preferencevalue = value; } } When I tried to write a simple query against this table: public Collection getPreferencesForDBGroup(long dbgroupId) { final DetachedCriteria criteria = DetachedCriteria.forClass(Preference.class) .add(Restrictions.eq("dbgroupid", dbgroupId)) .setResultTransformer(DistinctRootEntityResultTransformer.INSTANCE); return getHibernateTemplate().findByCriteria(criteria); } I got the following error: org.springframework.orm.hibernate3.HibernateQueryException: could not resolve property: dbgroupid of: com.common.server.domain.sec.Preference; nested exception is org.hibernate.QueryException: could not resolve property: dbgroupid of: com.common.server.domain.sec.Preference Why can't hibernate figure out what dbgroupid is on my class?
