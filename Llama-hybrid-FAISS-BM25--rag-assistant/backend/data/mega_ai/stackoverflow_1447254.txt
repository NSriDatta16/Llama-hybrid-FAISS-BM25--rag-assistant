[site]: stackoverflow
[post_id]: 1447254
[parent_id]: 
[tags]: 
Generic XML sorting via XSLT applied by Java?

Basically, I want an exact copy of the XML, except I'd like to sort certain nodes by their ID attribute. Not all elements with the ID attribute should be sorted. I've kludged together a working stylesheet, but it requires me to hard-code the 's in for all sibling nodes to the nodes I'm sorting on. I've no formal schema, and I can't be certain that it won't change. I'd like to be able to create a more generic stylesheet which will output the non-sorted nodes without these explicit calls. Is this possible? My Java code to transform the XML: String input = "C:\\presort.xml"; String output = "C:\\postsort.xml"; String xsl = "C:\\sort.xsl" Document dom; try { dom = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(input); Element e = dom.getDocumentElement(); Transformer transform = TransformerFactory.newInstance().newTransformer( new StreamSource( new File(xsl) )); StreamResult result = new StreamResult(new File(output)); transform.transform(new DOMSource(dom), result); } catch (Exception e) { e.printStackTrace(); } My XML: true something Vin Vinigar 2 3 1 true Here be dragons John Doe 2 something Han Solo 3 My stylesheet: -->
