[site]: stackoverflow
[post_id]: 5213374
[parent_id]: 5213300
[tags]: 
First off, git is complex, but using github.com is a great way to understand it's strengths and to learn some of it's best practices. It's the site that I used while learning, and it has some good documentation on git workflow, tricks, etc. I recommend it as a way to move beyond the concepts that svn might have instilled that no longer apply. As far as organization of the repo between teams, whatever would make the most sense in a folder on some server applies equally to git, because git will essentially duplicate the full folder that is the repository root at all times. What may help is to have different teams work in different branches and rebase off of and push into a stable central branch frequently. I currently use master branch for production-ready code, a dev branch for potentially unstable code that merits sharing and testing, but shouldn't go live yet and local branches whenever I think of a new feature to try out.
