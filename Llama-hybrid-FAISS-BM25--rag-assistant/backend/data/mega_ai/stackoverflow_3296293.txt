[site]: stackoverflow
[post_id]: 3296293
[parent_id]: 3296272
[tags]: 
Use an active cache that detects changes directly in the database, like SqlCacheDependency . Or use a shared cache, like memcached . Or write an interprocess communication protocol between the two processes (the ASP.Net process and the classic ASP process). Implementing web service in the Classic ASP and calling the service from your ASP.Net could be a form of IPC good enough (inefficient, but simple). If there were a way to access the cache from both websites, that would be ideal. Using Memcached would give you just that. Memcached has both .Net client libraries and COM client libraries, so your ASP.Net and ASP Classic could both access the same Memcached farm (the 'farm' being in your case just one Memcached service running on the IIS server host). You would prefix all items with the application namespace to avoid colitions for separated items. The shared items you could either use a shared namespace (more elegant and efficient), but this would require the two clients to marshal the same (not trivial), or you could simple have each process invalidate the cache of the other one (less eficient and more ugly, but simpler).
