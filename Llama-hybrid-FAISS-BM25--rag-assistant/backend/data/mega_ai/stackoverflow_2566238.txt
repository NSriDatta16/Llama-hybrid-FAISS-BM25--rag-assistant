[site]: stackoverflow
[post_id]: 2566238
[parent_id]: 2565020
[tags]: 
My current approach to solving the problem is as follows: public class LegacyLibWrapper { // Don't expose the function... [DllImport("LegacyLib.dll", EntryPoint = "Login", CharSet = CharSet.Ansi)] static extern int UnmanagedLogin (ref SysInst inst, string username, string password); // ... we write a proxy function that does the truncation to passed to LegacyLib public static int Login(ref SysInst inst, string username, string password) { return UnmanagedLogin(inst, Truncate(username, 7), Truncate(password, 5)); } // A utility function to do string truncation private function Truncate(string originalString, int maxLength) { if (originalString.Length ... honestly it felt a bit of a drag having to write extra lines of code to get around that, I wonder whether there's a better way round of achieving it?
