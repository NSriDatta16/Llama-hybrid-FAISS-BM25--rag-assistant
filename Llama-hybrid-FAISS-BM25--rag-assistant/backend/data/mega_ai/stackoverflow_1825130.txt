[site]: stackoverflow
[post_id]: 1825130
[parent_id]: 
[tags]: 
How to encourage positive developer behavior with an IDE?

The goal of IDEs is increase productivity. They do a great job at that. Refactoring, navigation, inline documentation, auto completion help increase productivity immensely. But: Every tool is a weapon . The very same IDE helps to produce chunk code. Some IDE features are an invitation to produce bad code: code generation, code formatting tools, refactoring tools. IDE overuse tends to isolate developers from the necessary details. It is a good thing that you can start working but at some point in your career you have to be able to figure out how to start a process. You can ignore this detail for some time, in the end they are important to write a working product (vs. bolted together stuff that works 90% of the time). How do you encourage positive behavior of other developers working with an IDE? This is a question as old as copy and paste. To get the right impression: developers have to have the maximum freedom to mobilize their maximum creativity and motivation . They may use IDEs and all the related tools as they see fit. Nobody should impose draconian measures on them. I don't want to demotivate and force someone to do something. Good behavior has to be encouraged. It has to itch little a bit if you do the wrong thing. In the same line as the SO "accept rate" metric (and reputation). You can ignore it but life is better if you follow the rules . (The solution should work in a given setting. You can ignore reviews, changing the staffing or more education as potential solutions.)
