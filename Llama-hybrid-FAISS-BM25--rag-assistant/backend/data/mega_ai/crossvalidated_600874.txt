[site]: crossvalidated
[post_id]: 600874
[parent_id]: 
[tags]: 
Bayesian regression confidence intervals with Pymc3

This question is based on question 1 of the week 2 Statistical Rethinking problems, i.e. q1 here: https://github.com/rmcelreath/stat_rethinking_2022/blob/main/homework/week02.pdf I have a pandas data frame df with observed weights and heights (df.weight and df.height resp.) I am trying to use linear regression (predicting weight from height) with Pymc3 to find an 89% confidence interval for the weight of an 140cm tall individual. This is my setup so far with pm.Model() as q1_model: # specify the model alpha = pm.Normal('alpha', mu=45, sd=100) beta = pm.Normal('beta', mu=0, sd=10) sigma = pm.Uniform('sigma', lower=0, upper=50) weight = pm.Normal('weight', mu=alpha + beta * df.height_c, sd=sigma, observed=df.weight) # find the posterior distribution of the weight trace = pm.sample(1000) where df.height_c is df.height - df.height.mean(). But I'm not sure how to get the interval. I tried: pm.hdi(trace.alpha + (140 - df.height.mean()) * trace.beta, 0.89) which gives [35.0, 36.6] but I think this is just an interval for the mean height mu of an 140cm person, not for height itself. The actual interval is supposedly meant to be [29.1, 42.8] confirming my suspicion here.
