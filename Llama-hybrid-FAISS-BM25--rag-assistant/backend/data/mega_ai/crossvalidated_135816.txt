[site]: crossvalidated
[post_id]: 135816
[parent_id]: 
[tags]: 
Reinforcement learning with Neural Fitted Q-iteration

I have recently read this article - Neural Fitted Q Iteration - Machine Learning and I have tried implement in Python with PyBrain and NumPy on a simple task. The task is a point representation in 2D, that can move to 4 directions and tries to navigate itself to the origin with some tolerance distance. The point is initially generated in random position near enough the origin. I am giving rewards with this scheme - +1 when point is in target area, 0 when it is somewhere else and i've also tried to give a negative reward when the point is too far from the origin - -1. In every iteration of learning I collect samples from environment and then learn Neural Network with themn using RProp algorithm. The network has 4 inputs - position and action vectors and one output, Q(s,a) value. I also added a hidden layer with 5 neurons. My problem is that when I try to use this trained network, the point almost never reaches target. Has someone any idea what I can be doing wrong or missing? I am a beginner with Reinforcement learning so it is possible that I am forgetting something.
