[site]: stackoverflow
[post_id]: 5670304
[parent_id]: 2775261
[tags]: 
Well at least I'm not alone on this one - and it's still a stupid PITA almost a year later. The problem is a MIME type mismatch. WCF returns JSON response with Content-Type: application/json; charset=UTF-8 . The default IIS configuration , about halfway down that page, does not include that as a compressible MIME type. Now, it might be tempting to add an section to your web.config, and add application/json to that. But that's just a bad way to waste a good hour or two - you can only change the element at the applicationHost.config level. So there are two possible solutions. First, you could change your WCF response to use a MIME type that is compressible in the default configuration. text/json will work so adding this to your service method(s) will give you dynamic compression: WebOperationContext.Current.OutgoingResponse.ContentType = "text/json"; Alternatively, you could change the applicationHost.config file using appcmd and a startup task. This is discussed (among other things) on this thread . Note that if you add that startup task and run it in the dev fabric, it will work once. The second time it will fail because you already added the configuration element. I ended up creating a second cloud project with a separate csdef file, so that my devfabric would not run that startup script. There are probably other solutions though. Update My suggestion for separate projects in the previous paragraph is not really a good idea. Non-idempotent startup tasks are a very bad idea, because some day the Azure fabric will decide to restart your roles for you, the startup task will fail, and it'll go into a recycle loop. Most likely in the middle of the night. Instead, make your startup tasks idempotent as discussed on this SO thread .
