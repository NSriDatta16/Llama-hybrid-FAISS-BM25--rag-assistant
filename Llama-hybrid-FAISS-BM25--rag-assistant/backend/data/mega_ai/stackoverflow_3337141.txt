[site]: stackoverflow
[post_id]: 3337141
[parent_id]: 3337015
[tags]: 
Dave Hoover and Adewale Oshineye wrote an excellent book on Apprenticeship Patterns: http://www.amazon.com/Apprenticeship-Patterns-Guidance-Aspiring-Craftsman/dp/0596518382 They're particularly relevant to novice developers, but pretty good for experienced devs too! My two patterns of choice, and the ones which have made the most difference to me, are: Be the worst. If you are the best person in your team you're not learning anything from the others. Find a team in which you can learn from everyone. Breakable toys. Have your own pet project - open-source or otherwise - in which you can safely practice technologies and techniques which you're learning. I also really value feedback. I don't worry too much about addressing weaknesses if the team can back me up, but anything which makes me less able to work with teams, or any way in which I can use my strengths better, is golden. It's pretty hard - the human brain has a natural preference for validation, rather than feedback which changes your mental models - but if you can get over the courage needed to ask for it, it's utterly worth it.
