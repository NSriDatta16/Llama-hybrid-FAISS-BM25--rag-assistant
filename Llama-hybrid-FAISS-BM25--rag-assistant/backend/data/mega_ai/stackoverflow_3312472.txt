[site]: stackoverflow
[post_id]: 3312472
[parent_id]: 3312408
[tags]: 
The reason you might want to do this is because after you do a few manipulations with storage , you may not remember what to free() . Having storage_p as a copy that you never modify helps prevent memory leaks because you can call free(storage_p) later regardless of what happened to storage . Whether this outweighs the disadvantages already mentioned depends on details of the situation. An example: int *storage; storage = malloc(sizeof(int[GROW_BY])); storage++; free(storage); //SEGFAULT or MEMORY LEAK or OTHER BAD STUFF storage = NULL; vs int *storage, *storage_p; storage = malloc(sizeof(int[GROW_BY])); storage_p = storage; storage++; free(storage_p); storage_p=NULL; storage = NULL;
