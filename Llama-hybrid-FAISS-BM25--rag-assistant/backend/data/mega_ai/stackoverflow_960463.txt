[site]: stackoverflow
[post_id]: 960463
[parent_id]: 960418
[tags]: 
From Google search it picked up Art Gittleman's Computing With C# and the .Net Framework : Bertrand Meyer gives an example of payroll program, which produces paychecks from timecards. Management may later want to extend this program to produce statistics or tax information. The payroll function itself may need to be changed to produce weekly checks instead of biweekly checks, for example. The procedures used to implement the original payroll program would need to be changed to make any of these modifications. Meyer notes that any of these payroll programs will manipulate the same sort of data, employee records, company regulations, and so forth. Focusing on the more stable aspect of such systems, Mayer states a principle: "Ask not first what the system does: Ask WHAT it does to!"; and a definition: "Object-oriented design is the method which leads to software architectures based on objects every system or subsystem manipulates (rather than "the" function it meant to ensure)." We today take UML's class diagram and other OOAD approach for granted, but it was something that was "discovered" along the way. Also see Object-Oriented Design .
