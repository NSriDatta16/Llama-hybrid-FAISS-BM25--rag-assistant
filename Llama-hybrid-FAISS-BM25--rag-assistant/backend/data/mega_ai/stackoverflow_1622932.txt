[site]: stackoverflow
[post_id]: 1622932
[parent_id]: 1622076
[tags]: 
I think you're trying to understand too much at one time. For instance, a "TDD layer" makes no sense. DI and MVC are only tangentially related. DI does not specify what layer the business logic should be in. Start simple. Work on one concept at a time. Test out your knowledge in one language before trying to apply it everywhere. You've got some great books on your reading list; work through some of them. The Art of Unit Testing will give you a basic understanding of TDD; it covers pragmatic uses of Dependency Injection as well, but doesn't go very deeply into it. The Extreme Programming series will cover TDD in more detail. I'd suggest reading up on design patterns (don't start with the Gang of Four book - maybe Head First Design Patterns ) and general design principles ( Clean Code is a good start). Perhaps others can suggest references for learning about layered architecture. Expect this to take a while. Expect to continue learning throughout your career.
