[site]: stackoverflow
[post_id]: 2698477
[parent_id]: 2693143
[tags]: 
As for question 1, I don't see any reason those metrics would be bad in an Agile process. LOC provides you with a relative size measurement. While it may not always be useful to compare numbers between projects, it can provide you with a rate of growth within the project. If you can get it, the number of lines changed within a sprint may be useful as well to track a rate or refactoring. Code coverage (of lines of code) gives you a general sense of whether or not your team is meeting a minimum bar of automated testing within a project. As for question 2, keep the items above and here are a few more: LOC versus test count. If you can, maintain separate ratios for unit, integration and system tests. Average number of acceptance criteria versus test scenarios (or tests) for each story. It can help provide a better sense of whether or not your testing against the story's intent. Number of defects discovered Amount of work discovered (this is often captured by Agile tracking software) that wasn't part original estimates. It will help you judge if you are doing 'enough' planning. Tracking consistencies, or lack thereof, of velocity sprint to sprint While probably not popular and probably potentially dangerous, tracking estimates to work completed for each developer. While teams are supposed to be self organized and driven, not all teams are capable of dealing with human problems.
