[site]: stackoverflow
[post_id]: 827232
[parent_id]: 826661
[tags]: 
It comes down to the fact that the membership provider has an obvious mapping: RequiresQuestionAndAnswer , which you can set and have this enforced, but you can't specify that the user must supply an email address. Specifying that they must supply a unique email address with RequiresUniqueEmail is not the same as saying "requires an email" - so the CreateUserWizard is offering you the option of saying "I don't care that the email addresses aren't unique, just that there is one". As to why the membership provider should control whether a question is required: It's because the provider is also controlling things like EnablePasswordReset and EnablePasswordRetrieval - these are things that the memebership class has no knowledge of - in fact, even though the membership class has a " ValidateUser " method, it will use the default provider specified in the web.config to do this: The Membership class relies on membership providers to communicate with a data source. In response to question edits: a. That is correct, as Stephen points out , you could have one user with an empty email address, and then all others would have to have a value. Depending on your validators, this doesn't actually have to be a valid email addres. b.1. Not quite - The providers send data to and from your user data store - this might be SQL, but it could also be Active Directory, LDAP, a text file, etc, but yes, your provider acts as the seperation layer between your application and your user store. b.2. There are many parts to membership - the documentation on implementing a custom Membership User takes you through the steps needed to create a custom user - if your data storage didn't handle email addresses (or you wanted multiple emails stored in a profile), then your provider could just ignore any value sent through to you on create or update, and populate it with null on get.
