[site]: stackoverflow
[post_id]: 5519767
[parent_id]: 
[tags]: 
Wrapping the Dialog Procedure

I've been using the standard method for wrapping dialog procedures, by using a static dialog procedure in a class, and pure virtual dialog procedure that is derived later on. This works perfectly, but I have some design questions. Consider the definition of my static dialog procedure: INT_PTR __stdcall ModalDialog::router(HWND dlg, UINT msg, WPARAM wp, LPARAM lp) { ModalDialog *thisPtr = 0; if (msg == WM_INITDIALOG) { thisPtr = reinterpret_cast (lp); ::SetWindowLongPtr(dlg, DWLP_USER, reinterpret_cast (thisPtr)); thisPtr->_dlg = dlg; return static_cast (TRUE); } else thisPtr = reinterpret_cast (::GetWindowLongPtr(dlg, DWLP_USER)); if (thisPtr) //the virtual procedure from which to derive from return thisPtr->proc(msg, wp, lp); else //return false when not processing a message, look we should return static_cast (FALSE); } Lets say I want to add the following virtual methods to the ModalDialog base class: virtual bool onInitDialog(HWND dlg) = 0; virtual bool onCommand(HWND dlg, int high_word, int low_word) = 0; virtual bool onClose(HWND dlg) = 0; Would it be all right if I abandoned the virtual dialog procedure, and changed the static like so: INT_PTR __stdcall ModalDialog::router(HWND dlg, UINT msg, WPARAM wp, LPARAM lp) { ModalDialog *thisPtr = 0; if (msg == WM_INITDIALOG) { thisPtr = reinterpret_cast (lp); ::SetWindowLongPtr(dlg, DWLP_USER, reinterpret_cast (thisPtr)); thisPtr->_dlg = dlg; //ADDED onInitDialog(dlg); return static_cast (TRUE); } else thisPtr = reinterpret_cast (::GetWindowLongPtr(dlg, DWLP_USER)); //ADDED switch (msg) { case WM_COMMAND: if (thisPtr && thisPtr->onCommand(dlg, HIWORD(wp), LOWORD(lp))) return static_cast (TRUE); break; case WM_CLOSE: if (thisPtr && thisPtr->onClose(dlg)) return static_cast (TRUE); break; defualt: return static_cast (FALSE); //if (thisPtr) // return thisPtr->proc(msg, wp, lp); //else // return static_cast (FALSE); } That way in the base class I only have to redefine the virtual "on..." commands? I also noticed that ::EndDialog(thisPtr->_dlg,0) only works on WM_CLOSE? Do I still need to assign the _dlg from the thisPtr like this: thisPtr->_dlg = dlg? Thank you for any help you can give.
