[site]: stackoverflow
[post_id]: 4152039
[parent_id]: 4151917
[tags]: 
Comments inline. char*** get_chapter(FILE * infile) { int i=0; // This is a zero length array! // (The comma operator returns its right-hand value.) // Trying to modify any element here can cause havoc. char **chapter[10,000]; while(chapter[i]=get_paragraph(infile)) { // Do I read this right? I translate it as "if the first character of // the first line of the first paragraph is not whitespace, we're done." // Not the paragraph just read in -- the first paragraph. So this will exit // immediately or else loop forever and walk off the end of the array // of paragraphs. I think you mean **chapter[i] here. if(!isspace(**chapter[0])){ break; } i++; } // Using pre-increment here means you leave one item in the array uninitialized // which can also cause a fault later on. Use post-increment instead. // Also '\0' here is the wrong sort of zero; I think you need NULL instead. chapter[++i]='\0'; char**(*chap) = malloc(i * sizeof(*chap)); i=0; while(chapter[i]) { // This statement looks ambiguous to me. Referencing a variable twice and // incrementing it in the same statement? You may end up with an off-by-one error. chap[i] = chapter[i++]; } // Wrong flavor of zero again. chap[i]='\0'; return(chap); }
