[site]: stackoverflow
[post_id]: 2043657
[parent_id]: 1351209
[tags]: 
I've done this recently and the trick was to build a standalone version on a Leopard installation. By default, unless you have an open source version of Python installed, py2app creates a semi-standalone application that has symlinks to the OS files. If instead, you create a standalone version of the application, then the interpreter and supporting files are embedded within your application and are therefore consistent on all machines running your application. Instructions on creating a fully standalone application are available here , but pay attention to the blog's comments as some things did change after the blog post was written. If you have specific libs that you need you can reference them in the setup.py file or alternatively you can always add them manually to the dylib directory (which was easier for me as I needed to change the startup scripts and didn't want to regenerate), but make sure you use the 32-bit libs (which it will be on Leopard).
