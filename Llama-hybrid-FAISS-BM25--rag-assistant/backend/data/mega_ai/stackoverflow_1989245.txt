[site]: stackoverflow
[post_id]: 1989245
[parent_id]: 1989152
[tags]: 
The order is very dependent on the type of game. Most games have a basic interaction that is repeated over and over. That is where your focus should be. You've got to build the simplest prototype that lets you explore the core idea for your game, so you can see if it works (and adjust it as necessary). Some examples with actual games: Shooters, like Gears of War: Ducking under cover, firing at enemies. Needs 3d, path finding and collisions, maps with various layouts and a bit of AI. RPGs, like Dragon Age: Here you need the rule system used to calculate skills, damages, and simulate combat. If the combat is not somewhat deep and enjoyable, no amount of 3d or even story is going to save it. Platform-based, like Mirrors Edge. The map layout and the input system are needed to see if you can actually do something. So what I'm saying is that you should determine what is the stuff you absolutely need, and leave everything else for later. If the sound is not important to the gameplay, leave it. If the game is not text-heavy, leave the menus. And so on. If you are doing something that is 3d based, you will need the 3d engine fairly early, as it usually influences other parts of the game. And another thing. Try not to be too ambitious. With every little thing you add, your game becomes harder to balance, more so if you want to do something with multiplayer. It's better to have something simple that can be played that something complicated that never was even usable.
