[site]: stackoverflow
[post_id]: 3668271
[parent_id]: 3633110
[tags]: 
It seems to me that your problem, as stated, has a trivial solution: check for hole in current position walk forward 1 step, check for hole walk backward 2 steps, check for hole walk forward 3 steps, check for hole walk backward 4 steps, check for hole... This walk will visit all relative integers, with probability 1. Of course, what you really want is to optimize for the average amount of steps that the cow will have to take, which is known as the search game problem . The solution is an 1-dimensional exponential "spiral"; you just replace the 1-2-3-4-5 arithmetical sequence above with a geometrical one, multiplying by 2 each time. That is: check for hole in current position walk forward 1 step, checking for hole at each step walk backward 2 steps, checking for hole at each step walk forward 4 steps, checking for hole at each step walk backward 8 steps, checking for hole at each step... Google for "The Cow-Path Problem", which is a generalization of yours to an N-way crossroad (you have only two, "left" and "right")
