[site]: stackoverflow
[post_id]: 1319978
[parent_id]: 1319965
[tags]: 
It's hard to answer, because load isn't simply a matter of requests per unit time. It depends on what those requests are doing and how they're implemented. For example, more reads than writes might mean a lighter load. Asynchronous processing of writes might mean a lighter load than having to wait for synchronous processing to complete. One extreme would be stock trading systems that handle billions of transactions each trading day. Look at the typical volume on the NYSE or NASDAQ and use that to estimate a high value per minute. Let's say 2B transactions in a trading day is representative for NASDAQ. Markets open at 9AM and close at 4PM, so that's 7 hours*3600 seconds/hour = 25200 seconds. That would give an average of 2B transactions/25200 seconds = 79,365 transactions per second - a very high load, indeed. They obviously use lots of servers, so you'd need that number to figure out what the load per server should be. If SO can be considered a good benchmark, you might ask about its volume on meta.
