[site]: stackoverflow
[post_id]: 869372
[parent_id]: 
[tags]: 
Continuous Integration Server Setup: From Dev to Production

We are in the process of re-configuring our server environment, from Development to Production. All servers will be Windows 2008 servers running as VM's. We will be using TeamCity for Continuous Integration and SubVersion as our Version Control System. After reading some of the recommendations, here is what I am planning on going with so far (not including any redundancy, disaster recovery, etc...): Production: (1) Web Server + (1) DB Server Staging: (1) Web Server + (1) DB Server Build: (1) SVN + TeamCity Web&DB + (1) TeamCity Agent Development: (1) Web/DB Server So a total of 2 Production + 2 Staging + 2-3 Build + 1 Dev = 7-8 Servers My questions were: Should SVN be on a dedicated Server, or can it live on the Dev server? Answer: Concensus so far seems to be that SVN should not be on the Dev server. It should either be standalone, or could be paired up on the same server as TeamCity. Should TeamCity be on a dedicated Server, or can it live on the SVN server? Answer: Concensus so far is that TeamCity could be on the same server as SVN, particularly if the TeamCity Agents and SQL DB are on separate servers. Any other recommendations, best practices? Answer: TeamCity should be split up across 3 server instances: One for TeamCity Web, one for TeamCity Agents, and one for the TeamCity SQL DB. I'm trying to have a solid best-practice setup while minimize server sprawl.
