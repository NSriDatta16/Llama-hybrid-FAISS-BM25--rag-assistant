[site]: stackoverflow
[post_id]: 890297
[parent_id]: 
[tags]: 
Modeling atomic facts in a relational database

I want to record what various sources have to say about a historical figure. i.e. The website Wikipedia says that Susan B. Anthony was born February 15, 1820 and her favorite color was blue The book Century of Struggle says that Susan B. Anthony was born on February 12, 1820 and her favorite color was red The book History of Woman's Suffrage says that Susan B. Anthony was born on February 15, 1820 and her favorite color was red and she was the second cousin of Abraham Lincoln I also want researchers to be able to express their confidence, for instance with a percentage, in the individual claims that these sources are making. i.e. User A is 90% confident that Susan B. Anthony was born on February 15, 1820; 75% confident that her favorite color was blue, and 30% confident that she was second cousins with Abraham Lincoln User B is 30% confident that Susan B. Anthony was born on February 12, 1820; 60% confident that her favorite color was blue, and 10% confident that she was second cousins with Abraham Lincoln I then want each user to have a view of Susan B. Anthony that shows her birthday, favorite color, and relationships that the users thinks are most likely to be true. I'm also want to use a relational database datastore, and the way that I can think to do this is to create a separate table for every individual type of atomic fact that I want the users to be able to express their confidence in. So for this example there would be eight tables in total, and three separate table for the three separate atomic facts. Source(id) Person(id) Claim(claim_id, source, FOREIGN KEY(source) REFERENCES Source(id) ) Alleged_birth_date(claim_id, person, birth_date, FOREIGN KEY(claim_id) REFERENCES Claim(id), FOREIGN KEY(person) REFERENCES person(id)) Alleged_favorite_color(claim_id, person, color, FOREIGN KEY(claim_id) REFERENCES Claim(id), FOREIGN KEY(person) REFERENCES person(id)) Alleged_kinship(claim_id, person, relationship type, kin, FOREIGN KEY(claim_id) REFERENCES Claim(id), FOREIGN KEY(person) REFERENCES Person(id)) User(id) Confidence_in_claim(user, claim, confidence, FOREIGN KEY(user) REFERENCES User(id), FOREIGN KEY(claim) REFERENCES claim(id)) This feels like it gets very complicated very quickly, as actually want to record a lot of types of atomic facts. Are there better ways to do this? This is, I think, the same issue that Martin Fowler calls Contradictory Observations .
