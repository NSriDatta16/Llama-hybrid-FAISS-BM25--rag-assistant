[site]: stackoverflow
[post_id]: 4418735
[parent_id]: 4418708
[tags]: 
C doesn't have a string as part of the language. A 'string' in C is just a pointer to char. So maybe you're asking the wrong question. "What's the rationale for leaving out a string type" might be more relevant. To that I would point out that C is not an object oriented language and only has basic value types. A string is a higher level concept that has to be implemented by in some way combining values of other types. C is at a lower level of abstraction. in light of the raging squall below: I just want to point out that I'm not trying to say this is a stupid or bad question, or that the C way of representing strings is the best choice. I'm trying to clarify that the question would be more succinctly put if you take into account the fact that C has no mechanism for differentiating a string as a datatype from a byte array. Is this the best choice in light of the processing and memory power of todays computers? Probably not. But hindsight is always 20/20 and all that :)
