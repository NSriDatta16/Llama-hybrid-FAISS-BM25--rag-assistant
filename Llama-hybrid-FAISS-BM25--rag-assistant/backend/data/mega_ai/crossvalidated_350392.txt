[site]: crossvalidated
[post_id]: 350392
[parent_id]: 
[tags]: 
How to do one-class classification?

I am working on a classification model for crop detection. Let say I have the data of wheat only. I want my classifier to recognize its pattern and after providing a new data set, it should tell me whether it is wheat or not. I applied one class classification: clf = svm.OneClassSVM(nu=0.1, kernel="rbf", gamma=0.1) clf.fit(X_train) y_pred_train = clf.predict(X_train) y_pred_test = clf.predict(X_test) y_pred_outliers = clf.predict(X_outliers) where X_train contains only wheat points. X_test also contains only wheat points and X_outliers contains all the other crops. Size of X_train is 1400, Size of X_test is 400 and size of X_ouliers is 8000. Now when I calculated error on my prediction, the results are very bad. n_error_train = y_pred_train[y_pred_train == -1].size n_error_test = y_pred_test[y_pred_test == -1].size n_error_outliers = y_pred_outliers[y_pred_outliers == 1].size print((1 - n_error_train/len(y_pred_train))*100) print((1 - n_error_test/len(y_pred_test))*100) print((1 - n_error_outliers/len(y_pred_outliers))*100) Output : 90.08875739644971 87.61061946902655 21.459667093469914 Now, I understand that maybe I have other crops data which are confusing with wheat because of their closely matched features. And maybe because of this SVM is predicting it all wrong. First, I want to know if I applying one class SVM correctly?? If yes, then I want to know if there is any other one class classification I can do with such type of data? There has to be something to achieve my goals. Please help. PS: My data is actually ndvi-time series data.
