[site]: stackoverflow
[post_id]: 3172777
[parent_id]: 3055168
[tags]: 
Add these to a utility class if you don't want to add a dependency to fl.motion.* /** * Rotates a matrix about a point defined inside the matrix's transformation space. * This can be used to rotate a movie clip around a transformation point inside itself. * * @param m A Matrix instance. * * @param x The x coordinate of the point. * * @param y The y coordinate of the point. * * @param angleDegrees The angle of rotation in degrees. * @playerversion Flash 9.0.28.0 * @langversion 3.0 * @keyword Matrix, Copy Motion as ActionScript * @see flash.geom.Matrix */ public static function rotateAroundInternalPoint(m:Matrix, x:Number, y:Number, angleDegrees:Number):void { var point:Point = new Point(x, y); point = m.transformPoint(point); m.tx -= point.x; m.ty -= point.y; m.rotate(angleDegrees*(Math.PI/180)); m.tx += point.x; m.ty += point.y; } /** * Rotates a matrix about a point defined outside the matrix's transformation space. * This can be used to rotate a movie clip around a transformation point in its parent. * * @param m A Matrix instance. * * @param x The x coordinate of the point. * * @param y The y coordinate of the point. * * @param angleDegrees The angle of rotation in degrees. * @playerversion Flash 9.0.28.0 * @langversion 3.0 * @keyword Matrix, Copy Motion as ActionScript * @see flash.geom.Matrix */ public static function rotateAroundExternalPoint(m:Matrix, x:Number, y:Number, angleDegrees:Number):void { m.tx -= x; m.ty -= y; m.rotate(angleDegrees*(Math.PI/180)); m.tx += x; m.ty += y; } They are MatrixTransformer's rotateAroundInternalPoint() and rotateAroundExternalPoint() That would be for 2d. For 3d see transformAround . Don't forget to check if layout siblings are updated properly or not. HTH
