[site]: stackoverflow
[post_id]: 3357411
[parent_id]: 3352627
[tags]: 
While you can accomplish what you want with the event.drag/drop script it is also easily done using jquery ui - draggable/droppable. For the event., you need to return false if it meets yours criteria (or vice versa): $('#drag1').drop("init",function(){ if ( $( this ).is('#badDiv') ) return false; }) Here is the jquery ui version, it has a built in accept option in the $().droppable function - it accepts selectors also. This example is reverse of above. The above will let you move anywhere but badDiv, whereas this example below will won't let you move anywhere but the defined droppable: script: $("#drag1, #drag2").draggable({ revert: 'invalid' }); $("#drop").droppable({ accept: '#drag1', drop: function(event, ui) { // whatever happens on drop } }); html: This creates a big droppable area, but it will only accept the draggable ID of drag1. To see this effect you also need the option in your draggable for revert. This case I set it to invalid so the draggable will slide back to its original position if the drop is not valid. I'm not sure of your exact application, but maybe this will point you in the right direction of what you're trying to accomplish. I believe that the sorttables uses a similar setup, but that has more with appending divs and adjusting tables.
