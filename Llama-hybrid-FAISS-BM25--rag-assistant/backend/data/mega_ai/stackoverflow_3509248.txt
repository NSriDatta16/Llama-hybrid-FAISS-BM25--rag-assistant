[site]: stackoverflow
[post_id]: 3509248
[parent_id]: 3491852
[tags]: 
I just wanted to add some flesh to Agent_9191's answer and record the steps I took for the posterity : Question 1 Read Getting started tutorial carefully (no I didn't but I wished I did) Changed the example to my fit my own interface The default generated proxy changes the interface quite substancially; All collection classes is made to array and all classes that you want to transfer is stripped of all methods, due to the delivery mechanism. To access the domain classes both in server and client follow the advice of this post The domain classes that will be used have to be serializable with [DataContract] and [DataMember] from System.Runtime.Serializion.dll These WCF samples helped me to understand what's going on too Question 2 Made a class that implemented my interface again added an static instance in the Service private static MyManager myManager = new MyManager(); simply forwarded all the calls public Project[] GetProjects() { return myManager.GetProjects(); } Question 3 Two-way contract: How to: Create a Duplex Contract I will have the state in memory and not in a database for now, when I change that I will rethink the approach.
