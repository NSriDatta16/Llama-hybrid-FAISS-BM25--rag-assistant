[site]: crossvalidated
[post_id]: 398724
[parent_id]: 
[tags]: 
Target for a Poker game Neural Network

I've created a python simulation of a texas holdem poker game with 3 random actions, check/fold, check/call and bet. I have then looped this round several times to produce a training data set for each decision. With the outcome of the hand in terms of final hand strength, profit and also action taken. I've then created a variety of models with the favored being a one hot softmax category for each of the 3 actions. However, when I re-run the simulation comparing random against the trained model, I barely do better than random. I'm currently only training on actions where the profit of the hand is => 0. However I've read that excluding negative data can adversely effect the model. I've also tried changing the action to check/fold where there is a loss, as this would have been the correct action to take. However the model is then massively skewed towards folding and predicts fold 99.9% of the time. What is the best target variable to use? Can I use a categorical target, applying the magnitude or significance of that scenario using the profit?
