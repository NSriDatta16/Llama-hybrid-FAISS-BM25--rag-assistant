[site]: stackoverflow
[post_id]: 2913937
[parent_id]: 2913836
[tags]: 
Take a closer look at this paragraph from the article you linked to: View This View doesn't know about the Controller, except that it provides methods for registering a Controller's listeners. Other organizations are possible (eg, the Controller's listeners are non-private variables that can be referenced by the View, the View calls the Controller to get listeners, the View calls methods in the Controller to process actions, ...). You have the observer pattern here between the View and the Controller. MVC is not a single pattern per se but at least two combined. One way to get your head around managing the View/Controller communication is to use events. The View fires events on certain user actions (without knowing necessarily who might handle them.) The Controller processes these events and acts accordingly.
