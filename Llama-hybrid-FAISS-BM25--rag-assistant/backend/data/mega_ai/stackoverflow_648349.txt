[site]: stackoverflow
[post_id]: 648349
[parent_id]: 648305
[tags]: 
I think this is the wrong question. What you need to do is analyze the differences between the platforms and how they impact your organization. To give you a real world example. I worked for a small company which had only ever built Web based applications. One of the apps was not succesful, in part because we had a lot of dialup users, and needed offline support. The company went ahead and developed a .net client application, and they got a rude awakening. The company was not prepared for the complexity of deploying to any number of client configurations. We got bit by Novell Networks for example. They were not prepared for the increase cost of supporting a client application. (And yes the development had cautioned and tried to warn them what this meant). So not only do you need to ask various questions but you need to evaluate them within the context of the organization producing the software. Things to ask include: First and formost is can your app run as a web app? Some apps just arent feasible. if you need access to low level resources, your not going have many options. Can you afford the maintance costs of client software? If this is a distributed app, what happens when you update the server but the clients arent updated. Can you support the client? What experience does the team building the software? This is huge IMHO. No matter how good a team is at building web applications, they will make mistakes doing client apps that an experinced client developer wouldn't.
