[site]: stackoverflow
[post_id]: 4376172
[parent_id]: 4375790
[tags]: 
When modifying system configuration files such as /etc/fstab keep in mind that these are critical state and, should your "edit" be interrupted by a power loss, might result in a failure to reboot. The way to deal with this is: create an empty output: FILE* out = setmntent("/etc/fstab.new", "rw"); open the original for input: FILE* in = setmntent("/etc/fstab", "r"); copy the contents: while (m = getmntent(in)) { addmntent(out, m); } make sure the output has it all: fflush(out); endmntent(out); endmntent(in); atomically replace /etc/fstab : rename("/etc/fstab.new", "/etc/fstab"); It's left as an exercise to the reader to change the body of the while loop to make a modification to an existing element, to substitute a specifically crafted mntent or whatever. If you have specific questions on that please ask. UN*X semantics for rename() guarantee that even in the case of power loss, you'll have either the original version or your new updated one. There's a reason why there is no modifymntent() - because that would encourage bad programming / bad ways of changing system critical files. You say at the end of your post "... probably fine ..." - not . The only safe way to change a system configuration file is to write a complete modified copy, sync that to safe storage, and then use rename to replace the old one.
