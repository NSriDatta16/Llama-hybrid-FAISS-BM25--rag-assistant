[site]: stackoverflow
[post_id]: 1013823
[parent_id]: 1012229
[tags]: 
It wouldn't make sense for this to work at the moment, as the ViewPage internally always verifies that the model is an instance of T. You'd never be able to pass null because of this check. As for why structure types weren't allowed in the first place, there were a multitude of reasons. Among them: (a) it might encourage people to use custom structure types for a model, which is almost never the correct thing to do; (b) you can't pass a structure type as a parameter to Controller.UpdateModel(); (c) models should have reference equality in order that filters can inspect and modify them; (d) the built-in structure types like int, etc., normally aren't useful by themselves as your model object; and (e) structure types don't support inheritance, e.g. passing an int model into a ViewPage would blow up. It turns out that (c) probably isn't a problem because structure types should be immutable, but the other items require that allowing structure types be given ample thought and design decision before supporting them. The consequences of supporting these are much greater than just removing the constraint on ViewPage .
