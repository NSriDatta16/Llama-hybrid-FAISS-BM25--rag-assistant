[site]: stackoverflow
[post_id]: 2365543
[parent_id]: 
[tags]: 
SQL Server 2005 Execution Plan

I am attempting to troubleshoot a slow running stored procedure in SQL Server 2005. I am analyzing the execution plan and see a SORT that is 45%, but I am not using an ORDER clauses. What would be causing this. UPDATE SP (cleaned up, and made change on OR's) SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO ALTER PROCEDURE [dbo].[Rpt_D] @AsOfDate datetime, @LEA int, @SchoolName varchar(max), @Grade varchar(8000), @Gender varchar(8000), @Race varchar(8000), @UserID int AS SET NOCOUNT ON Declare @AsOfMonth int, @AsOfDay int SET @AsOfMonth = DATEPART(MONTH, @AsOfDate) SET @AsOfDay = DATEPART(DAY, @AsOfDate) CREATE TABLE #TempSchool ( SchoolESIID int, LEAESIID int ) CREATE TABLE #TempRace ( Race varchar(60) ) CREATE TABLE #TempGender ( GenderCode char(1) ) CREATE TABLE #TempGrade ( GradeCode char(2) ) DECLARE @UserLevel nvarchar(10), @ESILEAList nvarchar(max), @ESISchoolList nvarchar(max) EXEC Staging.dbo.GetUserFilter @userId = @userid, @userLevel = @Userlevel out, @ESILEAList = @ESILEAList out, @ESISchoolList = @ESISchoolList out -- Parse parameters into tables INSERT INTO #TempSchool SELECT ParsedValue, PrntESIID FROM dbo.tfnParseStringIntoTable(@SchoolName, ',') INNER JOIN dbo.CALPADSOrg co ON ParsedValue = ChESIID INSERT INTO #TempRace SELECT ParsedValue FROM dbo.tfnParseStringIntoTable(@Race, ',') INSERT INTO #TempGender SELECT ParsedValue FROM dbo.tfnParseStringIntoTable(@Gender, ',') INSERT INTO #TempGrade SELECT ParsedValue FROM dbo.tfnParseStringIntoTable(@Grade, ',') SELECT DISTINCT ser.ESIIDLeaRptng AS LEARptngEsiID, ser.EsiIDSchlAtndnc AS SchoolESIID, resi.CDSEttyCode AS SchlAtndncCode, resi.CDSEttyName AS SchlAtndncName, ser.StuKey, s.StuIDStwdCal, ISNULL(sdr.StuLastOrSrnmLgl,'') + ', ' + ISNULL(sdr.StuFstNameLgl,'') + ' ' + ISNULL(sdr.StuMdlNameLgl,'') AS StudentName, ser.StuIDLcl, rg.GndrCode AS GndrCode, ISNULL( CASE WHEN sdr.StuHspncEnctyIndctr = 'Y' THEN 'Hispanic' WHEN sdr.StuEnctyMsngIndctr = 'Y' OR sdr.StuRaceMsngIndctr = 'Y' THEN 'Missing' WHEN srr.RaceCatg2Code IS NOT NULL THEN 'Multiple' ELSE srr.FedEnctyRaceCatgCode END, 'Missing') AS RaceEnthnicity, rgl.GrdLvlCode AS GrdLvlCode, ISNULL( CASE relass.EngLangAcqstnStatStCode WHEN 'EL' THEN 'Y' ELSE 'N' END, 'N') AS EnglishLearner, ISNULL( CASE WHEN ISNULL(sdr.StuIneligSnorImgrntIndctr, 'Y') = 'N' AND ISNULL(ssr.StuEnrldUSSchlLessThanThreCumltvYrsIndctr, 'N') = 'Y' AND ISNULL(sdr.rptCntryCode, 'US') != 'US' AND ISNULL(res.EnrlmtStatCode, '0') = '10' AND ISNULL( CASE WHEN sdr.StuBirMonth = @AsOfDate)) LEFT JOIN dbo.RefEngLangAcqstnStatSt relass ON selar.EngLangAcqstnStatStKey = relass.EngLangAcqstnStatStKey LEFT JOIN dbo.RefEngLangArtsTestProfcy relatp ON selar.ElaTestProfcyDsgntnKey = relatp.EngLangArtsTestProfcyKey INNER JOIN dbo.StuDemo sdr ON ser.StuKey = sdr.StuKey INNER JOIN dbo.RefGndr rg ON sdr.GndrCodeKey = rg.GndrCodeKey LEFT JOIN dbo.StuStat ssr ON ser.StuKey = ssr.StuKey AND (ssr.EfctvStartDate = @AsOfDate)) INNER JOIN dbo.StuGrdLvl sglr ON ser.StuKey = sglr.StuKey INNER JOIN dbo.RefGrdLvl rgl ON sglr.GrdLvlKey = rgl.GrdLvlKey LEFT JOIN dbo.StuPgm spr ON ser.StuKey = spr.StuKey AND (spr.StuEduPgmMbrshpCatgStartDate = @AsOfDate)) LEFT JOIN dbo.RefEduPgm rep ON spr.EduPgmCodeKey = rep.EduPgmCodeKey LEFT JOIN dbo.StuPrntOrGrdn spogr ON ser.StuKey = spogr.StuKey AND (spogr.EfctvStartDate = @AsOfDate)) LEFT JOIN dbo.RefHighstEduLvl rhel ON spogr.PrntOrGrdnHighstEduLvlCodeKey = rhel.HighstEduLvlKey LEFT JOIN dbo.vwStuRaceRptng srr ON ser.StuKey = srr.StuKey AND (srr.EfctvStartDate = @AsOfDate)) INNER JOIN #TempRace tr ON ISNULL( CASE WHEN sdr.StuHspncEnctyIndctr = 'Y' THEN 'Hispanic' WHEN sdr.StuEnctyMsngIndctr = 'Y' OR sdr.StuRaceMsngIndctr = 'Y' THEN 'Missing' WHEN srr.RaceCatg2Code IS NOT NULL THEN 'Multiple' ELSE srr.FedEnctyRaceCatgCode END, 'Missing') = tr.Race INNER JOIN #TempGender tg ON rg.GndrCode = tg.GenderCode INNER JOIN #TempGrade tgr ON rgl.GrdLvLCode = tgr.GradeCode WHERE (ser.StuEsiRltnspExpctdSchlStartDate = @AsOfDate)) AND (res.EnrlmtStatCode = '10') AND (ISNULL(rsec.StuExitCatgCode, 'N/A') != 'N470') AND (sdr.EfctvStartDate = @AsOfDate)) AND (sglr.EfctvStartDate = @AsOfDate)) AND ((spr.DeleteFlag IS NULL) OR (spr.DeleteFlag = 'N')) AND ((spogr.DeleteFlag IS NULL) OR (spogr.DeleteFlag = 'N')) AND ((sglr.DeleteFlag IS NULL) OR (sglr.DeleteFlag = 'N')) AND ((selar.DeleteFlag IS NULL) OR (selar.DeleteFlag = 'N')) AND ((sdr.DeleetFlag IS NULL) OR (sdr.DeleetFlag = 'N')) AND ((ser.DeleteFlag IS NULL) OR (ser.DeleteFlag = 'N')) DROP TABLE #TempSchool DROP TABLE #TempRace DROP TABLE #TempGender DROP TABLE #TempGrade vwStuRaceRptng View SELECT sr.StuRaceKey, sr.StuKey, rr1.RaceCatgCode, rr1.RaceCatgName, rferc1.FedEnctyRaceCatgKey, rferc1.FedEnctyRaceCatgCode, rferc1.FedEnctyRaceCatgName, rr2.RaceCatgCode AS RaceCatg2Code, rr2.RaceCatgName AS RaceCatg2Name, rferc2.FedEnctyRaceCatgKey AS FedEnctyRaceCatg2Key, rferc2.FedEnctyRaceCatgCode AS FedEnctyRaceCatg2Code, rferc2.FedEnctyRaceCatgName AS FedEnctyRaceCatg2Name, rr3.RaceCatgCode AS RaceCatg3Code, rr3.RaceCatgName AS RaceCatg3Name, rferc3.FedEnctyRaceCatgKey AS FedEnctyRaceCatg3Key, rferc3.FedEnctyRaceCatgCode AS FedEnctyRaceCatg3Code, rferc3.FedEnctyRaceCatgName AS FedEnctyRaceCatg3Name, rr4.RaceCatgCode AS RaceCatg4Code, rr4.RaceCatgName AS RaceCatg4Name, rferc4.FedEnctyRaceCatgKey AS FedEnctyRaceCatg4Key, rferc4.FedEnctyRaceCatgCode AS FedEnctyRaceCatg4Code, rferc4.FedEnctyRaceCatgName AS FedEnctyRaceCatg4Name, rr5.RaceCatgCode AS RaceCatg5Code, rr5.RaceCatgName AS RaceCatg5Name, rferc5.FedEnctyRaceCatgKey AS FedEnctyRaceCatg5Key, rferc5.FedEnctyRaceCatgCode AS FedEnctyRaceCatg5Code, rferc5.FedEnctyRaceCatgName AS FedEnctyRaceCatg5Name, sr.EfctvStartDate, sr.EfctvEndDate FROM dbo.StuRace AS sr INNER JOIN dbo.RefRace AS rr1 ON sr.RaceCatgKey = rr1.RaceCatgKey LEFT OUTER JOIN dbo.RefRace AS rr2 ON sr.RaceCatg2Key = rr2.RaceCatgKey LEFT OUTER JOIN dbo.RefRace AS rr3 ON sr.RaceCatg3Key = rr3.RaceCatgKey LEFT OUTER JOIN dbo.RefRace AS rr4 ON sr.RaceCatg4Key = rr4.RaceCatgKey LEFT OUTER JOIN dbo.RefRace AS rr5 ON sr.RaceCatg5Key = rr5.RaceCatgKey LEFT OUTER JOIN dbo.RefFedEnctyRaceCatg AS rferc1 ON rr1.FedEnctyRaceCatgKey = rferc1.FedEnctyRaceCatgKey LEFT OUTER JOIN dbo.RefFedEnctyRaceCatg AS rferc2 ON rr2.FedEnctyRaceCatgKey = rferc2.FedEnctyRaceCatgKey LEFT OUTER JOIN dbo.RefFedEnctyRaceCatg AS rferc3 ON rr3.FedEnctyRaceCatgKey = rferc3.FedEnctyRaceCatgKey LEFT OUTER JOIN dbo.RefFedEnctyRaceCatg AS rferc4 ON rr4.FedEnctyRaceCatgKey = rferc4.FedEnctyRaceCatgKey LEFT OUTER JOIN dbo.RefFedEnctyRaceCatg AS rferc5 ON rr5.FedEnctyRaceCatgKey = rferc5.FedEnctyRaceCatgKey WHERE (ISNULL(sr.DeleteFlag, 'N') = 'N') OLD SP SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATEPROCEDURE [dbo].[Rpt_D] @AsOfDate datetime, @LEA int, @SchoolName varchar(max), @Grade varchar(8000), @Gender varchar(8000), @Race varchar(8000), @UserID int AS Declare @AsOfMonth int, @AsOfDay int select @AsOfMonth = datepart(month, @AsOfDate) select @AsOfDay = datepart(day, @AsOfDate) Create table #TempSchool ( SchoolESIID int, LEAESIID int ) Create table #TempRace ( Race varchar(60) ) Create table #TempGender ( GenderCode char(1) ) Create table #TempGrade ( GradeCode char(2) ) declare @UserLevel nVarchar(10), @ESILEAList nvarchar(max), @ESISchoolList nvarchar(max) exec Staging.dbo.GetUserFilter @userId=@userid,@userLevel=@Userlevel out,@ESILEAList=@ESILEAList out,@ESISchoolList=@ESISchoolList out -- Parse parameters into tables Insert into #TempSchool select ParsedValue, PrntESIID from dbo.tfnParseStringIntoTable(@SchoolName, ',') inner join dbo.CALPADSOrg co on ParsedValue = ChESIID Insert into #TempRace select ParsedValue from dbo.tfnParseStringIntoTable(@Race, ',') Insert into #TempGender select ParsedValue from dbo.tfnParseStringIntoTable(@Gender, ',') Insert into #TempGrade select ParsedValue from dbo.tfnParseStringIntoTable(@Grade, ',') Select DISTINCT ser.ESIIDLeaRptng as LEARptngEsiID, ser.EsiIDSchlAtndnc as SchoolESIID, resi.CDSEttyCode as SchlAtndncCode, resi.CDSEttyName as SchlAtndncName, ser.StuKey, s.StuIDStwdCal, isnull(sdr.StuLastOrSrnmLgl,'') + ', ' + isnull(sdr.StuFstNameLgl,'') + ' ' + isnull(sdr.StuMdlNameLgl,'') as StudentName, ser.StuIDLcl, rg.GndrCode as GndrCode, isnull(case when sdr.StuHspncEnctyIndctr = 'Y' then 'Hispanic' when sdr.StuEnctyMsngIndctr = 'Y' or sdr.StuRaceMsngIndctr = 'Y' then 'Missing' when srr.RaceCatg2Code is not null then 'Multiple' else srr.FedEnctyRaceCatgCode end, 'Missing') as RaceEnthnicity, rgl.GrdLvlCode as GrdLvlCode, isnull( case relass.EngLangAcqstnStatStCode when 'EL' then 'Y' else 'N' end, 'N') as EnglishLearner, isnull( case when -- if a value is null, set it to any value that will evaluate to false in the expression -- only students with valid information should be counted as Title III Eligible Immigrants isnull(sdr.StuIneligSnorImgrntIndctr, 'Y') = 'N' AND isnull(ssr.StuEnrldUSSchlLessThanThreCumltvYrsIndctr, 'N') = 'Y' AND isnull(sdr.rptCntryCode, 'US') != 'US' AND isnull(res.EnrlmtStatCode, '0') = '10' AND -- Calculate age from birth date isnull(case when sdr.StuBirMonth = @AsOfDate) left join dbo.RefEngLangAcqstnStatSt relass on selar.EngLangAcqstnStatStKey = relass.EngLangAcqstnStatStKey left join dbo.RefEngLangArtsTestProfcy relatp on selar.ElaTestProfcyDsgntnKey = relatp.EngLangArtsTestProfcyKey inner join dbo.StuDemo sdr on ser.StuKey = sdr.StuKey inner join dbo.RefGndr rg on sdr.GndrCodeKey = rg.GndrCodeKey left join dbo.StuStat ssr on ser.StuKey = ssr.StuKey and ssr.EfctvStartDate = @AsOfDate) inner join dbo.StuGrdLvl sglr on ser.StuKey = sglr.StuKey inner join dbo.RefGrdLvl rgl on sglr.GrdLvlKey = rgl.GrdLvlKey left join dbo.StuPgm spr on ser.StuKey = spr.StuKey AND spr.StuEduPgmMbrshpCatgStartDate = @AsOfDate) left join dbo.RefEduPgm rep on spr.EduPgmCodeKey = rep.EduPgmCodeKey left join dbo.StuPrntOrGrdn spogr on ser.StuKey = spogr.StuKey And spogr.EfctvStartDate = @AsOfDate) left join dbo.RefHighstEduLvl rhel on spogr.PrntOrGrdnHighstEduLvlCodeKey = rhel.HighstEduLvlKey left join dbo.vwStuRaceRptng srr on ser.StuKey = srr.StuKey and srr.EfctvStartDate = @AsOfDate) inner join #TempRace tr on isnull( case when sdr.StuHspncEnctyIndctr = 'Y' then 'Hispanic' when sdr.StuEnctyMsngIndctr = 'Y' or sdr.StuRaceMsngIndctr = 'Y' then 'Missing' when srr.RaceCatg2Code is not null then 'Multiple' else srr.FedEnctyRaceCatgCode end, 'Missing') = tr.Race inner join #TempGender tg on rg.GndrCode = tg.GenderCode inner join #TempGrade tgr on rgl.GrdLvLCode = tgr.GradeCode Where -- Enrollments ser.StuEsiRltnspExpctdSchlStartDate = @AsOfDate) AND res.EnrlmtStatCode = '10' AND isnull(rsec.StuExitCatgCode, 'N/A') != 'N470' AND -- no shows are not considered in active enrollment numbers -- Effective date Comparisions. As of date should be between Effective Start and End date (end date can be null) sdr.EfctvStartDate = @AsOfDate) AND sglr.EfctvStartDate = @AsOfDate) AND -- Filter deleted records out (spr.DeleteFlag is null OR spr.DeleteFlag = 'N') AND (spogr.DeleteFlag is null OR spogr.DeleteFlag = 'N') AND (sglr.DeleteFlag is null OR sglr.DeleteFlag = 'N') AND (selar.DeleteFlag is null OR selar.DeleteFlag = 'N') AND (sdr.DeleetFlag is null OR sdr.DeleetFlag = 'N') AND (ser.DeleteFlag is null OR ser.DeleteFlag = 'N') Drop table #TempSchool Drop table #TempRace Drop table #TempGender Drop table #TempGrade Thanks for any help. Just as an FYI, the tfnParseStringIntoTable Function returns a table bases on a comma seperated list of values.
