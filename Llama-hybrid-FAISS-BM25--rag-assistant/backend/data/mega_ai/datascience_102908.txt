[site]: datascience
[post_id]: 102908
[parent_id]: 
[tags]: 
Methods to combine datasets from different time periods

Consider a multivariate time series forecasting task where I have two datasets A and B. A goes from 1960 to 2020 and B goes from 2010 to 2020. There is a feature f in A that I am trying to forecast with just using the dataset A. I'm using deep learning for this task. I have a hypothesis that the dataset B can provide additional information when trying to predict f but it only starts from 2010. What are the best practices to use A and B together to improve upon the model forecasting 'f'? I'm thinking of the following options. But I'd like to know if there are more effective ways. Train model on A, $model_A$ , to forecast f . Train a second model, $model_{AB}$ that uses the outputs from $model_A$ with dataset B for the period 2010-2020 to improve the forecast of f . Similarly, one could use the concept of gradient boosting to iteratively reduce residual error from $model_{AB}$ Train model on A, $model_A$ , to forecast f . Use the weights from this model as pre-training and fine tune on a dataset where A and B are combined for the period of 2010-2020. Unlike the above option, the second training tunes the original model weights. I'm worried this approach will bias the model with the more recent data. Any thoughts on this? Combine A and B for the full 1960-2020 period where in the missing fields for B from 1980-2009 are filled with 0s. This is likely to bias the dataset as well as most of the time B's fields are zero. Any thoughts on the above methods or other ideas worth thinking about?
