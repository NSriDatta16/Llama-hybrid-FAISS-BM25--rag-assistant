[site]: stackoverflow
[post_id]: 1242513
[parent_id]: 1191131
[tags]: 
Shamelessly stealing Henry's formatting... it is faster and more accurate to check explicit boolean instead of implied; use instead of do not use evaluate(), de(), or iif()... ever. there is always a way around these slow functions understand structures, keys, values and how to access query and structure data using array notation. (this will usually get around your need for evaluate()) do not use pound signs unless you are outputting data or otherwise creating a string (don't do this: myFunction(arg = #myVar#) ) read and understand the difference between THIS and VARIABLES scope in a CFC avoid extreme overuse of when you probably need to use a just before you begin your output (before doctype, xml declaration, or ) don't blindly drop ColdFusion values into an HTML script block (javascript) without using jsStringFormat() if you are not using text in your XML, you may want to use xmlFormat() when creating an XML document don't use Windows registry for Client scope data. Use the database. if your IT architecture permits, use Session data instead of Client data. use correctly and consistently; shared data will leak in your Application. if you are going to use Java objects, understand the Java error messages (for example, 'method cannot be found' may not mean the method does not exist at all, it means the method does not exist for the arguments you've supplied) if you have to read large files, either use the new CF8 "File" functions or hand off the task to Java on CF6 & 7. is inefficient for large files. understand pass-by-reference and pass-by-value, and how those concepts work in CF; specifically when using functions to modify XML documents as Henry stated, always use ; also ensure that you are using the correct CFSQLType parameter for your DBMS (for date, time, timestamp, etc) don't chain together a series of and logic blocks, use and if you have more than three conditions you need to handle more of an architecture note: always do some sort of server side validation to catch the nasty data the wolf-shirt-wearing user may be passing you last architecture note: let CF do your middle layer of data retrieval and display and let your webserver do webserver things like SEO URLs (I'm looking at you ColdCourse)
