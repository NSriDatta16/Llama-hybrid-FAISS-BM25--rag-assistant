[site]: crossvalidated
[post_id]: 160219
[parent_id]: 
[tags]: 
Backtesting in neural network field

I'm new to the neural network field and I would like to understand how one can backtest a neural network trained with backpropagation methodology. Particularly, I have a time series dataset and I trained a neural network by using the neuralnet package in R; initially, my idea was to divide the dataset up 2 sub-samples: the Training Set , constituted by the 70% of available data; the Test Set , constituted by the remaining 30% of data; and use the training set to develop the model and the test one for backtesting purposes. Of course, I thought to take those ones chronologically neighbouring. Browsing on the internet, I found that the cross-validation methodology is used in this field; although there are different views about the way implementing this methodology, most ones suggest to divide the dataset up 5 sub-samples and use 4/5 for training and the rest to test the net. I wonder if such methodology can be applied reasonably to neural network models and if it has sense applied to time series data. Can you suggest what backtesting methodology adapts better to times series data?
