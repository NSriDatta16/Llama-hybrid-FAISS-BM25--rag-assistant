[site]: stackoverflow
[post_id]: 5651052
[parent_id]: 5649556
[tags]: 
Here is the JSFiddle Demo: Basically, you were using var count to keep track of the number of markers. You can do markers.length for that. Instead of using markers[count] you can use native array's push method to add element into the array. To remove use splice(i, 1); where i is the element's position and remove 1 element from that position. Also, to check if two markers are equal or the "same" instead using getTitle() use === which does: is exactly equal to (value and type) The problem is if you create two or more markers on the same position it would remove both markers but in reality you only remove one of the two "clones" and thus leaving a marker un-removable. This is caused by using getTitle which returns lat lng and if you have two markers w/ same lat lng you have an issue. Also, i changed, within your onclick function, marker1 to this which are referring to the same object for readability. //Function to place markers. function placeMarker(location) { if (zoomLevel == map.getZoom()) { if (true) { var marker1 = new google.maps.Marker({ position: location, map: map, draggable: true }); count = count + 1; markers.push(marker1); document.getElementById("count").value = markers.length; google.maps.event.addListener(marker1, 'rightclick', function(event) { document.getElementById("test2").value = "funkar"; for (var i = 0; i
