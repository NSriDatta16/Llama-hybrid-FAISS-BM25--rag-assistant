[site]: crossvalidated
[post_id]: 387338
[parent_id]: 
[tags]: 
How to to get normal distributed neural network output

I am trying to build a neural network that predicts a pair of latitude / longitude coordinates following a previous pair of latitude and longitude (highly simplified). The latitudes and longitudes from my training dataset are approximately normal distributed, so I decided to go by best practices and standardise my inputs (scale them to a mean of 0 and standard deviation of 1). This works just fine, but now I am wondering what activation function I should use on the last layer of my network. I would expect my outputs to be of the same order of magnitude (mostly within [-1, 1] but a noteworthy number outside), so I can convert them back to actual latitudes and longitudes using the inverse of my standardisation scaler. I considered sigmoid at first, but that should only give me values in the fourth quadrant within the "border" drawn by the standard deviation of the inputs as I can only get positive outputs up to 1. Next, I considered tanh, which solves the quadrant problem but still limits me to outputs within the "standard deviation border". By "standard deviation border" I mean the somewhat rectangular shape around the mean (lat,lon) point of two times the standard deviation on both axis. I hope this makes more sense. Please tell me, if I am entirely on the wrong track. Maybe outputting actual latitudes and longitudes is the better idea in the first place?
