[site]: stackoverflow
[post_id]: 2964766
[parent_id]: 2964685
[tags]: 
The push_front logic is wrong. It should look like this: void push_front(int value){ first = new Node(first, value); ++len; } While we're at it, your operator= isn't exception-safe. Implement copying in the copy-constructor and assign using the copy-and-swap idiom: List& operator=(List other) { swap(other); return *this; } void swap(List& other) { Node* tnode = first; first = other.first; other.first = tnode; int tlen = len; len = other.len; other.len = tlen; } On another note, don't implement the at member function; random access is very inefficient, and should not be encouraged. Implement iterators instead.
