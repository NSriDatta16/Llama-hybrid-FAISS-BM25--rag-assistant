[site]: datascience
[post_id]: 11174
[parent_id]: 11167
[tags]: 
With a few exceptions, you can pretty much use any machine learning algorithm for your model. The beauty of most machine learning packages is that the interface for each model is mostly the same (although the tuning parameters will differ), and it takes just a few lines of code to try out each model. There is no reason you should artificially constrain yourself to trying certain models. Some exceptions to this rule are algorithms that might only work for classification or only work for regression. It sounds like you're trying to predict a continuous target variable that you'll then use for ranking. If that's the case, then you won't be able to use an algorithm called Naive Bayes because it can only output probabilities. In other rare cases like Deep Learning models, the run time can be very long (hours or days) and in those cases you wouldn't want to use an algorithm like that unless you had a good reason to do so (e.g., face recognition in images). You should be able to use nearly every algorithm in MLlib though: gradient boosting, random forests, etc.
