[site]: stackoverflow
[post_id]: 2925057
[parent_id]: 2923509
[tags]: 
I wish those who label PK columns as ID would offer a list of benefits. You get responses like this: it is very easy to just prefix the column name with the table name using dot notation User_ID or User.ID That's not an advantage of just ID as a name. What does it do for you that USER_ID won't do? Or I pretty much always choose "ID" because I'm very comfortable with the table aliasing That's awesome this guy is comfortable, what's the benefit? Here's my argument: Would you have any other n columns all named exactly the same, all meaning completely different things? Would you allow the column "COST" to mean 5 different things in five different tables? Wouldn't you want to call them, "TOTAL_COST", "DIRECT_COST", "AVERAGE_COST", etc? SO why would you do that with ID? If you wouldn't do that for any other column, be consistent. I use the dictionary tables a lot. I like to query the database's own tables for discovery. Sometimes you'll find missing referential integrity constraints. If the columns are named the same, you can find most missing constraints with no other information. You look for PK's, get the column name USER_ID, Look for other tables with USER_ID, check to see if it has a constraint. If you name your PK ID, you'll also have to know what the convention is Is the FK column named, %Table%_ID or %Table%ID or %Table%_FK or %Table%FK? A tautological column naming convention is much simpler than some function.
