[site]: stackoverflow
[post_id]: 582302
[parent_id]: 
[tags]: 
Are there optimized c++ compilers for template use?

C++ templates have been a blessing in my everyday work because of its power. But one cannot ignore the (very very very very long) compilation time that results from the heavy use of templates (hello meta-programming and Boost libraries). I have read and tried quite a lot of possibilities to manually reorganize and modify template code to make it compile as fast as possible. Now I am wondering if there are any c++ compilers that try and minimize the needed time to interpret template classes. I might be wrong, but i feel that the compilers i do know have only added template interpretation to their previous versions. My questions are : Is c++ template code so difficult to interpret that there is not much to optimize ? (i highly doubt that) Are there c++ compilers that truly optimize "c++ templates" interpretation ? Are there projects to develop a new generation of c++ compilers that would optimize this ? If you were to participate in such a project, what would your guidelines be ?
