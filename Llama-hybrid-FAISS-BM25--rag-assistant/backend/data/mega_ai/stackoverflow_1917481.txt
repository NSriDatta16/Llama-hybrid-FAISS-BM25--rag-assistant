[site]: stackoverflow
[post_id]: 1917481
[parent_id]: 1917409
[tags]: 
In theory yes, you're right. It is possible the PHP team could jigger preg_replace to analyze the pattern being passed in and then use the code for str_replace if it didn't see any meta-characters. Assuming the analysis wasn't too heavy, this might yield better performance results. However, the way the PHP source code (that is, the code used to implement PHP) is organized doesn't lend itself well to this sharing. PHP is (in some ways) less a full language and more a collection of modules. So, initially the PHP group chose to stay away from this kind of cross module pollination. At this point, changing the preg_replace function to do that kind of analysis would risk breaking a lot of code, and the performance improvements would be minuscule. Finally, the analysis itself is a harder problem to solve than you'd think. Tell me, does this pattern '/123/' mean I should search for the literal text 123 or the literal text /123/ It's easy to come up with compelling arguments for either interpretation, which introduces an additional level of confusion into using the function. An interesting idea in theory, but in practice and the context of the PHP universe, it creates far more problems than it solves.
