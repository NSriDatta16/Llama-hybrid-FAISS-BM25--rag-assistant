[site]: crossvalidated
[post_id]: 514694
[parent_id]: 
[tags]: 
Time-series modeling w/ shrinkage for time-series model residuals?

First to fix notation, let $x_k$ , $k=1,2,\dots$ denote a times series. Let $\hat{x}_{k+1} = f(x_k,x_{k-1},\dots)$ denote a prediction of $x_{k+1}$ . Let $\epsilon_k = x_k-\hat{x}_{k}$ denote the residual time series. My question is a practical one. Let us assume we are presented with $\epsilon_1,\epsilon_2,\dots$ and we are informed that this is a residual series, as I have described it, and that some model has been used by someone, with the intent of minimizing some scoring rule. Let's say least square error for concreteness. Our task is to create a function (i.e. time series model) $g(\epsilon_k,\epsilon_{k-1},\dots)$ so that when these are stacked in the obvious manner this leads to a lower least square error than using $f$ alone. My question is: what theory exists to guide the creation of $g$ ? I will make the empirical observation that when I use a heavily shrunk moving average for $g$ it performs quite well. See for example Elo ratings of time series models trained on real data. The top performing algorithm is a combination of a moving average for $f$ and another moving average for $g$ that is shrunk towards zero. See the implementation if you seek every last detail, but it is just an example to make the point. In this example, but I am just shrinking by $tanh(3|\hat{\epsilon}|/ \sigma)$ where $\sigma$ is $g$ 's estimate of its standard error. Reframing of the question. What other functional form for shrinkage might one devise, and why? It seems to me that $g$ must be cautious and defensive to do less harm than good, as a general rule, but how might this more rigorously be formulated? I'm trying to go beyond just using the same scoring rule as we applied to $f$ in order to effect this, but I don't see an elegant way. Is there a well-established theory for predicting model residuals? It goes without saying that many tests of residuals are recommended, but that isn't quite the same question.
