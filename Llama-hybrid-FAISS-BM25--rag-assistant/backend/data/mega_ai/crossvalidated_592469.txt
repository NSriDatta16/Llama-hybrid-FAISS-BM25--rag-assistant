[site]: crossvalidated
[post_id]: 592469
[parent_id]: 591906
[tags]: 
This has nothing to do with the multi-level structure of the model (ie. with the random effects). The explanation is that one subgroup (female artistic celebrities) has probability of positive outcome close to 1 (81 "Yes" & 3 "No" vs 14 "Yes" & 17 "No" for male artists). So the corresponding odds ratio is extreme, with a large standard error. It's hard to estimate extreme values precisely. You have three categorical predictors: celebrity : "Artistic", "Sport", "Influencer" gender : "Male", "Female" post : "Permanent post", " Ephemeral story" And you fit the generalized linear mixed-effects model (GLMM): politics ~ celebrity + gender + post + (1 | ID) Note: I've renamed the variables for readability. Only the confidence interval for the gender = "Female" odds ratio is wide. To understand what's going on, it really helps to look at the raw data. Below I compute the observed probability of politics = "Yes" for each celebrity and plot a histogram of the probabilities for each combination of gender and celebrity type. (I ignore whether the post is permanent or ephemeral.) A couple of observations: There doesn't seem to be much difference between the two genders as far as sports celebrities and influencers are concerned. The "action" is all in the group of artistic celebrities where female celebrities seem to post only about politics. (Strange? You should consider carefully how the celebrities were selected and how their social media posts were collected and labeled. It would be hard to take the data at face value otherwise.) Note that this suggests that there is an interaction between celebrity type and gender, so I fit this model instead: politics ~ celebrity * gender + post + (1 | ID) The GLMM has to model this pattern and so the log odds ratio for female celebrities is large: $\hat{\beta}_{\text{Female}}$ = 4.1. Once you exponentiate to get the odds ratio, its confidence intervals is very wide because the estimate is so extreme. The model has basically concluded that female artistic celebrities have much higher odds to post about politics than male artistic celebrities but it's hard to be precise about how much higher. #> 2.5 % 97.5 % #> (Intercept) -1.542109 1.1936138 #> celebritySport celebrity -4.050401 0.5909732 #> celebrityInfluencer -3.282459 0.6970215 #> genderFemale 2.106927 6.5826006 #> postEphemeral story -1.009981 0.7741624 #> celebritySport celebrity:genderFemale -6.843921 -0.4383856 #> celebrityInfluencer:genderFemale -8.049952 -1.8693357 I think it's a bit more helpful to look at pairwise comparisons between male and female celebrities (for each celebrity type) rather than the model coefficients. (I use the emmeans package.) pairs(emmeans(model, ~ gender | celebrity, type = "response")) #> celebrity = Artistic celebrity: #> contrast odds.ratio SE df null t.ratio p.value #> Male / Female 0.0159 0.0175 67 1 -3.764 0.0004 #> #> celebrity = Sport celebrity: #> contrast odds.ratio SE df null t.ratio p.value #> Male / Female 0.5811 0.6698 67 1 -0.471 0.6392 #> #> celebrity = Influencer: #> contrast odds.ratio SE df null t.ratio p.value #> Male / Female 1.6930 1.6650 67 1 0.535 0.5942 #> #> Results are averaged over the levels of: post #> Tests are performed on the log odds ratio scale R code to reproduce the plot and the analysis. I use glmmTMB instead of lme4 to fit the GLMM. library("glmmTMB") library("emmeans") library("tidyverse") political_data % haven::read_sav() %>% mutate( across(where(labelled::is.labelled), labelled::to_factor) ) %>% rename( politics = formal, celebrity = type_opld_binary2, gender = gender_binary2, post = pfeat2, ID = opleader ) %>% mutate( gender = forcats::fct_rev(gender) ) %>% select( politics, celebrity, gender, post, ID ) political_data2 % group_by( ID, celebrity, gender, post ) %>% summarise( Yes = sum(politics == "Yes"), No = sum(politics == "No") ) political_data2 %>% group_by( post, .add = TRUE ) %>% summarise( Yes = sum(Yes), No = sum(No) ) %>% ggplot( aes(Yes / (Yes + No)) ) + geom_histogram( breaks = seq(-0.05, 1.05, by = 0.1), fill = "gray", color = "black" ) + facet_grid( gender ~ celebrity ) + theme( axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank() ) model
