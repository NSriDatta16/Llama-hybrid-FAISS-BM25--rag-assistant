[site]: stackoverflow
[post_id]: 2609343
[parent_id]: 2609204
[tags]: 
First, I would recommend reading a good book about unit testing, like The Art Of Unit Testing . In your case, it's a little late to perform Test Driven Development on your existing code, but if you want to write your unit tests around it, then here's what I would recommend: Isolate the code you want to test into code libraries (if they're not already in libraries). Write out the most common Use Case scenarios and translate them to an application that uses your code libraries. Make sure your test program works as you expect it to. Convert your test program into unit tests using a testing framework. Get the green light. If not, then your unit tests are faulty (assuming your code libraries work) and you should do some debugging. Increase the code and scenario coverage of your unit tests: What if you entered unexpected results? Get the green light again. If the unit test fails, then it's likely that your code library does not support the extended scenario coverage, so it's refactoring time! And for new code, I would suggest you try it using Test Driven Development. Good luck (you'll need it!)
