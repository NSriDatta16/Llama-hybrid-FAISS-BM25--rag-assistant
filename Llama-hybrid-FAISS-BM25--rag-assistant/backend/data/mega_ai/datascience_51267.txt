[site]: datascience
[post_id]: 51267
[parent_id]: 51264
[tags]: 
How to use stateful LSTMs is quite well documented in the official Keras documentation . There is als a nice blog post here . There is a note in the Recurrent Layers section: Note on using statefulness in RNNs You can set RNN layers to be 'stateful', which means that the states computed for the samples in one batch will be reused as initial states for the samples in the next batch. This assumes a one-to-one mapping between samples in different successive batches. To enable statefulness: - specify stateful=True in the layer constructor. - specify a fixed batch size for your model, by passing if sequential model: batch_input_shape=(...) to the first layer in your model. else for functional model with 1 or more Input layers: batch_shape=(...) to all the first layers in your model. This is the expected shape of your inputs including the batch size. It should be a tuple of integers, e.g. (32, 10, 100) . - specify shuffle=False when calling fit(). To reset the states of your model, call .reset_states() on either a specific layer, or on your entire model. Small gotcha The small snag that you have to fix yourself is to make sure your number of samples is an integer multiple of yur batch size: num_samples % batch_size == 0 . You need to ensure that maanually because Keras will just take remaining samples for the final batch and this is usually smaller than you desired batch size.
