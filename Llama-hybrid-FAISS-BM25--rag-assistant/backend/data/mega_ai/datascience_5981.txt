[site]: datascience
[post_id]: 5981
[parent_id]: 
[tags]: 
Iteratively construct Linear Classifier

sorry if this question is out of place. I'm a begginer to machine learning, and I have use for a technique, and I don't even know where to look. The problem is: I have 5 features which are real valued (Parameters in a deterministic simulation). This features determine two aspects of the instance (model solution). Its feasibility (binary) and some measure of likelihood given certain experimental data (only for the instances that achieved feasibility). Since I want to avoid generating "infeasible" combination of features, what I devised was an algorithm that iteratively does the following: Generate Nc candidate feature vectors Evaluate Feasibility and Likelihood for each Find linear combination of features that involves a compromise between least amount of features / holds largest cluster of feasibility. Add this as constraints to the feature vector generation. In short, it detects and iteratively refines "simple" constraints that once added to the feature vector generation "guarantee" its feasibility to save computational time evaluating combination of parameters that lead to infeasible models. Afterwards, they could be tested by inverting them and looking for other "regions" (if any) of the feature vector where the model is feasible. Any name of techniques and references I might look for ? Thanks!
