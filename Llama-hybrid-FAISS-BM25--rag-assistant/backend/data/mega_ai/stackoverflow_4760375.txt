[site]: stackoverflow
[post_id]: 4760375
[parent_id]: 4759794
[tags]: 
It takes a long time because it's a composite column, not a table column. The name column is a result of a case selection, and unlike simple selects with multiple join, MySQL has to use a different sorting algorithm for this kind of data. I'm talking from ignorance here, but you could store the data in a temporary table and then sort it. It may go faster since you can create indexes for it but it won't be as fast, because of the different storage type. UPDATE 2011-01-26 CREATE TEMPORARY TABLE `short_select` SELECT U.id AS user_id,C.name AS country, CASE WHEN U.facebook_id > 0 THEN CONCAT(F.first_name,' ',F.last_name) WHEN U.twitter_id > 0 THEN T.name WHEN U.regular_id > 0 THEN CONCAT(R.first,' ',R.last) END AS name, FROM user U LEFT OUTER JOIN regular R ON U.regular_id = R.id LEFT OUTER JOIN twitter T ON U.twitter_id = T.id LEFT OUTER JOIN facebook F ON U.facebook_id = F.id LEFT OUTER JOIN country C ON U.country_id = C.id WHERE (CONCAT(F.first_name,' ',F.last_name) LIKE '%' OR T.name LIKE '%' OR CONCAT(R.first,' ',R.last) LIKE '%') AND U.active = 1 LIMIT 100; ALTER TABLE `short_select` ADD INDEX(`name`); --add successive columns if you are going to order by them as well. SELECT * FROM `short_select` ORDER BY 'name'; -- same as above Remember temporary tables are dropped upon connection termination, so you don't have to clean them, but you should anyway.
