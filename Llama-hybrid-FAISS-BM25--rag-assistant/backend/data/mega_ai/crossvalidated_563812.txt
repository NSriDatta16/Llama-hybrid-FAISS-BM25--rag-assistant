[site]: crossvalidated
[post_id]: 563812
[parent_id]: 563806
[tags]: 
The question is what you consider to be a good notion of similarity between two such functions. If it suffices for them to have similar maximal values, then you should map each such curve to its maximum and then group (i.e. cluster) those maxima. Chances are that the following approach might be appropriate for you: first reduce the amount of data by binning, i.e. partition your $x$ -axis into $m$ fixed intervals $b_i$ (the bins), average the values of your function $f$ in each bin $b_i$ to $f^b_i$ , thus obtaining a vector $f^b=(f^b_1, \ldots, f^b_m)$ . This way you can create a coarser version of your original function by "smoothing" them out. And then you group your functions $f$ by clustering those vectors $f^b$ . The dissimilarity between two functions $f, g$ is then given by the Euclidean distance $\|f^b-g^b\|$ between the belonging binned vectors. Of course, your choice of the size of a bin is critical; the more bins you use the more details and peculiarities of your functions will be included in their dissimilarities. R provides many clustering packages, e.g. dbscan.
