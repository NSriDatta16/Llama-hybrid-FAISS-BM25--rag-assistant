[site]: stackoverflow
[post_id]: 2792333
[parent_id]: 2791330
[tags]: 
If your 3D matrix will be sparsely populated (i.e. mostly zeros), then you'll be interested in boost::ublas::sparse_matrix . If I recall correctly, by default, it uses std::map as the underlying container. It provides operators for easy row/column indexing (as well as row/column/element iterators). EDIT: Nevermind, I thought boost::ublas had 3D matrices. It seems that it doesn't. It also seems that sparse_matrix has been replaced by new matrix types having sparse storage. It's been a long time since I used that library. You can still look at Boost.uBlas for inspiration in rolling your own sparse 3D matrix.
