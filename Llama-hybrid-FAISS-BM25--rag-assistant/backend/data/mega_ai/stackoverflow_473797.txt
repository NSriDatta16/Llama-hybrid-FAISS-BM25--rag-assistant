[site]: stackoverflow
[post_id]: 473797
[parent_id]: 
[tags]: 
How to build large applications

I think I've become quite good at the basics of programming (for a variety of languages). I can write a good line of code. I can write a good method. I can write a good class. I can write a good group of classes. I can write good small or medium application. I do not however know how to build a good large application. Particularly in the case where multiple technologies are involved and more are likely to become involved with time. Say a project with a large web front-end, a large server back-end that connects to some other integration back-end and finally a large and complex database. Oh, I've been involved in a few of these applications and I could build one I'm sure. I'm not so sure however that it could qualify as "good". My question is thus for a reference to a book or other good source of reading where I could learn how to distribute and organize code and data for general large projects. For example, would I want to layer things very strictly or would I want to encapsulate it independent units instead? Would I want to try to keep most of the logic in the same pool, or should it just be distributed as it seems most logical when adding whatever feature I'm adding? I've seen lots of general principals on these issues (e.g. No spaghetti code, meatball code...) and read a few excellent articles that discuss the matter but I've never encountered a source which would lead me to concrete practical knowledge. I realize the difficulty of the question and so I'd be happy to just hear about the readings that others have found to help them in their quest for such knowledge. As always, thank you for your replies. ****Given the debated nature of the definition of "good" code, the term "good" in this context won't be defined (it means whatever you think it ought to mean).
