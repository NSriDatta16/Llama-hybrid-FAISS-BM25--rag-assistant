[site]: stackoverflow
[post_id]: 1900096
[parent_id]: 1900078
[tags]: 
Chrome and Firefox are correct. Width is not a valid style property for inline elements. You have several options: Inline Blocks You can do this: fig vitamin apple vitamin coconut vitamin with: span { display: inline-block; width: 80px; } You'll notice I used instead of . There is a reason for this. s are naturally display: inline and according to Quirksmode : In IE 6 and 7 inline-block works only on elements that have a natural display: inline . Firefox 2 and lower don't support this value. You can use -moz-inline-box , but be aware that it's not the same as inline-block , and it may not work as you expect in some situations. Floats You can float the left labels: fig vitamin apple vitamin coconut vitamin with: div { float: left; clear: left; width: 80px; } If the text after the is sufficiently large it will wrap to the beginning of the line (not with the 80px buffer). You might want that or not. Definition List Using this markup: fig vitamin apple vitamin coconut vitamin with: dt { float: left; width: 80px; } Tables fig vitamin apple vitamin coconut vitamin with: table { border-collapse: collapse; } td.left { width: 80px; } Tables will be by far the most backward compatible solution (going back to IE5 or earlier) so they're still often used in situations where some might argue they aren't appropriate. The ideals of the so-called semantic Web are well-intentioned and worth adhering to where possible but you'll also often end up in situations where you're choosing between "semantic purity" and backwards compatibility so a certain amount of pragmatism needs to prevail. That being said, unless you're not telling us something, you shouldn't need to go this path if you don't want to. Lastly, always put a DOCTYPE declaration on your pages. It forces IE from quirks mode to standards compliant mode (both euphemisms). For example: ...
