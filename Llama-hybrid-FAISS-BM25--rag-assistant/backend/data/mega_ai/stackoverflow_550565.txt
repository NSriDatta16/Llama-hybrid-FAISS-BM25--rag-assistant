[site]: stackoverflow
[post_id]: 550565
[parent_id]: 550548
[tags]: 
By providing an implicit conversion to a double you are effectively stating, my class is equivalent to a double and for this reason you shouldn't really mind if the built in operator >= for double s is used. If you do care, then your class really isn't 'equivalent' to a double and you should consider not providing an implicit conversion to double , but instead providing an explicit GetAsDouble, or ConvertToDouble member function. The reason that you have an ambiguity at the moment is that for an expression t >= d where t is an instance of your class and d is a double, the compiler always has to provide a conversion of either the left hand side or the right hand side so the expression really is ambiguous. Either t 's operator double is called and the built-in operator >= for double s is used, or d must be promoted to a long double and your member operator >= is used. Edit, you've updated your question to suggest that your conversion is to long double and your comparison is against an int. In which case the last paragraph should read: The reason that you have an ambiguity at the moment is that for an expression t >= d where t is an instance of your class and d is an int , the compiler always has to provide a conversion of either the left hand side or the right hand side so the expression really is ambiguous. Either t 's operator long double is called and the built-in operator >= for long double and int is used, or d must be promoted to a long double and your member operator >= is used.
