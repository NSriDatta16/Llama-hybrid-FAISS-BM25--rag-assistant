[site]: stackoverflow
[post_id]: 3010340
[parent_id]: 3007739
[tags]: 
My language of choice would be Perl - but only because I've done similar operations using Perl and LDAP. If I remember correctly, that ldapsearch command will give you the full LDIF entry for each uid in the testgroup cn. If that's the case, then you'll need to clean it up a bit before it's ready for the als part. Though it's definitely not the most elegant solution, a quick and dirty method is to use backticks and run the command's output through a grep. This will return a nice list of all the memberUids. From there it's just a simple foreach loop and you're done. Without any testing or knowing for sure what your LDAP output looks like, I'd go with something like this: #!/usr/bin/perl # should return a list of "memberUid: name" entries @uids = `ldapsearch -x -b 'cn=testgroup,cn=groups,dc=ldap,dc=server,dc=com' | grep memberUid:`; foreach (@uids) { $_ =~ s/memberUid: //; # get rid of the "uid: " part, leaving just the name chomp $_; # get rid of the pesky newline system "als -b \"dc=ldap,dc=server,dc=com\" -V uid=$_ >> vcardlist.vcf"; } As I said, I haven't tested this, and I'm not exactly sure what the output of your ldapsearch looks like, so you may have to tweak it a bit to fit your exact needs. That should be enough to get you going though. If anyone has a better idea I'd love to hear it too.
