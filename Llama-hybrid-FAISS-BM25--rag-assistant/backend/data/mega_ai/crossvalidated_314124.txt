[site]: crossvalidated
[post_id]: 314124
[parent_id]: 
[tags]: 
Kmeans applied to positively skewed variables

The situation I'm facing is relative to a dataset of customers where I'm trying to aggregate 7 clusters of them leveraging on variables related to the type of financial product utilized with a bank. For each type of product I have two type of variable, one related to the total volume of money generated with that product (so if credit card, the total amount of transaction generated with the card), and the other to the N of operations related to that product ( N of transaction in credit card case). So a dataset type would be: ID credit_card_volumes credit_card_trans loan_volume loan_tran revolving_volume revolving_tran 1 5000 37 10000 2 500 21 2 3000 66 0 0 0 0 3 6000 55 2000 1 0 0 Now, as this is a retail related bank, most of customers do not have a constant relation with the financial entity, so the majority of customers have a "one spot" purchase of debt/loan product, and zero usage of the cards, or on the contrary a few use the cards costantly, while the majority no, with few or no purchase of loan/debts. Below an example of the typical distribution of these variables To summarize, being a dataset of 600K customers, the variables are highly positive skewed, with few customers with positive values, and the majority with "0" values I have followed this methodology into trying to aggregate the clusters: Methodology as the kmeans work with normally distributed data I have log transformed the original variable then, I have standardized the log version of the variables to reduct impact of the variable variances then, I have applied a PCA analysis to reduce the N of original variables to a few of them, selecting the one with an engine values >1 then, on these PCA, I have run a kmean algorith with max N of cluster equal to 10 the results are the following : A huge big cluster including more than 90% of the observations and the remaining with a few of obs. Of curse, this kind of solution is not optimal, but I was expecting that by using the log transformation and the subsequent standardization of the variables the positive skewness would have not affected the clustering algorithm, as indeed seems the case. Now, just for mentioning it, I have tried too to run a. A Factor analysis on the initial dataset b. Selected the three Factors with an engine values greater than 1 c. Run the kmeans with these three Factor But the result is pretty more the same, one big cluster and lot of them with few obs So I suppose that no one of the two utilized methodolgies have helped in managing the high skeweness of the variables distributions, and the consequence they have on the kmeans algorithm. So the question is: Has anyone managed a clustering task with variable positively skewed like per my case, and then be able to get well balanced clusters in terms of obs ? Or better defined, does anyone know how to manipulate so highly skewed variables in order to use them within a Kmeans algorithm? I haven't used hierarchical methods as the dataset is too big and then SAS crash for the workload. UPDATE 17/11/2017 -------------------------------------------------------------------------------------------- I did a little change to the analysis and jumped the step regarding the standaridzation of the log version of the variables...And the result is the following Except for three cluster composed by a few obs (pretty sure are outliers), the new clusters get more obs than the first tentative where just one was getting more than 90% of the obs. Also, I have tried different N of cluster in the kmeans , and the N=9 seems the best solution in terms of CCC. However, I was expecting that the standardization of the log variables would have positively affected the algorithm, as it is a matter of fact that the variables have different variances, as some product are more skewed than others in terms of spend. On the contrary, it seems the standardization let the algorith aggregate majority of obs in one cluster. Question: Could anyone explain why the standardization in this particular situation is making all the obs aggregating in one big clusters? I'm doing wrong in not standardizing the log version of the variables ?
