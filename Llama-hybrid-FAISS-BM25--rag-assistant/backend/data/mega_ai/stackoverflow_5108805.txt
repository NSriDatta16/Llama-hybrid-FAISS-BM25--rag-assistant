[site]: stackoverflow
[post_id]: 5108805
[parent_id]: 5021255
[tags]: 
So this was my hack solution: Use Microsoft's Coded UI Test to click on the Silverlight dialog. However, CUIT is inferior to WatiN, so I run my test in WatiN and load CUIT for one, magical, click. Additionally, I was not able to easily find the Silverlight object using CUIT, so I find the window behind it, find the window's center pixel and force a Microsoft.VisualStudio.TestTools.UITesting.Mouse.Click(). Yes, a hack inside of a hack, I am a very bad person, but I ran out of time and just needed something working. If anyone has a more elegant solution, please share. My solution code: FileUploadDialogHandler helper = new FileUploadDialogHandler(attachmentPath); using (new UseDialogOnce(ie.DialogWatcher, helper)) { Thread.Sleep(1 * 1000); // wait for attach button to be "ready" ie.Button(browseButtonID).FireEvent("onclick"); // When automating a file upload, there is a Silverlight popup in IE that forces an extra click // before opening the file open dialog. WatiN does not support Silverlight automation // and the popup element was acting quirky in Microsoft's Coded UI Test, so we find the // dialog box UNDERNEATH the Silverlight popup and force one, lovely, mouse click. //===== Entering Coded UI Test land, beware! ===================================== // initialize Coded UI Test Playback.Initialize(); BrowserWindow.CurrentBrowser = "IE"; Process watinBrowserProcess = Process.GetProcessById(ie.ProcessID); BrowserWindow cuitBrowser = BrowserWindow.FromProcess(watinBrowserProcess); // attach Coded UI Test to the IE browser WatiN initialized // get the window underneath the Silverlight popup UITestControl modalUnderSilverlightPopup = new UITestControl(cuitBrowser.CurrentDocumentWindow); modalUnderSilverlightPopup.SearchProperties.Add("id", windowElementUnderPopupID); // get the X and Y pixel center of the window int centerX = modalUnderSilverlightPopup.BoundingRectangle.X + modalUnderSilverlightPopup.BoundingRectangle.Width / 2; int centerY = modalUnderSilverlightPopup.BoundingRectangle.Y + modalUnderSilverlightPopup.BoundingRectangle.Height / 2; // Click! Mouse.Click(new Point(centerX, centerY)); // Shutdown Coded UI Test Playback.Cleanup(); //===== End Coded UI Test land, you survived! yay! ============================ }
