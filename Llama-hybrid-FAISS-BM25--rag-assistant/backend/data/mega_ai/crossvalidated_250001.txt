[site]: crossvalidated
[post_id]: 250001
[parent_id]: 
[tags]: 
Bayesian recurrent neural network with keras and pymc3/edward

I have a very simple toy recurrent neural network implemented in keras which, given an input of N integers will return their mean value. I would like to be able to modify this to a bayesian neural network with either pymc3 or edward.lib so that I can get a posterior distribution on the output value e.g. p(output | weights). I have read through blog posts from autograd, pymc3 and edward [1,2,3] but all seem geared to classification problems. Cheers [1] https://github.com/HIPS/autograd/blob/master/examples/bayesian_neural_net.py [2] http://twiecki.github.io/blog/2016/06/01/bayesian-deep-learning/ [3] https://github.com/blei-lab/edward/blob/master/examples/getting_started_example.py Edit To clarify - I am asking if anyone can offer some experience/advice/references relevant to building a Bayesian RNN in anything other than a classification task.
