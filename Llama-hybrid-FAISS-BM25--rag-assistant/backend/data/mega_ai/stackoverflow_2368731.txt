[site]: stackoverflow
[post_id]: 2368731
[parent_id]: 2365768
[tags]: 
You need to first convert the data object to an ItemDragEventArgs and then retrieve the SelectionCollection from it, which contains the item you've dragged. Pass your e parameter to this method and it should return you the items dragged. I used an online C# to VB converter, so hopefully it did a good enough job. Both VB and C# below. VB: using System.Windows.Controls; using System.Linq; using System.Collections.ObjectModel; using System.Collections.Generic; #if SILVERLIGHT using SW = Microsoft.Windows; #else using SW = System.Windows; #endif Private Function GetSelectedPeople(ByVal args As SW.DragEventArgs) As IEnumerable(Of Person) Dim people As IEnumerable(Of Person) = Nothing ' Retrieve the dropped data in the first available format. Dim data As Object = args.Data.GetData(args.Data.GetFormats()(0)) ' The data is the ItemDragEventArgs that was created by the DDT when ' the drag started. It contains a SelectionCollection. ' SelectionCollection's are used by DDTs because they can transfer ' multiple objects. The fact that they store the indexes of the ' objects within the source collection also makes reordering items ' within a source possible. Dim dragEventArgs As ItemDragEventArgs = TryCast(data, ItemDragEventArgs) Dim selectionCollection As SelectionCollection = TryCast(dragEventArgs.Data, SelectionCollection) If selectionCollection IsNot Nothing Then people = selectionCollection.[Select](Function(selection) selection.Item).OfType(Of Person)() End If Return people End Function C#: using System.Windows.Controls; using System.Linq; using System.Collections.ObjectModel; using System.Collections.Generic; #if SILVERLIGHT using SW = Microsoft.Windows; #else using SW = System.Windows; #endif private IEnumerable GetSelectedPeople(SW.DragEventArgs args) { IEnumerable people = null; // Retrieve the dropped data in the first available format. object data = args.Data.GetData(args.Data.GetFormats()[0]); // The data is the ItemDragEventArgs that was created by the DDT when // the drag started. It contains a SelectionCollection. // SelectionCollection's are used by DDTs because they can transfer // multiple objects. The fact that they store the indexes of the // objects within the source collection also makes reordering items // within a source possible. ItemDragEventArgs dragEventArgs = data as ItemDragEventArgs; SelectionCollection selectionCollection = dragEventArgs.Data as SelectionCollection; if (selectionCollection != null) { people = selectionCollection.Select(selection => selection.Item).OfType (); } return people; } Reference: http://themechanicalbride.blogspot.com/2009/10/silverlight-drag-drop-support-part-2.html
