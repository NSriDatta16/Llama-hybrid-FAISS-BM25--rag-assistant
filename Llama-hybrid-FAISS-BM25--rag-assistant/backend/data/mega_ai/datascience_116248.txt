[site]: datascience
[post_id]: 116248
[parent_id]: 
[tags]: 
Which random_state to use in test_train_split when deploying final model?

I have developed a Random Forest that gives varying results depending on the random state of the test train split. This is normal, because a lot of the values in the data are extreme, without being actual outliers. When saving the model for future use on unseen data, should I use the random_state that splits the data in a way resulting in best accuracy, recall, f1 OR should I use a random_state that gives average results?
