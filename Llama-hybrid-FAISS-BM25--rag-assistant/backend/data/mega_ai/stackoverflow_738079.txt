[site]: stackoverflow
[post_id]: 738079
[parent_id]: 729319
[tags]: 
How I have done this is like what you mentioned in your last parag: send to controller these elements and controller just to filter them and give filtered collection back to the view You can use linq to do this. So let's say what you send it a List. So when you execute your filter - let's say by Category - you are expecting a filtered List by Category (let's say Category = "Book"). So in your controller, your List() action (or whatever you call it) should be ready to take a filter parameter. Based on that param then use LINQ to narrow the collection to be passed to the view. Like this: public ActionResult List(bool fromCache, string filter) { // if filtering - always pull from cache to increase performance ProductList productList; if (fromCache) productList = Session[SessionKeys.ProductList] as ProductList; else { productList = ProductInfoList.GetProductInfoList(); Session[SessionKeys.ProductInfoList] = productList; } // apply filter var data = productList.Where(p => p.Category == filter); return View(ViewLocations.ProductListing, data); } The code is may not be syntactically correct but there you go - good luck.
