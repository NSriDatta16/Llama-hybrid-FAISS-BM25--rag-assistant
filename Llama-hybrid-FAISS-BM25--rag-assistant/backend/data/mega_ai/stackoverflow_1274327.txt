[site]: stackoverflow
[post_id]: 1274327
[parent_id]: 1272683
[tags]: 
In particullar, I use solution number 2, I have a custom Auth object that wraps Zend_Auth, so on login, I have this: public function login($user, $password) { if(!($this->adapter instanceof Zend_Auth_Adapter_DbTable)) { throw new Gecko_Auth_Exception("The Adapter is not valid or not initialized"); } $auth = Zend_Auth::getInstance(); $this->adapter->setIdentity($user); $this->adapter->setCredential($password); $result = $auth->authenticate($this->adapter); if( $result->isValid() ) { $data = $this->adapter->getResultRowObject(null, $this->passwordColumn); $userObject = new self::$userClass($data); $auth->getStorage()->write($userObject); return true; } else { return false; } } Then I can call Zend_Auth::getInstance to retreive the custom UserClass object so I can have it mapped yo my custom Zend_Db_Table_Row class. Hope it helps
