[site]: stackoverflow
[post_id]: 735065
[parent_id]: 734936
[tags]: 
All #included headers have to be processed. This isn't as bad as it could be, since modern compilers provide some sort of option for not processing them repeatedly (perhaps with something like #pragma once , or an ifndef guard). Still, every #included header has to be processed once for each translation unit, and that can add up fast. The usual practice is for header files to #include only those header files they need, and to use forward declarations ( class foo; ) as much as possible. That way, you don't get the overhead. If you want to #include everything and its brother, you can provide your own header file that #includes everything. You don't have to explicitly write everything out in every header and source file. That option is something you can provide, but if everything in std came as one monolithic header, you wouldn't have an option.
