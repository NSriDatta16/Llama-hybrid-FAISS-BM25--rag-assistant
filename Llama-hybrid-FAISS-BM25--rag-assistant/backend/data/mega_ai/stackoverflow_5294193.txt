[site]: stackoverflow
[post_id]: 5294193
[parent_id]: 
[tags]: 
PostgreSQL & SQL Server btree storage fundamentals question

I know that SQL Server can store a row's data at leaf level in a clustered index. I believe that PostgreSQL doesn't do this. If so, what is its storage paradigm? My main question is as follows. Consider the following design & data (shown in T-SQL): CREATE TABLE dbo.Tree ( [Key] int NOT NULL, ID int NOT NULL ) ON [PRIMARY] GO ALTER TABLE dbo.Tree ADD CONSTRAINT PK_Tree PRIMARY KEY CLUSTERED ( [Key], ID ) WITH (...) ON [PRIMARY] INSERT INTO TREE ([Key], ID) VALUES (1, 1), (1, 2), (1, 3), (1, 4). Since this is a btree with both columns as the PK, am I correct in saying that "[Key] = 1" would only be stored once, and "ID = [1, 2, 3, 4]" would be individual values in the btree, while there would be no leaf values per s√© since there are no row columns that aren't part of the PK? How would this work in PostgreSQL?
