[site]: stackoverflow
[post_id]: 122726
[parent_id]: 122547
[tags]: 
Try it for yourself. Get a $15/month account at wush.net and use it yourself for a while (no business relationship besides satisfied customer). Bugzilla is powerful and has a lot of configuration options, which can be confusing. I personally used it three years ago on a project I was working on. I had no project manager and I was the developer, so I needed a very-light-overhead systtem. Bugzilla gave me that. I put my main goal as an enhancement "productionalized system" and then I made dependencies to reach that point. I ended up having 160 nodes all dependent on each other. This essentially was a work breakdown structure. I didn't bother with time estimates, and I didn't bother with creating any other kind of project documentation. A cool advantage was that as I coded, if I noticed something needed to be done, I would just pop it into bugzilla (20 second process once it's set up), tie it as a dependency, and go back to what I was doing. Whenever I completed a task, I would look at the dependency diagram and find the outermost leaves (bugs that blocked other but weren't themselves blocked), and work at it. The advantage of this method for me is that if a task had looked simple and had one node associated with it, but when doing the thing itself I realized it was more complex, I would just split it into different subtasks. This took only a minute and absolutely didn't involve a meeting with a project manager. Other people on the team could track my progress by looking at open bugs, closed bugs sorted by dates, etc. They saw action, they left me alone. When I had external dependecies, I would make a bug, detail the work, and send that person a link via email. They could then see why this was needed by looking at the dependency diagram. Note that unless previously agreed upon, I did not assign them the bug. It worked really well and the system was ready one month early. How will it work with SCRUM? Having only had a cursory glance at scrum I can't tell you. But that was my experience. Using a dedicated host will allow you three things: support easy upgrades (unless you got gurus in-house, bugzilla management ain't easy--for me at least) users across organizational boundaries. Note that bugzilla has all sorts of security features, so it's easy to lock-down the users to what they need to see.
