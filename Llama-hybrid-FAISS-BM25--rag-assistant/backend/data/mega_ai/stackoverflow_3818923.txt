[site]: stackoverflow
[post_id]: 3818923
[parent_id]: 
[tags]: 
Assignment raises exception for list.index

How could this code fragment... def subInPath(origPath, subPath): origSplit = split(origPath, '/') subSplit = split(subPath, '/') subRoot = subSplit[0] origSplit.reverse() print origSplit.index(subRoot) rootIndex = origSplit.index(subRoot) origSplit[:rootIndex+1] = [] origSplit.reverse() newPath = join(origSplit, sep) newPath += (sep + subPath) if not exists(newPath): raise Exception, "Path subbed in not found." return newPath with the arguments ("C:/Users/MyName/Desktop/second_stage/Kickle_Pack/GardenLand_D.xml", "Kickle_Pack/Animations/TileAnims_48x48.xml") ... Output 2 at the print statement, but throw a ValueError at the statement below it. I'm baffled.
