[site]: stackoverflow
[post_id]: 2073050
[parent_id]: 2073016
[tags]: 
C++ Standard 8.5.3 Paragraph 5 The constructor that would be used to make the copy shall be callable whether or not the copy is actually done. [Example: struct A { }; struct B : public A { } b; extern B f(); const A& rca = f(); // Either bound to the A sub-object of the B rvalue, // or the entire B object is copied and the reference // is bound to the A sub-object of the copy â€”end example] The thing is that A a(B(1)); is very bad. struct A get reference to the temporary.
