[site]: stackoverflow
[post_id]: 5076795
[parent_id]: 3573488
[tags]: 
I had a similar issue. In my case i had an a-synchronous connection working with ssl as required using the two delegate methods that allowed me to accept any certificate: - (BOOL)connection:(NSURLConnection *)connection canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace { return [protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust]; } - (void)connection:(NSURLConnection *)connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge { [challenge.sender useCredential:[NSURLCredential credentialForTrust:challenge.protectionSpace.serverTrust] forAuthenticationChallenge:challenge]; } But i was stuck on doing the same in a synchronous manner. I searched the web until i found your post and unfortunately another stackoverflow post where it is hinted that you cannot perform synch calls on NSURLConnection and work with ssl (because of the lack of a delegate to handle the ssl authentication process). What i ended up doing is getting ASIHTTPRequest and using that. It was painless to do and took me about an hour to set up and its working perfectly. here is how i use it. + (NSString *) getSynchronously:(NSDictionary *)parameters { NSURL *url = [NSURL URLWithString:@"https://localhost:8443/MyApp/"; ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:url]; NSString *parameterJSONString = [parameters JSONRepresentation]; [request appendPostString:parameterJSONString]; [request addRequestHeader:@"User-Agent" value:@"MyAgent"]; request.timeOutSeconds = CONNECTION_TIME_OUT_INTERVAL; [request setValidatesSecureCertificate:NO]; [request startSynchronous]; NSString *responseString = [request responseString]; if (request.error) { NSLog(@"Server connection failed: %@", [request.error localizedDescription]); } else { NSLog(@"Server response: %@", responseString); } return responseString; } The important part of course is the [request setValidatesSecureCertificate:NO]; Another alternative for you is to handle the download in another thread with an a-synch connection using the two methods above and block the thread from which you want the synch connection until the request is complete
