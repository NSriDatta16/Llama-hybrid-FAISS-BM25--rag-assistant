[site]: stackoverflow
[post_id]: 1253441
[parent_id]: 1253415
[tags]: 
Considering your "User" class is a Model class, I guess it would be OK... But, still, you could go a bit farther, adding a new layer, and use : a Model ( User ) class to store the User's data as seen by the application , and the corresponding business/logic-rules a class that deals with the storage of that data (something like UserFinder, I suppose) of course, that one would "know" the User class, and could populate it with data from the DB and insert/update/delete "user" objects to/from the DB This way, your User class wouldn't have to know how it is stored : it could be a DB, and XML file, a flat-file, whatever else, your User class would still be the same. To make things easier, you could use some ORM Framework ; one really good in PHP is Doctrine .
