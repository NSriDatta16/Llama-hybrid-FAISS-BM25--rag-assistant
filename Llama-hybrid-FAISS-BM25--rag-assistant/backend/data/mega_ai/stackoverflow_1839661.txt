[site]: stackoverflow
[post_id]: 1839661
[parent_id]: 1837438
[tags]: 
Common Lisp has at least four different ways to do that (-> key value storage): property lists (:foo 1 :bar 2) assoc lists ((:foo . 1) (:bar . 2)) hash tables CLOS objects (slot-value foo 'bar) to get and (setf (slot-value foo 'bar) 42) to set. The slot name can be stored in a variable: (let ((name 'bar)) (slot-value foo name)) . For simple usage assoc lists or property lists are fine. With a larger number of elements they tend to get 'slow'. Hash tables are 'faster' but have their own tradeoffs. CLOS objects are used like in many other object systems. The keys are the slot-names defined in a CLOS class. Though it is possible to program variants that can add and remove slots on access.
