[site]: stackoverflow
[post_id]: 2404582
[parent_id]: 1562548
[tags]: 
I work for NTRU, so I'm glad to see this interest. The IEEE standard 1363.1-2008 specifies how to implement NTRUEncrypt with the most current parameter sets. The method it specifies for binary->trinary conversion is: Convert each three-bit quantity to two ternary coefficients as follows, and concatenate the resulting ternary quantities to obtain [the output]. {0, 0, 0} -> {0, 0} {0, 0, 1} -> {0, 1} {0, 1, 0} -> {0, -1} {0, 1, 1} -> {1, 0} {1, 0, 0} -> {1, 1} {1, 0, 1} -> {1, -1} {1, 1, 0} -> {-1, 0} {1, 1, 1} -> {-1, 1} To convert back: Convert each set of two ternary coefficients to three bits as follows, and concatenate the resulting bit quantities to obtain [the output]: {0, 0} -> {0, 0, 0} {0, 1} -> {0, 0, 1} {0, -1} -> {0, 1, 0} {1, 0} -> {0, 1, 1} {1, 1} -> {1, 0, 0} {1, -1} -> {1, 0, 1} {-1, 0} -> {1, 1, 0} {-1, 1} -> {1, 1, 1} {-1, -1} -> set "fail" to 1 and set bit string to {1, 1, 1} Note that to encrypt a message securely you can't simply convert the message to trinary and apply raw NTRU encryption. The message needs to be pre-processed before encryption and post-processed after encryption to protect against active attackers who might modify the message in transit. The necessary processing is specified in IEEE Std 1363.1-2008, and discussed in our 2003 paper "NAEP: Provable Security in the Presence of Decryption Failures" (Available from http://www.ntru.com/cryptolab/articles.htm#2003_3 , though be aware that this description is targeted at binary polynomials rather than trinary). Hope this helps. @Bert: at various times we've recommended binary or trinary polynomials. Trinary polynomials allow the same security with shorter keys. However, in the past we thought that binary polynomials allowed q (the big modulus) to be 256. This was attractive for 8-bit processors. We've since established that taking q = 256 reduces security unacceptably (specifically, it makes decryption failures too likely). Since we no longer have small q as a goal, we can take advantage of trinary polynomials to give smaller keys overall.
