[site]: stackoverflow
[post_id]: 4597657
[parent_id]: 
[tags]: 
strange RaisePropertyChanged behaviour

I have a question regarding MVVM for WP7. In my application I have a kind of a datepicker or a calendar if you will. So after picking a day, one can choose to edit the information regarding this day by ckicking on it and getting to another page. The problem is that when I change some info and click the back button the information that was altered hasn't been updating in the correspongind bindings. That's why on the navigatedto event I call a public method from my VM for that page. The sole purpose of this method (RefreshSelectedDay) is to call RaisePropertyChanged so that the binded text fields on the page get the new info. However, nothing happens. The info is actaully properties of the SelectedDay property whish is an instance of MyDay class. protected override void OnNavigatedTo(NavigationEventArgs e) { ViewModel.ViewModelLocator.CalendarStatic.RefreshSelectedDay(); } /// /// I admit that this is by far the most stupid solution so far. /// RaisePropertyChanged won't work if you haven't really changed the property. /// That's why we set it to null and then turn it back. /// Used for updating the day when returning from /// the edit screen. /// public void RefreshSelectedDay() { MyDay w = selectedDay; SelectedDay = null; SelectedDay = w; } My solution as you can see is far from being elegant. What happens IMO is that if I just call the RaisePropertyChanged it won't propagate because it is the same variable and just one of it's properties has changed. It would be lovely if someone can explain what is happening.
