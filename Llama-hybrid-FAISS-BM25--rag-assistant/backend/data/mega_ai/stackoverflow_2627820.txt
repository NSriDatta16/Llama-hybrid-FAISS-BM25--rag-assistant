[site]: stackoverflow
[post_id]: 2627820
[parent_id]: 
[tags]: 
How to use a type within a "black-box" .NET assembly?

I know that .NET assembly is self-descriptive because of the metadata. Now suppose I have a black-box assembly which I know nothing about. Could I find out the types contained in it and use their methods and pass arguments? How? Sampe code snippets will be deeply appreciated. [New Edit1] I am not working at design time. I am trying to figure out how many arguments a type's method needs and what type these arguments are, so I can call the method at runtime using reflection. [New Edit2] I came up with the following code snippets. It construct an object from a black-box assembly. But it looks rather ugly, any better idea? foreach (ConstructorInfo ci in cis) { Console.WriteLine("{0}:{1}", ci.MemberType, ci.Name); Console.WriteLine("ReflectedType:{0}", ci.ReflectedType); ParameterInfo[] parameters = ci.GetParameters(); Object[] arguments = new Object[parameters.Length]; Console.WriteLine(parameters.Length); for (int i = 0; i Many thanks.
