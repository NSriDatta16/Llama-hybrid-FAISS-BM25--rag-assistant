[site]: stackoverflow
[post_id]: 123132
[parent_id]: 122931
[tags]: 
"Architecture" in this context in itself means nothing. It means "experts on transversal topics". Whenever you have an "Architecture team", you will have a transversal team which will provide services for many projects. As stated by the previous answers, you need to know what topics such an "Architecture department" will have to address. Now, here is a example of organization of architecture teams based on several topics: Business and Functional Architecture team: writes many business-related specifications, and checks the alignment between existing application and functional workflow, in order to complete a coherent cartography of application. Application Architecture team: provides the cartography, but also decide of how the functional specifications decided by the Business and Functional Architecture Team will be organized into applications. For example, you need a functional module for "portfolio process", but the Application Architecture team can decide to split that into a "launcher", a "dispatcher", a GUI, and so on. Technical Architecture teams, always composed of: Execution Architecture team, for all non-business-purely-technical topics (logging, KPI, frameworks, ...) Development Architecture team (tool evaluation and support, technological survey, repositories management for version and configuration control) OA (Operational Architecture) for making an environment "executable" (that is, knowing the right processes, the right servers and the right networks in order to deploy your system either for homologation or for production.) You may want to add a Logistic team for all the management of server and networks, with the tasks of Backup and DRP strategies. And a support strategy based on a good case system. And you are good to go. Now, do not forget that when you begin some "large rework", your Functional Architecture will have the mission to enforce the coherencies both between: the reworked projects to be sure they stay within the fixed functional perimeter the legacy projects to be sure their maintenances do not involve opposite choices compared to the one applied to the reworked projects. Any rework in a shop this size means indeed to be able to make necessary evolutions to legacy projects while waiting for the rework to produce the first releases. (The legacy can not just wait and stay still during 2-3 years of rework) A large rework should involve three major milestone: 1/ dialog with the legacy 2/ complete the legacy 3/ replace the legacy Meaning any given component is in effect developed three time! ;) Good luck and good night.
