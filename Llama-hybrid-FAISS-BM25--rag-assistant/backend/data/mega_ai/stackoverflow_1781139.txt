[site]: stackoverflow
[post_id]: 1781139
[parent_id]: 1781091
[tags]: 
Okay, so here's what I did: public class AgentClassLoader extends ClassLoader { public void loadThisClass(ClassByte classByte_) { resolveClass(defineClass(classByte_.getName(), classByte_.getBytes(), 0, classByte_.getBytes().length)); } } I hope that loads the class into JVM? If this really works, why didn't Java implementator make both defineClass and resolveClass public methods? I really wonder what they were thinking. Anyone can enlighten me? Just for completeness, here's ClassByte import java.io.Serializable; public class ClassByte implements Serializable { private String name; private byte[] bytes; ClassByte(String name_, byte[] bytes_) { name = name_; bytes = bytes_; } public String getName() { return name; } public byte[] getBytes() { return bytes; } }
