[site]: stackoverflow
[post_id]: 2963960
[parent_id]: 2963651
[tags]: 
I would use the openargs method of the form. That way you can pass one piece of data to the new form from any other form. You can also expand of this by sending a delimited string of arguments and then splitting them out. For example I have a form for editing agent activity that is passed the date, the agents name, agents ID and team in the open args DoCmd.OpenForm "frmEdit_agent_activity", , , , , acDialog, Item & "|" & Me.txtDate & "|" & Item.ListSubItems(1) & "|" & Item.ListSubItems(2) The form then uses this to pre populate the controls Private Sub Form_Load() If IsMissing(Me.OpenArgs) = True Or IsNull(Me.OpenArgs) = True Then 'no args, exit the form DoCmd.Close acForm, "frmEdit_agent_activity", acSaveNo Else 'this form has 4 open args '1 Staff ID '2 Date '3 Team_ID '4 Staff Name Me.txtStaff_ID = GetDelimitedField(1, Me.OpenArgs, "|") Me.txtDate = GetDelimitedField(2, Me.OpenArgs, "|") Me.txtTeam_ID = GetDelimitedField(3, Me.OpenArgs, "|") Me.txtStaff_name = GetDelimitedField(4, Me.OpenArgs, "|") End If End Sub Ohh and here is the GetDelimitedField function Function GetDelimitedField(FieldNum As Integer, DelimitedString As String, Delimiter As String) As String Dim NewPos As Integer Dim FieldCounter As Integer Dim FieldData As String Dim RightLength As Integer Dim NextDelimiter As Integer If (DelimitedString = "") Or (Delimiter = "") Or (FieldNum = 0) Then GetDelimitedField = "" Exit Function End If NewPos = 1 FieldCounter = 1 While (FieldCounter 0) NewPos = InStr(NewPos, DelimitedString, Delimiter, vbTextCompare) If NewPos <> 0 Then FieldCounter = FieldCounter + 1 NewPos = NewPos + 1 End If Wend RightLength = Len(DelimitedString) - NewPos + 1 FieldData = Right$(DelimitedString, RightLength) NextDelimiter = InStr(1, FieldData, Delimiter, vbTextCompare) If NextDelimiter <> 0 Then FieldData = Left$(FieldData, NextDelimiter - 1) End If GetDelimitedField = FieldData End Function
