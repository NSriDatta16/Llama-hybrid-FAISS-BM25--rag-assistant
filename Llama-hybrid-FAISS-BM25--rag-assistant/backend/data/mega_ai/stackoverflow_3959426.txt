[site]: stackoverflow
[post_id]: 3959426
[parent_id]: 3958768
[tags]: 
I was thinking, that an interresting use case might be using it in combination with multiple inheritance (composition and delegation), especially with generalization sets to create stronger constraints. For example in use case modeling, an actor might be an organization, system or subsystem, but at the same time also primary, secondary and ternary actor. All of these might require different behaviour (e.g. ternary actor has interrests, but primary has goals), so they cannot be collapsed. Now to work with a bank, which might be Ternary actor as well as organization, you would use this feature.
