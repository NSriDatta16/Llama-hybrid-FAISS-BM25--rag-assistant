 Dinnuzo et al suggested setting F as the Frobenius norm t r ( A ⊤ A ) {\displaystyle {\sqrt {tr(A^{\top }A)}}} . They optimized Q directly using block coordinate descent, not accounting for difficulties at the boundary of R n × T × S + T {\displaystyle \mathbb {R} ^{n\times T}\times S_{+}^{T}} . Clustered tasks learning - Jacob et al suggested to learn A in the setting where T tasks are organized in R disjoint clusters. In this case let E ∈ { 0 , 1 } T × R {\displaystyle E\in \{0,1\}^{T\times R}} be the matrix with E t , r = I ( task t ∈ group r ) {\displaystyle E_{t,r}=\mathbb {I} ({\text{task }}t\in {\text{group }}r)} . Setting M = I − E † E T {\displaystyle M=I-E^{\dagger }E^{T}} , and U = 1 T 11 ⊤ {\displaystyle U={\frac {1}{T}}\mathbf {11} ^{\top }} , the task matrix A † {\displaystyle A^{\dagger }} can be parameterized as a function of M {\displaystyle M} : A † ( M ) = ϵ M U + ϵ B ( M − U ) + ϵ ( I − M ) {\displaystyle A^{\dagger }(M)=\epsilon _{M}U+\epsilon _{B}(M-U)+\epsilon (I-M)} , with terms that penalize the average, between clusters variance and within clusters variance respectively of the task predictions. M is not convex, but there is a convex relaxation S c = { M ∈ S + T : I − M ∈ S + T ∧ t r ( M ) = r } {\displaystyle {\mathcal {S}}_{c}=\{M\in S_{+}^{T}:I-M\in S_{+}^{T}\land tr(M)=r\}} . In this formulation, F ( A ) = I ( A ( M ) ∈ { A : M ∈ S C } ) {\displaystyle F(A)=\mathbb {I} (A(M)\in \{A:M\in {\mathcal {S}}_{C}\})} . Generalizations Non-convex penalties - Penalties can be constructed such that A is constrained to be a graph Laplacian, or that A has low rank factorization. However these penalties are not convex, and the analysis of the barrier method proposed by Ciliberto et al. does not go through in these cases. Non-separable kernels - Separable kernels are limited, in particular they do not account for structures in the interaction space between the input and output domains jointly. Future work is needed to develop models for these kernels. Software package A Matlab package called Multi-Task Learning via StructurAl Regularization (MALSAR) implements the following multi-task learning algorithms: Mean-Regularized Multi-Task Learning, Multi-Task Learning with Joint Feature Selection, Robust Multi-Task Feature Learning, Trace-Norm Regularized Multi-Task Learning, Alternating Structural Optimization, Incoherent Low-Rank and Sparse Learning, Robust Low-Rank Multi-Task Learning, Clustered Multi-Task Learning, Multi-Task Learning with Graph Structures. Literature Multi-Target Prediction: A Unifying View on Problems and Methods Willem Waegeman, Krzysztof Dembczynski, Eyke Huellermeier See also References External links The Biosignals Intelligence Group at UIUC Washington University in St. Louis Department of Computer Science Software The Multi-Task Learning via Structural Regularization Package Online Multi-Task Learning Toolkit (OMT) A general-purpose online multi-task learning toolkit based on conditional random field models and stochastic gradient descent training (C#, .NET)