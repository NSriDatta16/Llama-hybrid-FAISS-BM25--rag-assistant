[site]: datascience
[post_id]: 121641
[parent_id]: 65266
[tags]: 
The solution to use survival::basehaz() with a coxph model and estimate a constant C, as implemented by survXgboost should be used with caution. When you have binary predictors, coxph coefficients explode, leading to really overestimated baseline hazard, the constant C will not do much and the performance of xgboost will look much worse than what it really is. The gbm package has a function gbm::basehaz which skips the model, avoiding the compatibility problem that you have in survival::basehaz() , and uses the predict() results to estimate the baseline hazard. It is more reliable and the (cumulative) baseline hazard is as expected.
