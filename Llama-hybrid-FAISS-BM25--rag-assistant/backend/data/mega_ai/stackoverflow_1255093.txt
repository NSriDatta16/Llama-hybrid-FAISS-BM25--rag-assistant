[site]: stackoverflow
[post_id]: 1255093
[parent_id]: 1255038
[tags]: 
If you want the ability to do what you describe, you might be interested in reading about Html.RenderAction() . This is useful in many circumstances but is not "pure" MVC (perhaps pragmatic MVC). I have a similar situation to you where I am using partial views to load different search screens (the search submission buttons are the same), just the form fields are different. I do it in the following way. In a common base class controller I have generic type parameter, which I pass to a view model object (SearchObject is of type object). public abstract class SampleController : Controller where T : new() public virtual ActionResult SearchForDocuments() { searchModel.SearchObject = // Create type of T; // Some more code return View("SomeView", searchModel); } I then have a strongly typed view, which passes the SearchObject to the partial view. The partial view then is strongly typed and knows what to do with the strongly type Model.
