[site]: crossvalidated
[post_id]: 625249
[parent_id]: 
[tags]: 
How can I back transform the residuals of a decomposed time series , where I used log(x+c) transformation on the original data?

I did a time series decomposition on a series of Twitter activity data into trend, seasonal and residual component. I checked the distribution of the residuals when fitting a linear model to the time series and came to the conclusion that they are not normally distributed and I therefore have to assume heteroskedasticity (it was also shown by a low p-value in Breusch-Pagan test) of the data which implies that I need to do the decomposition based on a multiplicative assumption . To do the decomposition I use python statsmodels.tsa.seasonal import MSTL . This model always assumes additivity of data so I applied a log transformation in order to equalise the variance of my data. Since I have a lot of zero values in the dataset I use log(x+1) for the transformation. So after the decomposition in order to get back to my original signal I need to back transform the data, by the following: original_signal = exp(trend+seasonal+residuals)-1 This works and gives me exactly my original signal. However since I want to continue working only on the residuals I want to back transform the individual components as well. Ho can I do this, I assumed it is similarly just: trend = exp(trend_transformed) - 1 seasonal = exp(seasonal_transformed) - 1 residual = exp(residual_transformed) - 1 But if this is the right way - how are these individual components related to the original time series signal. It is obviously not by addition or multiplication. I hope I am not overseeing something and asking a very stupid questions.
