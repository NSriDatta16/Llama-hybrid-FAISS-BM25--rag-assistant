[site]: stackoverflow
[post_id]: 5154484
[parent_id]: 
[tags]: 
Fill dates from Python groupby

I have a collection of news article objects which I wish to display archived by distinct month. I've used itertools.groupby to create a list of Python objects ordered in such a way: news_grouped = [ {'date': key, 'list': list(val)} for key, val in groupby(obj_list, (lambda v: datetime.datetime(v.pub_date.year, v.pub_date.month, 1))) ] So I end up with a collection like: [{'date': datetime.datetime(2011, 1, 1, 0, 0), 'list': [ , ]}, {'date': datetime.datetime(2010, 12, 1, 0, 0), 'list': [ ]}, {'date': datetime.datetime(2010, 10, 1, 0, 0), 'list': [ ]}, {'date': datetime.datetime(2010, 1, 1, 0, 0), 'list': [ ]}] I would like to fill the news_grouped collection so that it includes an entry for each month between the oldest article and today's date, with empty ones just having an empty list. I realize I can do this by iterating from the oldest date to the newest date, and filling the collection, but something about that just doesn't quite sit right with me, and I'd imagine it's not very efficient either. Is there a more elegant way of solving this? Can anyone point me at one? (I'm actually using Django and was using regroup, but it seems like I'm better solving this in python outside of the templates - I could of course be wrong) Many thanks. Ludo.
