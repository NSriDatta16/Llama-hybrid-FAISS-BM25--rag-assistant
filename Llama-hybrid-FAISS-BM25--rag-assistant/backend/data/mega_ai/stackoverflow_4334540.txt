[site]: stackoverflow
[post_id]: 4334540
[parent_id]: 4332404
[tags]: 
It's quite a thorny problem. Technically you can get a high-availability shared directory through something like NFS (or SMB if you like), using DRBD and Linux-HA for an active/passive setup. Such a setup will have good availability against single server loss, however, such a setup is quite wasteful and not easy to scale - you'd have to have the app itself decide which server(s) to go to, configure NFS mounts etc, and it all gets rather complicated. So I'd probably prompt for avoiding keeping the images in a filesystem at all - or at least, not the conventional kind. I am assuming that you need this to be flexible to add more storage in the future - if you can keep the storage and IO requirement constant, DRBD, HA NFS is probably a good system. For storing files in a flexible "cloud", either Tahoe LAFS Or perhaps, at a push, Cassandra, which would require a bit more integration but maybe better in some ways. MySQL-cluster is not great for big blobs as it (mostly) keeps the data in ram; also the high consistency it provides requires a lot of locking which makes updates scale (relatively) badly at high workloads. But you could still consider putting the images in mysql-cluster anyway, particularly as you have already set it up - it would require no more operational overhead.
