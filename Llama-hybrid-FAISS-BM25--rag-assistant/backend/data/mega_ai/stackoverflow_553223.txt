[site]: stackoverflow
[post_id]: 553223
[parent_id]: 553213
[tags]: 
static pointers are automatically initialized to NULL . See C99:TC3 6.7.8, ยง10: If an object that has automatic storage duration is not initialized explicitly, its value is indeterminate. If an object that has static storage duration is not initialized explicitly, then: if it has pointer type, it is initialized to a null pointer; if it has arithmetic type, it is initialized to (positive or unsigned) zero; if it is an aggregate, every member is initialized (recursively) according to these rules; if it is a union, the first named member is initialized (recursively) according to these rules. Also, contrary to what others have written, memset(array, 0, sizeof(array)); isn't guaranteed to result in null pointers. On some systems, a pointer with all its bits set to 0 might actually be valid. For mainstream systems, that's not the case, but with embedded systems, one never knows. The safe way to set all entries to a null pointer is to either loop over the entries yourself and set them to NULL , or to use an uninitialized static array which you can memcpy() over the array you want to set to NULL .
