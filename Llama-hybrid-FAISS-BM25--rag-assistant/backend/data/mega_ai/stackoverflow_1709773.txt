[site]: stackoverflow
[post_id]: 1709773
[parent_id]: 1709581
[tags]: 
EDIT I have a new solution, a bit far-fetched, but it works... It uses a DelayedAction class to handle delayed execution of an action on the main thread : DelayedAction public class DelayedAction { private SynchronizationContext _syncContext; private Action _action; private int _delay; private Thread _thread; public DelayedAction(Action action) : this(action, 0) { } public DelayedAction(Action action, int delay) { _action = action; _delay = delay; _syncContext = SynchronizationContext.Current; } public void RunAfterDelay() { RunAfterDelay(_delay, default(T)); } public void RunAfterDelay(T param) { RunAfterDelay(_delay, param); } public void RunAfterDelay(int delay) { RunAfterDelay(delay, default(T)); } public void RunAfterDelay(int delay, T param) { Cancel(); InitThread(delay, param); _thread.Start(); } public void Cancel() { if (_thread != null && _thread.IsAlive) { _thread.Abort(); } _thread = null; } private void InitThread(int delay, T param) { ThreadStart ts = () => { Thread.Sleep(delay); _syncContext.Send( (state) => { _action((T)state); }, param); }; _thread = new Thread(ts); } } AutoExpandTreeView public class AutoExpandTreeView : TreeView { DelayedAction _expandNode; public AutoExpandTreeView() { _expandNode = new DelayedAction ((node) => node.Expand(), 500); } private TreeNode _prevNode; protected override void OnDragOver(DragEventArgs e) { Point clientPos = PointToClient(new Point(e.X, e.Y)); TreeViewHitTestInfo hti = HitTest(clientPos); if (hti.Node != null && hti.Node != _prevNode) { _prevNode = hti.Node; _expandNode.RunAfterDelay(hti.Node); } base.OnDragOver(e); } }
