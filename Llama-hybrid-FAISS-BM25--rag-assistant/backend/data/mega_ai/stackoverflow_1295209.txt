[site]: stackoverflow
[post_id]: 1295209
[parent_id]: 1286498
[tags]: 
I agree with Rik. Yes, redundant data is very, very bad, evil, smelly, and otherwise undesirable. But just because two fields are called "phone number" does not make them the same thing. "Customer's current phone number" and "Customer's phone number at the time we last spoke to him" are not necessarily the same thing at all. I'm presently working with a database that keeps sale and item information. An item record includes such information as description, stock number, and price. Our sale records also include description, stock number, and price. Description and stock number are redundant and should be eliminated. This was bad design. But price must be included in both places. There's a big difference between current price and the price at the time of a given sale. That sale could have been years ago. The price may have changed a dozen times since then. In general in an application like you describe I'd just put phone number in the history table and be done with it. There's little to be gained by having a "phone number history" table and linking to the applicable-at-the-time phone number record. It might save a few bytes per record but it would add a bunch of complexity. However, if there are several related fields, the story changes. If, say -- and I'm just inventing an example here to give the idea -- you are a health insurance company and your terms of coverage vary depending on the location because of differing state laws, available doctors in the area, etc, so that when a customer moves his policy must be rewritten, now phone number may be related to many other data items, and so all should go in a single table and you link to the appropriate record. Otherwise you could have a New Jersey phone number but you're linking to California policy terms, etc.
