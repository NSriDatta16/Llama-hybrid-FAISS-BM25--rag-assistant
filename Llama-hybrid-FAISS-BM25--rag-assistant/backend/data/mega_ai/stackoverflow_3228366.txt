[site]: stackoverflow
[post_id]: 3228366
[parent_id]: 3227987
[tags]: 
This isn't a database design question. This is an organisational question. The organisational aspects of this question are much more important than technical questions. The answer is: whatever makes life easiest for you as developers For instance, you say: Some new (ASP.Net-)Projects need access to this data too. How integrated are these projects with your project? Do you actually share data (or write to the same tables)? For instance, if you make a breaking change to one of your tables, do you need to make changes to the code in the other projects at the same time? (Sometimes really hard to synchronize between two projects). If you don't actually share data (apart from the customer data, which I assume is effectively read-only), then use separate databases (OR schemas). This makes changes a lot easier to manage. Another trick is to have in each database a set of views onto the customer data, which lives in elsewhere, in another schema. So, have a database per project, with views in each database onto the customer data, which lives in a single separate database. Performance shouldn't really be an issue, unless the databases live on separate machines.
