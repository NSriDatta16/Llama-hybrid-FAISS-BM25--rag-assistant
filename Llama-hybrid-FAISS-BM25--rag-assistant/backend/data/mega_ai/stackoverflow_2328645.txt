[site]: stackoverflow
[post_id]: 2328645
[parent_id]: 2328193
[tags]: 
Probably you could make use of IoC containers like, Windsor, StructureMap or Ninject, which would make your life much easier, and in fact they also work as "factory" you have created manually, but are much more powerful. Also there are automocking containers which will automatically create mock dependencies for your classes so you can save additional lines of code, and make your test less fragile. As for question regarding the need for interface instead of classes, its basically the Dependency Inversion Principle, which states that higher level modules (classes) should not depend on lower level modules (classes), both of them should depend on abstractions. Interfaces are those abstractions. I suggest you would take a look at S.O.L.I.D principles which will make your life much more easier, at least they did to me..
