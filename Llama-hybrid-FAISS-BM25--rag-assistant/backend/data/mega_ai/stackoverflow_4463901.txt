[site]: stackoverflow
[post_id]: 4463901
[parent_id]: 
[tags]: 
How to set up a testing project (namespaces, useful helper objects, etc)?

My team is trying to set up some guidelines for automated testing. Specifically, we are interested in what types of classes will exist in our testing project, how the namespaces will be set up, etc. This is what we have come up with so far. The view from the solution explorer Project: MyProject.Testing Folder: Functionality A Class: TestFixture1 Class: TestFixture2 Class: ConstantManager Class: StateManager Class: EntityBuilder Class: ScenarioBuilder I have my test fixtures organized by function. This essentially mimics my main solution namespaces so if I have something like MyProject.Dao as a namespace in my main project, in my testing project I have MyProject.Testing.Dao. I also added some helper classes. ConstantManager : Stores database id's, etc for reusable constants needed during tests StateManager : Manages reseting the state before each test (could be replacing a file modified by a test with the original, resetting a db, etc) EntityBuilder : Creates instances of our domain entities that can be used for testing ScenarioBuilder : Takes the entities from the EntityBuilder and combines them into scenarios that can be reused for multiple tests. For example, this could be populating a tree, or setting specific properties, etc. I'm thinking ScenarioBuilder will inherit EntityBuilder (or perhaps replace EntityBuilder altogether) While I have shown the ConstantManager, EntityBuilder, and ScenarioBuilder as being directly under the testing project, there could actually be specific definitions of these classes for each function (under Functionality A for example) if the situation calls for it. So, what am I doing wrong and what should I be doing? Thanks!
