[site]: crossvalidated
[post_id]: 629580
[parent_id]: 
[tags]: 
Forecasting and numerical stability - how to handle added constants post forecast?

The Python statsforecast package has some recommendations when simulating / generating time series, that we can add a constant to avoid computational problems: https://github.com/Nixtla/statsforecast/blob/main/experiments/ray_ets/experiment.py Basically, they just do this: # the target variable for univariate forecast df['y'] += 10 They note the following: # add constant to avoid numerical errors # in production settings we simply remove this constant # from the forecasts My question is on this last part. Consider a few scenarios containing a forecast and a prediction interval, assuming the forecast was made with the +10 constant. Forecast 1: ** Forecast ** | ** Low 90 ** | ** High 90 ** | 8 14 22 Forecast 2: ** Forecast ** | ** Low 90 ** | ** High 90 ** | 0 0 21 To correct the effect of the constant, do we subtract -10 from all values, to include the prediction intervals?
