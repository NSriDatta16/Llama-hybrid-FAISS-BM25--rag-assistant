[site]: stackoverflow
[post_id]: 5189552
[parent_id]: 
[tags]: 
JavaMail - why do I sporadically get a StoreClosedException on a folder operation?

I have the following code fragment: // using classes from javax.mail.* // Session / Store setup code // Store implementation class = com.sun.mail.imap.IMAPStore Folder folder = store.getFolder("INBOX"); // store setup previously folder.open(Folder.READ_WRITE); Message[] messages = folder.getMessages(); Folder anotherFolder = store.getFolder("F1"); if ( !anotherFolder.exists()) { [***] anotherFolder.create(Folder.HOLDS_MESSAGES); } folder.copyMessages(messages, anotherFolder); Occasionally, I will get the following exception: javax.mail.StoreClosedException: failed to create new store connection at com.sun.mail.imap.IMAPFolder.throwClosedException(IMAPFolder.java:2208) at com.sun.mail.imap.IMAPFolder.doCommand(IMAPFolder.java:2335) at com.sun.mail.imap.IMAPFolder.exists(IMAPFolder.java:427) at [***] I am not sure if this is a result of me using the JavaMail API incorrectly, or if this is a server problem. I have two observations: The failure occurs when it checks the folder's existence, rather than when the getFolder is invoked. getFolder is invoked more than once in the code. I suppose it is possible that the connection to the mail server dies at some point after the folder.getMessages() from time to time, but it ALWAYS fails on the exist() call as opposed to the create() call. One solution is to call store.isConnected() first and reconnect if required, but I want to figure out if there is something I am doing wrong first before I resort to that. I would appreciate any insight or advice on how to probe deeper into the source of this exception. Thanks in advance!
