[site]: crossvalidated
[post_id]: 40609
[parent_id]: 40602
[tags]: 
Yes, you can. The model is $$\Pr(Y=1) = \frac{1}{1+ \exp(-[\beta_0 + \beta_1 x + \beta_2 x^2])}.$$ When $\beta_2$ is nonzero, this has a global extremum at $x = -\beta_1 / (2\beta_2)$. Logistic regression estimates these coefficients as $(b_0, b_1, b_2)$. Because this is a maximum likelihood estimate (and ML estimates of functions of parameters are the same functions of the estimates) we can estimate the location of the extremum is at $-b_1/(2b_2)$. A confidence interval for that estimate would be of interest. For datasets that are large enough for the asymptotic maximum likelihood theory to apply, we can find the endpoints of this interval by re-expressing $\beta_0 + \beta_1 x + \beta_2 x^2$ in the form $$\beta_0 + \beta_1 x + \beta_2 x^2 = \beta_0 - \beta_1^2/(4\beta_2) + \beta_2(x + \beta_1/(2\beta_2))^2 = \beta + \beta_2(x + \gamma)^2$$ and finding how much $\gamma$ can be varied before the log likelihood decreases too much. "Too much" is, asymptotically, one-half the $1-\alpha/2$ quantile of a chi-squared distribution with one degree of freedom. This approach will work well provided the ranges of $x$ cover both sides of the peak and there are a sufficient number of $0$ and $1$ responses among the $y$ values to delineate that peak. Otherwise, the location of the peak will be highly uncertain and the asymptotic estimates may be unreliable. R code to carry this out is below. It can be used in a simulation to check that the coverage of the confidence intervals is close to the intended coverage. Notice how the true peak is $-1/2$ and--by looking at the bottom row of histograms--how most of the lower confidence limits are less than the true value and most of the upper confidence limits are greater than the true value, as we would hope. In this example the intended coverage was $1 - 2(0.05) = 0.90$ and the actual coverage (discounting four out of $500$ cases where the logistic regression did not converge) was $0.91$, indicating the method is working well (for the kinds of data simulated here). n logistic 0) u 0) l
