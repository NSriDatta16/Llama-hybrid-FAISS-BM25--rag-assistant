[site]: crossvalidated
[post_id]: 315593
[parent_id]: 
[tags]: 
Computing the correlation / covariance of time series of multiple length and multiple variables

I have N time series of DIFFERENT lengths with i number of data points in each observation. I would like to compute the similarity of each time series and generate M number of clusters. I have tried Jaquard simliarity, and followed the link below Time Series Similarity : Differing Lengths with R but am looking for a similar solution in Python here (which I have found https://github.com/slaypni/fastdtw ) The other problem is the NUMBER of features in the dataset (it is not just X & Y). X = Time, but I have 5 vectors for Y. import numpy as np from scipy.spatial.distance import euclidean from fastdtw import fastdtw x = x y = y print(x.shape) print(y.shape) distance, path = fastdtw(x, y, dist=euclidean) print(distance) Works fine for uneven dimension size, but if I add multiple dimensions it kicks out an error. Should I do some transposing? Finally, if I can calculate the distance between each pair, what is the best way to cluster them?
