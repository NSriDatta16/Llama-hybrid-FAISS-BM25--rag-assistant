[site]: crossvalidated
[post_id]: 123137
[parent_id]: 
[tags]: 
Training an Auto Encoder results in average output

I am using an autoencoder in order to compress ECG data. I have implemented it according to the tutorial available at http://ufldl.stanford.edu/wiki/index.php/UFLDL_Tutorial . I have validated the implementation using the MNIST dataset and it works quite well (as far as I can tell the results are plausible). So now I am using the same approach to train an autoencoder on intervals of ECG data and the output I get is always the average of the data (e.g. a straight line over the entire interval). I have tried different interval sizes and, different hidden layer sizes as well as different parameters for sparsity and learning rate, however, the result is always the same. Even if I set sparsity penalty to 0, it is not learning the identity mapping for the same number of hidden units as input units. Anyone got a hint in which direction I should look for my mistake? Thanks a bunch! Edit: My training data set is about 50.000 intervals if I split them into 8 sec. pieces, represented by 400 samples each.
