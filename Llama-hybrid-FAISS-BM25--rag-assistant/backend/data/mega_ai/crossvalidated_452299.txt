[site]: crossvalidated
[post_id]: 452299
[parent_id]: 
[tags]: 
calculating truncated infinite AR weights in practice for Arima model

I am trying to figure out how to form the truncated infinite AR weights for a general time series process. $(1 - \phi_1 B - \phi_2 B^2 - ... - \phi_p B^p)(1 - B)z_t = (1-\theta_1 B - ... - \theta_q B^q)a_t$ Where $\phi \text{ and } \theta$ are some constants, $z_t$ is a series of measurements, $a_t$ is noise, and $B$ is the backshift operator $B * z_t = z_{t-1}$ . Let $\phi(B) = (1 - \phi_1 B - \phi_2 B^2 - ... - \phi_p B^p)\\ \theta(B) = (1-\theta_1 B - ... - \theta_q B^q)\\ \rho(B) = \phi(B) * (1-B)$ Then this model can also be represented as : $\rho(B)z_t = \theta(B)a_t$ It is known that these models, if stationary, can be represented by an infinite AR series: $$\Psi(B) = \frac{\theta(B)}{\rho(B)} = \frac{1-\theta B}{(1-\phi B)(1-B)} = \sum_0^\infty \psi_iB^i$$ But, $\Psi(B)$ does not converge if the difference operator $(1-B)$ is included in $\rho(B)$ , and according to "Time Series Analysis, Forecasting and Control"(Box, Jenkins), this series is only valid if we use the "truncated form" of the model. The truncated form consists of a sum of a homogeneous and complementary solution with respect to some time point $k$ : $$ z_t = C_k(t-k) + I_k(t-k)\\ \rho(B)C_k(t-k)=0\\ \rho(B)I_k(t-k) = (1-\theta B)a_t\\ $$ Here, $C_k$ is the homogeneous solution, and $I_k$ is the complementary solution, where $I_k(t-k) = 0$ when $t\leq k$ , and $k$ represents a value where the series is truncated, such as the first data point in some time series. How would one calculate the complementary function in practice? The book gives the formula $$ I_k(t-k) = a_t + \psi_1 a_{t-1} + ... + \psi_{t-(k+1)} a_{k+1}\\ I_k(s-k) = 0 \text{ if } s \leq k $$ I was thinking I should write out the equation: $$\rho(B)I_k(t-k) = \theta(B)a_{t-k} = (1-\theta_1 B - \theta_2 B^2 - ... - \theta_q B^q) a_{t-k}$$ Then, possibly calculate $I_k(t-k)$ for every data point with $t \geq k$ , equate coefficients of the left and right hand side, and solve using least squares if I have more data points than unknowns? How do I calculate the homogeneous solution in practice? The book gives the formula $$C_k(t-k) = G_0^{t-k}\sum_{j=0}^{d-1}A_j(t-k)^j + \sum_{j=1}^p D_j G_j^{t-k}\\ \text{where } \rho(B) = (1-G_1)(1-G_2)...(1-G_p)(1-G_0)^d$$ Here, $\rho(B)$ has been factored so that you can see it's roots $(G_i)$ . This is a general formula given for a case when one factor of $\rho(B)$ repeats $d$ times In this case, should I use a root solving algorithm to find the roots of $\rho(B)$ ? If so, would I then form a system of equations with 1 equation for each time $t$ , and solve that system for the $A_j$ and $D_j$ , probably using least squares since more equations than unknowns (1 for each data point)?
