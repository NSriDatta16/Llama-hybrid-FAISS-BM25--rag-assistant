[site]: stackoverflow
[post_id]: 1452050
[parent_id]: 1448353
[tags]: 
I've used jpGraph a fair bit (generates graphs on the server side from php) and have developed some view action helpers that do all the hard work for me. So I call the helpers with a few basic parameters (eg title, width, height) and an array of data (passed in from the controller) and the helper does the rest. It makes a nice clean readable .phtml file, especially when there are multiple graphs per page. I've not seen any Zend_ components that will do much of this for you. [updated 12 Nov: added sample code below] class Zend_View_Helper_RenderAverageDollarSaleGraph { protected $fileName = 'averageDollarSale.jpg'; //------------------------------------------------------------------------- /*! \brief \param \return */ function renderAverageDollarSaleGraph( $monthSales ) { $labels = array( '', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ); $startDate = date( 'Ym', mktime( 0, 0, 0, date( 'm' ) - 1, 1, date( 'Y' ) - 2 )); $result = $label = $csimLabels = array(); foreach ($monthSales as $row) { $date = sprintf( '%d%02d', $row['paid_year'], $row['paid_month'] ); if ($date createGraph(); $graph->SetScale("intint"); $graph->title->Set( 'Average Dollar Sale' ); $graph->xgrid->Show( true ); $graph->ygrid->Show( true ); $p1 = new LinePlot(array_values( $result )); $p1->mark->SetType(MARK_CIRCLE); $p1->mark->SetColor( 'black@0.9' ); $p1->SetCSIMTargets( array_fill( 0, count( $csimLabels ), '#' ), $csimLabels ); $graph->Add($p1); $graph->xaxis->SetTickLabels( $label ); $graph->Stroke( SITE_VAR_PATH . $this->fileName ); } } The above is a cut down version: the full version checks the timestamp on the file and only regenerates if the data is more than a day old.
