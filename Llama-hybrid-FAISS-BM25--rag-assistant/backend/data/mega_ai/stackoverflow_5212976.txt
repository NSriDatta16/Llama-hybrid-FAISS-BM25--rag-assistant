[site]: stackoverflow
[post_id]: 5212976
[parent_id]: 5212960
[tags]: 
One clean way (clean because it avoids eval()) to do relatively dynamic code would be to store either a function name or, after php 5.3, a function reference. E.g. something like: $callback = "truth_check"; $condition_result = ($a == $b); if(is_callable($callback)){ $callback($condition_result); } See a running example here: http://ideone.com/1SBYS In your case the callback could be a result to run, e.g. "print_message_on_true_input" as some comparison function and the input could be the result of a conditional tested anywhere in your code, e.g. $print = (false || $a == $b); Give your specific use cases, though, because 90% of the time intended behavior can be acheived much less fragily without resorting to any dynamic code at all.
