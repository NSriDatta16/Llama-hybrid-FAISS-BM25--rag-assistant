[site]: stackoverflow
[post_id]: 895099
[parent_id]: 895009
[tags]: 
You could just give it a weighted score when ranking results, as opposed to just displaying the average vote so far, by multiplying with some function of the number of votes. An example in C# (because that's what I happen to know best...) that could easily be translated into your language of choice: double avgScore = Math.Round(sum / n); double rank = avgScore * Math.Log(n); Here I've used the logarithm of n as the weighting function - but it will only work well if the number of votes is neither too small or too large. Exactly how large is "optimal" depends on how much you want the number of votes to matter. If you like the logarithmic approach, but base 10 doesn't really work with your vote counts, you could easily use another base. For example, to do it in base 3 instead: double rank = avgScore * Math.Log(n, 3); Which function you should use for weighing is probably best decided by the order of magnitude of the number of votes you expect to reach. You could also use a custom weighting function by defining double rank = avgScore * w(n); where w(n) returns the weight value depending on the number of votes. You then define w(n) as you wish, for example like this: double w(int n) { // caution! ugly example code ahead... // if you even want this approach, at least use a switch... :P if (n > 100) { return 10; } else if (n > 50) { return 8; } else if (n > 40) { return 6; } else if (n > 20) { return 3; } else if (n > 10) { return 2; } else { return 1; } }
