[site]: stackoverflow
[post_id]: 1836694
[parent_id]: 810606
[tags]: 
As your app is mainly data-centric, perhaps your architecture could be mainly conventional. For the aspects where you have more logic and potential domain or value objects, perhaps you could leverage some of the DDD ideas to organize the code. In general, the "sound alternative" is to keep things as simple as possible, use the DDD concepts where useful, and don't unnecessarily complicate things, as the article advises. I'm starting a similar project now, it is a mix of data manipulation and more logic/algorithm driven areas. I'd similarly like to take the parts of DDD that will benefit the project, but not try to force it on areas where it may be counter-productive.
