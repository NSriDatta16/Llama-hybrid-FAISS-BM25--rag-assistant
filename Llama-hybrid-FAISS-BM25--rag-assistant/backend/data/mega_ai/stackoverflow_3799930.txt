[site]: stackoverflow
[post_id]: 3799930
[parent_id]: 
[tags]: 
Features/functions that make your app more professional? Coding hobbyhorses

What features do you implement (how) in your PHP web applications because you deem it " more professional " in some way? Or do you have personal nitpicks and code hobbyhorses, specifically small things that might count? Which unsavoured code or minor functionality do you spend an inordinate amount of time on to get right ? . Example coding hobbyhorses for Q&A illustration: Configuration data not in database : Application data != configuration data, which is also a matter of necessity and efficiency. URL fixing : Normalize all web addresses by appending the trailing slash, even if it's technically not required. Human-readable cookies : For data privacy I try to avoid opaque session/database handles (for user options, not authorization usage). Content negotiation : Makes sense for simple variations between e.g. RSS and Atom formats. But I see it infrequently used. No database IDs in UI : Avoid leaking database internal surrogate keys into URLs. And with ORMs db-internal keys don't even had to leak into business logic. . Hints (not rules) So, which functionality do you believe puts your web application above average? Why is it uncommon? Does it benefit users, but is likewise easy to overlook? More professional and secure coding suggestions are very much on topic. They always are. But the intended scope of this Q&A is actually uncommon/unique features , and possibly non-standard and controversial functionality. Big bonus for fascinating. It's also about coding preferences and nitpicks that just happen to materialize in PHP. Don't think too big or too high level. Small functionality counts too. Show code if feasible. Syntax and coding style / paradigms are however mostly off-topic. And let's not argue about usefulness or code quality. It's purely a featuritis & code survey. First featuritis research bounty round : It was difficult to decide on one of the many good ideas. Truth be told, I could only narrow it down to five favorites and left the decision to rand() . And the topic is definitely interesting enough to warrant a second bounty round. After a break. And maybe someone else takes over to refine the scope.
