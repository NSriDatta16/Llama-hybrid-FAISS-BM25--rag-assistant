[site]: stackoverflow
[post_id]: 5234195
[parent_id]: 5234121
[tags]: 
When running under the debugger, you're using the debug heap, which may affect alignment. Set _NO_DEBUG_HEAP=1 in your environment settings, and see if this helps. See e.g. http://msdn.microsoft.com/en-us/library/aa366705%28v=vs.85%29.aspx However, alignment is not guaranteed when allocating with malloc or new. The "correct" way of solving this in VS is to use _aligned_malloc . When you want your SSEVector as a member of another structure, you need to change the packing of this structure (using #pragma pack), or the __declspec(align) of SSEVector. See How align works with data packing What happens in your cases are (apart from the seemingly coincidental debugger/non-debugger difference): SSEVector is declared unaligned. If you allocate it directly using _aligned_malloc , it'll be aligned. TestClass is also unaligned, and uses default packing. If you allocate it using _aligned_malloc , the TestClass instance will be properly aligned. This doesn't help you at all, since you want the SSEVector member variable to be aligned. Adding an alignment requirement on SSEVector using __declspec(align) will tell the compiler that SSEVector stack variables must be aligned, and that SSEVector as a struct member must be aligned within the struct/class . Now, if you allocate a TestClass using _aligned_malloc , it will be properly aligned. And the SSEVector offset in the struct is also properly aligned due to the declspec, so the absolute address of the SSEVector will be correct for your use.
