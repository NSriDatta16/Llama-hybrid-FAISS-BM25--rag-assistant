[site]: stackoverflow
[post_id]: 4422467
[parent_id]: 4421769
[tags]: 
If I understood you correctly this is more of a design question rather than an implementation problem. Design is pretty important for all kinds of applications cause they help you to organise your code in a better way. Usually few hours of thinking before you write the first line of code will help you to save much more time later. I hope that my answer will answer your question. Try thinking about it as a MVC application, where your components are the view layer, model would be a bean that stores the number of instances (or the references to them) and the controller would be a code triggered by the "events" from the view and model layers. As mentioned in the answers above you will need a central point to access your data so you will need to make sure that there is only one bean representation of the UI state. This could be achieved either using singleton pattern as you've suggested, using static fields or by using a service provider facade to access the object, either of those will do the job. Of course you need to choose the method that suits your project best, over design is a bad thing as well ;) You may want to do the tutorial for the PureMVC framework, it's a quite easy and lightweight. I would recommend at least doing the tutorial and going through the documentation so that you can understand the idea. You don't need to use it but it'll be good for the educational purposes.
