[site]: stackoverflow
[post_id]: 4713512
[parent_id]: 4713297
[tags]: 
you are mixing up two different things that are in fact difficult to know for someone who is learning C. Declaration of variables inside a function and as a function parameter are not the same thing. The equivalence char*argv[] ~~~ char **argv holds because this a parameter (of main ). There the array is in fact the same thing as declaring a pointer. Your assignment environ = array is not wrong, syntactically, the compiler will accept it. But it is wrong semantically for several reasons: You don't know who and how is allocated *environ . You loose the reference to the initial contents of *eviron . You assign a local storage that will be recycled once you leave the scope of the function. So *environ will be undefined, once you left the function. So environ is a particularly bad example to do such an assignment.
