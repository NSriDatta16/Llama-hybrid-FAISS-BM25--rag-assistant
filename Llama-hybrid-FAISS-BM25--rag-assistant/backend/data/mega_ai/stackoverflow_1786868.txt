[site]: stackoverflow
[post_id]: 1786868
[parent_id]: 1786481
[tags]: 
If you're using Java 1.5 or later, be sure to read up on Doug Lea's java.util.concurrent. It has some extremely nice facilities that you may be able to leverage, and as Joshua Bloch says in Effective Java : "Given the difficulty of using wait and notify correctly, you should use the higher-level concurrency utilities instead." (p. 273). One java.util.concurrent approach to consider is to use a ThreadPoolExecutor , which queues up a set of concurrent tasks (Runnables) and distributes them across a pool of worker threads. Your logout operation might then call ExecutorService.shutdown() to cause it to stop accepting new tasks. Then you can call ExecutorService.isTerminated() to detect when the last task has completed.
