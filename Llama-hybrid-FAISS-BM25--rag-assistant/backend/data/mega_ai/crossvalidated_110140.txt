[site]: crossvalidated
[post_id]: 110140
[parent_id]: 110136
[tags]: 
The model in SQL is made by attaching the models coefficients from the glm model to produce the glm prediction values and then multiplying it with the lm model prediction values. Does your model have an identity link function? That would make a difference. Could you provide the SQL code? That would help in getting an answer. Also, this appears to a be a questions about SQL and not about statistics. It might not be a good fit for cross validate. Edit: Okay, first, the way you are using GLMs is identical to using LMs. A GLM, as the name implies, is a more general form of a linear model. It has 2 characteristics - the link function and the residual distribution family. You define the distribution in R by using the family argument in the function. The link function is the function that relates the linear model to the response variable. You can also set the link function in the glm() parameters. An LM or linear model is a GLM with an identity link (the linear model is equal to the response) and a Gaussian distribution of residuals (that is the residuals are normally distributed). For an example, look at the following code. m1 |t|) (Intercept) -7.10144 0.50666 -14.02 Now run the glm function but with an identity link and Gaussian distribution. glm1 |t|) (Intercept) -7.10144 0.50666 -14.02 Notice that the models are exactly the same? This is because the LM is an identity linked, Gaussian family model. For more information, if you are predicting the probability that something occurred (like in your second model), I would recommend reading about a logit regressions in general. http://en.wikipedia.org/wiki/Logistic_regression Edit: I see in your original post where you say you are using a logistic regression, but I can't see in your code where you are applying the logistic regression. If you are intent on using a GLM then you could use a logit link and either Poisson or binomial distribution depending on your data. Now, to your question of coefficients in SQL, I don't have your data to replicate your problem, but the model objects in R have a coefficients item. This will help you transport your model coefficients from R to SQL. You can set this to a table and export it to get maximum precision. For example, d7_lm
