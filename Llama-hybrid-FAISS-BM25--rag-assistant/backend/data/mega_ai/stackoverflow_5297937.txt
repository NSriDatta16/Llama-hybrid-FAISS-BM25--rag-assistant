[site]: stackoverflow
[post_id]: 5297937
[parent_id]: 
[tags]: 
msiexec scripting in python

Most of this is background, skip the next 3 paragraphs for the question: I have developed a tool that calls some installers, changes registry items, and moves files around to help me test a product which has a fairly fast update cycle. So far so good, I have a GUI which runs in a separate process to the business logic to prevent it locking due to the GIL, everything works etc, however I have concerns with a section of my code where I make calls to msiexec. Specifically it's the uninstall part which gives me concerns. Currently the GUID does not change so I am able to uninstall the product using an os.system('msiexec /x "{GUID}" /passive') sort of thing. It's actually a bit more complicated as I'm using subprocess.Popen and polling it until it finished from within an event loop to allow for concurrency with other steps. My concern is that should the GUID change, obviously this will not work. I don't want to point msiexec directly at the installation source, as this would mean that it wouldn't work if I were to 'lose' the msi file, which I store in a temporary directory. What I am looking for, is a way of querying by program name to get the GUID, or even a wrapper for msiexec that would do all of this, including the uninstall, for me. I thought of scanning through the registry, but the _winreg module seems very slow, so I'd prefer to avoid this if at all possible. If there's a better way to scan the registry, I'm all ears, as this would speed up other parts of the tool also. Update0 Performance on this is critical as one of the design goals is to make the process which the tool follows faster than any other method, manual or otherwise, in order to gain wholesale adoption. Update1 I have tried a slight variation of the registry version below however it consistently returns None . I'm not quite sure how this is happening - it seems like it is failing to open the appropriate key as I have inserted a breakpoint after the with statement which is never reached... def get_guid_by_name(name): from _winreg import (OpenKey, QueryInfoKey, EnumKey, QueryValueEx, HKEY_LOCAL_MACHINE, ) with OpenKey(HKEY_LOCAL_MACHINE, r'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall') as key: subkeys, _0, _1 = QueryInfoKey(key) # The breakpoint here is never reached del _0, _1 for i in range(subkeys): subkey = EnumKey(key, i) if subkey[0] != '{' or subkey[-1] != '}': continue with OpenKey(key, subkey) as _subkey: if name in QueryValueEx(_subkey, 'DisplayName')[0]: return subkey return None print get_guid_by_name('Microsoft Visual Studio') Update2 Strike that - I'm a fool who doesn't check his indentation thoroughly enough - print get_guid_by_name('Microsoft Visual Studio') was within get_guid_by_name ...
