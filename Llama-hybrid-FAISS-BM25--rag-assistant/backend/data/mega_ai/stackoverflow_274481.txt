[site]: stackoverflow
[post_id]: 274481
[parent_id]: 274375
[tags]: 
You didn't mention one approach: you could modify memcached or your client to record the statistics you need. This is probably the easiest and cleanest approach. Between the proxy and the libpcap approach, there are a couple of tradeoffs: - If you do the packet capture approach, you have to reassemble the TCP streams into something usable yourself. OTOH, if your monitor program gets bogged down, it'll just lose some packets, it won't break the cache. Same if it crashes. You also don't have to reconfigure anything; packet capture is transparent. - If you do the proxy approach, the kernel handles all the TCP work for you. You'll never lose requests. But if your monitor bogs down, it'll bog down the app. And if your monitor crashes, it'll break caching. You probably will have to reconfigure your app and/or memcached servers so that the connections go through the proxy. In short, the proxy will probably be easier to code, but implementing it may be a royal pain, and it had better be perfect or its taking down your caching. Changing the app or memcached seems like the sanest approach to me. BTW: You have looked at memcached's built-in statistics reporting? I don't think its granular enough for what you want, but if you haven't seen it, take a look before doing actual work :-D
