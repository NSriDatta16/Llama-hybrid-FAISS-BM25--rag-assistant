[site]: stackoverflow
[post_id]: 2613888
[parent_id]: 2613163
[tags]: 
SoX is the Swiss Army knife of sound processing. You can utilize it to analyze recordings. The only shortcoming of the folowing solutions is: You need to split up the recordings to fixed size chunks You can lose recording time (due to killing/analyzing/restarting of recordings) So further improvements could be doing analyzing asynchronous, although this will complicate the job. #!/bin/bash record_interval=5 noise_threshold=3 storage_folder=~/recordings exec 2>/dev/null # no default error output while true; do rec out.wav & sleep $record_interval kill -KILL %1 max_level="$(sox out.wav -n stats -s 16 2>&1|awk '/^Max\ level/ {print int($3)}')" if [ $max_level -gt $noise_threshold ];then mv out.wav ${storage_folder}/recording-$(date +%FT%T).wav; else rm out.wav fi done Update: The following solution uses a fifo as output from rec. By using split on this pipe to get the chunks, there should be no loss of recording time: #!/bin/bash noise_threshold=3 storage_folder=~/recordings raw_folder=~/recordings/tmp split_folder=~/recordings/split sox_raw_options="-t raw -r 48k -e signed -b 16" split_size=1048576 # 1M mkdir -p ${raw_folder} ${split_folder} test -a ${raw_folder}/in.raw || mkfifo ${raw_folder}/in.raw # start recording and spliting in background rec ${sox_raw_options} - >${raw_folder}/in.raw 2>/dev/null & split -b ${split_size} - &1|awk '/^Max\ level/ {print int($3)}')" if [ $max_level -gt $noise_threshold ];then sox ${sox_raw_options} ${raw} ${storage_folder}/recording-$(date +%FT%T).wav; fi rm ${raw} done sleep 1 done1
