[site]: stackoverflow
[post_id]: 3239629
[parent_id]: 3208865
[tags]: 
I fixed it by, when a swipe was detected and handled, instead of not sending anything, I now send a touchesCancelled, which makes a lot of sense in retrospect I must admit, but it wasn't really clear that I should do that. I couldn't find proper documentation on what to do if you didn't want the action to be handled. Code that works: - (void) touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { moveCount = 0; UITouch * touch = [touches anyObject]; touchBegin = [touch locationInView: nil]; [[self nextResponder] touchesBegan: touches withEvent: event]; } - (void) touchesMoved: (NSSet * const)touches withEvent:(UIEvent * const)event { moveCount++; [[self nextResponder] touchesMoved: touches withEvent: event]; } - (void) touchesEnded: (NSSet * const)touches withEvent:(UIEvent * const)event { // If we DO NOT handle the touch, send touchesEnded if(![self checkUserSwipedWithTouches: touches]){ [[self nextResponder] touchesEnded: touches withEvent: event]; } else { // If we DO handle the touch, send a touches cancelled. self.selected = NO; self.highlighted = NO; [[self nextResponder] touchesCancelled: touches withEvent: event]; } }
