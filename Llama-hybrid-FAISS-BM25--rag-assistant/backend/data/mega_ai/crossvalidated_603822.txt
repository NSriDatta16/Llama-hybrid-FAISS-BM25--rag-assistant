[site]: crossvalidated
[post_id]: 603822
[parent_id]: 603796
[tags]: 
What you're referring to is estimating an optimal treatment rule. Assuming you can satisfy certain causal assumptions, one approach for this is using a counterfactual framework. Denote the set of all possible treatment rules as $\mathcal{D}$ , the rule $d$ that maximizes the counterfactual $E[Y_d]$ is the optimal rule. $$ d_{\text{opt}} \equiv \text{arg max}_{d \in \mathcal{D}} E [Y_{d}] $$ A strategy to do this is to learn the conditional average treatment effect (CATE); this is frequently referred to as the blip function in this scenario: $E[Y_1 - Y_0 | V]$ where $V$ is the set of variables you want to use to define your rule. If you want to maximize $E[Y_d]$ , then you would assign individuals to the treatment group where the blip function is positive, and to the control where the blip function is negative. A valid way to do all this, and incorporate machine learning is to: Estimate the efficient influence function of the average treatment effect using a machine learning approach of your choice. Regress this on the set of variables $V$ using a machine learning algorithm of your choice. Generate predictions from this model as your estimate of the CATE Assign treatment according to the sign of the CATE for each individual For an example of all this used in a real study, see this paper ( https://academic.oup.com/aje/advance-article/doi/10.1093/aje/kwac217/6957041 ). Applying this to your example: {r} T Estimate the efficient influence function of the average treatment effect using a machine learning approach. In this case using a Super Learner with a GLM and random forest. library(dplyr) library(SuperLearner) learners = c("SL.glm", "SL.randomForest") propensity.fit $pred[, 1] y1 pred[, 1] y0 $x3 - 1) / propensity) * (df$ y - ya) + y1 - y0 Estimate the blip function by regressing the EIF of the ATE on $V$ and then predicting blip.fit Assign treatment according to the sign of the blip for each individual. In this scenario, there is no treatment effect heterogeneity, so everyone should be assigned treatment. d 0, 1, 0) # or if you want to minimize Y # ifelse(blip
