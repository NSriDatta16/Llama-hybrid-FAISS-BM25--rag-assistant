[site]: crossvalidated
[post_id]: 315842
[parent_id]: 
[tags]: 
Smoothing/shrinking the predicted probability of a classifier to reduce live logloss

Let us assume we work on a 2 -class classification problem. In my setting the sample is balanced. To be precise it is a financial markets setting where up and down have approximately 50:50 chance. The classifier produces results $$p_i = P[class = 1|X_i].$$ We evaluate the model by logloss on unseen/live data by $$ logloss = - \frac1n\sum_{i=1}^n \left(1_{o_i=1}\log(p_i) + (1-1_{o_i=1})\log(1-p_i) \right), $$ where $1_{o_i=1}$ denote the inficator that observation i equals 1. Wrong extremes are heavily punished. The values $p_i = 1/2$ can be seen as neutral predictions. Given the fact that I might face data shifts out-of-sample can I define a smoothed or shrunken version of my predictions $(p_i)_{i=1}^n$ in order to reduce my out-of sample logloss that would result in overconfident wrong predictions? Is there literature on this? The first thought would be to cut of probablities that deviate too much from 0.5 but I assume that there are better ways to do this. The model can be thought of a regularized logistic regression or neural net.
