[site]: crossvalidated
[post_id]: 403086
[parent_id]: 
[tags]: 
Looking for a proper reinforcement learning solution

I am looking for a proper reinforcement learning solution for the following problem: Suppose I have a pool of candidate functions f \in Pool (it's like f1 , f2 , ... fn ), and I am trying to synthesize several sequences of functions, each sequence contains arbitrary amount of f . Given a sequence s , when deciding whether to extend s by appending a new function f and forming a new sequence s' = sf , I have the following reward scheme: when F(s') = true, reward += 1 when T(s') = true, reward += 3 every time the sequence grows by one, I try to penalize by reward -= 0.5 In other words, I don't want each sequence s to be too long, but also will consider cases when special property F and T are satisfied. I view this as a learning problem, and envision it can be solved by reinforcement learning techniques, such as DQN or so. But I am a newbie to this field and find it difficult for me to formalize this problem. Could anyone shed some light on this and what kind of reinforcement learning algorithms/scheme I can try? Thanks a lot. Any suggestion or advice will be appreciated.
