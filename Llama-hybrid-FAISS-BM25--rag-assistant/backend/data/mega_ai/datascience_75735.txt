[site]: datascience
[post_id]: 75735
[parent_id]: 75649
[tags]: 
One of the other approach you can try is multi input & single output approach in which passing these 2 images to 2 different layer from there different layer then concatenation of the layers to perform classification task. It can be done using keras Functional API input1 = keras.layers.Input(shape=(1,)) input2 = keras.layers.Input(shape=(1,)) cnn1 = keras.layers.Conv2D(32, 3, activation=keras.activation.relu)(input1) cnn2 = keras.layers.Conv2D(32, 3, activation=keras.activation.relu)(input2) merged = keras.layers.Concatenate(axis=1)([input1, input2]) dense1 = keras.layers.Dense(2, activation=keras.activations.relu)(merged) output = keras.layers.Dense(1, activation=keras.activations.sigmoid)(dense1) model10 = keras.models.Model(inputs=[input1, input2], output=output) When passing data to model create separate arrays of input those 2 images set. model0.fit([array_1, array_2],output, batch_size=16, epochs=100)
