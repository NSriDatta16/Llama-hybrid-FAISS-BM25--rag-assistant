[site]: stackoverflow
[post_id]: 4384270
[parent_id]: 4384248
[tags]: 
Make your matches non-greedy . Change .+ to .+? It works!! Explanation: The quantifier + is greedy by default. Consider the regex \[(.+)\] which tries to match and capture everything between the [ and ] . On the input [foo] it works fine and foo is captured. But on the input [foo] and [bar] it'll capture foo] and [bar !!! This is the greedy behavior in action which makes + to consume as much as it can. By making the match non-greedy \[(.+?)\] we tell + to consume as less as it can but still trying to match. So in this case with the same input it'll capture foo . Some tips: There is no real need of the 1st and the 3rd group in your regex: '/(\' \. \$)(.+)( \. \')/' . So you can drop the 1st and 3rd pair of (...) . If you just want to group use (?:..) rather than (..) which is used for grouping + capturing. The use of \\n in the replacement part is discouraged. It should be used only as back-reference in the regex. To use capture groups in the replacement part use $n . Program with above changes
