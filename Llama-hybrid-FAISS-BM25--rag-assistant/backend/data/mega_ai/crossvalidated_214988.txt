[site]: crossvalidated
[post_id]: 214988
[parent_id]: 
[tags]: 
Computing range of threshold values for given inputs and classifications

I'm having some trouble with the following type of exercises: Given a feed forward neural network with Heaviside activation function (the function that outputs 1 if the input is >= some threshold value, else 0), figure out the range for the threshold value so that a given set of input/output pairs hold for the neural net (ie some given inputs are classified in some predetermined classes). For example one such question was: Given a feed-forward neural net that uses Heaviside, with two input neurons (neurons labeled 1,2), two hidden layers of two neurons each (layer 1: 3,4 and layer 2: 5,6), and a single output neuron (7), and weights w13 = 0.1, w14 = 0.3, w23 = -0.2, w24 = -0.3, w35 = 0.2, w36 = 0.4, w45 = -0.1, w46 = -0.2, w57 = 0.3, w67 = -0.2 where wXY is the weight of the connection between neurons labeled X and Y. Figure out the range of values that the threshold value can take so that the following inputs-outputs hold for the network: (0.3,0.2) outputs 1 (0.2,0.4) outputs 1 (0.4,0.2) outputs 1 (0.1,0.3) outputs 0 So far I've tried solving a couple of those by calculating for each input the whole chain of values and eyeballing the ranges/trial and error so that the output gets the desired value. But I can't help but think there must be an easier and more formal way to do this. I was also given a hint to work backwards. I assume that means working your way from the output neuron towards the input layer? How can you compute the values backwards if you don't yet know your threshold value? Can I somehow start backwards and establish some constraints for my threshold value?
