[site]: crossvalidated
[post_id]: 579178
[parent_id]: 579034
[tags]: 
Software will help you extract and visualize the fixed effects so you can get a handle on their contribution to the model fit. In R, fixef() is a helper function that can be found in numerous packages. It will return a list of the fixed coefficients in whatever dimension that's most appealing to you. Let's look at a very quick example. After loading the Produc dataset in R, I will regress the unemployment rate on state output, then adjust for state and year fixed effects. I am a bit partial to the feols() funciton in the fixest package, so let's go ahead and estimate the model and then extract the fixed effects. # library(fixest) mod Fixed_effects coefficients state year Number of fixed-effects 48 17 Number of references 0 1 Mean 5.95 1.97 Standard-deviation 2.19 1.49 COEFFICIENTS: state: ALABAMA ARIZONA ARKANSAS CALIFORNIA COLORADO 6.904 5.433 5.711 13.49 4.366 ... 43 remaining ----- year: 1970 1971 1972 1973 1974 0 0.8031 0.3987 -0.07369 0.5803 ... 12 remaining The output offers a neat summary of the overall mean and standard deviation. We can see that most of the heterogeneity is across states . By construction, the elements of the first fixed effect dimension (i.e., state) will not be used as references. In the second dimension, however, we see the year 1970 was set as a common reference for us. Once we store the results, the plot() function centers, sorts, and visualizes the "most notable" (i.e., highest and lowest) of the fixed effects. plot(fe) To be honest, the plot was a little cluttered so I used state abbreviations and omitted some of the state effects. I only did this for ease of viewing. Note California's unemployment rate relative to the national average. I should note that the interpretive value of these plots become a bit murky in settings with unbalanced fixed effects across multiple dimensions. Results will also differ in the presence of the state effects alone. I recommend this more so as a visualization tool.
