[site]: stackoverflow
[post_id]: 4404007
[parent_id]: 
[tags]: 
Forcing VS2008 to issue a GCC warning similar to "warning: comparison between signed and unsigned integer expressions"

Along the same lines as to what was described in conversion to ‘size_t’ from ‘int’ may change the sign of the result - GCC , C , I would instead like to insure that the warning I receive under GCC 4.2.1 is also flagged under VS2008 SP1 under both 32-bit and 64-bit compilation, versus disabling warnings under GCC to suit VS2008. For example, under GCC 4.2.1 under 64-bit conditions, we see the following as a warning under -Wall conditions: #include bool foo() { size_t len = 0; const char * someBuffer = "flubber"; len = strlen(someBuffer); bool retval = false; for (int j = 0; j The GCC warning is: warning: comparison between signed and unsigned integer expressions But it is not flagged by the VS2008 SP1 64-bit compiler, no matter what types of pragmas I try and no matter what I enable using /W3 or /W4, or /w3 some_warning_number or /w4 some_warning_number , etc. Now, I don't want to dumb down GCC's warning levels or disable the warning, since they had the warning in there for very good reasons. So I would like the VS builds to fail in similar ways when /WX is enabled. Is this something I have to live with, or is there some warning that would do the trick on VS2008? EDIT: The warning shows up for 32-bit builds but not using 64-bit builds, using the same set of compiler options, shown below: /O2 /Ob2 /D "WIN32" /D "_WINDOWS" /D "NDEBUG" /D "_CRT_SECURE_NO_WARNINGS" /D "__WIN32__" /D "_SCL_SECURE_NO_WARNINGS" /D "_BIND_TO_CURRENT_MFC_VERSION" /D "_BIND_TO_CURRENT_CRT_VERSION" /D "WINVER=0x0502" /D "_WIN32_WINNT=0x0502" /D "_WIN32" /D "_NT" /D "_CRT_NONSTDC_NO_WARNINGS" /D "_MBCS" /FD /EHsc /MD /W3 /WX /TP /Zm1000 EDIT #1: Seeing as this might be a Visual Studio idiosyncrasy, I posted to Visual C++ Developer Center - warning C4018: ' . EDIT #2: I was directed to post to Microsoft Connect from within the Visual C++ Developer Center posting , and today (2011-01-11) Microsoft replied to my question and verified it as a compiler issue: They stated that the issue will added to the backlog to be fixed in a future release: Microsoft Connect - warning C4018: ' .
