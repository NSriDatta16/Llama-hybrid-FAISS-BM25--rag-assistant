[site]: stackoverflow
[post_id]: 4115398
[parent_id]: 4115023
[tags]: 
I've done it before, but instead running the resulting binary it output the binary as download. The user can compile but they need to download the binary and run it in their computer. Letting users compile and run arbitrary code on your server is a big vulnerability IMO. Anyway, this is my quick implementation: index.php using namespace std; int main(){ cout Online C++ Compiler v1.0 Online Compiler v1.0 Online Windows C++ compiler using Mingw compiler Compilation Error! Check your source code '; echo ' '.$error.' '; } ?> Source Code: compiler-gcc-mingw.php $value){ $data .= $value.' '; } return $data; } function getExecutable(){ // retrieve exe data to memory global $exeData; global $dir; $exeData = @file_get_contents($dir.'/a.exe'); } function cleanUp(){ // delete all temporary files global $dir; $alist = scandir($dir); foreach($alist as $key => $value){ if(is_file($dir.'/'.$value)) { unlink($dir.'/'.$value); } } rmdir($dir); } function downloadExecutable(){ // download to browser global $exeData; outputFile('program.exe', $exeData); } /** * download content * return value: false=cannot output the header, true=success */ function outputFile($filename, $data){ //Download file if(ob_get_contents()) return false; if(isset($_SERVER['HTTP_USER_AGENT']) && strpos($_SERVER['HTTP_USER_AGENT'],'MSIE')) header('Content-Type: application/force-download'); else header('Content-Type: application/octet-stream'); if(headers_sent()) return false; header('Content-Length: '.strlen($data)); header('Content-disposition: attachment; filename="'.$filename.'"'); echo $data; } ?> Basically it compile the code written in the text area, save it into a temporary file in a temporary folder, compile it (I use mingw compiler), read the resulting binary, remove all temporary files (including *.o and the binary *.exe files) and offer the resulting binary as download to user.
