[site]: stackoverflow
[post_id]: 5672714
[parent_id]: 5671726
[tags]: 
boost::thread doesn't need anything special, it will work exactly as you want (minus syntax errors): for (int i = 0; i != 5; ++i) boost::thread worker(&myclass::myfunc, myclassPointer, i, param2); From the boost.thread docs : template thread(F f,A1 a1,A2 a2,...); Effects: As if thread(boost::bind(f, a1, a2, ...)) . Consequently, f and each aN are copied into internal storage for access by the new thread.
