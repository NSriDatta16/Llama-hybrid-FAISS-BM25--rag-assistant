[site]: crossvalidated
[post_id]: 123354
[parent_id]: 123345
[tags]: 
The standard error is indeed an approximation, but not in the sense that you are thinking about. It is an approximation in the statistical sense that the standard errors in logistic regression are only good in large samples (and biased down somewhat in small samples). There is a number of other ways to obtain the standard errors (e.g., by resampling methods such as the bootstrap or jackknife), but their justification is likewise asymptotic (large samples), and the standard errors obtained using these different methods should be close to one another. Adding simulation on top of that estimate is relatively pointless. Bayesians out there might argue that you get better approximation for the distribution of the estimates if you sample from the posterior, but I don't think that's your question, and that's not what you are doing. But other than that, you won't in any way be better off simulating if all you use is vcov() . (And if you are simulating from the multivariate normal, the mean and the variance are independent, so if you are only interested in the variance, it does not matter what mean you use; since you are interested in variance, the vcov() is the only relevant part.) Simulating from multivariate normal per se isn't interesting: nearly every distributional result of nearly any meaningful function of the multivariate normal has been derived in an analytic form. A potentially useful application of simulation could be to simulate the binary outcomes from your model (parametric bootstrap), fit the logistic model to them, and compare the mean of reported standard errors to the standard deviation of the estimates, to see how biased the latter are, and to correct for that bias. That is a somewhat paranoid simulation though; I don't think anybody does that in applied statistics publications that I tend to see, even though that is (a) technically feasible and (b) somewhat statistically meaningful. It's just too much work with rather little improvement in the standard errors on the back end.
