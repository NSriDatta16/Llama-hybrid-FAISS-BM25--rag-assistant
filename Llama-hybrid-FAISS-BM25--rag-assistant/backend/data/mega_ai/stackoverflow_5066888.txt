[site]: stackoverflow
[post_id]: 5066888
[parent_id]: 5055968
[tags]: 
I'm totally new to 'Distribution version control system'(DVCS) and 'Centralized version control system'(CVCS). Somehow I understood the difference between them. Presently, in my office we are using CVS repository which is very old and I'm asked to upgrade to any new version. I don't know other than backing up CVS repos(/usr/local/cvsroot directory) and creating cvs users and I'll do this from webmin tool. I strongly advice to get lot of experience on both CVS and the new VCS before you try to do a repo conversion. I did this three times (CVS->SVN, CVS->Git->Hg, SVN->Hg), and it was not a fun job, and you need detail knowledge both of CVS and the target tool (and the converting tool). Especially the CVS->AnythingOther part was problematic because there was a lot of reorganizing to do. The developers connect to cvs repositories and share their projects using Eclipse application. SVN, Git and Hg have Eclipse plugins, but I can't say anything about them, since I don't use them. But when your fellow developers use eclipse as the only CVS client, this point can be a big problem when the other plugins doesn't work good enough. This point is especially problematic, since the replacement of well-known tools can very easy lead to emotic reactions. I reviewed SVN which has some advantages and disadvantages over CVS. I would like to choose CVCS instead DVCS repository so that I'll have the repository in one place(because I'm thinking it's easy for me to backup repositories). You can use a centralized workflow with any DVCS, but you are not enforced to use the centralized one. Here we have a central Hg server, where the developers push the finished work. The centralized workflow basically consist of a central server with the shared repos wehere everyone can pull from and push to. I would recommend SVN only if your local work flow depends on file locking, a feature which does not exist in a DVCS (at least none that I know of). In our company we use SVN for unmergeable files (CAD files), where we must be sure that there is only one editing these files. For new projects we use Hg. I heard GIT is best of all and is DVCS based repo. Git is the most popular one. I'm not saying that Git is bad, but there are other good tools on the field. Look at SCM choice for a new user? for a SVN vs. Git vs. Mercurial shootout. Finally what I'm trying to ask is if anybody could explain me how actually GIT works. http://hginit.com and http://gitimmersion.com are good tutorials for Hg and Git. I'm expecting totally practical explanation intead theory using eclipse and so on that if it's possible to connect to git and is there a way to store all repos centrally if not should I got to each machine and backup the repos?. http://www.vogella.de/articles/EGit/article.html and http://www.vogella.de/articles/Mercurial/article.html cover the Git and Hg Eclipse plugins.
