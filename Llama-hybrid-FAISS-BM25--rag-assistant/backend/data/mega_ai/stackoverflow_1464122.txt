[site]: stackoverflow
[post_id]: 1464122
[parent_id]: 1463232
[tags]: 
Outgoing call interception call interception http://img200.imageshack.us/img200/6927/callinit.png create extention of Application for background service implement PhoneListener use callInitiated should be signed before use on device should be tested against known issue Code example: import net.rim.blackberry.api.phone.Phone; import net.rim.blackberry.api.phone.PhoneListener; import net.rim.device.api.system.Application; import net.rim.device.api.ui.component.Dialog; public class CatchCall extends Application implements PhoneListener { public CatchCall() { Phone.addPhoneListener(this); } public static void main(String[] args) { new CatchCall().enterEventDispatcher(); } public void callAdded(int callId) { } public void callAnswered(int callId) { } public void callConferenceCallEstablished(int callId) { } public void callConnected(int callId) { } public void callDirectConnectConnected(int callId) { } public void callDirectConnectDisconnected(int callId) { } public void callDisconnected(int callId) { } public void callEndedByUser(int callId) { } public void callFailed(int callId, int reason) { } public void callHeld(int callId) { } public void callIncoming(int callId) { } public void callInitiated(int callid) { Dialog.inform("call initiated"); } public void callRemoved(int callId) { } public void callResumed(int callId) { } public void callWaiting(int callid) { } public void conferenceCallDisconnected(int callId) { } } Cancel call You can use event injection to fire Close button press event: public void dropCall() { KeyEvent inject = new KeyEvent(KeyEvent.KEY_DOWN, Characters.ESCAPE, 0); inject.post(); } Don't forget to set permissions for device release: Options => Advanced Options => Applications => [Your Application] =>Edit Default permissions =>Interactions =>key stroke Injection See also BlackBerry - Simulate a KeyPress event
