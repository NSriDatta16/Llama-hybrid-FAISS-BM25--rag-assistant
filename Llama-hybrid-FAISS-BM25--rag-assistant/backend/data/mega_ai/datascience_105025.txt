[site]: datascience
[post_id]: 105025
[parent_id]: 
[tags]: 
What kind of ML approach is more suitable for detecting event related signal changes?

First of all please if there is a better way to phrase my question let me know. It will help with search. ( This part : "detecting event related signal changes" ) Here you can see 4 black rectangles containing brain signals and vertical lines as annotations from an experiment. These signals are recordings of a certain experiment called stop-signal task. As you see each rectangle has 2 vertical lines. These lines are markers which shows us time of events happened during experiments. Every first line corresponds to time of subject seeing an image on the computer screen. And every second line corresponds to the time of subject pressing a button. I want to feed these rectangular parts of the data to a ML algorithm and the algorithm will learn to recognize where these lines should be by solving the correspondence between embedded cognitive information in brain signals and position of lines. I am having hard time formulizing the general solution since this is a regression problem rather than a classification. My question is what kind of approach I should take? Here is my idea : I can treat this problem as a classification. Each black box has 4000 sample. And I can feed this data a RNN based network to discover the time dependencies of the signal of interest. In this case my input will be [64, 4000 ] (64 is the number of signal channels during recording) and my output should be something like [1, 4000] and it contains probabilities of each points (line / no line ) However I cant really connect the dots. Something feels missing. ML is not magic. So maybe you can point me what is it I am missing here. This task at first seems really similar to object detection. However signal of interest is time dependent. In object detection object is not hiding behind other things. And it is not depending near objects. So as a second thought i try to imagine this task as a object detection in a video. It made more sense. Currently I am searching any simple implementation of object detection in videos.
