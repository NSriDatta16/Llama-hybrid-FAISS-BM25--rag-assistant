[site]: stackoverflow
[post_id]: 3884195
[parent_id]: 3883977
[tags]: 
Some of these are clearly problems, especially the "dates as text" and "foreign keys that don't match the datatype of their related key". The "ISBN 10 & 13 number fields as varchar(50)" isn't quite as clear-cut. Sure, it would work to store it as a BIGINT, but there are some good arguments for using a CHAR(10) or CHAR(13) instead: (even though it uses slightly more storage. Varchar(50) is clearly overkill) Will you ever need to do mathematical operations with this number? (no) Will you frequently "pretty-format" it? (00-0000-00-0 or something. Its easier to perform formatting operations on strings) Will you ever have to do a LIKE comparison? WHERE convert(varchar(13),ISBN) LIKE '%123%' is pretty ugly. So depending on exactly how it will be used, I wouldn't have an issue using the CHAR instead. Actually, you could argue that VARCHAR(13) would make sense if a significant number of rows will have no ISBN (less storage).
