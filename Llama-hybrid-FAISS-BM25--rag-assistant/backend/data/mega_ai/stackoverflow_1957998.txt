[site]: stackoverflow
[post_id]: 1957998
[parent_id]: 1956549
[tags]: 
As other have hinted there are two approaches: 1) configure your mail delivery agent (or mail transport agent) to route the incoming message via a filter 2) Have a scheduled job poll the mailbox to see if new messages have arrived The first method totally depends on how your MTA / MDA is configured - with luck your server may be using procmail which is a very flexible tool (configured via the file .procmailrc in the home dir of the user whom owns the mailbox). e.g. :0 * ^To:.*replay@xx.com * !FROM_DAEMON | /usr/bin/php -q /path/to/yourscript.php Then read the email from stdin in yourscript.php Add a space f to the first line (:0 f) and write a copy to stdout if you want it to go to the mailbox as well. Note that there is a whole lot of things you can configure using procmail. The ! FROM_DAEMON should eliminate most feedback loops. If not, most MDA's will support routing through a filter using a .forward file in the users home dir. Put this in the file: | /usr/bin/php -q /path/to/yourscript.php Note that ALL mail which would have been delivered to the users mailbox will now to the program INSTEAD of the mailbox. If you want to recover the emails you'll need to piggy back your own delivery agent within your script or forward the message to another address. Also, you'll need to deal with bounces withing your script to avoid feedback loops. C.
