[site]: stackoverflow
[post_id]: 1985717
[parent_id]: 
[tags]: 
Is mixing constructor-based and setter-based injections a bad thing?

I have a class for products import from CSV file operation which requires about 7 parameters. This is an info which is definitely needed for importer. All of this parameters have the same life time. In the end we must have an Immutable Object . I was too scared to list all of them in constructor because of its affect to readability and decided to move 3 of them to setters injection. But obviously it's not an elegant solution. Questions: 1) Is mixing constructor-based and setter-based injections a bad practice? 2) How this particular problem can be solved? I was thinking about applying "Introduce Parameter Object" refactoring by Martin Fowler, but there is a problem with this. 4 Parameters can be moved to Parameter object quite easily (customerId, projectId, languageId etc.) - all integers. Other 3 parameters are an object I inject(it is required for Mock unit-tests).
