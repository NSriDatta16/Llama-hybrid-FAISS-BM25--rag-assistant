[site]: stackoverflow
[post_id]: 4231546
[parent_id]: 4231479
[tags]: 
There are many features that a programming language may support. Additionally these features aren't always mutually exclusive. For example OCaml and F# are both functional and object oriented. Also writing a list here of all the paradigms that a language can support would be exhaustive, however there is a book Programming Language Pragmatics that is a comprehensive treatment of many paradigms found in programming languages. However, for me the important things I need to know when working with a language are the following: Is it dynamically or statically typed Is it a typed language, and if it is typed is strong or weak? Is it garbage collected Does it support pass by value or pass by reference semantics or both? Does it support first order functions (i.e. can functions be treated as variables) Is it object-oriented Polymorphism. Is it parametric or ad-hoc. How expressive is the type system (i.e. can I create non-leaky abstractions) Overloaded methods Generics (templates) Exception handling.
