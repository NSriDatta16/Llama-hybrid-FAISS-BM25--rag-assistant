[site]: crossvalidated
[post_id]: 424687
[parent_id]: 424676
[tags]: 
Four-state, discrete time Markov chain. Consider a 4-state chain with (disjoint) states: 'only p1', 'only p2', 'both', and 'neither', denoted 1 , 2 , b , and n . Here is a transition matrix I made up (not assuming product purchases at any one step to be independent). P = matrix(c(.3,.3,.2,.2, .4,.4,.1,.1, .2,.2,.5,.2, .2,.2,.2,.4), byrow=T, nrow=4) Then the transition matrix $P$ has rows that sum to $1.$ P [,1] [,2] [,3] [,4] [1,] 0.3 0.3 0.2 0.2 [2,] 0.4 0.4 0.1 0.1 [3,] 0.2 0.2 0.4 0.2 [4,] 0.2 0.2 0.2 0.4 rowSums(P) [1] 1 1 1 1 This is clearly an ergodic chain because all elements of $P$ are positive. Its steady state vector $\sigma,$ such that $\sigma P = \sigma,$ is also its limiting distribution. Solving for the steady-state distribution. The steady-state distribution vector $\sigma$ can be found in R using the eigen procedure. We use the transpose of $P$ t(P) because R finds right eigenvectors and we need a left eigenvector. In the output, the eigenvector of smallest modulus, listed first, is the one we want. For an ergodic chain it will be real, with values proportional to $\sigma.$ So we use bracket notation [] to isolate that eigenvector. In general, some of the other eigenvectors may not be real, so we use as.numeric to strip any unnecessary complex-number notation from the eigenvector we want. g = eigen(t(P))$vec[,1] sg = as.numeric(g/sum(g)) sg; sum(sg) [1] 0.2857143 0.2857143 0.2142857 0.2142857 [1] 1 # check that elements sum to 1 sg %*% P # `%*%` signifies matrix multiplication in R [,1] [,2] [,3] [,4] [1,] 0.2857143 0.2857143 0.2142857 0.2142857 So $\sigma = (0.2857143, 0.2857143, 0.2142857, 0.2142857).$ Over the long run, almost 80% buy something each year.
