[site]: stackoverflow
[post_id]: 5711671
[parent_id]: 5711638
[tags]: 
Why calculate the size? Define a constant containing the size and use that when declaring the array. Reference the constant whenever you want the size of the array. As a primarily C++ programmer, I'll say that historically the constant was often defined as an enum value or a #define. In C, that may be current rather than historic, though - I don't know how current C handles "const". If you really want to calculate the size, define a macro to do it. There may even be a standard one. The reason for the segfault is most likely because the array you're trying to declare is about 40 megabytes worth, and is declared as a local variable. Most operating systems limit the size of the stack. Keep your array on the heap or in global memory, and 40 megabytes for one variable will probably be OK for most systems, though some embedded systems may still cry foul. In a language like Java, all objects are on the heap, and only references are kept on the stack. This is a simple and flexible system, but often much less efficient than storing data on the stack (heap allocation overheads, avoidable heap fragmentation, indirect access overheads...).
