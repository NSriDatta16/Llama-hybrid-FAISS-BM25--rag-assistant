[site]: stackoverflow
[post_id]: 4900409
[parent_id]: 4900318
[tags]: 
The variable app is created on the stack on the line QApplication app(argc, argv); it calls QApplication 's constructor with arguments argc and argv which creates QApplication object called app in this case. It's not a feature specific to Qt. You can allocate any non-virtual class with constructor this way as well. Also, it works on primitives so you can do for example this: int val(1); // Equivalent to: int val = 1; which would create integer variable named val with value 1. You could allocate the QApplication object on heap using new and use it like this: QApplication* app = new QApplication(argc, argv); // Heap allocation app->setOrganizationName("My Company"); // Notice the -> instead of . app->setApplicationName("The App"); The -> is basically a shortcut for dereferencing the pointer and using . Allocating on the stack is usually preferable (but not always feasible), because then you do not have to care about the object's lifetime (with either some smart pointer or raw delete ), stack allocating is also usually less expensive than allocating on the heap.
