[site]: stackoverflow
[post_id]: 4836591
[parent_id]: 
[tags]: 
.net collections memory optimization - will this method work?

Just like almost any other big .NET application, my current C# project contains many .net collections . Sometimes I don't know, from the beginning, what the size of a Collection (List/ObservableCollection/Dictionary/etc.) is going to be. But there are many times when I do know what it is going to be. I often get an OutOfMemoryException and I've been told it can happen not only because process size limits, but also because of fragmentation. So my question is this - will setting collection's size (using the capacity argument in the constructor) every time I know its expected size help me prevent at least some of the fragmentation problems ? This quote is from the msdn : If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the List. But still, I don't want to start changing big parts of my code for something that might not be the real problem. Has it ever helped any of you to solve out of memory problems ?
