[site]: crossvalidated
[post_id]: 71375
[parent_id]: 71208
[tags]: 
It sounds like you only care about what day of week and what hour of that day will likely garner the most attention. You can format your data into hour of week, and treat each week as a set of observations, like you have done. From here you can calculate the data-derived expected likes by hour of week. If you normalize the data, then the likes for each hour over the total likes for a week will give you the probability for that hour of the week. You can regress on that data, but to utilize a clustering algorithm like k-NN, or a neural network to predict based on latent features, will require that you have more than an x and y. Adding features like the general topic, perhaps some term frequency or semantic analysis, maybe the format of the post (images or not, links or not, question or not, etc.), will offer you data to cluster by. You will likely need to adjust by overall activity, and will need many more weeks to gain any kind of confidence in the output. However, if you get a good set of features and can remove general unrelated trends in activity, you might be best served by generating a self organizing map (a type of neural network) in which the hour of the week is a node whose response correlates best with a specific combined set of features. A good, simple implementation in Python is here . Then, when you get a specific post and decompose it into the feature set, you can see which node responds well and post on that hour of the week. Afterward, add the true response back into your training data and retrain the map to include the new data.
