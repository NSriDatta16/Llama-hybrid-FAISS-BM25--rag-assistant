[site]: stackoverflow
[post_id]: 4502572
[parent_id]: 4502229
[tags]: 
By default the following is generated for your schema fragment: import java.util.ArrayList; import java.util.List; import javax.xml.bind.annotation.XmlAccessType; import javax.xml.bind.annotation.XmlAccessorType; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlType; @XmlAccessorType(XmlAccessType.FIELD) @XmlType(name = "physicianList", propOrder = { "physician" }) public class PhysicianList { @XmlElement(name = "Physician") protected List physician; public List getPhysician() { if (physician == null) { physician = new ArrayList (); } return this.physician; } } If you annotate your XML schema: Then you can generate the desired class: import java.util.ArrayList; import java.util.List; import javax.xml.bind.annotation.XmlAccessType; import javax.xml.bind.annotation.XmlAccessorType; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlType; @XmlAccessorType(XmlAccessType.FIELD) @XmlType(name = "physicianList", propOrder = { "physicians" }) public class PhysicianList { @XmlElement(name = "Physician") protected List physicians; public List getPhysicians() { if (physicians == null) { physicians = new ArrayList (); } return this.physicians; } }
