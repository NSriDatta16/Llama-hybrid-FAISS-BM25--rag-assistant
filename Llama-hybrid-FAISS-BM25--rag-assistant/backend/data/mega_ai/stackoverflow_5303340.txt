[site]: stackoverflow
[post_id]: 5303340
[parent_id]: 5301149
[tags]: 
Not that I disagree with the comments to your question, but there are two reasons that fail your code. First is, you're specifying 2Kb for dwFileOffsetLow with CreateFileMapping but then passing the entire file size to WriteFile . With this mapping view, 'WriteFile' should be called at most with 2Kb for nNumberOfBytesToWrite . Second is, you're not passing the starting address of your file data correct, try this: [...] FFileMap := CreateFileMapping(FFileHandle, // handle to file to map nil, // optional security attributes PAGE_READWRITE, // protection for mapping object 0, // high-order 32 bits of object size 0, // low-order 32 bits of object size 0); // if (FFileMap <> NULL) then begin FMappingPtr := MapViewOfFile(FFileMap, FILE_MAP_WRITE, 0, 0, 0); if Assigned(FMappingPtr) then begin // Manipulation de FMappingPtr hFile2 := CreateFile('test.iso', GENERIC_WRITE, 0, nil, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, 0); if (hFile2 <> INVALID_HANDLE_VALUE) then begin SizeFile1 := GetFileSize(FFilehandle, NIL); // recupere taille du fichier 1 WriteFile(hFile2, Fmappingptr[0], SizeFile1, &BytesWritten, NIL); // Transfert la mémoire mappé dans file 2 // libere les ressources end [...] BTW, the reason the code is not returning any errors is that you're not checking the return of 'WriteFile'.
