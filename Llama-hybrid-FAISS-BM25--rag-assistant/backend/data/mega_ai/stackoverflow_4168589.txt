[site]: stackoverflow
[post_id]: 4168589
[parent_id]: 4083219
[tags]: 
This is not an answer but a suggestion for a better timing routine. This timeAvg[func_] := Module[{ x = 0, y = 0, timeLimit = 0.1, p, q, iterTimes = Power[10, Range[0, 10]]}, Catch[ If[(x = First[Timing[(y++; Do[func, {#}]);]]) > timeLimit, Throw[{x, y}] ] & /@ iterTimes ] /. {p_, q_} :> p/iterTimes[[q]] ]; Attributes[timeAvg] = {HoldAll}; will calculate an average run time quite quickly, e.g., timeAvg@func1[l, Plus, (#1 - #2)^2 &] Trying out different lengths for l gives the following result where N is the number of elements in l . Thread[] is the clear winner.
