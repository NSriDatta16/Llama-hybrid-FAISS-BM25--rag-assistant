[site]: stackoverflow
[post_id]: 1499376
[parent_id]: 1499239
[tags]: 
Relational technology offers the possibility to query the underlying in any way conceivable without the user having to know about the storage and physical layout stuff. That holds even for SQL systems. If you don't need queryability, then any option is likely to suit your purpose, and the "simplest" (e.g. plain bytes flatfile) are likely to give you the best performance. One more thing : if you have multiple concurrent sources of log entries, then serialization issues become important. When logging to a flatfile, locks on the flatfile will last for the time needed to do the write, when logging to a database the logging itself becomes part of a transaction and locking (on the log table) is likely to last for the time of that transaction, perhaps causing "queueing overflow", or "convoy syndrome", or whatever you want to name it.
