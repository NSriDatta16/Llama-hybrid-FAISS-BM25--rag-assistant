[site]: stackoverflow
[post_id]: 4879570
[parent_id]: 3629817
[tags]: 
I'm probably wasting time on a dead thread here. I just had to implement this and went looking to see if I was wasting my time. I really like KennyTM's answer. That's just how I would attack the problem. Merge the keys into a hash to naturally eliminate duplicates and then extract the keys. If you actually have jQuery you can leverage its goodies to make this a 2 line problem and then roll it into an extension. The each() in jQuery will take care of not iterating over items where hasOwnProperty() is false. jQuery.fn.extend({ union: function(array1, array2) { var hash = {}, union = []; $.each($.merge($.merge([], array1), array2), function (index, value) { hash[value] = value; }); $.each(hash, function (key, value) { union.push(key); } ); return union; } }); Note that both of the original arrays are left intact. Then you call it like this: var union = $.union(array1, array2);
