[site]: datascience
[post_id]: 74237
[parent_id]: 
[tags]: 
Keras stacked model difficulties

I am solving regression problem now and unfortunately I'm stuck. I have a dataset containing train, test dataframes (~5000 rows each) and images with common ID with dataframes records. First approach was to use different machine learning regression algorithms (sklearn) to build model that uses only tabular data, but it had poor accuracy. Now, I'm 100% sure that the only way to boost accuracy is using stacked deep leaning model. I've used this tutorial and built a model that includes CNN for image inputs, MLP for tabular data and Dense layer with linear activation function for branches outputs. It's structure looks something like this: ----- Images ---- Dataframes ---- --------- | ----------------- | ------------ ------ CNN ------------- MLP --------- ------------ \ ------------ / --------------- --------------- Dense ------------------ ------------------- | ---------------------- --------------- Output ----------------- It is implied that this model should have inputs for each branch, but there are only 20 images per dataframe (40 in total; 20 for training; 20 for testing). The problem is that I can improve accuracy (using this model) only for 20 records out of 5000 (0,4 %) what is quite useless. Another point is that ML algs have better scores in comparison to MLP working with tabular data. What we have: ML algs have better accuracy than MLP Stacked keras model has better accuracy than ML algs, but there're not enough images The only way of solving that problem (that I see) is to use stacked model for IDs that have images and Ml algs for other IDs and then just concatenate the results, but it won't give me decent boost. Is it somehow possible to fit this stacked model with images and tabular data and use it to predict targets with tabular data only? Is there any approach that I just don't see? Can you recommend different models or solutions?
