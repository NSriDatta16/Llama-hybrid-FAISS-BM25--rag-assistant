[site]: crossvalidated
[post_id]: 23277
[parent_id]: 22880
[tags]: 
Although this is not exactly what you have asked for I recommend you have a look at org-mode , an emacs mode incorporating all your needs. Why do I recommend org-mode? (i.e., the pros) org-mode allows you to write text and code within one document, with emphasizing both parts equally, text and code (although I have never used sweave I feel the focus is more on code). To this end, org-mode allows for a lot of simplifications when writing text compared to pure LaTeX (i.e., & is & instead of \&, text becomes italic by surrounding it with /, or bold with *). These markup elements will be exported to real LaTeX but make life a lot easier. org-mode allows you to export your text not only as LaTeX or beamer but even html or other formats (e.g., TaskJuggler, ... ) org-mode can be used for other tasks suchs as organizing ones life using gtd . Emacs is one of the most popular and mature text editors, available for all platforms, and productively being used since the late 70 for programming tasks of all sorts. Additionally, there exists a very popular connection to R, ESS , developed by, inter alia, R core members Kurt Hornik and Martin Maechler. When using emacs you can use it for all tasks, not only sweave and R integration (that is one reason why some people refer to Emacs as an operating system rather than an editor). Sidenote: Emacs was initialy developed by GNU mastermind Richard Stallman. The cons: instead of only learning one thing at a time, you will have to learn even more things all at once: Emacs (which arguably has a complicated handling), org-mode and LaTeX. installing Emacs, org-mode, ESS can be a hassle. Especially if you (as I) know nothing about lisp, writing your .emacs file really sucks. If you want to give it a try (I highly recommend it), there is a very recent paper on org-mode in the Journal of Statistical Software that should get you started. What I recommend to get started is to first try to do your first documents in org-mode and export them as LaTeX or pdfs (i.e., without R). When succesful, simply try to add some R code to the document and see how you can export the relevant stuff. I highly recommend obtaining the cheat sheets or reference cards for all of the used programs (Emacs, org-mode, LaTeX, TeX and ESS). Furthermore, a basic understanding of LaTeX as pointed at by Chris Beely (wikibooks) definitely helps a lot, too. My current setup is that I usually work with three buffers in parallel. One org-mode buffer with the document, one ESS mode R script to keep code and try out different things, and one R console being accessible from both scripts. This works really great. Some stuff that I like to use: ESS uses Shift-ENTER and other shortcuts count words in org-mode buffer (without counting code) cua mode for Emacs (to use normal copy shortcuts) finding and highlighting instances of words using incremental search C-s C-w C-s stackoverflow (tags ess and org-mode) and tex.stackexchange
