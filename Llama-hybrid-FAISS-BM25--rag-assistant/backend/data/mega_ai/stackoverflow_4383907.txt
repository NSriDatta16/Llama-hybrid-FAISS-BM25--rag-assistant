[site]: stackoverflow
[post_id]: 4383907
[parent_id]: 4383723
[tags]: 
The link in the first answer describes outdated methods. It has become much easier to call Fortran from C, or C from Fortran with the addition of the ISO C Binding to Fortran. Using this Fortran language feature instructs the Fortran compiler to emit executable code that is binary compatible with C. The programmer doesn't have to "hack" the connection and since it is part of the language is it compiler and platform independent. Technically the ISO C Binding is part of Fortran 2003 but it has been available for several years in numerous compilers, e.g., gfortran since version 4.3 and Intel ifort. To call a Fortran subroutine or function from C, you declare the Fortran subroutine or function with the bind C option and use the C-compatible types provide in the binding for the declarations of the arguments. There are examples in the gfortran manual under "Mixed Language Programming". Since the ISO C Binding is a part of the language, this section of the manual is largely compiler independent. There are other examples in previous answers here on Stack Overflow and elsewhere on the web. Here is a quick code fragment (untested) of a Fortran subroutine declaration of a subroutine to be called from C: subroutine test ( varint1, varflt2 ) bind ( C, name="MyTest" ) use iso_c_binding integer (kind=c_int32_t), intent (in) :: varint1 real (kind=c_float), intent (out) :: varflt2 The bind C name "MyTest" overrides the Fortran name -- it is case sensitive, unlike Fortran. No need to worry about underscores! The variable types should be obvious ... see the gfortran manual or elsewhere for whats available.
