[site]: stackoverflow
[post_id]: 3740545
[parent_id]: 
[tags]: 
MySQL duplicates -- how to specify when two records actually AREN'T duplicates?

I have an interesting problem, and my logic isn't up to the task. We have a table with that sometimes develops duplicate records (for process reasons, and this is unavoidable). Take the following example: id FirstName LastName PhoneNumber email -- --------- -------- ------------ -------------- 1 John Doe 123-555-1234 jdoe@gmail.com 2 Jane Smith 123-555-1111 jsmith@foo.com 3 John Doe 123-555-4321 jdoe@yahoo.com 4 Bob Jones 123-555-5555 bob@bar.com 5 John Doe 123-555-0000 jdoe@hotmail.com 6 Mike Roberts 123-555-9999 roberts@baz.com 7 John Doe 123-555-1717 wally@domain.com We find the duplicates this way: SELECT c1.* FROM `clients` c1 INNER JOIN ( SELECT `FirstName`, `LastName`, COUNT(*) FROM `clients` GROUP BY `FirstName`, `LastName` HAVING COUNT(*) > 1 ) AS c2 ON c1.`FirstName` = c2.`FirstName` AND c1.`LastName` = c2.`LastName` This generates the following list of duplicates: id FirstName LastName PhoneNumber email -- --------- -------- ------------ -------------- 1 John Doe 123-555-1234 jdoe@gmail.com 3 John Doe 123-555-4321 jdoe@yahoo.com 5 John Doe 123-555-0000 jdoe@hotmail.com 7 John Doe 123-555-1717 wally@domain.com As you can see, based on FirstName and LastName , all of the records are duplicates. At this point, we actually make a phone call to the client to clear up potential duplicates. After doing so, we learn (for example) that records 1 and 3 are real duplicates, but records 5 and 7 are actually two different people altogether. So we merge any extraneously linked data from records 1 and 3 into record 1, remove record 3, and leave records 5 and 7 alone. Now here's were the problem comes in: The next time we re-run the "duplicates" query, it will contain the following rows: id FirstName LastName PhoneNumber email -- --------- -------- ------------ -------------- 1 John Doe 123-555-4321 jdoe@gmail.com 5 John Doe 123-555-0000 jdoe@hotmail.com 7 John Doe 123-555-1717 wally@domain.com They all appear to be duplicates, even though we've previously recognized that they aren't. How would you go about identifying that these records aren't duplicates? My first though it to build a lookup table identifying which records aren't duplicates of each other (for example, {1,5},{1,7},{5,7}), but I have no idea how to build a query that would be able to use this data. Further, if another duplicate record shows up, it may be a duplicate of 1, 5, or 7, so we would need them all to show back up in the duplicates list so the customer service person can call the person in the new record to find out which record he may be a duplicate of. I'm stretched to the limit trying to understand this. Any brilliant geniuses out there that would care to take a crack at this?
