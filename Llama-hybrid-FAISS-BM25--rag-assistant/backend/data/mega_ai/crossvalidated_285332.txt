[site]: crossvalidated
[post_id]: 285332
[parent_id]: 
[tags]: 
is this overkill, or the wrong strategy (cross validation for random forest regression)

trying to find the best random forest, here's a snippet of pseudocode (i've already pulled out a validation set from X i= 10 while i and then we track foo with an array, basically adding [i,foo.mean() and foo.std()] to a running list. At which point I will take the i corresponding to the mean nearest 1, and look at mean-square-error or mean-absolute-percentage-error (which is what my engineers like to see minimized) By the size of my dataset, I know this is going to tax my computer, and take a day (or more) to complete. Is this a sound strategy? Should I try something else?
