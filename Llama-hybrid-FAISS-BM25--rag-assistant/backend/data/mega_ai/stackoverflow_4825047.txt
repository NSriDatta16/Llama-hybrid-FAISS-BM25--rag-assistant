[site]: stackoverflow
[post_id]: 4825047
[parent_id]: 4788965
[tags]: 
Herb Sutter wrote in GOTW about six years ago, with emphasis added: "But don't think that unions are only a holdover from earlier times. Unions are perhaps most useful for saving space by allowing data to overlap, and this is still desirable in C++ and in today's modern world. For example, some of the most advanced C++ standard library implementations in the world now use just this technique for implementing the "small string optimization," a great optimization alternative that reuses the storage inside a string object itself: for large strings, space inside the string object stores the usual pointer to the dynamically allocated buffer and housekeeping information like the size of the buffer; for small strings, the same space is instead reused to store the string contents directly and completely avoid any dynamic memory allocation. For more about the small string optimization (and other string optimizations and pessimizations in considerable depth), see... ." And for a less useful example, see the long but inconclusive question gcc, strict-aliasing, and casting through a union .
