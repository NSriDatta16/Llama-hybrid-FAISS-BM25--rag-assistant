[site]: stackoverflow
[post_id]: 895677
[parent_id]: 895637
[tags]: 
There's an Addison-Wesley book by Mark Summerfield called "Programming in Python 3", and I have found it to be the best Python book I've read. One nice thing for you, I would imagine, is that Summerfield does not bring up differences between 2.X and 3.x, so someone just picking up Python gets an uninterrupted view of (new and improved) Python. Add to this that he explains things that the other books --- in my case from 1.X --- either never touched or (I think) misstated. The paragraphs on custom exceptions just got me out of a jam, and his treatment of * and ** as unpacking operators cleared up considerable mental fog for me. Top-notch book. BTW, there's a module called sys that does useful things, like let you access command line arguments. Those args are (sub)strings, and the other day I had to use int(), as commenter dkbits says, to put them to use. (The type() function tells you what type Python considers a variable to be.) I had: import sys #Parse the command line. if len(sys.argv) != 4: print "Usage: commandName maxValueInCell targetSum nCellsInGroup" exit() else: maxv = int( sys.argv[1]) tgt = int( sys.argv[2]) nc = int( sys.argv[3]) print "maxv =",maxv, "; tgt = ",tgt, "; nc = ",nc print type(sys.argv[1]) #strings print type(sys.argv[2]) print type(sys.argv[3]) print type(maxv) #ints print type(tgt) print type(nc)
