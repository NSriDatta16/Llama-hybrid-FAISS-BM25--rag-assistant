[site]: stackoverflow
[post_id]: 5661767
[parent_id]: 
[tags]: 
Variable incrementing by itself without actually changing it

Ok..so I am doing a program on NLP. It uses function eliminateStopWords(). This function reads from a 2D array "sentTokens" (of detected tokens). In the code below, index i is sentence number, j is for each token in the ith sentence. Now, what my eliminateStopWords() does is this: it reads stop words from a text file and stores them in a TreeSet reads tokens from sentTokens array and checks them for stop words. If they are collocations, then they should not be checked for stop words, they are just dumped into a finalTokens array. If they are not a collection, then they are individually checked for stop words and are added to finalTokens array only if they are not stop words. The problem comes in the loop of this step 2. Here is some code of it: (I have marked // HERE at the location where the error actually occurs... it's near the end) private void eliminateStopWords() { try { // Loading TreeSet for stopwords from the file. stopWords = new TreeSet (); fin = new File("stopwords.txt"); fScan = new Scanner(fin); while (fScan.hasNextLine()) stopWords.add(fScan.nextLine()); fScan.close(); /* Test code to print all read stopwords iter2 = stopWords.iterator(); while (iter2.hasNext()) System.out.println(iter2.next()); */ int k=0,m=0; // additional indices for finalTokens array System.out.println(NO_OF_SENTENCES); newSentence: for(i=0; i I have printed the indices i & j at the entry of their respective for loops...it all works fine for the first iteration of the loop, but when the loop is about to reach its end... I have printed again the value of 'i'. This time it comes out as 14. it starts the first iteration with 0... does not get manipulated anywhere in the loop... and just by the end of (only) first iteration, it prints the value as 14 I mean this is seriously the WEIRDEST error I have come across ever while working with Java. It throws up an ArrayIndexOutOfBoundsException just before the final if block. It's like MAGIC. You do nothing on the variable in the code, still the value changes. HOW CAN THIS HAPPEN?
