[site]: stackoverflow
[post_id]: 3318981
[parent_id]: 
[tags]: 
best data structure for byIndex and byName retrieval

suppose you need to implement container of a T items, which its value could be retrieved by numeric index (which is random access) and by name (as string). which one is better in term of performance of common operation such as retrieval, adding, and removing the items: (in this case retrieval by index need to be implemented by walking the map) std::map container; or (fast random access by index, but need walking for retrieval by name) std::vector > container; or by providing two separate container (fast retrieval, but slower adding/removal operation) std::vector byIndexContainer; std::map byNameContainer; or you can suggest other data structure that is better?
