[site]: crossvalidated
[post_id]: 492378
[parent_id]: 492368
[tags]: 
It isn't really clear, but I think what he is doing is weighing words found under "predefined" topic tags in a discussion board, and then weighing those words (X1000) in the sampling process of LDA. For example, if I search stats.stackexchange under the tag "natural-language" and create a vocabulary of, word : # times word appeared, and remove stopwords (common words) I will probably get something like: $$ \begin{align} \text{nlp} &~|~ 10000 \\ \text{classify} &~|~ 9500 \\ \text{text} &~|~ 9273 \\ \text{deep} &~|~ 3000 \\ \text{modelling} &~|~ 324 \\ \text{lda} &~|~ 234 \\ \text{gibbs} &~|~ 230 \\ \end{align} $$ Alternatively, the predefined topic tag has key words associated with it already (which he uses and weighs more). Sticking to our example, the "natural-language" tag mentions words like: linguistics, artificial, intelligence, machine, learning. We weigh these words higher. Then in the sampling process for any word $w_i$ with associated topic-weight $b_{z,i}$ (where $z$ represents the specific topic), we just multiply it by some constant (here being 1000), i.e. $b_{z,i} \cdot 1000$ . I didn't read the whole article, but I only see this being useful if you only have a few key-words per predefined topic. I think it would be better to use something like word2vec, or just cosign distance of words, for this task instead. LDA wasn't really designed to be used when we already have predefined topics.
