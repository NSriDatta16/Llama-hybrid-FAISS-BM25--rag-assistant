[site]: stackoverflow
[post_id]: 3695193
[parent_id]: 3694407
[tags]: 
Here's my entry leveraging group-by, although several steps in here are really concerned with returning vectors rather than lists. If you drop that requirement, it gets a bit simpler: (defn f [s] (let [g (group-by first s) k (keys g) v (vals g) cleaned-v (for [group v] (into [] (map (comp #(into [] %) rest) group)))] (zipmap k cleaned-v))) Depending what you actually want, you might even be able to get by with just doing group-by.
