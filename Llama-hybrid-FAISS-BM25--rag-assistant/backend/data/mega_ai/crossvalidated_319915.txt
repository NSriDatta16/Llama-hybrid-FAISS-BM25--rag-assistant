[site]: crossvalidated
[post_id]: 319915
[parent_id]: 319890
[tags]: 
I think there is something to your approach. However there is a problem with allowing probabilities to be generated by a normal distribution because that can produce values less than zero or greater than one. So I would modify the way in which the probability of attendance depends on the RSVP response. Before doing so, I would like to modify your notation a bit to align it better with what is commonly used in Bayesian analysis. Let $y = (y_1, \ldots, y_n)$ denote the dataset where $y_i \in [0,1]$ denotes the RSVP response of individual $i$. Let $z_i = 1$ if individual $i$ actually attends and $z_i = 0$ otherwise. Let $x = \sum_{i=1}^n z_i$. I presume you interested in $p(x|y)$, which is the distribution of total attendance given what you observe. (I use "$p$" to denote probability mass or probability density as appropriate.) Let $\theta_i$ denote the probability that individual $i$ actually attends. Thus \begin{equation} p(z_i|\theta_i) = \textsf{Bernoulli}(z_i|\theta_i) = \begin{cases} \theta_i & z_i = 1 \\ 1 - \theta_i & z_i = 0 \end{cases}. \end{equation} Now we specify the way in which $\theta_i$ depends on $y_i$. Here is where I modify what you propose. I suggest letting \begin{equation} p(\theta_i|y_i) = \textsf{Uniform}(\theta_i|y_i/2,y_i) , \end{equation} where $\textsf{Uniform}(\theta_i|0,0)$ should be interpreted as a point mass located at $\theta_i = 0$. Note that this distribution is the same as yours for $y_i = 0$ and $y_i = 1$. Moreover, I think it captures the spirit of your "pessimism" for $y_i \in (0,1)$ as well. At this point we can streamline the model by integrating out the intermediate variable $\theta_i$. In particular, \begin{equation} p(z_i|y_i) = \int_0^1 p(z_i|\theta_i)\,p(\theta_i|y_i)\,d\theta_i = \textsf{Bernoulli}\Big(z_i\,\Big|\,\frac{3\,y_i}{4}\Big) . \end{equation} Now we see that $x$ is the sum of $n$ random variables, each with a Bernoulli distribution. If all the Bernoulli distributions had a common probability of success then the sum would have a binomial distribution; but they don't and so it doesn't. Nevertheless it is simple to approximate the distribution for $x$ using simulation. Sophisticated software packages are not required for this problem. (And anyway I don't know pymc.) For each simulation $r = 1, \ldots, R$, let $x^{(r)} = \sum_{i=1}^n z_i^{(r)}$, where $z_i^{(r)}$ is a random draw from $\textsf{Bernoulli}(.75\,y_i)$. The larger you make $R$, the more accurate your approximation will be.
