[site]: stackoverflow
[post_id]: 2802999
[parent_id]: 2802449
[tags]: 
Malicious code is not the only problem with DLLs. Even a well-meaning DLL might contain a bug that could crash your whole application or gradually leak memory. Loading a module in a high-level language somewhat reduces the risk. If you want to learn about embedding Python for example, the documentation is here . Another approach would be to launch the plugin in a separate process. It does require a bit more effort on your part to implement, but it's much safer. The seperate process approach is used by Google's Chrome web browser, and they have a document describing the architecture . The basic idea is to provide a library for plugin writers that includes all the logic for communicating with the main app. That way, the plugin author has an API that they use, just as if they were writing a DLL. Wikipedia has a good list of ways for inter-process communication (IPC) .
