[site]: stackoverflow
[post_id]: 5280797
[parent_id]: 5280750
[tags]: 
What your basically asking how to do is write a custom lexer/parser. Some good background on the subject would be the Dragon Book or something on lex and yacc (flex and bison). Take a look at this question: Poor man's lexer for C# Now of course, alot of people are going to say "just use regular expressions". Perhaps. The deal with using regex in this situation is that your execution time will grow linearly as a function of the number of tokens you are matching against. So, if you end up needing to "segment" more phrases, your execution time will get longer and longer. What you need to do is have a single pass, popping words on to a stack and checking if they are valid tokens after adding each one. If they aren't, then you need to continue (disregard the token like a compiler disregards comments). Hope this helps.
