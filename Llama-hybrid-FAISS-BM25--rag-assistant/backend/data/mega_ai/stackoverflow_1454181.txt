[site]: stackoverflow
[post_id]: 1454181
[parent_id]: 
[tags]: 
How can I have super-fast dynamic configuration?

We're planning to migrate away from a series of static config files related to each client deployment. All client data lives in MySQL, the meta-data for a client deployment lives in a static text file: what database/shard to use, the repository directory/location for the file store, and a bunch more info such as default pagination, rates and enabled modules. We want to move away from these static config files—which are more than just key-value pairs at the moment and make use of Perl's hashes and arrays, but could be simplified that way with some effort—and make use of something which can live in a fast-responding database, LDAP or other repository. The flexible structures of LDAP—which allow nesting/hierarchy of data I think—look appealing, but I was wondering whether there was some other advice about the best way to do this I don't think LDAP was really designed for this, and it has been around for a long while. The "key" we would use to identify a deployment, database, repository path and other variables will be the "domain" of the deployment (these will be unique), and ideally we'd like the config storage solution to be a central point or federated service that multiple servers can query very quickly (over a LAN). Very few "update" actions will be undertaken on this data, yet the read rates will be very very very frequent, so speed of read is critical. Any advice? Geoff
