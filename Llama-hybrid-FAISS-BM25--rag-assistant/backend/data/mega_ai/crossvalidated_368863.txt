[site]: crossvalidated
[post_id]: 368863
[parent_id]: 
[tags]: 
Time Series Regression - Non-Contiguous Dataset

Is there a good way to run a time series regression on non-contiguous dataset, such as number of cars purchased per Quarter from a dealership (e.g. when for a reason I want to EXCLUDE certain Quarters from the dataset to determine sales baseline free of promotions)? The model fitting (e.g. SARIMAX().fit()) must take into the consideration that x-ticks are not evenly distributed for a given dataset The regressional model must calculate values for missing datapoints (interpolation) There are Holt-Winters, SARIMA, etc but they are not usable for such cases. Suggestions, modified libraries or subroutines are much appreciated Sample dataset: x = np.array([2001Q3, 2001Q4, 2002Q2, 2002Q3, 2002Q4, 2003Q3, 2004Q1, 2004Q3, 2005Q1, 2005Q3,2006Q2, 2006Q3, 2006Q4, 2007Q1, 2007Q4]) y = np.array([24, 20, 27, 29, 26, 32, 34, 30, 32, 37, 35, 39, 41, 37, 39]) There are some standard methods such as: from scipy import optimize from scipy import interpolate One way, is to prepare an array with calculated numbers for missing datapoints (Quarters) and then apply SARIMAX.fit but I am curious if there is a more elegant way. The resulting model must estimate all Quarters from 2001Q3 till 2007Q4, including the missing ones Also. for sea-saw-like time series (with trend and seasonality) a linear interpolation may not work well, especially if the gap is greater than 1 missing datapoint (as in a sample dataset)
