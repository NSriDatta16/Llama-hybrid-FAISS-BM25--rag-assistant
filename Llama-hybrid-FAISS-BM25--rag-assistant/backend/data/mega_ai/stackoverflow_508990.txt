[site]: stackoverflow
[post_id]: 508990
[parent_id]: 506366
[tags]: 
Please, you're in C, not C++. If you really must typedef a struct (and most programmers that I work with would not¹), do this: typedef struct _A { int a; int b; struct _A *next; } A; to clearly differentiate between _A (in the struct namespace) and A (in the type namespace). ¹ typedef hides the size and storage of the type it points to ― the argument (and I agree) is that in a low-level language like C, trying to hide anything is harmful and counterproductive. Get used to typing struct A whenever you mean struct A .
