[site]: stackoverflow
[post_id]: 3287615
[parent_id]: 3285340
[tags]: 
Here's another try. I won't use GD::Graph , as I've already began this answer in your other post with Graphics::GnuplotIF . Your two problems, as I understand them, are: You want to numerically sort the x-values. You want to plot multiple series. Right: use Graphics::GnuplotIF; my $last; my %data_per_file; LOAD: while (<>) { chomp; my ($file, $label, $x, $y) = split /\s+/; $last = $file if $file; push @{$data_per_file{$last}}, [$label, $x, $y]; } SORT: for my $file (keys %data_per_file) { @{$data_per_file{$file}} = sort { $a->[1] $b->[1] } @{$data_per_file{$file}}; } my @all_data_in_pairs; PLOT_SINGLE: for my $file (keys %data_per_file) { my @labels = map { $_->[0] } @{$data_per_file{$file}}; my @x = map { $_->[1] } @{$data_per_file{$file}}; my @y = map { $_->[2] } @{$data_per_file{$file}}; my $plot = Graphics::GnuplotIF->new(persist => 1, style => 'points'); $plot->gnuplot_set_title( $file ); $plot->gnuplot_plot_xy( \@x, \@y ); push @all_data_in_pairs, \@x, \@y; } my $plot = Graphics::GnuplotIF->new(persist => 1, style => 'lines'); $plot->gnuplot_set_xrange(0, 10); $plot->gnuplot_hardcopy( 'output.ps', 'postscript', 'color lw 3' ) if $want_hardcopy; $plot->gnuplot_set_title( 'all' ); $plot->gnuplot_plot_many( @all_data_in_pairs ); $plot->gnuplot_restore_terminal();
