[site]: stackoverflow
[post_id]: 5125246
[parent_id]: 5125023
[tags]: 
I've posted a solution at http://jsfiddle.net/vJ6r6/ . First of all, I nested the items to be dragged inside the bounding box: Thing One Thing Two Thing Three Also, I turned them into div's because p's can't be nested. (Don't forget to change the style declaration as well.) Then, I set styles on the bounding box: .bound { margin: 100px; width: 400px; height: 400px; position: relative; } The key property is position: relative , which causes the items inside it to be positioned relative to it, rather than to the page. Note that because I'm using relative positioning, this example works best when you want to keep the items in a particular container. My changes to the JavaScript were more radical, so here's the whole thing: var dragInfo; function down(event) { if (~event.target.className.search(/drag/)) { document.addEventListener("mouseup", drop, false); var t = event.target; t.style.zIndex = 100; dragInfo = { element: t, // record the bounds maxX: t.parentNode.offsetWidth - t.offsetWidth, maxY: t.parentNode.offsetHeight - t.offsetHeight, // we don't need findPos, because it's no longer relative to the page posX: event.clientX - t.offsetLeft, posY: event.clientY - t.offsetTop }; document.addEventListener("mousemove", freeMovement, false); } } function freeMovement(event) { // the min and max calculations keep the X and Y within the bounds dragInfo.element.style.left = Math.max(0, Math.min(event.clientX - dragInfo.posX, dragInfo.maxX)) + "px"; dragInfo.element.style.top = Math.max(0, Math.min(event.clientY - dragInfo.posY, dragInfo.maxY)) + "px"; } function drop() { dragInfo.element.style.zIndex = 1; document.removeEventListener("mousemove", freeMovement, false); document.removeEventListener("mouseup", drop, false); } document.addEventListener("mousedown", down, false); Note that this line: dragInfo.element.style.left = Math.max(0, Math.min(event.clientX - dragInfo.posX, dragInfo.maxX)) + 'px'; Is equivalent to this: var x = event.clientX - dragInfo.posX; if (x dragInfo.maxX) x = dragInfo.maxX; dragInfo.element.style.left = x + 'px';
