[site]: stackoverflow
[post_id]: 3916934
[parent_id]: 1411199
[tags]: 
If you just need a fast and cheap solution that will mostly work without using a lot of computation here's one option (assuming a 1-5 rating scale) SELECT Products.id, Products.title, avg(Ratings.score), etc FROM Products INNER JOIN Ratings ON Products.id=Ratings.product_id GROUP BY Products.id, Products.title ORDER BY (SUM(Ratings.score)+25.0)/(COUNT(Ratings.id)+20.0) DESC, COUNT(Ratings.id) DESC By adding in 25 and dividing by the total ratings + 20 you're basically adding 10 worst scores and 10 best scores to the total ratings and then sorting accordingly. This does have known issues. For example, it unfairly rewards low-scoring products with few ratings (as this graph demonstrates, products with an average score of 1 and just one rating score a 1.2 while products with an average score of 1 and 1k+ ratings score closer to 1.05). You could also argue it unfairly punishes high-quality products with few ratings. This chart shows what happens for all 5 ratings over 1-1000 ratings: http://www.wolframalpha.com/input/?i=Plot3D%5B%2825%2Bxy%29/%2820%2Bx%29%2C%7Bx%2C1%2C1000%7D%2C%7By%2C0%2C6%7D%5D You can see the dip upwards at the very bottom ratings, but overall it's a fair ranking, I think. You can also look at it this way: http://www.wolframalpha.com/input/?i=Plot3D%5B6-%28%2825%2Bxy%29/%2820%2Bx%29%29%2C%7Bx%2C1%2C1000%7D%2C%7By%2C0%2C6%7D%5D If you drop a marble on most places in this graph, it will automatically roll towards products with both higher scores and higher ratings.
