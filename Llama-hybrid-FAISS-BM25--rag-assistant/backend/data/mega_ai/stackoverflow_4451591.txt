[site]: stackoverflow
[post_id]: 4451591
[parent_id]: 
[tags]: 
Recreating time series data using FFT results without using ifft

I analyzed the sunspots.dat data (below) using fft which is a classic example in this area. I obtained results from fft in real and imaginery parts. Then I tried to use these coefficients (first 20) to recreate the data following the formula for Fourier transform. Thinking real parts correspond to a_n and imaginery to b_n, I have import numpy as np from scipy import * from matplotlib import pyplot as gplt from scipy import fftpack def f(Y,x): total = 0 for i in range(20): total += Y.real[i]*np.cos(i*x) + Y.imag[i]*np.sin(i*x) return total tempdata = np.loadtxt("sunspots.dat") year=tempdata[:,0] wolfer=tempdata[:,1] Y=fft(wolfer) n=len(Y) print n xs = linspace(0, 2*pi,1000) gplt.plot(xs, [f(Y, x) for x in xs], '.') gplt.show() For some reason however, my plot does not mirror the one generated by ifft (I use the same number of coefficients on both sides). What could be wrong ? Data: http://linuxgazette.net/115/misc/andreasen/sunspots.dat
