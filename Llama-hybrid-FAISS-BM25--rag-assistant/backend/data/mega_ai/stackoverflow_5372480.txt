[site]: stackoverflow
[post_id]: 5372480
[parent_id]: 5372407
[tags]: 
If you look at the standard Core Data utilizing templates, you will see that the stack is not initialized until some view controller calls for the managedObjectContext of the app delegate. So, the Core Data stack does not initialize until after a view requiring the managedObjectContext loads and begins to configure itself. The actual initialization of the stack is very lightweight and quick. Core Data doesn't do much until you start actively generating the object graph and reading and writing to persistent store. Simply initializing the stack takes very, very little time. Sometime back I had similar concerns and did some test. I found out that the real lag in start ups is the loading of the first view, regardless of whether it used Core Data or not. I wasn't able to measure any differences in startup time between having Core Data enabled and having it disabled. So, I wouldn't bother with a non-standard initialization unless your own custom testing shows it causes some performance drag.
