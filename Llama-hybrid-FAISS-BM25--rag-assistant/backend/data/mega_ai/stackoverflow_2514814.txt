[site]: stackoverflow
[post_id]: 2514814
[parent_id]: 
[tags]: 
Maven2 multi-module ejb 3.1 project - deployment error

The problem is taht I get the following error qhile deploying my project to Glassfish: java.lang.RuntimeException: Unable to load EJB module. DeploymentContext does not contain any EJB Check archive to ensure correct packaging But, let us start on how the project structure looks like in Maven2... I've build the following scenario: MultiModuleJavaEEProject - parent module -> model ---> packaged as jar -> ejb1 ----> packaged as ebj -> ejb2 ----> packaged as ebj -> web ----> packaged as war So model, ejb1, ejb2 and web are children/modules of the parent MultiModuleJavaEEProject. _ejb1 depends on model. _ejb2 depends on ejb1. _web depends on ejb2. the pom's look like: _parent: 4.0.0 org.dyndns.geraldhuber.testing MultiModuleJavaEEProject pom 1.0 MultiModuleJavaEEProject http://maven.apache.org model ejb1 ejb2 web junit junit 4.7 test org.apache.maven.plugins maven-compiler-plugin 1.6 1.6 org.apache.maven.plugins maven-ejb-plugin 2.2 3.1 ${project.groupId}.${project.artifactId}-${project.version} _model: 4.0.0 testing MultiModuleJavaEEProject 1.0 model jar 1.0 model http://maven.apache.org _ejb1: 4.0.0 testing MultiModuleJavaEEProject 1.0 ejb1 ejb 1.0 ejb1 http://maven.apache.org org.glassfish javax.ejb 3.0 provided testing model 1.0 _ejb2: 4.0.0 testing MultiModuleJavaEEProject 1.0 ejb2 ejb 1.0 ejb2 http://maven.apache.org org.glassfish javax.ejb 3.0 provided testing ejb1 1.0 _web: 4.0.0 MultiModuleJavaEEProject testing 1.0 testing web 1.0 war web Maven Webapp http://maven.apache.org javax.servlet servlet-api 2.4 provided org.glassfish javax.ejb 3.0 provided testing ejb2 1.0 org.apache.maven.plugins maven-war-plugin 2.0 true web And the model is just a simple Pojo: package testing.model; public class Data { private String data; public String getData() { return data; } public void setData(String data) { this.data = data; } } And the ejb1 contains only one STATELESS ejb. package testing.ejb1; import javax.ejb.Stateless; import testing.model.Data; @Stateless public class DataService { private Data data; public DataService(){ data = new Data(); data.setData("Hello World!"); } public String getDataText(){ return data.getData(); } } As well as the ejb2 is only a stateless ejb: package testing.ejb2; import javax.ejb.EJB; import javax.ejb.Stateless; import testing.ejb1.DataService; @Stateless public class Service { @EJB DataService service; public Service(){ } public String getText(){ return service.getDataText(); } } And the web module contains only a Servlet: package testing.web; import java.io.IOException; import java.io.PrintWriter; import javax.ejb.EJB; import javax.servlet.ServletException; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import testing.ejb2.Service; public class SimpleServlet extends HttpServlet { @EJB Service service; public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { PrintWriter out = response.getWriter(); out.println( "SimpleServlet Executed" ); out.println( "Text: "+service.getText() ); out.flush(); out.close(); } } And the web.xml file in the web module looks like: Archetype Created Web Application simple testing.web.SimpleServlet simple /simple So no further files are set up by me. There is no ejb-jar.xml in any ejb files, because I'm using EJB 3.1. So I think ejb-jar.xml descriptors are optional. I this right? But the problem is, the already mentioned error: java.lang.RuntimeException: Unable to load EJB module. DeploymentContext does not contain any EJB Check archive to ensure correct packaging Can anybody help?
