[site]: stackoverflow
[post_id]: 2975673
[parent_id]: 2975275
[tags]: 
It has to be in the millionth items. And even there ... I am more thinking here to memory usage and memory accesses. Under hundreds of thousands, take whatever you want, there will be no noticeable difference. CPUs are really fast these days, and the bottleneck is memory latency. But even with millions of items, if your map<> has been build by inserting elements in random order. When you want to traverse your map (in sorted order) you'll end up jumping around randomly in the memory, stalling the CPU for memory to be available, resulting in poor performance. On the other side, if your millions of items are in a vector, traversing it is really fast, taking advantage of the CPU memory accesses predictions. As other have written, it depends on your usage. Edit: I would more question the way to organize your thousands of associative containers than the containers themselves if they contain only 5 items.
