[site]: crossvalidated
[post_id]: 359033
[parent_id]: 355596
[tags]: 
You have initial responses $X$ taking integer values 1 through 9. Then you have transformed 'certainty' scores $Y,$ defined as $Y = |X - 5|,$ taking values 0 through 4. I think these should be scores $Y = X - 5$ taking values -4 through +4. Then you should multiply by 1 or -1 to get scores $Z$ from -4 through 4, so that negative scores correspond to various degrees of wrong answers and positive scores correspond to degrees of correct answers. And finally, you would average these final scores $Z$ to get the overall rating for a subject. Let's see how this would work for three kinds of subjects, Clueless, (mainly) Attentive, and (almost) Perfect. Specifically, Clueless subjects answer with an initial response 1 through 9, equally likely and at random; Attentive subjects assign initial scores 1 to 6 to images not seen before and scores 4 through 9 to images seen before (mainly correct or uncertain, occasionally wrong); Perfect subjects initially give 1 or 2 to images not seen before and 8 or 9 to the other images (always correct, but with slightly varying degrees of certainty). In the simulations below, I suppose that each subject sees 50 recycled images and 50 fresh ones, for a total of 100 images. Also, 10,000 subjects of each of the three kinds are simulated. Summaries of averages scores are found and graphed as histograms. [The simulation is written in R. I have used loops instead of defining functions (perhaps more elegant), hoping that non-R users can follow the logic.] # Clueless set.seed(725) m = 10000; n = 100; s.c = numeric(m) t = rep(c(-1,1), each=50) for(i in 1:m) { x = sample(1:9, n, rep=T); y = x-5 z = t*y; s.c[i]=mean(z) } mean(s.c); sd(s.c) [1] -0.00221 [1] 0.2579402 summary(s.c) Min. 1st Qu. Median Mean 3rd Qu. Max. -0.98000 -0.18000 0.00000 -0.00221 0.17000 0.97000 . # Attentive m = 10000; n = 100; s.a = numeric(m) t = rep(c(-1,1), each=50) for(i in 1:m) { x1 = sample(1:6, n/2, rep=T); x2 = sample(4:9, n/2, rep=T) x = c(x1, x2); y = x-5 z = t*y; s.a[i]=mean(z) } mean(s.a); sd(s.a) [1] 1.498803 [1] 0.1709028 summary(s.a) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.850 1.380 1.500 1.499 1.620 2.170 . # Perfect m = 10000; n = 100; s.p = numeric(m) t = rep(c(-1,1), each=50) for(i in 1:m) { x1 = sample(1:2, n/2, rep=T); x2 = sample(8:9, n/2, rep=T) x = c(x1, x2); y = x-5 z = t*y; s.p[i]=mean(z) } mean(s.p); sd(s.p) [1] 3.499701 [1] 0.04965146 summary(s.p) Min. 1st Qu. Median Mean 3rd Qu. Max. 3.26 3.47 3.50 3.50 3.53 3.68 par(mfrow=c(1,3)) hist(s.c, prob=T, col="skyblue2", main="Clueless") hist(s.a, prob=T, col="skyblue2", main="Mainly Attentive") hist(s.p, prob=T, col="skyblue2", main="Almost Perfect") par(mfrow=c(1,1)) With the slight modification made above, I think your scoring system would work fine. It certainly distinguishes well among the three imaginary types of subjects I considered.
