[site]: stackoverflow
[post_id]: 4210470
[parent_id]: 
[tags]: 
Looping on C++ iterators starting with second (or nth) item

I am looking for a readable, elegant way to do the following in C++, here shown in Python: for datum in data[1:]: # do work. The iterators on the data in question may not support random access iterators, so I can't just use: for (mIter = data.begin() + 1; mIter != data.end(); mIter++) The best I've come up with is the following: iterable::iterator mIter = data.begin(); for (mIter++; mIter != allMjds.end(); mjdIter++) { // do work. } It's not too lengthy, but it's hardly expository - at first glance it actually looks like a mistake! Another solution is to have an "nth element" helper function, I guess. Is there a more concise way?
