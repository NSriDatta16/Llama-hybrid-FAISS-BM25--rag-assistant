[site]: stackoverflow
[post_id]: 5237679
[parent_id]: 5237305
[tags]: 
I assume the predefined steps are on the horizontal axis, say x-axis, and since the stepsize is given, you could start at the most left pixel of the user selected area. For any specific value of x, you process the image from the lower bound upwards, and detect the colors. Each of these colors will have a distribution(i.e. it isn't just on one pixel for a given x), and I recommend taking the average of this distribution. You should of course repeat this until the next step in the x-direction would fall outside of the user selected area. Now you only have to tweak the mechanism for color detecting, namely to allow for a slight range of colors, instead of pure red of blue etc, but that's an entire different (though not as hard) problem. One more thing, it could be that at the given value of x two graphs overlap, and one might not be visible. In that case you could increment x a bit and try again, and if you detect it at that x, you can reason easily behind which other graph it is at the previous x. Good luck
