[site]: stackoverflow
[post_id]: 2022004
[parent_id]: 1978717
[tags]: 
Here's a series of blog postings with code that shows how to do it: (The first shows how to get a photo in, the second shows how to get it out) Using the jpegPhoto attribute in AD - Part I Using the jpegPhoto attribute in AD - Part II EDIT: Here's a generic function implementing the code from Part I: void AddPictureToUser( string strDN, // User Distinguished Name, in the form "CN=Joe User,OU=Employees,DC=company,DC=local" string strDCName, // Domain Controller, ie: "DC-01" string strFileName // Picture file to open and import into AD ) { // Open file System.IO.FileStream inFile = new System.IO.FileStream(strFileName, System.IO.FileMode.Open, System.IO.FileAccess.Read); // Retrive Data into a byte array variable byte[] binaryData = new byte[inFile.Length]; int bytesRead = inFile.Read(binaryData, 0, (int)inFile.Length); inFile.Close(); // Connect to AD System.DirectoryServices.DirectoryEntry myUser = new System.DirectoryServices.DirectoryEntry(@"LDAP://" + strDCName + @"/" + strDN); // Clear existing picture if exists myUser.Properties["jpegPhoto"].Clear(); // Update attribute with binary data from file myUser.Properties["jpegPhoto"].Add(binaryData); myUser.CommitChanges(); } EDIT: I found that in my organisation, the correct attribute to set was "thumbnailPhoto" like this: myUser.Properties["thumbnailPhoto"].Add(binaryData); This also seems to tbe the one that the commercial product Exclaimer is setting (but it might be only doing that in my organization)
