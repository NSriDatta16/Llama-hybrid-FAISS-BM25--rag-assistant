[site]: stackoverflow
[post_id]: 371962
[parent_id]: 371608
[tags]: 
You can't quite do this easily - according to the C99 standard , Section 6.7.5.3, paragraph 4: After adjustment, the parameters in a parameter type list in a function declarator that is part of a definition of that function shall not have incomplete type. Your options are, therefore, to have the function take a pointer to the structure, or to take a pointer to a function of a slightly different type, such as a function taking unspecified parameters: typedef void (* func_t)(struct s*); // Pointer to struct typedef void (* func_t)(void *); // Eww - this is inferior to above option in every way typedef void (* func_t)(); // Unspecified parameters
