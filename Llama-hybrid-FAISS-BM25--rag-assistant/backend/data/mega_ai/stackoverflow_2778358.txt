[site]: stackoverflow
[post_id]: 2778358
[parent_id]: 2778289
[tags]: 
I actually copied that snippet direct from my source file. OK. When I do sizeof(blockheader), I get the value of 4 bytes back It looks like blockheader is typedef'ed somewhere and its type occupies 4 bytes or its type requires 4 byte alignment. If you try sizeof(blockHeader) you'll get your type. when I do sizeof(blockHeaderStruct), I get 8 bytes. The reason why alignment matters is that if you need an array of blockHeaders then you can compute how much memory you need. Or if you have an array and need to compute how much memory to copy, you can compute it. If you want to align all struct members to addresses that are multiples of 1 instead of 4 or instead of your compiler's defaults, your compiler might offer a #pragma to do it. Then you'll save memory but accesses might be slower in order to access unaligned data.
