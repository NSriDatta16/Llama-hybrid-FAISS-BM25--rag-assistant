[site]: stackoverflow
[post_id]: 4496689
[parent_id]: 4496014
[tags]: 
Here's what I usually do, which is a combination of the two ideas: static int RoundDown(int x, int n) { return x / n * n; } static int Round(int x, int n) { return (x + n / 2) / n * n; } static int RoundUp(int x, int n) { return (x + n - 1) / n * n; } (That assumes positive numbers; Extending it to negatives is straight-forward.) [edit] According to LLVM, the Round function can also be written like this: int Round(int x, int n) { int z = (x + n / 2); return z - (z % n); } Which you may find more elegant.
