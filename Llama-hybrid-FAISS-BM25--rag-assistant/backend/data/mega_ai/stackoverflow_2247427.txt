[site]: stackoverflow
[post_id]: 2247427
[parent_id]: 
[tags]: 
C# SharpPcap Cross-thread operation not valid

Hi I'm trying to convert packet capturing in Example3 in SharpPcap new version SharpPcap-2.2.0rc1.src from Console Application to Windows Forms Application. I'm facing a problem when I tried to add packets has been captured to ListView control I will get an error which is: (Cross-thread operation not valid: Control 'listViewPackets' accessed from a thread other than the thread it was created on.) at this line: listViewPackets.Items.Add(e.Packet.ToString()); any Advice to solve this problem??? here is my code: using SharpPcap; namespace Packets { public partial class Form1 : Form { public Form1() { InitializeComponent(); } // Retrieve the device list private void btnLiDevicest_Click(object sender, EventArgs e) { var devices = LivePcapDeviceList.Instance; // If no devices were found print an error if (devices.Count /// Prints the time and length of each received packet /// /// protected void device_OnPacketArrival(object sender, CaptureEventArgs e) { DateTime time = e.Packet.PcapHeader.Date; uint len = e.Packet.PcapHeader.PacketLength; //Console.WriteLine("{0}:{1}:{2},{3} Len={4}", // time.Hour, time.Minute, time.Second, time.Millisecond, len); // Console.WriteLine(e.Packet.ToString()); listViewPackets.Items.Add(e.Packet.ToString()); } } } ................................. .................................... here is the original code: using System; using System.Collections.Generic; using SharpPcap; namespace SharpPcap.Test.Example3 { /// /// Basic capture example /// public class BasicCap { public static void Main(string[] args) { // Print SharpPcap version string ver = SharpPcap.Version.VersionString; Console.WriteLine("SharpPcap {0}, Example3.BasicCap.cs", ver); // Retrieve the device list var devices = LivePcapDeviceList.Instance; // If no devices were found print an error if(devices.Count /// Prints the time and length of each received packet /// private static void device_OnPacketArrival(object sender, CaptureEventArgs e) { DateTime time = e.Packet.PcapHeader.Date; uint len = e.Packet.PcapHeader.PacketLength; Console.WriteLine("{0}:{1}:{2},{3} Len={4}", time.Hour, time.Minute, time.Second, time.Millisecond, len); Console.WriteLine(e.Packet.ToString()); } } }
