u k} is near the value of the pixel size. This avoids the problem of dominating internal energies that arise from tuning the time step. Numerical instability due to discrete space The energies in a continuous image may have zero-crossing that do not exist as a pixel in the image. In this case, a point in the snake would oscillate between the two pixels that neighbor this zero-crossing. This oscillation can be avoided by using interpolation between pixels instead of nearest neighbor. Some variants of snakes The default method of snakes has various limitation and corner cases where the convergence performs poorly. Several alternatives exist which addresses issues of the default method, though with their own trade-offs. A few are listed here. GVF snake model The gradient vector flow (GVF) snake model addresses two issues with snakes: poor convergence performance for concave boundaries poor convergence performance when snake is initialized far from minimum In 2D, the GVF vector field F GVF {\displaystyle F_{\text{GVF}}} minimizes the energy functional E GVF = ∬ μ ( u x 2 + u y 2 + v x 2 + v y 2 ) + | ∇ f | 2 | v − ∇ f | 2 d x d y {\displaystyle E_{\text{GVF}}=\iint \mu (u_{x}^{2}+u_{y}^{2}+v_{x}^{2}+v_{y}^{2})+|\nabla f|^{2}|\mathbf {v} -\nabla f|^{2}\,dx\,dy} where μ {\displaystyle \mu } is a controllable smoothing term. This can be solved by solving the Euler equations μ ∇ 2 u − ( u − ∂ ∂ x F ext ) ( ∂ ∂ x F ext ( x , y ) 2 + ∂ ∂ y F ext ( x , y ) 2 ) = 0 {\displaystyle \mu \,\nabla ^{2}u-{\Bigg (}u-{\frac {\partial }{\partial x}}F_{\text{ext}}{\Bigg )}{\Bigg (}{\frac {\partial }{\partial x}}F_{\text{ext}}(x,y)^{2}+{\frac {\partial }{\partial y}}F_{\text{ext}}(x,y)^{2}{\Bigg )}=0} μ ∇ 2 v − ( v − ∂ ∂ y F ext ) ( ∂ ∂ x F ext ( x , y ) 2 + ∂ ∂ y F ext ( x , y ) 2 ) = 0 {\displaystyle \mu \,\nabla ^{2}v-{\Bigg (}v-{\frac {\partial }{\partial y}}F_{\text{ext}}{\Bigg )}{\Bigg (}{\frac {\partial }{\partial x}}F_{\text{ext}}(x,y)^{2}+{\frac {\partial }{\partial y}}F_{\text{ext}}(x,y)^{2}{\Bigg )}=0} This can be solved through iteration towards a steady-state value. u i + 1 = u i + μ ∇ 2 u i − ( u i − ∂ ∂ x F ext ) ( ∂ ∂ x F ext ( x , y ) 2 + ∂ ∂ y F ext ( x , y ) 2 ) {\displaystyle u_{i+1}=u_{i}+\mu \,\nabla ^{2}u_{i}-{\Bigg (}u_{i}-{\frac {\partial }{\partial x}}F_{\text{ext}}{\Bigg )}{\Bigg (}{\frac {\partial }{\partial x}}F_{\text{ext}}(x,y)^{2}+{\frac {\partial }{\partial y}}F_{\text{ext}}(x,y)^{2}{\Bigg )}} v i + 1 = v i + μ ∇ 2 v i − ( v i − ∂ ∂ y F ext ) ( ∂ ∂ x F ext ( x , y ) 2 + ∂ ∂ y F ext ( x , y ) 2 ) {\displaystyle v_{i+1}=v_{i}+\mu \,\nabla ^{2}v_{i}-{\Bigg (}v_{i}-{\frac {\partial }{\partial y}}F_{\text{ext}}{\Bigg )}{\Bigg (}{\frac {\partial }{\partial x}}F_{\text{ext}}(x,y)^{2}+{\frac {\partial }{\partial y}}F_{\text{ext}}(x,y)^{2}{\Bigg )}} This result replaces the default external force. F ext ∗ = F GVF {\displaystyle F_{\text{ext}}^{*}=F_{\text{GVF}}} The primary issue with using GVF is the smoothing term μ {\displaystyle \mu } causes rounding of the edges of the contour. Reducing the value of μ {\displaystyle \mu } reduces the rounding but weakens the amount of smoothing. The balloon model The balloon model addresses these problems with the default active contour model: The snake is not attracted to distant edges. The snake will shrink inwards if no substantial images forces are acting upon it. a snake larger than the minima contour will eventually shrink into it, but a snake smaller than the minima contour will not find the minima and instead continue to shrink. The balloon model introduces an inflation term into the forces acting on the snake F inflation = k 1 n → ( s ) {\displaystyle F_{\text{inflation}}=k_{1}{\vec {n}}(s)} where n → ( s ) {\displaystyle {\vec {n}}(s)} is the normal unitary vector of the curve at v ( s ) {\displaystyle v(s)} and k 1 {\displaystyle k_{1}} is the magnitude of the force. k 1 {\displaystyle k_{1}} should have the same magnitude as the image normalization factor k {\displaystyle k} 