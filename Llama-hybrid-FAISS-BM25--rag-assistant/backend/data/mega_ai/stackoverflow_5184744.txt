[site]: stackoverflow
[post_id]: 5184744
[parent_id]: 2720512
[tags]: 
Another approach that some might consider a little more elegant is: IContext context = ContextFactory.GetContext(); EntityRepo repo = new EntityRepo(context); //Entity Repository OtherTableEntity y = new OtherTableEntity() //this could be some other derived value you already have //that uniquely identifies the record (or foreign key or other value you want to update) Int32 id = 1234; //value to update to var z = repo.TableToUpdate.List().Where(x => x.FK_ID == y.FK_ID).FirstOrDefault(); if (z != null) { z.FK_ID = id; repo.Commit(); } Put a break before and after repo.Commit(); and have your SQL query window open and run a select off the table before and after repo.Commit() . The add criteria are basically whatever you want them to be. Call repo.EntityToUpdate.Add(entity) and repo.Commit() .
