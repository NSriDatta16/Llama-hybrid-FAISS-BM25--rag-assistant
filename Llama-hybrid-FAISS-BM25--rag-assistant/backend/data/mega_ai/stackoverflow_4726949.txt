[site]: stackoverflow
[post_id]: 4726949
[parent_id]: 
[tags]: 
Python elegant assignment based on True/False values

I have a variable I want to set depending on the values in three booleans. The most straight-forward way is an if statement followed by a series of elifs: if a and b and c: name = 'first' elif a and b and not c: name = 'second' elif a and not b and c: name = 'third' elif a and not b and not c: name = 'fourth' elif not a and b and c: name = 'fifth' elif not a and b and not c: name = 'sixth' elif not a and not b and c: name = 'seventh' elif not a and not b and not c: name = 'eighth' This is a bit awkward, and I'm wondering if there's a more Pythonic way to handle this problem. A couple of ideas come to mind. Dictionary hack: name = {a and b and c: 'first', a and b and not c: 'second', a and not b and c: 'third', a and not b and not c: 'fourth', not a and b and c: 'fifth', not a and b and not c: 'sixth', not a and not b and c: 'seventh', not a and not b and not c: 'eighth'}[True] I call it a hack because I'm not too wild about seven of the keys being False and overriding each other. And/or magic name = (a and b and c and 'first' or a and b and not c and 'second' or a and not b and c and 'third' or a and not b and not c and 'fourth' or not a and b and c and 'fifth' or not a and b and not c and 'sixth' or not a and not b and c and 'seventh' or not a and not b and not c and 'eighth') This works because Python ands and ors return the last value to be evaluated, but you have to know that in order to understand this otherwise bizarre code. None of these three options is very satisfying. What do you recommend?
