[site]: stackoverflow
[post_id]: 3616265
[parent_id]: 
[tags]: 
java.sql.SQLException: Table/View 'SEQUENCE' already exists in Schema 'ADMIN'

My application throws this Exception. I am using Java DB as the back end and i am using JPA Internal Exception: java.sql.SQLException: Table/View 'POCKETMONEY' already exists in Schema 'APP'. Error Code: 30000 Call: CREATE TABLE APP.POCKETMONEY (ID INTEGER NOT NULL, DateofSpending DATE, DESCRIPTION VARCHAR(255), AMOUNT INTEGER, PRIMARY KEY (ID)) Query: DataModifyQuery() Internal Exception: java.sql.SQLException: Table/View 'SEQUENCE' already exists in Schema 'ADMIN'. Error Code: 30000 Call: CREATE TABLE SEQUENCE (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT DECIMAL, PRIMARY KEY (SEQ_NAME)) Query: DataModifyQuery() Here is my JPA code /* * To change this template, choose Tools | Templates * and open the template in the editor. */ package mymoney; import java.io.Serializable; import java.util.Date; import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.Table; import javax.persistence.Temporal; import javax.persistence.TemporalType; /** * * @author sugan */ @Entity @Table(schema = "APP") public class pocketMoney implements Serializable { private static final long serialVersionUID = 1L; @Id @GeneratedValue(strategy=GenerationType.TABLE) private int id; @Temporal(TemporalType.DATE) @Column(name = "DateofSpending") private Date dos; private String description; private int amount; public int getAmount() { return amount; } public void setAmount(int amount) { this.amount = amount; } public String getDescription() { return description; } public void setDescription(String description) { this.description = description; } public Date getDos() { return dos; } public void setDos(Date dos) { this.dos = dos; } public int getId() { return id; } public void setId(int id) { this.id = id; } @Override public int hashCode() { int hash = 0; hash += (int) id; return hash; } @Override public boolean equals(Object object) { // TODO: Warning - this method won't work in the case the id fields are not set if (!(object instanceof pocketMoney)) { return false; } pocketMoney other = (pocketMoney) object; if (this.id != other.id) { return false; } return true; } @Override public String toString() { return "mymoney.pocketMoney[id=" + id + "]"; } } Persistence.xml org.eclipse.persistence.jpa.PersistenceProvider mymoney.pocketMoney
