[site]: stackoverflow
[post_id]: 3550814
[parent_id]: 3522951
[tags]: 
Dirty workaround three, is to use the [Invoke] attribute and add a method to the domain service to expose the "complex type", which informs the WCF RIA tooling to create the entity on the client-side: public ComplexObjectParameter ExposeComplexObjectParameter() { throw new NotSupportedException(); } I put NotSupportedException in my domain service methods to prevent silent failures if the method is ever called remotely. I'm not sure about how this solution affects the issue of losing "all RIA tracking functionality". It does not answer how to create a composable query using a complex type as a parameter. It's dirty, but abstracts the problem closest to the source of problem. The calling and receiving code is cleaner. This maintains the "elegance" at the higher level while pushing the dirty down.
