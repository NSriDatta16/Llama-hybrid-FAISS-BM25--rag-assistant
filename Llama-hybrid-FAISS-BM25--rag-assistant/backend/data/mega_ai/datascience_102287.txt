[site]: datascience
[post_id]: 102287
[parent_id]: 
[tags]: 
Machine learning for betting (how to optimize overall profit)

How to use machine learning in betting (optimize for overall profit)? Suppose I have two sports: football and basketball. My task is to maximize overall profit . What approach can be used for such a task? In fact, I have information about 50 000 bets. Simplified demo data (for example I stake 1\$ on odds 2 and I win, I receive stake * (win - bet) == 1\$. If I lose, I win -1 (just lose my stake)): sport odds won$ football 2 1 football 2 1 football 2 1 football 2 1 football 2 -1 football 2 -1 basketball 6 5 basketball 6 5 basketball 2 -1 basketball 2 -1 basketball 2 -1 basketball 2 -1 Betting on football gives me 1 + 1 + 1 + 1 - 1 -1 == 2\$. I win 4/6 games (high precision), but I win only 2\$. Betting on basketball gives me 5 + 5 - 1 - 1 - 1 -1 == 6\$. I win only 2/6 games (low precision), but I win 6\$. As I understand, using typical classification approaches (LogisticRegression, RandomForestClassifier, XGBoost) are optimized on precision. But that is not what I want (I can guess win-lose good, but still win a little). To maximize overall profit I should bet on basketball. What is the correct approach for such tasks? My base approach: I've started just with classification, made two classes: 1 for Win and 0 for Lose, and trained the model for guessing Win/Lose. My model can predict the probability of class 1 (win probability) that is my_probability . Odd in betting is 1/probability , so I have bookmaker_probability . Having that two probabilities, I can use value confidence == my_probability/bookmaker_probability . In theory the higher confidence, the higher probability that I'll gain extra money. So betting not on all bets, but on top 50% bets sorted by confidence I should receive much better results. In fact, such an approach gives me a little higher ROI, 0-3% higher than the base ROI. What is the correct approach? Is it possible to use classical classification algorithms (like LogisticRegression, RandomForestClassifier, XGBoost, etc) to optimize not precision but something like "win function" by default? (If this is important, I use Python) Any keyword or suggestion to solve this kind of problem?
