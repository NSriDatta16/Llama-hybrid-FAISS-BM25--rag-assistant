[site]: stackoverflow
[post_id]: 709557
[parent_id]: 709372
[tags]: 
Checking in significant binaries violates a usage principle of source code/SVN, namely that files in source control should possess a meaningful property of difference . Todays source file is meaningfully different to yesterdays source file; a diff will produce a set of changes which make sense to a human reader. Todays picture of the front of the office does not possess a meaningful diff with regard to yesterdays picture of the office. Because things like images do not possess the concept of difference, WHY are you storing them in a system which exists record and store the differences between files? Revision based storage is about storing histories of changes to files. There is no meaingful change history in the data of (say) JPEG files. Such files are stored perfectly as well simply in a directory. More practically, storing large files - build output files - in SVN makes checkout slow. The potential to abuse SVN as a generalised binary repository is there. It all seems fine at first - because there aren't many binary files. Of course, the number of files increases at time passes; I've seen modules which take hours to check out. It is better to store large associated binary files (and output files) in a directory structure and refer to them from the build process.
