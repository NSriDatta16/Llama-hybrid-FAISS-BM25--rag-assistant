[site]: stackoverflow
[post_id]: 2217316
[parent_id]: 2217076
[tags]: 
The simplest explanation is that either the layer or the context is not formed properly. You test both for nil before using. IIRC, the debugger can display values for Core Graphic structures if you use the "Print Description to Console" contextual menu. Probably unrelated but I would recommend changing... CGPointMake(00, 00) ...to: CGPointMake(0.0f, 0.0f) Just to make sure. In any case, I think you need to abandon this method of implementing undo. It looks simple and neat but in reality it will grow cumbersome, complex and unreliable. Undo and redo are properly functions of the data model and not a view or it's controller. Instead of saving the results of the user's inputs i.e. the drawings, you should be saving the users inputs and then drawing from that data. In this case you store the points of the touches, the time/sequences of touches and whatever operations are relevant. The view and the view controller would have no "memory" at all. They would simply draw whatever the data model indicated needed to drawn at the moment. You would implement undo and redo in the data model. To undo you would draw all the data up to the undo point. To redo you draw up to the last data. Core Data is very good for this although the learning curve is steep. It will implement undo and redo for you automatically. If your data model is relatively simple you could implement it with just an array that stores a custom class designed to store the data for a single drawing event. If you try to do this all in the view or the view controller, you end up with a monster ball of fragile code.
