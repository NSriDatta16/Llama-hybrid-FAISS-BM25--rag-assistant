[site]: stackoverflow
[post_id]: 1829632
[parent_id]: 1829489
[tags]: 
It seems to me that many of your ManyToMany relations should be replaced by properties of the target model. For example, you've got city and country as separate relations. That means that you might end up with a user having city = ['Paris', 'London', 'New York'] and country = ['USA', 'France', 'UK'] . Instead I think you should set up a locations ManyToMany relation pointing to a model consisting of city and country properties. Same with department and department_number , job_classification and job_classification_code , location_description and location_path , etc. Edit: In some cases you might be able to use ForeignKey instead of ManyToMany. Perhaps a user can only belong to one city and country ? Position and supervisor will likely be some of the trickier relations, because position should point to a department/unit and is_supervisor should likely be a property of a position. That is, you only need to point to a position as the supervisor(s) would be retrieved from other users' positions. Edit : Example: If person A works in dept X and person B also works in dept X, but as a manager, then person A is supervised by person B. Edit : It can be tempting to assume that a department can only have one manager or that a manager can only manage one department. I would advice against this as organizations often have all kinds of special cases. Think about scenarios like when a manager leaves the company, will the department be without manager for a while or will another manager temporarily take over, thus keeping two manager positions.
