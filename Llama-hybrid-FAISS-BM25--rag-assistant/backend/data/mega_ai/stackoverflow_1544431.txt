[site]: stackoverflow
[post_id]: 1544431
[parent_id]: 
[tags]: 
Caching data vs. writing in memory table

Which would be the best way to achieve a fast hash / session storage with one of these three ways? Way 1: Create a memory table in MySQL that stores a hash and a timestamp when the entry was created. A MySQL event automatically deletes all entries older than 20 minutes. This should be pretty fast because all data is stored in memory, but the overhead of connecting to the database server might destroy this benefit. Way 2: I create an empty file with the hash as its filename and create a cronjob that automatically deletes all files older than 20 minutes. This can become slow because of all the read operations on the HDD. Way 3: Since this is going to be PHP related and we use the Zend Framework I could use the Zend_Cache and store the hash with a time-to-live of 20 minutes. I don't want to use Memcached or APC for this, because I think that is a big overhead for just some small hashes. Do you have any experience with similar scenarios? I would appreciate your experience and solutions for this.
