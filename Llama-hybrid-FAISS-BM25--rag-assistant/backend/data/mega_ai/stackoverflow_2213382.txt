[site]: stackoverflow
[post_id]: 2213382
[parent_id]: 2213262
[tags]: 
You can do it in one regular expression, both in C# and in Ruby, but why bother? You haven't really defined exactly what you want - first you should document that. Once you've documented it, it's easy to turn that description into ordinary code. I think that it is more readable and maintable this way: /// /// Returns true if a filename's extension is .001. /// If the extensions is .rar, check to see if there is a part number /// immediately before the extension. /// If there is no part number, return true. /// If there is a part number, returns true if the part number is 1. /// In all other cases, return false. /// static bool isMainFile(string name) { string extension = Path.GetExtension(name); if (extension == ".001") return true; if (extension != ".rar") return false; Match match = Regex.Match(name, @"\.part(\d+)\.rar$"); if (!match.Success) return true; string partNumber = match.Groups[1].Value.TrimStart('0'); return partNumber == "1"; } I've left one regular expression in there as it's not too complex, and the alternative of fiddling with the Path functions seems clunky to me. Overall, I think the above code expresses the intention much more clearly than a regular expression does. I do like it in when you can cleanly solve a problem with an elegant regular expression, but I'm not sure that a single regular expression is the best way to solve this problem.
