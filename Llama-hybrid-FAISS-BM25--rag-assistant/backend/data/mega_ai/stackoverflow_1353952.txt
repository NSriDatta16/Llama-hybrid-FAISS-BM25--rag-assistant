[site]: stackoverflow
[post_id]: 1353952
[parent_id]: 1353525
[tags]: 
If you can access your swf ( have the source to it ) then all you need to do is add a callback to a function that returns all the methods you've setup for use with ExternalInterface as an Array, String, etc. If you do not have access to the swf source, you could make another swf, set it up with ExternalInterface so you can call it. Load the original swf in your new one and in the INIT handler, start scavanging for methods that might be called linked to ExternalInterface.addCallback using describeType . This is what I have in mind: var loader:Loader = new Loader(); loader.contentLoaderInfo.addEventListener(Event.INIT, loaded); loader.load(new URLRequest('externalInterfaceTest.swf')); function loaded(e:Event):void{ //get all the methods in the loaded swf var methods:XMLList = describeType(e.target.content).method; for each(var method:XML in methods){ //get methods defined by the author/not belonging to flash.display.*,flash.events.*,etc if(method.@declaredBy.indexOf('flash') == -1){ trace('\nmethod description start========================'); trace('methodName: ' + method.@name); trace('returnType: ' + method.@returnType); for each(var param:XML in method.parameter){ trace('parameter ' + param.@index + ' type: ' + param.@type + ' optional: ' + param.@optional); } trace('\nmethod description end\n========================'); } } } This would work if: the swf you load doesn't have a DocumentClass, the functions that might be added as callbacks are in the timeline, therefore public the swf you load has all methods linked with ExternalInterface.addCallback declared public If you have no access to the swf or the developer, some ethical decompiling might help. A different approach would be to use classes developed by other developer to inspect swfs. Here are some examples: senocular's SWFReader Thibault Imbert's SWFExplorer Denis Kolyako's getDefinitionNames These classes may not offer the exact functionality you need, but it's a good starting point for what you need, only you'll be looking using binary data( which I'm not very good at right now). You can find the SWF file specifications here . Hope this helps.
