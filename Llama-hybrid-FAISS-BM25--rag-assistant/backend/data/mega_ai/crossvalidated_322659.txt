[site]: crossvalidated
[post_id]: 322659
[parent_id]: 316726
[tags]: 
There's a tiny mistake in your loop. From e1071 documentation : coefs The corresponding coefficients times the training labels. It means coefs = $\alpha_S \odot y_S$ or, for a specific index, coefs[m] = $\alpha_m y_m$ When you compute this line ind[i] = sv[i,"type"] - sv[,"type"] %*% (sv[,"coef"] * (sv[,1:2] %*% sv[i,1:2])) it's the same as ind[i] = sv[i,'type'] - sum(sv[,'coef'] * sv[,'type'] * sv[,1:2] %*% sv[i,1:2]) and, assuming $X_S = \{\mathbf{x}_i | i \in S\}$ is composed of column vectors, it corresponds to the following formulas (notice the extra $y_m$ inside the innermost sum) $$ y_s - \mathbf{y}_S \cdot \left (\mathbf{\alpha}_S \odot \mathbf{y}_S \odot X_S^T\mathbf{x}_s\right ) =\\ y_s - \sum_{m \in S} \alpha_m y_m y_m \langle \mathbf{x}_m,\mathbf{x}_s \rangle \\ $$ So to reproduce this formula $$ y_s - \sum_{m \in S} \alpha_m y_m \langle \mathbf{x}_m,\mathbf{x}_s \rangle $$ use the line below inside the loop ind[i] = sv[i,'type'] - sum(sv[,'coef'] * sv[,1:2] %*% sv[i,1:2]) Wrapping up, the correct loop is ind = numeric(3) for(i in 1:3) { ind[i] = sv[i,'type'] - sum(sv[,'coef'] * sv[,1:2] %*% sv[i,1:2]) } And the result it yields is the same you obtained when computed the biases for the constraints $y_s(\mathbf{w}^T\mathbf{x}_s +b) = 1$. > ind # [1] 5.390244 5.365854 5.365854 > mean(ind) # [1] 5.373984 Just a note here that in your example you should divide by $y_s$ again, to obtain $$b = \frac{y_s \mathbf{w}^T\mathbf{x}_s - 1}{-y_s}$$ > bias = -((sv[,"type"] * (svm.model$SV %*% t(w))) -1)/sv[,'type'] # [,1] # 6 5.390244 # 8 5.365854 # 12 5.365854 > bias # [1] 5.390244 5.365854 5.365854 > mean(bias) # [1] 5.373984 TL;DR: remove the sv[,'type']
