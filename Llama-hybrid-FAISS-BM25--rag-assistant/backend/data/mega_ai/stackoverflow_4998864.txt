[site]: stackoverflow
[post_id]: 4998864
[parent_id]: 
[tags]: 
Fragility of using Excel Object Library in Visual Basic

A bit of preface: this project, while technically homework, is completely under my 5-man team's control. We came up with the project, defined the scope, and exercise full creative control. So it's not traditional homework, it's equivalent to a senior project. One of the outputs of the system I'm developing should be very similar to a well formatted Excel spreadsheet. We could create (or find) a graphics library and handle the printing in our own code... but ultimately we feel that an Excel spreadsheet file will be more portable. As the user can open it up in Excel, edit it, e-mail it, etc. Accessing Excel programatically seems simple enough (i.e: http://support.microsoft.com/kb/302094 ) But my question is: what happens when "Office 2013" comes out, and the user removes Office 2010 and installs 2013? I won't be around to maintain this project... and I'd hate to force someone into opening up my code just to reference the Excel 13.0 COM. I'll be using incredibly basic functions of the API. So long as I can read-and-write to a range of cells, and adjust the interior color of cells, my code will work. In general, how can I make my VB.Net code access whatever Microsoft Excel API is available on the target system? (Including future Excel APIs.)
