[site]: datascience
[post_id]: 90044
[parent_id]: 
[tags]: 
What are Some Good ML/Deep Learning Approaches to This Type of Problem

Problem Definition: You are given a dataset of $N$ different features. Most of the features are actually calculations of their own time series of set length (i.e A 5-time step weighted moving average). These time series are not necessarily related (There may be a moving average of hospital capacity and another moving average of infection rate) . At each sample, there is a time series of variable lengths (data is not missing, you can choose to put in the missing values) for each feature. Despite the fact time series for each feature are variable lengths, these time series lengths are consistent throughout the samples. For example, say the max time series length is $D$ and in sample $X$ , feature $A$ 's time series length is $D - K$ for some natural number $K$ . Then in sample $Y$ , feature $A$ 's time series length will still be $D - K$ . The time series of the different samples are not continuous. For example, feature $A$ might look like this in sample $X$ $(A_{Z}, A_{Z+1}, ..., A_{Z + (D-K-1)})$ , but feature $A$ in sample $X+1$ might not look like $(A_{Z+1}, A_{Z+2}, ..., A_{Z + (D-K)})$ , but as stated before, you can be guaranteed the time series length will be of $D-K$ . The goal is to predict the likelihood of events $A$ and $\neg A$ happening (binary classification) within the next $y\neq 1$ (to be optimized) time steps. The dataset is unbiased and large ( $\gt 1,000,000$ samples) In summary: After some signal is generated (non-continuous time series from sample to sample), the associated time series of the features are then generated thereafter. Using these features we predict the likelihood of a particular event occurring in the near future. What I am currently thinking: I am currently deciding between an LSTM and a single-layered CNN model to tackle this type of problem as it is my understanding that LSTM's and CNN's work best for multivariate time series classification problems. I am also weighing the possibility of merely using the most recent values instead of the time-series structure and going with a simple ANN. The reason I am going with a neural network approach is due to the fact they are more friendly on a large dataset.
