[site]: stackoverflow
[post_id]: 290547
[parent_id]: 290456
[tags]: 
Python is a good choice. I would avoid the CGI model though - you'll pay a large penalty for the interpreter launch on each request. Most Python web frameworks support the WSGI standard and can be hooked up to servers in a myriad of ways, but most live in some sort of long-running process that the web server communicates with (via proxying, FastCGI, SCGI, etc). Speaking of frameworks, the Python landscape is ripe with them. This is both good and bad. There are many fine options but it can be daunting to a newcomer. If you are looking for something that comes prepackaged with web/DB/templating integration I'd suggest looking at Django , TurboGears or Pylons . If you want to have more control over the individual components, look at CherryPy , Colubrid or web.py . As for whether or not it is as "easy as PHP", that is subjective. Usually it is encouraged to keep your templates and application logic separate in the Python web programming world, which can make your life easier. On the other hand, being able to write all of the code for a page in a PHP file is another definition of "easy". Good luck.
