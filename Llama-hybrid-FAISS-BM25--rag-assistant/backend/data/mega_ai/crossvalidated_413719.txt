[site]: crossvalidated
[post_id]: 413719
[parent_id]: 413691
[tags]: 
The code below gives a solution to the problem in which each of the lists, such as those as $Val1, Val2, ...$ are generated statistically in that the sum of list elements for each generated N will not always (or usually) sum to the exact number. They however will do so on average and is done through the function: np.random.normal(Score_Mean, Score_Sigma, NumberQuestions). The code is compatible with Python 3.7. Similar to the program R's rnorm(...) function Python has the function: np.random.normal(...) which takes the general parameters such as the mean and standard deviation, but also the number of list elements you would like the generated number normally distributed over. import numpy as np NumberQuestions = 20 NumberofSubjects = 5 Score_Sigma = 1 All_Scores_List = [] Scores = np.random.normal(40, 10, NumberofSubjects) for Score in Scores : Score_Mean = Score/NumberQuestions # Use the mean score (Score_Mean) to populate another list which on AVERAGE would average to Score_Mean Score_List = np.random.normal(Score_Mean, Score_Sigma, NumberQuestions) All_Scores_List.append((np.round(Score_List)).astype(int)) print(Scores) print(All_Scores_List)
