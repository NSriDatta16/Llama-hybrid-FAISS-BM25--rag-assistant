[site]: stackoverflow
[post_id]: 5065933
[parent_id]: 
[tags]: 
Symfony - embedding forms in Propel

I have an admin module, that has a file input filed, where I'd like to upload a file. I am looking to upload the file to the database as a blob, as this is what I am restricted to. I am aware this is bad practice, but I cannot add files to the filesystem. I have the following schema: press_photo: id: ~ blob_data_id: { type: INTEGER, required: true, foreignTable: blob_data, foreignReference: id, onDelete: cascade } name: { type: VARCHAR, size: '100', required: true } created_at: ~ updated_at: ~ blob_data: id: ~ blob_data: { type: BLOB, required: true } created_at: ~ updated_at: ~ So far, I have a created all the widgets and schemas in the BlobForm.class.php and I have then tried to embed this form into my PressPhotoForm.class.php $this->embedForm('blob_data', new BlobDataForm()); Now when I select the file and upload, it does seem to be added to the blob_data table, but in the press_photo table, blob_data_id is blank and there is no checkbox on the input widget to say there is an image. Would someone be able to shed some light on how I can get the blob_data_id into the press_photo table on upload? Thanks EDIT: Here are my forms: class BlobDataForm extends BaseBlobDataForm { public function configure() { parent::configure(); $this->widgetSchema ['blob_data'] = new sfWidgetFormInputFileEditable ( array ( 'label' => '', 'file_src' => $this->getObject()->getBlobData(), 'edit_mode' => ! $this->isNew () && $this->getObject()->getBlobData(), 'template' => ' %file% %input% %delete% %delete_label% ' )); $this->setWidget('blob_data_type_id', new sfWidgetFormPropelChoice(array('model' => 'BlobDataType'))); //$this->widgetSchema['blob_data_id'] = new sfWidgetFormInputHidden(); $this->validatorSchema['blob_data'] = new sfValidatorPass(); $this->validatorSchema ['blob_data'] = new fdValidatorImageToDB(array( 'required'=>false )); $this->validatorSchema['blob_data']->setOption('mime_types', array('image/jpg','image/jpeg','application/pdf','application/msword')); $this->widgetSchema->setNameFormat('article_files[%s]'); $this->widgetSchema->setLabels(array( 'blob_data_type_id'=>'File Type', 'blob_data'=>'File' )); $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema); unset( $this['file_extension'], //unsetting to hide the drop down select-list //$this['blob_data_type_id'], $this['image_width'], $this['image_height'], $this['filesize'], $this['created_at'], $this['updated_at'] ); } class PressPhotoForm extends BasePressPhotoForm { public function configure() { // Execute the configure of the parent parent::configure(); // Configure $this->configureWidgets(); $this->configureValidators(); //$this->embedForm('blob_data', new BlobDataForm()); unset($this['blob_data_id'],$this['created_at'], $this['url'], $this['updated_at'], $this['image_size']); } protected function configureWidgets() { $this->widgetSchema['description'] = new sfWidgetFormTextareaTinyMCE(array( 'width' => 550, 'height' => 350, 'config' => 'theme_advanced_disable: "anchor,image,cleanup,help"', )); $subForm = new sfForm(); for ($i = 0; $i BlobData = $this->getObject(); $form = new BlobDataForm($blobData); $pressPhoto = new PressPhoto(); $subForm->embedForm($i, $form); $this->getObject()->setBlobDataId($blobData->getId()); } $this->embedForm('blob_data', $subForm); $this->widgetSchema->setLabels(array( 'blob_data'=>'File' )); } protected function configureValidators() { $this->validatorSchema['name']->setOption('required', true); $this->validatorSchema['name']->setMessage('required', 'You must provide a name'); $this->validatorSchema['press_photo_category_id']->setOption('required', true); $this->validatorSchema['press_photo_category_id']->setMessage('required', 'You must select a category'); } public function saveEmbeddedForm($con = null, $forms = null) { $dataForms = $this->getEmbeddedForm('blob_data')->getEmbeddedForms(); foreach ($dataForms as $dataForm) $dataForm->getObject()->setBlobDataId($this->getObject()->getId()); parent::saveEmbeddedForm($con, $forms); } } Thanks
