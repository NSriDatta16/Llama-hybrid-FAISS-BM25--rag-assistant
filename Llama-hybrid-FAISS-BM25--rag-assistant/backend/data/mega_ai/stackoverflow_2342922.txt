[site]: stackoverflow
[post_id]: 2342922
[parent_id]: 1541834
[tags]: 
Foo2 is a Foo1. Foo1 is not a Foo2 but this is what the cast is trying to assert. The real life analogy is: typically, children inherit money from their parents but parents do not inherit money from their children. I feel your pain here. When I first began OOP, I ran across a lot of these kinds of problems and it took me a while to wrap my head around some of the nuance. If I have a Foo1 and I want it to get the added features, why can't I just cast in the other direction and gain those extra properties and methods? Unfortunately, that's not how it works. It gets easier with time and practice though.
