[site]: stackoverflow
[post_id]: 2008289
[parent_id]: 2008101
[tags]: 
So first, congratulations on picking ASP.NET MVC. I dare say that ASP.NET MVC is easier to work with than WebForms. WebForms tends to take somewhat of a "black-box" approach to the web and treat it more like classic WinForms development. WebForms would probably be a slightly more comfortable technology for you (coming from WinForms development) but MVC will leave you with a greater understanding of how the web works , which is incredibly important. Before you dive into ASP.NET MVC, you may want to brush up on the basics of HTTP, because it is important to understand when you starting writing action methods that respond differently based on request verbs. It's also nice to know exactly what HTTP headers are, and how they can be leveraged in your application. Anyway, here's my list for you: Important People and Their Blogs Phil Haack : He is the lead developer on ASP.NET MVC, and his blog has tons of neat tricks and tips for using it. Scott Hanselman : He worked with the team on NerdDinner and from time to time his blog has some neat MVC stuff. Rob Conery : Rob's an avid promoter of ASP.NET MVC and an active open-source contributor. He has tons of code on github for you to browse for inspiration/guidance, and he also has tons of screencasts on his blog and on his business website, TekPub . I recommend purchasing his screencasts from TekPub because he's just an amazing presenter and makes understanding ASP.NET MVC so easy. Scott Guthrie : He wrote the first chapter with respects to NerdDinner in the Professional ASP.NET MVC 1.0 book, and he always has some cool posts about new features coming in ASP.NET MVC. Steven Walther : It seems like every time I look at his blog he's got another cool trick or code snippet related to ASP.NET MVC. He's also written a book on ASP.NET MVC that has some pretty good reviews on Amazon. Reading Material WDVL: HyperText Transfer Protocol : Again, this is your HTTP tutorial. I've read through part of it and it seems pretty decent. You don't need a rock solid understanding of HTTP, but a general overview of request verbs and headers specifically will help you. NerdDinner.com Tutorial : This is lengthy step-by-step guide written by ScottGu himself about how to create a basic ASP.NET MVC website from beginning to end. Profesional ASP.NET MVC 1.0 : This is a book by the team that wrote this ASP.NET MVC, and it really does a great job of explaining the framework. ASP.NET MVC Framework Unleashed : This is Steven Walther's book on the framework. It has some decent reviews on Amazon, though I've never read it myself, so I couldn't really give my opinion one way or the other. Screencasts Rob Conery's MVC Storefront Series : These screencasts are amazingly helpful. In the beginning they were working against pre-release copies of the MVC framework, so some stuff has changed, but they're still amazing material for learning ASP.NET MVC. Scott Guthrie's Presentations on ASP.NET MVC 2 : Look at the ASP.NET MVC section of this page. There are some really neat new features coming in ASP.NET MVC 2, and Scott actually builds a good foundation from the ground up with this presentation. He takes you through beginner stuff first and then shows the neat new tricks later. Phil Haack's MIX09 MVC Session : Great content here straight from the man himself. Phil's actually a great presenter, and there's a lot of good content here. Phil Haack's MIX09 Advanced MVC Session : Some more advanced stuff and neat tricks from Phil. Scott Hanselman's File -> New Company MIX09 Session : I actually attended this session while I was at MIX09, and Scott's a great presenter. Well worth a gander :) Rob Conery and Steven Sanderson TekPub Screencasts : These aren't free, but they're worth every penny. Rob and Steven are amazing teachers, and I can't recommend TekPub screencasts enough. They are top-notch. IoC and Dependency Injection Since you mentioned IoC specifically in your OP, there are a few libraries and blog posts that might help you with that: Simone Chiaretta: How to use Ninject 2 with ASP.NET MVC : I actually use Ninject in my own personal projects, so this is a great resource if you're a fan of Ninject. Rob Conery's "Hana" Source Code : Sometimes I just love seeing some quality reference code. This is actually the source for Rob's blog. He was using StructureMap originally, but I think he changed recently to Ninject.Mvc. MVC Storefront DI Screencast : Rob talks about setting up dependency injection in the MVC Storefront. This one uses StructureMap I believe. TekPub Concepts video (free) : Rob goes over the basics of IoC and DI in this video if you need a refresher. It's free too :) Other Pertinent Web Technologies Because you're looking to move to the web, there are other languages and technologies that you need to know as well. Below is a list of some brief tutorials to get you started, although each of these subjects could easily warrant a post as big (or bigger) than this one! HTML : Seems silly that I'm mentioning this here, but I only mention it because there's a lot of push these days to write valid HTML. A majority of accessibility and browser incompatibility issues can be averted by having clean markup. I personally use XHTML in my sites, but any doctype will do :) JavaScript : This is a neat language that can be used to make many web applications feel more like a desktop application (amongst other things). There are a lot of performance gains and design victories that can be had by properly leveraging JavaScript. Once you feel comfortable with JavaScript, you will probably want to make the move to a JavaScript library to make cross-browser compatibility very easy. My JavaScript library of choice is jQuery . CSS : This is how you should be applying style to your websites. One of the biggest mistakes a lot of developers make is to make their HTML in charge of presentation (using tables for layouts [holy war], etc. etc.). Arguments and holy wars aside, CSS is a valid skill to have, and it really isn't as hard as some might have you believe :) I know this seems like a lot, and I've probably inundated you with material to read, however I think it's important to build a solid foundation. Web development is a lot of fun when you are good at it, and it's definitely a great way to make a living! Good luck! ASP.NET MVC is a great framework, and you've made a great choice. Oh yeah, and there are a few other things you might want to Google in your spare time. They tend to be pretty advanced, so I didn't include them here, but you will run into them when you get more involved in the web world: AJAX : Makes your web applications perform more naturally and do things in the background. Web Services : A universal way to exchange data on the web. For example, there are web services that provide weather forecasts and stock quotes. You can consume them and even create some of your own! XML and JSON : These are used to describe data. When you serialize data on the web, XML and/or JSON are the conventional technologies most developers use. JSON is popular particularly because it can be consumed so nicely within JavaScript.
