[site]: stackoverflow
[post_id]: 4401686
[parent_id]: 4401303
[tags]: 
There are several MVP library projects for GWT that use the concept of a Place to represent the state of Presenters. Place implementations generally map the state to the URL fragment after the #. Hence, they work similarly to Gmail's state handling. As an example, using the gwt-presenter project, you may have a DataPresenter and a DataPlace: public class DataPlace extends ProvidedPresenterPlace { @Inject public DataPlace(Provider presenter) { super(presenter); } @Override public String getName() { return "data"; } @Override protected void preparePresenter( PlaceRequest request, DataPresenter presenter ) { String state = request.getParameter("state", null); if (state != null) { // set the presenter state presenter.setState(State.valueOf(state)); } } @Override protected PlaceRequest prepareRequest( PlaceRequest request, DataPresenter presenter ) { return request.with("state", presenter.getState().toString()); } } When the URL has the form /data#state=12345, this Place will be asked to prepare the Presenter based on the parameters. Afterwards, the reveal method in the Presenter will be invoked. Since the state was already prepared by the Place, you'll be able to restore the view as needed.
