[site]: stackoverflow
[post_id]: 2691172
[parent_id]: 2690779
[tags]: 
protected override void OnActionExecuting(ActionExecutingContext filterContext) { var type1 = filterContext.Controller.GetType(); var type2 = filterContext.ActionDescriptor .ControllerDescriptor.ControllerType; } OK, sorry, I missed the "root" part. Then, another way, you can save controller type to thread storage. Pseudocode: protected override void OnActionExecuting(ActionExecutingContext filterContext) { if (!Thread.LocalStorage.Contains("root_controller")) Thread.LocalStorage["root_controller"] = filterContext.ActionDescriptor .ControllerDescriptor.ControllerType; } Just an idea. I'm sure thread local storage is available in C#. The key idea here is that you save it only for first request, thus it's always root controller.
