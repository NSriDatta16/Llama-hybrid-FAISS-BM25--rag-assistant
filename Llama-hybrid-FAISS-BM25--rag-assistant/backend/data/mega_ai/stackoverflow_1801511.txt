[site]: stackoverflow
[post_id]: 1801511
[parent_id]: 1801360
[tags]: 
I know you're doing this for a class / practice, so this may not be relevant, but consider that having the rental history for things is often very useful. Because of this, you may not want to delete the rented records, but instead just mark the item as returned. Consider: TABLE RentalTransaction: RentalTransactionID integer PK NOT NULL CustomerID integer FK NOT NULL RentedOn datetime NOT NULL DueDate datetime NOT NULL TABLE RentalItems: RentedID integer PK NOT NULL RentalTransactionID integer FK NOT NULL RentedItemID integer FK NOT NULL RentedQty integer NOT NULL RentalRetuned datetime NULL You can see if any individual item is out or not by if it's RentalReturned field is null or not. If it is nonull, then you know the item is back, and now you can aggregate rental data to see how often it goes out, what the average length of rental is, etc, etc. You would have to build in some checks to make sure you weren't renting more copies of an item than you actually have and other such things, but I think this is overall a more flexible start to a schema. It may also be overly complicated for what you're doing, but I wanted to at least bring the idea up.
