[site]: stackoverflow
[post_id]: 827465
[parent_id]: 826981
[tags]: 
Javier's answer which has the owasp link is a good start. There are a few more things you can do more: Regarding SQL injection attacks, you can write a function that will remove common SQL statements from the input like " DROP " or "DELETE * WHERE", like this: *$sqlarray = array( " DROP ","or 1=1","union select","SELECT * FROM","select host","create table","FROM users","users WHERE");* Then write the function that will check your input against this array. Make sure any of the stuff inside the $sqlarray won't be common input from your users. (Don't forget to use strtolower on this, thanks lou). I'm not sure if memcache works with PHP 4 but you can put in place some spam protection with memcache by only allowing a certain remote IP access to the process.php page X amount of times in Y time period. Privileges is important. If you only need insert privileges (say, order processing), then you should log into the database on the order process page with a user that only has insert and maybe select privileges. This means that even if a SQL injection got through, they could only perform INSERT / SELECT queries and not delete or restructuring. Put important php processing files in a directory such as /include. Then disallow all IPs access to that /include directory. Put a salted MD5 with the user's agent + remoteip + your salt in the user's session, and make it verify on every page load that the correct MD5 is in their cookie. Disallow certain headers ( http://www.owasp.org/index.php/Testing_for_HTTP_Methods_and_XST ) . Disallow PUT(If you dont need file uploads)/TRACE/CONNECT/DELETE headers.
