[site]: stackoverflow
[post_id]: 4053046
[parent_id]: 4052837
[tags]: 
This feels more like a confidence issue. Which is normal - this stuff is hard. Programming demands perfection and precognition to be done the best, and to my knowledge no member of the human race has this. I've been trying to improve my abilities to design something in an OO way (albeit in C++, but many of the same principles apply to other OO languages), and here's the steps I've taken: Maybe spend some time getting used to the ideas/methods of refactoring. Refactoring is an idea that 'you can change an OO design if its not correct, or to make it better.' Really, you can - which means that if you messed up, you can go back and fix it . Books on refactoring talk about techniques to make this easier. I found reading that book helped me realize that there are ways to fix mistakes you make, and I found it eased my design fears. It doesn't mean you do a bad design, but it does mean you have a bit of a safety net and you can go back and fix it. You can only design to the best of your ability, and no more. So don't fret if you have to go back and fix it. Robert Martin's tomes/writings on OO design are things I've found helpful. I've been reading through his Designing Object-Oriented C++ Applications Using the Booch Method book, and while its old, it goes through case studies on designing complex OO systems in a very methodical, step-by-step way. His newer books, I've found, are helpful in that regard too, but tend to present the same material in a more terse fashion. Work with colleagues on ideas to improve OO designs.
