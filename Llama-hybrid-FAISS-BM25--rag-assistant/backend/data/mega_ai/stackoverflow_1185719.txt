[site]: stackoverflow
[post_id]: 1185719
[parent_id]: 1173239
[tags]: 
Dealing with missing values is a methodical question that has to do with the actual meaning of the data. Several methods you can use (detailed post on my blog ): Ignore the data row. This is usually done when the class label is missing (assuming you data mining goal is classification), or many attributes are missing from the row (not just one). However you'll obviously get poor performance if the percentage of such rows is high Use a global constant to fill in for missing values. Like "unknown", "N/A" or minus infinity. This is used because sometimes is just doesnt make sense to try and predict the missing value. For example if you have a DB if, say, college candidates and state of residence is missing for some, filling it in doesn't make much sense... Use attribute mean . For example if the average income of a US family is X you can use that value to replace missing income values. Use attribute mean for all samples belonging to the same class . Lets say you have a cars pricing DB that, among other things, classifies cars to "Luxury" and "Low budget" and you're dealing with missing values in the cost field. Replacing missing cost of a luxury car with the average cost of all luxury cars is probably more accurate then the value you'd get if you factor in the low budget cars Use data mining algorithm to predict the value . The value can be determined using regression, inference based tools using Baysian formalism , decision trees, clustering algorithms used to generate input for step method #4 (K-Mean\Median etc.) I'd suggest looking into regression and decision trees first (ID3 tree generation) as they're relatively easy and there are plenty of examples on the net. As for packages, if you can afford it and you're in the Microsoft world look at SQL Server Analysis Services (SSAS for short) that implement most of the mentioned above. Here are some links to free data minning software packages: WEKA - http://www.cs.waikato.ac.nz/ml/weka/index.html ORANGE - http://www.ailab.si/orange TANAGRA - http://eric.univ-lyon2.fr/~ricco/tanagra/en/tanagra.html Although not C# he's a pretty good intro to decision trees and baysian learning (using Ruby): http://www.igvita.com/2007/04/16/decision-tree-learning-in-ruby/ http://www.igvita.com/2007/05/23/bayes-classification-in-ruby/ There's also this Ruby library that I find very useful (also for learning purposes): http://ai4r.rubyforge.org/machineLearning.html There should be plenty of samples for these algorithms online in any language so I'm sure you'll easily find C# stuff too... Edited: Forgot this in my original post. This is a definately MUST HAVE if you're playing with data mining... Download Microsoft SQL Server 2008 Data Mining Add-ins for Microsoft Office 2007 (It requires SQL Server Analysis Services - SSAS - which isn't free but you can download a trial). This will allow you to easily play and try out the different techniques in Excel before you go and implement this stuff yourself. Then again, since you're in the Microsoft ecosystem, you might even decide to go for an SSAS based solution and count on the SQL Server guys to do it for ya :)
