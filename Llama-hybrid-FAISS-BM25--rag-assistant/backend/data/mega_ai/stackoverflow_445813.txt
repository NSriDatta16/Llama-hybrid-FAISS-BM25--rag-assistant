[site]: stackoverflow
[post_id]: 445813
[parent_id]: 445749
[tags]: 
You could do variable length integer encoding. The old method from years ago was to use the high bit of each byte to denote that the integer continues to another byte. So you lose one bit per byte, but gain small integers. This is mostly useful in persistent storage where every last byte counts. Example: Assume we are dealing with unsigned integers, we would have int binary 0 00000000 1 00000001 ... 127 01111111 128 00000001 10000000 129 00000001 10000001 ... 255 00000001 11111111 256 00000010 10000000 ... 16383 01111111 11111111 16384 00000001 10000000 10000000 so 0-127 take 1 byte and 128-16383 takes 2 bytes, etc... For more complex ways of doing this check out this page
