[site]: stackoverflow
[post_id]: 3795845
[parent_id]: 3795693
[tags]: 
Let’s use a regular expression! var input = "A B C D TESTTEST BLA BLA TEST TEST2"; var output = Regex.Replace(input, @" +", m => m.Length == 2 ? " &nbsp;" : m.Length % 2 == 1 ? " &nbsp;".Repeat(m.Length / 2) + " " : " &nbsp;".Repeat(m.Length / 2 - 1) + "&nbsp; "); This uses a string.Repeat extension method I wrote: /// /// Concatenates the specified number of repetitions of the current string. /// /// The string to be repeated. /// The number of times to repeat the string. /// A concatenated string containing the original string the specified number of times. public static string Repeat(this string input, int numTimes) { if (numTimes == 0) return ""; if (numTimes == 1) return input; if (numTimes == 2) return input + input; var sb = new StringBuilder(); for (int i = 0; i By the way, if by “saving space” you are referring to bandwidth / storage space, you can make this even more compact by using "\xa0" instead of "&nbsp;" , which is equivalent in HTML.
