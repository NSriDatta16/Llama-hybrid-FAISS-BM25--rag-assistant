[site]: stackoverflow
[post_id]: 1197918
[parent_id]: 1148820
[tags]: 
Best one I've seen so far, was the mrand.c line comment on the Debian SSL packages, because purify complained on the use of uninitialized data. This was not a code bug per-se, but more of a refactoring bug, it was introduced by a maintener by commenting a line of code. The line that was commented was a call to a function that was there to provide entropy to the key generations, but becouse it used uninitialized data to do this, valgrind complained. The maintainer e-mail'ed the SSL mailing list asking if it was ok to comment this line, as all it was doing was adding some random data, someone said it was safe, and the line was commented, leaving all SSL key's generated by the debian ssl library unsafe. This went on for several years, and was only discovered by mistake when Luciano Bello was creating hundreds of keys for a college project and noticed several key collisions. This bugs are the real threat, they go on for years, and how do you test that a PRNG is really random ? (source: dilbert.com ) The exact line was: md_rand.c MD_Update(&m,buf,j); /* purify complains */ You can read the all about this amazing bug in here: link text
