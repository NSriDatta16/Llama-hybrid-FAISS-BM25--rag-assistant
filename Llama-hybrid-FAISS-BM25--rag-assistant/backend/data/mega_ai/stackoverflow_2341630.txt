[site]: stackoverflow
[post_id]: 2341630
[parent_id]: 2341500
[tags]: 
I'm not sure the best thing to do is to do this on the client side. I would consider sending the paragraphs back to the server to do the work. But the work should be the same either way. First take all the content of a paragraph make sure to get it all it could be in a few nodes in the DOM. ( Read This ) Then you will need to make a parser that looks for your split characters while still ignoring them while they are in HTML entities. As an example the . in a href attribute should be ignored and not split. While doing the parsing you can keep a word count as well breaking working on the spaces. Make each sentence an object that contains the whole sentence and the word count. So you can push those objects into an array that represents the paragraph. Once done you can then iterate through the array and wrap any sentence in a span for highlighting with CSS if the word count reaches your threshold. The major problem is Tags that may be parts of two sentences such as the following. I'm typing in bold. NOW! what I've talked about doing doesn't deal with that but you could make the parser more complex later to support that. So a quick overview of my rambling parse through all the characters with a state machine that deals with counting words and splitting in the correct spot. On split add the data you collected to an array. When done iterate through the array outputting the newly wrapped sentences.
