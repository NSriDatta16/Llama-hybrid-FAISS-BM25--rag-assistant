[site]: stackoverflow
[post_id]: 3261960
[parent_id]: 3261408
[tags]: 
As all the other answers here just say "use jquery" without any further info/explanation/justification, it's probably worth actually looking at the other options you mentioned. Option#1 could be a little complicated as it requires you to wait until one script has download and run before fetching the next one (as you've only one script element). Option#2 is better as you can append a second script element to DOM before the first one has finished downloading, without affecting the download/execution. Option#3 recommended by everyone before me, is fine IF you're in a jQuery environment and already loading the (quite heavy) jQuery library for other uses - loading it for this alone is obviously superfluous. It's also worth noting that $.getScript() and $.ajax() both use eval() to execute the script. eval() is not "evil" in this context as it's a trusted source, but it can in my experience occasionally be slightly more difficult to debug eval()-ed code. Option#4 isn't possible afaik. Option#5 recommended by Nick Craver in the first OP comment is what I'd go with tbh - if the scripts are static as you say, caching will be more efficient than multiple HTTP requests. You could also look into using a cache.manifest for aggressive caching if you're especially concerned about bandwidth: http://www.html5rocks.com/tutorials/appcache/beginner/
