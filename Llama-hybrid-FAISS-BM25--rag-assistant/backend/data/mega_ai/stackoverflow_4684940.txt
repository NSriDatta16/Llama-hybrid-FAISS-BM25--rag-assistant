[site]: stackoverflow
[post_id]: 4684940
[parent_id]: 4684873
[tags]: 
From the ISO C99 standard (section 6.2.1, "Scopes of identifiers"): 3 If the declaration of a file scope identifier for an object or a function contains the storage-class specifier static, the identifier has internal linkage.22) In your example it's the a identifier that becomes static (i.e. the symbol in the object file is not exported). EDIT: For non-file scope static declarations (section 6.2.4, "Storage durations of objects") 3 An object whose identifier is declared with external or internal linkage, or with the storage-class specifier static has static storage duration. Its lifetime is the entire execution of the program and its stored value is initialized only once, prior to program startup. I take it this to mean that the array itself becomes static in this case, which makes sense, since the identifier would have invalid contents otherwise.
