[site]: datascience
[post_id]: 22896
[parent_id]: 20283
[tags]: 
You can do that, and you actually do that correctly. You simply misinterpret the results. For the target variable, you have 54289 instances encoded with 0 and 2430 encoded with 1 . The classifier does not find a proper separator and simply classifies everything to class 0 . The obtained score is not misleading. The score is obtained as a fraction of the correct prediction count divided by the total number of predictions. Since the only correctly predicted instance count is the count of the instances labeled with $0$, the formula is simply: $$\frac{\#zeroes}{\#zeroes + \#ones} = \frac{54289}{54289+2430} = 0.9571572136321163$$ This is clearly shown also in the confusion matrix which you plotted. On the other hand what you might probably do is to put some more weight on penaly errors. Thus you probably have to play with 'C' parameter from the svm learner, probably by increasing the value of 'C' to much bigger values. It is pretty hard to find a proper value for this parameter, a rule of thumb would be to use first values of the form $10^k$, where $k$ is an integer in $[-7,7]$ and refine around good values.
