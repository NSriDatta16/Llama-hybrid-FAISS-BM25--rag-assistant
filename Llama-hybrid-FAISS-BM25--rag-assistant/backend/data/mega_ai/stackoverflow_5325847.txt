[site]: stackoverflow
[post_id]: 5325847
[parent_id]: 5325774
[tags]: 
You're close. You just use the success callback as usual (see the ajax docs), not a special one: $.ajax({ url: "http://localhost:3000/application/1/contact_us.json?jsonpcallback=?"+data_string, dataType: "jsonp", type : 'post', processData: false, crossDomain: true, contentType: "application/json", jsonp: false, success: function(data) { // Use data here } }); Also, your code: jsonpresponse: result() ...would call the result function and then use its return value for the jsonpresponse property of the ajax call. If you want to use a separate function, that's fine, but you don't include the () , so: $.ajax({ url: "http://localhost:3000/application/1/contact_us.json?jsonpcallback=?"+data_string, dataType: "jsonp", type : 'post', processData: false, crossDomain: true, contentType: "application/json", jsonp: false, success: result }); function result(data) { // use `data` here } Also, I'm pretty sure you don't need/want the jsonp parameter if you use success , so: $.ajax({ url: "http://localhost:3000/application/1/contact_us.json?jsonpcallback=?"+data_string, dataType: "jsonp", type : 'post', processData: false, crossDomain: true, contentType: "application/json", success: result }); function result(data) { // use `data` here } Finally: Are you sure you want to set contentType ? That relates to the content being sent to the server, not the content being received from it. If you're really posting JSON-encoded data to the server, great, you're fine; but it looks like you're using jQuery's serialize function, which will not produce JSON (it produces a URL-encoded data string). So you probably want to remove contentType as well, both from the call and from the ajaxSetup call.
