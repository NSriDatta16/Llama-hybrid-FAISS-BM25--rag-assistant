[site]: stackoverflow
[post_id]: 5050400
[parent_id]: 5001682
[tags]: 
Activity doesn't free resources until it's finished. But in most cases it mustn't be a problem for you. In my opinion, you shouldn't add your own resource management and make your code complicated in most cases. But if you really think that your app can be out of memory, you should check it with something like MAT . Problems with memory may be caused by memory leaks, not heavy memory usage. Eventually, when you're absolutely sure that you have to do something to reduce memory usage, you can do some memory optimization. For example, you can save memory-consuming objects (e.g. large images) to local storage in onStop() and load them in onStart() . I think using onPause() / onResume() for this purpose is a bad idea, because Activity is partially or even fully visible. In theory, you can even destroy all your widgets in onStop() and restore them in onStart() , but it can make your app too slow. And, of course, in this case state saving must be implemented by you. Finishing activities may seem to be a good idea, but I think it's not. Firstly it makes your work slower. Secondly you must manage activity stack and state of activities yourself. For example, Activity A starts Activity B. So, Activity B must know what to do when user presses Back button. When user presses back button you should start Activity A and restore its state. But what if user terminates this app. In this case you must initialize Activity A with its default state. So, you have to implement a lot of additional logic. In conclusion I'll repeat the main idea one more time: don't optimize memory usage if you aren't absolutely sure you have to!
