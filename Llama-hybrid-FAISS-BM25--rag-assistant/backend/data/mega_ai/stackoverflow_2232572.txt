[site]: stackoverflow
[post_id]: 2232572
[parent_id]: 2230395
[tags]: 
EDIT : I reproduced the steps and it all works perfectly fine. Make sure FlashIDE finds your class (by clicking on the green tick beside the path). Also double check you don't have any other symbol by the same name that messes it up (stupid but common). Old answer : It's all a bit confusing by having definitions in the Library and Linking them to scripts. If you code using pure Actionscript, the same error message will appear if you extend a class requiring constructor arguments without invoking " super(*arguments*) " from the extended class. The issue is quite obvious, since all the inherited constructors need to be called at the instantiation of the object, any missing arguments will fail this to happen. will work : class Citroen() -> super(4) -> extends class Car(wheels:int) -> 4 wheels class Citroen() -> extends class Car(wheels:int=2) -> at least 2 wheels if not specified class Citroen(wheels:int) -> super(wheels) -> extends class Car(wheels:int) -> number of wheels to be specified on instantiation will not work : class Volvo() -> extends class Car(wheels:int) -> no wheels ever :P Now I guess if you add a class definition to Symbol in the library, you implicitly allow this symbol to be instantiated by dragging it to the stage within Flash IDE without defining its constructor arguments (even though you specifically won't do it). So in theory, this will result in the same thing as explained previously, throwing a '1203: No default constructor found in base class' Try this : in your base class add default values to all the arguments in the constructor (e.g. name:String = 'me', age:int = 99 ). This will allow you to extend the class (by subclassing in from the Library) without passing any arguments. Hopefully this will help the compiler allow you compile. In case you really want to enforce arguments to be passed, I would suggest you do it the other way around by instantiating and adding the Symbol defined in Flash IDE's library to your TextPanel class ... Hope it helps a bit ; )
