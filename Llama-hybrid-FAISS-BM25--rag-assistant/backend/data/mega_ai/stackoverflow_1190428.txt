[site]: stackoverflow
[post_id]: 1190428
[parent_id]: 1190206
[tags]: 
I would use the Microthreads (Tasklets) of Stackless Python, if I had to use threads at all. A whole online game (massivly multiplayer) is build around Stackless and its multithreading principle -- since the original is just to slow for the massivly multiplayer property of the game. Threads in CPython are widely discouraged. One reason is the GIL -- a global interpreter lock -- that serializes threading for many parts of the execution. My experiance is, that it is really difficult to create fast applications this way. My example codings where all slower with threading -- with one core (but many waits for input should have made some performance boosts possible). With CPython, rather use seperate processes if possible.
