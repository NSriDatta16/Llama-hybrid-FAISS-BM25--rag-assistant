[site]: stackoverflow
[post_id]: 4357415
[parent_id]: 
[tags]: 
nHibernate - Objects or ObjectID's in classes

We are migrating a current C# application to use nHibernate. As nHibernate promotes a purely domain driven design can we add business objects as properties of classes or should be continue to use an ID. Let me illustrate this with an example; Take the following existing class. The Address (and children) are identified by their ID' only. public class Person { public int PersonID { get; set; } public string FirstName { get; set; } public string FirstName { get; set; } public int AddressID { get; set; } public List ChildrenIDs { get; set; } } When we convert the class to use nHibernate we would also like to take the opportunity to change the structure of the 'Person' class to better accommodate out needs. Hoping that nHibernate will take care of all the data retrieval 'under the hood' public class Person { public virtual int PersonID { get; private set; } public virtual string FirstName { get; set; } public virtual string FirstName { get; set; } public virtual AddressObject Address { get; set; } public virtual List Children { get; set; } } We now store an Address object and a List of Children objects against the Person. This is better for our business needs as we have all the information when accessing the class and we can move away from using ID's but instead using the underlying object. In this scenario, what would nHibernate persist for the Person.Address? Will it persist only the unique ID that is nominated for that object in the Person table? What about ChildrenObject?
