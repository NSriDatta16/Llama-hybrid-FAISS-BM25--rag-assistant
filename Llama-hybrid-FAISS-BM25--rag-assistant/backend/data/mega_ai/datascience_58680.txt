[site]: datascience
[post_id]: 58680
[parent_id]: 58670
[tags]: 
You can set the number of threads by nthread parameter in XGBClassifier or XGBRegressor import time import numpy as np from sklearn.datasets import load_boston import xgboost as xgb num_threads = [1,2,3,4,5,6,8,16,32,64] for n in num_threads: start = time.time() model = xgb.XGBRegressor(objective='reg:squarederror',nthread=n) model.fit(X, y) elapsed = time.time() - start print(n, round(elapsed,3)) results.append(elapsed) The output after execution of this code is 1 0.059 2 0.071 3 0.063 4 0.094 5 0.075 6 0.078 8 0.09 16 0.099 32 0.157 64 0.235
