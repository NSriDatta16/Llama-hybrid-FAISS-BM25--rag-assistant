[site]: stackoverflow
[post_id]: 5473855
[parent_id]: 5422432
[tags]: 
Here is a patch to inet.py that adds the capture date of the 1st fragment to the defragmented packet. There is probably cleaner solutions, such as modifying Packet.copy() method and some others, but hey, it fits the bill ... *** inet.py 2011-03-29 14:01:19.000000000 +0000 --- inet.py.orig 2011-03-29 07:59:02.000000000 +0000 *************** *** 846,856 **** lastp = lst[-1] if p.frag > 0 or lastp.flags & 1 != 0: # first or last fragment missing missfrag += lst - print "missing framgent!" continue ! # Keep 1st fragment capture time (as it is lost in subsequent copies during defragmentation) ! ptime = p.time ! p = p.copy() # copy() method do not copy time member (?) if Padding in p: del(p[Padding].underlayer.payload) ip = p[IP] --- 846,853 ---- lastp = lst[-1] if p.frag > 0 or lastp.flags & 1 != 0: # first or last fragment missing missfrag += lst continue ! p = p.copy() if Padding in p: del(p[Padding].underlayer.payload) ip = p[IP] *************** *** 878,892 **** del(ip.len) p = p/txt p._defrag_pos = max(x._defrag_pos for x in lst) - # Put back time in packet - p.time= ptime defrag.append(p) defrag2=[] for p in defrag: q = p.__class__(str(p)) q._defrag_pos = p._defrag_pos - # Put back time in packet - q.time = p.time defrag2.append(q) final += defrag2 final += missfrag --- 875,885 ----
