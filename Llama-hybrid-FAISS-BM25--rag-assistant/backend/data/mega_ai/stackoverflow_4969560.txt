[site]: stackoverflow
[post_id]: 4969560
[parent_id]: 2981270
[tags]: 
Just for the sake of completeness, Chinjoo's SQL statement would likely be something like this: mySqlQueries.insertChatUser = "insert into ChatUsers (UserName, Password, FirstName, LastName, sex) values (?,?,?,?,?);"; This is known as a parameterized insert where each question mark represents one of his parameters. In this simple example the order of the parameters in the parameter collection in code must match the order of the column names in the SQL statement. While less elegant than using a function, the fix for his null problem would look something like this for one of his parameters: OdbcParameter LastName = new OdbcParameter("@LastName", u.LastName); is replaced with // if the value is "null" return DBNull, else just the value OdbcParameter LastName = new OdbcParameter("@LastName", (u.LastName == null) ? System.DBNull.Value : (object)u.LastName); At least in my code (which is slightly different) the inner cast to type object is required since otherwise the compiler isn't sure what type the ?: operator should return. Hope this helps anyone who is relatively new to parameterization, etc. No criticism of Chinjoo implied at all--his posting helped me out! Just thought I'd share for the less-experienced. I'm by no means expert so take everything I say with a grain of salt.
