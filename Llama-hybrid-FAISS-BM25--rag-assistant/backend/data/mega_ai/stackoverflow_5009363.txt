[site]: stackoverflow
[post_id]: 5009363
[parent_id]: 
[tags]: 
Entity is not weaved. Eclipselink 2.1 + Dynamic Weaving

I have a Java EE application that is running on tomcat with a couple of entity classes and using eclipselink 2.1 and jpa 2.0. The entities are EmailNotification and EmailNotificationQueueRow. @Entity public class EmailNotification implements Serializable, IEntity { private static final long serialVersionUID = 1L; @Id @GeneratedValue(strategy = GenerationType.AUTO, generator = "emailGen") @SequenceGenerator(name = "emailGen", sequenceName = "SQ_EMAIL_NOTIFICATIONS", allocationSize=1) @Basic(optional = false) @Column(name = "EMAIL_ID") private Integer emailId; @Basic(optional = false) @Column(name = "EMAIL_SUBJECT") private String emailSubject; @Basic(optional = false) @Column(name = "EMAIL_BODY") private String emailBody; @Basic(optional = false) @Column(name = "SENT_FROM_EMAIL_ADDRESS") private String sentFromEmailAddress; @Column(name = "SEND_TO_ORG_ID") private Integer sendToOrgId; @Column(name = "SEND_TO_EMAIL_ADDRESS") private String sendToEmailAddress; @Column(name = "CARBON_COPY_ORG_ID") private Integer carbonCopyOrgId; @Column(name = "CARBON_COPY_EMAIL_ADDRESS") private String carbonCopyEmailAddress; @Column(name = "BCC_ORG_ID") private Integer bccOrgId; @Column(name = "BCC_EMAIL_ADDRESS") private String bccEmailAddress; @Column(name = "PROJECT_ID") private Integer projectId; //getters and setters } @Entity public class EmailNotificationQueueRow implements Serializable, IEntity { private static final long serialVersionUID = 1L; @Id @Basic(optional = false) @Column(name = "EMAIL_QUEUE_ID") private Integer emailQueueId; @Basic(optional = false) @Column(name = "EMAIL_ID") private int emailId; @Basic(optional = false) @Column(name = "REQUEST_DATE") @Temporal(TemporalType.TIMESTAMP) private Date requestDate; @Basic(optional = false) @Column(name = "MESSAGE_SENT_FLAG") private String messageSentFlag; @Column(name = "MESSAGE_SENT_DATE") @Temporal(TemporalType.TIMESTAMP) private Date messageSentDate; @JoinColumn(name = "EMAIL_ID", referencedColumnName = "EMAIL_ID", updatable = false, insertable = false) @OneToOne(fetch = FetchType.LAZY) private EmailNotification emailNotification; //getters and setters } Whenever I set the relationship of the emailNotification variable to FetchType.LAZY (as above) the class is not woven. It is registered for weaving but never is. The log is below. The EmailNotification entity is weaved but not the EmailNotificationQueueRow entity. Any ideas? [EL Config]: 2011-02-15 14:21:13.642--ServerSession(1191324)--Thread(Thread[main,5,main]) --The access type for the persistent class [class persistence.model.EmailNotification] is set to [FIELD]. [EL Config]: 2011-02-15 14:21:13.674--ServerSession(1191324)--Thread(Thread[main,5,main]) --The access type for the persistent class [class persistence.model.EmailNotificationQueueRow] is set to [FIELD]. [EL Config]: 2011-02-15 14:21:13.674--ServerSession(1191324)--Thread(Thread[main,5,main]) --The target entity (reference) class for the one to one mapping element [field emailNotification] is being defaulted to: class persistence.model.EmailNotification. [EL Config]: 2011-02-15 14:21:13.689--ServerSession(1191324)--Thread(Thread[main,5,main]) --The alias name for the entity class [class persistence.model.EmailNotification] is being defaulted to: EmailNotification. [EL Config]: 2011-02-15 14:21:13.72--ServerSession(1191324)--Thread(Thread[main,5,main]) --The alias name for the entity class [class persistence.model.EmailNotificationQueueRow] is being defaulted to: EmailNotificationQueueRow. [EL Finer]: 2011-02-15 14:21:13.736--ServerSession(1191324)--Thread(Thread[main,5,main]) --Class [persistence.model.EmailNotification] registered to be processed by weaver. [EL Finer]: 2011-02-15 14:21:13.799--ServerSession(1191324)--Thread(Thread[main,5,main]) --Class [persistence.model.EmailNotificationQueueRow] registered to be processed by weaver. [EL Finest]: 2011-02-15 14:21:13.799--ServerSession(1191324)--Thread(Thread[main,5,main]) --End predeploying Persistence Unit iDMS_Persistence_Unit; session file:/C:/idms/build/web/WEB-INF/classes/_iDMS_Persistence_Unit; state Predeployed; factoryCount 1 [EL Finest]: 2011-02-15 14:21:13.908--ServerSession(1191324)--Thread(Thread[main,5,main]) --Begin weaver class transformer processing class [persistence/model/EmailNotification]. [EL Finest]: 2011-02-15 14:21:13.924--ServerSession(1191324)--Thread(Thread[main,5,main]) --Weaved persistence (PersistenceEntity) [persistence/model/EmailNotification]. [EL Finest]: 2011-02-15 14:21:13.924--ServerSession(1191324)--Thread(Thread[main,5,main]) --Weaved change tracking (ChangeTracker) [persistence/model/EmailNotification]. [EL Finest]: 2011-02-15 14:21:13.986--ServerSession(1191324)--Thread(Thread[main,5,main]) --Weaved fetch groups (FetchGroupTracker) [persistence/model/EmailNotification]. [EL Finest]: 2011-02-15 14:21:13.986--ServerSession(1191324)--Thread(Thread[main,5,main]) --End weaver class transformer processing class [persistence/model/EmailNotification]. persistence.xml org.eclipse.persistence.jpa.PersistenceProvider jdbc/dms persistence.model.EmailNotification persistence.model.EmailNotificationQueueRow true Update I am using the eclipselink javaagent string to start up tomcat. Also there are other OneToOne mappings that are lazy loaded in my project that get weaved. Its only this one class (EmailNotificationQueueRow) that doesn't get weaved.
