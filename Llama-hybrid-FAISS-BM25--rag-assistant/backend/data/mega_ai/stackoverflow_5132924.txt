[site]: stackoverflow
[post_id]: 5132924
[parent_id]: 
[tags]: 
Trying to create a vector of COORD, causes linking error

my code is: #pragma once #include "stdafx.h" #include #include "field.h" class output { void putAtLocation(COORD, char chIcon); //currently this outputs to console static std::vector m_vsOutputBuffer; public: output(void); static void addToken(COORD); void drawTokens(); ~output(void); }; and the linker error is: output.obj : error LNK2001: unresolved external symbol "private: static class std::vector > output::m_vsOutputBuffer" (?m_vsOutputBuffer@output@@0V?$vector@U_COORD@@V?$allocator@U_COORD@@@std@@@std@@A) this must be the problem line: static std::vector m_vsOutputBuffer; I've been at this for hours stuck. I finally noticed that changing COORD to int causes the linker error to go away. I've read that it's(linker errors) are usually caused by dependency issues. But here it just changing a TYPE . I've also read it can be caused by using a function in a way it wasn't supposed to be. I figure it has to be the way is handling COORD s; or something about COORD S is forward declared, or referenced in output.cpp properly. Edit: all changing to int did was make compiler errors that caused it never to hit the linker. now I am back to nothing and the cpp file: #include "stdafx.h" #include "output.h" #include static std::vector m_vsOutputBuffer; output::output(void) { } void output::addToken(COORD sCoordinate) //mark a coord in the buffer as needing refreshed { m_vsOutputBuffer.push_back(sCoordinate); } void output::drawTokens() //release the outputbuffer the the output window { for (unsigned int iii = 0; iii also I found this: http://www.cplusplus.com/forum/general/6111/ so I tried moving the static statement to the cpp file and it compiled and ran. but not its not a member variable. So I Need to somehow forward declare the vector.(before the declaration was also creating the static object in the header file.
