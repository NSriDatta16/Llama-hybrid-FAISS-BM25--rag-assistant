[site]: stackoverflow
[post_id]: 3276243
[parent_id]: 
[tags]: 
Multiple yields in sequence comprehension?

I'm trying to learn Scala and tried to write a sequence comprehension that extracts unigrams, bigrams and trigrams from a sequence. E.g., [1,2,3,4] should be transformed to (not Scala syntax) [1; _,1; _,_,1; 2; 1,2; _,1,2; 3; 2,3; 1,2,3; 4; 3,4; 2,3,4] In Scala 2.8, I tried the following: def trigrams(tokens : Seq[T]) = { var t1 : Option[T] = None var t2 : Option[T] = None for (t3 But this doesn't compile as, apparently , only one yield is allowed in a for -comprehension (no block statements either). Is there any other elegant way to get the same behavior, with only one pass over the data?
