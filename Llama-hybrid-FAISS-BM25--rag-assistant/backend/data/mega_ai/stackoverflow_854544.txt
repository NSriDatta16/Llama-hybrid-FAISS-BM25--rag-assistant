[site]: stackoverflow
[post_id]: 854544
[parent_id]: 845536
[tags]: 
UPDATE: using union-subclass is not supported via the fluent interface fluent-nhibernate provides. You'll have to use a regular hbm mapping file and add it. I too I'm trying do this with fluent NHibernate. I don't think it should be a problem mapping interfaces. You want to use an inheritance strategy, specifically the table-per-concrete-class strategy . Essentially, you create a mapping definition for the base class (in this case your interface) and specify how to NHibernate should deal with implementers by using union-subclass. So, for example, this should allow you to make polymorphic associations: ... Note how the Id is the same for all concrete implementers. NHibernate required this. Also, IAccountManager table doesn't actually exist. You can also try and leverage NHibernate's Implicit Polymorphism (documented below the table-per-concrete-class strategy) - but it has tons of limitations.
