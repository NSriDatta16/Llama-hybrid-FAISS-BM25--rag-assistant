[site]: stackoverflow
[post_id]: 310525
[parent_id]: 300595
[tags]: 
If you are using a framework like Cairngorm or similar that implements MVC, the straightforward approach is to update a "global" variable (via a Singleton object) thats bound to UI Component's (ie. titleWindow under main mxml or whatever) visible attribute. the variable will be updated to true during execute() and false when it reaches result or fault callback methods. You can add a "cancel" button that resets the variable to "false" but it doesnt mean the server will stop the async call. i dont know how to stop it and prevent it from returning a data from a cancelled method call. taking a quick look at the ASDoc, remoteobject does have a disconnect() method that discards all the pending request responders. im not sure if its the elegant/right way to do it if you do not want to set it for every web service call, you might wanna use a custom event chaining (see http://www.herrodius.com/blog/80 for ideas) so that you only have to set it once if you are calling single or multiple services.
