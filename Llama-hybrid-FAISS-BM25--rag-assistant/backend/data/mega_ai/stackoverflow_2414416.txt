[site]: stackoverflow
[post_id]: 2414416
[parent_id]: 2406780
[tags]: 
COBOL - 385 Chars $ cobc -free -x triforce.cob && echo 7| ./triforce PROGRAM-ID.P.DATA DIVISION.WORKING-STORAGE SECTION. 1 N PIC 9. 1 M PIC 99. 1 value '0100***********'. 2 I PIC 99. 2 K PIC 99. 2 V PIC X(22). 2 W PIC X(99). PROCEDURE DIVISION.ACCEPT N COMPUTE M=N*6 PERFORM M TIMES DISPLAY W(1:K)NO ADVANCING PERFORM N TIMES DISPLAY V(I:12)NO ADVANCING END-PERFORM DISPLAY '' ADD 2 TO I IF I = 13 MOVE 1 TO I ADD -1 TO N END-IF ADD 1 TO K END-PERFORM. K could be returned to outside the group level. An initial value of zero for a numeric with no VALUE clause is compiler-implementation dependent, as is an initial value of space for an alpha-numeric field (W has been cured of this, at no extra character cost). Moving K back would save two characters. -free is compiler-dependant as well, so I'm probably being over-picky.
