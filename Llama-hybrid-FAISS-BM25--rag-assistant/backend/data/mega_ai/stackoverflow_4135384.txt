[site]: stackoverflow
[post_id]: 4135384
[parent_id]: 4113426
[tags]: 
Hm. Maybe I understand this question not fully. But I think it might be worth mentioning these two things: Yes, Java is "just" code, yet you can surely separate code that creates your graphics from code that takes care of the events. It's actually considered "good practise" to do that. So "When you add events, you write in a separate class the coding for that event." To do that, you use let's say the JFrame class, but let it NOT implement ActionListener. Write your own ActionListener and make an instance of it a member of the JFrame. Then when ever you want to add event code, you put that in the ActionListener. I have no experience with this in Java, but I know NetBeans comes with a graphics editor , that might take care of the whole graphics coding in a drag-and-drop manner, and there is also Eclipse plugins that offer this feature. I am sure if you use any of those tools, you have graphics and event-handling separate by default as-well. Hope that helps. If more details needed even after googling, etc. let me know.
