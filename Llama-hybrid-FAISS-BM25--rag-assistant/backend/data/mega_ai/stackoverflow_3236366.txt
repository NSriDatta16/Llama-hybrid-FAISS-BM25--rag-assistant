[site]: stackoverflow
[post_id]: 3236366
[parent_id]: 3236246
[tags]: 
I'm going to guess that your performance hit comes from the row by row processing found here... while ( dbms_sql.fetch_rows(l_theCursor) > 0 ) loop l_separator := ''; for i in 1 .. l_colCnt loop dbms_sql.column_value( l_theCursor, i, l_columnValue ); utl_file.put( l_output, l_separator || l_columnValue ); l_separator := ','; end loop; utl_file.new_line( l_output ); end loop; I would encourage you to think about making this more set-based, it should increase the speed. A quick search on the old interwebs turned up this small blog posting . The author handles all his column seperation in a specific sql statement. I understand if you want to leave this generic so that you can run through all of the tables. If that's the case, I would encourage you to think about using some scripting rather than just PLSQL. There's a few examples out there... here's a good starting point: http://amardeepsidhu.com/blog/2007/06/16/spool-to-a-xls-excel-file/ http://amardeepsidhu.com/blog/2007/06/26/shell-script-to-spool-a-no-of-tables-into-xls-files/ ... those both deal with exports to excel, but you can easily convert to csv. Finally, if this is just an occasional one off thing, you might want to consider grabbing SQLDeveloper - with that (free) utility you can export any table from a simple right click menu. Hope that helps...
