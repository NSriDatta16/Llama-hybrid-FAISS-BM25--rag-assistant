[site]: stackoverflow
[post_id]: 1405616
[parent_id]: 1405091
[tags]: 
First, I don't agree that externals are evil. Although they aren't perfect. At the moment you're doing multiple checkouts to build up a working copy. If you used externals it would do exactly this, but automatically and consistently each time. If you point your externals to tags (and or specific revisions) within the target projects, you only need to tag the current project per release (as that tag would indicate exactly what external you were pointing to). You'd also have a record within your project of exactly when you changed your externals references to use a new version of a particular library. Externals aren't a panacea - and as the post shows there can be problems. I'm sure there's something better than externals, but I haven't found it yet (even conceptually). Certainly, the structure you're using can yield a great deal of information and control in your development process, using externals can add to that. However, the problems he had weren't fundamental corruption issues - a clean get would resolve everything, and are pretty rare (are you really unable to create a new branch of a library in your repo?). Points to consider - using recursive externals. I'm not sold on either the yes or no of this and tend to go with a pragmatic approach. Consider using piston as the article suggests, I've not seen it in action so can't really comment, it may do the same job as externals in a better way.
