[site]: stackoverflow
[post_id]: 2471771
[parent_id]: 2471706
[tags]: 
The most pragmatic option may be compositon: // build the core query var list = from i in dataContext.items // most of your query select ... // compose the value-filter if required switch(someOperator) { case "=": list = list.Where(row => row.value1 == row.value2); break; case ">": list = list.Where(row => row.value1 > row.value2); break; case " row.value1 If you need something re-usable, you're going to have to get your hands dirty building (and probably parsing) expression-trees ( System.Linq.Expression ). Not trivial.
