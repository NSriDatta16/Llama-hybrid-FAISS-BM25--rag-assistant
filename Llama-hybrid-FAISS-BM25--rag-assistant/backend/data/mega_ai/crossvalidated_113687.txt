[site]: crossvalidated
[post_id]: 113687
[parent_id]: 51629
[tags]: 
I have come across with the same issue and I found a link where it shows the graph you get when plotting the random forest model: http://statweb.stanford.edu/~jtaylo/courses/stats202/ensemble.html If you scroll down, there is the plot(model) graph and the graph with four curves: one for the oob error in black and three corresponding to the error rates for each class ( Setosa, Versicolor and Virginica in the example). This kind of fits with my case where I just have two classes, so I get a black curve (for the oob error) and two coloured curves for the two classes I've got. Now, the example matched red=Setosa, green=Versicolor and blue=Virginica. In my case, i've got a binary class: 0 and 1. To know which colour was which, I executed print(rf.model) and that gave me a confusion matrix with the class.error. There, I could sort of match that my class=0 was the red and the class=1 was the green colour. That seems a reasonable way to know which curve matches which class (if your curves are not very close together) and then you can use the command legend to improve the plot. Hope that helps.
