[site]: stackoverflow
[post_id]: 5182578
[parent_id]: 5029519
[tags]: 
The progress event is fired when some data has been downloaded, up to three times per second. The browser provides a list of ranges of available media through the buffered property; a thorough guide to this is available on Media buffering, seeking, and time ranges on MDN. Single load start If the user doesn't skip through the video, the file will be loaded in one TimeRange and the buffered property will have one range: ------------------------------------------------------ |=============| | ------------------------------------------------------ 0 5 21 | \_ this.buffered.end(0) | \_ this.buffered.start(0) To know how big that range is, read it this way: video.addEventListener('progress', function() { var loadedPercentage = this.buffered.end(0) / this.duration; ... // suggestion: don't use this, use what's below }); Multiple load starts If the user changes the playhead position while it's loading, a new request may be triggered. This causes the buffered property to be fragmented: ------------------------------------------------------ |===========| |===========| | ------------------------------------------------------ 1 5 15 19 21 | | | \_ this.buffered.end(1) | | \_ this.buffered.start(1) | \_ this.buffered.end(0) \_ this.buffered.start(0) Notice how the number of the buffer changes. Since it's no longer a contiguous loaded , the "percentage loaded" doesn't make a lot of sense anymore. You want to know what the current TimeRange is and how much of that is loaded. In this example you get where the load bar should start (since it's not 0) and where it should end. video.addEventListener('progress', function() { var range = 0; var bf = this.buffered; var time = this.currentTime; while(!(bf.start(range)
