[site]: stackoverflow
[post_id]: 1724742
[parent_id]: 1693681
[tags]: 
I wanted to come back with an answer to this after doing a lot more testing. It appears to me that SQL2008 is actually looking inside the TVF when performing the query plan and optimizing accordingly: For instance: select pr.* from LocalizedProducts('en-US') pr inner join LocalizedPhotos('en-US') ph on ph.ProductId=pr.Id where pr.SomeUnindexProperty= 5 This query needs to touch 4 tables: Products Products_Localization Photos Photos_Localization The way the query plan looks is that (let me see if I can format this): Product gets a Clustered Index Seek -- >> Products gets nested loop with Photos -->> nested loop Products_Localization - ->> nested loop Photos_Localization. Which is not what you would expect if the TVF would be a black box. The simple fact that Product gets an index SEEK would suggest to me that the query will not interpret blindly the entire TVF. I ran a lot of performance tests, and on average the "localization" TVF are between 50% - 100% slower than using direct table-queries, but that would be expected as twice as many tables are involved in the TVFs than in the normal queries.
