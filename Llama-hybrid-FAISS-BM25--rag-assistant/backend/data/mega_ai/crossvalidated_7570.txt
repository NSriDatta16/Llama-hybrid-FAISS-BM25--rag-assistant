[site]: crossvalidated
[post_id]: 7570
[parent_id]: 6886
[tags]: 
If we are talking about, for example, a neural network that is using back-propagation to learn, then a better way of thinking about this is that you are trying to set a,b,c,d,e using the neural network. Your fitness function is fine, but that would be what your neural network is optimizing (a single output). You don't select a,b,c,d,e, you use a method like back-propagation of errors to set these for you. That's normally the point of using the neural network (not having to solve for the a,b,c,d,e coefficients yourself). If, on the other hand, you're really convinced you don't want to use the iterative approach, you might look at the method of Dr. Hu of Southern Illinios University (Carbondale), who developed a non-iterative approach that lets you directly solve for the neural network coefficients. Here's an article on it: article in 1996 Proceedings of World Congress on Neural Networks Myself, I would use your fitness function as the (single) output you're training the network to optimize, and use back-propagation (supported by many open-source neural network simulations) to find the input coefficients. But Hu's approach (above) is workable if for some reason you don't want to use the iterative approach to find them.
