[site]: stackoverflow
[post_id]: 4806738
[parent_id]: 
[tags]: 
Strange JQuery $.Ajax() behavior using JSONP datatype: How to fix?

This is a working JSON request: $.ajax({ type: "POST", url: "GetJSON", data: {}, contentType: "application/json; charset=utf-8", dataType: "json", success: function (j) { myFunctionName(j); } }); And another nearly identical JSONP request that also works: $.ajax({ type: "GET", url: "GetJSONP", data: {}, contentType: "application/json; charset=utf-8", dataType: "jsonp", success: function (j) { myFunctionName(j); } }); Now if you swap out success: for a jsonpCallback: on the second request, it calls the function myFunctionName twice. The result from the server is myFunctionName( [jsondata] ) where [jsondata] is the json encoded data. $.ajax({ type: "GET", url: "GetJSONP", data: {}, contentType: "application/json; charset=utf-8", dataType: "jsonp", jsonpCallback: "myFunctionName" }); What am I doing wrong in the third code example that calls myFunctionName twice? Answer: In ASP.NET MVC 3, I used this: public class JsonpResult : ActionResult { public override void ExecuteResult( ControllerContext c) } And this: public static JsonpResult Jsonp(this Controller c, object d) { JsonpResult r = new JsonpResult(); r.Data = d; // r.ExecuteResult(c.ControllerContext); And this: public JsonpResult GetJSONP() { var service = new Service(); var data = service.Getdata(); return this.Jsonp(data); } The mistake is noted in the comments. Apparently ASP.NET MVC calls ExecuteResult for you, so calling it manually added the data twice to the result.
