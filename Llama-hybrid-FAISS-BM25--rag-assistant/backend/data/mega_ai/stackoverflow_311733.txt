[site]: stackoverflow
[post_id]: 311733
[parent_id]: 311714
[tags]: 
I'd consider starting by doing an "extract interface" refactoring on the tightly coupled pieces. For example, if using the CMS as a backing store, create an interface that can store things, then create a mediator or adapter class that knows about the CMS, but isolate the logic that knows about the storage mechanism details to just that class. Then, for testing, you can easily substitute an in-memory store or local-filesystem store that doesn't depend on the CMS being up. Consider using techniques like dependency injection (See StructureMap, Spring.Net, NInject) to simplify instantiation if a simple factory doesn't give you the flexibility you need.
