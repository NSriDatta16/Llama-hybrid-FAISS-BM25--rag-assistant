[site]: crossvalidated
[post_id]: 609115
[parent_id]: 608439
[tags]: 
Assume $X,Y,Z$ are centered and organized as follows: $$A=\begin{pmatrix} \mid &\mid &\mid \\ X &Y &Z \\ \mid &\mid &\mid \end{pmatrix}$$ And $$A = A B + E$$ Where $$B = \begin{pmatrix} 0 &\beta_{X\to Y} &\beta_{X\to Z}\\ \beta_{Y\to X} &0 & \beta_{Y\to Z}\\ \beta_{Z\to X} &\beta_{Z\to Y} & 0 \end{pmatrix}$$ The general problem statement is $$ \cases{ \min_B\|E\|_2^{2}=\min_B\|A\cdot (\mathbb{I}-B)\|_2^{2}\\ \mathrm{diag}(B)=0 } $$ Using Lagrange multipliers: $$ f = \|A\cdot (\mathbb{I}-B)\|_2^{2}-\lambda^\top \cdot \mathrm{diag}(B) $$ $$\frac{\partial f}{\partial B} = -(2\cdot A^\top \cdot A\cdot (\mathbb{I}-B)+\mathrm{diag}(\lambda))=0 $$ $$2\cdot A^\top \cdot A\cdot (B-\mathbb{I})=\mathrm{diag}(\lambda)$$ $$B=\frac12(A^\top \cdot A)^{-1}\cdot \mathrm{diag}(\lambda)+\mathbb{I}$$ Using our equality constraint: $$\mathrm{diag}(B)=0=\mathrm{diag}\left(\frac12(A^\top \cdot A)^{-1}\cdot \mathrm{diag}(\lambda)+\mathbb{I}\right)=\\ \frac12\mathrm{diag}\left((A^\top \cdot A)^{-1}\right)\cdot\mathrm{diag}(\lambda)+\mathrm{diag}(\mathbb{I})\\ \therefore \lambda_i=\frac{-2}{(A^\top \cdot A)^{-1}_{ii}} \therefore \mathrm{diag}(\lambda)=-2 \left( \mathbb I \odot (A^\top \cdot A)^{-1}\right)^{-1} $$ Plugging it back: $$B=\frac12(A^\top \cdot A)^{-1}\cdot \mathrm{diag}(\lambda)+\mathbb{I}\\ =\frac12(A^\top \cdot A)^{-1}\cdot -2 \left( \mathbb I \odot (A^\top \cdot A)^{-1}\right)^{-1}+\mathbb{I}\\ B=\mathbb{I}-(A^\top \cdot A)^{-1}\cdot \left( \mathbb I \odot (A^\top \cdot A)^{-1}\right)^{-1}\\$$ Call $n\Sigma = A^\top \cdot A,\Omega = \Sigma^{-1}, D_\Omega = \mathrm{diag}(\Omega)$ $$B = \mathbb{I} - \Omega\cdot D_\Omega^{-1}$$ Compare $B$ with the partial correlation matrix, $R=2\mathbb{I}-D_\Omega^{-1/2}\Omega\cdot D_\Omega^{-1/2}$ for some intuition You can check it is true with the following R code: # generate X, Y, Z as a 100x3 matrix A coef(lm2) # B[, 1] B[, 3] # -1.351588 -1.280748 coef(lm3) # B[, 1] B[, 2] # -1.0485396 -0.7682355 S # [,1] [,2] [,3] # [1,] 0.0000000 -1.351588 -1.0485396 # [2,] -0.7249205 0.000000 -0.7682355 # [3,] -0.9375626 -1.280748 0.0000000 I released a package that can help with this at https://github.com/bhvieira/avaols . You can install it simply doing (requires devtools ) # install.packages("devtools") devtools::install_github("bhvieira/avaols") Then you can simply do library(avaols) # generate X, Y, Z as a 100x3 matrix A = matrix(rnorm(300), ncol=3) # generate a 3x3 mixing matrix M M
