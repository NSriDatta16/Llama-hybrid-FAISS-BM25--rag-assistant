[site]: stackoverflow
[post_id]: 708786
[parent_id]: 
[tags]: 
c# object equality for database persistance

I want to learn how others cope with the following scenario. This is not homework or an assignment of any kind. The example classes have been created to better illustrate my question however it does reflect a real life scenario which we would like feedback on. We retrieve all data from the database and place it into an object. A object represents a single record and if multiple records exist in the database, we place the data into a List<> of the record object. Lets say we have the following classes; public class Employee { public bool _Modified; public string _FirstName; public string _LastName; public List _Address; } public class Employee_Address { public bool _Modified; public string _Address; public string _City; public string _State; } Please note that the Getters and Setters have been omitted from the classes for the sake of clarity. Before any code police accuse me of not using them, please note that have been left out for this example only. The database has a table for Employees and another for Employee Addresses. Conceptually, what we do is to create a List object that represents the data in the database tables. We do a deep clone of this object which we then bind to controls on the front end. We then have two objects (Orig and Final) representing data from the database. The user then makes changes to the "Final" object by creating, modifying, deleting records. We then want to persist these changes to the database. Obviously we want to be as elegant as possible, only editing, creating, deleting those records that require it. We ultimately want to compare the two List objects so that we can; See what properties have changed so that the changes can be persisted to the database. See what properties (records) no longer exist in the second List<> so that these records can be deleted from the database. See what new properties exist in the new List<> so that we can create these in the database. Who wants to get the ball rolling on how we can best achieve this. Keep in mind that we also need to drill down into the Employee_Address list to check for any changes, not just the top level properties. I hope I have made myself clear and look forward to any suggestions.
