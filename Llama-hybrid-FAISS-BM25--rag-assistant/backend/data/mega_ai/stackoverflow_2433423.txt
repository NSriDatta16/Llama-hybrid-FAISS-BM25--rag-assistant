[site]: stackoverflow
[post_id]: 2433423
[parent_id]: 2432956
[tags]: 
A message broker like Apache's ActiveMQ is an ideal solution here. The pipeline could be following: Application process that is responsible for handling HTTP requests generates replies quickly and sends low-priority, heavy tasks to AMQ queue. One or more another processes are subscribed to consume AMQ queue and do what is intended to do with these heavy tasks. The requirement of queue persistence is fulfilled out of the box since ActiveMQ stores messages that are not yet consumed in persistent storage. Furthermore it scales quite well since you're free to deploy multiple HTTP-apps, multiple consumer apps and AMQ itself on different machines each. We use something like this in our project written in Python utilizing STOMP as underlying communication protocol.
