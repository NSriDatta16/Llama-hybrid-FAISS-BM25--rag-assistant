[site]: stackoverflow
[post_id]: 1917672
[parent_id]: 1917639
[tags]: 
If you're searching for multiple files in the same directory structure, you should find all the files in that directory structure once, and then search through them in memory. There's no need to go to the file system again and again. EDIT: There's an elegant way of doing this, with LINQ - and the less elegant way, without. Here's the LINQ way: using System; using System.IO; using System.Linq; class Test { static void Main() { // This creates a lookup from filename to the set of // directories containing that file var textFiles = Directory.GetFiles("I:\\pax", "*.txt", SearchOption.AllDirectories) .ToLookup(file => Path.GetFileName(file), file => Path.GetDirectoryName(file)); string[] fileNames = File.ReadAllLines(@"c:\file.txt"); // Remove the quotes for your real code :) string targetDirectory = "C:\\" + "textBox1.Text" + @"\\N\\O\\"; foreach (string fileName in fileNames) { string tmp = fileName + ".txt"; foreach (string directory in textFiles[tmp]) { string source = Path.Combine(directory, tmp); string target = Path.Combine(targetDirectory, tmp); File.Copy(source, target); } } } } Let me know if you need the non-LINQ way. One thing to check before I do so though - this could copy multiple files over the top of each other. Is that really what you want to do? (Imagine that a.txt exists in multiple places, and "a" is in the file.)
