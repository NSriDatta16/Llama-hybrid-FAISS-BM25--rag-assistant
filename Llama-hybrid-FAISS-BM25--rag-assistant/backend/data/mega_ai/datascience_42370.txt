[site]: datascience
[post_id]: 42370
[parent_id]: 42127
[tags]: 
I would extract the beta coefficients (ß) from the model and insert them into the formula for calculating the probability (p) as described on Wikipedia p = exp(ß_0 + ß_1*x_1 + … + ß_n*x_n) / (1 + exp(ß_0 + ß_1*x_1 + … + ß_n*x_n)) . This formula is applied when you predict from the logistic regression model in R Setting type = "response" . In many regression models in R ß_0 is called Intercept and you can remove it from your model calculation by appending - 1 to your formula. You can also do transformations for example by using the log() function in your formula. Here is some examplary R-code mostly for what I previously described: #inspect the data for Times, log(Frequency) and Behavior11 if(!("ggplot2" %in% installed.packages()[,"Package"])) install.packages("ggplot2"); require(ggplot2); ggplot( data = datas ,aes(x = Times ,y = log(Frequency) ,color = factor(Behavior11))) + geom_point() + theme_bw(); #calculate logistic regression model for Behavior11 glm_B11 $coefficients["Times"])); (beta_logFrequency coefficients["log(Frequency)"])); #this is the formula to calculate (the probability of) Behavior11 B11_predicted_from_formula $Times + beta_logFrequency*log(datas$ Frequency)) / (1 + exp(beta_Times*datas $Times + beta_logFrequency*log(datas$ Frequency)); #the prediction of (the probability of) Behavior11 gives the same result B11_predicted_from_model
