[site]: crossvalidated
[post_id]: 301819
[parent_id]: 260808
[tags]: 
As Pedro says, the TE as defined in your equation has a sum over the possible states of the source, target past and target next value. And as he says, you: loop through all of the time series once to fill out the histograms for the PDF, and then sum over all of the possible states to compute the average log ratio. What I want to add is that the second step (summing over all possible states) could be done in an alternative fashion by summing over all of the $N-1$ samples (for time series length $N$, and an embedding length 1) as you begin to suggest, and as is done in our 2008 paper that Pedro cites. What is important to realise is that this does slightly change the maths. As Pedro notes, the maths as you have defined above is only correct for summing the log terms over all possible states; as you see for that option you multiply each log term by the probability of that state (as per equation (4) of that paper of ours). Alternatively, if you sum the log terms over the data samples at each time point $n$, then you instead multiply the log term (for each sample) by $1/(N-1)$ (where $N-1$ is the total number of samples you have from a time series of length $N$ when using an embedding history length of 1). The multipliers are different because you have several data points corresponding to each possible state combination. We show how to map between the first option (your equation above) and the second option (my equation following) in equations (5)-(8) of our paper above. $$ T_{Y \rightarrow X} = \sum_{n=1}^{N-1}{ \frac{1}{N-1} \log_2{\frac{p(x_{n+1}|x_n,y_n)}{p(x_{n+1}|x_n)}}} $$ Another key point is that only discrete/discretised/symbolic estimators allow you to do the first option (summing log terms over configurations) in code (and you could do the second option for them if you wanted to). But for continuous valued data (e.g. with kernel estimator or KSG), you do it in code by summing over every sample (the second option, but not the first). I clarified this in section 2.2.3 of my thesis .
