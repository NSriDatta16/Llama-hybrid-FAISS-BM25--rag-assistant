[site]: stackoverflow
[post_id]: 2195425
[parent_id]: 2191912
[tags]: 
Well, if you're ambitious and want to go out on a limb , I do it this way . Basically, I write what looks like a C# function to create the controls that I want at any point in time. I say "looks like" because it uses a special control structure, called Differential Execution, that allows it to be called in different modes. In Show mode, it does just that - create and place the controls. In Erase mode, it does the exact opposite, removing the controls it put there earlier. In Update mode, it does whatever has to be done to incrementally alter the set of controls from what it was to what is wanted. In Event mode, it processes UI input events, routing them to the proper control and doing what you want done. Why? You never have to write an event handler. You never have to create a variable to hold a control, or create a control ID. There is no limit to how many controls could potentially be on the screen, because when controls are not visible, they are not taking up storage. (And it automatically, and trivially, garbage collects controls.) A routine to paint what you want is way easier to write than one that paints, erases, incrementally updates, and handles events. Also, it handles conditionals, subroutines, loops, etc. to let you be really expressive with what you paint on the window, it lives in your code and has access to your data structure, and it automatically handles all kinds of data-binding with no coding effort. Our product has a lot of UI, with a zillion options. I couldn't do it any other way.
