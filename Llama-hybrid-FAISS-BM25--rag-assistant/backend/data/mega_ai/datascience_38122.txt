[site]: datascience
[post_id]: 38122
[parent_id]: 38119
[tags]: 
Pandas dataframes have many many more high level functions integrated right into the base classes that store the data for you. Some of the commandline tools can be pretty powerful for manipulating text efficiently (Perl in particular), but I would argue that the learning curve is quite steep and the interactive experience is not as friendly. For one thing, it isn't easy to simply get a glimpse of your data or create an attractive plot. While I admit that I am not a pro awk/sed or Perl user, I am pretty sure it will be a little less intuitive in those tools/languages to do something like this hypothetical computation, which involves numerical data and text: In [1]: import pandas as pd In [2]: import numpy as np # Create a DataFrame holding some data over a time range In [3]: df = pd.DataFrame({'A' : ['foo', 'bar', 'foo', 'bar', 'foo', 'bar', 'foo', 'foo']*4, 'B' : ['one', 'one', 'two', 'three', 'two', 'two', 'one', 'three']*4, 'C' : np.random.randn(32)}, index=pd.date_range('01.01.2018', periods=32)) In [4]: df.head() Out[4]: A B C 2018-01-01 foo one 0.965554 2018-01-02 bar one 0.053814 2018-01-03 foo two 1.075539 2018-01-04 bar three -0.999941 2018-01-05 foo two -1.940361 Now imagine we want to group the rows so we have just rows with column A contains foo in one table, and another with just the rows containing foo . From those two tables, we only care about column C . We want to compute the moving average over a 5 day time-frame. The moving average will leave some NaN values at the beginning, so we want to drop those time-steps. Oh, and we want to visualise that! In[5]: df.groupby('A')['C'].rolling(5).mean().dropna().plot(grid=True, legend=True) From that one line of code, we get this: The above also highlights the abundance of other powerful and specialised packages avavilable within the Python environment - here I used numpy in conjunction with Pandas. For manipulating text files, perhaps cleaning up scraped text and parsing large amounts of text using regular expressions, it might be faster to use one of the commandline options, but as soon as you want to do any data science, I would really recommend using some specialised tools, like Pandas.
