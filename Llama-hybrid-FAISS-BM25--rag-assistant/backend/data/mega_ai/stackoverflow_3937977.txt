[site]: stackoverflow
[post_id]: 3937977
[parent_id]: 3935768
[tags]: 
The following blog contains a complete solution this exact problem. Its actually a very elegant solution which I highly recommend. https://blog.maartenballiauw.be/post/2010/01/26/translating-routes-(aspnet-mvc-and-webforms).html Note to get it working for AREAs I had to add the following extension method to his "TranslatedRouteCollectionExtensions.cs" class: public static Route MapTranslatedRoute(this AreaRegistrationContext areaContext, string name, string url, object defaults, object routeValueTranslationProviders, bool setDetectedCulture) { TranslatedRoute route = new TranslatedRoute( url, new RouteValueDictionary(defaults), new RouteValueDictionary(routeValueTranslationProviders), setDetectedCulture, new MvcRouteHandler()); route.DataTokens["area"] = areaContext.AreaName; // disabling the namespace lookup fallback mechanism keeps this areas from accidentally picking up // controllers belonging to other areas bool useNamespaceFallback = (areaContext.Namespaces == null || areaContext.Namespaces.Count == 0); route.DataTokens["UseNamespaceFallback"] = useNamespaceFallback; areaContext.Routes.Add(route); return route; } However, even with this a translated route with an AREA can be read and interpreted the routes generated always seem to include an English AREA name but localized everything else. I was directed to a blog via the same question asked on the ASP.NET MVC Forums
