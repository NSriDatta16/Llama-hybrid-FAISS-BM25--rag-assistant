[site]: stackoverflow
[post_id]: 1588782
[parent_id]: 842530
[tags]: 
create or replace FUNCTION DROP_ALL_SCHEMA_OBJECTS RETURN NUMBER AS PRAGMA AUTONOMOUS_TRANSACTION; cursor c_get_objects is select object_type,'"'||object_name||'"'||decode(object_type,'TABLE' ,' cascade constraints',null) obj_name from user_objects where object_type in ('TABLE','VIEW','PACKAGE','SEQUENCE','SYNONYM', 'MATERIALIZED VIEW') order by object_type; cursor c_get_objects_type is select object_type, '"'||object_name||'"' obj_name from user_objects where object_type in ('TYPE'); BEGIN begin for object_rec in c_get_objects loop execute immediate ('drop '||object_rec.object_type||' ' ||object_rec.obj_name); end loop; for object_rec in c_get_objects_type loop begin execute immediate ('drop '||object_rec.object_type||' ' ||object_rec.obj_name); end; end loop; end; RETURN 0; END DROP_ALL_SCHEMA_OBJECTS; Create the above function (autonomous so DDL can be called via a function) then you can just: select DROP_ALL_SCHEMA_OBJECTS from dual; when you want to drop all your objects, make sure you dont try to drop the proc your running (i dont care about the procs thats why i dont have procs or functions in the object_type list) if you want to drop everything you need an anonymous block but i needed to be able to do this from a tool that only allowed ansi sql (not plsql) hence a stored proc. Enjoy.
