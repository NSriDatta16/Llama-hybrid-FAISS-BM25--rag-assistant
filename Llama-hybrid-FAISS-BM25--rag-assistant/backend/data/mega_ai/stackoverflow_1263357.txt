[site]: stackoverflow
[post_id]: 1263357
[parent_id]: 1263199
[tags]: 
The Spring Framework provides support for integration testing when using NUnit . The NUnit classes are located in the assembly Spring.Testing.NUnit.dll. In there are some classes that perform transaction management . These classes create and roll back a database transaction for each test . You simply write code that can assume the existence of a transaction. Whether or not this will actually work with Linq to SQL is another matter. Spring says this works with ORMs. SQL Server 2008 allows you to nest transactions, so in theory you could start a transaction, perform your test through the Linq to SQL classes, and then roll your transaction back. But I haven't tried it. Ryan Garaguay has an interesting article about this which uses TransactionScope and NUnit to roll back the database changes (although he is using SQLCommand and SQLConnection objects in his test code, rather than Linq)
