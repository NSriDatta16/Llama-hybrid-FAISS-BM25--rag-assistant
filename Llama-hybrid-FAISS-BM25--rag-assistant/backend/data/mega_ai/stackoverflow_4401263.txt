[site]: stackoverflow
[post_id]: 4401263
[parent_id]: 4361831
[tags]: 
the port modes are responsible in this case. you where using buffered I/O with the wait mode (which is on by default). in http, the client is responsible closing of the port when you've read all the server bytes. since you are basically using tcp directly, using insert port, you are responsible for also detecting the end of the request and closing the port when sufficient bytes have arrived. this can only be done in /lines or /no-wait when doing low-level tcp fun. Something that read and info? do for you. while [data: copy port][append out data] doesn't terminate until a timeout occurs (which is 30 seconds by default in REBOL). also, your request seems to be in error... try this: port: open/lines tcp://cdimage.ubuntu.com:80 insert port {HEAD /daily/current/natty-alternate-i386.iso HTTP/1.0 Accept: */* Connection: close User-Agent: REBOL View 2.7.7.3.1 Host: cdimage.ubuntu.com } out: form copy port block: parse out none ;rejoin [": ^/"] probe select block "Content-Length:" here it seems that adding /lines will prevent the wait. its probably related to how the http scheme handles the line mode on open. look around for REBOL port modes within the documentation and on the net its well explained all over the place. if you had used trace/net on, you'd realized that all the packets where received and that the interpreter was just still waiting. btw your code actually returned an error 400 in my tests.
