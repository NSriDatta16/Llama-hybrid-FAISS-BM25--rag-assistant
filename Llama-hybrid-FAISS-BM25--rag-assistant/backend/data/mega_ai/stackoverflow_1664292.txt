[site]: stackoverflow
[post_id]: 1664292
[parent_id]: 
[tags]: 
What does "evaluated only once" mean for chained comparisons in Python?

A friend brought this to my attention, and after I pointed out an oddity, we're both confused. Python's docs, say, and have said since at least 2.5.1 (haven't checked further back: Comparisons can be chained arbitrarily, e.g., x Our confusion lies in the meaning of "y is evaluated only once". Given a simple but contrived class: class Magic(object): def __init__(self, name, val): self.name = name self.val = val def __lt__(self, other): print("Magic: Called lt on {0}".format(self.name)) if self.val We can produce this result: >>> x = Magic("x", 0) >>> y = Magic("y", 5) >>> z = Magic("z", 10) >>> >>> if x >> This certainly looks like 'y' is, in a traditional sense "evaluated" twice -- once when x.__lt__(y) is called and performs a comparison on it, and once when y.__le__(z) is called. So with this in mind, what exactly do the Python docs mean when they say "y is evaluated only once"?
