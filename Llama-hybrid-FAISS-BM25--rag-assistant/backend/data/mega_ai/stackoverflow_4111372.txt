[site]: stackoverflow
[post_id]: 4111372
[parent_id]: 4111298
[tags]: 
10,000 structs shouldn't run out of memory, but just to make sure, I would first try turning your struct into a class such that it uses the heap instead of the stack. There is a strong possibility that doing that will fix your out of memory errors. An XML file stored in isolated storage might be a good way to go if your data is going to be updated even every once in a while. You could pull the cities from a web service and serialize those classes to the Application Store in isolated storage whenever they get updated. Also, I notice in the code samples that the cc array is not declared static. If you have a few instances of CityDists , then that could also be bogging down memory as the array is getting re-created every time a new CityDists class is created. Try declaring your array as static and initializing it in the static constructor: private static City[] cc = new City[10000]; static CityDists() { cc[2].name = "Lae, Papua New Guinea"; cc[2].lat = 123; cc[2].lon = 123; cc[3].name = "Rabaul, Papua New Guinea"; cc[3].lat = 123; cc[3].lon = 123; cc[4].name = "Angmagssalik, Greenland"; cc[4].lat = 123; cc[4].lon = 123; cc[5].name = "Angissoq, Greenland"; cc[5].lat = 123; cc[5].lon = 123; ...
