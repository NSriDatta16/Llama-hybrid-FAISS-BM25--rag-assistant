[site]: stackoverflow
[post_id]: 3383745
[parent_id]: 3383701
[tags]: 
Servlets are Java, umm, programs that run in a special environment for Web applications. They receive and handle Web requests, as you'd expect. Pretty much straight Java code plus a few conventions. Servlets have methods for digging out request parameters, and can connect a printer output stream to the output stream that will eventually be returned to the user's browser. JSP are Java Server Pages. That's HTML pages and a kind of preprocessor. Among the usual HTML tags, the preprocessor evaluates a kind of template/tag language. Essentially, you can write an HTML page but include Java code. The "preprocessor" translates your JSP into a servlet; the HTML tags and their contents become strings in the servlet's code. Since you mentioned PHP, yes, JSP looks roughly like (some) PHP code that has HTML mashed in. JSP is a very simple way to create Web pages with active Java content, roughly comparable to Microsoft's ASP. However, most of the Java community agree that the way JSP mixes HTML markup and code is an abomination that results in very unclean applications and also doesn't allow for specialization between Web designers and programmers. It's the same inelegance that "real" programmers like to bash PHP for. Thus, JSP have mostly fallen from grace, and have been supplanted by other solutions for mixing Web content and code. Most notable/successful in industry were the meanwhile "industry standard" Struts and Java Server Faces . However, lots of people feel that those, too, are horribly complicated, and so there's a plethora of different Web application frameworks for Java . Any of the keywords I've mentioned will lead you to other links on information. Exhaustingly complete information can be found in Oracle's documentation on J2EE but I can't recommend reading that as an introduction. It's frighteningly heavy, detailed and far-reaching. Do look instead at some of the modern 3rd party, preferrably open source frameworks, which I consider far less painful. I personally enoy Wicket but it's one of many and I know far too little of the alternatives to issue a valid recommendation.
