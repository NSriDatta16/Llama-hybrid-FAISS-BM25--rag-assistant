[site]: stackoverflow
[post_id]: 343534
[parent_id]: 343517
[tags]: 
Relative imports ( PEP 328 ) might help: eggs/ __init__.py foo.py bar.py # foo.py from __future__ import absolute_import from . import bar See How do you organize Python modules? for other options. EDIT: Yet another option is to use S.Lott's and Jim's suggestions i.e, restructure your package to factor out a eggs.foo part used by eggs.bar.a and use git to work on experimental branches (see Git Community Book ). Here's an example: $ git status # On branch master nothing to commit (working directory clean) [just to make sure that all is good] $ git checkout -b experimental Switched to a new branch "experimental" [work on experimental stuff] $ git commit -a [commit to experimental branch] $ git checkout master Switched to branch "master" [work on master branch] $ git commit -a To merge changes into master branch: $ git merge experimental See chapter Basic Branching and Merging from the above book.
