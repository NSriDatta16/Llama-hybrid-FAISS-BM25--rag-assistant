[site]: stackoverflow
[post_id]: 2467469
[parent_id]: 1401483
[tags]: 
I'm on the same track as you, trying to find out which will be my server side + client side development tool set for a huge internet site. As far as I have seen and read, as always, it depends on the kind of web application you need. There are people using different javascript frameworks, based on easy of use, declarative, object oriented, and the like. There are several things to consider: 1) Client side technology 1a) "Core" client side technology: frameworks 1b) UI client side technology enhancements 2) Server side technology For "core" javascript frameworks, you can find JQuery, MooTools (MIT license), ExtJS Core (MIT License) (not ExtJS: this is ExtJS Core + UI gadgets, and the later needs commercial license), Yahoo UI, etc. You can compare them in sites like this one: http://www.domassistant.com/slickspeed/ This test "somehow" compares different aspects of each of those "core" client javascript frameworks. What do you get from those frameworks? Most of them, allows you to be "cross-browser" compatible, and each one has several and different ways and syntax. Just a matter of testing and seeking the one you like most. So, with this, you just get a way to code for "everybrowser". Now, if you need "Widgets/Controls/UI gadgets", then, each "core" framework has its own UI related extension. Even, some of them, can interact with each other. I have read about implementations of ExtJS (not core, the one that comes with several good UI elements) can connect to jQuery. So, for client side you have to choose your "core" framework, and if you need UI, then, some UI associated with them. There are several IDEs that are compatible with this frameworks, one can be Aptana, Eclipse, Netbeans (latest version integrates very well with javascript) or in the Microsoft side Expression, Visual Studio Express or "Pro". Its also a fact that jQuery was included "as-is" and Supported by Microsoft and Nokia. So, jQuery will get more attention now, and more support, and more "public", I predict it will get a lot of attention and enhancements. They did not buy jQuery, they adhered to it as an Open Source included into VS solutions from now on. And will be very tight coupled with ASP.NET MVC, components and the like. Anyway, jQuery, as I said before, is not the only one and not necesarily the best. For Server side well, it depends on your knowledge: java, ASP.NET, whatever you feel comfortable. I hope you find this useful.
