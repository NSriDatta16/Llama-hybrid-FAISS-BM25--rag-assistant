[site]: stackoverflow
[post_id]: 2098869
[parent_id]: 2093534
[tags]: 
How can I dynamically connect the url http://localhost:8888/cake125/app/views/pages/test.ctp to http://localhost:8888/cake125/pages/test ? Well, the thing is, you don't. :-) What I mean by that is, you do not connect a URL to another URL. What you really do is, you make certain URLs trigger certain Controller functions (or Actions for short) which in turn may (or may not) render certain Views . By default it's all straight forward through naming conventions. The URL /foo/bar triggers the Controller Foo 's Action bar and renders the View /views/foo/bar.ctp . The PagesController is already a special case. The URL /pages/foo triggers the Controller Pages 's Action display , passes it the parameter foo , which renders the View /views/pages/foo.ctp . Notice the difference in which Action is triggered. Since there are a lot of steps inbetween, it's not a given that a certain URL corresponds to a particular file on the hard disk. The URL /foo/bar might trigger Controller Baz ' Action doh which renders the View /views/narf/glob.ctp . This makes translating http://localhost:8888/cake125/app/views/pages/test.ctp to render the file /views/pages/test.ctp somewhere between an uncertainty and a pain in the rear. Edit: Having said that, the particular problem in your case is that the base URL is http://localhost:8888/cake125/app/ . You can invoke a Cake app from http://localhost:8888/cake125/ , http://localhost:8888/cake125/app/ or http://localhost:8888/cake125/app/webroot . All three URLs will be handled by the same file cake125/app/webroot/index.php , if you use one of the shorter URLs the request will be "forwarded" (rewritten) via .htaccess rules. So the Route you're trying to connect, the Route that Cake sees, is actually /views/pages/test.ctp . Actually, my mistake, this might not be the problem, but it depends on your .htaccess files and server configuration. It doesn't seem to make much sense in a CMS though, since every newly created page would need its own rule. So I'd recommend against trying to do so and rather hack Cushy to properly construct URLs using the Cake HtmlHelper or Router::url() . Failing that, connect all URLs with a catch-all rule to some Action, parse the URL there and render the correct View "manually". Alternatively, use .htaccess files and rewrite rules to actually rewrite the URL into a normal Cake URL, so Cake doesn't have to worry about it. As said above though, this can be very fragile.
