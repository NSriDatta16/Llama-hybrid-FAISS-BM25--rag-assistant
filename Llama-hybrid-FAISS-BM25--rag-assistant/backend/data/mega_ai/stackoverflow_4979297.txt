[site]: stackoverflow
[post_id]: 4979297
[parent_id]: 
[tags]: 
Scaling Out: how to handle communication between Ruby on Rails applications?

I am running Ruby on Rails 3 and I have an application that makes use of namespaces in order to handle more "internal concepts". With "internal concepts" I mean that each namespace is used to handle a specific resource of my application. For example a namespace is "users" and it is used to handle user's sessions and authorizations, another is "blogs" and it is used to handle all about posts and comments. I think this is a "convenient" solution to avoid a lot of problems, but not the best. At this time my RoR application consists of this file system structure: # "users" and "blogs" are namespaces RAILS_ROOT/app/controllers/users RAILS_ROOT/app/controllers/blogs RAILS_ROOT/app/models/users RAILS_ROOT/app/models/blogs RAILS_ROOT/app/views/users RAILS_ROOT/app/views/blogs ... I would like to switch the "users" and "blogs" namespace in two RoR applications using subdomains to have something like this: http://main.com # This is the main RoR application http://users.main.com # This is another RoR application used to handle users http://blogs.main.com # This is another RoR application used to handle blogs In few words, I think I am trying to Scale Out * my application or maybe to create a Webservice for each RoR application, but my issues are: 1. What problems I may encounter? I noticed of problems about maintaining sessions (in my case I handle those with cookies) between applications but I think it isn't the only one problem. 2. How to handle communication between the three RoR applications in my case? I noticed that I can use ActiveResource to share information, but I must pay attention to information such as user authentication. I have to implement the OpenID/Oauth protocol in order to maintain user authentications? I think I have to ensure the user authentication information with a HTTPS connection also if the comunication is between subdomains. Is it true? 3. How do I organize my work and resources? With all that being said, I would like to don't use ( absolutely ) plugins or gems, but, if I need, I would like to implement my own handler . At the end I would like to have 3 RoR "easy" and separated applications without use namespaces in each of them and that can communicate between each other: # "Main" application for http://main.com ROOT_MAIN/app/controllers/ ROOT_MAIN/app/models/ ROOT_MAIN/app/views/users ... # "Users" application for http://users.main.com ROOT_USERS/app/controllers/ ROOT_USERS/app/models/ ROOT_USERS/app/views/users ... # "Blogs" application for http://blogs.main.com ROOT_BLOGS/app/controllers/ ROOT_BLOGS/app/models/ ROOT_BLOGS/app/views/users ... BTW : is a good approach the usage of namespaces that I'm doing? P.S.: If you need some other information, let me know and I will update the question. *From The O2 Software Process : "Scale Out" refers to the concept of adding more servers to an existing park, as opposed to "Scale Up" which means to replace existing (slow) servers with newer (and faster) servers.
