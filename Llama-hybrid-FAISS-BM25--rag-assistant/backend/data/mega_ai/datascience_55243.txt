[site]: datascience
[post_id]: 55243
[parent_id]: 
[tags]: 
Which one of these is the most efficient way to model training data for a neural network that will play a snake-like game?

I am building an AI using a neural network that will play Tron against a human player. The game consists of a board with fixed width and height where each player can move at any direction (except for the oposite direction he is facing). Each player's body increases per play and the first one to hit the border or any body loses. For that I am building a neural network that will be trained with data that is built with games that will be played randomly (i.e. both the "human" player and the AI will do random moves for the sake of creating data for the NN). Whenever the AI wins a game, all the moves it used during this game will be appended to the training data. However, I still don't know how should I model it. I came down to two options: Simply inputing my board as a matrix to the NN. it is 10x10 big so I would my input layer would have 100 + 2 neurons for the position of each player. Or: Calculate the angle and distance between the two "heads" (the players position) and input it along each player's position and body size. Which one will make my AI play better?
