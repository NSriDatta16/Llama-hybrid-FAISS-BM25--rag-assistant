[site]: stackoverflow
[post_id]: 5440325
[parent_id]: 5440308
[tags]: 
Is it absolutely necessary that time is stored in the database? Typically, they use an external scheduler service (Task Scheduler or SQL Agent) for that. And invoke the service by running a command-line HTTP client with a service URL. Curl would work, for example, or you can put together a quick JavaScript with an XMLHTTP call and invoke it with cscript.exe. Also, if the data processing can be completely implemented as a stored procedure, there's no need for Web services and shell scripts. Call the procedure directly from SQL Agent (assuming MS SQL Server). EDIT: then you've complicated the design considerably. Say, how precise a timing do you want? Do you want the time to be precise to one minute, one hour, one day? If the desired precision is something along the lines of several minutes, here's what you can do. Have a procedure in the database. Have it executed (via SQL Agent) on the precision boundary - say, every 5 minutes. Have it check if now's the time to run the service. If so, have it invoke the service. XMLHTTP and OLE automation is probably the way to go; look up system procedures sp_OACreate, sp_OAMethod. Something like this: declare @o int exec sp_OACreate 'Msxml2.XMLHTTP', @o output exec sp_OAMethod @o, 'open', @bstrMethod='GET', @bstrUrl='http://what-have-you/' exec sp_OAMethod @o, 'send' Procedures sp_OAxxx are considered, rightfully, very unsafe and there require considerable privilege level to run.
