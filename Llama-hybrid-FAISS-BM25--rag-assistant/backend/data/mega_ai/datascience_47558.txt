[site]: datascience
[post_id]: 47558
[parent_id]: 47373
[tags]: 
def matching_disimilarity(a, b): return np.sum(a != b, axis=1) silhouette_dict = dict() cluster_labels = [...] distinct_cluster_label_predictions = unique cluster_labels for i in m_array: other_records_in_cluster = m_array_(with cluster_prediction == cluster_prediction of i) - i other_records_outside_cluster = m_array_(with cluster_prediction != cluster_prediction of i) other_records_outside_cluster_labels = cluster labels of record in other_records_outside_cluster sum_a = 0 sum_b = 0 sum_cluster_dist = dict() avg_cluster_dist = dict() for c in distinct_cluster_label_predictions: sum_cluster_dist[c] = 0 # finding a(i) - for each observation i, calculate the average dissimilarity ai between i and all other # points of the cluster to which i belongs. for j in other_records_in_cluster: sum_a += matching_disimilarity(i, j) a = sum_a/len(other_records_in_cluster) dict_b = dict() # find average of inter-cluster distance with nearest neighbour for j in other_records_outside_cluster: dist_i_to_j = matching_disimilarity(i,j) dict_b[j] = dist_i_to_j sum_till_now = sum_cluster_dist[other_records_outside_cluster_labels[j]] sum_cluster_dist[other_records_outside_cluster_labels[j]] = sum_till_now+dist_i_to_j for c in distinct_cluster_label_predictions: avg_cluster_dist[c] = sum_cluster_dist[c]/(length of elements_belonging_to_c) # nearest_neighbour is the with smallest average distance # for more than one nearest neighbour? Break randomly? nearest_cluster_label = key of minimum avg_cluster_dist value neighbouring_cluster_records = records with cluster_prediction == nearest_cluster_label for k in neighbouring_cluster_records: sum_b += dict_b[k] b = sum_b/len(neighbouring_cluster_records) if (a
