[site]: stackoverflow
[post_id]: 3860110
[parent_id]: 
[tags]: 
From a list of child elements take just one from the middle

Greetings, I have a problem and a deadline (I just know there are some knowing nods at that plight) Background: I had a need to store data elements in an hierarchical nature. In a nutshell my xml is a set of rules that instruct a graphical drawing engine to draw a number of series on a chart according to a strict parent child relationship. i.e. A series 'could' use for its source data the resultant series of its parent and so on and so on ... or it might not. The power of this approach I thought was that if I ever needed to delete a parent series it was trivially simple to delete the parent xml node and ALL the dependant/child series/nodes would also be removed ... magic works like a charm .. I'm almost a LINQ convert. I had an image to illustrate the output but apparently I'm too much of a newbie to allow images to be posted .. so imagine 4 wavey lines drawn on a chart 3 of them based upon the previous and one just living large all on its lonesome .. dumb image posting rule but meh what ya gonna do :-( .. The XML that represents this relationship is the following. white 3 5 Candle Daily 0.AAC AAC 0 -1 0 0 0 1.SMA AAC 0.AAC 0 2 1 0.AAC 10 0, 0, 192 0 2 2.SMA AAC 1.SMA 0 0 1 1.SMA 20 0, 192, 0 0 2 3.SMA AAC 2.SMA 0 0 1 2.SMA 30 192, 0, 192 0 2 4.SMA AAC 0.AAC 0 3 1 0.AAC 40 192, 0, 0 0 2 The problem I have found is that sometimes I need to change values in the parameter section of the XML I can target and retrieve the required node .. but that node also contains any of the child nodes as well. For example if I retrieve XElement with an Name of "Series" and attribute ID of "2" I also get the Series entry for ID = 3 as well. THE QUESTION Part A:(finally I hear the scream) .... with this existing structure how can I retrieve just one of my Series elements and not its children so I can update its parameters alone. And Part B: Is this the correct way of formatting my XML to achieve this very useful parent child relationship ... Cheers Snark ... P.S. If your kind enough to answer, could I bother you for a minimal description of how the proposed solution works .... My first play with LINQ to XML and not as straight forward as I'd hoped I still think in terms of relational databases. After reading the kind posts I tinkered a little an voila my extreme brute force approach (dont we all miss those days when elegant design was something only marketing execs spoke of to get the sale) .. any way . /// /// Updates Parameters in conjunction with the Modify paramteters Dialog /// /// private void UpdateIndicatorParameters(IndicatorParamterUpdate Message) { IEnumerable result; /// Find the series if (Message.isIndicator) { result = from e in ChartObj.ChartSeriesXMLRules.Descendants() where (e.Name.ToString() == "Series" && e.Attribute("ID").Value == Message.IndicatorID) select e; } else { // not relevant } var NodeOfInterest = result; /// Find Parameter section foreach (var el in result) { NodeOfInterest = el.Elements("Parameters"); } /// Find individual paramters var result2 = from e in NodeOfInterest.Descendants() where e.Name.ToString() == "Param" select e; /// Update required paramter foreach (var el in result2) { if (el.Attribute("Name").Value == Message.ParameterName) { el.Value = Message.Value; } } }
