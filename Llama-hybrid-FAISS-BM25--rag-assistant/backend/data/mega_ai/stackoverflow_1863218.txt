[site]: stackoverflow
[post_id]: 1863218
[parent_id]: 1850264
[tags]: 
Well, I got it working to my satisfaction. Apparently, I had to specify that the Binding applied specifically to the TextBox.Text-element (why I hadn't done so from the start I am unsure). After that, the StringFormat worked as advertised. I added a rather simplistic event handler for the PreviewLostKeyboardFocus-event, which removes group separators as the value we are looking for should be an unformatted ulong - display-formatting is then applied by our StringFormat converter, thus the value expected should not already have any such formatting (and fails Validation if it does). The event also removes any potential leading zeros for good measure. I suppose the above auto-corrections might be done in a more pretty manner, with some regexp-voodoo, but since I'm not a houngan of that particular brand, this is what I came up with. Thanks guys for the comments and ideas! The code-behind for my TextBox: The ValidationRule: public class PopValidationRule : ValidationRule { public override ValidationResult Validate(object value, CultureInfo cultureInfo) { ulong popVal; if (!ulong.TryParse((string)value, out popVal) && !(value == null)) { return new ValidationResult(false, "ValidationResult: Not a number."); } return new ValidationResult(true, null); } } PreviewLostKeyboard Event: private void PopTxtBoxLeavePreview(object sender, System.Windows.Input.KeyboardFocusChangedEventArgs e) { TextBox senderBox = (TextBox)sender; //remove leading 0:s. senderBox.Text = senderBox.Text.TrimStart('0'); //remove spaces as group separator senderBox.Text = senderBox.Text.Replace(" ", ""); //remove commas as group separator senderBox.Text = senderBox.Text.Replace(",", ""); //remove singlequotes as group separator senderBox.Text = senderBox.Text.Replace("'", ""); } }
