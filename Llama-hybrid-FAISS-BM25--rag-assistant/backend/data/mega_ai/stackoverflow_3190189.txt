[site]: stackoverflow
[post_id]: 3190189
[parent_id]: 3189854
[tags]: 
If you're objects have a lot of cleanup to do, they might want to track what needs to be deleted in a separate list of disposables, and handle all of them at once. Then at teardown it doesn't need to remember everything that needs to be disposed (nor does it need to check for null, it just looks in the list). This probably doesn't build, but for expanatory purposes, you could include a RecycleBin in your class. Then the class only needs to dispose the bin. public class RecycleBin : IDisposable { private List _toDispose = new List (); public void RememberToDispose(IDisposable disposable) { _toDispose.Add(disposable); } public void Dispose() { foreach(var d in _toDispose) d.Dispose(); _toDispose.Clear(); } }
