[site]: stackoverflow
[post_id]: 4908709
[parent_id]: 4900501
[tags]: 
I do not have much idea about aspects so this may not help. Firstly, you need to ask yourself, do you really need to distinguish between a wrong username and a wrong password - especially if this information is returned to the user. By default spring-security does not encourage this, which is why by default it returns a BadCredentialsException in either case. Spring security 3.0.x provides a public authenticate() method (in AbstractUserDetailsAuthenticationProvider class) which first retrieves the user in the protected retrieveUser () method and then does password validation in the protected additionalAuthenticationChecks() method. By setting the property hideUserNotFoundExceptions to false (it is true by default), authenticate() method can be checked for UserNotFoundException (in case of wrong user) and BadCredentialsException in case of wrong password.
