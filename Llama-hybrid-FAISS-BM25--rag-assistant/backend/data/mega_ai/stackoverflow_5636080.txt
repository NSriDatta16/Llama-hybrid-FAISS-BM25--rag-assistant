[site]: stackoverflow
[post_id]: 5636080
[parent_id]: 5620720
[tags]: 
Following is the description of the attributes for Performance counters table: EventTickCount : Stores the tick count (in UTC) when the log entry was recorded. DeploymentId : Id of your deployment. Role : Role name RoleInstance : Role instance name CounterName : Name of the counter CounterValue : Value of the performance counter One of the key thing here is to understand how to effectively query this table (and other diagnostics table). One of the things we would want from the diagnostics table is to fetch the data for a certain period of time. Our natural instinct would be to query this table on Timestamp attribute. However that's a BAD DESIGN choice because you know in an Azure table the data is indexed on PartitionKey and RowKey. Querying on any other attribute will result in full table scan which will create a problem when your table contains a lot of data. The good thing about these logs table is that PartitionKey value in a way represents the date/time when the data point was collected. Basically PartitionKey is created by using higher order bits of DateTime.Ticks (in UTC). So if you were to fetch the data for a certain date/time range, first you would need to calculate the Ticks for your range (in UTC) and then prepend a "0" in front of it and use those values in your query. If you're querying using REST API, you would use syntax like: PartitionKey ge '0 ' and PartitionKey le '0 ' . You could use this syntax if you're querying table storage in our tool Cloud Storage Studio, Visual Studio or Azure Storage Explorer. Unfortunately I don't have much experience with the Storage Client library but let me work something out. May be I will write a blog post about it. Once I do that, I will post the link to my blog post here. Gaurav
