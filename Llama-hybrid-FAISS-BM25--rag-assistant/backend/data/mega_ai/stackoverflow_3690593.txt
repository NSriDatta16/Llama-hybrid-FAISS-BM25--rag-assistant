[site]: stackoverflow
[post_id]: 3690593
[parent_id]: 3680655
[tags]: 
Honestly, I'm not sure I understood all the constraints. Anyway, the recommended way to implement integration tests with Maven is to put them in a separate module (that's much easier, especially if the module under test also have unit tests) that depends on the war/ear under test and to: Start a container and deploy the war/ear during the pre-integration-test phase Have Maven run the tests during integration-test Stop the container during post-integration-test For the steps #1 and #3, I personally use Cargo. For the step #2, using the Maven Failsafe Plugin is the preferred option (because it won't stop the build if a test fail). At least, this is what I use and I have used the resources below to build my setup. An alternative approach would be to start/stop an embedded container from the tests. For example, this is doable with Jetty, see Embedding Jetty and Unit Test Servlets with Jetty . Resources Functional testing with Maven, Cargo and Selenium Maven and Integration Testing Maven and Selenium Unit Test Servlets with Jetty
