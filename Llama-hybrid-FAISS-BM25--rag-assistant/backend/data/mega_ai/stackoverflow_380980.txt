[site]: stackoverflow
[post_id]: 380980
[parent_id]: 380962
[tags]: 
Separate tests for each condition. I assume that you trust foreach to iterate over a loop containing both. I would. Presumably you are testing the method you are mocking elsewhere to ensure that it properly returns both types of accounts when present. Instead of copying code, you could refactor by extracting common code into methods in your test class or even into a TestHelper class. Parameterize them if need be to make them generally usable. You should be able to test your private methods by adding an accessor for the class under test. One will be added automatically if you use the "Create Unit Tests" right-click menu item while in the private method or simply add the private method as one to create a unit test for when adding for the whole class. For testing ExportAccounts just use data that you know will and will not throw exceptions so that you can test both the straight-line logic and the exception handling. I wouldn't expose the method variables. They are not needed outside the method. You should however mock the logger to make sure that it is called with the expected parameters. Create the ConfigurationAdapter (or Wrapper) and inject it into your class to remove the dependency on the static class. Mock out the adapter or provide a fake implementation, your choice. Removing the dependency is a good pattern to follow anyway. I prefer not to mock or stub anything in the class under test. EDIT: For basic reading on Unit Testing I would recommend Pragmatic Unit Testing (C# version) and the chapter on unit testing in Code Complete . You might also want to pick up Test Driven Development in .Net , but the others are more general.
