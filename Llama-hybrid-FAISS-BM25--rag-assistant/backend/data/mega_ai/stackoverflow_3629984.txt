[site]: stackoverflow
[post_id]: 3629984
[parent_id]: 3114476
[tags]: 
Okay - so after seeing the website you are trying to implement I started to feel like Raphael may not be necessary because it is a pretty heavy JS Library - and if you are only trying to draw a rectangle polygon I thought, why not just do it with a single lightweight DIV instead? However I think the Raphael solution would still hold water for many other cases - so I think I'll just post another possible answer. Here is a working example I threw together: http://www.johnmick.net/drag-div-v3/ Feel free to take a look at the source: http://www.johnmick.net/drag-div-v3/js/main.js Essentially we do the following Create the Custom Overlay Create the draggable div polygon and, using jQuery UI, make it draggable Tie an event that listens to when the dragging has stopped that updates the LatLng position of the rectangle Add the object to the Custom Overlay Implement the draw function to redraw the rectangle during zooms and pans Currently I am only storing one LatLng value for the Rectangle (being the top left corner) - you could easily extend this example to store all 4 points of the rectangle and have the shape dynamically resize itself on zooms. You may want to do that, otherwise as users zoom out they will get a climate report for a larger and larger area.
