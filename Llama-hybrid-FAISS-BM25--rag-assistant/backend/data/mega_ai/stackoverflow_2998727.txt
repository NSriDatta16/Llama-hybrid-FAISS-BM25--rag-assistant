[site]: stackoverflow
[post_id]: 2998727
[parent_id]: 
[tags]: 
chrome renders js different depending on the extension of the file to render [testcase included]

I was trying to implement an image panner I found here Chrome renders the same document differently depending on the extension of the file requested. I have created a test case, where it works when the file it's not named as test. xhtml You can download the test case from here Does anybody know why or how to solve it? I want my files to be .xhtml In IE and FF it works fine. Code: test.html / test.xhtml (change the name to see that works with one but not with the other). /*Default CSS for pan containers*/ .pancontainer { position: relative; /*keep this intact*/ overflow: hidden; /*keep this intact*/ width: 300px; height: 300px; border: 1px solid black; } Update: Apparently, thanks to the comments is tomcat which is sending application/xhtml+xml as Content-Type. HTTP_TRANSACTION_READ_RESPONSE_HEADERS --> HTTP/1.1 200 OK Server: Apache-Coyote/1.1 X-Powered-By: JSF/1.2 Pragma: no-cache Cache-Control: no-cache Cache-Control: no-store Cache-Control: must-revalidate Expires: Mon, 8 Aug 2006 10:00:00 GMT Content-Type: application/xhtml+xml;charset=UTF-8 Transfer-Encoding: chunked Date: Wed, 09 Jun 2010 07:39:30 GMT I've added a mime-type to the web.xml : xhtml text/html But still does not work. I belive that FacesServlet is reading the file extension and sending the content-type, overriding the configuration in web.xml Faces Servlet javax.faces.webapp.FacesServlet 1 Faces Servlet *.xhtml I've tried to modify the web.xml configuration to change .xhtml to .html, but Faces Servlet serves the files as application/xhtml+xml I guess I could add a filter to the webapp modifying the Content-Type to text/html but that's a bit hacky. Why JSF with Facelets does not serve the files as html? Or how to do so? Update Found how to serve text/html from JSF. You need to add after and before Now it works as expected in chrome.
