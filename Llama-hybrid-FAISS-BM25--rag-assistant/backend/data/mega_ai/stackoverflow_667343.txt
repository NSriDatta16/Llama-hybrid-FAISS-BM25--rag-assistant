[site]: stackoverflow
[post_id]: 667343
[parent_id]: 667285
[tags]: 
struct s are different from class es because they are stored on the stack, and not on the heap. That means that every time you call a method with the struct as parameter, a copy is created and passed to the method. That is why large struct s are extremely inefficient. I would actively discourage to use struct s nevertheless, because it could cause some subtle bugs: e.g. when you change a field of a struct , its not going to be reflected for the caller (because you only changed the copy) - which is completely different behavior to classes. So the 16 bytes I think is a reasonable maximum size of a struct , but still in most cases it is better to have a class . If you still want to create a struct , try to make it immutable at least.
