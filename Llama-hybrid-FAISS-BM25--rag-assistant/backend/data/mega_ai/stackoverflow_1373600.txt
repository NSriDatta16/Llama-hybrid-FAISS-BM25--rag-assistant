[site]: stackoverflow
[post_id]: 1373600
[parent_id]: 
[tags]: 
How do I populate a ComboBox at install time in WiX?

Edit: I've updated the code below so that it now works, thanks to Rob's answer. I've found a couple of pages that show how to do this ( http://www.cmcrossroads.com/content/view/13160/120/ , http://www.mail-archive.com/wix-users@lists.sourceforge.net/msg05103.html ) and looked through the source code for WAI ( http://wai.codeplex.com/ ), but I can't seem to get it to work in my installer no matter what I try. If anyone can spot what I'm doing wrong I'd be very grateful. My WiX fragment for the dialogue looks like this: ...snip... ...snip... Dummy My custom action code is: [CustomAction] public static ActionResult FillWebsiteNameList(Session xiSession) { xiSession.Log("Begin FillWebsiteNameList"); xiSession.Log("Opening view"); View lView = xiSession.Database.OpenView("SELECT * FROM ComboBox"); lView.Execute(); xiSession.Log("Creating directory entry"); DirectoryEntry lIis = new DirectoryEntry("IIS://localhost/w3svc"); xiSession.Log("Checking each child entry"); int lIndex = 1; foreach (DirectoryEntry lEntry in lIis.Children) { if (lEntry.SchemaClassName == "IIsWebServer") { xiSession.Log("Found web server entry: " + lEntry.Name); string lWebsiteName = (string)lEntry.Properties["ServerComment"].Value; xiSession.Log("Website name: " + lWebsiteName); xiSession.Log("Creating record"); Record lRecord = xiSession.Database.CreateRecord(4); xiSession.Log("Setting record details"); lRecord.SetString(1, "IIS_WEBSITENAME"); lRecord.SetInteger(2, lIndex); lRecord.SetString(3, lEntry.Name); // Use lWebsiteName only if you want to look up the site by name. lRecord.SetString(4, lWebsiteName); xiSession.Log("Adding record"); lView.Modify(ViewModifyMode.InsertTemporary, lRecord); ++lIndex; } } xiSession.Log("Closing view"); lView.Close(); xiSession.Log("Return success"); return ActionResult.Success; } There used to be two problems: 1) The code above failed during the running of the custom action with "Function failed during execution. Database: Table(s) Update failed." - This was because of the indexing problem causing the code to try and write a string to an int column. 2) If I change the line lRecord.SetString(2, lWebsiteName); to lRecord.SetString(2, lEntry.Name); then looking at trace the action appears to succeed but when the installer run the combobox has no entries to chose from. If I change the combobox to have hardcoded values everything works fine, even if I hardcode the equivalent of lWebsiteName.
