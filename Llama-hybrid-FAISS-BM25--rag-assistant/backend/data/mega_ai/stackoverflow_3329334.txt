[site]: stackoverflow
[post_id]: 3329334
[parent_id]: 3329055
[tags]: 
The only thing I can think of is that the context is having trouble observing the Friend object because you've initialized it as a generic NSManagedObject instead an instance of the Friend subclass. The generic NSManagedObject does not store values in properties like it's subclasses do. Instead, it uses associative storage which is akin to a generic dictionary. In other words, a generic NSManagedObject stores and accesses value in a different location and using a different method of setting and getting than does its subclass. At runtime, this may cause the context confusion. The first time you check the context, you getting a hasChangess==YES because you've inserted a new object into the object graph. The second time, you're just changing an attribute of an existing object. If the context cannot accurately observe the value of the name key it will not know it has to save the object again on the second pass. Change: NSManagedObject *newManagedObject = [NSEntityDescription insertNewObjectForEntityForName:[entity name] inManagedObjectContext:context]; ...to: Friend *newFriend = [NSEntityDescription insertNewObjectForEntityForName:[entity name] inManagedObjectContext:context]; ... and see if that resolves the problem. Otherwise, the code looks fine.
