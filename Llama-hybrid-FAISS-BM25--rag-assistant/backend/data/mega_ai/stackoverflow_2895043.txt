[site]: stackoverflow
[post_id]: 2895043
[parent_id]: 1616090
[tags]: 
I've been doing TDD for a couple of years, but lately I've started looking more in to the BDD way of driving my design and development. Resources that helped me get started on BDD was first and formost Dan North's blog (the 'founder' of BDD). Take a look at Introducing BDD . There's also an 'official' BDD Wiki over at behaviour-driven.org with some good post well worth reading. The one thing that I found really hard when starting out with BDD (and still find a bit hard) is how to formulate those scenarios to make them suitable to BDD. Scott Bellware is a man well skilled in BDD (or Context-Spesification as he like to coin it) and his article Behavior-Driven Development in Code Magazine helped me a lot on understanding the BDD way of thinking and formulating user stories. I would also recomend the TekPub screencast Behavior-driven Design with Specflow by Rob Conery. A great intro to BDD and to a tool (SpecFlow) very good suited for doing BDD in C#. As for TDD resources, there's already a lot of good recommendations here. But I just want to point out a couple of books that I can really recommend; Working Effectively with Legacy Code by Michael Feathers; A must-have read if you're working on legacy code (aren't we all?) and want to get it under test The Art of Unit Testing: With Examples in .Net by Roy Osherove; If you're new to unit testing, this is the book to get you started Test Driven Development: By Example by Kent Beck; If you're learning TDD why not get it from the source itself? A good book - easy to read, good humour and great thoughts. Clean Code: A Handbook of Agile Software Craftsmanship by Robert C. Martin; If Kent Beck describes the hows of TDD, Uncle Bob describes the whys .
