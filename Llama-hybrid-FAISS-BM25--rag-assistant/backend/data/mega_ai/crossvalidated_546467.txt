[site]: crossvalidated
[post_id]: 546467
[parent_id]: 526109
[tags]: 
doing a linear regression on the results (x=concentration, y=probit score), and solving the linear equation for y=6.64... (the probit score corresponding to 95%) probably isn't the best way to accomplish what you want. A linear regression of probit score against concentration makes an implicit assumption that the variance in probit score values around their linearly predicted values is constant as a function of concentration. That's unlikely to be the case and might substantially bias the estimate of detection limit. I think you can better accomplish what you want by doing a proper probit regression that takes the underlying binomial variance into account. That can be further enhanced by allowing for a nonlinear relationship with concentration. You can then plot predicted probabilities along with confidence intervals as a function of concentration. This page shows how to do probit regressions in several platforms including Python. The Python example doesn't show plots, but plots (and the way to generate them) are illustrated in the R example. You use a "predict" function that returns means and confidence intervals based on the model in the probit scale over a range of concentrations, rescale to probability, and plot. Some might prefer a logistic regression to the probit regression, but the differences are usually pretty minor. Finally, the way that you are proceeding doesn't seem to be a standard way of setting detection limits. It's not clear from your description how you are taking into account the variance in blank values. You might want to see this article for guidance.
