[site]: stackoverflow
[post_id]: 2169228
[parent_id]: 2169016
[tags]: 
See also: SO 327980 . The Standard C committee has created a technical report, TR 24731-1 , in part at Microsoft's encouragement (I believe). It standardizes the interfaces to the various functions such as vsnprintf_s() . Sadly, however, the interface defined by the standard is incompatible with the interface defined by Microsoft, thus rendering the standard largely irrelevant. For example, TR 24731-1 says the interface to vsnprintf_s() is: #define _ _STDC_WANT_LIB_EXT1_ _ 1 #include #include int vsnprintf_s(char * restrict s, rsize_t n, const char * restrict format, va_list arg); Unfortunately, MSDN says the interface to vsnprintf_s() is: int vsnprintf_s( char *buffer, size_t sizeOfBuffer, size_t count, const char *format, va_list argptr ); Parameters buffer - Storage location for output. sizeOfBuffer - The size of the buffer for output. count - Maximum number of characters to write (not including the terminating null), or _TRUNCATE. format - Format specification. argptr - Pointer to list of arguments. Note that this is not simply a matter of type mapping: the number of fixed arguments is different, and therefore irreconcilable. It is also unclear to me (and presumably to the standards committee too) what benefit there is to having both 'sizeOfBuffer' and 'count'; it looks like the same information twice (or, at least, code will commonly be written with the same value for both parameters).
