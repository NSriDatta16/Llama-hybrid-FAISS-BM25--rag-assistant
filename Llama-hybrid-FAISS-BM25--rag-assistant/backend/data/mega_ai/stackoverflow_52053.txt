[site]: stackoverflow
[post_id]: 52053
[parent_id]: 52002
[tags]: 
EDIT: from the comments: bool palindrome(std::string const& s) { return std::equal(s.begin(), s.end(), s.rbegin()); } The c++ way. My naive implementation using the elegant iterators. In reality, you would probably check and stop once your forward iterator has past the halfway mark to your string. #include #include using namespace std; bool palindrome(string foo) { string::iterator front; string::reverse_iterator back; bool is_palindrome = true; for(front = foo.begin(), back = foo.rbegin(); is_palindrome && front!= foo.end() && back != foo.rend(); ++front, ++back ) { if(*front != *back) is_palindrome = false; } return is_palindrome; } int main() { string a = "hi there", b = "laval"; cout
