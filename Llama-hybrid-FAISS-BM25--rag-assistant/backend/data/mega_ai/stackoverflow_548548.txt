[site]: stackoverflow
[post_id]: 548548
[parent_id]: 548526
[tags]: 
This sounds more like a relationship rather than inheritance to me. That is all of the entities are users, but some users have a creator relationship to others and some have an assigned relationship. Probably the easiest way to model this is to have a join table for creators and another for assignees. Create foreign key relationships back to the user table from both columns in the join table. When you drag all of these tables onto the designer surface, each user will get createdBy/created and assignee/assigned to entity sets. Your db constraints, I presume, will limit it so that each user only has one creator and a user isn't assigned to more than one other use (or maybe not, depending on your rules). user table user_id int identity not null primary key user_name varchar .... created_by created_by_id int identity not null primary key creator int not null, FK to user.user_id createe int not null, FK to user.user_id (with a unique index on creator/createe -- or both could be the PK) (constraint creator <> createe) assigned_to assigned_to_id int identity not null primary key owner_id int not null, FK to user.user_id assignee_id int not null, FK to user.user_id (with a unique index on assignee_id -- or not) (constraint owner_id <> assignee_id -- or not)
