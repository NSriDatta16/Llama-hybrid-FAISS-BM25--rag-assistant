[site]: datascience
[post_id]: 63891
[parent_id]: 63885
[tags]: 
This should just be a sequence prediction problem, and a multivariate one. You can use LSTMs or GRUs in Keras to handle the sequences. In the simplest architecture, the inputs will be batches of (it seems) n-1 steps of 6 numbers, and the output will be the final 6 numbers in the sequence. This is pretty much how any RNN works. The loss will be mean_squared_error , I presume. But given how much is unknown here about the distribution of the sequences, it's unclear whether this simple approach would work well, or whether even a more complex network can learn whatever patterns these follow.
