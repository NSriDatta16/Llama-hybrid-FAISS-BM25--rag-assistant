[site]: stackoverflow
[post_id]: 1009779
[parent_id]: 1009528
[tags]: 
I fear, I can not give the "common pattern" how to deal with this problem. But I also think, that there is not the "one and only" pattern at all. The reason is, that modelling is somehow "fuzzy". I remember some rather similar modelling problem in a German computer magazine. It was a kind of contest and they showed the different solutions they got send in. The solutions where totally different, yet all of them where somehow valid. I think that it also depends on the details of the problem at hand. Sometimes a "lean" solution is beautiful ... in other cases, the "big, fat, grand" solution must be done to meet the projects needs ... Such as, modelling is still a creative task with many free parameters. Off course there are some "meta-patterns" which are agreed upon. For example in the book "Design patterns" by the famous "Gang of Four" and also many others available. But still many problems exist, where no agreed "best" solution exists. In your case, it would be possible to use sub-classing (this is equivalent to specialization). It could also be possible to make "Supplier" etc. just an interface which might/might not be supported by a company (this could be seen as optional specialization from an abstract Entity). But it is also possible to use composition for the same problem. A Role could be an object (Entity) that is linked by the company (e.g. with a relation "has-role").
