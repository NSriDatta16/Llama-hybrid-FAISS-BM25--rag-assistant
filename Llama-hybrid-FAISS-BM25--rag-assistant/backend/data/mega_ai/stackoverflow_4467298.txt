[site]: stackoverflow
[post_id]: 4467298
[parent_id]: 4467141
[tags]: 
Here is a quick thought.... If I understand this correctly you can just iterate across the list from right to left, and read pairs... Use a dictionary/map/hashtable to keep them organized. You may need to define a custom comparator for it but thats not too hard. So as you iterate along from right to left, top to bottom, you add the pairs as you read them so.. parent = "1A"; child = "1B"; list.add(child, parent); //Then on the next iteration..... parent = "1B"; child = "1C"; And so on you go... This way using the child as the key, you are left with a list of all the unique values, this becomes your ID column. Then your list.values() becomes your ParentID column since it will contain the duplicates for all of the parents that had more than one child. This is also why the child works perfectly as the key since you can only be born once, but you can have many children. EDIT: BAH! Someone beat me to it with a much more complete version of what I was proposing anyway... oh well. I like my verbal description better ;)
