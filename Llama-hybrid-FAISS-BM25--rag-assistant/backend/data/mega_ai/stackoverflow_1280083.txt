[site]: stackoverflow
[post_id]: 1280083
[parent_id]: 1279932
[tags]: 
I have THTML, and it indeed includes GDIPL2A.pas, which is a wrapper around GDIPlus; apparently THTML uses GDIPlus to display embedded images or something. A quick look at the declaration of TGPImage and TGpBitmap shows the constructor declarations of each: // TGpImage public constructor Create(FileName: string; TmpFile: boolean = False); overload; constructor Create(IStr: IStream); overload; // TGpBitmap public constructor Create(W, H: Integer); overload; constructor Create(IStr: IStream); overload; You'll see that all of the constructors takes at least one or two parameters; your call to inherited Create passes none. However, since the call to inherited is in another constructor it should work (and indeed does on my machine; I just tried rebuilding one of the demos from THTML and it recompiled GDIPL2A.pas fine), You've got something else going on, like a different version of GDIPL2A in your path that the compiler is using instead of the one you're seeing in the IDE's editor. As to your question, I answered it in the first paragraph above. It's reporting the error in THTML because that's the copy of GDIPL2A that the compiler is using, which may not be the one your code is expecting it to use. You can fix that by either: Reordering units in the uses clause of your code so that all calls that cause GDIPL2A to compile are using the same one; Copy the GDIPL2A your code thinks it's using into your project's source folder, so it will be compiled from there. This will probably break THTML if you're using it in that same project, so be ready for that; Find and resolve the competing copies of GDIPL2A so that there's only one copy available on the compiler's search path; Remove the THTML path from your project's search and library paths, if you're not using it in your problem project. You can also, using Project|Options|Packages, prevent THTML from even being loaded when you open the project if you'd like, to make your project load faster.
