[site]: stackoverflow
[post_id]: 4225816
[parent_id]: 4219525
[tags]: 
This question can get very close to being subjective (even though it's really not), you're talking about NoSQL as if it is just one thing, and that is not the case. You have graph databases (Neo4j etc), map/reduce style document databases (Couch,Raven), document databases which attempt to feel like ordinary databases (Mongo), Key/value stores (Cassandra etc) moar goes here. Each of them attempts to solve a different problem via different means, and whether you'd use one of them over a traditional relational store is A matter of suitability A matter of personal preference At the end of the day, for the primary data-storage for a single system, a document database or relational store is probably what you want, although for different parts of your system you may well end up utilising a graph database (For calculating neighbours etc), or a key/value store (like Facebook does/did for inbox messages). The main benefit of choosing a document store as your primary store over that of a relational one, is that you haven't got to worry about trying to map your objects into a collection of tables, and there is less configuration overhead involved in doing so. The other downside/upside would be that you have to learn something new and make mistakes along the way. So my answer if I am going to be direct? RavenDB would be suitable SQL would be suitable Which do you prefer to use? These days I'd probably just go for Raven, knowing I can dump data into a relational store for reporting purposes and probably do likewise for other parts of my system, and getting free-text search and fastish-writes/fast-reads without going through the effort of defining separate read/write stores is an overall win. But that's me, and I am biased.
