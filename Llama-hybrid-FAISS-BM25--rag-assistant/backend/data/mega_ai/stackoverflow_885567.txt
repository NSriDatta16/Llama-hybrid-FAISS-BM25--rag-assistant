[site]: stackoverflow
[post_id]: 885567
[parent_id]: 867498
[tags]: 
Use HTML (HTML4 Strict or HTML5). HTML can fully utilize CSS, can be validated and parsed unambiguously. Separation of structure and presentation has been done in HTML4 and XHTML merely continued that. All browsers support HTML. Only some browsers support XHTML and those that do, often have more mature and better tested and optimized support for HTML (it's caused by the fact that tiny fraction of pages uses XML mode). If you care about IE and Google, you have to use HTML or subset of XHTML and HTML defined in Appendix C of XHTML spec. The latter is almost worst of the both worlds, because such XHTML cannot be generated with standard XML tools, cannot use extension mechanisms new to XHTML and has additional limitations over those in HTML alone. XHTML1.0 is now over 10 years old, it was designed in "Web1.0" times, and as head of W3C said, in retrospect it didn't work out and better approach is needed . W3C HTML5 is written as we speak and addresses needs of web applications used today, and has very good backwards compatibility. HTML5 closes many gaps that were between HTML4 and XHTML1 (e.g. adds inline SVG, MathML i RDF), cleans up language beyond what was done in XHTML1.0 and XHTML1.1. XHTML2 is not going to be supported by web browsers in forseeable future. It's likely that it will never be supported (all browser vendors heavily support [X]HTML5, some have already declared that they won't implement XHTML2). XHTML1.0 has exactly the same semantics and separation of presentation from structure as HTML4.01. Anybody who says otherwise, hasn't read the specification . I encourage everybody to read the spec â€“ it's suprisingly short and uninteresting. Stylesheets were introduced in HTML4.01 and were not changed in XHTML1.0. Presentational elements were deprecated in HTML4.01 and were not removed in XHTML1.0. XHTML myths . There are no untractable differences in HTML and XHTML that would make parsing of one much slower than another. It depends how the parser is implemented. Both SGML and XML parsers need to load and parse entire DTD in order to understand entities. This alone is usually more work than parsing of the document itself. HTML parsers almost always "cheat" and use hardcoded entities and element information. XHTML parsers in browsers cheat too. Parsing of HTML requires handling of implied start and end tags, and real-world HTML requires additional work to handle misplaced tags. Proper parsing of XHTML requires tracking of XML namespaces. Draconian XML rules require checking if every character is properly encoded. HTML parsers may get away with this, but OTOH they need to look for . The overall difference in cost of parsing is tiny compared to time it takes to download document, build DOM, run scripts, apply CSS and all other things browsers have to do.
