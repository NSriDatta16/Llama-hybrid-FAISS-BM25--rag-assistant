[site]: crossvalidated
[post_id]: 636223
[parent_id]: 
[tags]: 
Calculate Expected Goals (xG) using Bernoulli

I would like to calculate the Expected Goals (xG) using a Bayesian model. The xG is the probability of a shot resulting in a goal or not. The value is between 0 and 1 meaning 0 is most likely not a goal while 1 means it will probably result in a goal the shot. I have some shootings with a result of goal (1) or no goal (0) and some extra information about the shootings like distance, angle, body part shot taken, and situation. I was thinking of calculating the result 0 or 1 using a Bernoulli distribution, but I'm not sure if the result can be used as the xG value. Using the data (subset) below I'm fitting the following model: library(brms) fit And use the following code to calculate the probabilities for the target output. predict(fit, type = "response") Output: Estimate Est.Error Q2.5 Q97.5 [1,] 0.25650 0.43675558 0 1 [2,] 0.00000 0.00000000 0 0 [3,] 0.02375 0.15228833 0 0 [4,] 0.00000 0.00000000 0 0 [5,] 0.00625 0.07881935 0 0 [6,] 0.00000 0.00000000 0 0 [7,] 0.13300 0.33961719 0 1 [8,] 0.00000 0.00000000 0 0 [9,] 0.00000 0.00000000 0 0 [10,] 0.24175 0.42819712 0 1 [11,] 0.42500 0.49440480 0 1 [12,] 0.48550 0.49985219 0 1 [13,] 0.21625 0.41173817 0 1 [14,] 0.00000 0.00000000 0 0 [15,] 0.00050 0.02235788 0 0 [16,] 0.33625 0.47248465 0 1 [17,] 0.34475 0.47534611 0 1 [18,] 0.01300 0.11328817 0 0 [19,] 0.63225 0.48225313 0 1 [20,] 0.02575 0.15840837 0 1 [21,] 0.13175 0.33826106 0 1 [22,] 0.12775 0.33385296 0 1 [23,] 0.00050 0.02235788 0 0 [24,] 0.00025 0.01581139 0 0 [25,] 0.55925 0.49653910 0 1 [26,] 0.11975 0.32470956 0 1 [27,] 0.00150 0.03870561 0 0 [28,] 0.05425 0.22653867 0 1 [29,] 0.03925 0.19421346 0 1 [30,] 0.01225 0.11001347 0 0 [31,] 0.15475 0.36171141 0 1 [32,] 0.26000 0.43868908 0 1 [33,] 0.00000 0.00000000 0 0 [34,] 0.02975 0.16991808 0 1 [35,] 0.34625 0.47583352 0 1 [36,] 0.00000 0.00000000 0 0 [37,] 0.19525 0.39644259 0 1 [38,] 0.00000 0.00000000 0 0 [39,] 0.16725 0.37324558 0 1 [40,] 0.00525 0.07227547 0 0 [41,] 0.05525 0.22849615 0 1 [42,] 0.00425 0.06506148 0 0 [43,] 0.18200 0.38589277 0 1 [44,] 0.00025 0.01581139 0 0 [45,] 0.00150 0.03870561 0 0 [46,] 0.03600 0.18631339 0 1 [47,] 0.20975 0.40718102 0 1 [48,] 0.00000 0.00000000 0 0 [49,] 0.00750 0.08628796 0 0 [50,] 0.01675 0.12834935 0 0 [51,] 0.36600 0.48176968 0 1 [52,] 0.00825 0.09046537 0 0 [53,] 0.93900 0.23936024 0 1 [54,] 0.00000 0.00000000 0 0 [55,] 0.04225 0.20118414 0 1 [56,] 0.44500 0.49702793 0 1 [57,] 0.80925 0.39294152 0 1 [58,] 0.00000 0.00000000 0 0 [59,] 0.01250 0.11111632 0 0 [60,] 0.05775 0.23329926 0 1 [61,] 0.66425 0.47231103 0 1 [62,] 0.04200 0.20061421 0 1 [63,] 0.01650 0.12740411 0 0 [64,] 0.03650 0.18755411 0 1 [65,] 0.01750 0.13114133 0 0 [66,] 0.00075 0.02737928 0 0 [67,] 1.00000 0.00000000 1 1 [68,] 0.01600 0.12549078 0 0 [69,] 0.06200 0.24118570 0 1 [70,] 0.00375 0.06112996 0 0 [71,] 0.40525 0.49100174 0 1 [72,] 0.17850 0.38298096 0 1 [73,] 0.74100 0.43814038 0 1 [74,] 0.44525 0.49705553 0 1 [75,] 0.59350 0.49124137 0 1 [76,] 0.27400 0.44606473 0 1 [77,] 0.37450 0.48405405 0 1 [78,] 0.43600 0.49594908 0 1 [79,] 0.00025 0.01581139 0 0 [80,] 0.07700 0.26662478 0 1 [81,] 0.00125 0.03533765 0 0 [82,] 0.43300 0.49555261 0 1 [83,] 0.00250 0.04994370 0 0 [84,] 0.46350 0.49872832 0 1 [85,] 0.10500 0.30659175 0 1 [86,] 0.06025 0.23797919 0 1 [87,] 0.25650 0.43675558 0 1 [88,] 0.00075 0.02737928 0 0 [89,] 0.28425 0.45111286 0 1 [90,] 0.10200 0.30268615 0 1 [91,] 0.16850 0.37435650 0 1 [92,] 0.09450 0.29255965 0 1 [93,] 0.08300 0.27591671 0 1 [94,] 0.00000 0.00000000 0 0 [95,] 0.43175 0.49538196 0 1 [96,] 0.00000 0.00000000 0 0 [97,] 0.00000 0.00000000 0 0 [98,] 0.22000 0.41429809 0 1 [99,] 0.00375 0.06112996 0 0 [100,] 0.36800 0.48232163 0 1 As we can see it returns an estimate which is then the probability of being 0 or 1, right? Can we assume that this estimate is then exactly the xG value that I want to calculate? I would like to know if this is a right approach to calculating the xG using a bayesian model. Data used (sample): structure(list(result_corrected = structure(c(1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L ), levels = c("0", "1"), class = "factor"), X = c(92.4000015258789, 89.3000030517578, 84.8000030517578, 91.9000015258789, 74.0999984741211, 80.5999984741211, 89, 92.8000030517578, 91.5, 95.9000015258789, 90.0999984741211, 93.3000030517578, 75.1999969482422, 84.6999969482422, 73.9000015258789, 91.6999969482422, 92.0999984741211, 81.9000015258789, 97.6999969482422, 86.9000015258789, 96.9000015258789, 91.8000030517578, 71.0999984741211, 86.9000015258789, 98.1999969482422, 87.3000030517578, 92.4000015258789, 85.5999984741211, 90.3000030517578, 85.0999984741211, 87.5999984741211, 94.5999984741211, 81.8000030517578, 79.0999984741211, 78.5, 89.1999969482422, 87.3000030517578, 87.4000015258789, 88.8000030517578, 76.8000030517578, 89.3000030517578, 73.5999984741211, 88.3000030517578, 85.6999969482422, 78.3000030517578, 88.5, 90.5, 78.5999984741211, 91.1999969482422, 78.4000015258789, 90.5999984741211, 80.5999984741211, 96.4000015258789, 41.9000015258789, 91.3000030517578, 88.5, 88.0999984741211, 88.3000030517578, 89.8000030517578, 84.6999969482422, 97.1999969482422, 87, 94.9000015258789, 85.3000030517578, 91.1999969482422, 78.1999969482422, 88.5, 84.3000030517578, 88.4000015258789, 81.5999984741211, 90.5, 71.1999969482422, 97, 85.9000015258789, 95.0999984741211, 98.5999984741211, 96.3000030517578, 89.9000015258789, 87.5, 86.6999969482422, 82.3000030517578, 80.5999984741211, 75.4000015258789, 87.4000015258789, 74.9000015258789, 87.5, 93.1999969482422, 97.0999984741211, 93.9000015258789, 89.1999969482422, 88.0999984741211, 91.6999969482422, 95.9000015258789, 95.8000030517578, 91.5999984741211, 91.5, 91.1999969482422, 75.0999984741211, 77.4000015258789, 94.9000015258789), Y = c(57.2000007629395, 34.7999992370605, 34.5, 48.0999984741211, 56.4000015258789, 32.4000015258789, 40.0999984741211, 23.7000007629395, 56.2999992370605, 64.9000015258789, 48.7000007629395, 54.4000015258789, 39.7999992370605, 72.9000015258789, 62, 48.5, 50, 58.7999992370606, 35, 83.5999984741211, 42.9000015258789, 44.9000015258789, 26.7000007629395, 56, 41.0999984741211, 37.9000015258789, 72.9000015258789, 42.7000007629395, 32.7999992370605, 30.1000003814697, 42.9000015258789, 47.7999992370605, 58.0999984741211, 69.3000030517578, 37.0999984741211, 75.5999984741211, 40.2000007629395, 58.7000007629395, 41.5999984741211, 50.2999992370605, 54.5, 43.9000015258789, 53.9000015258789, 72.0999984741211, 25.6000003814697, 44.9000015258789, 63.2000007629395, 75.0999984741211, 70.5, 51.0999984741211, 44.7000007629395, 29.5, 46.2000007629395, 67.1999969482422, 60.7999992370605, 62.9000015258789, 48.7999992370605, 62.5999984741211, 63.9000015258789, 47.9000015258789, 50.5, 34.5, 65.6999969482422, 55.4000015258789, 64.0999984741211, 36.2999992370605, 50, 62.2999992370605, 44.9000015258789, 66.5999984741211, 64.3000030517578, 53.0999984741211, 58.2999992370606, 44.5999984741211, 51.2000007629395, 66, 55.5, 51.7999992370605, 34.9000015258789, 25.7999992370605, 68.4000015258789, 47.7999992370605, 36.9000015258789, 60, 38.2000007629395, 40.4000015258789, 57.9000015258789, 39.5, 32, 58.2000007629395, 29, 38.7999992370605, 32.4000015258789, 59, 52.7999992370605, 54, 45.7000007629395, 39.4000015258789, 31.7999992370605, 43.7000007629395), angle = c(33.1323574634634, 13.5114999340222, 13.9223314883152, 60.8547851899026, 15.5541087317797, 12.0947889367719, 22.4374143469774, 4.13583558213235, 36.1760155733389, 7.62810078842719, 48.1100596450238, 55.2560731848086, 14.7392310913671, 8.61207905386678, 13.4839609910607, 60.2839514495528, 67.5984883609605, 19.3824788134004, 4.44747748845037, 4.26842458755435, 27.8857434470961, 43.0674254060391, 8.88163600618605, 28.2893924449532, 10.9323961072609, 18.0984233940483, 5.60411633196493, 24.425989448712, 10.8044008853535, 10.3355676794442, 27.2605942615113, 109.917591979482, 19.9063418056311, 11.013339486892, 14.6558279705489, 5.97093359595113, 21.8355655693824, 23.9058996245631, 25.7241173089493, 18.5360300512267, 36.9826359511221, 15.361664464831, 35.3776849616571, 8.82627709423562, 8.6442064798935, 33.2943030696469, 15.8679293036174, 8.35239514680211, 7.62091365027353, 19.9376352003738, 38.2555994567567, 10.3885463316438, 107.81322665564, 6.66131096932889, 20.3919680143273, 16.9076760149368, 38.4940266844495, 17.3851687367392, 15.0708641493451, 28.5063149495528, -221.339595801439, 13.773413604762, 8.25522963085142, 26.5910663174408, 14.0411043644777, 14.0762836029948, 40.5803968503587, 17.1304060411187, 33.0567019452214, 12.8462478308736, 14.1618147412657, 14.6294453230935, 19.5089118618615, 27.5597279398734, 170.484038858687, 2.40087182825397, 50.8046895578809, 46.1163806970155, 14.1360682687765, 7.44604480958015, 11.6272512181457, 22.1216992322515, 13.5154735651218, 21.5373726760989, 13.9273765412077, 22.3074180943152, 29.9403915881359, 11.5544794366074, 7.35556274779262, 26.5688493569456, 8.76808647737276, 19.2393616502527, 5.49074464068445, 20.6641221610702, 54.1963678289827, 47.6250347515174, 44.7178885968023, 14.5251168141366, 11.4391804191801, 40.8945792404419), dist_to_goal = c(10.4690012796337, 18.588436133407, 21.709212496693, 8.31985463088786, 26.6790198202967, 26.193892522746, 14.7989874725403, 27.2677449732112, 10.5801696766623, 15.4538031875325, 9.98499014665327, 8.01560805767046, 26.8156701749399, 27.5408816719628, 28.7264672444964, 8.43445615669373, 7.90000152587892, 20.1258523132674, 15.1753093555978, 36.0634143902503, 7.74725557033424, 9.65660056061235, 37.1227700022887, 14.4086765534512, 9.08020033628027, 17.5413763872478, 24.1282002373136, 16.1446595754262, 19.7466444501598, 24.8600086542362, 14.2888073741065, 5.83095359580479, 19.9210909389217, 28.4482017283976, 25.073093932893, 27.7848877592295, 16.0415057750745, 15.311759364064, 13.9999984741214, 23.2019365127285, 11.6077532146575, 27.0955727370854, 12.3328804620305, 26.3229941275007, 32.6534814214043, 12.5801424648546, 16.2631491458943, 32.9843900763452, 22.3089680108907, 21.6279895211067, 10.7912010730673, 28.2242813762211, 5.23449932804799, 60.5924889545925, 13.8683066889917, 17.281783454484, 11.9603527601395, 17.1944726623625, 17.240939074296, 15.4434480274034, 2.84429553490017, 20.2299283241439, 16.5075706453388, 15.6604574249229, 16.6207704599144, 25.7474300457578, 11.5, 19.9444199064927, 12.6716198268276, 24.7814447821988, 17.1679960181811, 28.9663626698419, 8.82553042798028, 15.0986745593682, 5.04480096581331, 16.0611333433374, 6.62872366425104, 10.2591406282723, 19.6025496790203, 27.6139478905686, 25.5313522579618, 19.5243453811143, 27.870591758137, 16.0860175788743, 27.7353547912319, 15.7610269558531, 10.4235342189108, 10.8931174991414, 19.0055250225896, 13.560238878065, 24.1373162616709, 13.9402319833292, 18.0712460493697, 9.93176592380448, 8.85437865478475, 9.39414711402797, 9.79438855415017, 27.0623362561354, 29.0172355471929, 8.10555209859272), situation = c("OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "DirectFreekick", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "DirectFreekick", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "FromCorner", "SetPiece", "FromCorner", "DirectFreekick", "OpenPlay", "FromCorner", "SetPiece", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "Penalty", "OpenPlay", "FromCorner", "OpenPlay", "FromCorner", "DirectFreekick", "OpenPlay", "FromCorner", "FromCorner", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "FromCorner", "OpenPlay", "OpenPlay", "SetPiece", "OpenPlay", "FromCorner", "FromCorner", "DirectFreekick", "OpenPlay", "OpenPlay"), shotType = c("RightFoot", "RightFoot", "RightFoot", "Head", "RightFoot", "LeftFoot", "RightFoot", "RightFoot", "Head", "LeftFoot", "LeftFoot", "RightFoot", "LeftFoot", "RightFoot", "LeftFoot", "LeftFoot", "LeftFoot", "RightFoot", "RightFoot", "RightFoot", "RightFoot", "Head", "RightFoot", "RightFoot", "RightFoot", "LeftFoot", "LeftFoot", "LeftFoot", "RightFoot", "RightFoot", "RightFoot", "Head", "LeftFoot", "RightFoot", "LeftFoot", "LeftFoot", "RightFoot", "RightFoot", "RightFoot", "LeftFoot", "Head", "RightFoot", "RightFoot", "LeftFoot", "RightFoot", "RightFoot", "LeftFoot", "RightFoot", "RightFoot", "RightFoot", "RightFoot", "LeftFoot", "RightFoot", "LeftFoot", "LeftFoot", "LeftFoot", "RightFoot", "RightFoot", "LeftFoot", "LeftFoot", "LeftFoot", "RightFoot", "LeftFoot", "LeftFoot", "LeftFoot", "LeftFoot", "RightFoot", "RightFoot", "Head", "RightFoot", "RightFoot", "RightFoot", "LeftFoot", "LeftFoot", "LeftFoot", "LeftFoot", "LeftFoot", "Head", "RightFoot", "RightFoot", "RightFoot", "RightFoot", "LeftFoot", "RightFoot", "RightFoot", "LeftFoot", "RightFoot", "Head", "LeftFoot", "RightFoot", "RightFoot", "LeftFoot", "RightFoot", "LeftFoot", "RightFoot", "Head", "Head", "LeftFoot", "RightFoot", "LeftFoot"), lastAction = c("Pass", "Chipped", "Rebound", "Chipped", "None", "Aerial", "None", "BallRecovery", "Aerial", "TakeOn", "BallTouch", "Pass", "Standard", "BallRecovery", "Pass", "Pass", "Rebound", "Pass", "TakeOn", "Standard", "Cross", "Cross", "Pass", "Chipped", "Cross", "BallTouch", "Pass", "Pass", "Pass", "Rebound", "Pass", "Cross", "None", "Pass", "Standard", "Chipped", "Cross", "HeadPass", "Pass", "Pass", "Cross", "Pass", "Pass", "LayOff", "Pass", "Cross", "None", "None", "Pass", "Pass", "Rebound", "BallTouch", "None", "Pass", "Pass", "BallTouch", "Throughball", "Chipped", "Pass", "Pass", "Pass", "Rebound", "Pass", "Pass", "None", "Pass", "Standard", "Pass", "Cross", "Pass", "Rebound", "Standard", "TakeOn", "None", "Cross", "Throughball", "Rebound", "Throughball", "Chipped", "None", "Pass", "Rebound", "Pass", "Throughball", "TakeOn", "Pass", "Pass", "Chipped", "TakeOn", "Pass", "None", "Pass", "Pass", "Chipped", "Pass", "Aerial", "Aerial", "Standard", "None", "Pass")), row.names = c(NA, -100L ), class = c("tbl_df", "tbl", "data.frame"))
