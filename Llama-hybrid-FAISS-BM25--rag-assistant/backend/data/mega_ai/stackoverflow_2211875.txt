[site]: stackoverflow
[post_id]: 2211875
[parent_id]: 
[tags]: 
Bad Pointer? - C++

I'm writing a string tokenization program for a homework assignment in C++, that uses pointers. However, when I run & debug it, it says that my pointer pStart, is invalid. I have a feeling that my problem resides in my param'ed constructor, I've included both the constructor and the object creation below. I would appreciate it if you might tell me why it says that pStart is a bad pointer when I debug it. Thanks! StringTokenizer::StringTokenizer(char* pArray, char d) { pStart = pArray; delim = d; } // create a tokenizer object, pass in the char array // and a space character for the delimiter StringTokenizer tk( "A test char array", ' ' ); Full stringtokenizer.cpp: #include "stringtokenizer.h" #include using namespace std; StringTokenizer::StringTokenizer(void) { pStart = NULL; delim = 'n'; } StringTokenizer::StringTokenizer(const char* pArray, char d) { pStart = pArray; delim = d; } char* StringTokenizer::Next(void) { char* pNextWord = NULL; while (pStart != NULL) { if (*pStart == delim) { *pStart = '\0'; pStart++; pNextWord = pStart; return pNextWord; } else { pStart++; } } return pNextWord; } The function Next is supossed to return a pointer to the next word in the char array. It's currently not finished. :) Full stringtokenizer.h: #pragma once class StringTokenizer { public: StringTokenizer(void); StringTokenizer(const char*, char); char* Next(void); ~StringTokenizer(void); private: char* pStart; char delim; }; Full main.cpp: const int CHAR_ARRAY_CAPACITY = 128; const int CHAR_ARRAY_CAPCITY_MINUS_ONE = 127; // create a place to hold the user's input // and a char pointer to use with the next( ) function char words[CHAR_ARRAY_CAPACITY]; char* nextWord; cout
