[site]: stackoverflow
[post_id]: 4042513
[parent_id]: 3899254
[tags]: 
Ok, finally I solved it. You should create a new Gtk.Window of POPUP type, set its Colormap to your screen's RGBA colormap, have the background erased by Cairo to a transparent color, draw whatever you'd like on it and finally pass it on to Gtk.Drag.SetIconWidget() . Sample code (presumably you'll want to use this inside OnDragBegin , or at a point where you have a valid drag context to be passed to SetIconWidget() ): Gtk.Window window = new Gtk.Window (Gtk.WindowType.Popup); window.Colormap = window.Screen.RgbaColormap; window.AppPaintable = true; window.Decorated = false; window.Resize (/* specify width, height */); /* The cairo context can only be created when the window is being drawn by the * window manager, so wrap drawing code into an ExposeEvent delegate. */ window.ExposeEvent += delegate { Context ctx = Gdk.CairoHelper.Create (window.GdkWindow); /* Erase the background */ ctx.SetSourceRGBA (0, 0, 0, 0); ctx.Operator = Operator.Source; ctx.Paint (); /* Draw whatever you'd like to here, and then clean up by calling Dispose() on the context's target. */ (ctx.Target as IDisposable).Dispose (); }; Gtk.Drag.SetIconWidget(drag_context, window, 10, 10);
