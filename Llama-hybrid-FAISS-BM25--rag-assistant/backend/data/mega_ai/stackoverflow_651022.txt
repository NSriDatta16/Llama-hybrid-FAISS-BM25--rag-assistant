[site]: stackoverflow
[post_id]: 651022
[parent_id]: 650917
[tags]: 
I think we are seeing the separation between Web and desktop applications softened quite a bit. Rich internet applications (with Flex, Silverlight, Ajax) started this trend, and WPF with XBAP is taking the user experience of browser-based applications to another level. It is becoming a bit more involved to have this argument, because there are now more flavors in the spectrum between Web and desktop apps. Some more questions to ask: What is the primary objective of the app - data manipulation, or data viewing? What is the number of data points/records that need to be viewed/edited together on one screen? What is the organization's IT infrastructure look like? Will they be able to accomodate new deployment models? Will users work with a central database from remote locations? Does the organization have a VPN infrastructure of off-site users, and how do users authenticate? Are there existing applications that the same user group is working with, and how are these applications deployed? Does the application need offline capabilities? Given that they are so different, what is the skill set of the development team for web and desktop APIs?
