[site]: crossvalidated
[post_id]: 263652
[parent_id]: 
[tags]: 
Capture image foreground - solid background color - preprocessing for CNN

PROBLEM : I have a data set of very similar (grayscale) images, and I want to train a CNN for binary classification. The region of interest is very small, however the position varies a lot. To get an idea, here is one of the images. As you can see there is a "tubing" system, which is the region of interest (the central one; not the ones close to the edges of the image). Everything outside the tube is useless. Thus, feeding a CNN with all of this extra information is time consuming and also becomes very hard to gain high performance, since there is enormous amount of noise and other useless information. IDEA : The idea is to paint everything else (except the tube) with a solid color (e.g. black). However, I am really noob with image processing (especially in practice) and I have no idea how to do this automatically. As you can see, the background outside the tube, is pretty similar with the inside of the tube, so I can't really apply a threshold to shade of everything else. I used OpenCV to apply some edge detection, which could give me some sort of a mask. In order not to repeat the process for every image, I could get this mask from the mean or std image of the data set. Then I could use the mask to paint everything else. Not sure if this going to work, and most importantly I'm not sure how to even start doing it. What I was able to do towards the edge detection with OpenCV is the following: import cv2 import matplotlib.pyplot as plt ret, thresh = cv2.threshold(im, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU) plt.imshow(thresh) plt.show() But then I don't know how to fill the tubes with color, and how to apply the mask afterwards. Can you help me?
