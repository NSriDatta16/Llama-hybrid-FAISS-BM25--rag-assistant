[site]: stackoverflow
[post_id]: 4911271
[parent_id]: 
[tags]: 
Getting final urls of shortened urls (like bit.ly) using php

[Updated At Bottom] Hi everyone. Start With Short URLs: Imagine that you've got a collection of 5 short urls (like http://bit.ly ) in a php array, like this: $shortUrlArray = array("http://bit.ly/123", "http://bit.ly/123", "http://bit.ly/123", "http://bit.ly/123", "http://bit.ly/123"); End with Final, Redirected URLs: How can I get the final url of these short urls with php? Like this: http://www.example.com/some-directory/some-page.html http://www.example.com/some-directory/some-page.html http://www.example.com/some-directory/some-page.html http://www.example.com/some-directory/some-page.html http://www.example.com/some-directory/some-page.html I have one method (found online) that works well with a single url, but when looping over multiple urls, it only works with the final url in the array. For your reference, the method is this: function get_web_page( $url ) { $options = array( CURLOPT_RETURNTRANSFER => true, // return web page CURLOPT_HEADER => true, // return headers CURLOPT_FOLLOWLOCATION => true, // follow redirects CURLOPT_ENCODING => "", // handle all encodings CURLOPT_USERAGENT => "spider", // who am i CURLOPT_AUTOREFERER => true, // set referer on redirect CURLOPT_CONNECTTIMEOUT => 120, // timeout on connect CURLOPT_TIMEOUT => 120, // timeout on response CURLOPT_MAXREDIRS => 10, // stop after 10 redirects ); $ch = curl_init( $url ); curl_setopt_array( $ch, $options ); $content = curl_exec( $ch ); $err = curl_errno( $ch ); $errmsg = curl_error( $ch ); $header = curl_getinfo( $ch ); curl_close( $ch ); //$header['errno'] = $err; //$header['errmsg'] = $errmsg; //$header['content'] = $content; print($header[0]); return $header; } //Using the above method in a for loop $finalURLs = array(); $lineCount = count($shortUrlArray); for($i = 0; $i Close, but not enough This method works, but only with a single url. I Can't use it in a for loop which is what I want to do. When used in the above example in a for loop, the first four elements come back unchanged, and only the final element is converted into its final url. This happens whether your array is 5 elements or 500 elements long. Solution Sought: Please give me a hint as to how you'd modify this method to work when used inside of a for loop with collection of urls (Rather than just one). -OR- If you know of code that is better suited for this task, please include it in your answer. Thanks in advance. Update: After some further prodding I've found that the problem lies not in the above method (which, after all, seems to work fine in for loops) but possibly encoding. When I hard-code an array of short urls, the loop works fine. But when I pass in a block of newline-seperated urls from an html form using GET or POST, the above mentioned problem ensues. Are the urls somehow being changed into a format not compatible with the method when I submit the form???? New Update: You guys, I've found that my problem was due to something unrelated to the above method. My problem was that the URL encoding of my short urls converted what i thought were just newline characters (separating the urls) into this: %0D%0A which is a line feed or return character... And that all short urls save for the final url in the collection had a "ghost" character appended to the tail, thus making it impossible to retrieve the final urls for those only. I identified the ghost character, corrected my php explode, and all works fine now. Sorry and thanks.
