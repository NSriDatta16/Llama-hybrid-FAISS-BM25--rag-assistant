[site]: stackoverflow
[post_id]: 4862429
[parent_id]: 4861509
[tags]: 
I had exactly the same problem with swfupload. As far as I can remember: It happens because Flash doesn't set the cookie correctly in its first request (2nd and subsequent requests are OK). I used some Rack middleware to copy the session key into env['HTTP_COOKIE] but it didn't work as expected. My invetigations led me to a bug in the Rack::Request object which prevents it from correctly setting cookies if env['HTTP_COOKIE'] is initially empty. Here is the middleware code that eventually fixed it for me: class FlashUploadMiddleware def initialize(app,session_key) @app = app @session_key = session_key end def call(env) env['HTTP_COOKIE'] = "bugfix=true" unless env['HTTP_COOKIE'] if env['HTTP_USER_AGENT'] =~ /^(Adobe|Shockwave) Flash/ req = Rack::Request.new( env ) req.cookies[ @session_key ] = req["session_id"] unless req["session_id"].nil? end @app.call(env) end end This class needs to be in a file called flash_upload_middleware.rb somewhere in your load path. It is initialised from an .rb file in config/initialisers ActionController::Dispatcher.middleware.use( FlashUploadMiddleware, ActionController::Base.session_options[:key] )
