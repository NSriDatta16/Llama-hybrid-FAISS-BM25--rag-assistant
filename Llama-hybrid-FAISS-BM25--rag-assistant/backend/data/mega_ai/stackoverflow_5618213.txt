[site]: stackoverflow
[post_id]: 5618213
[parent_id]: 5616381
[tags]: 
You just need to look inside plm:::summary.plm to see what it is doing. When you do, you'll see that your two lines calling summary() on your model fit can be replaced with: coefficients_estimated For example: require(plm) data("Produc", package = "plm") zz summary(zz) gives: > summary(zz) Oneway (individual) effect Within Model .... Coefficients : Estimate Std. Error t-value Pr(>|t|) log(pcap) -0.02614965 0.02900158 -0.9017 0.3675 log(pc) 0.29200693 0.02511967 11.6246 and the two lines I showed return for zz : > coef(zz) log(pcap) log(pc) log(emp) unemp -0.026149654 0.292006925 0.768159473 -0.005297741 > sqrt(diag(vcov(zz))) log(pcap) log(pc) log(emp) unemp 0.0290015755 0.0251196728 0.0300917394 0.0009887257 You don't really provide enough information (your simulation code nor the full output from Rprof() for example) to say whether this will help - it certainly doesn't look like vast amounts of time are spent in summary() ; FUN is far more costly than anything else you show, and of the elements you do show, r.squared() is the only one that appears in plm:::summary.plm() and it seems to take no time at all. So, whether the above speeds things up appreciably remains to be seen.
