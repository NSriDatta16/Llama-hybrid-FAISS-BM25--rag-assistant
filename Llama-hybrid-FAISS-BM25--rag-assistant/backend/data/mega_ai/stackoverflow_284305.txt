[site]: stackoverflow
[post_id]: 284305
[parent_id]: 284080
[tags]: 
Use Visual Studio 2008 if you can. Its support for Ajax client libraries and javascript intellisense is very good. (Check out the jQuery add in ) ASP.NET has built in Login controls (and the membership services mentioned by ChrisE), and also has Forms Authentication. Try to leverage these existing components and avoid using session to store user specific objects/data. ---session rant Its sometimes unavoidable, but you should avoid it whenever you can. It incurs a burden on the webserver for each user, and that leads to some very difficult scaling problems. The FormsAuthentication Ticket has a value property that you can store about 4K worth of user data in - try to use that instead. ---End session rant Try to use a MVC approach (not necessarily an ASP.NET MVC ), but at least one that seperates your presentation / view layer from the data / model layer. Create a default theme and use it. Most sites will need to have multiple themes later, and refactoring that will be a PIA. If you need SOAP to interact with Non-.NET services then by all means use it. If you are only connecting to .NET services then look into WCF clients and services. They will give you more flexibility. If you are doing the client work in javascript, then dont use the update panel. It adds lots of overhead. Get FireFox + FireBug + YSlow, and IE8 (yeah its beta still). They will help you when dealing with the client end of debugging / styling. Take a look at the rules for website performance , but take these with a grain of salt. They are intended for very large sites, and some of the items may not be applicable (CDN, DNS lookups, Redirects).
