[site]: stackoverflow
[post_id]: 2026739
[parent_id]: 2026523
[tags]: 
SOA is an architectural style but also a vision on how heterogeneous application should be developped and integrated. The main purpose of SOA is to shift away from monolithic applications and have instead a set of reusable services that can be composed to build applications. IMHO, SOA makes sense only at the enterprise-level, and means nothing for a single application. In many enterprise, each department had its own set of enterprise applications which implied Similar feature were implemented several times Data (e.g. customer or employee data) need to be shared between several applications Applications were department-centric. With SOA, the idea is to have reusable services be made available enterprise-wide, so that application can be built and composed out of them. The promise of SOA are No need to reimplement similar features over and over (e.g. provide a customer or employee service) Facilitates integration of applications together and the access to common data or features Enterprise-centric development effort. The SOA vision requires an technological shift as well as an organizational shift. Whereas it solves some problem, it also introduces other, for instance security is much harder with SOA that with monolithic application. Therefore SOA is subject to discussion on whether it works or not. This is the 1000ft view of SOA. It however doesn't stop here. There are other concepts complementing SOA such as business process orchestration (BPM), enterprise service bus (ESB), complex event processing (CEP), etc. They all tackle the problem of IT/business alignement , that is, how to have the IT be able to support the business effectively.
