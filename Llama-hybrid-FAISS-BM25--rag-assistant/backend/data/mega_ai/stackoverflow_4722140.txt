[site]: stackoverflow
[post_id]: 4722140
[parent_id]: 2560310
[tags]: 
I was reading about Unladen-Swallow , a project that aims to improve the performance of CPython. While browsing through their discussion board I stumbled across this discussion , where Collin Winter (Google employee and Python core developer) answers on the claim that Google employees are being discouraged from using Python for new projects : Well, simple common sense is going to limit Python's applicability when operating at Google's scale: it's not as fast as Java or C++, threading sucks, memory usage is higher, etc. One of the design constraints we face when designing any new system is, "what happens when the load goes up by 10x or 100x? What happens if the whole planet thinks your new service is awesome?" Any technology that makes satisfying that constraint harder -- and I think Python falls into this category -- should be discouraged if it doesn't have a very strong case made in its favor on other merits. You have to balance Python's strengths with its weaknesses: your engineers may be more productive using Python, but if they have to work around more platform-level performance/scaling limitations as volume increases, do you come out ahead? etc.
