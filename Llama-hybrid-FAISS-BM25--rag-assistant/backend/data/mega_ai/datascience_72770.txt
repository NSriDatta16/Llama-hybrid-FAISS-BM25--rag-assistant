[site]: datascience
[post_id]: 72770
[parent_id]: 
[tags]: 
why we sample when predicting with Recurent Neural Network

I trained a Recurrent Neural Network to predict the next word in a sentence. I trained and now I want to predict, but there is something I am not getting well. I saw it in many tutorials even in the Keras documentation . When we want to predict, we get the probabilities from the predict function and we pass it to the sample function bellow. def sample(preds, temperature=1.0): # helper function to sample an index from a probability array preds = np.asarray(preds).astype('float64') preds = np.log(preds) / temperature exp_preds = np.exp(preds) preds = exp_preds / np.sum(exp_preds) probas = np.random.multinomial(1, preds, 1) return np.argmax(probas) I am not getting what this function is doing. I know that : My predictions are an array of probabilities and from that, the word indice is the word with the largest probability. From the function I can see that they are doing log, and then exp, that is what I am not getting. Why are they doing that? I saw this in many tutorials but no one explained it well. Probably I should go back to my statistics and probabilities courses. Please point me to the right direction.
