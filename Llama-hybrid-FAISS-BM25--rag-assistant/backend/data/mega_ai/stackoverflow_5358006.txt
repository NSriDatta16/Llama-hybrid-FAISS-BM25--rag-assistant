[site]: stackoverflow
[post_id]: 5358006
[parent_id]: 5329080
[tags]: 
Let's assume you're going to process this a row at a time. (Once you've got the total mass, and center of mass of each row, it's a weighted average to get the x and y coordinates of the centroid). So in other words you've got a row of bits b i and you want to calculate the sum of b i f(i) for some functions f. If f(i)=1, that's the bit count (let's call that C), and if f(i)=i, it'll give the total moment of the mass M (which you'll divide by C to get the center of mass). For inputs less than 8 bits, you can easily store tables for C and M, each 256 bytes wide. Let's write numbers bigger than 8 bits as h:l, where l is the lower 8 bits of the number, and h is the rest of the bits. Then C(h:l) = C(h:0) + C(0:l) = C(h) + C(l) M(h:l) = M(h:0) + M(0:l) = M(h) + 8C(h) + M(l) the only tricky bit being the 8C(h), corresponding to those C(h) bits being shifted down 8 places when we calculated M(h) instead of M(h:0). Non-recursively, if your input as bytes is x0, x1, x2, x3... C(x) = C(x0) + C(x1) + C(x2) + C(x3) + ... M(x) = M(x0) + M(x1) + M(x2) + M(x3) + ... +8C(x1) + 16C(x2) + 24C(x3) + ... and then you can pass M and C to average over all lines.
