[site]: stackoverflow
[post_id]: 3126032
[parent_id]: 
[tags]: 
having trouble reading and writing to internal storage android

I'm writing a simple budget app for myself, and I'm having trouble figuring out how to write to internal storage. I don't seem to be writing to the file properly, and I can't find any more in depth examples than the Data Storage article on developer.android.com Basically, I'm trying to write a test float to the MyBalance file, then read it into balance. In my actual code I use try/catch statements around the file in/out operations, but I skipped them to make the code more readable. float test = 55; float balance; byte[] buffer = null; FileOutputStream fos = openFileOutput( "MyBalance", Context.MODE_PRIVATE ); fos.write(Float.floatToRawIntBits(balance)); fis.read(buffer); //null pointer ByteBuffer b = ByteBuffer.wrap(buffer); balance=b.getFloat(); That's the gist of it, anyone see what I'm doing wrong? Edit: Thanks for the reply, I went ahead and converted to/from String like you suggested, but I still don't think the file is being created. I have an if statement that reads from it if it exists in onResume() and it isn't being run. Lemme post some of my code. Here's how I'm writing the file, (setbal is an EditText and balanceview is a TextView): balance = Float.valueOf(setbal.getText().toString()); balanceview.setText(setbal.getText()); balstring = String.valueOf(balance); for (int i = 0; i I check if the file exists in onResume() like so: File file = new File("data/data/com.v1nsai.mibudget/balance.txt"); Is that where an internal file for that context would be stored?
