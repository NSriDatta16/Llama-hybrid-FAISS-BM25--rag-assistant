[site]: stackoverflow
[post_id]: 1492847
[parent_id]: 1492831
[tags]: 
In both Java and .NET, this is only allowed if you have sufficient permissions. Code that you run directly from the command line is (usually) operating in "full trust" mode. If you try doing the same thing in more restrictive environments, it will fail. Access control is more about encapsulation than security though. If you're operating at full trust, you've probably got enough access to launch native methods to poke around memory directly anyway... Why is it allowed? Sometimes it can be handy. It should be treated with care, but it can be useful. What are the ramifications? Your code becomes fragile; you're interacting with a type in a way it doesn't expect. Should it be taken away in a future version of the language? It's a platform feature rather than a language feature in the first place, but no I don't think it should be removed. Do other languages/platforms allow this? I'm not sure... I wouldn't be surprised though.
