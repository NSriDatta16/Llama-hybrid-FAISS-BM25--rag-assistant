[site]: stackoverflow
[post_id]: 5227645
[parent_id]: 5212089
[tags]: 
OP here. I came up with an elegant solution! For any misunderstandings: My original idea of storing all the keys by how many values in an ArrayList was completely disregarding the point of using a Map to store "instances of the Key using Integers"; any similar solutions are counterproductive! Assuming the Map is unordered, here is my solution: public T randomPick(Random r) { int randomValue = r.nextInt(size()); int currentSum = 0; T lastElement = null; for (T t : map.keySet()){ if (randomValue It compares the random value with a current sum + the current element's value . If it is less than that, we return the current key. Else, keep going and add that value to the sum. If it is the case such that the random value is never less than any of the values, we return the lastElement . Hope this clears it up.
