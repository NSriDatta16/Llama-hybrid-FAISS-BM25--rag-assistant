[site]: stackoverflow
[post_id]: 4663234
[parent_id]: 4663172
[tags]: 
I am aware about your context, but as a first step you can just refactor this way: Step 1 if (typeOfObject == "UAV") { DoSomeWork(_stkObjectRootToIsolateForUavs); } else if (typeOfObject == "Entity") { DoSomeWork(_stkObjectRootToIsolateForEntities); } private void DoSomeWork(IAgStkObject agStkObject) { IAgStkObject stkObject = agStkObject.CurrentScenario.Children[stkObjectName]; IAgDataProviderGroup group = (IAgDataProviderGroup)stkUavObject.DataProviders["Heading"]; IAgDataProvider provider = (IAgDataProvider)group.Group["Fixed"]; IAgDrResult result = ((IAgDataPrvTimeVar)provider).ExecSingle(_stkObjectRootToIsolateForUavs.CurrentTime); stkObjectHeadingAndVelocity[0] = (double)result.DataSets[1].GetValues().GetValue(0); stkObjectHeadingAndVelocity[1] = (double)result.DataSets[4].GetValues().GetValue(0); } Then consider replasing if's with switch: Step 2 switch (typeOfObject) { case "UAV": DoSomeWork(_stkObjectRootToIsolateForUavs); break; case "Entity": DoSomeWork(_stkObjectRootToIsolateForEntities); break; default: throw new NotImplementedException(): } This can be even better when using enums.
