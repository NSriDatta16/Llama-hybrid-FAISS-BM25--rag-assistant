[site]: stackoverflow
[post_id]: 422989
[parent_id]: 
[tags]: 
How would you refactor page members out of ASPX code?

I have inherited a project that uses the following pattern for passing parameters from the code behind to the aspx page. I know this is wrong, but I am on the fence on the best way to refactor it. Code Behind: using System; using System.Web; namespace BadPassing { public partial class _Default : System.Web.UI.Page { private Random rnd = new Random(); //Is this bad? protected int numberOne; //this is bad protected int numberTwo; //this is bad protected void Page_Load(object sender, EventArgs e) { numberOne = rnd.Next(100); numberTwo = rnd.Next(100); } } } ASPX Page: Bad Page %2B "> Add and using google. My understanding is that the numberOne and numberTwo are not thread-safe, and could cause incorrect behavior if two people loaded the page at the same time. Furthermore, if the page relied on numberOne and numberTwo to store values between postbacks, multiple simultaneous users would cause unexpected results. Is my understanding of why this the above technique is so bad correct, and if so, how would you best refactor this code? On a side note, is it incorrect to store stateless page-level services (like Random) as member variables of the page class?
