[site]: stackoverflow
[post_id]: 2125793
[parent_id]: 2124772
[tags]: 
The trick to understanding recursion on a very basic level is to trace the execution and write out the sequence of calls. The following might help you to understand how this works. I indented each call to Recurse() and included the line numbers that are executed. 3: myInput = 'A' 5: Reverse() 3: myInput = 'B' 5: Reverse() 3: myInput = 'C' 5: Recurse() 3: myInput = '\n' So this will output '\nCBA'. As for the logic in the base condition, remember De Morgan's Laws : (NOT P) AND (NOT Q) -> NOT (P OR Q) (myInput != '\n') && (myInput != EOF) -> (!(myInput == '\n')) && (!(myInput == EOF)) -> !((myInput == '\n') || (myInput == EOF)) The if statement on line 4 will exclude newlines and the end of file condition so the recursion stops when it encounters either condition. This is what causes the recursion to only read one line from the file.
