[site]: stackoverflow
[post_id]: 3980207
[parent_id]: 3978869
[tags]: 
My understanding is that you can't, because there isn't any way provided for the client application to get a target handle to you. If you were writing a privileged native service, you could register with the binder driver under your chosen name, but presumably you aren't an oem in possession of the system certificate for the device. A typical java-type service causes handle generation based on intents rather than a binder service name, but you'd have to do a lot of discouraged faking of the existing interface to binder in order to be able to handle that from native code rather than from java. If you don't want to go back up through jni and do it from java, it's probably better to use unix domain sockets rather than binder. (sorry if I'm using the wrong terms - I was looking into this in extreme detail a month ago, found a couldn't do what I wanted and dropped it)
