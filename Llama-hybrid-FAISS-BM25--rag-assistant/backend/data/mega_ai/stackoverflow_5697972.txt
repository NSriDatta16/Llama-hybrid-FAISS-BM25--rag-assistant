[site]: stackoverflow
[post_id]: 5697972
[parent_id]: 5697925
[tags]: 
I would recommend letting the Java 2D library worry about the conversion: create a greyscale BufferedImage (BufferedImage.TYPE_BYTE_GRAY); get a graphics context by createGraphics() ensure that colour rendering is accurate on that graphics context: call setRenderingHint(RenderingHints.KEY_COLOR_RENDERING, RenderingHints.VALUE_COLOR_RENDER_QUALITY) draw the colour image you want to "convert" to the graphics context If you do the conversion "manually" and you want to do it as accurately as possible, then you need to take into account that the eye is more sensitive to certain colour components than others. (If you want a "rough and ready" conversion, you can average the colour components, but this isn't strictly speaking the most accurate conversion.)
