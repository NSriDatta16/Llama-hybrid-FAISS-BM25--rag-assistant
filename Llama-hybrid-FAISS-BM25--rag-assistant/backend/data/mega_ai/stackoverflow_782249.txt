[site]: stackoverflow
[post_id]: 782249
[parent_id]: 781828
[tags]: 
Ridiculous feature requests fall into two camps for me when responding to them. Feature will cause the application to stop functioning as expected, i.e. breaks it, slows it down too much, makes it unworkable Feature that will not cause the application to stop functioning as expected but I don't understand why you'd want such a feature For type 1 I'll analyse the request and respond with either hard facts or professional opinion. If the analysis indicates that it may be possible with additional effort on existing code then estimate and estimate high! For type 2, firstly I'll ask the requestor to explain the feature in more detail, after all they may work in an area of the business that I don't have a clear understanding of beyond the problem space for the original application spec. If I still don't get it and I really cannot see the purpose of the feature then I estimate high to discourage them. If they accept the estimate or I do, finally, get it then I do it. At the end of the day, they are the customer and if a customer goes into the tailor and asks for trousers with 4 legs, the tailor may argue for a while but in the end it's a custom job and far more expensive. So if they see enough value in the feature that they are willing to pay be willing to take their money; just because you can't see the value doesn't mean they are wrong.
