[site]: stackoverflow
[post_id]: 4741936
[parent_id]: 
[tags]: 
Is there ambiguity in the way "reference" is used?

For example, in PHP we can write something like this: class C { var $x; function __construct($x) { $this->x = $x; } function __toString() { return (string)$this->x; } } function f1($obj) { $obj->x = 2; } $a = new C(1); f1($a); echo $a; // 2 And some would say that this indicates objects are passed by reference, because you can modify their properties and those changes are reflected outside of the class. i.e., the object is not copied the way primitives are. But then we can write this: function f2($obj) { $obj = new C(2); } $b = new C(1); f2($b); echo $b; // 1 Which now suggests the object is not passed by reference at all. In reality, the object is copied (i.e., passed by value) but not deep -copied; $obj is copied, but $x still refers to the same thing. I've heard the word "reference" used to mean both ways; some would say PHP is pass by reference, others would say pass by value. If we say that PHP is pass by reference, then what do we mean when say define a function like function f3(&$obj) ? That function takes a reference an to an object, this suggests the first meaning is wrong. But then what about languages like C++, and structs in C#? My C++ is a bit rusty, but I believe the whole class actually gets deep-copied when pass it around, which is why it's encouraged to make your functions take references if possible, or use pointers. In C# there's a difference between structs and classes in how they get passed. What do you call this deep-copying behaviour, if not pass by value? It seems we have 3 behaviours and only two phrases to describe them, and this is creating a lot of confusion in the community. Heck, I'm just waiting for one of you to tell me I wrote something wrong here. In summary, the 3 behaviours are: Objects are deep-copied (the object and its properties are cloned) Only the object is copied (its properties still refer to the same chunk of memory) The object is not copied at all Technically, what should we call each of these behaviours? pass-by-???
