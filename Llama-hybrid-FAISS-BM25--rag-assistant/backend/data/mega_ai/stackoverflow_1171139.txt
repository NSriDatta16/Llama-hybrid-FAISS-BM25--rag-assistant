[site]: stackoverflow
[post_id]: 1171139
[parent_id]: 1171120
[tags]: 
No, GCC does not protect you from a library not using include guards like you described - that is up to the library in question. (And not part of GCC.) All prominent C standard libraries (glibc, newlibc, ulibc) do guard their includes correctly. (As they are widely used, such a blatant problem would be quickly discovered.) Edit: After your second comment, your question makes more sense now. Quoting from ISO/IEC 9899:1999 (C99), chapter 7.1.2 Standard Headers, paragraph 4, first sentence: Standard headers may be included in any order; each may be included more than once in a given scope, with no effect different from being included only once, except that the effect of including depends on the definition of NDEBUG (see 7.2). That means, if any Standard C library you come across gives you trouble, it's broken.
