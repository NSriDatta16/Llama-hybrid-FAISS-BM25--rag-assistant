[site]: datascience
[post_id]: 52716
[parent_id]: 
[tags]: 
Autoencoder gets ~0% accuracy / doesn't train at all

So I wanted to get into the topic of 'Autoencoder', and just tested how well it would work on random vectors of size 200. model = keras.models.Sequential() model.add(keras.layers.Dense(50, activation='tanh')) model.add(keras.layers.Dense(200)) model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc']) model.fit(vectors, vectors, epochs=50, batch_size=100) Loss is somehow negative, and continously decreases. Accuracy is pretty much 0%, with values looking like x.xxxxxxxe-07 . The architecture is supposed to be input=200, hidden-layer=50, output=200. It really doesn't learn anything. What did I overlook, or what is the actual right approach here?
