[site]: stackoverflow
[post_id]: 2492280
[parent_id]: 2349091
[tags]: 
I ran into this issue when using StructureMap and NHibernate. Basically, I have structuremap map a named object (eg. CurrentUser). In that mapping, it uses an NHibernate session to retrieve the current user from the db. Then in my code somewhere, I was doing something like: using (var transaction = _session.BeginTransaction()) { var user = ObjectFactory.GetNamedInstance ("CurrentUser"); var myObjects = _session.QueryOver ().Where(x => x.User == CurrentUser).Future(); transaction.Commit(); } The error is thrown because the transaction is disposed as part of the current user operation. So when program execution reaches the transaction.Commit() line, there is no transaction to commit. My solution was to just move the user line outside of the transaction statement: var user = ObjectFactory.GetNamedInstance ("CurrentUser"); using (var transaction = _session.BeginTransaction()) { var myObjects = _session.QueryOver ().Where(x => x.User == CurrentUser).Future(); transaction.Commit(); } This will allow the transaction around the current user retrieval to be independent of the transaction for MyObject.
