[site]: stackoverflow
[post_id]: 30700
[parent_id]: 29557
[tags]: 
MSTest is certainly not as efficient or extensible as some of the open source frameworks, but it is workable. Since the question asks about making life easier with MSTest and not about alternatives, here are my MSTest tips. Shortcuts . Like Haacked said, take a few seconds to learn the shortcuts. Current Context . Since MSTest is so slow, run tests only in the current context when you can. ( CTRL + R , CTRL + T ). If your cursor is in a test method, this will only run the method. If your cursor is outside a method, but in a test class, this will only run the test. And with namespace, etc etc Efficient tests and organization . It's dog slow. Make things as best as you can by writing efficient tests. Move slow tests to other test classes or projects so you can run the fast tests more frequently. Testing with WCF . If you're testing services, be sure to DEBUG tests rather than RUN tests so Visual Studio can fire up the ASP.NET development web servers. After these are up, then you can go back to RUN, but it can be easier to just always DEBUG so you don't have to think about it. Config Files . Edit your test-run configuration to move .config files into the test execution folder. Integration with Source Safe . You need to be aware that MSTest hates SourceSafe and the feeling is mutual. Because MSTest wants to put test files under source control, and add them to the solution, it must check out the solution every time you run tests. So SourceSafe must be running in multi-check-out mode to avoid killing your fellow developers. Ignore the fluff With MSTest, you get a dozen different windows and views. Test Runs, Test View, Test Lists ... they're all less-than-helpful. Stick with Test Results and you'll be much happier. Stick with "Unit Tests" . When you add a new test, you can add an ordered test, a unit test, or run through a wizard. Stick with just plain simple unit tests.
