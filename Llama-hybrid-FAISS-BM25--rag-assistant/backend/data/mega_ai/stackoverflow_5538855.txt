[site]: stackoverflow
[post_id]: 5538855
[parent_id]: 5538715
[tags]: 
Do you mean that in your first implementation, your response was a PNG file, but now you wish to make the response an HTML file instead, containing the image? Well firstly, you need to change the response MIME type from image/png to text/html or similar. Secondly, I'm not sure why you are passing a HttpResponse object (containing the PNG data) into the template. Can the template even read that? Surely you just want to be passing the raw PNG data, not a HttpResponse object. Finally, how to do it. Well as you may know, HTML isn't so great at embedding images. As with normal websites, you can include text in the page, but if you want an image, you need a separate file and link to it using the element. This is tricky to do dynamically: it means you need to setup two separate URLs (one for the PNG and one for the HTML), which run independently of one another (you can't just have one piece of code; you need one handler for generating the PNG and the other for generating the HTML), and have the HTML link to the PNG URL. If that is too hard, there is another way out, but it is a bit hacky: data URLs . They let you include image data in the HTML page itself , so you only need to produce one response. Unfortunately it is not well supported in Internet Explorer pre-9. IE8 supports images less than 32K, IE7 and below don't work. See the example on Wikipedia -- you are aiming to generate something like this: Basically, take the PNG data, and Base64-encode it (use Python's base64 library). Then just put " data:image/png;base64, " in front of it, and set that as the URL for the img src. In other words, pass the Base64-encoded string to Django's template engine, and construct the URL as part of the img tag in the template.
