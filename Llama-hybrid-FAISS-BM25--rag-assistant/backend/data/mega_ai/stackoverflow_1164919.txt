[site]: stackoverflow
[post_id]: 1164919
[parent_id]: 1164891
[tags]: 
It tells the compiler to generate code for the inline; routine on the place where it is called, instead of jumping to the routine and back. For procedures that translate to very short assembler, this can be a benefit to performance, because the actual code is relatively short compared to the parameter preparation, the actual calling and the procedure prologue/epilogue. If the procedure is too long, it can be a brake on performance though, and blow up your code gigantically. The "Auto" setting should make this decision for you, but in specific cases, you can locally set {$inline to on to force it. (e.g. for C macros translated to pascal functions, like the zlib functions to work with bitstreams )
