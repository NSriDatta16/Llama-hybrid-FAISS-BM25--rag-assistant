[site]: crossvalidated
[post_id]: 503814
[parent_id]: 
[tags]: 
What is the best way to form a confidence interval for a weighted sum of expected responses in a GLM?

Suppose you have a generalised linear model (GLM) with link function $g$ so that the true expected responses in your model (with $n$ data points) are: $$\mu_i \equiv \mathbb{E}(Y_i | \mathbf{x}_i) = g^{-1}(\mathbf{x}_i \boldsymbol{\beta}) \quad \quad \quad \text{for } i = 1,...,n.$$ Now, suppose you have a set of known weights $\omega_1,...,\omega_n$ and you want to make an inference about the weighted sum of the expected responses: $$\mu_\omega \equiv \sum_{i=1}^n \omega_i \mu_i = \sum_{i=1}^n \omega_i \cdot g^{-1}(\mathbf{x}_i \boldsymbol{\beta}).$$ This kind of problem arises in certain applications where you want to form some kind of "standardised" or "weighted" expected response using a set of exogenous weights. In most models of interest, the link function $g$ is nonlinear, so its inverse $g^{-1}$ is also nonlinear. Thus, the inference here is (usually) about a nonlinear function of the parameter vector $\boldsymbol{\beta}$ . Presumably this means that forming a confidence interval involves use of the asymptotic normal distribution for the coefficient vector, combined with the delta method to deal with the nonlinear transform. I am aware of some general ways this could be done (e.g., delta method, simulation, etc.), but I'm not sure what is "best practice" here. Question: What is the best way to form a confidence interval for $\mu_\omega$ ? How is this implemented using a glm model in R ? (An example for a logistic regression would be lovely.)
