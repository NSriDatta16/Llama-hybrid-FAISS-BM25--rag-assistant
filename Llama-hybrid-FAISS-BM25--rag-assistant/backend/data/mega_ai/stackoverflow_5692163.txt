[site]: stackoverflow
[post_id]: 5692163
[parent_id]: 5692069
[tags]: 
With the requirements you're talking about (admins being able to revoke privileges that are communicated via attributes, etc), it sounds like running your own provider is the best way to go, as a public provider would be less likely to offer the flexibility you want. DotNetOpenAuth has full support of AX as both consumer and provider, so it'd be a good place to start- you could also build all your admin-level storage and attribute communication customizations on top of it. It's still not a turnkey solution (ie, coding will be required to "source" the AX values from wherever they're stored), but it's a whole lot better than trying to start from scratch. Lots of good samples and community, and the main author is active on StackOverflow.
