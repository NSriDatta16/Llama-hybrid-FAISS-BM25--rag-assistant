[site]: stackoverflow
[post_id]: 1948986
[parent_id]: 1945634
[tags]: 
This question highlights one of my pet peeves about the common understanding of functional programming. Having language features like closures and first-class functions do not make a language a functional programming language . Functional programming is as much about a specific style of programming as it is about specific language constructs. Python has closures, first-class functions, and yes, even a function called "map", but the language itself encourages a procedural, OOP, imperative style of programming; so even if you make use of the functional features, you're still programming imperatively. As a purely functional language , Haskell basically mandates that one program in a declarative , functional style, so hands-down, Haskell is "more functional" than Python.
