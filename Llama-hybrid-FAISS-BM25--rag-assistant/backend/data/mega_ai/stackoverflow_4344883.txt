[site]: stackoverflow
[post_id]: 4344883
[parent_id]: 
[tags]: 
Is it an elegant solution of the duplicate local variable problem?

Integer[] lastExchange = new Integer[nColors]; Integer[] exchangeToAdd = new Integer[nColors]; lastExchange = getValue(); exchangeToAdd = getValue(); exchanges.add(exchangeToAdd); Integer[] newExchange = new Integer[nColors]; while (true) { newExchange = getValue(lastExchange); Integer[] exchangeToAddForLoop = new Integer[nColors]; for (int i=0; i ADDED What I am trying to do with this code? I need to populate (fill in) the list called exchanges . The first element of the list is lastExchange . My problem with the code is that I always need to create two duplicates of an variable (it is why I think that the code is not elegant but I cannot find a better solution). For example, in the very beginning I create lastExchange and then I create exchangeToAdd (that has the same value as lastExchange ). The same happens in the loop. I create lastExchange and then I create exchangeToAddForLoop . I do so because I cannot add lastExchange to the list because it will be modified latter. ADDED 2 Here is my problem. I have the code like that: Integer[] e = getValue(); Integer[] e1 = getValue(); // and I need to calculate e1 and e2 additionally to the calculation of e .
