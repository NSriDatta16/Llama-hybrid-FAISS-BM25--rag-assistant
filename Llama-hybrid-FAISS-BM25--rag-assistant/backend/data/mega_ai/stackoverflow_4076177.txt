[site]: stackoverflow
[post_id]: 4076177
[parent_id]: 
[tags]: 
Type definitions across modules

module type ELEMENT = sig type element_i end module Element:ELEMENT = struct type element_i = N of int | CNN of cnn end module type SEMIRING = functor (E:ELEMENT)-> sig type elements end module Semiring:SEMIRING = functor(Element:ELEMENT) -> struct let zero = (Element.element_i 0) (*ERROR: Unbounded Value; Same with N 0*) end How can I create objects of the type element_i inside Semiring module here?
