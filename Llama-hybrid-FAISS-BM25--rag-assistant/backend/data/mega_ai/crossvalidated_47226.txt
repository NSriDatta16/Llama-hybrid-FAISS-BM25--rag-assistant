[site]: crossvalidated
[post_id]: 47226
[parent_id]: 47185
[tags]: 
I am not an R expert so maybe there is a simpler way but I have come across this before. What I did before is implement a function that measures the distance (in time units) between the actual dates and saves that in a new column in the existing time series. So we have something like: index/date | value | distance 01.01.2011 | 15 | 1 02.01.2011 | 17 | 3 05.01.2011 | 22 | .. This way, if your time series is not yet associated with an actual series of points in time (or wrong format or whatever), then you can still work with it. Next, you write a function that creates a new time series for you, like so: First, you calculate how many units of time the time series actually would have between the dates of your chosing and create that timeline in zoo or ts or whatever the choice is with empty values. Second, you take your incomplete time series array and, using a loop, fill the values into the correct timeline, according to the limits of your choosing. When you come upon a row where the unit distance is not one (days (units) are missing), you fill in interpolated values. Now, since this is your function, you can actually chose how to interpolate. For example you decide that if the distance is less than two units, you use a standard linear interpolation. If a week is missing, you do something else and if a certain threshold of missing dates is reached, you give out a warning about the data - really whatever you want to imagine. If the loop reaches the end date you return your new ts. Advantage of such a function is that you can use different interpolations or handling procedures depending on the lengths of the gap and return a cleanly creates series in the format of your choosing. Once written, it allows you to gain clean and nice ts out of any sort of tabular data. Hope this helps you somehow.
