[site]: stackoverflow
[post_id]: 4495808
[parent_id]: 4460921
[tags]: 
As others have said, one approach is to use the wikimedia API and urllib or urllib2. The code fragments below are part of what I used to extract what is called the "lead" section, which has the article abstract and the infobox. This will check if the returned text is a redirect instead of actual content, and also let you skip the infobox if present (in my case I used different code to pull out and format the infobox. contentBaseURL='http://en.wikipedia.org/w/index.php?title=' def getContent(title): URL=contentBaseURL+title+'&action=raw&section=0' f=urllib.urlopen(URL) rawContent=f.read() return rawContent infoboxPresent = 0 # Check if a redirect was returned. If so, go to the redirection target if rawContent.find('#REDIRECT') == 0: rawContent = getFullContent(title) # extract the redirection title # Extract and format the Infobox redirectStart=rawContent.find('#REDIRECT[[')+11 count = 0 redirectEnd = 0 for i, char in enumerate(rawContent[redirectStart:-1]): if char == "[": count += 1 if char == "]}": count -= 1 if count == 0: redirectEnd = i+redirectStart+1 break redirectTitle = rawContent[redirectStart:redirectEnd] print 'redirectTitle is: ',redirectTitle rawContent = getContent(redirectTitle) # Skip the Infobox infoboxStart=rawContent.find("{{Infobox") #Actually starts at the double {'s before "Infobox" count = 0 infoboxEnd = 0 for i, char in enumerate(rawContent[infoboxStart:-1]): if char == "{": count += 1 if char == "}": count -= 1 if count == 0: infoboxEnd = i+infoboxStart+1 break if infoboxEnd <> 0: rawContent = rawContent[infoboxEnd:] You'll be getting back the raw text including wiki markup, so you'll need to do some clean up. If you just want the first paragraph, not the whole first section, look for the first new line character.
