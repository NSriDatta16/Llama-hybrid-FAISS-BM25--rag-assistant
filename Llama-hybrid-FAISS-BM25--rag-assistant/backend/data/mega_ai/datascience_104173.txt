[site]: datascience
[post_id]: 104173
[parent_id]: 
[tags]: 
Creating a Sentiment dictionary from scratch

I am analyzing Arabic textual data from a social media forum discussing economic issues such as labor unions. I am using a package that classifies as negative, positive, or neutral. For instance, the first column is the post is the input, while the second is the sentiment analysis of the text: Post Sentiment 1-"Let's organize a strike to demand higher wages" Negative 2-"The whole system needs to be revamped, not enough to simply unionize and go on a strike" Negative However, I would like to also know whether a post that is classified as negative contains: political_demands, economic_demands, and/or calls for collective_action. For example, based on the two posts above, my dataset would have three additional columns: Post Sentiment Economic_demands Political_Demands collective_action 1-"Let's organize a strike to demand higher wages" Negative Yes No Yes 2-"The whole system needs to be revamped, not enough to simply unionize and go on a strike" Negative No Yes Yes Therefore, I need to create a dictionary that categorizes posts classified as having a negative sentiment into several groups: political_demands, economic_demands, and/or calls for collective_action. I am not sure whether it makes more sense to create a dictionary based on words or phrases/topics in the dataset. Following the method used here , I am creating a dataset called "Dictionary" where I classify words as positive or negative, then merging it with my dataset on social media posts, is this an efficient classification approach? Raw_data_on_posts %>% mutate(p_count = str_count(post, str_c(Dictionary$positive, collapse = '|')), n_count = str_count(post, str_c(Dictionary$negative, collapse = '|'))) %>% mutate(label = case_when(p_count > n_count ~ 'positive', p_count % select(post, label)
