[site]: stackoverflow
[post_id]: 384450
[parent_id]: 384431
[tags]: 
There's no elegant way around it that I can think of - your best bet is to forward-define the functions that will actually be used. So, if game.h only uses the connect() function from socket.h, add this line to game.h: void connect(); And remove the socket.h import. Of course if the signature of connect() changes you'll need to remember to update the forward definition too, so this solution is far from ideal. If you possibly can, modify the design to avoid the circular dependencies. If game.h just needs to know about a class in socket.h, forward define it like this: class Socket; There are some caveats when it comes to inline functions and member objects, see The C++ FAQ Lite .
