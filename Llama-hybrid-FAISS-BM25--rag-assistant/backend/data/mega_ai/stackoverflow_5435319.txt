[site]: stackoverflow
[post_id]: 5435319
[parent_id]: 
[tags]: 
Using with vs declare a temporary table: performance / difference?

I have created a sql function in SQLServer 2008 that declared a temporary table and uses it to compute a moving average on the values inside declare @tempTable table ( GeogType nvarchar(5), GeogValue nvarchar(7), dtAdmission date, timeInterval int, fromTime nvarchar(5), toTime nvarchar(5), EDSyndromeID tinyint, nVisits int ) insert @tempTable select * from aces.dbo.fEDVisitCounts(@geogType, @hospID,DATEADD(DD,-@windowDays + 1,@fromDate), @toDate,@minAge,@maxAge,@gender,@nIntervalsPerDay, @nSyndromeID) INSERT @table (dtAdmission,EDSyndromeID, MovingAvg) SELECT list.dtadmission , @nSyndromeID , AVG(data.nVisits) as MovingAvg from @tempTable as list inner join @tempTable as data ON list.dtAdmission between data.dtAdmission and DATEADD(DD,@windowDays - 1,data.dtAdmission) where list.dtAdmission >= @fromDate GROUP BY list.dtAdmission but I also found out that you can declare the tempTable like this: with tempTable as ( select * from aces.dbo.fEDVisitCounts('ALL', null,DATEADD(DD,-7,'01-09-2010'), '04-09-2010',0,130,null,1, 0) ) Question: Is there a major difference in these two approaches? Is one faster than the other or more common / standard? I would think the declare is faster since you define what the columns you are looking for are.. Would it also be even faster if I were to omit the columns that were not used in the calculations of moving average?(not sure about this one since it has to get all of the rows anyways, though selecting less columns makes intuitive sense that it would be faster/less to do) I also have found a create temporary table @table from here How to declare Internal table in MySQL? but I don't want the table to persist outside of the function (I am not sure if the create temporary table does this or not.)
