[site]: stackoverflow
[post_id]: 3323102
[parent_id]: 
[tags]: 
Way for C++ destructor to skip work when specific exception being thrown?

I have an object on the stack for which I wish its destructor to skip some work when the destructor is being called because the stack is being unwound due to a specific exception being thrown through the scope of the object on the stack. Now I could add a try catch block inside the scope of the stack item and catch the exception in question and notify the stack object to not run the work to be skipped an then rethrow the exception as follows: RAII_Class pending; try { doSomeWorkThatMayThrowException(); } catch (exceptionToSkipPendingDtor &err) { pending.notifySkipResourceRelease(); throw; } However, I'm hoping there is a more elegant way to do this. For example imagine: RAII_Class::~RAII_Class { if (detectExceptionToSkipPendingDtorBeingThrown()) { return; } releaseResource(); }
