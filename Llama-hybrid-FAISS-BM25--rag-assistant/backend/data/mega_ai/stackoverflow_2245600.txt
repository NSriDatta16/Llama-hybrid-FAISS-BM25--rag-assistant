[site]: stackoverflow
[post_id]: 2245600
[parent_id]: 2242281
[tags]: 
Yes, you're right autorelease pools are discouraged for iPhone development when they're not absolutely necessary. They are discouraged because it allows objects to stay in memory longer then necessary this is a problem when developing applications for the iPhone, where memory is scarce. Autoreleased objects don't get released until it makes it back to the main autorelease pool created in main.c and this could be a long time. (unless you created your own autorelease pool, I'll talk about this last.) A case where an autoreleased object is not necessary: NSString *string = [NSString stringWithString:@"hello world"]; //use string The first case is more convenient since I don't have to worry about releasing string later but it could have been easily been replaced with: NSString *string = [[NSString alloc] initWithString:@"hello world"]; // use string [string release]; For these cases avoiding the autoreleased object is recommended. When you're passing back objects using autorelease is unavoidable . You must use: -(NSArray *)findThings { NSArray* things = [[[NSArray alloc] init] autorelease]; // add some lovely things to my shiny new array return things; } Since the object is invalid as soon as you call release . -(NSArray *)findThings { NSArray* things = [[NSArray alloc] init]; // add some lovely things to my shiny new array [things release]; // things is now in invalid object if you could potentially use things later it should be set to nil to avoid a crash things = nil; // sending messages to nil is okay, it won't cause a crash, sending messages to a released object is not okay, it can cause unpredictable crashes. return things; } In cases where you're using a large amount of autoreleased memory you should create and drain your own autorelease pool so the autorelease memory doesn't stay around longer then necessary. -(void)useLotsOfAutoReleasedObjects { NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init]; // lots of autoreleased object // large autoreleased objects [pool drain]; // autorelease objects are released too } [pool drain] also releases the pool, see the NSAutoreleasePool Reference for more information.
