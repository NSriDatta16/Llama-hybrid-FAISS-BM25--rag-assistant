[site]: stackoverflow
[post_id]: 358191
[parent_id]: 358136
[tags]: 
Keeping auxillary memory usage to a minimum, your best bet would be to do an efficient sort to get them in order, then do a single pass of the array with a FROM and TO index. You advance the FROM index every time through the loop. You only copy the element from FROM to TO (and increment TO) when the key is different from the last. With Quicksort, that'll average to O(n-log-n) and O(n) for the final pass.
