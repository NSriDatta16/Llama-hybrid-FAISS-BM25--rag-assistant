[site]: datascience
[post_id]: 81295
[parent_id]: 
[tags]: 
Neural Network written in Kotlin working for simple math problems but not for MNIST classification

I'm building a neural network in Kotlin while reading the book "Neural Networks and Deep Learning" from Michael Nielsen. At the moment the network uses: sigmoid neurons, backpropagation, stochastic gradient descent, $1 \over \sqrt {n_{in}}$ standard deviation for weight initialization, L2 regularization, and cross-entropy . I also created a plotter to monitor the learning process. Here is how the network behaves with a simple problem, finding the bigger of two numbers : Pretty good, we have a peak of 99.99% . I can't understand why the cost is increasing instead of decreasing, but still the accuracy is good. Things get way worse with MNIST classification ; the net is basically giving random answers: I wonder what can change the behaviour of the network this much. I checked the MNIST data, and it seems all right. What problem can cause this kind of learning absence? The algorithm is broken? The hyper-parameters are wrong? All help is appreciated.
