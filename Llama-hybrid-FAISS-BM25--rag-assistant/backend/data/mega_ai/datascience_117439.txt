[site]: datascience
[post_id]: 117439
[parent_id]: 
[tags]: 
ValueError: Input 0 of layer "model_12" is incompatible with the layer: expected shape=(None, 256, 256, 3), found shape=(256, 256, 3)

I am following this keras example with my own dataset, which has 3 classes. I load the images using train = tf.keras.utils.image_dataset_from_directory(cloud_dir, labels = "inferred", label_mode="categorical", batch_size=None) I am not using a validation set nor a batch size. I am also augmenting and prefetching the data set by data_augmentation = keras.Sequential( [ keras.layers.RandomFlip("horizontal"), keras.layers.RandomRotation(0.1), ] train = train.map( lambda img, label: (data_augmentation(img), label), num_parallel_calls=tf.data.AUTOTUNE, ) train = train.prefetch(tf.data.AUTOTUNE) The train object is now of the following type I wanted to play around with layers since I am new to neural networks and my dataset is not the same as in the example, so my model is not exactly like the one given in the link. def make_model(input_shape, num_classes): inputs = keras.Input(shape=input_shape, batch_size=None) x = layers.Rescaling(1.0 / 255)(inputs) for size in [32,64,128]: x = layers.Conv2D(size, (2,2), strides=2, padding="same", input_shape = input_shape)(x) x = layers.Activation("relu")(x) x = layers.MaxPooling2D(pool_size=(2, 2),padding='same')(x) activation = "softmax" units = num_classes outputs = layers.Dense(units, activation=activation)(x) return keras.Model(inputs, outputs) model = make_model(input_shape=(256,256,3), num_classes=3) tf.keras.utils.plot_model(model, show_shapes=True) Finally I compile and train the model epochs = 25 callbacks = [ keras.callbacks.ModelCheckpoint("save_at_{epoch}.keras"), ] model.compile( optimizer=keras.optimizers.Adam(1e-3), loss="binary_crossentropy", metrics=["accuracy"], ) model.fit( train, epochs=epochs, callbacks=callbacks ) However, at this point I get the error from the title ValueError: Input 0 of layer "model_12" is incompatible with the layer: expected shape=(None, 256, 256, 3), found shape=(256, 256, 3) I don't know why the layers expect the extra None dimension and I don't know how to reshape the train object. I have tried reshaping using the answers given here but the type of my train object is not subcriptable. Can someone explain me why and how I should make shapes match?
