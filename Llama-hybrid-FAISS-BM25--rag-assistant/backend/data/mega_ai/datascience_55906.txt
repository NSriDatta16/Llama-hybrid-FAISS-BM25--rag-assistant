[site]: datascience
[post_id]: 55906
[parent_id]: 55896
[tags]: 
You have several good tutorials on the web : https://www.kaggle.com/poonaml/text-classification-using-spacy Basically, you have to : Import the data in python, here POSITIVE is the variable to predict and 0 and 1 are the 2 encoded classes. TRAIN_DATA = [(Text1, {'cats': {'POSITIVE': 1}}), (Text2, {'cats': {'POSITIVE': 0}})] Initialize a textcat pipe in a spacy pipeline object (nlp), and add the label variable in it. nlp = spacy.load('en_core_web_sm') if 'textcat' not in nlp.pipe_names: textcat = nlp.create_pipe("textcat") nlp.add_pipe(textcat, last=True) else: textcat = nlp.get_pipe("textcat") textcat.add_label('POSITIVE') Iterate the training examples to optimize the model other_pipes = [pipe for pipe in nlp.pipe_names if pipe != 'textcat'] n_iter = 1 # Only train the textcat pipe with nlp.disable_pipes(*other_pipes): optimizer = nlp.begin_training() print("Training model...") for i in range(n_iter): losses = {} batches = minibatch(train_data, size=compounding(4,32,1.001)) for batch in batches: texts, annotations = zip(*batch) nlp.update(texts, annotations, sgd=optimizer, drop=0.2, losses=losses)
