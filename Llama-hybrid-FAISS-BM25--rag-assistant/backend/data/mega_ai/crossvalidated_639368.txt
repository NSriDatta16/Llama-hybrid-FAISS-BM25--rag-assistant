[site]: crossvalidated
[post_id]: 639368
[parent_id]: 
[tags]: 
Linear mixed model fixed and random effects with physiological data

I am working on a data set containing resistance exercise data of multiple participants. I am examining 26 weeks of data points from males and females in different age groups with different training status. To render the force measurements comparable and plot the progress over time. I normalized the force data (maxForce[i]/maxForce[0]). The goal is to make ggline plots with pairwise comparisons of the gender including the p values in the plot over time (y-axis: NormalizedForce and x-axis: OneWeekBins). To achieve this, I need to do the statistics first. I am currently struggling building a valid linear mixed model. My dependent variable is NormalizedForce. In my opinion, gender and TrainingStatus are the fixed factors, while age and OneWeekBin (time) are the random factors. mm Are my assumptions for the lmm correct? How would I posthoc pairwise compare male/females at different time points (OneWeekBin)? What would be a efficient way to add pairwise brackets on the ggline plot? leg_press1 %>% dplyr::filter(TrainingStatus=="unexperienced") %>% ggline(x = "OneWeekBin", y = "NormalizedForce", add = c("mean_se"), color = "gender", palette = c("#00AFBB", "#E7B800")) structure(list(ID = structure(c(9L, 9L, 9L, 9L, 9L, 9L), levels = c("1008", "1010", "1034", "1085", "1157", "1278", "1314", "1352", "142", "1442", "145", "1505", "1679", "1688", "1692", "1824", "1833", "1834", "1856", "1939", "1998", "2044", "208", "2138", "2225", "287", "319", "366", "440", "511", "512", "561", "600", "641", "680", "688", "837", "851", "889", "923", "935", "967"), class = "factor"), createdAt = structure(c(1671446484.854, 1672151874.9, 1672825525.236, 1673431127.42, 1674036436.481, 1674641690.549), tzone = "UTC", class = c("POSIXct", "POSIXt")), gender = structure(c(1L, 1L, 1L, 1L, 1L, 1L), levels = c("FEMALE", "MALE"), class = "factor"), age = c(67, 67, 67, 67, 67, 67 ), ageGroup = structure(c(6L, 6L, 6L, 6L, 6L, 6L), levels = c("(10,20]", "(20,30]", "(30,40]", "(40,50]", "(50,60]", "(60,70]", "(70,80]", "(80,90]", "(90,100]"), class = "factor"), exerciseId = c("LEG_PRESS", "LEG_PRESS", "LEG_PRESS", "LEG_PRESS", "LEG_PRESS", "LEG_PRESS" ), maxForce = c(1068, 1591, 1704, 1983, 1860, 1974), NormalizedForce = c(1, 1.49, 1.6, 1.86, 1.74, 1.85), NumberOfVisits = c(1, 2, 3, 4, 5, 6), OneWeekBin = structure(1:6, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26"), class = "factor"), TwoWeekBins = c(1, 1, 2, 2, 3, 3), DaysSinceLastVisit = c(0, 8, 8, 7, 7, 7), height = c(163, 163, 163, 163, 163, 163), weight = c(66, 66, 66, 66, 66, 66), healthcondition = c("\"NO\"", "\"NO\"", "\"NO\"", "\"NO\"", "\"NO\"", "\"NO\""), totalWorkoutsCount = c(49, 49, 49, 49, 49, 49), maxForce_kg = c(108.9, 162.2, 173.7, 202.1, 189.6, 201.2), BMI = c(24.8, 24.8, 24.8, 24.8, 24.8, 24.8), ForceperkgBW_Newton = c(16.2, 24.1, 25.8, 30, 28.2, 29.9), ForceperkgBW_KG = c(1.7, 2.5, 2.6, 3.1, 2.9, 3), factorAge = c("elderly", "elderly", "elderly", "elderly", "elderly", "elderly"), Frequency = c(26L, 26L, 26L, 26L, 26L, 26L), Mean = c(1.03, 1.15, 1.3, 1.31, 1.36, 1.39), SD = c(0.13, 0.32, 0.21, 0.34, 0.27, 0.33), TrainingStatus = c("unexperienced", "unexperienced", "unexperienced", "unexperienced", "unexperienced", "unexperienced"), IQR = c(0, 0.35, 0.2175, 0.38, 0.44, 0.46), O_upper = c(1, 1.8, 1.71375, 2.06, 2.26, 2.275), O_lower = c(1, 0.4, 0.84375, 0.54, 0.5, 0.435), IQROUTLIER = c("FALSE", "FALSE", "FALSE", "FALSE", "FALSE", "FALSE"), IsExtreme = c("FALSE", "FALSE", "FALSE", "FALSE", "FALSE", "FALSE")), class = c("grouped_df", "tbl_df", "tbl", "data.frame"), row.names = c(NA, -6L), groups = structure(list( OneWeekBin = structure(1:6, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26"), class = "factor"), gender = structure(c(1L, 1L, 1L, 1L, 1L, 1L), levels = c("FEMALE", "MALE"), class = "factor"), exerciseId = c("LEG_PRESS", "LEG_PRESS", "LEG_PRESS", "LEG_PRESS", "LEG_PRESS", "LEG_PRESS"), .rows = structure(list(1L, 2L, 3L, 4L, 5L, 6L), ptype = integer(0), class = c("vctrs_list_of", "vctrs_vctr", "list"))), class = c("tbl_df", "tbl", "data.frame" ), row.names = c(NA, -6L), .drop = TRUE))
