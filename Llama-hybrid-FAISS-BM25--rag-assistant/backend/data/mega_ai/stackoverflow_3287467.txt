[site]: stackoverflow
[post_id]: 3287467
[parent_id]: 3286503
[tags]: 
Not quite sure what you want to accomplish - a bit more details would help but here is a shot... So here is an example that 'inserts' the drag into the drop - the css is applied to the helper not the element. $("#draggable").draggable({ revert: 'invalid', helper: 'clone', zIndex: 350, start: function() { $(this).toggle(); }, stop: function() { $(this).toggle(); } }); $("#droppable").droppable({ accept: '#draggable', drop: function(event, ui) { $(this).addClass('highlight').find('p').html('Dropped!'); $(ui.draggable).draggable("destroy").appendTo($(this)); } }); edit - Dived into this a bit deeper, and the reason my posted code works as opposed to the question's is because of the "helper:clone" option in the draggable. When a helper is used, it applies the left/top css to the helper, not to the actual element we are dragging. The start/stop toggles in the draggable make the original element disappear, but turns it back on when its dropped - to simulate the default visual of $().draggable(). Also, I would be careful of the floats you have in your css - that may also give odd results.
