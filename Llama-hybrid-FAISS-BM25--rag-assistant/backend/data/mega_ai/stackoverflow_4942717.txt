[site]: stackoverflow
[post_id]: 4942717
[parent_id]: 4934301
[tags]: 
For batching your @(UnitTestProjects) your Target will have to use it like this: WorkingDirectory="C:\SomeProject\bin\" AppendTrendTo="coverage.trend" OnlyAssembliesWithSource="True" ProjectName="SomeProjectCoverage" /> A more reliable solution would be, to provide a list of TaskItems, holding metadata about your (Test)project. MyProject1 C:\MyProject1\bin MyProject2 C:\MyProject2\bin Your question suggests that you are looking for an automated approach which will allow you to add new test projects without having to maintain a configuration list of TaskItems. Since it would be quite difficult, to extract all the information needed to feed your NCover Task maybe a semi-automated approach might work for you. You could add an import to your test project which will feed your global test project ItemGroup: MyProject1 C:\MyProject1\bin The usage in your NCover Task will be the same as above. This way your master build script doesn't need to know about any specific test project; it just processes your ItemGroup "TestProject".
