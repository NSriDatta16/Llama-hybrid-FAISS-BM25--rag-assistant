[site]: datascience
[post_id]: 102663
[parent_id]: 
[tags]: 
Can quantitative data be calculated from a neural network?

The only success I've seen or had with Neural Nets, is taking whatever input, and outputting Boolean results, yes/no, in the form of a range between in the case in question $0.5$ and $1.0$ , with $0 No and $0.75 Yes. But what if I want a usable value? Like a true blue regression of a complex equation? I see examples of this but I don't see proof. But for sake of argument let's say that I have a value that I expect to fall within a certain range. Lets say the world's fastest airplane engine can crank out 100 m/s^2 acceleration based on some crazy equation regarding its makeup, which can be derived from the input variables. I normalize the inputs to fit within the max engine component size presently in creation so the values stay between 0 and 1 and because the acceleration before a plane tears apart is 100 m/s^2 I divide the training data related to an output of acceleration by 100. Will this ever yield decent result ? How long until enough points are plotted and the weights and biases necessary to produce the correct output are fitted ? Will this ever occur ? What are some metrics for this? Like how should it take to train (rules for calculating an estimate) how should I be designing layers and numbers of neurons? I don't seem to be finding hard and fast answers for this. And is Pytorch trash for this job or will it work fine? So this is a multipart question. I'm seeking some education in the dirty details of this piece of comp sci and math to use as guidelines for design and measuring success. For example, let's say the relationship being plotted is simpler, let's say its a simple velocity calculation given two points and maximum velocity and its a linear one. How many trains should I expect to have run before it works as it should and gives me a coefficient to multiply against the maximum velocity that starts approaching the correct value ? And then how much do additional readable outputs effect this training time ?
