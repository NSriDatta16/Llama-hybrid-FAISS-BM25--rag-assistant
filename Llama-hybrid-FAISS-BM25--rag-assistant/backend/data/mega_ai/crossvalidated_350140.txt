[site]: crossvalidated
[post_id]: 350140
[parent_id]: 349915
[tags]: 
Kernel SVMs often operate on the distance matrix indirectly. For example, the RBF kernel with Euclidean distance is is $$ \begin{align} k(x,y)&=\exp(−\gamma ||x−y||_2^2) \\ &=\exp(−\gamma d(x,y)^2), \end{align} $$ but there's no mathematical impediment to using an alternative to Euclidean distance, such as a distance between two histograms. Suppose that you've recorded all of your pairwise distances in some matrix $M$. The RBF kernel matrix $K$ corresponding to the distance matrix $M$ is given by $$ K_{ij} = \exp(-\gamma M_{ij}^2) $$ where $A_{ab}$ denotes the value stored in the $a$th row of the $b$th column of matrix $A$. Most SVM software allows you to supply your own kernel matrix to the estimation routine, so you can just hand $K$ off to some software and proceed as usual. Importantly, this doesn't necessarily require you to work with a machine learning method which is specialized for histograms, since you've already pre-processed the histogram data into a format which is amenable to SVM. FWIW, this functionality is implemented in Python sklearn and R kernlab . But I've found bugs in kernlab when using a custom kernel function and don't know if they've been fixed .
