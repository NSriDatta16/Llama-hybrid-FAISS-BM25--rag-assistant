[site]: stackoverflow
[post_id]: 4986822
[parent_id]: 4986679
[tags]: 
OK, let's put this into action. As always start by defining a view model: public class ImageData { public string Description { get; set; } public string Filename { get; set; } public string Image { get; set; } } then a controller: public class HomeController : Controller { public ActionResult Index() { return View(); } [HttpPost] public ActionResult Index(IEnumerable images) { foreach (var item in images ?? Enumerable.Empty ()) { var tokens = item.Image.Split(','); if (tokens.Length > 1) { var buffer = Convert.FromBase64String(tokens[1]); var file = Path.Combine(HttpContext.Server.MapPath("~/"), item.Filename); System.IO.File.WriteAllBytes(file, buffer); } } return Json(new { Status = "OK" }); } } and finally a view: drop images here @Html.ActionLink("Upload images", "index", null, new { id = "upload" }) $('#uploadArea').bind('dragover', function (event) { event.preventDefault(); }).bind('drop', function (event) { event.preventDefault(); var files = event.originalEvent.dataTransfer.files; $.each(files, function (index, file) { var img = $(' ') .addClass('droppedImage') .attr('data-filename', file.name); $('#imagesContainer').append(img); img.file = file; var reader = new FileReader(); reader.onloadend = function () { img.attr('src', reader.result); } reader.readAsDataURL(file); }); }); $('#upload').click(function () { var imagesJson = $('.droppedImage').map(function () { var $this = $(this); return { image: $this.attr('src'), filename: $this.attr('data-filename') }; }).toArray(); $.ajax({ url: this.href, type: 'POST', data: JSON.stringify({ images: imagesJson }), contentType: 'application/json', success: function (result) { alert('success'); } }); return false; }); Now fire up your HTML 5 compliant browser and have fun.
