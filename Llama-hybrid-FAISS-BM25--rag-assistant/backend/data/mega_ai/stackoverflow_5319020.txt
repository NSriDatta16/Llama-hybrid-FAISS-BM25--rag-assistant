[site]: stackoverflow
[post_id]: 5319020
[parent_id]: 
[tags]: 
java "redundant" wrapper class?

I probably have my terminology wrong, but could someone explain why we need to wrap the main method in a class? It seems rather redundant to me. Could you then extend this class again, complete with a main ? package bears; import bears.Bear; // what's the point of this Class here? public class MakeBear { public static void main(String[] args) { int age; String name; Bear MyBear = new Bear("Jim", "brown", 12, 50); // constructor age = MyBear.getAge(); name = MyBear.getName(); System.out.println("The bear is called" + name + " and is " + age + " years old!"); } Also, is the above an acceptable way of structuring a program- that is, calling the constructor of the Bear class in the main method, as well as redeclaring variables like so? Just starting out so it's a little bit foreign to me. Part of my Bear class, if it's relevant: public class Bear { private String name; private String colour; private int age; private int weight; public Bear(String bearName, String bearColour, int bearAge, int bearWeight) { name = bearName; colour = bearColour; age = bearAge; weight = bearWeight; } // get/set methods thanks
