[site]: crossvalidated
[post_id]: 9104
[parent_id]: 
[tags]: 
Coverage probabilities of the basic bootstrap confidence Interval

I have the following question for a course I'm working on: Conduct a Monte Carlo study to estimate the coverage probabilities of the standard normal bootstrap confidence interval and the basic bootstrap confidence interval. Sample from a normal population and check the empirical coverage rates for the sample mean. Coverage probabilities for the standard normal bootstrap CI are easy: n = 1000; alpha = c(0.025, 0.975); x = rnorm(n, 0, 1); mu = mean(x); sqrt.n = sqrt(n); LNorm = numeric(B); UNorm = numeric(B); for(j in 1:B) { smpl = x[sample(1:n, size = n, replace = TRUE)]; xbar = mean(smpl); s = sd(smpl); LNorm[j] = xbar + qnorm(alpha[1]) * (s / sqrt.n); UNorm[j] = xbar + qnorm(alpha[2]) * (s / sqrt.n); } mean(LNorm 0); # Approximates to 0.95 # NOTE: it is not good enough to look at overall coverage # Must compute separately for each tail From what I've been taught for this course, the basic bootstrap confidence interval can be calculated like this: # Using x from previous... R = boot(data = x, R=1000, statistic = function(x, i){ mean(x[i]); }); result = 2 * mu - quantile(R$t, alpha, type=1); That makes sense. What I don't understand is how to calculate coverage probabilities for the basic bootstrap CI. I understand that the coverage probability would represent the number of times that the CI contains the true value (in this case mu ). Do I simply run the boot function many times? How can I approach this question differently?
