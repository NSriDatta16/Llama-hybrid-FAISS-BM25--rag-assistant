[site]: stackoverflow
[post_id]: 2685124
[parent_id]: 2684684
[tags]: 
The simplest solution would be to specify a maxlength of 11, test the length on every keyup, and truncate back down to 10 characters but this solution seems a bit kludgy. It is also easily defeated by cut/paste, drag/drop, right-click-undo/redo, etc. There's no reliable way to get every potential bit of input short of polling. Why not set maxlength to 10, to let the browser enforce the limit properly, and just show a warning if there is another attempted keypress? You don't need to prevent any default action because the browser is already taking care of the length, so the amount of key checking you have to do is lower. can't type any more! function LengthMonitor(element, warning) { element.onkeypress= function(event) { if (event===undefined) event= window.event; var code= 'charCode' in event? event.charCode : 'which' in event? event.which : event.keyCode; var full= element.value.length===element.maxLength; var typed= !(code
