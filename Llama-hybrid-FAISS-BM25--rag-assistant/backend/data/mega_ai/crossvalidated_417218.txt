[site]: crossvalidated
[post_id]: 417218
[parent_id]: 
[tags]: 
I'm stuck designing a neural net architecture for my project

A few weeks ago I had the idea to write an app that counts the points of players in finished game of go. Instead of using pure computer vision I wanted to use deep learning. The idea was to translate a picture of a go game into a 19x19x3 px image representing the board position and then count the points. I created all the data for the training. This is how an image looks and its corresponding label. So I am training on like 7000 images/labels like this. I tried out some architectures like multiple conv/pool layers without any FC layers. I am using mostly categorical cross entropy. Sizes of the kernel are 3x3. I played around with different number of filters. Often the training gets like to 60% accuracy and then stops to learn, so no accuracy progress is visible. I am thinking that the architecure is not suitable for my task. Seems like my data is fine although its weird that I always have to cast the data to tf.float32 before training, because tf doesnt let me to use tf.uint8. Any tips how I could better my architecture for this specific task or maybe even a different approach?
