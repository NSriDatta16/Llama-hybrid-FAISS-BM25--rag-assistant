[site]: stackoverflow
[post_id]: 5192617
[parent_id]: 5192471
[tags]: 
Of course the first tip I can give you is to separate the jQuery extensions in their own source files. You can always serve everything together with a minification tool, so you should not worry about performance. About the code youo mention, it could be simplified to var Product = { sku: '', name: '', price: '' } var myProduct = objectCopy(Product); var Basket = {}; provided you write a simple objectCopy function which loops through the object own properties and just copies them to a new object (you can make a shallow or a deep copy, according to your needs). Finally, if you think your code is starting to get messy, you may want to learn some patterns to organize JS code, like the module pattern . Alternatively, if you are familiar with doing this on the backend, you may want to organize your application following the MVC pattern. personal advertisement - I have written myself a tiny library which helps organize your code in this fashion . There are also many other libraries for the same task, often adding other functionality as well. If you follow the MVC pattern, your page will actually correspond to some action in some controller, and you could just start it with a call like someController.someAction() in the head of your document, hence removing the need for the manual check for #myDiv . If you use my library MCV, it will be enough to declare your body like and start the application with $(document).ready(function() { mcv.autostart(); });
