[site]: stackoverflow
[post_id]: 1212231
[parent_id]: 1212148
[tags]: 
In the case of real time (10,000 users accessing parallely this time card page) Will tomcat + mysql can handle 10,000 parallel requests ( i mean fetching 30 records per hit) ? No the perfomance is depends on the level of caching, if every user access different card each time (totally random) and you have 50G of DB so your would be disk bounded, and no, you would not be able to fetch 10K records in one second from different places in the disk in any case. On the other hand of 99.9% of users access only recent entries, so 50/12/3 ~= 1.5G frequently access data, so it is stored in memory cache, you may have a chance to be able to fetch 10K requests per user on the computer with lots of memory and CPUs, but I don't think that you can do this in parallel requests, because MySQL has thread per connection. In any case, you would probably need to prepare partition the DB to several servers so you have an ability to scale up and implement efficient entries caching in memory. EDIT in any case, if you try to store key/value data only, without additional indexing, I would suggest to pic something simpler then full relational database, take a look on http://memcachedb.org/ , or separate archive storage and storage that can be updated -- because storage that is not updated may be stored differently.
