[site]: stackoverflow
[post_id]: 4516099
[parent_id]: 4516000
[tags]: 
Joomla is doing it. Here's how to stop it from filtering out script tags: http://docs.joomla.org/Why_does_some_HTML_get_removed_from_articles_in_version_1.5.8%3F Also, why isn't the text "This e-mail address is being protected from spambots. You need JavaScript enabled to view it" inside of a (at the very least) or why aren't you using some JavaScript dependent function to hide the text? Because, what you've posted above will always display. For that matter, someone who can view the content of your AJAX request without JavaScript enabled is already clever enough that they won't need an explanation :-) Lastly, why are you using document.write instead of the more clear and versatile: document.getElementById(yourId).innerHTML = "your@email.com"; And putting the inserting the email into a span or a div. If you put it inside of a span or div with an id, this also allows you to control the appearance via CSS and just seems less primitive than plain old document.write Again, for that matter, why not just return the email in a JSON object and have your AJAX function read the JSON and insert it into a div or a span on the page? Much cleaner and elegant than returning raw HTML. EDIT: Sorry, I see that you are sending JavaScript for JQuery to presumably eval and THEN you're using document.getElementById. Don't do that. Here's what your request should return (and sorry, but I don't know exactly what your variable names mean, so I'm just making stuff up): { "path": "/home", "prefix": "/users/", "email":"someemail@gmail.com", "suffix": "/stuff/", "attribs": "yourattribs-could-be-a-nested-array-of-values" } Your JQuery code should be something like: success: function(res) { if (res) { $("#content").fadeOut(function() { $("#content").remove(); var link = ' ' + res.email + ' '; $("#content")[0].html(link); } }); }
