[site]: stackoverflow
[post_id]: 5436498
[parent_id]: 5436188
[tags]: 
If your end goal is to have a list of the "top n fitness levels", you'll probably have a list of them coming in, right? If that's the case, just leverage the capabilities of List: // takes a list of Doubles, returns 'top' levels public List getTopN(List allLevels, int top) { List sorted = new ArrayList (allLevels); // defensive copy Collections.sort(sorted, new Comparator () { @Override public int compare(Double left, Double right) { return left.compareTo(right); // assumes no null entries } }); return sorted.subList(0, Math.min(sorted.size(), top)); }
