[site]: stackoverflow
[post_id]: 1839657
[parent_id]: 1747785
[tags]: 
Thanks for your replies. I have now resolved this issue so thought I'd post to share my answer should someone else face a similar problem. As Kieran Benton pointed out, there is a limit on the number of connections allowed by XP of 10 (cmd: net config server) so I have limited my program to run only ten threads at a time (although this still leaves a issue whereby a user may already be using some of the connection quota). Next, working with the information provided by Robert Obryk, I did some more research into Remoting connections and discovered that you can indeed set a timeout when making a remote connection via: IDictionary prop = ChannelServices.GetChannelSinkProperties(remObject); prop["timeout"] = remotingTimeout; At this point, I dropped the initial timed Socket connection as it seemed this was no longer necessary, however testing showed that the Remoting timeout was only effective if the remote machine was reachable through the port specified. If the port was closed, the timeout was ignored and the connection hung. So my final implementation involves a timed Socket connection to first check that the port is open, then attempting a timed Remoting call to responsive sites. A bit long winded but it works! Thanks again, James
