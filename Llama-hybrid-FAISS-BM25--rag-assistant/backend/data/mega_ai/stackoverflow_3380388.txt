[site]: stackoverflow
[post_id]: 3380388
[parent_id]: 3372092
[tags]: 
The key difference between T-SQL and Win32 Filestream access is the way data is transferred to the client - using T-SQL to retrieve Filestream data means the storage engine must open the file on NTFS, stream data back through the SQL engine and through TDS (the standard way SQL data is transferred) back to the client. If using Win32 the storage engine is still in the path during the open file operation however once this is complete the data can be transferred directly from the file to the client through Win32 streaming, completely bypassing the SQL engine. As the blob size increases the overhead of opening the file and transferring through the engine becomes a smaller percentage of the total time required to complete the data transfer. Recent benchmarks for a very specific case study put the thresholds at 60KB for inline (varbinary max storage), 60KB-1.2MB for T-SQL transfer and >1.2MB for Win32 transfer. As I mentioned this was for a very specific case so YMMV. As far as security goes I can see a number of issues with using SQL security in this way, but it's hard to offer suggestions without a little more context. You're really restricted from benefiting from Filestream by accessing it solely through T-SQL.
