[site]: stackoverflow
[post_id]: 1032926
[parent_id]: 589076
[tags]: 
In your example code, yes, you are forced to copy the string at least once. The cleanest solution is defining your object like this: class MonkeyFish { public: void setName( const std::string & parameter_name ) { name = parameter_name; } private: std::string name; }; This will pass a reference to the local string, which is copied into a permanent string inside the object. Any solutions that involve zero copying are extremely fragile, because you would have to be careful that the string you pass stays alive until after the object is deleted. Better not go there unless it's absolutely necessary, and string copies aren't THAT expensive -- worry about that only when you have to. :-)
