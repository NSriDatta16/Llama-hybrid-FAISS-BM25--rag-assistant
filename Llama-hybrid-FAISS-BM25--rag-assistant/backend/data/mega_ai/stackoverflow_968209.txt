[site]: stackoverflow
[post_id]: 968209
[parent_id]: 968190
[tags]: 
The design pattern that leaps to mind is a "rule" ;-) Or, if you prefer, a Command Pattern In other words, for situations like this I would create a database table listing the states and acceptable transitions, and associate an action with each transition (using reflection) I have found this to be useful to handle cases where the transition action is more complex than just updating the statuses to match. For example, in one system we had a workflow where a request document had to pass through several committee review stations, each of which could reject or pass on the document to the next stage, plus custom side-effect procesing. The committee organization, processing structures, and processing actions changed significantly three times during development , and five more times in the first year of deployment.
