[site]: stackoverflow
[post_id]: 2435557
[parent_id]: 2432111
[tags]: 
Your logic error in your other answer was already explained by others. To let me explain to you again, given this statement: The simple-type-specifiers specify either a previously-declared user-defined type or one of the fundamental types. It does not mean that there are simple-type-specifiers for all fundamental types. It just means that each simple-type-specifier (or a combination of those - i think this sentence is not very clear) specify either a user defined type or one of the fundamental types. That statement also would apply to the following "sample-specifiers": sample-specifier: int class-name Each of my sample-specifiers specify either a previously declared user defined type, or one of the fundamental types (in my case, it's int ). It does not mean that all previously declared user defined types can be denoted, nor does it mean that all fundamental types can be denoted. Now if another paragraph in the Standard says that type() works for type being a simple-type-specifier, that does not mean that it also must work for a combination of these. That's a totally invalid conclusion to do. It's like when i say "decimal digits specify exclusively numbers from 0 to 9" and you say "you are wrong because they can't specify number 10". But what you did was to take a combination of two digits and then claim something i've never said. I think this is a pretty clear logical fallacy you do.
