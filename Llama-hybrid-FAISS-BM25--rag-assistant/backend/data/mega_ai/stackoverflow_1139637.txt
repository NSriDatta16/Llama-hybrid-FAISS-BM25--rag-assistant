[site]: stackoverflow
[post_id]: 1139637
[parent_id]: 1139582
[tags]: 
It's an internal method. Just leave it as is without conditional compilation, and only call it from your unit tests. There's nothing wrong with leaving the hook in -- in fact, you may even want to consider making the method public and allowing any code to change the logging hook. Looking over your code again; you don't even need the SetLogWriter method; just use a private accessor for your static class and you can set it yourself in your unit tests. I can see it being OK to leave the hook in place, removing it is just a preference, but I don't agree with making it public--it feels too much like elevating permissions just because it removes a little hassle. â€“ Yoooder Well, I was more commenting on general code organization principles. It's generally a good idea to create such hooks for your code; in your case you wouldn't be "elevating permissions to remove a hassle" you would be "designing a robust and flexible logging framework".
