[site]: stackoverflow
[post_id]: 2634597
[parent_id]: 2634328
[tags]: 
No. It is invalid syntax. And that's a shame - it is one of the things I miss from Ada. Not having the ability to define nested methods does create a lot of problems in organizing classes with substantial amounts of private methods. From there it's a slippery slope into lack-of-cohesion land. You could use nested classes, but they come at a price. Each nested class generates a $named class. Each has a toll in terms of open file handles (if not pulled from an archive) as well memory taken by its class definition. Some systems have a cap on the number of files (thus total generated classes) that they can deploy (Google Apps for example.) In other words, I would not use nested classes to mimic nested methods (just in case you decide to try that.) Now, assuming that you could use nested methods (as in Ada), those methods would only be visible within the enclosing method (they'd be more restricted than typical private methods.) They would be able to see variables and parameters defined in the outer scope (but probably only if defined as final.) It would allow you to organize your methods and algorithms in nested namespaces. When used intelligently, nested methods really help in organizing your code.
