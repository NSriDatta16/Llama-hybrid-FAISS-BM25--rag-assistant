[site]: crossvalidated
[post_id]: 624317
[parent_id]: 624270
[tags]: 
You do loose information when you group data and replace individual values for dependent and independent variables by their group means. The estimates from the ungrouped and grouped data are still relatively close together, so the information loss was not really dramatic. You would get the same estimates for regression coefficients as from the grouped data if you run the regression on data where you explicitly replace the variables by the group means as follows: library(dplyr) mtcars_averaged group_by(cyl, vs, am, gear, carb) |> mutate(mpg = mean(mpg), wt = mean(wt), hp = mean(hp)) summary(lm(mpg ~ wt + hp, data = mtcars_averaged)) #> Call: #> lm(formula = mpg ~ wt + hp, data = mtcars_averaged) #> #> Residuals: #> Min 1Q Median 3Q Max #> -3.193 -1.016 -0.190 1.145 2.042 #> #> Coefficients: #> Estimate Std. Error t value Pr(>|t|) #> (Intercept) 38.114910 1.013227 37.617 wt -4.453825 0.438372 -10.160 4.6e-11 *** #> hp -0.025191 0.005876 -4.287 0.000182 *** --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Residual standard error: 1.507 on 29 degrees of freedom Multiple R-squared: 0.932, Adjusted R-squared: 0.9273 F-statistic: 198.7 on 2 and 29 DF, p-value: Note however that estimates for residual error and standard errors have changed, together with the degrees of freedom. This is due to the fact that the model was fitted as if the data were independent, but in fact they are not, since they contain multiples of the same group average. Therefore you should use the approach from your question with grouped data instead.
