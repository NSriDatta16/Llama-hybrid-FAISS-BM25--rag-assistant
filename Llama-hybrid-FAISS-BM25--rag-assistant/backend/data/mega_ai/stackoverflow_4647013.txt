[site]: stackoverflow
[post_id]: 4647013
[parent_id]: 4646786
[tags]: 
Readable\Maintainable code Certainly true in my experence. Fewer lines of code. Not significantly, but it will help. Affects application performance. Very slightly. But not even close to the way reflection does. Dynamic keyword is internally a wrapper of Reflection. Completely untrue. The dynamic keyword leverages the Dynamic Library Runtime. [Edit: correction as per comment below] It would seem that the Dynamic Language Runtime does use Reflection and the performance improvements are only due to cacheing techniques. Dynamic typing might turn into breeding ground for hard to find bugs. This may be true; it depends how you write your code. You are effectively removing compiler checking from your code. If your test coverage is good, this probably won't matter; if not then I suspect you will run into problems. Affects interoperability with previous .NET versions Not true. I mean you won't be able to compile your code against older versions, but if you want to do that then you should use the old versions as a base and up-compile it rather than the other way around. But if you want to use a .NET 2 library then you shouldn't run into too many problems, as long as you include the declaration in app.config / web.config. One significant pro that you're missing is the improved interoperability with COM/ATL components.
