[site]: crossvalidated
[post_id]: 563867
[parent_id]: 
[tags]: 
Walk through `rms::val.prob`

The val.prob function in the rms R package has similarities to the calibrate function discussed in another question of mine , but a key difference in that val.prob has no notion of a probability model. Indeed, I can run val.prob on random data. library(rms) set.seed(2022) N Unsurprisingly, the results show the random numbers between $0$ and $1$ to be unrelated to the binary y . I have some idea of how val.prob works. Draw a bootstrap sample of the p-y pairs. Fit a model to the p-y pairs. Repeat, repeat, repeat... Use some kind of average to say what the true probability of $Y=1$ is for each given probability p . In R code: set.seed(2022) N However, I simulated my data! I know that pr generated y , so the calibration should be pretty good, not curved like it is. Even with a large sample size of $50000$ , that curve remains when I do my own implementation. When I use rms::val.prob , even for a sample size of $500$ , I have no such issue. What step(s) am I missing in my implementation?
