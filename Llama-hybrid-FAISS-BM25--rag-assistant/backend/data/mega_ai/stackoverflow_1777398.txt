[site]: stackoverflow
[post_id]: 1777398
[parent_id]: 1777389
[tags]: 
NOW() returns a constant time that indicates the time at which the statement began to execute. (Within a stored function or trigger, NOW() returns the time at which the function or triggering statement began to execute.) This differs from the behavior for SYSDATE(), which returns the exact time at which it executes as of MySQL 5.0.12. http://dev.mysql.com/doc/refman/5.0/en/date-and-time-functions.html#function_now In other words, it is executed only once when the statement is executed. However, if you want to obtain the time at each execution you should use SYSDATE As of MySQL 5.0.12, SYSDATE() returns the time at which it executes. This differs from the behavior for NOW(), which returns a constant time that indicates the time at which the statement began to execute. (Within a stored function or trigger, NOW() returns the time at which the function or triggering statement began to execute.) http://dev.mysql.com/doc/refman/5.0/en/date-and-time-functions.html#function_sysdate Update: Well, from what I know Order by will be executed or better said "used" only once. Since the value of TIMESTAMPDIFF(FRAC_SECOND, DateCreated , SYSDATE()) will be different every time you execute the SELECT statement. So, I think (once again I think) ORDER BY will consider either the first evaluated value of the timestampdiff or the last one. Anyway, I think by executing this - you will get a random order every time. Maybe there are better experts than me here who can answer better.
