[site]: stackoverflow
[post_id]: 96566
[parent_id]: 86378
[tags]: 
When you say "search against a DB", what do you mean? Relational databases and information retrieval systems use very different approaches for good reason. What kind of data are you searching? What kind of queries do you perform? If I were going to implement an inverted index on top of a database, as Compass does, I would not use their approach, which is to implement Lucene's Directory abstraction with BLOBs. Rather, I'd implement Lucene's IndexReader abstraction. Relational databases are quite capable of maintaining indexes. The value that Lucene brings in this context is its analysis capabilities, which are most useful for unstructured text records. A good approach would leverage the strengths of each tool. As updates are made to the index, Lucene creates more segments (additional files or BLOBs), which degrade performance until a costly "optimize" procedure is used. Most databases will amortize this cost over each index update, giving you more stable performance.
