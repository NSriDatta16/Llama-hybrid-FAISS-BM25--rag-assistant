[site]: crossvalidated
[post_id]: 368394
[parent_id]: 368381
[tags]: 
Note that PCA finds a set of orthogonal vectors that point in the direction of most variation. These vectors represent a rotation of the data. In R, these vectors are in the 'rotation' matrix. If you multiply your input data by the rotation matrix, then you get a rotated version of your data. This is contained in the 'x' matrix. You can think of the columns of x as independent factors in decreasing order of importance. Usually, you can retain most of the variation in the data by discarding most of the least important factors. It looks like you are trying to keep the most important 15 factors. Nothing wrong with this. You also need to add back the mean. sig = matrix(0.5, ncol = 5, nrow = 5) means = c(5,4,3,2,1) diag(sig) = c(5,4,3,2,1) library(MASS) Y = mvrnorm(n = 10000, mu = means, Sigma = sig) p = prcomp(Y, center = T) factors = p$x[,1:2] unrotated = factors %*% t(p$rotation[, 1:2]) recreated = t(apply(unrotated, 1, function(row){row + means})) plot(x = 1:5, y = Y[1,1:5], type = "l", lwd = 3) lines(x = 1:5, y = recreated[1, 1:5], col = "red") #recreating just the first row of Y U1 = factors[1,] %*% t(p$rotation[, 1:2]) R1 = U1 + means all.equal(R1[1,], recreated[1,]) In your case, each row represents a different image.
