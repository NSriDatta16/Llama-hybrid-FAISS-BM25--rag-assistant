[site]: stackoverflow
[post_id]: 4835999
[parent_id]: 4835813
[tags]: 
As you are commenting in Scala logging question, getting precise line number information in Scala is hard. scalac needs at least to be used with -g line or -g vars this feature is very much in discussion for amelioration Why does Scala not just overload the existing infrastructure by saving absolute offsets instead of line numbers in the LineNumberTable ? Another way of addressing could be by numbering the tokens instead of the actual offsets into source files. While I love the idea of indexing by tokens, this means that any tool capable of using the debug information would need to have access to a full parser. Another possibility would be to reformat the file according to some strictly-defined set of rules, and then continue to use line numbering. I started working on improving the debugging experience for Scala programs, and one of the sore-points is indeed line numbers. Ideally there would be support for more than just line numbers. I am looking at JSR 45 (Debugging support for other languages). I am not sure yet if that is enough, but maybe a Scala stratum could use your scheme. I think the better way is to provide additional, Scala specific, debugging information in classfile attributes or annotations. As far as I know, JDI does not give access to classfile attributes, nor to annotations, but there are some tricks we could use to get to them. This way we'd preserve existing functionality, and allow tools to do more when they know about Scala attributes. (Note: Scalate reports having done a similar work in scalate-24 for a different kind of source files)
