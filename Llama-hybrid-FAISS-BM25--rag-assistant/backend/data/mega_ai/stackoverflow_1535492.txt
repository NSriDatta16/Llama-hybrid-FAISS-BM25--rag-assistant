[site]: stackoverflow
[post_id]: 1535492
[parent_id]: 1535021
[tags]: 
Always test what happens when you have an NA ! One thing that I always need to pay careful attention to (after many painful experiences) is NA values. R functions are easy to use, but no manner of programming will overcome issues with your data. For instance, any net vector operation with an NA is equal to NA . This is "surprising" on the face of it: > x 1 + NA [1] NA > sum(x) [1] NA > mean(x) [1] NA This gets extrapolated out into other higher-level functions. In other words, missing values frequently have as much importance as measured values by default . Many functions have na.rm=TRUE/FALSE defaults; it's worth spending some time deciding how to interpret these default settings. Edit 1: Marek makes a great point. NA values can also cause confusing behavior in indexes. For instance: > TRUE && NA [1] NA > FALSE && NA [1] FALSE > TRUE || NA [1] TRUE > FALSE || NA [1] NA This is also true when you're trying to create a conditional expression (for an if statement): > any(c(TRUE, NA)) [1] TRUE > any(c(FALSE, NA)) [1] NA > all(c(TRUE, NA)) [1] NA When these NA values end up as your vector indexes, many unexpected things can follow. This is all good behavior for R, because it means that you have to be careful with missing values. But it can cause major headaches at the beginning.
