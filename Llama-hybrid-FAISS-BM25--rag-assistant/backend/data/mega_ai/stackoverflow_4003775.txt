[site]: stackoverflow
[post_id]: 4003775
[parent_id]: 
[tags]: 
Spring: How should application+web contexts be organized?

The scenario: Start the app and load ClassPathXmlApplicationContext in main(), this starts a Jetty webapp. dispatcher servlet then loads a XmlWebApplicationContext dispatcher servlet then looks for WEB-INF/applicaitonContext.xml to load as the root context I'm just trying to get my head around contexts. Should I use 3 contexts as listed above? Should I be using the 1st context as the root context and not allowing dispatcher to load the default WEB-INF/applicationContext ? Should I be creating a parent/child relationship between the 1st and 3rd contexts? (this is done for me between #2 and #3 contexts by the dispatcher servlet) I'm just not really clear yet about how these contexts relate to one another, I just need a quick rundown on it.
