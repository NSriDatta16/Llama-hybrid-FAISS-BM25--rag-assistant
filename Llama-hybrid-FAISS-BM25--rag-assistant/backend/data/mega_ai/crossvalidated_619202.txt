[site]: crossvalidated
[post_id]: 619202
[parent_id]: 
[tags]: 
Paired t-test with redundant data

As part of my work I've gathered biological data for a set of (n=3) mice under two conditions ~ treatment and control. Since there is some inherent variability in behavioral research, I collected data from each mouse under both treatment and control on multiple occasions. For example, consider I'm looking at total distance traveled x. Mouse #A will have a set of data that looks like this: Mouse #A: x T 1 , x T 2 , x T 3 , x C 1 , x C 2 , x C 3 Here, the subscripts T and C represent treatment/control, respectively, while the numbers indicate that there's multiple data of each category. My aim is to test whether there's a statistical difference in x across the two conditions, which inherently brings me to the paired t-test . However, for a paired t-test, one only needs a single pair of values (x T ,x C ) for each mouse. I wanted to know if there's a way to perform the paired t-test when there's multiple values for each condition. To elucidate: each of the three mice has three x T and x C collected. There is some variance in x T 1-3 and x C 1-3 for each mouse. Right now, I only see two solutions to my dilemma. 1) I choose a random x T and x C for each mouse to perform the test. 2) I average x T 1-3 and x C 1-3 for each mouse and use the averages to perform the test. Of course, I think the second option has more merit, although I do not know if it is the right way to handle this scenario, or if there's a better way. I am not statistically inclined. Either way, both options make it so that I reduce the input of the paired t-test from 18 datapoints (6 per mouse) to 6 data points (2 per mouse). I do not find this appealing as it will just artificially drive my p-value up (is this a bad way to think about it?). What I'm curious to know is if there's a way I could do a paired t-test that includes all 18 data points? Of course, I could pair (x T 1 , x C 1 ), (x T 2 , x C 2 ), and (x T 3 , x C 3 ) together and just add them all to the pile. But then I have 3 pairs of pairs that are nondistinct, as they come from the same mouse. Also, the pairing outlined above is purely arbitrary, as it would make no difference whether x T 1 gets paired with x C 1 ,x C 2 , or x C 3 . Please let me know what you think! My only option so far is to go with plan (2) mentioned above, but I do not know if it is the correct way or if there's a better way!
