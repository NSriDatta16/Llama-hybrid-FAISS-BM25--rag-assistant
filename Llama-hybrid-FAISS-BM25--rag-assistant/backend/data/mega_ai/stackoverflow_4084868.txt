[site]: stackoverflow
[post_id]: 4084868
[parent_id]: 
[tags]: 
How do I recover/resynchronise after someone pushes a rebase or a reset to a published branch?

We have all heard that one should never rebase published work, that itâ€™s dangerous, etc. However, I have not seen any recipes posted for how to deal with the situation in case a rebase is published. Now, do note that this is only really feasible if the repository is only cloned by a known (and preferably small) group of people, so that whoever pushes the rebase or reset can notify everyone else that they will need to pay attention next time they fetch(!). One obvious solution that I have seen will work if you have no local commits on foo and it gets rebased: git fetch git checkout foo git reset --hard origin/foo This will simply throw away the local state of foo in favour of its history as per the remote repository. But how does one deal with the situation if one has committed substantial local changes on that branch?
