[site]: stackoverflow
[post_id]: 1876637
[parent_id]: 1876464
[tags]: 
We need to visit all leaf nodes and figure out how deep they are. This suggests: Give your node-visiting function an extra argument. It needs to know not just where it's going but also how deep it is. Every time it's called, it's called on to go deeper, so your node visitor just has to increment the depth number it got from the caller. Now one of 2 things can happen: Either the node you found is a leaf node, i.e. it doesn't have any children; in this case, your visitor needs to return its depth to the caller. Yeah, it just returns the number it got from the caller, + 1. or it's not a leaf node. In that case, it will have either 1 or 2 children. We need to get those depth reports from our kids back up to the caller, so just return the sum of the depths returned by the children. By the magic of recursion, the number returned to the root's visitor will be the sum of the depths of all children. To get an average depth, you'll want to divide this by the number of leaf nodes; which I'd leave to a second traversal to calculate. It could be done in one, but it would be a little more complicated.
