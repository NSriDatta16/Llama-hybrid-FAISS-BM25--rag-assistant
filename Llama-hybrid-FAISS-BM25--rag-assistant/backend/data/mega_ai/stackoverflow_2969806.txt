[site]: stackoverflow
[post_id]: 2969806
[parent_id]: 2969746
[tags]: 
.live() is to assign handlers to future creating elements. On your site, however, you are re-loading the page so .live would have no bearing. (you are submitting a form) It sounds like you want to make an ajax request to add the item to the cart and update that display on the site? That would be in the submit of the form and if jcart is dynamically created then yes, live is the answer. $('.jcart').live('submit', function() { // aggregate form elements into object and send via ajax // update the cart on the page, since we haven't reloaded the page the light box is still displayed }); Regarding comment: When you send an ajax request, jquery takes an object as an argument. Such as $.post('urlToPostTo.php', { title: 'title of whatever', id: 5 } ); The server sees this the same as: So if you were to aggregate the form inputs into an object, there's a few ways (even some jquery plugins to help you out). The primitive way would be: var $form = $('#myForm'); // instead of finding myForm over and over, cache it as a variable to use var objToSend = {}; objToSend.title = $form.find('input[name=title]').val(); objTosend.id = $form.find('input[name=id]').val(); $.post( 'urlToPostTo.php', objToSend ); A more Elegant solution is to have something loop through all form elements and put them into an object for you. Plugins like http://docs.jquery.com/Plugins:Forms make that a bit easier. The end result is the form elements are stuffed into an object to send to your script.
