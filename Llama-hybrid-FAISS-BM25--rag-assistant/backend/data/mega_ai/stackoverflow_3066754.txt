[site]: stackoverflow
[post_id]: 3066754
[parent_id]: 3064998
[tags]: 
It's not clear to me if the files are local (you're running the script on the server) or remote (on another machine). If local try running the command using a background job and pass in the credentials to Start-Job: $job = Start-Job { Remove-Item -LiteralPath $path -force } -cred $cred Wait-Job $job Receive-Job $job If they're remote, try using remoting: Invoke-Command -computername servername ` -scriptblock { Remove-Item -LiteralPath $path -force } ` -Cred $cred Note: This requires that you execute Enable-PSRemoting on the remote machine. In general, putting raw passwords in your script isn't a great idea. You can store the password in an encrypted manner using DPAPI and later, only that user account can decrypt the password e.g.: # Stick password into DPAPI storage once - accessible only by current user Add-Type -assembly System.Security $passwordBytes = [System.Text.Encoding]::Unicode.GetBytes("Open Sesame") $entropy = [byte[]](1,2,3,4,5) $encrytpedData = [System.Security.Cryptography.ProtectedData]::Protect( ` $passwordBytes, $entropy, 'CurrentUser') $encrytpedData | Set-Content -enc byte .\password.bin # Retrieve and decrypted password $encrytpedData = Get-Content -enc byte .\password.bin $unencrytpedData = [System.Security.Cryptography.ProtectedData]::Unprotect( ` $encrytpedData, $entropy, 'CurrentUser') $password = [System.Text.Encoding]::Unicode.GetString($unencrytpedData) $password
