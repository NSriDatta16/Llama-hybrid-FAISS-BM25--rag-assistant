[site]: stackoverflow
[post_id]: 4401306
[parent_id]: 4327832
[tags]: 
We have tomcat server and jsf. JSF client will request images from the server and cause AWT-Windows thread to get started. Appears to cause a memory leak since threads contextClassLoader is the WebappClassLoader. Looks like calling Java2DResource can caused AWT-Windows thread to be created - Daemon Thread [http-8080-1] (Suspended (entry into method in Thread)) Thread.(Runnable, String) line: 444 NativeConstructorAccessorImpl.newInstance(Object[]) line: 39 DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 27 Constructor.newInstance(Object...) line: 513 Class.newInstance0() line: 355 Class.newInstance() line: 308 Toolkit$2.run() line: 846 AccessController.doPrivileged(PrivilegedAction) line: not available [native method] Toolkit.getDefaultToolkit() line: 826 D3DGraphicsDevice.() line: 47 SurfaceManagerFactory.createCachingManager(BufferedImage) line: 48 SurfaceManager.getManager(Image) line: 54 SurfaceData.getDestSurfaceData(Image) line: 123 Win32GraphicsEnvironment(SunGraphicsEnvironment).createGraphics(BufferedImage) line: 389 HeadlessGraphicsEnvironment.createGraphics(BufferedImage) line: 76 BufferedImage.createGraphics() line: 1137 TabStripeImage(Java2Dresource).getImage(ResourceContext) line: 115 TabStripeImage(Java2Dresource).send(ResourceContext) line: 89 ResourceLifecycle.sendResource(ResourceContext, InternetResource) line: 219 ResourceLifecycle.send(ResourceContext, InternetResource) line: 158 InternetResourceService.load(Object, Object) line: 335 LRUMapCache.load(Object, Object) line: 116 LRUMapCache.get(Object, Object) line: 87 InternetResourceService.serviceResource(String, HttpServletRequest, HttpServletResponse) line: 195 InternetResourceService.serviceResource(HttpServletRequest, HttpServletResponse) line: 141 Filter(BaseFilter).doFilter(ServletRequest, ServletResponse, FilterChain) line: 508 Ajax4jsfFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 56 SeamFilter$FilterChainImpl.doFilter(ServletRequest, ServletResponse) line: 69 LoggingFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 60 SeamFilter$FilterChainImpl.doFilter(ServletRequest, ServletResponse) line: 69 SeamFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 158 ApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 235 ApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 206 StandardWrapperValve.invoke(Request, Response) line: 233 StandardContextValve.invoke(Request, Response) line: 191 StandardHostValve.invoke(Request, Response) line: 127 ErrorReportValve.invoke(Request, Response) line: 102 AccessLogValve.invoke(Request, Response) line: 555 StandardEngineValve.invoke(Request, Response) line: 109 CoyoteAdapter.service(Request, Response) line: 298 Http11AprProcessor.process(long) line: 861 Http11AprProtocol$Http11ConnectionHandler.process(long) line: 579 AprEndpoint$Worker.run() line: 1584 Thread.run() line: 619 [local variables unavailable]
