[site]: crossvalidated
[post_id]: 479379
[parent_id]: 
[tags]: 
How can I improve a classification algorithm for dogs and cats?

The following code is a ML algorithm trained to classify between dogs and cats, the database is composed by 25000 images (evenly split) and can be obtained at this Link (if you click it will automatically download it!) Half of the code is basically the tutorial that sentdex has created ( Link ) while the "prediction part" is the application of the SGD classifier from SK Learn. When trying to cross-validate, results are quite poor. import numpy as np import matplotlib.pyplot as plt import os import cv2 from tqdm import tqdm from PIL import Image from scipy import ndimage, misc DATADIR = r"C:\Users\robda\Desktop\Petimages" #my path to the folders CATEGORIES = ["Dog", "Cat"] training_data = [] #function to transform images in arrays def create_training_data(): for category in CATEGORIES: # do dogs and cats path = os.path.join(DATADIR,category) class_num = CATEGORIES.index(category) for img in tqdm(os.listdir(path)): try: img_array = cv2.imread(os.path.join(path,img) ,cv2.IMREAD_GRAYSCALE) new_array = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE)) training_data.append([new_array, class_num]) except Exception as e: pass create_training_data() import random random.shuffle(training_data) X = [] y = [] for features,label in training_data: X.append(features) y.append(label) X = np.array(X).reshape(-1, IMG_SIZE, IMG_SIZE, 1) y = np.array(y) X2 = X.reshape(24946,10000) y2 = y.ravel() X_training = X2[:20000] y_training = y2[:20000] X_test = X2[20001:] y_test = y2[20001:] from sklearn.linear_model import SGDClassifier sgd_clf = SGDClassifier( random_state =42) sgd_clf.fit(X_training, y_training) some_animal=X_test[1900] some_animal_image = some_animal.reshape( 100, 100) plt.imshow(some_animal_image, cmap="binary") plt.axis("off") plt.tight_layout() plt.show() prediction = sgd_clf.predict([some_animal]) #prediction print(f"prediction: {prediction }") from sklearn.model_selection import cross_val_score #cross validation score is around 50% print(f"accuracy: {cross_val_score(sgd_clf, X_training, y_training, cv=3,scoring='accuracy')}") Could you please help me understand what can be improved and what has to be changed? Moreover, do you recommend using SK learn for machine learning? Thanks
