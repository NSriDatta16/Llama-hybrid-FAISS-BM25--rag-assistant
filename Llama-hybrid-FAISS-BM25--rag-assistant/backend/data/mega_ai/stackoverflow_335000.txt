[site]: stackoverflow
[post_id]: 335000
[parent_id]: 334951
[tags]: 
First, yes, there's no sizeof operator in Java. But sizeof(byte) is always 1 anyway. Is this really what you meant to say? Second, how were you intending to fit 9 booleans into one byte? Not with bitmasks, I hope. If you just want to find the highest bit that's set, you could use Integer.highestOneBit(m_myNum & 0xFF) (see the docs here ). EDIT: You talk about changing the storage to a larger type when there are too many values in the enum. According to this question , there's no memory reason not to use a byte instead of an int unless you have an array. So I'd say use an int at minimum, and upgrade to a long if the size exceeds 32. Simple enough?
