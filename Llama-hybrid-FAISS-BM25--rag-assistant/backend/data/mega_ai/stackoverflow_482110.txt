[site]: stackoverflow
[post_id]: 482110
[parent_id]: 482073
[tags]: 
You need to implement the virtual clone method on every object in the hierarchy. How else would your object of undefined type know how to copy itself? In order to make this more obvious to people writing derived classes, you might think about making the clone method abstract in your base class as well, to force people to at least write something. In several places for my code, I also test to make sure that the to_string() method is implemented correctly to serialize an object to a string. The specific test that I've used in my class to test clone and to_string simultaneously looks like this: Base *obj1, *obj2; # initialize obj1 in a reasonable manner obj2 = obj1->clone(); assert( obj1->to_string() == obj2->to_string() ); This is testing both the clone method() and object serialization to strings (so it's not strictly a unit test), but it's a paradigm that simple to wrap in a loop around all of the objects in a factory to make sure that they're following some minimum standard of implementing clone() and to_string(). Edit: Updated code with correction from strager's comment. Thanks!
