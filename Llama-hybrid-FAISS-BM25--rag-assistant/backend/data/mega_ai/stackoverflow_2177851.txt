[site]: stackoverflow
[post_id]: 2177851
[parent_id]: 456045
[tags]: 
We've been using Visual WebGui for years with great success. Our apps require ZERO DHTML/JavaScript/AJAX/JSON/CSS coding. Seriously. For web-based .NET business applications - Visual WebGui is a perfect fit. I would highly recommend Gizmox for your next web platform. ASP.NET ASP.NET is a stateless dev platform. Each user's current view remains on the client - the ViewState. The ViewState must be sent to the ASP.NET server for every request This makes round-trips to the server heavy, even in AJAX scenarios. In ASP.NET, the server generates DHTML/JavaScript/CSS & sends it out to the browser. This adds to the weight of each ASP.NET AJAX call. Furthermore, the plumbing required to wire up a real ASP.NET app, complete with JSON/AJAX/REST calls, cross-browser JavaScript, DOM management, & CSS, etc. is difficult & a maintenance nightmare. Visual WebGui - Stateful UI Visual WebGui is truly a revolution. Visual WebGui is a stateful dev platform, built on top of ASP.NET. All user state is kept on the server. The server knows exactly what the user's screen looks like. As such, the pipeline becomes VERY thin and VERY fast between client/server. Because the server is aware of the client's current state - the VWG Server is able to perform Diff routines - so only changes to the UI are sent over the wire. Pipeline & Screen Drawing Additionally, the VWG Client draws its own view. In other words - the server doesn't send out any DHTML/JavaScript/CSS... instead, the Client generates this on-the-fly based on the instructions sent from the server. For instance, to create a new Button with control ID 1 - the server simply tells the client to draw "". The VWG Client knows how to draw it's own controls. With this technology - that is literaly how thin the pipeline is. Security For Security, Visual WebGui is fully capable of running over SSL. Gizmox also employs a proprietary obfuscation algorithm to prevent unauthorized scripts from accessing Visual WebGui JavaScript calls & DOM elements. It works extremely well. Application Design Visual WebGui comes complete with an amazing Forms Designer. Modeled after the WinForms Designer & APIs - writing Visual WebGui web business apps are now extremely easy to design. Drag & drop, resize, move all your controls on your Forms & UserControls, complete with Databinding. Two-Way DataBinding With Visual WebGui's fully supports two-way Databinding with INotifyPropertyChanged - just like WinForms. Databind your controls to your data objects (which reside on the server) & anytime those data objects change - your controls instantly update. No need for ASP.NET UpdatePanels, etc. You don't even think about it. Just write your app & whatever needs to update on the screen - will update. Single Language Approach - Debugging and Application Manageability One of the core benefits to Visual WebGui is its single language approach. You write & debug ALL your code in C#/VB.NET. No more hacking JavaScript/JSON/AJAX calls & maintaining web services. No more client-side debuggers / Firebug, etc. No need to know 5 different web languages to write a single application. Imagine - writing your app in a single language. Focusing your time on solving your business needs, not software hurdles & plumbing. Hiring & finding qualified developers also becomes much easier. Visual WebGui instantly makes this a reality. Write business web-apps like you would a business desktop-app. Summary It truly is a revolution in developing web-based, .NET enterprise business applications. I hope this helps to explain why Visual WebGui is seriously worth looking into for your next web-based enterprise business application. Sincerely, Ryan D. Hatch, Customer & Visual WebGui MVP
