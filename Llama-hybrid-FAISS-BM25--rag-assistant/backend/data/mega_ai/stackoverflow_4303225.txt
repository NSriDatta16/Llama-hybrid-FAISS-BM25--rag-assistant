[site]: stackoverflow
[post_id]: 4303225
[parent_id]: 3211529
[tags]: 
There's a simpler way - with help of WindowsFormsApplicationBase class from Microsoft.VisualBasic.ApplicationServices: using System; using System.Collections.Generic; public class SingleInstanceApplicationWrapper : Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase { public SingleInstanceApplicationWrapper() { IsSingleInstance = true; } private MyApp m_app; protected override bool OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs e) { // here we create our WPF application m_app = new MyApp(); m_app.Run(); return false; } protected override void OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs e) { m_app.DispatchCommandLineParams(e.CommandLine); } } public class MyApp : System.Windows.Application { protected override void OnStartup(System.Windows.StartupEventArgs e) { base.OnStartup(e); DispatchCommandLineParams(e.Args); } public void DispatchCommandLineParams(IEnumerable cmdParams) { // process command line parameters Console.WriteLine(this.GetHashCode() + " - dispatched"); } } public class Program { [STAThread] public static void Main(string[] args) { var wrapper = new SingleInstanceApplicationWrapper(); wrapper.Run(args); } }
