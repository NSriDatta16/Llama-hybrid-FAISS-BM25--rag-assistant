[site]: stackoverflow
[post_id]: 2116771
[parent_id]: 2116624
[tags]: 
Your example won't work because you're comparing two strings that aren't equal. One way to assert that your element has moved would be to use isElementPreset as demonstrated below: //before drag and drop assertTrue(selenium.isElementPresent("css=#source li:nth-child(1)")); assertFalse(selenium.isElementPresent("css=#target li:nth-child(1)")); //drag and drop code here ... //after drag and drop assertTrue(selenium.isElementPresent("css=#target li:nth-child(1)")); assertFalse(selenium.isElementPresent("css=#source li:nth-child(1)")); This example uses the Java client API, but it should be easy to work out how to do it in your preferred client API. It will also depend heavily on your application, as the above will check that the element with id of 'target' has one child li element before the drag and drop, and none afterwards. If you have a snippet of your HTML source I might be able to prove a more robust example.
