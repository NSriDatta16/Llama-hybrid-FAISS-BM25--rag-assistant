[site]: stackoverflow
[post_id]: 4574271
[parent_id]: 4572491
[tags]: 
So the implementation of such array can be like this import java.util.AbstractList; import java.util.List; import java.util.RandomAccess; public class IntArrayList extends AbstractList implements List , RandomAccess /* todo , Cloneable, java.io.Serializable */{ private static final int INT_SIZE_MINUS_ONE = 15; private static final int RIGHT_SHIFT = 4; private int size; private int isNull[]; private int data[]; IntArrayList(int size) { if (size >> RIGHT_SHIFT]; data = new int[size]; } private void rangeCheck(int index) { if (index = size) { throw new IndexOutOfBoundsException(); } } public Integer set(int index, Integer element) { rangeCheck(index); Integer oldValue = get(index); if (element == null) { isNull[index >>> RIGHT_SHIFT] &= ~(1 >> RIGHT_SHIFT] |= (1 >> RIGHT_SHIFT] & (1 It can be used anywhere as List Such kind of object can be useful for long term storage of information that rarely used. It will decrease fragmentation of heap at a cost of increased garbage generation on access to elements.
