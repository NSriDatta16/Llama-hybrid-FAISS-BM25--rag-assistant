[site]: stackoverflow
[post_id]: 1549141
[parent_id]: 1549093
[tags]: 
You declared two classes here. One of them is in myclass.h and the other is in myclass.cpp . Try the following instead: myclass.h #ifndef myclass_h_included #define myclass_h_included #include class MyClass { private: static bool someProperty; static void doSomeOneTimeCode (); public: static bool MyFunction (TCHAR* someStringArgument); }; #endif //!myclass_h_included myclass.cpp #include "myclass.h" /*static*/ bool MyClass::someProperty = false; void MyClass::doSomeOneTimeCode() { //... } bool MyClass::MyFunction(TCHAR* someStringArgument) { //... } Your main.cpp can stay the same. I would pay attention to UncleBens reply as well. One time initialization code should be hidden if at all possible.
