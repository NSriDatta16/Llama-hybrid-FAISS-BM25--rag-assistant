[site]: stackoverflow
[post_id]: 2927205
[parent_id]: 2927153
[tags]: 
Generally speaking, it is a good MVVM-practice to avoid code in code behind, as would be the case if you use events in your user controls. So when possible, use INotifyPropertyChanged and ICommand . With that said, depending on your project and how pragmatic you are, some times it makes more sense to use the control's code behind. I have at a few occasions used something like this: private void textBox1_MouseDoubleClick(object sender, MouseButtonEventArgs e) { MyViewModel vm = this.DataContext as MyViewModel; vm.MethodToExecute(...); } You could also consider Attached Command Behaviour , more info about this and implementations to find here: Firing a double click event from a WPF ListView item using MVVM
