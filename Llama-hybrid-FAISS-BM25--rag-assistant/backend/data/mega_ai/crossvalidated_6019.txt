[site]: crossvalidated
[post_id]: 6019
[parent_id]: 6013
[tags]: 
Identifying a given data point as an outlier implies that there is some data generating process or model from which the data are expected to come from. It sounds like you are not sure what those models are for the given metrics and clusters you are concerned about. So, here is what I would consider exploring: statistical process control charts . The idea here would be to collect the %Availability Requests/Sec Errors/Sec %Memory_Utilization metrics for each of your clusters. For each metric, create a subset of the data that only includes values that are "reasonable" or in control. Build the charts for each metric based on this in-control data. Then you can start feeding live data to your charting code and visually assess if the metrics are in control or not. Of course, visually doing this for multiple metrics across many clusters may not be feasible, but this could be a good way to start to learn about the dynamics you are faced with. You might then create a notification service for clusters with metrics that go out of control. Along these lines, I have played with using neural networks to automatically classify control chart patterns as being OK vs some specific flavor of out-of-control (e.g. %availability trending down or cyclic behavior in errors/sec). Doing this gives you the advantages of statistical process control charts (long used in manufacturing settings) but eases the burden of having to spend lots of time actually looking at charts, since you can train a neural network to classify patterns based upon your expert interpretation. As for code, there is the spc package on pypi but I do not have any experience using this. My toy example of using neural networks (naive Bayes too) can be found here .
