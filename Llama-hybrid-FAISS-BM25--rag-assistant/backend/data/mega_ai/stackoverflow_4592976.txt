[site]: stackoverflow
[post_id]: 4592976
[parent_id]: 
[tags]: 
Application Client EJB calls round-trip seems slow

UPDATE: As Preston pointed out, the following problem may well be related to (de)serialisation of objects. Any ideas on how to optimize this? I am currently fixing some things in an old JavaEE application. It's using an EJB module and an application client module. The EJB deals with all database queries. For this example consider a method getEnterprises(int year) , which returns "Enterprise" entities for a given year. Currently, that's about 2500 entries. Note: I am using the word "Enterprises" for illustrative purpose only. The real entity classes would probably not make much sense to most here ;) Now, let's assume for this example that an Enterprise entity only has two fields: code and name . The method inside the remote bean looks like this: public List getEnterprises(int year){ return em.createQuery("SELECT e FROM Enterprise e WHERE e.year=:year") .setParameter("year", year) .getResultList(); } In the application client, there's a line like this: List result = requestBean.getEnterprises(1996); This seems correct to me. What is bizarre to me, it that the call on the client takes about 15 seconds to complete! So I added some logging: public List getEnterprises(int year){ logger.finest("Begin fetch on remote"); List output = em.createQuery("SELECT e FROM Enterprise e WHERE e.year=:year") .setParameter("year", year) .getResultList(); logger.finest("End fetch on remote"); return output; } and... logger.finest("Begin fetch on client"); List result = requestBean.getEnterprises(1996); logger.finest("End fetch on client"); From the resulting timestamps, I realized that the call on the server completes in less than a second, while on the client it takes more that 15 secs. Example hand-written trace: 2011-01-04 12:00 | FINEST | Begin fetch on client 2011-01-04 12:00 | FINEST | Begin fetch on remote 2011-01-04 12:01 | FINEST | End fetch on remote 2011-01-04 12:17 | FINEST | End fetch on client So I'm guessing that the problem lies in the client/server communication. Note, that for the above example, I did not check whether the client->server communication is slow or the server->client communication. What I realized, is that the server logs show an "expected" execution time, whereas on the client it's sluggish. In other words, it might as well be something like this as well: 2011-01-04 12:00 | FINEST | Begin fetch on client 2011-01-04 12:15 | FINEST | Begin fetch on remote 2011-01-04 12:16 | FINEST | End fetch on remote 2011-01-04 12:17 | FINEST | End fetch on client Or even: 2011-01-04 12:00 | FINEST | Begin fetch on client 2011-01-04 12:07 | FINEST | Begin fetch on remote 2011-01-04 12:08 | FINEST | End fetch on remote 2011-01-04 12:17 | FINEST | End fetch on client I haven't dug into it that much. As I have not that much experience with JavaEE I am a bit lost in a jungle. There are so many settings, components, that I have to look through that I do not know where to start. Can it be a server setting? A problem with the bean itself? The way I call the bean? I don't know... ... oh... it runs on glassfish, and for testing, on localhost . So the network itself is not the problem...
