[site]: stackoverflow
[post_id]: 695559
[parent_id]: 695441
[tags]: 
The object class defines send , and all objects inherit this. You "send" an object the send method. The send method's parameters are the method-you-want-to-invoke's name as a symbol, followed by any arguments and an optional block. You can also use __send__ . >> "heya".send :reverse => "ayeh" >> space = %w( moon star sun galaxy ) >> space.send(:collect) { |el| el.send :upcase! } => ["MOON", "STAR", "SUN", "GALAXY"] Edit.. You probably want to use the define_method method: String.class_eval { define_method :hello do |name| self.gsub(/(\w+)/,'hello') + " #{name}" end } puts "Once upon a time".hello("Dylan") # >> hello hello hello hello Dylan That adds instance methods. To add class methods: eigenclass = class > hello You can't define methods that expect a block though. It might be a good thing to have a read of this chapter from Why's Poignant Guide , you can skip down to "Dwemthyâ€™s Array" to get to the meta-programming stuff.
