[site]: stackoverflow
[post_id]: 1548240
[parent_id]: 1548026
[tags]: 
I find it interesting that only Mikael Auno mentioned the word "requirement." While Knuth's quote is TRVTH , it all comes down to the requirements. Is scalability one of them? What is the expected load? If your answer is "I don't know," ask. If these are requirements, add load testing to your acceptance tests. You still want to design for maintainability. Defer performance considerations to the Last Responsible Moment , then profile - don't guess. Micro-optimization is a waste of the company's money. Sometimes the responsible moment occurs fairly early; I'm not going to design an enterprise CRM system where all the data is stored as XML files on disk. What I am going to do is abstract the persistence layer. In the end Kolibri's comment is correct - the answer (as usual) is "it depends." EDIT: On re-reading, I'm afraid I violated the OP's constraint of "Please do not answer me saying that it all depends on the environment in which a software is expected to run." I stand by my answer, though. If (when) the requirements change, a simple design is generally easier to modify. The unstated assumption is that we know ahead of time how the requirements are going to change. The request may be "make it scale by an order of magnitude" or "permit moving a customer between organizations." Architecting for the former may make the latter more difficult to implement.
