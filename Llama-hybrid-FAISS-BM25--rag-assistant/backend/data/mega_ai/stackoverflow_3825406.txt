[site]: stackoverflow
[post_id]: 3825406
[parent_id]: 3824362
[tags]: 
Let's say you have a Coin class with a type attribute, as follows: @XStreamAlias("coin") public class Coin { String type; } And you have a Coins class that constains a List of Coin: @XStreamAlias("coins") public class Coins{ @XStreamImplicit List coins = new ArrayList (); } Pay attention to the annotations. The List is Implicit and the Coins class will be shown as "coins". The output will be: Gold Silver Bronze It's not the same you asked for, but there is a reason. At first, coin have only one attribute, but we are not sure if all objects you want to show do have only one attribute too. So, we need to tell which object attribute we are talking about. You can also show the Coin attributes as XML Attributes, not fields. As follows: @XStreamAlias("coin") public class Coin { @XStreamAsAttribute String type; Coin(String type) { this.type = type; } } Here is the output: Hope it helps.
