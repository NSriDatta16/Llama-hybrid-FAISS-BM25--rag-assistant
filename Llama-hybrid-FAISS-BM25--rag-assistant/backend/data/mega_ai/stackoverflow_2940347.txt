[site]: stackoverflow
[post_id]: 2940347
[parent_id]: 2940267
[tags]: 
"1 1 1" is a string of five characters: 1, space, 1, space and 1. The double quotes are not part of the string. ("1 1 1" "dot" "2 2 2") is a list of three strings. There are no " characters above. The " are used to delimit strings in s-expressions. If you have a dot function you need to tell us what kind of input data it expects. Does it expect two lists of numbers? Then you have to convert the string "1 1 1" into a list of numbers. (let ((cl:*read-eval* nil)) (with-input-from-string (in "1 1 1") (loop for data = (read in nil in) until (eq data in) collect data)))) To get the function DOT from the string "dot" first find the symbol DOT and then get its symbol function. (symbol-function (find-symbol (string-upcase "dot"))) For find-symbol one might need to specify also the package, if there is a special package where the symbol is in. Converting a list to a vector then is the next building block. So you need to convert the arguments for your function to vectors (probably first converting them to lists as I showed above). Then you need to find the function (see above). If you have then the function and the arguments, then you can call the function using FUNCALL or APPLY (whatever is more convenient).
