[site]: stackoverflow
[post_id]: 5042331
[parent_id]: 
[tags]: 
Named Graphs and Federated SPARQL Endpoints

I recently came across the working draft for SPARQL 1.1 Federation Extensions and wondered whether this was already possible using Named Graphs (not to detract from the usefulness of the aforementioned draft). My understanding of Named Graphs is a little hazy, save that the only thing I have gleamed from reading the specs comprises rules around the merger, non merger in relation to other graphs at query time. Since this doesn't fully satisfy my understanding, my question is as follows: Given the following query: SELECT ?something FROM NAMED FROM NAMED WHERE { ... } Is it reasonable to assume that a query processor/endpoint could or should in the context of the named graphs do the following: Check is the named graph exists locally If it doesn't then perform the following operation (in the case of the above query, I will use the second named graph) GET /sparql/?query=EncodedQuery HTTP/1.1 Host: www.autotrader.co.uk User-agent: my-sparql-client/0.1 Where the EncodedQuery only includes the second named graph in the FROM NAMED clause and the WHERE clause is amended accordingly with respect to GRAPH clauses (e.g if a GRAPH {...} is being used). Only if it can't perform the above , then do any of the following: GET /cars/used HTTP/1.1 Host: www.autotrader.co.uk or LOAD Return appropriate search results. Obviously there might be some additional considerations around OFFSET 's and LIMIT 's I also remember reading somewhere a long time ago in galaxy far far away, that the default graph of any SPARQL endpoint should be a named graph according to the following convention: For: http://www.vw.co.uk/sparql/ there should be a named graph of: http://www.vw.co.uk that represents the default graph and so by the above logic, it should already be possible to federate SPARQL endpoints using named graphs. The reason I ask is that I want to start promoting federation across the domains in the above example, without having to wait around for the standard, making sure that I won't do something that is out of kilter or incompatible with something else in the future.
