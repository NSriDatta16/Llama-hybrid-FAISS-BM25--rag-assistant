[site]: stackoverflow
[post_id]: 2437221
[parent_id]: 2436431
[tags]: 
If you are only using the index to guarantee uniqueness and not for retrieval, it's probably a win to use an MD5 in a binary(16) not null column. That way you could potentially have hundreds of keys in an index page, reducing the number of disk seeks for each insert. An alternative is to use compression in your table by creating it like this: CREATE TABLE foo (url varchar(255)) ENGINE=InnoDB ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=4; Since URLs should compress pretty well, it could be just as big of a win as your hash idea and not require any extra code on your part. Here's the InnoDB reference on compression: http://www.innodb.com/doc/innodb_plugin-1.0/innodb-compression.html
