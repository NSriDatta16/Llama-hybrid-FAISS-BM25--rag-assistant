[site]: crossvalidated
[post_id]: 223554
[parent_id]: 
[tags]: 
Predicting continuous position using input variables of unknown quality

The problem I'd like to solve can be reformulated as follows. Let's consider that I have to go to some parties and I would like to find out where in the room I am most likely to have a good time. I have a dataset of x and y positions of people in a room during previous parties and I know whether they had a good time or not. Example 1 Question 1: How to find out where in the room I'm most likely to have fun? I just have a dataset of positions labelled "good" and "bad" and I want to generate a position that will have the highest likelihood of being "good". From my limited knowledge, I thought this sounds like I could look at clusters of "right" positions, and choose the center of the largest cluster as a safe guess. Would this be a sensible approach? Which algorithms would you suggest? Now consider that there are different types of parties and I have datasets from these different types of parties. It could be that "good" locations in the room are different for the different types of parties, but I'm not sure. If this extra information helps me to predict where I should position myself, I would like to use that of course. But if it has no effect whatsoever, I would still like to be able to guess a good position. Example 2 Note: in the figure red, green, and blue are all "good" locations, but differing on some factor (for example, n_people at the party). Question 2: How to find out where in the room I'm most likely to have fun given some other factors that may influence good locations? What methods/algorithms could I use to handle such a case? Note that it is possible that none of them influence the "goodness" of locations. Finally, let's consider the case that I actually wasn't paying much attention to which parties I went to, so it's possible that they're actually all the same (I have no variance in my other factors). Question 3: Can I pick a good position if I don't know whether I'm in case 1 or 2? Note: I've tried to predict case 2 using Random Forest regression models. Would it be possible to use Random Forest regression models for all these cases? What would happen? Any suggestions or (partial) answers very much appreciated!
