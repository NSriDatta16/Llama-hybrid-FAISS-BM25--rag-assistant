[site]: stackoverflow
[post_id]: 3090815
[parent_id]: 3090746
[tags]: 
Is the data in the file sorted in numerical order? Are all the lines of the same length? If not, the simplest approach is best. Namely, reading through the file line by line. There's no need to store more than one line in memory at a time. Code: def closest(num): closest_row = None closest_value = None for row_num, row in enumerate(file('numbers.txt')): value = float(row.split()[0]) if closest_value is None or abs(value - num) Output for sample data: (2, '.3432 1\n') If the lines are all the same length and the data is sorted then there are some optimizations that will make this a very fast process. All the lines being the same length would let you seek directly to particular lines (you can't do this in a normal text file with lines of different length). Which would then enable you to do a binary search. A binary search would be massively faster than a linear search. A linear search will on average have to read 5,000 lines of a 10,000 line file each time, whereas a binary search would on average only read log 2 10,000 â‰ˆ 13 lines.
