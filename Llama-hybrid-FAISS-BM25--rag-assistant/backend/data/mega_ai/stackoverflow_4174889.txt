[site]: stackoverflow
[post_id]: 4174889
[parent_id]: 4156700
[tags]: 
To create a widget (which you can insert via the cms) that uses a category to do something, begin by creating a standard module structure with: /Block /etc /Helper /Model Note that in my code samples and filenames below you will need to replace [Namespace], [Module], and [module] with the appropriate namespace and module that you want to use. Case is important! Begin by creating app/code/local/[Namespace]/[Module]/etc/config.xml 0.0.1 [Namespace]_[Module]_Helper [Namespace]_[Module]_Block [Namespace]_[Module]_Model Then create a app/code/local/[Namespace]/[Module]/etc/widget.xml This widget includes a setting called "selected_category" [Module]: Category Adds a [module] for a category. Categories 1 1 select [module]/catopt Then the obligatory Helper file in app/code/local/[Namespace]/[Module]/Helper/Data.php Then a model to allow the user to select the category in the widget dialog box. This goes in app/code/local/[Namespace]/[Module]/Model/Catopt.php getTreeModel(); $tree->load(); $ids = $tree->getCollection()->getAllIds(); $arr = array(); if ($ids){ foreach ($ids as $id){ $cat = Mage::getModel('catalog/category'); $cat->load($id); array_push($arr, array('value' => $id, 'label' => $cat->getName().' ('.$cat->getProductCount().')')); } } uasort($arr, array($this, 'labelsort')); return $arr; } function labelsort($a, $b){ if ( $a['label'] == $b['label'] ) return 0; else if ( $a['label'] Finally on the module side of things a block which goes in app/code/local/[Namespace]/[Module]/Block/Category.php This block is using a custom .phtml file for it's display but you can change that to use anything else you might need to show by changing the type of block and input to setTemplate. _serializer = new Varien_Object(); $this->setTemplate('[module]/[module].phtml'); parent::_construct(); } public function getCategory(){ return $this->getData('selected_category'); } } Don't forget to add a module install file under /app/etc/modules/[Namespace]_[Module].xml like this true local Lastly you need to create a template file to display the block content. This will go under /app/design/frontend/default/default/template/[module]/[module].phtml This .phtml file can use $this->getCategory() to get the category and go from there. You can easily customize the block included in these samples to display the default magento product list grids instead of using a custom .phtml file.
