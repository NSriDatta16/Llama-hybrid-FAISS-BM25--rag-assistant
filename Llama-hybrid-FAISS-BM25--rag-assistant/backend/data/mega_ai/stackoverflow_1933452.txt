[site]: stackoverflow
[post_id]: 1933452
[parent_id]: 758082
[tags]: 
I think it can be rather elegant with an extra utility class called Recursive as follows: public static class Recursive { public static Func Func ( Func , Func > f) { return () => f(Func(f))(); } public static Func Func ( Func , Func > f) { return x => f(Func(f))(x); } public static Func Func ( Func , Func > f) { return (a1, a2) => f(Func(f))(a1, a2); } //And so on... } class Program { static void Main(string[] args) { Console.WriteLine( Recursive.Func (factorial => x => x == 0 ? 1 : factorial(x - 1) * x ) (10) ); Console.WriteLine( Recursive.Func (gcd => (x,y) => x == 0 ? y: y == 0 ? x: x > y ? gcd(x % y, y): gcd(y % x, x) ) (35,21) ); } }
