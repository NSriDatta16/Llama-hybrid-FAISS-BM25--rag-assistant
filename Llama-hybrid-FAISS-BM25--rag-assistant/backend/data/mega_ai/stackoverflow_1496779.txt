[site]: stackoverflow
[post_id]: 1496779
[parent_id]: 1495475
[tags]: 
Parse a single string : (defun parse-string-to-floats (string) (let ((*read-eval* nil)) (with-input-from-string (stream string) (loop for number = (read stream nil nil) while number collect number)))) Process a list of strings and return a single list : (defun parse-list-of-strings (list) (mapcan #'parse-string-to-floats list)) Example : CL-USER 114 > (parse-list-of-strings (list "1.1 2.3 4.5" "1.17 2.6 7.3")) (1.1 2.3 4.5 1.17 2.6 7.3) Note : A costly operation is READ to read float values from streams. There are libraries like PARSE-NUMBER that might be more efficient - some Common Lisp implementation also might have the equivalent of a READ-FLOAT / PARSE-FLOAT function.
