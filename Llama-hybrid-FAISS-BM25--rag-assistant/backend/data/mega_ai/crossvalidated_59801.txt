[site]: crossvalidated
[post_id]: 59801
[parent_id]: 59531
[tags]: 
If your strings are sufficiently long, you can compute the weighted average of $a$ and $b$, $c = (1-\lambda) a + \lambda b$, interpret each value as a probability, and sample according to those probabilities. The result is only approximate, i.e., $ d(a,c) \approx \lambda d(a,b) $ and $ d(b,c) \approx (1-\lambda) d(a,b) $, but that should be sufficient for your purposes. n Another approach, to optimize discrete functions, would be to use simulated annealing (you need to define a notion of "neighbouring string", e.g., one that only differs by one bit) or genetic algorithms (you need to define a notion of "crossover").
