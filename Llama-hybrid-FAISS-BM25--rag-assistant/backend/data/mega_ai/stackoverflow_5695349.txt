[site]: stackoverflow
[post_id]: 5695349
[parent_id]: 5695208
[tags]: 
Howard's answer is concise and elegant, but it's also O(n^2) in the worst case. For large lists with large numbers of grouping key values, you'll want to sort the list first and then use itertools.groupby : >>> from itertools import groupby >>> from operator import itemgetter >>> seq = [["A",0], ["B",1], ["C",0], ["D",2], ["E",2]] >>> seq.sort(key = itemgetter(1)) >>> groups = groupby(seq, itemgetter(1)) >>> [[item[0] for item in data] for (key, data) in groups] [['A', 'C'], ['B'], ['D', 'E']] Edit: I changed this after seeing eyequem's answer: itemgetter(1) is nicer than lambda x: x[1] .
