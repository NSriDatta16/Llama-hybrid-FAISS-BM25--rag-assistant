[site]: stackoverflow
[post_id]: 4117180
[parent_id]: 4116507
[tags]: 
An alternative solution to Eratosthenes' Sieve would be to construct a test T(k) that returns True or False for any given k. It would be slower, but this way no storage would be needed, so it would extend more readily to arbitrary data length. If you simplify the problem for a moment, and say we are simply looking to discard reflections, then it would be easy: T_ref(k) returns true iff k As for rotating bits, exactly the same can be done: T_rot(k) returns true iff k == MIN{the set of all rotations of k} You can think of dividing your integers up into a bunch of equivalence classes E(k) where E(k) is the set of all reflection&rotation permutations of k. You might want to take a moment to satisfy yourself that the set of natural numbers N partitions itself readily into such disjoint subsets. Then the set {k s.t. k == MIN(E(k)) } will guarantee to contain exactly one element from each equivalence class. This would make a really nice interview question.
