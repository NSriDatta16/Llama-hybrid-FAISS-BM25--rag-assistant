[site]: stackoverflow
[post_id]: 5433069
[parent_id]: 5075997
[tags]: 
Christian's algorithm (discovered in a presentation linked to from aaa's answer ) turned out to be just what I needed. On my blog I have a complete (and rather elegant, if I say so myself!) implementation using WCF Rest on the server side and RestSharp and the Reactive Framework on the client side. Here's an excerpt from the blog post explaining the algorithm: Client sends a message to the server: “What’s the time?” [adding ‘Mr. Wolf’ is optional]. Crucially, it notes the time that it sent the message (call it T sent ) Server responds as quick as it can, giving the time according to its own clock, T server . When Client gets the message, it notes the time of receipt (call it T received ). Then it does some maths: the round-trip time, RTT, is T received – T sent . So assuming that the server responded instantly, and that the network latency was the same in both directions, that means that the server actually sent the message RTT/2 seconds ago. Thus, at the instant Client receives the message, the time at the server is T server + RTT/2. Then the Client can compare with its own clock and determine the difference – the clock skew.
