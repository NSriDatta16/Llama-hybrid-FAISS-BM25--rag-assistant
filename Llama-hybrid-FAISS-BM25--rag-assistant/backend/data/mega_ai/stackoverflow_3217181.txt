[site]: stackoverflow
[post_id]: 3217181
[parent_id]: 3214417
[tags]: 
I've had the exact problem in a couple different projects. For speed's sake, I solved it by quickly looping through all the children, exactly as you did, on creation complete and it felt just as "dirty" and "hacky" but it got the job done. ActionScript isn't as mature as other languages so a lot of solutions require a quick hack because doing it properly would require writing an entire framework, which is impractical. I've also solved the problem using the Application.application object, which is a cool little trick to get a global reference to things. I use that when I need singleton instances in my application. Again, hacky, yet elegantly simple. Applying that to your situation, instead of firing an event that has to bubble all over your code you can do something along the lines of the following, whenever a "child box" is created (and your custom event used to be fired): Application.application.StatisticList.addItem(this); Another cool trick I use in situations like these is dictionaries instead of ArrayCollections. They give me the ability to do "instant lookup" when I need it while still allowing iteration when necessary. You can iterate over both the keys and the values of a dictionary. The code becomes something like: Application.application.StatisticList[this.id] = this; Now you can access your statistics in 3 ways: Instantly by direct id In "order," iterating over all ids In "order," iterating over all StatisticBox objects (the same functionality of ArrayCollection) I hope some of that helps in some way, --gMale
