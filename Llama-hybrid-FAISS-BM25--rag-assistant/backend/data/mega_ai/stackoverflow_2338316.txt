[site]: stackoverflow
[post_id]: 2338316
[parent_id]: 
[tags]: 
Functional approach to parse hierarchical CSV

I'm trying to create a piece of code but cannot get it working. The simplest example I can think of is parsing some CSV file. Suppose we have a CVS file, but the data is organized in some kind of hierarchy in it. Like this: Section1; ;Section1.1 ;Section1.2 ;Section1.3 Section2; ;Section2.1 ;Section2.2 ;Section2.3 ;Section2.4 etc. I did this: let input = "a; ;a1 ;a2 ;a3 b; ;b1 ;b2 ;b3 ;b4 ;b5 c; ;c1" let lines = input.Split('\n') let data = lines |> Array.map (fun l -> l.Split(';')) let sections = data |> Array.mapi (fun i l -> (i, l.[0])) |> Array.filter (fun (i, s) -> s <> "") and I got val sections : (int * string) [] = [|(0, "a"); (4, "b"); (10, "c")|] Now I'd like to create a list of line index ranges for each section, something like this: [|(1, 3, "a"); (5, 9, "b"); (11, 11, "c")|] with the first number being a starting line index of the subsection range and the second - the ending line index. How do I do that? I was thinking about using fold function, but couldn't create anything.
