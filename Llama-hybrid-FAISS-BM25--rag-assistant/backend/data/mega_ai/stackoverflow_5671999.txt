[site]: stackoverflow
[post_id]: 5671999
[parent_id]: 5671904
[tags]: 
Interesting problem - this might not be obvious but the reason the event is 'prevented' is because it never occurs. This is because the change event is triggered you click outside of the field, and even though you click the button (looks like you click the button) it never happens (because the alert box is blocking it). Inputbox's have defaultValues which you can leverage legitimately to update the default value of the input as it's changed. The example below should solve your problem. $(function(){ $('#button').bind("click",function(){ if($('#textbox').attr('defaultValue') != $('#textbox').val()) { alert("button clicked and value changed"); $('#textbox').attr('defaultValue', $('#textbox').val()); } else { alert("button clicked and value not changed") }; }); }); Alternatively, if you still needed the change event just don't have an alert box $(function(){ $('#button').bind("click",function(){ alert("button click"); }); $('#textbox').bind("change",function(){ //alert("text changed"); $('#container').html("changed!"); }); });
