[site]: stackoverflow
[post_id]: 4380048
[parent_id]: 
[tags]: 
Erlang: Sorting or Ordering Function for List of Tuple Lists

I have trouble sorting two related but separate lists of tuple lists. One list is made up of tuple lists representing a blog post. The other list is made up of tuple lists representing a comment post. The problem is when you would like the same order based on blog id value . The lists for blog posts is sorted via the date value. So you cannot just sort numerically via blog id for both blog and comment post. And you cannot just sort the comment post via date value because the date values of blog and related comment post may be different. I am not sure how to approach the problem - at least not in an elegant way. Should I use lists:nth and consequently get each tuple list and position value? Then I would get the value of blog id, Then I would search in the list for comment posts for that id. Get the value of that tuple list. Associate the value of that tuple list in a new list with the appropriate nth position value. Should I use the lists:sort function? Any suggestions with code samples much appreciated. Here are two sample lists of tuple lists that can be used as a basis : [[{ >, >}, { >, >}, { >, >}], [{ >, >}, { >, >}, { >, >}], [{ >, >}, { >, >}, { >, >}]] [[{ >, >}, { >, >}, { >, >}, { >, >}], [{ >, >}, { >, >}, { >, >}, { >, >}], [{ >, >}, { >, >}, { >, >}, { >, >}]] And the desired output is the following with first list unchanged and second list reordered : [[{ >, >}, { >, >}, { >, >}], [{ >, >}, { >, >}, { >, >}], [{ >, >}, { >, >}, { >, >}]] [ [{ >, >}, { >, >}, { >, >}, { >, >}], [{ >, >}, { >, >}, { >, >}, { >, >}], [{ >, >}, { >, >}, { >, >}, { >, >}]]
