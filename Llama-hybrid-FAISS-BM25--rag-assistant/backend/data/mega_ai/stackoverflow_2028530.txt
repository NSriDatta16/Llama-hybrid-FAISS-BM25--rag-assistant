[site]: stackoverflow
[post_id]: 2028530
[parent_id]: 1918417
[tags]: 
yeah I had the same problem.. seems as its as designed to disallow retrieving logs remotely. The web interface gives a little rss feed but it wasn't enough of a history for me. So we created our own customised rss feed... its not the most elaborate of things and is customised to our liking, you can mix the fields around in print_item() to change the look of the feed. You could also mod it to return log info on specific changesets if needed. You will have to add a script alias to apache, something like (See http://httpd.apache.org/docs/2.0/howto/cgi.html for more info): ScriptAlias /feed.cgi /usr/local/systems/hg/script/feed.cgi feed.cgi file contents: #!/usr/bin/env python2.5 # -*- python -*- """ Creates a rss feed from commit log messages in a repository/branch. Can be filtered on commit logs from a set date eg date=2009-12-12 or by a number of days previous eg. days=7 Usage: * retrieve all logs: http://hg.server/feed.cgi?repository=MyRepo * retrieve logs from set date: http://hg.server/feed.cgi?repository=DMyRepo&date=2009-11-11 * retrieve logs from last 77 days: http://hg.server/feed.cgi?repository=DMyRepo&days=77 * retrieve all logs from a branch: http://hg.server/feed.cgi?repository=MyRepo&branch=myBranch Script Location on server: /usr/local/systems/hg/script/feed.cgi """ defaultdateformats = ( '%Y-%m-%d %H:%M:%S', '%Y-%m-%d %I:%M:%S%p', '%Y-%m-%d %H:%M', '%Y-%m-%d %I:%M%p', '%Y-%m-%d', '%m-%d', '%m/%d', '%m/%d/%y', '%m/%d/%Y', '%a %b %d %H:%M:%S %Y', '%a %b %d %I:%M:%S%p %Y', '%a, %d %b %Y %H:%M:%S', # GNU coreutils "/bin/date --rfc-2822" '%b %d %H:%M:%S %Y', '%b %d %I:%M:%S%p %Y', '%b %d %H:%M:%S', '%b %d %I:%M:%S%p', '%b %d %H:%M', '%b %d %I:%M%p', '%b %d %Y', '%b %d', '%H:%M:%S', '%I:%M:%S%p', '%H:%M', '%I:%M%p', ) import os, sys, cgi, cgitb, datetime, time cgitb.enable() from mercurial import ui, hg, util from mercurial.node import short def find_repository(name): base = '/usr/local/systems/hg/repos/' path = os.path.join(base, name) repos = hg.repository(None, path) return repos def find_changes(repos, branch, date): # returns true if d2 is newer than d1 def newerDate(d1, d2): d1 = datetime.datetime.fromtimestamp(d1) d2 = datetime.datetime.fromtimestamp(d2) return d1 %(content)s " % { 'name': name, 'content': content } link = link_template % {'node': short(change.node())} print " " _element('title', str(change.rev())) _element('description', change.description()) _element('guid', str(change.rev())) _element('author', change.user()) _element('link', link) _element('pubdate', str(datetime.datetime.fromtimestamp(change.date()[0]))) print " " def print_rss(changes, repos, template): print """ N/A en-us Changelog Changelog """ for change in changes: ctx = repos.changectx(change) print_item(ctx, template) print """ """ if __name__=="__main__": # -*- python -*- print "Content-Type: application/rss+xml; charset=UTF-8" print f = cgi.FieldStorage() if not f.has_key("repository"): print "Need to specify repository." sys.exit() repository = f['repository'].value branch = '' if f.has_key('branch'): branch = f['branch'].value date = '' if f.has_key('date') and not f.has_key('days'): try: #date = datetime.datetime.strptime(f['date'].value, '%Y-%m-%d') date = util.parsedate(f['date'].value)[0] except: print 'Error in date format, use one of the following formats:', defaultdateformats sys.exit() elif f.has_key('days') and not f.has_key('date'): days = int(f['days'].value) try: date = datetime.datetime.now() - datetime.timedelta(days=days) date = time.mktime(date.timetuple()) except: print 'Error in days, please use a standard number eg. days=7' sys.exit() elif f.has_key('days') and f.has_key('date'): print 'Error, please only supply a dayrange OR a date, not both' sys.exit() repos = find_repository(repository) changes = find_changes(repos, branch, date) rev_link_template = 'http://hg.server/hg/%(repos)s/rev/%%(node)s' % { 'repos': repository } print_rss(changes, repos, rev_link_template)
