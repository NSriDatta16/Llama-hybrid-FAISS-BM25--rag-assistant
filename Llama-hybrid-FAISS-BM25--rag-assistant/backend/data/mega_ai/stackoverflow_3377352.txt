[site]: stackoverflow
[post_id]: 3377352
[parent_id]: 
[tags]: 
How can I model an is-a relationship with DBIx::Class?

With the following (simplified) MySQL table definitions: create table items ( item_id int unsigned auto_increment primary key, purchase_date date ) engine = innodb; create table computers ( item_id int unsigned primary key, processor_type varchar(50), foreign key item_fk (item_id) references items (item_id) on update restrict on delete cascade ) engine = innodb; create table printers ( item_id int unsigned primary key, is_duplex boolean, foreign key item_fk (item_id) references items (item_id) on update restrict on delete cascade ) engine = innodb; Being new to DBIx::Class , I would like to model an inheritance relationship between database entities (computers and printers both being items), but with the provided belongs_to relationship type, this seems to be awkward, because the association with the base class is not hidden, so one must still manually create entities for both classes, and access to base class attributes in the derived classes is different from accessing their own attributes. Is there an elegant solution which would allow me to say: $printer = $printer_rs->create({purchase_date => $date, is_duplex => 0}); or (on a fetched printer row): $date = $printer->purchase_date; $duplex = $printer->is_duplex; ?
