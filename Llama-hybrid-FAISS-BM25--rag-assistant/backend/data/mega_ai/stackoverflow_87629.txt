[site]: stackoverflow
[post_id]: 87629
[parent_id]: 87514
[tags]: 
The choice really doesn't depend on C# itself. It comes down to a balance between: How often do you use the data in your code? Does the data ever change (and do you care if it does)? What's the relative (time) cost of getting the data again, compared to everything else your code does? How much value do you put on performance , versus developer effort/time (for this particular application)? As a general rule: for production applications, where the data doesn't change often, I would probably create the DataTable once and then hold onto the reference as you mention. I would also consider putting the data in a typed collection/list/dictionary, instead of the generic DataTable class, if nothing else because it's easier to let the compiler catch my typing mistakes. For a simple utility you run for yourself that "starts, does its thing and ends", it's probably not worth the effort. You are asking about Windows CE. In that particular care, I would most likely do the query only once and hold onto the results. Mobile OSs have extra constraints in batteries and space that desktop software doesn't have. Basically, a mobile OS makes bullet #4 much more important. Everytime you add another retrieval call from SQL, you make calls to external libraries more often, which means you are probably running longer, allocating and releasing more memory more often (which adds fragmentation), and possibly causing the database to be re-read from Flash memory. it's most likely a lot better to hold onto the data once you have it, assuming that you can (see bullet #2).
