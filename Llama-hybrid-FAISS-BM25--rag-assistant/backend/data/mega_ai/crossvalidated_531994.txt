[site]: crossvalidated
[post_id]: 531994
[parent_id]: 531903
[tags]: 
Formula looks fine as a naive integration $AP={\large \Sigma}_{i} p(i) \Delta r$ . auc function from sklearn gives a similar result. import numpy as np import sklearn np.random.seed(42) precision = np.linspace(0.0, 1.0, 100) recall = np.linspace(0.0, 1.0, 100) from sklearn.metrics import auc AP = sum([(recall[i]-recall[i-1])*precision[i] for i in range(len(precision)-1)]) AP, auc(precision, recall) # (0.4949494949494951, 0.5) Please note average_precision_score from sklearn requires scores and class labels, not precision and recall values, so we can't feed precision and recall vectors into that function directly.
