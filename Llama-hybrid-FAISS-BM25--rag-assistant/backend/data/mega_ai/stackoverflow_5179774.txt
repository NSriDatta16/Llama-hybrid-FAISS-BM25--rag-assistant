[site]: stackoverflow
[post_id]: 5179774
[parent_id]: 5179704
[tags]: 
Darren, Just a quick SO linq (pun intended!!) to get you going until further answers arrive: Standard deviation of generic list? hope this helps [edit] - based on the SO link above, you could amend that and try (inside a static class): public static double StdDev(this IEnumerable values) { double ret = 0; if (values.Count() > 0) { //Compute the Average double avg = values.Average(); //Perform the Sum of (value-avg)_2_2 double sum = values.Sum(d => Math.Pow(d - avg, 2)); //Put it all together ret = Math.Sqrt((sum) / (values.Count()-1)); } return ret; } plus a little override (which i had worked up but then changed on looking at this link http://help.syncfusion.com/ug_84/User%20Interface/WPF/Grid/default.htm?turl=Documents%2Fcustomsummaries.htm ): public static double StdDev (this IEnumerable values, Func selector) { double ret = 0; var count = values.Count(); if (count > 0) { // Compute the Average double? avg = values.Average(selector); // Perform the Sum of (value-avg)^2 double sum = values.Select(selector).Sum(d => { if (d.HasValue) { return Math.Pow(d.Value - avg.Value, 2); } return 0.0; }); // Put it all together ret = Math.Sqrt((sum) / (count - 1)); } return ret; } and then simply apply as such: var results = from res in dt.AsEnumerable() group res by res.Field (key) into grp orderby Convert.ToInt32(grp.Key) select new { date = grp.Key, sum = grp.Average(r => Convert.ToDouble(r.Field (average))), stdDev = gp.Select(s => Convert.ToDouble(s.Field (average))).StdDev(), // alternative override - note no need to convert stdDev2 = gp.StdDev(s => s.Field (average)) }; haven't tested, so may not work straight away, but theory is there.
