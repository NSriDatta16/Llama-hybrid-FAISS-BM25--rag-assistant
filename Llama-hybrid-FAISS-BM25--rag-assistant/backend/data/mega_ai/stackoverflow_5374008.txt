[site]: stackoverflow
[post_id]: 5374008
[parent_id]: 5373884
[tags]: 
If I understand your question correctly, it sounds like you currently have a UITableViewController subclass and you want to change it to be a UIViewController subclass. There are a few things that you'll need to go through in order to do this, and hopefully I won't forget any of the steps. First in your @interface file, change your classes' superclass, conform to the datasource and delegate protocols and finally declare an outlet for a UITableView: @interface YourViewControllerName : UIViewController { } @property (nonatomic, retain) IBOutlet UITableView *myTableView; Move on to your implementation file and @synthesize the tableView property: @implementaion YourViewControllerName @synthesize myTableView; You also need to change your designated initializer if you do create your viewcontroller programatically and are doing any customisation during it's initialisation (it doesn't seem to be the case for you as you mentioned having a NIB file, but here it is anyway): - (id)initWithStyle:(UITableViewStyle)style { self = [super initWithStyle:style]; if (self) { // Custom initialization } return self; } Copy your table view delegate and datasource methods from the old view controller, plus any custom initialisation code for your (NSArray*) data source. This is usually created in your viewDidLoad: method. Move on to your NIB file (the one with the tableview object only). Add a UIView object to the nib and move the table view object as a subview of it. Connect the UIView to your file owner's view outlet, and the UITableView with the file owner's myTableView outlet by dragging from the file owner to the respective objects. Make the file owner your tableview datasource and delegate but control dragging from the tableview to the file owner. And unless I'm forgetting something, that should be all you need to do. Feel free to ask any questions in the comments section. Cheers, Rog
