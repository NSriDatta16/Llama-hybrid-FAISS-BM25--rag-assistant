[site]: stackoverflow
[post_id]: 2721136
[parent_id]: 2720843
[tags]: 
Code rewriting in Tcl in a manner recognizably similar to Lisp macros is a common technique. For example, this is (trivial) code that makes it easier to write procedures that always import a certain set of global variables: proc gproc {name arguments body} { set realbody "global foo bar boo;$body" uplevel 1 [list proc $name $arguments $realbody] } With that, all procedures declared with gproc xyz rather than proc xyz will have access to the foo , bar and boo globals. The whole key is that uplevel takes a command and evaluates it in the caller 's context, and list is (among other things) an ideal constructor for substitution-safe code fragments.
