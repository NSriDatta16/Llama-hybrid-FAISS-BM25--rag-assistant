[site]: stackoverflow
[post_id]: 1972462
[parent_id]: 1969303
[tags]: 
Let perl do it for you. Put the handle in paragraph mode : $/ = ""; # paragraph mode while (<>) { ... } Now in every iteration of the loop, $_ will contain an entire record, where each record is separated by two or more newlines. See it in action: #! /usr/bin/perl use warnings; use strict; use 5.10.0; # for named capture buffers and %+ my $equipconst = qr/ ^ constant \s+ fixup \s+ (?:private \s+)? (? .+?) # non-greedy to right-trim whitespace \s+ = \s+ \S+) \s+ (? \S+) > /x; my $equipattr = qr/ \s* (? \S+) \s* = \s* (? .+?) # must be non-greedy! /x; # read from DATA rather than standard input/named arguments # (used for demo purposes only) *ARGV = *DATA; print " \n"; $/ = ""; while (<>) { if (/$equipconst/g) { my @attrs = map [ $_ => $+{$_} ] => qw/ logicalName valueType value /; # \G picks up where the last //g stopped while (/\G $equipattr (?=\s*$|$equipattr)/gx) { my($name,$value) = @+{ qw/ name value / }; # discard tag, e.g., becomes 1800 $value =~ s/ /$1/; push @attrs => [ $name => $value ]; } my $attrs = join " ", map { # strip quotes if present $_->[1] =~ s/^"(.*)"$/$1/; qq{$_->[0]="$_->[1]"}; } @attrs; print " \n"; } } print " \n"; __DATA__ constant fixup GemEstabCommDelay = vid = 6 name = "ESTABLISHCOMMUNICATIONSTIMEOUT" units = "s" min = max = default = constant fixup private GemConstantFileName = vid = 4 name = "" units = "" constant fixup private GemAlarmFileName = vid = 0 name = "" units = "" Output: Note that it differs slightly from your spec: the first logicalName attribute does not contain whitespace.
