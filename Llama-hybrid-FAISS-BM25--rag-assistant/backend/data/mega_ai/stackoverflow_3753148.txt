[site]: stackoverflow
[post_id]: 3753148
[parent_id]: 3752841
[tags]: 
I think that the F# team considers this behavior a bug that is likely to change in a future release. Occasionally a class may change a method from non-virtual (in release N) to virtual (in release N+1). Is this a "breaking change"? It is breaking if code compiled against the original class used call rather than callvirt . The concept of "breaking change" is mostly a matter of degree rather than kind ; the non-virtual to virtual change is a "minor" breaking change. In any case, some classes in the .NET Framework have exhibited this kind of change, and thus you run into a problem analogous to the "fragile base class". Witnessing this, the F# team intends to change the compiler codegen to use callvirt like C# and VB do. Assuming that happens, a few unlikely programs, such as the one in this repro, would change behavior when compiled with a future version of the F# compiler.
