[site]: stackoverflow
[post_id]: 696216
[parent_id]: 686415
[tags]: 
Synchronizing does a little bit more than just waiting, while inelegant coding this could achieve the effect required. From http://www.javaperformancetuning.com/news/qotm030.shtml The thread acquires the lock on the monitor for object this (assuming the monitor is unlocked, otherwise the thread waits until the monitor is unlocked). The thread memory flushes all its variables, i.e. it has all of its variables effectively read from "main" memory (JVMs can use dirty sets to optimize this so that only "dirty" variables are flushed, but conceptually this is the same. See section 17.9 of the Java language specification). The code block is executed (in this case setting the return value to the current value of i3, which may have just been reset from "main" memory). (Any changes to variables would normally now be written out to "main" memory, but for geti3() we have no changes.) The thread releases the lock on the monitor for object this.
