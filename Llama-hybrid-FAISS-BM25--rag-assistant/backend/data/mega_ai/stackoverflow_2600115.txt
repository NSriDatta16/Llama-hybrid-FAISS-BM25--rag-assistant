[site]: stackoverflow
[post_id]: 2600115
[parent_id]: 2599990
[tags]: 
For logon you want to store an iterated salted hash of the password not the password itself. Two possibilities are: bcrypt - A modified form of blowfish that increases the work factor PBKDF2 - A function from the PKCS#5 spec that uses HMAC with a hash function and random salt to iterate over a password many times. However, this will not work with your requirements: Support remote password retrieval I am hoping you can convince the client that what they really mean is to reset the password, in which case you can still use a password hash. Support data retrieval on accidental/purposeful deletion This requirementment is harder to work around and will require you to weaken security by storing encrypted passwords in the database so they can be reversed. To do this you should use a master key, encrypt each password with a random IV using a cipher like AES/CBC or AES/CTR mode. You should regularly rekey the master key and reencrypt all the passwords . You will then need a mechanism for working out when to allow password retrieval (e.g. mother's maiden name etc) To use the password to encrypt data use the PKDF2 function from PKCS#5 to generate a key from the password.
