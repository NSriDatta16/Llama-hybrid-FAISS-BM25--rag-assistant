[site]: crossvalidated
[post_id]: 545878
[parent_id]: 544858
[tags]: 
A wide variety of interaction terms could be "correct" here, as comments from Robert Long and COOLSerdash suggest. To decide which if any interaction to use involving the pre value, you have to think very carefully about how you want to "control for pre-test performance." Try pre-post difference as outcome The first question is whether you might be better off just using the time difference pre-post as the outcome measure of improvement following training. That's one perfectly acceptable way to control for pre-test performance. Or, if you expect proportional improvements rather than linear improvements in time with training, use the difference of the logs of pre and post to get the log of the pre/post ratio. (You shouldn't then make the mistake * of continuing to include the pre value in your model.) That's the idea behind a paired t-test, just expanded in your situation to include the types of courses and types of training. Expressing the difference in this direction has an advantage in that an increasingly positive outcome value is an improvement in performance, which seems to be of most interest. That would change the interpretation of the fixed and random effects in your model, but maybe in a way more useful in this application. The course*group term would give you how the improvement itself depends on each combination of group and course . The (1|subjectID) would represent estimated differences in improvement among individuals at some baseline combination of group and course . That approach, if it's reasonable in your application, would greatly simplify both the modeling and explaining results to others. Using pre as a predictor for post , without further interactions. Although that's another acceptable way to "control for pre-test performance," it does so in a different way. Your model then is something like: post ~ b0 + b1 * pre + (terms from course, group, their interactions, with associated coefficients) That implies that the post value is based around a common intercept b0 plus an additive contribution proportional to the pre value (the same regardless of the particular combination of group and course in question) and separate additive contributions from the combination of group and course . Does that make sense for your application? Including pre in interactions That would take the prior model and expand it to allow the proportional contribution of pre to post to differ depending on course and group (and vice-versa). You don't need to include all potential interactions with a pre*course*group term. That full interaction allows each of the course*group interactions to depend linearly on the value of pre . Is that what you need? Is such a linear interaction with the pre value reasonable? Might simply allowing for interactions of pre with course and/or group individually (e.g., with pre:course and/or pre:group terms in R syntax) be enough? Again, there is no "correct" answer in general here, just what makes sense based on your understanding of the subject matter. Recommendation In general, it can help to write out the full equations for the models including all coefficients and terms rather than just looking at the shorthand of R (or other modeling) syntax. If you do that, you will see just which contributions to outcome are being modified by including particular interaction terms. You can then choose accordingly. If these are elite Alpine skiers, you presumably are looking at post-pre differences on the order of a few seconds, around full pre times on the order of many seconds to minutes. In that case, my guess is that the simple t-test-like approach of just using pre-post as the outcome while omitting pre as a predictor otherwise will work quite well and be much easier to explain to others. Note that nothing above allows for wipe-outs in pre or post values or for considering changes in snow-surface or other environmental conditions. That's true for all of these approaches, however. *An answer from Robert Long on the linked page shows a way to model properly if you think that the change in performance depends on the pre value. In outline, you model the pre and post values separately, with an indicator variable predictor specifying which of pre or post is involved.
