[site]: stackoverflow
[post_id]: 2844032
[parent_id]: 2843758
[tags]: 
Here is my take at it: somefile.txt: NAMEA valuea NAMEB valueb PHP Code: $file = file_get_contents('./somefile.txt'); $string = preg_replace('~^(.+?)\s+(.+?)$~m', '$1=$2', $file); $string = str_replace(array("\r\n", "\r", "\n"), '&', $string); $result = array(); parse_str($string, $result); echo ' '; print_r($result); echo ' '; Output: Array ( [NAMEA] => valuea [NAMEB] => valueb ) You may also be able to further simplify this by using str_getcsv() on PHP 5.3+. EDIT : My previous version fails for keys that have spaces like @Col. Shrapnel noticed. I didn't read the question with enough attention. A possible solution since you seem to be using keys that always have : appended is this: $string = preg_replace('~^(.+?):\s+(.+?)$~m', '$1=$2', $file); To remove everything from key_x to the end of the file you can do something like this: $string = substr($string, 0, strpos($string, 'key_x')); So the whole thing would look like this: somefile.txt: Registration Number: valuea Applicant Name: valueb PHP Code: $file = file_get_contents('./somefile.txt'); $string = substr($file, 0, strpos($file, 'key_x')); $string = preg_replace('~^(.+?):\s+(.+?)$~m', '$1=$2', $string); $string = str_replace(array("\r\n", "\r", "\n"), '&', $string); $result = array(); parse_str($string, $result); echo ' '; print_r($result); echo ' '; Output: Array ( [Registration_Number] => valuea [Applicant_Name] => valueb )
