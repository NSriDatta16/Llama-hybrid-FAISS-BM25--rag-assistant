[site]: stackoverflow
[post_id]: 2044087
[parent_id]: 
[tags]: 
Would you use DI or a factory?

My application stores files, and you have the option of storing the files on your own server or using S3. I defined an interface: interface FileStorage { } Then I have 2 implementations, S3FileStorage and LocalFileStorage . In the control panel, the administrator chooses which FileStorage method they want, and this value is stored in a SiteConfiguration object. Since the FileStorage setting can be changed while the application is already running, would you still use spring's DI to do this? Or would you just do this in your code: FileStorage fs = null; switch(siteConfig.FileStorageMethod) case FileStorageMethod.S3: fs = new S3FileStorage(); case FileStorageMethod.Local: fs = new LocalFileStorage(); Which one makes more sense? I believe you can use DI with spring during runtime, but I haven't read about it much at this point.
