[site]: stackoverflow
[post_id]: 3963130
[parent_id]: 
[tags]: 
Wrapping a C++ DLL with a managed class

I'm trying to wrap a unmanaged C++ DLL with managed C++ and I keep getting linking errors. even though I include my library.lib in the project and include the correct header file. This is the managed class: #pragma once #include "..\Terminal\Terminal.h" public ref class ManagedTerminal { private: Terminal * m_unTerminal; public: ManagedTerminal(void) { m_unTerminal = new Terminal(); } }; and this is the unmanaged class: #include "..\Core1.h" #include "..\Core2.h" __declspec(dllexport) class Terminal { private: CoreObj m_core; public: Terminal(); void Init(char* path, char* filename); void Start(); void Stop(); void Run(); Array GetSnapshot(); ~Terminal(void); }; and the errors I get are: Error 5 error LNK2028: unresolved token (0A0000B3) "public: __thiscall Terminal::Terminal(void)" (??0Terminal@@$$FQAE@XZ) referenced in function "public: __clrcall ManagedTerminal::ManagedTerminal(void)" (??0ManagedTerminal@@$$FQ$AAM@XZ) ManagedTerminal.obj TerminalWrapper Error 6 error LNK2019: unresolved external symbol "public: __thiscall Terminal::Terminal(void)" (??0Terminal@@$$FQAE@XZ) referenced in function "public: __clrcall ManagedTerminal::ManagedTerminal(void)" (??0ManagedTerminal@@$$FQ$AAM@XZ) ManagedTerminal.obj TerminalWrapper can anybody tell me what's wrong? thanks :)
