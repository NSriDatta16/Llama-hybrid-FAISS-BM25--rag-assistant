[site]: stackoverflow
[post_id]: 1440550
[parent_id]: 1215471
[tags]: 
Methical, I looked at your script and have updated it. There seemed to be an issue with a tm (trademark) with the original script. I have taken the liberty of updating the script to work.. Option Explicit Dim strComputer, objWMIService, propValue, objItem Dim strUserName, strPassword, colItems, SWBemlocator Dim ImgDir, DateTime, WKID, WKOS, CSD, Architecture, SysDir, SysDrive, WinDir, ServicePack, Zone Dim Allocated, UsedSpace, MaxSpace, objSWbemDateTime, colOperatingSystems, InstallDate, objOperatingSystem Dim VideoCard, Resolution, VideoMemory, UserName, Domain, TotalMemory, Manufacturer, Model, SysType Dim FreeHDSpace, TotalHDSpace, Printer, PortName, CPUDesc, cputype, objOS Dim dtmBootup, dtmLastBootupTime, dtmSystemUptime, Uptime, fileOutput Dim objService, colRunningServices, objProcess, colProcessList, objSoftware, colSoftware, strNameOfUser, strUserDomain Dim colProperties, PercentFree Const wbemFlagReturnImmediately = &h10 Const wbemFlagForwardOnly = &h20 ' This section queries for the workstation to be scanned. strUserName = "" strPassword = "" strComputer = "127.0.0.1" ImgDir = "C:\Scripts\images\" 'Sets up the connections and opjects to be used throughout the script. Set SWBemlocator = CreateObject("WbemScripting.SWbemLocator") Set objWMIService = SWBemlocator.ConnectServer(, "root\CIMV2", strUserName, strPassword) 'This determines the current date and time of the PC being scanned. Set colItems = objWMIService.ExecQuery("SELECT * FROM Win32_LocalTime", "WQL", wbemFlagReturnImmediately + wbemFlagForwardOnly) For Each objItem In colItems DateTime = objItem.Month & "/" & objItem.Day & "/" & objItem.Year & " - " & Right(100 + objItem.Hour, 2) & ":" & Right(100 + objItem.Minute, 2) & ":" & Right(100 + objItem.Second, 2) Next 'Gets some ingomation about the Operating System including Service Pack level. Set colItems = objWMIService.ExecQuery("Select * from Win32_OperatingSystem",, 48) For Each objItem In colItems WKID = objItem.CSName WKOS = objItem.Caption CSD = objItem.CSDVersion 'Architecture = objItem.OSArchitecture SysDir = objItem.SystemDirectory SysDrive = objItem.SystemDrive WinDir = objItem.WindowsDirectory ServicePack = objItem.ServicePackMajorVersion & "." & objItem.ServicePackMinorVersion Next 'This section returns the Time Zone Set colItems = objWMIService.ExecQuery("Select * from Win32_TimeZone") For Each objItem In colItems Zone = objItem.Description Next 'This section displays the Shadow Storage information 'Set colItems = objWMIService.ExecQuery("Select * from Win32_ShadowStorage") 'For Each objItem In colItems ' Allocated = Int((objItem.AllocatedSpace/1024)/1024+1) ' UsedSpace = Int((objItem.UsedSpace/1024)/1024+1) ' MaxSpace = Int((objItem.MaxSpace/1024)/1024+1) 'Next 'This section returns the InstallDate of the OS Set objSWbemDateTime = _ CreateObject("WbemScripting.SWbemDateTime") Set colOperatingSystems = _ objWMIService.ExecQuery _ ( "Select * from Win32_OperatingSystem" ) For Each objOperatingSystem _ In colOperatingSystems objSWbemDateTime.Value = _ objOperatingSystem.InstallDate InstallDate = _ objSWbemDateTime.GetVarDate(False) Next 'This section returns the Video card and current resolution. Set colItems = objWMIService.ExecQuery("Select * from Win32_DisplayConfiguration",, 48) For Each objItem In colItems VideoCard = objItem.DeviceName Resolution = objItem.PelsWidth & " x " & objItem.PelsHeight & " x " & objItem.BitsPerPel & " bits" Next 'This section returns the Video card memory. Set objWMIService = GetObject("winmgmts:root\cimv2") Set colItems = objWMIService.ExecQuery("Select * from Win32_VideoController") For Each objItem In colItems VideoMemory = objItem.AdapterRAM / 1024 / 1024 Next 'This returns various system information including current logged on user, domain, memory, manufacture and model. Set colItems = objWMIService.ExecQuery("Select * from Win32_ComputerSystem",, 48) For Each objItem In colItems UserName = objItem.UserName Domain = objItem.Domain TotalMemory = Int((objItem.TotalPhysicalMemory / 1024) / 1024 + 1) Manufacturer = objItem.Manufacturer Model = objItem.Model SysType = objItem.SystemType Next 'This determines the total hard drive space and free hard drive space. Set colItems = objWMIService.ExecQuery("Select * from Win32_LogicalDisk Where Name='C:'",, 48) For Each objItem In colItems FreeHDSpace = Fix(((objItem.FreeSpace / 1024) / 1024) / 1024) TotalHDSpace = Fix(((objItem.Size / 1024) / 1024) / 1024) Next 'This section returns the default printer and printer port. Set colItems = objWMIService.ExecQuery("SELECT * FROM Win32_Printer where Default=True", "WQL", wbemFlagReturnImmediately + wbemFlagForwardOnly) For Each objItem In colItems Printer = objItem.Name PortName = objItem.PortName Next '// CPU Info 'This returns the CPU information. Set colItems = objWMIService.ExecQuery("SELECT * FROM Win32_Processor", "WQL", wbemFlagReturnImmediately + wbemFlagForwardOnly) For Each objItem In colItems CPUDesc = LTrim(objItem.Name) Select Case objItem.Family Case 2 cputype = "Unknown" Case 11 cputype = "Pentium brand" Case 12 cputype = "Pentium Pro" Case 13 cputype = "Pentium II" Case 14 cputype = "Pentium processor with MMX technology" Case 15 cputype = "Celeron " Case 16 cputype = "Pentium II Xeon" Case 17 cputype = "Pentium III" Case 28 cputype = "AMD Athlon Processor Family" Case 29 cputype = "AMD Duron Processor" Case 30 cputype = "AMD2900 Family" Case 31 cputype = "K6-2+" Case 130 cputype = "Itanium Processor" Case 176 cputype = "Pentium III Xeon" Case 177 cputype = "Pentium III Processor with Intel SpeedStep Technology" Case 178 cputype = "Pentium 4" Case 179 cputype = "Intel Xeon" Case 181 cputype = "Intel Xeon processor MP" Case 182 cputype = "AMD AthlonXP Family" Case 183 cputype = "AMD AthlonMP Family" Case 184 cputype = "Intel Itanium 2" Case 185 cputype = "AMD Opteronâ„¢ Family" Case Else cputype = "CPU Unidentified" End Select Next 'This returns the current uptime (time since last reboot) of the system. Set colOperatingSystems = objWMIService.ExecQuery("Select * from Win32_OperatingSystem") For Each objOS In colOperatingSystems dtmBootup = objOS.LastBootUpTime dtmLastBootupTime = WMIDateStringToDate(dtmBootup) dtmSystemUptime = DateDiff("h", dtmLastBootUpTime, Now) Uptime = dtmSystemUptime Next Function WMIDateStringToDate(dtmBootup) WMIDateStringToDate = CDate(Mid(dtmBootup, 5, 2) & "/" & Mid(dtmBootup, 7, 2) & "/" & Left(dtmBootup, 4) & " " & Mid(dtmBootup, 9, 2) & ":" & Mid(dtmBootup, 11, 2) & ":" & Mid(dtmBootup, 13, 2)) End Function Dim objFSO Set objFSO = CreateObject("Scripting.FileSystemObject") ' -- The heart of the create file script ----------------------- ' -- Creates the file using the value of strFile on Line 11 ' -------------------------------------------------------------- Set fileOutput = objFSO.CreateTextFile("C:\Scripts\x.html", True) 'Set fileOutput = objExplorer.Document 'This is the code for the web page to be displayed. fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " System Information for '" & WKID & "' " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " System Information for " & WKID & " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " WKInfo - General information on the Workstation. " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " Date and Time " fileOutput.WriteLine " " fileOutput.WriteLine " Date/Time " & DateTime & " " fileOutput.WriteLine " System Uptime " & Uptime & " hours " fileOutput.WriteLine " Time Zone " & Zone & " " fileOutput.WriteLine " " fileOutput.WriteLine " General Computer Information " fileOutput.WriteLine " " fileOutput.WriteLine " Manufacturer " & Manufacturer & " " fileOutput.WriteLine " Model " & Model & " " fileOutput.WriteLine " System Based " & SysType & " " fileOutput.WriteLine " Operating System " & WKOS & " " & CSD & " " & Architecture & " " fileOutput.WriteLine " Operating System Install Date " & InstallDate & " " fileOutput.WriteLine " UserName " & UserName & " " fileOutput.WriteLine " Workstation Name " & WKID & " " fileOutput.WriteLine " Domain " & Domain & " " fileOutput.WriteLine " System Drive " & SysDrive & " " fileOutput.WriteLine " System Directory " & SysDir & " " fileOutput.WriteLine " Windows Directory " & WinDir & " " fileOutput.WriteLine " ShadowStorage Allocated Space " & Allocated & " MB " fileOutput.WriteLine " ShadowStorage Used Space " & UsedSpace & " MB " fileOutput.WriteLine " ShadowStorage Max Space " & MaxSpace & " MB " fileOutput.WriteLine " " fileOutput.WriteLine " General Hardware Information " fileOutput.WriteLine " " fileOutput.WriteLine " CPU " & CPUDesc & " " fileOutput.WriteLine " System Memory " & TotalMemory & " MB " Set colItems = objWMIService.ExecQuery("Select * from Win32_LogicalDisk where DriveType = 3",, 48) For Each objItem In colItems FreeHDSpace = "" & objItem.Name & " Free Space: " & Fix(((objItem.FreeSpace / 1024) / 1024) / 1024) TotalHDSpace = "" & objItem.Name & " Total Space: " & Fix(((objItem.Size / 1024) / 1024) / 1024) PerCentFree = "" & objItem.Name & " Percent Free Space: " & 100 * FormatNumber(Fix(((objItem.FreeSpace / 1024) / 1024) / 1024) / Fix(((objItem.Size / 1024) / 1024) / 1024), 2) fileOutput.WriteLine " Total HDD Space " & TotalHDSpace & " GB " fileOutput.WriteLine " Free HDD Space " & FreeHDSpace & " GB " fileOutput.WriteLine " Percent Free HDD Space " & PerCentFree & "% " Next fileOutput.WriteLine " " fileOutput.WriteLine " General Video Card Information " fileOutput.WriteLine " " fileOutput.WriteLine " Video Card " & VideoCard & " " fileOutput.WriteLine " Video Resolution " & Resolution & " " fileOutput.WriteLine " Video Memory " & VideoMemory & " MB " 'This section lists all the current services and their status. fileOutput.WriteLine " Current Service Information " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " Service Name Service State " Set colRunningServices = objWMIService.ExecQuery("Select * from Win32_Service") For Each objService In colRunningServices fileOutput.WriteLine " " & objService.DisplayName & " " & objService.State & " " 'WScript.echo " " & objService.DisplayName & " " & objService.State & " " Next fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " 'This section lists all the current running processes and some information. fileOutput.WriteLine " Current Process Information " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " PID Process Name Process Owner Memory Used " Set colProcessList = objWMIService.ExecQuery("Select * from Win32_Process") For Each objProcess In colProcessList colProperties = objProcess.GetOwner(strNameOfUser,strUserDomain) fileOutput.WriteLine " " & objProcess.Handle & " " & objProcess.Name & " " & strUserDomain & "\" & strNameOfUser & " " & objProcess.WorkingSetSize/1024 & " kb " 'fileOutput.WriteLine " " & objProcess.Handle & " " & objProcess.Name & " " & objProcess.WorkingSetSize / 1024 & " kb " Next fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " 'This section lists all the currently installed software on the machine. fileOutput.WriteLine " Installed Software " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " Name Vendor Version " Set colSoftware = objWMIService.ExecQuery("Select * from Win32_Product") For Each objSoftware In colSoftware fileOutput.WriteLine " " & objSoftware.Name & " " & objSoftware.Vendor & " " & objSoftware.Version & " " Next fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.WriteLine " " fileOutput.close WScript.Quit
