[site]: stackoverflow
[post_id]: 2382377
[parent_id]: 2382209
[tags]: 
The return type from the ternary operation is being upcast to java.lang.Object, as the common superclass class of both String and the autoboxed double, so you would have to provide the method signature for the object, and then use that to make the appropriate cast and call the relevant method: public class SoCast { public static void main(String[] args) { SoCast sc = new SoCast(); Double someDouble = 3.14; String someString = "foo"; String myValue = null; sc.writeToCell(2, 4, myValue != null ? someDouble : someString); myValue = "hello"; sc.writeToCell(2, 4, myValue != null ? someDouble : someString); } private int writeToCell(int rowIndex, int colIndex, Object value) { int result = -1; if (value instanceof String) { result = this.writeToCell(rowIndex, colIndex, (String) value); } else if (value instanceof Double) { result = this.writeToCell(rowIndex, colIndex, (Double) value); } return result; } private int writeToCell(int rowIndex, int colIndex, Double value) { return 1; } private int writeToCell(int rowIndex, int colIndex, String value) { return 5; } }
