[site]: stackoverflow
[post_id]: 3090804
[parent_id]: 29557
[tags]: 
I've done TDD development using NUnit for a number of years and have been using MSTest for about 4 months now due to a role change. I don't think that MSTest stops someone from doing TDD. You still have all the core things you need for TDD such as basic asserts and mocking frameworks (I use Rhino Mocks). MSTest does integrate closely with Visual Studio, the best component of this integration is the Code Coverage Tool that is built in. BUT There are a number of compelling reasons not to use MSTest. The two biggest turn offs in my opinion are: The lack of assert options (compared to NUnit) The sluggish test runner (slow compared to NUnit) This means that writing asserts takes more code in combination with a slow test runner means that the whole process is slower than NUnit. The open source options also have a lot more support in the community. If you are using TFS for CI, then you will need to jump through a few hoops/hacks to get NUnit to publish test results. Running tests on TFS with MSTest in comparison is very easy and straight forward. If you don't touch TFS than I'd go NUnit all the way, it's just nicer.
