[site]: stackoverflow
[post_id]: 4908671
[parent_id]: 4904802
[tags]: 
What you need is something that allows you to convert month numbers from 1-12 to month name abbreviations. While you could do that fairly easily with a list of month names as long as you remember to always subtract 1 from the month number before using it because lists are indexed from 0 not 1. Another alternative that doesn't require that would be to use a Python dictionary. Using a dictionary, your program might look like something like this: # construct dictionary month_names = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split() months = dict((i, month) for i, month in enumerate(month_names, 1)) def main(): number_of_years = input('Enter the number of years for which ' 'you would like to compile data: ') total_sales = 0.0 total_months = number_of_years * 12 for years in range(number_of_years): for month in range(1, 13): sales = input('Enter sales for %s: ' % months[month]) total_sales += sales print print 'The number of months of data is: ', total_months print print 'The total amount of sales is: ', total_sales print average = total_sales / total_months # variable to average results print 'The average monthly sales is: ', average main() In addition to adding the construction of the months dictionary, I modified your call to input() to use that variable so the user prompt displays the name of the month. BTW, you might also want to change the statement that prints the average to: print 'The average monthly sales is: "%.2f"' % average So it only displays 2 digits after the decimal point (instead of many more).
