[site]: stackoverflow
[post_id]: 1192308
[parent_id]: 1191343
[tags]: 
To expand on Ganesh's answer, you can use Type Families instead of Functional Dependencies. Imho they are nicer. And they also change your code less. {-# LANGUAGE FlexibleContexts, TypeFamilies #-} class Set t where type Elem t contains :: (Ord (Elem t)) => t -> Elem t -> Bool instance (Ord a) => Set (RBT a) where type Elem (RBT a) = a contains Leaf b = False contains (Tree c l x r) b | b == x = True | b
