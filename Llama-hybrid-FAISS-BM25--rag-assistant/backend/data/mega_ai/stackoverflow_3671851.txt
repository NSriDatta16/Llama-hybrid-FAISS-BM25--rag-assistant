[site]: stackoverflow
[post_id]: 3671851
[parent_id]: 3671753
[tags]: 
My thoughts on this: Removing the final on a class won't cause immediate problems. But consider this: There was a final class called AdamsFactory which you change to non-final. Two months from now, a new programmer called Dilbert joins your team. He subclasses your used-to-be-final class into ScottFactory, but breaks the Liskov's Substitutability Principle. Then he has your ComicStripPrinter class use ScottFactory instead of AdamsFactory. Something is bound to break. Which brings us back to what Joshua Block says: If you intend inheritance: design it with deliberation, and document it. If you do not intend inheritance, then prevent it. I hope what I said was not a big load-a-crap. EDIT: Go the the preface of Java Langauge Specification , and search for Joshua Bloch :)
