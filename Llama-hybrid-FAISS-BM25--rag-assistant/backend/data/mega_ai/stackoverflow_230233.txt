[site]: stackoverflow
[post_id]: 230233
[parent_id]: 229472
[tags]: 
Test-Driven-Development - Though it should be as this was attempted to be brought in but I don't think it has taken off, so this is still a no but with more details now. Domain-Driven-Design - No Model-Driven-Design/Architecture - No Do you test? - Yes, but not comprehensively. We do have some unit tests, some integration tests and some WatiN tests. Unit Testing - We have some for our new development but the legacy ones don't. Integration Testing - Usually, when it is applicable. My team being the web team doesn't seem to have this too often yet. Acceptance Testing - We have a few levels of this. The first is when a new feature is being developed and has to get an initial approval from someone on another team that will be entering the content that comes before it is even integrated in with the code. The second is when the features get demonstrated at the end of a Sprint to get more feedback about what isn't looking right or working well. Then there is a third level just before it goes into production as a final, "Yes, this doesn't mess up what we have already," sort of thing. Code Reviews - These aren't done anymore but would probably be a good thing to do. Innovative Technologies (Spring, Hibernate, Wicket, JSF, WS, REST, ...) - There are some RESTful ideas being applied in our project and we are using some features of the .Net framework like lambda expressions. Agile - We use Scrum and have stand ups, story board, Iteration Planning Meeting (That is really for the sprint and not an iteration which is 2 sprints as after each pair of sprints the work is shown to executives and other departments while the other demo is for an architect and the head of the content entering team.) Pair Programming - We do have pairing on most new development that isn't seen as grunt work. So for whoever wants to work on the Training part of the site, a pair will do it instead of just one developer. UML - No, and the tool for UML was removed in our new machines Domain-specific languages - No, but there is some terminology that is the company's own interpretations of things as some names of internal products bump against terms others may use for various things. Requirement Specification (How?) - This can range from a big word document spelling out what needs to be done to conversations of what to do and then try this and try that afterward. Continous Integration - We have Cruise Control.Net running for our CI that is used when we commit code changes. Code-Coverage Tools - Nope. Aenemic Domain Model - Somewhat in that there isn't really a big domain model here. Communication (Wiki, Mail, IM, Mailinglists, other documents) - In order of importance: E-mail, IM, phone, then visiting cubicle. There is a weekly team meeting with the manager of applications and daily standups on the big project. Effort estimates - This is now common in each sprint though sometimes this is done by sending out a spread sheet for everyone to put in their estimates that the Scrum Master combines all the results for us to see in the end. Team size - 5 developers with a team lead, a business analyst who is the Scrum Master, a tester to oversee what we have and others outside the team that pop up as needed including content authors to actually use the system. Meetings - Down to business, short, effective and typically good for communicating where things are currently. Code metrics - None that I know. Static code analysis - Nope. Bug tracking - Quality Center is used for tracking defects. * Source Control - We are using Subversion now. For any feature or bug we create a new branch so we can work independently and not have our commits break the build as we are working on something. However, we all share the same DB for development which can be interesting at times. IDE - Visual Studio 2008 on XP using .Net 3.5 and Sitecore 6.1 ... The team is on our 3rd team lead in the almost 2 years I've been here. The CMS project is the big project that we are all working on though there are various support requests that come in that others handle. There have been a lot of changes in the year that we've had a VP of IS. Production is more locked down and there is more work to get a release done as there is a check list procedure now and more hoops that may be useful.
