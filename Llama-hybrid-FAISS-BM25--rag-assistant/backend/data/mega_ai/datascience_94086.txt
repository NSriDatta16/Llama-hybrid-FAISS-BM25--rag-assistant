[site]: datascience
[post_id]: 94086
[parent_id]: 22813
[tags]: 
Imagine you have a dataframe of four feature columns and a target. Two of the features are text columns that you want to perform tfidf on and the other two are standard columns you want to use as features in a RandomForest classifier. I would use the following code: from sklearn.pipeline import Pipeline from sklearn.compose import ColumnTransformer from sklearn.ensemble import RandomForestClassifier from sklearn.feature_extraction.text import TfidfVectorizer # Set X and y X = df[['text1_column_name', 'text2_column_name', 'standard_feature1', 'standard_feature2']] y = df['target'] # initialise model and vectorizers model = RandomForestClassifier() vectorizer1 = TfidfVectorizer() vectorizer2 = TfidfVectorizer() # construct the column transfomer column_transformer = ColumnTransformer( [('tfidf1', vectorizer1, 'text1_column_name'), ('tfidf2', vectorizer2, 'text2_column_name')], remainder='passthrough') # fit the model pipe = Pipeline([ ('tfidf', column_transformer), ('classify', model) ]) pipe.fit(X,y)
