[site]: stackoverflow
[post_id]: 5155709
[parent_id]: 5155092
[tags]: 
First things first: when it comes to selling stuff (ecommerce), you really do need a transactional support. This basically excludes any type of NoSQL solutions like MongoDB or Cassandra. So you must use database that supports transactions. MySQL does, but not in every storage engine. Make sure to use InnoDB and not MyISAM. Of cause many popular databases support transactions, so it's up to you which one to choose. Why transactions? Because you need to complete a bunch of database updates and you must be sure that they all succeed as one atomic operation. For example: 1) make sure ticket is available. 2) Reduce the number of available tickets by one 3) process credit card, get approval 4) record purchase details into database If any of the operations fail you must rollback the previous updates. For example if credit card is declined you should rollback the decreasing of available ticket. And database will lock those tables for you, so there is no change that in between step 1 and 2 someone else tries to purchase a ticket but the count of available tickets has not yet been decreased. So without the table lock it would be possible for a situation where only 1 ticket is left available but it is sold to 2 people because second purchase started between step 1 and step 2 of first transaction. It's essential that you understand this before you start programming ecommerce project
