[site]: stackoverflow
[post_id]: 3672634
[parent_id]: 3672234
[tags]: 
This can be done without manually looking at every character or copying the string. #include #include boost::transform_iterator pen( str.begin(), std::isalnum ), end( str.end(), std::isalnum ); size_t word_cnt = 0; while ( pen != end ) { word_cnt += * pen; pen = std::mismatch( pen+1, end, pen ).first; } return word_cnt; I took the liberty of using isalnum instead of isspace . This is not something I would do at a job interview. (It's not like it compiled the first time.) Or, for all the Boost haters ;v) if ( str.empty() ) return 0; size_t word_cnt = std::isalnum( * str.begin() ); for ( std::string::const_iterator pen = str.begin(); ++ pen != str.end(); ) { word_cnt += std::isalnum( pen[ 0 ] ) && ! std::isalnum( pen[ -1 ] ); } return word_cnt;
