[site]: stackoverflow
[post_id]: 4055458
[parent_id]: 
[tags]: 
Benefits of CI for highly modularized projects

There has been some discussion in abandoning our CI system (Hudson FWIW) due to the fact that our projects are somewhat segmented. Without revealing too much, you can think of each project as similar to a web site project: it has dependencies, its own unit tests, etc. It seems like one of the major benefits of CI is to make sure that each component of a project works together, but aside from project inheritance most of our projects are standalone and unit tested fairly well. Given what I have explained here (the oddity in our project organization); can anyone explain any benefits of CI for segmented\modular\many projects? So far as I can tell, this is the only good reason I've found: “Bugs are also cumulative. The more bugs you have, the harder it is to remove each one. This is partly because you get bug interactions, where failures show as the result of multiple faults - making each fault harder to find. It's also psychological - people have less energy to find and get rid of bugs when there are many of them - a phenomenon that the Pragmatic Programmers call the Broken Windows syndrome.” From here: http://martinfowler.com/articles/continuousIntegration.html#BenefitsOfContinuousIntegration
