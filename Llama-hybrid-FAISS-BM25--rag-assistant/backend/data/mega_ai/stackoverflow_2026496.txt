[site]: stackoverflow
[post_id]: 2026496
[parent_id]: 2026269
[tags]: 
I can understand that adding 1 (or more) months will do this, as a months length varies, but a year should be more or less the same, shouldn't it? Above, when you're adding a year's worth of seconds, you're starting with the number of days in (what I guess is) and average year (i.e., 365.2421.. * 24 * 60 * 60). So your calculation implicitly defines a year as a certain number of days. With this definition, December 31 is a little less than 6 hours too long. So your "clock" goes from Dec 31 23:59 to 29:59 (whatever that is) before rolling over to 00:00 on January 1st. Something similar will happen with months, since you're also defining them as a certain number of seconds instead of 28 - 31 days. If the purpose of your calculation was timing the difference between events on a generic "average" calendar, then your method will work fine. But if you need to have a correspondence with a real calendar, it's going to be off. The simplest way to do it is to use a fake julian calendar. Keep track of each division of time (year, month, day, etc.). Define days to be 24 hours exactly. Define a year as 365 days. Add 1 day if the year is divisible by 4, but not when it's divisible by 100 unless it's also divisible by 400. When you want to add or subtract, do the "math" manually ... every time you increment, check for "overflow". If you overflow the day of the month, reset it and increment the month (then check the month for overflow, etc., etc.). Your calendar will be able to correspond exactly to a real calendar, for almost everything. Most computer date implementations do basically this (to varying degrees of complexity). In javascript, for example (because my web inspector is handy): > new Date(2010,0,1,0,0,0) - new Date(2009,0,1,0,0,0) 31536000000 As you can see, that's exactly 365 days worth of milliseconds. No mess, no fuss. By they way, getting time right is HARD. The math is in base 60. It's all special cases (leap years, daylight savings, time zones). Have fun.
