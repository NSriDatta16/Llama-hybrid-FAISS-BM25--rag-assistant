[site]: stackoverflow
[post_id]: 101373
[parent_id]: 7440
[tags]: 
We use Visual Studio 2008 Tester Edition. Pros: Very good at capturing user interaction Captures Ajax calls It is very easy to map user input to a database, XML or CSV file The captured test can be converted to C# for more control The same tests can be used for load testing and code coverage Cons: VS2008 Tester Edition is a seperate SKU from the normal Developer Edition, which means extra cost You may be alergic to Microsoft ;-) We have used it very effectively on projects, however there a lot of effort involved in keeping tests up to date, every time you change a screen the test may need to be re-recorded We tend to keep the tests short and sharp, do one thing and get out instead of recording 10 minutes worth of clicking around in a single test. We have a few standard UI test types: Menu Test: Log in as a specific user (or user type/role) and make sure all the required menu items are available Validation Test: Open a page and click save without entering any data, ensure that all the validation warnings appear. Complete required fields one at a time and check that the warning messages disappear when they are supposed to. Search Test: Search using data from your database or a data file and ensure the correct data is returned by the search Data Entry Test: Create new recrords from a data file, cleanup the database to allow tests to run multiple times UI Testing is quite time consuming but the comfort feeling you get when a few hundred tests pass before you release a new version is priceless.
