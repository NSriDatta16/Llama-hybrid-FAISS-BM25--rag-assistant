[site]: stackoverflow
[post_id]: 2271275
[parent_id]: 2269720
[tags]: 
This is a common challenge with DI, and the answer is always to create and inject an Abstract Factory . In your case, you can define an interface like this: public interface IWorkerProcessorFactory { IWorkerProcessor Create(int organizationId); } In all the classes where you have an organization ID and need an instance of IWorkerProcessor, you take a dependency on IWorkerProcessorFactory and invoke its Create method. This pattern works with Poor Man's DI or just about any DI Container you would like to use. Here's a more complete example: Can't combine Factory / DI
