[site]: stackoverflow
[post_id]: 2337043
[parent_id]: 
[tags]: 
Enumerate indexes on a Extensible Storage Engine (ESENT) table

Background I'm writing an adapter for ESE to .NET and LINQ in a Google Code project called eselinq . One important function I can't seem to figure out is how to get a list of indexes defined for a table. I need to be able to list available indexes so the LINQ part can automatically determine when indexes can be used. This will allow much more efficient plans for user queries if appropriate indexes can be found. There are two related functions for querying index information: JetGetTableIndexInfo - get index information by tableID JetGetIndexInfo - get index information by tableName These only differ in how the related table is specified (name or tableid). It sounds like these would support the function I want but all the info levels seem to require that I already have a certain index to query information for. The only exception is JET_IdxInfoCount , but that only counts how many indexes are present. JET_IdxInfo with its JET_INDEXLIST sounds plausible but it only lists the columns on a specific index. Alternatives I am aware that I could get the index information another way, like annotations on .NET types corresponding to database tables, or by requiring a index mapping be provided ahead of time. I think there's enough introspection implemented to make everything else work out of the box without the user supplying extra information, except for this one function. Another option may be to examine the system tables to find related index objects, but this is would mean depending on an undocumented interface. To satisfy this question, I want a supported method of enumerating the indexes (just the name would be sufficient) on a table.
