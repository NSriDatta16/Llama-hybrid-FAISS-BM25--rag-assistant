[site]: datascience
[post_id]: 28899
[parent_id]: 
[tags]: 
Multi-Class classification with CNN using keras - trained model predicts object even in a fully white picture

I built an multi classification in CNN using keras with Tensorflow in the backend. It nicely predicts cats and dogs. However, when it comes to an image which does not have any object-white background image-, it still finds a dog ( lets say probability for dog class 0.75…, cats 0.24… ). I am a quite newbie learner in learning built with neural network. Sorry if I am asking a silly question, even though I have searched the internet I could not find any answer. What is my exception from the case of the white background image as an input to prediction method, is 0 probability for dog and cat classes. Any suggestion would make me so happy. The below is how I implemented the training. classifier = Sequential() classifier.add(Conv2D(32, 3, 3, input_shape=(64, 64, 3), activation='relu')) classifier.add(MaxPool2D(pool_size=(2, 2))) classifier.add(Conv2D(32, 3, 3, activation='relu')) classifier.add(MaxPool2D(pool_size=(2, 2))) classifier.add(Flatten()) classifier.add(Dense(units=128, activation='relu')) classifier.add(Dense(units=2, activation='softmax')) # Metrics will be categorical_accuracy classifier.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy']) from keras.preprocessing.image import ImageDataGenerator train_datagen = ImageDataGenerator( rescale=1. / 255, shear_range=0.2, zoom_range=0.2, horizontal_flip=True) test_datagen = ImageDataGenerator(rescale=1. / 255) training_set = train_datagen.flow_from_directory( '/Users/ozercevikaslan/Desktop/Convolutional_Neural_Networks/dataset/training_set', target_size=(64, 64), batch_size=32, class_mode='categorical') test_set = test_datagen.flow_from_directory( '/Users/ozercevikaslan/Desktop/Convolutional_Neural_Networks/dataset/test_set', target_size=(64, 64), batch_size=32, class_mode='categorical') classifier.fit_generator( training_set, steps_per_epoch=8000, epochs=25, validation_data=test_set, validation_steps=2000)
