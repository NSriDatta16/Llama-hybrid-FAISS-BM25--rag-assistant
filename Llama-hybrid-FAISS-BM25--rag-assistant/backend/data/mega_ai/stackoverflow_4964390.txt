[site]: stackoverflow
[post_id]: 4964390
[parent_id]: 
[tags]: 
Utilizing MMX with Managed C++

From what I understand, the JIT does not compile the MSIL into native machine code that will utilize MMX instructions on x86. If this is true (as I'm having a hard time finding up to date information on the matter), then I want a way to utilize MMX in my code. I am working on an application that will be doing almost all single precision floating point number multiplication (it's artificial neural networks). I basically have several questions around the matter. My first is, if I mix managed and unmanaged code in the same project, isn't it all compiled into MSIL because "It Just Works"? Would I get the best performance if I made the unmanaged parts as static or dynamic libraries, compiled them, and used them in my managed project? I have also looked into using my GPU with OpenCL (or CUDA, but then it wouldn't work on ATI :( ) but if I was to do that, wouldn't the compiled GPU code have to be called from unmanaged c++? Over all, I am just looking for the best way to get the fastest floating point arthmitic while still being able to use my managed GUI and Multithreading and using extensions like MMX seem to be my best option (if I only want to use the CPU). What is the best way there may be to go about doing such a thing? Thanks.
