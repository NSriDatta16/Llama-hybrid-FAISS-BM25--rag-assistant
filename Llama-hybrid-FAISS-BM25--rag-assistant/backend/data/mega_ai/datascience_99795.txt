[site]: datascience
[post_id]: 99795
[parent_id]: 
[tags]: 
Transforming time series into static features?

I'm working on a side project where I have a mixture of static data and time series, and the goal would be to perform clustering on the data. There's a bunch of data sources, but basically the main thing would be some static information about users (like age, sex, location etc.) and some time series data (user 123 did xyz at 2pm, then yxz at 3pm, then yyy at 4pm). The goal would be to perform a clustering/segmentation via unsupervised learning to create user segments. The most data I have is from the time series kind, but I'd like to incorporate both time series and the static data into my model. The question is, would it be viable to transform the time series data into static? If yes, what would be a method for this? Or, what would be some methods to perform clustering on time series data? I'm currently thinking maybe an autoencoder could help me somehow, but I'm not entirely sure how. What are some common methods for this (if any)? Can you maybe give me some pointers in where to start looking? Thank you!
