[site]: stackoverflow
[post_id]: 4189236
[parent_id]: 4183903
[tags]: 
It appears to me you are trying to write a business rule in a table. I believe writing the code to populate the table would be better spent writing the rule in a stored procedure. The stored procedure could select run status, run date, etc of jobs from MSDB. If there are conditions which are not SQL Agent jobs the results could be stored in a table containing the job name, job status and job date. The stored proc could use simple variable assignment to retrieve all the values then process the business logic statement using TSQL Bitwise operators. & (Bitwise AND) (Transact-SQL) ~ (Bitwise NOT) (Transact-SQL) | (Bitwise OR) (Transact-SQL) ^ (Bitwise Exclusive OR) (Transact-SQL) Your example of E=(A and B) or (C and D) would become Select @E=(@A & @B) | (@C & @D) Try the code below and see if it will work in you business rule. declare @E bit declare @Bit1 bit declare @Bit2 bit declare @Bit3 bit declare @Bit4 bit declare @Bit5 bit SET @Bit1 = 1 SET @Bit2 = 0 SET @Bit3 = 1 SET @Bit4 = 'fALSE' SET @Bit5 = 0 SELECT @Bit1, @Bit2, @Bit3, @Bit4, @Bit5 SELECT @Bit1 & @Bit2 Select @E=(@Bit1 & @Bit2) | (@Bit3 & @Bit4) Select @E as [E value]
