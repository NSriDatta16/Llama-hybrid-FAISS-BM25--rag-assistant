[site]: stackoverflow
[post_id]: 1300453
[parent_id]: 1298592
[tags]: 
You have most likely used the Object Relational designer to create an entity class for the Ref entity and an association between the MyTable and the Ref entity. You can also do that manually by creating the appropriate entity classes and using attributes to map the classes to the database schema. You can read the details in How to: Customize Entity Classes by Using the Code Editor (LINQ to SQL) on MSDN. In your generated (or handwritten) code you will find some attributes: [Table(Name="dbo.Ref")] public partial class Ref : INotifyPropertyChanging, INotifyPropertyChanged and public partial class MyTable: INotifyPropertyChanging, INotifyPropertyChanged { [Association(Name="Ref_MyTable", Storage="_Ref", ThisKey="RefId", OtherKey="Id", IsForeignKey=true)] public Ref Ref { get ... The entity classes combined with the attributes enables the Linq-to-Sql framework to retrieve entity classes directly from the database. If you want to monitor the SQL genereated by Linq-to-Sql you can assign the DataContext.Log property: context.Log = Console.Out; In your example, navigating from MyTable to Ref, probably generates SQL along these lines: SELECT Id, Field1, Field2, Field3 FROM Ref WHERE Id = @RefId
