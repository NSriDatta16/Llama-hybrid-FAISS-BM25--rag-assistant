[site]: stackoverflow
[post_id]: 804296
[parent_id]: 804288
[tags]: 
Use sprintf . (This is NOT safe, but OP asked for an ANSI C answer. See the comments for a safe version.) int sprintf ( char * str, const char * format, ... ); Write formatted data to string Composes a string with the same text that would be printed if format was used on printf, but instead of being printed, the content is stored as a C string in the buffer pointed by str. The size of the buffer should be large enough to contain the entire resulting string (see snprintf for a safer version). A terminating null character is automatically appended after the content. After the format parameter, the function expects at least as many additional arguments as needed for format. Parameters: str Pointer to a buffer where the resulting C-string is stored. The buffer should be large enough to contain the resulting string. format C string that contains a format string that follows the same specifications as format in printf (see printf for details). ... (additional arguments) Depending on the format string, the function may expect a sequence of additional arguments, each containing a value to be used to replace a format specifier in the format string (or a pointer to a storage location, for n). There should be at least as many of these arguments as the number of values specified in the format specifiers. Additional arguments are ignored by the function. Example: // Allocates storage char *hello_world = (char*)malloc(13 * sizeof(char)); // Prints "Hello world!" on hello_world sprintf(hello_world, "%s %s!", "Hello", "world");
