[site]: crossvalidated
[post_id]: 305033
[parent_id]: 305021
[tags]: 
Scikit-learn only offers implementations of the most common Decision Tree Algorithms (D3, C4.5, C5.0 and CART). These depend on having the whole dataset in memory, so there is no way to use partial-fit on them. You could only learn multiple decision trees on small subsets of your data and arrange them into a random forest. There are some other algorithms for inducing Decision Trees that work with on-disk or streaming data. I think the most known algorithms are SLIQ, SPRINT and HOEFFDING Trees (see this paper). While none of them seem to be implemented in any of the common machine learning frameworks (afaik), you can find some stand-alone python implementations on github. And if you are using Spark, they have some Decision Tree algorithms for big data too. PS: btw, how are you storing 3Tb of data in one pandas dataframe? (Are you using PyTables?)
