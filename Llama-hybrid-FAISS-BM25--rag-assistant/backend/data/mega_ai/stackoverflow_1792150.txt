[site]: stackoverflow
[post_id]: 1792150
[parent_id]: 1792005
[tags]: 
You have several different options here: Duck typing: In Ruby, as long as an object responds to a method call that method call with work. So if both beer and wine have an attribute :name, then calling @result.name will work with either model. Polymorphic Associations: Instead of having review.beer or review.wine. Make Wine and Beer reviewable via a polymorphic association. This will also work for comments, e.g., both become commentable. Take a look at acts_as_commentable for how this works. Railscasts has an excellent screencast on how this works. Single Table Inheritance: You could create an object called Beverage from which Wine and Beer inherit. This allows for a single place to put the similar attributes and still allows for small differences. From your description, you are looking at a combination of all three possibly.
