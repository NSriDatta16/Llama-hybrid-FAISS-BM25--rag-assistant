[site]: stackoverflow
[post_id]: 5492041
[parent_id]: 5489436
[tags]: 
@user440297 -- I tried (thought I tried) to add this as a comment a couple of hours ago. I guess not. When I'm faced with this very problem in a C (though not C++) program, the %.nf format specification saves the day. I usually say something like: // instead of: // QVariant number = query3.value(query3.record().indexOf("account_balance")); // use, approximately: char string_account_balance[32] = ""; sprintf( string_account_balance, %.2f%, query3.value( query3.record().indexOf( "account_balance" )); That should give you all the integral digits you want, a decimal point, and two decimal digits. Don't change the decimal(22,2) MySQL field. If it's varchar, you'll have to handle all of the arithmetic and ... oh, man, it's too gruesome to think about. In any case, it's an merely output formatting problem, not an internal storage problem or a Qt problem. I'd always stayed away from the %f format because I thought it introduced floating-point format problems; Not so. Instead, it makes floating-point format problems evaporate. -- pete
