[site]: crossvalidated
[post_id]: 420252
[parent_id]: 
[tags]: 
Does rowwise distribution of random values in creating a normally distributed vector variable in matrix(rnorm(.), byrow=TRUE) damage normality?

(Reprodicible example added) 150-character-limitless full question is: Does the rowwise distribution of values in creating a normally distributed vector variable via matrix(c(rep(rnorm(100),5)), ncol=5, byrow=TRUE) damages the normality of the component series? In order to create a vector time series (V1,...,V5) with each component series has 100 obs and Vi~N(0,1), I wrote the following code, and then I suspected whether I made a mistake. If I distributed columnwise, definitely, it obeys the 100x5 values created via rep(rnorm(100),5) , and no one can object to that each Vi is N(0,1) since rnorm produces normally distributed values from its definition and Vi series are being set one-to-one with these rnorm products correspondingly. Question: But, what if I distributed these 500 random values rowwise instead of columnwise? 1. In that case, is the normality of the component series Vi damaged? 2. Or, their normality is protected but their N(0,1) property is damaged (mean and sd get affected and changes to smt N(mu, sigma2) <> N(0,1))? set.seed(1) df So, byrow=TRUE in the above code very dangerous or not? What I did: colMeans(df) # V1 V2 V3 V4 V5 # 0.32352799 -0.09161396 0.20740551 -0.15577361 0.26089091 sapply(df, sd) # std deviations of each column in the dataframe # V1 V2 V3 V4 V5 # 0.8957992 0.7092927 0.7919241 1.0210549 0.9314092 set.seed(1) # byrow=FALSE is the default for matrix df2
