[site]: stackoverflow
[post_id]: 5367167
[parent_id]: 
[tags]: 
Haskell record syntax

Haskell's record syntax is considered by many to be a wart on an otherwise elegant language, on account of its ugly syntax and namespace pollution. On the other hand it's often more useful than the position based alternative. Instead of a declaration like this: data Foo = Foo { fooID :: Int, fooName :: String } deriving (Show) It seems to me that something along these lines would be more attractive: data Foo = Foo id :: Int name :: String deriving (Show) I'm sure there must be a good reason I'm missing, but why was the C-like record syntax adopted over a cleaner layout-based approach? Secondly, is there anything in the pipeline to solve the namespace problem, so we can write id foo instead of fooID foo in future versions of Haskell? (Apart from the longwinded type class based workarounds currently available.)
