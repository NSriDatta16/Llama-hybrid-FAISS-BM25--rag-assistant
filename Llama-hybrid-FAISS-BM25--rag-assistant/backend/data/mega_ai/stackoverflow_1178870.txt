[site]: stackoverflow
[post_id]: 1178870
[parent_id]: 1178786
[tags]: 
You can't do it all, all at once (you knew that). Some techniques save you time, and TDD and Refactoring are high on that list. Particularly with TDD - don't fret about when to do it, whether to do it, how to fit it into your schedule; just do it. The sooner you start, the sooner it saves you time. Once you have that skill in hand, then as you approach a task on the legacy code, write tests around it to protect you (no, that's not TDD, but the test-writing skills that you've honed with TDD will apply). When you've got good coverage of the module you need to change, then you can refactor it freely, running your tests frequently. Of the books you mention, in the situation you describe, the next one I would recommend reading is Michael Feathers' Working Effectively with Legacy Code - it will give you the tricks that carry you forward. For the time being, though: TDD everything. It will save you time sooner that you imagined, and you can put that time into learning more and better techniques.
