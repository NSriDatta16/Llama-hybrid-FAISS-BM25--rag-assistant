[site]: stackoverflow
[post_id]: 3445015
[parent_id]: 1038950
[tags]: 
It depends on your purpose. If you want best storage and probably performance too and for the most part, store it as int , storing it as varchar etc. would cost more performance than just a simple innocent int. You can also search by IP by having the search parameter as the desired int too. There is a property IPAddress.Address but it's obsolete, I don't know why, since if you don't need sorting or control over the IP classes, the best way is to store it as unsigned integer (that has a max value of 0xffffffff which equals to 255.255.255.255 in decimal representation. Using EF Core, you can use a converter to have it automatically converted to and from IPAddress . Also the IPAddress class has a constructor that accepts a long argument. And according to VS debugger visualizer, that IPAddress class itself stores its internal variable as one number (not byte array). Read more on workarounds storing a unit in MS SQL Server: 4 byte unsigned int in ms sql? Sql server 4 byte unsigned int
