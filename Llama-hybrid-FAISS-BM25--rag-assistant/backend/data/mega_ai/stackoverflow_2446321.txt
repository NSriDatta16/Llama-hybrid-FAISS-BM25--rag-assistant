[site]: stackoverflow
[post_id]: 2446321
[parent_id]: 2446019
[tags]: 
Well, the point is: your method GetCustomers only ever selects from Table1 - I don't see any reference at all to Table2 , where your Family column is located...... You need to check into Linq-to-SQL JOIN's and how to fetch data from a joined table into your result set. Something along the lines of: [DataContract] class JoinedResult { [DataMember] public int Table1ID { get; set; } [DataMember] public string Table1Name { get; set; } [DataMember] public string Table2Family { get; set; } } [OperationContract] public List GetCustomers(int numberToFetch) { using (DataClassesDataContext context = new DataClassesDataContext()) { var q = from t1 in context.Table1 join t2 in context.Table2 on t1.id = t2.fid select new JoinedResult { Table1ID = t1.ID, Table1Name = t1.Name, Table2Family = t2.Family }; return q.Take(numberToFetch).ToList(); } } and btw: you should really make numberToFetch an INT parameter! Let the caller make the conversion...... UPDATE: if you don't want to explicitly include the second table to be queried, you could instead add a DataLoadOption to your context: DataLoadOptions dlo = new DataLoadOptions(); dlo.LoadWith (t => t.Table2); context.LoadOptions = dlo; In that case, you tell LINQ to always include all elements from Table2 when it loads anything from Table1 - that should work, too.
