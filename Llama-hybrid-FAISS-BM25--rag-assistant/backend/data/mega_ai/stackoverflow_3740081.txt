[site]: stackoverflow
[post_id]: 3740081
[parent_id]: 3739458
[tags]: 
The problem with using an explicit check for zero is that you can end up with discontinuities in behaviour unless you are careful as outlined in cafs response ( and if its in the core of your algorithm the if can be expensive - but dont care about that until you measure...) I tend to use something that just smooths out the weighting near zero instead. float calcWeightedAverage(v1,v2,w1,w2) { eps = 1e-7; // Or whatever you like... v1=fabs(v1)+eps; v2=fabs(v2)+eps; return (v1/(v1+v2))*w1 + (v2/(v1+v2)*w2); } Your function is now smooth, with no asymptotes or division by zero, and so long as one of v1 or v2 is above 1e-7 by a significant amount it will be indistinguishable from a "real" weighted average.
