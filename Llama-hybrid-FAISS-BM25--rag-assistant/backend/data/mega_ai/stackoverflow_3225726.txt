[site]: stackoverflow
[post_id]: 3225726
[parent_id]: 3225708
[tags]: 
Technically element id's should always be unique, yes you can have elements with the same id but you'll run into problems like this. Where jQuery's selector engine is only expecting one element with a given id, so what will end up happening is it will find the first element and ignore the rest. What you should do is give them all the same class eg class="widget" and the the selector would be $(".widget") EDIT: ah yeah for some reason I thought you mentioned you were using jQuery. but here's a function that will get all elements by ID that doesn't require any library's /* * ElementsById * * Author: Diego Perini * Updated: 07/12/2006 * Version: 0.0 (from parent) * * Extracted from latest IPORT/STYLER engines. * * Returns an array of elements with specified ID. */ function ElementsById($id) { var c = 0, i = 0, j = 0, k = 0; var nodes=[], storage = arguments.callee.storage; var elements = document.getElementsByTagName('*'); var length = elements.length; if (storage && storage.nodes && storage.length == length && storage.first == elements[0] && storage.last == elements[length-1]) { k = $id; while (storage.nodes[k]) { nodes[nodes.length] = storage.nodes[k]; k = $id + '*' + (++i); } } else { storage = { }; storage.nodes = { }; storage.length = 0; storage.first = elements[0]; storage.last = elements[length - 1]; while (length > i) { c = elements[i]; if ((k = c.id) == $id) { nodes[nodes.length] = c; if (storage.nodes[k]) { k = c.id + '*' + (++j); } } i++; storage.nodes[k] = c; storage.length++; } arguments.callee.storage = storage; } return nodes; }
