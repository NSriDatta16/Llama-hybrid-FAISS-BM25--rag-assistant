[site]: stackoverflow
[post_id]: 230274
[parent_id]: 229472
[tags]: 
Test-Driven-Development: no. Domain-Driven-Design: no Model-Driven-Design/Architecture: we do start with models for our apps Do you test? yes. Sometimes I'm the only person who tests my stuff. I hate this. Unit Testing - no. This is a lacking area in my skillset I consider high priority to rememdy. Integration Testing - no Acceptance Testing - sometimes. Tough to get the users to go through with it, even with threats from On High. Code Reviews - no. We have discussed doing it but never do in the end. I'm frustrated about this. Innovative Technologies - no Agile - we're mildly agile, though not precisely through a pre-meditated effort Pair Programming - no UML - as little as we need to, but we do model (we're more deliberately agile here). Domain-specific languages - no Requirement Specification (How?) - we do. My group is sometimes primarily responsible for requirements gathering. We are typically assisted by a Biz Analyst now but that wasn't always so. The Veep sometimes hands us requirements that come from I don't know where. Sometimes they're old things that were never done but had been planned ages ago. typically gathered requirements are placed into a Word document reviewed by the primary users as well as my team, the Biz Analyst, and the Veep. Continous Integration - nope Code-Coverage Tools - no Aenemic Domain Model - I'm not familiar with his, but no. Communication (Wiki, Mail, IM, Mailinglists, other documents) - just email and face to face. I broached this subject recently because we need to do something more, a wiki preferrably. It was placed on the back burner. Effort estimates - yes, but we don't make any attempt to really track them. This is another area where I am lacking. Team size - 3, myself included ( Director Meetings - we meet once a week, though not always. Boss usually checks in at least a few times a week individually. Larger group meetings take place sporadically. And of course we schedule meetings to hash out project requirements as necessary. Code metrics - nope Static code analysis - nope Bug tracking - we log errors. that's pretty much our bug tracking. That's it. We have areas I feel like we could improve on. Update: We lost our business analyst to a large layoff a couple of weeks after I posted this (early November 08). I've since implemented ELMAH in an existing application and a more recently developed one to assist in bug tracking (we also log to a database) and I love it for the ease of use, the features, and the ability to catch exceptions we aren't catching (which is largely unused, but still nice coverage to have). I'm still poking around with Unit Testing on my own - I really need to pick up the pace there (I also want to learn MVC but I mostly poke around with that too). We're desinging a new application right now, and I'm doing a mock DB schema (which will get some basic diagrams) for 3 of the 6 modules (Team Leader is working on the other 3). I'm not looking forward to it, since this will be developed in tandem by the 3 of us (2 modules each) using IronSpeed Designer (6.1). There are things IronSpeed will do for me that I like, but it's not the only way to do these things quickly, and it does some things I don't care for. Nothing else has changed.
