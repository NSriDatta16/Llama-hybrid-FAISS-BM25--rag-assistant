[site]: stackoverflow
[post_id]: 4622130
[parent_id]: 4621648
[tags]: 
If you have to pick between the two go with the first option. You don't want to have ostensibly duplicate entries in class books. That can cause all sorts of problems for you. Update Since you want Class ID to be in the where clause I've updated it. As for the query this is how I would search for books SELECT DISTINCT books.* FROM classes main LEFT JOIN classes crosslinked ON main.Class_id = crosslinked.cross_link_class_id LEFT JOIN class_books books ON main.class_id = books.class_id WHERE main.class_id= 252 OR crossLinked.class_id= 252 But you should take ijw's point. It would be much better to just have a class_names table that's associated with the class. It would be a bit cleaner. Then you don't have to do logic like : if cross_link_class_id is not null then don't allow students to register for it, a professor can't teach a class that has a null for cross_link_class_id.., after all you wouldn't want to accidentally overbook a class or double the number of classes a professor was being recorded as teaching Here's how it would be done with a separate class names table. SELECT DISTINCT books.* FROM classes --LEFT JOIN class_names names --ON main.Class_id = names.Class_id LEFT JOIN class_books books ON main.class_id = books.class_id WHERE clases.class_id = 252 Notice the OR statement is gone and no funny self join (which can confuse people) and the aforementioned logic on empty cross_link_class_id is gone. Note: I've taken some liberties with the query e.g the literal string would be replaced with a parameter. You wouldn't select * but use the actual field names.
