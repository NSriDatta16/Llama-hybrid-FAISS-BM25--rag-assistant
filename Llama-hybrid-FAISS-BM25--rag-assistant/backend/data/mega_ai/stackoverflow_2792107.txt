[site]: stackoverflow
[post_id]: 2792107
[parent_id]: 2791975
[tags]: 
To understand recurson, one must first understand recursion. public int countNode(TreeNode root) { if (root==null) { return 0; } else { return countNode(root.firstChild) + countNode(root.nextSibling) + 1; } } public int countHeight(TreeNode root) { if (root==null) { return 0; } else { return max(countHeight(root.firstChild), countHeight(root.nextSibling)) + 1; } } If the tree is null, it contains no nodes and has no height. If the tree is not null, then it is one node taller than its taller subtree, and it contains all of the nodes of both subtrees, plus the node that contains the two subtrees. Read Dave Touretzky's book on LISP. Dave teaches recursion using dragon stories, and the dragon is actually quite a good teacher.
