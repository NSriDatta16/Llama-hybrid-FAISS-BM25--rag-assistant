[site]: stackoverflow
[post_id]: 3696433
[parent_id]: 3695628
[tags]: 
I'd definitely avoid using Access again, just because it's not the most robust database out there. Java and JDBC play pretty well with most databases out there. Which one you choose depends entirely on your requirements e.g.: Should it be free / open source Are you deploying onto Windows in a Microsoft ecosystem or onto Linux Must it be relational Is the application deployed to different 'customers' with different data store requirements One major advantage of using an ORM / JPA library like Hibernate is that you can have an abstract view on your JDBC data store, which makes it possible to switch out the database you use, which is occasionally useful for applications that are deployed in different environments for customers who use different databases (or if you change your mind later about the Database you'd like to use). The easiest DB to use for local storage is one of the embedded Java ones e.g. H2 or even easier, JavaDB which is embedded in the JDK. This means that there isn't a separate installation process required for the database itself. Both H2 and JavaDB (Apache Derby) will scale to 100 / 300MB quite happily.
