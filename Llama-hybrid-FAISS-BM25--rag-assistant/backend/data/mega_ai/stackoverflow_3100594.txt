[site]: stackoverflow
[post_id]: 3100594
[parent_id]: 3099062
[tags]: 
Consider authoring your stylesheets using SASS . This will allow you to manage duplication in a number of ways: The simplest is to define a variable for your blue color and not worry about having to update multiple occurrences: $color-corporate-base: #009 #header { color: $color-corporate-base; } #content { color: $color-corporate-base; } This will compile to regular CSS, putting the color values wherever they're referenced in your document: #header { color: #009; } #content { color: #009; } You could use "mixins" to include rules into different selectors: @mixin bold-color { color: blue; font-weight: bold; } #header { @include bold-color; background: black; } #content { @include bold-color; background: white; } This will compile to regular CSS, with the two included style rules in each selector. Of course, this creates duplication: #header { color: blue; font-weight: bold; background: black; } #content { color: blue; font-weight: bold; background: white; } Even though that takes care of the duplication in your Sass stylesheet source making it easy to work with, the CSS output still has that duplication. (You could group the common styles with commas and put the different styles into their own selectors, but that's right back to your original question.) There's a cool new feature of Sass that addresses this. It's called "selector inheritance". Check it out: .bold-color { color: blue; font-weight: bold; } #header { @extend .bold-color; background: black; } #content { @extend .bold-color; background: white; } At a glance, this seems very similar to mixins, but look at the CSS output: .bold-color, #header, #content { color: blue; font-weight: bold; } #header { background: black; } #content { background: white; } This lets you organize your selectors in your Sass stylesheet as you wish, and , you get the optimized output you want!
