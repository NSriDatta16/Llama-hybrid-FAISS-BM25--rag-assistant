[site]: stackoverflow
[post_id]: 3631977
[parent_id]: 3631176
[tags]: 
Overuse of protected could potentially lead to violation of Liskov Substitution Principle ( L in SOLID) - PDF link . The principle states that classes should be written in a way that any subclass can be substituted for its base class. Robert C. Martin has a good discussion about that in Agile Principles, Patterns, and Practices in C# . The crux of the argument is that a subtype is only a subtype when it's substitutable for its base class, not simply having IS-A relationship. So, by exposing too much functionality through protected methods, you could possibly allow the subclass to relax the invariants too much and make the subclass not a true subtype. This is far from being black and white and one could not issue a blanket rule stating whether or not protected should/shouldn't be used. There are cases where it's genuinely necessary and there are cases where it's not. Using judgement in individual case is required.
