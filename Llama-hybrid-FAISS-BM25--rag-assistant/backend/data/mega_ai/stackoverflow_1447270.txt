[site]: stackoverflow
[post_id]: 1447270
[parent_id]: 896089
[tags]: 
I'm working on doing this right now. So far I've found these items helpful as references: http://snippi.net/magento-programmatically-add-configurable-product-color-api http://www.omnisubsole.com/blog/2009/07/01/configurable-products-in-magento.html http://www.magentocommerce.com/boards/viewthread/6941/P30/ I'll post my code so far, and hopefully update it once it works.. // Set 'item_size' as the super attribute # choose your own attribute! // this is the 'choose-able' field that differenciates products $super_attributes=array( Mage::getModel('eav/entity_attribute') ->loadByCode('catalog_product','item_size') ->getData('attribute_id') ); $product_collection=Mage::getModel('catalog/product')->getCollection(); // Fetch configurable orders $product_collection->addFieldToFilter('type_id',Array('eq'=>"configurable")); #$product_collection->addFieldToFilter('sku',Array('eq'=>"ASMCL000002")); $product_collection->addAttributeToSelect('*'); $count=0; foreach($product_collection as $product) { $sku = $product->getSku(); echo "SKU: $sku\n"; $simple_children_collection = Mage::getModel('catalog/product')->getCollection(); $simple_children_collection->addAttributeToSelect('*'); $simple_children_collection->addFieldToFilter('sku',Array('like'=>$sku . "-%")); echo "children: "; foreach($simple_children_collection as $child) { $child_sku = $child->getSku(); echo "$child_sku "; #visiblity should be 'nowhere' } echo "\n"; if (!$product->getTypeInstance()->getUsedProductAttributeIds()) { # This is a new product without the Configurable Attribue Ids set $product->getTypeInstance() ->setUsedProductAttributeIds( $super_attributes ); //$product->setConfigurableAttributesData(array($_attributeData)); $product->setCanSaveConfigurableAttributes(true); # Not sure if this is needed. $product->setConfigurableProductsData(''); # Use this to add child products. } $count++; try { $product->save(); $productId = $product->getId(); echo $product->getId() . ", $sku updated\n"; } catch (Exception $e){ echo "$sku not added\n"; echo "exception:$e"; } } echo "\nCount is $count\n"; Okay, this uses 'item_size' as the attribute that differentiates the "simple" products. Also, this assumes that the "configurable" parent SKU is the root of the child SKU. For example, ABC001 is the parent while ABC001-SMALL and ABC001-LARGE are the simple children. Hope that helps someone.
