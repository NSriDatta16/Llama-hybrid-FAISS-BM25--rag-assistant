[site]: stackoverflow
[post_id]: 3145801
[parent_id]: 
[tags]: 
Why does this pointer point to nowhere?

I'm trying to add functionality to the v8sharp project and I'm having some issues (I'm not very good at C++-CLI so I'm pretty sure the issue lies in my lack of C++-CLI abilities rather than misusing v8.) v8value.cpp: v8sharp::V8FunctionWrapper^ V8ValueWrapper::WrapFunction(v8::Handle value) { // Now we use the wrapper to make this safe to use // this works Console::WriteLine("IsFunction-First: {0}", value->IsFunction()); // persistent so it doesn't get garbage collected v8::Persistent pval(value); // create a function wrapper V8FunctionWrapper^ bla = gcnew V8FunctionWrapper(pval); return bla; } Which should take a v8Handle which contains a function (it always will because of what calls this function) and returns a nice .net wrapper so we can use it in my C# project. The problem lies here v8functionwrapper.cpp: #include "v8functionwrapper.h" #include "v8value.h"; v8sharp::V8FunctionWrapper::V8FunctionWrapper(v8::Persistent value) { // is this wrong? this->_value = &value; // still true Console::WriteLine("Constructor: {0}", (*this->_value)->IsFunction()); } // This function is called by C# and triggers the javascript function Object^ v8sharp::V8FunctionWrapper::Call([ParamArray]array ^ args) { // Get a refence to the function Console::WriteLine("Cast 2"); // MEMORY VIOLATION: the _value no longer points to a valid object :( Console::WriteLine("IsFunction: {0}", (*this->_value)->IsFunction()); Console::ReadLine(); -- snip -- } v8functionwrapper.h: #pragma once #include "v8.h" using namespace System; using namespace System::Reflection; namespace v8sharp { public ref class V8FunctionWrapper { public: delegate bool V8FunctionCallback(array ^ args); Object^ v8sharp::V8FunctionWrapper::Call([ParamArray]array ^ args); v8::Persistent Unwrap(); V8FunctionWrapper(v8::Persistent value); ~V8FunctionWrapper(); !V8FunctionWrapper(); private: V8FunctionCallback^ _callback; v8::v8 * _value; }; } Evident from this line (debug code): Console::WriteLine("IsFunction: {0}", (*this->_value)->IsFunction()); The pointer _value is no longer valid and causes an exception. Why does my pointer invalidate? Is it because I'm pointing to an argument in the constructor and that gets deleted? If so how do I get a pointer to it that won't disappear. Keep in mind this is a .net class so I can't mix and match native types into it.
