[site]: stackoverflow
[post_id]: 4133943
[parent_id]: 4133671
[tags]: 
What you may be looking for is an ORM (Object-Relational Mapping) library, which abstracts you from the database so that you don't have to write SQL in many cases. In regard to your question about Python--yes, dynamic languages like Python and Ruby are good for this sort of thing. But ORM libraries are available in just about any language. The second possibility is NoSQL. ORM I'll give you a couple quick examples in Ruby on Rails, using its built-in ORM, ActiveRecord. Let's say you have a 'users' table with 'name' and 'age' columns. Inserting into the table: user = User.new user.name = "Bin Chen" user.age = 30 user.save Finding records: User.where(:name => "Bin Chen") User.where(:age => 20..40) ActiveRecord even creates dynamic methods based on your columns: User.find_by_age(30) User.find_or_create_by_name("Bob", :age => 20) Specifying a table is indeed simple and declarative. There are quite a few tutorials and screencasts available, if you're interested. NoSQL If you don't need a relational database, then NoSQL may fit the bill. These tend to be specialized for certain types of data, and usually optimized for performance. Examples are MongoDB, CouchDB for general purpose document databases, Redis for key/value store, eXist for XML storage. Many options are listed at http://nosql-database.org/ . Most of these have language bindings for dynamic languages such as Python.
