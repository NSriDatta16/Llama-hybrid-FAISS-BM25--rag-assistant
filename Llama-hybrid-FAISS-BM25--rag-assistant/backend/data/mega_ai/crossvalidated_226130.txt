[site]: crossvalidated
[post_id]: 226130
[parent_id]: 
[tags]: 
Commutative function mapping sequence of vectors to vector

There is sequence of vectors $[v_1, v_2, v_3]$ passed as input to deep learning regression model $F$. As observed, the order of this sequence is irrelevant, so $F([v_1, v_2, v_3]) = F([v_2, v_1, v_3]) = \dots = F([v_3, v_2, v_1])$ etc. So instead of passing raw sequence of vectors and forcing a model to learn commutativity of input data, it should be better to map input by commutative function to the single vector at the beginning and then pass the result to the learning part of a model. What is the standard / best way to do this as part of differentiable graph? Multiplying or summing vectors will not fit, because it could produce same result for different sequences. I have no higher education in math or statistics, so please be forgiving if this is silly question. For my experiments I'm using python + theano.
