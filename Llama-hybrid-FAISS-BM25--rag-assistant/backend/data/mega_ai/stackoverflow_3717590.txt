[site]: stackoverflow
[post_id]: 3717590
[parent_id]: 3712418
[tags]: 
I credit this answer to aioobe and John. As John suggests, the external program started by the batch file spawns a process that seems to be running for a while (50-300 millisec) after the Java sub-process running the batch file has returned. I resolved the problem by introducing a pause (as suggested by aioobe) : int exitValue = pr.waitFor(); try {Thread.currentThread().sleep(300);} catch (InterruptedException e) {e.printStackTrace();} After the pause Java seems to be able to see the files created by the external program. Thanks again to both contributors who helped me resolve this issue! If anyone finds a more elegant solution, please, feel welcome to post.
