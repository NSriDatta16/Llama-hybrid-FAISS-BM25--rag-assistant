[site]: stackoverflow
[post_id]: 4079046
[parent_id]: 4078750
[tags]: 
Not a very elegant solution but your choices are limited until MySQL matures. Split the comma separated ids into tokens and insert into an in-memory table. Join the in-memory table to whatever other tables you require... Full script here : http://pastie.org/1266830 drop table if exists users; create table users ( user_id int unsigned not null auto_increment primary key, username varbinary(32) unique not null ) engine=innodb; insert into users (username) values ('a'),('b'),('c'),('d'),('e'),('f'),('g'); drop procedure if exists foo; delimiter # create procedure foo ( in p_id_csv varchar(1024) ) proc_main:begin declare v_id varchar(10); declare v_done tinyint unsigned default 0; declare v_idx int unsigned default 1; if p_id_csv is null or length(p_id_csv) 0, locate(',', p_id_csv, v_idx) - v_idx, length(p_id_csv)))); if length(v_id) > 0 then set v_idx = v_idx + length(v_id) + 1; insert into ids values(v_id); else set v_done = 1; end if; end while; select u.* from users u inner join ids on ids.id = u.user_id order by u.username; drop temporary table if exists ids; end proc_main # delimiter ; call foo('2,4,6');
