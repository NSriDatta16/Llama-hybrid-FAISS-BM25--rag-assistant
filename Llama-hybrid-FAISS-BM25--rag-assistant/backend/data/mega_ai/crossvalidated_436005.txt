[site]: crossvalidated
[post_id]: 436005
[parent_id]: 
[tags]: 
Robust common mean inference

In an ANOVA-like setting I have several groups of variables that I expect to have the same mean, $\mu$ . Quite often some of the groups would have shifted means, $\mu + \Delta$ , due to effects beyond my control ( $\Delta$ is random). One goal is estimating $\mu$ . However, I would also like to identify these "outlier" groups and study them (they are not really outliers, in the sense that they are not just junk.) My current approach is to identify such outlier groups via pairwise t-tests. Update Current approach The approach that I have currently adopted consists of pairwise t-tests complemented by TOST equivalence tests. I then construct a graph, where each group serves as a node and the connected nodes are the pairs of groups that, according to the tests, have close means. And then I choose the biggest connected cluster in this graph, as the one representing the true mean (this is algorithmically easy to do.) I would like to streamline this procedure, so I am looking for a better method to identify the outlier groups or to determine the mean without excluding them. Possible alternative approaches Lasso regression One alternative seems to be using a version of lasso regression, which would push the deviations from means to zero, unless the data dictate otherwise. This would probably produce a directly a cluster of groups with the true mean, but I haven't tried this yet. Bayesian model testing Another alternative is to use Bayesian model testing, calculating probabilities of all possible combinations of groups where some of them have a common mean and others do not. However this approach seems computationally intensive (if not prohibitive) for 20+ groups. Robust regression Robust regression with Huber or Tukey loss functions seems an efficient approach Expectation maximization I haven't tried this yet. Its main drawback is that it requires specifying a model for outlying observations. Comments and suggestions will be appreciated.
