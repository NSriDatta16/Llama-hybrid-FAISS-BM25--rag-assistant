[site]: datascience
[post_id]: 97780
[parent_id]: 
[tags]: 
Training neural network to emulate a hash function

A hash function takes an input, performs a set of complex operations and then produces an output. For my purposes the output from the function will always be the same for any given input. I remember reading long, long ago that neural networks can in theory (assuming infinitely large network) reproduce any algorithm - therefore it stands to reason that a theoretical neural network could replicate a hash function. That all being said, I did a search for such a neural network (just with Google) and I couldn't find anything quite as pure as I've described (possibly because hashing inputs has seen some popularity). If we limit our scope to looking at cryptographic hashes only and assume we can train using input/output pairs is it reasonable to train a network for this?
