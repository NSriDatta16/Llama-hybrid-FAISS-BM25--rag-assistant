[site]: stackoverflow
[post_id]: 423497
[parent_id]: 361371
[tags]: 
The question is, "Should inheritance (of non-interface types) be removed from programming languages?" I say, "No", as it will break a hell of a lot of existing code. That aside, should you use inheritance, other than inheritance of interfaces? I'm predominantly a C++ programmer and I follow a strict object model of multiple inheritance of interfaces followed by a chain of single inheritance of classes . The concrete classes are a "secret" of a component and it's friends, so what goes on there is nobodies business. To help implement interfaces, I use template mixins. This allows the interface designer to provide snippets of code to help implement the interface for common scenarios. As a component developer I feel like I can go mixin shopping to get the reusable bits without being encumbered by how the interface designer thought I should build my class. Having said that, the mixin paradigm is pretty much unique to C++. Without this, I expect that inheritance is very attractive to the pragmatic programmer.
