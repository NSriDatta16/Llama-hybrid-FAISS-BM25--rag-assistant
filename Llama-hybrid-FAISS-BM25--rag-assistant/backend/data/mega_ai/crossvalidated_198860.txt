[site]: crossvalidated
[post_id]: 198860
[parent_id]: 198844
[tags]: 
I think the real question is not about auto.arima but rather about regression with ARMA errors as implemented in arima with exogenous regressors. So how does forecasting auto.arima with xreg work? Do you create a forecast for a time series based on past data and regression model based on the input time series and input xreg , and then forecast each data point in the time series and for each forecasted data point use the regression model you built and future xreg values to adjust the forecasted values? No, this is not how it works. It is simpler than that. Let us call the time series of interest $y$ and the exogenous regressors $X$. In a regression with ARMA errors as implemented in arima (and auto.arima ) with xreg , the model equations are $$ \begin{align} y_t &= \beta' X_t + u_t \\ u_t &= \varphi_1 u_{t-1} + \dotsc + \varphi_p u_{t-p} + \varepsilon_t + \theta_1\varepsilon_{t-1} + \dotsc + \theta_q\varepsilon_{t-q} \end{align} $$ where $u_t$ is not $i.i.d.$ but $\varepsilon_t$ is. The "main" equation is the upper one which specifies a linear relationship between $y_t$ and $X_t$ and looks very much like a regular regression model. The difference from a regular regression is made by the second equation that specifies the error term $u_t$ to follow an ARMA($p,q$) process (instead of $u_t$ being uncorrelated as would be the case in a regular regression). The second equation serves to "fix the problem with the first equation's errors". I like to think of this model as basically the good old regression but with unpleasant error pattern that needs to be accounted for. How does auto.arima differ from arima in this case? auto.arima selects the optimal autoregressive and moving-average orders $p$ and $q$ based on a chosen information criterion (AICc by default, alternatively AIC or BIC) from a local search over a few regions of values. Meanwhile, arima requires the user to specify $p$ and $q$ manually. How are these models fit? Generally, by maximum likelihood estimation. Refering to your three-step example algorithm, arima can be done in one step where all the parameters ($\beta$s, $\varphi$s and $\theta$s) are estimated at once together producing the fitted values $\hat y_t$ and the residuals $\hat\varepsilon_t$. auto.arima would do that multiple times as it tries out different values of $p$ and $q$. See more in the Hyndman & Khandakar "Automatic time series forecasting: the forecast package for R" (2008). Also, try Rob J. Hyndman's blog post "The ARIMAX model muddle" .
