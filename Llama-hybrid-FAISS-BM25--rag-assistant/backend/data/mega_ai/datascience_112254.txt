[site]: datascience
[post_id]: 112254
[parent_id]: 112252
[tags]: 
Did you set the same random seed at each step? The seed works well for the first function, but then it is lost in the next ones because NumPy applies a global seed reset automatically. For example, you can do: def reset_seed(seed_value): np.random.RandomState(seed_value) tf.compat.v1.set_random_seed(seed_value) tf.random.set_seed(seed_value) for i in range(100): reset_seed(seed_value) model.fit(trainX, trainY, epochs=1, batch_size=batch_size, verbose=2, shuffle=False) model.reset_states() Otherwise, you can also use a function with a random number generator: https://albertcthomas.github.io/good-practices-random-number-generators/
