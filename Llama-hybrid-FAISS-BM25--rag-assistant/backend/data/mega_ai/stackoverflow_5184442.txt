[site]: stackoverflow
[post_id]: 5184442
[parent_id]: 
[tags]: 
Working with MS's Integer8/LargeInteger in Java?

I am working with AD via LDAP (using Spring LDAP) and I ran into a odd problem while working with Integer8/LargeInteger being used as timestamps which are outlined here . Namely, my attempts to write to fields of that type have resulted in... Malformed 'field name here' attribute value I've tried putting Longs and Strings in hopes that the underlying implementation would do any needed conversions but no luck. Here is how I am doing my math... /* AD Keeps track of time in 100 NS intervals (UTC) since Jan 1st 1601 */ long winEpocMS = new GregorianCalendar(1601, Calendar.JANUARY, 1).getTimeInMillis(); long nowMS = System.currentTimeMillis(); long winTime100NS = (nowMS - winEpocMS) * 10000; Is there a easy/elegant way to pack this data correctly? Are there any Java libs prebuilt to handle reading/writing these rather odd time values? Bonus points to anyone that can explain why we need a 64bit timestamp at the 100NS resolution.
