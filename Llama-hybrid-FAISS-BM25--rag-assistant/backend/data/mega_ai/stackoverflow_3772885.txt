[site]: stackoverflow
[post_id]: 3772885
[parent_id]: 3772719
[tags]: 
"I need a way to send commands from the server to the client." Don't do this. It inverts the usual meaning of "client" and "server". Clients take the active role and send stuff or request stuff from the server. Is Twisted (or more general any event driven framework) able to solve this problem? It shouldn't. You're inverting the role of client and server. If the server decides to send data, it should be able to send it; False, actually. The server is constrained to wait for clients to request data. That's generally the accepted meaning of "client" and "server". "One to send commands to the client and one to transmit the results to the server. Does this solution sound more like a standard client-server communication for you?" No. If a client sent messages to a server and received responses from the server, it would meet more usual definitions. Sometimes, this sort of thing is described as having "Agents" which are -- each -- a kind of server and a "Controller" which is a single client of all these servers. The controller dispatches work to the agents. The agents are servers -- they listen on a port, accept work from the controller, and do work. Each Agent must do two concurrent things (usually via the select API): Monitor a well-known socket on which it will receive work from the one-and-only client. Do the work (in the background). This is what Client-Server usually means. If each Agent is a Server, you'll find lots of libraries will support this. This is the way everyone does it.
