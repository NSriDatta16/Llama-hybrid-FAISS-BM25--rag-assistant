[site]: stackoverflow
[post_id]: 4370541
[parent_id]: 4369952
[tags]: 
Given that there is potentially an arbitrarily large number of rows, I would store the ordering as a text string entry in the user preferences table (assuming you have such a table). Basically, the default would be a null entry (to save on disc space), which would mean that the ordering is unchanged from the ordering in the database, and if the user changes it you could just serialize the order of the rows (i.e., if they had row 15 first, then 19, then 3, you could have 15-19-3 ) and then just read it out. It's a single update and it scales indefinitely (well, until the length of the text string, but that's pretty doggone big for the mediumtext and longtext types). I'm leaving the above just in case it's applicable to other people, but for the specific case described below, I think I would consider storing the prefs in a textfile. Given that the ordering is shown to the user anyway, there's no security risk in the prefs being in a plaintext file, and you can rewrite the whole thing very quickly. Given how you described it below, I would use a two-column CSV file, but obviously you could set it up however makes the most sense. A quick search on file reading speeds led to this comment on the file_get_contents() function, which suggests you may want to pay attention to how large the file will be when considering the method you'll use to access the data in the file. I don't know about writing.
