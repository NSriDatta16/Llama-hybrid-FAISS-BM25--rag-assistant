[site]: datascience
[post_id]: 80629
[parent_id]: 
[tags]: 
Improving Keras Training Accuracy

I am currently writing a program to predict the severity of a biopsy for Prostate Cancer using Keras. There are 6 different ratings from 0 to 5. Currently the accuracy is stuck at about 16% which is essentially 1/6 and when used, it predicts everything as a score of 1. The training data does have a larger quantity of images that are rated 1, but I duplicated the other sets so all the values would have the same amount of training data. This is the current model I am using: model = Sequential() model.add(Conv2D(4, kernel_size=(3, 3),activation='relu',input_shape=(32, 32, 1))) model.add(Conv2D(8, kernel_size=(3, 3), activation='relu')) model.add(Conv2D(16, kernel_size=(3, 3), activation='relu')) model.add(Conv2D(32, kernel_size=(3, 3), activation='relu')) model.add(AveragePooling2D(pool_size=(2, 2), strides=2)) model.add(Conv2D(64, kernel_size=(3, 3), activation='relu')) model.add(Conv2D(64, kernel_size=(3, 3), activation='relu')) model.add(Conv2D(64, kernel_size=(3, 3), activation='relu')) model.add(AveragePooling2D(pool_size=(2, 2), strides=2)) model.add(GlobalAveragePooling2D()) model.add(Dense(6, activation='softmax')) model.add(Activation('softmax')) model.compile(loss=keras.losses.categorical_crossentropy, optimizer='adam', metrics=['accuracy']) Any help would be appreciated.
