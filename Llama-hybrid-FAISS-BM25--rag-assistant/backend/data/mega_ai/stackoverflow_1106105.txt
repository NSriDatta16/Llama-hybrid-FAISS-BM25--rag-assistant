[site]: stackoverflow
[post_id]: 1106105
[parent_id]: 1105977
[tags]: 
There are a couple of ways to approach this. The more traditional java way is not to have an arbitrary method that is passed, but rather a defined interface with a method definition. That way your class receives the implementation of the interface, and calls the method on the object. The other is to pass a Method object together with the instance of the object the method is supposed to be called on. This works fine if you aren't serializing (as Method is not serializable), but won't be anywhere near as elegant as in other languages. You could, of course make your own wrapper class that held the method and the instance, but then you are kind of back to the same interface type solution.
