[site]: crossvalidated
[post_id]: 380689
[parent_id]: 380599
[tags]: 
First you need to note that the approach outlined by IrishStat is specific to ARIMA models, not to any generic set of models. To answer your main question "Is it possible to automate time series forecasting?": Yes it is. In my field of demand forecasting, most commercial forecasting packages do so. Several open source packages do so as well, most notably Rob Hyndman's auto.arima() (automated ARIMA forecasting) and ETS() (automated exponential smoothing forecasting) functions from the open source Forecast package in R see here for details on these two functions . There's also a Python implementation of auto.arima called Pyramid , although in my experience it is not as mature as the R packages. Both the commercial products that I mentioned and the open source packages I mentioned work based on the idea of using information criteria to choose the best forecast: You fit a bunch of models, and then select the model with the lowest AIC, BIC, AICc, etc....(typically this is done in lieu of out of sample validation). There is however a major caveat: all of these methods work within a single family of models. They choose the best possible model amongst a set of ARIMA models, or the best possible model amongst a set of exponential smoothing models. It is much more challenging to do so if you want to choose from different families of models, for example if you want to choose the best model from ARIMA, Exponential smoothing and the Theta method. In theory, you can do so in the same way that you do within a single family of models, i.e. by using information criteria. However in practice, you need to calculate the AIC or BIC in exactly the same way for all models considered, and that is a significant challenge. It might be better to use time series cross-validation , or out of sample validation instead of information criteria, but that will be much more computationally intensive (and tedious to code). Facebook's Prophet package also automates forecast generation based on General Additive Models See here for details . However Prophet fits only one single model, albeit a very flexible model with many parameters. Prophet's implicit assumption is that a GAM is "the one model to rule them all", which might not be theoretically justified but is very pragmatic and useful for real world scenarios. Another caveat that applies to all of the above mentioned methods: Presumably you want to do automated time series forecasting because you want to forecast multiple time series, too many to analyze manually. Otherwise you could just do your own experiments and find the best model on your own. You need to keep in mind that an automated forecasting approach is never going to find the best model for each and every time series - it is going to give a reasonably good model on average over all the time series, but it is still possible that some of those time series will have better models than the ones selected by the automated method. See this post for an example of this. To put it simply, if you are going to go with automated forecasting - you will have to tolerate "good enough" forecasts instead of the best possible forecasts for each time series.
