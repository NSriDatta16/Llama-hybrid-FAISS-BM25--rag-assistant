[site]: crossvalidated
[post_id]: 582306
[parent_id]: 
[tags]: 
R glm Coefficient Slightly Off Weighted Effect Coding Binomial Logistic Regression

I noticed some discrepancies between the expected output and actual output for binomial glm in R using customized weighted effect contrast coding. The purpose of weighted effect coding is to use the overall sample mean as the reference group. All data is taken from the source package wec as shown below. library(wec) library(broom) library(tidyverse) data(PUMS) #Convert wage to a binary variable PUMS % mutate(wage = if_else(wage>50000, 1, 0)) #Switch to weighted effect contrasts contrasts(PUMS $race) race, "Black") #Overall binomial percent overall % summarise(Percent = sum(wage)/n()) overall_odds % mutate(Odds_Ratio = exp(estimate)) PUMS %>% group_by(race) %>% summarise(Percent = sum(wage)/n()) %>% mutate(Odds_Ratio = (Percent/(1 - Percent))/overall_odds) As you can see if you run the code, the output from the last two chunks is slightly off for some reason. For example, the odds ratio for the Asian group should be 1.59 but it appears as 1.61 in the glm model. However, if the binomial outcome variable is treated as continuous a simple lm call predicts the odds ratios perfectly (the intercept matches overall[[1, 1]]). Is there some mechanistic reason or rounding error that causes binomial regression to behave this way, and can I adjust settings to fix it? I would really appreciate help in this as it is critical for my research. EDIT: If anybody ever encounters this issue again, here is a modification of Ben Bolker's answer to get the weighted overall odds and expected coefficients for multiple groups, not just the unweighted odds in regular two-variable effect coding. library(broom) library(wec) library(tidyverse) set.seed(11) dd $x) x, omitted = "b") dds dplyr::group_by(x) |> dplyr::summarise(pct = mean(y), odds = pct/(1-pct), count = n())) #weighted overall_odds $odds), dds$ count)) dds |> dplyr::mutate(estimate = odds/overall_odds) |> relocate(estimate, .before = pct) tidy(glm(y ~ x, family = binomial, dd), exponentiate = TRUE)
