[site]: stackoverflow
[post_id]: 560651
[parent_id]: 503834
[tags]: 
Another good model is the invoice-item model, because the "best choice" depends on various factors: number of write vs read operations; performance; are reporting functionalies needed? Look at this data model: Invoice ID date InvoiceItem invoiceID description amount Application funcitonalities are: create new invoice; each evening create and send two reports: (a) total amount for each invoice, (b) total amount of the day. Say you have an average of 5 items per invoice and 100 invoices per day, you end up doing, for each day: 5 x 100 writes on InvoiceItem; 100 writes on Invoice; 5 x 100 + 100 = 600 reads from Invoice and InvoiceItem (report (a)); 5 x 100 + 100 = 600 reads from Invoice and InvoiceItem (report (b)); so total is = 1800 operations / day, assuming reads and writes have the same cost. If you add "TotalAmount" attribute on entity "Invoice", situation is a bit different: 5 x 100 writes on InvoiceItem; 100 writes on Invoice (including TotalAmount); 100 from Invoice only (report (a)); 100 from Invoice only (report (b)); with a total of 800 operations :)
