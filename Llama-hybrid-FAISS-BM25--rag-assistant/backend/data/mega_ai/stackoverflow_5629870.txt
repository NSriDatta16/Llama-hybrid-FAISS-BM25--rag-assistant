[site]: stackoverflow
[post_id]: 5629870
[parent_id]: 
[tags]: 
C# - Get property in member class using Reflection

SHORT VERSION What's the best way to use reflection to turn something like string prop = "part1.first_name"; into a System.Reflection.PropertyInfo , so that I can use the GetValue and SetValue functions? LONG VERSION I'm using ASP .NET MVC to build a questionnaire for my organization. It's very long, so it's divided into several different pages. Since it's not uncommon for us to get requests like, "Can you move this question to that page, and this other question to another page," I need to build this to be pretty flexible for a junior programmer to change. My model is a complex class (it's got five member classes that have mostly primitive-typed properties on them). So, I access it by doing things like Model.part1.first_name or Model.part2.birth_date . Since the same model is used on all of the pages, but not all of the questions are on every page, I have ActionAttributes that essentially clear out all of the properties that were submitted on the form except for the ones that were displayed on that page (so someone can't inject a hidden field into the form and have the value persist to the database). I want to make sure that I only save valid field values and don't let the user proceed to the next page until the current one is entirely OK, but I also want to save the values that are valid, even if the user isn't allowed to proceed. To do this, I have a function that takes two instances of my model class, a reference to the ModelStateDictionary, and a string[] of field names like "part1.first_name" and "part2.birth_date". That function needs to copy all of the values listed in the string array that do not have validation errors from the first (ie, form-submitted) object into the second (ie, loaded from the db) object. As stated above, what's the best way to use reflection to turn something like "part1.first_name" into a System.Reflection.PropertyInfo , OR, is there a better way to accomplish this?
