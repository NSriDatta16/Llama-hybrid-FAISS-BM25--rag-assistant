[site]: stackoverflow
[post_id]: 4150550
[parent_id]: 4144091
[tags]: 
I hate to tell you this, but the code you already wrote looks nothing like WPF or MVVM code. You are doing this in a very WinForms-ish way. It won't be so much "converting" your code to MVVM as "redoing" it that way. The first thing you want to ask is, "what should I have in my model?" Obviously the model consists of a list of objects such as homes and power plants. Each of these objects has at least a type and a location. I recommend you define some kind of MappableObject class and use an ObservableCollection in your model to store your mappable objects. Your main control should obviously be an ItemsControl that uses a Canvas for its ItemsPanel. The item template must set Canvas.Left and Canvas.Top to match the item's location. You would need a converter to convert from a Location to a Point. Now if your ItemsControl has its ItemsSource bound to your ObservableCollection, every time a mappable object is added to the collection it will appear in its Location. Any time you change its Location it will move to the new place on the screen. You will need something to handle the drag events and show the cursor. I would use code roughly like what you already have, except put it inside a UserControl that is used in your ItemTemplate. It can find its container and use that to map drag coordinates to map locations. As the drag progresses it can update the MappableObject's location property. Remember to transform all coordinates onto the map using TransformToVisual instead of using local coordinates for the control. To get the right image for an object, use a converter: Your model knows what kind of object it is, and you can name your .png files to match so your converter can easily grab the right .png out of your Images directory by constructing the Url directly from the object type. I hope these suggestions help you get moving in the right direction. Doing this in WPF using MVVM is quite simple and much cleaner than doing the old WinForms way, but you will need to use a lot of new techinques you aren't used to so there will be a learning curve. Best wishes for your success.
