[site]: stackoverflow
[post_id]: 1147391
[parent_id]: 
[tags]: 
Which serialization format for key/value pairs is best indexable in RDBMS?

I have a certain object type that is stored in a database. This type now gets additional information associated with it which will differ in structure among instances. Although for groups of instances the information will be identically structured, the structure will only be known at runtime and will change over time. I decided to just add a blob field to the table and store the key/value pairs there in some serialized format. From your experience, what format is most advisable? In the context of my application, the storage space for this is secondary. There's one particular operation that I want to be fast, which is looking up the correct instance for a given set of key / value pairs (so it's a kind of variable-field composite key). I guess that means, is there a format that plays particularly well with typical database indexing? Additionally, I might be interested in looking for a set of instances that share the same set of keys (an adhoc "class", if you wish). I'm writing this in Java and I'm storing in various types of SQL databases. I've got JSON, GPB and native Java serialization on my radar, favouring the cross-language formats. I can think of two basic strategies: store the set of values in the table and add a foreign key to a separate table that contains the set of keys store the key/value pairs in the table
