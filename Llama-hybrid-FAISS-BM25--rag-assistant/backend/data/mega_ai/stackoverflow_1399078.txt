[site]: stackoverflow
[post_id]: 1399078
[parent_id]: 1390745
[tags]: 
I have given up assembly coding years ago when I found that an optimizing C++ compiler would beat me hands down when it came to performance because the people building the optimizer consider all sorts of things, like pipeline stalls, partially parallel execution of subsequent, independent code fragments (a good optimizer can rearrange your code a fair bit), and the disadvantages of assembly code (hard to read, hard to debug, not portable) by far outweigh the advantages it used to have in those days when compilers didn't have good optimizers. If I was you I wouldn't bother myself with assembly coding for normal programming tasks. Even if you could save a CPU clock cycle here or there, looking at the overall performance of a complex application the effect is negligable.
