[site]: stackoverflow
[post_id]: 993543
[parent_id]: 
[tags]: 
Matching algorithm

Odd question here not really code but logic,hope its ok to post it here,here it is I have a data structure that can be thought of as a graph. Each node can support many links but is limited to a value for each node. All links are bidirectional. and each link has a cost. the cost depends on euclidian difference between the nodes the minimum value of two parameters in each node. and a global modifier. i wish to find the maximum cost for the graph. wondering if there was a clever way to find such a matching, rather than going through in brute force ...which is ugly... and i'm not sure how i'd even do that without spending 7 million years running it. To clarify: Global variable = T many nodes N each have E,X,Y,L L is the max number of links each node can have. cost of link A,B = Sqrt( min([a].e | [b].e) ) x ( 1 + Sqrt( sqrt(sqr([a].x-[b].x)+sqr([a].y-[b].y)))/75 + Sqrt(t)/10 ) total cost =sum all links.....and we wish to maximize this. average values for nodes is 40-50 can range to (20..600) average node linking factor is 3 range 0-10.
