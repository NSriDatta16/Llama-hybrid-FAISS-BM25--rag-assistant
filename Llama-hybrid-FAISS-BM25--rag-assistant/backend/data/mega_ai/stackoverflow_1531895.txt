[site]: stackoverflow
[post_id]: 1531895
[parent_id]: 1531698
[tags]: 
I'm not sure what you mean by this: I thought that by overriding touchesBegan:withEvent:, touchesMoved:withEvent:, touchesEnded:withEvent: and touchesCancelled:withEvent: in this way should work, but it doesn't. Do you not get the events? You should receive the events, but I think there is a logic error in your if statement that may have been preventing this from working. if ([touches count] != 2) This is a problem, because the likelihood of the two touches happening precisely the same time is low. You'll want to be able to handle when touches happen independently, as well as when a user holds a finger stationary, and moves the other one. In these scenarios (which are common) you may only get one touch in that NSSet, even though the other is still valid. The solution to handling touches properly is to remember some things about which touches came in and which touches left. Remember, the address of the UITouch does not change for the life of the touch, so you can safely compare addresses to ensure you are still dealing with the same touch as before, and track it's lifecycle. If you are not getting the touch events, then that is a different problem altogether, you may need to turn set multiTouchEnabled:YES
