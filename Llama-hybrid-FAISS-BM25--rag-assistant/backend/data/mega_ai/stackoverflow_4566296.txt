[site]: stackoverflow
[post_id]: 4566296
[parent_id]: 4566058
[tags]: 
This might be overkill for what you are doing but how I generally solve this issue is to store html and text templates for each of the emails I want to send out in the database. The templates have replacement codes for the dynamic data. ex: Then in the .net service responsible for sending out my emails I get the templates and I get the values for the queued emails that need to go out and make the necessary replacements. At the end I use a RegEx.replace to strip out any remaining replacement codes (if any). For the actual sending of the emails I use the System.Net.Mail namespace as it allows you to send multi-part messages so if the end user's client only supports plain text they don't see all my html tags since I send out a text and html version of the email. Even though it isn't the most elegant solution I like it because I generally make a nice front end to manage the html/text templates in the database so that the email designers can manage these. Also I generally list the available replacement codes so they can just click a button to add the relevant replacement code to the template.
