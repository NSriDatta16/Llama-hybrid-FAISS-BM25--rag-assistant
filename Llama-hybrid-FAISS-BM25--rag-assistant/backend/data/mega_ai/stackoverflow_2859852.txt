[site]: stackoverflow
[post_id]: 2859852
[parent_id]: 2694734
[tags]: 
Unless you've checked it out, NASM manual is quite good resource for learning about NASM: http://www.nasm.us/doc/ Comparison of NASM and GAS also helps out a bit: http://www.ibm.com/developerworks/linux/library/l-gas-nasm.html irc channel #asm at Freenode se(r)ver provides these links: Understanding Assembly: http://www.acm.uiuc.edu/sigmil/RevEng/ch06.html 80386 HTML Reference: http://pdos.csail.mit.edu/6.828/2004/readings/i386/toc.htm Linux/Win32 x86 tutorial w/nasm: http://www.drpaulcarter.com/pcasm/ Linux assembly book: http://nongnu.uib.no/pgubook/ I also devoted some time to mash up a little hello world up for you: bits 32 section .data greeting db "hello world", 10 section .text global _start _start: mov eax, 4 ; sys_write mov ebx, 1 ; stdout mov ecx, greeting mov edx, 12 ; greeting.length int 0x80 ; system call interrupt mov eax, 1 ; sys_exit mov ebx, 0 int 0x80 Assemble this with: nasm -f elf -o example.o example.asm ld -o example example.o -melf_i386 I've myself written a small code generator in python. Though I left that thing in middle while ago. Recently I've written some bit different tool that might become useful for anyone tackling with assembly. Right now I'm also asking some help.. Except seems I have to do some self-help there: x86 instruction encoding tables The old code generator piece I've got is in http://bitbucket.org/cheery/g386/ until I'll get my new table-based code generator up and running.
