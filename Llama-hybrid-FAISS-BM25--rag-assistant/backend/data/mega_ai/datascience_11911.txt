[site]: datascience
[post_id]: 11911
[parent_id]: 
[tags]: 
sLDA vs. LDA+Classifier

For simplicity, suppose we're looking at Yelp reviews of restaurants, and are trying to classify the restaurant by cuisine type (e.g. "Italian, Japanese," etc.). Lets also assume our data already a cuisine type column that we can use for accuracy checking. One way of approaching this problem would be a supervised Latent Dirichlet Allocation approach, where the restaurant type is the response. In this way, topics are trained to be then used in a multinomial logistic regression to guess the cuisine type. Is the above approach far superior to instead running (unsupervised) LDA with plenty of topics, and then using something like XGBOOST to predict cuisine type? In other words, we run unsupervised LDA, and then project all reviews to vector distances to each topic, and then use these feature vectors to predict cuisine type? I understand that sLDA will try to pick topics that better characterize each category type but is the former really superior to the latter approach? The reason I ask this is because I don't know of any fast sLDA implementations out there.
