[site]: stackoverflow
[post_id]: 2317213
[parent_id]: 2317114
[tags]: 
Provided you're running Perl 5.9.4+, this seems like a good candidate for use of the state keyword. If state is enabled, only your foo() subroutine will be able to modify the value of $per_thread_state . Here's how: use feature 'state'; sub foo { state $per_thread_state; my $inc = shift; $per_thread_state += $inc; return $per_thread_state; } Remember to enable state though (from perlsub ): Beginning with perl 5.9.4, you can declare variables with the state keyword in place of my. For that to work, though, you must have enabled that feature beforehand, either by using the feature pragma, or by using -E on one-liners. perlsub also has a section on Persistent Private Variable with Closures . What you've done appears to be fine.
