[site]: stackoverflow
[post_id]: 220413
[parent_id]: 220368
[tags]: 
There might be a number of reasons for this. The most common one would be leverage. If part of the application you develop has broad applicability, the you might be able to retarget substantial parts of the solution to other clients. This would achieve one of two things: Shorter time to market which would imply a lowest cost for the client, or on fixed bid projects, bigger margins for you. Another case could be to protect yourself. Your example itself is somewhat of a case study. You give the client the full rights and source to the work you do for them, but you retain the rights to your libraries, they pay extra, etc... Depending how the contract is actually worded, if you use "your" libraries as part of the final deliverable, wouldn't that be work you actually create for them. If you did not include those libraries, would they still have a complete product. If not, then is not your library part of the work you did for them? Why should they pay extra for that? Lawyers love that kind of arguments. Of course, if you have friendly and satisfied clients, then this would not likely be an issue, but sometimes things don't go so well. If your contract says something like "client has a right to the code, to do what they want with, but you retain your rights to do what you want with the code", then there is no gray zone. As with everything legal, hire a good lawyer.
