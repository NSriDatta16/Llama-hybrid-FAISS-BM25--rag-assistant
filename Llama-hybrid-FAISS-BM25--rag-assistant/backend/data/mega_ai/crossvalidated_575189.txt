[site]: crossvalidated
[post_id]: 575189
[parent_id]: 575161
[tags]: 
The simplest way, although not necessarily the best, is just to loop over the parameters at each iteration. In this version, startval and proposalsd are vectors of length equal to the number of parameters: easyMCMC = function(log_target, niter, startval, proposalsd){ nparms = length(startval) x = matrix(0,niter,nparms) x[1,] = startval for (i in 2:niter){ proposedx = currentx = x[i-1,] for (j in 1:nparms) { proposedx[j] = rnorm(1,mean=currentx[j],sd=proposalsd[j]) A = exp(log_target(proposedx) - log_target(currentx)) if (runif(1) I have tried to adhere to your code as closely as possible, however, some improvements are there to be had; for example, at the end of each iteration, proposedx equals currentx equals x[i-1,] , so that assignment doesn't need to happen at the top of the iteration loop as long as proposedx and currentx are initialized outside the loop.
