[site]: stackoverflow
[post_id]: 1097596
[parent_id]: 1097411
[tags]: 
Here is a simple implementation of the Sieve of Eratosthenes in F#: let rec sieve = function | (p::xs) -> p :: sieve [ for x in xs do if x % p > 0 then yield x ] | [] -> [] let primes = sieve [2..50] printfn "%A" primes // [2; 3; 5; 7; 11; 13; 17; 19; 23; 29; 31; 37; 41; 43; 47] This implementation won't work for very large lists but it illustrates the elegance of a functional solution.
