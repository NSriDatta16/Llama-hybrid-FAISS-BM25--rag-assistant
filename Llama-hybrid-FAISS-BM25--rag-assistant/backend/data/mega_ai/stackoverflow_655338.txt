[site]: stackoverflow
[post_id]: 655338
[parent_id]: 655038
[tags]: 
I guess it depends on how much trouble you want to go to. You can convert a double to a long, so if you converted your double values to long integers in a separate program, and output the constant values, you could then use them in your program. I would strongly discourage this, by the way, but sometimes you gotta do what ya gotta do. First, write a program to convert your doubles to longs: Console.WriteLine("private const long x1 = 0x{0:X16}L;", BitConverter.DoubleToInt64Bits(0.5)); Console.WriteLine("private const long x2 = 0x{0:X16}L;", BitConverter.DoubleToInt64Bits(3.14)); Now, add that output to your program and create the enum: private const long x1 = 0x3FE0000000000000L; private const long x2 = 0x40091EB851EB851FL; enum MyEnum : long { val1 = x1, val2 = x2 } When you want to test a double value against the enum, you'll have to call BitConverter.DoubleToInt64Bits() , and cast the result to your enum type. To convert the other way, call BitConverter.Int64BitsToDouble() .
