[site]: stackoverflow
[post_id]: 220225
[parent_id]: 220187
[tags]: 
One option for what you're doing is term frequency to inverse document frequency, or tf-idf. The strongest terms will have the highest weighting under this calculation. Check if out here: http://en.wikipedia.org/wiki/Tf-idf Another option is to use something like a naive bayes classifier using words as features and find what the strongest features are in the text to determine the class of the document. This would work similarly with a maximum entropy classifier. As far as tools to do this, the best tool to start with would be NLTK, a Python library with extensive documentation and tutorials: http://nltk.sourceforge.net/ For Java, try OpenNLP: http://opennlp.sourceforge.net/ For the phrase stuff, consider the second option I offered up by using bigrams and trigrams as features, or even as terms in tf-idf. Good luck!
