[site]: stackoverflow
[post_id]: 416854
[parent_id]: 
[tags]: 
What should my AST look like for easy transforms?

I have a minimal toy language similar to javascript. I generate an AST to try out some optimization techniques like escape analysis, type inference. I tried a few approaches like generalizing operator tokens instead of a class/function for each one, keeping type information on every node... But I still don't feel like I am going anywhere. It quickly becomes unwieldy to work on... I studied lua5, neko, v8 but.. well... I am sure not one of the brightest one around. Does anybody have experience designing AST and implementing transformations on a AST, which is easy to work on? I would appreciate tips and tricks that made life easier for you? (Please don't tell me to go read dragon book. I have it already.)
