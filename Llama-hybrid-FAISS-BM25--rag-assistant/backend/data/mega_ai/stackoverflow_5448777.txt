[site]: stackoverflow
[post_id]: 5448777
[parent_id]: 5447987
[tags]: 
If this is a data warehouse type operation where queries are highly optimized for READ queries, and if you have 20 ways of dissecting the data, e.g. WHERE clause involves.. Q1: status, type, customer Q2: price, customer, band Q3: sale_month, band, type, status Q4: customer etc And you absolutely have plenty of fast storage space to burn, then by all means create an index for EVERY single column, separately . So a 20-column table will have 20 indexes, one for each individual column . I could probably say to ignore bit columns or low cardinality columns, but since we're going so far, why bother (with that admonition). They will just sit there and churn the WRITE time, but if you don't care about that part of the picture, then we're all good. Analyze your 20 queries, and if you have hot queries (the hottest ones) that still won't go any faster, plan it using SSMS (press Ctrl-L) with one query in the query window. It will tell you what index can help that queries - just create it; create them all, fully remembering that this adds again to the write cost, backup file size, db maintenance time etc.
