[site]: stackoverflow
[post_id]: 1482248
[parent_id]: 
[tags]: 
translating C++/CLI code to C#

I'm trying to translate this c++/cli code to c# #pragma once #define WIN32_LEAN_AND_MEAN #include #include using namespace System; using namespace System::Runtime::InteropServices; struct CREDENTIAL { DWORD Flags; DWORD Type; LPSTR TargetName; LPSTR Comment; Runtime::InteropServices::ComTypes::FILETIME LastWritten; DWORD CredentialBlobSize; LPBYTE CredentialBlob; DWORD Persist; DWORD AttributeCount; LPBYTE Attributes; LPSTR TargetAlias; LPWSTR UserName; }; [DllImport("advapi32.dll", SetLastError=true, CharSet=CharSet::Unicode)] extern BOOL CredEnumerate(LPCTSTR Filter, DWORD Flags, DWORD* count, CREDENTIAL*** Credentials); [DllImport("advapi32.dll")] extern VOID CredFree(LPVOID); int main( array ^argv ) { String^ credentialList = ""; Int32 count = 0; CREDENTIAL** credentialCollection = 0; if( CredEnumerate( _T("WindowsLive:name=*"), 0, (DWORD*)&count, &credentialCollection) ) { for( Int32 n = 0; n UserName ) + "\n"; credentialList += "Password: " + gcnew System::String( (LPWSTR)credentialCollection[n]->CredentialBlob ) + "\n"; } CredFree( &credentialCollection ); Console::WriteLine(credentialList); } Console::ReadLine(); } Here's my c# code .. (I am not sure how CredEnumerate does work) using System; using System.Runtime.InteropServices; // DLL support using System.Collections.Generic; public struct CREDENTIAL { public UInt32 flags; public UInt32 type; public string targetName; public string comment; public System.Runtime.InteropServices.ComTypes.FILETIME lastWritten; public UInt32 credentialBlobSize; public IntPtr credentialBlob; public UInt32 persist; public UInt32 attributeCount; public IntPtr credAttribute; public string targetAlias; public string userName; } class Test { [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)] public static extern bool CredEnumerate(string filter, int flag, out int count, out IntPtr pCredentials); static void Main() { try { int count = 0; IntPtr pCredentials = IntPtr.Zero; IntPtr[] credentials = null; bool ret = CredEnumerate("WindowsLive:name=*", 0, out count, out pCredentials); if (ret != false) { credentials = new IntPtr[count]; IntPtr p = pCredentials; for (int n = 0; n creds = new List (credentials.Length); foreach (var ptr in credentials) { creds.Add((CREDENTIAL)Marshal.PtrToStructure(ptr, typeof(CREDENTIAL))); } } } catch (Exception x) { Console.WriteLine(x.ToString()); } Console.ReadLine(); } } I hope someone can help me
