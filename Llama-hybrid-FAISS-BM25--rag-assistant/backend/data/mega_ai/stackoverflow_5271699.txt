[site]: stackoverflow
[post_id]: 5271699
[parent_id]: 5268993
[tags]: 
You can't do this because entity framework will not have mapping metadata for dynamically created type, context will not have ObjectSet for new entity and database will not have table for your new type. Central storage of metadata for EF is MetadataWorkspace class but in current version of EF this class is not supposed to be modified at runtime. It doesn't offer any methods to do that. The only way to define MetadataWorkspace at runtime is from modified SSDL (database description), MSL (mapping description) and CSDL (entity classes description) files. So any "dynamic" approach to EF means: create types at runtime (reflection.emit) create derived ObjectContext containing new ObjectSet at runtime (reflection.emit) modify database to contain new tables create all these mapping files at runtime load mapping files at runtime, create new EntityConnection with created MetadataWorkspace and pass it to instance of dynamically created ObjectContext derived type write a code which is able to work with dynamically created entities write some code which is able to persist information about new entity types and new object context because otherwise you will not have these types available after restarting application Edit: You can also use workaround as mentioned by @Yakimych. Serialize instance of your dynamic type and save it as varbinary (binary serialization) or varchar (xml serialization). You will need only simple table with Id (PK) and column for serialized data. You will query table by Id and handle deserialization by yourselves. You will not be able to query table by type specific properties.
