[site]: crossvalidated
[post_id]: 359215
[parent_id]: 359195
[tags]: 
Reducing the size the data per video could help you. Here are some options: Try subsampling your video - for example, selecting frames at 1fps instead of 24fps. You could develop a more sophisticated subsampling method if your class imbalances are problematic. 28800 data points I assume is the number of frames? If so, then each frame will actually contain ~(H, W, 3) data points. You could consider resizing them or center cropping, or you could consider extracting lower-dimensional secondary features (like color histograms). By "several classification problems", do you mean that you're creating an independent classifier for each class? sklearn.svm.LinearSVC has a multi_class argument you could investigate if you want to learn a single classifier. As for other ML classifiers, I can only speak as to neural networks. I'd suggest loading a pre-trained model (like InceptionV4, which tensorflow makes available), getting the final features, and training a classifier on those features (could be a logistic regression as in typical NNs, but could also be sklearn.svm.LinearSVC or similar).
