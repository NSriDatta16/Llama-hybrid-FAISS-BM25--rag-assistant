[site]: stackoverflow
[post_id]: 5632273
[parent_id]: 
[tags]: 
Problem getting JQuery BBQ to work

I'm still new to javascript/jquery, and I want to learn how to utilize a seemingly nice plugin. I have linked to both jquery and bbq like this: I have inserted this code, that was given in the examples of a simple implementation on Ben Alman's site. Can anyone explain to me, where I need to edit? And what kind of divs/tags/classes I would need to test this? Would be much appreciated. $(function(){ // Keep a mapping of url-to-container for caching purposes. var cache = { // If url is '' (no fragment), display this div's content. '': $('.bbq-default') }; // Bind an event to window.onhashchange that, when the history state changes, // gets the url from the hash and displays either our cached content or fetches // new content to be displayed. $(window).bind( 'hashchange', function(e) { // Get the hash (fragment) as a string, with any leading # removed. Note that // in jQuery 1.4, you should use e.fragment instead of $.param.fragment(). var url = $.param.fragment(); // Remove .bbq-current class from any previously "current" link(s). $( 'a.bbq-current' ).removeClass( 'bbq-current' ); // Hide any visible ajax content. $( '.bbq-content' ).children( ':visible' ).hide(); // Add .bbq-current class to "current" nav link(s), only if url isn't empty. url && $( 'a[href="#' + url + '"]' ).addClass( 'bbq-current' ); if ( cache[ url ] ) { // Since the element is already in the cache, it doesn't need to be // created, so instead of creating it again, let's just show it! cache[ url ].show(); } else { // Show "loading" content while AJAX content loads. $( '.bbq-loading' ).show(); // Create container for this url's content and store a reference to it in // the cache. cache[ url ] = $( ' ' ) // Append the content container to the parent container. .appendTo( '.bbq-content' ) // Load external content via AJAX. Note that in order to keep this // example streamlined, only the content in .infobox is shown. You'll // want to change this based on your needs. .load( url, function(){ // Content loaded, hide "loading" content. $( '.bbq-loading' ).hide(); }); } }) // Since the event is only triggered when the hash changes, we need to trigger // the event now, to handle the hash the page may have loaded with. $(window).trigger( 'hashchange' ); });
