[site]: stackoverflow
[post_id]: 5709708
[parent_id]: 5709247
[tags]: 
Storing quarter and year in database depends on how your payment data is being organized. Examples would be; how many different payment values are being inserted. Will the quarter/year ranges vary? etc. One good technique for "defining" a quarter/year range is making a separate table with a "DateTime" field that identifies a quarter. You don't need to join the table, you just need to do programming in C# to figure out if the range falls within a particular pay quarter. For example: Table 1: Payments ----------------- paymentID (int) paymentAmount (double(7,2)) paymentDateTime (DateTime) Table 2: QuarterYear -------------------- quarterYearID (int) dateFrom (date) dateTo (date) quarter (tinyint) description (varchar) Example Data paymentID | paymentAmount | paymentDateTime ------------------------------------------------ 1 | 20.24 | 2011-04-18 08:14:20 2 | 34.15 | 2011-04-19 07:42:15 3 | 51.87 | 2011-04-20 13:04:22 quarterYearID | dateFrom | dateTo | quarter | description ----------------------------------------------------------------- 1 | 2011-01-01 | 2011-03-31 | 1 | first quarter 2 | 2011-04-01 | 2011-06-30 | 2 | second quarter 3 | 2011-07-01 | 2011-09-31 | 3 | third quarter 4 | 2011-10-01 | 2011-12-31 | 4 | forth quarter Example Query for getting all payments for "Quarter 2" dateValue is a dynamically pulled variable from the payments table. C# will handle 'dateValue' value. SELECT quarter FROM QuarterYear WHERE cast('dateValue' AS date) BETWEEN dateFrom AND dateTo;
