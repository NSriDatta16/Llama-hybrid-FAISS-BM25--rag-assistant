[site]: crossvalidated
[post_id]: 234622
[parent_id]: 
[tags]: 
Creating separate model for each level of a factor using caret in R

I have a large data frame in R with 51 variables/predictors one of which is a factor variable that represents the user (6 in my data) that those observations belong to and I want to predict type. #what the model might look like with only 3 users and 2 predictors: n = 10000 df = data.frame(user = c(rep("abe",n), rep("bob",n), rep("Cai",n)), pred1 = c(rnorm(n)+1,rnorm(n)+2,rnorm(n)+3), pred50 = c(rexp(n)+1,rexp(n)+2,rexp(n)+3), type = c(rep("a",n),rep("b",n),rep("c",n))) library(caret) model_gbm = train(df[,-4], df[,4],method="gbm",verbose=F) I can train on the entire dataset but even with this above example it takes several minutes to complete a complicated model. I tried a decision tree with rpart but it ends up only being ~ 50% accurate, so I would really like to use a better model like treebagging, random forest, or boosting which ends up being 95% accurate. When I subset the data into each user and fit a model on that subset it is more accurate and far quicker. I know I could write a function to create all the subsets and then store the models in a list and write a functions to use the correct model when trying to make predictions. However, I am curious if there is some way to build that part of the model into the train call so that it does the factor split part of the model (and does each model build in parallel) and takes care of using the correct model when being called via the predict function. Any help would be much appreciated, I haven't been able to find anything via google searching.
