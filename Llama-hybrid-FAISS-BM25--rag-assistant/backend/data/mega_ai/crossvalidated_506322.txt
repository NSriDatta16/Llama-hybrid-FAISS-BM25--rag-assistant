[site]: crossvalidated
[post_id]: 506322
[parent_id]: 402470
[tags]: 
You can form a pipeline and apply standard scaling and log transformation subsequently. In this way, you can just train your pipelined regressor on the train data and then use it on the test data. For every input, the pipelined regressor will standardize and log transform the input before making the prediction. import numpy as np from sklearn.preprocessing import StandardScaler from sklearn.preprocessing import FunctionTransformer from imblearn.pipeline import Pipeline def log_transform(x): print(x) return np.log(x + 1) scaler = StandardScaler() transformer = FunctionTransformer(log_transform) pipe = Pipeline(steps=[('scaler', scaler), ('transformer', transformer), ('regressor', your_regressor)], memory='sklearn_tmp_memory') pipe.fit(X_train, y_train) pipe.score(X_test, y_test)
