[site]: stackoverflow
[post_id]: 2921571
[parent_id]: 2921349
[tags]: 
A std::priority_queue doesn't have any way to reorganize itself if your sort criteria changes. You'll nede to manage it yourself. I would suggest just using a std::vector and one of two approaches to maintain it. There are two cases: If you're reprioritizing rather more often than you remove elements (which sounds like is not the case), just keep it unsorted and use min_element to find the item to remove when nedeed. Otherwise probably better is to use Kristo's approach and maintain your own heap. When you reprioritize call make_heap , to add use push_heap , and to get the top item use pop_heap .
