[site]: stackoverflow
[post_id]: 4041218
[parent_id]: 4040883
[tags]: 
First of all, the use of the has_and_belongs_to_many-Association is discouraged. It's better to use a join model: class Tag :listing_tagging end class Listing :listing_tagging end class ListingTagging This would enable you to say something like: ListingTagging.select("tag_id, COUNT(tag_id) as tagging_count") .group(:tag_id) .order("tagging_count DESC") .limit(10) .map { |t| [t.id, t.tagging_count] } # => [[tag_id1, tagging_count_1], ... ]
