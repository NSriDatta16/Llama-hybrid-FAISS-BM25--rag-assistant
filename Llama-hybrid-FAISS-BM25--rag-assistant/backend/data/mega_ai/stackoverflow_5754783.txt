[site]: stackoverflow
[post_id]: 5754783
[parent_id]: 5742369
[tags]: 
There are several ways to write the query asked with Code Rule over LINQ Query (CQLinq) . Certainly the most elegant, concise and optimized way is: warnif count > 0 let soapClientTypes = Application.Types.Where(t => t.DeriveFrom("System.Web.Services.Protocols.SoapHttpClientProtocol")) let mnteTypes = Application.Types.WithFullNameLike(@"MTNE.Web.OneWeb.^.*\p{Proxy}+$").ToHashSet() from t in soapClientTypes.UsingAny(mnteTypes) select new { t, mnteTypesUsed = t.TypesUsed.Intersect(mnteTypes) } Notice how we first define 2 sets , and also use the extension method ToHashSet() to optimize the execution of the Intersect() method. Notice also the usage of the method UsingAny() that, in a single call, perform a lot of work.
