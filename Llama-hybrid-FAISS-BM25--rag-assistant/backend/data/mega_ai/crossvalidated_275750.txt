[site]: crossvalidated
[post_id]: 275750
[parent_id]: 275543
[tags]: 
The video you linked here in one of your comments makes reference to compositional data. This would be an issue if you tried to compare percentages adding up to $100\%$, but this is not the case in your question. Regardless of whether you express the variable independent contractors as counts or a percentage, it wouldn't constrain the range of possible values of the variable offsite workers . In terms of the count (integer-valued) nature of independent contractors you could apply a Poisson, semi-Poisson or a negative binomial model: I created a fictional dataset design to fit a Poisson regression model . I'll use R . The Poisson regression model is of the form $\log (Y) = \beta_0 + \beta_1 X$. Hence, for each value of the $X=x$ variable the $\log(\mathbb E[Y\vert x])$ will be distributed as a Poisson variable with mean $\lambda = \exp(\beta_0 + \beta_1 x).$ We can therefore simulate a dataset suitable for a Poisson regression model as follows (please refer to this post to see the truncation trick to avoid to high or zero values for the number of independent contractors): set.seed(0) # Setting the seed value to make findings reproducible. co = 70 # The number of companies (firms) you have data on. n = 1000 # Dirty trick to get "tons" of point to truncate later and end up with 70. i = 0 # Intercept chosen to be zero hoping to simplify things. sl = .04 # The slope or beta1 in the equation in the previous paragraph. # Assuming the % of off-site workers is varies uniformly from 0% to 100%: offsite = runif(n, 0, 100) mu = exp(i + sl * offsite) # Getting the means # Generating the number of independent contractors: indep = rpois(n, mu) # Creating data set with offsite % and no. contractors in two columns: dat = as.data.frame(cbind(offsite, indep)) # Truncating the data to obtain data points avoiding 0 contractors # ...and keeping max. to 0 & dat$indep We know that the fit of Poisson model will be perfect by design, and hence, we can apply it to proof the association between the number of subcontracting companies and the percentage of telecommuters; however, in a real-life situation this is not going to be the case. Therefore, models such a negative binomial regression that don't assume equal mean and variance will be more often use to deal with over-dispersion. In the basic statistical R package we can also deal with this problem running a quasi-Poisson regression : > fit = glm(indep ~ offsite, family = "quasipoisson", data = dat) > summary(fit) Call: glm(formula = indep ~ offsite, family = "quasipoisson", data = dat) Deviance Residuals: Min 1Q Median 3Q Max -1.96453 -0.61346 -0.08643 0.34988 2.16355 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 0.238500 0.108206 2.204 0.0309 * offsite 0.036529 0.001404 26.009 Not exactly the intercept and slope we had chosen initially, but the data has been truncated and we have only 70 points. And it shows the significant association between the percentage of off-site workers and the the number of independent contractors (by design, p ~ $ 0$): for each increase of $1\%$ in the number of off-site workers there will be a positive difference of $0.037$ in the log of the expected number of subcontracting firms. Or for a one percentage point increase in off-site workers there is a $e^{0.037}$ $(\times)$ increase in subcontractors. These are the plots showing the relationship between the number of independent contractors and the percentage of off-site workers: A different way to look at the relationship is through Spearman correlation (more in line with your original question). The results are very close to the default Pearson correlation as indicated in the correct answer above by David Wright: > cor(dat$offsite, dat$indep, method="pearson") [1] 0.90324 > cor(dat$offsite, log(dat$indep), method="spearman") [1] 0.9510245 It is interesting to try a log transformation of the dependent variable given the plot to the left above, and running an OLS regression (note that this is not equivalent to a Poisson regression (or a negative binomial)). If we do so, we find that the slope: > lm(log(indep) ~ offsite, data = dat)$coef[2] offsite 0.03926557 is equivalent to > cor(dat$offsite, log(dat$indep)) * sd(log(dat$indep)) / sd(dat$offsite) [1] 0.03926557 because $$r = \beta_1\sqrt{\frac{\sum_{i=1}^n(x_i-\bar x)^2}{\sum_{i=1}^n(y_i-\bar y)^2}}=\beta_1\frac{S_{xx}}{S_{yy}}$$
