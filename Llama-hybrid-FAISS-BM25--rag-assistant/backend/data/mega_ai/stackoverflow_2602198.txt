[site]: stackoverflow
[post_id]: 2602198
[parent_id]: 998662
[tags]: 
While normally hashing a file hashes the individual bits of data of the file, image hashing works on a slightly higher level. The difference is that with image hashing, if two pictures look practically identical but are in a different format, or resolution (or there is minor corruption, perhaps due to compression) they should hash to the same number. Despite the actual bits of their data being totally different, if they look parctically identical to a human, they hash to the the same thing. One application of this is search. TinEye.com allows you to upload an image and find many of its occurrences on the internet. like google, it has a web crawler that crawls through web pages and looks for images. It then hashes these images and stores the hash and url in a database. When you upload an image, it simply calculates the hash and retrieves all the urls linking to that hash in the database. Sample uses of TinEye include finding higher resolution versions of pictures, or finding someone's public facebook/myspace/etc. profile from their picture (assuming these profiles use the same photo. Image hashing can also be used with caching or local storage to prevent retransmission of a photo or storage of duplicates, respectively. There are plenty of other possibilities including image authentication and finding similar frames in a video (as was mentioned by someone else).
