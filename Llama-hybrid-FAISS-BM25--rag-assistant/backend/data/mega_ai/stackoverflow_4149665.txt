[site]: stackoverflow
[post_id]: 4149665
[parent_id]: 4149374
[tags]: 
Do you want to explicitly state which fields for which your method will check the objects? Or do you want all string properties checked? Or are the properties static and known at compile time? Are the objects all the same type? It could be as simple as a where clause like shown in other answers: var nullPropItems = objectCollection.Where(ob => string.IsNullOrEmpty(ob.Property)); Or it could be as complex as specifying the string property names you want to check and iterating them: public static IEnumerable HasNullStringProperties (this IEnumerable items, params string[] propertyNames) { var properties = items.GetType().GetGenericArguments()[0].GetProperties(); foreach(var item in items) foreach(string propertyName in propertyNames) { var propertyInfo = properties.SingleOrDefault(p => p.Name.Equals(propertyName)); if (null != propertyInfo) { if (string.IsNullOrEmpty(propertyInfo.GetValue(item, null) as string)) yield return item; } } } Callable with something like: var items = objectCollection.HasNullStringProperties("FirstName", "LastName", "OrganizationName"); You could further cut down on the number of properties you check against if you pre-filter for string types. After the GetProperties() add .Where(prop => prop.GetType() == typeof(string));
