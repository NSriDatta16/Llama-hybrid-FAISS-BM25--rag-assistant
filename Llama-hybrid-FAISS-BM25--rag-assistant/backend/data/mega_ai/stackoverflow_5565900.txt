[site]: stackoverflow
[post_id]: 5565900
[parent_id]: 5565746
[tags]: 
The first piece of code that you give is fine. The only problem is there is no solution for x_4 alone. If you replace the last line by Solve[cond] then Mathmatica automagically chooses the free variables and you'll get the solution. I think that a simple/trivial example would make this type problem clear: In[1]:= Solve[x==1&&y==2,x] Solve[x==1&&y==2,{x,y}] Out[1]= {} Out[2]= {{x->1,y->2}} The final output can also be obtained using Solve[x==1&&y==2] , where Mma guesses the free variables. This behaviour differs from that of Mathematica 7. In Mathematica 8 a new option for Solve (and related functions) called MaxExtraCondtions was introduced. This allows Solve to give solutions that use the new ConditionalExpression and is intended to make the behaviour of solve more consistent and predictable. Here's how it works in this simple example: In[3]:= Solve[x==1&&y==2, x, MaxExtraConditions->1] Out[3]= {{x -> ConditionalExpression[1, y==2]}} See the above linked to docs for more examples that show why this Option is useful. (Although maybe defaulting to Automatic instead of 0 would be a more pragmatic design choice for the new option...) Finally, here's your first solution rewritten a little: In[1]:= X=Array[Symbol["x"<>ToString[#]]&,{7}] Out[1]= {x1,x2,x3,x4,x5,x6,x7} In[2]:= cond=Mean[X[[1;;4]]]==5&&Mean[X[[4;;7]]]==8&&Mean[X]==46/7; In[3]:= Solve[cond] x4/.% Out[3]= {{x1->14-x2-x3,x4->6,x5->26-x6-x7}} Out[4]= {6}
