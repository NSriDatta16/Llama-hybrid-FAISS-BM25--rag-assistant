[site]: stackoverflow
[post_id]: 3839512
[parent_id]: 3837865
[tags]: 
that's possible: // Will return a Storage instance with property IsNew = true, if record does not exist // since an object created with new never can be null var storage1 = new Storage(1); // id = 1 var storage1 = new Storage(Storag.Columns.ColumnName, "value"); // Will return 0 if record not found (subsonic3 only) var storage3 = (from s in Storage where s.ColumnName == "value" select s).SingleOrDefault(); // Will throw an exception if record not found (subsonic3 only) var storage3 = (from s in Storage where s.ColumnName == "value" select s).Single(); Since db is a partial class you can extend it. Just create a new File within the same namespace (but another folder in your solution). This applies to subsonic 2 but will be similar to subsonic 3, I think. public static partial class DB { public static T Single (String columName, Object columnValue) where T: RecordBase , new() { return Select().From () .Where(columnName).IsEqualTo(columnValue) .ExecuteSingle (); } }
