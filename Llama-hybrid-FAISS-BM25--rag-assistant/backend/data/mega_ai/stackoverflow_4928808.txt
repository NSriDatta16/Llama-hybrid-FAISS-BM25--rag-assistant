[site]: stackoverflow
[post_id]: 4928808
[parent_id]: 4928640
[tags]: 
We realize the Derby docs state that embedded databases should be used for local persistence only, but can anyone suggest some specific pitfalls we could expect to encounter through this configuration? I'd say that you should pay attention to what the documentation says. The folks who developed Derby are unlikely to give advice that limits Derby's applicability without good cause. (And I can understand why multiple application instances sharing a embedded Derby db would be problematic. Derby would assume that it didn't need to worry about multiple instances reading and updating, and may not flush data in the order needed to allow this to work safely. Such flushing should not be necessary ... unless you are using Derby in a way that you are not supposed to.) Besides, why would you not take the approach of using the Network Server version of Derby?
