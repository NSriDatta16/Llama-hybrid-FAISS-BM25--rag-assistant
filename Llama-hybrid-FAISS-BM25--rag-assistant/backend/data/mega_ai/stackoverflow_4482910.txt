[site]: stackoverflow
[post_id]: 4482910
[parent_id]: 
[tags]: 
Search and merge objects by its parameters

I'm trying to create a method to merge multiple parametrized configuration file sections into one. Each section can have specific section parameters and contains a payload of configuration variables. There is an examples of a few sections: [MySection] foo = defaultbar [MySection|color=red|shape=circle] foo = bar variable = value [MySection|shape=circle] otherfoo = otherbar foo = anotherbar Those sections are represented by following class: class Section(): # All values here are parsed from config file name = "MySection" # This is a section specific parameters params = {'color': 'red', 'share': 'circle', 'weight': 'ton'} # This is section variables payload vars = {'foo': 'bar', 'variable': 'value'} def merge(self, section): """Merges current section vars with vars of given one""" # ...code here... (All parameters and vars are assigned in the runtime, not statically assigned) Section parameters may vary, some may be absent. What I need is an algorithm to select and merge configuration sections(its variable payloads) into one by a specific section parameter values. For example, I have a list of sections: sections[0].params = {'color': 'blue'} sections[1].params = {'shape': 'circle'} sections[2].params = {'color': 'red'} sections[3].params = {'shape': 'circle'} sections[4].params = {'color': 'blue', 'shape': 'circle'} sections[5].params = {'weight': 'ton'} sections[6].params = {'color': 'blue'} sections[7].params = {'color': 'blue', 'shape': 'circle', 'weight': 'ton'} The selection and merging criteria(determined in runtime) is an OrderedDict, for example: criteria = {'color': 'blue', 'shape': 'circle', 'weight': 'ton'} Now I need to search the list of sections to find ones that fulfill this criteria at least partially. Sections which have more parameter matches must be merged later. With given criteria sections will be merged in following order: sections[0] + sections[6] + sections[1] + sections[3] + sections[5] + sections[4] + sections[7] Order of merge is important, with a possible exception for same parameters sections (e.g. 0 and 6, 1 and 3) The generic algorithm is: Search for section that have only the first parameter of criteria and merge them Repeat step 1 for other parameters in criteria Search for section that matches two parameters of criteria... and so on... Is there an quick and elegant way to do this ?
