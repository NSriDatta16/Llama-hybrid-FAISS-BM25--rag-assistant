[site]: stackoverflow
[post_id]: 1260450
[parent_id]: 1137635
[tags]: 
Personal expierience with the RichTextBox learned me that this control might combine Run and Spans if they look alike, meaning you will loose the custom information you tried to set with a TextRange. This happened a lot with overlapping regions of TextRange. So basicly, you cannot use TextRange for this problem. We had similar problems with this control, and we ended up with a little dirty hack actually. Here is what we ended up doing: You can insert InlineUIContainer and BlockUIContainer elements into your FlowDocument. Inside one of those container, you can put any UIElement you wish.. We ended up creating an attached property, and place these gems of information inside Control controls which lived in those UIContainers. If we ever needed the information, we looked up the nearest container element, extract the information, et voila... Its a drag.. I know, but it worked :).. One problem though.. The user can manually remove these containers by hand, simply by pressing the delete button. You can however detect this with the Unloaded events which will be fired when this happens.
