[site]: stackoverflow
[post_id]: 5188725
[parent_id]: 
[tags]: 
Array out of bounds and slow slow app

So below is my code for my controller, which I have four of one for each tab on the tab bar. I have two issues. I am getting an array out bounds but I can't chase it down. Am I missing something here? Second when my app starts up it take 5 - 8 seconds before it loads the first view of the tab bar. Once it loads and I click another tab, the tab doesn't turn blue and the app sits there for 3 seconds then finally switches. I am a noob and am struggling here. I think this issue might be fixed by fetching the data in another thread or something? I am sure this controller is full of bugs. import "AllMackTableViewController.h" import "PostDetailViewController.h" import "MackdabMobileAppDelegate.h" import import "Post.h" define FONT_SIZE 14.0f define CELL_CONTENT_WIDTH 254.0f define CELL_CONTENT_MARGIN 5.0f @implementation AllMackTableViewController @synthesize jsonArray; @synthesize localJsonArray; @synthesize postDetailViewController; @synthesize allPostsTableView; @synthesize fetchedResultsController, managedObjectContext; @synthesize minuteTimer; @synthesize regionsTimer; pragma mark pragma mark View lifecycle (void)viewDidLoad { [super viewDidLoad]; self.title = NSLocalizedString(@"Feed", @"You're Matching Posts"); UIBarButtonItem *refreshButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemRefresh target:self action:@selector(refresh)]; self.navigationItem.rightBarButtonItem = refreshButton; allPostsTableView.delegate = self; [refreshButton release]; [self refresh]; // Uncomment the following line to display an Edit button in the navigation bar for this view controller. // self.navigationItem.rightBarButtonItem = self.editButtonItem; } (void)scrollViewDidScroll:(UIScrollView *) scrollView; { CGFloat scrollHeight = scrollView.contentSize.height; CGPoint p = scrollView.contentOffset; //NSLog(@"x = %f, y = %f", p.x, p.y); } (void)viewWillAppear:(BOOL)animated { /* Set up two timers, one that fires every minute, the other every fifteen minutes. 1/ The time displayed for each time zone must be updated every minute on the minute. 2/ Time zone data is cached. Some time zones are based on 15 minute differences from GMT, so update the cache every 15 minutes, on the "quarter". */ NSTimer *timer; NSDate *date = [NSDate date]; /* Set up a timer to update the table view every minute on the minute so that it shows the current time. */ NSDate *oneMinuteFromNow = [date dateByAddingTimeInterval:60]; NSCalendarUnit unitFlags = NSYearCalendarUnit | NSMonthCalendarUnit | NSDayCalendarUnit | NSHourCalendarUnit | NSMinuteCalendarUnit; NSDateComponents *timerDateComponents = [calendar components:unitFlags fromDate:oneMinuteFromNow]; // Add 1 second to make sure the minute update has passed when the timer fires. [timerDateComponents setSecond:1]; NSDate *minuteTimerDate = [calendar dateFromComponents:timerDateComponents]; timer = [[NSTimer alloc] initWithFireDate:minuteTimerDate interval:60 target:self selector:@selector(updateTime:) userInfo:nil repeats:YES]; [[NSRunLoop currentRunLoop] addTimer:timer forMode:NSDefaultRunLoopMode]; self.minuteTimer = timer; [timer release]; } pragma mark pragma mark Table view data source (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView { // Return the number of sections. return 1; } (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section { // Return the number of rows in the section. // return [self.localJsonArray count]; NSLog(@"Setting numberOfRowsInSection to %i",[self.localJsonArray count]); if ( [jsonArray count]
