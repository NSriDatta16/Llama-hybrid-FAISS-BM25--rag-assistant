[site]: stackoverflow
[post_id]: 1196397
[parent_id]: 
[tags]: 
Eclipse TPTP or other java profiling solutions on OSX. Suggestions welcome

I'm attempting to profile junit tests in eclipse on OSX using TPTP . I installed the TPTP package from eclipse with no problem, I went to profile some code and it tells me: Agent Controller is unavailable under port 10002. Make sure that the service is started and the port number is correct under preferences. I searched around on the internets and discovered many complains about Agent Controller not being available for os X. Almost all of the java developers I know run eclipse under os x. Why would eclipse not support os x? Why even make the TPTP packages available for os x if os x can't run agent controller? Purely for remote debugging purposes? Os X is built on BSD, Linux has an Agent Controller port. Has this been ported to os x? Any ideas or success stories getting TPTP to work on os x (remote debugging on linux, agent controller replacements)? What other options are there (Netbeans, VisualVM, JProfiler) and how good are they? What does stackoverflow suggest I do? Note: I am interested in profiling on class and method, of the number of times each method is called, and the amount of time the program spends in each method. Due to the complexity of the code using System.nanotime() statements are not an option. According to the Eclipse TPTP FAQ What platforms and environments does TPTP support? The user interface components of the TPTP Infrastructure can run on any Eclipse-supported platform. The various test execution, monitoring and tracing components typically run on a broad range of infrastructure and interface with a broad range of systems. One notable deficiency at present is that the various trace facilities are currently Java-specific, although the project has a goal to extend additional language support in due course. For the other agents there is a reasonable coverage implemented or planned for popular operating systems, application servers, web servers etc, with a particular focus on providing support for other open source products. Related Questions: How can I see what parts of my code are running the most Using java to get os level system information if you have a java application that is consuming cpu when it isnt doing anything Related Links: Open Source Profilers for Java
