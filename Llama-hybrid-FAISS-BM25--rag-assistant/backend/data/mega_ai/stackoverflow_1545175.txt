[site]: stackoverflow
[post_id]: 1545175
[parent_id]: 1544861
[tags]: 
It is often useful to be able to breakpoint any specific function call individually, and also any specific setting of a variable to a particular value -- so, perhaps controversially, I would be inclined to go for the first option. This stands a greater chance of allowing fine-grained breakpointing across all debuggers (which in the case of C# is not a very large number). That way, a breakpoint may be set before the call to Foo(), before the call to Bar() (and the set of the variable), and when the variable is set to false -- and obviously the same breakpoints could also be used to trap the Foo() vs !Foo() cases, depending on the question one has in mind. This is not impossible to do when it is all on one line, but it takes attention that could be used to work out the cause of whatever problem is being investigated. (C# compiles quickly, so it is usually not a big problem to rearrange the code, but it is a distraction.)
