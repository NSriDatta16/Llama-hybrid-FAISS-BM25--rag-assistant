[site]: stackoverflow
[post_id]: 5515053
[parent_id]: 
[tags]: 
Is there a way to limit the number of AJAX calls in the browser that remain open?

I have a software design question on what's the best way to handle a client javascript program that relies in multiple (but mostly consecutive, not simultaneous), short-lived AJAX calls to the server as a response to user interaction [in my particular case, it will be a facebook-GAE/J app, but I believe the question is relevant to any client(browser)/server design]. First, I asked this question: What is the life span of an ajax call? . Based on BalusC answer ( I encourage it to read it there ), the short answer is "that's up to the browser". So, right now I do not have really control of what's happening after the server sent the response. If the main use for an AJAX call is to retrieve data just once from the server, is it possible to manually destroy it? Would xhr1.abort() do that? Or, the best choice is leave it like that? Would manually closing each connection (if even possible) add too much overhead to each call? Is it possible to manually set the limit per domain? And last (but not least!), should I really worry about this ? What would be a number of calls large enough to start delaying the browser (specially some IE browsers with the leak bug that BalusC mentioned in the other question? Please, bear in mind that this is my first javascript/java servlets project. Thank you in advance
