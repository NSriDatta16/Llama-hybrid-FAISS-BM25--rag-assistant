[site]: stackoverflow
[post_id]: 2341510
[parent_id]: 2341374
[tags]: 
I prefer the number table approach to split a string in TSQL For this method to work, you need to do this one time table setup: SELECT TOP 10000 IDENTITY(int,1,1) AS Number INTO Numbers FROM sys.objects s1 CROSS JOIN sys.objects s2 ALTER TABLE Numbers ADD CONSTRAINT PK_Numbers PRIMARY KEY CLUSTERED (Number) Once the Numbers table is set up, create this split function: CREATE FUNCTION [dbo].[FN_ListToTable] ( @SplitOn char(1) --REQUIRED, the character to split the @List string on ,@List varchar(8000)--REQUIRED, the list to split apart ) RETURNS TABLE AS RETURN ( ---------------- --SINGLE QUERY-- --this will not return empty rows ---------------- SELECT ListValue FROM (SELECT LTRIM(RTRIM(SUBSTRING(List2, number+1, CHARINDEX(@SplitOn, List2, number+1)-number - 1))) AS ListValue FROM ( SELECT @SplitOn + @List + @SplitOn AS List2 ) AS dt INNER JOIN Numbers n ON n.Number You can now easily split a CSV string into a table and join on it: select * from dbo.FN_ListToTable(',','1,2,3,,,4,5,6777,,,') OUTPUT: ListValue ----------------------- 1 2 3 4 5 6777 (6 row(s) affected) Your can now use a CROSS APPLY to split every row in your table like: DECLARE @YourTable table (NameList varchar(5000), TimeOf int) INSERT INTO @YourTable VALUES ('John Smith, Jeremy Boyle, Robert Brits, George Aldrich', 5) INSERT INTO @YourTable VALUES ('John Smith, Peter Hanson', 15) INSERT INTO @YourTable VALUES ('Jeremy Boyle, Robert Brits', 10) SELECT st.ListValue AS NameOf, SUM(o.TimeOf) AS TimeOf FROM @YourTable o CROSS APPLY dbo.FN_ListToTable(',',o.NameList) AS st GROUP BY st.ListValue ORDER BY st.ListValue OUTPUT: NameOf TimeOf ----------------------- ----------- George Aldrich 5 Jeremy Boyle 15 John Smith 20 Peter Hanson 15 Robert Brits 15 (5 row(s) affected) Using this, I would recommend that you alter your table design and use this output to INSERT into a new table. That would be a more normalized approach. Also Don't use reserved words for column names, it makes it a hassle. Notice how I use "NameOf" and "TimeOf", so I avoid using reserved words.
