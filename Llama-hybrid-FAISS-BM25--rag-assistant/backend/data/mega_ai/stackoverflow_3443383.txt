[site]: stackoverflow
[post_id]: 3443383
[parent_id]: 3443354
[tags]: 
Its not a disadvantage/advantage situation as much as understanding what each can provide and the old saying "use the right tool for the job". Answer from yahoo answers Source for this answer : javaFX is actually a different language (similar, but different syntax), but it runs on a JVM and can use Java classes. Mainly developed for "RIA" (rich Internet applications), across a variety of devices. Quite a few built-in features for developing fancy & flashy user-interfaces, without all the typing one has to do in a more nuts-n-bolts (low-level) language like Java. Really, it's kinda hard to "compare"; JavaFX leverages all the advantages of Java & builds a platform on it for developing RIA's. JavaFX requires a JVM; but just having Java doesn't mean you have JavaFX. thus, JavaFX is not inherently a part of Java. any platform that doesn't support Java would therefore not support JavaFX (....i.e., iPhone, iPad) -- yet. note that the iPhone & iPad also don't support Flash, a similar competitor in this space. (...Perhaps Flex or Silverlight are better examples of competing technologies....) Source(s): Javafx wikiepdia javafx at a glance javafx homepage similar stackoverflow question
