[site]: datascience
[post_id]: 22742
[parent_id]: 
[tags]: 
Dynamic Time Warping Linear Algebra and Pseudocode Explanation

Can someone explain some questions I have about the pseudocode in the Wikipedia article for Dynamic Time Warping ? (I'm talking about the implementation with the window constraint parameter w . On the line DTW[0, 0] := 0 , why are we setting the first element to zero after setting the entire matrix to infinity? I'm sure there's some reason, but I can't figure out why. On the lines initializing the second set of for loops: for i := 1 to n for j := max(1, i-w) to min(m, i+w) why do we skip the first row/column? I get the bounding idea in the inner loop with the window constraint, but from what I understand, in DTW, not using the first column and first row is essential. Why? Within the for loops: cost := d(s[i], t[j]) DTW[i, j] := cost + minimum(DTW[i-1, j ], // insertion DTW[i , j-1], // deletion DTW[i-1, j-1]) // match I understand the cost is the current distance between two elements in the respective time series, but what are we doing when we set DTW[i, j] to cost + minimum(DTW[i-1, j ], // insertion DTW[i , j-1], // deletion DTW[i-1, j-1]) // match I'm not the best at Dynamic Programming, so I don't understand this line as well. Why are each cases considered an insertion, deletion, and a match? Finally, for the last line: return DTW[n, m] Why are we returning the last element? I thought DTW was supposed to return the aligned time series which I figured would be represented by the warping path in the matrix.
