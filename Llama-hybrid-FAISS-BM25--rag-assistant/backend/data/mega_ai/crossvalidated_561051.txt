[site]: crossvalidated
[post_id]: 561051
[parent_id]: 
[tags]: 
PCA: How to get eigenvalues from principal() R function

Given this line of code: pca where x is my already centred data (mood items) and I am performing a PCA using the principal() function in R with an oblimin rotation (nature of the data is multilevel - ESM). I get the following output: Principal Components Analysis Call: principal(r = x, nfactors = 7, rotate = "oblimin") Standardized loadings (pattern matrix) based upon correlation matrix TC1 TC3 TC7 TC4 TC2 TC6 TC5 h2 u2 com animado_cnt 0.96 -0.01 -0.06 0.02 -0.02 0.00 -0.04 0.88 0.11936 1.0 nervioso_cnt 0.00 0.00 -0.01 0.00 1.00 0.00 0.00 1.00 0.00064 1.0 contento_cnt 0.81 0.10 0.07 -0.09 0.00 0.10 -0.03 0.85 0.15419 1.1 triste_cnt 0.00 0.01 0.00 1.00 0.00 0.00 0.00 1.00 0.00172 1.0 energico_cnt 0.63 -0.26 0.21 0.00 0.04 -0.11 0.07 0.77 0.22673 1.7 irritable_cnt -0.01 0.01 -0.01 0.00 0.00 0.01 0.99 1.00 0.00290 1.0 relajado_cnt 0.01 -0.02 0.01 0.00 0.00 0.99 0.00 0.99 0.00727 1.0 cansado_cnt 0.00 0.98 0.01 0.02 0.01 -0.03 0.02 0.98 0.02198 1.0 entusiasmado_cnt 0.00 0.01 0.99 0.00 -0.01 0.01 -0.02 0.99 0.01207 1.0 TC1 TC3 TC7 TC4 TC2 TC6 TC5 SS loadings 2.15 1.09 1.14 1.04 1.01 1.01 1.01 Proportion Var 0.24 0.12 0.13 0.12 0.11 0.11 0.11 Cumulative Var 0.24 0.36 0.49 0.60 0.71 0.83 0.94 Proportion Explained 0.25 0.13 0.13 0.12 0.12 0.12 0.12 Cumulative Proportion 0.25 0.38 0.52 0.64 0.76 0.88 1.00 With component correlations of TC1 TC3 TC7 TC4 TC2 TC6 TC5 TC1 1.00 -0.39 0.67 -0.46 -0.11 0.25 -0.38 TC3 -0.39 1.00 -0.37 0.22 0.01 -0.10 0.22 TC7 0.67 -0.37 1.00 -0.34 -0.06 0.22 -0.30 TC4 -0.46 0.22 -0.34 1.00 0.22 -0.26 0.42 TC2 -0.11 0.01 -0.06 0.22 1.00 -0.41 0.28 TC6 0.25 -0.10 0.22 -0.26 -0.41 1.00 -0.35 TC5 -0.38 0.22 -0.30 0.42 0.28 -0.35 1.00 Mean item complexity = 1.1 Test of the hypothesis that 7 components are sufficient. The root mean square of the residuals (RMSR) is 0.03 with the empirical chi square 147.52 with prob How can I calculate the eigenvalues? According to the R documentation on principal() function, the eigenvalues can be extracted by running: pca$values which results in: [1] 4.0251460 1.4366822 0.7544647 0.7215495 0.5964269 0.5362665 0.3826062 0.3266584 0.2201997 Are those the eigenvalues? I have tried adapting the line of code with the principal function (setting no rotation) and compare it to other PCA functions like prcomp and princomp , but the eigenvalues I obtain are different. For example: pca [1] 4.0251460 1.4366822 0.7544647 0.7215495 0.5964269 0.5362665 0.3826062 0.3266584 0.2201997 pca_2 [1] 10.3433640 4.1025390 2.3719063 1.7041451 1.6689658 1.2126279 1.0276039 0.8733053 0.4886626 Why are the eigenvalues different? Do I need to multiply by a constant? Which one? How can I justify using the function principal that I have taken those factors with an eigenvalue higher than 1 if the eigenvalues differ between methods? This is, if I was using the function principal I would only consider 2 factors, while with the function prcomp I would need 7. Thank you in advance.
