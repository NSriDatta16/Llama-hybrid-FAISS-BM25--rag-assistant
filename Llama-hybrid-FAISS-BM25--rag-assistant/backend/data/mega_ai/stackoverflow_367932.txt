[site]: stackoverflow
[post_id]: 367932
[parent_id]: 365968
[tags]: 
At first I went for BPL and DLL base plugins. And found them hard to mantain. If you use BPL system, then you need to match BPL version with EXE version. This includes Delphi updates which can break something. I found out (the hard way) that if I need to include all my plugins with every release, there is no point in having plugins at all. Then I switched to plain DLL plugins. But that system just complicated code base. And that's not a good thing. While crusing the net I found out Lua embedded script language, and delivered with it. Lua is 150K DLL, embedding bytecode compiler, interpreter and very simple and smart dynamic programing language. My plugins are simple lua scripts. Easily mantaind and made. There are premade Delphi examples, so you can export any class or procedure as Lua table or function. GUI or not. For example I had TurboPower Abbrevia in my app for zipping. I exported my zipping class to lua, and all plugins now can call zip(' . ', 'dir.zip') and unzip(). Then I switched to 7zip and only implemented old class to use 7zip. All plugins work as they did, with support for new zip(' . ', 'dir.7z'). I made TLuaAction which calls Execute(), Update(), Hint() procedure from its script. Lua allso have it's own plugin system that makes it easy to add funcionality to it. Eg luacom make is easy to use COM automation, luainterface allows calling .net from lua. See luaforge for more. There is Lua IDE made in Delphi, with source.
