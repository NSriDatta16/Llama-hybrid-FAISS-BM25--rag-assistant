[site]: stackoverflow
[post_id]: 4608607
[parent_id]: 4608463
[tags]: 
Fundamentally, what's happening is that you're starting an asynchronous network load (asynchronous is the right way to do this, almost assuredly), and then you need some way to resume whatever operation you were doing before the load began. You have a few options: Create your own delegate protocol . Your UITableViewController would then set itself as the helper's delegate, and the helper would call helperDidLoad or whatever you named that method. There's more information on writing delegates in the Cocoa Programming Guide. Use blocks and continuation passing style . This is a bit more advanced but I like it. In your UITableViewController you'd write something like this: [helper doSomething:^ (id loaded) { [modelObject refresh:loaded]; // or whatever you need to do }]; And then in your helper you'd write: - (void)doSomething:(void ^ (id))continuation { _continuation = continuation; //kick off network load } - (void)connectionDidFinishLoading:(NSURLConnection *)connection { _continuation(_data); } Use notifications . Read the NSNotificationCenter docs. Use KVO . The KVO programming guide has a lot of good info on Key-Value Observing.
