[site]: stackoverflow
[post_id]: 3054075
[parent_id]: 3054006
[tags]: 
There may be a more "elegant" way of coding it using First and Last , but the inefficiency makes it not worth it. I coded up my own Join operator for IEnumerable s (from Nito.KitchenSink ). It's fully reusable (in .NET 3.5 or 4.0): /// /// Concatenates a separator between each element of a string enumeration. /// /// The string enumeration. /// The separator string. This may not be null. /// The concatenated string. public static string Join(this IEnumerable source, string separator) { StringBuilder ret = new StringBuilder(); bool first = true; foreach (string str in source) { if (first) { first = false; } else { ret.Append(separator); } ret.Append(str); } return ret.ToString(); } /// /// Concatenates a sequence of strings. /// /// The sequence of strings. /// The concatenated string. public static string Join(this IEnumerable source) { return source.Join(string.Empty); }
