[site]: crossvalidated
[post_id]: 526815
[parent_id]: 
[tags]: 
Find the most similar pairs from two data sets

To cut a long story short, I have two datasets with $n$ data vectors each. Every vector contains a lot of features/variables. I am looking for a method of finding $n$ pairs that contain two data vectors (one data vector from one data set and one vector from the other) in a way that minimize a norm, say L1. So each pair should contain the two most similar - in some sense - vectors, one from each data set. What's more there should be no repetition in pairs, one data vector should be used only once. I was thinking about k-means and hierarchical clustering. But have no idea how to deal with the constraint that I need one vector from one data set and another from a second one. I also had an idea for a brute force approach, first calculate matrix $n$ by $n$ with norms of every possible pair. And then find the minimum sum of those norms, but this approach fails because of its computational complexity. Probably my thinking went in the wrong direction. I guess it is simple if one can find the right approach, that I can't. Edit: To add some context let's say I have two datasets (from two different locations) with features that describe weather in the way that one vector of data contains information (averaged over the day) about a temperature, humidity and so on. I need to find two days which are the most similar to each other from those two locations (data sets), but in the way that if one day from one location has been used it can not be used one more time in another pair.
