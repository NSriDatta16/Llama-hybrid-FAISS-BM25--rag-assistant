[site]: stackoverflow
[post_id]: 4628329
[parent_id]: 4626976
[tags]: 
If I was using SQL Server, Express will be OK, then I would do this: Table with list of questions, flags for type (bit), if required flag (bit), the correct answer if exists, etc Table with list of countries Table linking of countries and questions (some countries may not get some questions Table for answers with columns for the question(s) and a xml column for the optional questions including those which are added If you are not versed in shredding XML then use sparse columns for all the optional questions. I do not recall exactly the limit on the number of sparse columns in a table but I believe it is above 30,000. SQL Server internally stores sparse columns as XML and will shred it when one selects the column and yes it can be indexed The diagram below show a diagram created with SQL Server. the column AL_A4 will hold the answer to QL_Id = 4 and is of type sparse. The QL_Id in the QuestionList table is not flagged required letting you know to make the column in AnswerList sparse. Since countries will add questions create QuestionListCustom, QuestiontoCountryCustom and AnswerListCustom tables and add the information from the custom questions. I am sure there are other ways to design the storage, this is the way I would turn in the homework, if this is not homework then you surely work for the UN.
