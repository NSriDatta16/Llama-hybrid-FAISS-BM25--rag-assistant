[site]: stackoverflow
[post_id]: 418735
[parent_id]: 418707
[tags]: 
Test Case discovery is more of an art than a science. However simple guidelines include: Code that you know to be frail / weak / likely to break Follow the user scenario (what your user will be doing) and see how it will touch your code (often this means Debugging it, other times profiling, and other times it simply means thinking about the scenario) - whatever points in your code get touched by the user, those are the highest priority to write tests against. During your own development the tests you ran that resulted in bugs you found - write tests to avoid the code regressing again with the same behavior. There are several books on how to write test cases out there, but unless you are working in a large organization that requires documented test cases, your best bet is to think of all the parts in your code that you don't like (that aren't "pure") and make sure you can test those modules thoroughly.
