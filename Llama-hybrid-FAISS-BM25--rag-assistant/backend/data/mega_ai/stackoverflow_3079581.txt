[site]: stackoverflow
[post_id]: 3079581
[parent_id]: 3079543
[tags]: 
Since you're evidently not concerned about attaching specific business logic to the getter or setter for this indexed property (like you could do with the default indexer in C# or any property in VB.NET), you need an internal storage mechanism in order to accomplish this. public class ParameterizedProperty { private Dictionary storage = new Dictionary (); public TReturn this[TIndexer index] { get { TReturn output; storage.TryGetValue(index, out output); return output; } set { storage[index] = value; } } } But all this really does is provide you with a construct similar to a Dictionary but doesn't throw an exception when an index isn't present.
