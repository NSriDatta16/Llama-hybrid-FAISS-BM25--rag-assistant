[site]: crossvalidated
[post_id]: 523251
[parent_id]: 
[tags]: 
Does this problem requires Supervised Learning or Unsupervised Learning

I have 50 Features in a Dataset to predict 1 Variable "Units Sold". I am currently using XGBoost model (Supervised Learning) to train all these 50 Features and the accuracy of the model on the test dataset (after dividing the entire dataset in train/test ratio) is very good. But in reality, I can ask for only 3 of the Features (out of 50) from the user. And based on these 3 inputs from the user, I need to Forecast the "Units Sold". Ideally, if I use only these 3 features for training the model, the accuracy falls very low which is why I want to include all these 50 features while training. I am thinking that since number of features Available while doing the forecast are less than the ones used for Training, I should be using Unsupervised Learning or some other approach. That is what I need the guidance on. The list for all the features would be very long but I will mention a few important ones:- Week_End ArticleID Ads_Used (this is a factor of 5 unique values and are used as one-hot-encoding) Units_Lag (Units sold in the previous Week. There are 4 Lags to cover whole month) Units_Percentage_With_Ads (which Ad sold how many Units that week) etc. From the user, I can input only the " Week_End ", " ArticleID " and " Ad_Type ".
