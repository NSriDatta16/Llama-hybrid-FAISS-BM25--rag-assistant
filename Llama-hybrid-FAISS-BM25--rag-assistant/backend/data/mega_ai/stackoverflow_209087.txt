[site]: stackoverflow
[post_id]: 209087
[parent_id]: 209015
[tags]: 
For one, consider the following snippet: /** * Sets the value of foobar. * * @foobar is the new vaue of foobar. */ public void setFoobar(Object foobar) { this.foobar = foobar; } In this example you have 5 lines of comments per 3 lines of code. Even worse - the comments do not add anything which you can't see by reading the code. If you have 10 methods like this, you can get 'comment blindness' and not notice the one method that deviates from the pattern. If course, a better version would have been: /** * The serialization of the foobar object is used to synchronize the qux task. * The default value is unique instance, override if needed. */ public void setFoobar(Object foobar) { this.foobar = foobar; } Still, for trivial code I prefer not having comments. The intent and the overall organization is better explained in a separate document outside of the code.
