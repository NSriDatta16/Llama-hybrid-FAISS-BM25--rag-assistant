[site]: stackoverflow
[post_id]: 4522441
[parent_id]: 4522304
[tags]: 
Persistent values, that functional languages encourage but which can be implemented in an imperative language, make sharing a no-brainer. Although the generally accepted idea is that with a garbage collector, there is some amount of wasted space at any given time (already unreachable but not yet collected blocks), in this context, without a garbage collector, you end up very often copying values that are immutable and could be shared, just because it's too much of a mess to decide who is responsible for freeing the memory after use. These ideas are expanded on a bit in this experience report which does not claim to be an objective study but only anecdotal evidence.
