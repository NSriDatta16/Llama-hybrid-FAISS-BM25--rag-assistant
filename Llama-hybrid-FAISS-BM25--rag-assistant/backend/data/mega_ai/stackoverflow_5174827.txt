[site]: stackoverflow
[post_id]: 5174827
[parent_id]: 5174725
[tags]: 
Java objects in C++ A Java object is the equivalent of a C++ shared pointer. A C++ pointer is like a Java object without the garbage collection built in. C++ objects. C++ has three ways of allocating objects: Static Storage Duration objects. These are created at startup (before main) and die after main exits. There are some technical caveats to that but that is the basics. Automatic Storage Duration objects. These are created when declared and destroyed when they go out of scope. I believe these are like C# structs Dynamic Storage Duration objects These are created via new and the closest to a C#/Java object ( AKA pointers ) Technically pointers need to be destroyed manually via delete . But this is considered bad practice and under normal situations they are put inside Automatic Storage Duration Objects (usually called smart pointers) that control their lifespan. When the smart pointer goes out of scope it is destroyed and its destructor can call delete on the pointer. Smart pointers can be though of as fine grain garbage collectors. The closest to Java is the shared_ptr, this is a smart pointer that keeps a count of the number of users of the pointer and deletes it when nobody is using it.
