[site]: stackoverflow
[post_id]: 1175999
[parent_id]: 1175932
[tags]: 
The model is the representation of your data-storage backend. This can be a database, a file-system, webservices, ... Typically the model performs translation of the relational structures of your database to the object-oriented structure of your application. In the example above: You would have a controller with a register action. The model holds the information the user enters during the registration process and takes care that the data is correctly saved in the data backend. The activation email should be send as a result of a successful save operation by the controller. Pseudo Code: public class RegisterModel { private String username; private String email; // ... } public class RegisterAction extends ApplicationController { public void register(UserData data) { // fill the model RegisterModel model = new RegisterModel(); model.setUsername(data.getUsername()); // fill properties ... // save the model - a DAO approach would be better boolean result = model.save(); if(result) sendActivationEmail(data); } } More info to the MVC concept can be found here :
