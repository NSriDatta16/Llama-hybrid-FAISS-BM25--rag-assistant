[site]: stackoverflow
[post_id]: 4661194
[parent_id]: 4660679
[tags]: 
If I understand the question aright (and apologies if I don't), then: Implement the tableView:heightForRowAtIndexPath: method in your tableView delegate - get it to calculate and return a suitable height for the row; Configure the sizes (or just remove from the superview) the UILabelViews you are adding to the contentView. You do this in tableView:cellForRowAtIndexPath: Make sure you reload the table or, better, reload only the rows that have changed - this forces the tableView to fetch the height again Here's an example of a tableView:heightForRowAtIndexPath method for a single section table that dynamically resizes the height of the cell row depending on how much text there is in the paragraph being displayed. - (CGFloat) tableView: tableView heightForRowAtIndexPath: indexPath; { CGFloat rowHeight = [self rowHeight:[[self paragraphs] objectAtIndex: [indexPath row]]; return (rowHeight + EI_CELL_MARGIN); } And then a fragment from the tableView:cellForRowAtIndexPath: method. NSString* cellText = [[self paragraphs] objectAtIndex: [indexPath row]; [[cell paragraphController] setText: cellText]; [[cell paragraphController] adjustFrameToTextSize]; (As it goes in this code I've subclassed UITableViewCell for convenience. The 'paragraphController' is just a ViewController with a view added to the cell's content view. The adjustFrameToTextSize method resets the view frame depending on the size of the content to display.)
