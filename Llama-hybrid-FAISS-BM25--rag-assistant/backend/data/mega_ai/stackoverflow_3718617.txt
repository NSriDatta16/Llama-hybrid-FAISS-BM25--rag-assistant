[site]: stackoverflow
[post_id]: 3718617
[parent_id]: 3718398
[tags]: 
If writing tests is so painful you feel the need to argue against it I wonder what kind of pain you're going through and why, maybe there is something about how you're testing that is not as effective as it could be. When I've been responsible for building even small projects tests have been a big help. Before I did unit tests I would do things this way: 1) write the code for some part of the application 2) cobble together a custom test harness (most likely, add some public static void main method to a class) 3) fix the code until the test works, manually running the test between fixes 4) move on to the next bit of code and delete or abandon the test And eventually I'd be surprised when stuff broke down the road. So I wrote tests before, just they were crude manual things that weren't reusable and didn't have good coverage, and I ended up throwing them away. Now the main difference in what I do is I write the code in smaller bits, and I keep the tests and can continue running them. And there are a lot less surprises. To me it's not a hindrance, it's a definite improvement.
