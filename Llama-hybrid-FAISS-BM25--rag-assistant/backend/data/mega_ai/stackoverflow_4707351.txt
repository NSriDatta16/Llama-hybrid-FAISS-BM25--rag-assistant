[site]: stackoverflow
[post_id]: 4707351
[parent_id]: 4707078
[tags]: 
You may be overcomplicating this by introducing Product and Type - all you should really need are the Book and Bundle entities, with a many-to-many relationship between them. Then, to deal with the use cases you presented: Marking a bundle or book paid: for a book, simply mark the book paid; for a bundle, mark all its books paid. For data retrieval: To retrieve all non-free or all free books, just get instances of the Book entity with the free attribute set to the appropriate value (or the price value zero or nonzero, depending on how you're storing this attribute) To retrieve all books from a given bundle, just call [bundle books] - the many-to-many relationship gives you this directly To retrieve all books that were bought, just look for books marked paid This way, you can keep your four name attributes on the Book itself and not worry about them (unless you have to name Bundles, but those should be distinct names anyway). Furthermore, it's conceptually simple - you don't have to worry about what precisely constitutes a Product or semantics of that manner.
