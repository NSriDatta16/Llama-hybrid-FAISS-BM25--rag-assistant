[site]: stackoverflow
[post_id]: 5658623
[parent_id]: 5658553
[tags]: 
in Sub sub = new Sub(); Top top = sub; you made an instance of sub, then up casted it to top, which makes it only know about methods that exist in top. the method that exists in top is public String f(Object o) {return "Top";} now also that method is overloaded by sub so it will get called when you make an instance of sub and upcast it to top. another way to put this is that you got sub type as the apparent type, but top as the actual type, because you assigned sub to top. you will call the methods in the apparent type if it overloads the actual type, but you wont be able to call any method that doesnt exist in the actual type
