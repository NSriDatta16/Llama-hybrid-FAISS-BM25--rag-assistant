[site]: stackoverflow
[post_id]: 3801923
[parent_id]: 3801878
[tags]: 
The null pointer does not allocate any extra memory to store anything on the heap (since there is nothing to store). However, your dictionary has to store the null pointer itself, which takes just as much space as any other pointer. Whether every add call results in new allocations (to store the pointer) or not depends on the Dictionary implementation. Usually, it has an internal array which gets re-sized as necessary. In your example, I would assume that enough space for a few elements is already allocated when you create the dictionary. So the add(1, null) will not allocate any more space. Update: The default initial capacity for Dictionary is not specified. In .NET 4.0, it starts out at 0, actually, so the first add will create the storage array.
