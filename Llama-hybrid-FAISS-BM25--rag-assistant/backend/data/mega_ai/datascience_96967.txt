[site]: datascience
[post_id]: 96967
[parent_id]: 96811
[tags]: 
Disadvantage of the matrix factorization how to encode the feature ? should it be binary (present and absent) or rather integer (for example summing up number of signals user have interacted with item_i) unfortunately you can't integrate meta data on your matrix factorization, neither on the item nor on the user the cold start - you don't know how to offer new items or what to offer to new users. So you would have to setup up a bandit model in addition on the other hand, easy to deploy and easily scalable you wont have much challenges when it comes to feature engineering challenges for the multi-class classification: taking care of time in training/evaluating the model: feature engineering is a bit tougher (this is also the case for matrix factorization) but here you also have to make sure, your feature engineering is respecting the time. For example, if you have a feature how many times user_i has purchased item_j , you have to make sure the test labels (buying item j) is not already encoded in the feature set (if you say the user already has purchased item or preferred that price) - otherwise there would be a huge data leak in your model. perhaps in your data you will have rows belong to a single user who has purchased multiple items - so you have to take care of these mixed effects. otherwise you have to somehow make sure your model learns about each individual user (if you want to have an individual-level high-precision recommender)! imagine a user has purchased 25 items before. then you have 25 rows, right ? deployment is gonna be a bit harder as you have to do feature engineering also for upcoming data. hopefully you won't have issue with memory usage but these are serious side effects of models that need feature engineering.
