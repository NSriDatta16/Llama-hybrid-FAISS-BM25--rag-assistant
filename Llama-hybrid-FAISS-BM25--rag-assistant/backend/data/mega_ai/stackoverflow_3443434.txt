[site]: stackoverflow
[post_id]: 3443434
[parent_id]: 
[tags]: 
Appending to a vector while iterating over it?

I have a vector that I am iterating over. While iterating, I may append new values to the vector. It looks something like: struct Foo { bool condition; }; void AppendToVec(vector & v) { ... v.push_back(...); } vector vec; ... for (vector ::size_type i = 0; i This works fine, and in fact elegantly handles the case where the newly appended elements recursively require even more elements to be added, but it feels a little fragile. If someone else comes along and tweaks the loop, it can easily be broken. For example: //No longer iterates over newly appended elements vector ::size_type size = vec.size(); for (vector ::size_type i = 0; i or //Vector resize may invalidate iterators for (vector ::iterator i = vec.begin(); i != vec.end(); ++i) { if (vec->condition) AppendToVec(vec); } Are there any best practices to handle cases like this? Is commenting the loop with a "Warning: This loop is intentionally appends to the vector while iterating. Change cautiously" the best approach? I am open to switching containers too if that makes things more robust.
