[site]: crossvalidated
[post_id]: 320172
[parent_id]: 315778
[tags]: 
First of all, tf.nn.static_rnn documentation states: Returns: A pair (outputs, state) where: outputs is a length T list of outputs (one for each input), or a nested tuple of such elements. state is the final state Like you already said, in your example, there are T=3 cells, i.e., outputs is a list of 3 outputs of each BasicLSTMCell . Now, let's have a look at what tf.contrib.rnn.BasicLSTMCell outputs: Returns: A pair containing: Output: A 2-D tensor with shape [batch_size x self.output_size] . New state: Either a single 2-D tensor, or a tuple of tensors matching the arity and shapes of state. If you look at the classical LSTM picture, it makes perfect sense: When you pass a single sequence $x_t$, the output of each cell is the vector $h_t$, which has the shape (rnn_size,) . Naturally, feeding the mini-batch of length batch_size to the LSTM would produce the mini-batch of outputs, each of (rnn_size,) shape. Hence the result shape (batch_size, rnn_size) .
