[site]: stackoverflow
[post_id]: 207655
[parent_id]: 207631
[tags]: 
I haven't personally encountered anything related to memory management or chipset, but I've seen a LOT of wholly unexpected exceptions flow out of COMesque situations (LDAP as a lousy example, maybe file or database i/o) where you might not declare or feel like you're calling "unsafe" code but nonetheless encounter low-level problems beyond your control that return nothing but obscure error codes... Stack overflows are easy. Nothing in .NET protects against infinite recursion. Sometimes you're in a race as to whether you get a stack overflow first or a value overflow in something you're incrementing as you go, but oh, it can happen if you're not paying attention to your exit conditions! Other than some pretty wild special case of which I can't even conceive, I don't think it's possible or at least very likely that you'll ever run into most of the low level errors that you deal with as a matter of course in C++. Most .NET memory leaks occur when someone is messing with garbage disposal manually and not understanding how the .NET garbage collection system works. But you have to be careful about anything that uses external resources. However, anything I can think of either implements IDisposable or requires the unsafe keyword.
