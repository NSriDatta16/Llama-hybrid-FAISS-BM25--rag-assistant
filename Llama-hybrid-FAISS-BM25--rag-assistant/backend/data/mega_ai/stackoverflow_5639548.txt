[site]: stackoverflow
[post_id]: 5639548
[parent_id]: 
[tags]: 
Java Sockets - ArrayList loses information when I send over the connection

I am having an issue sending some data over a socket, everything works great until I try to send an class that contains: int playerId int command int[] playerLocations The data is received without any errors and command & playerID are retained fine. However the int[] is the right size but the values are always reset to 0 for some reason, and I cant see why. I have tried using an ArrayList also but the same problem occurs. Server code for this part, the final for loop is the important part: //now loop taking in turns while (true) { //first we get the player who's turn it is, and the corresponding thread for their client int playerTurn = game.getTurnNow(); ClientThreadOnServer AciveClient = clientThreads.get(playerTurn); //then we send them a message saying it is their go try { AciveClient.out.writeObject(new TransferObject(playerTurn, 2, null)); //we wait for them to click roll dice TransferObject reply = (TransferObject) AciveClient.in.readObject(); //get the command back to roll the dice int command = reply.getCommand(); int sender = reply.getPlayerId(); // then make a move if (command == 2 && sender == game.getTurnNow()) { synchronized (this) { //synchronised to preven concurrent modification System.out.println("command == 2"); game.rollDice(); game.takeGo(); } } //then send the updated game information to everyone for (int i = 0; i where the system.out is "server says:" the correct value is printed, and when i debug the correct values can be seen in the variables section. Here is the object being sent: import java.io.Serializable; public class TransferObject implements Serializable { private int playerId; //to be sent in forst data send to tell client which player they are private int turnNow; // ID of who's go it is now private int command; //0 = initialise, 1=game update, 2=roll, 3=end game private int[] playerLoc; public TransferObject(int playerId, int command, int[] playerLoc) { this.playerId = playerId; this.command = command; this.playerLoc = playerLoc; } public int getCommand() { return command; } public int getPlayerId() { return playerId; } public int getTurnNow() { return turnNow; } public int[] getPlayerLoc() { return playerLoc; } } and the client receiving section, command 1 is the bit that should print out the correct data but just prints "...on square 0" while (true) { try { int command = -1; //reset command to something not used in order to prevent confusion TransferObject transObj = (TransferObject) in.readObject(); command = transObj.getCommand(); if (command == 0) {//initialisation playerId = transObj.getPlayerId(); } else if (command == 1) {//gui update for (int i = 0; i Sorry there is so much code here, hopefully somebody can make sense of it. If you need any more info let me know.
