[site]: stackoverflow
[post_id]: 3672471
[parent_id]: 3665132
[tags]: 
They are largely different and have a common conceptual basis for using the name 'Atom' Atom in Common lisp refers to the idea of an indivisable thing like the origional meaning of an atom of matter. Atom in clojure refers to a specific mutable data structure that changes 'atomically' that is a write to it either completes or it does not (and is subsequently retried) the common idea is the indivisible concept. in CL its what the thing is and in Clojure its how the thing changes. In Clojure Atoms are used when you need blocking mutable data that is not coordinated. for instance a single userId counter or something. Clojure also has coordinated mutable access in Refs (think bank account transfers) and atomic uncoordinated non-blocking mutable things in Agents (think log collectors for example).
