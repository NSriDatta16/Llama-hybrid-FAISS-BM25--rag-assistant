[site]: stackoverflow
[post_id]: 1705710
[parent_id]: 1698794
[tags]: 
ObjectListView supports copying and dragging rows from a ListView to other applications, in both text and HTML versions. To do that, it does something like this: DataObject dataObject = new DataObject(); this.CreateTextFormats(dataObject); Clipboard.SetDataObject(dataObject); To do drag and drop, the code is virtually the same: DataObject dataObject = new DataObject(); this.CreateTextFormats(dataObject); DragDropEffects effect = this.DoDragDrop(dataObject, DragDropEffects.All); CreateTextFormats() is not complicated: public void CreateTextFormats(DataObject do) { string textVersion; string htmlVersion; // Do the work of making the tab-separated text version and the HTML code do.SetData(textVersion); do.SetText(ConvertToHtmlFragment(htmlVersion), TextDataFormat.Html); } Getting the HTML format right took longer: /// /// Convert the fragment of HTML into the Clipboards HTML format. /// /// The HTML format is found here http://msdn2.microsoft.com/en-us/library/aa767917.aspx /// /// The HTML to put onto the clipboard. It must be valid HTML! /// A string that can be put onto the clipboard and will be recognized as HTML private string ConvertToHtmlFragment(string fragment) { // Minimal implementation of HTML clipboard format string source = "http://www.codeproject.com/KB/list/ObjectListView.aspx"; const String MARKER_BLOCK = "Version:1.0\r\n" + "StartHTML:{0,8}\r\n" + "EndHTML:{1,8}\r\n" + "StartFragment:{2,8}\r\n" + "EndFragment:{3,8}\r\n" + "StartSelection:{2,8}\r\n" + "EndSelection:{3,8}\r\n" + "SourceURL:{4}\r\n" + "{5}"; int prefixLength = String.Format(MARKER_BLOCK, 0, 0, 0, 0, source, "").Length; const String DEFAULT_HTML_BODY = " " + " {0} "; string html = String.Format(DEFAULT_HTML_BODY, fragment); int startFragment = prefixLength + html.IndexOf(fragment); int endFragment = startFragment + fragment.Length; return String.Format(MARKER_BLOCK, prefixLength, prefixLength + html.Length, startFragment, endFragment, source, html); }
