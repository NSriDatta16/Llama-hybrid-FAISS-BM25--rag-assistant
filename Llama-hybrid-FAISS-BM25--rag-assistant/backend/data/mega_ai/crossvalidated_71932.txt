[site]: crossvalidated
[post_id]: 71932
[parent_id]: 71929
[tags]: 
Gelman has good advice for setting priors for variance parameters in Bayesian models. There is too much structure in this model for the data you are trying to fit. In particular, it is not clear why you are modeling mu, rather than just putting a prior on it. The way you have it set up, you are claiming that mu is sampled from another normal with unknown parameters, which is not supported by your data. Also, the standard deviation (not the variance) should be modeled as a uniform for it to be diffuse. The following code produces good estimates of the true parameters of the model: from __future__ import division import pymc as mc from pylab import * # create test data N = 50 mu = 5 data = randn(N) + mu # start PyMC variables mu_0 = mc.Uniform(' $\mu_0$ ', 0, 10) sigma_0 = mc.Uniform(' $\sigma_0$ ', 0, 2) data = mc.Normal('data', mu_0, sigma_0**-2, observed=True, value=data) # sample mcmc = mc.MCMC([data, mu_0, sigma_0]) mcmc.sample(iter=50000, burn=5000) # plot figure() for i, v in enumerate((' $\mu_0$ ', ' $\sigma_0$ ')): x = mcmc.trace(v)[:].reshape(-1) subplot(1, 2, i+1) hist(x, 50) title(v)
