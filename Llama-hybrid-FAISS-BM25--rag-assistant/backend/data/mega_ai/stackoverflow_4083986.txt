[site]: stackoverflow
[post_id]: 4083986
[parent_id]: 4083834
[tags]: 
I think of shell scripts as shortcuts. They are something that you do often enough that having to type out the commands every time is a waste of time. Even short little scripts that prevent you from having to remember long argument lists can be useful if you have to call them more than a few times. For instance, I often have to do passive monitor mode wireless sniffing through airodump-ng. To that end, I threw this together quickly: #!/bin/bash # Make sure we're running as root if [[ $EUID -ne 0 ]] then echo "This script must be run as root" 1>&2 exit 1 fi # Make sure there is an argument 1 if [[ $# -ne 1 ]] then echo "Usage: `basename $0` " exit 65 fi # Set up the monitor interface airmon-ng start wlan0 # Start Sniffing with the prefix $1 airodump-ng -w $1 -t OPN --output-format pcap mon0 # Tear down the monitor interface airmon-ng stop mon0 Though it should be noted that as a shell script increases in complexity, you should probably begin to consider rewriting it in a more robust language. This should be done before that simple shell script becomes some mission critical monster that is unmanageable and filled with bugs, but which everything depends on.
