[site]: stackoverflow
[post_id]: 5431712
[parent_id]: 5431491
[tags]: 
Quatree matrices (the code used in the paper is there ) have reasonably good insertion and access complexities, and reasonably good performance. There are specific algorithms for them (mostly in form of research papers). However they are not really widespread. But they do deserve more love. If you intend to solve systems, a decomposition well suited to quadtree matrices is explained there . If your matrix will be constructed at once, and you don't need to add/remove elements after it is constructed, then Compressed Row Storage (or compressed column storage) is widespread and efficient, and there are libraries and specific algorithms for dealing with them. After all, you did not tell us what you want to do with your matrices.
