[site]: datascience
[post_id]: 104520
[parent_id]: 
[tags]: 
K-Fold cross validating with random forest - how to correctly fit model to every fold?

So I have created K-Folds from my data using this code: X = rfedata.drop(['target'],axis=1) Y = rfedata['target'] kf = KFold(n_splits=10) KFold(n_splits=10, random_state=None, shuffle=False) for train_index, test_index in kf.split(X): print("TRAIN:", train_index, "TEST:", test_index) X_train, X_test = X.take(list(train_index),axis=0), X.take(list(test_index),axis=0) y_train, y_test = Y.take(list(train_index),axis=0), Y.take(list(test_index),axis=0) Now I would like to train my model. By doing the below, does the model get trained on every fold, or is it just 1 fold? If not, would you have an idea of how to train 1 model on every fold? model9 = RandomForestRegressor() model9.fit(X_train, y_train)
