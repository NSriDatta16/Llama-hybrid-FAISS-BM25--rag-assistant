[site]: stackoverflow
[post_id]: 1543809
[parent_id]: 1543736
[tags]: 
EDIT: You may think that it's that easy: #ifdef macro #define DISABLED_macro macro #undef macro #endif // do what you want with macro #ifdef DISABLED_macro #define macro DISABLED_macro #endif But it's not (like the following example demonstrates)! #include #include #include #ifdef max #define DISABLED_max max #undef max #endif int main() { std::cout ::max() Using #undef on the macro and re-including the original header is also not likely to work, because of the header guards. So what's left is using the push_macro/pop_macro #pragma directives. #pragma push_macro("MACRO") #undef MACRO // do what you want #pragma pop_macro("MACRO")
