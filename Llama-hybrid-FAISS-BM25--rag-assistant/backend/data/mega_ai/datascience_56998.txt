[site]: datascience
[post_id]: 56998
[parent_id]: 23591
[tags]: 
You already know to which cluster each person belongs, so you need to run a clustering algorithm that makes this prediction for you. Your question is about data exploration: You're trying to understand your data. Your actual problem is a supervised (multi-class) classification problem, and clustering algorithms are not suited for that, because they are unsupervised. I would recommend to do two things: First, reduce the dimensionality to be able to visualize. Second, calculate metrics on the original high-dimensional dataset to gain more understanding. To visualize the data, I recommend to use t-SNE to visualize in two dimensions and color with the ethnic group . This will give you an idea if your data forms clusters in the 10k-dimensional space. Then, if you want to improve your feeling or intuition about your data further, by thinking about it in terms of clusters in the 10k-dimensional space, then you can calculate cluster metrics such as the Silhouette score , cluster compactness (average distance to the centre), or display the distance between clusters in a heatmap . You can merge two clusters by giving them the same label, and see how your results change. I can't anticipate the results that you may get, so it could be very enlightening, meaning that you can tell that certain clusters are very compact, others very extensive, some are very similar to others and so on. But perhaps, using the above methods, you cannot make sense of your data at all. If that happens, then I would say it's time to stop thinking about your data as points in "gene space", with differences between people indicating a "distance", etc. In this case, it can be that the mapping from genes to ethnic grouping is more complex (non-linear) than a spatial clustering, so you need to use a classification algorithm that is capable of encoding this non-linearity. Deep learning doesn't have many prerequisites but one of them is that it can only encode continuous functions. Neural networks also require numerical, real-valued input features. Since your problem has binary data and there is no reason to think that the gene to ethnicity mapping is a smooth function, perhaps algorithms based on decision trees are a good place to start. Good luck! :-)
