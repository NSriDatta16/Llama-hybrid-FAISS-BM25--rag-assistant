[site]: stackoverflow
[post_id]: 4111290
[parent_id]: 4111207
[tags]: 
Similar to Aaron's answer >>> from collections import defaultdict >>> x = [(1,2), (3,4), (7,4), (5,4)] >>> d = defaultdict(int) >>> for v,k in x: ... d[k] = max(d[k],v) ... >>> y=[(k,v) for v,k in d.items()] >>> y [(1, 2), (7, 4)] note that the order is not preserved with this method. To preserve the order use this instead >>> y = [(k,v) for k,v in x if d[v]==k] >>> y [(1, 2), (7, 4)] here is another way. It uses more storage, but has less calls to max, so it may be faster >>> d = defaultdict(list) >>> for k,v in x: ... d[v].append(k) ... >>> y = [(max(k),v) for v,k in d.items()] >>> y [(1, 2), (7, 4)] Again, a simple modification preserves the order >>> y = [(k,v) for k,v in x if max(d[v])==k] >>> y [(1, 2), (7, 4)]
