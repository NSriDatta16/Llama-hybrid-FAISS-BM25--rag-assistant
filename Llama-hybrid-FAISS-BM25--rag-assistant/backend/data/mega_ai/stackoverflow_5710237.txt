[site]: stackoverflow
[post_id]: 5710237
[parent_id]: 5710099
[tags]: 
HouseSurvey$SurveyResults.access$200() is a synthetic accessor method that the compiler generates and inserts into the inner class to allow the enclosing class (here, HouseSurvey ) to call a private method of the inner class. I admit I'm not yet seeing where the NullPointerException is coming from, though. Also, have you decided whether or not Household and SurveyResults should be inner classes (as they currently are) rather than static nested classes and does making them static nested classes change what happens? This SO question on inner vs. static nested classes might help you make that decision. Update: I tried making this into a standalone class (only showing changes I made): public class HouseSurvey { public static void main(String[] args) { HouseSurvey h = new HouseSurvey(); h.doPost(args); } public void doPost(String[] data) throws Exception { PrintWriter out = new PrintWriter(System.out); File survey = new File(SURVEY_FILE); if (!survey.exists()) { results = new SurveyResults(); } else { ObjectInputStream ips = new ObjectInputStream(new FileInputStream(survey)); results = (SurveyResults) ips.readObject(); ips.close(); } int ageValue = Integer.parseInt(data[0]); int childValue = Integer.parseInt(data[1]); double incomeValue = Double.parseDouble(data[2]); boolean marriedValue = Boolean.parseBoolean(data[3]); Household h = new Household(ageValue, childValue, incomeValue, marriedValue); results.totalResults(h); ObjectOutputStream ops = new ObjectOutputStream(new FileOutputStream(survey)); ops.writeObject(results); ops.flush(); ops.close(); out.println("Average Age: " + form.format(results.getAvgAge()) + "\nAverage # of Children: " + form.format(results.getAvgKids()) + "\nAverage # of Married Respondents: " + form.format(results.getTotalMarried()) + "\nAverage # of Single Respondents: " + form.format(results.getTotalSingle()) + "\nAverage Income: " + form.format(results.getAvgIncome())); out.flush(); out.close(); } [snip] } When I ran this I got the following exception trace: Exception in thread "main" java.io.NotSerializableException: HouseSurvey at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1164) at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483) at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) at HouseSurvey.doPost(HouseSurvey.java:36) at HouseSurvey.main(HouseSurvey.java:9) which while it isn't the NullPointerException you got, it does demonstrate that there's a serialization issue that Sean alludes to is his answers. Once I change Household and SurveyResults to be static nested classes instead of inner classes, the exception went away and the program appears to work correctly.
