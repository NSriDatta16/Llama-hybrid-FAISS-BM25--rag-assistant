[site]: stackoverflow
[post_id]: 141588
[parent_id]: 141513
[tags]: 
I just user print_r, along with a couple of wrapper functions to store the various DebugPrint I put in my code and one on the footer to dump the stack in the page (or in a file). I now try to use XDebug too... :-D OK, for the record, I give my little functions... // Primitive debug message storage // $level = "Info", "Warn", "Error", "Title" function DebugPrint($toDump, $level = "Info") { global $debugMode, $debugDump, $debugCount; if ($debugMode != 'N') { $debugDump[$debugCount++] = " " . $toDump . " \n"; } } // Initialize debug information collection $debugMode = 'N'; // N=no, desactivated, P=dump to Web page, F=dump to file $debugSavePath = 'C:\www\App\log_debug.txt'; // If mode F $debugDump = array(); $debugCount = 0; // Primitive debug message dump function DebugDump() { global $debugMode, $debugSavePath, $debugDump, $debugCount; if ($debugMode == 'F') { $fp = fopen($debugSavePath, "a"); #open for writing } if ($debugCount > 0) { switch ($debugMode) { case 'P': echo ' Debug: '; for ($i = 0; $i '; break; case 'F': for ($i = 0; $i \n"; } } if ($fp != null) { fputs($fp, "-----\n"); fclose($fp); } } // Pre array dump function DebugArrayPrint($array) { global $debugMode; if ($debugMode != 'N') { return " " . print_r($array, true) . " "; } else return ""; // Gain some microseconds... } The interest is to delay the output to the end of the page, avoiding to clutter the real page.
