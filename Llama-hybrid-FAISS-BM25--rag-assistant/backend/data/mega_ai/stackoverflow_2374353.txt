[site]: stackoverflow
[post_id]: 2374353
[parent_id]: 2373224
[tags]: 
There might be a more elegant solution for this, but you could always handle the PreviewKeyDown event at the Window level, and pass focus to the TextBox if it doesn't already have it, instead of preventing it from losing focus in the first place. That way, the ListBox can use focus as is normal, but as soon as a key is pressed focus jumps right to the TextBox. In addition, you can filter out keys that you don't want to switch focus - the arrow keys come to mind, which could then be used to move up and down in the ListBox. Adding an event handler like the following should do the trick: private void Window_PreviewKeyDown(object sender, KeyEventArgs e) { if (!textBox.IsFocused) { textBox.Focus(); } }
