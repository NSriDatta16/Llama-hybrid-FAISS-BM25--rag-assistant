[site]: stackoverflow
[post_id]: 4138858
[parent_id]: 4138544
[tags]: 
Yes, use backquotes not system if you want to parse the output. my $cmd = "$plink -batch -pw $esx_password $esx_user\@$esx_host " . "vim-cmdvmsvc/getallvms" ; my @lines = `$cmd`; system will just use your standard out. Not sure why you were escaping the dashes, though... Once you have the output, you can do the following (note that I leveraged the fixed-length fields look): foreach ( @line ) { # this is the get-it-and-do-something-else-with-it version my ( $vmid, $name, $file ) = substr( $_, 0, 47 ) =~ m/^ ( \d+ ) \s+ ( \S+ ) \s+ (.*\S) \s* $/x ; # OR the store-it-in-an-array-of-hashes version: @{ my $h = {}}{ qw } = substr( $_, 0, 47 ) =~ m/^ ( \d+ ) \s+ ( \S+ ) \s+ (.*\S) \s* $/x ; push @array, $h if %$h; }
