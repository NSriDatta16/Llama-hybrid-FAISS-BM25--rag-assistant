[site]: crossvalidated
[post_id]: 187692
[parent_id]: 156550
[tags]: 
The theory behinds Markov Chain Monte Carlo (the family of algorithms that includes the Metropolis algorithm as a special case) guarantees that (under certain conditions) Metropolis will give you the right answer. The acceptance rate is related only to the number of steps you will need to find the correct answer (with a certain level of precision). If the acceptance rate is too low or too high it will take longer time, but eventually you will get the correct answer. The intuition is as follows; you will get high acceptance when you make small movements not too far away of your current position, but if you move slowly it will take a lot of time to sample all the distribution. On the contrary, if you try to make larger movements chances are high you propose movements to regions of low probability and then you will get a lot of rejections. So in practice even when you will "eventually" get the right answer is a good idea to tune the acceptance rate to provide better performance in this paper by Gelman they provide evidence that a acceptance rate of ~0.23 is optimal. PyMC3 has an option to tune a Metropolis algorithm based on monitoring the acceptance rate .
