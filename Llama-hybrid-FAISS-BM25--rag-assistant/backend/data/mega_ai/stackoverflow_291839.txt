[site]: stackoverflow
[post_id]: 291839
[parent_id]: 290035
[tags]: 
I do not know whether the WebBrowser .NET control supports this, but RFC2397 defines how to use inline images. Using this and a XHTML snippet created on-the-fly, you could possibly assign the image without the need to write it to a file. Image someImage = Image.FromFile("mypic.jpg"); // Firstly, get the image as a base64 encoded string ImageConverter imageConverter = new ImageConverter(); byte[] buffer = (byte[])imageConverter.ConvertTo(someImage, typeof(byte[])); string base64 = Convert.ToBase64String(buffer, Base64FormattingOptions.InsertLineBreaks); // Then, dynamically create some XHTML for this (as this is just a sample, minimalistic XHTML :D) string html = " "; // And put it into some stream using (StreamWriter streamWriter = new StreamWriter(new MemoryStream())) { streamWriter.Write(html); streamWriter.Flush(); webBrowser.DocumentStream = streamWriter.BaseStream; webBrowser.DocumentType = "text/html"; } No idea whether this solution is elegant, but I guess it is not. My excuse for not being sure is that it is late at night. :) References: RFC2397 Image to base64 encoded string
