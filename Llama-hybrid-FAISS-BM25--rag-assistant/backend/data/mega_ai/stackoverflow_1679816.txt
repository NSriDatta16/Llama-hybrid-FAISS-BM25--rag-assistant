[site]: stackoverflow
[post_id]: 1679816
[parent_id]: 1679753
[tags]: 
I wouldn't say that it's pain raither common sense. When you noramlize something, you actually just see to it that you wont have redundant data, which should be quite obvious why that's bad. Now, if you have no idea what Noramlization is, check this Wikipedia Entry . When designing your data-structure you will soon see that a lot of things might repeate themselves and if so, you can always extract that and make an abstraction in your model. And hand-in-hand with that you get foreign keys, candidate keys, primary keys and indexes which will help you speed up searches and make it easier for all of us. However, there are times when people tend to "over"-noramlzie, but that might not be so bad. Power to the noramlization! Normalization overview First Normal Form (1NF) First normal form (1NF) sets the very basic rules for an organized database: Eliminate duplicative columns from the same table. Create separate tables for each group of related data and identify each row with a unique column or set of columns (the primary key). Second Normal Form (2NF) Second normal form (2NF) further addresses the concept of removing duplicative data: Meet all the requirements of the first normal form. Remove subsets of data that apply to multiple rows of a table and place them in separate tables. Create relationships between these new tables and their predecessors through the use of foreign keys. Third Normal Form (3NF) Third normal form (3NF) goes one large step further: Meet all the requirements of the second normal form. Remove columns that are not dependent upon the primary key. Fourth Normal Form (4NF) Finally, fourth normal form (4NF) has one additional requirement: Meet all the requirements of the third normal form. A relation is in 4NF if it has no multi-valued dependencies. Quote taken from this article .
