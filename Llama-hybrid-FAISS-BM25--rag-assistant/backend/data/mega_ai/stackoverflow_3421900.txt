[site]: stackoverflow
[post_id]: 3421900
[parent_id]: 3420948
[tags]: 
Our DMS Software Reengineering Toolkit is commercially available, general purpose machinery for parsing/analyzing/transforming source code for many languages, including C, C++, C#, Java, COBOL, ... It uses explicit langauge definitions (e.g., BNF) to drive parsing machinery to build ASTs directly; DMS supports multiple dialects for some languages. There are built in analyzers to support symbol table construction, control and data flow anlaysis, points-to analysis, symbolic range analysis ... For C, Java and COBOL, the built-in analysis machinery is tied to the language definitions so that you can use these analyzers as a foundation for a custom analysis you might want to build. C++ does have the symbol tables but isn't yet tied to the other internal analyzers, but the machinery is there. DMS also provides procedural and source-to-source transformations, conditioned by analysis results, on top of all of this; the modified ASTs can be prettyprinted to regenerate compilable source complete with the original comments. Your three questions: 1.What static analysis API's do you use? DMS + the APIs I've described above. You can use the transformational aspect to get dynamic analysis. 2.Why do you use it? Mostly to support custom tool construction. Its amazing how many different questions people have about code, and how many ways they want to reshape a large application. 3.Name one thing you have written with it? B-2 Stealth Bomber JOVIAL-to-C translator (seriously, see website). IBM Mainframe application architecture extraction. Automated C++ component restructuring. Clone Detection. Test Coverage and Profilers Smart Differencer (See website for longer more detailed list)
