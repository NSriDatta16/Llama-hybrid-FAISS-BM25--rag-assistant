[site]: stackoverflow
[post_id]: 2043747
[parent_id]: 2043546
[tags]: 
For a small number of rules and messages you can apply a brute force algorithm: take each rule and each message and compare if they fit. You will get to an O(r m ) complexity where r is the number of rules and m is the number of message, not taking in consideration that a rule can have multiple conditions. For a huge number of rules or messages you can implement a Rete network ( http://en.wikipedia.org/wiki/Rete_algorithm ). This takes some memory but is much much faster in practice. Depending on the way you design your rules you will get different complexities. The first approach is simple and I don't think I need to explain it. However if you need help let me know and I will detail that idea. Let me explain the second approach: Read a little about Rete algorithm before going further. In the alpha part of the Rete network you will store distinct conditions that appear in your rules. Some rules might share some conditions. Like: Rule1 : IF (message.date equals 24.10.2009) AND (message.title contains "hello") THEN do something1 Rule2 : IF (message.hasAttachement is TRUE) AND (message.date equals 24.10.2009) THEN do something2 So the Alpha part of the network will have 3 elements C1: (message.date equals 24.10.2009) C2: (message.title contains "hello") C3: (message.hasAttachement is TRUE) In the Beta net you will have two join node that link C1-C2 and C3-C1. The production nodes that end the beta network will contain the series of actions that must be performed when a message satisfies all the conditions of the rule (in the alpha part) and all the consistency checks (in the beta part). The most complicated part is the beta network. If you want just the logical AND in your rules (no other logical op or parenthesis) then is trivial. However if you want more complicated constructs then you'll have to write a lot of code and do a lot of tests. For more info about Rete: Production matching for large learning systems /--Robert B. Doorenbos. (1995) On the Efficient Implementation of Production Systems /-- Charles L. Forgy (1979)
