[site]: datascience
[post_id]: 48037
[parent_id]: 
[tags]: 
CNN reshape problem

I am new to CNN and i want to use it for Modulation classification I found this code and I want to replicate it as it is exept that i only used the digital modulations and some SNR (signal-Noise Ratio) levels import os import theano as th import theano.tensor as T os.environ["KERAS_BACKEND"] = "theano" #os.environ["KERAS_BACKEND"] = "tensorflow" os.environ["THEANO_FLAGS"] = "device=gpu%d"%(1) import numpy as np import keras.models as models from keras.layers.core import Reshape,Dense,Dropout,Activation,Flatten from keras.layers.convolutional import Convolution2D, ZeroPadding2D, Conv2D import pickle, keras full_dataset = pickle.load(open("RML2016.10a.pkl",'rb'),encoding='latin1') snrs,mods = map(lambda j: sorted(list(set(map(lambda x: x[j], full_dataset.keys())))), [1,0]) digital_mods = ['8PSK', 'BPSK', 'CPFSK', 'GFSK', 'PAM4', 'QAM16', 'QAM64', 'QPSK'] snr_levels = [-16, -12, -8, -4, 0, 4, 8, 12, 16] X = [] lbl = [] for mod in digital_mods: for snr in snr_levels: X.append(full_dataset[(mod,snr)]) for i in range(full_dataset[(mod,snr)].shape[0]): lbl.append((mod,snr)) X = np.vstack(X) np.random.seed(2016) n_examples = X.shape[0] n_train = int(n_examples * 0.5) train_idx = np.random.choice(range(0,n_examples), size=n_train, replace=False) test_idx = list(set(range(0,n_examples))-set(train_idx)) X_train = X[train_idx] X_test = X[test_idx] def to_onehot(yy): yy1 = np.zeros([len(yy), max(yy)+1]) yy1[np.arange(len(yy)),yy] = 1 return yy1 Y_train = to_onehot(list(map(lambda x: mods.index(lbl[x][0]), train_idx))) Y_test = to_onehot(list(map(lambda x: mods.index(lbl[x][0]), test_idx))) in_shp = list(X_train.shape[1:]) classes = digital_mods nb_epoch = 100 # number of epochs to train on batch_size = 1024 dr = 0.5 model = models.Sequential() model.add(Reshape(in_shp+[1], input_shape=in_shp)) model.add(ZeroPadding2D((0,2))) model.add(Conv2D(64, (1,4), activation="relu")) model.add(Dropout(dr)) model.add(ZeroPadding2D((0,2))) model.add(Conv2D(64, (2,4), activation="relu")) model.add(Dropout(dr)) model.add(Conv2D(128, (1,8), activation="relu")) model.add(Dropout(dr)) model.add(Conv2D(128, (1,8), activation="relu")) model.add(Dropout(dr)) model.add(Flatten()) model.add(Dense(256, activation='relu')) model.add(Dropout(dr)) model.add(Dense(len(classes), activation='softmax')) model.add(Reshape([len(classes)])) model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy']) model.summary() filepath = 'weight_4layers.wts.h5' history = model.fit(X_train, Y_train, batch_size=batch_size, nb_epoch=nb_epoch, verbose=1, validation_data=(X_test, Y_test), callbacks = [ keras.callbacks.ModelCheckpoint(filepath, monitor='val_loss', verbose=0, save_best_only=True, mode='auto'), keras.callbacks.EarlyStopping(monitor='val_loss', patience=5, verbose=0, mode='auto') ]) please note the following: I have 8 modulation types and 9 SNR levels = 72 pairs [mod,snr] each paire is composed of 1000 array of [2, 128] (complex values of radio signal) X train has the shape (36000, 2, 128) in_shape has the shape (2, 128) So when i run my program I get the following error: Traceback (most recent call last): File "/home/nechi/PycharmProjects/AMC/cnn.py", line 88, in keras.callbacks.EarlyStopping(monitor='val_loss', patience=5, verbose=0, mode='auto') File "/usr/local/lib/python3.6/dist-packages/keras/engine/training.py", line 952, in fit batch_size=batch_size) File "/usr/local/lib/python3.6/dist-packages/keras/engine/training.py", line 789, in _standardize_user_data exception_prefix='target') File "/usr/local/lib/python3.6/dist-packages/keras/engine/training_utils.py", line 138, in standardize_input_data str(data_shape)) ValueError: Error when checking target: expected reshape_2 to have shape (8,) but got array with shape (10,)
