[site]: crossvalidated
[post_id]: 204917
[parent_id]: 
[tags]: 
How to combine Euclidean and Cosine distance?

EDIT (No duplicate of Converting similarity matrix to (euclidean) distance matrix ): This question is centered on asking how to combine values from Euclidean and Cosine distances obtained from not-normalized vectors. Being not normalized the distances are not equivalent, as clarified by @ttnphns in comments below. Also I have cosine distance (1- similarity), not cosine similarity. Short question : How can I combine Euclidean and Cosine/Angular distances between multivariate vectors successfully? Are there special considerations regarding to the objective of the comparison? (for example: to take more into consideration magnitude over orientation) Background : I'm using Dynamic Time Warping (DTW) for matching short time series and building a similarity matrix, with the intention of clustering the different time series and get insights from the clusters. I'm using physical performance features of athletes, but instead of using the overall magnitude of each measure, I use the number of standard deviations that an athlete from the group mean. So the time series (multivariate) is conformed by successive points indicating the deviation from the mean an athlete has over time. My main objective is to cluster together windowed-sections of the time series that reflect remarkable similar behavior in the up-and-down of values. So, for DTW I need a distance measure to be used to find the warping path, and then compute the overall distance between pairwise time series. I will like to take into account both the magnitude of the vectors (each point in the time series) and the orientation. It seems then that Euclidean distance can work well for the first one and Cosine/Angular distance for the second one. How can I combine both distances in order to keep their properties?
