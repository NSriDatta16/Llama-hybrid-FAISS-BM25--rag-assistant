[site]: stackoverflow
[post_id]: 2937332
[parent_id]: 2937291
[tags]: 
A permissions bitmask is best understood when represented as binary, with each digit representing a permission being on or off. So if permissions X, Y, and Z exist, and I only have access to X and Z, 101 would represent that I have the first and third permissions granted to me, but not the second. The binary number 101 is equivalent to the decimal number 5 , so that is what would end up stored in the database. A single, small integer is a much more efficient object to store than a string or several small integers. EDIT: I realized just how easy it was to leverage existing conversion functions to get a pretty quick implementation going. Here's a sample. You might get better performance if you use loops, rather than pulling back to and from strings, but this illustrates the principle pretty clearly.
