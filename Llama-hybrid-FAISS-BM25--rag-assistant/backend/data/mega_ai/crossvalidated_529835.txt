[site]: crossvalidated
[post_id]: 529835
[parent_id]: 529827
[tags]: 
Here is what your call to pm.auto_arima() writes to the console: Best model: ARIMA(0,1,0)(0,0,0)[0] That is, it fits a non-seasonal (that's the trailing (0,0,0)[0] part, and it's not surprising, since you specified seasonal=False ) ARIMA(0,1,0) model. This is an ARMA(0,0) model on first differences, or $$ By_t = y_t-y_{t-1} = \epsilon_t, $$ where $B$ is the backshift operator, and $\epsilon_t\sim N(0,\sigma^2)$ . Alternatively, $$ y_t=y_{t-1}+\epsilon_t. $$ That is, a random walk. In forecasting, you substitute the expected value for the innovations $\epsilon_t$ , which is zero. Thus, your forecasts are simply the last observation. In particular, the forecasts do not vary over time, so you get a flat line. Now you will probably wonder why auto_arima() fits a random walk. As Tim writes , there is no obvious cycles or trends in your data, and the stepwise AIC optimization does not find meaningful autocorrelation or moving average dynamics in your time series. So auto_arima() indeed believes a random walk is the best description of your data. You may want to look through previous questions on flat ARIMA forecasts . Or at Is it unusual for the MEAN to outperform ARIMA? A flat forecast - whether from the overall average, as discussed in the last link, or whether from a random walk model - is surprisingly often the best forecast you can make. If there is no structure to be found, then there is no structure to be found. I recommend the excellent free online book Forecasting: Principles and Practice (2nd ed.) by Athanasopoulos & Hyndman . It uses R, not Python, but it's very good, accessible, and free.
