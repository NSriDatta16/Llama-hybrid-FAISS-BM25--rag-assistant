[site]: stackoverflow
[post_id]: 4305653
[parent_id]: 
[tags]: 
Why and How to effectively test beta distributions of R as a normal user?

This question is inspired by the remark of Duncan Murdoch on the r-devel mailing list in response to a bug report about Sweave : This is fixed in R-patched. (It would have been fixed in 2.12.0 if more people tested the betas...). Honestly, I've stayed away from beta -aka development- versions for a number of reasons, and these are reasons I hear from more people : I am a bit horrified it would somehow cause conflicts with my current R distribution. As I need it for work, having to repair it regularly would be a loss of time I can't explain to my boss I wouldn't have a clue how to test efficiently. I reckon every test I could come up with has already been run by the development team. I still find it difficult to figure out when something is a bug, and when (most often) it is my own stupidity kicking in. But as I understood, it would be a valuable contribution to the R community, and I'm willing to do my bit of the testing as well if I can fit it somehow into my own work. I was thinking of keeping the beta on the side and running my scripts through it as well as a checkup. Saving the constructed objects allows a quick and easy all.equal() to see if something is wrong. Anybody some more/better ideas on how I could help testing with a minimum amount of effort and a maximum amount of efficiency? I'd also like to promote this a bit more on our department as well. Apart from the "It's time to give back to the community", any other good reasons why testing betas is worth the effort? How can I counter the arguments given above? Edit: As Dirk Eddelbuettel pointed out in the comments, part of the deal is preventing the path variables in Windows. I have some ideas on that, but pointers on how to practically organize your computer for testing R-devel versions are greatly appreciated as well.
