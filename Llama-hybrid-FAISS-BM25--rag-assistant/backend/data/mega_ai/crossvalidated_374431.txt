[site]: crossvalidated
[post_id]: 374431
[parent_id]: 374408
[tags]: 
Here is a useful resource for learning more about feature selection: http://jmlr.csail.mit.edu/papers/volume3/guyon03a/guyon03a.pdf Salient points from the resource: Do you have domain knowledge? If yes, construct a better set of ad hoc features Are your features commensurate? If no, consider normalizing them. Do you suspect interdependence of features? If yes, expand your feature set by constructing conjunctive features or products of features, as much as your computer resources allow you. Do you need to prune the input variables (e.g. for cost, speed or data understanding reasons)? If no, construct disjunctive features or weighted sums of feature Do you need to assess features individually (e.g. to understand their influence on the system or because their number is so large that you need to do a first filtering)? If yes, use a variable ranking method; else, do it anyway to get baseline results. Do you need a predictor? If no, stop Do you suspect your data is “dirty” (has a few meaningless input patterns and/or noisy outputs or wrong class labels)? If yes, detect the outlier examples using the top ranking variables obtained in step 5 as representation; check and/or discard them. Do you know what to try first? If no, use a linear predictor. Use a forward selection method with the “probe” method as a stopping criterion or use the 0-norm embedded method for comparison, following the ranking of step 5, construct a sequence of predictors of same nature using increasing subsets of features. Can you match or improve performance with a smaller subset? If yes, try a non-linear predictor with that subset. Do you have new ideas, time, computational resources, and enough examples? If yes, compare several feature selection methods, including your new idea, correlation coefficients, backward selection and embedded methods. Use linear and non-linear predictors. Select the best approach with model selection Do you want a stable solution (to improve performance and/or understanding)? If yes, subsample your data and redo your analysis for several “bootstrap”. Here is another useful resource: https://machinelearningmastery.com/feature-selection-machine-learning-python/ Salient points from the resource: Univariate Selection Statistical tests can be used to select those features that have the strongest relationship with the output variable. Recursive Feature Elimination The Recursive Feature Elimination (or RFE) works by recursively removing attributes and building a model on those attributes that remain. Feature Importance Bagged decision trees like Random Forest and Extra Trees can be used to estimate the importance of features.
