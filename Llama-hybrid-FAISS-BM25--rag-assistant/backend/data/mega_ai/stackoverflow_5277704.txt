[site]: stackoverflow
[post_id]: 5277704
[parent_id]: 
[tags]: 
Optimised Python dictionary / negative index storage

Raised by this question's comments (I can see that this is irrelevant), I am now aware that using dictionaries for data that needs to be queried/accessed regularly is not good, speedwise. I have a situation of something like this: someDict = {} someDict[(-2, -2)] = something somedict[(3, -10)] = something else I am storing keys of coordinates to objects that act as arrays of tiles in a game. These are going to be negative at some point, so I can't use a list or some kind of sparse array (I think that's the term?). Can I either: Speed up dictionary lookups, so this would not be an issue Find some kind of container that will support sparse, negative indices? I would use a list, but then the querying would go from O(log n) to O(n) to find the area at (x, y). (I think my timings are off here too).
