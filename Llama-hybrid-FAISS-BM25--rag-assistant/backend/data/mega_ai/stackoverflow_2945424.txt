[site]: stackoverflow
[post_id]: 2945424
[parent_id]: 2945148
[tags]: 
So, how do I set up the build for ProjectA such that someone can download ProjectA.jar and use it without needing to install jars for ProjectB and ProjectC Assuming ProjectA is a JAR, you can create an executable JAR that bundles the dependencies with the Maven Assembly Plugin (and the predefined jar-with-dependencies descriptor) or with the Maven Shade Plugin . how do I set up the build such that someone could check out ProjectA and run only 'mvn package' for a full compile? You have to deploy the dependencies to a repository that can be read over HTTP and to declare this repository in your pom.xml. AFAIK, git-hub doesn't offer any facility for that. But any web hosting service with FTP access (or better, scp) should do the trick. If your project is open source, another option would be to use Sonatype's OSS Repository Hosting service. Just in case, you might want to read this blog post but you won't learn much more things. The easiest would still be to organize the 3 projects as a multi-modules maven project and to build all modules. Additionally, what should I do with my modified version of ProjectC? From a modularization point of view (assuming you found a solution for the above part about repository), it would certainly make sense to have it as a separate module, especially if there is an opportunity someone can use ProjectC outside your project.
