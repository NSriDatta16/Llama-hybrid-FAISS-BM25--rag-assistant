[site]: stackoverflow
[post_id]: 4301199
[parent_id]: 4301179
[tags]: 
It can be taken, but once the temporary ceases to exist, you have a dangling pointer left. EDIT For the downvoters: const std::string &s = std::string("h"); &s; is legal. s is a reference to a temporary. Hence, a temporary object's address can be taken. EDIT2 Bound references are aliases to what they are bound to. Hence, a reference to a temporary is another name for that temporary. Hence, the second statement in the paragraph above holds. OP's question is about temporaries (in terms of the words he uses), and his example is about rvalues. These are two distinct concepts.
