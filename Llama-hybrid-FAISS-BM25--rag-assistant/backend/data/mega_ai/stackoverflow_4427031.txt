[site]: stackoverflow
[post_id]: 4427031
[parent_id]: 4426998
[tags]: 
Sure, although it involves some overhead. The magic method _call will handle non-existing methods so you could do: class myClass { public function __call($name, $arguments) { $this->doSomething(); $this->$name($arguments); } private function calledmethod() { ... } And then you'd call: $class->calledmethod(); Since the method calledmethod isn't public, _call would get invoked then would run your 'base' method and then calledmethod . I do feel obliged to ask, WHY do you need to do this? There's probably a more elegant solution if you'd describe the actual problem you're trying to solve.
