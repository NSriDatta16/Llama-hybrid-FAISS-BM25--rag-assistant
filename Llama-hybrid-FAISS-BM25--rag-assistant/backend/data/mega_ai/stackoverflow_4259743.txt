[site]: stackoverflow
[post_id]: 4259743
[parent_id]: 
[tags]: 
Forced to retain a new instance of a class and therefore leaking memory

I have created a property list, that when unarchived, initialises an array of instances of a class called 'SelectableObject'. The SelectableObject class does not contain an init method, it is just a container for some instance variables, and of course conforms to NSCoding. When a SelectableObject is chosen, I initialise a new instance of a subclass of SelectableObject, depending on which object was selected. Call this 'AnimalObject'. I have written a custom initialiser for AnimalObject, which takes a SelectableObject as an argument, to get the SelectableObject's values, and then adds some of its own value. So the method looks like this: - (AnimalObject *)initWithObject:(SelectableObject *)selectedObject And I call it from the selection screen like this: AnimalObject *animal = [[AnimalObject alloc] initWithObject:self.selectedObject]; where self.selectedObject is the object selected from the selection screen. Now, in the initialiser for the AnimalObject, I set the initial values, then just before returning it, call [self saveToFile]; to save the new object to file. So having initialised it in the selection screen, I should be able to release it straight away right? However, if I try to release it, i.e AnimalObject *animal = [[AnimalObject alloc] initWithObject:self.selectedObject]; [animal release]; I get a crash. If I don't release it, I get a warning that all the iVars initialised in the AnimalObject initialiser are leaking memory. I've tried creating an AnimalObject property in the selectionScreen and assigning the new object to it before releasing, but this still crashes, i.e. self.newAnimal = animal; [animal release]; I'm wondering if from my description above, I'm doing something very wrong? Like saving a class from within its initialiser. Or passing a parent class as an object to an initialiser of a subclass... I'm not really sure why I can't release the instance of the object I created. Thanks for any help! EDIT Ok, here's my code: The selectable Object class: #define kObjectNumberKey @"ObjectNumber" #define kObjectTypeKey @"Type" #define kObjectNameKey @"Name" #define kObjectThumbKey @"Thumb" #define kObjectMainKey @"Main" #import @interface SelectableObject : NSObject { int number; NSString *type; NSString *name; NSString *thumbString; NSString *mainString; } @property (nonatomic, assign) int number; @property (nonatomic, retain) NSString *type; @property (nonatomic, retain) NSString *name; @property (nonatomic, retain) NSString *thumbString; @property (nonatomic, retain) NSString *mainString; @end #import "SelectableObject.h" @implementation SelectableObject @synthesize number; @synthesize type; @synthesize name; @synthesize thumbString; @synthesize mainString; - (void)dealloc { NSLog(@"Selectable Object DEALLOC"); [name release]; [type release]; [thumbString release]; [mainString release]; [super dealloc]; } #pragma mark - #pragma mark NSCoding - (void)encodeWithCoder:(NSCoder *)aCoder { [aCoder encodeInt:self.number forKey:kObjectNumberKey]; [aCoder encodeObject:self.type forKey:kObjectTypeKey]; [aCoder encodeObject:self.name forKey:kObjectNameKey]; [aCoder encodeObject:self.thumbString forKey:kObjectThumbKey]; [aCoder encodeObject:self.mainString forKey:kObjectMainKey]; } - (id)initWithCoder:(NSCoder *)aDecoder { if (self = [super init]) { self.number = [aDecoder decodeIntForKey:kObjectNumberKey]; self.type = [aDecoder decodeObjectForKey:kObjectTypeKey]; self.name = [aDecoder decodeObjectForKey:kObjectNameKey]; self.thumbString = [aDecoder decodeObjectForKey:kObjectThumbKey]; self.mainString = [aDecoder decodeObjectForKey:kObjectMainKey]; } return self; } @end The code in another VC to create a new Animal object with the details of the SelectedObject: - (void)createNewAnimal { self.selectedObject.name = self.nameField.text; Animal *animal = [[Animal alloc] initWithObject:self.selectedObject]; // [animal release]; (causes it to crash) // Initialise the new Root Controller and load with selected object } And in the Animal class: - (Animal *)initWithObject:(SelectableObject *)selectedObject { if (self = [super init]) { //Initialise all the values dateCreated = [[NSDate alloc] init]; dateLastUsed = [[NSDate alloc] init]; name = selectedObject.name; thumbString = selectedObject.thumbString; mainString = selectedObject.mainString; } [self saveToFile]; return self; }
