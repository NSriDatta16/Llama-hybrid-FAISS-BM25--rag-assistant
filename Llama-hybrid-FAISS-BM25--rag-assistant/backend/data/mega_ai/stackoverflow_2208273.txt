[site]: stackoverflow
[post_id]: 2208273
[parent_id]: 2208140
[tags]: 
Scala is a multi-paradigm language encompassing many different philosophies and design approaches . These include Object-orientation Functional programming Java-specific approaches Language oriented programming (extending the syntax, metaprogramming) This allows the programmer to solve problems from many different points of view and therefore in many ways. As you suspected, this is in the very nature of the language (like in other general-purpose/multi paradigm languages). Which one is used largely depends on the programmer, though I can give some general rules/thoughts: Scala is - after all - a functional language . I therefore consider it a good practice to follow a functional style of programming (which will also lead to very concise and elegant solutions) Be consistent! After all, there should be one way for you , but you can choose which one . Avoid mixing side-effects and pure functions, list-comprehensions and library functions (map, filter), or Java- vs. functional thinking. Instead, use the different paradigms orthogonally where they serve best. Use the wonderful features Scala provides you with (and not just use it as Java with nice syntax): Pattern-matching, continuations, generics and an extremely powerful type system, higher-order functions.
