[site]: crossvalidated
[post_id]: 206311
[parent_id]: 
[tags]: 
fat-finger distribution

Brief question: Is there a fat-finger distribution? I'm sure that if it exists, then it has a different name. I don't know how to formulate it as an analytic function. Can you help me either find an existing version of it or start in on formulating it in something cleaner than a giant simulation? It is the distribution of numbers actually hit when a given number is the intended target, but the buttons are much smaller than the finger so nearby buttons are sometimes the one hit by accident. The use of a distribution like this is false entries in pushing buttons on a cell phone. If I operated a company where one had to "press 1 now" or something and "you pressed 1, is that right" then they could get a decent approximation of fat-finger probabilities, although 2 in a row fat-fingers could mess it up some. (Hamming distance in fat-fingers? Fat-finger Markov chains?) I want to use it to try and build error correction into pressing keys. I have a few samples of my own, but not enough variation in finger "fatness" or cell-phone keyboard topology to be robust. Background and elaboration: Here is a normal cell phone keypad layout: Imagine that my fingers are much larger than the keys, so that when I go to hit a 5, I am mostly likely to get a 5, but then I am also somewhat likely to get a 2,4,6,or8 (equally likely) and then am less (but not zero) likely to get a 1,3,7,9 (equally likely) and am very unlikely to get a 0. I can imagine that if I tried to type an infinite number of 5's for a fixed "finger diameter" then I would get a distribution of values. If my finger value is smaller then the distribution changes. If I try to hit a different number then the distribution changes. In practice, this is going to depend on the layout of keys. If they were in a giant ring and not a 3x3 grid then it would be a different sort of question. In this case, I expect we will only be dealing with 3x3 rectangular grids. I also suspect that the keypad has a digital latch so that only one key press can be detected. There will be at most 7 frequencies for other buttons such as when the "0" is pressed. I'm not sure of a clean way to engage that. Perhaps a factor times normalized squared distance between the target key and the candidate triggered key? Here is how I would simulate the distribution for when the five is pressed (weights are somewhat arbitrary): #number of presses npress additional note: So I read this article: http://www.scientificamerican.com/article/peculiar-pattern-found-in-random-prime-numbers/ I guess there is an inverse of the "fat-finger distribution" variation that applies to the last digit of prime numbers. There are digits that are excluded based on the last digit of the prime number.
