[site]: stackoverflow
[post_id]: 3735905
[parent_id]: 3735839
[tags]: 
When you create a new object in C++ that lives on the stack, (…) you do this: CDPlayer player; Not necessarily on the stack: variables declared in this way have automatic storage . Where they actually go depends. It may be on the stack (in particular when the declaration is inside a method) but it may also be somewhere else. Consider the case where the declaration is inside a class: class foo { int x; }; Now the storage of x is where ever the class instance is stored. If it’s stored on the heap, then so is x : foo* pf = new foo(); // pf.x lives on the heap. foo f; // f.x lives where f lives, which has (once again) automatic storage.
