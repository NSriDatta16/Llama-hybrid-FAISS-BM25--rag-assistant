[site]: stackoverflow
[post_id]: 3964150
[parent_id]: 3964017
[tags]: 
Polling others is not the best way to verify correctness. :) Instead, consider your problem. Everything you are dealing with is an int , so all values involved can be represented as an int . No addition or subtraction is involved, so you needn't worry about leaving the representable range. So, we can fall back to standard math using standard integers, and leave the messiness of machine representations behind. You are given a range closed at both ends [n, m] and a value p to test for membership in that range. You have one operator on integers that you can use, . All the standard boolean operators are fair game. Now, you can simply think about sets. You want to reject all p such that p or p > m . All other values of p are acceptable. Put another way, p is part of the desired set if not ((p Using DeMorgan's laws, this is equivalent to (not (p Representing that using the standard C++ operators (rather than the alternative spellings provided by ), we get what you proposed, but using different names: ! Renaming to cmp() , n to r.first , m to r.second , and p to n , we get precisely what you proposed: !cmp(n, r.first) && !cmp(r.second, n) So, yup, looks correct to me.
