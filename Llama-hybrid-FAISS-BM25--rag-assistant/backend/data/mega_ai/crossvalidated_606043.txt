[site]: crossvalidated
[post_id]: 606043
[parent_id]: 588573
[tags]: 
Working on fraud subject daily, I often encounter this issue. Regardless of the algorithm used, one can get this behavior and most of the time underfitting is the culprit. So, how can one proceed to improve the situation? The approach I have found to yield better results involves examining the data itself and trying to predict whether a transaction is fraudulent or not. By doing this, I am bulding a set of rules, each with high precision. Be as creative as you can : feature engineering is key in ML and in this situation particularly. However, if I'm unable to improve, there are two main reasons for this (besides that I am not looking correctly at data) : Fraud patterns are too noisy or changing too rapidly (see concept drift) I have not access to the necessary information to identify fraud precisely In the latter case, I need to find ways to get more useful informations, and it is a whole new job !
