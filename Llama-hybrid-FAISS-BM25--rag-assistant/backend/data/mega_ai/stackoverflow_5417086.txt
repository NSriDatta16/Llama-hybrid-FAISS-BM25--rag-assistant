[site]: stackoverflow
[post_id]: 5417086
[parent_id]: 5417054
[tags]: 
Here is a code from Apple's example UICatalog #pragma mark - #pragma mark Text Fields - (UITextField *)textFieldNormal { if (textFieldNormal == nil) { CGRect frame = CGRectMake(kLeftMargin, 8.0, kTextFieldWidth, kTextFieldHeight); textFieldNormal = [[UITextField alloc] initWithFrame:frame]; textFieldNormal.borderStyle = UITextBorderStyleBezel; textFieldNormal.textColor = [UIColor blackColor]; textFieldNormal.font = [UIFont systemFontOfSize:17.0]; textFieldNormal.placeholder = @" "; textFieldNormal.backgroundColor = [UIColor whiteColor]; textFieldNormal.autocorrectionType = UITextAutocorrectionTypeNo; // no auto correction support textFieldNormal.keyboardType = UIKeyboardTypeDefault; // use the default type input method (entire keyboard) textFieldNormal.returnKeyType = UIReturnKeyDone; textFieldNormal.clearButtonMode = UITextFieldViewModeWhileEditing; // has a clear 'x' button to the right textFieldNormal.tag = kViewTag; // tag this control so we can remove it later for recycled cells textFieldNormal.delegate = self; // let us be the delegate so we know when the keyboard's "Done" button is pressed // Add an accessibility label that describes what the text field is for. [textFieldNormal setAccessibilityLabel:NSLocalizedString(@"NormalTextField", @"")]; } return textFieldNormal; } - (UITextField *)textFieldRounded { if (textFieldRounded == nil) { CGRect frame = CGRectMake(kLeftMargin, 8.0, kTextFieldWidth, kTextFieldHeight); textFieldRounded = [[UITextField alloc] initWithFrame:frame]; textFieldRounded.borderStyle = UITextBorderStyleRoundedRect; textFieldRounded.textColor = [UIColor blackColor]; textFieldRounded.font = [UIFont systemFontOfSize:17.0]; textFieldRounded.placeholder = @" "; textFieldRounded.backgroundColor = [UIColor whiteColor]; textFieldRounded.autocorrectionType = UITextAutocorrectionTypeNo; // no auto correction support textFieldRounded.keyboardType = UIKeyboardTypeDefault; textFieldRounded.returnKeyType = UIReturnKeyDone; textFieldRounded.clearButtonMode = UITextFieldViewModeWhileEditing; // has a clear 'x' button to the right textFieldRounded.tag = kViewTag; // tag this control so we can remove it later for recycled cells textFieldRounded.delegate = self; // let us be the delegate so we know when the keyboard's "Done" button is pressed // Add an accessibility label that describes what the text field is for. [textFieldRounded setAccessibilityLabel:NSLocalizedString(@"RoundedTextField", @"")]; } return textFieldRounded; } - (UITextField *)textFieldSecure { if (textFieldSecure == nil) { CGRect frame = CGRectMake(kLeftMargin, 8.0, kTextFieldWidth, kTextFieldHeight); textFieldSecure = [[UITextField alloc] initWithFrame:frame]; textFieldSecure.borderStyle = UITextBorderStyleBezel; textFieldSecure.textColor = [UIColor blackColor]; textFieldSecure.font = [UIFont systemFontOfSize:17.0]; textFieldSecure.placeholder = @" "; textFieldSecure.backgroundColor = [UIColor whiteColor]; textFieldSecure.keyboardType = UIKeyboardTypeDefault; textFieldSecure.returnKeyType = UIReturnKeyDone; textFieldSecure.secureTextEntry = YES; // make the text entry secure (bullets) textFieldSecure.clearButtonMode = UITextFieldViewModeWhileEditing; // has a clear 'x' button to the right textFieldSecure.tag = kViewTag; // tag this control so we can remove it later for recycled cells textFieldSecure.delegate = self; // let us be the delegate so we know when the keyboard's "Done" button is pressed // Add an accessibility label that describes what the text field is for. [textFieldSecure setAccessibilityLabel:NSLocalizedString(@"SecureTextField", @"")]; } return textFieldSecure; } - (UITextField *)textFieldLeftView { if (textFieldLeftView == nil) { CGRect frame = CGRectMake(kLeftMargin, 8.0, kTextFieldWidth, kTextFieldHeight); textFieldLeftView = [[UITextField alloc] initWithFrame:frame]; textFieldLeftView.borderStyle = UITextBorderStyleBezel; textFieldLeftView.textColor = [UIColor blackColor]; textFieldLeftView.font = [UIFont systemFontOfSize:17.0]; textFieldLeftView.placeholder = @" "; textFieldLeftView.backgroundColor = [UIColor whiteColor]; textFieldLeftView.keyboardType = UIKeyboardTypeDefault; textFieldLeftView.returnKeyType = UIReturnKeyDone; textFieldLeftView.clearButtonMode = UITextFieldViewModeWhileEditing; // has a clear 'x' button to the right textFieldLeftView.tag = kViewTag; // tag this control so we can remove it later for recycled cells // Add an accessibility label that describes the text field. [textFieldLeftView setAccessibilityLabel:NSLocalizedString(@"CheckMarkIcon", @"")]; textFieldLeftView.leftView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"segment_check.png"]]; textFieldLeftView.leftViewMode = UITextFieldViewModeAlways; textFieldLeftView.delegate = self; // let us be the delegate so we know when the keyboard's "Done" button is pressed } return textFieldLeftView; } Go through the reference doc for UITextField Class also try to read UITextFieldDelegate. Look for the different tasks that can be performed and see the methods, properties available for it. And use it according to your requirement.
