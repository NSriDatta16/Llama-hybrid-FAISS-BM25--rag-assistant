[site]: stackoverflow
[post_id]: 1761789
[parent_id]: 
[tags]: 
GZIP Compression causing web page expiration

I have implemented GZIP compression on a few of my ASP.NET pages, using a class that inherits from System.Web.UI.Page, and implementing the OnLoad method to do the compression, like so: protected override void OnLoad(EventArgs e) { base.OnLoad(e); if (Internet.Browser.IsGZIPSupported()) { base.Response.Filter = new GZipStream(base.Response.Filter, CompressionMode.Compress, true); base.Response.AppendHeader("Content-encoding", "gzip"); base.Response.AppendHeader("Vary", "Content-encoding"); } else if (Internet.Browser.IsDeflateSupported()) { base.Response.Filter = new DeflateStream(base.Response.Filter, CompressionMode.Compress, true); base.Response.AppendHeader("Content-encoding", "deflate"); base.Response.AppendHeader("Vary", "Content-encoding"); } } The IsGZIPSupported method just determines whether the browser supports GZIP, looking at the Accept-encoding request header, and the browser's user agent (IE5-6 are excluded from GZIP compression). However, with this code, I am getting the web page has expired message in IE, when I postback from the page and try to use the back button. Setting the cache control to private seems to fix the problem: base.Response.Cache.SetCacheability(HttpCacheability.Private); But I am not sure why, or whether this will cause other problems. I haven't set any caching for any other pages in the site, and the site is running on an intranet with only a dozen concurrent users, so performance isn't a big issue at the moment.
