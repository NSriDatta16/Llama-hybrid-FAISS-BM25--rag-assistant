[site]: crossvalidated
[post_id]: 281264
[parent_id]: 281258
[tags]: 
I think a cross between a neural network and a vanilla RNN would work for this. predict1 predict2 | | [Module1] ---h1 ---> [Module2] --->h2--->.... | | | | x1 x2 So each xi is relative to each month, meaning that if you add features, xi, will grow in size. Each module's $m$ weights are relative to the set of features available in that month $m$, and the memory input of the last module. So unlike an RNN, the modules change with each extra month of data. Note that you can grow the size of your memory hi, to accomidate for larger xi. To train the model, for each data point you would first identify how many months $m$ of data you have, and then apply the modules $m$ times, to get a sequence of $m$ predictions, which you can then evaluate using whatever error metric you want.
