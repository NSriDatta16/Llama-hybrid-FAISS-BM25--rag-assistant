[site]: stackoverflow
[post_id]: 1658250
[parent_id]: 1658192
[tags]: 
Both patterns delegate to a base class that has several derivative, but it's only in the State pattern that these derivative classes hold a reference back to context class. Another way to look at it is that the Strategy pattern is a simpler version of the State pattern; a sub-pattern, if you like. It really depends if you want the derived states to hold references back to the context or not (i.e: do you want them to call methods on the context). For more info: Robert C Martin (& Micah Martin) answer this in their book, "Agile Principles, Patterns and Practices in C#". ( http://www.amazon.com/Agile-Principles-Patterns-Practices-C/dp/0131857258 )
