[site]: stackoverflow
[post_id]: 558963
[parent_id]: 558925
[tags]: 
We're doing API and Output caching on a large scale (3 milion visits a day) web site (news portal). The site is primarily used by anonymous users, but we do have authenticated users and we cache a complete site just for them, due to some personalized parts of the site, and I must admit that we had absolutely no problems with memory pressure. So, my advice would be cache everything you can in API cache so your Output cache rebuilding is even faster. Of course, pay close attention to your cache ratio values in the performance counters. You should see numbers >95% of cached hits. Another thing to pay attention is cache invalidation, this is a big issue if you have a lot of related content. For example, you cache music stuff and information about one album or song might be displayed and cached on few hundred pages. If anything changes in that song, you have to invalidate all of these pages which can be problematic. Bottom line, caching is one of the best features of ASP.NET, it's done superbly and you can rely on it.
