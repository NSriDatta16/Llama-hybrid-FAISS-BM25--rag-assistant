[site]: stackoverflow
[post_id]: 5028581
[parent_id]: 
[tags]: 
What happens when an upcast pointer is passed by reference to a function expecting derived?

I've inherited something similar to this code: class Base { public: virtual double getElement(int i) {return NULL;} virtual Derived* GetAsDerived() {return this;} }; class Derived : public Base { public: virtual double getElement(int i) {return vec[i];} private: std::vector ; }; And a function as follows: void f(Base& b) { Derived* d = b.GetAsDerived(); } The program flow is something similar to this Derived A; /* get data into vector in A */ f(A); After the call to GetAsDerived() in f .The vector in the object pointed by d contains junk.Inside the debugger I can go back in the call stack and see that the vector inside A still has valid data. I am sure that that all this weird upcasting - downcasting is the cause but I was not able to find a formal explanation in the specs or online. So why does it fail in such a manner?
