[site]: stackoverflow
[post_id]: 5673110
[parent_id]: 
[tags]: 
Matplotlib setting background color and vectorizing FDTD equation

I'm currently having some trouble with Matplotlib. I have an FDTD program that gets 'washed out' as it runs because the background color of the image seems to average. I would like to set it all to black (the 0 values of the array). How would I go about doing this? I found this on Matplotlib's website , but it doesn't work when I try it (it keeps telling me it didn't expect a byte for colormap). Also: Is there any way to further vectorize the while loop? I was thinking something along the lines of creating an array of 'mask' values that would indicate whether or not the values get evaluated. Trying to create another index yells at me for casting to multiple values. Code: # -*- coding: cp1252 -*- from numpy import * from math import * import matplotlib.pyplot as plt def fdtd(): print 'Starting simulation.' # Define constants and parameters #mu0 = pi*4E-7 # pH/Âµm #e0 = 8.854187E-12 # Picofarads/micron e0 = 8.85418782E-6 mu0 = 1.256637061 c = 1/sqrt(mu0*e0) # Simulation Parameters cellsizeX = 100. #Size of Yee-cell x edge in microns cellsizeY = 100. #Size of Yee-cell y edge in microns numX = 200 #Number of cells in X direction numY = 200 #Number of cells in Y direction lengthX = cellsizeX * numX lengthY = cellsizeY * numY dx = cellsizeX dy = cellsizeY dt = 1/(c*sqrt(1/dx**2+1/dy**2)) wavelength = 550E-9 #nm (green) freq = c/wavelength CEy = dt/(dx*mu0) CEx = dt/(dy*mu0) CHx = dt/(dy*e0) CHy = dt/(dx*e0) times = 1 y = 0 # Array creation print 'Creating arrays' E = zeros(shape=((2*numX+1),(2*numY+1))) Ep = E.copy() H = zeros(shape=(2*numX,2*numY)) Hp = H.copy() Elec = E.copy() #Create indexes index = arange(0,2*numX, 1) xindex = arange(0, 2*numX-1, 2) yindex = arange(0, 2*numY-1, 2) print 'Entering simulation loop.' while times Also: I've never had to put that coding line at the top until I switched to Eclipse as my IDE. Why is this now necessary?
