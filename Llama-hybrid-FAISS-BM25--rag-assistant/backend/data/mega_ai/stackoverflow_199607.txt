[site]: stackoverflow
[post_id]: 199607
[parent_id]: 199556
[tags]: 
If you already have a large amount of business logic implemented in Java, then I see two possibilities for you. The first is to use a high level language that runs within the JVM and has a web framework, such as Groovy / Grails or JRuby and Rails . This allows you to directly leverage all of the business logic you've implemented in Java without having to re-architect the entire site. You should be able to take advantage of the framework's improved productivity with respect to the web development and still leverage your existing business logic. An alternative approach is to turn your business logic layer into a set of services available over a standard RPC mechanisim - REST, SOAP, XML-RPC or some other simple XML (YAML or JSON) over HTTP protocol (see also DWR ) so that the front end can make these RPC calls to your business logic. The first approach, using a high level language on the JVM is probably less re-architecture than the second. If your goal is a complete migration off of Java, then either of these approaches allow you to do so in smaller steps - you may find that this kind of hybrid is better than whole sale deprecation - the JVM has a lot of libraries and integrates well into a lot of other systems.
