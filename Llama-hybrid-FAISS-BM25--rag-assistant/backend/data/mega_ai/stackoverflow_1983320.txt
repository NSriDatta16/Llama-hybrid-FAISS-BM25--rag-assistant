[site]: stackoverflow
[post_id]: 1983320
[parent_id]: 1983240
[tags]: 
Your first structure would be better, separate it all from the start, you never know when a future feature will need some tags index json or something. Each (most) controller has it's CRUD actions index, view, edit, new, save etc The php auto load function can take a model name and then look into the models directory for a file to require(). Yes separate comments and posts, into different models and controllers, the post controller will have a view/show action to render the post that might have a form with an action="" pointing to the save/create action of the comments controller. The "normal" MVC filesystem structure might be: /app/ controllers/ content/ This structure is largely taken from the Rails structure which is very organized.
