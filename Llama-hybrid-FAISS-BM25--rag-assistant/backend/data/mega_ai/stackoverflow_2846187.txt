[site]: stackoverflow
[post_id]: 2846187
[parent_id]: 2846084
[tags]: 
Your solution of subclassing is good, but only works with custom buttons. [UIButton buttonWithType:] is allowed to return private subclasses, which you are not supposed to subclass. You would not need to implement any methods beyond synthesizing the indexPath property. An inelegant but functional solution would be to walk up superviews from the button until the view is a UITableViewCell, then ask the table view for the index path of that cell. If you are not using sections, you could slip the row of the cell into the button tag. Not robust or elegant, but it works. You could make a custom subclass of UITableViewCell and use it as the action target for the button. It would then call through to your current action target passing itself as the sender.
