[site]: stackoverflow
[post_id]: 696698
[parent_id]: 696629
[tags]: 
"if someone unauthorized got into the database, isn't it too late to worry about passwords?" You're assuming a poor database design in which the authorization data is comingled with application data. The "Separation of Concerns" principle and the "Least Access" principle suggest that user credentials should be kept separate from everything else. For example, keep your user credentials in an LDAP server. Also, your question assumes that database credentials are the only credentials. Again, the least access principle suggests that you have application credentials which are separate from database credentials. Your web application username and password is NOT the database username and password. Similarly for a desktop application. The application authentication may not necessarily be the database authentication. Further, good security suggests that access to usernames and passwords be kept separate from application data. In a large organization with lots of database users, one admin should be "security officer" and handle authentication and authorization. No other users can modify authorization and the security officer is not authorized to access application data. It's a quick audit to be sure that the security officer never accesses data. It's a little more complex, but another audit can be sure that the folks with data authorization are real people, not aliases for the security officer. Hashed passwords is one part of a working security policy.
