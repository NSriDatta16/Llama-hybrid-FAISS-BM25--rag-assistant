[site]: datascience
[post_id]: 8722
[parent_id]: 
[tags]: 
Spark 1.5.1: Train many binary classifiers, save them, then use them on new data

I have a DataFrame representing an annotated dataset with 300 labels. The DataFrame looks like follow (the first row is just to explain the columns): binary Vector column for labeling, feature column [0, 1, 1, 0, 0 , 0.... ], featureVec [0, 0, 1, 0, 1 , 0.... ], featureVec ...... The labelling column, represent the presence or the absence of each label as an annotation of a feature vector (which we can see in the second column). Please correct me if I am wrong: I can't train one multi-class classifier because the labels are not exclusives, so I would like to train one binary classifier per label. As I have 300 labels, then I need to train and optimise 300 classifier (say logistic regression classifier for example). What is the best way and best practices to train my classifiers with N-cross validation for parameter optimisation? any example code or reference is highly appreciated. Once the classifiers are optimised, what is the best way and best practices to save the best models and use them to classify the new data?
