[site]: stackoverflow
[post_id]: 5131287
[parent_id]: 5131257
[tags]: 
It's not possible to call a local variable which is in another method -- it's an issue of scope. Therefore, it is not possible to retrieve the fileName variable from the fileName() method from the fileOutputToFile method. One way to "retrieve" the file name would be to return the file name when the fileName method is called: public String getFileName(){ String fileName = "Test"; return fileName; } (Note: I've taken the liberty to rename the method to something that would be closer to the conventions for naming identifiers in Java.) Then, in the fileOutputToFile method, the getFileName method can be called to retrieve the value of the fileName . It should be noted that in this case, it may actually be better to just use an field (an instance or class variable) rather than calling a separate method to retrieve a file name. Considering the method is just returning a constant String , a field could hold the value: public class OutputToFile { // Here, we use a class variable. private static final String FILE_NAME = "Test"; public void fileOutputToFile(String hex) { // use FILE_NAME field here. } }
