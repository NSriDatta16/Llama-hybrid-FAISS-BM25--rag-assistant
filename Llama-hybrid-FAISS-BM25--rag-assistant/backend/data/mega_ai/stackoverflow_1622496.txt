[site]: stackoverflow
[post_id]: 1622496
[parent_id]: 1611716
[tags]: 
In short it's to do with Analysis . BDD is for "acceptance test driven development" - i.e. for knowing if a system under test behaves as expected for a specific user story scenario. When I worked with Jbehave we used it at the user story level and still did "conventional" TDD for handling collaborations between individual objects and between subsystems. Typically business systems use BDD scenarios to describe business domain behaviour not to test the tiny implementtion details inside the system. You want the BDD scenarios pitched at the domain expert's level of abstraction. Those scenarios wouldn't make much sense to domain experts and would be very fragile if they described every tiny detail of the implementation. A BDD scenario says what the system should do for a user story but not how it does it.
