[site]: stackoverflow
[post_id]: 1113332
[parent_id]: 1113226
[tags]: 
When you say "real world" examples you are presumably thinking about problems that are inherently sequential or stateful or do lots of I/O, right? So, how about games? Frag is a Quake clone, implemented for an undergraduate thesis ( Functional Programming and 3D Games, Mun Hon Cheong, 2005 ). Here's a video of it in action . Super Monao Bros. (formerly known as Super Nario Bros. ) is, well, you can probably figure out which game it is a clone of. ( This is the author's English language weblog. ) Purely Functional Retrogames is a 4-part series of blog articles about how to write games in a purely functional language, explained using Pacman as the example. ( Part 2 , Part 3 , Part 4 .) Or, what about an X Window Manager , an extensible Emacs clone text editor or an IDE ? Then, there is the book, which even has your question already in the title: Real World Haskell and which is also available for free ! Another thing you might want to look at, is Functional Reactive Programming . (It is used in Frag, for example.) The interesting thing about FRP is that it allows you to look at the problem of, say, GUI programming from a very different angle. If you read the GUI chapter in the RWH book, you will see that it talks about how you can write a GUI application just like in C, only better. FRP OTOH allows you to write it in a totally different way that wouldn't even be possible in C. A lot of times (I'm not saying that this is the case in your question, but it is a recurring pattern) when someone says "but can Haskell be used in the real world", what they are really saying is "I know how to do this in C, and in Haskell I cannot do it in exactly the same way, therefore it must be impossible in Haskell, therefore Haskell is not ready for the real world". But what they are missing out on, is that there might be a totally different and much better way to solve the problem. (It's like saying "Erlang doesn't have threads, therefore it cannot possibly be used to implement concurrent systems.") And FRP is just one example.
