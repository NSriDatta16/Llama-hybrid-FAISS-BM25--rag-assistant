[site]: stackoverflow
[post_id]: 2662347
[parent_id]: 2662333
[tags]: 
My best guess is that you've declared shelter to use a raw type as follows: Shelter shelter = new Shelter(); You really should do the following: Shelter shelter = new Shelter (); Then you'd actually use the generics features. See also Effective Java 2nd Edition : Item 23: Don't use raw types in new code . If you use raw types, you lose all the safety and expressiveness benefits of generics. JLS 4.8 Raw Types The use of raw types is allowed only as a concession to compatibility of legacy code. The use of raw types in code written after the introduction of genericity into the Java programming language is strongly discouraged. It is possible that future versions of the Java programming language will disallow the use of raw types. List is NOT a List Yes, Java generics are are neither covariant nor contravariant . That is only an issue if you're trying to cast one generic type to another, which doesn't seem to be what you're trying to do. Also, unlike what your subject title says, I don't think this has anything to do with extends to bound the type parameters in generics.
