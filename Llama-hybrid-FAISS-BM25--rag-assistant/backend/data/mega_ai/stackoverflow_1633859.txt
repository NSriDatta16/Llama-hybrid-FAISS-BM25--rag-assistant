[site]: stackoverflow
[post_id]: 1633859
[parent_id]: 1633820
[tags]: 
To accomplish this you'd need to break out your attachments into their own model. So where you likely now have class User You would setup a new model and associations like class User Then in your controller, you would need to do Image.find_or_create_by_avatar_file_name(#filename here) So now you have an user.image_id attribute and can have a single uploaded image associated with multiple users. However, I've built a number of fairly large systems with user photo uploads (badge photos, avatar photos, fun pics, whatever) and the actual overlap between users tends to be quite small. Further, you're really only saving money on what is the cheapest of your resources: storage space. You don't save anything on bandwidth costs, processing or programmatic complexity by going this route. Unless this is a really unique set of circumstances (in which case it would be neat to hear what you're doing) I would advise against going this route.
