[site]: stackoverflow
[post_id]: 3721209
[parent_id]: 
[tags]: 
How do I keep an IQueryable<> within a transaction using the repository pattern?

According to NHProf, the use of implicit transactions is discouraged: http://nhprof.com/Learn/Alerts/DoNotUseImplicitTransactions However, NHibernate LINQ returns an IQueryable<> when reading objects from the database, and this is lazily evaluated. I have this method in a repository: public IQueryable GetAll () { using (var transaction = _session.BeginTransaction()) { var data = _session.Linq (); transaction.Commit(); return data; } } The issue here is that the method will commit the transaction before data is evaluated. Is there a way to use the repository pattern and keep the IQueryable<> in an explicit transaction? Or is it acceptable for read operations to use implicit transactions?
