[site]: stackoverflow
[post_id]: 2023499
[parent_id]: 2023476
[tags]: 
Using tinyint is more standard practice, and will allow you to more easily check the value of the field. // Using tinyint 0 and 1, you can do this: if($row['admin']) { // user is admin } // Using char y and n, you will have to do this: if($row['admin'] == 'y') { // user is admin } I'm not an expert in the inner workings of MySQL, but it intuitively feels that retrieving and sorting integer fields is faster than character fields (I just get a feeling that 'a' > 'z' is more work that 0 > 1), and seems to feel much more familiar from a computing perspective in which 0s and 1s are the standard on/off flags. So the storage for integers seems to be better, it feels nicer, and is easier to use in code logic. 0/1 is the clear winner for me. You may also note that, to an extent, this is MySQL's official position, as well, from their documentation : BOOL, BOOLEAN: These types are synonyms for TINYINT(1). A value of zero is considered false. Nonzero values are considered true. If MySQL goes so far as to equate TINYINT(1) with BOOLEAN, it seems like the way to go.
