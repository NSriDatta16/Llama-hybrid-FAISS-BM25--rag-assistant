[site]: stackoverflow
[post_id]: 4200199
[parent_id]: 
[tags]: 
Dynamically allocating classes, with Inheritance issue

I am trying to dynamically allocate an array of base(Student) classes, and then assign pointers to derived(Math) classes to each array slot. I can get it to work by creating a single pointer to the base class, and then assigning that to a derived class, but when I attempt to assign to the pointer to a dynamically allocated array of base classes, it fails. I have posted the fragments of code that I am using below. So basically my question is, why isn't the dynamically allocated one working? Student* studentList = new Student[numStudents]; Math* temp = new Math(name, l, c, q, t1, t2, f); studentList[0] = temp; /*Fragment Above Gives Error: main.cpp: In function âint main()â: main.cpp:55: error: no match for âoperator=â in â* studentList = tempâ grades.h:13: note: candidates are: Student& Student::operator=(const Student&)*/ Student * testptr; Math * temp = new Math(name, l, c, q, t1, t2, f); testptr = temp //Works
