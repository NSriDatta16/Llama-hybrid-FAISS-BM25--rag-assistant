[site]: stackoverflow
[post_id]: 4254749
[parent_id]: 4254366
[tags]: 
For pure frontend compilation, there are several options, darioo mentioned Google Web Toolkit , though this is all very low level and thus harder to roll into out of the box. There are several GUI frameworks out there based on GWT. Ext GWT Smart GWT Vaadin Out of those three I hear our Java devs are most happy with Vaadin , though it's quite hard to create really customized (your average funky website with never before seen features...) frontend apps with these frameworks and you will long back for the expressive freedom JS toolkits like jQuery have to offer in a lot less code. Then there are hybrids (JSP based), allowing more freedom in you frontend files (aka. frontend developers can tinker with it without knowing Java). Java code doesn't compile JS, but offers out of the box solutions you can tinker with in the JSPs. JSF2 (uses YUI) Spring Roo (uses Dojo JS framework) Spring Roo scaffolds an entire frontend provides/uses the Dojo framework. JSF2 was/is looking nice as well according to our Java devs, though wwhen looking at the website, the angst of Oracle seeps in. Both Dojo and YUI are quite expansive and mature JS frameworks specialised for large JS projects. Whereas jQuery is nicer for smaller JS projects with a rather flat architecture. Ignoring Java based solutions, you can always fall back to YUI , Dojo or even MooTools for more architecture options. You can also stick with jQuery, but imo. you need to be happily insane and masochistic (aka. frontend/JS developer) to maintain large scale JS/Html/CSS projects. jQuery is a nice toolkit, but as a framework, it offers meager architectural/structural solutions, you will have to devise them yourself by mixing and matching it with other small toolkits like RequireJS . My best advice would be, build your app without JS first, using page refreshes and whatnot. Then apply a JS layer and build Ajax services for that layer. That way, your views and JS solution are losely coupled and theoretically, you can always switch frameworks without touching your JSP's too much.
