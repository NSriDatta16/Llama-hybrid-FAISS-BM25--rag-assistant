[site]: stackoverflow
[post_id]: 5574582
[parent_id]: 
[tags]: 
Problem finding the local maximum of a function in C

I'm designing an algorithm to define a simple method able to find the local maximum of a function f (x) given in an interval [a, b] #include #include #include #define PI 3.141592653 float funtion_(float a, float x){ float result=0; result = a * (sin (PI*x)); return result; } int main (){ double A = 4.875; //average of the digits of the identification card double a = 0.0, b =1.0; //maximum and minimum values of the interval [a, b] double h=0; double N; double Max, x; double sin_; double inf; printf ("input the minux value: "); scanf ("%lf", &inf); printf ("input the N value: "); scanf ("%lf", &N); h= (b-a)/N; printf("h = %lf\n", h); x=a-h; Max = -inf; do { x = x+h; sin_ = funtion_(A, x); if (sin_>=Max){ Max = sin_; } }while (x==b); printf ("Maximum value: %lf.5", Max); return 0; } The algorithm implements the function f (x) = A * sin (pi * x), where A is the average of the digits of my ID, and inf variable is assigned a number sufficiently greater than the values ​​reached by the function in the interval [a, b] = [0.1]. The algorithm must find the local maximum of the function but it is the maximum returns always zero. do not understand why. What problem may be the logic of my solution?, this problem can be solved by this simple algorithm or some optimization by backtracking is necessary ? Thanks for your responses.
