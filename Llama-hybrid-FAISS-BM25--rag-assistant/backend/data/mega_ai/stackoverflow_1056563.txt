[site]: stackoverflow
[post_id]: 1056563
[parent_id]: 
[tags]: 
Which block of code is 'better'?

In order to promote good programming habits and increase the efficiency of my code (Read: "My brother and I are arguing over some code"), I propose this question to experienced programmers: Which block of code is "better"? For those who can't be bothered to read the code, is it worth putting a conditional within a for-loop to decrease the amount of redundant code than to put it outside and make 2 for-loops? Both pieces of code work, the question is efficiency vs. readability. - (NSInteger)eliminateGroup { NSMutableArray *blocksToKill = [[NSMutableArray arrayWithCapacity:rowCapacity*rowCapacity] retain]; NSInteger numOfBlocks = (NSInteger)[self countChargeOfGroup:blocksToKill]; Block *temp; NSInteger chargeTotal = 0; //Start paying attention here if (numOfBlocks > 3) for (NSUInteger i = 0; i Or... - (NSInteger)eliminateGroup { NSMutableArray *blocksToKill = [[NSMutableArray arrayWithCapacity:rowCapacity*rowCapacity] retain]; NSInteger numOfBlocks = (NSInteger)[self countChargeOfGroup:blocksToKill]; Block *temp; NSInteger chargeTotal = 0; //Start paying attention here for (NSUInteger i = 0; i 3) { chargeTotal += temp.charge; [temp eliminate]; } temp.beenCounted = NO; } [blocksToKill release]; return chargeTotal; } Keep in mind that this is for a game. The method is called anytime the user double-taps the screen and the for loop normally runs anywhere between 1 and 15 iterations, 64 at maximum. I understand that it really doesn't matter that much, this is mainly for helping me understand exactly how costly conditional statements are. (Read: I just want to know if I'm right.)
