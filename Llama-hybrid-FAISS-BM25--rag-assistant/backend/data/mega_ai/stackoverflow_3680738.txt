[site]: stackoverflow
[post_id]: 3680738
[parent_id]: 
[tags]: 
Problem returning an object from an AsyncTask

I have a class (RestClient.java) that extends AsyncTask: package org.stocktwits.helper; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import org.apache.http.HttpEntity; import org.apache.http.HttpResponse; import org.apache.http.client.ClientProtocolException; import org.apache.http.client.HttpClient; import org.apache.http.client.methods.HttpGet; import org.apache.http.impl.client.DefaultHttpClient; import org.json.JSONException; import org.json.JSONObject; import android.os.AsyncTask; import android.util.Log; public class RestClient extends AsyncTask { public JSONObject jsonObj = null; private static String convertStreamToString(InputStream is) { /* * To convert the InputStream to String we use the BufferedReader.readLine() * method. We iterate until the BufferedReader return null which means * there's no more data to read. Each line will appended to a StringBuilder * and returned as String. */ BufferedReader reader = new BufferedReader(new InputStreamReader(is)); StringBuilder sb = new StringBuilder(); String line = null; try { while ((line = reader.readLine()) != null) { sb.append(line + "\n"); } } catch (IOException e) { e.printStackTrace(); } finally { try { is.close(); } catch (IOException e) { e.printStackTrace(); } } return sb.toString(); } /* This is a test function which will connects to a given * rest service and prints it's response to Android Log with * labels "Praeda". */ public static JSONObject connect(String url) { HttpClient httpclient = new DefaultHttpClient(); // Prepare a request object HttpGet httpget = new HttpGet(url); // Execute the request HttpResponse response; try { response = httpclient.execute(httpget); // Examine the response status Log.i("Praeda",response.getStatusLine().toString()); // Get hold of the response entity HttpEntity entity = response.getEntity(); if (entity != null) { // A Simple JSON Response Read InputStream instream = entity.getContent(); String result= convertStreamToString(instream); // A Simple JSONObject Creation JSONObject json=new JSONObject(result); // Closing the input stream will trigger connection release instream.close(); return json; } } catch (ClientProtocolException e) { // TODO Auto-generated catch block e.printStackTrace(); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } catch (JSONException e) { // TODO Auto-generated catch block e.printStackTrace(); } return null; } @Override protected JSONObject doInBackground(String... urls) { return connect(urls[0]); } @Override protected void onPostExecute(JSONObject json ) { this.jsonObj = json; } public void setJSONObject(JSONObject jsonFromUI){ this.jsonObj = jsonFromUI; } public JSONObject getJSONObject(){ return this.jsonObj; } } I am trying to execute the AsyncTask on my Main class (Main.java): RestClient rc = new RestClient(); JSONObject json = new JSONObject(); rc.setJSONObject(json); rc.execute(buildQuery()); json = rc.getJSONObject(); //do some stuff with the json object try { JSONObject query = json.getJSONObject("query"); //... } json is null because it is called before onPostExecute(). How can I get my JSON? UPDATE: I need to run this try block in onPostExecute(): try { JSONObject query = json.getJSONObject("query"); JSONObject results = query.getJSONObject("results"); if (query.getString("count").equals("1")) { // YQL JSON doesn't // return an array for // single quotes JSONObject quote = results.getJSONObject("quote"); Quote myQuote = new Quote(); myQuote.setName(quote.getString("Name")); myQuote.setSymbol(quote.getString("Symbol")); myQuote.setLastTradePriceOnly(quote .getString("LastTradePriceOnly")); myQuote.setChange(quote.getString("Change")); myQuote.setOpen(quote.getString("Open")); myQuote.setMarketCapitalization(quote .getString("MarketCapitalization")); myQuote.setDaysHigh(quote.getString("DaysHigh")); myQuote.setYearHigh(quote.getString("YearHigh")); myQuote.setDaysLow(quote.getString("DaysLow")); myQuote.setYearLow(quote.getString("YearLow")); myQuote.setVolume(quote.getString("Volume")); myQuote.setAverageDailyVolume(quote .getString("AverageDailyVolume")); myQuote.setPeRatio(quote.getString("PERatio")); myQuote.setDividendYield(quote.getString("DividendYield")); myQuote.setPercentChange(quote.getString("PercentChange")); quotesAdapter.add(myQuote);}
