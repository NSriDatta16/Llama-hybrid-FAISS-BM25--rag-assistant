[site]: stackoverflow
[post_id]: 4907759
[parent_id]: 4905767
[tags]: 
Your present design seems reasonable as to what has been included. But otherwise it seems to be particularly lacking a way to notify users about new activity information. So far I imagine it implemented as a sort of a queue table, let's call it new_activity . A probable design could be like this: follower_id int activity_id int Probably the two should be a combined PK. Notifications are triggered by inserts into activity . 'Triggered... triggered... aha, then it should probably be a trigger on activity for insert!' . But of course. When a new activity information appears, you should link the newly active users with the followers to form a proper follower/activity pair list, which is accordingly inserted into new_activity . Also, I think, there could also be a trigger on followers for insert. When a new user/follower pair appears, you might want to run through activity for that user for some very recent period, like a week or a day, you choose, to be able to notify the new follower that there has been some (or hasn't been any) activity just recently. The notifications should be removed as soon as the user has been notified, i.e., I understand, as soon as the information about new activity has been requested. Now that seems a bit trickier then inserts. I think there should be a stored procedure like GetNewActivity (@follower_id int) that reads all rows from new_activity for the specified follower, returns them as a table and also removes them from new_activity so user wasn't notified about those again. And I do not see so far why all the operations could not be grouped inside a transaction. If you manage to design your system in such a way that new activity info can only be acquired via GetNewActivity kind of a way, then I think there should be no problems about repeated or missed new activity notifications. I am not going to rob you of the pleasure of designing both the conceptual and the actual queries so far. However if that proves a bit of a challenge to you, I'm ready to help as well as, I'm sure, all the community are. And I'm inviting the latter to all the criticism about the design presented that they inevitably possess. :) As to your Question #2 and also why I am so far restraining from giving you query examples... Well, you have already been provided with one way how to get activities from users that are followed by a particular user (follower). I'm almost sure you will be given alternative solutions and I, for one, was about to do particularly that, but then I thought better of it. It seems like you are somewhat new to joins or at least not very confident about how to use them, and I would like to encourage you to study the simple query ar has provided you with, because it is a pattern you are going to need to build the queries for new activity notification part of your problem. That is, I would advise you to try to do that part first by yourself, and that is why I'm not distracting you with a different solution to your second question but rather pointing you to the mentioned query: it is both a good solution and a useful starting point for building other queries you will need.
