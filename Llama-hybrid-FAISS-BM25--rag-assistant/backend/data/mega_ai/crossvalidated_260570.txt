[site]: crossvalidated
[post_id]: 260570
[parent_id]: 260566
[tags]: 
Let me be more specific at first, and then more general. I apologize if I misunderstand you. I think you are talking about needing an autoencoder neural network because you mentioned encode and decode, and you mentioned input size same as output size. If so, then your loss function is based on reproducing the input vector, yet also compressing the data into a shorter vector in the middle hidden layer. Choices would be to achieve the minimal mean square error (for regression) or logloss or misclassification ratio (for classification). However, CNNs are not something I have seen used in an autoencoder, but I do think it would be both possible and useful to do so in cases where translational invariance is important, such as edge and object detection in images. More generally, you seem to be building a very complex machine learning model since you mentioned CNNs. CNNs and other deep learning models are some of the most complex machine learning models that exist. Choosing dimensions, labels, and loss functions is more like elementary machine learning however. I think you might be in over your head with deep learning. Did you take a class on plain old machine learning first?
