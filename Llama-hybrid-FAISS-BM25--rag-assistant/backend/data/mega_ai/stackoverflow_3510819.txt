[site]: stackoverflow
[post_id]: 3510819
[parent_id]: 
[tags]: 
can't get address of the dll function with GetProcAddress

I created a dll with VS C++ (of course as a dll project) with the following code of the header file: #pragma once #include #include "..\..\profiles/ProfileInterface.h" using namespace std; extern "C" __declspec(dllexport) class CExportCoordinator: public CProfileInterface { public: CExportCoordinator(void); virtual ~CExportCoordinator(void); CProfileInterface* Create(); void Initialize(); void Start(); }; Here is .cpp file of the dll: #include "StdAfx.h" #include "ExportCoordinator.h" CExportCoordinator::CExportCoordinator(void) { } CExportCoordinator::~CExportCoordinator(void) { } CProfileInterface* CExportCoordinator::Create(){ cout I exported the whole class CExportCoordinator because I need to use all three methods it offers. Following is the code from the main application loading the, above given, dll on the fly. typedef CProfileInterface* (WINAPI*Create)(); int _tmain(int argc, _TCHAR* argv[]) { HMODULE hLib = LoadLibrary(name); if(hLib==NULL) { cout On the output I get that correct library is loaded, but that function pointer procAdd is NULL. I thought it had something to do with name mangling and added extern "C" when exporting the class in header of dll, but nothing changed. Btw, I used dll export viewer for viewing the exported functions of the class, and the whole class is exported correctly. Any help? UPDATE there is an error in the header file of dll. I shouldn't be using extern "C" __declspec(dllexport) before class because then class won't be exported at all. If I use class __declspec(dllexport) CExportCoordinator then the class is exported correctly, but anyway I can't get the address of the function other than NULL.
