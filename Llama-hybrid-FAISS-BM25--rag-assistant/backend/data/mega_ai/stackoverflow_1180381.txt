[site]: stackoverflow
[post_id]: 1180381
[parent_id]: 1180166
[tags]: 
I've been working on this today, too. What I've come up with involves adding an onSuccess handler and figuring out what the maximum size of each column is between the header and the body, then setting the width of both to the maximum for that column. grid.flexigrid({ ...other setup... onSuccess: function() { format(); }); } }); function format() { var gridContainer = this.Grid.closest('.flexigrid'); var headers = gridContainer.find('div.hDiv table tr:first th:not(:hidden)'); var drags = gridContainer.find('div.cDrag div'); var offset = 0; var firstDataRow = this.Grid.find('tr:first td:not(:hidden)'); var columnWidths = new Array( firstDataRow.length ); this.Grid.find( 'tr' ).each( function() { $(this).find('td:not(:hidden)').each( function(i) { var colWidth = $(this).outerWidth(); if (!columnWidths[i] || columnWidths[i] headerWidth ? bodyWidth : headerWidth; firstDataRow.eq(i).css('width',realWidth); header.css('width',realWidth); drags.eq(i).css('left', offset + realWidth ); offset += realWidth; } }
