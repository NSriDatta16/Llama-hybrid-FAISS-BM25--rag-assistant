[site]: stackoverflow
[post_id]: 1973638
[parent_id]: 1972597
[tags]: 
in your page, write this js method, it takes a parent and a child dropdown and it will fill the child dropdown asynchronously based on the parent dropdown's selected value: function LoadDataHandle(cmbParent,cmbChild,Type) { var cmb = document.getElementById(cmbParent); var mydate = new Date() mydate.setDate(mydate.getDate()) $.get("GetItems.aspx?ID=" + cmb.value + "&Type=" + Type + "&x=" + mydate.getMilliseconds(), function(data) { LoadData(data, cmbChild); }); } function LoadData(strData, cmbChild) { var cmb = document.getElementById(cmbChild); cmb.options.length = 0; var choose = document.createElement('option'); choose.text = "--- اختر ---"; choose.value = -1; cmb.add(choose); if (strData.length > 0) { var data = strData.split('$'); var i = 0; for (i = 0; i note that use of jqyery's $get method passing in the aspx page having the parentid in the query string. now in your page_load event of the aspx page containing the dropdowns Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load cmdParent.Attributes.Add("onchange", "LoadDataHandle('" & cmdParent.ClientID & "','" & cmdChild.ClientID & "');") End Sub we are almost done, note that in the GetItems.aspx age you will need to write out the items that should be filled in the child dropdown items as a single long string where each item is separated by a '#'. here is a sample of doing this : Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load Dim ID As Integer = Request.QueryString("ID") Response.Write(GetDepartment(ID)) End Sub Private Function GetDepartment(ByVal ID As String) As String Dim dt As DataTable = 'get from db If dt IsNot Nothing AndAlso dt.Rows.Count > 0 Then Dim sb As New StringBuilder(dt.Rows.Count * 20) For Each row As DataRow In dt.Rows sb.AppendFormat("{0}#{1}$", row(0), row(1)) Next Return sb.ToString End If Return "" End Function
