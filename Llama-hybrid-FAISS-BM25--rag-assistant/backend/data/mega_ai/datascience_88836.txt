[site]: datascience
[post_id]: 88836
[parent_id]: 88441
[tags]: 
As @10xAI said, a tree-based gradient boosted approach may miss the mark for time series because it cannot forecast a growing trend. However, we can apply gradient boosting methodology to any algorithm. You can mess around with some code I wrote that is based on gradient boosting and decomposition: LazyProphet . The code is badly written and I think the example data pulls break now but the method itself tends to produce some decent results. Essentially if we do boosting with some piecewise approach we can get new changepoints at each boosting round and update our seasonality + exogenous measures. I use binary segmentation so it ends up being very similar to a wild binary segmentation approach for change points. Round 0 the 'trend' is just the mean/median, then you measure seasonality and set your 'y' to the original time series - (trend + seasonality). Round 1 then finds the optimal point which splits the data into 2 and fits a trend estimator (could be the mean kind of like a tree output) then measures seasonality and adds these measures to what was found in round 0 to find the new residuals to fit for the next round and so on. Hopefully this image makes it clearer: I do have a much better written and more generalized approach coming soon!
