[site]: stackoverflow
[post_id]: 2516411
[parent_id]: 2516034
[tags]: 
Use the help function to find out what an object can do. import pylab help(pylab.array) "What library it belongs to" is a sort of funny question. You can easily know what module you are using it from if you refactor your code not to use import * . (Never ever ever use import * .) That does not mean that's it's original home— pylab is just a place where a bunch of stuff is pooled for convenience. pylab gets it from matplotlib.pylab which gets it from numpy which gets it from numpy.core.multiarray (which is a C extension module). You can see its original home by looking at pylab.array.__module__ when it's important, which is not often. Personally, I think you're better of not using pylab at all, just getting stuff from numpy , scipy , and matplotlib as you need it to keep things organized. To quote The Zen of Python: Namespaces are one honking great idea -- let's do more of those! How to build an numpy array from a file depends on the format of the file. numpy.fromfile / pylab.fromfile can import a binary file storing the array's data. (This is the same format used by numpy.tofile —big shock there.)
