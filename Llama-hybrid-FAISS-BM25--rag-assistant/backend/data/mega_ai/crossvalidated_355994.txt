[site]: crossvalidated
[post_id]: 355994
[parent_id]: 
[tags]: 
Representation input and output nodes in neural network for $\textit{AlphaZero}$ chess?

I am wondering how the neural network for AlphaZero chess works. I know that it takes a historic set of states of the board as input nodes. But I am wondering how many output nodes there are and what they represent? My assumption: Each output node represents a move. A move in chess is defined by the square the move starts from and the square the move ends. I've calculated all possible moves which are: diagonal moves (280), straight (horizontal/vertical) moves (896), knight (L-shape) moves (336) and castle moves (2 for agent only). All of these moves define all the possible moves all pieces in check can make. I am wondering if these should also be used as the number of output nodes where each of these nodes represents one move? This would mean that the total number of output nodes is 3028 (1514*2 since for every move their is a probability and a value (policy network and value network combined)) and that for every move the neural network would choose, all the invalid moves should be discarded (moves where there is no piece on the starting square, moves where piece on the starting square cannot perform that kind of move, moves where piece on the starting square is pinned, ...). Am I correct with this assumption of the neural network of AlphaZero chess?
