[site]: stackoverflow
[post_id]: 3167264
[parent_id]: 3167188
[tags]: 
Casting an integer to a larger integer is always safe. It sounds like your program has a stack corruption issue occurring somewhere that is overwriting the value of your function parameter. Your second paragraph makes a little sense in that one potential cause of this sort of error is a collision between the stack and the heap (i.e. out of memory), but the logic you've expressed is fundamentally wrong. The parameter of the Infected function is a copy of the argument. When you call Infected(rogue_int) , the system isn't expanding the allocation of rogue_int to 16 bits at runtime, it is allocating a new variable for the parameter, which is 16 bits wide, and then copying the value of the 8-bit rogue_int into it. The value and allocation of the argument rogue_int itself are not modified, so it's certainly not the case that rogue_int is having another, uninitialized 8 bits tacked onto the end of it.
