[site]: crossvalidated
[post_id]: 544709
[parent_id]: 
[tags]: 
Calculating parameters from non linear regression of sum of exponentials

I am attempting to fit some data that seems to follow an equation that is the sum of two exponentials. When fitting with a single exponential the residual histogram is not normally distributed. The sum of two single exponentials with a weighting term fits the data well, however the parameters are very susceptible to initial guesses. I am fitting this equation to 60 different data sets to determine the parameters, so I am trying to find a general method to determine the parameters. A weighted least squared minimization is what I am currently doing, but depending on initial guesses and bounds it is likely to not give a good fit (based on distribution of residuals). So are there other techniques for fitting the data? Equation I am using (with roughly 16000 points of $t, F(t)$ and determined variance at each time point): $$F(t) = F_0+(F_{eq}-F_0)A*e^{-k_1*t}+(F_{eq}-F_0)(1-A)*e^{-k_2*t}$$ Where $F_0$ and $F_{eq}$ are bounded in fitting and have initial estimates directly based on data (initial and endpoints). $1≥A≥0$ and $k_{1,2}≥0$ To be more specific I am fitting a kinetic process of binding to a protein. I am fitting this at multiple concentrations and then fitting $k_1$ and $k_2$ (which are actually $k_{obs1}$ and $k_{obs2}$ ) at multiple concentrations. If I take the values when the residuals aren't normally distributed and plot them, there is not a correlation between concentrations. If I force the values enough to give a normal distribution, then there is a correlation between concentrations (as there should be). Here's a link to a csv containing a condensed version of one trace (averaged every ten values to ~1500 points). Scipy curve fit works fairly well here and gives me values of $F_0, F_{eq}, A, k_1, k_2 ≈ 0.9977, 0.00074, 0.8166, 0.0715, 0.271$ , which gives me a reasonably good fit based on the distribution of residuals. However the provided answer gives me p = -2.0565 and q = -1154 assuming I've properly coded it. https://drive.google.com/file/d/1vLp4hGlXOv8kCXfuD39jIMiEQJQcGC-t/view?usp=sharing
