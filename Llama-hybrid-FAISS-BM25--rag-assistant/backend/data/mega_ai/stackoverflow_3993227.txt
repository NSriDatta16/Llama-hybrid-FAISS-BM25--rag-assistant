[site]: stackoverflow
[post_id]: 3993227
[parent_id]: 
[tags]: 
Why doesn't this Ruby replace regex work as expected?

Consider the following string which is a C fragment in a file: strcat(errbuf,errbuftemp); I want to replace errbuf (but not errbuftemp) with the prefix G-> plus errbuf. To do that successfully, I check the character after and the character before errbuf to see if it's in a list of approved characters and then I perform the replace. I created the following Ruby file: line = " strcat(errbuf,errbuftemp);" item = "errbuf" puts line.gsub(/([ \t\n\r(),\[\]]{1})#{item}([ \t\n\r(),\[\]]{1})/, "#{$1}G\->#{item}#{$2}") Expected result: strcat(G->errbuf,errbuftemp); Actual result strcatG->errbuferrbuftemp); Basically, the matched characters before and after errbuf are not reinserted back with the replace expression. Anyone can point out what I'm doing wrong?
