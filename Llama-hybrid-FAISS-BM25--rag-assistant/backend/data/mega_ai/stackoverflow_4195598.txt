[site]: stackoverflow
[post_id]: 4195598
[parent_id]: 4091110
[tags]: 
This is my best guess at a solution, but I haven't had a chance to test it. It relies on the following settings for your current provider: enablePasswordRetrieval="true" requiresQuestionAndAnswer="false" passwordFormat="Encrypted" It also assumes that the new machinekey is already in the config file. Create the following class (thanks to mootinator for the jumpstart on this) using System.Reflection; using System.Web.Configuration; using System.Web.Security; namespace MyNamespace { public class MySqlMembershipProvider : SqlMembershipProvider { protected override byte[] DecryptPassword(byte[] encodedPassword) { MachineKeySection section = (MachineKeySection)WebConfigurationManager.GetSection("system.web/machineKey"); section.DecryptionKey = "oldkey"; // TODO: Set your old key here MethodInfo method = typeof(MachineKeySection).GetMethod("EncryptOrDecryptData", BindingFlags.Instance | BindingFlags.NonPublic); return (byte[])method.Invoke(section, new object[] { encodedPassword, null, 0, encodedPassword.Length, 0, false, false }); } } } In your web.config: Change the passwords with the following code: MembershipProvider retrievePasswordProvider = Membership.Providers["MySqlMembershipProvider"]; foreach (MembershipUser user in Membership.GetAllUsers()) { MembershipUser retrievePassworedUser = retrievePasswordProvider.GetUser(user.UserName, false); string password = retrievePassworedUser.GetPassword(); // get password using old key user.ChangePassword(password, password); // change password to same password using new key } Let me know if that works for you.
