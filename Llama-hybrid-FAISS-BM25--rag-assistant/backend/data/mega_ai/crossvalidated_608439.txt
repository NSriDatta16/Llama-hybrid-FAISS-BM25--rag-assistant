[site]: crossvalidated
[post_id]: 608439
[parent_id]: 
[tags]: 
Performing 3 multivariate linear regressions at once

I have 3 variables X, Y and Z. I want to perform 3 OLS regressions: X dependent on Y and Z, Y dependent on X and Z, and Z dependent on X and Y. Instead of doing the 3 of them sepparately, I want to know how can I do them in a single go via: $A = B \beta + \epsilon$ Where $A$ is an n x 3 matrix (n observations of the 3 variables) I asked ChatGPT and it suggested creating a $B$ matrix with shape (n, 6) (or 7 if we account for the intercept) where the columns would be the variables Y, Z, X, Z, X, Y and then regress it to get a parameters matrix beta with shape (6, 3) (or (7, 3) with the intercept). But after that I'm not sure how to interpret this resulting matrix or if it even makes sense (CGPT has definitely stopped making sense when talking about this resulting matrix and how to interpret it). Another strange thing is that even if this makes sense and I'm doing it correctly (which I doubt), I'm not getting the results that I'd expect. If I run a regression of X on Y and Z only, I get the parameters array([1.84477116, 0.74949417, 0.46818174]) But if I run all the regressions at the same time I get the matrix: array([[ 1.32178002e-09, 9.02019792e-10, -2.18881269e-09], [ 9.83568782e-11, 5.00000000e-01, -1.72848402e-10], [ 5.98987526e-12, 2.35829134e-11, 5.00000000e-01], [ 5.00000000e-01, -9.13527032e-11, 3.39086093e-10], [ 1.90638616e-11, 3.31752403e-11, 5.00000000e-01], [ 5.00000000e-01, -4.81339413e-11, 3.72506470e-10], [ 1.19651844e-10, 5.00000000e-01, -1.60753189e-10]]) Which doesn't show the results of the single OLS anywhere. Here is the code I'm using: y = df.to_numpy() #df is a dataframe with 3 columns and n rows (observations) x = add_constant(pd.DataFrame(data=[df.iloc[:,1], df.iloc[:,2], df.iloc[:,0], df.iloc[:,2], df.iloc[:,0], df.iloc[:,1]]).T).to_numpy() #it adds a new column of ones for the intercept cov = np.dot(x.T, x) inv = np.linalg.pinv(cov) H = np.dot(inv, x.T) betas = np.dot(H, y)
