[site]: stackoverflow
[post_id]: 4944343
[parent_id]: 
[tags]: 
.net webservice proxy class organization/regular expression to match c# class definition

I'm working with a .net webservice which has several hundred methods in it. (I've no control over the webservice, so I can't refactor it). However I'm working with the client side of it and I've to generate the client side proxy class whenever something changes in the WS. (And it changes quite often). I generate this proxy class using the wsdl.exe. wsdl.exe http://url.asmx /o:Proxy.cs /n:My.Name.Space This generated proxy class contains classes for the return types, input types used in the WS. Imagine this example: I've an DTO assembly called My.Application.DTO.dll it contains a class called MyDTOClass . This assembly is referred by both WebService project and the Windows app project which calls the webservice through the proxy class. Imagine that my webservice has a method like this [WebMethod] public MyDTOClass GetSomeDTOMethod(int id) { ... } Now when I generate the proxy for this, proxy will contain a definition for a MyDTOClass . Inside a different namespace of course. Then I use the proxy class as follows: My.Application.DTO.MyDTOClass dto; dto = WSProxy.GetSomeDTOMethod(x); This fails saying unable to cast WebService.Namespage.MyDTOClass to a My.Application.DTO.MyDTOClass because Proxy class has its own definition of the MyDTOClass . If I delete the class definition in the proxy class everything works fine. I've to manually edit the generated proxy class to remove these duplicate class definitions to get it work again. Since this file is huge its not always easy. And the order of these classes are also changing with every generation. I've tried to solve this in following ways, but none of them really did the job (or I couldn't get them to) Somehow prevent wsdl from generating these class definitions into the proxy. By decorating the methods with some attribute for example. But couldn't find a way to do that. Automate editing of the generated proxy class using powershell. I'm thinking of matching all the lines defining a class using a regurlar expression, and then delete them all from the file. Get wsdl to generate code elements in a predictable order so that my editing becomes easy I would really appreciate if anyone can help me get out of this issue. Currently I'm biased towards the second option. So if anyone can help me with a regular expression to match c# partial class definition including new lines, that would be really helpful. (In the powershell regex flavor, if not too much to ask)
