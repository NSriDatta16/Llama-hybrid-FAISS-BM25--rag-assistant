[site]: stackoverflow
[post_id]: 1187384
[parent_id]: 1187323
[tags]: 
In the doc you reference, there is a section titled Embedding dependencies that describes how the plugin resolves the Maven project dependencies and add them to the classpath and resources. The plugin uses the instruction to transform the project dependencies into and clauses, which are then appended to the current set of instructions and passed onto BND. If you want the embedded dependencies to be at the start or middle of or then you can use {maven-dependencies}, which will automatically expand to the relevant clauses. ... The plugin uses the instruction to transform the project dependencies into and clauses, which are then appended to the current set of instructions and passed onto BND. If you want the embedded dependencies to be at the start or middle of or then you can use {maven-dependencies}, which will automatically expand to the relevant clauses. In the example below the {maven-dependencies} placeholder will be expanded to include the project dependencies that are scope runtime or compile into the Include-Resource and Bundle-Classpath elements. *;scope=compile|runtime {maven-resources},{maven-dependencies} .,{maven-dependencies},some.jar Normally the plugin only checks direct dependencies, but this can be changed to include the complete set of transitive dependencies with the following option: true If you want a dependency inlined instead of embedded add the inline=true. For example to inline all compile and runtime scoped dependencies use: *;scope=compile|runtime;inline=true
