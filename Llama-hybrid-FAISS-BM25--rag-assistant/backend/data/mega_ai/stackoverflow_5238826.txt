[site]: stackoverflow
[post_id]: 5238826
[parent_id]: 5238500
[tags]: 
Data given wont help much in determining what numbers you want. But based on my experience I'll try to help you in analysis. 15,000,000 visits a month means 700K visits a day (assuming approx 30-35% visits are by repeat visitors). 700Kx5=3.5million page views a day. Assuming 14 hours of active period, typical for single timezeone sites. Its 70reqs/sec. With this big userbase few thing you surely need is a high performance DB server, with one slave. Config of these DB server Memory so that whole active data + indexes fits in memory (No swapping/thrashing should happen). This you need to calculate based on what you will be storing for user and for how long. Use some reliable storage like RAID10 (higher read/write bandwith). Take enough storage, see that its elastic enough. (like AWS EBS). Make frontend app server lightweight and horizontally scalable. Put them behind a loadbalancer (use software loadbalancer like nginx or HAproxy). You should be able to put as many as you go to your goal. For loadbalacer and frontend take 4CPU, 4-8GB RAM servers . How much each frontend can take need to be tested using a load testing method and realistic test data. Reduce load on database/persistent using a inmemory/+persistent caches like memcached/membase/redis etc. Take a servers with 8GB and add more as you feel need. I have not discussed about DB partitioning. Do that only when you feel the need of it. Do not over invest at start. With 15M users a month, this setup should be enough, but again it all depends on you 1. memory footprint, 2. amount of active data I tried to answer as much as possible. Comments on points you disagree or wanna discuss more.
