[site]: stackoverflow
[post_id]: 275285
[parent_id]: 275222
[tags]: 
GDI+ vs. WPF What are the benefits of WPF graphics subsystem? Let's see: Retained Mode Drawing/Composition Vector Graphics True Transparency And more ... What are the benefits of GDI+? Hmm. That's harder, because I love WPF so much. However, if you were in the position to have to be constantly recreating the geometry of the objects that you are trying to render, then you might need the immediate mode API that GDI+ offers. Here are two ( one , two ) really great blog posts on this matter. ( Note that the above blog posts are rather old. They still contain great information, but also be aware that the WPF team has made significant advances in performance and graphics capabilities since the original version of WPF (.NET 3.0)). System Requirements They're are really no minimum system requirements for WPF applications other than that the operating system must be at Windows XP SP 2 or greater and that .NET 3.0 (at least) must be installed . However, that being said, the better quality graphics card in the machine the WPF application is running on the better. What we have noticed ourselves is that WPF performs quite well even on older hardware, especially if you aren't doing anything too tricky or fancy. What does that mean? Well, in my own experience, watch your performance more closely if you start doing anything with WPF 3D and/or bitmap effects . In fact, I would encourage you to monitor your performance throughout the development of the application. One final thing I would add ... is that we have seen some very weird graphics issues ( this and this ) with certain video solutions and in particular with Intel integrated video. Please check out this other StackOverflow post for more info on hardware limitations, and in particular, check out the information on Rendering Tiers .
