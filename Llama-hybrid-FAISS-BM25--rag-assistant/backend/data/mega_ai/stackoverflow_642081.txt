[site]: stackoverflow
[post_id]: 642081
[parent_id]: 337985
[tags]: 
Can you use ordinary TCP/IP socket in your application? A) If yes then definitely a raw TCP/IP socket is more elegant solution. From your iPhone app you just wait for notification events. The socket is open as long as your application is open. If you want you can even use HTTP protocol / headers. On the server side you can use some framework to write servers which efficiently handle thousands of open TCP/IP connections. e.g Twisted , EventMachine or libevent . Then just bind the server main socket to http port (80). The idea is to use a server which keeps just a single data structure per client. Receives update event from some DB application and then pushes it to right client. B) No, you have to use Apache and http client on iPhone side. Then you should know that whole COMET solution is in fact work around for limitations of HTTP protocol and Apache / PHP. Apache was designed to handle many short time connections. As far I know only newest versions Apache (mpm worker) can handle efficiently big number of opened connection. Previously Apache was keeping one process per connection. Web browsers have a limit of concurrent open connections to one web server (URL address in fact, eg. www.foo.com, not IP address of www.foo.com). And the limit is 2 connections. Additionally, a browser will allow only for AJAX connections to the same server from which the main HTML page was downloaded.
