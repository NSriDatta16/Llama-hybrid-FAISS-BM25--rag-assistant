[site]: stackoverflow
[post_id]: 2764247
[parent_id]: 2630079
[tags]: 
1 You can assert your soap server use gzip compression for http content, as well as your site output does. A 0,7s roundup to SF seems a bit long, it's either webservice is long to answer, either there is an important natwork latency. If you can, give a try to other hosting companies for your belgium server, in France some got a far better connectivity to the US than others. I experienced to move a website from one host o another and network latency between Paris and New york has almost doubled ! it's uge and my client with a lot of US visitors was unhappy with it. The solution of relocating web server to SF can be an option, you'll get a far better connectivity between servers, but be careful of latency if your visitors are mainly located in Europe. 2 You can use an opcode cache mecanism, such as xcache or APC. It wil not change the soap latency, but will improve php execution time. 3 Depending if soap request are repetitive, and how long could a content update could be extended, you can give it a real improvement using cache on soap results. I suggest you to use in-memory caching system (Like xcache /memcached or other) because they're ay much faster than file or DB cache system. From your class, the createclient method isn't the most adapted exemple functionality to be cached, but for any read operation it's just the best way to perf : private function _createClient() { $xcache_key = 'clientcache' if (!xcache_isset($key)) { $ttl = 3600; //one hour cache lifetime $client = $this->_getClient(); ///private method embedding your soap request xcache_set($xcache_key, $client, $ttl); return $client; } //return result form mem cache return xcache_get($xcache_key); } The example is for xcache extension, but you can use other systems in a very similar manner 4 To go further you can use similar mecanism to cache your php processing results (like template rendering output and other ressource consumming operations). The key to success with this technic is to know exactly wich part is cached and for how long it will stay withous refreshing.
