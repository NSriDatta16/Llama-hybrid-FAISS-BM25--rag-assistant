[site]: stackoverflow
[post_id]: 1326861
[parent_id]: 1322793
[tags]: 
While @hacker's version is technically correct, my Visual Studio 2008 failed to optimize it properly. Here's my version, which works perfectly. It also performs only logarithmic number of operations as per your request. Although this version is not as elegant, Visual Studio is actually able to calculate the value of nearestPowerOfTwo(value) without executing it. (You must enable optimizations of course). template struct value_holder { static const T value = v; }; template struct ln_detail { typedef typename ln_detail > 1)>, value_holder >::type type; }; template struct ln_detail , partial_result> { typedef partial_result type; }; template struct ln { static const T value = ln_detail , value_holder >::type::value; }; template T nearestPowerOfTwo(T v) { if (v ::value; ++i) v |= v >> (1
