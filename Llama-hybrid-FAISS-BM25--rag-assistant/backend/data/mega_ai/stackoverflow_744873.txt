[site]: stackoverflow
[post_id]: 744873
[parent_id]: 744840
[tags]: 
I like being able to write scripts to extend the functionality of an application. Even better when the scripting language is a well known one. I would not limit the functionality a script can do based on concerns about performance. You don't know how something will behave on future hardware for example; however, you should limit what it can do for security / functionality. If you have performance concerns, then I would implement extension points via script but also via plugins that would allow compiled code to be executed and ran. Edit In general I don't think it introduces anymore vulnerabilities then extending an application via a plug in for example. As for specific vulnerabilities, I really couldn't say without knowing more about your application is. But take web browsers for example. IE has had plenty of security flaws because scripts could access more resources then they should have been. Forcing extensions to be done via compiled code does allow you to leverage mechanisms to help prevent attacks. You could inspect an assembly for example (Assuming .net here). easily looking for malicious code (Yes you could do this with scripting as well) , or you could prevent access to certain resources cia Code Access Security. You could also leverage code signing, and only load plugins from trusted publishers.
