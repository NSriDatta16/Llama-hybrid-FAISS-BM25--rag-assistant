[site]: stackoverflow
[post_id]: 1517834
[parent_id]: 673826
[tags]: 
Ganesh M - If the key does not exist in the array, then your function will be stuck inside of a never ending loop. It can never return FALSE. What is the optimal way to find the insertion point, if the key does not exist? A conditional "if cascade" accounting for will only return TRUE, or continue to compute forever. I need the optimal condition to determine when a key has been isolated as not existing. I know that this will slow down the search, but I want to slow it down by the least amount. playing with log(N)/log(2) seems like a good idea, but when N is not a power of 2, things can go haywire. Perhaps, I should choose an array with a size of power of 2, and use a simple while loop? does checking if the midpoint == to either bound increase the number of comparisons too much?
