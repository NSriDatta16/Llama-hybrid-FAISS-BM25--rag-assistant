[site]: stackoverflow
[post_id]: 3863607
[parent_id]: 3861843
[tags]: 
Assuming your form variable is called ReportForm: The normal way is to just call the ReportForm.Show method again. Or set ReportForm.WindowState to wsNormal for minimized windows. Or call ShowWindow(ReportForm.Handle, SW_RESTORE); which will put a minimized window back in it's original shape. You can also force the ReportForm to the front, but because it's non-modal, it won't respond to anything, making your application behave as if it's hanging. To do this, use: ReportForm.FormStyle := fsStayOnTop; ReportForm.Show; ReportForm.FormStyle := fsNormal; It works, bringing ReportForm back to the foreground. You might want to preserve the old FormStyle value, though. And yeah, it's a bit of a hack. Furthermore, the form will not respond to the mouse or keyboard simply because the modal form is still demanding attention in the background! (It will sooner or later return to the foreground again.) A modal form will demand all attention from the Windows messages. This trick will just temporary hide the modal form. Btw, the simplest way to find that form is by using a global variable in your project and assign the report form to that variable. Then you can just call if Assigned(YourForm) then YourForm.Show; when you need to display it again. (Plus the other two lines, if need be.) So, best solution would be the ShowWindow(ReportForm.Handle, SW_RESTORE); which should work, I think... It will pop back behind the modal form, where it's supposed to be.
