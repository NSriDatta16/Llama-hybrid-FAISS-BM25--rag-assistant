[site]: stackoverflow
[post_id]: 2879556
[parent_id]: 2879496
[tags]: 
Here's a sneaky way: #include static void recur_up (int n) { if (n > 1) recur_up (n - 1); printf ("%d\n", n); } static void recur_down (int n) { printf ("%d\n", n); if (n > 1) recur_down (n - 1); } int main (void) { recur_up (10); recur_down (10); return 0; } which generates: 1 2 3 4 5 6 7 8 9 10 10 9 8 7 6 5 4 3 2 1 It would have been a lot more elegant going down then up since you could do that with a single function: static void recur_both (int n) { printf ("%d\n", n); if (n > 1) recur_down (n - 1); printf ("%d\n", n); }
