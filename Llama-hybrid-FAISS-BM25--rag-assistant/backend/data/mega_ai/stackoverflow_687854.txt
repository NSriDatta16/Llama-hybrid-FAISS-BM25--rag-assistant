[site]: stackoverflow
[post_id]: 687854
[parent_id]: 687825
[tags]: 
If you fire up, in process , an instance of the Visual Studio development web server, and then run your WatiN test, then you can wrap the test in a single block like so: using (new TransactionScope()) { var server = new Server(PORT_NUMBER, VIRTUAL_PATH, PHYSICAL_PATH); server.Start(); try { using (var ie = new IE()) { // TODO: perform necessary testing using ie object } } finally { server.Stop(); } } and all your database connections will in theory enlist in a single distributed transaction and their changes will all be rolled back when the TransactionScope is disposed. To run the dev web server in process, you will need to extract WebDev.WebHost.dll from the GAC and reference it in your project - this is the source of the Server class in the snippet above. Please let me know if you need more detailed instructions. You'll need to make sure MSDTC is running, and if there are firewalls between you and the databases then depending on the port settings you may struggle. One added bonus of firing up the server in process is that WatiN tests can now contribute to measurements of code coverage.
