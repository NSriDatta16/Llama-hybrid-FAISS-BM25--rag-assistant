[site]: stackoverflow
[post_id]: 4531975
[parent_id]: 4440816
[tags]: 
When Developing modelling the database then compolsury to define the primary key or forign key in each tables of the databse if any tables that do not contain any unique field that time how can we connect the table with other table. (1) Yes. You are experiencing complications and difficulties at step 6 because you have not completed step 5. The steps have to be followed in sequence. A Relational Database requires that the rows (not the identity column) in each table are unique. It is compulsory. If the rows are not unique, it is not a Relational table, it is something else, a bucket of fish. After that FKs, etc will be easy. before that, FKs etc will be impossible. (2) You already have a very good, stable unique Identifier for Person . The Professional and WorkPreference tables are missing a column or two. They do not sit out their on their own. Who or what does Professional and WorkPreference apply to ? They belong to a Person . The only Person Identifier you have so far is EmailAddress . So EmailAddress needs to be added to Professional and WorkPreference . EmailAddress is the PK in Professional and WorkPreference . EmailAddress is also the FK in Professional and WorkPreference to Person . (So far the cardinality is 1::1.) (3) Now you may also need an Unique Constraint on Person.Name , but then you have to deal with two "Bob Smith" and "Bob Smith" vs "Smith, Bob" vs "Robert Smith". So there is still some work to do there. If it is a simple database it may not matter Person.Name may be good enough. That is it, the task is complete at the logical level. (4) Now at the physical level (elements that the user does not see), you may decide that carrying the CHAR(30) EmailAddress in the child tables is not sensible for performance reasons, so you may add a narrow Surrogate Key to Person , such as PersonId INT . A Surrogate Key is always an additional column and index ; it is not a substitution for the natural keys; you still need EmailAddress UNIQUE as the natural key that maintains uniqueness of rows. Then you can use PersonId as the PK in Person . Then you migrate PersonId as the FK and PK to Professional and WorkPreference ; instead of EmailAddress . But you cannot give up Person.EmailAddress UNIQUE , because that is the basis of maintaining unique rows in Person .
