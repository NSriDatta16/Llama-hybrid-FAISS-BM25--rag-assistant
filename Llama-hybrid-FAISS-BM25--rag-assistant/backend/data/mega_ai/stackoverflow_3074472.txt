[site]: stackoverflow
[post_id]: 3074472
[parent_id]: 3074452
[tags]: 
You can't avoid using Objective-C or Objective-C++, due to the many APIs you'll have to interact with. Whether you also use C++ for the core of your game depends largely on experience and the third-party tools you plan to use. I wrote my game mostly in C++ even though the only major third-party component I use — Chipmunk Physics — is written C. This was mainly because I have been programming C++ for years, and I'm much more comfortable with it than with Objective-C. Others will of course have different perspectives, depending on their experience. Speaking more subjectively, I find C++ is a much better language for writing spatial game logic. Its ability to represent vectors, matrices, etc., as classes and overload mathematical operators on them makes things much cleaner. Also I find Objective-C's retain/release model to be a royal PITA, compared to C++'s RAII . WRT, images. I found PNG to be quite adequate, though my game isn't texture-heavy. This page provides a lot of insight into efficient texture storage on the iPhone. Texture atlases are particularly important.
