[site]: stackoverflow
[post_id]: 1522270
[parent_id]: 1512534
[tags]: 
I don't think you understand how CD works. You can't detach an object from CoreData, CD is the backing store for the object. I am also pretty certain that the issues you are seeing are not related to the code you have included above, because even in the first case there is nothing in the code you have that will commit the changes to persistent storage. Absent a call to NSManagedObjectContext:save: all changes to your object graph will be transient. In other words, in order to do what you want to do (tweak stuff without saving it), just don't call save: on the context the object is in after you tweak it. If you need to save other changes you can either explicitly roll back the tweaks before the save, or you can wrap the tweaked objects in their own context before fiddling with them: NSManagedObjectContext *tweakingContext = [[NSManagedObjectContext alloc] init]; tweakingContext.persistentStoreCoordinator = person.managedObjectContext.persistentStoreCoordinator; PersonObj *tweakablePerson = [tweakingContext objectWithID:person.managedObjectID]; //Do your stuff [tweakingContext release]; The above code will give you you new object (tweakablePerson) that is faulted in from the same data as person, but in an independent context you will never save. If you do ever want to save it you can, but you will have to deal with other issues (potential save conflicts if other saves have occurred). Again, while that answers the question you are asking, I don't think it will solve your problem because the issue is almost certainly not in the fetch or object creation code (which you show), but in the save code which you have not listed.
