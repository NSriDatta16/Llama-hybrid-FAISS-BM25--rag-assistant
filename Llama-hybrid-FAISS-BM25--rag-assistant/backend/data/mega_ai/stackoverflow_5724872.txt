[site]: stackoverflow
[post_id]: 5724872
[parent_id]: 5724716
[tags]: 
I think there is two problems here. From what I can gather you want to do a join on two tables, order them by points and then return the nth record. I've put together an UNTESTED query. The inner query does a join on the two tables and the outer query specifies that only a specific row is returned. This example returns the 4th row. SELECT * FROM (SELECT *, @rownum := @rownum + 1 AS rank FROM `points_table` `p` JOIN `accounts_table` `a` ON a.ID = p.UID, (SELECT @rownum:=0) r ORDER BY `p`.`points` DESC) mytable WHERE rank = 4 Hopefully this works for you! I've made a change to the answer which should hopefully resolve that problem. Incidentally, whether you use a php or mysql to get the rank, you are still putting a heavy strain on resources. Before mysql can calculate the rank it must create a table of every user and then order them. So you are just moving the work from one area to another. As the number of users increases, so too will the query execution time regardless of your solution. MySQL will probably take slightly longer to perform calculations which is why PHP is probably a more ideal solution. But I also know from experience, that sometimes extraneous details prevent you from having a completely elegant solution. Hope the altered code works.
