[site]: stackoverflow
[post_id]: 1038883
[parent_id]: 
[tags]: 
Testing the robustness of a flash drive: dd'ing the drive till it fails?

I've been given a cheap, brandless 2GB flash drive. As I have a bigger flash drive, I have decided to use it for testing flash technology robustness. I plan to write 1's all over the drive, check for correctness, write 0's, check and so on. I'll log the results, and seek for failures later. I am looking for the most resource-saving technique for doing that. My current strategy includes using linux dd command for writing and reading, and comparing the result to a file of ones and zeros. Another approach would be writing ones and zeros to the drive, and calculating the md5 of its contents. This is a simple trade-off between extensive IO reads and high CPU usage; I guess I'll simply measure the running time of each method and decide. Are there any better, more elegant ways of doing this?
