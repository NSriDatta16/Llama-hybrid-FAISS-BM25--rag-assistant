[site]: crossvalidated
[post_id]: 519520
[parent_id]: 519413
[tags]: 
I don't have a fully satisfactory answer, but it may be helpful. If you really want to understand the details, you may want to step through the source code of forecast.Arima() (note the capital A). Your arima() call fits an ARIMA(0,1,0)(0,0,1)[12] model. The formula for this model is $$ (1-B)y_t = (1-\Theta B^{12})\epsilon_t, $$ where $B$ indicates the backshift operator, or $$ y_t = y_{t-1}+\epsilon_t+\Theta\epsilon_{t-12}. $$ Running your code, we see from the output of themodel that $\Theta$ is estimated as $\widehat\Theta=0.15$ . Now, what happens when the fitted values are calculated? We can first look at a simpler model, namely an ARIMA(0,1,0) one. This is exactly your model, except for the seasonal MA term. Actually, it's a simple random walk: $$ y_t = y_{t-1}+\epsilon_t. $$ Take a look at what the fitted values for this model are, and compare to the actuals: forecast(arima(var1,order = c(0,1,0)),h=12)$fitted var1 You will note that the fitted values are exactly the original values, shifted by one month. And really, that is not surprising. In calculating the fitted value $\widehat{y}_t$ for time $t$ , we take the previous observation $y_{t-1}$ plus an estimate $\widehat{\epsilon}_t$ for the innovation $\epsilon_t$ at time $t$ . Since the $\epsilon_t$ are assumed to be normally distributed, one reasonable estimate is $\widehat{\epsilon}_t=0$ , which is just the expectation. This leads to $$ \hat{y}_t = y_{t-1}+0, $$ so the fitted value is just the original time series shifted by one month. Now, for your model with the seasonal MA term, there is a slight deviation from this simple shift. It seems like $\widehat{\epsilon}_t$ is estimated as $0$ , but $\widehat{\epsilon}_{t-12}$ is not, so the fitted value here is $$ \hat{y}_t = y_{t-1}+\widehat{\epsilon}_t+\widehat\Theta\widehat{\epsilon}_{t-12} = y_{t-1}+0+0.15\widehat{\epsilon}_{t-12} = y_{t-1}+0.15\widehat{\epsilon}_{t-12}.$$ It looks like $\widehat{\epsilon}_{t-12}$ is quite small, so the "wiggling" is small, too. I don't think this is intended. Either the innovations are estimated as zero, but then they should also be estimated that way for the seasonal lags, or they could also be estimated as the actual residuals between $y_t$ and $y_{t-1}$ in the random walk. (But then, of course, the fitted values in the random walk would be precisely the time series itself, which would also be of dubious usefulness, and your model's fitted values would wiggle a little around the time series itself.) Incidentally, if you just use the model that auto.ssarima() fits, which is a different one (it includes a drift term!), you get a different plot: plot(forecast(auto.ssarima(var1),h=12))
