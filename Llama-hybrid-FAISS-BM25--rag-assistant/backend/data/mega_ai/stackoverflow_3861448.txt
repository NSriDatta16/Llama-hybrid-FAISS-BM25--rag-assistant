[site]: stackoverflow
[post_id]: 3861448
[parent_id]: 
[tags]: 
Multi threading in WPF using C# (with background worker)

I have written code to save an image which is generated by the application. The size of the image is around 32-35 MB. While saving the image to a BMB file, it is taking a long time, around 3-5 secs. For this purpose, I have used a background worker but when running the background worker, it shows an error like..."can't access the object as it is created on different thread". Following is the code: private void btnSaveDesign_Click(object sender, RoutedEventArgs e) { Microsoft.Win32.SaveFileDialog sfd = new Microsoft.Win32.SaveFileDialog(); sfd.Title = "Save design as..."; sfd.Filter = "BMP|*.bmp"; if (sfd.ShowDialog() == true) { ww = new winWait(); ww.Show(); System.ComponentModel.BackgroundWorker bw = new System.ComponentModel.BackgroundWorker(); bw.DoWork += new System.ComponentModel.DoWorkEventHandler(bw_DoWork); bw.RunWorkerCompleted += new System.ComponentModel.RunWorkerCompletedEventHandler(bw_RunWorkerCompleted); fName = sfd.FileName; cache = new CachedBitmap((BitmapSource)imgOut.Source, BitmapCreateOptions.None, BitmapCacheOption.OnLoad); bw.RunWorkerAsync(); } } void bw_RunWorkerCompleted(object sender, System.ComponentModel.RunWorkerCompletedEventArgs e) { ww.Close(); } void bw_DoWork(object sender, System.ComponentModel.DoWorkEventArgs e) { BmpBitmapEncoder encoder = new BmpBitmapEncoder(); encoder.Frames.Add(BitmapFrame.Create(cache)); //here... it says cant access... using (FileStream file = File.OpenWrite(fName)) { encoder.Save(file); } } I have declared "cache" as a global object. (A similar trick worked when I was programming in Windows Forms with VB.NET.) ww is the wait window that I want to be displayed while the precess is being executed. How to do this? Is there any other simple method for multi threading in WPF?
