[site]: stackoverflow
[post_id]: 5197190
[parent_id]: 5195923
[tags]: 
The proper solution would be to use MVVM and create a view model for each item in the TreeView with IsSelected and IsExpanded properties bound to the corresponding TreeViewItem properties. Then you will be able to manipulate the IsExpanded and IsSelected states without having to dial with item containers generators. But also you could do the following (sorry, my code will be in C#): TreeViewItem companyTreeViewItem = (TreeViewItem)AgentTreeView.ItemContainerGenerator.ContainerFromItem(contact.Branch.Company); companyTreeViewItem.IsExpanded = true; companyTreeViewItem.ItemContainerGenerator.StatusChanged += (o, e) => { if (companyTreeViewItem.ItemContainerGenerator.Status == GeneratorStatus.ContainersGenerated) { TreeViewItem branchTreeViewItem = (TreeViewItem) companyTreeViewItem.ItemContainerGenerator.ContainerFromItem(contact.Branch); branchTreeViewItem.IsExpanded = true; branchTreeViewItem.ItemContainerGenerator.StatusChanged += (o1, e1) => { if (branchTreeViewItem.ItemContainerGenerator.Status == GeneratorStatus.ContainersGenerated) { TreeViewItem contactTreeViewItem = (TreeViewItem) branchTreeViewItem.ItemContainerGenerator.ContainerFromItem(contact); contactTreeViewItem.IsSelected = true; } }; } };
