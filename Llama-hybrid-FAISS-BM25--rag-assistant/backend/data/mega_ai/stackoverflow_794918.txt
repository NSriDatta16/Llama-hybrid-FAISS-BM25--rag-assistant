[site]: stackoverflow
[post_id]: 794918
[parent_id]: 794870
[tags]: 
There isn't a definitive answer and it's highly unlikely there is a standard algorithm for that. How you do that heavily depends on the kind of data you want to relate and how it is organized. It depends on how you define "related" in the scope of your application. Often the simplest thought produces good results. In the case of books, if you have a database with several attributes per book entry (say author, date, genre etc.) you can simply chose to suggest a random set of books from the same author, the same genre, similar titles and others like that. However, you can always try more complicated stuff. Keeping a record of other users that required this "product" and suggest other "products" those users required in the past (product can be anything from a book, to a song to anything you can imagine). Something that most major sites that have a suggest function do (although they probably take in a lot of information, from product attributes to demographics, to best serve the client). Or you can even resort to so called AI; neural networks can be constructed that take in all those are attributes of the product and try (based on previous observations) to relate it to others and update themselves. A mix of any of those cases might work for you. I would personally recommend thinking about how you want the algorithm to work and how to suggest related "products". Then, you can explore all the options: from simple to complicated and balance your needs.
