[site]: stackoverflow
[post_id]: 5466052
[parent_id]: 5251528
[tags]: 
TDD is about adding functionality. It encourages minimal logic in UI components - mostly they should be pure delegates to the code that does the real work, that you can test. I would recommend, for the purposes of learning TDD, don't bother writing tests about UI behaviour (eg binding data to a control). To learn TDD effectively, I think a good place to start is try a few code katas. A code kata is a small problem which you do repeatedly. The solution you develop is not the important thing - learn from the process of getting to the solution. So do the problem 10 times, and deliberately choose different designs for the solution each time. TDD is about the process. There is a list of katas here: http://codingdojo.org/cgi-bin/wiki.pl?KataCatalogue The Roman Numerals kata is a good one, but just pick one that appeals to you.
