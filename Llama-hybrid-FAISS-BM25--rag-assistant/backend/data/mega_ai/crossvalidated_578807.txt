[site]: crossvalidated
[post_id]: 578807
[parent_id]: 574118
[tags]: 
You can use StatsForecast to perform your task. The library parallelizes the training for each time series ( ID ). StatsForecast receives a pandas dataframe with tree columns: unique_id , ds , y . So you have to rename your columns: from statsforecast.core import StatsForecast from statsforecast.models import auto_arima df = df.rename(columns={'ID': 'unique_id', 'Val': 'y', 'Date': 'ds'}) df = df.set_index('unique_id') fcst = StatsForecast(df, models=[auto_arima], freq='D') forecasts = fcst.forecast(h=30) You can use StatsForecast with spark trough fugue . Here's and example. If you use Ray , you can also scale your task . Regarding using prophet , I recommend using other models such as the AutoARIMA from StatsForecast . With this experiment we have seen that it is a lot faster and more accurate than prophet .
