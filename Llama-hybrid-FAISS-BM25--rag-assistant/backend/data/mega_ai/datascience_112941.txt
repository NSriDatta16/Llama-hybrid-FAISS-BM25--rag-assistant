[site]: datascience
[post_id]: 112941
[parent_id]: 
[tags]: 
Training on multiple timeseries at different locations

I have timeseries data that comes from a few locations. Location is not thought to be major factor, and although it might have some influence, details of locations aren't precise enough to be meaningful. Thus I have e.g. X_loc1_feat1(t),...,X_loc1_featN(t), X_loc2_feat1(t), ..., X_loc2_featN(t), ... , ... , X_locM_featN(t). And I have 1 target I want to predict: y_loc1_target1(t), ..., y_locM_target1(t). How should one split train/val/test for timeseries over multiple locations in this case? Assuming my data is 2001-2010 should I e.g. split train 2000-2008, val 2009, test 2010, for each location and X_test = 'np.concat(X_test_2010_loc1, X_test_2010_loc2, ...)' for example? (With one timeseries we could do something like walk-forward validation, but this seems to not quite as easily conceptually fit over many locations?) How do we approach multiple 'similar' timeseries in machine learning training?
