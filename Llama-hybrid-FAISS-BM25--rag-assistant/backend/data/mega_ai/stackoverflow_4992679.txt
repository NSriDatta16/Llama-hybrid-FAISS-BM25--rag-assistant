[site]: stackoverflow
[post_id]: 4992679
[parent_id]: 4807276
[tags]: 
There is no way to do it with EasyMock (or most other mocking APIs). With JMockit, on the other hand, such a test would be very simple and elegant: public class PersonTest { @Test public testFind(@Mocked final WebService ws) { final int id = 123; new NonStrictExpectations() {{ ws.getPersonById(id); result = new Person(id); }}; Person personFound = new Person().find(id); assertEquals(id, personFound.getId()); } } So, whenever we run into a situation where a unit test cannot be written at first, we can't automatically conclude that the code under test is untestable and needs to be refactored. Sometimes it will be the case, but certainly not always. Maybe the problem is not in the code under test, but in the limitations of a particular mocking tool that is being used.
