[site]: stackoverflow
[post_id]: 5520686
[parent_id]: 5520357
[tags]: 
This won't really answer your question, but it will let you in on some of the conventions that make your code more readable and thus your questions about bugs easier to answer. Things in your code: Try to put related lines in order, this allows the reader to know all of what is going on with one action of your script. For example, in your first few lines you open the DB, assign your query to a variable, then in the middle you check for your GET variable which could easily have been after you actually perform your query, and then you perform the query. Checking for the GET had no bearing on your query, better to bunch the query stuff together. You assign a variable Page depending on what's in the GET['page'] variable, and then you go back to using the GET variable for your conditional directly after. If you're using $Page for ease of use, use it. Bracketed code should have either the beginning and ending bracket on its own line indented once to the start or some (including myself) put the beginning bracket one space after the start line and then the ending bracket indented once from the start on its own line. This makes it easy to read, especially when you get into very long conditional blocks and nested conditionals. Variables should be descriptive as to what they are. You did this with most of them such as Next_Page and the like, but pic1, pic2, alt, link1, link2, etc are confusing and seem to all be different sql query strings - none of the variable names really mean anything regarding what they are. It's not really a big deal, but starting variable names with a capital letter is considered to be "improper" for lack of a better term. Camel Case is the convention I see used the most (first word started with lowercase, subsequent words started with upper, for example: nextPage or numPages). Another convention I see often is one that you use a few times and not on others, it is using all lowercase and separating words with an underscore. Generally a coder will save capitals for class names. In your code, feel free to use whatever you'd like, but stick to it, it helps when trying to remember how you formatted the name of a variable 5 pages away. All of this sort of thing helps read your code better and helps you to organize it. Standardization also helps other coders understand what you are meaning to code. I thought I'd write this so you had an idea of what some of the comments above were speaking to. See the following link for a tutorial on many of the common conventions: http://www.blackgate.net/consulting/php_coding_guidelines.html Have fun!
