[site]: stackoverflow
[post_id]: 3736789
[parent_id]: 
[tags]: 
Question regarding implicit conversions in the C# language specification

Section 6.1 Implicit conversions defines an identity conversion thusly: An identity conversion converts from any type to the same type. This conversion exists such that an entity that already has a required type can be said to be convertible to that type. Now, what is the purpose of sentences such as these? (In §6.1.6 Implicit reference conversions) The implicit reference conversions are: [...] From any reference-type to a reference-type T if it has an implicit identity or reference conversion to a reference-type T 0 and T 0 has an identity conversion to T . and: (In §6.1.7 Boxing conversions) A value type has a boxing conversion to an interface type I if it has a boxing conversion to an interface type I 0 and I 0 has an identity conversion to I . Initially they seem redundant (tautologous). But they must be there for a purpose, so why are they there? Can you give an example of two types T 1 , T 2 such that T 1 would not be implicitly convertible to T 2 if it weren’t for the above-quoted paragraphs?
