[site]: crossvalidated
[post_id]: 8091
[parent_id]: 8090
[tags]: 
One way to visualize this would be as follows: Perform a PCA on the data. Let $V$ be the vector space spanned by the first two principal component vectors, and let $V^\top$ be the complement. Decompose each vector $x_i$ in your data set as the sum of an element in $V$ plus a remainder term (which is in $V^\top$). Write this as $x_i = v_i + c_i$. (this should be easy using the results of the PCA.) Create a scatter plot of $||c_i||$ versus $||v_i||$. If the data is truly $\le 2$ dimensional, the plot should look like a flat line. In Matlab (ducking from all the shoes being thrown): lat_d = 2; %the latent dimension of the generating process vis_d = 16; %manifest dimension n = 10000; %number of samples x = randn(n,lat_d) * randn(lat_d,vis_d) + 0.1 * randn(n,vis_d); %add some noise xmu = mean(x,1); xc = bsxfun(@minus,x,xmu); %Matlab syntax for element recycling: ugly, weird. [U,S,V] = svd(xc); %this will be slow; prev = U(:,1:2) * S(1:2,1:2); prec = U(:,3:end) * S(3:end,3:end); normv = sqrt(sum(prev .^2,2)); normc = sqrt(sum(prec .^2,2)); scatter(normv,normc); axis equal; %to illlustrate the differences in scaling, make axis 'square' This generates the following scatter plot: If you change lat_d to 4, the line is less flat.
