[site]: stackoverflow
[post_id]: 4286995
[parent_id]: 4286715
[tags]: 
Yes. It is possible to define a macro that expands into a pragma directive using the _Pragma unary operator. From 6.10.9 of the C99 Standard: A unary operator of the form: _Pragma ( string-literal ) is processed as follows: The string literal is destringized by deleting the L prefix, if present, deleting the leading and trailing double-quotes, replacing each escape sequence \" by a double-quote, and replacing each escape sequence \\ by a single backslash. The resulting sequence of characters is processed through translation phase 3 to produce preprocessing tokens that are executed as if they were the pp-tokens in a pragma directive. The original four preprocessing tokens in the unary operator expression are removed. An example from the Standard is: #define LISTING(x) PRAGMA(listing on #x) #define PRAGMA(x) _Pragma(#x) LISTING ( ..\listing.dir ) which is equivalent to: #pragma listing on "..\listing.dir" Therefore, this is what you are looking for: #define PRAGMA(x) _Pragma(#x) #define ISR(x) PRAGMA(isr=x)
