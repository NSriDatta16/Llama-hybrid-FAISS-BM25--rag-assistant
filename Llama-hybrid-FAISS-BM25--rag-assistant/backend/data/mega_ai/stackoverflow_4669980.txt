[site]: stackoverflow
[post_id]: 4669980
[parent_id]: 
[tags]: 
Complex Oracle SQL search query optimisation

Often a search in the database needs to be done based on some specified values. For this question consider that there is a table with a number of keys K = {K1, K2 ... Km} and a number of meta-columns C = {C1, C2 ... Cn} . Meta-columns are not included in any of the keys. What are elegant and efficient ways to perform a query where search criteria is defined as S = {Ki, Cj1, Cj2 ... Cjh} ? Clarifications: Meta-column is any column that is not part of the key; S is a search criteria that contains always just one key and optional meta-columns to filter on; Real-life example (story processing system): Key: time range, story_id Meta-columns: heading, reporter, editor, ... Requirement is to be able to search on any of the keys with any number of optional filters supplied for meta-columns. Possible solutions: One solution is to use Dynamic SQL. It's not preferred considering these reasons . Use stored procedures, one procedure per key. Because only a subset of meta columns is specified expressions of type table.column = NVL(paratemers.column, table.column) for meta-columns can be used. I'm not sure exactly if Oracle would optimise that part of the query to avoid doing a comparison when parameters.column is NULL - that is part of the question. If yes, perhaps that is solution to the problem. Are there any elegant solutions that wouldn't sacrifice performance?
