[site]: stackoverflow
[post_id]: 2809364
[parent_id]: 2809329
[tags]: 
The fact that it's a concrete return type makes no difference. You can forward-declare return types. However, in this case, it's not a class, but a typedef. You couldn't use class DeviceProxy , even if it was a pointer. Mind you, all hope is not lost. The point of forward declarations is to avoid dragging in too much code and slowing down the compiler. The standard iostream library has exactly the same problem. For instance, istream isn't actually a class, but a typedef of a basic_istream instantiation. The standard library solves this by providing an header that forward-declares the basic_istream class template and then uses it to declare the istream typedef. Thus, classes that interact with the iostream need only #include in the header file, and then #include in the implementation file.
