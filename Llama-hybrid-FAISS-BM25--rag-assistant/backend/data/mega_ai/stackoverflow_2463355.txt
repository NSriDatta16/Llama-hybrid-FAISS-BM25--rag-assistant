[site]: stackoverflow
[post_id]: 2463355
[parent_id]: 2455472
[tags]: 
In theory, you should be better separating the model and all the database related code. In exemple, in Zend Framework, the quickstart guide advise you to have : your model classes your data mappers, whose role is to "translate" the model into the database model. your DAOs (or table data gateway) that do the direct access to the tables This is a really interesting model, you should have a look at it, it enables you to really separate the model from the data, and thus to perform tests only onto the model part (and don't care about any database problem/question) But in your code, I suggest you to perform a test where you have the dbq() function to return false (maybe having the db connexion to be impossible "on purpose"), in order to have full code coverage. I often have these kind of situations, where testing all the "error cases" takes you too much time, so I give up having 100% code coverage.
