[site]: stackoverflow
[post_id]: 4443634
[parent_id]: 4434509
[tags]: 
So I think I have come up with an idea. The reason I am against the nested set model is because it seems like it is still not the best way and is not going to be the ideal performance solution. I am going to cover a proposed solution I have been thinking about. The concept means creating an hierarchal map table to keep track of all the relationships between each family member/node. The way it would work is: Using map table structure of this: id | fMemberId | parentid ===================================== 1 | 3 | 2 2 | 4 | 3 3 | 4 | 2 1) As a new family member is created as a child of a parent we would take the parents id and create a new row in our family members table with the parent id set for future additional uses and functionality. 2) As this row is created we will create new rows with all of the parent id's for the new family member. A quick way to do this would be to take the parent id from the new family member and do a query to the map table to find all the rows with the family member id the same as the new family members parent id and then store an array in php of the subsequent parent ids required for storing alongside the new family members id in the map table. This would then only require one sql query for grabbing all the parent id's for adding them rather than a number of queries based on the number of nodes This would mean when we are viewing a family members feed of posts we would be able to query the db for simply the rows in the map table to get all the children id's of the current family member and subsequently query other tables for the post data. The main trade off being the amount of potential storage required for this kind of system. However I believe reading speed would be quicker as there is no conditional SQL statements and also maybe just as quick to write to db in this way. We could overcome this by using InnoDB's cluster id's assigning an initial family id index and creating a new table with the "next family members id" based on the family id. Also reliability, if a row wasn't written it would be easy enough to add it in. It prevents having to continually edit rows just to create a member. What are your thoughts on this? So far this seems to be a good way in my opinion. Took a lot of thinking to get to here. I also believe it could maybe be improved with time and being able to store arrays of id's per member rather than all of them. Still trying to work that one out!
