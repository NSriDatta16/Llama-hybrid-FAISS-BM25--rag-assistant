[site]: stackoverflow
[post_id]: 493288
[parent_id]: 493239
[tags]: 
Rough draft of a recursive way to do it: public static IEnumerable > GetFrequenciesByOutcome(int nDice, int nSides) { int maxOutcome = (nDice * nSides); Dictionary outcomeCounts = new Dictionary (); for(int i = 0; i kvp.Value > 0); } private static IEnumerable GetAllOutcomes(int currentTotal, int nDice, int nSides) { if (nDice == 0) yield return currentTotal; else { for (int i = 1; i Unless I'm mistaken, this should spit out KeyValuePairs organized like [key, frequency]. EDIT : FYI, after running this, it shows the frequencies for GetFrequenciesByOutcome(2, 6) to be: 2: 1 3: 2 4: 3 5: 4 6: 5 7: 6 8: 5 9: 4 10: 3 11: 2 12: 1
