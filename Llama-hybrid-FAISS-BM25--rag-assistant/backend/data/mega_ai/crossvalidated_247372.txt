[site]: crossvalidated
[post_id]: 247372
[parent_id]: 247368
[tags]: 
Well, scoring the neural network as-is is not going to give you the right clues about how the neural network will perform on out-of-sample data, because it's too biased an estimation. So ideally you should perform grid search to find the best neural network, and then evaluate its results on a different data set altogether (or better, use nested cross-validation). As far as the plotting part goes, you should use the learning curves to see if the network is overfitting (scikit has a function that does that for you); you should also plot a train-validation curve, which is useful to control how the net is learning (not sure if scikit has support for it, assuming you are using MLPClassifier). About R^2, I used to read this article that argues it's not that useful, but it seems the images are off. See if you can make sense of it, otherwise I'll have to find a paper I read some time ago where R^2 was criticized as well. Moral of the story, my advice is don't trust R^2 too much.
