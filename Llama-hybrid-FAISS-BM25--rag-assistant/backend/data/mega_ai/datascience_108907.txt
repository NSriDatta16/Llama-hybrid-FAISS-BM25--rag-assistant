[site]: datascience
[post_id]: 108907
[parent_id]: 
[tags]: 
Machine Learning implementation for predicting number plate checksum

I have a dataset of number plates in a format: LLNNNNC Where L is a letter, N is a number and C is the checksum (a letter generated from the six characters before it). e.g. ET6666A SM1111M LG0080P EU5555M EQ0823T KT0094T KQ0050K There is a deterministic way of finding the checksum (using the checksum algorithm), but I need to find a feasible non-deterministic way of doing it. Using scikit-learn, I've tried various classifiers such as RidgeClassifier, Nearest Neighbours, SVC, MLPClassifier etc., but none gave me a good enough accuracy (almost all of the accuracies were below 0.1). Both the letters and the checksum were encoded using LabelEncoder, and any missing/null values were removed. So there isn't any problem with a bad dataset. I'm starting to think that there might not be any feasible way of implementing this, and would like to hear what the experienced folks here think.
