[site]: stackoverflow
[post_id]: 3344692
[parent_id]: 3344633
[tags]: 
First, for a long-running thread, create your own Thread object and start it; don't use the ThreadPool . The thread pool is designed for small, relatively short-lived operations. Second, there are several ways that you can keep your thread alive. The most basic is what you've tried, which is a while loop with a sleep (or other blocking) call at the end. This is the most basic, though not necessarily the "best". There are other options, like named WaitHandle objects that can be accessed from other applications, that can allow for more deterministic code execution and fewer iterations of wake-check-sleep. If, however, you either can't (or don't want to) modify the other processes to support notifying your service of particular events, then what you have is, essentially, correct. I would, however, encourage selecting a more reasonable Sleep time; do you really need to check every millisecond?
