[site]: stackoverflow
[post_id]: 2014800
[parent_id]: 2014671
[tags]: 
Unfortunately, no, there is no "elegant" way to delete lines from the text of a multiline TextBox, regardless of whether you are using ASP.NET, WinForms, or WPF/Silverlight. In every case, you build a string that does not contain the lines you don't want and set the Text property. WinForms will help you a little bit by pre-splitting the Text value into lines, using the Lines property, but it's not very helpful because it's a string array, and it's not exactly easy to delete an element of an array. Generally, this algorithm will work for all possible versions of the TextBox class: var lines = (from item in myTextBox.Text.Split('\n') select item.Trim()); lines = lines.Skip(numLinesToSkip); myTextBox.Text = string.Join(Environment.Newline, lines.ToArray()); Note: I'm using Environment.Newline specifically for the case of Silverlight on a Unix platform. For all other cases, you're perfectly fine using "\r\n" in the string.Join call. Also, I do not consider this an elegant solution, even though it's only 3 lines. What it does is the following: splits the single string into an array of strings iterates over that array and builds a second array that does not include the lines skipped joins the array back into a single string. I do not consider it elegant because it essentially builds two separate arrays, then builds a string from the second array. A more elegant solution would not do this.
