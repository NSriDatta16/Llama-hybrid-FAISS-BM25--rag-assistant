[site]: datascience
[post_id]: 61601
[parent_id]: 61584
[tags]: 
LTSTM models are very good at time-series data, so look into that for starters. Additionally I'd like to ask why you need to adjust and deadjust your model at all? Even simpler models like boosted trees, random forest or even a plain regression should give you good predictions by simply including trends, seasons, etc. as predictors. Edit: I try to be a bit more comprehensive in my answer. Your problem is actually a classical problem of sales prediction, especially for retail stores like supermarkets, etc. A great resource to see solutions to this problem can be found here: Kaggle Walmart Sales Forecast You will find a lot of notebooks with great approaches and solutions (e.g. based on the aforementioned LTSTM model). But let's also try to point out a basic solution right here: *Data** Let's assume we have data that looks basically like this: Store | Month | Sales | Store_Size | ... East | Jan | $0.9M | 500 | ... East | Feb | $ 1.1M | 500 | ... North | Jan | $1.5M | 800 | ... North | Feb | $ 2.0M | 800 | ... Some of the ... variables will be constant for each store (store info), some will be related to the date (seasonal) and some might vary for the store and the month (trends). Problem Trying to predict the sales of store West for March given all constant variables associate with that store but NOT the trend variables. It is important to understand seasonal variables here! These are engineered features based on the month. E.g. we can easily compute the influence on sales for each month (e.g. trends like christmas sales, etc.) these are not trends because they are tied ONLY to months and not any other pattern. Solution Suppose we fit an XGB model to predict the sales, the simplest solution would be to simply only use features in the model that well be available at the point of prediction, so only seasonal and store info. This might already deliver a very good model and might be enough for prediction. If you have no information on trends, you cannot add them to the model and therefore should not. However you easily feature engineer trend data based on GAN or MICE models to augment your data. Finally please understand: machine learning models work best if you simply throw all available data at them and do not get too cute with feature selection and engineering . XGB and similar models will identify trends by themselves and model the ideal relation between the other factors for you. Degree of freedom, etc. really does not apply here.
