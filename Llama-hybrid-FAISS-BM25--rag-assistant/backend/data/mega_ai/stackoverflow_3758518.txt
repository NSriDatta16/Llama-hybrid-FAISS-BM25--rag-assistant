[site]: stackoverflow
[post_id]: 3758518
[parent_id]: 3758444
[tags]: 
You could try pooling and managing the large objects yourself. For example, if you often need As for your three questions: Is just not possible. Only the garbage collector decides when to finalize managed objects and release their memory. That's part of what makes them managed objects. This is possible if you manage your own heap in unsafe code and bypass the large object heap entirely. You will end up doing a lot of work and suffering a lot of inconvenience if you go down this road. I doubt that it's worth it for you. It's the size of the object, not the number of elements in the array. Remember, fragmentation only happens when objects are freed, not when they're allocated. If fragmentation is indeed your problem, reusing the large objects will help. Focus on creating less garbage (especially large garbage) over the lifetime of the app instead of trying to deal with the nuts and bolts of the gc implementation directly.
