[site]: stackoverflow
[post_id]: 2977622
[parent_id]: 
[tags]: 
Trying to build a C# grammar for bison/wisent

I've never done Bison or Wisent before. how can I get started? My real goal is to produce a working Wisent/Semantic grammar for C#, to allow C# to be edited in emacs with code-completion, and all the other CEDET goodies. (For those who don't know, Wisent is a emacs-lisp port of GNU Bison , which is included into CEDET. The Wisent apparently is a European Bison. And Bison, I take it, is a play-on-words deriving from YACC . And CEDET is a Collection of Emacs Development Tools. All caught up? I'm not going to try to define emacs. ) Microsoft provides the BNF grammar for C#, including all the LINQ extensions, in the language reference document . I was able to translate that into a .wy file that compiles successfully with semantic-grammar-create-package . But the compiled grammar doesn't "work". In some cases the grammar "finds" enum declarations, but not class declarations. Why? I don't know. I haven't been able to get it to recognize attributes. I'm not finding the "debugging" of the grammar to be very easy. I thought I'd take a step back and try to produce a wisent grammar for a vastly simpler language, a toy language with only a few keywords. Just to sort of gain some experience. Even that is proving a challenge. I've seen the .info documents on the grammar fw, and wisent, but... still those things are not really clarifying for me, how the stuff really works. So Q1 : any tips on debugging a wisent grammar in emacs? Is there a way to run a "lint-like" thing on the grammar to find out if there are unused rules, dead-ends stuff like that? What about being able to watch the parser in action? Anything like that? Q2 : Any tips on coming up to speed on bison/wisent in general? What I'm thinking is a tool that will allow me to gain some insight into how the rules work. Something that provides some transparency, instead of the "it didn't work" experience i'm getting now with Wisent. Q3 : Rather than continue to fight this, should I give up and become an organic farmer? ps: I know about the existing C# grammar in the contrib directory of CEDET/semantic. That thing works, but ... It doesn't support the latest C# spec, including LINQ, partial classes and methods, yield, anonymous methods, object initializers, and so on. Also it mostly punts on parsing a bunch of the C# code. It sniffs out the classes and methods, and then bails out. Even foreach loops aren't done quite right. It's good as far as it goes, but I'd like to see it be better. What I'm trying to do is make it current, and also extend it to parse more of the C# code.
