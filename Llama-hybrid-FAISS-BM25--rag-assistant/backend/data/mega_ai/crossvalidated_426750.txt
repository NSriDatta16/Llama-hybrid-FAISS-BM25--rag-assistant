[site]: crossvalidated
[post_id]: 426750
[parent_id]: 425742
[tags]: 
If your goal is to just perform a test of proportions between two cities (e.g. is does city 1 have the same proportion of smokers as city 2) then a t-test really isn't needed. We can use prop.test in R to do this, but we need the number of smokers, not just the proportion. We can fudge this a bit as follows: #Your data city = 1:10 population = c(13490, 8765, 45900, 3200, 32100, 9870, 90903, 6570, 23000, 8702) p = c(9, 12, 20, 1, 22, 5, 13,3,10,32)/100 smokers = as.integer(round(p*population)) The difference between smokers/population and p is no larger than 1e-4, so I think this is suitable. Next, All we have to do is choose which cities we want to do the prop.test with. Let's test for differences between cities 1 and 2 prop.test(smokers[c(1,2)], population[c(1,2)] ) 2-sample test for equality of proportions with continuity correction data: smokers[c(1, 2)] out of population[c(1, 2)] X-squared = 52.063, df = 1, p-value = 5.374e-13 alternative hypothesis: two.sided 95 percent confidence interval: -0.03846758 -0.02159289 sample estimates: prop 1 prop 2 0.08999259 0.12002282 If we want to test all cities against one another, we can use pairwise.prop.test which accepts as an argument a method for p-value correction pairwise.prop.test(smokers, population, p.adjust.method = 'bonferroni') Pairwise comparisons using Pairwise comparison of proportions data: smokers out of population 1 2 3 4 5 6 7 8 9 2 2.4e-11 - - - - - - - - 3 So that method tells us which cities have a statistically significant difference in proportion of smokers, but what about the entire population? Can we estimate the proportion of smokers from the population in which the sample was obtained? For instance, if these cities all came from the same state, then what is the proportion of smokers in that state? To do that, I think we can turn to Bayesian models. Warning, I'm posting this for interested readers, not as a serious solution. This is a pretty simple hierarchical binomial model $$\mbox{smokers}_i \sim \operatorname{Binom}(\theta_i, \mbox{population}_i)$$ $$ \theta_i \sim \operatorname{Beta}(\alpha, \beta) $$ And then we put a prior on the parameters of the beta distribution. Here is some Stan code to fit the model stan_code = ' data{ int n; int smokers[n]; int population[n]; } parameters{ real mu; real eta; real theta[n]; } transformed parameters{ real alpha; real beta; alpha = eta*(mu); beta = eta*(1-mu); } model{ eta~cauchy(0,1); theta ~ beta(alpha,beta); smokers~binomial(population,theta); } generated quantities{ int smokers_ppc[n]; for (i in 1:n){ smokers_ppc[i] = binomial_rng(population[i], theta[i]); } } ' And once we fit the model, our posterior for the population mean is so if we were interested in the population mean, we would estimate that it is just shy of 15% (but is anywhere from maybe 0.08 to 0.225). I'm being a bit slop[y here since I'm not showing any posterior predictive checks, but again this is for posterity and not a serious solution to your problem.
