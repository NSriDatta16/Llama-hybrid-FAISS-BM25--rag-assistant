[site]: stackoverflow
[post_id]: 5073347
[parent_id]: 5069420
[tags]: 
I'm not sure if there is a direct equivalent for DragDirect call for x11\GTK, but you can have the same functionality with Gdk.Pointer.Grab and Gdk.Pointer.Ungrab methods. Capture the mouse pointer whenever you need then track mouse movement and release once user hits Escape or releases the mouse or mouse is out of the drag rectangle. Below is a small example: public partial class MainWindow : Gtk.Window { public MainWindow () : base(Gtk.WindowType.Toplevel) { Build (); } protected void OnDeleteEvent (object sender, DeleteEventArgs a) { Application.Quit (); a.RetVal = true; } protected virtual void OnWidgetEvent (object o, Gtk.WidgetEventArgs args) { if (args.Event is Gdk.EventMotion && args.Event.Type==Gdk.EventType.MotionNotify) { Gdk.EventMotion eventMotion = (Gdk.EventMotion)args.Event; Console.WriteLine("mouse move {0} {1}", eventMotion.X, eventMotion.Y); } else if (args.Event is Gdk.EventKey && args.Event.Type==Gdk.EventType.KeyPress) { Gdk.EventKey eventKey = (Gdk.EventKey)args.Event; if (eventKey.Key==Gdk.Key.Escape) { Console.WriteLine("mouse pointer ungrab"); Gtk.Grab.Remove(this); Gdk.Pointer.Ungrab(Gtk.Global.CurrentEventTime); } } } protected virtual void OnButton1WidgetEvent (object o, Gtk.WidgetEventArgs args) { if (args.Event is Gdk.EventButton && args.Event.Type==Gdk.EventType.ButtonPress) { Console.WriteLine("mouse pointer grab"); Gdk.Pointer.Grab(this.GdkWindow, true, Gdk.EventMask.ButtonPressMask | Gdk.EventMask.ButtonReleaseMask | Gdk.EventMask.PointerMotionMask | Gdk.EventMask.EnterNotifyMask | Gdk.EventMask.LeaveNotifyMask, null, null, Gtk.Global.CurrentEventTime); Gtk.Grab.Add (this); } } } MainWindow UI declaration: MainWindow CenterOnParent False True TextOnly GtkButton True 165 125 more details on mouse pointer handling in GTK here: The Mouse Pointer hope this helps, regards
