[site]: stackoverflow
[post_id]: 1918742
[parent_id]: 
[tags]: 
Elegant way to create a nested Dictionary in C#

I realized that I didn't give enough information for most people to read my mind and understand all my needs, so I changed this somewhat from the original. Say I've got a list of items of a class like this: public class Thing { int Foo; int Bar; string Baz; } And I want to categorize the Baz string based on the values of Foo, then Bar. There will be at most one Thing for each possible combination of Foo and Bar values, but I'm not guaranteed to have a value for each one. It may help to conceptualize it as cell information for a table: Foo is the row number, Bar is the column number, and Baz is the value to be found there, but there won't necessarily be a value present for every cell. IEnumerable things = GetThings(); List foos = GetAllFoos(); List bars = GetAllBars(); Dictionary > dict = // what do I put here? foreach(int foo in foos) { // I may have code here to do something for each foo... foreach(int bar in bars) { // I may have code here to do something for each bar... if (dict.ContainsKey(foo) && dict[foo].ContainsKey(bar)) { // I want to have O(1) lookups string baz = dict[foo][bar]; // I may have code here to do something with the baz. } } } What's an easy, elegant way to generate the nested dictionary? I've been using C# long enough that I'm getting used to finding simple, one-line solutions for all of the common stuff like this, but this one has me stumped.
