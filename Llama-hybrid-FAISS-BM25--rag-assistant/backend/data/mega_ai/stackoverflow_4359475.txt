[site]: stackoverflow
[post_id]: 4359475
[parent_id]: 4359319
[tags]: 
First of all, you need to write the code so it's understandable. I can't easily understand either of your code fragments. Here's an attempt to reformat and refactor the first one to be simpler, and add some comments: /** * @brief Write some bits to a file. * * The bits are written MSB-first to a temporary 64-bit integer, which is * then written to the file in host byte-order. * * @param Data The data to write to the file. Only the least-significant * Length bits are written. Of the bits that are written, the * most significant bit is written first. * @param Length The length of the data to write, in bits. Must be = 0; --i) { // Get the input bit unsigned long long NextBit = ((Data >> i) & 1); // Add it to the temporary buffer BitBuffer = ((BitBuffer Now that I understand what you're trying to do... Your second version looks much better, because you're avoiding the per-bit loop. Since you're asking about optimizing this, I assume you have profiling results that show that this is slow? And I assume you're putting a lot of data through this? One possible optimization is to write into a much bigger buffer (I'd suggest at least 4kB). That means you don't need to call write() as often. Calling write() can be relatively slow.
