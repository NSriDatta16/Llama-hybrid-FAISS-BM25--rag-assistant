[site]: stackoverflow
[post_id]: 1186323
[parent_id]: 1186111
[tags]: 
I would do most of the work in your application rather than within sql. You could use one of the many sql split routines found online in conjunction with CROSS APPLY to add multiple rows to your tables, but I wouldn't do it. Keep it simple and have your application manage the tag inserts. Let's say you have an article with 5 tags. That's one database call to create the article and return the article id back to your application (step #1 in your question.) And then, for each tag, you provide the article id and tag value in a separate database call which handles step #2 and step #3. You're looking at 6 really quick, not-at-all complicated operations for an article which most likely has a greater than average number of tags. That's really not all that bad. But that's just my two cents. I hope it helps.
