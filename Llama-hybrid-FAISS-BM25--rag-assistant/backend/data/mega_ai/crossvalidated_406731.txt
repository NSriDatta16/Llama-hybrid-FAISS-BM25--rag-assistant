[site]: crossvalidated
[post_id]: 406731
[parent_id]: 406718
[tags]: 
ARIMA has well-known problems with seasonal time series if the seasonal cycle is "too long". Monthly data, with a seasonal length of 12 months, is fine. Weekly data, with a season of length 52 (disregarding fractional week numbers) are already a problem for ARIMA. In the present case, sunspots have a cycle of length 11 years . The sunspots data are a monthly time series. Thus, the implicit seasonality of sunspots is 12 (months), not 11 $\times$ 12=132 (months). ARIMA and auto.arima() were never built to automatically detect a seasonal cycle whose length is not pre-specified. It is not overly surprising it does not see that it should do 11 seasonal differences to model a seasonality that repeats every 11 cycles of its prespecified frequency. So, the first order of business would be to specify that seasonal cycles are indeed of length 132: library(forecast) sunspots_seasonal Unfortunately, auto.arima() does not pick up on this. This is the problem with long seasons I allude to above. model So in this case, we need to help auto.arima() , by forcing a seasonal difference : model_seasonal This is still not perfect; in particular, the negative bounds to the prediction intervals are nonsensical, so a Box-Cox transformation may be called for. But I would expect it to be better than a nonseasonal AR-only model. auto.arima() does not aim at being a magic wand. Its aim is to be a robust method that works reliably on a large number of time series, and it is very good at this. If you have subject matter knowledge that it does not model, then by all means, help it along.
