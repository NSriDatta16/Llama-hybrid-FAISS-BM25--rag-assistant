[site]: stackoverflow
[post_id]: 4161060
[parent_id]: 4160748
[tags]: 
Firstly your method should be called "setSeconds" if you follow good practice. Just think how confusing it would be if you added a minutes member to your class. There are two main reasons for coding setters and getters. The first is purly pragmatic. If you want to invoke the magic of introspection and java beans then you need to follow these conventions. There are several libraries/APIs like FreeMarker that absolutly depend on haveing getter and setter methods in your class. The second has more to do with good design. Consider thet you have a public member called seconds. Any user of you class could set this by coding. instanceOfYourClass.seconds = 60; This is just fine except maybe you want to impose an arbitary limit of 42 seconds on this value. To validate the value and set it a max of 42 seconds you now need a method to do this. So every user of you class must now change thier code to:- instanceOfYourClass.setSeconds(60); So by building in getters and setters from the start you are building in both the flexibilty to do more exotic things within your class, while at the same time providing a stable interface to your class users which wont rquire them to change thier code every time there is a small change in functionality.
