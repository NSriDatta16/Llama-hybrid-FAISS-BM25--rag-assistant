[site]: stackoverflow
[post_id]: 958750
[parent_id]: 921276
[tags]: 
Given that the error message states "Not enough storage is available to complete this operation.", I am guessing that the problem is not because the location that has the XML file is out of space or does not have permissions. My guess is that the temporary location where the temporary assembly's intermediate files are being dropped is what is actually causing the problem. XmlSerialization in .NET uses code generation to create C# source code, wich is then compiled (which ultimately uses CSharpCodeProvider, which is part of CodeDom.) CodeDom compiles source very similarly to the command line csc.exe compiler, so temporary intermediate object files often need to be created on disk before the final assembly can be generated (regardless of whether its an in-memory assembly or not.) I would figure out where these temp files are being placed, and make sure that drive has enough space. Make sure that the user who has the problem doesn't have any kind of space quota where these temp files are being generated too, as if he has used his quota, that could also cause storage space exceptions. The temporary location for these files is configurable with the XmlSerializerSection in your applications .config file, so if there is indeed a space problem, you could try redirecting them temporarily to a drive that does have enough space (and read/write/delete permissions for the current user.)
