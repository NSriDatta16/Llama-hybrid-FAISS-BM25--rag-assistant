[site]: stackoverflow
[post_id]: 461584
[parent_id]: 
[tags]: 
Error deserialising XML document with strongly typed XSD

I am running into quite an annoying issue while trying to deserialise a specific XML document using XmlSerializer.Deserialize() method. Basically, I have a strongly typed XSD with an element of type double. When trying to deserialise the element for a specific XML document, I get the usual "System.FormatException: Input string was not in a correct format." exception because in that specific document, the element does not have a value. Here is some code for you nerds out there. Sample XML document: Barcelona 4591 XSD: TrackInfo class: [Serializable] public class TrackInfo { private string name = string.Empty; private double length = 0.0; private double averageSpeed = 0.0; [XmlElement] public string Name { ... } [XmlElement] public double Length { ... } [XmlElement] public double AverageSpeed { ... } } Sample deserialisation code: XmlDocument xmlDocument = new XmlDocument(); xmlDocument.Load("TrackInfo.xml"); // Deserialise XML string into TrackInfo object byte[] buffer = ASCIIEncoding.UTF8.GetBytes(xmlDocument.InnerXml); MemoryStream stream = new MemoryStream(buffer); System.Xml.XmlReader reader = new System.Xml.XmlTextReader(stream); XmlSerializer xSerializer = new System.Xml.Serialization.XmlSerializer(typeof(TrackInfo)); TrackInfo trackInfo = (TrackInfo)xSerializer.Deserialize(reader); I know that the deserialisation exception comes from the fact that an empty string cannot be converted to a double. I also know that the default value is not assigned to AverageSpeed because, effectively, an empty string is a perfectly acceptable value. Is there an easy way to default double values to 0.0 (or any other type) when deserialising if an empty string value is found in the XML document? Ideally, I would like to avoid implementing ISerializable because I don't really feel like spending the rest of the day into the burning pit of hell (i.e. implementing ISerializable for about a hundred classes). Cheers! Jean-Michel
