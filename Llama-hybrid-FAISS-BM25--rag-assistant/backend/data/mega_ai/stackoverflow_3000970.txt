[site]: stackoverflow
[post_id]: 3000970
[parent_id]: 3000921
[tags]: 
It's generally a good programming practice to isolate packages into actual packages and treat them as such. If you're sure you'd like to continue with that approach though you can modify the search path from within python via: import sys sys.path.append( " " ) To avoid embedding absolute paths, you can use os.path.abspath(__file__) to obtain the absolute path to the currently executing .py file and follow up with a few os.path.dirname() calls to construct the proper relative path for inclusion to sys.path A slightly altered approach that would allow you to get the best of both worlds would be to add an __init__.py file to xLibrary 's directory then add the path containing 'xLibrary' to sys.path instead. Subsequent Python code could then import everything "properly" via from xLibrary import my_module rather than just import my_module which could be confusing to people accustomed to the standard package directory layout.
