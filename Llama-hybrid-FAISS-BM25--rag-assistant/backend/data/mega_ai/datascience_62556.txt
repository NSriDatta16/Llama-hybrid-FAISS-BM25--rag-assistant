[site]: datascience
[post_id]: 62556
[parent_id]: 
[tags]: 
The output of Model from Decision Tree and Random Forests are different?

I have been made a model using both Decision Tree and Random Forest. But, when I tried to test the model on the same DataFrame the output is different. How is this possible? The data file from my repo: #This is the function to help me preparing the dataframe def process_df_for_ml(df): """ Process a dataframe for model training/prediction use. Returns X/y tensors. """ df = df.copy() # Map salary to 0,1,2 df.salary = df.salary.map({"low": 0, "medium": 1, "high": 2}) # dropping left and sales X for the df, y for the left X = df.drop(["left", "sales"], axis=1) y = df["left"] return (X, y) I used the decision tree: from sklearn import tree from sklearn.model_selection import train_test_split # Train a decision tree. X, y = process_df_for_ml(df) X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0, stratify=y) clftree = tree.DecisionTreeClassifier(max_depth=3) clftree.fit(X_train, y_train) With test_score: 0.96. Afterwards, I test this DecisionTree to the same df and the output I got is [424 rows x 11 columns] and then I tried to use Random Forest algorithm X, y = process_df_for_ml(df) from sklearn.model_selection import train_test_split # implementing train-test-split X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=0, stratify=y) from sklearn.ensemble import RandomForestClassifier # random forest model creation rfc = RandomForestClassifier() rfc.fit(X_train,y_train) # predictions rfc_predict = rfc.predict(X_test) With test_score: 0.99. Afterwards, I test this RandomForest to the same df and the output I got is [11 rows x 11 columns]. How is this possible? Here is the link to my works: DecisionTree and RandomForest
