[site]: stackoverflow
[post_id]: 3244235
[parent_id]: 3244127
[tags]: 
Start by making demands on your environment, and on what is asked of you: Demand that requirements and deadlines are fixed and agreed upon, in writing, before you write a single line of code. Demand that you are given enough time for testing and bugfixing in the development cycle. Demand that you are given time to setup source control, automatic builds etc (whatever you feel like you need for your development environment to promote effective work). Demand that you are given time to write documentation, so that you can spend more time writing code and less time doing application demos. Continue with backing it up : Document and show your boss some statistics on how you use your time. If it turns out you use much less on actually writing code, maybe he'll consider giving some of the less programming-related tasks to some other member of the department. And finally, remember that this this is not the only company in the world: Robert L. Lead has a very good point in his How to be a Programmer: A Short, Comprehensive and Personal Summary : under Recognizing when to go home , he simply states: Quit if you have to. This might not be a very compelling option, but should it come to it, leave the company for the greener grass on the other side. Even telling your boss you're ready to quit if your working conditions don't improve might help you actually get what you want. I doubt that your company want to be left with a software product that suddenly can't be supported or updated, because their only developer quit.
