[site]: stackoverflow
[post_id]: 335678
[parent_id]: 335525
[tags]: 
Read http://www.cs.ualberta.ca/~sutton/RL-FAQ.html "Function approximation" refers to the use of a parameterized functional form to represent the value function (and/or the policy), as opposed to a simple table." Perhaps that applies. Also, update your question with additional facts -- don't merely answer in the comments. Edit. A bit array can easily store a bit for each of your millions of numbers. Let's say you have numbers in the range of 1 to 8 million. In a single megabyte of storage you can have a 1 bit for each number in your set and a 0 for each number not in your set. If you have numbers in the range of 1 to 32 million, you'll require 4Mb of memory for a big table of all 32M distinct numbers. See my answer to Modern, high performance bloom filter in Python? for a Python implementation of a bit array of unlimited size.
