[site]: datascience
[post_id]: 87560
[parent_id]: 87541
[tags]: 
It seems that the way you described the problem does not need any machine learning. You can calculate the rotation between any image and the 'correct' one based on the rotation operator: https://en.wikipedia.org/wiki/Rotation_matrix https://math.stackexchange.com/questions/15101/find-the-rotation-of-one-image-with-respect-to-other-in-matlab If the problem is less well-defined, e.g. there is also noise and other effects such as scaling, you could also use CNNs in a supervised learning fashion but you would need an appropriate dataset that contains 'correct' and 'rotated' examples. As for splitting the image into 10 parts and perform some kind of algorithm on each one, that makes sense yeah.
