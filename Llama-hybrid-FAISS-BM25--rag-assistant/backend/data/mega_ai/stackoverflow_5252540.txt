[site]: stackoverflow
[post_id]: 5252540
[parent_id]: 5252193
[tags]: 
here is my working code to save a captured image from the camera to app internal storage: first, create the file with the desired filename. in this case it is "MyFile.jpg", then start the activity with the intent below. you're callback method( onActivityResult ), will be called once complete. After onActivityResult has been called your image should be saved to internal storage. key note: the mode used in openFileOutput needs to be global.. Context.MODE_WORLD_WRITEABLE works fine, i have not tested other modes. try { FileOutputStream fos = openFileOutput("MyFile.jpg", Context.MODE_WORLD_WRITEABLE); fos.close(); File f = new File(getFilesDir() + File.separator + "MyFile.jpg"); startActivityForResult( new Intent(MediaStore.ACTION_IMAGE_CAPTURE) .putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(f)) , IMAGE_CAPTURE_REQUEST_CODE); } catch(IOException e) { } and in the activity result method: @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); if(requestCode == IMAGE_CAPTURE_REQUEST_CODE && resultCode == Activity.RESULT_OK) { Log.i(TAG, "Image is saved."); } } to retrieve your image: try { InputStream is = openFileInput("MyFile.jpg"); BitmapFactory.Options options = new BitmapFactory.Options(); //options.inSampleSize = 4; Bitmap retrievedBitmap = BitmapFactory.decodeStream(is, null, options); } catch(IOException e) { }
