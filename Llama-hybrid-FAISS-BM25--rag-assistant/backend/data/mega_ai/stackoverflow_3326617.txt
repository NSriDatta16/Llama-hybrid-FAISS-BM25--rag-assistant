[site]: stackoverflow
[post_id]: 3326617
[parent_id]: 3272120
[tags]: 
After some experimentation, I found a partial answer. The goog.events.Event class has a preventDefault method. Simply handle the MOUSEMOVE event on the graphics' element. Then call the event#preventDefault method: var element = ... // some element var graphics = goog.graphics.createGraphics('400', '300'); var fill = new goog.graphics.SolidFill('#00ff00', 0.5); var stroke = new goog.graphics.Stroke(1, 'black'); graphics.drawEllipse(60, 60, 10, 10, stroke, fill); graphics.drawEllipse(90, 90, 10, 10, stroke, fill); graphics.render(element); goog.events.listen(graphics.getElement(), goog.events.EventType.MOUSEMOVE, function(e) { e.preventDefault(); e.stopPropagation(); }); Clicking inside the graphics element, then dragging no longer selects the circles. Again, this is only necessary on IE. One minor problem remains. Pressing the mouse outside of the graphics area, then dragging the cursor into the graphics area results in the entire area being selected, or both the area and graphical elements.
