[site]: crossvalidated
[post_id]: 440913
[parent_id]: 
[tags]: 
Structure of Generative Adversarial Networks (GAN) for mapping a simulation model

There is a simulation model of a system that I want to map as a neural network to test if a better execution time can be achieved with similar accuracy. The simulation model receives real-valued measurement data of its environment and generates a real-valued output from it. The real-valued measurement data of the environment are limited, so I considered using a Generative Adversarial Network for training the Predictor . The goal would be for the Generator to generate realistic inputs. These would then be fed into the simulation model to generate the output. Input and output would then be used to train the Predictor . The overall goal is to get a Predictor with a high quality and a good generalization ability. The goal of the Generator would be on the one hand to generate inputs as realistic as possible, but on the other hand also to generate inputs for which the Predictor is not yet so well-trained. What would be the best way to do that? Would you possibly add a Discriminator in addition to the Predictor to force the Generator to generate realistic inputs?
