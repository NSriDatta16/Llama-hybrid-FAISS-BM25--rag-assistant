[site]: stackoverflow
[post_id]: 4247077
[parent_id]: 4244908
[tags]: 
It's not possible. You need n^2 memory for the elements alone. If you don't count this obvious memory consumption, I recommend one of the inplace sort algorithms, such as heapsort. It will take O(1) extra space. If you are looking for an external sort algorithm where the external storage doesn't count but only the internal one, I recommend to use bottom-up mergesort. You can get this to consume as much or as little internal memory as you want to; to consume approximately 2n memory, always read n/2 elements from each partially-sorted set, and merge them into another array of n elements; then write the result back to disk (preferably into a separate file).
