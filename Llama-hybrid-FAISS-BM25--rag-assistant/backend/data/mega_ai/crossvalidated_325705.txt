[site]: crossvalidated
[post_id]: 325705
[parent_id]: 
[tags]: 
MCMC sampler for multiple measures distribution

I currently have a custom probability distribution defined on multiple measures, i.e. I am measuring choice $c \in \{0,1\}$, reaction times $rt \in \mathbb{R}_+$, and confidence $conf \in [-1,+1]$ (see e.g. here ) for each trial. Now from my computational model I can derive $p(c, rt, conf | \theta)$ for each parameter set $\theta$ and therefore also the multiple-measure likelihood $L(\theta)=p(c, rt, conf | \theta)$. Now I would like to sample from the resulting posterior (given some priors over $\theta$), but I cannot find any MCMC sampler, which would allow me to do this. Looking for example at the distributions defined for pymc3 , they are either univariate or taking a vector of similar types of values (e.g. multivariate Gaussian). However, for my data, the three measurements are quite dissimilar being defined over different sets. Is there any MCMC implementation, which would allow me to implement the complete model (needs to be Turing complete and allow for stochastic parts) and to implement a distribution on this kind of data? If possible, I would prefer to do this in pymc3, but I cannot really see how to do it. I know a common approach would be to split the distribution into dependent distributions, e.g. $p(c|\theta)$, $p(conf | c,\theta)$ and $p(rt|conf, c, \theta)$, which would allow me to write $p(c,rt,conf|\theta)=p(c|\theta) \cdot p(conf | c,\theta) \cdot p(rt|conf, c, \theta)$ and then use the measurements as parameters within some of the distributions. However, I cannot derive the dependent probabilities as such, the best I could do would be marginalized distributions of $p(conf | c,\theta)$ and $p(rt | c,\theta)$.
