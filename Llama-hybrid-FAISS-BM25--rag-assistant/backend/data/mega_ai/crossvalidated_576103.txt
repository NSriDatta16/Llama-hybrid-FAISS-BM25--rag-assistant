[site]: crossvalidated
[post_id]: 576103
[parent_id]: 576099
[tags]: 
By the way you’ve set up the problem, perfect accuracy is impossible, and we must accept that, even if we know a digit to be a $1$ , there’s only a $90\%$ chance of being red, and that’s the best we can do. The setup is quite simple, arguable more so than the original MNIST. We have input data (features) in the pixels that we will analyze with some model (perhaps a convolutional neural network). Then, as our $Y$ , we have the binary red/blue labels (discrete labels, not probabilities). This winds up being a pretty interesting problem, since image recognition is almost synonymous with using convolutional neural networks, yet neural networks are known to be poor predictors of the probability values that we seek ( “neural networks lack calibration and are overconfident” ). Thus, while a CNN might be the go-to for getting accurate categorical predictions in a high signal-to-noise ratio problem like in the original MNIST digit recognition, we have a lower signal-to-noise ratio (more uncertainty, inherently) that might warrant a simpler model that gives better-calibrated probability values, such as a logistic regression. After all, for an input image of a $5$ , the correct answer is that there is a $0.5$ probability of being red and $0.5$ probability of being blue. There is no definite color label.
