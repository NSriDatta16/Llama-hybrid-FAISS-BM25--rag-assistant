[site]: stackoverflow
[post_id]: 4710228
[parent_id]: 4710048
[tags]: 
Actually...I ended up running a test and I might have answered my own question. I thought I'd post this information here in case it was useful for anyone else. (If I've done anything wrong here, please let me know!) This is kind of surprising... Contrary to everything that I've read, I created a table called TestData with 1 million rows and ran the following query: SELECT * FROM TestData WHERE number = 41 ORDER BY RAND() LIMIT 8 ...and it returned the rows in an average of 0.0070 seconds. I don't really see why RAND() has such a bad reputation. It seems pretty usable to me, at least in this particular situation. I have three columns in my table: id [BIGINT(20)] | textfield [tinytext] | number [BIGINT(20)] Primary Key on id, index on number. I guess MySQL is smart enough to know that it should only be applying RAND() to the 20 rows that are returned by "WHERE number = 41" ? (I specifically added only 20 rows that had the value 41 for 'number'.) The alternate subquery method returns results with an average time of around .0080 seconds, which is slower than the non-subquery method. Subquery method: SELECT * FROM (SELECT * FROM TestData WHERE number = 41) as t ORDER BY RAND() LIMIT 8
