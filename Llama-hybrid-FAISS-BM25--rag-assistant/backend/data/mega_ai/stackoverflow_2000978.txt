[site]: stackoverflow
[post_id]: 2000978
[parent_id]: 2000890
[tags]: 
Have you considered using SQLCMD scripts and the SQLCMD utility rather than writing your own command line interface, or perhaps writing your own and simply wrapping the SQLCMD functionality? Naturally this would assume you only want to support SQL 2005 and up. I've done this in the past a few different ways (i.e. using a simply batch file with params/options that wrap the SQLCMD, using a more extensive approach wrapped with code that happened to unfortunately be VB 6.0 at the time, etc.). If you take the route of wrapping with your own code, may want to consider leveraging powershell as well (I'm currently thinking of this as well). Sql Server now includes custom Powershell providers and extensions for things like SMO functionality, code execution, management, etc., which can naturally and easily be extended to wrap SQLCMD and SQL functionality. Given what you're trying to do, the benefits with SQLCMD (and SQLCMD scripts) seem to fit nicely into things: The scripts are still valid for use/interpretation/integration with SSMS and other IDE's There are a few options for default values, though nothing really integrated into the scripts themselves (environment variables, command line options, etc.). Additionally, you may want to consider pulling your default values for file/group locations from a pre-defined location on the server/instance you are running on (such as the model or master or tempdb). Less flimsy in the sense that current IDE's that support SQLCMD would throw exceptions in SQLCMD mode for undefined variable/value combinations If you'd like to exchange notes/thoughts on your project, I'd definitely be up for helping out with coding and/or just talking through some challenges I ran into (different editions of the engine for example and feature usage were a few things I didn't originally think of).
