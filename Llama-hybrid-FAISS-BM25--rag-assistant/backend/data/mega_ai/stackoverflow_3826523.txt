[site]: stackoverflow
[post_id]: 3826523
[parent_id]: 3373083
[tags]: 
We have found the following works well, balancing the need to get code in without fuss, but preventing releases that diverge from our standards. First, we have an "open arms" policy on commit: All code, working or not, conforming or not, accepted: so long as its commit log message has a bug tracking ID (pre-commit hook check) Encourages frequent commits & its benefits: collaboration, undo, backup Then, we have a "clenched fist" policy on staging/release builds: Build fails if any, even trivial, deviation from rules, which means: mandatory syntax correctness, standards compliance, code documentation, and all tests pass with flying colors Prevents releasing anything buggy. If something buggy does get through, it's a problem with the code AND a problem with the build (process hole, not enough tests, etc.) All of that is automated through phing using phpcs (and of course phpunit, phpdocumentor, etc).
