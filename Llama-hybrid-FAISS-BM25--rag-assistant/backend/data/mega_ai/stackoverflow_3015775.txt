[site]: stackoverflow
[post_id]: 3015775
[parent_id]: 
[tags]: 
How to enable Automatic obfuscation in Team Build using dotfuscator and TFS 2008?

I am trying to accomplish Build Automation (Continuous Integration) using TFS 2008 and VS 2008 . We have a Web based (.Net) product which contains a number of small and large projects (Some C# and Some Vb.Net based). A source control server is already in place that is being used for version Management(later referred as Data Tier). ======================== > So what i have is: 1. Data Tier Source Control (TFS 2008) Server containing the Project and Build Definitions . 2. A Build Agent. (TFS 2008 and Dotfuscator Installed) with network share to place "Built" files on. 3. Application Tier (Visual Studio 2008 with access to 1 & 2). 4. 1,2 and 3 lie on the same domain and have access to one another I am working on a Build Agent Machine (Dotfuscator and TFS Build Machine). Currently i have achieved Team Build. However, i need to do some modification in it and perform obfuscation. ======================== > My Goal: Build the web based product using Team Build and automatic versioning. Clean the build from files such as AppWeb_xxx.dll files. Create x86 and x64 Create an tree of folders and files and assembly placement as my Web deployment project generates (but tghe msbuild/team build does not (???)). Automatically Obfuscate using dotfuscator 4.5 installed on Build agent using Custom targets or something (???). Zip x86 and Release builds and copy files to appropriate download locations on download server. (From where automatic Update will check and download the new versions) ======================== Note: Web Deployment Project correctly copies all binaries assemplies to the bin folder along with web application structure. On the other hand, when i perform team build using TFS, all assemblies are place in the open in the write-able network share and a folder name Publish folder is created which contains the applications structure and assemblies in the bin folder again (as desired) along with strange (undesired) appxxx.dll files. ======================== > Current Status: -I am able to create a new build definition and compile the web project. However, i get some extra Appxxxx.dll files along with the target assemblies and i have no idea what to do of them. -I need to setup a working dotfuscation xml file (on TFS Source Control Data TierServer)and accomplish obfuscatioon of only selected Asssemblies with specific obfuscation options (of rename properties, keep assembly names etc etc.). I need to develop script that segregates remote and control assemblies and x86 and x64 asssemblies , each of them obfuscated and each **x86 and x64 package packaged as **zip files**** and written to a network share. This is fairly long path and here i am -- a complete nooooob to build automation. I need some clear direction to start my work with and some samples that can help understand the whole procedure or similar procedure. Kindly help in this regard. (Please keep the noobster nature of your target audience. :-)) Thanks.
