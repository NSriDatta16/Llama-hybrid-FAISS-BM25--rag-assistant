[site]: stackoverflow
[post_id]: 740460
[parent_id]: 740349
[tags]: 
"Duplicating" the strings will not use twice the memory: Since strings are immutable objects in c#, you will just store another reference (i.e. pointer, 4 or 8 byts) per entry in the dictionary: Dictionary dict = new Dictionary (); Widget myWidget = GetSomeWidget(); dict.Add(myWidget.Name, myWidget); You will always be reusing the string object from the widget's property, so just go on with the dict and store the path as property inside the widget. If you don't need to enumerate the widgets in sorted order, don't use the SortedList, it will be slower than the Dictionary (O(n log n) insertion/deletion/retrieval vs. O(n) average time) Changing the widget's path will need you to remove it from the dictionary and add it with the changed path, but this is an average constant time operation, so it should be pretty fast. And just to mention it: Even if you would have to spend one MB of additional memory for getting more performance or using a better-suited (and well-tested) data structure, I don't think that would be a great problem considering the amount of memory other applicatins are using (wasting?) these days ...
