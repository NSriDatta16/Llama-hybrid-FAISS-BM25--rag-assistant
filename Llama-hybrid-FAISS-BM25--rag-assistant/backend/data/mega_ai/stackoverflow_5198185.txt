[site]: stackoverflow
[post_id]: 5198185
[parent_id]: 5197965
[tags]: 
Expanding on SLaks answers. The Func family of delegates are generic and allow you to customize the type of the arguments and returns. While ref contributes to C#`s type system it's not actually a type at the CLR level: it's a storage location modifier. Hence it's not possible to use a generic instantiation to control whether or not a particular location is ref or not. If this was possible it would be very easy to produce completely invalid code. Consider the following T Method () { T local = ...; ... return local; } Now consider what happens if the developer called Method () . It would produce both a local and return value which are ref . This would result in invalid C# code.
