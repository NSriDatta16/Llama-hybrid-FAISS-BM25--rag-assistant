[site]: datascience
[post_id]: 47608
[parent_id]: 
[tags]: 
Hyperparameter Tuning with Simulated Data

I'm trying to create a SVM classifier which can predict some fault, and to train it I'm using simulated examples of the fault. Of course, the simulations are not perfect, but they appear to be good enough since I get reasonable results when predicting on the real examples. What is the best way to tune the hyperparameters in order to maximise the performance on the real data? Using GridSearchCV does a good job of maximising the accuracy on a subset of the simulated data, but that doesn't always mean good results on the real data. Any general tips on working with simulated training data are also welcome.
