[site]: stackoverflow
[post_id]: 4446424
[parent_id]: 4441798
[tags]: 
OLD only use a reference Dependencies uses express , socket.io , node_redis and last but not least the sample code from media fire. Install node.js+npm(as non root) First you should(if you have not done this yet) install node.js+npm in 30 seconds (the right way because you should NOT run npm as root ): echo 'export PATH=$HOME/local/bin:$PATH' >> ~/.bashrc . ~/.bashrc mkdir ~/local mkdir ~/node-latest-install cd ~/node-latest-install curl http://nodejs.org/dist/node-latest.tar.gz | tar xz --strip-components=1 ./configure --prefix=~/local make install # ok, fine, this step probably takes more than 30 seconds... curl http://npmjs.org/install.sh | sh Install dependencies After you installed node+npm you should install dependencies by issuing: npm install express npm install socket.io npm install hiredis redis # hiredis to use c binding for redis => FAST :) Download sample You can download complete sample from mediafire . Unzip package unzip pbsb.zip # can also do via graphical interface if you prefer. What's inside zip ./app.js const PORT = 3000; const HOST = 'localhost'; var express = require('express'); var app = module.exports = express.createServer(); app.use(express.staticProvider(__dirname + '/public')); const redis = require('redis'); const client = redis.createClient(); const io = require('socket.io'); if (!module.parent) { app.listen(PORT, HOST); console.log("Express server listening on port %d", app.address().port) const socket = io.listen(app); socket.on('connection', function(client) { const subscribe = redis.createClient(); subscribe.subscribe('pubsub'); // listen to messages from channel pubsub subscribe.on("message", function(channel, message) { client.send(message); }); client.on('message', function(msg) { }); client.on('disconnect', function() { subscribe.quit(); }); }); } ./public/index.html PubSub $(document).ready(function() { var socket = new io.Socket('localhost', {port: 3000, rememberTransport: false/*, transports: ['xhr-polling']*/}); var content = $('#content'); socket.on('connect', function() { }); socket.on('message', function(message){ content.prepend(message + ' '); }) ; socket.on('disconnect', function() { console.log('disconnected'); content.html(" Disconnected! "); }); socket.connect(); }); Start server cd pbsb node app.js Start browser Best if you start google chrome(because of websockets support, but not necessary). Visit http://localhost:3000 to see sample(in the beginning you don't see anything but PubSub as title). But on publish to channel pubsub you should see a message. Below we publish "Hello world!" to the browser. From ./redis-cli publish pubsub "Hello world!"
