[site]: stackoverflow
[post_id]: 1880209
[parent_id]: 1878677
[tags]: 
it does not address how (or if) VBOs are affected by changes to the Model View matrix The model-view transform takes place on the GPU every time you make a draw call. Changing the model-view does not cause the VBO to mutate. The main difference between the objects (other than position in the scene) is texture mapping. They all have slightly different texture coordinates. Sounds like you should be adjusting the texture matrix, in addition to the model-view matrix, sorta like this: glMatrixMode(GL_TEXTURE); // glTranslate, glRotate, etc glMatrixMode(GL_MODELVIEW); // glTranslate, glRotate, etc Leveraging VBOs is usually a good idea, but they really only help with third-generation iPhones. They don't help much with older iPhones. Should I allocate a separate VBO for each individual object? It's usually more efficient to reduce the number of VBOs in your application. Rather than making multiple calls to glBindBuffer , you can supply unique offsets every time you call glDrawArrays or glDrawElements .
