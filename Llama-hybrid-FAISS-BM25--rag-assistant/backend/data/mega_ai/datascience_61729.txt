[site]: datascience
[post_id]: 61729
[parent_id]: 61728
[tags]: 
I see the tag is already present but you should look into Named Entity Recognition (NER). It is used to tag or find proper nouns in speech and can handle people and locations (of which countries could be thought of as). This page says the popular spaCy library specifically handles countries: https://spacy.io/api/annotation#named-entities It would easily catch Uganda, though you would have to experiment with the adjectives ("Ugandan"). Edit based on your comment that the resolving is the real problem. For that I would try: Use something like word2vec and cosine similarity to analyze all the "caught" words. If you load a pre-trained word2vec model and pass it the words, you'll get back a vector that represents that word. If you then compare all the vectors, I suspect Uganda and Ugandan would have very high similarity. See this answer for someone using word2vec on country names: https://stackoverflow.com/questions/21979970/how-to-use-word2vec-to-calculate-the-similarity-distance-by-giving-2-words Use a string comparison function to identify caught "locations" that are highly similar to other caught locations. This will work well for some countries (Uganda) but not others (France/French, Switzerland/Swiss).
