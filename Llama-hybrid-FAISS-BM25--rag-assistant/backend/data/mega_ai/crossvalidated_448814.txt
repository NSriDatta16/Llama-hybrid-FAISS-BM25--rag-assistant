[site]: crossvalidated
[post_id]: 448814
[parent_id]: 333099
[tags]: 
I don't think either of the answers provides a clear definition, so I will attempt to answer it because I stumbled into the same problem finding a clear definition of a hidden unit in the context of a Convolutional Neural Network. Hidden units in this context are the feature maps or filters. So for Tensorflow or Keras it would be tf.nn.Conv2D(**hidden_units**,...) Hidden Units based on the definition provided by http://www.cs.toronto.edu/~asamir/papers/icassp13_cnn.pdf A typical convolutional network architecture is shown in Figure 1. In a fully-connected network like DNNs, each hidden activation hi is computed by multiplying the entire input V by weights W in that layer. However, in a CNN, each hidden activation is computed by multiplying a small local input (i.e. [v1, v2, v3]) against the weights W. The weights W are then shared across the entire input space, as indicated in the figure. After computing the hidden units, a maxpooling layer helps to remove variability in the hidden units (i.e. convolutional band activations)
