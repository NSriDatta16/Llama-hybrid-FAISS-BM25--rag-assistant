[site]: stackoverflow
[post_id]: 4328808
[parent_id]: 
[tags]: 
Conversion failed when converting varchar value xxxx to int using an enum with NHibernate

I have an enum property which I want to store and retrieve from the database as a string. NHibernate is able to store the enum as a string but throws the following conversion exception upon retrieval: NHibernate.ADOException: could not execute query --> System.Data.SqlClient.SqlException: Conversion failed when converting the varchar value 'Pending' to data type int. Based on the post Mapping Enumerations with NHibernate by Jeremy Miller I created the following class: public class WorkflowAction { public virtual ActionStatus Status { get; set; } } which uses this enum: public enum RequestState { Pending, Approved, Rejected } which uses this class to transform into a string public class ActionStatusEnumString : NHibernate.Type.EnumStringType { public ActionStatusEnumString() : base(typeof(ActionStatus), 50) { } } and setup the property in my mapping file like this: As I said this works great for saving data. However, when I want to retrieve via this parameter I receive the conversion exception. return GetSession().CreateQuery( @"select distinct requests from WorkflowRequestInformation as requests join requests.WorkflowRequestInformationActionList as actions where actions.Status = :status .SetParameter("status", ActionStatus.Pending) .List (); NHibernate sends ActionStatus.Pending to the database as an integer. My guess is that this is because NHibernate is just running ActionStatus.Pending.ToString() . I can change my code to either of the following and it'll work // defeats the purpose of the enum .SetParameter("status", "Pending") // while this feels heavy handed .SetParameter("status", Enum.GetName(typeof(ActionStatus), ActionStatus.Pending)) Is there something built into NHibernate that I am missing that makes this conversion more automatic?
