[site]: stackoverflow
[post_id]: 3666437
[parent_id]: 3664750
[tags]: 
This is an odd question for SO to sanction, but here goes: qmake is long in the tooth (and I'm not the only one to say so ). I use cmake , despite it having its own awkwardness. The meta-object preprocessing build step for signals/slots/etc. is a huge buy-in. And many who'd be willing to accept the added level of abstraction are the sorts of people who'd be attracted to other environments (Java, C#, whatever-the-hey). On the other side of the fence are the hardcore C++ programmers who would rather work with std::thread instead of QThread . (If a C++ program is more server-oriented and has no GUI, people seem to avoid Qt, and I see their point.) The model/view is neither here nor there, but it's kind of trivial. I've criticized issues of thread affinity: http://blog.hostilefork.com/qt-model-view-different-threads/ Also, I've cross-compiled apps to Mac and Windows and Linux, and found Qt doesn't protect me from platform issues as much I might've wished. If you look at the internals and how drag and drop is implemented by extremely diverse code (e.g. qnd_x11.cpp , qdnd_win.cpp , and qdnd_mac.mm ) then you see that the "Leaky Abstraction" principle comes into play. Qt doesn't impose strong formalisms; you get the messages you get in varying order, or in duplicates--or not at all on some platforms. But all criticisms aside, I do like Qt's design, documentation, community support, and general aesthetic. You could do a lot worse! (I'm looking at you, wxWidgets and GTK.)
