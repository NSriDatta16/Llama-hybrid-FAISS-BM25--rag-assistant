[site]: crossvalidated
[post_id]: 179993
[parent_id]: 179984
[tags]: 
For purposes of discussion I'll assume you are using RNN for the typical use case of time series analysis, where the recurrence operation allows response to depend on a time-evolving state; for example the network can now detect changes over time. This is exactly the added capability you'd want a Recurrent Neural Network for, in this example. That part it sounds like you know. The downside, is it can be much more difficult to train and has multiple issues with convergence. For example, the backpropegation "signal" tends to decay exponentially over "time". The choice of learning algorithm can be more limited. (SGD can't obviously throw out intermediate timesteps without serious modifications). There are other methods that address some of these issues; for example Long-Short Term Memory , which basically uses a gating approach to build a recurrent circuit that can be "set" or "cleared". Even if you aren't talking time series (e.g. Recurrent neural network have also been used with convolutional layers to extend the effective pixel neighborhood.) you will still have similar convergence and exponential backprop decay issues.
