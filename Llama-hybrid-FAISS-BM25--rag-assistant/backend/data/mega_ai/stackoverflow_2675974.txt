[site]: stackoverflow
[post_id]: 2675974
[parent_id]: 2675929
[tags]: 
Allowing double values as indices is a pretty large change from what ArrayList does. The reason for this is that an array or list with double as indices would almost by definition be a sparse array , which means it has no value (or depending on your definition: a fixed, known value) for almost all possible indices and only a finite number of indices have an explicit value set. There is no prebuilt class in Java SE that supports all that. Personally I'd implement such a data structure as a skip-list (or similar fast-searching data structure) of (index, value) tuples with appropriate interpolation. Edit: Actually there's a pretty good match for the back-end storage (i.e. everything except for the interpolation): Simply use a NavigableMap such as a TreeMap to store the mapping from index to value. With that you can easily use ceilingEntry() and (if necessary) higherEntry() to get the closest value(s) to the index you need and then interpolate from those.
