[site]: stackoverflow
[post_id]: 1199693
[parent_id]: 1133960
[tags]: 
I've stumbled across a very similar problem. I wanted to cascade parameters from one combobox into a subsequent combobox with the same design goal of no code.... My solution is hardly elegant, but it works of a fashion :) Basically I have a SharedDataContext control, this has a "Value" DP i bind to the datacontext directly. I then use an attached property on the shared data context to allow for registration of other elements. This makes the XAML look like this Inside the SharedDataContext I have a static collection of framework elements. When the Register attached property is "changed" I catch the PropertyChangedCallback and add the sender (in this case the ProxyCollection instance) to the collection. When the databinding changes (and hence the Value property of the SharedDataContext) I enumerate through the collection and set the databindings. This is a bit of a work in progress and I'm not 100% happy with it yet (things like cleaning up the collection are concerning me slightly), but I hope it gives you some ideas. HTH Simon
