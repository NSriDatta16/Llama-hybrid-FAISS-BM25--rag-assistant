[site]: stackoverflow
[post_id]: 3992687
[parent_id]: 3984047
[tags]: 
Well, I am not happy with it, and I don't think I achieved efficiency, but this is what I ended up doing. I'd still love to hear from you guys with better approaches. private string GetKeywords(string urlReferrer) { var searchQuery = string.Empty; var url = new Uri(urlReferrer); var query = HttpUtility.ParseQueryString(urlReferrer); switch (url.Host) { case "google": case "daum": case "msn": case "bing": case "ask": case "altavista": case "alltheweb": case "live": case "najdi": case "aol": case "seznam": case "search": case "szukacz": case "pchome": case "kvasir": case "sesam": case "ozu": case "mynet": case "ekolay": searchQuery = query["q"]; break; case "naver": case "netscape": case "mama": case "mamma": case "terra": case "cnn": searchQuery = query["query"]; break; case "virgilio": case "alice": searchQuery = query["qs"]; break; case "yahoo": searchQuery = query["p"]; break; case "onet": searchQuery = query["qt"]; break; case "eniro": searchQuery = query["search_word"]; break; case "about": searchQuery = query["terms"]; break; case "voila": searchQuery = query["rdata"]; break; case "baidu": searchQuery = query["wd"]; break; case "yandex": searchQuery = query["text"]; break; case "szukaj": searchQuery = query["wp"]; break; case "yam": searchQuery = query["k"]; break; case "rambler": searchQuery = query["words"]; break; default: searchQuery = query["q"]; break; } return searchQuery; }
