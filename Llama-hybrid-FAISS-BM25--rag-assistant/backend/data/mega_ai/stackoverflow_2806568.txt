[site]: stackoverflow
[post_id]: 2806568
[parent_id]: 2791539
[tags]: 
I figured this out, what worked for me is first putting the dialog javascript in the page_load to just have a the auto open property set to false like so: function pageLoad() { $('#formPassBox').dialog({ autoOpen: false }); } Then create a totally separate function like so: function formSubmitPass() { $('#formPassBox').dialog({ autoOpen: true, width: 400, resizable: false, modal: true, draggable: false, buttons: { "Ok": function() { window.location.href = redirectUrl; } }, open: function(event, ui) { $(".ui-dialog-titlebar-close").hide(); var t = window.setTimeout("goToUrl()", 10000); } }); } Then use RegisterStartupScript as indicated by these questions: Run javascript after form submission in update panel? and What is wrong with ScriptManager.RegisterStartupScript? My code: ScriptManager.RegisterStartupScript(Me, upForm.GetType(), "AutoPostBackScript", "formSubmitPass();", True) NOTE: Make sure to use ScriptManager NOT ClientScript, also for the second parameter use GetType() on the update panel. Instead of using a stringbuilder ( Efficient Use of the ASP.NET RegisterStartupScript method ) on the code behind, which I felt was unwieldy to put javaScript on the code behind, I just make the separate function and called that, which worked great
