[site]: stackoverflow
[post_id]: 1494061
[parent_id]: 
[tags]: 
ActiveRecord counting with conditions over two tables

After watching, the latest RailsCasts with the include and joins information, I know I can do what I am doing in a much more efficient way. I have a very simple User model and a Status model. The User belongs to Status and the Status has many Users. I need to count how many users have a specific kind of status, this creates a new SQL count query for every single status and I know that this is not a good way to do it. It looks like this right now. statuses = Status.all statuses.each do |status| status.users.count end I end up with 4 queries of: SELECT count(*) AS count_all FROM "users" WHERE ("users".status_id = 1) SELECT count(*) AS count_all FROM "users" WHERE ("users".status_id = 2) It goes on like that for as many different statuses as exist in the database. The big problem is that now I need to filter by another association as well which is Organization. So I need to find the count for all users who have a certain status in a certain organization. This ends up quadrupling the amount of queries I am making and feels horrible. I'm not sure what kind of join I could use to cut down on this or what I could possibly do to fix this. Thanks for the help :)
