[site]: stackoverflow
[post_id]: 663809
[parent_id]: 663546
[tags]: 
Yes , it is possible, but ... Probably the best answer for this question is given by Robert Virding’s First Rule: “Any sufficiently complicated concurrent program in another language contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of Erlang.” Very good rule is use the right tool for the task . Erlang excels in concurrency and reliability. C/C++ was not designed with these properties in mind. If you don't want to throw away your C/C++ knowledge and experience and your project allows this kind of division, good approach is to create a mixed solution . Write concurrent, communication and error handling code in Erlang, then add C/C++ parts, which will do CPU and IO bound stuff.
