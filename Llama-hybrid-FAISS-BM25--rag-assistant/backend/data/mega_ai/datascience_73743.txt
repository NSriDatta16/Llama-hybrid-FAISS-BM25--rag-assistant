[site]: datascience
[post_id]: 73743
[parent_id]: 71734
[tags]: 
sklearn's roc_auc_score actually does handle multiclass and multilabel problems, with its average and multiclass parameters. The default average='macro' is fine, though you should consider the alternative(s). But the default multiclass='raise' will need to be overridden. To use that in a GridSearchCV , you can curry the function, e.g. import functools multiclass_roc_auc = functools.partial(roc_auc_score, multiclass='ovr') search = GridSearchCV(estimator=..., eval=multiclass_roc_auc, ...)
