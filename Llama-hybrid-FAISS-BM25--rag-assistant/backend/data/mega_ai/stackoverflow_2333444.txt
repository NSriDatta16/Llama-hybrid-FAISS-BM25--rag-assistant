[site]: stackoverflow
[post_id]: 2333444
[parent_id]: 1351765
[tags]: 
I designed something similar (although for far fewer text messages) for my employer. A Linux server is connected to a Bluetooth USB dongle for receiving data from embedded sensor devices in the lab and a Siemens TC35 GSM modem via a RS232 serial link. The server can send messages to selected employees phone if the sensors determine there is a problem which is also handled by a C++ program. In addition there is a J2EE app which allows employees to enter messages via a web page that are then sent as text messages to employees they select. The J2EE app dumps the messages into a database which are then collected by the C++ program and sent using AT commands via the TC35. It is done this way so sensor problem messages always have priority. Programming wise it was nothing special as AT commands are easy to understand. Just make sure your programming is secure so it can't be hijacked by a spammer and that the modem is located in a room with good GSM/3G coverage and isn't in a basement. Oh and its also a good idea to have your program ask the GSM modem for its signal strength and other cell base station information at a regular interval and store this in a special database table. This will allow you to spot problems with your cell provider and move to another one if required. I used this information to discover that the base station I was using appeared to be going offline or having technical problems quite frequently which caused my modems message throughput to slow down to a trickle. Good Luck
