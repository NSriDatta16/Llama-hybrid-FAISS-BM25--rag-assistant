[site]: stackoverflow
[post_id]: 4007213
[parent_id]: 4006969
[tags]: 
Performance tag, right. As long as you are concentrating on the "cost" of this or that minor code segment, you are oblivious to the bigger picture (isolation); and your intention is to justify something that, at a higher level (outside your isolated context), is simply bad practice, and breaks guidelines. The question is too low level and therefore too isolated. A system or program which is set of integrated components will perform much better that a collection of isolated components. The fact that this or that isolated component (work inside the loop) is fast or faster is irrelevant when the loop itself is repeated unnecessarily, and which would therefore take twice the time. Given that you have one family car (CPU), why on Earth would you: sit at home and send your wife out to do her shopping wait until she returns take the car, go out and do your shopping leaving her to wait until you return If it needs to be stated, you would spend (a) almost half of your hard-earned resources executing one trip and shopping at the same time and (b) have those resources available to have fun together when you get home. It has nothing to do with the price of petrol at 9:00 on a Saturday, or the time it takes to grind coffee at the caf√©, or cost of each iteration. Yes, there is a large diff in the time and the resources used. But the cost is not merely in the overhead per iteration; it is in the overall cost of the one organised trip vs the two serial trips. Performance is about architecture; never doing anything twice (that you can do once), which are the higher levels of organisation; integrated of the parts that make up the whole. It is not about counting pennies at the bowser or cycles per iteration; those are lower orders of organisation; which ajust a collection of fragmented parts (not a systemic whole). Masseratis cannot get through traffic jams any faster than station wagons.
