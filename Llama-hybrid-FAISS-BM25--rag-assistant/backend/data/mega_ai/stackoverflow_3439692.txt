[site]: stackoverflow
[post_id]: 3439692
[parent_id]: 
[tags]: 
how do i namespace pseudo-classical javascript

I have some simple OO code I've written that I'm playing with: //define a constructor function function person(name, sex) { this.name = name; this.sex = sex; } //now define some instance methods person.prototype.returnName = function() { alert(this.name); } person.prototype.returnSex = function() { return this.sex; } person.prototype.talk = function(sentence) { return this.name + ' says ' + sentence; } //another constructor function worker(name, sex, job, skills) { this.name = name; this.sex = sex; this.job = job; this.skills = skills; } //now for some inheritance - inherit only the reusable methods in the person prototype //Use a temporary constructor to stop any child overwriting the parent prototype var f = function() {}; f.prototype = person.prototype; worker.prototype = new f(); worker.prototype.constructor = worker; var person = new person('james', 'male'); person.returnName(); var hrTeamMember = new worker('kate', 'female', 'human resources', 'talking'); hrTeamMember.returnName(); alert(hrTeamMember.talk('I like to take a lot')); Now this is all well and good. But I'm confused. I want to include namespacing as part of my code writing practice. How can I namespace the above code. As it is now I have 2 functions defined in the global namespace. The only way I can think to do this is to switch to object literal syntax. But then how do I implement the pseudo-classical style above with object literals.
