[site]: stackoverflow
[post_id]: 4622654
[parent_id]: 4622567
[tags]: 
Writing and reading an object (XML serialized/deserialized) to/from isolated storage: namespace IsolatedStorageSerialization { using System; using System.IO; using System.IO.IsolatedStorage; using System.Xml; using System.Xml.Serialization; internal static class Program { private static void Main() { object thisIsAnObject = new object(); SerializeToIsolatedStorage(thisIsAnObject, "object.xml"); object anotherObject = DeserializeFromIsolatedStorage ("object.xml"); Console.ReadLine(); } private static void SerializeToIsolatedStorage (T obj, string filename) { if ((obj == null) || string.IsNullOrEmpty(filename)) { return; } using (var store = IsolatedStorageFile.GetUserStoreForAssembly()) using (var stream = store.CreateFile(filename)) using (var writer = XmlWriter.Create(stream)) { new XmlSerializer(obj.GetType()).Serialize(writer, obj); } } private static T DeserializeFromIsolatedStorage (string filename) { if (string.IsNullOrEmpty(filename)) { return default(T); } using (var store = IsolatedStorageFile.GetUserStoreForAssembly()) using (var stream = store.OpenFile(filename, FileMode.Open)) using (var reader = XmlReader.Create(stream)) { return (T)new XmlSerializer(typeof(T)).Deserialize(reader); } } } }
