[site]: stackoverflow
[post_id]: 5422545
[parent_id]: 
[tags]: 
Difference between UnPin and Close UnPinned

When the user clicks 'x' on a Pinned Form OnClose is called. When the user clicks 'x' on an Unpinned Form OnHide is called When the user clicks 'UnPin' on a Pinned Form OnHide is called. I'm trying to synchronise the visible forms with a menu system but I don't know how to determine the difference in the OnHide event between when the user clicks 'x' and when the user clicks 'UnPin'. I want to intercept the 'x' and call Close instead. Each child is a descendant of TManagerPanel which in turn is a descendant of TForm with the border style set to bsSizeToolWin, Drag Kind set to dkDock and Drag Mode is dmAutomatic. type TPanelManager = class(TForm) ... private ... Panels: TManagerPanelList; Settings: TSettings; //User Settings ... end; ... function TPanelManager.InitChild(ChildClass: TManagerPanelClass): TManagerPanel; var Child: TManagerPanel; begin Child := ChildClass.Create(Self); Child.Connection := MSConnection1; Child.Settings := Settings; Child.Styles := Styles; ... Child.OnPanelClosed := PanelClosed; Child.OnPercentChanged := PercentChanged; ... Child.OnPanelHide := PanelHide; Child.Font := Font; Child.Initialise; Child.ManualDock(DockTarget); Panels.AddPanel(Child); Result := Child; end; procedure TPanelManager.PanelClosed(Sender: TObject; var Action: TCloseAction); var MenuItem: TMenuItem; Child: TManagerPanel; begin if Sender is TManagerPanel then begin Child := TManagerPanel(Sender); Action := caFree; MenuItem := MenuItemFromChild(Child); MenuItem.Checked := False; Settings[RemoveAmpersand(MenuItem.Caption)] := MenuItem.Checked; Panels.Remove(Child); end; end; EDIT: What I mean by a "Pinned" Form: A docked form with the pin set such that it always visible. What I mean by a "UnPinned" Form: A docked form with the pin released such that a tab appears in a dock tab set and the form appears when the tab is selected. Delphi Version is 2007
