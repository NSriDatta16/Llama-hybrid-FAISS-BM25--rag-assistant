[site]: datascience
[post_id]: 6549
[parent_id]: 6547
[tags]: 
Anomaly Detection or Event Detection can be done in different ways: Basic Way Derivative! If the deviation of your signal from its past & future is high you most probably have an event. This can be extracted by finding large zero crossings in derivative of the signal. Statistical Way Mean of anything is its usual, basic behavior. if something deviates from mean it means that it's an event. Please note that mean in time-series is not that trivial and is not a constant but changing according to changes in time-series so you need to see the "moving average" instead of average. It looks like this: The Moving Average code can be found here . In signal processing terminology you are applying a "Low-Pass" filter by applying the moving average. You can follow the code bellow: MOV = movingaverage(TimeSEries,5).tolist() STD = np.std(MOV) events= [] ind = [] for ii in range(len(TimeSEries)): if TimeSEries[ii] > MOV[ii]+STD: events.append(TimeSEries[ii]) Probabilistic Way They are more sophisticated specially for people new to Machine Learning. Kalman Filter is a great idea to find the anomalies . Simpler probabilistic approaches using "Maximum-Likelihood Estimation" also work well but my suggestion is to stay with moving average idea. It works in practice very well. I hope I could help :) Good Luck!
