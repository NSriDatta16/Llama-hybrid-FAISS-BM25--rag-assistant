[site]: stackoverflow
[post_id]: 930137
[parent_id]: 
[tags]: 
MVVM Experts need your opinion on MVVM and Dataforms

as far as I understand the ViewModel should abstract the model from the view and add additional logic to handle the presentation stuff. My question is: How would I create a dataform that is suppose to handle user input for an order and details at once. It should present fields for entering the orders as well as the fields for 1 detail. My Model would have an object for an order which contains a list of OrderDetails. How would look my ViewModel for my OrderEntryForm like? Would I have an OrderViewModel and an OrderDetailViewModel and my my OrderEntryForm would contain a property of OrderViewModel and one for OrderDetailViewModel? (nesting ViewModels?) How would validation be handled in this case? Since Validation should go close to the model? Especially when I work with RIA-Service... Wouldn't it make more sense to put it in the ViewModel? How far would you abstract the Model from the ViewModel? Example: private DateTime _OrderDate; public DateTime OrderDate { get { return _OrderDate; } set { if (_OrderDate != value) { _OrderDate = value; OnPropertyChanged("OrderDate"); } } } this would mean I have to map the ViewModel-Property to Model-Properties. Cannot leverage Validation-Logic from the Model here... This example: public DateTime OrderDate { get { return Model.OrderDate; } set { if (Model.OrderDate != value) { Model.OrderDate = value; OnPropertyChanged("OrderDate"); } } } would requiere to pass in a Model. Have the access to the validation logic of the model but also a coupling... Most examples on the web show dataforms which use ViewModel's that a just a representation of the tables not a real abstraction... I know and I saw this stackoverflow.com/questions/744474/combining-net-ria-services-and-mvvm-in-silverlight-3-0 I also read nikhils blogpost on this but this handles also only Products straight mapping from the tables of the database... =( I know alot of questions... What are your opinions on that topic? How would you handle complex dataforms?
