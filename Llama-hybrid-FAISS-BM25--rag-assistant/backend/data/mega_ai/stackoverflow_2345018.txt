[site]: stackoverflow
[post_id]: 2345018
[parent_id]: 2344449
[tags]: 
Maybe this could be optimized somehow and yet I have tested it in Chrome only, but I think it will work in other browsers too. There is no need of jQuery UI for this, it's hand made ;) $(function() { var selectableLi = $('#selectable li'); selectableLi.mousedown(function(){ var startIndex, endIndex, mouseUpOnLi = false; // When dragging starts, remove classes active and hover selectableLi.removeClass('active hover'); // Give the element where dragging starts a class $(this).addClass('active'); // Save the start index startIndex = $(this).index(); // Bind mouse up event selectableLi.bind('mouseup', function(){ // Mouse up is on a li-element mouseUpOnLi = true; $(this).addClass('active'); // Remove the events for mouseup, mouseover and mouseout selectableLi.unbind('mouseup mouseover mouseout'); // Store the end index endIndex = $(this).index(); // Swap values if endIndex I've got an example online . Note that items don't have a background colour when selecting; I think this will give a better performance. UPDATE - Example 2 I updated it so the selection is visible while selecting: var selectableLi; function colourSelected(a, b, Class){ selectableLi.removeClass(Class); // Swap values if a > b if(a > b){ var tmp = a; a = b; b = tmp; } // Give the selected elements a colour for(i=a; i Again, maybe this code could be optimized somehow for performance.
