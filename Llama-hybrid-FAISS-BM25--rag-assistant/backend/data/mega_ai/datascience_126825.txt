[site]: datascience
[post_id]: 126825
[parent_id]: 
[tags]: 
Variable length multi class multi label problem

I have to create a model that will output a variable number of tuples of size 3 as output. The tuples have to contain some category, not a float. I've never encountered a problem as this one so I'm having trouble defining the architecture of the model, as well as not knowing what loss function to use in such output. My first thought was to create a fixed length output layer with the number of neurons being 3 multiplies by some maximum number of tuples. Possible solution 1: Create the model such that there is a fixed length output layer. When the output will have to be evaluated, the output sequence will be devided into tuples of length 3. We will calculate the loss compared to the target sequence. Possible solution 2: Create the model such that the output layer is of size 3 i.e. the size of the tuple. The model will keep generating tuples as output until it generates a eos tuple. This tuples is to be determined. We will calculate the loss compared to the target sequence. If the generated tuple sequence is longer than the target sequence, than it will be cut to the length of the target sequence. If the generated tuple sequence is shorter than the target sequence then the target sequence will be cut to the length of the newly generated sequence. More problems: In the context of the problem, the ordering of the sequence of tuples is not important as tokens in language models. Meaning for example, if we have a target tuple sequence of ((2, 3 ,2), (1, 2, 4), (-1, -1, -1)), and our generated sequence is ((1, 2, 4), (4, 4, 5), (-1, -1, -1)) and we pass these sequences into some loss function that does not take into account that the ordering of the inner tuples are not important, the loss function will not take into account that we got one tuple right i.e. (1, 2, 4). Questions: What loss functions are available for such multi-class, multi-label problems that also take into account the permutation invariance of the tuple sequences? Is there a better model architecture, compared to the aforementioned ones?
