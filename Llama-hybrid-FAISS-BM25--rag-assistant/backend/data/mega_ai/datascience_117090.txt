[site]: datascience
[post_id]: 117090
[parent_id]: 
[tags]: 
Algorithm to determine whether the first row in CSV is likely to be a header row or a data row

I have a fairly simple problem. I am trying to determine whether the first row in CSV is likely to be a header row or a data row. Looking at single column, the problem can be simplified to: I have a set of n strings and need to determine if another string is similiar to these first strings in some way. For example: set1 = ['12345', '14.32', '18000', '1200', '0', '123'] candidate1_1 = 'Nums' # Not similiar, uses different chars, not a number. candidate1_2 = '400' # Similiar (is a number). set2 = ['123-456-7890', '4412389112342', '+1-123-451-0983', '1009097812'] candidate2_1 = 'Phone Numbers' # Not similar, definitely a label. candidate2_2 = '(123)123-1234' # Similiar. candidate2_3 = '911' # Might be similar or not, depending on the algorithm. # The function I need to write is: def contains_header_row(csv): ... So I can write out all of these different ideas for checks (data types, chars used, lengths, etc.) but I'm wondering if there is a better more abstract approach that would work robustly. Could I use something like a word embedding? How might I looks at all columns to arrive at a more accurate estimate? This question may be better asked on another forum (ex. https://math.stackexchange.com/ ), but I'm unsure which one. If that is the case, please advise.
