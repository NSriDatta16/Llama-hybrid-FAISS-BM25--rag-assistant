[site]: crossvalidated
[post_id]: 142315
[parent_id]: 
[tags]: 
Learning user behavior that changes over time

I am learning a model using SVM that will predict user behavior of some kind. Simplifying this model, each example in the feature space contains some features: $f_1,f_2,..,f_n$ and a class $a$ that represents the action that the user eventually took in that example (which I will try to predict). I have the examples ordered by the chronological order of their respective actions. I did two experiments (On pretty large set of users, learning one model per user): Use the 50% first examples (chronologically) for training SVM, use the other 50% for testing it. The results - some of the features outperform the SVM model (!!!) Use randomly chosen 50% for training SVM, the rest for testing - the SVM model outperforms all features as expected. My conclusion is that the user behavior changes over time (the examples were collected over years), what means that the first 50% are generated from somewhat different distribution than the last 50%.. what causes very poor model accuracy. In practice I am still interested in the first method and not the second one, because in reality I will have only past examples for training and will try to predict future example, so I need to improve my learning process. Is there any known solution/common approach for this problem? some model/algorithm which gives more weight to newer examples and might fix/mitigate the major problem I'm having?
