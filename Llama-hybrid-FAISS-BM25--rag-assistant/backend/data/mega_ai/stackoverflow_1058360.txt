[site]: stackoverflow
[post_id]: 1058360
[parent_id]: 1058354
[tags]: 
One must instantiate an object before calling a method. In this case, trying to call the addAll method on a null object will cause a NullPointerException . Therefore, the Set union object must first be constructed somehow, then can it used in any meaningful way. I think it would be a good idea to go over the given code and try to understand what the code is trying to accomplish. Set union = new HashSet (s1); union.addAll(s2); The above code is tells me the following: Let's make a new HashSet from the existing elements of the Collection s1 (which I assume to be something like another Set .) The newly created HashSet will be stored as a Set with the name union -- the code seems to imply that this new Set is going to represent some kind of union. To the union , elements from another Collection (probably another Set that is called s2 ) will be added by the addAll method. Now, I think that the union object contains an union of the Set s s1 and s2 . When writing code, one should pay attention to trying to tell others what the code intends to do. Having the code explain what it's doing is going to result in more readable and maintainable code that is going to make it easier (and possibly a pleasure) for others to read and understand.
