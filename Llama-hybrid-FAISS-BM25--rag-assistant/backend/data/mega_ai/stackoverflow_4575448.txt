[site]: stackoverflow
[post_id]: 4575448
[parent_id]: 
[tags]: 
Calling an overridden method from base constructor

We have a class like this: class LogAnalyzer { protected IExtensionManager manager; public LogAnalyzer() { GetManager(); } protected virtual void GetManager() { manager = new FileExtensionManager(); } } And we derive another class like this: class TestableLogAnalyzer:LogAnalyzer { protected override void GetManager() { this.manager = new StubExtensionManager(); } } When we instantiate the child class what's supposed to happen in OOP rules? Does the virtual or the overridden method gets called and why? I tested it in C# and overridden method worked but I suspect it may be the other way around in an interpreted language. Is that true?
