[site]: stackoverflow
[post_id]: 1558063
[parent_id]: 1347876
[tags]: 
I modified your module slightly as shown below and called the function in 'Workbook_Open' and 'Workbook_Beforeclose' sections of 'This Workbook'. In the former the function argument was False, while in the latter the argument was True. It works well. You would also do well to refer to Yogesh's code, which is more comprehensive. The URL for that is: http://ygblogs.blogspot.com/2009/04/macros-in-excel-disable-cut-copy-paste.html Insert the following into a module: Option Explicit Dim Allow As Boolean, ctlId As Integer, Enabled As Boolean Function ToggleCutCopyAndPaste(Allow As Boolean) 'Activate/deactivate cut, copy, paste and pastespecial shortcut keys With Application Select Case Allow Case False .OnKey "^c", "CutCopyPasteDisabled" .OnKey "^v", "CutCopyPasteDisabled" .OnKey "^x", "CutCopyPasteDisabled" .OnKey "+{DEL}", "CutCopyPasteDisabled" .OnKey "^{INSERT}", "CutCopyPasteDisabled" Case True .OnKey "^c" .OnKey "^v" .OnKey "^x" .OnKey "+{DEL}" .OnKey "^{INSERT}" End Select .CutCopyMode = Allow .CellDragAndDrop = Allow End With 'Activate/Deactivate specific menu item Dim cBar As CommandBar Dim cBarCtrl As CommandBarControl, i As Integer For i = 1 To 4 If i = 1 Then ctlId = 21 If i = 2 Then ctlId = 19 If i = 3 Then ctlId = 22 If i = 4 Then ctlId = 755 For Each cBar In Application.CommandBars If cBar.Name <> "Clipboard" Then Set cBarCtrl = cBar.FindControl(ID:=ctlId, recursive:=True) If Not cBarCtrl Is Nothing Then cBarCtrl.Enabled = Allow End If Next Next i End Function Insert the following in the ThisWorkbook section of the VBA editor: Private Sub Workbook_BeforeClose(Cancel As Boolean) ToggleCutCopyAndPaste (True) End Sub Private Sub Workbook_Open() ToggleCutCopyAndPaste (False) End Sub
