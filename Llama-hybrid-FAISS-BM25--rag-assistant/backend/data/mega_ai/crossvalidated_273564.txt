[site]: crossvalidated
[post_id]: 273564
[parent_id]: 
[tags]: 
Identify Phrases Not in Training Set (Unsupervised)

I'm trying to train an unsupervised machine learning algorithm to learn a vocabulary and if it is given a word, it can predict how close that word is to what it already knows. Only issue is my approach will take weeks to finish. Here is the use case: Training Phrase Set: - nike shoes - adidas shoes - durable water bottles - best water bottles I used KMeans and silhouette score to determine there are two clusters: Cluster 1: nike shoes, adidas shoes Cluster 2: durable water bottles, best water bottles Then I used Gaussian Mixture to train the phrases based on the optimal number of clusters from the silhouette scores. When I send a new keyword that fits poorly in the cluster I'd like to have a lot probability of being in any cluster. You can get this with scores from the GM: Great fits: nike shoe, nike sandal Poor fits: computer monitor, soft t-shirts However, if I have 10,000 keywords and need to run through 9,999 KMeans / silhouette trials to find the optimal number of clusters, the program will run for an incredibly long amount of time. Any thoughts on how to predict how similar a phrase is to a lexicon? I'd prefer to use a ML algorithm. I've searched and cannot find any examples in Python. Any help would be much appreciated.
