[site]: stackoverflow
[post_id]: 2365208
[parent_id]: 
[tags]: 
Speeding up xpath

I have a 1000 entry document whose format is something like: There are more than 1000 Entry nodes here. I am writing a Java program which basically gets all the node one by one and do some analyzing on each node. But the problem is that the retrieval time of the nodes increases with its no. For example it takes 78 millisecond to retrieve the first node 100 ms to retrieve the second and it keeps on increasing. And to retrieve the 999 node it takes more than 5 second. This is extremely slow. We would be plugging this code to XML files which have even more than 1000 entries. Some like millions. The total time to parse the whole document is more than 5 minutes. I am using this simple code to traverse it. Here nxp is my own class which has all the methods to get nodes from xpath. nxp.fromXpathToNode("/Example/Entry" + "[" + i + "]", doc); and doc is the document for the file. i is the no of node to retrieve. Also when i try something like this List nl = nxp.fromXpathToNodes("/Example/Entry",doc); content = nl.get(i); I face the same problem. Anyone has any solution on how to speed up the tretirival of the nodes, so it takes the same amount of time to get the 1st node as well as the 1000 node from the XML file. Here is the code for xpathtonode. public Node fromXpathToNode(String expression, Node context) { try { return (Node)this.getCachedExpression(expression).evaluate(context, XPathConstants.NODE); } catch (Exception cause) { throw new RuntimeException(cause); } } and here is the code for fromxpathtonodes. public List fromXpathToNodes(String expression, Node context) { List nodes = new ArrayList (); NodeList results = null; try { results = (NodeList)this.getCachedExpression(expression).evaluate(context, XPathConstants.NODESET); for (int index = 0; index and here is the starting public class NativeXpathEngine implements XpathEngine { private final XPathFactory factory; private final XPath engine; /** * Cache for previously compiled XPath expressions. {@link XPathExpression#hashCode()} * is not reliable or consistent so use the textual representation instead. */ private final Map cachedExpressions; public NativeXpathEngine() { super(); this.factory = XPathFactory.newInstance(); this.engine = factory.newXPath(); this.cachedExpressions = new HashMap (); }
