[site]: stackoverflow
[post_id]: 3192025
[parent_id]: 3191936
[tags]: 
Don't use complicated regexes. Delete EVERYTHING except digits -- non-digits are error-prone cruft. If the third digit is 0, delete it. Expect 61 followed by valid AUS area code ([23478] for generality NB 4 is for mobiles) then 8 digits or 64 followed by valid NZL area code (whatever that is) followed by 7 digits. Anything else is bad. In the good stuff, insert the +()- at the appropriate places. By the way (1) area code 2 is for the whole of NSW+ACT, not just Sydney, 3 is for VIC+TAS (2) lots of people these days don't have landlines, just mobiles, and people tend to retain the same mobile phone number longer than they maintain the same landline phone number or the same postal address, so mobile phone number is great for fuzzy matching customer records -- so I'm more than a little curious why you don't include them. The following tell you all you ever wanted to know, plus a whole lot more, about the Australian and New Zealand phone numbering schemes. Comment on the regexes : (1) You are using the search method with a "^" prefix. Using the match method with no prefix is somewhat less inelegant. (2) You don't seem to be checking for trailing rubbish in your phone number field: >>> import re >>> standard_format = re.compile(r'^\+(?P \d{2})\((?P \d)\ )(?P \d{3,4})-(?P \d{4})') >>> m =standard_format.search("+61(3)1234-567890whoopsie") >>> m.groups() ('61', '3', '1234', '5678') >>> You may like to (a) end some of your regexes with \Z ( NOT $) so that they don't match OK when there is trailing rubbish or (b) introduce another group to catch trailing rubbish. and a social engineering comment : Have you yet tested the user reaction to a staff member carrying out this directive: "Space instead of hyphen in local component - ask user to remediate"? Can't the script just fix it and carry on? and some comments on the code : the self.PHFull code (a) is terribly repetitive (if you must have regexes put them in a list with corresponding action codes and error messages and iterate over the list) (b) is the same for "error" cases as for standard cases (so why are you asking the users to "remediate"???) (c) throws away the country code and substitutes a 0 i.e. your standard +61(2)1234-5678 is being kept as 0212345678 aarrgghhh ... even if you have the country stored with the address that's no good if an NZer migrates to Aus and the address gets updated but not the phone number and please don't say that you are relying on the current (no NZ customers outside the Auckland area???) non-overlap of area codes ... Update after full story revealed Keep it SIMPLE for both you and the staff. Instructions to staff using Active Directory should be (depending on which office) "Fill in +61(2)9876-7 followed by your 3-digit extension number". If they can't get that right after a couple of attempts, it's time they got the DCM. So you use one regex per office, filling in the constant part, so that say the SYD offices have numbers of the form +61(2)9876-7ddd you use the regex r"\+61\(2\)9876-7\d{3,3}\Z" . If a regex matches, then you remove all non-digits and use "0" + the_digits[2:] for the next app. If no regexes match, send a rocket.
