[site]: stackoverflow
[post_id]: 3248119
[parent_id]: 3244111
[tags]: 
You will run into this mismatch when you try and build a REST api that does not match the flow of the user agent that is consuming the API. Consider when you run a client application, the user is always presented with some initial screen. If you match the content and options on this screen with the root representation then the available links and desired transitions will match nicely. As the user selects options on the screen, you can transition to other representations and the client UI should be updated to reflect the new representation. If you try and model your REST API as some kind of linked data repository and your client UI as an independent set of transitions then you will find HATEOAS quite painful.
