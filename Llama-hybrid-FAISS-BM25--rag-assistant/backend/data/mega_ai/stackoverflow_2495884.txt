[site]: stackoverflow
[post_id]: 2495884
[parent_id]: 2495656
[tags]: 
One thing that you can do is modify what you put into imshow. The first variable can be grayscale values as you have used or it can be RGB or RGBA values. If you RGB/RGBA values then the cmap is ignored. So for instance, imshow(Z1, cmap=cm.hsv, alpha=.6, extent=extent) will generate the same image as imshow(cm.hsv(Z1), alpha=.6, extent=extent) because cm.hsv() just returns RGBA values. If you take a look at the values it returns, they all have 1.0 as the A value (the transparency). So one way to make variable transparency would be something like this: def mycmap(x): tmp = cm.hsv(x) for i in xrange(tmp.shape[0]): for j in xrange(tmp.shape[0]): tmp[i,j][3] = somefunction of x[i,j] that generates the transparency return tmp imshow(mycmap(Z1), extent=extent) imshow(mycmap(Z2), extent=extent) You might find a little more elegant way of doing this, but hopefully you get the idea.
