[site]: crossvalidated
[post_id]: 206665
[parent_id]: 206446
[tags]: 
The reward, $R: \mathcal{S} \times \mathcal{A} \rightarrow \mathbb{R}$ and transition, $T: \mathcal{S} \times \mathcal{A} \times \mathcal{S} \rightarrow \mathbb{R}$ are functions, which means in the most general sense you cannot represent them as matrices(unless you have some infinite dimensional matrices). What you can define is functions that evaluate these quantities on demand, i.e. def R(state, action): # do something return R You can implement your algorithms (e.g. PI, Q-learning, etc) to use such an interface and then you wont have to specify the matrices at all. This also works for continuous spaces. For implementation examples see the following (NOTE: the package is a work in progress implementation) https://github.com/makokal/funzo/blob/master/funzo/models/mdp.py https://github.com/makokal/funzo/blob/master/funzo/planners/dp.py#L27
