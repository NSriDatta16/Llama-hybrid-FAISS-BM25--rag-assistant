[site]: stackoverflow
[post_id]: 4608375
[parent_id]: 4587239
[tags]: 
Looks like there is no elegant way to do this from within the default Netbeans IDE. I was trying the same with Eclipse and in all my searches, I was lead to this Apache Axis2 - Code Generator Wizard Guide for Eclipse Plug-in for Eclipse (I still can't post links as I'm a newbie). On using the above plugin (some sort of eclipse add-on of WSDL2Java), it generated the stubs along with proper SoapAuthenticationHeader objects which I can pass along for validation. So my code now is: TeleCastStub stub = new TeleCastStub(); SoapAuthenticationHeader auth = new SoapAuthenticationHeader(); auth.setUsername(username); auth.setPassword(password); QueueRealTimeEmail pageObj = new QueueRealTimeEmail(); pageObj.setFrom(from); pageObj.setTo(to); pageObj.setSubject(subject); pageObj.setBody(body); SoapAuthenticationHeaderE authE = new SoapAuthenticationHeaderE(); authE.setSoapAuthenticationHeader(auth); QueueRealTimeEmailResponse response = stub.queueRealTimeEmail(pageObj, authE); It works just fine. Now this leads me to a couple of more questions: The way I've gone about it, using the axis2 plugin, my code snippet, is it the right way to do it? Sometimes I get this feeling that I just put a hack together to get the job done and I'm always interested in finding the right way to do things so I can do it better next time. When I was using the in-built code generation wizard with eclipse, I noticed it had an option for Axis runtime and not Axis2. So now my question is; With older versions of Axis or with pre-built tools of the IDE, consuming web services with special authentication headers just can't be done? Is it more of an architectural limitation? And thanks again for your time. Great board this one, SO! Has saved my hide numerous times. So it is my turn to give back to the community now.
