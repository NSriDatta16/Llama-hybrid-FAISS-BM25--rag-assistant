[site]: stackoverflow
[post_id]: 4730703
[parent_id]: 4729587
[tags]: 
If the initial conditions really are as you describe, I think your temp storage area must overlap with the original input: I don't see how your loop would result in a duplicate "1" otherwise. Specifically, I would guess that temp points to the byte immediately after the beginning of the original input (as a really wild guess: perhaps the buffer where "321" is reserved in a data section, and has been accidentally declared as only a single byte, and temp is declared immediately afterwards). i.e. initially: buffer for original number | | temp (== di) actually points here | | v v ---+---+---+---+---+--- | 3 | 2 | 1 | | ---+---+---+---+---+--- ^ | initial si After the first iteration, the "1" has overwritten the "2": temp | v di ---+---+---+---+---+--- | 3 | 1 | 1 | | ---+---+---+---+---+--- si After the second iteration, the "1" (which was originally a "2") is copied over the original "1": temp | v di ---+---+---+---+---+--- | 3 | 1 | 1 | | ---+---+---+---+---+--- si After the third iteration, the "3" is copied: temp | v di ---+---+---+---+---+--- | 3 | 1 | 1 | 3 | ---+---+---+---+---+--- si ...and finally with the $ on the end: temp | v di ---+---+---+---+---+--- | 3 | 1 | 1 | 3 | $ ---+---+---+---+---+--- si ...so temp now points to "113".
