[site]: stackoverflow
[post_id]: 5472905
[parent_id]: 
[tags]: 
Xaml name scope

I need to change Rectangle attribute from C# (his RotateTransform angle) The problem is the rectangle was declared in XAML, and in the C# code is out of scope for the rectangle, I tried to use Name, and X:Name without succeed, How should I do it? -------------Edit-------------------- C# code private void MoveThumb_DragDelta(object sender, DragDeltaEventArgs e) { Control designerItem = this.DataContext as Control; if (designerItem != null) { double left = Canvas.GetLeft(designerItem); double top = Canvas.GetTop(designerItem); if (mRect != null)// This line don't compile Canvas.SetLeft(designerItem, left + e.HorizontalChange); Canvas.SetTop(designerItem, top + e.HorizontalChange); //Canvas.SetTop(designerItem, top + e.VerticalChange); } } You can notice that "if (mRect != null)" does not pass compilation -------------Seconde Edit--- All the code---------------------------- Now the C# code using System.Windows.Controls; using System.Windows.Controls.Primitives; using System.Windows.Shapes; using System.Windows.Media; using System.Windows; namespace DiagramDesigner { public class MoveThumbUpDwon : Thumb { public MoveThumbUpDwon() { DragDelta += new DragDeltaEventHandler(this.MoveThumb_DragDelta); } private void MoveThumb_DragDelta(object sender, DragDeltaEventArgs e) { Control designerItem = this.DataContext as Control; if (designerItem != null) { double left = Canvas.GetLeft(designerItem); double top = Canvas.GetTop(designerItem); //Canvas.SetLeft(designerItem, left + e.HorizontalChange); Canvas.SetTop(designerItem, top + e.VerticalChange); } } } public class MoveThumbLeftRight : Thumb { public MoveThumbLeftRight() { DragDelta += new DragDeltaEventHandler(this.MoveThumb_DragDelta); } private void MoveThumb_DragDelta(object sender, DragDeltaEventArgs e) { Control designerItem = this.DataContext as Control; if (designerItem != null) { double left = Canvas.GetLeft(designerItem); double top = Canvas.GetTop(designerItem); Canvas.SetLeft(designerItem, left + e.HorizontalChange); //Canvas.SetTop(designerItem, top + e.VerticalChange); } } } public class MoveLine : Thumb { public MoveLine() { DragDelta += new DragDeltaEventHandler(this.MoveThumb_DragDelta); } private void MoveThumb_DragDelta(object sender, DragDeltaEventArgs e) { Control designerItem = this.DataContext as Control; if (designerItem != null) { double left = Canvas.GetLeft(designerItem); double top = Canvas.GetTop(designerItem); // if (mRect != null) Canvas.SetLeft(designerItem, left + e.HorizontalChange); Canvas.SetTop(designerItem, top + e.HorizontalChange); //Canvas.SetTop(designerItem, top + e.VerticalChange); } } } }
