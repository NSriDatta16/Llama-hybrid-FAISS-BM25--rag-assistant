[site]: stackoverflow
[post_id]: 4008419
[parent_id]: 
[tags]: 
C# Multithreaded application and SQL connections help

I need some advice regarding an application I wrote. The issues I am having are due to my DAL and connections to my SQL Server 2008 database not being closed, however I have looked at my code and each connection is always being closed. The application is a multithreaded application that retrieves a set of records and while it processes a record it updates information about it. Here is the flow: The administrator has the ability to set the number of threads to run and how many records per thread to pull. Here is the code that runs after they click start: Adapters are abstractions to my DAL here is a sample of what they look like: public class UserDetailsAdapter: IDataAdapter { private IUserDetailFactory _factory; public UserDetailsAdapter() { _factory = new CampaignFactory(); } public UserDetails FindById(int id){ return _factory.FindById(id); } } As soon as the _factory is called it processes the SQL and immediately closes the connection. Code For Threaded App: private int _recordsPerthread; private int _threadCount; public void RunDetails() { //create an adapter instance that is an abstration //of the data factory layer var adapter = new UserDetailsAdapter(); for (var i = 1; i ) parms[1]; var adapter = new DetailsAdapter(); //we keep running until there are no records left inthe Database while (!_noRecordsInPool) { foreach (var detail in details) { var userAdapter = new UserAdapter(); var domainAdapter = new DomainAdapter(); var user = userAdapter.FindById(detail.UserId); var domain = domainAdapter.FindById(detail.DomainId); //...do some work here...... adapter.Update(detail); } if (!_noRecordsInPool) { details = adapter.FindTopDetailsInQueue(_recordsPerthread); if (details == null || details.Count The app crashes because there seem to be connection issues to the database. Looking in my log files for the DAL I am seeing this: Timeout expired. The timeout period elapsed prior to obtaining a connection from the pool. This may have occurred because all pooled connections were in use and max pool size was reached When I run this in one thread it works fine. I am guessing when I runt his in multiple threads I am obviously making too many connections to the DB. Any thoughts on how I can keep this running in multiple threads and make sure the database doesnâ€™t give me any errors. Update: I am thinking my issues may be deadlocks in my database. Here is the code in SQL that is running whe I get a deadlock error: WITH cte AS ( SELECT TOP (@topCount) * FROM dbo.UserDetails WITH (READPAST) WHERE dbo.UserDetails where IsLocked = 0) UPDATE cte SET IsLocked = 1 OUTPUT INSERTED.*; I have never had issues with this code before (in other applications). I reorganzied my Indexes as they were 99% fragmented. That didn't help. I am at a loss here.
