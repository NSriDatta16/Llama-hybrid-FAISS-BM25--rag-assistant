[site]: stackoverflow
[post_id]: 1262630
[parent_id]: 1262530
[tags]: 
There are many ways to achieve "application scope" objects and data for an application. However, it might be useful to determine which of the shared "components" you need access to are actually just global, or whether some of it is actually "contextual". There is a difference, perhaps subtle in some cases, between global and contextual components. In the case of a utility, such as a logger, that is most useful as a global facility, as logging is one of those pesky cross-cutting concerns. However, in a lot of cases, information is specifically contextual, and deserves to be wrapped up in a context object of some kind, only accessible to code that is actually executing within that context. Context can be difficult to identify at times. If you can identify it, and you can figure out how to initialize and make available a context object at the right times to the right code, you should end up with a better product that has more appropriately organized code than if you just make a bunch of data globally accessible. I recommend looking into BDD, Behavior Driven Development, a methodology that blends agile and TDD practices into a more strict development methodology where context plays a critical role.
