[site]: stackoverflow
[post_id]: 1374549
[parent_id]: 1374011
[tags]: 
For extremely compact structures compared to java standard ones, one could work at the bit level. That depends a lot on your data of course, the code can't really be generic I guess. I know nothing that could do it generically. You could have to develop it (possibly using the BitSet class). Something in Java that is extremely compact it the enum classes : EnumSet and EnumMaps . They are both extremely compact and extremely fast. The idea: Identifying the presence or not of a specific enum instance in a Set is a boolean information, so it requires 1 bit . Therefore, the EnumSet requires only one Long (for enums with less than 64 instances). In an EnumMap (String is just for the example), it is not required to store the key (enum), it can be made implicit by calling ordinal() on the enum which delivers the index. Therefore, the storage can be String[], and the keys are not stored .
