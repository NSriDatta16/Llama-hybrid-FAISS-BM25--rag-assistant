[site]: crossvalidated
[post_id]: 314258
[parent_id]: 314241
[tags]: 
I'd suggest you don't actually bother with the fancy approach. Sum up how much each manager has given away, divide by the total revenue of the store, and see if any managers have a very different number than the rest by hand. Remember: Things you find out via machine learning are often, often overfit or (especially in cases like this) aren't quite answering the question you think you're answering. The best case for a real-world situation like this would be it highlights managers who you should look more into personally. Given that, if you desperately want to run scikit-learn on it, then one possible solution I see for you is indeed with outlier detection. Assuming you can link all give-aways to the manager in charge during them, and assuming your daily numbers are independent of each other (which is patently untrue but may work anyway, since time series modeling is difficult), what you can do is generate a vector per manager, in which each feature is the number of items given away for a particular day. So your vector would be of size (number of days in the dataset)x1. Then you could, assuming you have enough managers and stores, use a one-class SVM.
