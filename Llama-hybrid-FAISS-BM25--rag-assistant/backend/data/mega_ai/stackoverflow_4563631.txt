[site]: stackoverflow
[post_id]: 4563631
[parent_id]: 4563228
[tags]: 
Here's a dynamic programming solution that counts the total number of ways to decompose the string into words. It solves your original problem, since the string is decomposable if the number of decompositions is positive. def count_decompositions(dictionary, word): n = len(word) results = [1] + [0] * n for i in xrange(1, n + 1): for j in xrange(i): if word[n - i:n - j] in dictionary: results[i] += results[j] return results[n] Storage O(n), and running time O(n^2).
