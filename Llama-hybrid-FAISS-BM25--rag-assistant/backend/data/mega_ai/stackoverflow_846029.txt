[site]: stackoverflow
[post_id]: 846029
[parent_id]: 844870
[tags]: 
Two questions: If the agent must use a state to compute an action, then how do you expect to keep the representation of states secret from the agent? If the environment expects to produce a state (and a reward) given an action, how do you expect to keep the representation of states secret from the environment? Both of these are possible, but each must involve some sort of abstraction for querying states or creating states. I don't have a good feeling about this design. It would help to clarify the question by Providing type signatures for the functions of interest Identifying to which functions you want the representation of states not to be exposed. P.S. These difficulties are quite separable from Haskell and would be at issue regardless of the choice of implementation language (provided that the implementation language supports some form of privacy).
