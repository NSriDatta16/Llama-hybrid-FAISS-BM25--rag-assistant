[site]: stackoverflow
[post_id]: 2676794
[parent_id]: 2664966
[tags]: 
I think I guess what you are trying to do, and it sounds like you are going about it the wrong way. Do not make a 'new page' in the admin interface. What you want to do is serve up a file (JSON, XHTML fragment, whatever) to your Javascript and include in it WP data, right? I know that problem, having used it in some of my plugins. There are two techniques: (1) This is what you need to do: make a new plugin (just a loose php file in wp-plugins with the same format header as the other plugins in there). Write your function along these lines: function mydatapage(){ if (...$_SERVER['REQUEST_URI'] == the one I am using ...) { $args=array( 'p'=>'77' ); $friends = new WP_Query($args); if ($friends->have_posts()) : the_post(); the_title(); the_content(); else:>? Sorry, no posts are available. What that does is do a lookup when pages are loaded to see if the url matches the one you want to hijack and use to send your custom data. If it is, you send the data/file/whatever you feel like and exit (die). Give a shout if you want more detailed syntax. It is a bit messy, but works well. (2) Directly call your plugin file. WP will only handle files that do not already exist, and leave the rest to Apache. That means you can make a plugin file and call that directly using the .../wp-plugin/myfile.php url. You would need to include some of the WP core files to get things like WP_Query to work. It is marginally more fragile a method.
