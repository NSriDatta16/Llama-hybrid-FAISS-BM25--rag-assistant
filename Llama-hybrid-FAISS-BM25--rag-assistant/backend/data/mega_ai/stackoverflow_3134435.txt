[site]: stackoverflow
[post_id]: 3134435
[parent_id]: 3134123
[tags]: 
This would be a lot easier if you just used the jQueryUI .draggable() . It doesn't require the elements to be positioned. If you're dead set on using this plugin, then you have the right idea. Let the elements flow into place and then calculate their position and set position: absolute and whatever the left and top end up being at runtime. Set the .wall to be position: relative . Then: var tPos; $('.toy').each(function(index) { tPos = $(this).position(); $(this).css({ left: tPos.left, top: tPos.top }); }; $('.toy').css({ position: absolute }); The height of the .wall and the width of each .toy collapse when the toys are absolutely positioned but you can just add a few more lines to get/set their width and height in the above .each loops. This obviously doesn't work if new toys can be added dynamically without a page reload as you suggest. To handle that you could switch them back to position: relative , add the new one, get the position of the new one in the flow, then set the position and switch back to position: absolute . Any elements that had been dragged out of place would be gaps in the flow, but I don't see any easy way around that.
