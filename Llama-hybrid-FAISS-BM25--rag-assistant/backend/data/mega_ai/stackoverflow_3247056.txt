[site]: stackoverflow
[post_id]: 3247056
[parent_id]: 3245515
[tags]: 
Itay's, solution is elegant and does not require much mat. You could however go for a more naive(CPU heavy) implementation: make your line into a array of points and then measure the distance from each point to the center of your circle: Method to transform two points into a array of coordinates(I have only tested this method briefly) public static Point[] generatePath(int startX, int startY, int endX, int endY) { _deltaX = Math.Abs(endX - startX); _deltaY = Math.Abs(endY - startY); if ( _deltaX >=_deltaY ) { //x is independent variable _numpixels = _deltaX + 1; _d = (2 * _deltaY) - _deltaY; _dinc1 = _deltaY endX ) { _xinc1 = -_xinc1; _xinc2 = -_xinc2; } if ( startY > endY ) { _yinc1 = -_yinc1; _yinc2 = -_yinc2; } _x = startX; _y = startY; Point[] returnPath = new Point[_numpixels]; for ( int i = 0;i Method to calculate distance from center of your circle to every point in your line: public static double GetLenghtBetweenPoints(Point Source, Point Distination) { return Math.Sqrt((Math.Pow((Source.X-Distination.X), 2) + Math.Pow((Source.Y-Distination.Y), 2))); }
