[site]: stackoverflow
[post_id]: 3333166
[parent_id]: 3316043
[tags]: 
I don't know but maybe this is what you are looking for. When you save the image you provide a css_selector and gets a image file in return. This is the view: and this is the model: class Picture :css_selector_provided? private # Check if the attribute is provided def css_selector_provided? !self.css_selector.blank? end # This method opens the page where the photo is # and grab the url to the image using a css-selector def fetch_photo_url agent = Mechanize::new page = agent.get(HERE_IS_THE_URL_TO_THE_PAGE_YOU_WANNA_SCRAPE) doc = Nokogiri::HTML(page.body) image_element = doc.at_css(self.css_selector) # Get the image on that page using the css selector image_url = image_element[:src] end def download_remote_photo self.image = do_download_remote_photo(fetch_photo_url) end def do_download_remote_photo(photo_url) io = open(URI.parse(URI.escape(photo_url))) def io.original_filename; base_uri.path.split('/').last; end io.original_filename.blank? ? nil : io rescue # catch url errors with validations instead of exceptions (Errno::ENOENT, OpenURI::HTTPError, etc...) end end Haven't tested the code but I hope you get the idea!
