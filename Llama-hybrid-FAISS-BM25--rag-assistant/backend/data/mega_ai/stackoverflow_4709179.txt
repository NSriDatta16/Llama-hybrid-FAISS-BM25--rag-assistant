[site]: stackoverflow
[post_id]: 4709179
[parent_id]: 
[tags]: 
How to get ARM code unto an actual device, JTAG? Possible to make Impromptu JTAG with Arduino?

Ok, I am a little confused about programming for ARM processors. Barrage of questions time: How does one get the compiled binary into an ARM processor? Is JTAG the normal method (I think that is what my research has indicated ...)? Is it the only method? If it is a valid method, exactly how do you use it in that fashion? If it isn't then what is/how do I do it? Furthermore, can something such as an Arduino be used to create an impromptu JTAG interface (if that is indeed what is needed to program ARM devices). . .? I've already set up QEMU for testing the code and such, but I'm not sure how to proceed to actually get my code into the physical realm. I'm basically asking: is JTAG the device programmer of the ARM world? Can I spoof one with an Arduino (Arduino wiggler Clone o.o)? If JTAG isn't, what is, and can I spoof it? Oh... And I might need a better explanation of exactly how JTAG works. Now for a little background information: I have an old Palm Device ( LifeDrive ), that has the XScale PXA270 processor I believe. There doesn't seem to be any active community development going on for it anymore, and I have little use for it anymore, so I kind of just want to play/mess around with it. Basically, this could be a good way to get to play around with what is essentially a mass of sensors, and other miscellaneous inputs and outputs, and also get used to ARM Assembly. Feel free to tell me if I am taking the wrong approach, but at least provide alternatives (though I am pretty set on messing with the LifeDrive specifically, if I just wanted to play around with embedded programming, I would do so on my Arduino instead.) Pretty much right now everything is a shot in the dark. I'm a bit tired of rolling around going nowhere, thus I posted this.
