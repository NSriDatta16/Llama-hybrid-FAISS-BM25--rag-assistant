[site]: stackoverflow
[post_id]: 421666
[parent_id]: 421630
[tags]: 
Your example code has the line: char* filename; This is an uninitialised pointer - it points nowhere, and isn't backed by any storage. You need to allocate some memory for it, e.g. using malloc() (and remember to free() it when you're done), or, in this case, you can probably simply declare it as a character array, e.g. char filename[SOME_BUFFER_SIZE]; Declaring an array on the stack has the advantage that you don't need to explicitly free it up when you're done with it. Fundamentally, arrays in C are just syntactic sugar that hide pointers, so you can (usually) treat a char[] as a char* .
