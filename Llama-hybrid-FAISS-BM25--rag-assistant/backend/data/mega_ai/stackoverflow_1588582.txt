[site]: stackoverflow
[post_id]: 1588582
[parent_id]: 1588368
[tags]: 
I think you are trying to include the recursive path in the exception details so as to aid debugging. What about trying this. public void Recursive(int x) { try { _Recursive(x) } catch { throw new RecursionException(path.ToString(), ex); clear path, we know we are at the top at this point } } private void _Recursive(int x) { // maintain the recursion path information path.Push(x); _Recursive(x + 6); //maintain the recursion path information //note this is not in a catch so will not be called if there is an exception path.Pop() } If you are using threading etc, you will may have to look at storing path in thread local storage. If you don’t wish to force your caller to deal with RecursionException, you could make the “path” public so the caller can access it. (As par Eric Lippert later answer) Or you could log the path to your error logging system when you catch the exception and then just re-throw the exception. public void Recursive(int x) { try { _Recursive(x) } catch { //Log the path to your loggin sysem of choose //Maybe log the exception if you are not logging at the top // of your applicatoin //Clear path, we know we are at the top at this point } } This has the advantage that the caller does not need to know about the “path” at all. It all comes down to what your caller needs, somehow I think you are the caller for this code, so there is no point us trying to 2nd guess what is needed at this level of deal.
