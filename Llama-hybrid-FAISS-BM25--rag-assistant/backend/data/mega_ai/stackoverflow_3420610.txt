[site]: stackoverflow
[post_id]: 3420610
[parent_id]: 3314043
[tags]: 
You used Conway's game of Life as an example, and no language can solve that more elegantly or efficiently than APL. The reason is full array/matrix manipulation in very powerful single or multiple character operators. See: Whatever Happened to APL? and my story about my combinatorics assignment that compares APL with PL/I. If you're talking about "efficient" in terms of keystrokes to solve a problem, APL will be tough to beat. Your byte count of 145 for APL solving Conway's game is wrong. That is a very inefficient solution you were looking at. This is one solution : (source: catpad.net ) That's 68 bytes and beats the J solution. I think there are other APL solutions that are even better. Also see this video about it .
