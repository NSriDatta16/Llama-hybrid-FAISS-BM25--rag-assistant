[site]: stackoverflow
[post_id]: 4534099
[parent_id]: 4234010
[tags]: 
First off, it should work this way: SELECT * FROM `test` WHERE `name` COLLATE utf8_general_ci LIKE '%renee%'; Where the test table is: +-----+--------+ | id | name | +-----+--------+ | 1 | Renée | | 2 | Renêe | | 3 | Renee | +-----+--------+ What is your MySQL version, and how do you try to match things? One of the other possible solutions is transliteration . Related: PHP Transliteration Transliterating the input should not be a problem, but transliterating the values from the permanent storage (e.g. db) real-time during the search may not be feasible. So you can add three more fields like: username_slug , firstname_slug and lastname_slug . When inserting/modifying a record, set the slug values appropriately. And when searching, search the transliterated input against that slug fields. +------+----------+---------------+----------+---------------+ ... | id | username | username_slug | lastname | lastname_slug | ... +------+----------+---------------+----------+---------------+ ... | 1 | Renée | renee | La Niña | la-nina | ... | 2 | Renêe | renee | ... | ... | ... | 3 | Renee | renee | ... | ... | ... +------+----------+---------------+----------+---------------+ ... A search for "renee" or "renèe" would match all of the records. As a side effect, you may be able to use that fields for generating SEF (search engine friendly) links, hence they are named , ..._slug , e.g. example.com/users/renee. Of course, in that case you should check for the uniqueness of the slug field.
