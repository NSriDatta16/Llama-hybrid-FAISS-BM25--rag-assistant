[site]: stackoverflow
[post_id]: 807004
[parent_id]: 806861
[tags]: 
Much depends on your use case. For example: Is your dictionary very small (about twenty words)? In this case it probably is better to precompute all possible nearby mistaken words and use a table/hash lookup. What is your error model? Aspell has at least two (one for spelling errors caused by nearby letters on the keyboard, and the other for spelling errors caused by the way a word sounds). How dynamic is your dictionary? Can you afford to do a massive preparation in order to get an efficient retrieval? You may need a "word equivalence" measure like Double Metaphone , in addition to edit distance. You can get some feel by reading Peter Norvig's great description of spelling correction . And, of course, whenever possible, steal code. Do not reinvent the wheel without a reason - a reason could be a very special domain, a special way your users make spelling mistakes, or just to learn how it's done.
