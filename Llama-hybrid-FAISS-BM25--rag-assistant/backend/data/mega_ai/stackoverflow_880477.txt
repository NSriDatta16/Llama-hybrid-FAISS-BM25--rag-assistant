[site]: stackoverflow
[post_id]: 880477
[parent_id]: 880461
[tags]: 
SOLID might help if a class is poorly designed, but it won't help answer a question like "Is object-oriented programming the best approach for this problem?" People have done a lot of very good work in programming for mathematics and science before object-oriented programming came into vogue. If your problem falls into those categories, perhaps object-oriented programming isn't for you. Objects are state and behavior together; they tend to map onto problem domain objects one-to-one. If that's not true for your problem, perhaps object-oriented programming isn't for you. If you don't know an object-oriented language well, perhaps object-oriented programming isn't for you. If your organization doesn't know and can't support object-oriented solutions, perhaps object-oriented programming isn't for you.
