[site]: stackoverflow
[post_id]: 4108713
[parent_id]: 4035999
[tags]: 
Twitter.com is supposedly using a Java backend, and Rails for their web interface. Here are some resources: http://www.radicalbehavior.com/5-question-interview-with-twitter-developer-alex-payne/ http://blog.adsdevshop.com/2008/05/02/twitter-is-not-abandoning-rails/ http://twitter.com/#!/ev/status/801530348 More specifically, they use Scala on the backend (which compiles to Java byte code): http://www.artima.com/scalazine/articles/twitter_on_scala.html I don't think there is anything wrong with this approach. However, you will be supporting two different platforms/VMs. I have seen this kind of situtation result in a sort of fracturing of expertise within an organization. And you end up paying to a lot to have two sets of expertise in house. If the problem of segmenting expertise concerns you, I would suggest running JRuby of Rails. It is very mature now - and runs better than Rails on Ruby 1.8.x.
