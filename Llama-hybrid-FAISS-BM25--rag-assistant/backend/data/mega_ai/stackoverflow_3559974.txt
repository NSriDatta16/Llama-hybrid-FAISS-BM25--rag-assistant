[site]: stackoverflow
[post_id]: 3559974
[parent_id]: 3559478
[tags]: 
This is such a seemingly simple question, yet it's almost impossible to answer. The reason is that what's "right" depends on a number of factors. 1. Performance In his answer Skilldrick recommends that you prefer what is readable over what performs best as a general rule: [R]eadability and maintainability should only be sacrificed for performance when it's absolutely necessary. I would counter this by saying that it is only true in a typical business application, where performance and functionality are two clearly distinguishable features. In certain high-performance software scenarios, this is not such an easy thing to say as performance and functionality may become inextricably linked -- that is, if how well your program accomplishes its task depends on how solidly it performs (this is the case at my current place of employment, a company that does algorithmic trading). So it's a judgment call on your part. The best advice is to profile whenever you have an inkling; and if it's appropriate to sacrifice readability for performance in your case, then you should do so. 2. Memory Usage 0xA3 suggests a fairly elegant approach providing a compromise of sorts: only calculate the value as needed, and then cache it. The downside to this approach, of course, is that it requires more memory to maintain. An int? requires essentially the same amount of memory as an int plus a bool (which, due to alignment issues, could actually mean 64 bits instead of just 40). If you have loads and loads of instances of this data class and memory is a scarce resource on the platform you're targeting, bloating your type with another 32 bits per instance might not be the smartest move. 3. Maintainability That said, I do agree in general with what others have said that, all else being equal, you're better off erring on the side of readability so that you can understand your code if and when you revisit it in the future. However, none of the various approaches to this problem is particularly complicated, either. The bottom line is that only you know your exact circumstances and thus you are in the best position to decide what to do here.
