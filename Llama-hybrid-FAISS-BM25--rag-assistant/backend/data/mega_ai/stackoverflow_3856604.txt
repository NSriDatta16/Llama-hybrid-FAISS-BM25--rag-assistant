[site]: stackoverflow
[post_id]: 3856604
[parent_id]: 3855654
[tags]: 
I'm adding this because often we're reading data from a file or data-stream where the range of lines we want are not all in memory at once. "Slurping" a file is discouraged if the data could exceed the available memory, something that easily happens in production corporate environments. This is how we'd grab lines between some boundary markers as the file is being scanned. It doesn't rely on regex, instead using Ruby's "flip-flop" .. operator: #!/usr/bin/ruby lines = [] DATA.each_line do |line| lines Output of this code would look like: {start_grab_entries} i want to grab the text that you see here in the middle {end_grab_entries} i want to grab the text that you see here in the middle
