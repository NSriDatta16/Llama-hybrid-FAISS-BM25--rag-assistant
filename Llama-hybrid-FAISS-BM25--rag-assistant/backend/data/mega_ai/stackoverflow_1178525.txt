[site]: stackoverflow
[post_id]: 1178525
[parent_id]: 1178479
[tags]: 
Statistical analysis of existing leads to music that is -- well -- average. There's rarely anything interesting because it tends to reproduce all the common features of whatever you analyzed. Music is multi-dimensional. You can, clearly, analyze any or all of the dimensions that interest you. Pitch, tempo, sequence of notes, harmonic progressions, volume changes, anything. Everything. Music is subtle and complex so there's always something more to analyze. AFAIK (my son is a composer) what's more interesting is to invent your own unique algorithm for generating music that's reasonably distinctive. Here's something my son specified. It generates a sequence of 48 musical events that the piece is built around. #!/usr/bin/env python """ there are 8, 3-note sets. each one can occur on 3 different beats. each pitch of the 3 note set can be in one of 3 octaves and it can either be a harmonic or a fingered note. """ import random noteSetChoices = [ "C-E-G", "C-F-A", "C-E-A", "D-F-A", "D-F-B", "D-G-B", "E-G-B", "F-A-C" ] beatChoices= [ "1 - - -", "- 2 - -", "- - - 4" ] octaveChoices= [ 1, 2, 3 ] techniqueChoices= [ 'Fingered', 'Harmonic' ] for n in range(48): note= random.choice(noteSetChoices) beat= random.choice(beatChoices) octave= random.choice( octaveChoices ) technique= random.choice( techniqueChoices ) print octave, note, technique, beat
