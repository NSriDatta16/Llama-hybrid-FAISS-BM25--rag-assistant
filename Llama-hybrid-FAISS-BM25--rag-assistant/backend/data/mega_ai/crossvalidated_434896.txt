[site]: crossvalidated
[post_id]: 434896
[parent_id]: 434883
[tags]: 
R has very good facilities for automatic time series forecasting, which I very much recommend. Here is what R does with your data, specifically an exponential smoothing model in state space form (ETS for "Error, Trend, Seasonality"): library(forecast) churn You get very reasonable point forecasts for the next 12 months, along with prediction intervals. You can also inspect the fitted model by typing model_ets . The title of the plot already tells you that you have an exponential smoothing model with multiplicative error, additive trend and additive seasonality. Makes sense to me. You could also allow ets() to automatically fit a Box-Cox transformation via ets(churn,lambda="auto") . However, the forecasts start looking weird once you forecast out 24 months (whether or not you use an automatic Box-Cox transformation) - they go below zero. So you may want to work on logged data here. It should in principle be possible to do so by using the parameters lambda=0,biasadj=TRUE in the call to ets() , but then ets() does not want to fit seasonality any more, and if you force seasonality by also specifying model="ZZA" , you still get strange forecasts (specifically, they are offset from the last observation, which I don't fully understand), so you may want to log the data first, then feed them to ets() . Note that you need a bias transformation (look under "mathematical transformations" here ) to get expectation forecasts. An alternative is to use auto.arima() , but that one gives warnings generated by the unit root test because you have a rather short time series. If you have fewer than two seasonal cycles, ARIMA is a bit dubious, so I would stick with the simpler ETS models. I very much recommend Forecasting: Principles and Practice by Hyndman & Athanasopoulos (2nd ed.), which is freely available online here . It uses R throughout.
