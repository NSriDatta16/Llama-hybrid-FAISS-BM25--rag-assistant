[site]: stackoverflow
[post_id]: 4793100
[parent_id]: 
[tags]: 
How to access a cell in a DataRowView based on the columns DataPropertyName?

I have a Windows Forms application with a DataSet . I've simply used the Data | Add New DataSource to add the Products table of the Northwind database to my DataSources and created a DataGridView showing the contents of the Products table. I just dragged the Products table from the Data Sources window to the form, so all the columns are created automatically. Now, I want the rows containing a product where the Discontinued column is true to be painted in a different color. I've created a CellPainting event handler for it, but I'm having trouble locating the value for the Discontinued column. Because the DataGridView is created automatically, the Columns in it have names like dataGridViewTextBoxColumn1 , which has a DataPropertyName of "ProductID". My question is: how can I find the value for Discontinued based on the DataPropertyName ? Or am I required to use the name of the column itself? (In which case I better give it a meaningful name) My code is: private void productsDataGridView_CellPainting(object sender, DataGridViewCellPaintingEventArgs e) { if (e.RowIndex >= 0) { var row = productsDataGridView.Rows[e.RowIndex]; if ((bool) (row.Cells[ nameOrIndexOfColumn ].Value)) { e.CellStyle.ForeColor = Color.DarkGray; } } } How can I access the Value of the Column with DataPropertyName "Discontinued"? Solution Based on Neil Barnwell's answer, this seems to be a way. private void productsDataGridView_CellPainting(object sender, DataGridViewCellPaintingEventArgs e) { if (e.RowIndex >= 0) { var productView = (DataRowView) productsDataGridView.Rows[e.RowIndex].DataBoundItem; var product = productView.Row as NorthwindDataSet.ProductsRow; if (product != null && product.Discontinued) { e.CellStyle.ForeColor = Color.DarkGray; } } } The big advantage of this is that the Discontinued value doesn't have to be an actual column on the DataGridView.
