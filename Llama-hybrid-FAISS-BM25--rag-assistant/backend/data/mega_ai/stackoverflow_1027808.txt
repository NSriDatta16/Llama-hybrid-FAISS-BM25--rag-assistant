[site]: stackoverflow
[post_id]: 1027808
[parent_id]: 1023860
[tags]: 
This answer based on my good understanding of low-pass filters ("exponential moving average" is really just a single-pole lowpass filter), but my hazy understanding of what you're looking for. I think the following is what you want: First, you can simplify your equation a little bit (looks more complicated but it's easier in code). I'm going to use "Y" for output and "X" for input (instead of S for output and Y for input, as you have done). Y n = αX + (1-α)Y n-1 → Y n = Y n-1 + α(X - Y n-1 ) which codes to: Y += alpha * (X-Y); Second, the value of α here is "equal" to 1-e -Δt/τ where Δt is the time between samples, and τ is the time constant of the low-pass filter. I say "equal" in quotes because this works well when Δt/τ is small compared to 1, and α = 1-e -Δt/τ ≈ Δt/τ. (But not too small: you'll run into quantizing issues, and unless you resort to some exotic techniques you usually need an extra N bits of resolution in your state variable S, where N = -log 2 (α). ) For larger values of Δt/τ the filtering effect starts to disappear, until you get to the point where α is close to 1 and you're basically just assigning the input to the output. This should work properly with varying values of Δt (the variation of Δt is not very important as long as alpha is small, otherwise you will run into some rather weird Nyquist issues / aliasing / etc.), and if you are working on a processor where multiplication is cheaper than division, or fixed-point issues are important, precalculate ω = 1/τ, and consider trying to approximate the formula for α. If you really want to know how to derive the formula α = 1-e -Δt/τ then consider its differential equation source: Y + τ dY/dt = X which, when X is a unit step function, has the solution Y = 1 - e -t/τ . For small values of Δt, the derivative can be approximated by ΔY/Δt, yielding Y + τ ΔY/Δt = X ΔY/Δt = (X-Y)/τ ΔY = (X-Y)(Δt/τ) = α(X-Y) and the "extrapolation" of α = 1-e -Δt/τ comes from trying to match up the behavior with the unit step function case.
