[site]: stackoverflow
[post_id]: 5521547
[parent_id]: 5396909
[tags]: 
Unfortunately this modified response is not as elegant as I'd like, but it should work. Basically, use another dummy control as a relay for the binding. Specifically, this scenario arises when you want to pull the first and last of a collection. You can't just use a converter to grab the first/last and the property all at once, because if you change a property on the first or last item, the converter won't pick up the change. So you have to do something that melds in with dependency properties - almost like some sort of a second order dependency property would be nice. Anyways, here's some code: using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Windows.Controls; using System.Windows; using System.Collections; namespace WpfApplication1 { public class CollectionHelper : Control { public static DependencyProperty CollectionProperty = DependencyProperty.Register( "Collection", typeof(IEnumerable), typeof(CollectionHelper), new FrameworkPropertyMetadata(OnCollectionChanged)); public IEnumerable Collection { get { return GetValue(CollectionProperty) as IEnumerable; } set { SetValue(CollectionProperty, value); } } private static void OnCollectionChanged(object rawSender, DependencyPropertyChangedEventArgs args) { CollectionHelper sender = (CollectionHelper)rawSender; IEnumerable value = args.NewValue as IEnumerable; if(value==null) { sender.First = null; sender.Last = null; return; } bool isFirstSet = false; object lastItemTemp = null; foreach (var item in value) { if (!isFirstSet) { sender.First = item; isFirstSet = true; } lastItemTemp = item; } if (!isFirstSet) sender.First = null; sender.Last = lastItemTemp; } public DependencyProperty FirstProperty = DependencyProperty.Register( "First", typeof(object), typeof(CollectionHelper)); public object First { get { return GetValue(FirstProperty); } set { SetValue(FirstProperty, value); } } public DependencyProperty LastProperty = DependencyProperty.Register( "Last", typeof(object), typeof(CollectionHelper)); public object Last { get { return GetValue(LastProperty); } set { SetValue(LastProperty, value); } } } } And an actual use case: So the idea here would be to grab the first and last item using the relay control and then bind to there margins.
