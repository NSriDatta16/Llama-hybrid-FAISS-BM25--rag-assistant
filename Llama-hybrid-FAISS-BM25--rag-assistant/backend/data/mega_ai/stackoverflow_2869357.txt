[site]: stackoverflow
[post_id]: 2869357
[parent_id]: 
[tags]: 
Rewriting simple C# nested class

What would be an elegant way to implement the functionality of this nested class in F#? private class Aliaser { private int _count; internal Aliaser() { } internal string GetNextAlias() { return "t" + (_count++).ToString(); } } This was my first attempt, but it feels like there should be a sexy one-liner for this: let aliases = (Seq.initInfinite (sprintf "t%d")).GetEnumerator() let getNextAlias() = aliases.MoveNext() |> ignore aliases.Current
