[site]: stackoverflow
[post_id]: 4280754
[parent_id]: 4276858
[tags]: 
Yes, you're doing this right. While Magento has a class hierarchy for automatically creating form widgets, they suffer from the same "problem" that all tightly bound OO UI components do: Great if you want to do exactly what's done elsewhere in the app. time consuming if you want/need to heavily customize the functionality. It's worth learning how they work, but there's no reason you can't use Magento like you would a simpler PHP MVC system. It's worth learning how every system in Magento works, but jumping into the grid whole-hog may just leave you more confused than when you started. Moving to your specific question, every Block that inherits from Mage_Core_Block_Template has a " setTemplate " method. This method if used to tell Magento which phtml template you want a block to use. So, in your Block's constructor, something like class Optimise_Twits_Block_HelloWorld extends Mage_Core_Block_Template { protected function __construct() { $this->setTemplate('path/to/my/template.phtml'); } } You'll also notice we've removed the _toHtml method. The _toHtml in the base class ( Mage_Core_Block_Template ), is what loads your template. So if you override it, your block will no longer load and render a template. The template path starts including from your theme's base template folder. So, if you were using the modern theme /app/design/frontend/default/modern/template You'd put your template at /app/design/frontend/default/modern/template/path/to/my/template.phtml (this is slightly simplified, but again, getting too tangled up into how the theming paths work might only get in the way at this point. Start tracing at Mage_Core_Block_Abstract::renderView for "the truth") That should be enough to get you started. If you run into further problems just ask another, specific, question here and someone should be able to help. Working your way through the Knowledge Base is a great way to learn more about how all this works, as well as articles that go beyond the knowledge base (disclaimer: I'm the author of both)
