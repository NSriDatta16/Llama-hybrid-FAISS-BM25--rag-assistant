[site]: stackoverflow
[post_id]: 4659672
[parent_id]: 4659201
[tags]: 
You don't need the re module at all if you parse strings by "split & strip", which is more efficient: for paragraph in string1.split('\n\n'): path = paragraph.split('\n', 1)[0].strip().rstrip(':') paragraph = paragraph.replace(': \n', ': ') # hack to have permissions in same line for line in paragraph.split('\n'): if 'Special Permissions: ' in line: permission = line.rsplit(':', 1)[-1].strip() print 'Path "%s" has special permission "%s"' % (path, permission) Replace the print statement with whatever fits your needs. EDIT: As pointed out in the comment, the previous solution doesn't work with the new input lines in the edited question, but here's how to fix it (still more efficiently than using regular expressions): for paragraph in string1.split('\n\n'): path = paragraph.split('\n', 1)[0].strip().rstrip(':') owner = None for line in paragraph.split('\n'): if owner is not None and ':' not in line: permission = line.rsplit(':', 1)[-1].strip() print 'Owner "%s" has special permission "%s" on path "%s"' % (owner, permission, path) else: owner = line.split(' Allowed:', 1)[0].strip() if line.endswith('Special Permissions: ') else None
