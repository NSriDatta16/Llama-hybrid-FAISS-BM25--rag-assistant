[site]: stackoverflow
[post_id]: 1721484
[parent_id]: 1703553
[tags]: 
Maybe an enumeration of INDEPENDENT cycles will help? I'd try the following. First, in order to find what vertexes participate in cycles, do a transitive closure. It's a O(V^3) algorithm. Remove all the other vertexes. Now, there exists a full independent cycle coverage of the remaining graph (this is the weak point of my idea, I can't prove that the cycles will be independent) The solution for it is - "maximal pair matching in bipartitive graph" algorithm. 4.1. Turn each vertex v in your graph (G) into 2 (v1 and v2), place each in different parts of bipartitive graph (G2). 4.2. For each edge e(v,u) in G, add an edge from 1st part of G2 to 2nd - e(v1,u2). 4.3. Find a maximal pair matching in G2. It's a subset of G2 edges. 5 That subset corresponds to a maximal (full) set of independent loops in G.
