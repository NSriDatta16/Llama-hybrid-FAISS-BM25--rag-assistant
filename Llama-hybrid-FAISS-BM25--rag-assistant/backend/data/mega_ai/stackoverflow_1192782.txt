[site]: stackoverflow
[post_id]: 1192782
[parent_id]: 1182320
[tags]: 
There are a few different possibilities. Create a New Entity One possible solution is to create a new entity and map it to the same table, but only map the columns that you want (id and name). This is quite flexible and lets you use that entity as any other entity. The problem is that you introduce some duplication. Using HQL Another solution is to use projections. With HQL you can use the select clause to specify which columns to retrieve. If you want a proper entity instance as the result from the query and not an array of objects, you can create a custom constructor for your class and use that in the HQL query. session.CreateQuery("select new Foo(f.Id, f.Name) from Foo f").List (); Using the Criteria API If you want to use the Criteria API instead of HQL, you can use the SetProjection method. If you want a proper entity from the query and not an array of objects, you can use the AliasToBean result transformer. session.CreateCriteria(typeof(Foo)) .SetProjection(Projections.ProjectionList() .Add(Projections.Property("Name"), "Name") .Add(Projections.Property("Id"), "Id")) .SetResultTransformer(Transformers.AliasToBean(typeof(Foo))) .List(); The criteria example code is borrowed from the following question, which might be of interest: NHibernate - Only retrieve specific columns when using Critera queries?
