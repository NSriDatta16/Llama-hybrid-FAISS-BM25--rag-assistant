[site]: stackoverflow
[post_id]: 4964823
[parent_id]: 4964683
[tags]: 
You could always derive from Dictionary (or IDictionary) to produce an ObservableDictionary: public class ObservableDictionary :IDictionary , IObservable { private Dictionary _data; //Implement IDictionary, using _data for storage and raising NotifyPropertyChanged } The biggest problem you'll likely encounter is that you won't be able to directly detect a change to a value; only adding and removing KVPs. To do that, change _data to a List , implement IObservable there as well, and attach a handler to every new element you create or receive that will respond to the KVP's NotifyPropertyChanged and raise your parent class's NotifyValueChanged.
