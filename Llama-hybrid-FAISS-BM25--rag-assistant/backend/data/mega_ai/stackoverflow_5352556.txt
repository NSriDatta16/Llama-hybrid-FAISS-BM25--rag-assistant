[site]: stackoverflow
[post_id]: 5352556
[parent_id]: 5351272
[tags]: 
There are three places where you can store data. At the application level, which makes the data accessible to all sessions. The session level, which makes the data available to all pages for that specific user. Or, the page level, which makes it available to the current page, between postbacks. See examples below: Storing at Application Level Sample Class to encapsulate storage: public static class ApplicationData { private static Dictionary _someData = new Dictionary (); public static Dictionary SomeData { get { return _someData; } } } Usage Sample (in Page Load event): This will increment the value across all sessions. To try it, open two browsers on your machine and it the same URL. Notice how the value is incremented for each user's request. // Application Data Usage if (ApplicationData.SomeData.ContainsKey("AppKey")) { ApplicationData.SomeData["AppKey"] = (int)ApplicationData.SomeData["AppKey"] + 1; } else { ApplicationData.SomeData["AppKey"] = 1; } Response.Write("App Data " + (int)ApplicationData.SomeData["AppKey"] + " "); Storing at Session Level: Sample Class to encapsulate storage: public class SessionData { private Dictionary _someData; private SessionData() { _someData = new Dictionary (); } public static Dictionary SomeData { get { SessionData sessionData = (SessionData)HttpContext.Current.Session["sessionData"]; if (sessionData == null) { sessionData = new SessionData(); HttpContext.Current.Session["sessionData"] = sessionData; } return sessionData._someData; } } } Usage Sample (in Page Load event): Value is incremented for the current user's session. It will not increment when another session is running on the server. // Session Data Usage. if (SessionData.SomeData.ContainsKey("SessionKey")) { SessionData.SomeData["SessionKey"] = (int)SessionData.SomeData["SessionKey"] + 1; } else { SessionData.SomeData["SessionKey"] = 1; } Response.Write("Session Data " + (int)SessionData.SomeData["SessionKey"] + " "); Page Level Storage Within the page: private Dictionary _someData; private Dictionary SomeData { get { if (_someData == null) { _someData = (Dictionary )ViewState["someData"]; if (_someData == null) { _someData = new Dictionary (); ViewState.Add("someData", _someData); } } return _someData; } } Sample Usage in Page Load handler if (!this.IsPostBack) { incrementPageState(); Response.Write("Page Data " + SomeData["myKey"] + " "); } private void incrementPageState() { // Page Data Usage if (SomeData.ContainsKey("myKey")) { SomeData["myKey"] = SomeData["myKey"] + 1; } else { SomeData["myKey"] = 1; } } on button click: protected void hello_Click(object sender, EventArgs e) { incrementPageState(); Response.Write("Page Data " + SomeData["myKey"] + " "); } Keep in mind, that the ViewState is not Deserialized on Page Load, however it will be deserialized in event handlers like Button.Click All code has been tested, if you want the full solution, let me know, I will email it to you.
