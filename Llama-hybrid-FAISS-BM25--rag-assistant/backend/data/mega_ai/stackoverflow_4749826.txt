[site]: stackoverflow
[post_id]: 4749826
[parent_id]: 
[tags]: 
Hibernate mapping with foreign key table

I'm trying to create a hbm.xml to map some persistent objects in java with hibernate. My Domain looks like this: A Property has a Folder which has root Folders . Property has a key to find the Folder and Folder has a key to find its root Folders . public class Property { private Folder folder; private Set rootFolders; } public class Folder { private String id; private String rootfolder; private String descriptor; } Now there is a Folder.hbm.xml (and Folder.java ), but I can't change it and I can't add a reference there (untouchable legacy). So I can't add the list of roots there. I want to add it in the Property directly though, so that Property has two fields, folder and rootFolders . I tried with join and set (see further down), but I can't get Hibernate to create the correct Query... So my question is: Is this possible with mapping (I don't want to use HQL) and how would that look like? EDIT : I figured out that a Folder has a list of Folders (and changed the description accordingly). The code I have as far is: I already mapped the Folder to the Property (and called it folder ). Folder has a column ROOTFOLDER which maps on DESCRIPTOR of a Folder (which is not a primary key though!). In addition I tried to do the necessary retrieval with SQL (just to make sure it's possible): from (select t.logical_id, t.id, t.tariffroot from (PROPERTY p inner join FOLDER f on p.FOLDER_ID = f.ID)) propertyFolders inner join FOLDER roots on propertyFolders.FOLDERROOT= roots.DESCRIPTOR
