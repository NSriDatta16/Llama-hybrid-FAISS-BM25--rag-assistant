[site]: stackoverflow
[post_id]: 2527610
[parent_id]: 2527581
[tags]: 
1) Which snippet A or B is better and why? They're really identical. The compiled code will be nearly identical, since a temporary object is pushed onto the stack, then used in the method call. 2) What are the advantages or disadvantages? The main advantages and disadvantages to the approach are really just readability. Your first example has the advantage of keeping a single "operation" per line of code, which, in many ways, is more maintainable. The second example removes the unnecessary variable declaration, which may be more maintainable. Personally, I feel that the number of parameters in your RegularUser constructor would probably push me, in this instance, towards your first option. I typically find that, when a line of code gets to be more than about half a screen width on an average monitor, it's easier to read and understand if it's split up. Splitting this up by introducing the temporary and calling Add separately makes this more clear. However, if you're just adding an integer or a class that's very small, I'd probably vote to skip the unnecessary variable. This is completely a personal preference, however - your milage may (and probably will) vary. 3) The example i wrote was C# but does the language (C#, Java etc) make a difference? No, for the most part. This is really language/implementation dependent, but most languages will have the same basic behavior and performance in both cases. It is possible (and highly likely) that some languages may treat this differently, but most mainstream languages will not.
