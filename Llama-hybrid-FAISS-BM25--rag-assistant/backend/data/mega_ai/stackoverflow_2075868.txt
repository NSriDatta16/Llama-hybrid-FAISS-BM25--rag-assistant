[site]: stackoverflow
[post_id]: 2075868
[parent_id]: 2075855
[tags]: 
In Ruby, strings are mutable. That is, a string value can actually be changed, not just replaced with another object. x will actually add the string y to x, while x + y will create a new String and return that. This can be tested simply in the ruby interpreter: irb(main):001:0> x = "hello" => "hello" irb(main):002:0> x "hellothere" irb(main):003:0> x => "hellothere" irb(main):004:0> x + "there" => "hellotherethere" irb(main):005:0> x => "hellothere" Notably, see that x + "there" returned "hellotherethere" but the value of x was unchanged. Be careful with mutable strings, they can come and bite you. Most other managed languages do not have mutable strings. Note also that many of the methods on String have both destructive and non-destructive versions: x.upcase will return a new string containing the upper-case version of x, while leaving x alone; x.upcase! will return the uppercased value -and- modify the object pointed to by x.
