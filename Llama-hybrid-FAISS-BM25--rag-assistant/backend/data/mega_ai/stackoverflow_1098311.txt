[site]: stackoverflow
[post_id]: 1098311
[parent_id]: 1097844
[tags]: 
is int for an ID (primarykey) still the obvious choice or does the uniqueidentifier takes it's crown? I personally prefer INT IDENTITY over GUIDs - especially for your clustered index. GUIDs are random in nature and thus lead to a lot of index fragmentation and therefore poor performance when used as a clustered index on SQL Server. INT doesn't have this trouble, plus it's only 4 bytes vs. 16 bytes, so if you have lots of rows, and lots of non-clustered indexes (the clustered key gets added to each and every entry in each and every non-clustered index), using a GUID will unnecessarily bloat your space requirements (on disk and also in your machine's RAM) Telephone numbers where the digits are separated by '.' (01.02.03.04.05) Email items that will be hyper-links I'd use string fields for all of these. VARCHAR is fine, as long as you don't need any "foreign" language support, e.g. it's okay for English and Western European languages, but fails on Eastern European and Asian languages (Cyrillic, Chinese etc.). NVARCHAR will handle all those extra pesky languages at a price - each character is stored in 2 bytes, e.g. a string of 100 chars will use 200 bytes of storage - ALWAYS. Hope this helps a bit ! Marc
