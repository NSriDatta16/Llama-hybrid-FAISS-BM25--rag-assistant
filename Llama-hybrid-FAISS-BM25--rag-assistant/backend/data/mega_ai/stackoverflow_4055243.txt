[site]: stackoverflow
[post_id]: 4055243
[parent_id]: 633200
[tags]: 
In general, OCaml does not support run-time identification of types. That said, there is a little type information embedded in the runtime representation to let the garbage collector work. To determine if something is a string, you can do: if Obj.tag (Obj.repr param) = Obj.string_tag then More information on OCaml's runtime representation is available in Interfacing C with Objective Caml . However, these kinds of checks generally run counter to the the kinds of programming OCaml encourages, and it is not clear how you would do anything useful with this particular check (you'll need to convert to a string, and are wreaking havoc on type safety). A far better solution is to use an algebraic data type or polymorphic variants to describe the valid parameter types and pattern-match over that. Type-safe downcasts could be useful but indeed are not supported by OCaml. You'll need to roll your own mechanism (or, better, design around it) if that is what you are looking for.
