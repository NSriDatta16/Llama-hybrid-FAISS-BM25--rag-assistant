[site]: stackoverflow
[post_id]: 1851999
[parent_id]: 1848694
[tags]: 
You can use a manifest to get the same default as for Array , which avoids the need to provide your own implicits. Borrowing the rest of the code again from David Winslow, class SparseVector[T](size: Int)(implicit manifest: Manifest[T]) { private val default = manifest.newArray(1)(0) private var storage = scala.collection.mutable.Map[Int, T]() def apply(i: Int) = storage.getOrElse(i, default) def update(i: Int, v: T) = storage.update(i, v) } Then just, val v = new SparseVector[Int](100) println( v(12) ) // prints '0' etc.
