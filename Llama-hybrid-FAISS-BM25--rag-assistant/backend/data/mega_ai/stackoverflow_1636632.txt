[site]: stackoverflow
[post_id]: 1636632
[parent_id]: 1636138
[tags]: 
ship early and ship often. I agree with cletus () on this. "Ship It!" is a quick read with some good advice on this subject. The big risk with working on a rewrite is that you spend a lot of time on it and then the project either gets canceled before it's anywhere close to finished, or shipped with 100% of the functionality in a 50%-working state. If your rewrite is in the hands of some users then the project is less likely to be canceled, and the users will drive the functionality that they need next. It may turn out that the old application has a lot of functionality that isn't used much, so that you can get most of the value into the hands of the users in much less time than it takes to do a full rewrite. Once your code is in production you will feel happier and be even better motivated, and this will help you to work faster. Just for such simple tasks as filling a combobox I have to search the net and read a lot of stuff. Are you dissatisfied with your rate of progress (or "velocity" in Agile-speak)? Obviously if you could produce more every day then the task might seem less overwhelming. There is a big difference in productivity between the best programmers and the average (see Peopleware or the Mythical Man Month), so anything you can do to make yourself a better programmer could make a significant difference. In your case I wonder if some training would help? I'm not usually a big fan of classroom training, but if you don't have many experienced people around you to learn from, this would give you a jump start. If training isn't an option, do you have a local C# user group? If there are more experienced developers in your company, could you go to them for advice? Or just pick their brains at the water-cooler? One big problem with working on your own is that sometimes you get stuck on something very simple, that somebody else would spot straight away. Sometimes just explaining a problem to someone else helps you look at it in a way that helps you to solve it. If you could work with someone else for even a short time every day, this might help your productivity. Do you have (and use) all of the tools you need? The absolute minimum is: a. A version control system. b. A bug tracking database. c. A good development environment e.g. Visual Studio d. A better development environment than Visual Studio! e.g. Resharper. See link text for a better list. Good luck!
