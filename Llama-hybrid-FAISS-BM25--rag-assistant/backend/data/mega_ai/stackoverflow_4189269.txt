[site]: stackoverflow
[post_id]: 4189269
[parent_id]: 4188594
[tags]: 
about 80% of the time was spend in the jpanel's paint method Since the vast majority of your processing is single-threaded, that means at least one CPU core is being almost entirely wasted on modern machines. Most computers have at least dual-cores these days, if not more. There are a couple ways for you to take advantage of this: If 80% of your time is spent in one method, make sure that the remaining 20% doesn't have to wait for the painting to complete. Compute the next frame in advance while waiting for the last one to finish drawing. Your paint method can also be split up into multiple threads. It's not safe to share the same Graphics object between multiple threads, but you can have different threads rendering to different images then composite them together at the end. For example, have one thread take the first half of the particles and render directly to the backbuffer. A second thread takes the remaining particles and renders them to an image. Once they both complete, blit the image to your backbuffer, combining the two images. As a bonus note... If you really want performance, consider JOGL. Look here for an example: http://download.java.net/media/jogl/jsr-231-2.x-demos-webstart/ParticleEngine.jnlp
