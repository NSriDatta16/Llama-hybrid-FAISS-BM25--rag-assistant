[site]: datascience
[post_id]: 115595
[parent_id]: 115540
[tags]: 
For the target variable I would probably choose the numerical representation from 0 to 3 and consider this problem a regression task: Main advantage: preserve the order over the levels. I think it's really important to represent the fact that the error between levels 0 and 1 is less important than an error between levels 0 and 3. As a result, the predicted value would be a real number between 0 and 3 (maybe even outside this range sometimes). Typically one can re-normalize this value (replace with closest integer). Note that it's still reasonable enough to consider this as multiclass classification problem. But imho the most difficult part will be the design of the NLP process, because to my knowledge this is not a standard task. Suggestions: Approach 1 A custom Named Entity Recognition would be trained only to detect the different target diseases. Note that if these are quite standard there can pretrained models. Then a different regression model would be trained for each specific disease. Maybe the input could be a short window around the target term, in order to make sure the model using the info related to this disease in case there are several. Approach 2 Two custom NER models, one for detecting the target diseases and another for detecting the clues related the level (e.g. 'no', 'a lot'). Then probably a simple ad-hoc program to match the right clue to the right disease, typically based on the distance between the two.
