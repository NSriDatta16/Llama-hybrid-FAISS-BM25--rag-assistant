[site]: stackoverflow
[post_id]: 863410
[parent_id]: 851973
[tags]: 
The great thing about F# is the powerful combination of programming paradigms it allows. You can write most of your program in the functional style - brief, elegant and free from side effects (common bugs). But when you encounter a problem you can't solve functionally, you can then enter a short section of imperative code to get past it. It's also very easy to mark sections of your code as asynchronous, and it will then run in parallell if you have multiple cores/processors. The solution will be much easier than a C# equivalent. After witnessing a demo by one of the creators of F#, I was left with the impression that they have managed to extract great features from both Python and Erlang. F# will probably be fronted as the .NET answer to these two classes of languages and could eventually achieve a comparable degree of mainstream adoption.
