[site]: stackoverflow
[post_id]: 4982604
[parent_id]: 
[tags]: 
Images not downloading on second load in WPF

I have a WPF application which has a UserControl called MyBook that, on Loaded will fire a background thread to get a list of Domain Objects each with a URL to an Azure Image hosted in blob storage. For each domain object I get back, I add a new instance of a custom control called LazyImageControl which will download the image from Azure in the background and render the image when its done. This works just fine, but when I add a second MyBook control to the scene the images dont load for some reason, I cannot figure out why this is. Here is the code for the LazyImageControl public LazyImageControl() { InitializeComponent(); DataContextChanged += ContextHasChanged; } private void ContextHasChanged(object sender, DependencyPropertyChangedEventArgs e) { // Start a thread to download the bitmap... _uiThreadDispatcher = Dispatcher.CurrentDispatcher; new Thread(WorkerThread).Start(DataContext); } private void WorkerThread(object arg) { var imageUrlString = arg as string; string url = imageUrlString; var uriSource = new Uri(url); BitmapImage bi; if (uriSource.IsFile) { bi = new BitmapImage(uriSource); bi.Freeze(); _uiThreadDispatcher.Invoke(DispatcherPriority.Send, new DispatcherOperationCallback(SetBitmap), bi); } else { bi = new BitmapImage(); // Start downloading the bitmap... bi.BeginInit(); bi.UriSource = uriSource; bi.UriCachePolicy = new RequestCachePolicy(RequestCacheLevel.Default); bi.DownloadCompleted += DownloadCompleted; bi.DownloadFailed += DownloadFailed; bi.EndInit(); } // Spin waiting for the bitmap to finish loading... Dispatcher.Run(); } private void DownloadFailed(object sender, ExceptionEventArgs e) { throw new NotImplementedException(); } private void DownloadCompleted(object sender, EventArgs e) { // The bitmap has been downloaded. Freeze the BitmapImage // instance so we can hand it back to the UI thread. var bi = (BitmapImage)sender; bi.Freeze(); // Hand the bitmap back to the UI thread. _uiThreadDispatcher.Invoke(DispatcherPriority.Send, new DispatcherOperationCallback(SetBitmap), bi); // Exit the loop we are spinning in... Dispatcher.CurrentDispatcher.InvokeShutdown(); } private object SetBitmap(object arg) { LazyImage.Source = (BitmapImage)arg; return null; } So the issue is, doing this after the first time the WorkerThread runs fine, but I never get a callback to the DownloadCompleted or DownloadFailed methods and I have no idea why... Any ideas?
