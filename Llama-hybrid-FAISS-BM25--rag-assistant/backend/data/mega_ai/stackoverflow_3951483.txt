[site]: stackoverflow
[post_id]: 3951483
[parent_id]: 3946590
[tags]: 
As Alan rightly points out this site isn't here to do anyone's work for them but if you are willing to help yourself then the community can provide clues. To that end here is a general method to learn what to do. Start with looking at the existing Manage Products, the URL shows the path begins with "/admin/catalog_product/index/". URLs use a route/controller/action format so we can deduce that the class responsible will be Mage_Adminhtml_Catalog_ProductController and the method is indexAction . ("admin" routes to "Adminhtml", "catalog_product" becomes the "Catalog" folder and "ProductController" file) The method indexAction contains calls to loadLayout() and renderLayout() which is a sure sign that a layout file is being used. Our next clue is in "app/design/adminhtml/default/layout/catalog.xml". The first section of catalog.xml is which luckily matches the path from before. In it's "content" it creates a block with type "adminhtml/catalog_product", this resolves to Mage_Adminhtml_Block_Catalog_Product . On inspection it has a _prepareLayout() method, as with all blocks it is called before the page is output. This method adds an "Add Product" button and a block from "adminhtml/catalog_product_grid". You can see from looking at the page that the grid is of the same form as all other grids in admin. The class Mage_Adminhtml_Block_Catalog_Product_Grid extends Mage_Adminhtml_Block_Widget_Grid which does all the hard work to make a grid. Only some small changes are needed to make it work. The significant methods here are _prepareCollection() and _prepareColumns() . There is also _prepareMassaction() which defines the actions drop-down box that show in the top right of grids. Nearly all admin pages work in the same way as this. To make your own you will need to; Register a controller for your module. Here is a guide on overloading controllers . Give your controller an action to render the layout. Create a layout file in the "app/design/adminhtml/default/layout" directory and register it in your "config.xml" so that it is respected. It must have a section that matches your route, controller and action. Add a block to display a grid widget. The example creates this programmatically but it can also be done in the layout file. Extend Mage_Adminhtml_Block_Widget_Grid to make your own block. Add a _prepareColumns() and a _prepareCollection() method which is where you will do the database access and filter the results as per your requirements. Another relevant guide can be found here . In fact, look through the Magento wiki and knowledgebase for more information. The above is not a complete set of instructions and there is still much to learn thereafter.
