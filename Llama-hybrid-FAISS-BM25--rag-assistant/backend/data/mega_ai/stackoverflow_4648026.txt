[site]: stackoverflow
[post_id]: 4648026
[parent_id]: 
[tags]: 
How can I use a FlexMock hash matcher to verify part of an array value?

I am trying to verify that my Rails code calls ActiveRecord's all method (all is syntactic sugar for find :all) like this: records = Record.all :limit => RECORD_LIMIT, :offset => record_offset, :select => 'id', :conditions => [ 'record_type = ? AND content_score >= ?', 'user', min_content_score ], :order => 'content_score DESC' The only part of this code that I care about in this instance is the :conditions param, and I only care about the SQL snippet, not the actual values of the bound variables. I can use a FlexMock hash matcher to assert that (at least) the :conditions param is present like so: mock.should_receive(:all).with FlexMock.hsh :conditions => [] However, that only matches calls where the value of the :conditions param is the empty array. What I really want is something like this: mock.should_receive(:all).with FlexMock.hsh [ 'record_type = ? AND content_score >= ?', Object, Object ] But tragically, as irb reveals, 'user' and Object are not equivalent: >> '' === Object Any good ideas? Are nested matchers possible?
