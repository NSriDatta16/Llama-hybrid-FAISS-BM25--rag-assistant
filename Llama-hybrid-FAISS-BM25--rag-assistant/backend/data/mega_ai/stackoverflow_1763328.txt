[site]: stackoverflow
[post_id]: 1763328
[parent_id]: 1763134
[tags]: 
You may have an easier time if you differentiate between data storage , access , and transmission . Storage requires strong reversible encryption; the data is not useful unless you can retrieve it. Access requires a user or process to authenticate itself before it is permitted to decrypt the data. Here's an example of a mechanism that would accomplish this: Store the data with a secret key that is never directly exposed to any user. Of course, you'll need to store that key somewhere, and you must be able to retrieve it. When each user chooses a password, use the password to encrypt a personal copy of the private key for that user. ( Note: even though you're encrypting each copy of the key, security issues may arise from maintaining multiple copies of the same information .) Do not store the user's password. Instead, hash it according to standard best practices (with salt, etc. ) and store the hash. When a user provides a password to log in, hash it and compare to your stored value. If they match, use the (plainitext) password to decrypt the key, which is then used to decrypt the actual data. Transmit the data through a secure connection, such as SSL. It's reasonable (perhaps required) to allow users to access (and modify) their own data, as long as you continue to follow best practices. Comments: An 8-digit password implies a key space of 10 8 ~ 2 27 = 27 bits, which by today's standards is fairly terrible. If you can't encourage longer (or alphanumeric) passwords, you may want to consider additional layers. One advantage to the multiple-layer strategy (user provides a password that is used to encrypt the "actual" key) is that you can change the encryption key transparently to the user, thereby satisfying any key-rotation requirements.. The standard admonition whenever you're designing a security solution is to remember that DIY security, even when following standards, is risky at best. You're almost always better off using an off-the-shelf package by a reputable vendor, or at least having a trained, certified security professional audit both your strategy and your implementation. Good luck!
