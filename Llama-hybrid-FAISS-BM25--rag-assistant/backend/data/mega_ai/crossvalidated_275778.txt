[site]: crossvalidated
[post_id]: 275778
[parent_id]: 
[tags]: 
Computing $\text{pseudo} ~R^2$ and $R^2_{adj}$ of a cforest model

I would like to know how we can retrieve (or compute) $R^2$ when the function cforest() from the package party is used. The function randomForest() from the package of the same name returns a coefficient of determination, while cforest() does not. I read here Manually calculated $R^2$ doesn't match up with randomForest() $R^2$ for testing new data that $R^2$ is computed using the following formula in the package randomForest() : R2 However, when applying this formula after having run a random forest on my data, I get a totally different result. When I used randomForest() , I got 83.33% of explained variation, whereas using the formula above after cforest() I got a bit more than 43%. I wonder if the formula suggested above can be applied when cforest() is used and if there wouldn't be an easier way to retrieve a $R^2$ (or even an $R^2_{adj}$ ) in this particular case. I thank you in advance for your help and your explanations. CBechet. EDIT: after much reading, I tried the following: model When I use the function randomForest, I get this: model What am I doing wrong when using cforest? If I provide a reproducible example, I get the following results: #### Minimal reproducible example #### ### Loading the dataset 'airquality' ### > data("airquality") ### Creating a first random forest, using randomForest() from the package 'randomForest' ### > set.seed(131) # to get the same result each time the random forest is created > ozone.rf.1 print(ozone.rf.1) Call: randomForest(formula = Ozone ~ ., data = airquality, mtry = 3, importance = TRUE, na.action = na.omit) Type of random forest: regression Number of trees: 500 No. of variables tried at each split: 3 Mean of squared residuals: 303.8304 % Var explained: 72.31 ## MSE = 303.8304 ## pseudo-R^2 = 0.7231 ### Creating a second random forest, using cforest() from the package 'party' ### > set.seed(131) # to get the same result each time the random forest is created > ozone.rf.2 oob.pred airquality.2 residual $Ozone-oob.pred > mse Ozone) > pseudo.R2 $Ozone) > adj.R2 Ozone)-1)/(length(airquality.2$Ozone)-5-1)) # 0.7042, so 70.42% of explained variance ## MSE = 312.672 ## pseudo-R^2 = 0.7176 I think that the difference between the two $R^2$ here is due to the differences in the computation algorithm of cforest. However, when I use the same procedure for my own dataset (which I can't use as a reproducible example here for lack of space), I get a huge difference between the two $R^2$ (see my question above). I hope someone can help me out of this. I thank you all in advance!
