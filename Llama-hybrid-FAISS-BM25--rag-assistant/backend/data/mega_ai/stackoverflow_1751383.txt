[site]: stackoverflow
[post_id]: 1751383
[parent_id]: 1750937
[tags]: 
Another aspect: C++ templates can be an excellent tool to generate type-specific / optimized code variations. For example, C qsort requires a function call to the comparator, whereas std::sort can inline the functor passed. This can make a significant difference when compare and swap themselves are cheap. Note that you could generate "custom qsorts" optimized for various types with a barrage of defines or a code generator, or by hand - you could do these optimizations in C, too, but at much higher cost. (It's not a general weapon, templates help only in sepcific scenarios - usually a single algorithm applied to different data types or with differing small pieces of code injected.)
