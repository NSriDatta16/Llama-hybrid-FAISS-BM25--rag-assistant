[site]: stackoverflow
[post_id]: 4518832
[parent_id]: 4517980
[tags]: 
Usually in order to be able to declare something as a resource, it needs to be either stored in some kind of persistent storage or it should be easily reproducible. As you say a session is a pretty transient thing to try and model as a resource. It is also something that is usually tied to a single client. A resource however is normally shared, which is one reason it is assigned a public URI. All this to say you are trying to fit a round peg in a square hole. Having said that, if you really want to do it, and you want to scale-out then I can think of two possible ways. One is to initiate the session on the single "DB" server. This would allow you to scale out the web servers. Depending on where most of the work is done, this may or may not have any value. The other option is to take advantage of hypermedia to allow you to use the web server as the session initiator, but you need to make sure that the web server host name is part of the session resource URI. REST clients are not supposed to make any assumptions about URIs and should always read them from previous responses. If you use this to your advantage you can distribute sessions across a variety of web servers and the client just follows the URL to find the session, regardless of which web server it is on.
