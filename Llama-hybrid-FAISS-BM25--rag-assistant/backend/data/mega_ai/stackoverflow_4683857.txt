[site]: stackoverflow
[post_id]: 4683857
[parent_id]: 
[tags]: 
How do I maintain good code organisation without sacrificing performance?

I subscribe to the idea that variables shouldn't be initialized until right before you're going to use them. It makes it a lot easier to remember what a variable represents if it's by the code that will consume it, and it diminishes the chance that the variable will be misused between initialisation and proper use. The problems comes when the use of that variable is inside a loop or two. Then, the cost of intialisation gets multiplied and it may begin to impact performance. Within Perl (or generally, as appropriate), are their any neat little techniques that allow you to place the initialization of a variable within a loop, but such that it only gets initialized on the first pass? I'd thought of something like: my $variable = undef; while ($outer_loop) { while ($inner_loop) { $variable = $variable || 'initial_value' } } NB: The implication is that $variable is not reassigned within the loop. Now maybe it's me, but that seems a little inelegant. So, here's my question: is there a neater way to do this, or do I just need to get overmyself and compromise on code organisation, or suck up that 'inelegant' solution above?
