[site]: stackoverflow
[post_id]: 5692401
[parent_id]: 
[tags]: 
Codeigniter and nested tab markup

I need some guidance. Forgive me for a lengthy post but I need to explain myself. In my world, there is no one who understands what I am talking about so I have to go online for assistance. I am an architect doing my own website because work has dried up and I plan to use an improved website for a marketing campaign. I have done what I'd call a "lash-up" of this site which functions OK. But it's nowhere near ready to publish. I am trying to get it reorganised to do this and am moving the whole thing over to Codeigniter. My puzzle relates to views in Codeigniter. One of the main pages for potential clients is the projects page showing work done. It uses nested tabbing. As I have said, I've made it work OK in ordinary procedural PHP. Note that the projects are organised by category i.e housing, commercial etc In each category there are projects. Actually the tabs are dynamically produced with some assistance from jQuery. I mean by this that my homespun php creates markup based on what's returned from the database. The tab markup is the usual one of an unordered list whose li elements contain anchors whose hrefs reference divs arranged below. To achieve nesting, these divs then contain another ul with a further set of divs related to it. The top tabs correspond to a category e.g housing, commercial. The lower tabs correspond to projects within a category. I've made this work with four queries before. I think at least one may be redundant but I said it was a "lash-up". Query 1: "select distinct pcat, pcatid from pcategory inner join projects on pcatid = projcat order by pcat desc" From this query I get hold of the id used in the href. Query 2 : same as above but this time the id is used for div id. The next query is the source of my puzzlement because I don't see how to replicate it with CI. Query3 : $jobcat=$row2['pcatid']; $queryall3 = "select projid, projtit, projcost, projdate from projects where projcat= '$jobcat'"; This query uses the category id - $jobcat - returned by each iteration of the while clause used to expand the results from query 2. In other words, it runs inside the query 2 while loop so it can get the category id and then get all the projects related to it. The results of query 3 are used to form the lower tabs, and their href value is the id of the project. Query4: same as query 3 and used to populate the lower divs with data from the database relating to a specific project. So, finally my question: it seems to me that query 3 is difficult to manage using the Codeigniter set up. I can imagine an array of results looped over in a view. What I can't conceive is how to make a model call within that loop. Apologies for a long-winded question and any maladroit coding assumptions exhibited. Assistance would be a blessing. Tom
