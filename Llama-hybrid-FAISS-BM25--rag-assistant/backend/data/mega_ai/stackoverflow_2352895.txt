[site]: stackoverflow
[post_id]: 2352895
[parent_id]: 
[tags]: 
How to ensure a dynamically allocated array is private in openmp

I'm working in C with openMP using gcc on a linux machine. In an openmp parallel for loop, I can declare a statically allocated array as private. Consider the code fragment: int a[10]; #pragma omp parallel for shared(none) firstprivate(a) for(i=0;i And everything works as expected. But if instead I allocate a dynamically, int * a = (int *) malloc(10*sizeof(int)); #pragma omp parallel for shared(none) firstprivate(a) the values of a (at least a[1...9]) are not protected but act as if they are shared. This is understandable as nothing in the pragma command seems to tell omp how big the array a is that needs to be private. How can I pass this information to openmp? How do I declare the entire the dynamically allocated array as private?
