[site]: stackoverflow
[post_id]: 3747354
[parent_id]: 3747334
[tags]: 
If you want nothing to run: header('..'); exit; If you want to be reasonably sure the rest runs: header('..'); ignore_user_abort(true); Actually, 301's & 302's can contain a body according to the HTTP definition (the phrasing is "Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s)." ) and indeed if your browser supports it, you can just (temporarily) disable redirects and watch the actual page being rendered. Whether the browser will follow a redirect immediately after a header, or wait for it's entire request to finish, is up to the user-agent itself. It will wait for all headers though in my experience (cookie headers for instance), so whether to call it before or after the initial redirect header makes no difference, but make sure you sent it before any content / body. There are limits to the uses of ignore_session_abort() , the usual timeout of the webserver itself, and disconnects due to settings in the webserver itself, apply. If you have a process that takes a lot of time you should not keep a webserver process busy when it's not doing any HTTP communication. In that case, an asynchronous job system like gearman's might be more what you're looking for.
