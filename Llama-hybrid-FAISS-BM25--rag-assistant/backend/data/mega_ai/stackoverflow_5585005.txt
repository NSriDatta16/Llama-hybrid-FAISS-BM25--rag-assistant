[site]: stackoverflow
[post_id]: 5585005
[parent_id]: 5098348
[tags]: 
In case anyone is interested, here's how everything turned out. Once we realized the issue with setting foreign cookies, we decided we had a few options: Proxy - Tunnel through the portal to the remote application, using the portal as a proxy. This option is the most straightforward logically, but it has complications as mentioned above (i.e. you have to modify each request and each response - adding cookies and markup as necessary). This method turned out to be a pain point for us, not unrelated to our use of IBM WebSphere Portal 7. 3rd party SSO solution - Use CAS or Tivoli or some other enterprise solution. This is our ideal final solution, but it is still being researched to determine compatibility with our environment. Cookie Monster - Our interim solution, in order to get IBM portal out of the way as the middle man, was to deploy a small new remote application on the same server as our target app that simply accepts a cookie in JSON format and spits it back to the browser in a 302 redirect response. The cookie monster solution works as follows: when the user clicks on the link in the portal, our portlet will internally lookup the user's credentials, authenticate to the remote application, and return the authentication cookie/token. We convert that (as well as the destination URL) to JSON and return it to the browser. The browser then posts this JSON to the remote cookie application in a new window. The cookie is reconstituted and placed in the response along with the 302 and the target location. Voila, the page redirects to the application homepage and the user is logged in. Yay! Some notes for anyone using IBM WebSphere Portal: We handled the authentication via resource-serving portlet. Make sure the response from the resource-serving portlet is not cached (we made the cache expire immediately as we could not return no-cache) Make sure you ping the portal before making the ajax call as the session may be expired. I'm sure there are other, more elegant solutions, but this is working for us until we get CAS/Tivoli up and running.
