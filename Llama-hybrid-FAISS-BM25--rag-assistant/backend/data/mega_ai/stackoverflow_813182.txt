[site]: stackoverflow
[post_id]: 813182
[parent_id]: 812667
[tags]: 
I respectfully disagree with the other posters here. In fact I have implemented just such a scrabble board game , using almost entirely client side logic. In fact, there are many things that I would like to do to make it even more client-side intensive. GMail does a tremendous amount of work on the client side. However, there are some things that need to be managed on the serve side for practical reasons. For example the server needs to give the user some tiles and the user can then tell the server where he put those tiles and the server needs to verify those slots are empty because the server can never completely trust the client (the client can always be hijacked, if not through the script then by sniffing the HTTP traffic and modifying that). There are a lot of technologies, some like ADO.NET Data Services to expose CRUD operations in the DB through a RESTful interface, and CouchDB to store/manage data objects directly through JavaScript. Also, rich client side libraries like jQuery or Moo Tools are really pushing the client to do more and more. And if you think about it, flash is a lot about doing all the UI and interaction stuff on the client side. Some of the Adobe Flex applications are just awesome. I recently used one for Google analytics which renders the graphs, pivoting and all that on the client side. The server just serves the data. Even so Google Gears and Firefox (3.2 I believe?) now provide client side storage which makes disconnected application scenarios all that more interesting.
