[site]: stackoverflow
[post_id]: 1340167
[parent_id]: 1336815
[tags]: 
If you want something really simple you could take the average of the absolute differences between successive ranks as volatility. This has the added bonus of being recursive. Us this for initialisation: double sum=0; for (int i=1; i Then for updating the volatility if a new rank at time N+1 is available you introduce the parameter K where K determines the speed with which your volatility measurement adapts to changes in volatility. Higher K means slower adaption, so K can be though of as a "decay time" or somesuch: double K=14 //higher = slower change in volatility over time. double newvolatility; newvolatility = (oldvolatility * (K-1) + abs(rank[N+1] - rank[N]))/K; This is also known as a moving average (of the absolute differences in ranks in this case).
