[site]: stackoverflow
[post_id]: 375370
[parent_id]: 370340
[tags]: 
I hate this problem ... and I run into it all the time. For my most recent Django site we had a Newsletter which contained N Articles and, of course, order was important. I assigned the default order as ascending Article.id, but this failed if Articles were entered in something other than "correct" order. On the Newsletter change_form.html page I added a little bit of jQuery magic using the Interface plugin ( http://interface.eyecon.ro/ ). I show the titles of the associated Articles and the user can drag them around as they like. There is an onChange handler that recomputes the Article.id's in article_order field. Enjoy, Peter For app=content, model=Newsletter, the following is in templates/admin/content/newslettter/change_form.html {% extends 'admin/change_form.html' %} {% block form_top %}{% endblock %} {% block extrahead %}{{ block.super }} $(document).ready( function () { $('ol.articles').Sortable( { accept : 'sortableitem', helperclass : 'sorthelper', activeclass : 'sortableactive', hoverclass : 'sortablehover', opacity: 0.8, fx: 200, axis: 'vertically', opacity: 0.4, revert: true, trim: 'art_', onchange: function(list){ var arts = list[0].o[list[0].id]; var vals = new Array(); var a; for (a in arts) { vals[a] = arts[a].replace(/article./, ''); } $('#id_article_order').attr('value', vals.join(',')); } }); } ); {% endblock %} {% block after_related_objects %} {% if original.articles %} .sortableitem { cursor:move; width: 300px; list-style-type: none; } Associated Articles {% for art in original.articles %} {{art.title}} {% endfor %} {% endif %} {% endblock %}
