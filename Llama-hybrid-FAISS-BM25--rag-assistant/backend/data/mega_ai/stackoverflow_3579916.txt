[site]: stackoverflow
[post_id]: 3579916
[parent_id]: 3579656
[tags]: 
I don't think so - aligning on the stack is a bit more complicated,as you need to know where you are currently, allocate enough bytes to consume the 'current' page of memory and then allocate the data. On the stack, that's not a usual operation (ie you don't align anything on the stack). However, some compilers have pragmas that will align structs, MSVC has the ' __declspec align ' where you can specify the alignment of data members and the compiler will insert the appropriate number of bytes. It is possible to do a union where 1 member is allocated on the heap - the union will contain all your fields as usual, but the heap-allocated one will be just a pointer. Lastly, valloc is obsolete - you should use memalign or posix_memalign instead.
