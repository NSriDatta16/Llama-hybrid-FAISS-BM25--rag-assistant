[site]: stackoverflow
[post_id]: 1814318
[parent_id]: 1813362
[tags]: 
In the application you describe, I suspect that thread management is going to be a big issue. Throwing hardware at the problem may not be the best approach. In terms of partitioning, it depends on whether you can leverage things like caching and cache notifications. If every call to the app has to hit the DB and run a lengthy stored procedure, then you may want to have more DB machines and fewer front-end web servers. This is a big subject. In an attempt to provide a reasonably comprehensive answer to exactly this kind of question, I ended up writing a book about it: Ultra-Fast ASP.NET: Build Ultra-Fast and Ultra-Scalable web sites using ASP.NET and SQL Server .
