[site]: datascience
[post_id]: 108530
[parent_id]: 108529
[tags]: 
This is still unclear what and why you wanted to do something like what you describe, if you add more context I will try to help. You could solve the second point with column_transformer from sklearn.pipeline import. Pipeline from sklearn.compose import make_column_transformer, make_column_selector as selector numeric_transformer = Pipeline([("imputer", SimpleImputer(strategy= "median")), ("binning", KBinsDiscretizer(encode = "onehot-dense", strategy= "kmeans"))]) categorical_transformer = Pipeline([("Imputer", SimpleImputer(strategy= "constant", fill_value = "missing")), ("encoding", OneHotEncoder(handle_unknown = "ignore"))]) preprocessor = make_column_transformer((numeric_transformer, selector(dtype_exclude = "object")), (categorical_transformer, selector(dtype_include = "object"))) pipeline = Pipeline([("proprocessing",preprocessor), ("model",LogisticRegression())])
