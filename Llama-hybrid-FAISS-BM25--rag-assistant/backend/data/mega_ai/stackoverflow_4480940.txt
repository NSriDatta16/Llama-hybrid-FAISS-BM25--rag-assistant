[site]: stackoverflow
[post_id]: 4480940
[parent_id]: 4478906
[tags]: 
With respect to SELECT * FROM posts WHERE reply LIKE "%http://%" ORDER BY id DESC LIMIT 1 Due to the wild cards on both sides of the http:// , MySQL will can not use an index on reply to quickly find what you're looking for. Moreover, since you're asking for the one with the largest id , MySQL will have to pull all results to make sure that you have the one with the largest `id'. Depending how much of the data of the posts table is made up of the reply , it might be worthwhile to add a compound index on (id, reply) , and change the query to something like SELECT id FROM posts WHERE reply LIKE "%http://%" ORDER BY id DESC LIMIT 1 (which will have an index only execution), then join to the posts table or retrive the posts using the retrived id s. If the query has index only execution , and the index fits in memory and is already in memory (due to normal use or by intentionality warming it up), you could potentially speed up the query execution. Having said all that, if identical queries on two identical servers with identical data are giving different execution plans and execution times, it might be time to OPTIMIZE TABLE posts to refresh the index statistics and/or defragment the table. If you have recently been adding/removing indexes, things might have gotten astray. Moreover, if the the data is fragmented, when it's pulling rows in PRIMARY KEY order, it could be jumping all over the disk to retrieve the data. With respect to DELETE FROM posts WHERE threadId=X , it should be fine as long as there is an index on threadId .
