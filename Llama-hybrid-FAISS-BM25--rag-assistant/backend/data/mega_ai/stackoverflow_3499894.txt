[site]: stackoverflow
[post_id]: 3499894
[parent_id]: 
[tags]: 
Please help me to test my hypothesis with the neighbor elements in the matrix

I could not figure out the last part of my research so if anyone could help me I would be really appreciated for the help.. :) Say that my original matrix is, X = 0 0 0 0 0 0 0 12 9 0 0 4 9 15 0 0 11 19 0 0 0 2 4 8 0 0 4 5 8 0 0 0 0 0 0 and after finding the average of the non-zeros I will get something like below: new_x = 0 0 0 0 0 0 0 **9.0000** 9.0000 0 0 4.0000 9.0000 **9.0000** 0 0 **8.3333** **8.0000** 0 0 0 2.0000 4.0000 8.0000 0 0 4.0000 5.0000 8.0000 0 0 0 0 0 0 Note that any elements that are greater than 10 are the 'center' and we want to find the average of the non-zeros with the radius of say 1 m. where 1 meter = 1 element away from the center. ** ** means the center. For this part I have used the following (from gnovice ): X=[0 0 0 0 0; 0 0 12 9 0; 0 4 9 15 0; 0 11 19 0 0; 0 2 4 8 0; 0 4 5 8 0; 0 0 0 0 0]; kernel=[0 1 0; 1 0 1; 0 1 0]; sumx=conv2(X,kernel,'same'); nx=conv2(double(X>0),kernel,'same'); index=(X>10); new_x=X; new_x(index)=sumx(index)./max(nx(index),1); So my question is that I want to compare the neighbor elements with its center whether they are equal, lesser, or greater. If it is greater or equal then '1' or else '0'.Also whatever elements that are outside the radius can be ignored and replaced with '0'. For example, the 9 in the middle is within the radius of 12, 15, and 19 centers, so take the minimum center of those `min[9.000, 9.000, 8.000] = 8.000. In this case 4 will not take into the consideration as it is not called the 'center' as well as [ 8 4 5 and 8 ] in the last two rows. So I want something like below: Test_x = 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 I have put this first part in the forum before and I am really appreciated for every suggestion earlier. Please give me some ideas to start with. I have tried using a loop but it didnt seem to work very well. Any MATLAB function that can do the job for me.. Thank you so much for the help. Beginner at MATLAB I think I found the solution for this question by using Jonas techniques. Thank you for the help Jonas and gnovie:) X=[0 0 0 0 0; 0 0 12 9 0; 0 4 9 15 0; 0 11 19 0 0; 0 2 4 8 0; 0 4 5 8 0; 0 0 0 0 0]; kernel=[0 1 0; 1 0 1; 0 1 0]; sumx=conv2(X,kernel,'same'); nx=conv2(double(X>0),kernel,'same'); avg_x=X; avg_x(avg_x index=(avg_x>10); avg_x(index)=sumx(index)./max(nx(index),1); avg_x = 0 0 0 0 0 0 0 9.0000 0 0 0 0 0 9.0000 0 0 8.3333 8.0000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 tmp_x=avg_x; maxVal=max(avg_x(:))+1; tmp_x(tmp_x==0)=maxVal; tmp_x=imerode(tmp_x,kernel); Test_x=X>=tmp_x;
