[site]: stackoverflow
[post_id]: 1468655
[parent_id]: 1468513
[tags]: 
I can't think of any good reason for this, but in Â½ an hour you haven't got any other answers either, so I will go with a style complaint and some guesses and suspicions... Please take the & out of the address expression in the first printf() . While (&array) and (array) are the same expression with the same value in C, it seems somehow quite wrong to write it both ways within a few lines of each other. Someday just caring about the little things in a program will save you from a bad bug, or someone will change the type of the operand to something where an extra & makes a double-indirect pointer. Anyway, style matters. I can't prove it, but I'm sure it does. Make things really simple. Concentrate on just the failure case with the static storage class that passes an impossible assert. Make a new directory that has absolutely nothing in it, copy only the failure case program to that, and then, depending on the CLI, try and run it with ./whatever or .\whatever . Verify that nothing runs until you compile it. Make certain you are running the thing you think you are. Let us know exactly which gnu environment you are using on XP, there are several.
