[site]: stackoverflow
[post_id]: 1778145
[parent_id]: 1778126
[tags]: 
I edited my post, so you can check this again (if you want). I mixed up the names, sorry. You have to use a constructor in the Combatant class, so you can call your super-class-constructor. Your code has to look like; public class Combatant { public Combatant(String name) { this.name = name; } int hp = 100; int mp = 100; int attack = 15; int magic = 25; int defence = 15; int damage = 0; String name = "null"; public void attack(Combatant target){ damage = (int) (Math.random() * attack); System.out.println(name + " attacked the " + target.name + " for " + damage + " damage!"); target.hp -= damage; System.out.println(target.name + " has " + target.hp + " HP left!"); } public void magic(Combatant target){ damage = (int) (Math.random() * magic); System.out.println(name + " shot a fireball at " + target.name + " for " + damage + " damage!"); target.hp -= damage; System.out.println(target.name + " has " + target.hp + " HP left!"); } } public class Enemy extends Combatant{ public Enemy() { super("Dragon"); } } public class Player extends Combatant{ public Player() { super("Hero"); } } You can also add constructors in Combatant like: // A constructor to set the name and change the default magic. public Combatant(String name, int magic) { this.name = name; this.magic = magic; } and then you can write this in the Enemy class to make the dragon stronger. public class Enemy extends Combatant { public Enemy() { super("Dragon", 30); } } Hope this helps.
