[site]: crossvalidated
[post_id]: 332419
[parent_id]: 332349
[tags]: 
You're on the right track. You definitely want to vectorize your matrices so that you're in the classic supervised learning, regression paradigm of predicting a scalar value $y_i$ using a vector $\mathbf{x}_i$. $$ \mathbf{x}_i = \begin{bmatrix} m_{11} \\ \ldots \\ m_{1n} \\ m_{21} \\ \ldots \end{bmatrix} \quad \quad y_i = f(\mathbf{x}_i)$$ Now your data is a bunch of pairs $(y_i, \mathbf{x}_i)$, and you can apply totally off the shelf techniques. You'll almost certainly be better off though having a background in theory (eg. go through Andrew NG's online course etc...). What regression technique can best capture structure in $f$ will depend on what $f$ is. The simplest split is indeed to partition your data into a single $\mathcal{D}_{\mathrm{train}}$ and $\mathcal{D}_{\mathrm{test}}$. Many techniques involve an additional partition $\mathcal{D}_{\mathrm{validate}}$ for model selection. (Eg. train $k$ algorithms on $\mathcal{D}_{\mathrm{train}}$, find which of the set performs best in $\mathcal{D}_{\mathrm{validate}}$, then estimate final performance of that algorithm on $\mathcal{D}_{\mathrm{test}}$. Taking the next step, an extremely important and useful technique is cross-validation . If you're fitting a function, you probably want to randomly assign observations to training and test set. (Many tools will do this automatically btw.) And a point of caution, you want your training set independent of your test set (eg. in the medical context, you wouldn't want to assign different observations from the same patient to both training and test set). Anyway, the key thing is to vectorize your data then you can apply standard techniques you'll learn in any machine learning or regression course. This question in a sense is overly broad (and lacks context). It basically reduces to, "I have a regression problem, how should I approach it?" That's too broad to answer (and indeed impossible to say much on at all without context). I think you are on the right track though.
