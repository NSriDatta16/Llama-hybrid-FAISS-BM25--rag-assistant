[site]: stackoverflow
[post_id]: 1075019
[parent_id]: 1074964
[tags]: 
If its a case of UI defaults - the following questions come up. How 'dynamic' or generic is your schema.? Does the same schema support multiple front-ends - i.e. the same column in the Db-table supports 2 front-ends - each with multiple-defaults? Do multiple apps use your DB? In that case having the default defined in the DB could still help Its possible to query the Data-dictionary to get default info for each column. If a UI field does not have a corresponding db-column, then your current implementation will be justified in such cases One downside is more code is needed to handle and use this table. If it was a one-off application and this default 'intelligence' was not leveraged across multiple-apps - thats a consideration Its more like a 'frameworky' kind of thing to do - though I'd say its quite non-standard, and would be done on the web-layer.
