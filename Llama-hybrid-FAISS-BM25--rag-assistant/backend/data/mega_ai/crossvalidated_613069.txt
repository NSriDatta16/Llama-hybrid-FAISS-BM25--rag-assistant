[site]: crossvalidated
[post_id]: 613069
[parent_id]: 613063
[tags]: 
That's one way to do it. But if you include covariates in the outcome model or if you want to generalize the effect to a subset of your population (e.g., for the average treatment effect in the treated), you should use weighted g-computation instead. This is explained in the WeightIt vignette on estimating effects. Weighted g-computation involves fitting an outcome model with the IPW weights applied, then generating predicted values of the outcome under treatment and under control for each unit. Then, you computed the IPW-weighted mean of the predicted outcomes under treatment and under control, which are the marginal risks. Finally, you can take the ratio of the marginal risks and that is your IPW- and covariate-adjusted estimate of the marginal risk ratio. A benefit of this method is that you can use whatever model you want to fit the outcome model because the risk ratio does not correspond to a coefficient in the outcome model but rather is a function of the covariates, the model parameters, and the weights. This is important when including covariates in the outcome model because a Poisson model is rarely if ever the right model for a binary outcome. It is useful as a convenience because the coefficient on treatment is equal to the log risk ratio, but that is only true when no covariates are present in the model. In contrast, a logistic regression model is more likely to fit the data well and generate valid predictions. Below is how to do weighted g-computation manually. Getting standard errors is hard unless you bootstrap. library(WeightIt) data("lalonde", package = "cobalt") W.out $weights) Epred_0 weights) # Marginal risk ratio (RR [1] 0.6167727 Below is how you do it using marginaleffects as explained in the WeightIt vignette . # Using marginaleffects library(marginaleffects) avg_comparisons(fit, variables = "treat", comparison = "lnratioavg", transform = "exp", wts = "(weights)") #> #> Term Contrast Estimate Pr(>|z|) 2.5 % 97.5 % #> treat ln(mean(1) / mean(0)) 0.617 0.048 0.382 0.996 #> #> Columns: term, contrast, estimate, p.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo You should always use the marginaleffects strategy because it produces the right answer no matter what outcome model you use or whether you have covariates in the outcome model or not. When there are no covariates in the outcome model, it produces the same estimate as the exponentiated coefficient on treatment in a Poisson regression model.
