[site]: stackoverflow
[post_id]: 744941
[parent_id]: 744768
[tags]: 
Interestingly, I consider the level of advancement pretty much the opposite of your preferences. Therefore this response might not be directly useful, but I hope it's at least somewhat informative. First, any environment that encourages "cleverness" is suspect. If I see a lot of Boost, a lot of template metaprogramming, and especially any use of C++'s "functional" features, it's a big red warning sign. It means the developers have some idea of what correct programming is, but are constrained by either lack of imagination or politics to using a decrepit junk language such as C++. C is boring and tedious to work with, but "advanced" C++ goes out of its way to interfere with development. Second, check whether a particular technology or concept is treated as a buzzword. If the prospective employer uses XML, there's an easy check you can do -- do they use a real parser/serializer (either SAX or DOM is fine), or do they parse it with regexes and serialize it with raw character streams? If the latter, it shows they don't understand why XML is useful, and they're just using it to have another three-letter acronym on the project description. Third, figure out what language the developers wish they were using and why. Every good developer has a favorite obscure language -- it doesn't matter whether it's Python, Ruby, Smalltalk, Haskell, or Factor -- and a reason for preferring it. If everybody is content to work in C++, it's another warning sign that they've not got much curiosity about programming in general.
