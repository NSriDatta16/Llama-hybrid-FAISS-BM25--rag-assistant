[site]: stackoverflow
[post_id]: 5418472
[parent_id]: 
[tags]: 
Test for a pinch on UIImageView (not pinch and zoom - just test for pinch)

This isn't another one of "those" questions, don't worry. Basically I want to test for a pinch and then run an animation. Here is the code I currently have: // test for a pinch - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { NSSet *allTouches = [event allTouches]; if([allTouches count] == 2){ //there are two touches... UITouch *firstTouch = [[allTouches allObjects] objectAtIndex:0]; UITouch *secondTouch = [[allTouches allObjects] objectAtIndex:1]; CGPoint firstPoint = [firstTouch locationInView:self.superview]; CGPoint secondPoint = [secondTouch locationInView:self.superview]; int X1 = firstPoint.x; int Y1 = firstPoint.y; int X2 = secondPoint.x; int Y2 = secondPoint.y; // lets work out the distance: // sqrt( (x2-x1)^2 + (y2-y1)^2 ); preDistance = sqrtf( (float)pow((X2-X1),2) + (float)pow((Y2-Y1),2) ); } } - (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event { NSSet *allTouches = [event allTouches]; if([allTouches count] == 2){ //there are two touches... UITouch *firstTouch = [[allTouches allObjects] objectAtIndex:0]; UITouch *secondTouch = [[allTouches allObjects] objectAtIndex:1]; CGPoint firstPoint = [firstTouch locationInView:self.superview]; CGPoint secondPoint = [secondTouch locationInView:self.superview]; int X1 = firstPoint.x; int Y1 = firstPoint.y; int X2 = secondPoint.x; int Y2 = secondPoint.y; // lets work out the distance: // sqrt( (x2-x1)^2 + (y2-y1)^2 ); postDistance = sqrtf( (float)pow((X2-X1),2) + (float)pow((Y2-Y1),2) ); // lets test now // if the post distance is LESS than the pre distance then // there has been a pinch INWARDS if(preDistance > postDistance){ NSLog(@"Pinch INWARDS"); // so we need to move it back to its small frame if(CGRectEqualToRect(self.frame, largeFrame) && !CGRectIsEmpty(self.smallFrame)){ // we can go inwards [UIView beginAnimations:nil context:nil]; [UIView setAnimationDuration:0.5]; self.frame = smallFrame; [UIView commitAnimations]; } } else { NSLog(@"Pinch OUTWARDS"); // so we need to move it back to its small frame if(!CGRectEqualToRect(self.frame, largeFrame)){ // we can go outwards // set org frame smallFrame = self.frame; // so we can go back later [UIView beginAnimations:nil context:nil]; [UIView setAnimationDuration:0.5]; self.frame = largeFrame; [UIView commitAnimations]; } } } } All it does is measure the distance between the two touches if there is a multi touch, then it measures the distance again when the touches end. If the difference between the two is positive then it was an outwards pinch, and if it was negative it was an inwards pinch. Depending on the direction of the pinch the image view will scale bigger or smaller to and from set CGRects (this is why I don't want the "normal" pinch and zoom functionality). I just want it to be a gesture to scale an image up and down again. However, this isn't working very well... it doesn't always pick up pinches. I don't know if this is because the view its in is also detecting touches (only single pinches), but still... Anyway, I was wondering if anyone has a better way of detecting pinches? I've currently subclassed the UIImageView to create my ImageController class which has these touch methods in them. All I need to know is a) they are touching this image and b) which direction they've pinched in. Thanks
