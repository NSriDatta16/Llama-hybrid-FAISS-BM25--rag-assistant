[site]: stackoverflow
[post_id]: 595932
[parent_id]: 595884
[tags]: 
Month: range 1 - 12 => 4 bits Date: range 1 - 31 => 5 bits Hour: range 0 - 24 => 5 bits Minute: range 0 - 60 => 6 bits Total: 20 bits You can use a bitfield and use a compiler/platform specific pragma to keep it tight: typedef struct packed_time_t { unsigned int month : 4; unsigned int date : 5; unsigned int hour : 5; unsigned int minute : 6; } packed_time_t; But do you really need this? Wouldn't the standard time functions be enough? Bitfields vary depending on architecture, padding and so on ... not a portable construct.
