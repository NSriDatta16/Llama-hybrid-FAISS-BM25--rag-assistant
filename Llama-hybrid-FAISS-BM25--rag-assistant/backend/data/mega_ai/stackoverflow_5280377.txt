[site]: stackoverflow
[post_id]: 5280377
[parent_id]: 5277889
[tags]: 
I haven't used ActiveRecord in awhile, but from what I remember, it uses NHibernate underneath, which can handle this. The following is some code shamelessly ripped from another Stack Overflow question/answer : IList reults = Session.CreateQuery("select r.feedname as feedname, count(r.feedurl) as feedcount from rsssubscriptions r group by r.feedname") .SetResultTransformer(NHibernate.Transform.Transformers.AliasToBean(typeof(MyObj))) .List (); While there isn't a "MapFieldAs" function, there is a "SetResultTransformer" function. This function allows you to pass an object that describes what should be done once you get the results back from the database. In order to tell the query to take the data and map the columns onto a list of strongly-typed objects, you would have to define a transformer object that does just that. Luckily, NHibernate also has a generic transformer object that you can use (NHibernate.Transform.Transformers.AliasToBean). Here are some answers on stack overflow with examples: NHibernate: returning a strongly typed list having applied an aggregate function Using Unmapped Class with NHibernate Named Query
