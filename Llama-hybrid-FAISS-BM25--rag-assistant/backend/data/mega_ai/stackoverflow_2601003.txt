[site]: stackoverflow
[post_id]: 2601003
[parent_id]: 2600844
[tags]: 
Remember that $ in a regular expression is an anchor at the end of the string. Escape it to match a literal dollar-sign character. I'd write it this way: #! /usr/bin/perl use warnings; use strict; # for demo only *ARGV = *DATA; my $agent = qr/ ^ \s* \d+ \. # item number at the beginning of line \s+ (\S+) # agent name into $1 \s+ \( \s* \$ \s* # start of balance (-?\d+) # balance into $2 \s* \) # end of balance \s* $ # optional whitespace at the tail /x; while (<>) { if (my ($name,$balance) = /$agent/) { printf "%-20s : %d\n", $name, $balance; } } __DATA__ Most successful agents in the Emarket climate are (in order of success): 1. agent10896761 ($-8008) 2. flightsandroomsonly ($-10102) 3. agent10479475hv ($-10663) Most successful agents in the Emarket climate are (in order of success): 1. agent10896761 ($-7142) 2. agent10479475hv ($-8982) 3. flightsandroomsonly ($-9124) Output: agent10896761 : -8008 flightsandroomsonly : -10102 agent10479475hv : -10663 agent10896761 : -7142 agent10479475hv : -8982 flightsandroomsonly : -9124 Don't let the *ARGV = *DATA line scare you. That allows me to have the program and its input together in a single file without changing the processing logic. In your code, you'd remove that line and then run your program in the same way as before, e.g. , $ ./compareResults.pl input.txt
