[site]: stackoverflow
[post_id]: 509553
[parent_id]: 508994
[tags]: 
This happens because MicrosoftAjax.js does browser detection, and it's incorrectly detecting Chrome as Safari. In order to fix this, you need to make the following changes: Add a new browser type Sys.Browser = {}; Sys.Browser.InternetExplorer = {}; Sys.Browser.Firefox = {}; Sys.Browser.Safari = {}; Sys.Browser.Opera = {}; Sys.Browser.Chrome = {}; Update the if-then logic to search for Chrome else if (navigator.userAgent.indexOf(' Firefox/') > -1) { Sys.Browser.agent = Sys.Browser.Firefox; Sys.Browser.version = parseFloat(navigator.userAgent.match(/ Firefox\/(\d+\.\d+)/)[1]); Sys.Browser.name = 'Firefox'; Sys.Browser.hasDebuggerStatement = true; } else if (navigator.userAgent.indexOf(' Chrome/') > -1) { Sys.Browser.agent = Sys.Browser.Chrome; Sys.Browser.version = parseFloat(navigator.userAgent.match(/ Chrome\/(\d+\.\d+)/)[1]); Sys.Browser.name = 'Chrome'; Sys.Browser.hasDebuggerStatement = true; } else if (navigator.userAgent.indexOf(' AppleWebKit/') > -1) { Sys.Browser.agent = Sys.Browser.Safari; Sys.Browser.version = parseFloat(navigator.userAgent.match(/ AppleWebKit\/(\d+(\.\d+)?)/)[1]); Sys.Browser.name = 'Safari'; Be sure to put the Chrome check before Safari. If you need help replacing the Framework script with your custom version, read this . UPDATE: I created a test page and put the following controls on it: And wrote the following codebehind: protected override void OnInit(EventArgs e) { ddlTest.SelectedIndexChanged += new EventHandler(ddlTest_SelectedIndexChanged); base.OnInit(e); } void ddlTest_SelectedIndexChanged(object sender, EventArgs e) { litTest.Text = "Selected: " + ddlTest.SelectedItem.Text; } The Updatepanel works fine in Chrome, with no modification of the Ajax library. So, I think something else is causing this problem. You're going to need to isolate the cause of the problem through a process of elimination. Start with something simple like this example, and work up to what you have a piece at a time.
