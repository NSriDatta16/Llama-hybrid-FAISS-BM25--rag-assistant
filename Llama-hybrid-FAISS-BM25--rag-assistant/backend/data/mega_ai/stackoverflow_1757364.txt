[site]: stackoverflow
[post_id]: 1757364
[parent_id]: 1757215
[tags]: 
It is indeed very abstract question and "very complex" is not very specific. When I hear people talking about "complex" applications I associate it with a) Someone is using a complex architecture for a simple Problem. E.g. by using every design pattern and framework that sounded cool. b) Someone tried to squish tons of entirely different usecase into a historically grown application, creating and using proprietary and undocumented interfaces and couple everything as tightly together as possible. Unfortunately CAN build huge applications with a bad design strategy and that is what makes them complex. c) Legacy systems and Legacy System integration (ok see b) Magento may be a big application, but the underlying Framework is still the Zend Framework , mainly its MVC part. So reading the Zend_Framework documentation will help you a lot to understand Magentos architecture as well (I won't recommend it the other way around by trying to dig into the Zend Framework through the Magento source). I would recommend to actually start building a bigger application with one of the MVC frameworks yourself, because that is the best way to learn the architecture and its benefits and where the limits are.
