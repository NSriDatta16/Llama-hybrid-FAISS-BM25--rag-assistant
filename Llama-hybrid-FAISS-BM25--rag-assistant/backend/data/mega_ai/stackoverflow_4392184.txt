[site]: stackoverflow
[post_id]: 4392184
[parent_id]: 
[tags]: 
stretchableImageWithLeftCap: --> drawInRect -->very slow?

I have a problem with stretchable images in my tableView. Until Today I used static backgroundimages with 320px width. But as I want to support landscape too, I thought I switch to stretchable images instead of using a seperate png file. The first thing I noticed, was that the scrolling performance was really bad. I didn't change anything else. After that I started some time measuring, and removed everything from the drawing routine beside the stretchable image. The "drawContentView" method needs factor 10 of the time, compared to using a non-stretched image with the same size of as the backroundRect. With stretching the lags are easy to see. Without it scolls like a charm. static UIImage *greyBackground = nil; + (void)initialize { greyBackground = [[[UIImage imageNamed:@"back_gray.png"]stretchableImageWithLeftCapWidth:65.0 topCapHeight:0.0]retain]; } - (void)drawContentView:(CGRect)r { CGRect backgroundRect = contentView.bounds; [greyBackground drawInRect:backgroundRect]; } Is the performance of this really that bad, or is something wrong here? Tested on an iPhone 4, so should be powerful enough normally. :-/ I already thought about caching the correct sized image instead of the stretchable, and recreate it with the new size after screen rotation. But I know a lot app that use cell background images and different cell heights (e.g. Twitter a.k.a. Tweetie) and still scrolls amazing fast. So, should it normally work better, or is stretchableImageWithLeftCapWidth something I better avoid?
