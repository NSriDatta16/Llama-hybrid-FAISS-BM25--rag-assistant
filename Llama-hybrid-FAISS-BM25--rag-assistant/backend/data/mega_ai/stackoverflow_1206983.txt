[site]: stackoverflow
[post_id]: 1206983
[parent_id]: 1206871
[tags]: 
First advice: the "Gang of Four" Book - Design Patterns by Gamma et al. It explains MVC and the other necessary pattern: observer. Wikipedia might help as well. Basically: the model represents the data and it's possibilities to manipulate them. It's a class. The model must not know the view or the controller. It must have possibilities to notify others of changes without knowing them (observer pattern, signals in qt for example). The View displays the data and reacts on changes. It registers as observer for the model and knows the model in most cases (no need to decouple there). Several views may use the same model. Same for the controller. On most modern UIs, view and controller are tightly coupled, sometimes even the same object (e.g. a slider showing a value and at the same time changing it by moving it). For historical reasons: lern Smalltalk (for example Cincom Smalltalk).
