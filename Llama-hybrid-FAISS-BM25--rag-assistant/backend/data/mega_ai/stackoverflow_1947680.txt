[site]: stackoverflow
[post_id]: 1947680
[parent_id]: 1947146
[tags]: 
Food for thought: NVARCHAR(36) takes 72 bytes of storage + length info (variable length guids?). Uniqueidentifier takes 16 bytes. And you want to create an eventName nvarchar(36) based on... what? The trcProgram? That is nvarchar(150). SELECT coalesce(start.trcCorrGuid, end.trcCorrGuid), coalesce(start.trcProgram, end.trcProgram) as eventName, start.trcDateTime as eventStart, end.trcDateTime as eventEnd FROM ( SELECT * FROM trace WHERE trcCode IN ('0250', '0010', ...)) as start FULL JOIN ( SELECT * FROM trace WHERE trcCode IN ('0299', '9999', ...)) as end ON start.trcCorrGuid = end.trcCorrGuid AND start.trcProgram = end.trcProgram; This query uses a full join between start and end events to allow for any trace inaccuracies (correlations that miss either a stop either a start). The performance of the query will depend on what indexes are on [trace]. If all you have is a primary key of trcID then no query can do miracles, is better you write a cursor loop then. The query in my example would need an index on trcCorrGuid at least, and preferably one on (trcCorrGuid) include (trcCode, trcProgram)
