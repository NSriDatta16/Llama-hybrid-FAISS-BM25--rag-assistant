[site]: crossvalidated
[post_id]: 503491
[parent_id]: 503476
[tags]: 
To begin, I agree with @Ben's(+1) statements about avoiding explicit loops when possible. I have used for loops because they seem to be required for your exercise. Standardization is done outside the for loop, using means and standard deviations from the 10,000 averages a . Here is a simulation in R for the case $n = 25.$ set.seed(121) n = 25; p = 0.78 r = 10^4; a = numeric(r) for(i in 1:r) { a[i] = mean(rbinom(n, 1, .78)) } mean(a); sd(a) z = (a-mean(a))/sd(a) cp = seq(-5.75, 5.75, length=13) hdr = "n=25: Standardized Value of Sample Average" hist(z, prob=T, br=cp, ylim=c(0,.4), col="skyblue2", main=hdr) curve(dnorm(x), add=T, lwd=2) Note about making histograms: I have used standard graphics from the base of R to make the histogram and superimpose the standard normal density curve. Even though $r = 10,000$ means have been generated so that a has $r$ values, there are not many unique values in a --fifteen in my simulation (some relatively rare). If the tied values are not equitably proportioned among the histogram bins, you get some strange-looking histograms that make the values of z look far from normal. By choosing 13 bins I got a nice plot. (Roughly speaking, there are two z -values per bin, with some empty bins at the ends.) length(unique(a)) [1] 15 table(a) a 0.44 0.48 0.52 0.56 0.6 0.64 0.68 0.72 0.76 0.8 0.84 0.88 0.92 0.96 1 1 12 22 86 212 459 847 1381 1795 1914 1591 1037 495 123 25
