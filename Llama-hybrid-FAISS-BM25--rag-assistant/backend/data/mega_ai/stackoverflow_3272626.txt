[site]: stackoverflow
[post_id]: 3272626
[parent_id]: 3272267
[tags]: 
It really is that complicated. The problem is that a DataGridColumn isn't necessarily bound to a single value. A DataGridTemplateColumn , for example, just has a DataTemplate. The template may use multiple values from the row object or even no values at all, so there is no way to usefully return a single value for that cell. You can be guaranteed to have a single value if the column is a DataGridBoundColumn (such as a DataGridTextColumn ). As you said, you can get the value by executing the Binding. For example, you could do something like this (note that this won't work for a binding that uses ElementName or RelativeSource, but you probably won't use those in a DataGridBoundColumn): var cellInfo = dataGrid.CurrentCell; if (cellInfo != null) { var column = cellInfo.Column as DataGridBoundColumn; if (column != null) { var element = new FrameworkElement() { DataContext = cellInfo.Item }; BindingOperations.SetBinding(element, FrameworkElement.TagProperty, column.Binding); var cellValue = element.Tag; } } Note that you probably don't want to use the DisplayIndex property, since that can be changed if the user manually drags the columns to reorder them.
