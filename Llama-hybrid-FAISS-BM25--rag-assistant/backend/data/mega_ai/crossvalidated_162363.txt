[site]: crossvalidated
[post_id]: 162363
[parent_id]: 81986
[tags]: 
No. You are wrong. Just kidding. There are, however, many viable reasons why one would want to compute mean deviation rather than formal std, and in this way I am in agreement with the viewpoint of my engineering Brethren. Certainly if I am computing statistics to compare with a body of existing work which is expressing qualitative as well as quantitative conclusions, I woud stick with std. But, for example, assume I am trying to run some fast anomaly-detection algorithms on binary, machine-generated data. I'm not after academic comparisons as my final goal. But I am interested in the fundamental inference about the "spread" of a particular flow of data about its mean. I'm also interested in computing this iteratively, and as efficiently as possible. In digital electronic hardware, we play dirty tricks all the time -- we distill multiplications and divisions into left and right shifts, respectively, and for "computing" absolute values, we simply drop the sign bit (and compute one's or two's complement if necessary, both easy transforms). So, my choice is to compute it in the most knuckle-dragging way I can, and apply linear thresholds to my computations for fast anomaly detection over desired time windows.
