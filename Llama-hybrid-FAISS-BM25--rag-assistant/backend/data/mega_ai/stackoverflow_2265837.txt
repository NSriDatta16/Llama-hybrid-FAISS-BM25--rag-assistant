[site]: stackoverflow
[post_id]: 2265837
[parent_id]: 1649221
[tags]: 
Yes, I'm all for fixing the warnings, but what if you have an application that you want to have work on 10.4 and upwards, and in some places take advantage of methods/messages in the 10.6, but still work on 10.4? For example, NSDate.addTimeInterval has been deprecated, so for 10.6 it's better to use NSDate.dateByAddingTimeInterval. From what I can work out, no matter what I do, I'm going to end up with a warning on one or the other. If I add the code: if ([NSDate instancesRespondToSelector:@selector(dateByAddingTimeInterval)]) { timer = [[NSTimer alloc] initWithFireDate:[nowDate dateByAddingTimeInterval:10.0] interval:0.05 target:self selector:@selector(fade:) userInfo:nil repeats:YES]; } else { timer = [[NSTimer alloc] initWithFireDate:[nowDate addTimeInterval:10.0] interval:0.05 target:self selector:@selector(fade:) userInfo:nil repeats:YES]; } The I get a warning on the first half of the if statement if the sdk version is 10.5, and a warning on the second half if the sdk version is 10.6. If I know the code is OK, is there a pragma or similar construct that will allow me to tell the compiler, that the line in question is OK?
