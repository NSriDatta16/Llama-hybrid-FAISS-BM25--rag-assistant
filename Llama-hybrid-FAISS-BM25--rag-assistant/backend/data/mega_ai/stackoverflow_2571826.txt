[site]: stackoverflow
[post_id]: 2571826
[parent_id]: 2571781
[tags]: 
Okay, There's quite a bit in this code that needs fixing TBH. I'll start with your error first: You are declaring the variable array1 as an integer. In C# integers are primitive types. This means that they have no methods and no class members. So, when you call array1.saveInArray the compiler is basically saying "the type integer doesn't have any methods... I can't find an appropriate method to match your call". Instead of calling array1.saveInArray I think what you meant to call was arrayclass.saveInArray(x) . Notice the x in that call above. I'm passing a variable called x which is of type int into the function saveInArray() . This brings us to the second error. If saveInArray was a property, then you could just go arrayclass.saveInArray . However, it is a function which requires an argument... namely an integer. When you call arrayclass.saveInArray(someInteger) you are passing someInteger as an argument into a method. The method is then free to use this argument to do its calculations. That should fix your most basic errors and hopefully you can compile. Moving on to some other errors that will cause you problems at runtime: In the method saveInArray you are declaring an integer array called TopTenScores . You are declaring this fine... however later on when you are indexing into TopTenScores , you are using an index that is way out of range of TopTenScores . Here is your declaration of TopTenScores: int[] TopTenScores = {000,1000,2000,3000,4000,5000,6000,7000,8000,9000}; Notice that there are 10 numbers in this declaration. This means that the max index you can have is 9 . Why? Because arrays start indexing at 0 in C#. I think you might be thinking that this array is associative... however this is not the case. When you do TopTenScores[1000] you are saying "give me the value at index 1000". This value does not exists and you will get a runtime error. Instead, you would want to call TopTenScores[1] if you wanted to access the value 1000. Also, you are not overwriting the default value with the new top score, rather you are overwriting the new top score with the default value. I don't think this is intended. Instead, switch your calls from this: duration = TopTenScores[1000]; to this: TopTenScores[1] = duration; Edit : Lastly, as the commenter pointed out, using goto is bad practice and greatly discouraged. You will understand why later on as you start to understand program flow and organization better. For now, it is best to try and avoid the habit of using goto . goto maps to a low level system construct, which we should avoid when using a higher level language like C#. Your code can get confusing and error prone quickly with using goto . Anyways, feel free to ask more questions/comment etc if you have questions or you need to clarify something. Welcome to StackOverflow!
