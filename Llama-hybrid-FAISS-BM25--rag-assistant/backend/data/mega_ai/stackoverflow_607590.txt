[site]: stackoverflow
[post_id]: 607590
[parent_id]: 606882
[tags]: 
This will use the buffer-list's order for the history, which is what you want. (setq read-file-name-function 'my-read-file-name) (defun my-read-file-name (prompt dir default-filename mustmatch initial predicate) (let ((default-directory dir) (files (directory-files dir)) (history (delq nil (mapcar 'buffer-file-name (buffer-list))))) (completing-read prompt files predicate mustmatch initial 'history))) Hmmm... This changes the behavior of find-file's TAB completion because the TAB completes over the history (already opened files), and not over the files available in the directory you're specifying. Getting both to work at the same time is a bit trickier...
