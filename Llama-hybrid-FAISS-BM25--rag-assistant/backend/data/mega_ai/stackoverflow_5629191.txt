[site]: stackoverflow
[post_id]: 5629191
[parent_id]: 5628748
[tags]: 
I haven't really tested this yet but it should give you a good start. What you're asking is quite a bit of work to fully code out quickly. This is the page_model model it's essentially what you posted with a few minor tweaks. Its best to use id's rather than strings. You may also want to do some htmlspecialchars or mysql hijack validation prior to passing these to your DB. db->where('permalink', $permalink); $query = $this->db->get('pages', 1); #check to make sure row's were returned, if so continue, otherwise return false. if ($query->num_rows() > 0){ #set the results into an array and return $row, should return $row['content'], and $row['id']; #if you were editing more than one page this is where you would use a foreach($query) $row = $query->result_array(); return $row; }else{ return false; }// END if ($query->num_rows() > 0) }// END function getCMSPage() }// END Page_model class ?> This is the site controller and for sake of time i just echo'd your form_textarea straight from the edit function.. you shouldn't do this as it goes against MVC standards. You should create a view for that portion of the section. load->model('Page_model'); }//END function __construct(); /** * edit function, this function handles retrieval of the page from the URI, and the page's content for editing. * * This function uses $id which auto retrieves the page's ID from the uri. Your URL should look similiar to: * http://yourdomain.com/site/edit/3/yourunecessaryinformationhere * everything after the id is not really required but could help with SEO. * **/ function edit($id){ #retrieve the page's content in array form. $page = $this->Page_model->getCMSPage($id); echo form_textarea("content", $page['content']); } }//END Site Class Keep in mind i wrote this up in 5-10 minutes so its rushed and not very well commented or even tested but itll give you a great head start. This only gives you an example of how to retrieve information from the DB and echo it into a textarea. You would still need to create another function within your page_model to insert/update the information and another snippet of code in your controller to pass the edited content to the model. You can hit me up on AIM or twitter if you have more questions ThirdGenSup, twitter is @gorelative
