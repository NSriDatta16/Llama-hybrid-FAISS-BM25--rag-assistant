[site]: stackoverflow
[post_id]: 1556870
[parent_id]: 1554546
[tags]: 
You are correct, it is just syntactic sugar. It may be that there are no good uses of it depending on your definition of problematic code. Consider that you have a class Foo that is widely used in your application. Now this application has got quite large and further lets say it's a webapp that has become very popular. You identify that Foo is causing a bottleneck. Perhaps it is possible to add some caching to Foo to speed it up. Using properties will let you do that without changing any code or tests outside of Foo. Yes of course this is problematic code, but you just saved a lot of $$ fixing it quickly. What if Foo is in a library that you have hundreds or thousands of users for? Well you saved yourself having to tell them to do an expensive refactor when they upgrade to the newest version of Foo. The release notes have a lineitem about Foo instead of a paragraph porting guide. Experienced Python programmers don't expect much from a.b=2 other than a.b==2 , but they know even that may not be true. What happens inside the class is it's own business.
