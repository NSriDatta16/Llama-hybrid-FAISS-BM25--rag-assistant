[site]: crossvalidated
[post_id]: 538912
[parent_id]: 
[tags]: 
Calculate a normal average from uniform samples

Ok, this feels like it should be pretty basic, but maybe I'm missing the right terminology to google this. Suppose I have a (non-analytical) function $f(x)$ that I have evaluated for a large number of uniform values $x_i \in [-1, 1]$ . That is, I have uniform samples of points $(x_i, f_i=f(x_i))$ . Now I want to know what the expectation value $\bar{f}$ of $f$ would be if the values of $x$ were drawn from a Normal distribution of width $\sigma \ll 1$ . Ultimately, I want to do this for different values of $\sigma$ , so that I can generate a plot of $\bar{f}(\sigma)$ . My first intuition was to simply multiply the values $f_i$ with a weight $w_i$ where $w_i$ is the value of the probability density function (PDF) for the normal distribution with $\sigma$ . I would then normalize with $\sum w_i$ and average the weighted and normalized $f_i$ . However, that does not seem to produce correct results. I've also tried rejection sampling (taking a simple average of the $f_i$ , but randomly excluding $f_i$ if a random value $r_i \in [0, 1] $ is smaller than the normalized PDF at $x_i$ ). This gives me good results, but it's quite slow. Is there a better method than rejection sampling for this? It still seems to me like I should be able to average my original $f_i$ with some appropriate weighting, but maybe I'm wrong. There's lots of methods for generating normal-distributed $x_i$ from uniform $x_i$ , of course, but that's not what I want to do: I don't want to evaluate $f(x)$ for any new values $x_i$ , so all I have are the existing $f_i$ . My $x_i$ in this case are in fact random, but in principle it should also work for $x_i$ on a dense regular grid.
