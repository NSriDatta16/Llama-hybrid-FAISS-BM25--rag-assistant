[site]: stackoverflow
[post_id]: 5363133
[parent_id]: 5363087
[tags]: 
SQLite and MySQL serve two very different purposes. SQLite is for local data storage - data are kept on the phone, access is fast and requires no Internet. MySQL is a client-server database - the database is somewhere in the cloud, access is over the 'Net, and all your users are exposed to the same database. Depending on your business scenario, either SQLite or MySQL would be appropriate. That said, accessing MySQL in the cloud is usually performed via a Web service layer. You create/upload a set of Web pages (PHP or ASP or something) that encapsulates all the necessary database calls, passes the parameters to the database and passes the results back. This way, on iPhone you only perform good old HTTP calls, not work with MySQL directly. At least, that's how they usually do it in the world-facing apps. In a corporate environment, maybe there's a case for direct MySQL access. There's no ready-made client in the Apple toolset; check out the MySQL website, if they have a CocoaObjC connector.
