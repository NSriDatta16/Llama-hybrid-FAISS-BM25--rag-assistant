[site]: stackoverflow
[post_id]: 319539
[parent_id]: 319524
[tags]: 
My experience was simply using the RNG in PHP. I found that using a certain size of number (I'm using an int, so I have a max of 4G). I ran some tests and found that on average, in 500,000 iterations, I got 120 single duplicates. I never got a triplicate after running the loop a bunch of times. My "solution" was to then just insert and check if it fails, then generate a new ID and go again. My advice is to do the same and see what your collision rate is &c and see if it's acceptable for your case. This isn't optimal, so if anyone has suggestions I'm looking too:) EDIT: I was limited to a 5 digit ID ([a-zA-z0-9]{5,5}), the longer the id (more combination, the few collisions). An md5 of the email would almost never conflict, for instance.
