[site]: stackoverflow
[post_id]: 1272290
[parent_id]: 1254403
[tags]: 
To create the music or whatever you're trying to create, you'll have to Import your wav and mp3 files into your library and drag them onto the movie area to add them to your timeline. Use multiple layers to help organize them. To test your song out you can hit Enter to run from whatever frame your on forward to the end. Don't forget you have a few effects you can apply if you have the sound selected in your timeline. Also, there's an "Edit" button on the Properties panel (at the bottom by default) you can use to trim your audio clips to whatever you need them to be. Once you're done, you'll have to publish your flash movie to a swf. Then you'll have to use a Swf to Mp3 converter like this one: http://3d2f.com/programs/25-187-swf-to-mp3-converter-download.shtml (I'm not vouching for this software, it's just an example) If you're trying to do all of this from code, with ActionScript 2.0, you're going to have a hard road ahead. Essentially, you'd have to build an array full of trimmed sound bytes you've loaded into your movie. Then in an onEnterFrame you'd have to call them at the appropriate times: (I didn't test this code at all, it's just to give you a basic idea, lol) var sounds = new Array(); var s0 = new Sound(this); s0.attachSound("someLinkedSound0"); sounds.push({sound : s0, frame : 100}); var s1 = new Sound(this); s1.attachSound("someLinkedSound1"); sounds.push({sound : s1, frame : 200}); var s2 = new Sound(this); s2.attachSound("someLinkedSound2"); sounds.push({sound : s2, frame : 300}); var currentSound = 0; this.onEnterFrame = function(e) { if(currentSound My example uses sounds that are imported to your library and "linked" but you can load a sounds via url with a little modification. You could also accomplish something similar with a method called from a setInterval, if due to your application's structure onEnterFrame isn't being called. I hope that helps.
