[site]: crossvalidated
[post_id]: 269478
[parent_id]: 269465
[tags]: 
k-means clustering, with 2 clusters, would probably work on the data you've provided. But so would eye-balling this data, and manually setting a threshold at say 1e6. It's unclear from the data example you've provided what challenges you are seeing that mean you can't just set a threshold by hand. [edit] Given your additional information that there are 1000 customers, each with slightly different characteristics, I think you could consider using standard machine learning methodology of splitting your data into train/validate/test subsets. You'll write your technique using the training set, which could be k-means clustering, or some variant on this, then validate on the validation set. Finally, occasionally you can test on the test set, to check that you didnt overfit on the validation set. I suspect you wont entirely be able to escape from heuristics since, say there are 4 clusters, and they are clustered around for example: 10, 100, 10000, and 1e8. You, looking at this, know that the 1e8 cluster is an outlier, but only because you hvae the prior knowledge of knowing that the vast majority of your customers wont be making transactions for 1e8 dollars. Without such prior knowledge, there seems no obvious way, even as a human, of deciding which clusters are outliers?
