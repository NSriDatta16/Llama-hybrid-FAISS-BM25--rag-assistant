[site]: stackoverflow
[post_id]: 2724496
[parent_id]: 2490892
[tags]: 
If you're OK with executing the query inside your OData provider, you can simply load your data into a List of T (T being the type of the entity) and then simply return list.AsQueryable(). This will return a LINQ to Objects queryable, which provides full support for all query options and is based on the in-memory storage (the list). Note that for this to work correctly your IDataServiceQueryProvider.IsNullPropagationRequired must return true (as LINQ to Objects requires nulls to be correctly propagated through the query). Also if you set CanReflectOnInstanceProperty anywhere to false, you will need to do some query rewrite. If that's the case take a look at this post here for explanation on how properties are accessed.
