[site]: stackoverflow
[post_id]: 1845894
[parent_id]: 1845731
[tags]: 
The examples you give of nested / inner classes are (IMO) bad examples. Besides the 2nd example is not valid Java since an interface can only declare (implicitly) abstract methods. Here's a better example: public interface Worker { public class Response { private final Status status; private final String message; public Response(Status status, String message) { this.status = status; this.message = message; } public Status getStatus() { return status; } public String getMessage() { return message; } } ... public Response doSomeOperation(...); } By embedding the Response class, we are indicating that it is a fundamental part of Worker API with no other uses. The Map.Entry class is a well-known example of this idiom.
