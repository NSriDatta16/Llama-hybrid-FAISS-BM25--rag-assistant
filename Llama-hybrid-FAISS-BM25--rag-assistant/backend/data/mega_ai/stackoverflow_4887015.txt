[site]: stackoverflow
[post_id]: 4887015
[parent_id]: 4886843
[tags]: 
If the application is simple, then there's no special principle. As an example, since we're talking about Google, let's look at their main entry page. Ignoring the menu links, it's a basic web page that uses HTML to post the search terms to a back end server application that performs the search. Literally thousands of users can use this web page at the same time. The more users, the more web servers running your web page you'll need. If the application is more complicated, like Google Docs, then you have to figure out a way for each user of the application to save information separately and securely. You'd probably start with a user id. The more users, the more disk storage you'll need. System managed storage would be helpful. As far as software, you can use any language you wish to develop the application. JQuery is popular. There's Java EE, Ruby, .NET, and a host of other languages. You have the choices of MySQL, Oracle, or DB2 for a relational database.
