[site]: stackoverflow
[post_id]: 4058262
[parent_id]: 4032753
[tags]: 
I think that the above one-line solutions aren't really elegant or readable. So why not use something that can really be understood by someone on first glance? $items = NUM_OF_ITEMS; $rabate = 0; foreach ($rabates as $rItems => $rRabate) { if ($rItems > $items) break; $rabate = $rRabate; } This obviously needs a sorted array, but at least in your example this is given ;) Okay, I know, you don't want the solution with the simple loop. But what about this: while (!isset($rabates[$items])) { --$items; } $rabate = $rabates[$items]; Still quite straightforward, but a little shorter. Can we do even shorter? for (; !isset($rabates[$items]); --$items); $rabate = $rabates[$items]; We are already getting near one line. So let's do a little bit of cheating: for (; !isset($rabates[$items]) || 0 > $rabate = $rabates[$items]; --$items); This is shorter then all of the approaches in other answers. It has only one disadvantage: It changes the value of $items which you may still need later on. So we could do: for ($i = $items; !isset($rabates[$i]) || 0 > $rabate = $rabates[$i]; --$i); That's again one character less and we keep $items . Though I think that the last two versions are already too hacky. Better stick with this one, as it is both short and understandable: for ($i = $items; !isset($rabates[$i]); --$i); $rabate = $rabates[$i];
