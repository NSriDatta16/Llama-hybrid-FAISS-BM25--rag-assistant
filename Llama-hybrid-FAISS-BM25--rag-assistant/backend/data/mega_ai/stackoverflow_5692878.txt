[site]: stackoverflow
[post_id]: 5692878
[parent_id]: 
[tags]: 
Delay when binding request.POST data to form in django

I'm getting unexplainable delay of about 20.-30 seconds when trying to bind request.POST data to form: CompanyFormset = modelformset_factory(Company, form=EditCompanyForm, extra=0) if request.method == 'POST': formset = CompanyFormset(request.POST) if formset.is_valid(): formset.save() It only happens on one server, no matter if I use development server or mod_wsgi. When trying on my development computer everything works fast enough. If I try to save model by manually assigning values it's fast as it should be. Delay only happens on this line: formset = CompanyFormset(request.POST) ..and I have no more ideas what can cause it or where to look for problem cause. Any suggestions what to do? Here is the model too: class Company(models.Model): name = models.CharField(_('name'),blank=True, max_length=200) type_of_corporation = models.CharField(_('type of organization'),blank=True, max_length=100) tax_number = models.CharField(_('tax number'),blank=True, max_length=100) created_at = models.DateTimeField(auto_now_add = True) updated_at = models.DateTimeField(auto_now = True) logo = models.FileField(_('logo'),upload_to='bex/logos', blank=True, null=True) description = models.TextField(_('description'),blank=True) street = models.CharField(_('street'),blank=True, max_length=100) city = models.CharField(_('city'),blank=True, max_length=100) zip = models.CharField(_('zip'),blank=True, max_length=50) region = models.CharField(_('region'),blank=True, max_length=100) COUNTRIES = ( ('Croatia', 'Croatia'), ('Slovenia', 'Slovenia'), ) country = models.CharField(_('country'),max_length=20, choices=COUNTRIES) telephone = models.CharField(_('telephone'),blank=True, max_length=20) fax = models.CharField(_('fax'),blank=True, max_length=20) email = models.EmailField(_('email'),blank=True) website = models.URLField(_('website'),null=True, blank=True, verify_exists=False) representing_person = models.CharField(_('representing person'), blank=True, max_length=100) owner = models.ForeignKey(User, blank=True, null=True, verbose_name=_('owner'), related_name='company_owner') owner_approved = models.BooleanField(blank=True) company_approved = models.BooleanField(default=True) business_category = models.ForeignKey(BusinessCategory, blank=True, null=True, verbose_name=_('business category')) subscription_date = models.DateTimeField(_('subscription date'),blank=True, null=True) score = models.IntegerField(null=True, blank=True) votes = models.IntegerField(null=True, blank=True) """ company data needs to have ratings, comments, category and business tags """ class Admin: list_display = ('',) search_fields = ('',) save_as = True class Meta: verbose_name = _('Company') verbose_name_plural = _('Companies') def rating_allowed(self): if not self.subscription_date: try: user = User.objects.get(id=self.owner.id) if (datetime.today() - user.date_joined).days
