[site]: stackoverflow
[post_id]: 5250186
[parent_id]: 5250039
[tags]: 
Unfortunately, all the info I've ever seen only suggests managing risk factors yourself: reuse large objects, allocate them at the beginning, make sure they're of sizes that are multiples of each other, use alternative data structures (lists, trees) instead of arrays. That just gave me an another idea of creating a non-fragmenting List that instead of one large array, splits into smaller ones. Arrays / Lists seem to be the most frequent culprits IME. Here's an MSDN magazine article about it: http://msdn.microsoft.com/en-us/magazine/cc534993.aspx , but there isn't that much useful in it.
