[site]: crossvalidated
[post_id]: 132721
[parent_id]: 132635
[tags]: 
Let's define an ARIMA(1,0,1)(1,0,1) model for a time series $y_t$ with period $s$ as: $$ (1-\phi_1L)(1-\phi_2L^s) y_t = (1+\theta_1L)(1+\theta_2L^s) \epsilon_t \,, \quad t=s+1,s+2,...,n \,, $$ where $L$ is the lag operator such that $L^iy_t = y_{t-i}$. For your purposes, it is helpful to write the model above as follows: $$ y_t = \phi_1 y_{t-1} + \phi_2 y_{t-s} - \phi_1\phi_2 y_{t-s-1} + \epsilon_t + \theta_1 \epsilon_{t-1} + \theta_2 \epsilon_{t-s} + \theta_1\theta_2 \epsilon_{t-s-1} \,. $$ If you are comparing your results with some source, make sure that you are using the same definition of the model. Sometimes a different specification that changes the sign of the AR and MA coefficients is used. The term $\epsilon_t$ is generally defined as a set of independent and identically distributed variables with mean equal to zero and variance $\sigma^2$, i.e., $\epsilon_t \sim IID(0, \sigma^2)$. When forecasting, you deal with this term as follows: If the time period of the lagged $\epsilon_t$ belongs to the observed sample period, then the estimate of $\epsilon_t$ is evaluated as the difference between the value observed for $y_t$ at that period and the estimated value of $y_t$ for the same period. If the time period of the white noise is outside the sample period, then the estimate of the white noise is replaced by its expectation, defined above as zero. In the first case you need to get the values estimated for the series at each period of the sample (the fitted values). For this, you may find useful this post and this post . Basically, you can apply a recursive procedure starting from the first observation. At each iteration, the equation of the ARIMA model defined above is evaluated for the observed values and given the parameters of the model. The terms $\epsilon_t$ are handled as above, the lags are replaced by the error terms obtained from previous iterations and the current value $\epsilon_t$ by its expectation, zero. For simplicity you may start the recursion by setting the first values of $\epsilon_t$ to zero.
