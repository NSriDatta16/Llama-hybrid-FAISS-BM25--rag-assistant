[site]: stackoverflow
[post_id]: 4693045
[parent_id]: 
[tags]: 
Playlist shuffle on/off

I am programming in java, but I could also adopt C++ (or even pseudo) code, no problem. Here is what I'm at: I have something like a playlist such as List lsMyPlaylist . Now I want to give the user the opportunity to shuffle the items, but then also come back to the ordered list. I mean, let's say the user is in "shuffle mode", the player e.g. jumps from song 7 to 5, but then the user turns the "shuffle mode" off, 'cause he wants to hear song 6 next. How would you approach this problem? I have several ideas: to use two lists, one original, one shuffled (too much storage) have a list of int's that I shuffle and then use as index to get the elements (a little better, maybe) use a hashtable (the solution? I could need some advise on that, though) Oh, and this is not a homework assignment (I wish I was that age again :-D). EDIT: I just finished an implementation like this: PlayList implements List { private List lsObjs = null; private List lsIdxs = null; boolean bShuffleMode = false; int Pos = 0; } However now, I'm thinking of something like: PlayListItem { int iNextItem = 0; } PlayList implements List { private List lsObjs = null; boolean bShuffleMode = false; int Pos = 0; } Not sure about this...Could still need advice. Can I even implement List if I specify the objects in the list? Hm...
