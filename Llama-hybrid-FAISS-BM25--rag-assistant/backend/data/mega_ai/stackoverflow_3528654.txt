[site]: stackoverflow
[post_id]: 3528654
[parent_id]: 3527020
[tags]: 
Why can't you modify your static method to return an exception object and throw later. For example // Do something ... // Found error condition, need to throw an exception if (error condition) { throw LogAndThrow.Message("Message goes here"); } Edit: AFAIK, there no way to modify stack trace. There are ways to preserve original stack trace while re throwing exceptions - see this article for it. Another Edit : Just thought that I will put some additional info & links. Basically, CLR builds the stack trace in the exception object only when exception is thrown. This has been mentioned at MSDN - quote from MSDN: The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the throw keyword). If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown. If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown This is also mentioned here (where author mentions that CLR will do a stack walk when it encounters the exception in managed code). On somewhat related note (but a bit off-topic), see this excellent article (with sample code) where author constructs the alternate stack trace information (basically, he looks up debug information from non-standard location).
