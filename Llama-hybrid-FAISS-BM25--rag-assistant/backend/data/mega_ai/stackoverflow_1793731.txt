[site]: stackoverflow
[post_id]: 1793731
[parent_id]: 1793656
[tags]: 
First, since you're using SQL Server and you can use stored procedures, don't use a trigger. It's not necessary. If your teacher needs justification, here's an article from SQL Server MVP Tom LaRock which discusses issues with handling triggers . Second, as far as how to write the stored procedures, think about how to handle all the functionality logically. You've said you need to do the following: Read existing hurricane information Update existing hurricane information Insert a new hurricane into the database Your application should handle all of those as separate paths. And you need to think about the functionality before you write your first bit of T-SQL code. That means you have to have an interface which presents existing information. You're going to have to display the hurricanes existing in the database. Then once the user selects the one to get more information on, you'll have to pull back the hurricane history information. So I know in that situation I have two different data retrievals based on user input. That tells me I need to build the GUI interface to handle that progression logically and display the information in a way the user can use. And it also tells me I've got to build two different stored procedures. The second one will be passed some information identifying the hurricane to retrieve data on (which would be the primary key). Now roll through the rest of the application's functionality. That should get you started.
