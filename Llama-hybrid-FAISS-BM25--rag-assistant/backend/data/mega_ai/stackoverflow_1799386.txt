[site]: stackoverflow
[post_id]: 1799386
[parent_id]: 1797497
[tags]: 
Ok, i didn't solve my problem but i get a workaround for this situation. UIWebView get all touches and don't pass them to other views, only if you disable the user interaction, and we don?t want that. And you can't override touchesBegan and that stuff in a implementation of a UIWebView. So what's the solution? As i mention, if you put a UIView on top of the UIWebView you can get the touches, and pass them to the webview, but that is not perfect also because you cant click on links, and zoom and all that stuff, you are only able to scroll! and that suck's! Soooo, my workaround is: Get ride of the UIView that is on top of the UIWebView, and now the magic with some help of javascript! In your html you need to do some tricks, first: Create a div envolving all the page, just after the body, and set padding and margin to 0! and put this on div: What this does is, create and event when you tap on the div, if the div is fill the entire webview, whenever you click you call that event, and that event change the address and if you set your view controller as delegate of the webview, the delegate will call this metod: - (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType { NSString* scheme = request.URL.scheme; NSString* query = request.URL.query; NSLog(@"%@, %@", scheme, query); if ([scheme compare:@"file"]==0){ if ([query isEqualToString:@"hideBars"]){ [self hideBars]; return NO; } } return YES; } that's where the magic happens, the query string will come with the hideBars string if you click anywhere! So it will call my hideBars function! if you click on a link the query will come with the link adress so it works too! zoom doesn't call this metod so its all great! If you have any question just mail me to goncalo.falcao @ waveweb2 . com
