[site]: stackoverflow
[post_id]: 4928759
[parent_id]: 4928323
[tags]: 
If you pass the serializer an XmlWriter, you can control some parameters like encoding, whether to omit the declaration (eg for a fragment), etc. This is not meant to be a definitive guide, but an alternative so you can see what's going on, and something that isn't just going to console first. Note also, if you create your XmlWriter with a StringBuilder instead of a MemoryStream, your xml will ignore your Encoding and come out as utf-16 encoded. See the blog post writing xml with utf8 encoding for more information. XmlWriterSettings xmlWriterSettings = new XmlWriterSettings { Indent = true, OmitXmlDeclaration = false, Encoding = Encoding.UTF8 }; using (MemoryStream memoryStream = new MemoryStream() ) using (XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings)) { var x = new System.Xml.Serialization.XmlSerializer(p.GetType()); x.Serialize(xmlWriter, p); // we just output back to the console for this demo. memoryStream.Position = 0; // rewind the stream before reading back. using( StreamReader sr = new StreamReader(memoryStream)) { Console.WriteLine(sr.ReadToEnd()); } // note memory stream disposed by StreamReaders Dispose() }
