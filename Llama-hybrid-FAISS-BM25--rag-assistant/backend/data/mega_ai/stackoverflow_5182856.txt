[site]: stackoverflow
[post_id]: 5182856
[parent_id]: 5182262
[tags]: 
I don't know exactly what you're trying to do, but acf also works on simple vectors, given off course it represents a regular time series (i.e. even spaced). Otherwise the result is just bollocks. >acf(df$test) Regarding the ts object : The "dates" you see are just from the print.ts function, so they're not inherent to the ts object. The ts object has no date information in it. You can set the option calender=FALSE to get the standard print out of the ts object. > ts(df$test,start=2008,frequency=12) Jan Feb Mar Apr May 2008 1 2 3 4 5 > print(ts(df$test,start=2008,frequency=12),calendar=F) Time Series: Start = c(2008, 1) End = c(2008, 5) Frequency = 12 [1] 1 2 3 4 5 Now, the vector you construct looks like : > x [1] "2008-01-31" "2008-03-01" "2008-03-31" "2008-04-30" "2008-05-30" which is or isn't regular, depending on how you see it. If you extract the months, then you have 1 observation for january, 2 for march, 1 for april...: not regular. You have an observation every 30 days : regular. If you have an observation every 30 days, you shouldn't bother about the dates as 365 is not dividable through 30. Hence, one year you'll have 12 observations, another one you'll have 13 observations. So you can't set the frequency in ts in a consequent correct way. So I'd refrain from using a ts all together, as James already indicated in the comments.
