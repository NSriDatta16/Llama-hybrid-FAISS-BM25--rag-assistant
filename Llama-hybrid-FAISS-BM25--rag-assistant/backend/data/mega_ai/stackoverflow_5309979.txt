[site]: stackoverflow
[post_id]: 5309979
[parent_id]: 5309853
[tags]: 
You have to tell it by defining a foreign key. The syntax goes like this: ALTER TABLE comments ADD CONSTRAINT fk_photgraph_id FOREIGN KEY (photograph_id) REFERENCES photographs (id) (You can do the same in one go inside the CREATE TABLE statement, but I prefer the above, because this way you can first create all your tables, and then add the foreign keys, without worrying about the correct order). This will tell MySQL that the photograph_id column in the comments table links to the id column in the photographs table. From then on, MySQL will check for you that any photograph_id is associated with a valid photographs.id ; by adding ON UPDATE and ON DELETE statements, you can control how exactly it does that - for example, if you specify ON DELETE CASCADE , then deleting a photograph will also delete all comments that reference it; ON DELETE SET NULL will set the comments' photograph_id to NULL instead; ON DELETE NO ACTION and ON DELETE RESTRICT will refuse to delete the photograph until all comments have been removed or assigned to a different photograph. Cascading deletes are very powerful, so be careful when using them. You might delete more things than you intend to, and databases don't have an 'undo' button. An important point to remember is that foreign keys in MySQL only work with the InnoDB storage engine; MyISAM does not support foreign keys. If you specify a foreign key on a MyISAM table, MySQL will happily parse it and then ignore it without raising any errors.
