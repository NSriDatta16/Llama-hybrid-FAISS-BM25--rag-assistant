[site]: crossvalidated
[post_id]: 52252
[parent_id]: 
[tags]: 
How to specify a contrast matrix (in R) for the difference between one level and an average of the others?

I have a regression model that looks like this: $$Y = \beta_0+\beta_1X_1 + \beta_2X_2 + \beta_3X_3 +\beta_{12}X_1X_2+\beta_{13}X_1X_3+\beta_{123}X_1X_2X_3$$ ...or in R notation: y ~ x1 + x2 + x3 + x1:x2 + x1:x3 + x1:x2:x3 Let's say $X_1$ and $X_2$ are categorical variables and $X_3$ is numeric. The complication is that $X_1$ has three levels $X_{1a}, X_{1b}, X_{1c}$ and instead of standard contrasts, I need to test: Whether the intercept for level $X_{1a}$ significantly differs from the average intercept for levels $X_{1b}$ and $X_{1c}$. Whether the response of $X_2$ is significantly different between level $X_{1a}$ and the average of levels $X_{1b}$ and $X_{1c}$. Whether the slope of $X_3$ is significantly different between level $X_{1a}$ and the average of levels $X_{1b}$ and $X_{1c}$. Based on this post it seems like the matrix I want is... 2 -1 -1 So I do contrasts(mydata$x1) . The estimate of $\beta_1$ changes, but so do the others. I can reproduce the new estimate of $beta_1$ by subtracting the predicted values of the $X_1b$ and $X_1c$ group means (when $X_3=0$ and $X_2$ is at its reference level) from twice the value of $X_1a$ at those levels. But I can't trust that I specified my contrast matrix correctly unless I can also similarly derive the other coefficients. Does anybody have any advice for how to wrap my head around the relationship between cell means and contrasts? Thanks. Is there a standard name for this type of contrast? Aha! According to the link posted in Glen_b's answer , the bottom line is, you can convert ANY comparison of group means you want into an R-style contrast attribute as follows: Make a square matrix. The rows represent the levels of your factor and the columns represent contrasts. Except the first one, which tells the model what the intercept should represent. If you want your intercept to be the grand mean, fill the first column with all of the same non-zero value, doesn't matter what. If you want the intercept to be one of the level means, put a number in that row and fill the rest with zeros. If you want the intercept to be a mean of several levels, put numbers in those rows and zeros in the rest. If you want it to be a weighted mean, use different numbers, otherwise use the same number. You can even put in negative values in the intercept column and that probably means something too, but it completely changes the other contrasts, so I have no idea what that's for Fill in the rest of the columns with positive and negative values indicating what levels you want compared to what others. I forget why summing to zero is important, but adjust the values so that the columns do sum to zero. Transpose the matrix using the t() function. Use ginv() from the MASS package or solve() to get the inverse of the transposed matrix. Drop the first column, e.g. mycontrast . You now have a p x p-1 matrix, but the information you put in for your intercept was encoded in the matrix as a whole during step 5. If you want labels in the summary output more pleasant to read than lm() et al.'s default output, name your matrix's columns accordingly. The intercept will always automatically get named (Intercept) however. Make your matrix the new contrast for the factor in question, e.g. contrasts(mydata$myfactor) Run lm() (and probably many other functions that use formulas) as normal in standard R without having to load glht , doBy , or contrasts . Glen_b, thank you, and thank you UCLA Statistical Consulting Group. My applied stats prof spent several days handwaving on this topic, and I was still left with no idea how to actually write my own contrast matrix. And now, an hour of reading and playing with R, and I finally think I get it. Guess I should have applied to UCLA instead. Or University of StackExchange.
