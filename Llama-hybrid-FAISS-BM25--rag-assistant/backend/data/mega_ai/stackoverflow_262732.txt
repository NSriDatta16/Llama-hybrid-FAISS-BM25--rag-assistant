[site]: stackoverflow
[post_id]: 262732
[parent_id]: 133919
[tags]: 
If you are going towards Middleware + Single Central Database strategy, you might want to consider achieving this in multiple phases. Here's a logical stepped process which can be considered: Implementation of services/APIs for different systems which expose the functionality for each system Implementation of Middleware which accesses these APIs and provides an interface to all the systems to access the data/services from other systems (accesses data from central source if available, else gets it from another system) Implementation of Central Database only, without data Implementation of Caching/Data-Storage Services at the Middleware level which can store/cache data in the central database whenever that data is accessed from any of the Systems e.g. IF System A's records 1-5 are fetched by System B through Middleware, the Middleware Data Caching Services can store these records in the centralized database and the next time these records will be fetched from the central database Data Cleansing can happen in Parallel You can also create a import mechanism to push data from multiple systems to the central database on a daily basis (automated or manual) This way, the effort is distributed across multiple milestones and data is gradually stored in the central database on first-accessed-first-stored basis.
