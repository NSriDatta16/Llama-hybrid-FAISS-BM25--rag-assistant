[site]: stackoverflow
[post_id]: 3046388
[parent_id]: 3046086
[tags]: 
I would simply try to insert in rel1with3 , if it fails try with rel2with3 : CREATE OR REPLACE PROCEDURE Add_Relation(computer NUMBER, device NUMBER) IS device_data VARCHAR2(20); parent_key_not_found EXCEPTION; PRAGMA EXCEPTION_INIT(parent_key_not_found, -2291); BEGIN BEGIN INSERT INTO rel1with3 (d_id_1, d_id_3) VALUES (computer, device); device_data := 'device1'; EXCEPTION WHEN parent_key_not_found THEN INSERT INTO rel2with3 (d_id_2, d_id_3) VALUES (computer, device); device_data := 'device2'; END; WRITE_LOG(device, device_data, computer); END; A few suggestions: use PL/SQL exceptions instead of return out parameters (you can easily forget to check out parameters, leading to hard to diagnose bugs) don't use an autonomous transaction unless you have a need to use them (in this case they will break your transaction flow). use transaction processes (commit/rollback) only in the top calling procedure/code (usually the calling app, not PL/SQL) don't forget to index both referencing columns on rel1with3 and rel2with3 (usually you will have a PK on (d_id_1, d_id_3) so you will need an additional index on d_id_3 )
