[site]: stackoverflow
[post_id]: 606004
[parent_id]: 
[tags]: 
C++ multi-dimensional data handling

Many times, I find myself having to define a container for multi-dimensional data. Let's take an example: I have many Chips, each Chip has many Registers, each Register has many Cells, and each Cell has many Transistors. At some stage of my C++ program I have to read this data, and later I have to use it. I cannot use any external storage for this data: file, data-base, etc. So, should I create some multi-dimensional STL container? A map of maps of vectors, or something like that... ? Or should I create classes (structs) for each of them? Cell class that contains a vector of Transistors, and then a Register class that contains a vector of Cells, etc? But what if later I want to access my data by Transistor, and not by Chip? Any other way? Thank you EDIT: Forgot to mention: I cannot use boost.
