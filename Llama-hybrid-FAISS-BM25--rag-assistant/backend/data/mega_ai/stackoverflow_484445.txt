[site]: stackoverflow
[post_id]: 484445
[parent_id]: 410558
[tags]: 
When I see exceptions being thrown for validation errors I often see that the method throwing the exception is performing lots of validations all at once. e.g. public bool isValidDate(string date) { bool retVal = true; //check for 4 digit year throw new FourDigitYearRequiredException(); retVal = false; //check for leap years throw new NoFeb29InANonLeapYearException(); retVal = false; return retVal; } This code tends to be pretty fragile and hard to maintain as the rules pile up over the months and years. I usually prefer to break up my validations into smaller methods that return bools. It makes it easier to tweak the rules. public bool isValidDate(string date) { bool retVal = false; retVal = doesDateContainAFourDigitYear(date); retVal = isDateInALeapYear(date); return retVal; } public bool isDateInALeapYear(string date){} public bool doesDateContainAFourDigitYear(string date){} As has been mentioned already, returning an error struct/object containing information about the error is a great idea. The most obvious advantage being that you can collect them up and display all of the error messages to the user at once instead of making them play Whack-A-Mole with the validation.
