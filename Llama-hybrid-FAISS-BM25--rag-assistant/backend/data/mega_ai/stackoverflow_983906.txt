[site]: stackoverflow
[post_id]: 983906
[parent_id]: 982518
[tags]: 
I would think that in this case, refactoring so you don't require this sort of thing is probably the most elegant way to go. In saying that one option is to use __call and within that parse debug_backtrace to see which class called the method. Then check a friends whitelst class ProtectedClass { // Friend list private $friends = array('secret' => array('FriendClass')); protected function secret($arg1, $arg2) { // ... } public function __call($method, $args) { $trace = debug_backtrace(); $class = $trace[1]['class']; if(in_array($class, $this->friends[$method])) return $this->$method($args[0], $args[1]); throw new Exception(); } } I think I need a shower.
