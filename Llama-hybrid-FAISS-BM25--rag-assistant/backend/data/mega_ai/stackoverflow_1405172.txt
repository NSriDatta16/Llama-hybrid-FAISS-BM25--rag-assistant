[site]: stackoverflow
[post_id]: 1405172
[parent_id]: 1404305
[tags]: 
Keep a copy of the string in MyClass, keeping a reference is definitively not safe. If you expect a lot of instances to have the same name, you should look into the Flyweight design pattern which allows to save storage when you have a lot of equal instances. Boost.Flyweight is a very conventient implementation of this pattern that allows you to simply write: class myclass { public: myclass(const std::string& _name) : name(_name) {} private: boost::flyweight name; }; Some implementations of std::string may do this behind the scene, but it is not required. You should therefor not rely on this.
