[site]: stackoverflow
[post_id]: 221950
[parent_id]: 
[tags]: 
Operations on arbitrary value types

This article describes a way, in C#, to allow the addition of arbitrary value types which have a + operator defined for them. In essence it allows the following code: public T Add(T val1, T val2) { return val1 + val2; } This code does not compile as there is no guarantee that the T type has a definition for the '+' operator, but the effect is achieved with code like this: public T Add(T val1, T val2) { //Num defines a '+' operation which returns a value of type T return (new Num (val1) + new Num (val2)); } Follow the link to see how the Num class achieves this. Anyways, on to the question. Is there any way to achieve the same effect in C or C++? For the curious, the problem I'm trying to solve is to allow a CUDA kernel to be more flexible/general by allowing it to operate on more types. Update: For .NET, Marc Gravell has made a utility library which solves the operator problem very elegantly.
