[site]: stackoverflow
[post_id]: 2370665
[parent_id]: 2370438
[tags]: 
Have you tried using the long path name syntax ? From the CreateFile function in the platform SDK: Maximum Path Length In the Windows API (with some exceptions discussed later), the maximum length for a path is MAX_PATH, which is defined as 260 characters. A local path is structured in the following order: drive letter, colon, backslash, components separated by backslashes, and a terminating null character. For example, the maximum path on drive D is "D:\ NUL". The Windows API has many functions that also have Unicode versions to permit a maximum path length of approximately 32,000 characters composed of components up to 255 characters each in length. To specify that kind of extended length path, use the "\?\" prefix. For example, "\?\D:\". Note The maximum path of 32,000 characters is approximate, because the "\?\" prefix can be expanded to a longer string, and the expansion applies to the total length. To specify such a path using UNC, use the "\?\UNC\" prefix. For example, "\?\UNC\\". These prefixes are not used as part of the path itself. They indicate that the path should be passed to the system with minimal modification, which means that you cannot use forward slashes to represent path separators, or a period to represent the current directory. Also, you cannot use the "\?\" prefix with a relative path. Relative paths are limited to MAX_PATH characters. The last paragraph is of course the one that is relevant to your case. It is not sure that .NET supports this kind of path. You could use P/Invoke to call RemoveDirectory from the Win32 SDK.
