[site]: crossvalidated
[post_id]: 438549
[parent_id]: 
[tags]: 
neural network timeseries binary classifier: simple way to use temporal context

The problem I am working on is binary classification of a time series. To be more specific, input data corresponds to the 0.2 s worth of accelerometer readings, which is [100x3] matrix (100 timestamps, 3D vector in each of them). Ground truth is a binary signal 0 or 1 corresponding to a last timestamp in a window. After experimenting a bit with unsupervised ML, course was changed to supervised. Test set accuracy is currently .87 , which I can live with, but I would like to see less noize and less obvious outliers. The winning model is CNN (stacked LSTM was tested too), which input is matrix described above and output is a [1x2] softmax logits. What I am getting at is the fact, that the network is not at all informed of predictions it made 1 or 2 timestamps prior to now. My guess is that more accuracy could be squeezed out of temporal information (say, matrices 100x2 previous logits and 100x1 previous gt signal). To the best of my knowledge, the conventional way to do that is to feed outputs of my CNN to some RNN. As it sometimes happens, it seems that I don't have a question by the time I've finished formulating the question. But I'll leave it open for now and share accuracy gains, when model is implemented & tested. A bit of Ground Truth A bit of Estimated signal
