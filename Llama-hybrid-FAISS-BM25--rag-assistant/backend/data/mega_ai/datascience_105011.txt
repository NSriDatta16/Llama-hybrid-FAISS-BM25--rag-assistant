[site]: datascience
[post_id]: 105011
[parent_id]: 57603
[tags]: 
Waffle Chart These are called Waffle Chart. A Waffle Chart is a gripping visualization technique that is normally created to display progress towards goals. A waffle chart shows progress towards a target or a completion percentage. There is a grid of small cells, of which coloured cells represent the data. A chart can consist of one category or several categories. Multiple waffle charts can be put together to show a comparison between different charts. PyWaffle is an open source, MIT-licensed Python package for plotting waffle charts. It provides a Figure constructor class Waffle, which could be passed to matplotlib.pyplot.figure and generates a matplotlib Figure object. PyPI Page Documentation Some examples: Plot with Icons - Pictogram Chart data = {'Democratic': 48, 'Republican': 46, 'Libertarian': 3} fig = plt.figure( FigureClass=Waffle, rows=5, values=data, colors=["#232066", "#983D3D", "#DCB732"], legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)}, icons='child', font_size=12, icon_legend=True ) plt.show() Multiple Plots in One Chart import pandas as pd data = pd.DataFrame( { 'labels': ['Hillary Clinton', 'Donald Trump', 'Others'], 'Virginia': [1981473, 1769443, 233715], 'Maryland': [1677928, 943169, 160349], 'West Virginia': [188794, 489371, 36258], }, ).set_index('labels') # A glance of the data: # Maryland Virginia West Virginia # labels # Hillary Clinton 1677928 1981473 188794 # Donald Trump 943169 1769443 489371 # Others 160349 233715 36258 fig = plt.figure( FigureClass=Waffle, plots={ '311': { 'values': data['Virginia'] / 30000, 'labels': [f"{k} ({v})" for k, v in data['Virginia'].items()], 'legend': {'loc': 'upper left', 'bbox_to_anchor': (1.05, 1), 'fontsize': 8}, 'title': {'label': '2016 Virginia Presidential Election Results', 'loc': 'left'} }, '312': { 'values': data['Maryland'] / 30000, 'labels': [f"{k} ({v})" for k, v in data['Maryland'].items()], 'legend': {'loc': 'upper left', 'bbox_to_anchor': (1.2, 1), 'fontsize': 8}, 'title': {'label': '2016 Maryland Presidential Election Results', 'loc': 'left'} }, '313': { 'values': data['West Virginia'] / 30000, 'labels': [f"{k} ({v})" for k, v in data['West Virginia'].items()], 'legend': {'loc': 'upper left', 'bbox_to_anchor': (1.3, 1), 'fontsize': 8}, 'title': {'label': '2016 West Virginia Presidential Election Results', 'loc': 'left'} }, }, rows=5, # outside parameter applied to all subplots colors=["#2196f3", "#ff5252", "#999999"], # outside parameter applied to all subplots figsize=(9, 5) ) plt.show() For more, plotting Waffle charts in Python plotting Waffle charts in R
