[site]: stackoverflow
[post_id]: 1804671
[parent_id]: 1804433
[tags]: 
I have reproduced the problem you mentioned with BinaryReader.ReadChars . Although the developer always needs to account for lookahead when composing things like streams and decoders, this seems like a fairly significant bug in BinaryReader because that class is intended for reading data structures composed of various types of data. In this case, I agree that ReadChars should have been more conservative in what it read to avoid losing that byte. There is nothing wrong with your workaround of using the Decoder directly, after all that is what ReadChars does behind the scenes. Unicode is a simple case. If you think about an arbitrary encoding, there really is no general purpose way to ensure that the correct number of bytes are consumed when you pass in a character count instead of a byte count (think about varying length characters and cases involving malformed input). For this reason, avoiding BinaryReader.ReadChars in favor of reading the specific number of bytes provides a more robust, general solution. I would suggest that you bring this to Microsoft's attention via http://connect.microsoft.com/visualstudio .
