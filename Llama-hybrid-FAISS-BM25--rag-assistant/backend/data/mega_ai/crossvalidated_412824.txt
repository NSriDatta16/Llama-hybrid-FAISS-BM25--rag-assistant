[site]: crossvalidated
[post_id]: 412824
[parent_id]: 
[tags]: 
Removing multiple seasonalities from time series

I'm using statsmodels.tsa.seasonal.seasonal_decompose to remove seasonality from a time series. I can remove a seasonal component in this way: import pandas as pd from statsmodels.tsa.seasonal import seasonal_decompose df = pd.read_csv('data.csv') # giving me a dataframe of columns ds and y, ds being a timestamp and y the signal signal = df.y - seasonal_decompose(df.y, freq=7).seasonal That makes signal the raw data with weekly seasonality removed. What I want to do is remove all 4 seasonal components (weekly, monthly, quarterly, yearly) in this way, but I'm not sure whether to do it in the order of largest period to smallest or vice versa. For example I might do: w = seasonal_decompose(df.y, freq=7) r = df.y - w.seasonal m = seasonal_decompose(r, freq=30) r = r - m.seasonal q = seasonal_decompose(r, freq=91) r = r - q.seasonal y = seasonal_decompose(r, freq=365) r = r - y.seasonal or, the reverse: y = seasonal_decompose(df.y, freq=365) r = df.y - w.seasonal q = seasonal_decompose(r, freq=91) r = r - m.seasonal m = seasonal_decompose(r, freq=30) r = r - q.seasonal w = seasonal_decompose(r, freq=7) r = r - y.seasonal Which is preferable, and ideally why?
