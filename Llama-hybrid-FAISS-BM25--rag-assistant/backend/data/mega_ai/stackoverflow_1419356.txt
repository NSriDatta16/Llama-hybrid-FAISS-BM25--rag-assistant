[site]: stackoverflow
[post_id]: 1419356
[parent_id]: 1417378
[tags]: 
SQL Azure is the way to go if you're planning on sticking with an RDBMS (and you should be able to use any existing RDBMS repository implementation for this). However, if you want to use the more scalable Table Storage , then you might want to look into CloudStorage.API , which provides a wrapper around this (it purports to aim for other cloud storage endpoints too, but AFAICT it's quite Azure specific). It will also enable better unit testing and dependency injection than the provided implementation in the Azure samples. You'll have a Unit Of Work interface to work with with IEntityTableDataContext and then creating your own Repository implementation on top of this shouldn't require much effort. The main thing you'll need to be aware of is the restrictions that the Table Storage imposes on your entities - they basically need to be very simple property-exposing classes. For a richer domain model, you may want to explore mapping these data entities to your domain entities (you could use AutoMapper to assist you here too).
