[site]: crossvalidated
[post_id]: 515585
[parent_id]: 
[tags]: 
The best approach for implementing a classification model that can have new classes added to it frequently?

Let's say you are tasked with training a malware classification model, but the problem is that new malware families could be added to this model every week. for example a new malware family shows up, so you gather thousands of sample of it and you need to add this new class to your classification mode and retrain it, and this can happen every week. So for this problem, what is the best approach to implementing it ? (In pytorch or tensorflow, doesn't matter) Basically if you wanted to train a classification model that can have new classes added to it frequently, what is the most optimize way of implementing the model and retraining it and adding the new class to it? (The model can be a machine learning model like forest, or a deep model, this doesn't matter for me either)
