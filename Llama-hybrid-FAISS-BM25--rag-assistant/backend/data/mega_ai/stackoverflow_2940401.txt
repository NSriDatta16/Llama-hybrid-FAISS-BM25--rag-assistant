[site]: stackoverflow
[post_id]: 2940401
[parent_id]: 2940240
[tags]: 
This is what I came up, it works as you say except the image will always go to the center after zooming in or out: $('document').ready(function() { zoomimg=$('#zoomimg'); // we store this in a variable since we don't need to traverse the DOM every time -- this is faster var viewportWidth = $(window).width(); var viewportHeight = window.innerHeight ? window.innerHeight : $(window).height(); // this is to work with Opera zoomimg.css({'position': 'absolute', 'left': (viewportWidth/2)-(zoomimg.width()/2), 'top' : (viewportHeight/2)-(zoomimg.height()/2)}).draggable(); $(document).keydown(function(event) { event = event || window.event; var viewportWidth = $(window).width(); var viewportHeight = window.innerHeight ? window.innerHeight : $(window).height(); // this is to work with Opera if (event.keyCode == 38) { width = zoomimg.width(); height = zoomimg.height(); zoomimg.width(width*1.2).height(height*1.2); var viewportWidth = $(window).width(); var viewportHeight = window.innerHeight ? window.innerHeight : $(window).height(); zoomimg.css({'left': (viewportWidth/2)-(zoomimg.width()/2), 'top' : (viewportHeight/2)-(zoomimg.height()/2)}); } else if (event.keyCode == 40) { width = zoomimg.width(); height = zoomimg.height(); zoomimg.width(width*0.8).height(height*0.8); var viewportWidth = $(window).width(); var viewportHeight = window.innerHeight ? window.innerHeight : $(window).height(); zoomimg.css({'left': (viewportWidth/2)-(zoomimg.width()/2), 'top' : (viewportHeight/2)-(zoomimg.height()/2)}); } else { return } }); }); You should put an ID 'zoomimg' on the tag for it to work, and overflow:hidden on the #container . Also ditch that display:table and display:table-cell they're useless now that we center with Javascript. Also, pressing the down arrow key will cause the container to scroll down, so you should use other keys, as the arrows are reserved by the browser for scrolling the viewport.
