[site]: crossvalidated
[post_id]: 625635
[parent_id]: 
[tags]: 
Process Modelling with LSTMs vs Probabilistic Programming

I am trying to model an aircraft’s turnaround process from the beginning (in-block) to the end (off-block). The goal is to gain transparency about the progress of the process / subprocesses and to predict the end time, i.e. when will the aircraft be ready for off-block? The process can be split into several sub-processes like unloading baggage, cabin cleaning, boarding etc. These sub-processes can be sequential (e.g., cleaning needs to be finished before boarding starts) while others can run in parallel. Some sub-processes are optional (e.g. the aircraft might not need fueling) but unfortunately, I don’t know in advance if they will take place. I thought this could be a nice task for probabilistic programming since prediction uncertainties can be propagated to the following sub-process by using probability distributions as input to the next model but online research brought me to “Predictive Business Process Monitoring with LSTM Neural Networks”, which also sounds promising and more straight forward to me. Is one of the approaches better suited to solve my problem than the other? If so, could you explain why I should prefer one over the other? Which are the most important advantages and disadvantages?
