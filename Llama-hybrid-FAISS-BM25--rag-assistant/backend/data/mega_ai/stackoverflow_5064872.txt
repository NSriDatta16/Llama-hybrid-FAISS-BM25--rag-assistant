[site]: stackoverflow
[post_id]: 5064872
[parent_id]: 
[tags]: 
JS causing infinite loop in Firefox

A script on my page is causing an infinite loop in FireFox. Here is the Javascript: var Cacaoweb = { version: "2.11", timerTasksInterval: 0.5, lasttimeclientrunning: null, isclientrunningHysteresisInterval: 30000, timeoutClientAlive: 2000, timeStart: (new Date()).getTime(), status: 'Unknown', myFunc: null, videowidth: 640, videoheight: 360, autoplay: true, /** * Lance le téléchargement de cacaoweb en fonction de la plateforme de l'utilisateur */ download: function() { var platform = "Windows"; if ( navigator.platform != null ) { if ( navigator.platform.indexOf( "Win32" ) != -1 ) { platform = "Windows"; } else if ( navigator.platform.indexOf( "Win64" ) != -1 ) { platform = "Windows"; } else if ( navigator.platform.indexOf( "Win" ) != -1 ) { platform = "Windows"; } else if ( navigator.platform.indexOf( "Linux" ) != -1 ) { platform = "Linux"; } else if ( navigator.platform.indexOf( "Mac" ) != -1 && navigator.platform.indexOf( "Intel" ) != -1 ) { platform = "Mac OSX Intel"; } else if ( navigator.platform.indexOf( "Mac" ) != -1 && navigator.platform.indexOf( "PPC" ) != -1 ) { platform = "Mac OSX PPC"; } else if ( navigator.platform.indexOf( "Mac" ) != -1 ) { platform = "Mac OSX" ; } else platform = navigator.platform; } var uri; if (platform == "Windows"){ uri = "http://www.sourceforge.net/projects/cacaoweb/files/cacaoweb.exe/download"; } else if (platform == "Mac OSX" || platform == "Mac OSX Intel") { uri = "http://www.sourceforge.net/projects/cacaoweb/files/cacaoweb.dmg/download"; } else if (platform == "Linux") { uri = "http://www.sourceforge.net/projects/cacaoweb/files/cacaoweb.linux/download"; } else { alert("cacaoweb is not available for your platform"); } setTimeout(function() { window.location.href = uri; }, 0 ); // timeout could be 500 in case of direct download to make the user at ease }, /** * Inclut le script 'filename' en utilisant l'id 'scriptname' * Supprime les précédents scripts insérés avec la même id 'scriptname' * * @param filename Nom du fichier JS à inclure * @param scriptname Id du script inclus */ includeScript: function(filename, scriptname){ var htmlDoc = document.getElementsByTagName('body').item(0); var scriptblock = document.getElementById(scriptname); if (scriptblock) { htmlDoc.removeChild(scriptblock); } var script = document.createElement("script"); script.id = scriptname; script.src = filename; script.language = 'javascript'; script.type = 'text/javascript'; htmlDoc.appendChild(script); }, /** * Permet de spécifier une fonction qui sera appelée régulièrement ou lorsque le status de cacaoweb change (On, Off ou Unknown) * La fonction doit prendre un argument (qui sera le statut de cacaoweb) * ATTENTION: ne marche qu'avec une fonction maximum */ subscribeStatusChange: function(myFunc) { this.myFunc = myFunc; }, unsubscribeStatusChange: function() { this.myFunc = null; }, /** * Met à jour le statut de cacaoweb. * On si cacaoweb tourne sur la machine * Off si cacaoweb ne tourne pas sur la machine * Unknown si le statut n'a pas encore été initialisé ou s'il n'a plus été mis à jour depuis un certain délai */ updateStatusVariable: function() { if ((new Date()).getTime() - this.lasttimeclientrunning this.isclientrunningHysteresisInterval) { var i = Math.floor(Math.random() * 1000000); this.lasttimeclientrunning = 0; this.includeScript('http://127.0.0.1:4001/isrunning?unique=' + i, 'isrunningscript'); } this.updateActions(); }, /** * Fonction appelée en callback de checkInstalled (par le client cacaoweb s'il est en route) */ callbackIsRunning: function() { Cacaoweb.lasttimeclientrunning = (new Date()).getTime(); this.updateActions(); }, playvideo: function(o, width, height) { var link = o.getAttribute("link"); var player = ' '; player += ' '; player += ' '; player += ' '; player += ' '; player += ' '; o.innerHTML = player; }, insertAllVideos: function() { var all = document.getElementsByTagName("cacao"); for (var i = 0; i '; } }, /** * On joue les vidéos de la page en attendant 2s pour voir si cacaoweb est en route, sinon on affiche une image de téléchargement */ checkandplay: function() { if (this.status == 'On') { this.insertAllVideos(); } else { var timeout = setTimeout("Cacaoweb.insertDownloadPlugin()", this.timeoutClientAlive); this.subscribeStatusChange(function (status) { if (status == "On") { clearTimeout(timeout); this.unsubscribeStatusChange(); this.insertAllVideos(); } }); } }} setInterval(function() { Cacaoweb.checkStatus(); }, Cacaoweb.timerTasksInterval * 1000); There is no issue in IE or Chrome. But for some reason function is infinitely looping in FF. So something in the function is causing it to loop in Firefox. I do not know what? Here is the page
