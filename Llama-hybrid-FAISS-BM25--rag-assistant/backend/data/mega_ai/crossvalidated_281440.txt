[site]: crossvalidated
[post_id]: 281440
[parent_id]: 
[tags]: 
Constrain multiple Regression for symmetric Stiffness

I want to do a 3-degree polynomial regression like $$y_i=a_0+\sum_{u=1}^{k} a_{u}x_{i,u}+\sum_{1\leq u \leq v \leq k} a_{u,v} x_{i,u}x_{i,v}+\sum_{1\leq u \leq v\leq w \leq k}a_{u,v,w}x_{i,u}x_{i,v}x_{i,w} +\varepsilon_i,$$ thus that in vector form I have $$ y_i=\hat{\mathbf{x}}_i^T\mathbf{\beta}+\varepsilon_i. $$ With $i$ being the observation number and $k$ being the dimension of $\mathbf{x}\in \mathbb{R}^k$ . I do this three times, as $\mathbf{y}$ has the same dimension as $\mathbf{x}$. This way I can calculate $$ \mathbf{y}_i=\underline{\mathbf{\beta}}^T\hat{\mathbf{x}}_i=f(\mathbf{x}) %\qquad \underline{\mathbf{\beta}}\in\mathbb{R}^{\frac{1}{6}\left((k+2)^3-k-2\right)\times k} . $$ The vector $\hat{\mathbf{x}}(\mathbf{x})$ could for example look like $$ \hat{\mathbf{x}}(\mathbf{x})= \begin{bmatrix} x_{1}^3&x_{1}^2x_{2}&...&x_1^2& x_1x_2&...&x_1&x_2&...&1 \end{bmatrix}^T $$ In my case the dimensions of the matrices are $$\underline{\mathbb{\beta}}\in \mathbb{R}^{20 \times 3},\qquad \mathbf{x}_i\in\mathbb{R}^{20\times 1}.$$ My Problem is that I have the additional constraint that the stiffness or derivative $\mathbf{K}=\frac{\delta \mathbf{y}}{\delta \mathbf{x}}$ must be symmetric as $$ \frac{\delta \mathbf{y}}{\delta \mathbf{x}}-\left(\frac{\delta \mathbf{y}}{\delta \mathbf{x}}\right)^T=0,\Leftrightarrow \underline{\mathbf{\beta}}^T\frac{\delta\hat{\mathbf{x}}}{\delta\mathbf{x}}-\frac{\delta\hat{\mathbf{x}}}{\delta\mathbf{x}}^T\underline{\mathbf{\beta}}=0. $$ From the example above the Jacobian $\frac{\delta\hat{\mathbf{x}}}{\delta\mathbf{x}}$ would look like $$ \frac{\delta\hat{\mathbf{x}}}{\delta\mathbf{x}}=\begin{bmatrix} 3x_{1}^2&2x_{1}x_{2}&...&2x_1& x_2&...&1&0&...&0 \\ &x_{1}^2&...&0& 1&...&1&0&...&0 \\ \vdots \end{bmatrix}^T. $$ Is there a way to include this constraint? I have already found the possibility of linear constraint regression, but I cannot think of a way to formulate my constraint in the form $\mathbf{C}\mathbf{\beta}=\mathbf{d}$. I am not from the machine learning field and appreciate any help or comments.
