[site]: stackoverflow
[post_id]: 1717976
[parent_id]: 
[tags]: 
Are there other languages besides D with static if?

I think D's static if is an interesting language feature. That prompts my question: Are there are other examples of compiled languages in which the compiler has a strong notion of the code and there are languages facilities to access them? For example, this code provides something similar to repr from Python: char[] repr(T)(T value) { static if (is(typeof(value.__repr__))) { // class T provides a "repr()" method return value.__repr__(); } else static if (is(T:string)) { return `"` ~ value ~ `"`; // ...other cases... } else { return toString(value); } } I think this is cool is because it allows a different and more general approach to what overloading does, which is kind of an inside out way to make code more dynamic, compared to features like this. For example, the compiler knows how many fields my class has, but there's no way for my code to access that information at compile time in most languages. CAVEAT: That last paragraph had opinions in it, but I just mean to provide some motivation and clarification for my question, not elicit controversy. I just want to find out if any other compiled languages have such features.
