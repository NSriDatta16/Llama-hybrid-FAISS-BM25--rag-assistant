[site]: datascience
[post_id]: 18061
[parent_id]: 17522
[tags]: 
In addition to what @Icyblade suggested by citing the source code, I'd like to add a few things. dataset_name is an option that tells slim how to read the TFRecords located in the dataset_dir folder. The default value imagenet means that the TFRecords have to have this format: train-00146-of-00168.tfrecord or validation-00003-of-00019.tfrecord . The value flowers means that slim expects the TFRecords to have the form flowers_train_00146-of-00168.tfrecord or flowers_validation_00003-of-00019.tfrecord . This peculiar way of formatting the tfrecords is defined here in the source code . Different sample datasets have different formatting rules, e.g. here you can see cifar10 . Moreover, dataset_split_name tells the converter how to name the TFRecords files. For the flowers dataset they are train and validation , for cifar10 they are train and test , etc. About checkpoint_exclude_scopes and trainable_scopes , to make a long story short, these commands tell the training algorithm to remove the final two layers of the network from the last checkpoint available (either passed by the checkpoint_path option or read from the folder specified in train_dir ), and make it retrain the CNN on them, but using the images you provide inside the TFRecords file. Thus, using these options means to perform a retrain -or, as the slim devs call it in the README, a fine-tuning from an existing checkpoint (link in the comments)- of a CNN on another set of images. To give you an hint about how to build your own TFRecord converter/creator, I'd suggest to base it on the download_and_convert_flowers.py script, since the input dataset is regular, with the images divided in categories, where each category is a single folder. Moreover, I'd extend it by adding the option to read input png images (the flowers pictures are only jpg, and thus the script doesn't need this conversion, but your future dataset may). Start by de-assembling it piece by piece and remove the hard-coded information related to the flowers dataset, to make it less specific.
