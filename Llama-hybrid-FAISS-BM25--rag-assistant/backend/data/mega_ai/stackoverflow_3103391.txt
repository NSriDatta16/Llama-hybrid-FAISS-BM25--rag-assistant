[site]: stackoverflow
[post_id]: 3103391
[parent_id]: 3103096
[tags]: 
Sounds like you might be interested in what I believe is called "function forwarding". It allows you to export a function from a DLL that is really implemented in a different DLL all togeher. Should be about the most efficient solution You won't need the calls to LoadLibrary() / GetProcAddress() When you import from your export dll, the loader stores the address of the real impmplementation in the import table, so its one call and one jmp Probably the easiest way to implement this is with something like #pragma comment(linker, "/export:ExportedFuncName=ActualDll.ActualFuncName") In case you're wondering, this is effectively the same as passing "/export:ExportedFuncName=ActualDll.ActualFuncName" on the linker command line. It's also possible to do this using exports section of a module definition (.DEF)file. See the bottom of here for details.
