[site]: crossvalidated
[post_id]: 220882
[parent_id]: 
[tags]: 
Ways to approximate multiple samples of same function in R

Example dataset (simplified): set.seed(42) t = seq(0,10,0.1) y = sapply(1:10,function(x){return(sin(t)+runif(101,min=-0.1,max=0.1))}) matplot(data.frame(y), pch=1, col=1) So I've got 10 (~3000 in my real case) sample records of the same function and I'd like to approximate that. Fortunately the y-values in my real case are evenly spaced as well. In fact it's a time series. My first idea was to take the mean like that: approximate = apply(y,1,mean) Which seems to work fine in the example and probably is sufficient for my purposes. However, I'm not sure it's the best way for my real case, since the sample isn't uniformly distributed at each point in time but biased. Also that bias varies over time. Therefore I thought a least squares-approximation might be best. I'm not sure though and haven't found an implementation for my purpose yet ( stats::nls was close but I understand that you need to provide the true function which I don't know). (Edit) The purpose of it all: afterwards I want to find out which samples deviate the most from the approximation (that I interpret as the 'ideal' time series). I'm interested in the deviation over the entire time series (by comparing the mean of each sample with the approximation's mean) and also in samples that contain outlier intervals.
