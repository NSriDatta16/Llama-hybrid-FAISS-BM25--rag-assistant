[site]: stackoverflow
[post_id]: 3268901
[parent_id]: 3268825
[tags]: 
It's perfectly legit. The " single argument " form of the string formatter is really a special case - for multiple items a tuple is normally used and that would lead to a more obvious example of why it's ok result = "%s limit 1" % (sql % (table,),) This ^ was originally written to encourage the questioner that supporting multiple-formats was a legitimate language feature but, as Nas Banov comments, it does read like I'm trying to explain how it works (not helped by screwing up the code). It doesn't build the string right to left like this suggests it might, but HAS to build it (be associative) left to right. The operator must take a string on the left and return one, but can take a non-string (a tuple) on the right. Since you can't use % on a pair of tuples it can't possibly work in reverse >>> "%s %f %s" % ( "%d", 0.1, "%d %d" ) % (1,2,3) '1 0.100000 2 3' It may, however, lead to complicated/messy code, so personally I would use it very sparingly. You could work your example like this: def get_sql(table, limit=True): sql = "select report_date from" strlimit = "" if limit: strlimit = "limit 1" return "%s %s"%(sql, strlimit)
