[site]: crossvalidated
[post_id]: 488583
[parent_id]: 
[tags]: 
What are the rules for evolving a partially connected neural network using a genetic algorithm?

I am working on a project where I need to implement the NEAT algorithm in python. after doing some research I came across an issue that I can't seem to find a solution for online, I hope this is the correct place to ask my question, if not then please refer me to where I can ask it. From my understanding, the neural networks used in NEAT are "Partially Connected Neural Networks" meaning that there are no layers but rather only nodes, and each node can connect to every other node. After trying to implement this process, I came across the issue of establishing by which rules should a new node be added and where, because there are no layers there is no definite solution I managed to come up with. One solution I encountered is to add nodes on existing connections, something like the following image: But following this approach would only lead to a chain of single connected nodes, i.e. this would never lead to something like: So to sum everything up, my question is, What are the rules for evolving a partially connected neural network using a genetic algorithm?
