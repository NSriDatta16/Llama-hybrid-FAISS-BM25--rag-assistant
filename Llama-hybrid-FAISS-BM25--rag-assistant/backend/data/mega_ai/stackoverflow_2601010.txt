[site]: stackoverflow
[post_id]: 2601010
[parent_id]: 
[tags]: 
UIPicker and send selected row data to UIView

I have written a UIPicker which is populated from a .plist. This part works fine. What I don't know how do is once the row has been selected is to display that underlying data in another UIView. The code in my .m file is: #import "airlinePickerViewController.h" @implementation airlinePickerViewController @synthesize picker; @synthesize airlines; @synthesize airline; @synthesize teleno; - (IBAction)butonPressed:(id)sender { NSInteger airRow = [picker selectedRowInComponent:kAirlineComponent]; NSInteger telRow = [picker selectedRowInComponent:kTelenoComponent]; NSString *air = [self.airline objectAtIndex:airRow]; NSString *tel = [self.teleno objectAtIndex:telRow]; NSString *title = [[NSString alloc] initWithFormat:@"You selected %@.", tel]; NSString *message = [[NSString alloc] initWithFormat:@"%@ is in %@", tel, air]; UIAlertView *alert = [[UIAlertView alloc] initWithTitle:title message:message delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil]; [alert show]; [alert release]; [title release]; [message release]; } - (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil { if (self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]) { // Initialization code } return self; } - (void)viewDidLoad { NSBundle *bundle = [NSBundle mainBundle]; NSString *plistPath = [bundle pathForResource:@"airlinedictionary" ofType:@"plist"]; NSDictionary *dictionary = [[NSDictionary alloc] initWithContentsOfFile:plistPath]; self.airlines = dictionary; [dictionary release]; NSArray *components = [self.airlines allKeys]; NSArray *sorted = [components sortedArrayUsingSelector:@selector(compare:)]; self.airline = sorted; NSString *selectedAirline = [self.airline objectAtIndex:0]; NSArray *array = [airlines objectForKey:selectedAirline]; self.teleno = array; } - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation { // Return YES for supported orientations return (interfaceOrientation == UIInterfaceOrientationPortrait); } - (void)didReceiveMemoryWarning { [super didReceiveMemoryWarning]; // Releases the view if it doesn't have a superview // Release anything that's not essential, such as cached data } - (void)dealloc { [picker release]; [airlines release]; [airline release]; [teleno release]; [super dealloc]; } #pragma mark - #pragma mark Picker Data Source Methods - (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView { return 1; } - (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component { if (component == kAirlineComponent) return [self.airline count]; return [self.teleno count]; } #pragma mark Picker Delegate Methods - (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component { if (component == kAirlineComponent) return [self.airline objectAtIndex:row]; return [self.teleno objectAtIndex:row]; } - (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component { if (component == kAirlineComponent) { NSString *selectedAirline = [self.airline objectAtIndex:row]; NSArray *array = [airlines objectForKey:selectedAirline]; self.teleno = array; [picker selectRow:0 inComponent:kTelenoComponent animated:YES]; [picker reloadComponent:kTelenoComponent]; } } @end Can anyone help me get to grips with how to complete this task. Many thanks Dereck
