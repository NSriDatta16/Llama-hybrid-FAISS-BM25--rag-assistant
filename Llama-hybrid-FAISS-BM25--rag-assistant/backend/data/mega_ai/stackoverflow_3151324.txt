[site]: stackoverflow
[post_id]: 3151324
[parent_id]: 
[tags]: 
Floated lists in a div - IE 7

I have some page elements which are meant to appear in a two column list. Excepteur sint occaecat cupidatat... Ut enim ad minim veniam... Lorem ipsum dolor sit amet... I'm using a jQuery to allow users to sort the order of boxes on the page. Some boxes are two columns wide, and some single columns (hence the classes). The CSS works beautifully in Firefox... #modules { width: 584px; } #modules li { list-style: none; float: left; overflow: hidden; } #modules li div { border: 1px solid #999; margin: 10px; padding: 10px; height: 120px; overflow: auto; width: 542px; clear: both; } #modules li div.single { width: 250px; clear: none; } #modules li.placeHolder div { border: 1px dotted #999; width: 250px; } ... but if I have a single box followed by a double-box in IE 7, the double box doesn't wrap to the next row so to speak. I have an older version that uses the elements to wrap two single items into one ,double items into a on their own, and (via PHP) where necessary single items into a between two double boxes... but hooking and un-hooking this via jQuery to allow users to drag and drop items around on the page fiddly. So, long story short: is there a fix for IE7 to get it to behave like FireFox? Kind regards, Lost Cause Dept. UPDATE: Thanks to having the idiocy of floating the lis and then worrying about the divs pointed out to me, I came up with the following: #modules { width: 600px; border: 1px solid #999; overflow: hidden; padding: 0; } #modules li { list-style: none; overflow: hidden; } #modules li div { border: 1px solid #999; margin: 10px 0 0 10px; padding: 10px; } #modules li.placeHolder div { border: 1px dotted #999; width: 290px; } #modules li.double { width:580px; clear:both; } #modules li.single { width:290px; float: left; } ... and ... Excepteur sint occaecat cupidatat... Ut enim ad minim veniam... Lorem ipsum dolor sit amet... Ut enim ad minim veniam... Lorem ipsum dolor sit amet... ... which handle it really neatly (I think). Makes it possible to have 1 long single item next to multiple shorter single items.
