[site]: crossvalidated
[post_id]: 180950
[parent_id]: 
[tags]: 
Game Data Mining & Machine Learning

I would like to learn how can I learn to set up a script that will learn to play a game, I'm thinking agar.io specifically. I believe to do this I basically must make the program mine the game for data, play the game, learn about the data that it has found, and then apply it to it's playing style. Now, how do I do that. agar.io is a (I believe html) game where you are what I will call a "blob." Players generally move their blob around the game space with the main goal of collecting mass. You can collect mass from littered other smaller blobs (inanimate, ~2 mass, no adverse effect), viruses (100 mass but they split your blob into smaller blobs), and other players. As your mass rises you become slower. However, you can not eat anything larger than yourself (and I believe you need to be larger by ~25%). Thus it is hard to chase down another player, you have two controls however which make this pvp chase possible, you can either split your cell, causing you to basically shoot half of yourself at them. Which of course requires you to be significantly larger than the other blob. You also have to option to eject mass at the other player, causing them to become slower and larger. Thus if they make mistakes when you do not you will be more likely to catch them and be able to eat them. This also has adverse consequences though, since you will be following them, they will be collecting any mass in the way and thus becoming larger while you're shrinking given the time shrink effect on mass. Thus, you must be able to bet they will make a mistake quickly, or they will be able to eat you instead. This game sounds really complex to me now that I describe it. There's a reason I provided the link to the website of the game . I'm a math major and want an actual applied understanding of machine learning. I picked this game specifically because it has a very leveled progression of complexity. Also, I believe that when people set these up normally it is in a stand alone environment so the computer can play it's self multiple times. I feel like an algorithm for this game would be useless in a stand alone setting. (Although it may be interesting to build it that way and see how much opponents playing non-optimally messes it up.) Since typing this post originally I have become very interested in not specifically the results of such a project, being able to play this game, but actually the differences in the way humans would choose to play the game verses the way that AI would choose to play the game given independent choices to maximize their own mass without regard to other players. Then equally interestingly, how these differences would interact in a human vs bot game.
