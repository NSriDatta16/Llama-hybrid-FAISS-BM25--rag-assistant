[site]: stackoverflow
[post_id]: 5354212
[parent_id]: 5352444
[tags]: 
Your algorithm is Omega(n^6) in the worst case, it is only O(n^3) in the average case. You are ignoring the possibility of hash table collisions. You can make it O(n^3 logn) by using a balanced tree instead, though. Also, this is in P, as there is a trivial polynomial time algorithm to check every possible combination of 6 numbers, so mention of knapsack etc is irrelevant. Like the 3-SUM problem, I believe the r-sum problem having an algorithm which is o(n^[r/2]), (note: smallOH and [x] = greatest integer >= x, e.g. [5/2] = 3) is still open. There is a brief mention of this in the 3-SUM page here , where there is a claim that the above bounds have been proven in restricted models of computation. So getting better than O(n^3) (i.e. o(n^3)) might be an open problem.
