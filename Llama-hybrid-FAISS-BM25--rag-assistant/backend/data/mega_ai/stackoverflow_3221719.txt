[site]: stackoverflow
[post_id]: 3221719
[parent_id]: 
[tags]: 
handling special characters when executing named buffers in vim

I've used vi for decades, and am now practicing using vim, expecting eventually to switch to it entirely. I have a number of questions, but I'll start with the one that troubles me most. Something I have long done in vi is to type a bottom-line command into the file I am editing, yank it to a named buffer (e.g., using the keystrokes "ayy ) and execute that buffer (using :@a^M ). This allows me to edit complicated commands till they work right, and to keep commands that I will use many times as I work in a file. (I have in my .exrc file a mapping that reduces this yank-and-execute to a single keystroke; but that isn't relevant to my question.) I find that in vim, I need a lot more ^V s than in vi. This means, on the one hand, that when I have some command-line in a file that I expect to use this way, I now need to keep it in two versions, one for vi and one for vim. Also, the requirement of the extra ^V s seems inelegant: evidently various special characters that are interpreted once when the named buffer is executed in vi are interpreted twice when its is executed in vim -- but why? As an example, a command of the form map =f :w^V|e foo^M (mapping the keystroke-sequence =f to write the current file and go to the file foo ) works this way in vi, but has to have the form map =f :w^V^V|e foo^V^M in vim. (Here in both commands, ^V is gotten by typing ^V^V, and ^M is gotten by typing ^V^M; so typing the first version involves typing three ^V s, and the second, seven.) To be exact: the first version does work in vim if one actually types it into the bottom line (with the indicated extra ^V s); but the latter is required in an executed named buffer. Any explanation? Anything I can set to fix this? ("compatible" doesn't seem to do it.) Any hope that it will be fixed in a future release? (The system I am on uses version 7.0.) (I should confess that I'm not a programmer; just a user who has become proficient in vi.)
