[site]: stackoverflow
[post_id]: 5025514
[parent_id]: 5025451
[tags]: 
I just recently did this for one of my apps and it turned out to be quite simple. Get ready to subclass UIView: I called my Mask View the catcher view and this is how the protocol looks: @interface CatcherView : UIView { UIView *viewBelow; } @property(nonatomic,retain)UIView *viewBelow; @end Here you are just subclassing UIView AND keeping a reference to the view bellow. On the implementation you need to fully implement at least 4 methods to pass the touches to the view, or views bellow, this is how the methods look: - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { NSLog(@"Touch Began"); [self.viewBelow touchesBegan:touches withEvent:event]; } - (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event { NSLog(@"Touch Moved"); [self.viewBelow touchesMoved:touches withEvent:event]; } - (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event { NSLog(@"Touch Ended"); [self.viewBelow touchesEnded:touches withEvent:event]; } - (void)touchesCancelled:(NSSet *)touches withEvent:(UIEvent *)event { NSLog(@"Touch Cancelled"); //Not necessary for my app but you just need to forward it to your view bellow. } Just remember to set the view or views that are bellow when you create the view; it is also very important to set the background color to clear, so it acts as a mask. THis is how that looks: CatcherView *catchView=[[CatcherView alloc] initWithFrame:[self.view bounds]]; catchView.backgroundColor=[UIColor clearColor]; catchView.viewBelow=myViewBellow; [self.view addSubview:catchView]; Hope it helps and comment if you need more info.
