[site]: stackoverflow
[post_id]: 930428
[parent_id]: 930406
[tags]: 
Any well-designed application could use any or all of those concepts. Language-specific books have a tendency to focus exclusively on language details (for good reason) and generally neglect basic design principles. Another important point is that delegates, generics, reflection, etc. all have their place, but they shouldn't be implemented in an application just "because". That can cause unnecessary complexity. All of that said, pick a project that interests you. Even better, something that you would actually like to use. Then, before even coding, think about how you should structure the application so that it is easy to modify later and add features. If you're putting all the code in the form/code-behind page, you're probably doing something wrong. Spend some time learning design patterns . These are "best practices" of organizing code that have developed over time. No need to reinvent the wheel. Hope this helps.
