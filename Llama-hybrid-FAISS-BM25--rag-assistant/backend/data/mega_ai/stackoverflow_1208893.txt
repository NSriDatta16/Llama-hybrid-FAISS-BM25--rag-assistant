[site]: stackoverflow
[post_id]: 1208893
[parent_id]: 1201942
[tags]: 
So I played around with this a bit based on the comments here. What I came up with is counting up a counter in a simple field. In my app I have code snippet entities with a Views property. When a snippet is viewed a method filters out (white list) just what should hopefully be browsers: public bool LogSnippetView(string snippetId, string ipAddress, string userAgent) { if (string.IsNullOrEmpty(userAgent)) return false; userAgent = userAgent.ToLower(); if (!(userAgent.Contains("mozilla") || !userAgent.StartsWith("safari") || !userAgent.StartsWith("blackberry") || !userAgent.StartsWith("t-mobile") || !userAgent.StartsWith("htc") || !userAgent.StartsWith("opera"))) return false; this.Context.LogSnippetClick(snippetId, IpAddress); } The stored procedure then uses a separate table to temporarily hold the latest views which store the snippet Id, entered date and ip address. Each view is logged and when a new view comes in it's checked to see if the same IP address has accessed this snippet within the last 2 minutes. if so nothing is logged. If it's a new view the view is logged (again SnippetId, IP, Entered) and the actual Views field is updated on the Snippets table. If it's not a new view the table is cleaned up with any views logged that are older than 4 minutes. This should result in a minmal number of entries in the View log table at any time. Here's the stored proc: ALTER PROCEDURE [dbo].[LogSnippetClick] -- Add the parameters for the stored procedure here @SnippetId AS VARCHAR(MAX), @IpAddress AS VARCHAR(MAX) AS BEGIN SET NOCOUNT ON; -- check if don't allow updating if this ip address has already -- clicked on this snippet in the last 2 minutes select Id from SnippetClicks WHERE snippetId = @SnippetId AND ipaddress = @IpAddress AND DATEDIFF(minute, Entered, GETDATE() ) 4 END END This seems to work fairly well. As others mentioned this isn't perfect but it looks like it's good enough in initial testing.
