[site]: stackoverflow
[post_id]: 2508713
[parent_id]: 2508697
[tags]: 
You can't delete a file from the end users machine - without using something like an ActiveX. That would tie your users to Internet Explorer though. A better solution might be to set the applicable caching directives so that the browser doesn't store the file in its cache, that way it won't actually be written to disk (I'm assuming here that the file is one that is being pulled down by the browser as part of viewing/loading the page). For example: Response.Cache.SetCacheability(HttpCacheability.NoCache); Response.Cache.SetExpires(DateTime.Now.Subtract(new TimeSpan(1, 0, 0, 0))); Response.Cache.SetNoStore(); If you really wanted to do this, and it wasn't as simple as preventing a file from being cached then as I said, using an ActiveX would be pretty much the only option. If you were going to develop an ActiveX control to do this, I'd strongly recommend you review MSDNs documentation on Per-Site ActiveX Controls . Deploying an ActiveX control, even within an intranet, that allowed files to be deleted from the end users PC from any domain could only be considered reckless at best, negligent at worst.
