[site]: stackoverflow
[post_id]: 5035846
[parent_id]: 
[tags]: 
How does a typical medium to large web application "grow up" infrastructure-wise?

The skinny : When Facebook / Twitter / Youtube (whatever) went from basic idea in software to... bigger (maybe 100,000 users?), how did they grow? Is there a "best practices" growth path for medium sized web applications? The real question : When specifying or bidding on a medium sized web application project, what are the biggies? In this case in question, we will use a PHP framework, but it seems that these would mostly generalize to any language. So the programmers for the core application are (to me) the most obvious part. We get the user management, user interface, and special classes made to handle the application. However this seems to me to be less than half of the real project. Ultimately, with good growth, infrastructure and meta-UI issues will be your main focus, right? 1) Infrastructure: cloud application space, data storage, db synchronization for multi-datacenter situations. 2) Language and Cultural issues: Making an app seem "likeable" or at least useable in the major "culture markets" 3) data indexing issues 4) API / interoperability issues (both embedded apps ala facebook and external access for data both for end users and to major players like search engines, etc.) ...so, I am so sure I am missing about half of them, and I have little idea how they prioritize. The accepted answer here is a pretty good starting point for the answer I seek.
