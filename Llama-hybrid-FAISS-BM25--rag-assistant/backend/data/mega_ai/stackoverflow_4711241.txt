[site]: stackoverflow
[post_id]: 4711241
[parent_id]: 
[tags]: 
Broken links when doing fragment caching in Rails

Suppose there is a blog with posts, comments and users which can comment. Users have SEO-friendly URLs such as http://localhost:3000/users/john (this can be easily done by using permalink_fu). The model uses touch to simplify caching: class Post has_many :comments end class Comment belongs_to :post, :touch=>true end And the view code would be something like this: said: Now suppose John changes his nick to Johnny -- his URL changes to http://localhost:3000/users/johnny . Because of doing fragment caching on posts and comments, John's comments will point to John's wrong URL unless the fragment is expired. It can be possible to manually touch or expire all posts that contain comments by John in this example, but in a complex application this would require very complex queries and seems very error-prone. What's the best practice here? Should I use non-SEO-friendly URLs such as /users/13 instead of /users/john ? Or maybe keep a list of old URLs until the cache is expired? No solution looks good to me. EDIT: Please note this is just a simplified example -- it's definitely very simple to query posts and touch them in this case. But a complex app implies many relationships among objects which makes it hard to track every object that has a reference to a user. I've researched a bit on this -- Facebook only allows setting your username once, so this problem doesn't exist.
