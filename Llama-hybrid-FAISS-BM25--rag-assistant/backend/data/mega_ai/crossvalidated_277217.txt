[site]: crossvalidated
[post_id]: 277217
[parent_id]: 277216
[tags]: 
I have created neural networks to play tic-tac-toe before. Instead of having just 1 output, you should have 9 outputs. Each output representing the probability that one of the 9 squares on the board is a good move. This turns the game more into a classification problem. Example (playing as O): Given board: X - X O - O X - - The output could be: 0.1 0.5 0.2 0.7 0.6 0.1 0.3 0.4 0.4 Filter out the taken spots: - 0.5 - - 0.6 - - 0.4 0.4 So your next move is the spot with p=0.6! This is far better than chosing a random near spot when the outputted spot is already taken. While training, you have to make outputs look like this: 0 0 0 0 1 0 0 0 0 So there must only be one 1 in the output array!
