[site]: stackoverflow
[post_id]: 4547346
[parent_id]: 4543377
[tags]: 
There may be even more efficient ways to store your data and to iterate over it. Questions: What datatype are you storing, list of list ... of int ? What range of the nested list does your innermost loop O(n^2) portion typically operate over? When you do the putitem, getitem how many values are you retrieving in a single put or get? Ideas: You could try compressing your json (and base64 for cut and pasting). 'myjson'.encode('zlib').encode('base64') Using a divide and conquer (map reduce) as @Robert suggested. You may be able to use a dictionary with tuples for keys, this may be fewer lookups then A[j][d][d1][d2] in your inner loop. It would also allow you to sparsly populate your structure. You would need to track and know your bounds of what data you loaded in another way. A[j][d][d1][d2] becomes D[(j,d,d1,d2)] or D[j,d,d1,d2]
