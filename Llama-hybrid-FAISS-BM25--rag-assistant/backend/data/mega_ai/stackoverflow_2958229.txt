[site]: stackoverflow
[post_id]: 2958229
[parent_id]: 2957755
[tags]: 
Well, the image is skewed because the dimensions are wrong, but that's obvious. You're specifying the image size and then spitting out a list of pixels, but with an incorrect number of pixels per line somewhere. More specifically, note that the image wraps around almost exactly once: In other words, skew per line * height of the image = width of the image . Since the image is square, that means you're generating an extra pixel per line--a good old off-by-one error. The obvious place for this to happen is when you're generating the coordinates to iterate on. Let's try a small set and see what it gives us: > length $ argandPlane (-2.5) (-2) 1.5 2 10 10 121 > 10 ^ 2 100 > 11 ^ 2 121 And so. I suspect the error is because you're calculating the increment as real distance divided by pixel size, which generates the correct number of intervals , but an extra point. Consider the interval from 0.0 to 1.0. Using your calculation with a width of 4, we get: > let x0 = 0.0 > let x1 = 1.0 > let width = 4.0 > let dx = (x1 - x0) / width > dx 0.25 > let xs = [x0, x0 + dx .. x1] > xs [0.0, 0.25, 0.5, 0.75, 1.0] > length xs 5 So, to get the correct number of points, just reduce the size by 1 when generating the the coordinates.
