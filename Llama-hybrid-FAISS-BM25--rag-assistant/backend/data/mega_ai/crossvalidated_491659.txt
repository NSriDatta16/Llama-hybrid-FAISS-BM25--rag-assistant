[site]: crossvalidated
[post_id]: 491659
[parent_id]: 491540
[tags]: 
Contrary to some of the answers in this thread, I would like to give a derivation of the formula which I like. Suppose we have a random variable that can take either of two classes $C_1$ or $C_2$ . We are interested in finding the probability of $C_k$ conditioned on some observation $x$ , i.e., we want to estimate $p(C_k\vert x)$ . To model this, consider the following: Using Baye's Theorem we have that $$ \begin{aligned} p(C_1\vert x) &= \frac{p(C_1)p(x\vert C_1)}{p(C_1)p(x\vert C_1) + p(C_2)p(x\vert C_2)}\\ &= \frac{p(C_1)p(x\vert C_1)}{p(C_1)p(x\vert C_1) + p(C_2)p(x\vert C_2)} \frac{(p(C_1)p(x\vert C_1))^{-1}}{(p(C_1)p(x\vert C_1))^{-1}}\\ &= \frac{1}{1 + \frac{p(C_2)p(x\vert C_2)}{p(C_1)p(x\vert C_1)}}\\ &= \frac{1}{1 + \exp\left(\log\left(\frac{p(C_2)p(x\vert C_2)}{p(C_1)p(x\vert C_1)}\right)\right)}\\ &= \frac{1}{1 + \exp\left(-\log\left(\frac{p(C_1)p(x\vert C_1)}{p(C_2)p(x\vert C_2)}\right)\right)}\\ \end{aligned} $$ Denoting $z(x)=\log\left(\frac{p(C_1)p(x\vert C_1)}{p(C_2)p(x\vert C_2)}\right)$ , we arrive at the formula: $$ p(C_1\vert x) = \frac{1}{1 + \exp(-z(x))} $$ In a logistic regression, we are assuming the existence of a vector $\boldsymbol\beta\in\mathbb{R}^M$ of weights such that $\boldsymbol\beta^T\phi(x) = \log\left(\frac{p(C_1)p(x\vert C_1)}{p(C_2)p(x\vert C_2)}\right)$ , for some function $\phi:\mathbb{R}\to\mathbb{R}^M$ known as the basis function. That is, assuming that the latter is true, then the conditional probability $p(C_1\vert x)$ is given by $$ p(C_1\vert x) = \frac{1}{1 + \exp(-\boldsymbol\beta^T\phi(x))} $$ On a personal note, I believe that it is a bold claim to state that $\boldsymbol\beta^T\phi(x) = \log\left(\frac{p(C_1)p(x\vert C_1)}{p(C_2)p(x\vert C_2)}\right)$ . I do not see how it is trivial to argue that this has to be the case. In fact, by modeling the factor $z(x)$ disregarding the underlying distributions is known as a discriminative model . If we want to model explicitly the terms for $z(x)$ we would have a generative model .
