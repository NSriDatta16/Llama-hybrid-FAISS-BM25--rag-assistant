[site]: crossvalidated
[post_id]: 221188
[parent_id]: 221158
[tags]: 
As @user20160 and @shrey pointed out you should address this as regression problem and use cross validation to obtain a model that also works on unseen data. The core reason is that your score is a conceptually continuous value and not just a regular class (though your score is limited to integer values, but you can always do a simple round after your prediction). Here's a minimal example on how to train an svm model with caret (currently using svmLinear as model type, but you could change that to svmRadial etc. if you want) using repeated cross validation: # dummy demo data d You can now visualize the relation between predicted and observed (=real) values using a simple scatterplot. This essentially is the counterpart of what you aimed for with using a confusion matrix. In the example I use results stored during repeated cross validation, but you could also use a hold-out test set the same way: plot(model$pred$pred~model$pred$obs, ylab = 'predicted', xlab = 'observed') abline(0,1, col=2) This plot gives you information about how errors happen in your prediction. Together with the usual error measures (e.g. RMSE, which is computed automatically with caret) you could decide if the model already is what you wanted to have/decide on the best suited model from multiple, different models: > print(model) Support Vector Machines with Linear Kernel 150 samples 3 predictors No pre-processing Resampling: Cross-Validated (10 fold, repeated 10 times) Summary of sample sizes: 135, 136, 136, 135, 134, 134, ... Resampling results across tuning parameters: C RMSE Rsquared RMSE SD Rsquared SD 0.00412 142 0.882 21.7 0.0386 0.0123 110 0.9 19.4 0.0327 0.037 91.4 0.925 15.2 0.0257 0.111 80.6 0.938 13.4 0.0225 0.333 77.6 0.941 13.6 0.0223 1 77 0.942 13.8 0.0225 3 76.6 0.942 14 0.0225 9 76.6 0.942 14.1 0.0225 27 76.5 0.942 14.1 0.0225 81 76.5 0.942 14.1 0.0225 243 76.5 0.942 14.1 0.0225 RMSE was used to select the optimal model using the smallest value. The final value used for the model was C = 27.
