[site]: stackoverflow
[post_id]: 2065832
[parent_id]: 
[tags]: 
Remote Management and Data Capture: WCF, SQL Sync, SyncFramework, BITS or something else?

We have a few thousand Windows XP client machines on various customer sites that are all running some interactive software which is instrumented to collect anonymous usage data. The client machines use some old, old, old client-server software that uploads the data to an internet-based server, pushes configuration info back down to them and can ask the clients to do some tasks like reboot. In essence, we have the following features (in pseudo C#/IDL): interface IClientToServer { void LogUsage(clientMachineName, anonymousUserID, Pair[] usageData, startTime, endTime); void LogError(clientMachineName, errorMessage); void LogUptime(clientMachineName, bootTime); DateTime SyncClock(clientMachineName, timezone); } interface IServerToClient { void UpdateSettings(Pair[] settings); Bitmap GetScreenshot(); void Reboot(); string Execute(cmdLine); } ..but this code has reached its end of life (fragile, unmaintainable due to lack of skills). We are about to embark on a greenfields, start-with-a-clean-slate project to rework this software using modern tools, SDKs and frameworks. We have some functional requirements, which are: .NET based environment due to available engineering resources. Firewall-friendly - we can only talk 'out' from client sites to our internet-based server over HTTP/80 and internet access is flaky with relatively poor client bandwidth. VPNs are unpopular with our customer base. We are rather overwhelmed by the sheer number of technologies that we could leverage here: .NET Remoting, .NET Web Services, WCF, Sync Framework, SQL Pub-Sub, SQL Sync, BITS, etc. We could use some insight into what technology choices would best suit the design here. Is there any 'natural' fit?
