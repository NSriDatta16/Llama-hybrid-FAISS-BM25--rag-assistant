[site]: stackoverflow
[post_id]: 5222608
[parent_id]: 
[tags]: 
efficient join needed against a virtual table used multiple times in a subquery

I am trying to run a query similar to this one: SELECT s.custno, s.prodno, IF(daycode = 1, (SELECT avg(sell) FROM sales ss JOIN (SELECT DISTINCT `prodno` FROM `familycode` WHERE prodfamily = 101) f2 ON f2.prodno = ss.prodno WHERE ss.CUSTNO = 800 AND ss.weekno = s.weekno - 1), (SELECT avg(sell) FROM sales ss JOIN (SELECT DISTINCT `prodno` FROM `familycode` WHERE prodfam = 101) f3 ON f3.prodno = ss.prodno WHERE ss.CUSTNO = 800 AND ss.weekno = s.weekno)) AS weekavg FROM sales s JOIN product p ON p.prodno = s.prodno JOIN (SELECT DISTINCT `prodno` FROM `familycode` WHERE prodfamily = 101) f ON f.prodno = s.prodno WHERE s.CUSTNO = 800 ORDER BY ardate8n ASC, s.CUSTNO, s.prodno In this query I would like the get the products week average based on the daycode param for a product family. A product belongs to a product family. If daycode = 1 I want to get for the same product family the average of the previous week. else I want to get average on the current week for the same product family. As you see f , f2 , f3 are similar virtual tables, that helps us to link against existing products based on product family. How could this query be rewritten so to not compute f2 , f3 tables, which is a very slow process.
