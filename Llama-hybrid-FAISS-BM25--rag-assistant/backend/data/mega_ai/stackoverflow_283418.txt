[site]: stackoverflow
[post_id]: 283418
[parent_id]: 283297
[tags]: 
After the function is called, you will want the caller to be responsible for the memory of the string (and especially for de-allocating it). Unless you want to use static variables, but there be dragons! The best way to do this cleanly is to have the caller do the allocation of the memory in the first place: void foo() { char result[64]; GetString(result, sizeof(result)); puts(result); } and then GetString should look like this: int GetString(char * dst, size_t len) { std::stringstream ss; ss Passing the maximum buffer length and using strncpy() will avoid accidentally overwriting the buffer.
