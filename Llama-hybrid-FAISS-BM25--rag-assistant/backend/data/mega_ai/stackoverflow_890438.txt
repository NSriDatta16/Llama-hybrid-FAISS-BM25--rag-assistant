[site]: stackoverflow
[post_id]: 890438
[parent_id]: 890357
[tags]: 
If you're working in .NET, then according to the MS docs http://msdn.microsoft.com/en-us/library/f7fta44c.aspx SortedDictionary and SortedList both have O(log n ) for retrieval SortedDictionary has O(log n ) for insert and delete operations, whereas SortedList has O( n ). The two differ by memory usage and speed of insertion/removal. SortedList uses less memory than SortedDictionary. If the SortedList is populated all at once from sorted data, it's faster than SortedDictionary. So it depends on the situation as to which is really the best for you. Also, your argument for the Linked List is not really valid as it might be O(1) for the insert, but you have to traverse the list to find the insertion point, so it's really not.
