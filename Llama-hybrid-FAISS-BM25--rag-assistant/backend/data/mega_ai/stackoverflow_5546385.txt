[site]: stackoverflow
[post_id]: 5546385
[parent_id]: 4848221
[tags]: 
var example = new MyConstructor(); under method 1: example.constructor === MyConstructor; under method 2: typeof(example.constructor) === 'undefined'; The prototype object that comes with a function has a property constructor that points back to the function. If you assign to the proprties of that object, you keep the constructor property. If you overwrite the prototype property with a new object, you lose the constructor property. The performance difference is minimal. Because constructor is so fragile, you can't really trust it, so I don't bother to preserve it.
