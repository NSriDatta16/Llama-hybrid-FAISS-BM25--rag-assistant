[site]: stackoverflow
[post_id]: 3801433
[parent_id]: 3799061
[tags]: 
change the testloader to reuse the same test db every time and apply migrations when needed I don't see anything wrong in writing your own test runner that merely truncates the tables instead of dropping and creating the database. This is djangoic in that it solves a specific problem. There is a ticket open for allowing grouping of test cases into test suites. Once it is fixed you should be able to group your test cases into suites for easier management. You can also inspect the patch attached to the ticket and see if it will suit your purpose. As Ned suggested you can use an in memory database. This depends to a large extent on your data model and queries being portable across databases. If you haven't already try to reorganize your test cases. In my experience not all test classes need to sub class django.test.TestCase . Find out those test classes that can do with sub classing unittest.TestCase . This will speed up things a little bit. Reorganize fixtures. Move common fixtures to a single file and load it before the test run rather than inside each test class (using fixtures = [...] ).
