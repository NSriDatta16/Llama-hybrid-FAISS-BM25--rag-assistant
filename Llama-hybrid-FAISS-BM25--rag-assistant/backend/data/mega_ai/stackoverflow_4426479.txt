[site]: stackoverflow
[post_id]: 4426479
[parent_id]: 4426332
[tags]: 
If the project is well designed and the developers placed great value on common design patterns, then I'd suggest: Have a look at the GoF and J2EE patterns (skip, if you already have experience with those) Study the architecture design documents (should give you a good view on where to expect which functionality) Study the design documents of the major "subsystems" Bottom up may work as well, but only, if the the programmers used good names (packages, classes, methods,...). If your code is .. say .. coded by cowboys (and you see no chance to run away), you could use a profiler to record typical use cases. Like the startup procedure, a login process, HMI interaction and study the profiler output. Then you'll see the flow and might get a feeling on whats going on. Code coverage tools (emma) could help as well: write a test case for a simple use case, run it with emma and study the results (they should, what classes and methods have been in use). Finally: good luck.
