[site]: stackoverflow
[post_id]: 2259635
[parent_id]: 379722
[tags]: 
F# has many enormous benefits over C# in the context of mathematical programs: F# interactive sessions let you run code on-the-fly to obtain results immediately and even visualize them , without having to build and execute a complete application. F# supports some features that can provide massive performance improvements in the context of mathematics. Most notably, the combination of inline and higher-order functions allow mathematical code to be elegantly factored without adversely affecting performance. C# cannot express this. F# supports some features that make it possible to implement mathematical concepts far more naturally than can be obtained in C#. For example, tail calls make it much easier to implement recurrence relations simply and reliably. C# cannot express this either. Mathematical problems often require the use of more sophisticated data structures and algorithms. Expressing complicated solutions is vastly easier with F# compared to C#. If you would like a case study, I converted an implementation of QR decomposition over System.Double from 2kLOC of C#. The F# was only 100 lines of code, runs over 10Ã— faster and is generalized over the type of number so it works not only on float32 , float and System.Numerics.Complex but can even be applied to symbolic matrices to obtain symbolic results! FWIW, I write books on this subject as well as commercial software.
