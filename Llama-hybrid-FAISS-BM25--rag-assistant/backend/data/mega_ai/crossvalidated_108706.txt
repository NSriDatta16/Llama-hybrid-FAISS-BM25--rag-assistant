[site]: crossvalidated
[post_id]: 108706
[parent_id]: 
[tags]: 
Kernel selection using SVM for keyword frequency classification

I have data in Weka .arff multiple-class training and testing data representing daily word frequencies in RSS feeds as follows: @relation _dm_19040_031925_06112013_1383748052958_Boolean-weka.filters.unsupervised.attribute.NumericToNominal-R193 @attribute Keyword_us_invest_are_Frequency numeric @attribute Keyword_syrian_forc_kill_Frequency numeric @attribute Keyword_europ_debt_crisi_Frequency numeric @attribute Keyword_bank_of_america_Frequency numeric @attribute Keyword_exclus_us_fugit_Frequency numeric @attribute Keyword_debt_rate_cut_Frequency numeric @attribute Keyword_on_debt_crisi_Frequency numeric @attribute Keyword_market_fall_on_Frequency numeric @attribute Keyword_russian_hockey_team_Frequency numeric @attribute RSSFeedCategoryDescription {'Business and finance and economics','News and current affairs','Science and nature and technology',Sport,'Entertainment and arts'} @data 0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'Business and finance and economics' 0,3,0,4,0,0,2,1,0,1,2,0,0,0,0,0,1,0,0,1,3,2,0,0,0,0,0,0,0,25,0,0,0,0,1,0,0,2,0,0,1,1,2,1,0,0,0,0,2,1,0,2,0,2,1,2,4,0,2,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'Business and finance and economics' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,3,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'Business and finance and economics' 0,0,2,0,0,7,0,2,1,1,0,0,1,0,0,1,2,0,0,3,4,0,0,0,1,2,0,0,0,2,0,0,0,1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,'Business and finance and economics' There are up to 1500 rows of data and each row can be up to 192 columns long depending upon use of ngrams and frequency thresholds, stemming or stop words. I am required to use Weka's LibSVM as a classifier upon this data which has five distinct classes, where the aim is to ideally produce comparable results to other classifiers in the 70 - 80% range. Can anyone tell me which SVM kernel is best to use here? I am not concerned with maximising accuracy here amongst the classifiers, just a ball-point figure will suffice.
