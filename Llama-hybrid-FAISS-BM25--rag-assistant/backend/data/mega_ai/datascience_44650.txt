[site]: datascience
[post_id]: 44650
[parent_id]: 44637
[tags]: 
You can indeed use a simple neural network for this task, flatten your matrix and feed the matrix entries as inputs to your network. However, I would suggest using a convolutional neural network, these have had very good performance on image data, which is essentially a matrix. This class of NN is powerful because it uses a neighborhood around each point as an input and thus significantly reduces the number of inputs to the network, which in turn reduces the model complexity. I would also suggest using some matrix transformations to get better features. For example you can perform eigenvector decomposition of the matrix to ensure that the features you are feeding to your network are orthogonal. This may increase performance of your classifier. If you give us some examples of your dataset we can help you build a network to start testing ideas.
