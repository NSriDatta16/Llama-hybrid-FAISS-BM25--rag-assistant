[site]: stackoverflow
[post_id]: 4376132
[parent_id]: 4368296
[tags]: 
This is half a question and perhaps half an answer (the question's in here as I am not yet allowed to write comments...). Okay, here we go: Name servers: ns.mistral.co.uk 195.184.229.229 Is this what an entry in the file you're parsing looks like? What will follow immediately afterwards - more domain names and IP addresses? And will there be blank lines in between? Anyway, I think your problem may (in part?) be related to your reading the file line by line. Once you get to the IP address line, the info about 'Name servers:' having been present will be gone. Multiline matching will not help if you're looking at your file line by line. Thus I'd recommend switching to paragraph mode: { local $/ = ''; # one paragraph instead of one line constitutes a record while ($record = ) { # $record will now contain all consecutive lines that were NOT separated # by blank lines; once there are >= 1 blank lines $record will have a # new value # do stuff, e.g. pattern matching } } But then you said I have tried an example of Stackoverflow where ; will take the next line but this didn't work for me and I assume it is because we have already read the contents of this into $domaininfo. so maybe you've already tried what I have just suggested? An alternative would be to just add another variable ($indicator or whatever) which you'll set to 1 once 'Name servers:' has been read, and as long as it's equal to 1 all following lines will be treated as containing the data you need. Whether this is feasible, however, depends on you always knowing what else your data file contains. I hope something in here has been helpful to you. If there are any questions, please ask :)
