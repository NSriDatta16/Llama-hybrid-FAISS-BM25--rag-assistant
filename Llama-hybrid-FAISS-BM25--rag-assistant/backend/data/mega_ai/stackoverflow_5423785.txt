[site]: stackoverflow
[post_id]: 5423785
[parent_id]: 
[tags]: 
competitive programming and input

I'm practicing for a competitive tournament that will be in my faculty in a few weeks, and thus I encountered a small problem. The competition restricted the use of java.io. * (except IOException...) I need to read (from stdin) input, each test case is separated with a blank line. end of test cases - when EOF is found. I need to find a way to get data from IO, without using java.io so far, I got this (which works) - it returns a string containing each test case, and null when I'm out of test cases. public static String getInput() throws IOException { int curr=0; int prev=0; StringBuilder sb = new StringBuilder(); while (true) { curr = System.in.read(); if (curr == -1) { return null; //end of data } if (curr == '\r') { curr = System.in.read(); } if (curr == prev && curr == '\n') { return sb.toString(); //end of test case } //else: sb = sb.append((char)curr); prev = curr; } } performance (for the IO) is neglected, so I don't care I read only one byte every time. Question: Is there a more elegant (shorter and faster to code) way to achieve the same thing?
