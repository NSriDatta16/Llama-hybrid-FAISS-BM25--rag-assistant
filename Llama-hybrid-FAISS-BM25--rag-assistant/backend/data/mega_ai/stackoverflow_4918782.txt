[site]: stackoverflow
[post_id]: 4918782
[parent_id]: 
[tags]: 
Performance of a semi transparent Window over multiple screens when moving a rectangle in realtime

I've a small app which show a semi transparent window over the whole desktop. The window isn't shown in the taskbar and has not titlebar On this window the user can drag a rectangle with the mouse. When the mouse button is released, a screenshot of the given area is taken. (Something like the snipping tool in windows 7) In order to achieve this, the window contains a RectangleGeometry. Now in the CompositionTarget.Rendering event the rectangle where set to the location where the mouse was when the mouse down occured, also it is sized to cover the area to the current mouse position. This works really fine as long as only one monitor is connected. When a second monitor with a higher resolution is connected the performance decreases dramatically. The resolution of the laptop display is 1600x1200 The display which is connected has 1900x1200 Also when connecting the display it changed the primary screen to the new one Heres the window definition the geometry definition Here a portion of the code which moves the rectangle System.Windows.Rect location = new System.Windows.Rect(this.DragStart.X, this.DragStart.Y, width, height); this.Inner.Rect = rect; Does anyone have an idea on how to improve the performance ? Is it "normal" that the performance decreases so much on higher resolutions with multiple displays ?
