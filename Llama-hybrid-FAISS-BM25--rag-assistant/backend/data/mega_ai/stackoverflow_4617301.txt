[site]: stackoverflow
[post_id]: 4617301
[parent_id]: 4610490
[tags]: 
I'd start with this answer and in stead of putting the output result in a string, write the buffer to a TFileStream. WinInet is really nice, as it respects the proxy settings the user set on Windows (so you don't have to put a lot of work into how to make that configurable with Indy). Edit: I refactored that answer a bit to download binary files. Since it uses WinInet you can use it for both ftp and http download (yes, I checked that it did). You can extend this to use FtpFindFirstFile / InternetFindNextFile and read a whole bunch of files. unit DownloadBinaryFileUnit; interface uses Classes, WinInet; type TWinInet = class strict protected class procedure ReadBinaryFileResponse(const UrlHandle: HINTERNET; const LocalFileName: string); static; class procedure ReadResponse(const UrlHandle: HINTERNET; const ContentStream: TStream); public class procedure DownloadBinaryFile(const UserAgent, Url, LocalFileName: string); overload; static; end; implementation uses SysUtils, Variants, Windows, IOUtils; class procedure TWinInet.DownloadBinaryFile(const UserAgent, Url, LocalFileName: string); var InternetHandle: HINTERNET; UrlHandle: HINTERNET; begin InternetHandle := InternetOpen(PChar(UserAgent), INTERNET_OPEN_TYPE_PRECONFIG, nil, nil, 0); try UrlHandle := InternetOpenUrl(InternetHandle, PChar(Url), nil, 0, 0, 0); try ReadBinaryFileResponse(UrlHandle, LocalFileName); finally InternetCloseHandle(UrlHandle); end; finally InternetCloseHandle(InternetHandle); end; end; class procedure TWinInet.ReadBinaryFileResponse(const UrlHandle: HINTERNET; const LocalFileName: string); var ContentStream: TFileStream; begin ContentStream := TFile.Create(LocalFileName); try ReadResponse(UrlHandle, ContentStream); finally ContentStream.Free; end; end; class procedure TWinInet.ReadResponse(const UrlHandle: HINTERNET; const ContentStream: TStream); var Buffer: array[0..1023] of Byte; BytesRead: Cardinal; begin repeat InternetReadFile(UrlHandle, @Buffer, SizeOf(Buffer), BytesRead); ContentStream.Write(Buffer, BytesRead); until BytesRead = 0; end; end. --jeroen
