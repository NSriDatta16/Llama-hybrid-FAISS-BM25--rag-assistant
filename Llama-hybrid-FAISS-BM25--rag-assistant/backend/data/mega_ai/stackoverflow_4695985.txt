[site]: stackoverflow
[post_id]: 4695985
[parent_id]: 2833207
[tags]: 
I would recommend something similar to your first idea, although it leverages an already existing interface in Prism. While I'm not sure the exact method signatures available to you in NLog, you may want to consider using Prism's ILoggerFacade interface, which is typically defined in your Bootstrapper (see the StockTraderRI application for an example of how this is set up). Typically, this acts as a pass through to Microsoft's Composite Logging interface , but there's no reason why you can't use this to hook into your own logger. A few reasons to consider this approach: It uses the already existing ILoggerFacade interface in the Prism framework, which other developers will be familiar with If you later decide to go to a different logging framework, you just have to replace the object behind the ILoggerFacade implementation The other approach would be to do as you suggest: create an interface that defines a service to NLog (or expose an existing NLog interface) in your infrastructure DLL and register the implementation of that service in your bootstrapper. You can then you your dependency injection container to get a reference to the logger service in your modules. Note, however, that this really just reproduces what the ILoggerFacade interface already gives you.
