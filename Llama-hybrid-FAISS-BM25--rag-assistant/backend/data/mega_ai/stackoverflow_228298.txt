[site]: stackoverflow
[post_id]: 228298
[parent_id]: 228256
[tags]: 
What language are you developing in? That makes a huge difference in what is available to you if you want to do data-mining on the user agent string. PHP has " browser.php " which parses the user agent into the OS, Browser, and Browser version: http://www.geekpedia.com/code47_Detect-operating-system-from-user-agent-string.html (warning: Win7 is Windows NT 6.1 not Windows NT 7.0 ) Javascript has the Navigator object which has lots of details about the user's system https://developer.mozilla.org/en/window.navigator .NET has the HttpBrowserCapabilities object which can be used to determine Win32 or Win16, as well as useful capabilities of the browser http://msdn.microsoft.com/en-us/library/system.web.httprequest.browser(VS.80).aspx Zytrax.com also has a good database of User Agents for various different browsers on different systems if you just want the raw user-agents http://www.zytrax.com/tech/web/browser_ids.htm Nescio's response provides a good list. The second link under PHP in my list also contains basically the same information which is simple enough that you should be able to translate it to any language. Keep in mind that using the user agent for anything is rife with problems. Unless you're willing to dedicate a portion of your development time to monitoring user agents visiting your site and performing constant maintenance, you should try to avoid doing it entirely. No matter what your use-case is for needing to detect the OS, every OS in every platform can have dramatic changes in very short time-frames so it is important to be mindful of this and careful about how and why you do OS detection. To elaborate on the risks: On the desktop, a new OS version can come out every 6 weeks (Chrome OS), 6 months (Ubuntu), 1 year (Mac OS), or 2-3 years (Windows). Then you also need to account for OSes released for phones, tablets, gaming consoles, clocks , etc which can have much more frequent release cycles and unpredictable changes in market share. Just look at how BlackBerry, Palm OS, Web OS, iOS, Android, Windows Mobile, and Windows Phone have changed market share in just the last few years to name a few. Unless the operating system is a dependency of your site, like if you're creating a targeted "download" page for an app (which in itself can be rife with problems), it is almost always better to use feature detection , which will allow you to future-proof your development without having to constantly maintain browser or OS detection code.
