[site]: stackoverflow
[post_id]: 2373273
[parent_id]: 2373207
[tags]: 
Yes, anything you create with new must be deleted with delete , and anything created with new[] must be deleted with delete[] , at some point. There are some things I'd point out in your code though: Prefer std::vector<> over using new[] and delete[]. It'll do the memory management for you. Also have a look at smart pointers like auto_ptr, shared_ptr and in C++0x unique_ptr for automatic memory management. These help save you from forgetting a delete and causing a memory leak. If you can, don't use new/new[]/delete/delete[] at all! If you have to new and delete something, it's a very good idea to new in a class constructor, and delete in a class destructor. When exceptions are thrown, objects go out of scope etc., their destructors are called automatically, so this helps prevent memory leaks. It's called RAII. Having beginStorage delete its parameter is potentially a bad idea. It could crash if you call the function with a pointer not created with new , because you can't delete any pointer. It'd be better if main() created a PicLib on the stack rather than using new and delete, and for beginStorage to take a reference and not delete anything.
