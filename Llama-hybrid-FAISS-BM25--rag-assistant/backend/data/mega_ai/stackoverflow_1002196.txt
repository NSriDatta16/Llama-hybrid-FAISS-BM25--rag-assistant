[site]: stackoverflow
[post_id]: 1002196
[parent_id]: 
[tags]: 
How to Sort on a GridView using ObjectDataSource with TemplateFields

Background: I am working with a GridView and an ObjectDataSource. I am implementing Paging and Sorting. On the ObjectDataSource: objectDataSource.TypeName = value; objectDataSource.SelectMethod = "Select"; objectDataSource.SelectCountMethod = "SelectCount"; objectDataSource.SortParameterName = "sortExpression"; objectDataSource.EnablePaging = true; On the GridView: gridView.AllowPaging = true; gridView.AllowSorting = true; gridView.DataSource = objectDataSource; To get paging and sorting to work, I set "EnableSortingAndPagingCallbacks" to True. Before, I was getting a "System.Web.HttpException: The GridView fired event Sorting which wasn't handled." and this fixes it. If I use only BoundFields in my GridView, this is great and works fine. However, if I used TemplateFields, I get a "NotSupportedException: Callbacks are not supported on TemplateField because some controls cannot update properly in a callback. Turn callbacks off on GridView." Which, makes sense. I just need to know how to make sorting work, without using EnableSortingAndPagingCallbacks. If EnableSortingAndPagingCallbacks = True: Paging Works Sorting Works BoundFields Work TemplateFields do Not Work If EnableSortingAndPagingCallbacks = False: Paging Works Sorting does Not Work BoundFields Work TemplateFields Work My Question: How do I go about getting Paging, Sorting, and TemplateFields to work, all at the same time? Clarification on the implementation: Using an ObjectDataSource with a GridView requires implementing a method called Select that provides a sort expression, the number of rows to return, and the start row: public IEnumerable Select(string sortExpression, int maximumRows, int startRowIndex) { string oql = "select County order by {" + sortExpression + "}" ; var counties = QueryProvider.ExecuteQuery(oql).Cast (); var page = counties.Skip(startRowIndex).Take(maximumRows); var rows = page.Select( county => new CountyAndStateGridRow { CountyName = county.Name, StateName = county.State.Name, }); return rows; } The specific SortExpression is defined in the aspx/ascx: This is supposed to be passed in and call the Select method on the ObjectDataSource when the column is clicked, but it does not seem to work if EnableSortingAndPagingCallbacks = true, and instead I get the exception about the Sorting event not being defined.
