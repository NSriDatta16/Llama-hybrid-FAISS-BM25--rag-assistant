[site]: stackoverflow
[post_id]: 5214704
[parent_id]: 5214670
[tags]: 
It's going to depend on the implementation. I'm not incredibly familiar with JAVA, but it seems that all of those operations are traversal operations (get lowest element, get highest element, get next higher or next lower). If the Tree is implemented as a Self-Balancing Binary Search Tree like an AVL Tree , or any other sort of a balanced-tree structure, you're going to be looking at Average-Case and Worst-Case O(log n) time for each of the operations, and a best case of O(1).
