[site]: stackoverflow
[post_id]: 1474893
[parent_id]: 784359
[tags]: 
I'm using the DataAnnotations attributes in combination with a MVC model binder to do my validation and its pretty awesome. Since I treat User input as Command View Models its the cleanest way to keep domain clean from outside concerns. http://bradwilson.typepad.com/blog/2009/04/dataannotations-and-aspnet-mvc.html This also allows me to take advantage of AutoForm by LosTechies.com: http://www.lostechies.com/blogs/hex/archive/2009/06/17/opinionated-input-builders-part-8-the-auto-form.aspx And I expect the client side validation tools in MVC 2, VS 2010 to take advantage of these attributes as well. So I'm whipping out user input view models, commands, at a furious pace right now and tying them into not only the AutoForm functionality but my own custom UI templates to get AutoGrid and AutoOutput from these attributes as well. Nothing is better than saying: Html.AutoForm(Model); Or Html.AutoGrid(Model.Products); And getting validation and html generation in a very DRY and orthogonal way. My controllers are light, my domain pristine, and my time is unoccupied by writing the same if( string.IsNullOrEmpty() ) method on every object with a FirstName property. For me the approach was not as "philosophical" as others have written about. I'm trying to be very pragmatic about MVC development and I get a ton of bang for the buck out of these bits.
