[site]: stackoverflow
[post_id]: 1959777
[parent_id]: 
[tags]: 
how to use omp barrier on a while loop with no equal number of iterations for threads

I'm trying to implement the listranking problem (known also by shortcutting) with omp to have the sums prefixes of the array W. I don't know if i use correctly the flush pragma.. And i have a warning when compiling "barrier region may not be closely nested inside of work-sharing, critical, ordered, master or explicit task region" #include #include #include #include main(int argc, char *argv[]) { int Q[9]={1,2,3,4,5,6,7,8,0}; int W[8]={1,2,3,4,5,6,7,8}; int i,j=6,id; printf("Before:\n"); for(j=0;j =0; i--) { id= omp_get_thread_num(); while((Q[i] !=0)&& (Q[Q[i]] !=0)) { #pragma omp flush(W) W[i]=W[i]+W[Q[i]]; #pragma omp flush(W) printf("Am %d \t W[%d]= %d",id,i,W[i]); #pragma omp barrier #pragma omp flush(Q) Q[i]=Q[Q[i]]; #pragma omp flush(Q) printf("Am %d \n Q[%d]= %d",id,i,Q[i]); }; } printf("Result:\n"); for(j=0; j } PLEAAAAAAAAAAAASE HELP!
