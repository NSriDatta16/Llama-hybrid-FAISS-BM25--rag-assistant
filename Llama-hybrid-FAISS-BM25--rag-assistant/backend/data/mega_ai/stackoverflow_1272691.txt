[site]: stackoverflow
[post_id]: 1272691
[parent_id]: 1272406
[tags]: 
It seems a very apples-and-oranges comparison if you have to compare "Ruby on Rails" (a specific framework) and "Java" (a general purpose programming language) without considering specific Java frameworks. For example, Grails is pretty analogous to Rails in terms of the concepts and terminology used; yet you are specifically saying this is not a question about e.g. Grails, just about Java and Ruby. But it appears you are not just referring to Ruby the language, as elsewhere you refer to Ruby on Rails specifically. In terms of development speed I would say that there is not much to choose between Ruby on Rails and Grails, as both allow similarly rapid development. Update: You say "The Java frameworks and tools are free", as if the others are not. But Groovy and Grails are available under open source licenses and are free downloads, too, AFAIK -so also free as in beer/speech. Groovy could also be regarded as a framework on top of Java, stretching a point, as you can freely call any Java code from Groovy. Another interesting platform is Django, which works on Jython, which runs on the JVM. Django definitely offers high productivity and rapid development, and Django on Jython offers that running on the JVM. Would you also discount this because it's based on Python rather than Java? The biggest productivity leverage that both Grails and Django have over Java-only frameworks is that they are based on dynamic languages. If you insist on sticking to Java + Java language frameworks such as available from SpringSource, then you lose a lot of the agility that Python and Groovy provide, though Spring has nice frameworks too if you want to go down that route.
