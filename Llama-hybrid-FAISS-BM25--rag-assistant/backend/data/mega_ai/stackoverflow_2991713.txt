[site]: stackoverflow
[post_id]: 2991713
[parent_id]: 2991462
[tags]: 
VS2005 does not recognize any DLL to compile anything, and I doubt mingw does. When your application shall use a DLL, you need to tell VS2005 what functions are provided by the DLL. Load Time Binding The entry points are defined in the EXPORT directory of the DLL. The content of the EXPORT directory can be defined with the DEF file, while compiling the DLL. Theses exports can also defined using the #pragma __declspec(dllexport) directive. When you compile the DLL the linker will also generate a *.LIB file for the consuming application. This LIB is called import library. The signatures of the exported functions must be provided by function prototypes, usually in a *.h file. When you compile your application with load time binding, you include the *.h file in your source code and add the import library to the project settings. (not the *.DLL) When the O/S loads your application, the static code in the import library will load the DLL, read the EXPORT directory and fix all stubs to access the exported functions (and other symbols). Dynamic Binding You can omit the import library and load the DLL with your code using LoadLibrayy at the time that's appropriate. You need to define the pointers to the DLL entrypoints by yourself and must intialize theses pointers before calling GetProcAddress the actual functions.
