[site]: datascience
[post_id]: 124225
[parent_id]: 
[tags]: 
PlotNeuralNet plot interpretation

I am new to machine learning, I know how to build a simple neural network, but I don't know how to visualize my model accurately. PlotNeuralNet is really an amazing LaTeX package, however, I don't quite understand the notations of the examples. Taking this plot as an example: If we look at convolution layer 1 (conv1), what do the two 64 s mean? What about I ? To be specific, what does thicknesses of the layers mean? What about their sizes? If I have a simple GCN regressor built by PyTorch Geometric like the following: class GCN(torch.nn.Module): def __init__(self, hidden_size=32, num_params=3): super(GCN, self).__init__() self.conv1 = GCNConv(num_node_features, hidden_size) self.conv2 = GCNConv(hidden_size, hidden_size) self.conv3 = GCNConv(hidden_size, hidden_size) self.linear = Linear(hidden_size, num_params) def forward(self, x, edge_index, batch, return_embeddings=False): # 1. Obtain node embeddings x = self.conv1(x, edge_index) x = x.relu() x = self.conv2(x, edge_index) x = x.relu() x = self.conv3(x, edge_index) # Readout layer embeddings = global_mean_pool(x, batch) # Apply a final classifier x = F.dropout(embeddings, p=0.5, training=self.training) out = self.linear(x) if return_embeddings: return out, embeddings else: return out Then how do I correspond the dimensions of inputs and outputs of each layer to the notations shown in the sample plot?
