[site]: stackoverflow
[post_id]: 3689644
[parent_id]: 3689626
[tags]: 
Are you sure about that . at the front of the regex? I wonder if that's supposed to be a caret ^ which is counterpart to $ : it anchors the regex so the entire string must match the regex. You could add spaces to the regex, but a more elegant solution would be to trim it first. Trimming a string removes whitespace from the beginning and end. Either of these will work: // Trim value before matching against regex. return jQuery.trim(value).match(new RegExp("^" + param + "$")); // Allow spaces at beginning or end with " *" (space + asterisk). return value.match(new RegExp("^ *" + param + " *$")); Also, while we're at it you could make this a bit more robust by adding parentheses around param . // Add parentheses for robustness. return jQuery.trim(value).match(new RegExp("^(?:" + param + ")$")); That way your new regex will work even if param is, say, this|that . You'd want to match ^(this|that)$ rather than ^this|that$ , since the latter would be equivalent to the incorrect (^this)|(that$) .
