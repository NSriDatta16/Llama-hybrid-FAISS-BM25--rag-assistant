[site]: stackoverflow
[post_id]: 4453258
[parent_id]: 4453207
[tags]: 
An INDEX(a,b) uses less space than two indexes INDEX(a) and INDEX(b), because each index consists of (a part of) that column and the primary key. But read the note below about the functional difference between these indices. Correct. A UNIQUE KEY makes that no 2 rows have the same values for the columns in that key. A UNIQUE INDEX is also an INDEX and can be used for searching. A special example of a UNIQUE KEY is the PRIMARY KEY. Indexes do take up space on the disk, depending on your Storage Engine. If your application is write-heavy (like a logging table), sometimes it might be better to not have an index. Most tables are probably read-heavy though. From a logical point of view, if it's not critical there are no duplicates, don't put the index. Edit: elaboration on pst's comment: If you have INDEX(A) , INDEX(B) and INDEX(A,B) , your INDEX(A) is redundant. Drop it But INDEX(A,B) does not cover queries that only search on B, you need an INDEX(B) for that. You can argument that INDEX(A) and INDEX(B) together can use MySQL's INDEX MERGE to form the INDEX(A,B) . This leaves you the choice between INDEX(A,B) and INDEX(B) INDEX(A) and INDEX(B) Solution 2 will take less disk-space, that is true. But read this Very Nice MySQLPerformanceBlog article about INDEX MERGE, which comes to this conclusion: As a summary: Use multi column indexes is typically best idea if you use AND between such columns in where clause. Index merge does helps performance but it is far from performance of combined index in this case. In case you're using OR between columns - single column indexes are required for index merge to work and combined indexes can't be used for such queries.
