[site]: stackoverflow
[post_id]: 4547888
[parent_id]: 4547809
[tags]: 
Getopt::Long library is a standard Perl way to process command line options. Something like this will work. Not tested - caveat emptor! Please note that since your PHP parameters are a mix between command line options AND some unidentified variables, I have designed the first example so that ALL the possible options should be stored in %args hash (e.g. your program should use $args{procStartTime} instead of $procStartTime ). This allowed me to make it very short and generic. If this is hard to read/understand, I also have a second example that's more straightforward but less generic use Getopt::Long; my @php_arg_order = qw(a h procStartTime i p reqlogfile resplogfile un pw execDelay s); my %args = map {$_ => ""} @php_arg_order; $args{procStartTime} = "something"; $args{reqlogfile} = "a.log"; # More defaults for variables NOT passed in via command line. # Populate them all in %args as above. # Now load actual command line parameters. GetOptions(\%args, map { "$_=s" } @php_arg_order) or die "Unknown parameter!\n"; system(join(" ", "php", "loadAgent_curl.php",map { $args{$_} } @php_arg_order}, "&")); A second, less advanced but more direct option is: use Getopt::Long; my %args = (); # Now load actual command line parameters. GetOptions(\%args, "NUM_AGENTS|a=s" ,"HOST_NAME|h=s" ,"USER_NAME|un=s" # ... the rest of options # The "XXX|x" notaion allows using alias "-x" parameter # but stores in $args{XXX} instead for better readability ) or die "Unknown parameter!\n"; system("php loadAgent_curl.php $args{NUM_AGENTS} $args{HOST_NAME} $procStartTime $i $args{TARGET_PAGE} $reqlogfile $resplogfile $args{USER_NAME} $args{USER_PASS} $execDelay $args{COMMON_SID} &");
