[site]: stackoverflow
[post_id]: 459151
[parent_id]: 457605
[tags]: 
Just to add to what others have already said about using Stopwatch and measuring averages. Make sure you call your method before measuring. Otherwise you will measure the time needed to JIT compile the code as well. That may skew your numbers significantly. Also, make sure you measure release mode code as optimizations are turned off by default for debug builds. Tuning debug code is pointless imho. And make sure you're measuring what you actually want to measure. When optimizations kick in, the compiler/JIT compiler may rearrange code or remove it entirely, so you may end up measuring something a little different than intended. At least take a look at the generated code to make sure code has not been stripped. Depending on what you're trying to measure keep in mind, that a real system will stress the runtime differently than a typical test application. Some performance problems are related to e.g. how objects are garbage collected. These problems will typically not show up in a simple test application. Actually, the best advise is to measure real systems with real data as sandbox tests may turn out to be highly inaccurate.
