[site]: stackoverflow
[post_id]: 3358266
[parent_id]: 3351056
[tags]: 
What you're wanting to do is to simulate the call stack so you can pass a constructed va_list to foo(). This is rather specific to the compiler ( and warning, there are differences between even 32- and 64-bit compilers ). The following code is for ENTERTAINMENT PURPOSES ONLY!!! as (if it even works on your system) it is prone to breakage. With it, I use a flat memory buffer and the populate it with a count and a bunch of character strings. You could fill it as appropriate with pointers to your strings and hand them down. It does seem to work on my system, Windows 7 w/ Visual Studio 2008, for 32-bit applications only. * BAD IDEA CODE FOLLOWS!!! * #define PSEUDOSTACKSIZE ( sizeof(int) + 999 * sizeof(const char*) ) #pragma pack( push,1 ) union PSEUDOSTACK { int count; char data[PSEUDOSTACKSIZE]; }; #pragma pack( pop ) void foo( int count, va_list args ) { for ( int i = 0; i (p) = "ThisIsABadIdea"; } bar( barData ); I'll now go hang my head in shame for thinking of such an idea.
