[site]: stackoverflow
[post_id]: 1577399
[parent_id]: 1571412
[tags]: 
On point 1 (automating deployment): It's possible to deploy SSIS packages from the command line using dtutil.exe . The following example would deploy the local file c:\test.dtsx to MSDB storage on server1 with the name test_package : dtutil.exe /FILE C:\test.dtsx /dests server1 /COPY SQL;test_package It will do any combination of import/export for all the various SSIS storage options, if you can work out the combination of parameters to use. This may not be relevant to you, but what this won't do (that the wizard will) is copy configuration files; you'd need a separate batch step for that. On points 2 and 3 (source control of SQL Agent): As others have said, SQL Agent Jobs and schedules can be scripted as T-SQL (in Management Studio, right-click the Job and select Script job to... ), held in source control, and deployed like any other T-SQL script. Our DB source control tree is set up with one folder per production server containing one subfolder per user database plus an extra subfolder called _config which contains scripts for server-level objects such as logins, linked servers and SQL Agent Jobs. (It's not really relevant to your question but we store SSIS packages in their own tree, since they can be applied to multiple servers) We don't use TFS, so I can't comment on the specifics of getting the scripts into it.
