[site]: stackoverflow
[post_id]: 2402152
[parent_id]: 2401789
[tags]: 
Well... let's see. In my opinion you are testing three different things here (sorry for the "Java AOP jargon"): the features implemented by the interceptors (i.e. the methods that implement the functions activated at the cutpoints) the coverage of the filters (i.e. whether the intended cutpoints are activated correctly or not) the interaction between the cutpoints and the interceptors (with the side effects) You are unit testing (strictly speaking) if you can handle these three layers separatedly. You can actually unit test the first; you can use a coverage tool and some skeleton crew application with mock objects to test the second; but the third is not exactly unit testing, so you may have to setup a test environment, design an end-to-end test and write some scripts to input data in your application and gather the results (if it was a web app you could use Selenium, for example).
