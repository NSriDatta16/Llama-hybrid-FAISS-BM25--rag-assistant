[site]: crossvalidated
[post_id]: 477290
[parent_id]: 476226
[tags]: 
(1) the uncertainty in the probability estimates of the transition matrix I fitted to my data and (2) the uncertainty I simulate above due to small sample size. (1) I believe markovchainFit assumes that the parameters of estimated transition matrix follows normal distribution. Because the returned confidence intervals match the values of mean +- 1.96 * SE . Where 1.96 is the critical value for normal distribution at 95% confidence level. # upper CI provided by the model B$upperEndpointMatrix # cloudy rain sunny #cloudy 0.67698 0.60005 0.52126 #rain 1.00000 0.49190 0.36706 #sunny 0.56847 0.41684 0.78315 # calculated as for normal distribution B $estimate@transitionMatrix + 1.96 * B$ standardError # cloudy rain sunny #cloudy 0.67698 0.60006 0.52126 #rain 1.04182 0.49191 0.36707 #sunny 0.56847 0.41684 0.78316 EDIT As you pointed out, to sample individual entries of the transition matrix independently from normal distribution is problematic as row sums can be larger than one. To stochastically generate a transition matrix, we can use bootstrap method provided in markovchainFit . B (2) The uncertainty due to small sample size could be viewed as binomial distribution with small sample size n . In your example, the expected distribution for "sunny" at step 10 with 5 observation is B(n=5, p=0.30408) / 5 . W0 * (B$estimate ^ 10) # prob of sunny at step 10 # cloudy rain sunny # 0.42746 0.26846 0.30408 The mean of B(n, p)/n is p , and the variance is p(1-p)/n . As n becomes larger, the variance reduces. So, to simulate with both (1) and (2) uncertainties, we may first sample a transition matrix from bootstrapping normal distribution with mean and SE provided by the model . And followed by your method for random Markov chain sampling. for(j in 1:10000){ LL 1] = 1 #mcWeather2@transitionMatrix[mcWeather2@transitionMatrix $bootStrapSamples[[sample(length(B$ bootStrapSamples), 1)]] LL[[i]]
