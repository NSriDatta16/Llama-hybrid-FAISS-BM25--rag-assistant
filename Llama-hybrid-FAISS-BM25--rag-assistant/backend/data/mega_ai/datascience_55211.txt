[site]: datascience
[post_id]: 55211
[parent_id]: 
[tags]: 
Place a marker on a plot

I want to place a Call Marker on a plot. Call should be "buy" whenever the smaller moving average (21) crosses over longer moving average (34) AND the Call should be "sell" whenever smaller moving average crosses under longer moving average. I have a column average price. I have calculated the rolling mean for 21 and 34 days using the rolling() function and plotted the line plot of all three columns: average price, sma_21 and sma_34 using matplotlib. I want to place a marker on the plot. If the smaller moving average (21) crosses over longer moving average (34) I need to place this maker "^" AND if smaller moving average crosses under longer moving average I need to place this maker "v". averageprice = [ 2352.6, 2410.26, 2443.31, 2525.78, 2506.58, 2530.69, 2530.49, 2545.01, 2605.4, 2593, 2577.65, 2554.74, 2549.69, 2552.85, 2568.84, 2577.2, 2693.18, 2624.95, 2543.44, 2513.28, 2487.48, 2464.89, 2469.41, 2427.94, 2402.96, 2430.5, 2427.14, 2412.24, 2403.02, 2388.78, 2357.33, 2345.89, 2342.52, 2361.01, 2368.46, 2366.9, 2354.42, 2348.75, 2343.49, 2426.54, 2478.13, 2453.34, 2449.5, 2396.18, 2402.63 ] avg_p = df['Average Price'] sma21 = avg_p.rolling(window = 21).mean() sma34 = avg_p.rolling(window = 34).mean() avg_p.plot() x = df.index f = sma21 g = sma34 plt.plot(x, f) plt.plot(x, g) idx = np.argwhere(np.diff(np.sign(f - g))).flatten() plt.plot(x[idx], f[idx], '^') plt.show() I used this code to get the intersection point and place the marker idx = np.argwhere(np.diff(np.sign(f - g))).flatten() and got a plot like this: I need to get markers that look something like this:
