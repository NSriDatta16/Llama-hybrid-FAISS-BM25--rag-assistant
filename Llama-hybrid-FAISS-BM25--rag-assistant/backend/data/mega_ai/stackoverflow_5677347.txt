[site]: stackoverflow
[post_id]: 5677347
[parent_id]: 
[tags]: 
Is there a better way to do C style error handling?

I'm trying to learn C by writing a simple parser / compiler. So far its been a very enlightening experience, however coming from a strong background in C# I'm having some problems adjusting - in particular to the lack of exceptions. Now I've read Cleaner, more elegant, and harder to recognize and I agree with every word in that article; In my C# code I avoid throwing exceptions whenever possible, however now that I'm faced with a world where I can't throw exceptions my error handling is completely swamping the otherwise clean and easy-to-read logic of my code. At the moment I'm writing code which needs to fail fast if there is a problem, and it also potentially deeply nested - I've settled on a error handling pattern whereby "Get" functions return NULL on an error, and other functions return -1 on failure. In both cases the function that fails calls NS_SetError() and so all the calling function needs to do is to clean up and immediately return on a failure. My issue is that the number of if (Action() statements that I have is doing my head in - it's very repetitive and completely obscures the underlying logic. I've ended up creating myself a simple macro to try and improve the situation, for example: #define NOT_ERROR(X) if ((X) str, "+") == 0) { NOT_ERROR(NS_Add()); } else if (strcmp(current->str, "-") == 0) { NOT_ERROR(NS_Subtract()); } else { NS_SetError("Expected: operator"); return -1; } return 0; } Each of the functions NS_Term , NS_Add and NS_Subtract do a NS_SetError() and return -1 in the case of an error - its better , but it still feels like I'm abusing macros and doesn't allow for any cleanup (some functions, in particular Get functions that return a pointer, are more complex and require clean-up code to be run). Overall it just feels like I'm missing something - despite the fact that error handling in this way is supposedly easier to recognize, In many of my functions I'm really struggling to identify whether or not errors are being handled correctly: Some functions return NULL on an error Some functions return on an error Some functions never produce an error My functions do a NS_SetError() , but many other functions don't. Is there a better way that I can structure my functions, or does everyone else also have this problem? Also is having Get functions (that return a pointer to an object) return NULL on an error a good idea, or is it just confusing my error handling?
