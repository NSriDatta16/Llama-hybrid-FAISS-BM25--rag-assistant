[site]: stackoverflow
[post_id]: 3208999
[parent_id]: 3208955
[tags]: 
In the naive case, this doesn't seem like a very difficult algorithm. Do you know if the input size will get large/how large? My initial attempt: Try to move from left to right. First pick the block with the leftmost edge that exists on the origin line. Climb to its top. Find all blocks with a left edge between the current point and the upper right point of the current block. Of that set, pick the closest (but check for edge cases, pun not intended). If the set is empty, start working your way down the right side of the block, looking for other blocks you may intercept. Basically this is just how you'd trace it with your eye. You can do some simple optimization by keeping sorted lists and then searching the lists rather than finding sets and digging around. For example, you might keep 4 sorted lists of the blocks, each sorted by the x or y coordinate of one of the sides. If you have many, many blocks, you could consider using a multi-dimensional data structure to further organize the information.
