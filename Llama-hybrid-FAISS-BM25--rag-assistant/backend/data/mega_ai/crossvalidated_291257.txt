[site]: crossvalidated
[post_id]: 291257
[parent_id]: 291174
[tags]: 
Putting aside the inconsistency in your code and output... I don't think your problem, as I understand it, is actually anything to do with the time series nature of the problem. The results from auto.arima and from lm are pretty similar with regard to the relationship of titles_live to churn (about -0.05, with a standard error about a third the size of the estimate indicating it's quite a way from zero). And the estimated coefficient of toptitles_new is small compared to its standard error in both cases. You can interpret the coefficients of auto.arima with xreg output similarly to output from lm - this is by design and if you search the web and in particular Rob Hyndman's excellent Hyndsight blog you will find various explanations of his design choices. So, I don't think there is any "weird" relationship to explain here. There is good evidence that titles_live is negatively related to churn even when controlling for toptitles_new ; and there isn't good evidence of a relationship between toptitles_new and churn, once controlling for titles_live . In other words, the correlation of -0.3 you are seeing between topttitles_new and churn in your first use of cor() is either pure noise (which is what I suspect), or perhaps topttitles_new is correlated with titles_live and is serving as a proxy for that; an effect which disappears in the correctly specified model with both explanatory variables in it. There is less churn (whatever that is) when you have more "live titles" (whatever that means); but having more "new top titles" (whatever that means) doesn't help reduce churn (or at least, there is no evidence here that it does).
