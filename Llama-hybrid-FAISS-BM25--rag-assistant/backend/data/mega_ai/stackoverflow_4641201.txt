[site]: stackoverflow
[post_id]: 4641201
[parent_id]: 
[tags]: 
I'm having issues inputing a name if applicable

I have a function here that upon completing a single round, if your score is higher than either a default score entry or a newly placed high score then it will swap its data with your data and push everything else down. removing the last entry from the list. currently this is just one exchange and for functions sake I'm going to hard code it and then refactor it later. My main problem is that when I set up a text input view to capture the players name execution continues immediately without the players input and crashes the game. I commented out the line that sets the text because I have a default value in place just in case any attempt that I try to make fails. How can I get Execution to wait for a moment while input is taken? Would I have to set up a delegate method? If so I'm still a bit confused by delegates. I could set it up to work but I don't understand it, so I wouldn't be able to do any other special custom tasks with it. I've worked on it for a while and got no further... -(void)saveData:(ScoreKeep *)stats{ NSMutableDictionary *swap = [[NSMutableDictionary alloc]init];//used for swaping entries NSString *filePath = [self pathOfFile]; NSLog(@"Writing to %@", filePath); if ([[NSFileManager defaultManager]fileExistsAtPath:filePath]) { NSLog(@"Loading previous dictionary to save..."); dataDictionary = [NSMutableDictionary dictionaryWithContentsOfFile:filePath]; if ([dataDictionary objectForKey:@"1"]) { NSMutableDictionary *highScore = [dataDictionary objectForKey:@"1"]; if ([stats.score intValue] > [[highScore objectForKey:@"SCORE"] intValue]) { NSLog(@"You Win! score: %@ highscore: %@", stats.score,[NSNumber numberWithInt:[[highScore objectForKey:@"SCORE"] intValue]] ); stats = [[ScoreKeep alloc] initWithNibName:@"Scorekeep" bundle:nil]; NSLog(@"Setting up name entry"); [self.view addSubview:stats.view]; //New view is added so that the player can input data(Assume it is complete); //stats.nameTag = setName.nameTag;//This line is executed before the new view is dismissed causing an error to occur [stats setupDictionary]; // It just goes down hill from here if the previous line is uncommented [dataDictionary setObject:stats.sComponents forKey:@"1"]; }else { NSLog(@"You Lose: %@ highscore: %@", stats.score,[NSNumber numberWithInt:[[highScore objectForKey:@"SCORE"] intValue]] ); } NSLog(@"Got first place entry"); }else { NSLog(@"Initilizing Score"); } }else{ NSLog(@"Creating new dictionary to save..."); dataDictionary = [[NSMutableDictionary alloc]init]; } [dataDictionary writeToFile:filePath atomically:YES]; } Help would greatly be appreciated. If more information is needed I'd be happy to provide. by the way ScoreKeep is an object that contains a dictionary and a function to create a dictionary such that it can set any values I need and package them into sComponents(the dictionary to be entered into the main savefile) #import #import @class omphalosUtility; #pragma mark - #pragma mark Saving data #pragma mark - static inline void poop(){ NSLog(@"POOP"); } I'm going to try making a utility file that works independently of the app so that I Can update files and perform other universal operations such as saving when needed. Its a step in a direction that i'd like to take.
