[site]: stackoverflow
[post_id]: 5259377
[parent_id]: 4009514
[tags]: 
I had the exact same challenge. In can just describe it in short: When you start dragging the image REMOVE it from the UISCrollView and add it as a subview the the main view of your ViewController. make sure that the image won't get lost in the process (means: someone still retaining it). While dragging, constantly check to see if your image entered or left the boundaries of the trash can. you can do it with the method bellow: -(void) checkForTrashCan { CGRect rect = [self.delegate.trashCan convertRect:self.view.frame fromView:self.view.superview]; if ([self.delegate.trashCan rectIntersectBounds:rect]) { if (NOT self.isInTrashMode) { [self enterTrashMode]; } } else { if (self.isInTrashMode) { [self exitTrashMode]; } } } When the method rectIntersectBounds is just a simple extension method for UIView class that i wrote: -(BOOL) rectIntersectBounds : (CGRect) rect { return CGRectIntersectsRect(self.bounds, rect); } When the drag ended check if your view is inside the trash can, and act according to the result.
