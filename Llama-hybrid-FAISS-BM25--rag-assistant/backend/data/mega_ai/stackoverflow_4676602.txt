[site]: stackoverflow
[post_id]: 4676602
[parent_id]: 4676437
[tags]: 
Why is subscribing and forwarding events not pretty? I find it elegant. Doing this is consistent with the way the rest of the adapter is implemented. Even if you could use a pointer, it would be inconsistent because you wouldn't want to do that in every case. For example, if you're adapting a class that implements INotifyPropertyChanged to an interface that does not, but exposes a couple of properties, such as "TitleChanged" and "MaxLengthChanged," you wouldn't then use a pointer. Your adapter would expose those two events, and consumers would subscribe. Your adapter would subscribe to the PropertyChanged event, and raise "TitleChanged" only when it gets notified that "Title" was modified, and "MaxLengthChanged" only when it gets notified that "MaxLength" was modified. All other notifications would be ignored. I favour this approach as I find it straightforward, consistent and true to the pattern.
