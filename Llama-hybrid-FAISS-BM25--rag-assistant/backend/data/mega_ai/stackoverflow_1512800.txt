[site]: stackoverflow
[post_id]: 1512800
[parent_id]: 1512773
[tags]: 
Searching in internet reveals that, SEEK is better than SCAN(May it be index or Table). How can I achieve a seek over a scan? Add the necessary index -- if the incremental costs on INSERT and UPDATE (and extra storage) are an overall win to speed up the seeking in your queries. Then they says that ORDER BY clause i.e. sorting is more costly. Then what is the work around? How can I write effective query? Add the necessary index -- if the incremental costs on INSERT and UPDATE (and extra storage) are an overall win to speed up the ordering in your queries. Can anybody explain me, with some examples, which kind of query is better over what and in what situation? You already pointed out a couple of specific questions -- and the answers were nearly identical. What good would it do to add another six? Run benchmark queries over representative artificial data sets (must resemble what you're planning to have in production -- if you have small toy-sized tables the query plans will not be representative nor meaningful), try with and without the index that appear to be suggested by the different query plans, measure performance; rinse, repeat. It takes 10,000 hours of practice to be good at anything. Optimizing DB schemas, indices, queries, etc, is no exception;-).
