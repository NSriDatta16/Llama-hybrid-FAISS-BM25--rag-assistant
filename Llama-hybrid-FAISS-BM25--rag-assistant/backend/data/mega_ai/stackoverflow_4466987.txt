[site]: stackoverflow
[post_id]: 4466987
[parent_id]: 4465583
[tags]: 
Since Servlet 2.5/JSP 2.1 you could create a custom ELResolver which does that. You can register it in ServletContextListener#contextInitialized() . @Override public void contextInitialized(ServletContextEvent event) { JspFactory.getDefaultFactory() .getJspApplicationContext(event.getServletContext()) .addELResolver(new YourCustomELResolver()); } In the ELResolver#getValue() you could do the escaping job. Your only problem is that you will be unable to display HTML there where it's allowed (i.e. already sanitized from malicious tags/attributes by kind of a whitelist so that you end up with innocent tags like Jsoup can do). That said, I disagree the necessity to escape XSS during input by the Filter as you mentioned in 1st paragraph of the question. You risk double-escaping. You only need to escape it at exactly that point where it can possibly harm, i.e. straight in the view side there where it's going to be inlined among HTML, the output . I recommend to get rid of that so-called XSS filter and concentrate you on fixing it in the view side by either using JSTL or fn:escapeXml() (or a custom EL resolver, but that's definitely not the normal approach). The future code maintainers will be greatly thankful.
