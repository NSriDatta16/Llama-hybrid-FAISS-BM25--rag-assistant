[site]: crossvalidated
[post_id]: 231493
[parent_id]: 
[tags]: 
combine machine learning with monte carlo

i am working on a consulting assignment where we are developing a system that generates credit scores for borrowers w.r.t. their eligibility for micro loans of different tenures and amounts (South Asia) Repayment rates for these borrowers differ based on geographies and seasons (given that post monsoons, rural populace have higher disposable incomes and pre monsoons most of the money is spent in procurements). I have a bunch of attributes and a fairly large amount of borrower data stretching over multiple years. A very basic approach (and a decent first pass) is to construct a decision tree (or use tree bagging approaches to avoid overfits) or use neural nets to train and test the data. Queries a) all the approaches are going to give me a probabilistic classification of whether the borrower deserves a loan or not. Can i use different labels rather than a simple YES / NO ? For instance for a combination of some factors a borrower is eligible for a 4,000 - 8,000 rupee loan, while in other cases she is eligible to get a 8k-10k loan etc. I can simply code them as labels A.B and C or whatever and still be able to do a multi label classification right ? b) given that repayment is going to be heavily dependant on weather patterns (so if monsoons are good, chances of repayment on time are higher), can we combine the output of the ML algo with a monte carlo simulation of probability distribution of monsoon success / failure ? because the model might say a borrower has high odds of repayment but the algo DOESN'T know that the MET has forecasted 10% deficient rainfall
