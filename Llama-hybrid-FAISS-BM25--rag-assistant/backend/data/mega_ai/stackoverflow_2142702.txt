[site]: stackoverflow
[post_id]: 2142702
[parent_id]: 2142219
[tags]: 
I was working on a small (as in one-person) project a few years ago where I decided to give the JDEE a try (I was given a great deal of latitude in getting the project done, so my employer didn't care about which tools were used at the time). The standard tool at the time was Eclipse, and I was curious to see if I could be more productive with JDEE over the standard crop of Java IDEs, and given that I had previously used Emacs and like the productivity that it provides in general (not having to take my hands off the keyboard is a big plus in my view). I definitely agree that JDEE is more involved getting set up: I spent a good amount of time just getting settings situated to my liking (and never got them completely where I wanted), but in the end it seemed worth it to me as I felt immensely more productive over using Eclipse -- mainly because I didn't find myself clicking all over the damn screen like I typically do in just about any standard Java IDE that's used these days. Managing and organizing my project's resources (code, and other artifacts that needed to be deployed) also seemed to work much better when I was using JDEE over an IDE, as I was only dependent on having an Ant build script that could build, deploy, test, etc., and didn't have to worry about organizing my code around a particular IDE's preferences. Granted, most modern IDEs aren't terrible in this regard, but it just felt good that my project was not dependent on an IDE at all in order to build, test or deploy -- anyone could just grab the code from the repository and run it as long as Ant was available. Working with the JDEE seems to push you toward this kind of mindset and I personally prefer it. I won't say that using JDEE is necessarily better or worse than a standard IDE. If anything the productivity you get depends on how much effort your willing to put in to learning the tools (which goes for just about any IDE), but it did fit my style of software development better than Eclipse. The one big downside I could see toward relying on JDEE heavily is if you are a part of a team: Most development teams these days rely pretty heavily on the tools and features available in IDEs like Eclipse and NetBeans (I'd go so far as to say they are a bit spoiled by them) and it's likely you'll encounter some friction if you're using something other than what the rest of the team is working with. Of course...you can always try to convince them to switch :)
