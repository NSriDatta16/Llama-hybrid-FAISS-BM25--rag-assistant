[site]: stackoverflow
[post_id]: 5444375
[parent_id]: 
[tags]: 
server side behavior while maintaining user authentication state using session or cookies

Had a basic question as to the server side behavior while using cookies / session to track user authentication state. Taking session based user authentication as an example - we allot a unique session id every time the user logs in. Assuming these sessionids are stored in persistent storage, for subsequent page requests should we hit the database or should we have a cache of recently used/valid session ids on the server side. In the case of cookies once the server sends a cookie to the client side the next time the client requests a page does the server assume that the client has already been authenticated and is a returning user? Also, in ASP is the Membership Provider session table hit every time the authenticated user requests a protected page? Edit My understanding post reading up on formsauth - Webserver contains the app and a bunch of web services User accesses the site for the first time and logs in through the logon page Credentials are valiadated against a user store (a db) Create a FormsAuthenticationTicket and use FormsAuthentication to encrypt the ticket and set the auth cookie Subsequent requests from the user pass that auth cookie to the server Server decrypts that auth cookie. If that auth cookie can be decrypted and has not expired the server allows access. There is no checking at this time against the user store.
