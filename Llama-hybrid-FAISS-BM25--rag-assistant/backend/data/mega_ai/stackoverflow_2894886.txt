[site]: stackoverflow
[post_id]: 2894886
[parent_id]: 853962
[tags]: 
Duncan, I know this has already been answered, but just for your comment, here is a function that should work for you. I think it is almost straight off the PHP manual or some other example(s) somewhere. I have this in a class that handles other things like checking file permissions, uploads, etc. Modify to your needs. public function downloadFile($filename) { // $this->dir is obviously the place where you've got your files $filepath = $this->dir . '/' . $filename; // make sure file exists if(!is_file($filepath)) { header('HTTP/1.0 404 Not Found'); return 0; } $fsize=filesize($filepath); //set mime-type $mimetype = ''; // mime type is not set, get from server settings if (function_exists('finfo_file')) { $finfo = finfo_open(FILEINFO_MIME); // return mime type $mimetype = finfo_file($finfo, $filepath); finfo_close($finfo); } if ($mimetype == '') { $mimetype = "application/force-download"; } // replace some characters so the downloaded filename is cool $fname = preg_replace('/\//', '', $filename); // set headers header("Pragma: public"); header("Expires: 0"); header("Cache-Control: must-revalidate, post-check=0, pre-check=0"); header("Cache-Control: public"); header("Content-Description: File Transfer"); header("Content-Type: $mimetype"); header("Content-Disposition: attachment; filename=\"$fname\""); header("Content-Transfer-Encoding: binary"); header("Content-Length: " . $fsize); // download $file = @fopen($filepath,"rb"); if ($file) { while(!feof($file)) { print(fread($file, 1024*8)); flush(); if (connection_status()!=0) { @fclose($file); die(); // not so sure if this best... :P } } @fclose($file); } }
