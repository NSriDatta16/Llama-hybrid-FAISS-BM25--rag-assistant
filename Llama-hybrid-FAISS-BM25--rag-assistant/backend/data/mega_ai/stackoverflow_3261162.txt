[site]: stackoverflow
[post_id]: 3261162
[parent_id]: 3251271
[tags]: 
For those of you who may be stuck with doing this in .NET 3.5, I do have something working. It's not nearly as elegant as the code above, but it functions. I'm more than happy to see some feedback from others on alternative methods, too. The example code below is for a ThingB that functions in both .NET 3.5 and 4. First, change the XAML on the RadioButtons as follows (note that the GroupName must be different for each): First Second Third Second, the ThingB code: public class ThingB : INotifyPropertyChanged { public string Name { get; set; } public Choice Choice { get { return choiceOne ? Choice.First : choiceTwo ? Choice.Second : choiceThree ? Choice.Third : Choice.None; } set { choiceOne = Choice.First.Equals(value); choiceTwo = Choice.Second.Equals(value); choiceThree = Choice.Third.Equals(value); } } private bool choiceOne; public bool ChoiceOne { get { return choiceOne; } set { if(value) { Choice = Choice.First; NotifyChoiceChanged(); } } } private bool choiceTwo; public bool ChoiceTwo { get { return choiceTwo; } set { if (value) { Choice = Choice.Second; NotifyChoiceChanged(); } } } private bool choiceThree; public bool ChoiceThree { get { return choiceThree; } set { if (value) { Choice = Choice.Third; NotifyChoiceChanged(); } } } private void NotifyChoiceChanged() { OnPropertyChanged("ChoiceOne"); OnPropertyChanged("ChoiceTwo"); OnPropertyChanged("ChoiceThree"); } public event PropertyChangedEventHandler PropertyChanged; protected void OnPropertyChanged(string property) { if (PropertyChanged != null) { PropertyChanged(this, new PropertyChangedEventArgs(property)); } } }
