[site]: stackoverflow
[post_id]: 5289614
[parent_id]: 5288830
[tags]: 
pretty-much the only way to get a (singular) large object is to have a very large string or array (perhaps encapsulated inside a long list). Otherwise, you just have a large graph of small objects (many). Small objects aren't a problem; if it is no longer referenced, the GC will at some point clean it up, and compact the space (depending on the GC implementation). If that isn't happening, then perhaps you have given out another reference to the graph - subscribing to an event is a classic way of doing this accidentally; as is adding one of the objects to a list that is still in play. A single missed reference can keep a large graph from being collected, so watch that. So far, the "fix" is simply; don't call GC; and check you don't have a missed reference. A different problem, however, is when you have arras/strings that are large enough to go onto the "large object heap" (LOH). The LOH is not compacted, so you can hit problems with fragmentation here. One questionable way around that is to use a jagged array, i.e. 1,000 arrays of length 1,000 (plus an extra array to track them) instead of a single array of length 1,000,000 - YMMV.
