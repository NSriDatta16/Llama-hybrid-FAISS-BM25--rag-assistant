[site]: stackoverflow
[post_id]: 2032546
[parent_id]: 2032538
[tags]: 
1) alloc and init need to be called virtually always. numberWithChar is a convenience method, which means it calls alloc , init , and autorelease for you and returns the autoreleased instance. 2) Since numberWithChar returns an autoreleased object, that means unless you retain it (or pass it to something like an NSArray which will retain it), it'll be destroyed shortly. initWithChar returns a retain -ed object, which means you have to release it when you're done with it. I found when I was starting out that it was helpful to use init - alloc as a rule, instead of the convenience methods, because it made me pay close attention to my memory management. The difference between class and instance methods is addressed from a number of angles in the answers to this question What is the difference between class and instance methods? EDIT: To be honest, the analogy I use when I call a class method on, say NSString , is praying to the god of NSStrings to bestow upon me a magnificent new NSString . Notice that class methods are almost 100% used for creation. e.g. alloc is a class method, stringWithFormat is a class method, and so on. Yes, it's ridiculous, I know.
