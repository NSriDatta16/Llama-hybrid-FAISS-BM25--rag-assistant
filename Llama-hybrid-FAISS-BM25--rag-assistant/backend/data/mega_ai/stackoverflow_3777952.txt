[site]: stackoverflow
[post_id]: 3777952
[parent_id]: 3746248
[tags]: 
I found a solution. In the code-behind I will give each ListBoxItem the context menu I find from its visual children. It gives me the possibility of adding the context menus to the DataTemplates for the various class, thus giving me the polymorphism I like. I also prefer to declare the menus in XAML. And it works with keyboard navigation, as well as mouse use. The code could probably have been put in an attached property or something for elegance. I add a loaded event handler and this code: void MainWindow_Loaded(object sender, RoutedEventArgs e) { foreach (var item in list.Items) { ListBoxItem lbItem = list.ItemContainerGenerator.ContainerFromItem(item) as ListBoxItem; lbItem.ContextMenu = FindContextMenu(lbItem); } } private ContextMenu FindContextMenu(DependencyObject depObj) { ContextMenu cm = depObj.GetValue(ContextMenuProperty) as ContextMenu; if (cm != null) return cm; int children = VisualTreeHelper.GetChildrenCount(depObj); for (int i = 0; i
