[site]: crossvalidated
[post_id]: 17847
[parent_id]: 17846
[tags]: 
The classic example of a patented algorithm is RSA, by the way. Rules for patents of algorithms are rather nebulous and changing quite a bit. In practice, implementations are okay, but distribution (including commercialization and free release) is where one tends to run afoul of things. What's more, release can be constrained, regardless of patent and copyright - Americans cannot export source code for cryptographic algorithms to certain prohibited countries, for instance, and the same may be true of many other countries. A distinction has to be made between copyright and patents. Copyright is unlikely to affect you, and I believe the primary thing to consider is whether or not a patent may apply (and it need not be patented already: some countries allow some time after disclosure for the innovator to patent their work). Copyrights tend to affect distribution rights of original materials (so, you can't just republish an article - the journal or the author owns the copyright), patents affect distribution of the implementation of the idea. If there's no patent and the time for patenting has elapsed, then you should be good to go. I'd said that patents are nebulous: in some jurisdictions it isn't all that easy to patent algorithms. In some it is, but the laws and interpretations of those laws are changing. I hope this helps in focusing your analysis. I wouldn't worry about the case-by-case approach (e.g. is it published in this type of journal or that type), and instead focus on who holds the patent rights and how are they exercising those rights. It's also courteous to talk with the original innovator. If they intend to patent or they want to collaborate, you are better off working with them. They can help suggest ideas for implementations and they may encourage others to use your implementation as a reference.
