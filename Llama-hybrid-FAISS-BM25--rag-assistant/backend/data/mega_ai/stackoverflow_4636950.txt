[site]: stackoverflow
[post_id]: 4636950
[parent_id]: 4636039
[tags]: 
short: I would use Python. bigger: I've tried PHP in cli mode, I experienced a lot of memory leaks , certainly because of bad PHP libs, or PHP libs which have never been though for another thing than fast die in a web-request mode (I'm suscpicious on PDO for example). In the python world I've seen recently portion of code from shinken , it's a nice nagios rewrite as python daemons, very clever. See http://www.shinken-monitoring.org/the-global-architecture/ & http://www.shinken-monitoring.org/wiki/official/development-hackingcode . As it's a monitoring tool you can certainly find there some very good ideas for some daemons repeting tasks. Now, can I make a proposition? Why not using Shinken or Centreon as the scheduler for data fetching tasks? (And maybe soon Centreon with a shinken engine instead of nagios engine, I hope)? This could be useful to detect changes in external data, issue in fetchs, etc. Then for the tasks that should be done (fetch data, transform data, store data, etc) this is the job of an ETL . One nice open source tool is Talend ETL ( Java ). There're some scheduling and monitoring tools for Talend but not Open source (sort-of-open-source-where-you-must-pay-a-license). But adding an external scheduler like Nagios for tasks should be easy (I hope). You'll need to check that memcached is available as a storage engine for talend ETL or code your plugin. So, this to say than instead of the language you should maybe think about the tools . Or not, depending on the complexity you can assume, each tool add his own complexity. However if you want to rebuild all from scratch python is fast an efficient.
