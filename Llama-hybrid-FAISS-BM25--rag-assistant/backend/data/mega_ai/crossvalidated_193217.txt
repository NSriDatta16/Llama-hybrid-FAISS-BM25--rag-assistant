[site]: crossvalidated
[post_id]: 193217
[parent_id]: 
[tags]: 
detect incorrect term in group of terms

I obtain a 'group' of numbers every day. Each number is associated with a 'term'. eg 35 is Big Data. 42 is Hadoop, 82 is Zebra, 89 is Python, 3 is Machine Learning, and 6 is Waterfall, etc. I want a non-supervised Machine Learning way to detect numbers that are usually not part of the group. I will highlight in the following examples groups that should not be in the set: { 35, 42, 82 , 89, 3, 6 } { 35, 42, 89 } [no false number in this group] { 35, 42, 89 } 4 So in my example, as the sets are usually obtained over time, the numbers 35 (Big Data), 42 (Hadoop), 89 (Python) will be usually together. But 82 (Zebra) and 6 (Waterfall) are unlikely to be usually in a set. Occasionally, they may come as a set. but usually they will not be there. since they are usually not there. i need a way to filter those out. Some points to note: a. Sometimes false numbers will not be present b. Numbers go from 1-30,000, and they represent an 'alpha-numeric term' c I am okay if the algorithm is not 100% accurate. 75% detection is better than having the false terms always present. d. I'd prefer a non-supervised learning, but i am willing to compromise this. e. The repository of sets will grow as 1000's of new sets are added each day. f. lets say we see the following numbers always together as a set {1,2,3,4,5,6,7,8,9} and as such a density cluster is established. But we also see {6,7,8} appear by themselves frequently a lot too just by themselves. So in that case, if i have a set : {1,6,7,8} I need the algorithm to filter out the {1} since in this case {2,3,4,5,9} is missing in the original set of {1,6,7,8} So its a cluster within a cluster. My question is: are there existing Machine Learning algorithms out there that can help me achieve this result set with a reasonable level of confidence? If yes, which ones? How does the database/algorithms change as 'new' sets are added that start showing new numbers being added to a group.
