[site]: stackoverflow
[post_id]: 1269791
[parent_id]: 
[tags]: 
How should I organize implicits in my Scala application?

Having written a few scala tools, I'm trying to come to grips with the best way to arrange my code - particularly implicits. I have 2 goals: Sometimes, I want to be able to import just the implicits I ask for. Othertimes, I want to just import everything. To avoid duplicating the implicits, I've come up with this structure (similar to the way scalaz is arranged): case class StringW(s : String) { def contrived = s + "?" } trait StringWImplicits { implicit def To(s : String) = StringW(s) implicit def From(sw : StringW) = sw.s } object StringW extends StringWImplicits // Elsewhere on Monkey Island object World extends StringWImplicits with ListWImplicits with MoreImplicits This allows me to just import StringW._ // Selective import or (in most cases) import World._. // Import everything How does everyone else do it?
