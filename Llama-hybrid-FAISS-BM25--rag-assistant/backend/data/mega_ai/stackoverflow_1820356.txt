[site]: stackoverflow
[post_id]: 1820356
[parent_id]: 1819851
[tags]: 
Try to map the association on the other side also but use the inverse="true" attribute on that side. So, create in the FreightDateTime mapping file a bag to map the association as many-to-many with the Consignment. Also, I have answered a similar question here: What is the correct way to define many-to-many relationships in NHibernate to allow deletes but avoiding duplicate records Reading the question and my answer maybe will help you understand what is going on with your many-to-many association and maybe give you a hint for the solution. The final recommendation is kind of last resort. The answer in the above question is just to give an idea of what is going through another person's different issue. A solution would be to explicitly map the association table. If your tables are: Person, Note and the association table (X table) is PersonNote Your mappings should look like that: ..... .... As it is above it allows you the following: Delete a Person and only delete the entry in the association table without deleting any of the Notes Delete an Note and only delete the entry in the association table without deleting any of the Person entities Save with Cascades from only the Person side by populating the Person.Notes collection and saving the Person. Since the inverse=true is necessary in the Note.People there isn't a way to do cascading save from this side. By populating the Note.People collection and then saving the Note object you will get an insert to the Note table and an insert to the Person table but no insert to the association table. I guess this is how NHibernate works and I haven't yet found a way around it. You can cascade save entries in the association table only explicitly by adding new items in the PersonNotes collection of the Note entity. All the above are tested with unit tests. You will need to create the PersonNote class mapping file and class for the above to work. If you need another class to have notes lets say Organisation then you only ad another association table to your schema called OrgnanisationNote and you do the same as above to the Organisation mapping file and the Note mapping file. I must say again that this should be the final option for anyone who want to have complete control over his/hers many-to-many associations.
