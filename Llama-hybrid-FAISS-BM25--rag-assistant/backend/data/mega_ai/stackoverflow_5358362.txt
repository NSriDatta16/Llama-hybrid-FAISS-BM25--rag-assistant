[site]: stackoverflow
[post_id]: 5358362
[parent_id]: 
[tags]: 
Strange custom delegate actions

Ok -- this one is weird. I have a singleton class that loads information from an XML file. I am using a delegate definition as follows (I define the delegate in a separate header file to make life easier): @protocol ResourceClassDelegate @optional - (void)picturesDidStartLoading; - (void)picturesDidFinishLoading; @end In the resource file, the delegate is defined correctly (I believe): @property (assign) id delegate; When using the delegate, the code in the resource class is as follows: -(void)refreshPiecesOfHistoryWithOperation { NSLog(@"Operation Started"); if ([delegate respondsToSelector:@selector(picturesDidStartLoading)]) [delegate picturesDidStartLoading]; self.picturePacks = [HistoryXMLParser loadPicturePacks]; [self.allPiecesOfHistory removeAllObjects]; // now lets put all of them in one big file... for (PicturePack *pp in self.picturePacks) { for (int ct = 0; ct Now... in the class that is listening to the delegate, it is assigned: - (void)viewDidLoad { [super viewDidLoad]; // now for the part that makes the loading all happen... [[ResourceClass sharedResourceClass] setDelegate:self]; } And in the listening class, the methods are defined.... #pragma mark ResourceClassDelegate -(void)picturesDidStartLoading { if (loadingActivity == nil) loadingActivity = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge]; [self.view addSubview:loadingActivity]; [loadingActivity setCenter:[self.view center]]; [loadingActivity startAnimating]; } -(void)picturesDidFinishLoading { if (loadingActivity != nil) { [loadingActivity stopAnimating]; [loadingActivity removeFromSuperview]; } [self.tableView reloadData]; } Now for the problem... every single time, in the listening class, the method (void)picturesDidFinishLoading is called. The method (void)picturesDidStartLoading never is called. When I debug the code, in the resource class, the line if ([delegate respondsToSelector:@selector(picturesDidStartLoading)]) [delegate picturesDidStartLoading]; never reaches the delegate method call - even if I remove the if statement. The line if ([delegate respondsToSelector:@selector(picturesDidFinishLoading)]) [delegate picturesDidFinishLoading]; is always called. any ideas?
