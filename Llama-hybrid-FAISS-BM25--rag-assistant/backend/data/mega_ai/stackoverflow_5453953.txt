[site]: stackoverflow
[post_id]: 5453953
[parent_id]: 5453273
[tags]: 
This turned out to be a bug with either ParallelCurl, or curl_set_opt_array(). Here is the function in ParallelCurl as-is: // Start a fetch from the $url address, calling the $callback function passing the optional // $user_data value. The callback should accept 3 arguments, the url, curl handle and user // data, eg on_request_done($url, $ch, $user_data); public function startRequest($url, $callback, $user_data = array(), $post_fields=null) { if( $this->max_requests > 0 ) $this->waitForOutstandingRequestsToDropBelow($this->max_requests); $ch = curl_init(); curl_setopt_array($ch, $this->options); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); if (isset($post_fields)) { curl_setopt($ch, CURLOPT_POST, TRUE); curl_setopt($ch, CURLOPT_POSTFIELDS, $post_fields); } curl_multi_add_handle($this->multi_handle, $ch); $this->outstanding_requests[$ch] = array( 'url' => $url, 'callback' => $callback, 'user_data' => $user_data, ); $this->checkForCompletedRequests(); } Now the problem lies in where curl_setopt_array($ch, $this->options) sits. If I move it below all of the other curl_setopt() , then it works fine. Funny thing is, is that my User-Agent parameter that I pass in the same array as CURLPOT_WRITEFUNCTION was working fine. So, it seems that curl_setpot_array() behaves differently when given objects as values in the array. Anyway, simply moving the call worked fine. My modified function: // Start a fetch from the $url address, calling the $callback function passing the optional // $user_data value. The callback should accept 3 arguments, the url, curl handle and user // data, eg on_request_done($url, $ch, $user_data); public function startRequest($url, $callback, $user_data = array(), $post_fields=null) { if( $this->max_requests > 0 ) $this->waitForOutstandingRequestsToDropBelow($this->max_requests); $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); if (isset($post_fields)) { curl_setopt($ch, CURLOPT_POST, TRUE); curl_setopt($ch, CURLOPT_POSTFIELDS, $post_fields); } curl_setopt_array($ch, $this->options); curl_multi_add_handle($this->multi_handle, $ch); $this->outstanding_requests[$ch] = array( 'url' => $url, 'callback' => $callback, 'user_data' => $user_data, ); $this->checkForCompletedRequests(); }
