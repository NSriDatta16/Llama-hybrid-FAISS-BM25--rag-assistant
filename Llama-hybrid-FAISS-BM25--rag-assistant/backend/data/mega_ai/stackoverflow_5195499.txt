[site]: stackoverflow
[post_id]: 5195499
[parent_id]: 5194721
[tags]: 
We are using SQL configurations for most of the packages built by my team. What we did to resolve the migration issue was to add a second configuration based on an environment variable which tells the package which configurations database to use. This may not be a good option for everyone but it works well for our setup. Details: Our packages are always run from agent jobs. Each of our environments is on a seperate machine (we don't use named instances except for sandboxing.) We have a copy of our configurations DB in the default SQL instance of each machine and it uses the same db name and schema in each environment. The package looks at the machine name environment variable to tell which machine is executing the package. The package then looks for the configurations database on the executing machine to get the connection strings for the actual work to be done. When we build a new package we have to migrate the SQL configurations to each environment and adjust them as necessary. But from that point on we only need to worry about them if we make a change to which connections the package uses or which server is executing it. Doing it this way the package always knows which server is executing it and always uses the configurations associated with that server. So the ongoing maintenance and deployment of the individual packages is usually straight forward. All we generally have to worry about moving is the package itself and any underlying schema changes associated with the update.
