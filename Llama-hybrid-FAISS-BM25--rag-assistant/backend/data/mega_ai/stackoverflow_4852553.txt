[site]: stackoverflow
[post_id]: 4852553
[parent_id]: 4848284
[tags]: 
An advisable way to handle modal view controllers is to us notifications to inform the class that presented it to release it. Generally, you use code similar to this to show a modal view. SomeClass *yourViewController = [[SomeClass alloc] initWithNibName:@"SomeClass" bundle:nil]; [self presentModalViewController: yourViewController animated: YES]; [yourViewController release]; With the above code, your modal view should end up with a retain count of 1. When you dismiss it, the parent view will release it and it will be purged from memory. Your "close" button in your modal view should execute code that looks like this: - (void)dismissSelf{ [[NSNotificationCenter defaultCenter] postNotifivationName:@"I'm done" object:self]; } Back in your parent viewcontroller, ou should listen for this notification and then dismiss the modal view when the notification is posted. That said, to answer your questions: A modal view controller never dismisses itself. Post a notification and then let the navigation controller handle it. You can't dismiss the first modal view until the second one has been dismissed. If you do, you will get a EXC_BAD_ACCESS error. Think of the second modal view as "inside" the first one. If the first is dismissed, the second one will be dragged away with it, but it hasn't been dismissed.
