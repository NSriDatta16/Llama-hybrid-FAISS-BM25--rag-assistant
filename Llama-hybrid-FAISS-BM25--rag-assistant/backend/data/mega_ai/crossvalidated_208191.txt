[site]: crossvalidated
[post_id]: 208191
[parent_id]: 
[tags]: 
Incorporating autocorrelation into forecasts

I have a time series $x_{t}$ which is an AR(1) process with a constant term, e.g. $ x_{t} = c + \phi x_{t-1} + \epsilon_{t} $ How can I incorporate information about the autocorrelation of $x_{t}$ in order to maximize $\frac{\mu_x^*}{\sigma_x^*}$ where $x_{t}^* = a_{t}x_{t}$? where $\mu_x^*$ and $\sigma_x^*$ are the sample mean and standard deviation of $x_{t}^*$ respectively and $a_t$ is some function of the past history of $x_{t}$, e.g. $a_t = f(x_{t-1}, x_{t-2},...)$ As a concrete example, here is some R code to generate an AR(1) process > phi var_x mean_x var_eps > set.seed(1) > eps c x > mean(x) / sd(x) [1] 0.09388863 If I were just to observe $x_t$ generated above, I could diagnose that this is in fact an AR(1) process using acf and pacf and then fit an AR(1) model to estimate $\mu$ and $\phi$ > ar1 Using this estimate I can forecast $x_t$ c_est But here I am at a bit lost regarding how to incorporate this forecast in an optimal way into $a_t$, where as above optimal is defined as maximizing $\frac{\mu_x^*}{\sigma_x^*}$. Note In the above $\frac{\mu_x^*}{\sigma_x^*}$ represents the Information Ratio with a benchmark of 0, and $x_t$ can be thought of as a time series of returns.
