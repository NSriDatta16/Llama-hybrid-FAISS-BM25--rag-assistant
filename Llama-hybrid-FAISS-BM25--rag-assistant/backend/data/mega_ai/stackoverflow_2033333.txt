[site]: stackoverflow
[post_id]: 2033333
[parent_id]: 2032644
[tags]: 
What are the circumstances in which you should actually decide to store data ( using serialize() in PHP, pickle module in Python, et cetera )? That question is easy to answer. The various scenarios don't actually have much relevance. Here's the answer You serialize when you have to . No sooner. Many API's will not accept Python objects. When the API cannot accept a Python object, then you can often provide a string. That's when you serialize. Example. You want to save a Python object on persistent storage. Sadly a file object can't write a Python object. So you serialize. Example. You want to send a Python object to another process. You're using a socket, named pipe or whatever. These are all file objects, and file objects can't write a Python objects. So you serialize. That's when you serialize. XML files are serialized DOM trees. The Python object is a DOM tree. The XML file is one way to serialize the DOM tree. I don't understand this example. Form label strings are strings. They don't need to be serialized. I18N is handled separately from your application. http://docs.python.org/library/i18n.html I don't understand this example. This is a query. You don't serialize anything. You just do the query. The results are (in principle) always changing, so any serialization is the previous result, not the current result, so you just don't. Bonus. Multi-page, huge form? You don't serialize anything. You just update the session in your web framework. The web framework's session manager might serialize the Python object, but that's why you used a framework -- so you wouldn't have to care. Serialization is used to write a Python object to a file. This -- in web applications -- is rare. Mostly, you write to databases using SQL.
