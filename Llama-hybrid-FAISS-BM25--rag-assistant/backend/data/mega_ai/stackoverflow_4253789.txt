[site]: stackoverflow
[post_id]: 4253789
[parent_id]: 
[tags]: 
Question about memory page protection

Here's another question I met when reading . First, let's see some quotation. LPVOID WINAPI VirtualAlloc( __in_opt LPVOID lpAddress, __in SIZE_T dwSize, __in DWORD fdwAllocationType, __in DWORD fdwProtect ); The last parameter, fdwProtect, indicates the protection attribute that should be assigned to the region. The protection attribute associated with the region has no effect on the committed storage mapped to the region. When reserving a region, assign the protection attribute that will be used most often with the storage committed to the region. For example, if you intend to commit physical storage with a protection attribute of PAGE_READWRITE, you should reserve the region with PAGE_READWRITE. The system's internal record keeping behaves more efficiently when the region's protection attribute matches the committed storage's protection attribute. (When commiting storage)...you usually pass the same page protection attribute that was used when VirtualAlloc was called to reserve the region, although you can specify a different protection attribute. The above quotation totally puzzled me. If the protection attribute associated with the region has no effect on the committed storage, why do we need it? Since it is recommended to use the same protection attribute for both reserving and committing, why does Windows still offer us the option to use different attribute? Isn't it mis-leading and kind of a paradox? Where exactly is the protection attribute stored for reserved region and committed storage , repectively? Many thanks for your insights.
