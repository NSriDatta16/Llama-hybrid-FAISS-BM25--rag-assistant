[site]: stackoverflow
[post_id]: 2254077
[parent_id]: 2253144
[tags]: 
Until the :target selector described by Thorn is well-supported, you'll need some script to do it. Here's an example: .target { color: red; } link link target (name) target (id) (function() { // Monitor the #fragment part of the window's URL and reflect this // in which element has the `target` class. // var target= ''; function updateTarget() { var hash= location.hash.slice(1); if (hash!==target) { // Remove `target` class from old target (if any) // if (target!=='') { var el= document.getElementById(target) || document.anchors[target]; if (el) el.className= el.className.replace(/(^|\s)target(\s|$)/, '$1'); } target= hash; // Add `target` class to new target (if any) // if (target!=='') { var el= document.getElementById(target) || document.anchors[target]; if (el && !el.className.match(/(^|\s)target(\s|$)/)) el.className+= ' target'; } } } setInterval(updateTarget, 100); })(); This works by polling for changes on the location's fragment part, so that it can cope with the fragment being changed by user navigation, forms, or scripting. It would have to be executed at the bottom of the page or on a page-load/ready event to ensure the target existed when it was first called.
