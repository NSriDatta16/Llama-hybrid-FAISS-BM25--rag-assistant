[site]: stackoverflow
[post_id]: 1466883
[parent_id]: 1466750
[tags]: 
Another possibility would be to use some caching mechanism on your BL logic. For instance in your page/usercontrol you could have (don't take my syntax too strict ;) ) public partial class MyPaged: Page { public void PageLoad(..) { if(!IsPostBack) { dropDownCountries.DataSource = CountryBL.GetCountries(); dropDownCountries.DataBind(); } ... } } and in your business logic class you do some kind of caching where you may have a singleton class that holds the countries and functions as your cache. A pseudocode method could be public IList GetCountries { //if the cache is empty or it should be refreshed, fills the local //list of countries, i.e. the cache, with fresh entries from the DB //there could be some time condition, i.e. refresh every day or so EnsureCacheValid(); return CachedCountries; //the cache of countries } This could be another option with the advantage that your presentation logic doesn't even know about the caching and if you would add a webservice access or so, you would also benefit from the caching. The only thing you have to pay attention at is if there is the possibility that the user can change the countries (which in your example I don't suppose).
