[site]: stackoverflow
[post_id]: 2128725
[parent_id]: 2060614
[tags]: 
One thing that may have been catching you up in IKImageViewDemo was that the image was zoomed to fit in the windowDidResize: method ( [_imageView zoomImageToFit: self] ). Embedding the IKImageView in a NSScrollView is the right thing to do. In order to get the scrollbars to follow the window as you resize it, you need to adjust the springs and struts (== autoresizing mask) in Interface Builder. Addendum: As you've noticed, there is a bug in Mac OS X 10.6 that causes this not to work properly. You can work around the problem by subclassing the NSScrollView as follows: @interface IKImageClipView : NSClipView - (NSRect)docRect; @end @implementation ScrollViewWorkaround - (void)reflectScrolledClipView:(NSClipView *)cView; { NSView *_imageView = [self documentView]; [super reflectScrolledClipView:cView]; if ([_imageView isKindOfClass:[IKImageView class]] && [[self contentView] isKindOfClass:[IKImageClipView class]] && [[self contentView] respondsToSelector:@selector(docRect)]) { NSSize docSize = [(IKImageClipView *)[self contentView] docRect].size; NSSize scrollViewSize = [self contentSize]; // NSLog(@"doc %@ scrollView %@", NSStringFromSize(docSize), NSStringFromSize(scrollViewSize)); if (docSize.height > scrollViewSize.height || docSize.width > scrollViewSize.width) ((IKImageView *)_imageView).autohidesScrollers = NO; else ((IKImageView *)_imageView).autohidesScrollers = YES; } } @end Try this out: http://dl.dropbox.com/u/1583683/IKImageViewDemo.zip It's a version of IKImageViewDemo with scroll bars and the above workaround.
