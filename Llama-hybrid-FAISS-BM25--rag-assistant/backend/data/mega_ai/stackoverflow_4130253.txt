[site]: stackoverflow
[post_id]: 4130253
[parent_id]: 4130175
[tags]: 
If you are building the program as a 32-bit binary on Windows, you only get 2GB of available address space (the upper half is reserved). When you consider that the address space can be fragmented by lots of different things being allocated (DLLs getting loaded, thread stacks, dynamic allocation), it's likely that you'll end up having large allocations fail very quickly. You can try giving the linker the /LARGEADDRESSAWARE flag, which will give you a 3GB address space on correctly configured 32-bit Windows and the full 4GB address space on 64-bit Windows. Really, though, it's a good idea to find a way to reimplement your program so that you can use several smaller allocations instead of one huge one.
