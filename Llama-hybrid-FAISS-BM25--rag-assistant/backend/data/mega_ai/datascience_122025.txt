[site]: datascience
[post_id]: 122025
[parent_id]: 122018
[tags]: 
Models based on the stock markets are often unreliable because there is a lot of noise and even if it seems to predict well for the validation data, the result is very different in practice. What you call stationary means depending on previous values in a relative way, and predicting stock markets should follow this rule. However, RNN and LSTM have been built to memorize low-noise patterns, so you will want to apply some noise reduction like smoothing for better results. In addition, I recommend converting data to have fluctuations (=derivates) rather than raw values, so that the neural network learns data dynamics. For a good model, you must simulate prediction vs real-world results for each day. It means evaluating the model prediction for day 1, checking if the result is correct or not, then feeding the neural network with this information, and applying the same logic for day 2 and so on. Generally speaking, stock markets are so difficult that you will want to use multi-variate and seasonality models. Maybe Prophet is a better option. https://facebook.github.io/prophet/
