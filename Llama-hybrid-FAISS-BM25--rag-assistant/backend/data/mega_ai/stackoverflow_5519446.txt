[site]: stackoverflow
[post_id]: 5519446
[parent_id]: 5519385
[tags]: 
New, short answer Starting from where Ilya Kogan left off, totally correct after we had Eric Lippert find the bug: var methods = new Action[10]; var rng = new Random(); var shuffled = methods.Select(m => Tuple.Create(rng.Next(), m)) .OrderBy(t => t.Item1).Select(t => t.Item2); foreach (var action in shuffled) { action(); } Of course this is doing a lot behind the scenes. The method below should be much faster. But if LINQ is fast enough... Old answer (much longer) After stealing this code from here : public static T[] RandomPermutation (T[] array) { T[] retArray = new T[array.Length]; array.CopyTo(retArray, 0); Random random = new Random(); for (int i = 0; i the rest is easy: var methods = new Action[10]; var perm = RandomPermutation(methods); foreach (var method in perm) { // call the method }
