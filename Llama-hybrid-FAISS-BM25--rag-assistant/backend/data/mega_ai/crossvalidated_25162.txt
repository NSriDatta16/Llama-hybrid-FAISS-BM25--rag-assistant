[site]: crossvalidated
[post_id]: 25162
[parent_id]: 
[tags]: 
Using SparseM/Matrix Sparse Matrix in training SVM from e1071 returning different results from same data in standard matrix

Using sparse matrix objects in svm training in e1071 returns different results than running on the same data represented as standard matrix: library(e1071) library(Matrix) library(SparseM) m=10 n=800 #means The above code simulates a subset of one of my feature sets pretty closely, and if you run it repeatedly, the prf results will sometimes be very close and sometimes be very different, i.e. but they are never matching: > prf(data.frame(fitted(mod1),clss)) Acc P_0 R_0 F_0 P_1 R_1 F_1 [1,] 0.52125 0.675 0.5162524 0.5850488 0.3675 0.5306859 0.4342688 > prf(data.frame(fitted(mod2),clss)) Acc P_0 R_0 F_0 P_1 R_1 F_1 [1,] 0.5025 0.775 0.5016181 0.6090373 0.23 0.5054945 0.3161512 > prf(data.frame(fitted(mod3),clss)) Acc P_0 R_0 F_0 P_1 R_1 F_1 [1,] 0.5025 0.775 0.5016181 0.6090373 0.23 0.5054945 0.3161512 > prf(data.frame(fitted(mod1),clss)) Acc P_0 R_0 F_0 P_1 R_1 F_1 [1,] 0.545 0.61 0.539823 0.57277 0.48 0.5517241 0.513369 > prf(data.frame(fitted(mod2),clss)) Acc P_0 R_0 F_0 P_1 R_1 F_1 [1,] 0.50375 0.2225 0.5085714 0.3095652 0.785 0.5024 0.6126829 > prf(data.frame(fitted(mod3),clss)) Acc P_0 R_0 F_0 P_1 R_1 F_1 [1,] 0.50375 0.2225 0.5085714 0.3095652 0.785 0.5024 0.6126829 Is this something I'm doing incorrectly? Or is training on sparse matrix representations just more inexact? Thanks, Rob prf Function: prf
