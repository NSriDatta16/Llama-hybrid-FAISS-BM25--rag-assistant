[site]: stackoverflow
[post_id]: 3637591
[parent_id]: 3637295
[tags]: 
You'd have to be using some kind of cross platform threading library (since you mentioned OS independence), but given pthreads you could do. template class myVarStorage { static std::map store_; public: myVarStorage(); T getVar(); void setVar(T); } template void myVarStorage::setVar (T var) { store_[static_cast pthread_self()] = var; } template T myVarStorage::getVar() { return store_[static_cast pthread_self()]; //throws exception } I'm sure the code has errors in it and should be treated as pseudo-code, since I'm a pseudo-programmer when it comes to C++. :)
