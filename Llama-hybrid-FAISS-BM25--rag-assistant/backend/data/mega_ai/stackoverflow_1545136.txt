[site]: stackoverflow
[post_id]: 1545136
[parent_id]: 1537032
[tags]: 
Looks like jQuerys's evalScript function is messing you up... Line 543 of jQuery: function evalScript( i, elem ) { if ( elem.src ) jQuery.ajax({ url: elem.src, async: false, dataType: "script" }); else jQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || "" ); if ( elem.parentNode ) elem.parentNode.removeChild( elem ); } Here is the breakdown of what happens: The Main Page's JS calls: $.ajax({ url:"frag.htm", type:"GET", success:callBackFunction }) and GETs frag.htm which contains something like this: Content then your callback function is called which probably looks like this: function callBackFunction(data){ $("#ajaxContent").html(data); // When jQuery's html(data) function is called is "cleans" the HTML by removing any script tags and then calls evalScript on each one. evalScript, as you can see, doesn't specify "cache:true" so when it goes through $.ajax cache is null. When cache is null and the dataType is "script" jQuery sets cache=false. So, to circumvent this problem try this: function callBackFunction(data){ var tempAJAX = $.ajax; // save the original $.ajax $.ajax=function(s){ // wrap the old $.ajax so set cache to true... s.cache=true; tempAJAX(s); // call old $.ajax } $("#ajaxContent").html(data); // insert the HTML and download the s $.ajax = tempAJAX; // reset $.ajax to the original. } } Before we insert the new HTML from "frag.htm" into the Main Page we intercept all calls to $.ajax, modify the object to include cache=true, and then after the script is loaded insert the HTML. Let me know if you have any questions.
