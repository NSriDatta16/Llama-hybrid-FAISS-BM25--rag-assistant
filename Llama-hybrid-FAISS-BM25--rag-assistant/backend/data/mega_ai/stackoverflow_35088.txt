[site]: stackoverflow
[post_id]: 35088
[parent_id]: 7252
[tags]: 
On your source repository : use hooks before each commits (pre-commit hook for SVN for example) In that hook, check for the existence of at least one use case for each method. Use a convention for unit test organisation that you could easily enforce via a pre-commit hook. On an integration server compile everything and check regularely the test coverage using a test coverage tool. If test coverage is not 100% for a code, block any commit of the developer. He should send you the test case that covers 100% of the code. Only automatic checks can scale well on a project. You cannot check everything by hand. The developer should have a mean to check if his test cases covers 100% of the code. That way, if he doesn't commit a 100% tested code, it is his own fault, not a "oops, sorry I forgot" fault. Remember : People never do what you expect, they always do what you inspect.
