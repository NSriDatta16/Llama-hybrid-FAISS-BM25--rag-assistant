[site]: stackoverflow
[post_id]: 5630392
[parent_id]: 
[tags]: 
Join two for loops, separated by a print statement into one

In the following code, everything is working as expected. It gets a 4 character long user input that ends with 0. And simply adds stores in a dictonary the occurances of vowels and consonants. input ="" #get input from user while 4 len(input) or input[-1] != "0": #string has to be 4 char long and end in 0 input = raw_input("insert code:") occurrences = {"a":0,"e":0,"i":0,"o":0,"u":0,"consonants":0} #store the vouel count for x in input: if x in occurrences.keys(): occurrences[x] += 1 #count cowels elif x != "0": occurrences["consonants"] += 1 #count consonants for x in occurrences: if occurrences[x] > 0 and x != "consonants": print x + ",", print "were inserted", for x in occurrences: if occurrences[x] > 0 and x != "consonants": print str(occurrences[x]) + ",", print "times respectively" if occurrences["consonants"] == 1: print "there was %d consonant"%occurrences["consonants"] else: print "there was %d consonants"%occurrences["consonants"] For the input "aef0" the program will print: e, a, were inserted 1, 1, times respectively there was 1 consonant My questions is about this particular lines. I know there must be a better way to do: for x in ocurrances: if ocurrances[x] > 0 and x != "consonants": print x + ",", print "were inserted", for x in ocurrances: if ocurrances[x] > 0 and x != "consonants": print str(ocurrances[x]) + ",", print "times respectively" It just feels sloppy. What I don't like about it is that I'm calling twice the same for loop and I feel this could be only one move in a much more elegant way, but I'm not finding the way to do so. A pseudo code (or whatever) of what I'm trying to achieve would be the following. loop the dictionary print all key with values >= 1 print "were inserted" only once print all the respective vales. print "times respectively" As I said I want the same output, but expressed in a more elegant way, I'm assuming the elegant would imply only one for loop but any other (more elegant) options are welcome! I thought about doing something like this , but it's obviously not working. (Don't worry about it, it's just plain wrong, but the approach shows what I was aiming for) Thanks in advance!
