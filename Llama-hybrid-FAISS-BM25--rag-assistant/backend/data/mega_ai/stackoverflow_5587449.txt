[site]: stackoverflow
[post_id]: 5587449
[parent_id]: 5587142
[tags]: 
The one thing that sets apart Entity Framework from most (if not all) other ORM's out there is the fact that is has three layers - a storage model which is the physical database model (tables, views etc.), a conceptual model which represents your objects in your app, and a mapping layer between those two. You can do mappings in EF where a single .NET object maps onto several database tables, and other things. You can also map object inheritance hierarchies into several ways of representing those in database tables. NHibernate can do something similar, definitely in the inheritance area (not sure about the mapping one .NET object to multiple tables). Almost all other ORM's are just simply a more or less glorified 1:1 mapping of database tables into .NET objects - no mapping and modelling capabilities.
