[site]: stackoverflow
[post_id]: 4513232
[parent_id]: 4503852
[tags]: 
A quick (but a little dirty, in my opinion) solution could be to decorate with a Rescue filter all the calling presenters, thus allowing a rescue method to intercept that particular exception. Applying the filter to all presenters could be relatively easy if you have a common base class (you just have to apply it to the common ancestor), otherwise you either have to apply the filter manually or customize the routed messaging stack (which is a bit harder). You can also build some sort of "lazy instantiation" using a proxy instead of the real service. In this proxy you can resolve the real WCF service under a try/catch handler, opening an informative window if internal resolution fails. I don't like too much this solution because you have no clues on the invocation context, so you may show the info to the user even when it would be inappropriate. I also would like to point out an elegant way to handle network outage , automatically disabling the launch point of the action opening the presenter needing a network connection.
