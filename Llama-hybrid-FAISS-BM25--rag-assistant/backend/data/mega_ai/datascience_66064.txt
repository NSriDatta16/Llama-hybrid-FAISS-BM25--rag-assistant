[site]: datascience
[post_id]: 66064
[parent_id]: 
[tags]: 
PyTorch Faster R-CNN ResNet50 - support for occlusion?

Currently I'm using the PyTorch model Faster R-CNN ResNet50. I instantiate this as follows: model = torchvision.models.detection.fasterrcnn_resnet50_fpn(pretrained=True) Then I more or less perform standard object detection, similar to this example on the PyTorch site: https://pytorch.org/tutorials/intermediate/torchvision_tutorial.html I'm getting great results with this model so far. However, many annotation programs now support marking bounding boxes as "occluded". I'm not sure if I can make this model take advantage of or incorporate this into it's training/calculations, can anybody provide a code example or link to an example that demonstrates this? Can this model be used to take advantage of the "occlusion" tag in most annotation programs today? Or do I need to choose a different model more specific to this purpose?
