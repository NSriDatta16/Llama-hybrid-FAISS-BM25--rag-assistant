[site]: stackoverflow
[post_id]: 287202
[parent_id]: 286190
[tags]: 
In reply to some of the great points indicated by Joel and Robert I refactored the method as follows which ran flawless. Public Function GetSomeInfoByBusObject(ByVal SomeID As String) As IList Dim strSQL As String = "InLine SQL" Dim ci As BusObject Dim list As New GenList(Of BusObject) Dim cn As New SqlConnection( ConfigurationSettings.AppSettings("ConnectionString")) Using cn Dim cmd As New SqlCommand(strSQL, cn) Using cmd cmd.Parameters.Add(New SqlParameter ("@SomeID", SqlDbType.NVarChar, 2)).Value = strSiteID cn.Open() Dim result As SqlDataReader = cmd.ExecuteReader(CommandBehavior.CloseConnection) While result.Read() ci = New BusObject(rs("id), result("description")) list.Add(DirectCast(ci, BusObject)) End While result.Close() End Using Return list End Using End Function Created a nice little helper class to wrap the generic details up Public Class GenList(Of T) Inherits CollectionBase Public Function Add(ByVal value As T) As Integer Return List.Add(value) End Function Public Sub Remove(ByVal value As T) List.Remove(value) End Sub Public ReadOnly Property Item(ByVal index As Integer) As T Get Return CType(List.Item(index), T) End Get End Property End Class
