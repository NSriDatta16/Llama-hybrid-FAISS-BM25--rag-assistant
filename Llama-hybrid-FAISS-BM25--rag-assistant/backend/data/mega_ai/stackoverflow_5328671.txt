[site]: stackoverflow
[post_id]: 5328671
[parent_id]: 5328447
[tags]: 
Unfortunately, it is not guaranteed that such an object is initialized before its first use and destroyed after its last use in a program consisting of separately compiled units. For example if you have an instance of your class on static storage in one module and want to use it from constructor of another class on static storage in another module. In this case you imply that the first instance will be initialized before the second one. But the language has no means to specify this order if the instances are defined in separate modules. Sometimes, when you design a library, it is necessary, or simply convenient, to invent a type with a constructor and a destructor with the sole purpose of initialization and cleanup. Such a type would be used once only: to allocate a static object so that the constructor and the destructor are called. This is useful when you work with 3-rd partly libs requiring initialization and finalization calls. For example WinSock 2 requires WSAStartup before you can call other WSA functions and WSACleanup when you're done with WinSock in your process. If you have a static instance of this kind of class calling WSAStartup in constructor and WSACleanup in destructor, you should be able to use WSA functions in other places of your program (except constructors/destructurs of other static objects).
