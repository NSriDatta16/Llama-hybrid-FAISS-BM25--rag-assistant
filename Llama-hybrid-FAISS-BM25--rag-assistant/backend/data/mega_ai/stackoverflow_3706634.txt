[site]: stackoverflow
[post_id]: 3706634
[parent_id]: 3706235
[tags]: 
Well, as Falmarri already said...its a very vague question. But still, I can give you some thought-provoking impulse: You could use a service, which queries a server on specific time periodes, to check, if there are new messages. This would produce alot overhead data, because even if there aren't any messages, the service would still asking the server. A timer would do that: public Timer timerT = new Timer(); Handler updateNow; TimerTask task = new TimerTask() { public void run() { updateNow.sendEmptyMessage(TICK); } }; updateNow = new Handler() { @Override public void handleMessage(Message msg) { switch (msg.what) { case TICK: // Query wird gestartet new updateMsg().execute(); break; } } }; // Fragt alle 60 Sekunden timerT.scheduleAtFixedRate(task, 0, (60 * 1000)); Und die Abfrage an den Server: public class updateMsg extends AsyncTask { String message = ""; protected void onPreExecute() { } protected Void doInBackground(String... data) { HttpReq request = Http.getInstance().createRequest(); request.setUrl("http://www.deinserver.de/msg.php"); request.setMethod("POST"); request.addParam("fuer_name", "keenora"); request.execute(); message = request.getResult(); return null; } protected void onPostExecute(Void unused) { Log.e("DEBUG", "Nachricht vom Server erhalten: " + message); } protected void onCancelled() { } } Und nicht zu vergessen die Server-Seite:
