[site]: stackoverflow
[post_id]: 1038922
[parent_id]: 
[tags]: 
Setting the src attribute of an IFrame to data:application/pdf;base64?

Setting the src attribute of an IFrame to data:application/pdf;base64, isn't working for me, any ideas why? Here's the .aspx markup Untitled Page function loadIFrameFromHiddenField() { //get the node containing the base64 pdf data from the xml in the hidden field var xmlDoc = new ActiveXObject("Microsoft.XMLDOM"); xmlDoc.loadXML(document.getElementById("pdfData").value); xmlDoc.setProperty('SelectionLanguage', 'XPath'); var pdfDataNode = xmlDoc.selectSingleNode("//PDF"); //if we've got the node if (pdfDataNode != null) { //get the data and append it to the src contents var pdfIFrameSrc = "data:application/pdf;base64," + pdfDataNode.text; //set the src attribute document.getElementById("pdfIFrame").setAttribute("src", pdfIFrameSrc); } } and here's the code behind: using System; using System.Data; using System.Configuration; using System.Web; using System.Web.Security; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls; using System.IO; using System.Text; using System.Xml; public partial class _Default : System.Web.UI.Page { protected void Page_Load(object sender, EventArgs e) { //get the bytes from our PDF Byte[] pdfBytes = File.ReadAllBytes("c:\\temp\\Test.pdf"); //build xml containiing our base64 encoded pdf data and put it in hidden field pdfData.Value = buildDocumentXML(pdfBytes, "TestDoc"); //call js function to add the src to the iframe String scriptText = " loadIFrameFromHiddenField() "; ClientScript.RegisterStartupScript(this.GetType(), "loadIFrameFromHiddenField", scriptText); } private string buildDocumentXML(Byte[] pdfBytes, string documentName) { StringBuilder documentsString = new StringBuilder(); XmlWriterSettings documentsXmlSettings = new XmlWriterSettings(); documentsXmlSettings.Indent = false; documentsXmlSettings.OmitXmlDeclaration = true; documentsXmlSettings.ConformanceLevel = ConformanceLevel.Fragment; documentsXmlSettings.NewLineHandling = NewLineHandling.None; using (XmlWriter documentsXmlWriter = XmlWriter.Create(documentsString, documentsXmlSettings)) { documentsXmlWriter.WriteStartElement("DOCUMENTS"); documentsXmlWriter.WriteStartElement("FILENAME"); documentsXmlWriter.WriteString(documentName); documentsXmlWriter.WriteEndElement(); documentsXmlWriter.WriteStartElement("PDF"); documentsXmlWriter.WriteBase64(pdfBytes, 0, pdfBytes.Length); documentsXmlWriter.WriteEndElement(); documentsXmlWriter.WriteEndElement(); } return documentsString.ToString(); } } I should say unlike in this example, in the real app, the pdf data is generated serverside. The reason I'm trying to load the pdf data clientside is I have to have the pdf byte data clientside anyway to do something else with and I'm trying to reduce instances of this data being generated and chucked around. Just stick the above code and markup into a simple one page website in VS2005 and stick any old pdf in c:\temp\, call it TestDoc.pdf and it should compile and run. Basically the behaviour I'm getting is nothing in the iframe at all. I'm using IE7 so that might be a problem. I don't know since there's precious little information about using the data:application/pdf;base64 [base64 data] syntax around.
