[site]: stackoverflow
[post_id]: 134631
[parent_id]: 132988
[tags]: 
They are completely different . is checks for object identity, while == checks for equality (a notion that depends on the two operands' types). It is only a lucky coincidence that " is " seems to work correctly with small integers (e.g. 5 == 4+1). That is because CPython optimizes the storage of integers in the range (-5 to 256) by making them singletons . This behavior is totally implementation-dependent and not guaranteed to be preserved under all manner of minor transformative operations. For example, Python 3.5 also makes short strings singletons, but slicing them disrupts this behavior: >>> "foo" + "bar" == "foobar" True >>> "foo" + "bar" is "foobar" True >>> "foo"[:] + "bar" == "foobar" True >>> "foo"[:] + "bar" is "foobar" False
