[site]: stackoverflow
[post_id]: 3449039
[parent_id]: 
[tags]: 
Sharepoint Filter for List Items(GetListItems)

I'm attempting to get a set of list items from sharepoint via the WebService. I want to query a small subset of items to be returned. My SOAP packet appears to be ordered properly, however, it still appears that the service is ignoring my set filter(query). Any ideas why this would still be happening? MyCalendar [Now+2Minute(s)] and here is the python suds code that i used to generate this soap: Query = Element('Query') where = Element('Where') eq = Element('Eq') eq.append(Element('FieldRef').append(Attribute('Name', 'EventDate'))) vt = Element('Value').append(Attribute('Type', 'DateTime')).setText('[Now+2Minute(s)]') eq.append(vt) where.append(eq) Query.append(where) query = Element('query') query.append(Query) EDIT: Here is the proper soap packet and suds code for what eventually worked for me. I have some strange requirements around the filter, but i'll go ahead and post as is so that others may learn from this. Economic Event Calendar 2010-08-12T07:38:00 2010-08-12T07:39:00 5 and the python/suds code that got me here: #craft our XML Query = Element('Query') where = Element('Where') And = Element('And') geq = Element('Geq') geq.append(Element('FieldRef').append(Attribute('Name', 'EventDate'))) vt = Element('Value').append(Attribute('IncludeTimeValue', 'TRUE')) vt.append(Attribute('Type', 'DateTime')).setText(convert_dt('now +' + str(alertBefore) + ' minutes', '%Y-%m-%dT%H:%M:00' )) lt = Element('Lt') lt.append(Element('FieldRef').append(Attribute('Name', 'EventDate'))) vt2 = Element('Value').append(Attribute('IncludeTimeValue', 'TRUE')) vt2.append(Attribute('Type', 'DateTime')).setText(convert_dt('now +' + str((alertBefore + 1)) + ' minutes', '%Y-%m-%dT%H:%M:00' )) #viewFields fragment, only show the Description and EventDate for returned rows viewFields = Element('viewFields') viewFields.append(Element('FieldRef').append(Attribute('Name','Description'))) viewFields.append(Element('FieldRef').append(Attribute('Name','EventDate'))) #pack all the XML fragments geq.append(vt) lt.append(vt2) where.append(And) And.append(geq) And.append(lt) Query.append(where) query = Element('ns1:query') query.append(Query) #issue the query results = c_lists.service.GetListItems(SPCal, None, query, None, 5, viewFields, None)
