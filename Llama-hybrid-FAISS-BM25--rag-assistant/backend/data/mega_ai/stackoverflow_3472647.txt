[site]: stackoverflow
[post_id]: 3472647
[parent_id]: 3463630
[tags]: 
Attitude-related things: 1) Good pair programming means making an effort to explain things really well and listening carefully . That's a skill in itself. You have to learn how other people tackle things and be patient when other people tackle things differently from you. 2) Being prepared to be flexible and change your mind . The smaller the ego, the easier and less painful it is to handle this. 3) To do agile well, you need to be communicating continuously with everybody in the wider team (i.e. not just devs - sysadmins, managers, customers, network admins, hardware people...) Part of this is feeling comfortable, safe and confident - i.e. there needs to be real trust in the team, not just phoney trust - real trust 4) Be prepared to work outside your specialism and comfort zone . I often have to pair with graphic designers, system admins and DBAs. Saying "that's not my job" isn't part of agile. We're part of a multidisciplinary team and getting the product released in a useful state is the whole team's problem - not just looking after my pet specialism. 5) Try to keep things simple and minimal - no "we'll make it totally generic" or "we'll need it later". Think "you aren't gonna need it." We're shooting for small, simple, concrete steps informed by feedback. 6) Tackle the difficult things and the things that aren't clear first - so that the you get feedback on the problems as early as possible so you if you have to revise estimates or cancel the work the customer gets informed as soon as possible. 7) Try to keep the team dynamics co-operative rather than competitive . Pitting people against each other pulls the team apart - and it gets you well-polished fragments and a broken product rather than a cohesive whole made by people that give-and-take as they find necessary to be successful.
