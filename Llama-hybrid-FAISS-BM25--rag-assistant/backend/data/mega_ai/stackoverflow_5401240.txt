[site]: stackoverflow
[post_id]: 5401240
[parent_id]: 5401218
[tags]: 
CakePHP does not matter, most of the code you would need for this would be at clientside. Implementing AJAX by yourself is a pain in the $, so you really want to use a library; currently the most popular is probably jQuery. There's a bunch of examples on their AJAX page: http://api.jquery.com/jQuery.ajax/ So, assuming you have something like this in the document: you can put this in the JavaScript: $('#s').submit(function(evt) { evt.preventDefault(); $.ajax({ url: 'foo.php', data: { query: $('#q').val() }, success: function(data) { $('#r').html(data); } }); return false; }); Then your foo.php only needs to return the fragment HTML that would go into the div#r . EDIT: I forgot to stop the submit :( Thanks to @Leo for the correction. EDIT: I can see what your confusion is about. You will not get a data . I haven't worked with CakePHP, but I assume $this->data is what you'd get from $_REQUEST['data'] ? You don't get that on the server. data is a hash of what is getting submitted; you will directly get the $_REQUEST['name'] and $_REQUEST['id'] (which, I assume, translate into CakePHP as $this->name and $this->id ).
