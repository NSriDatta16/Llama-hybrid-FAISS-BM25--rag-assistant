[site]: stackoverflow
[post_id]: 2524579
[parent_id]: 2524529
[tags]: 
Keep your data in the Dictionary , but use a List to sort the keys, then iterate as such: IDictionary dict = new Dictionary (); // ... Populate dict with data. IList keyList = new List (); keyList.AddRange(dict.Keys); // Sort keyList based on key's value. // MyObject must implement IComparable . keyList.Sort(delegate(int x, int y) { return dict[x].CompareTo(dict[y]); }); foreach (int key in keyList) { MyObject value = dict[key]; } This way, your list is merely a sorted index and does not affect your storage algorithm.
