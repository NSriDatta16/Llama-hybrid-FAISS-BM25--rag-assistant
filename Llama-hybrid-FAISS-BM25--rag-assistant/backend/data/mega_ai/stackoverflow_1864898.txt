[site]: stackoverflow
[post_id]: 1864898
[parent_id]: 
[tags]: 
MySQL to PostgreSQL: GROUP BY issues

So I decided to try out PostgreSQL instead of MySQL but I am having some slight conversion problems. This was a query of mine that samples data from four tables and spit them out all in on result. I am at a loss of how to convey this in PostgreSQL and specifically in Django but I am leaving that for another quesiton so bonus points if you can Django-fy it but no worries if you just pure SQL it. SELECT links.id, links.created, links.url, links.title, user.username, category.title, SUM(votes.karma_delta) AS karma, SUM(IF(votes.user_id = 1, votes.karma_delta, 0)) AS user_vote FROM links LEFT OUTER JOIN `users` `user` ON (`links`.`user_id`=`user`.`id`) LEFT OUTER JOIN `categories` `category` ON (`links`.`category_id`=`category`.`id`) LEFT OUTER JOIN `votes` `votes` ON (`votes`.`link_id`=`links`.`id`) WHERE (links.id = votes.link_id) GROUP BY votes.link_id ORDER BY (SUM(votes.karma_delta) - 1) / POW((TIMESTAMPDIFF(HOUR, links.created, NOW()) + 2), 1.5) DESC LIMIT 20 The IF in the select was where my first troubles began. Seems it's an IF true/false THEN stuff ELSE other stuff END IF yet I can't get the syntax right. I tried to use Navicat's SQL builder but it constantly wanted me to place everything I had selected into the GROUP BY and that I think it all kinds of wrong. What I am looking for in summary is to make this MySQL query work in PostreSQL. Thank you. Current Progress Just want to thank everybody for their help. This is what I have so far: SELECT links_link.id, links_link.created, links_link.url, links_link.title, links_category.title, SUM(links_vote.karma_delta) AS karma, SUM(CASE WHEN links_vote.user_id = 1 THEN links_vote.karma_delta ELSE 0 END) AS user_vote FROM links_link LEFT OUTER JOIN auth_user ON (links_link.user_id = auth_user.id) LEFT OUTER JOIN links_category ON (links_link.category_id = links_category.id) LEFT OUTER JOIN links_vote ON (links_vote.link_id = links_link.id) WHERE (links_link.id = links_vote.link_id) GROUP BY links_link.id, links_link.created, links_link.url, links_link.title, links_category.title ORDER BY links_link.created DESC LIMIT 20 I had to make some table name changes and I am still working on my ORDER BY so till then we're just gonna cop out. Thanks again!
