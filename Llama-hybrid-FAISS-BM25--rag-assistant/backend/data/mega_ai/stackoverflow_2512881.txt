[site]: stackoverflow
[post_id]: 2512881
[parent_id]: 2512863
[tags]: 
You don't have to achieve 100% code coverage. If a piece of code is a simple wrapper around an OS call, then there has to come a time that you assume that the OS call will do what it's supposed to do (ie. you don't need to call the simple wrapper). Now, if you have complex logic around that OS call, then it would make sense to mock the os call and unit test the logic. Of course, if you have a good abstraction layer on top of the OS call, this wouldn't be hard. You just have to focus your efforts on the pieces that give you the best bang for your maintenance buck
