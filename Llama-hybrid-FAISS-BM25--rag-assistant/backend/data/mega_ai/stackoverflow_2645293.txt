[site]: stackoverflow
[post_id]: 2645293
[parent_id]: 
[tags]: 
Automapper failing to map on IEnumerable

I have two classes like so: public class SentEmailAttachment : ISentEmailAttachment { public SentEmailAttachment(); public string FileName { get; set; } public string ID { get; set; } public string SentEmailID { get; set; } public string StorageService { get; set; } public string StorageServiceFileID { get; set; } } And public class SentEmailAttachmentItem : ISentEmailAttachment { [ItemName] public string ID { get; set; } public string SentEmailID { get; set; } public string FileName { get; set; } public string StorageService { get; set; } public string StorageServiceFileID { get; set; } } Identical, as you can see (they both implement interface to ensure this) I then have the following mapping: Mapper.CreateMap , IEnumerable >(); Mapper.CreateMap , IEnumerable >(); I then have the following Unit test: //create a load of sent email attachments var listOfSentEmailAttachments = new List (); for (int i = 0; i , IEnumerable >(listOfSentEmailAttachments); var itemToTest = sentEmailAttachmentItems.First(); Assert.IsInstanceOfType(itemToTest, typeof(SentEmailAttachmentItem)); This fails - The IEnumerable sentEmailAttachmentItems is empty. It didn't map the list of SentEmailAttachments to it... Any idea what's going on?? I have it working on single objects (mapping one of each to one of each) but not a collection...
