[site]: datascience
[post_id]: 103449
[parent_id]: 
[tags]: 
Data science/Dataframe question concerning an approach to a problem

I want to answer which kind of school type (mixed gender, only for boys or only for girls) is more efficient in training its students based on the result of a normalized exam score. And my model should be able to predict the result of the exam score based on the characteristics of students and schools. There are 4 datasets: two for school and two for students (each one with one for categorical variables and one for numerical variables). The datasets are as follows: The first concerns categorical data for schools, and has only 65 rows, one for each school. I renamed the column 'value' with schgend and dropped the column variable. The second and third one in the picture is the data for categorical variables concerning students. It has more than 12k rows and its columns are wrongly ordered: the first is just index, the second with 1, 1, 1, 1,... 2, 2, 2, ..... 65, 65 is the values for schools' Id, the third column is the student Id which is unique within a given school. You can see that the school Id goes from 1 to 65 and then in line 3949 it goes back to 1 and start to repeat student's Id, the column which contains 'intake' refers to score and then it refers to sex/gender and then another values. The fifth table in the image is similar as it refers again to students within schools, and the fourth are average scores for schools and has only 65 rows - one for each school. I treated the tables, reordered then and ended up with: Now I am very confused on how to proceed. I need some tips, because I am not sure on how to join these 4 tables - supposing I am walking in a good path and everything until here is ok. The datasets concerning students - the last two from the above image - has 4k rows and are indexed and ordered by the student Id, which is unique for a given school but can be used in more than one school in such a way that student id 1 is unique for school 1 but school 2 also has a student which Id is 2 - just like there can be more than on Robert in this world. School 45 is the only school which gave an Id 913 for a school and so on. Maybe I can index these last two datasets in school Id and not student Id? But then I would end up with a lot of columns and many many NaNs . Maybe I should step back and start over with another approach? I want to build an ML that would be capable of answering which type of school is more efficient. Ok, given all this, what my questions are: Do I need to join these 4 tables into only one? If so, can I do that with these tables or I made mistakes on building them? I mean, I am used to do exercises where I have a .csv file which is a dataset with n rows and m columns. Now, for the first time, I started with 4 datasets and somehow I need to join them. Since my task is to predict the exam score given the characteristics of students and schools, the final dataset must be a student per row, right? But how can I possibly build a dataset with one student per row given these 4 datasets I just showed?
