[site]: datascience
[post_id]: 28352
[parent_id]: 28293
[tags]: 
Pretty interesting question! First of all have a look at my edit as your question was a bit unclear according to the standard terminology. you have a set of Time-Series and you want to detect the outliers (abnormalities). Your approach is pretty clear and logic and shows understanding of the problem and solution. The point is about the way you chose to apply it. K-means is not the best way. I would like to point out that choice of 2 clusters are very smart here as you hope the clusters get formed based on a normal/abnormal structure. It just does not work well in practice if the features you extracted from your time-series are not inhibiting the abnormal behavior. I assume Embedding algorithms are the right way to do so. Most probably if you apply a simple PCA you will see abnormal time-series somewhere further than others. Bellow I write the code. Try it and drop me a line if it didn't work so I go for more sophisticated solutions (e.g. you may construct a phase-space and see your data there or monitor the recurrence of time-series, etc.) from sklearn.decomposition import PCA import matplotlib.pyplot as plt pca = PCA(n_components=2) X_new = pca.fit_transform(X) plt.figure(figsize=(10,10)) plt.plot(X_new[:,0],X_new[:,1],"*") plt.show() where X is a 10xN matrix in which each row is one time-series. You may choose more components for PCA and check different PCs against each other. Anyways the problem is not that difficult and if it did not work I will update my answer with another solution. Hope it helps and good luck!
