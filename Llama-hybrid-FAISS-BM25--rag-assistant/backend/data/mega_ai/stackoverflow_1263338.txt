[site]: stackoverflow
[post_id]: 1263338
[parent_id]: 1263273
[tags]: 
It depends on your application, but one of the biggest risks you run in using controls from a variety of vendors in a non-web client comes from an unexpected direction - you may conflict with other things in your appdomain. Let's say that you either want to develop a plugin that exposes your application to another application or vice versa. If you have used controls from several vendors, the likelihood of a namespace collision is much higher. This is important because, for example, DevExpress have changed the organization of their namespaces in important ways over time, and you could easily encounter a situation where your plugin refuses to load because it requires loading a conflicting version of a controls framework. Your only option at that point is to use a separate appdomain to hold your plugin. This is fine for some tasks, but I can tell you from experience that there are major applications out there that do not take this into account whatsoever when exposing their API. Given the limited number of major controls vendors in the .NET marketplace, you need to be careful that your application doesn't open itself up to these kinds of conflicts.
