[site]: stackoverflow
[post_id]: 2380725
[parent_id]: 2380551
[tags]: 
The success callback method is called when the server responds. The $.ajax method sets up a function that handles the response by calling the success callback method. The most likely reason that the success method is not called, is that the response from the server is not correct. The $.ajax method sends a value in the callback query string that the server should use as function name in the JSONP response. If the server is using a different name, the function that the $.ajax method has set up is never called. If the server can not use the value in the callback query string to set the function name in the response, you can specify what function name the $.ajax method should expect from the server. Add the property jsonpCallback to the option object, and set the value to the name of the function that the server uses in the response. If for example the $.ajax method is sending a request to the server using the URL http://service.mydomain.com/getdata?callback=jsonp12345 , the server should respond with something looking like: jsonp12345({...}); If the server ignores the callback query string, and instead responds with something like: mycallback({...}); Then you will have to override the function name by adding a property to the options object: $.ajax({ url: urlOnDiffDomain, dataType: 'jsonp', data: {}, success: function(data, textStatus) { alert('success...'); }, jsonpCallback: 'mycallback' });
