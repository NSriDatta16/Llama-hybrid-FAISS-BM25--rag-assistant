[site]: stackoverflow
[post_id]: 5071923
[parent_id]: 5071508
[tags]: 
I think you're doing it wrong. The MouseMotionListener is added to the JLabel and its location is relative to the JLabel , not the Container which holds the JLabel, so the information is useless to help you drag it. You may wish to use a MouseAdapter and add it both as a MouseListener and a MouseMotionListener. On mousePressed, get the location of the JLabel and the mouse relative to the screen and then use that for your dragging on mouseDragged. Myself, I wouldn't extend JLabel to do this but would rather just use a regular JLabel, but that's my preference. Edit: it worked better for me when I dealt with the mouse's position relative to the screen (by calling getLocationOnScreen) and the JLabel's position relative to its Container (by calling getLocation). For e.g., import java.awt.*; import java.awt.event.*; import java.util.Random; import javax.swing.*; public class DragLabelEg { private static final String[] LABEL_STRINGS = { "Do", "Re", "Me", "Fa", "So", "La", "Ti" }; private static final int HEIGHT = 400; private static final int WIDTH = 600; private static final Dimension MAIN_PANEL_SIZE = new Dimension(WIDTH, HEIGHT); private static final int LBL_WIDTH = 60; private static final int LBL_HEIGHT = 40; private static final Dimension LABEL_SIZE = new Dimension(LBL_WIDTH, LBL_HEIGHT); private JPanel mainPanel = new JPanel(); private Random random = new Random(); public DragLabelEg() { mainPanel.setPreferredSize(MAIN_PANEL_SIZE); mainPanel.setLayout(null); MyMouseAdapter myMouseAdapter = new MyMouseAdapter(); for (int i = 0; i
