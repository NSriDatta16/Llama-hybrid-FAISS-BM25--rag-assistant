[site]: stackoverflow
[post_id]: 1599255
[parent_id]: 1226450
[tags]: 
Some notes specificly on Dijkstra algorithm in Java: http://renaud.waldura.com/doc/java/dijkstra/ And a note about performance: The complexity of Dijkstra's algorithm depends heavily on the complexity of the priority queue Q. If this queue is implemented naively as I first introduced it (i.e. it is re-ordered at every iteration to find the mininum node), the algorithm performs in O(n2), where n is the number of nodes in the graph. With a real priority queue kept ordered at all times, as we implemented it, the complexity averages O(n log m). The logarithm function stems from the collections PriorityQueue class, a heap implementation which performs in log(m). With a real priority queue kept ordered at all times, as we implemented it, the complexity averages O(n log m).
