[site]: stackoverflow
[post_id]: 2462257
[parent_id]: 2426696
[tags]: 
I believe you're asking why use registers, since variables eventually go to the stack anyway. The answer is, think of registers like a cache for the top 5 or 6 (or whatever) items on the top of the stack. If the top of the stack is being accessed much, much more than the bottom (which is true in a lot of programs), then having this cache will speed things up. I guess you could say why have user-visible registers at all, instead of a transparent cache of the top few bits. I'm not sure, but I suspect that letting the compiler know what values will be cached lets it optimize storage allocation more. After all, if there's some cutoff in the stack after which variable accesses will be much more expensive, you'd arrange your variables to work with that.
