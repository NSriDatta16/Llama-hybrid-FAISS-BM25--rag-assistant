[site]: stackoverflow
[post_id]: 1478083
[parent_id]: 
[tags]: 
How can I efficiently match many different regex patterns in Perl?

I have a growing list of regular expressions that I am using to parse through log files searching for "interesting" error and debug statements. I'm currently breaking them into 5 buckets, with most of them falling into 3 large buckets. I have over 140 of patterns so far, and the list is continuing to grow. Most of the regular expressions are simple, but they're also fairly unique, so my opportunities to catch multiple matches with a single pattern are few and far between. Because of the nature of what I'm matching, the patterns tend to be obscure and therefor seldom matched against, so I'm doing a TON of work on each input line with the end result being that it fails to match anything, or matches one of the generic ones at the very end. And because of the quantity of input (hundreds of megabytes of log files) I'm sometimes waiting for a minute or two for the script to finish. Hence my desire for a more efficient solution. I'm not interested in sacrificing clarity for speed, though. I currently have the regular expressions set up like this: if (($line =~ m{Failed in routing out}) || ($line =~ m{Agent .+ failed}) || ($line =~ m{Record Not Exist in DB}) || ... Is there a better way of structuring this so it's more efficient, yet still maintainable? Thanks!
