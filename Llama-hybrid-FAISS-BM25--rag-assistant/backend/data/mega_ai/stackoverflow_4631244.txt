[site]: stackoverflow
[post_id]: 4631244
[parent_id]: 4629393
[tags]: 
As you know, you should use touchesBegan, Moved, Ended, and Canceled functions for pre 3.2 iOS. I think implementing only touchesMoved is bad because if the user presses and doesn't move at all until releasing, then touchesMoved won't get called ever. Instead, I used NSTimer to acheive a long press touch event. This might not be an optimal solution, but it worked well for my app. Here's a snippet of code. - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event{ isAvailable = NO; timer = [NSTimer scheduledTimerWithTimeInterval:DURATION target:self selector:@selector(didPassTime:) userInfo:nil repeats:NO]; } - (void)didPassTime:(id)sender{ isAvailable = YES; } - (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event{ if(isAvailable == YES){ // still pressing after 0.5 seconds } else{ // still pressing before 0.5 seconds } } - (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event{ if(isAvailable == YES){ // releasing a finger after 0.5 seconds } else { // releasing a finger before 0.5 seconds [timer invalidate]; timer = nil; } }
