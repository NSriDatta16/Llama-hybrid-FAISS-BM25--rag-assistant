[site]: stackoverflow
[post_id]: 4804904
[parent_id]: 4804620
[tags]: 
Between this and your previous question, I think I can figure out what you are trying to do. First off, if your users can be in multiple roles, you'll want your roles enumeration to be decorated with the [Flags] attribute. I'm assuming this is what you want since you're using check boxes and not a radio selector. Next, to dynamically get the names for the Roles , you'll want to use something more like [Enum.GetNames(enum)] . If you'd like something better for a description than the name of the value in the enum, you can google for a GetDescription function pretty easily and then apply a [Description(...)] attribute to each one. You will also want to write an enum.HasFlag(MyEnum.ValueToCheckAgainst) extension function ( or use the one built in .NET 4.0 ) to determine if the checkbox is checked or not. Also, @Shekhar_Pro's answer is also useful because you'll want your function to only take a single Role, not an array of them to generate the list of UserRoleModel s. You will then call this function for each user you want to display. And the last part, turning those check boxes back into a Role value, you'll have to do that manually. Write a function which takes an array of Role values and AND's them all together (after you make it a legitimate flags enum). Then just return the result. If you want something more "elegant" than that, you'll probably just want to make that function an extension on whatever you think should output those values (like your view model).
