[site]: stackoverflow
[post_id]: 1524621
[parent_id]: 1524283
[tags]: 
Actually, you can use x-SNAPSHOT version and still use the maven-release-plugin . Just use mvn release:prepare before mvn release:perform to prepare your release and change the version in the poms from x-SNAPSHOT to a new version (you will be prompted for the versions to use). You can check out this introduction to the maven-release-plugin for a quick overview of release:prepare and release:perform . Then, to include the latest version without constantly updating dependencies version, you could use dependency ranges like in the following snippet where we specify a range Junit 3.8 - Junit 4.0: junit junit [3.8,4.0) test A version before or after the comma is not required, and means +/- infinity. For example, [4.0,) means any version greater than or equal to 4.0. Personally, I don't like to use dependency ranges that much because I find that it can lead to build reproducibility issues and makes the build more fragile. But you may have good reasons to use them.
