[site]: stackoverflow
[post_id]: 4871904
[parent_id]: 4871881
[tags]: 
If your question is to find out the number of unique 1D arrays, you could do: A.Distinct().Count() This should do because equality of arrays works on reference-equality by default. But perhaps you're looking for: A.Distinct().Sum(oneDimArray => oneDimArray.Length) * sizeof(byte) Of course, "number of bytes used by variables" is a somewhat imprecise term. In particular, the above expression doesn't account for the storage of the variable A , references in the jagged array, overhead, alignment etc. EDIT: As Rob points out, you may need to filter null references out if the jagged-array can contain them. You can estimate the cost of storing the references in the jagged-array with ( unsafe context): A.Length * sizeof(IntPtr)
