[site]: stackoverflow
[post_id]: 4686618
[parent_id]: 4684486
[tags]: 
The pragmatic answer is that using a view file and two calls to render is Not The Rails Way: views are generally something that is sent to the client, and ActionPack is engineered to work that way. That said, there's an easy way to achieve what you're trying to do. Rather than using ActionView, you could use Builder::XmlMarkup directly to generate your XML as a string: def action_in_controller buffer = "" xml = Builder::XmlMarkup.new(buffer) # build your XML - essentially copy your view.xml.builder file here xml.element("value") xml.element("value") # send the contents of buffer to your 3rd server # allow your controller to render your view normally end Have a look at the Builder documentation to see how it works. The other feature of Builder that you can take advantage of is the fact that XML content is appended to the buffer using , so any IO stream can be used. Depending how you're sending content to the other server, you could wrap it all up quite nicely. Of course, this could end up very messy and long, which is why you'd want to encapsulate this bit of functionality in another class, or as a method in your model.
