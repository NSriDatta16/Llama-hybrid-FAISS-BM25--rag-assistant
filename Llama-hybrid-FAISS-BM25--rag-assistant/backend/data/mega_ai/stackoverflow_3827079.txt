[site]: stackoverflow
[post_id]: 3827079
[parent_id]: 3823473
[tags]: 
With some help from this topic and in others in creating a better query, I was able to resolve this with the following code: function get_book_info() { /* * SELECT b.isbn, b.title, b.publisher, b.date, b.thumb, b.filename, b.pages, t.tag * FROM books AS b * INNER JOIN books_tags AS bt ON b.isbn = bt.book_id * INNER JOIN tags AS t ON bt.tag_id = t.id * ORDER BY b.title, t.tag */ $this->db->select('b.isbn, b.title, b.publisher, b.date, b.thumb, b.filename, b.pages, t.tag'); $this->db->from('books AS b'); $this->db->join('books_tags AS bt', 'b.isbn = bt.book_id', 'inner'); $this->db->join('tags AS t', 'bt.tag_id = t.id', 'inner'); $this->db->order_by('b.title, t.tag'); $query = $this->db->get(); $result = $query->result(); $counter = ''; $record = $meta = $tags = array(); $count = count($result); $i = 1; foreach ($result as $book) { // If this is not the last row if ($i isbn) { // If the meta array already exists if ($meta) { // Add the combined tag string to the meta array $meta['tags'] = implode(', ', $tags); // Add the meta array $record[] = $meta; // Empty the tags array $tags = array(); } // Reset the counter $counter = $book->isbn; // Grab the book from Amazon $amazon = $this->amazon->get_amazon_item($book->isbn); // Collect the book information $meta = array( 'isbn' => $book->isbn, 'title' => strip_slashes($book->title), 'publisher' => strip_slashes($book->publisher), 'date' => date('F j, Y', strtotime($book->date)), 'thumb' => $book->thumb, 'file' => $book->filename, 'pages' => $book->pages, 'rating' => $amazon->Items->Item->CustomerReviews->AverageRating, 'raters' => $amazon->Items->Item->CustomerReviews->TotalReviews ); // Add the tag to the tags array $tags[] = $book->tag; } else { // All we need is the tag $tags[] = $book->tag; } // If this is the last row } else { // If this is the first appearance of this book if ($counter != $book->isbn) { // Grab the book from Amazon $amazon = $this->amazon->get_amazon_item($book->isbn); // Collect the book information $meta = array( 'isbn' => $book->isbn, 'title' => strip_slashes($book->title), 'publisher' => strip_slashes($book->publisher), 'date' => date('F j, Y', strtotime($book->date)), 'thumb' => $book->thumb, 'file' => $book->filename, 'pages' => $book->pages, 'rating' => $amazon->Items->Item->CustomerReviews->AverageRating, 'raters' => $amazon->Items->Item->CustomerReviews->TotalReviews ); // Add the tag to the tags array $tags[] = $book->tag; // Add the combined tag string to the meta array $meta['tags'] = implode(', ', $tags); // Add the meta array $record[] = $meta; } else { // All we need is the tag $tags[] = $book->tag; // Add the combined tag string to the meta array $meta['tags'] = implode(', ', $tags); // Add the meta array $record[] = $meta; } } $i++; } return $record; } There may very well be a better way to handle this, but this was how my logic saw it. And only one query, total.
