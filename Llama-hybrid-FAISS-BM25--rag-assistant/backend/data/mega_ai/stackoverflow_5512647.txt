[site]: stackoverflow
[post_id]: 5512647
[parent_id]: 5510371
[tags]: 
I want the test to be DETERMINISTIC - regardless of what is happening on the machine running the tests, I want multiple runs of the test to return the same results. Fail. More or less by definition this is utterly impossible in a multi-processing system with multiple users. Either rethink this requirement or find a new environment in which to run tests that doesn't involve any of the modern multi-processing operating systems. Further, your running web application is not deterministic, so imposing some kind of "deterministic" performance testing doesn't help much. When we did time-critical processing (in radar, where "real time" actually meant real time) we did not attempt deterministic testing. We did code inspections and ran simple performance tests that involved simple averages and maximums. Use cProfile to instrument the interpreter to ignore "outside noise". I'm not sure I know how to read the pstats structure yet, but I'm sure it is doable. The Stats object created by the profiler is what you're looking for. http://docs.python.org/library/profile.html#the-stats-class Focus on 'pcalls', primitive call count, in the profile statistics and you'll have something that's approximately deterministic.
