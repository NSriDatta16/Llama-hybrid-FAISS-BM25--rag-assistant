[site]: stackoverflow
[post_id]: 489155
[parent_id]: 489123
[tags]: 
v.resize(numOfElements); v.clear(); //so i wont get numOfElements + len when i push back Well, that above code snippet is in effect allocating and creating elements, just to destroy them again. It's in effect the same as: v.reserve(numOfElements); Just that this code is way faster. So, v.size() == 0 in both cases and v.capacity() might be the same as numOfElements in both cases too (although this is not guaranteed ). In the second case, however, the capacity is at least numOfElements , which means the internal buffer will not be reallocated until you have push_back'ed that many elements to your vector. Note that in both cases it is invalid if you try accessing any elements - because there are zero elements actually contained. Apart from that, i haven't figured a problem in your code. It's safe and i would encourage it so use it instead of a raw new or malloc because of the added safeties it provides. I'm however not sure what you mean by "dump v".
