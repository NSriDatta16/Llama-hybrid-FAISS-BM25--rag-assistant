[site]: stackoverflow
[post_id]: 2569936
[parent_id]: 1044765
[tags]: 
We've experienced issues with libcurl losing "session" when the headers are a particular size. The two known cases we've seen are 1425 and 2885. When the sent headers are this specific size the server doesn't appear to receive the proper cookies. We haven't actually tested against a controlled server to see what is actually received by the server. The work-around we came up with was to alter the User-Agent slightly by adding a space at the end to change the header size. Here is some code to predict the header size before the request is sent size_t PredictHeaderOutSize(CURL *curl, bool doPost, const char* request, char* userAgent, const char* host, const char* form) { size_t predictedHeaderOutSize = 0; // Note, so far predicting 1 byte per newline, fix the hard coded #'s below if that turns out to be wrong // POST/GET line predictedHeaderOutSize += (doPost ? 4 : 3); // POST vs GET predictedHeaderOutSize += strlen(request); predictedHeaderOutSize += 11; // Extra characters in 'POST HTTP/1.1' not accounted for above // User-Agent line predictedHeaderOutSize += strlen(userAgent); predictedHeaderOutSize += 13; // Host: header predictedHeaderOutSize += strlen(host); predictedHeaderOutSize += 7; // Accept: */* predictedHeaderOutSize += 12; // Cookie: struct curl_slist *cookies=NULL; struct curl_slist *next_cookie; int num_cookies = 0; CURLcode res = curl_easy_getinfo(curl, CURLINFO_COOKIELIST, &cookies); if (res == CURLE_OK) { if (cookies != NULL) { // At least 1 cookie so add the extra space taken on cookie line predictedHeaderOutSize += 7; next_cookie = cookies; num_cookies = 1; while (next_cookie) { std::vector cookie = QueueHelper::Split("\t", next_cookie->data, 7); if (cookie.size() != 7) { // wtf? } else { // For each cookie we add length of key + value + 3 (for the = ; and extra space) predictedHeaderOutSize += cookie[5].length() + cookie[6].length() + 3; } next_cookie = next_cookie->next; num_cookies++; } curl_slist_free_all(cookies); } } else { printf("curl_easy_getinfo failed: %s\n", curl_easy_strerror(res)); } if (doPost) { // Content-Length: size_t formLength = strlen(form); if (formLength = 10 && formLength = 100 && formLength = 1000 && formLength
