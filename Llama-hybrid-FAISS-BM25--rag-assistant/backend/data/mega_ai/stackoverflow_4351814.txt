[site]: stackoverflow
[post_id]: 4351814
[parent_id]: 4351656
[tags]: 
When a crash occurs, there will be a backtrace. Post it. Either your program will break in the debugger, and the call stack will be in the debugger UI (or you can type 'bt With that, the cause of the crash is often quite obvious. Without that, we are left to critique the code. So, here goes.... Zombie debugging gives: "* -[CFString length]: message sent to deallocated instance 0x5b7b250". Nowhere in my map view or annotation class do I use string length. Yes, but you likely have strings that your code creates that are passed off to the system frameworks for rendering purposes or to be copied or whatever. And, likely, any one of those tasks requires the string's length. When debugging zombies, it is helpful to look at the history of retains and releases on a particular object, which is available in the Allocations instrument. Though on a slightly different subject, some of the screenshots and instructions in a post I wrote about find memory accretion may help. An obvious bug is that you don't retain the title passed in to your init method, but you release it in dealloc . It should be retained; self.title = passTitle; should do the trick. Note that build and analyze should catch such bugs. Same goes for the Photo parameter. Note also that NSString properties should generally be copy and not retain . Copying an immutable string is free and copying a mutable string greatly reduces potential fragility.
