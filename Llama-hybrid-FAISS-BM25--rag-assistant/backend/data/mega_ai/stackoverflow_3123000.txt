[site]: stackoverflow
[post_id]: 3123000
[parent_id]: 3122690
[tags]: 
How do I find the biggest element of a list If the list is ordered, then the biggest element is the first (or last) element of the list. If the list is not ordered then: Element biggest = list.get(0); for (Element e : list) { if (e.compareWith(biggest) > 0) { biggest = e; } } For example, suppose we have 1,000,000 chess players, and we are assigned the task of finding the best chess player in the group. Now, we want to minimize the maximum number of games any player plays. With the new constraint of the last sentence ... Answer #1: zero games played. Compare the chess player's rankings and the one with the best ranking is the objectively best player ... according to the ranking. Answer #2: at most ceiling(log2(nos_players)) games played per player. A "knock out" / elimination tournament eliminates half the players in each round, so the number of rounds and hence the maximum number of games played by any one player is ceiling(log2(nos_players)) . The corresponding algorithm is trivially: List players = ... while (players.size() > 1) { List winners = new ArrayList(); Iterator it = players.iterator(); while (it.hasNext()) { Player p1 = it.next(); if (it.hasNext()) { Player p2 = it.next(); int result = p1.compareTo(p2); if (result 0) { winners.add(p1); } else { throw new Exception("draws are impossible in chess"); } } else { winners.add(p1); // bye } } players = winners; } (Aside: if you also have a predetermined ranking for the players and the number of players N is at least 2 less than ceiling(log2(N)) , you can arrange that the best 2 players get a bye in one round. If the best 2 players meet in the final, then everyone will have played less than ceiling(log2(N)) games ... which is an improvement on the solution where the byes are allocated randomly.) In reality, answer #2 does not work for the game of chess because it does not take account of the fact that a significant percentage of real chess games are draws; i.e. neither player wins. Indeed, the fact that player A beat player B in one game does not mean A is a better player than B. To determine who is the better of any two players they need to play a number of games and tally the wins and losses. In short, the notion that there is a "better than" relation for chess players is TOTALLY unrealistic. Not withstanding the points above, knock-out is NOT a practical way to organize a chess tournament. Everyone will be camped out on the tournament organizer's desk complaining about having to play games against players much better (or worse) than themselves. The way a real chess (or similar) tournament works is that you decide on the number of rounds you want to play first. Then in a "round-robin" tournament, you select the top N players by ranking. and arrange that each player plays each other player. The player with the best win / draw score is the winner, and in the event of a tie you use (say) "sum of opponents scores" as a tie breaker. There are other styles of tournament as well that cater for more players / less rounds.
