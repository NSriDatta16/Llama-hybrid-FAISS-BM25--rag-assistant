[site]: stackoverflow
[post_id]: 5311032
[parent_id]: 
[tags]: 
Filter text from ListView

Guys, I want filter from listview which have countries list, I want to enter a countries name in a textbox or we can say that search box then after listview updated with written country in edit text, and if not matched error is generated that country not available. So, mainly I want listview updation dynamically and also clear it dynamically with loading of other data. Please reply me for this subject. Here is code: package com.halosys.HivAtlas; import android.app.Activity; import android.os.Bundle; import android.text.Editable; import android.text.TextWatcher; import android.widget.ArrayAdapter; import android.widget.EditText; import android.widget.ListView; public class FilterScreen extends Activity{ ListView lv; ArrayAdapter adapter; static int flag=0; TextWatcher filterTextWatcher; public static final String[] COUNTRIES = new String[] { "Afghanistan", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cote d'Ivoire", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Democratic Republic of the Congo", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Faeroe Islands", "Falkland Islands", "Fiji", "Finland", "Former Yugoslav Republic of Macedonia", "France", "French Guiana", "French Polynesia", "French Southern Territories", "Gabon", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Marianas", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Reunion", "Romania", "Russia", "Rwanda", "Sqo Tome and Principe", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Saudi Arabia", "Senegal", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia and the South Sandwich Islands", "South Korea", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "The Bahamas", "The Gambia", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Virgin Islands", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "United States Minor Outlying Islands", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Yugoslavia", "Zambia", "Zimbabwe" }; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.filterscreen); adapter=new ArrayAdapter (FilterScreen.this,R.layout.filtertext,COUNTRIES); lv = (ListView)findViewById(R.id.countrylist); lv.setAdapter(adapter); lv.setTextFilterEnabled(true); lv.setDividerHeight(2); //ArrayAdapter adapter = new ArrayAdapter (this, //android.R.layout.simple_dropdown_item_1line, COUNTRIES); final EditText edsearch = (EditText)findViewById(R.id.editText1); edsearch.addTextChangedListener(filterTextWatcher); //search is my EditText filterTextWatcher = new TextWatcher() { public void afterTextChanged(Editable s) { adapter.getFilter().filter(s); //Filter from my adapter adapter.notifyDataSetChanged(); //Update my view } public void beforeTextChanged(CharSequence s, int start, int count, int after) { } public void onTextChanged(CharSequence s, int start, int before, int count) { } }; /*edsearch.addTextChangedListener(new TextWatcher() { public void afterTextChanged (Editable s){ } public void beforeTextChanged (CharSequence s, int start, int count, int after){ Log.d("seachScreen", "beforeTextChanged"); } public void onTextChanged (CharSequence s, int start, int before, int count) { ArrayList selectCoun = new ArrayList (); for(int i=0;i (FilterScreen.this,R.layout.filtertext,selectCoun); //adapter.notifyDataSetChanged(); break; } } adapter.notifyDataSetChanged(); if(flag==0) { Toast.makeText(FilterScreen.this, "Country Not Found", Toast.LENGTH_SHORT).show(); } else { adapter.clear(); adapter.add(edsearch.getText().toString()); } //Log.d("seachScreen", "afterTextChanged"); // Log.d("seachScreen", "onTextChanged"); } //MultiAutoCompleteTextView textView = (MultiAutoCompleteTextView) findViewById(R.id.multiAutoCompleteTextView1); // textView.setAdapter(adapter); //textView.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer()); });*/ } }
