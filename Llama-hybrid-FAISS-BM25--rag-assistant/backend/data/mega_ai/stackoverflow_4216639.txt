[site]: stackoverflow
[post_id]: 4216639
[parent_id]: 
[tags]: 
Creating and using a cross platform struct in C++

I am writing a cross platform game with networking capabilities (using SFML and RakNet ) and I have come to the point where I have compiled the server on my Ubuntu server and got a client going on my Mac. All the development is done on my Mac so I have initially been testing the server on that, and it has worked fine. I am sending struct s over the network and then simply casting them back from char * to (for example) inet::PlayerAdded . Now this has been working fine (for the most part), but my question is: Will this always work? It seems like a very fragile approach. Will the struct's always be laid out the same even on other platforms, Windows, for example? What would you recommend? #pragma pack(push, 1) struct Player { int dir[2]; int left; float depth; float elevation; float velocity[2]; char character[50]; char username[50]; }; // I have been added to the game and my ID is back struct PlayerAdded: Packet { id_type id; Player player; }; #pragma pack(pop)
