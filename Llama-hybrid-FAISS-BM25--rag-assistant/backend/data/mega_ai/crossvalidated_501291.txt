[site]: crossvalidated
[post_id]: 501291
[parent_id]: 
[tags]: 
Model specification for seasonal ARMA-GARCH model using rugarch

TL;DR: I'm trying to find an adequate model for time series data that exhibits multiplicative seasonality and volatility clustering by identifying an ARMA-GARCH-model with Fourier terms using rugarch:: in R . Using R , I'm currently trying to identify an adequate model for a time series that displays multiplicative seasonality as well as heteroscedasticity (volatility clustering): In order to do so, I've since learned that fitting an ARMA-GARCH model is the way to go. To find and evaluate the best model, I'm currently working with the rugarch package. My first step is to evaluate whether differencing is necessary to make the series stationary: ndiffs(ts_merged_short)#checking if and how many times the series needs to be differenced [1] 1 #once diff My next step is identifying the ARMA-order, as it has to be incorporated in the GARCH-model later on. I'm using the auto.arima() function from the forecast:: package to automatically identify the best possible parameters. To account for seasonality, I'm incorporating Fourier terms that I identify using the fourier function: diff %>% auto.arima(trace = TRUE, approximation = T, stepwise = T, seasonal = F, #set to false since the goal is to account for seasonality by incorporating Fourier terms in the model. SARIMA(p, d, q)(P, D, Q)[24] parameters aren't supported by `rugarch`, thus ARMA terms plus adequate external regressors are needed. xreg = fourier(diff, K = 5, h = NULL), #K was chosen so that AICc would be as small as possible. the frequency of the ts is 24 so that the biggest possible K would be 12. lambda = NULL, biasadj = F) Best model: Regression with ARIMA(3,0,5) errors Series: . Regression with ARIMA(3,0,5) errors Coefficients: ar1 ar2 ar3 ma1 ma2 ma3 ma4 ma5 S1-24 C1-24 S2-24 C2-24 S3-24 1.0777 0.5319 -0.7257 -0.7886 -0.8742 0.4714 0.2755 -0.0158 35.1113 -42.7219 5.0928 -50.6997 -1.2522 s.e. 0.1254 0.2299 0.1134 0.1272 0.1913 0.0611 0.0338 0.0324 15.1030 15.1397 7.8889 7.8865 6.9331 C3-24 S4-24 C4-24 S5-24 C5-24 -13.7789 -1.7416 -1.5330 27.7853 -9.0028 s.e. 6.9313 6.4429 6.4417 5.9976 5.9970 sigma^2 estimated as 20900: log likelihood=-9657.55 AIC=19353.09 AICc=19353.6 BIC=19454.19 Apparently, the differenced times series with Fourier terms as external regressors for seasonality is best modelled by an ARMA(3, 5) model. As expected, the residuals from this model exhibit volatility clustering and serial correlation: checkresiduals yields and Ljung-Box test data: Residuals from Regression with ARIMA(3,0,5) errors Q* = 254.7, df = 30, p-value Testing for conditional heteroscedasticity in my ts using archTest from the MTS package further confirms the suspicion that the ts can probably be modelled better by an ARMA-GARCH model. Q(m) of squared series(LM test): Test statistic: 801.0283 p-value: 0 Rank-based Test: Test statistic: 4817.784 p-value: 0 Thus, the next step is doing just that. I'm starting by setting up the specifications for the model: spec Model fitting is next: garch_fit The result is: *---------------------------------* * GARCH Model Fit * *---------------------------------* Conditional Variance Dynamics ----------------------------------- GARCH Model : sGARCH(2,2) Mean Model : ARFIMA(3,0,5) Distribution : norm Optimal Parameters ------------------------------------ Estimate Std. Error t value Pr(>|t|) mu 0.499999 0.855876 0.584196 0.559088 ar1 1.009506 0.022526 44.814926 0.000000 ar2 0.458184 0.029265 15.656452 0.000000 ar3 -0.621477 0.017387 -35.743473 0.000000 ma1 -0.634433 0.007040 -90.117373 0.000000 ma2 -0.744676 0.019738 -37.728949 0.000000 ma3 0.329059 0.015493 21.239647 0.000000 ma4 0.182138 0.023849 7.637235 0.000000 ma5 -0.025306 0.031025 -0.815664 0.414692 mxreg1 32.227357 3.306690 9.746107 0.000000 mxreg2 -11.217877 3.141959 -3.570345 0.000357 mxreg3 -18.741778 2.250048 -8.329502 0.000000 mxreg4 0.660728 2.584390 0.255661 0.798213 mxreg5 9.519166 1.669838 5.700654 0.000000 mxreg6 -0.443679 1.711427 -0.259245 0.795446 mxreg7 -3.751727 1.545775 -2.427085 0.015221 mxreg8 -6.650868 1.431939 -4.644659 0.000003 mxreg9 5.036256 1.456073 3.458795 0.000543 mxreg10 3.491726 1.348053 2.590199 0.009592 omega 568.774124 139.146080 4.087604 0.000044 alpha1 0.406398 0.034451 11.796341 0.000000 alpha2 0.459873 0.043297 10.621308 0.000000 beta1 0.000093 0.047788 0.001937 0.998455 beta2 0.132637 0.025045 5.296034 0.000000 Robust Standard Errors: Estimate Std. Error t value Pr(>|t|) mu 0.499999 4.551389 0.109856 0.912523 ar1 1.009506 0.050910 19.829083 0.000000 ar2 0.458184 0.070026 6.543074 0.000000 ar3 -0.621477 0.075538 -8.227341 0.000000 ma1 -0.634433 0.024862 -25.518177 0.000000 ma2 -0.744676 0.068422 -10.883619 0.000000 ma3 0.329059 0.080928 4.066091 0.000048 ma4 0.182138 0.069865 2.606997 0.009134 ma5 -0.025306 0.077954 -0.324626 0.745464 mxreg1 32.227357 10.743122 2.999813 0.002701 mxreg2 -11.217877 6.913872 -1.622517 0.104693 mxreg3 -18.741778 7.497623 -2.499696 0.012430 mxreg4 0.660728 10.623432 0.062195 0.950407 mxreg5 9.519166 5.345796 1.780683 0.074964 mxreg6 -0.443679 4.743431 -0.093535 0.925478 mxreg7 -3.751727 4.011590 -0.935222 0.349674 mxreg8 -6.650868 2.884119 -2.306031 0.021109 mxreg9 5.036256 4.686360 1.074663 0.282526 mxreg10 3.491726 1.771315 1.971263 0.048694 omega 568.774124 841.580518 0.675840 0.499142 alpha1 0.406398 0.110226 3.686940 0.000227 alpha2 0.459873 0.153114 3.003476 0.002669 beta1 0.000093 0.115962 0.000798 0.999363 beta2 0.132637 0.042478 3.122455 0.001793 LogLikelihood : -8654.719 Information Criteria ------------------------------------ Akaike 11.480 Bayes 11.564 Shibata 11.479 Hannan-Quinn 11.511 But there still appears to be serial correlation: Weighted Ljung-Box Test on Standardized Residuals ------------------------------------ statistic p-value Lag[1] 1.918 0.1661 Lag[2*(p+q)+(p+q)-1][23] 39.728 0.0000 Lag[4*(p+q)+(p+q)-1][39] 89.465 0.0000 d.o.f=8 H0 : No serial correlation Weighted Ljung-Box Test on Standardized Squared Residuals ------------------------------------ statistic p-value Lag[1] 0.2131 0.6444 Lag[2*(p+q)+(p+q)-1][11] 1.3555 0.9894 Lag[4*(p+q)+(p+q)-1][19] 1.7997 0.9998 d.o.f=4 But the ARCH-processes in the ts seem to have been adequately captured: Weighted ARCH LM Tests ------------------------------------ Statistic Shape Scale P-Value ARCH Lag[5] 0.4885 0.500 2.000 0.4846 ARCH Lag[7] 0.6213 1.473 1.746 0.8640 ARCH Lag[9] 0.6833 2.402 1.619 0.9686 Nyblom stability test ------------------------------------ Joint Statistic: no.parameters>20 (not available) Individual Statistics: mu 0.15712 ar1 0.15680 ar2 0.02499 ar3 0.14805 ma1 0.09609 ma2 0.07203 ma3 0.14563 ma4 0.12195 ma5 0.19351 mxreg1 0.12802 mxreg2 0.15114 mxreg3 0.10752 mxreg4 0.38436 mxreg5 0.35351 mxreg6 0.14108 mxreg7 0.24750 mxreg8 0.15062 mxreg9 0.18939 mxreg10 0.13833 omega 0.18842 alpha1 7.31236 alpha2 3.54458 beta1 4.56446 beta2 6.37310 Asymptotic Critical Values (10% 5% 1%) Individual Statistic: 0.35 0.47 0.75 Sign Bias Test ------------------------------------ t-value prob sig Sign Bias 1.5246 0.1276 Negative Sign Bias 0.4268 0.6696 Positive Sign Bias 0.9968 0.3190 Joint Effect 2.6684 0.4456 Furthermore, the empirical distribution of the standardised residuals doesn't seem to match the theoretical one: Adjusted Pearson Goodness-of-Fit Test: ------------------------------------ group statistic p-value(g-1) 1 20 206.9 1.445e-33 2 30 226.6 1.671e-32 3 40 246.6 5.843e-32 4 50 256.5 6.675e-30 Elapsed time : 15.44052 An optical inspection of the residuals of the ARMA-GARCH(3, 5)(2, 2)-model also leads me to the conclusion that the model is inadequate. In fact, the residual plot doesn't appear to have changed much in comparison to the original ARMA-model. I've now read a lot of websites and Stack Overflow and Cross Validated questions but I still can't figure out where I went wrong. Can any of you identify my mistake?
