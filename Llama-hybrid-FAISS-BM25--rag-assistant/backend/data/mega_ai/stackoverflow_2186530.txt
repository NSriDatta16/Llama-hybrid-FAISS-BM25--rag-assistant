[site]: stackoverflow
[post_id]: 2186530
[parent_id]: 
[tags]: 
Is it possible to use conditional statements such as if/then/when like this in SQL?

I have an SQL query that has an id field - think of it as a foreign key. I need to make a desicion based on the value of this id field such that: If the value is less then 3100, run a nested fetch from table B. If the value is greater then 3100, run a nested fetch from a table C. The statement looks like this: Select a.ID, a.SN, a.User_Ident, (select b.first_name from b where b.ident = a.User_Ident) as 'First Name', (select b.last_name from b where b.ident = a.User_Ident) as 'Last Name', from a where ... What I would like to accomplish is something like this: Select a.ID, a.SN, a.User_Ident, when a.User_Ident > 3100 then (select b.first_name from b where b.ident = a.User_Ident) as 'First Name', (select b.last_name from b where b.ident = a.User_Ident) as 'Last Name' else (select c.name from c where c.ident = a.User_Ident) as 'Name' from a where .... Is this possible? UPDATE: Your answers suggested I use left joins. My query already contains several left outer joins, so I don't know how this would work. Here is the complete query: select A.Ident, A.Serial_Number, A.Category_Ident, C.Description as Category, A.Purchase_Order, A.Manufacturer_Ident, M.Description as Manufacturer, A.Hardware_Model, A.Processor_Quantity, A.Processor_Speed_Hertz, A.Memory_Installed_Bytes, A.Memory_Maximum_Bytes, A.Memory_Slots_Used, A.Memory_Slots_Total, A.Storage_Capacity_Bytes, A.Video_Memory_Bytes, A.Screen_Size_Diagonal_Inches, A.Software_Ident, S.Software_Title, A.Account_Ident, T.Description as Account, A.User_Ident, (select Q.dbo.P.user_name from Q.dbo.P where Q.dbo.P.ident = A.User_Ident) as 'User Name', (select Q.dbo.P.first_name from Q.dbo.P where Q.dbo.P.ident = A.User_Ident) as 'First Name', (select Q.dbo.P.last_name from Q.dbo.P where Q.dbo.P.ident = A.User_Ident) as 'Last Name', (select Q.dbo.R.description from Q.dbo.R where Q.dbo.R.ident = (select Q.dbo.P.rank from Q.dbo.P where Q.dbo.P.ident = A.User_Ident)) as 'Rank', (select Q.dbo.P.phone from Q.dbo.P where Q.dbo.P.ident = A.User_Ident) as 'Phone', (select Q.dbo.P.smtp_address from Q.dbo.P where Q.dbo.P.ident = A.User_Ident) as 'Email', (select Q.dbo.O.description from Q.dbo.O where Q.dbo.O.ident = (select Q.dbo.P.organization_ident from Q.dbo.P where Q.dbo.P.ident = A.User_Ident)) as 'Organization', (select Q.dbo.L.description from Q.dbo.L where Q.dbo.L.ident = (select Q.dbo.P.location_ident from Q.dbo.P where Q.dbo.P.ident = A.User_Ident)) as 'Location', A.Disposition_Ident, D.Description as Disposition, A.Notes, A.Updated, A.UpdatedBy, A.Label, A.Scanned, S.Licensed FROM Assets left outer join C on A.Category_Ident = C.Ident left outer join M on A.Manufacturer_Ident = M.Ident left outer join S on A.Software_Ident = S.Ident left outer join T on A.Account_Ident = T.Ident left outer join D on A.Disposition_Ident = D.Ident WHERE ((T.Description like '%' + @Account + '%') or (A.Account_Ident like '%' + @Account + '%')) order by Serial_Number
