[site]: stackoverflow
[post_id]: 4004528
[parent_id]: 
[tags]: 
gmail.com not working on webview (after login)

I have a webview in my app that generally works fine for loading websites. But I cannot get www.gmail.com to work : when I open www.gmail.com I see the login page, try to login, afterwards the screen goes black and my app/process is killed. I don't see much in my logcat, just some strange debug information is being dumped as below. But generally https sites work fine, and even more complicated login procedures like opening stackoverflow.com, logging in via openid through https, back to stackoverflow, all work without a problem in my webview. Only gmail.com is giving me these problems. Edit: I found that if I don't assign my custom MyWebViewClient to the webview, the app doesn't crash but opens the gmail site in the default system browser. But I don't want that. I want it to open in my own webview only. I created a bug report at http://code.google.com/p/android/issues/detail?id=12097 , attached to it is a working very simple sample project that reproduces the crash. I/DEBUG ( 2173): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** I/DEBUG ( 2173): Build fingerprint: 'Samsung/GT-I9000/GT-I9000/GT-I9000:2.1-update1/ECLAIR/XWJM6:user/release-keys' I/DEBUG ( 2173): pid: 6753, tid: 6793 >>> com.myapplication.android XML: Code: webView = (WebView)findViewById(R.id.webView); webView.getSettings().setJavaScriptEnabled(true); webView.getSettings().setLoadsImagesAutomatically(true); webView.getSettings().setAllowFileAccess(false); webView.getSettings().setBuiltInZoomControls(true); webView.getSettings().setPluginsEnabled(true); webView.getSettings().setAllowFileAccess(true); webView.getSettings().setAppCacheEnabled(true); WebViewClient wv = new MyWebViewClient(); webView.setWebViewClient(wv); /** * Customized webview client to allow mp4 to play in mediaplayer. */ final class MyWebViewClient extends WebViewClient { @Override public boolean shouldOverrideUrlLoading(WebView view, String url) { if (url.endsWith(".mp4")) { Intent intent = new Intent("android.intent.action.VIEW", Uri.parse(url)); view.getContext().startActivity(intent); return true; } else { return super.shouldOverrideUrlLoading(view, url); // instead of the line above, I have also tried this before without any difference: // view.loadUrl(url); // return true; } }
