[site]: stackoverflow
[post_id]: 2032059
[parent_id]: 2032001
[tags]: 
Intuitively explaining computer science is... tricky. I'll give it a shot, but keep in mind that some of this is going to be "close enough" but not theoretically rigorous. A regular language is one that can be decided by a machine that is computational equivalent to a finite automata (DFA/NDFA). A finite automata can be thought of as a machine that operates purely in states, no storage. So you can see that a n b n cannot be regular as it requires a machine that can count the number of a's and b's (and thus must have infinite* storage capacity) in order to compare them. For comparison, (abc) n is regular, because the number of repetitions is irrelevant. For a more rigorous (and correspondingly denser view) check the wikipedia article and linked pages. *The infinite doesn't matter here, but I mention it for completeness. It might be easier to think of it as "luckily, always just enough" storage.
