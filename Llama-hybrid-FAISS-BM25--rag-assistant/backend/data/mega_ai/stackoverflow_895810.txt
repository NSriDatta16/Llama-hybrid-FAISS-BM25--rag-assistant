[site]: stackoverflow
[post_id]: 895810
[parent_id]: 895396
[tags]: 
This is a classic divide-and-conquer type problem. The issue is that the average of a large set of numbers is the same as the average of the first-half of the set, averaged with the average of the second-half of the set. In other words: AVG(A[1..N]) == AVG( AVG(A[1..N/2]), AVG(A[N/2..N]) ) Here is a simple, C#, recursive solution. Its passed my tests, and should be completely correct. public struct SubAverage { public float Average; public int Count; }; static SubAverage AverageMegaList(List aList) { if (aList.Count
