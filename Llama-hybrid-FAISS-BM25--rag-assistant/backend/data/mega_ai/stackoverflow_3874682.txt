[site]: stackoverflow
[post_id]: 3874682
[parent_id]: 3873872
[tags]: 
First, you can many information about git on the free online reference books: http://progit.org/ http://book.git-scm.com/ http://www-cs-students.stanford.edu/~blynn/gitmagic/ Note: Git "good practices" and workflow are totally independant from the IDE you use. Fortunately, IDEA is a great IDE and most Git usefull functions are well implemented (rebase, stash, etc.) About your git-flow questions, you are thinking like with centralized VCS. Git is a Distributed Version Control System. So, you have to " think local first ". For commits, It doesn't really matters if you add each file to the index immediately or later, if you commit frequently or not. It is your local work, and you can organize it as you prefer. What is important is to have clean commits when you are about to push your work (expose it to the others developers). When you are about to push, you can correct all your history since the last push (with rebase, for example). For example (if you forgot to amend previous commit): - commit "a super function" - commit "oups: forgot a file" - commit "bug correction" Before pushing theses 3 commits, you can fusion theses commits, using an interactive rebase with IDEA. So the 2 last commits will be included in the first. Note: you can modify your history while you have not pushed. After you still can but it is a very bad idea (and if you don't force Git, next push will be refused), since it could destroy your co-workers history (if they have fetched/merged your work). About a common Git working flow, I recommand you this good article: http://nvie.com/posts/a-successful-git-branching-model/
