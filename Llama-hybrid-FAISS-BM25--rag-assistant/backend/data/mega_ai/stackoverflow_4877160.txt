[site]: stackoverflow
[post_id]: 4877160
[parent_id]: 
[tags]: 
django_tables and following a one-to-one relationship backwards through a related manager

I am trying to use django-tables to create a sortable table out of some Models. http://elsdoerfer.name/docs/django-tables/types/models.html#spanning-relationships says that I can span through relationships, but I have difficulty doing it "backwards". Here are my models and the table: class Book(Model): isbn = ISBNField("ISBN", primary_key=True, editable=True, blank=True, null=False) class SomeInfo(Model): book = OneToOneField(Book, primary_key=True, editable=False, blank=False, null=False, verbose_name = _('ISBN'), related_name='someinfo') title = CharField(_("Title"), editable=False, blank=False, null=True, max_length=250) class MyInfo(Model): book = OneToOneField(Book, primary_key=True, editable=False, blank=False, null=False, verbose_name = _('ISBN'), related_name='myinfo') average_price = DecimalField(_("Average price"), editable=False, null=True, max_digits=6, decimal_places=2) class Query(Model): book = ForeignKey(Book, editable=True, blank=True, null=True, verbose_name = _('ISBN')) max_price = DecimalField(_('Maximum price'), null=True, max_digits=6, decimal_places=2) class MyTable(ModelTable): my_average_price = tables.Column(data="book__myinfo__average_price") my_title = tables.Column(data="book__someinfo__title") class Meta: model = Query When trying to use for example my_average_price in a template, I get this error: TemplateSyntaxError at /list/ Caught ValueError while rendering: Could not resolve myinfo from book__myinfo__average_price Any ideas how to make it work? All columns, also the ones from the related relationships, need to be sortable.
