[site]: stackoverflow
[post_id]: 1004305
[parent_id]: 1002518
[tags]: 
This is what I came up with however it may not be efficient for large data providers: 0 ) { // and no SPECIAL child exists: if ( getChildByName("$someTempUICToRemoveAfterFinished") == null ) { // create new SPECIAL child // this is required to call measureText // if you use custom data grid item renderer // then create instance of it instead of UIComponent: var uic:UIComponent = new UIComponent(); // do not show and do not mess with the sizes: uic.includeInLayout = false; uic.visible = false; // name it to leverage get getChildByName method: uic.name = "$someTempUICToRemoveAfterFinished"; // add event listener: uic.addEventListener(FlexEvent.CREATION_COMPLETE, onTempUICCreated); // add to parent: addChild(uic); } } // return an input: return input; } // called when SPECIAL child is created: private function onTempUICCreated(event:FlexEvent):void { // keep the ref to the SPECIAL child: var renderer:UIComponent = UIComponent(event.target); // output - this will contain max size for each column: var maxLengths:Object = {}; // temp variables: var key:String = ""; var i:int=0; // for each item in the DP: for ( i=0; i maxLengths[key] ) { // set it as the longest one: maxLengths[key] = cellMetrics.width; } } } } // apply column sizes: for ( key in maxLengths ) { for ( i=0; i
