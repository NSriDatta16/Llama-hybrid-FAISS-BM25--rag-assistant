[site]: datascience
[post_id]: 128041
[parent_id]: 128039
[tags]: 
How are you applying the scaling? If you do the following, std_scaler = StandardScaler() minmax_scaler = MinMaxScaler() df_std = std_scaler.fit_transform(df) df_min_max = minmax_scaler.fit_transform(df) The results of pd.DataFrame(df_std) : 0 1 2 0 -0.573437 -1.171080 0.707107 1 -0.147090 -1.024695 0.707107 2 -0.982731 -0.439155 -1.414214 3 -0.986994 0.146385 -1.414214 4 1.131953 0.878310 0.707107 5 1.558300 1.610235 0.707107 or pd.DataFrame(df_min_max) : 0 1 2 0 0.162479 0.000000 1 0.329983 0.052632 2 0.001675 0.263158 3 0.000000 0.473684 4 0.832496 0.736842 5 1.000000 1.000000 Min max scaling subtracts the minimum and divides by max-min. Standard scaling subtracts the mean and divides by the std deviation. In both cases, the relationship x1 > x2 is preserved. I assume your use case is more complicated than this, if so, please let us know. Otherwise you don't really don't need machine learning, indeed you don't need to scale your data at all if it's just x1 > x2 that you're interested in computing.
