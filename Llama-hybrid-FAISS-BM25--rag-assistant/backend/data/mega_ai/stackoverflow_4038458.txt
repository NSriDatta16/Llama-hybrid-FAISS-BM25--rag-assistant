[site]: stackoverflow
[post_id]: 4038458
[parent_id]: 4037946
[tags]: 
For example, does tracing and JIT compilation trash the cpu cache? If your program is large and doesn't really have many particularly hot paths, is there a risk of spending more time tracing and JIT-ting than would be worthwhile? That's plausible. But the whole optimization game is about trading off various factors to achieve the best result in the average case . Most applications do have relatively hot and cold paths, even if the hot paths are all in the standard class libraries. Besides what you are effectively saying is that this hypothetical application is not worth JIT compiling at all. In that case, the "fix" would be to run it with JIT compilation turned off. It seems likely that someone has written a paper on this or on solving problems inherent in JIT. You'd have thought so. But the flip-side is that the folks who build and maintain the JIT compilers in the Oracle, IBM, etc JVMs may be restricted from telling the world about their ideas and results ... for commercial reasons. (Publishing the source code is one thing, but explaining why they chose a particular strategy is something else.) There's also the issue of motivation.
