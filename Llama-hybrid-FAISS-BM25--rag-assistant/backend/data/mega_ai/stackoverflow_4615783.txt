[site]: stackoverflow
[post_id]: 4615783
[parent_id]: 
[tags]: 
MySQL Query to perform calculation and display data based on 2 different date criteria

Good morning, I am trying to combine two queries into one so that the result array can be populated into a single table. Data is pulled from a single table, and math calculations must take place for one of the columns. Here is what I have currently: SELECT laboratory, SUM(total_produced_week) AS total_produced_sum, SUM(total_produced_over14) AS total_over14_sum, 100*(SUM(total_produced_over14)/sum(total_produced_week)) as divided_sum, max(case when metrics_date =maxdate then total_backlog else null end) as total_backlog, max(case when metrics_date =maxdate then days_workable else null end) as days_workable, max(case when metrics_date =maxdate then workable_backlog else null end) as workable_backlog, max(case when metrics_date =maxdate then deferred_over_30_days else null end) as deferred_over_30_days FROM test, ( select max(metrics_date) as maxdate from metrics ) as x WHERE YEAR(metrics_date) = YEAR(CURDATE()) AND MONTH(metrics_date) = MONTH(CURDATE()) GROUP BY laboratory ORDER BY 1 ASC Here's the breakdown: For each laboratory site, I need: 1) Perform a MONTH TO DATE (current month only) sum, division and multiply by 100 for each site to obtain percentage. 2) Display other columns (total_backlog, days_workable, workable_backlog, deferred_over_30_days) for the most recent update date (metrics_date) only. The above query performs #1 just fine - I get a total_produced_sum, total_over14_sum and divided_sum column with correct math. The other columns mentioned in #2, however, return NULL. Data is available in the table for the most recently updated date, so the columns should be reporting that data. It seems like I have a problem with the CASE, but I'm not very familiar with the function so it could be incorrect. I am running MySQL 5.0.45 Thanks in advance for any suggestions! Chris P.S. Here are the two original queries that work correctly. These need to be combined so that the full resultset can be output to a table, organized by laboratory. Query 1: SELECT SUM(total_produced_week) AS total_produced_sum, SUM(total_produced_over14) AS total_over14_sum FROM test WHERE laboratory = 'Site1' AND YEAR(metrics_date) = YEAR(CURDATE()) AND MONTH(metrics_date) = MONTH(CURDATE()) Query 2: SELECT laboratory, total_backlog, days_workable, workable_backlog, deferred_over_30_days, items_over_10_days, open_ncs, total_produced_week, total_produced_over14 FROM metrics WHERE metrics_date = (select MAX(metrics_date) FROM metrics) ORDER BY laboratory ASC
