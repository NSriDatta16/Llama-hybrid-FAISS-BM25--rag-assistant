[site]: stackoverflow
[post_id]: 5295545
[parent_id]: 
[tags]: 
How can I manually handle any subscribed to message type in NServiceBus?

I'm trying to build a layer over NServiceBus to make it simpler for other developers to use. I'm trying to do without the config file and managed to get the publisher to work: public class NServiceBusPublisher { private IBus _Bus { get; set; } public void NServiceBusPublisher(string argInputQueue, string argErrorQueue) { Configure configure = NServiceBus.Configure.With().DefaultBuilder(); var transport = configure.Configurer.ConfigureComponent (ComponentCallModelEnum.Singleton); transport.ConfigureProperty(t => t.InputQueue, argInputQueue); transport.ConfigureProperty(t => t.ErrorQueue, argErrorQueue); transport.ConfigureProperty(t => t.NumberOfWorkerThreads, 1); transport.ConfigureProperty(t => t.MaxRetries, 5); _Bus = configure .XmlSerializer() .MsmqTransport() .IsTransactional(true) .PurgeOnStartup(false) .MsmqSubscriptionStorage() .UnicastBus() .ImpersonateSender(false) .CreateBus() .Start(); } public void Publish(NServiceBus.IMessage argMessage) { _Bus.Publish(argMessage); } } I also want to have an NServiceBus Subscriber and make it possible for developers to subscribe to any number of message types as long as the message inherits from NServiceBus.IMessage: public class NServiceBusSubscriber { private IBus _Bus { get; set; } public void NServiceBusSubscriber(string argInputQueue, string argOutputQueue, string argErrorQueue, string messagesAssembly) { Configure configure = NServiceBus.Configure.With().DefaultBuilder(); var transport = configure.Configurer.ConfigureComponent (ComponentCallModelEnum.Singleton); transport.ConfigureProperty(t => t.InputQueue, argInputQueue); transport.ConfigureProperty(t => t.ErrorQueue, argErrorQueue); transport.ConfigureProperty(t => t.NumberOfWorkerThreads, 1); transport.ConfigureProperty(t => t.MaxRetries, 5); var ucb = configure.Configurer.ConfigureComponent (ComponentCallModelEnum.Singleton); ucb.ConfigureProperty(u => u.MessageOwners, new Dictionary () { {messagesAssembly, argOutputQueue} }); _Bus = configure .XmlSerializer() .MsmqTransport() .IsTransactional(true) .PurgeOnStartup(false) .MsmqSubscriptionStorage() .UnicastBus() .ImpersonateSender(false) .DoNotAutoSubscribe() .CreateBus() .Start(); } public void Subscribe () where T : NServiceBus.IMessage { _Bus.Subscribe (); } } The problem is that I couldn't find any way to attach an event handler to a particular message type. Could you please help me figure this out?
