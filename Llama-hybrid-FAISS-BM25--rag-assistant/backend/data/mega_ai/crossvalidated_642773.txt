[site]: crossvalidated
[post_id]: 642773
[parent_id]: 
[tags]: 
Using PCA to check if parameters simulated from a hierarchical Bayesian model are close to real parameters

I have a hierarchical Bayesian model that learns a 5-parameter function for each of the N participants. The priors on each of the 5 parameters are parameterized by a scale parameter, so, it also learns a total of 5 hyper-parameters. $$\theta_i^j \sim \text{HalfNormal}(\sigma_{\theta^j})\;\;\forall i=1,2\ldots N \text{ and } j = 1, 2 \ldots 5$$ Once the model is fit on real data, it learns posterior distributions for the parameters and hyper-parameters. Assuming $4000$ samples were drawn ( $1000$ samples for each of the $4$ MCMC chains), the dimensions of these posteriors are $\theta^{\text{post}}=(4000, N, 5), \;{\sigma_\theta}^{\text{post}} = (4000, 5)$ respectively. Given the model does well, we can assume $\theta^{\text{post}}$ represents the real parameters. Now, I can also simulate the parameters from my model by only giving it the learnt hyper-parameters $\;{\sigma_\theta}^{\text{post}}$ . This way, I can simulate parameters $\theta^{\text{simulated}} = (4000, M, 5)$ where $M$ is the number of new participants drawn. I want to see if the simulated parameters are close to (or representative) of the posterior parameters $\theta^{\text{post}}$ . To see this, what I tried doing was: Flatten both posterior and simulated parameters along the first two dimensions so that $\theta^{\text{post}} = (4000, N, 5) \to (4000N, 5) $ and $\theta^{\text{simulated}} = (4000, M, 5) \to (4000M, 5) $ Learn PCA mapping on posterior (real) parameters and reduce the last dimension to 2, so that $\theta^{\text{post}} = (4000N, 5) \to (4000N, 2)$ (standardization was done before learning the map) Use the learnt mapping to transform simulated parameters, so that $\theta^{\text{simulated}} = (4000M, 5) \to (4000M, 2) $ Plotted both of these to find that they overlap nicely. Would this indicate that the model is simulating data close the actual data? I haven't come across anyone using PCA to see if learnt parameters are close to simulated parameters, so I am also not sure if this is correct. Is there any other way I can gauge (or better, quantify) how close the simulated parameters are to real parameters? Any guidance will be greatly appreciated.
