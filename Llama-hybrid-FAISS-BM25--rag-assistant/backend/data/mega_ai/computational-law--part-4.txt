s talk about two examples—classic professions: law and medicine. It's funny, when Leibniz was first thinking about computation at the end of the 1600s, the thing he wanted to do was to build a machine that would effectively answer legal questions. It was too early then. But now we’re almost ready, I think, for computational law. Where for example contracts become computational. They explicitly become algorithms that decide what's possible and what's not.You know, some pieces of this have already happened. Like with financial derivatives, like options and futures. In the past these used to just be natural language contracts. But then they got codified and parametrized. So they’re really just algorithms, which of course one can do meta-computations on, which is what has launched a thousand hedge funds, and so on. Well, eventually one's going to be able to make computational all sorts of legal things, from mortgages to tax codes to perhaps even patents. Now to actually achieve that, one has to have ways to represent many aspects of the real world, in all its messiness. Which is what the whole knowledge-based computing of Wolfram|Alpha is about." In Estonia, the government has been spearheading a 'robotic judge' initiative whereby chief data officer Ott Velsberg is implementing elements both adjacent and directly related to computational law. Firstly, inspectors no longer verify the use of hay-field subsidies (that prevent forests) rather they use a deep-learning algorithm to validate the results from satellite comparison thus saving nearly a million dollars per annum. The perceived success of this operation has led to the Estonian government moving ahead with proposals to automate, or compute the law of, small claims disputes beneath $8,000 especially in contract disputes. The decisions will be appealable to a human judge. Approaches Algorithmic law There have also been many attempts to create a machine readable or machine executable legal code. A machine readable code would simplify the analysis of legal code, allowing the rapid construction and analysis of databases, without the need for advanced text processing techniques. A machine executable format would allow the specifics of a case to be input, and would return the decision based on the case. Machine readable legal code is already quite common. METAlex, an XML-based standard proposed and developed by the Leibniz Center for Law of the University of Amsterdam, is used by the governments of both the United Kingdom and the Netherlands to encode their laws. In the United States, an executive order issued by President Barack Obama in the May 2013 mandated that all public government documentation be released in a machine readable format by default, although no specific format was mentioned. Machine executable legal code is much less common. Currently, as of 2020, numerous projects are working on systems for producing machine executable legal code, sometimes also through natural language, constrained language or a connection between natural language and executable code similar to Ricardian Contracts. Empirical analysis Many current efforts in computational law are focused on the empirical analysis of legal decisions, and their relation to legislation. These efforts usually make use of citation analysis, which examines patterns in citations between works. Due to the widespread practice of legal citation, it is possible to construct citation indices and large graphs of legal precedent, called citation networks. Citation networks allow the use of graph traversal algorithms in order to relate cases to one another, as well as the use of various distance metrics to find mathematical relationships between them. These analyses can reveal important overarching patterns and trends in judicial proceedings and the way law is used. There have been several breakthroughs in the analysis of judicial rulings in recent research on legal citation networks. These analyses have made use of citations i