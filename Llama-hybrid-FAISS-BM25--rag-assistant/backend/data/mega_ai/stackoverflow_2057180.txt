[site]: stackoverflow
[post_id]: 2057180
[parent_id]: 2057112
[tags]: 
You only get one clustered index - this is what controls the physical storage of the table on disk / in memory. Non-clustered indexes repeat the included fields, with pointer to the rows that have that value. Having an index on the columns being used in your joins should improve performance. You can further optimise by using "included columns" in your index - this duplicates the row information directly into the index, which can remove the performance penalty of having to look up the row itself to perform the select. It is useful to pay attention to the order in which your joins occur - the sequence of columns in your index should match up to this. Remember that the SQL engine may optimise and re-order your query internally - profiling may be helpful. In most situations, you can just use the Database Engine Tuning Advisor - the recommendations it provides are pretty much spot on.
