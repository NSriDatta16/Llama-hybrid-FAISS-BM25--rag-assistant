[site]: stackoverflow
[post_id]: 4977321
[parent_id]: 4977290
[tags]: 
static when applied to a local variable gives that variable static storage duration . This means that the justAbool 's lifetime lasts to the end of the program rather than to the end of the invocation of the function. It's scope stays the same, it can only be accessed by name in the function, after the declaration appears. justAbool will be initialized (using the supplied initializer = false ) the first time that the function is called. Thereafter it will retain its previous value, it will not be reinitialized when the function is called again. Here are some fuller details about storage duration and lifetimes, with references to the standard. If an object has static storage duration , it means that the storage for the object lasts for the duration of the program (beginning to end). (3.7.1 [basic.stc.static]) As a bool is a type without a non-trivial constructor, its lifetime mirrors that of its storage, i.e. it lives from the beginning to the end of the program. (3.8 [basic.life]) All objects with static storage duration (including local objects) are zero-initialized before any other initialization. (6.7/4 [stmt.decl]) [For local objects with an initializer this is fairly academic because there is no way to read their value before their declaration is reached.] Local objects of POD type with static storage duration initialized with constant-expressions are initialized before their block is entered, otherwise local objects with static storage duration are initialized when control passes through their declaration. (6.7/4 again) An implementation is permitter, but not required, to perform early initialization in some situations.
