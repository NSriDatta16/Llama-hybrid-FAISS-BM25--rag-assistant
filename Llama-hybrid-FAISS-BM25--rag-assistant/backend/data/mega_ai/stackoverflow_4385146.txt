[site]: stackoverflow
[post_id]: 4385146
[parent_id]: 4381110
[tags]: 
I could easily believe the queries taking that much longer. You have a 29M row table that you are doing multiple groups on and linking back to itself multiple times on different columns. If the entire table doesn't fit into memory there may be a lot of paging involved that wasn't needed with 1/7th the rows. Working inward, you are: Selecting from a 29M row table on position = 0 and cnt_players = 6 Linking back to a 29M row table on the id_hand column twice Filtering the 29M row table twice for cnt_players = 6 and positions 0 and 8 and calculating the average flg_vpip by player Linking to the grouped results on id_hand for millions of rows Could you split the table into separate ones? What exactly do your fields mean and what would a sample hand look like? You would need indexes on id_player, id_hand, position and cnt_players at least. It might be good to include all fields in the index. I'm not sure about postgresql, but SQL Server can skip loading the actual table data pages if all the data it needs for a query is in the index. So if you had an index on position, cnt_players, id_player and flg_vpip, your inner-most selects would probably be a lot faster. A better way I think would be to calculate those inner selects ahead of time into one table or two if you aren't going to be running the query often. select id_player, position, cnt_players, ROUND(avg(flg_vpip::int)*25) AS avg_vpip into auxtable from holdem oldem group by id_player, position, cnt_players alter table auxtable add constraint PK_auxtable primary key clustered (id_player, position, cnt_players) Like this: SELECT sbvpip*4 as smallbvpip,btnvpip*4 as buttonvpip, sum(amt_won)*400/count(*) AS winrate, count(*) as count FROM holdem JOIN ( SELECT id_player AS pid2, id_hand AS hid, sbvpip FROM holdem JOIN auxtable ON auxtable.id_payer = holdem.id_player and auxtable.position = holdem.position and auxtable.cnt_players = holdem.cnt_players WHERE holdem.position = 8 AND holdem.cnt_players = 6 ) AS auxtable2 ON hid = id_hand
