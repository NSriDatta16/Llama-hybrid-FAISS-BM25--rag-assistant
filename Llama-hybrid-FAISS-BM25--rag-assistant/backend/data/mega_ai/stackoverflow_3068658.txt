[site]: stackoverflow
[post_id]: 3068658
[parent_id]: 
[tags]: 
What techniques exist for the software-driven locomotion of a bipedal robot?

I'm programming a software agent to control a robot player in a simulated game of soccer. Ultimately I hope to enter it in the RoboCup competition. Amongst the various challenges involved in creating such an agent, the motion of it's body is one of the first I'm facing. The simulation I'm targeting uses a Nao robot body with 22 hinge to control. Six in each leg, four in each arm and two in the neck: (source: sourceforge.net ) I have an interest in machine learning and believe there must be some techniques available to control this guy. At any point in time, it is known: The angle of all 22 hinges The X,Y,Z output of an accelerometer located in the robot's chest The X,Y,Z output of a gyroscope located in the robot's chest The location of certain landmarks (corners, goals) via a camera in the robot's head A vector for the force applied to the bottom of each foot, along with a vector giving the position of the force on the foot's sole The types of tasks I'd like to achieve are: Running in a straight line as fast as possible Moving at a defined speed (that is, one function that handles fast and slow walking depending upon an additional input) Walking backwards Turning on the spot Running along a simple curve Stepping sideways Jumping as high as possible and landing without falling over Kicking a ball that's in front of your feet Making 'subconscious' stabilising movements when subjected to unexpected forces (hit by ball or another player), ideally in tandem with one of the above For each of these tasks I believe I could come up with a suitable fitness function, but not a set of training inputs with expected outputs. That is, any machine learning approach would need to offer unsupervised learning . I've seen some examples in open-source projects of circular functions (sine waves) wired into each hinge's angle with differing amplitudes and phases. These seem to walk in straight lines ok, but they all look a bit clunky. It's not an approach that would work for all of the tasks I mention above though. Some teams apparently use inverse kinematics, though I don't know much about that. So, what approaches are there for robot biped locomotion/ambulation? As an aside, I wrote and published a .NET library called TinMan that provides basic interaction with the soccer simulation server. It has a simple programming model for the sensors and actuators of the robot's 22 hinges. You can read more about RoboCup's 3D Simulated Soccer League: http://en.wikipedia.org/wiki/RoboCup_3D_Soccer_Simulation_League http://simspark.sourceforge.net/wiki/index.php/Main_Page http://code.google.com/p/tin-man/
