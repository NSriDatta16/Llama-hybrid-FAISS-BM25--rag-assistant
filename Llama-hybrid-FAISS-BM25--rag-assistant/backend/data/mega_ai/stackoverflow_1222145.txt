[site]: stackoverflow
[post_id]: 1222145
[parent_id]: 1077810
[tags]: 
You can still delete the file programmatically, using the NSFileManager:removeItemAtPath:: method. NSPersistentStore *store = ...; NSError *error; NSURL *storeURL = store.URL; NSPersistentStoreCoordinator *storeCoordinator = ...; [storeCoordinator removePersistentStore:store error:&error]; [[NSFileManager defaultManager] removeItemAtPath:storeURL.path error:&error]; Then, just add the persistent store back to ensure it is recreated properly. The programmatic way for iterating through each entity is both slower and prone to error. The use for doing it that way is if you want to delete some entities and not others. However you still need to make sure you retain referential integrity or you won't be able to persist your changes. Just removing the store and recreating it is both fast and safe, and can certainly be done programatically at runtime. Update for iOS5+ With the introduction of external binary storage (allowsExternalBinaryDataStorage or Store in External Record File) in iOS 5 and OS X 10.7, simply deleting files pointed by storeURLs is not enough. You'll leave the external record files behind. Since the naming scheme of these external record files is not public, I don't have a universal solution yet. â€“ an0 May 8 '12 at 23:00
