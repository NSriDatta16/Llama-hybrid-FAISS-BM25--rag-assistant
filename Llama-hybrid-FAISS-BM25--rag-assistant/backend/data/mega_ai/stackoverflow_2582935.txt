[site]: stackoverflow
[post_id]: 2582935
[parent_id]: 2582890
[tags]: 
If all you want to know is what methods got called, rather than the precise order, you might consider using a test coverage tool. These tools instrument the source code to collect "this got executed" facts at various degrees of granularity (method call only, and/or every code block controlled by a conditional). The SD Test Coverage Tool is a tool that will do this. It won't collect the call graph or even the order of the calls. If you want more control over the instrumentation, you can consider using the DMS Software Reengineering Toolkit . DMS will parse, transform, and prettyprint Java in arbitrary ways controlled by custom source-to-source program transformation rewrite rules. It would be easy to insert logging transformations into the start and exit of each method (and in fact this is almost exactly how the SD test coverage tool works). Given the raw enter-X and exit-X data, constructing the runtime call tree is a straightforward task.
