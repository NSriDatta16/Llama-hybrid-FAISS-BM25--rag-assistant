[site]: stackoverflow
[post_id]: 5188575
[parent_id]: 
[tags]: 
Grouped Table View Obj-C

I followed the tutorial here and was wondering how to make the table appear grouped. ex: group1 contains Subview One and Subview Two group2 contains Subview Three I switched the type in interface builder but that only shows one group. Thanks, Adam Sidenote* I am a completely new at objective c, hence the tutorial. EDIT I thought it might be helpful to put up the piece of code #import "RootViewController.h" #import "SubViewOneController.h" #import "SubViewTwoController.h" @implementation RootViewController #pragma mark - #pragma mark View lifecycle -(void)awakeFromNib { views = [[NSMutableArray alloc] init]; SubViewOneController *subViewOneController = [[SubViewOneController alloc] init]; SubViewTwoController *subViewTwoController = [[SubViewTwoController alloc] init]; //Subview 1 subViewOneController.title = @"Subview One"; [views addObject:[NSDictionary dictionaryWithObjectsAndKeys: @"Subview One", @"title", subViewOneController, @"controller", nil]]; [subViewOneController release]; //Subview 2 subViewOneController = [[SubViewOneController alloc] init]; subViewOneController.title = @"Subview Two"; [views addObject:[NSDictionary dictionaryWithObjectsAndKeys: @"Subview Two", @"title", subViewTwoController, @"controller", nil]]; [subViewOneController release]; //Subview 3 subViewOneController = [[SubViewOneController alloc] init]; subViewOneController.title = @"Subview Three"; [views addObject:[NSDictionary dictionaryWithObjectsAndKeys: @"Subview Three", @"title", subViewOneController, @"controller", nil]]; [subViewOneController release]; UIBarButtonItem *temporaryBarButtonItem = [[UIBarButtonItem alloc] init]; temporaryBarButtonItem.title = @"Back"; self.navigationItem.backBarButtonItem = temporaryBarButtonItem; [temporaryBarButtonItem release]; self.title = @"Basic Navigation"; } - (void)didReceiveMemoryWarning { [super didReceiveMemoryWarning]; } - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView { return 2; } - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section { return [views count]; } // //I think it goes somewhere in here // - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath { static NSString *CellIdentifier = @"Cell"; UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier]; if (cell == nil) { cell = [[UITableViewCell alloc] initWithStyle:UITableViewStyleGrouped reuseIdentifier:CellIdentifier]; } cell.text = [[views objectAtIndex:indexPath.row] objectForKey:@"title"]; return cell; } - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath { UIViewController *targetViewController = [[views objectAtIndex:indexPath.row] objectForKey:@"controller"]; [[self navigationController] pushViewController:targetViewController animated:YES]; } - (void)dealloc { [views dealloc]; [super dealloc]; } @end
