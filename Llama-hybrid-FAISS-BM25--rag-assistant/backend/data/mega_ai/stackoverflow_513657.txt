[site]: stackoverflow
[post_id]: 513657
[parent_id]: 
[tags]: 
Why use Windows Workflow?

What is the benefit of using Windows Workflow foundation (WF) versus rolling your own workflow framework? From what I can tell, WF only provides a pretty bare-bones runtime engine, a bunch of classes, and a schema (XAML-based) for defining workflows. All the hard stuff such as persistence, providing a host process for the runtime, and implementing distributed workflows (across processes) is left up to you. Plus there is a learning curve to using WF... if we created our own workflow framework we would simply leverage skills that all developers already have (C#, XML, SQL, etc). I saw this blog from an MS evangelist which tries to explain why we should use WF: Why Workflow?... IMO it doesn't do a good job of convincing because it just states that it helps "developer productivity", while admitting that developers could roll their own. Can any of the smart folks here come up with a better reason? SUMMARY FROM ANSWERS GIVEN BELOW: I think the most convincing reason is that using a standardized workflow platform such as WF (versus rolling your own) will allow you to leverage current and future tooling such as the Visual Designer, provided by MS and third parties. Also because it is part of the MS stack of .NET based technologies, it will likely have better integration/migration path with future MS technologies (such as Azure). Finally, the number of developers with WF experience will increase (as it will benefit them career-wise), turning it into a basic commodity skill such as SQL or HTML, meaning it will become easier to find people who can start working with it with minimal ramp up time.
