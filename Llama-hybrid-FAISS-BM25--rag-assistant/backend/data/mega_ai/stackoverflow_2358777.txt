[site]: stackoverflow
[post_id]: 2358777
[parent_id]: 2357722
[tags]: 
If you want to concatenate an arbitrary (previously unknown) number of lists, then you may need to concatenate a collection of lists. Probably the easiest way to do this would be to use the SelectMany operator (or nested from clauses in LINQ query): IEnumerable > lists = /* get list of lists */; List result = lists.SelectMany(e => e).ToList(); The SelectMany operator calls the given function for every element of the input list (which is a list) and then concatenates all the resulting lists (the actual lists from your input list of lists). Alternatively using the LINQ query syntax: List result = (from l in lists from e in l select e).ToList(); I believe that the C# compiler may actually optimize this, so that it doesn't iterate over all the individual elements (and does the same thing as the explicit version above). If you have a known number of lists, you can of course write: List result = (from l in new[] { list1, list2, list3, list4 } from e in l select e).ToList(); It is not as elegant as defining your own method exactly for this purpose, but it shows how powerful the LINQ query syntax is.
