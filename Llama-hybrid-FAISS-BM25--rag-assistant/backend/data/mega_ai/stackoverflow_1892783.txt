[site]: stackoverflow
[post_id]: 1892783
[parent_id]: 1892768
[tags]: 
If you implement ICollection you get the desired functionality. Correction: you actually only need to implement IEnumerable or IEnumerable and have a public Add method in your class: public class Wrapper : IEnumerable { public List TList { get; private set; } public Wrapper() { TList = new List (); } public void Add(int item) { TList.Add(item); } public IEnumerator GetEnumerator() { return TList.GetEnumerator(); } System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { return GetEnumerator(); } } (I also took the liberty of making the TList setter private; it is usually recommended that collection type properties are read-only so that the collection as such can not be substituted by any code outside the type.)
