[site]: stackoverflow
[post_id]: 973256
[parent_id]: 973231
[tags]: 
You could leverage doctest to help you get this done. Write a method that executes each script, and in the docstring for each method you paste the expected output: def run_example1(): """ This is example number 1. Running it should give you the following output: >>> run_example1() "This is the output from example1.py" """ os.system('python example1.py') # or you could use subprocess here if __name__ == "__main__": import doctest doctest.testmod() Note I haven't tested this. Alternatively, as Shane mentioned, you could use subprocess. Something like this will work: import subprocess cmd = ('example1.py', 'any', 'more', 'arguments') expected_out = """Your expected output of the script""" exampleP = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE) out, err = exampleP.communicate() # out and err are stdout and stderr, respectively if out != expected_out: print "Output does not match"
