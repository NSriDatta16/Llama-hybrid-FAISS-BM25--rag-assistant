[site]: stackoverflow
[post_id]: 3134175
[parent_id]: 2767994
[tags]: 
Here are a few more: Clear privacy options Facebook has repeatedly changed the way it deals with content ownership and privacy. (See here , here and here .) Aside from the obvious PR gaffes, this has also demonstrated the difficulty users have understanding privacy. Geeks like us are familiar with ideas of inheritance and groups. Heck, many of us work explicitly with permission structures when dealing with files on *nix systems. To most users though, it's not clear who can see what or why. Service Interoperability On the desktop we're used to being able to chain together tools to get the outcome we want. A simple example would be dragging image thumbnails from a file explorer to an image editor. We'd expect that to work, but not on the web The Flock browser goes some way to overcome this shortfall, as does the Google Docs web clipboard , but interaction between web services is still a long way off what we expect from the desktop. Accessibility Web 1.0 was primarily text based, so the main accessibility issues were easy to fix: stuff like text as images and tables for layout, which both affect screen-readers used by the blind. As the content of the web gets richer (more images, video and audio), the chances get larger that someone will be excluded from it. Moreover, making video and audio accessible is much harder than making text or images accessible, so it's much less likely to be done. Lastly, Web 2.0 introduced a whole new problem for accessibility: dynamic content. How should screen-readers (for example) deal with new content appearing on a page after an AJAX query? WAI-ARIA aims to address these issues, but they still require the web-designer to implement them. Hope this was useful.
