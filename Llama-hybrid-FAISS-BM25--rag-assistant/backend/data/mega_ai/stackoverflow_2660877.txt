[site]: stackoverflow
[post_id]: 2660877
[parent_id]: 2660739
[tags]: 
I've grown rather fond of the IO::Handle derived modules. They make it easy to control flushing, reading data, binary mode, and many other aspects of a handle. In this case we use IO::File . use IO::File; my $tp = IO::File->new( "| java -jar test.jar" ) or die "fail - $!"; # Manual print and flush $tp->print( 'I am fond of cake' ); $tp->flush; # print and flush in one method $tp->printflush( 'I like pie' ); # Set autoflush ON $tp->autoflush(1); $tp->print( 'I still like pie' ); Also, since the file handle is lexically scoped, you don't have to close it manually. It will automatically close when it goes out of scope. BTW, unless you are targeting a perl older than 5.6, you can use the warnings pragma instead of -w . See perllexwarn for more info.
