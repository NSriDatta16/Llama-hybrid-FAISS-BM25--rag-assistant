[site]: stackoverflow
[post_id]: 4700841
[parent_id]: 4640397
[tags]: 
Actually, there's a simpler way to do it, which is more similar to the OP's example: type Point struct { x, y int } func (p *Point) Move(dx, dy int) { p.x += dx p.y += dy } type Circle struct { *Point // embedding Point in Circle rad int } // Circle now implicitly has the "Move" method c := &Circle{&Point{0, 0}, 5} c.Move(7, 3) Also notice that Circle would also fulfill the Mover interface that PeterSO posted. http://golang.org/doc/effective_go.html#embedding
