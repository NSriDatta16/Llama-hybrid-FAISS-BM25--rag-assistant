[site]: stackoverflow
[post_id]: 372021
[parent_id]: 371808
[tags]: 
That example is very strange and would definitely raise a red flag for any experienced Cocoa programmer. It is a common practice to use categories in the same way to separate private methods from the public implementation, and I've done the same thing in the past to separate private threaded methods from code that runs on the main thread. I can't see any good that would come from separating out all your public methods like that though. What is a good tool for this situation is the #pragma mark keyword. which allows you to group similar methods in an implementation. I think that's what you're aiming for, although you don't need to go overboard in creating groups. For example, in a window controller class I would have #pragma mark API , #pragma mark NSWindowController Overrides , #pragma mark NSObject Overrides , #pragma mark NSWindow Delegate Methods , and so on. That helps me find and jump to the method I'm looking for very quickly in Xcode, although it's just a matter of style so you can really use it however you see fit.
