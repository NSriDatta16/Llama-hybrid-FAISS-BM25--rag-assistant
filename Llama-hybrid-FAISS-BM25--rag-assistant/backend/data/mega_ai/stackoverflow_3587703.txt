[site]: stackoverflow
[post_id]: 3587703
[parent_id]: 3587642
[tags]: 
Most of this is possible to do yourself. Calling the bare constructor without new and getting a string is special for Date per the ECMA spec, but you can simulate something similar for that. Here's how you'd do it. First declare an object in the constructor pattern (e.g. a function that is intended to be called with new and which returns its this reference: var Thing = function() { // Check whether the scope is global (browser). If not, we're probably (?) being // called with "new". This is fragile, as we could be forcibly invoked with a // scope that's neither via call/apply. "Date" object is special per ECMA script, // and this "dual" behavior is nonstandard now in JS. if (this === window) { return "Thing string"; } // Add an instance method. this.instanceMethod = function() { alert("instance method called"); } return this; }; New instances of Thing can have instanceMethod() called on them. Now just add a "static" function onto Thing itself: Thing.staticMethod = function() { alert("static method called"); }; Now you can do this: var t = new Thing(); t.instanceMethod(); // or... new Thing().instanceMethod(); // and also this other one.. Thing.staticMethod(); // or just call it plain for the string: Thing();
