[site]: stackoverflow
[post_id]: 3948029
[parent_id]: 3947947
[tags]: 
As long as you are using SSL on your site, there's not a significant risk in terms of compromising the user's password (unless you are doing financial transactions of some sort, then please clarify). My suggestion would be, don't copy their form. Instead, replicate the HTTP POST generated by that form. You can do this completely programmatically and the user will never leave YOUR site, but (in most cases) the result will be that the user is logged in to THEIR site as well. If there is some sort of hashed fields to deal with, request their form page (programatically) and use whatever values you receive to send back to the second site so that the request will validate. Their server doesn't know that the request isn't coming from a browser (indeed, you can add a user agent to the HTTP headers if you wish). I have used this methodology against Verizon's site and LinkedIn (both for legitimate purposes) and it works. To recap: Learn the structure of their HTTP POST. Add a login form to YOUR site. Manipulate the request in your code to look like the POST their site expects. POST to their site from your code. Display the response to the user on your site (if needed), redirect, whatever.
