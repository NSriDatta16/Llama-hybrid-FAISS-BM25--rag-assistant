[site]: stackoverflow
[post_id]: 576957
[parent_id]: 576374
[tags]: 
Like Justice said, you can do it with C# 3.5 and lambdas; if you have C# 2.0, you can use anonymous functions, although it would be somewhat less sexy: double sqrt(double x) { Func goodEnough = delegate(double guess) { return Math.Abs(square(guess) - x) improve = delegate(double guess) { return average(guess, x / guess); }; Func sqrtIter = null; sqrtIter = delegate(double guess) { return goodEnough(guess) ? guess : sqrtIter(improve(guess)); }; return sqrtIter(1.0); } Edit: I forgot, Func isn't defined in C# 2.0, so you have to define it yourself: public delegate TResult Func (T guess);
