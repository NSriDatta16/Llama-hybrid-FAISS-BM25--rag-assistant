A Functional Presence Engine, or FPE, is a probabilistic parsing mechanism that uses at least four components to respond to input patterns. It comprises a lexing system, a probabilistic fitness function, a knowledge base, and a library of functions that the knowledge base can trigger. The lexing system accepts and parses inputs and or query patterns. The probabilistic fitness mechanism determines close approximations and viable responses to the input patterns from a given knowledge base and then selects one or more functions that produce appropriate responses. A Functional Presence Engines is, subsequently, a stimulus-response mechanism that allows for a higher variability of inputs to elicit response patterns with a high likelihood of correctness, even from incomplete training. The system predates SIRI by six years. Such systems allow conversational AI and virtual assistant platforms to respond correctly to new inputs outside their training sets â€“ The US Army's Sgt Star being a prime example. FPEs are widely used for intelligent customer service systems and for digital assistants. FPEs have also been deployed as black-box solutions and embedded in security appliances. History The first Functional Presence Engine was deployed in 2001 by Spectre AI Incorporated. The technology and a number of embodiments were subsequently patented by Spectre AI's cofounder Robert Hust, the FPE's original inventor, and Mark Zartler who was Spectre AI's lead developer. The development of the FPE also resulted in an obscure markup language that the company referred to as FPML (Functional Presence Markup Language), which was based largely on AIML (Artificial Intelligence Markup Language). The original FPE and FPML are now proprietary technologies owned by Verint Systems. == References ==