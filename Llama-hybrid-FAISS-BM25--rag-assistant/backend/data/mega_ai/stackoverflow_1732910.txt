[site]: stackoverflow
[post_id]: 1732910
[parent_id]: 1732177
[tags]: 
ok, few notes: Your assumption to start from 40 is incorrect, since 4*1783=6952 is pandigital. And there is another one you are missing :) You are not excluding duplicate products. Based on the discussion with Marius, im updating the original answer, here. This is the isPandigital method only. private boolean isPandigital(int a,int b){ int c=a*b; StringBuilder st = new StringBuilder(); st.append(a).append(b).append(c); if (st.length()!=9 || st.indexOf("0")>-1) return false; Set x=new TreeSet (); for (int i=0;i I compared both codes on my machine, ten tries then average, the results are as follows: Marius code: average (2070ms) medopal code: average (2200ms) Marius code (using String): average (4200ms) medopal code (using String): average (5000ms) I added the String vs StringBuilder comparison because apperantly it was the thing that made my original code so slow. But using StringBuilder, Marius code beats me in average 200ms only :) Lessons learned: StringBuilder takes almost half the time String does. (in this experiment at least) When you are lazy to think, you can use ready structures. (again in this experiment at least), im not generalizing Thanks Marius :)
