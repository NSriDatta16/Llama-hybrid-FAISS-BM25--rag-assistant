[site]: crossvalidated
[post_id]: 245148
[parent_id]: 
[tags]: 
Machine Learning Technique to Estimate Probability Distribution

After training a model on the resulting value given some set of features, I would like the model to estimate the probability distribution of the resulting value. I am not interested in classification, I would like the target value to be continuous. For example, I might have S&P day close, S&P day open, trade volume, day high, and day low as features and a target being tomorrows day open. I would like the model to learn the probability distribution of tomorrows day open given these features. Be it through representing the parameters of the distribution, or being able to evaluate the probability of a feature set resulting in a specific target value. Bonus points if this technique can be applied to a multi-target system. Edit: So I found a few methods, as below mentioned, there is Gaussian Process Regression. I found a very well documented implementation in scikitlearn I also found Students-T Process Regression which is useful for me because the distribution I was fitting had a slight skew and a fat tail, though I couldn't find any implementations of it anywhere. The most useful solution I have found so far is Mixture Density Networks which allows you to take a set of features and create a mixture distribution which isn't limited to normal. I also found an RNN Based mixed density network- http://blog.otoro.net/2015/12/12/handwriting-generation-demo-in-tensorflow/
