[site]: stackoverflow
[post_id]: 4228290
[parent_id]: 4225497
[tags]: 
The specific thing you're asking for -- conditional inclusion -- is difficult in Make. It can be done, but it's not elegant. There are several ways to get the effect you want. You could use a conditional on MAKECMDGOALS. You could could have your makefile invoke a second makefile, and pass it the name of the subdirectory to use. But (without knowing more about the situation) I think this way is the tidiest: include sub-makefile1 FOO_OBJECTS := $(OBJECTS) include sub-makefile2 BAR_OBJECTS := $(OBJECTS) lib/%.so: link $^ -o $@ lib/foo.so: $(FOO_OBJECTS) lib/bar.so: $(BAR_OBJECTS) foo bar : % : lib/%.so (You could be clever with variable names like foo_OBJECTS to save a line or two, but I advise against that.)
