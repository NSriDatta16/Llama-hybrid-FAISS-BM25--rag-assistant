[site]: stackoverflow
[post_id]: 1633326
[parent_id]: 1631087
[tags]: 
Using a solution like dreeves, but only returning a single instance of each duplicated element, is a bit on the tricky side. One way of doing it is as follows: collectDups1[l_] := Module[{i, j}, i[n_] := (i[n] := j[n]; Unevaluated@Sequence[]); j[n_] := (j[n] = Unevaluated@Sequence[]; n); i /@ l]; This doesn't precisely match the output produced by Will Robertson's (IMO superior) solution, because elements will appear in the returned list in the order that it can be determined that they're duplicates. I'm not sure if it really can be done in a single pass, all the ways I can think of involve, in effect, at least two passes, although one might only be over the duplicated elements.
