[site]: stackoverflow
[post_id]: 399451
[parent_id]: 399380
[tags]: 
I was wondering how you guys actually develop large applications when you are your own boss. I started by writing pages and pages and pages of functional specification ... describing in various levels of detail (including the UI) what I wanted the software to do. I also tried to minimize risk by writing some prototype, proof-of-concept software components of the riskest or least-well-understood bits. Anyway, every time I reengineer a script or a table or something, I need to scrap all ... I certainly do refactor what I've written (I've been working on this since 2005), but only to add new functionality. Note that "refactor" is a technical term (look it up: there are books about it): note that "refactor" isn't at all the same as "scrapping" what I've already written (instead, I'm modifying-it-and-adding-to-it). I have been at it for two years now; no results yet. ... Anyways, I have been developing at full speed these last 2 months ... I don't know how much experience you have as a programmer. Unless you're very experienced, some options are: Take on a smaller project (don't expect to finish too big a project by yourself) ... the effort and skill to complete a project isn't linear with the project size (e.g. a project that's twice as big might be five times more difficult to complete) Start, but don't expect to finish (it's a learning opportunity which you'll learn from) Work with someone else Work more slowly and methodically (if you're only going 100 yards you can just start running, but if you're going 100 miles then you need to prepare a map etc.). The hardest part for me is scraping my documentation for I spend more time documenting than coding ... Someone (not necessarily me) ought to reply this paragraph of yours, or perhaps you could say more about it. I'm very interested in this topic (in fact the product which I've developing is for documenting software development), but I don't know what to reply to this particular paragraph of yours.
