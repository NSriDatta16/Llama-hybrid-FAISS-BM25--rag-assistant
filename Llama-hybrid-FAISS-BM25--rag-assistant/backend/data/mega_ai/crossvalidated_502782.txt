[site]: crossvalidated
[post_id]: 502782
[parent_id]: 501432
[tags]: 
@Anderson Arroyo A model like this is possible to estimate but, to my understanding, is not implemented in R/on CRAN as a package currently. For instance, you could implement a model similar to the one you are interested in here using Stata and the SSC module domme (see Luchman, Xue, and Kaplan, 2020 for a discussion of the approach as well as this github page). Below there is an example from an ARMA model with a first order moving average, first order autoregression and an exogenous variable. The approach is a dominance analysis adapted to focus on parameter estimation as opposed to independent variables and estimates a McFadden's pseudo-R^2. . webuse friedman2, clear . arima consump m2 if tin(, 1981q4), ar(1) ma(1) (setting optimization to BHHH) Iteration 0: log likelihood = -344.67575 Iteration 1: log likelihood = -341.57248 Iteration 2: log likelihood = -340.67391 Iteration 3: log likelihood = -340.57229 Iteration 4: log likelihood = -340.5608 (switching optimization to BFGS) Iteration 5: log likelihood = -340.5515 Iteration 6: log likelihood = -340.51272 Iteration 7: log likelihood = -340.50949 Iteration 8: log likelihood = -340.5079 Iteration 9: log likelihood = -340.50775 Iteration 10: log likelihood = -340.50774 ARIMA regression Sample: 1959q1 - 1981q4 Number of obs = 92 Wald chi2(3) = 4394.80 Log likelihood = -340.5077 Prob > chi2 = 0.0000 ------------------------------------------------------------------------------ | OPG consump | Coef. Std. Err. z P>|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- consump | m2 | 1.122029 .0363563 30.86 0.000 1.050772 1.193286 _cons | -36.09872 56.56703 -0.64 0.523 -146.9681 74.77062 -------------+---------------------------------------------------------------- ARMA | ar | L1. | .9348486 .0411323 22.73 0.000 .8542308 1.015467 | ma | L1. | .3090592 .0885883 3.49 0.000 .1354293 .4826891 -------------+---------------------------------------------------------------- /sigma | 9.655308 .5635157 17.13 0.000 8.550837 10.75978 ------------------------------------------------------------------------------ Note: The test of the variance against zero is one sided, and the two-sided confidence interval is truncated at zero. . matrix list e(b) e(b)[1,5] consump: consump: ARMA: ARMA: sigma: L. L. m2 _cons ar ma _cons y1 1.1220286 -36.098721 .93484865 .30905921 9.6553076 . domme (consump = m2) (ARMA = L.ar L.ma) if tin(, 1981q4), reg(arima consump m2) ropt(ar(1) ma(1)) fitstat(e(), > mcf) Total of 7 models/regressions General dominance statistics: ARIMA regression Number of obs = 92 Overall Fit Statistic = 0.5125 | Dominance Standardized Ranking | Stat. Domin. Stat. ------------+------------------------------------------------------------------------ consump | m2 | 0.2181 0.4256 2 ARMA | L.ar | 0.2449 0.4778 1 L.ma | 0.0495 0.0965 3 ------------------------------------------------------------------------------------- Conditional dominance statistics ------------------------------------------------------------------------------------- #param_ests: #param_ests: #param_ests: 1 2 3 consump:m2 0.3482 0.2265 0.0797 ARMA:L.ar 0.3905 0.2533 0.0910 ARMA:L.ma 0.0856 0.0578 0.0050 ------------------------------------------------------------------------------------- Complete dominance designation ------------------------------------------------------------------------------------- dominated?: dominated?: dominated?: m2 L_ar L_ma dominates?:m2 0 -1 1 dominates?:L_ar 1 0 1 dominates?:L_ma -1 -1 0 ------------------------------------------------------------------------------------- Strongest dominance designations ARMA:L.ar completely dominates consump:m2 consump:m2 completely dominates ARMA:L.ma ARMA:L.ar completely dominates ARMA:L.ma I have been working on a port of this module to R but it is not yet ready to accommodate an AR(I)MA model. Hope to add such capabilities in the future and, eventually, release on CRAN.
