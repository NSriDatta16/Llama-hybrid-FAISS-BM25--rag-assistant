[site]: stackoverflow
[post_id]: 4294174
[parent_id]: 4293989
[tags]: 
You can't achieve this with list(d).sort(function), because you'll get a list with dictionary keys. You can achieve your objective with alternative approach: l1 = sorted(d.items(), key=lambda x: (x[1], x[0])) l2 = sorted(l1, key=lambda x: x[1], reverse=True) result = [x[0] for x in l2] This approach converts dictionary to list of (key, value) tuples. Then l1 is sorted by values and l2 is sorted by keys. Since python has a stable sorting algorithm, the order of values is preserved for identical keys. Edit: Ignacio Vazquez-Abrar's approach is similar, but more elegant, because the list need to be sorted only once.
