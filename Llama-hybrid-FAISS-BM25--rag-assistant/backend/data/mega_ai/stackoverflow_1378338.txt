[site]: stackoverflow
[post_id]: 1378338
[parent_id]: 1378246
[tags]: 
Looking at the field_file_save_file() function in field_file.inc from filefield module, you can find the following snippet // Rename potentially executable files, to help prevent exploits. if (preg_match('/\.(php|pl|py|cgi|asp|js)$/i', $file->filename) && (substr($file->filename, -4) != '.txt')) { $file->filemime = 'text/plain'; $file->filepath .= '.txt'; $file->filename .= '.txt'; } So yes, it's a 'security thing', as Jeremy guessed. You could patch that RegEx for an immediate 'fix', but that would remove this otherwise useful security check completely for all filefields used on the site. So a more specific workaround might be a better approach. Since you want to add the files via drupal_add_js() calls from code anyways, you might as well do the renaming there, adding some kind of verification to make sure you can 'trust' the file (e.g. who uploaded it, whatever). Edit: Concerning options to rename (and alternatives) when calling drupal_add_js() : For renaming the file, look into the file_move() function. A problem with this would be that it won't update the corresponding entry in the files table, so you would have to do that also, if the move operation succeeded. (The filefield just stores the 'fid' of the corresponding entry in the files table, so you'd need to find it there by 'fid' and change the 'filename', 'filepath' and 'filemime' entries according to your rename/move) Alternatively, you could just load the content of the *.js.txt file and add that string with the 'inline' option of drupal_add_js() . This would be less 'elegant' and could be a performance hit, but if those are not important criteria in your specific case, it is less trouble. Yet another option would be just passing the *.js.txt file as is to drupal_add_js() , ignoring the 'wrong' extension. A short local test showed that this works (at least in firefox). This might be the 'least effort' solution, but would need some additional testing concerning different browser behavior concerning usage of 'misnamed' js files.
