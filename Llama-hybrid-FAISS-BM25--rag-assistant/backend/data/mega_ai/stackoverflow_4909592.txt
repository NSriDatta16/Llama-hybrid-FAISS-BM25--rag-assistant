[site]: stackoverflow
[post_id]: 4909592
[parent_id]: 
[tags]: 
javascript tree control + permalinks and back/forward buttons for navigation

Here's the task at hand. I need to implement a fully client-side tree that will work finely with permalinks and back/forward buttons for navigation. E.g. I open a page with such tree control, expand some nodes, then press back and it collapses the last expanded node, then press forward and it expands the subject node. Finally I copy the url of the page and send it to my colleague - she clicks the url and the tree gets its nodes open to reveal the same tree structure that I see on my screen. I'm looking for a JavaScript tree control that would fit the following list of requirements: (Mandatory) Support for asynchronous node retrieval. Possibility to hook into expand/collapse events to invoke custom logic that will serialize tree state into url anchor. API for programmatic expanding/collapsing of given nodes, so that I don't have to emulate clicks when deserializing tree state upon pageload. I've already had some experience with jsTree and jQuery treeview. The problem with jsTree is that it uses tags to render nodes, which messes up url anchors on click. After a couple of hours I've managed to migrate it to 's, though my solution works only in Firefox. Not as good as I'd like. Another thing happened when I tinkered with jQuery treeView. At first I was embarassed by its "not in active development" status, though upon a second glance it appeared to be a simple yet powerful widget. The async demo looked excellent so I tried to reproduce it at my PC and with my data. But then I faced a weird bug - when my JSON service returned lazy nodes (i.e. ones that had hasChildren set to true ), the treeview immediately expanded those and rendered the "loading" gif, though without loading anything. I tried to debug this glitch, but I'm really not that smart to understand how all those callbacks and aspects interact with each other. At least not within the time window I had.
