[site]: stackoverflow
[post_id]: 5105024
[parent_id]: 4986447
[tags]: 
You can use interface builder to achieve the same thing. Here is a slightly modified (for some additional clarity) version of Rog's original suggestion - notice the IBOutlet's @interface AppDelegate : NSObject { ViewController1 *vc1; ViewController2 *vc2; ViewController3 *vc3; } @property (nonatomic, retain) IBOutlet ViewController1 *vc1; @property (nonatomic, retain) IBOutlet ViewController2 *vc2; @property (nonatomic, retain) IBOutlet ViewController3 *vc2; Then on the implementation file: - (void)applicationDidFinishLaunching:(UIApplication *)application { vc1.managedObjectContext = self.managedObjectContext; vc2.managedObjectContext = self.managedObjectContext; vc3.managedObjectContext = self.managedObjectContext; // Continue with your implementation logic } Then from within Interface Builder ctrl drag from your App Delegate to the View Controller nested within the Tab Bar Controller and hook up the relevant View controller from the contextual menu that appears.
