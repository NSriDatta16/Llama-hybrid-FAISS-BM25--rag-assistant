[site]: stackoverflow
[post_id]: 1962999
[parent_id]: 
[tags]: 
Finding sets that are a subset of a specific set

Lets say I have 4 different values A,B,C,D with sets of identifiers attached. A={1,2,3,4,5} B={8,9,4} C={3,4,5} D={12,8} And given set S of identifiers {1,30,3,4,5,12,8} I want it to return C and D. i.e. retrieve all sets from a group of sets for which S is a superset. Is there any algorithms to perform this task efficiently (Preferably with low memory complexity. Using external device for storing data is not an option) ? A trivial solution would be for each member in the superset S retrieve list of sets that include that member (basically inverted index) and for each returned set check that all of his members are in the superset. Unfortunately because on average the superset will include at least one member for each set there is a significant and unacceptable performance hit with this approach. I am trying to do this in Java. Set consist of integers and the value they identify is an object. Collection of sets is not static and bound to change during the course of execution. There will be some limit on the set number though. Set size is not limited. But on average it's between 1 and 20.
