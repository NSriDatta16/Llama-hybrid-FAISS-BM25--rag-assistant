[site]: stackoverflow
[post_id]: 2977606
[parent_id]: 2977504
[tags]: 
It's not the same. If the data is stable during the life of the application must always be available and must not be purged you'd use HttpApplicationState . If the data not necessarily is needed for the life of the application changes frequently can be purged if needed (for example low system memory) can be discarded if seldom used should be invalidated /refreshed under some conditions (dependency rule: time span, date, file timestamp, ...) then use Cache . Other important differences: Large amounts of data may better be stored in Cache, the server then can purge it if low on memory. Cache is safe for multithreaded operations. Page.Application needs locking . See also this article on etutorials.org for more details. And this question: ASP.NET Page.Cache versus Page.Application storage for data synchronization?
