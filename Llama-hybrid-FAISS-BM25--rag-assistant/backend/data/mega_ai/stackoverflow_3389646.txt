[site]: stackoverflow
[post_id]: 3389646
[parent_id]: 
[tags]: 
Zend_Auth: Allow user to be logged in to multiple tables/identities

I am using Zend_Auth for authentication in a web portal. A normal mySQL "users" table with a login and password column gets queried against, and a user logged in. However, I have two additional groups of users that I want to authenticate. All three of these user groups have their logon data in other tables . Their data is coming from external sources, so unifying these login accounts into one is not desired. So it could be that a user is an authenticated user from any of the three groups, even all three of them, at the same time . Every one of the three login groups has their own login form and logout button. At the moment, I have a single, straightforward Zend_Auth login, taken from some tutorial and slightly modified, that looks approximately like this: function login($user, $password) { $auth = Zend_Auth::getInstance(); $storage = new Zend_Auth_Storage_Session(); $auth->setStorage($storage); $adapter = new Zend_Auth_Adapter_DbTable(....); $adapter->setIdentity($username)->setCredential($password); $result = $auth->authenticate($adapter); if ($result->isValid()) ......... success! else .... fail! where would I have to start to make this serve and address separate "logged in" states for the three groups? My idea is that I would like to share the session, and manage the authentications separately. Is this possible? Maybe there is a simple prefix that makes this easy? Do any tutorials or resources exist on the issue? I'm a relative newbie to the Zend Framework.
