[site]: stackoverflow
[post_id]: 518326
[parent_id]: 518239
[tags]: 
I'm not sure how far you've gotten, but if you looking for a quick drag and drop operation you might want to look at creating a strongly-typed dataset that connects, and using the drag-drop features of the DataSources Tool Window in Visual Studio. There are definately samples out there, but you will want to. Create a new DataSet Drag-n-Drop from your DataConnection Tree in Server Explorer Create a new form Drag the table from the DataSources Tool Window on to the form. voila Update: First off, I'm not 100% that I understand your issue. If you can create some LinkTables between the access files that would be best, then you can copy the data between files using a sql statement like 'INSERT INTO Customers SELECT FirstName, LastName FROM File2.Customers'. If thats not and option I think your going to have to loop the DataTables and insert the records manually using INSERT statements similar to your last edit. As for the datagrid, you will probably have to keep track of whats changed by monitoring the RowChanged Event (not sure if thats the exact event) of even do the insert/update statements when the row changes. Update: to loop the datatable you would do something like this. not tested. I just updated this again to include the MakeValueDbReady function. This is not tested either and I'm not sure if I've handle all the cases or even all the cases correctly. You'll really have to debug the sql statement and make sure its generating the right value. Each database handles is values differently. Atleast this way the value parse is extracted away. I also realized that instead of hard coding the TableName you should be able to get it from a property on the DataTable void CopyTable(DataTable table, string connectionStringB) { var connectionB = new OleDbConnection(connectionStringB); foreach(DataRow row in table.Rows) { InsertRow(row, table.Columns, table.TableName, connectionB); } } public static void InsertRow(DataRow row, DataColumnCollection columns, string table, OleDbConnection connection) { var columnNames = new List (); var values = new List (); // generate the column and value names from the datacolumns for(int i =0;i
