[site]: stackoverflow
[post_id]: 1586998
[parent_id]: 
[tags]: 
SharePoint SOAP GetListItems VS jQuery - How to use Ajax to cycle through Custom List items as well as Ajax refresh the list contents?

I am using jQuery to access Sharepoint 2007's SOAP interface via the GetListItems method to read in a custom list of announcements in such a way as to have that list refresh once a minute (in case the owners of the list add new content, so that the new content becomes visible without having the end user refresh their sharepoint screen). What I would like to do is not only refresh that list, I would like to have each item in the list cycle through one at a time (maybe have each item stay visible for 10 seconds, then the next item would load into that space. Here is the code I have so far: $(document).ready(function() { // Create the SOAP request // NOTE: we need to be able to display list attachments to users, hence the addition of the // element, which necessitated the addition of the element var soapEnv = " \ \ testlist \ \ \ \ \ \ \ \ \ \ \ \ \ \ TRUE \ \ \ \ \ "; // call this SOAP request every 20 seconds $("#tasksUL").everyTime(20000,function(i){ // our basic SOAP code to hammer the Lists web service $.ajax({ url: "http://ourdomain.net/_vti_bin/lists.asmx", type: "POST", dataType: "xml", data: soapEnv, error: printError, complete: processResult, contentType: "text/xml; charset=\"utf-8\"" }); }); }); // basic error display that will pop out SOAP errors, very useful! function printError(XMLHttpRequest, textStatus, errorThrown) { alert("There was an error: " + errorThrown + " " + textStatus); alert(XMLHttpRequest.responseText); } // main method that will cycle through the SoAP response nodes function processResult(xData, status) { $(xData.responseXML).find("z\\:row").each(function() { // resets display element $("#tasksUL").empty(); // gets attachments array - if there is more than one attachment, // they get seperated by semi-colons in the response // they look like this natively (just an example): // ows_Attachments = ";#http://server/Lists/Announcements/Attachments/2/test.txt; // #http://server/Lists/Announcements/Attachments/2/UIP_Setup.log;#" var mySplitResult = $(this).attr("ows_Attachments").split(";"); // set up storage for later display of images var notice_images = ""; // processes attachments - please forgive the kludge! for(i = 0; i "; } } } // create final output for printing var liHtml = " " + $(this).attr("ows_Title") + " " + notice_images + $(this).attr("ows_Body") + " "; // assign output to DIV tags $("#tasksUL").html(liHtml); }); } &nbsp; It's pretty simple stuff so far (although finding decent documentation as to what you are able to do with the GetListItem SOAP request was daunting). Inside of the block where I iterate through the returned rows (the PprocessResult function), I am resetting the HTML being assigned to the DIV block so that only one row is showing as output. The way the code is set up, this means only the very last row in my custom list will be visible, as I have no code pausing the iterations. My thought had been to wrap a timer around this block of code: $(xData.responseXML).find("z\\:row").each(MYTIMER(10000, function(){... But I met with zero or mixed results. My question to you all is: What would be the best way to set up my current code to both refresh the source list data like it is now AND cycle through query results from that list one at a time (preferably with a small pause on each item so that people can read it)?
