[site]: crossvalidated
[post_id]: 60497
[parent_id]: 60496
[tags]: 
Training output should be the same as your target output. If you want to predict the goal difference between two teams, you are training on realized goal differences in the past. Then you are talking about the inputs really. That is, you can add weather as your input, as well as which team was playing home etc... This is your choice what to put in here and you'll have more things to tackle on a way, but first just try simple things. So, it will look like this: input: home team name away team name temperature output: goal difference First, you train taking historical records of teams playing, temperature on stadiums at that time and actual goal margin. The training set should include ALL matches you have data about, between all teams (looking at edited question - you don't average anything in data set, you give raw data available on that point, training is exactly the same as prediction with only difference of result given). Yes, it can be percentages of wins as well, be careful to select only past games (that is, if game was in 2011-05-03 you must average only on games before this date). Then when the model is trained you can enter custom team names and temperature to predict the result. On a sidenote - training on matches between two particular teams could be not too good because of lack of data. You probably should take into account all the stats available. If you think about it, is should improve the prediction (i.e., if it is raining during the match, it doesn't matter which teams are playing - often the number of goals scored is much smaller, and numerous other relations you'd miss if you have not enough data). PS: Neural network is probably not the best solution for this... But try all methods at hand - most packages can easily switch between predictors.
