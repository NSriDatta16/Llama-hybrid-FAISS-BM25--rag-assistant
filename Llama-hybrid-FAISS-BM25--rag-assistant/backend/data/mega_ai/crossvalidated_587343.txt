[site]: crossvalidated
[post_id]: 587343
[parent_id]: 587070
[tags]: 
In a comment you clarify that the primary task is email classification and removing quoted text is meant to "make my classifier perform better". I suspect that you are making an assumption: that you think classification would be easier without quoted text rather than you have evidence that quoted text introduces noise and errors into the classification process. You don't describe what the classification task is (aside: the more details you include, the more on-point answers you get) but I guess that quoted text may provide useful context for the topic of the email. I wouldn't start working on methods to remove this context until I understand better that quoted text is an issue and why. So I suggest you follow the outlines of @Tim's advice and build end-to-end classifier first. See how the baseline performs without removing quoted text and do some error analysis to determine what are the most common reasons for the baseline classifier to get it wrong. Work on fixing those common sources of error. Iterate. Error analysis is the process of looking at misclassified examples to understand why the classifier got it wrong. It's a manual but very efficient procedure for discovering the most common sources of error. Working on those is the best way to improve the performance of an ML model. See Andrew Ng's Machine Learning Yearning book. Finally, there might be a middle ground between coming up with a system of regex rules and developing a machine learning solution to remove quoted text in emails: email parsing. A quick search came up with mail-parser , a python library for parsing email structure, though it may not be applicable in your use case.
