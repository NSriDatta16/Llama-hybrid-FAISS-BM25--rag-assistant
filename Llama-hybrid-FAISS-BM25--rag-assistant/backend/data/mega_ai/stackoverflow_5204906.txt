[site]: stackoverflow
[post_id]: 5204906
[parent_id]: 
[tags]: 
Compiling pyx files with dependencies in different packages

I am having problems compiling cdef-ed types in different packages and I couldn't find an explanation in cython docs. I have this setup.py in the root of my python src tree: from distutils.core import setup from distutils.extension import Extension from Cython.Distutils import build_ext setup( cmdclass = {'build_ext': build_ext}, ext_modules = [ Extension("flink.pytk.defs.FragIdx", sources = ["flink/pytk/defs/FragIdx.pyx"]), Extension("flink.pytk.fragments.STK_idx", sources = ["flink/pytk/fragments/STK_idx.pyx"]) ] ) FragIdx is a cdef-ed type, defined in flink/pytk/defs/FragIdx.pyx: cdef class FragIdx: cdef public FragIdx parent cdef public FragIdx root cdef public tuple label ... And STK_idx is an extension of FragIdx, defined in flink/pytk/fragments/STK_idx.pyx: from flink.pytk.defs.FragIdx import FragIdx cdef class STK_idx(FragIdx): ... When I try to compile using the setup.py listed at the beginning of the post, FragIdx is compiled all right, but when it comes to STK_idx I get the following error message: flink/pytk/fragments/STK_idx.pyx:5:5: 'FragIdx' is not a type name Please note that the root directory of my source tree is listed in $PYTHONPATH. I would really appreciate if anyone could shed any light on this, thanks a lot! Daniele
