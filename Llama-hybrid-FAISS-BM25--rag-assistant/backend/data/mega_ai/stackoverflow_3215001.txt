[site]: stackoverflow
[post_id]: 3215001
[parent_id]: 
[tags]: 
How do I turn relational comparison of pointers into an error?

We've been bitten by the following bug many times: #include #include #include using namespace std; void print(int* pn) { cout v; v.push_back(n1); v.push_back(n2); v.push_back(n3); sort(v.begin(), v.end()); // Here be dragons! for_each(v.begin(), v.end(), print); cout The problem is that std::sort is comparing integer pointers not integers, which is not what the programmer intended. Worse, the output may appear correct and deterministic (consider the order of addresses returned by new or allocated on the stack). The root problem is that sort eventually calls operator Is there any way to prevent this or at least get a compiler warning? For example, is there a way to create a custom version of std::sort that requires a comparison function when T is a pointer?
