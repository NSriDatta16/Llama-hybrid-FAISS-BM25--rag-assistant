[site]: crossvalidated
[post_id]: 61485
[parent_id]: 47199
[tags]: 
Excel supports matrix operations. In this case, do the following: Put the data points in an $n$ by $p$ array where $p$ is the dimensionality of the space. Call this array X . Put the cluster centers in an $m$ by $p$ array and call it M . Put the weights into a $1$ by $p$ array and call it W . Create a range for the $n$ by $m$ calculation. Bound it on the left with the sequence $1,2,\ldots, n$, going down the column. To be concrete, let's suppose this sequence is in cells A2 , A3 , etc. Bound it above with the sequence $1,2,\ldots, m$. To be concrete, let's suppose this is in cells B1 , C1 , etc. Thus the upper left corner of the results will in cell B2 . Select the top cell in the result array ( B2 ). In the formula bar type =MMULT(W, ABS(TRANSPOSE(OFFSET(X, $A2-1, 0, 1) - OFFSET(M, B$1-1, 0, 1)))) and press Enter . Drag this formula throughout the entire array, first to the right across all $m$ cells of the top row, and then after selecting the entire top row, down to include all $n$ rows. Judicious use of "\$" in the formula causes it to update appropriately when dragged. (This illustrates how to compute an outer product in Excel.) This formula does the following: OFFSET(X, $A2-1, 0, 1) uses the entries in the left column (column A ) to index into the rows of array X . OFFSET(M, B$1-1, 0, 1) uses the entries in the top row (row 1 ) to index into the rows of array M . - subtracts the designated row of M from the designated row of X , yielding a $1$ by $p$ array. TRANSPOSE converts that result to a $p$ by $1$ array. MMULT performs the matrix multiplication of the $1$ by $p$ array W by the $p$ by $1$ array computed in the preceding step, producing a $1$ by $1$ array: that is, a number (the distance).
