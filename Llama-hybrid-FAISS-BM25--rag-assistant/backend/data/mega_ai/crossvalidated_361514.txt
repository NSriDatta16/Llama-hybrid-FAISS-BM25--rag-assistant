[site]: crossvalidated
[post_id]: 361514
[parent_id]: 360417
[tags]: 
If you are happy with a method using Python then Linkedin's Luminol library may help you here. You can run the 3 time series through that it and it will cross correlate them. It has a anomaly detector element too, however the cross correlation method is pretty straight forward, based on Paul Bourke 1996 method and you can just use the correlator method as shown in the example below, without having to use any of the anomaly detector fucntionality. https://github.com/linkedin/luminol # Python example # where anomaly_ts_dict and correlate_ts_dict are a Python dictionary of timestamp, value e.g. # {1533831338: 5.6, 1533831368: 7.0} # Let us sat T1 is the time series you are wanting to check T2 and T3 against anomaly_ts_dict = dict(T1) # T1 would have to be a dictionary correlate_ts_dict = dict(T2) label = 'T2' # handle 120 second window on either side time_period = (int(anomaly_timestamp - 120), int(anomaly_timestamp + 120)) my_correlator = Correlator(anomaly_ts_dict, correlate_ts_dict, time_period) cross_correlation_threshold = 0.9 correlations = [] if my_correlator.is_correlated(threshold=cross_correlation_threshold): correlation = my_correlator.get_correlation_result() correlated = True correlations.append([label, correlation.coefficient, correlation.shift, correlation.shifted_coefficient])
