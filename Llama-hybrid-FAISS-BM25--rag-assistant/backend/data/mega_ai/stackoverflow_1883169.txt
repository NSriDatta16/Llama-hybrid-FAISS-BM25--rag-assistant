[site]: stackoverflow
[post_id]: 1883169
[parent_id]: 1881652
[tags]: 
More generally, I think you are looking for a way to give an instant mesure of the transfer speed, which is generally obtained by an average over a small period. The problem is generally that in order to be reactive, the period is usually extremely small, which leads to the yoyo effect. I would propose a very simple scheme, let's model it. Think of a curve speed (y) over time (x). the Instant Speed, is no more than reading y for the current x (x0). the Average Speed, is no more than Integral(f(x), x in [x0-T,x0]) / T the scheme I propose is to apply a filter, to give more weight to the last moments, while still taking into account the past moments. It can be easily implement as g(x,x0,T) = 2 * (x - x0) + 2T which is a simple triangle of surface T. And now you can compute Integral(f(x)*g(x,x0,T), x in [x0-T,x0]) / T , which should work because both functions are always positive. Of course you could have a different g as long as it's always positive in the given interval and that its integral on the interval is T (so that its own average is exactly 1). The advantage of this method is that because you give more weight to immediate events, you can remain pretty reactive even if you consider larger time intervals (so that the average is more precise, and less susceptible to hiccups). Also, what I have rarely seen but think would provide more precise estimates would be to correlate the time used for computing the average to the estimated remaining time: if I download a 5ko file, it's going to be loaded in an instant, no need to estimate if I download a 15 Mo file, it's going to take between 2 minutes roughly, so I would like estimates say... every 5 seconds ? if I download a 1.5 Go file, it's going to take... well around 200 minutes (with the same speed)... which is to say 3h20m... perhaps that an estimates every minute would be sufficient ? So, the longer the download is going to take, the less reactive I need to be, and the more I can average out. In general, I would say that a window could cover 2% of the total time (perhaps except for the few first estimates, because people appreciate immediate feedback). Also, indicating progress by whole % at a time is sufficient. If the task is long, I was prepared to wait anyway.
