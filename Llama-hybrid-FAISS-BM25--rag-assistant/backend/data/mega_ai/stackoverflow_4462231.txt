[site]: stackoverflow
[post_id]: 4462231
[parent_id]: 4462118
[tags]: 
It looks like this is because you misuse the formula interface to svm() . Normally, one supplies a data frame or similar object within which the variables in the formula are searched for. It usually doesn't matter if you don't do this, even if it is not best practice, but when you want to predict, not putting variables in a data frame gets you in a right mess. The reason it returns the training data is because you don't provide newdata an object with a component named x in it. Hence it can't find the new data x so returns the fitted values. This is common for most R predict methods I know. The solution then is to i) put your training data in a data frame and pass svm this as the data argument, and ii) supply a new data frame containing x (from test ) to predict() . E.g.: > DF mod predict(mod, newdata = data.frame(x = test)) 1 2 3 4 5 1 1 1 1 1 Levels: 0 1
