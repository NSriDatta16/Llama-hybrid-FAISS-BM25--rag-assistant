[site]: stackoverflow
[post_id]: 1755096
[parent_id]: 
[tags]: 
Sharing components in .NET platform

I have an e-commerce website that is already up and running for some time. It's built on .NET 3.5. So far, so good. The "problem" is that now I need to start sharing functionality (products list, order mechanics, customer information, etc) from this project with new projects and external vendors. Since I know the thing is gonna be big I think the best solution is to create a "platform" based on a service layer pretty much like SalesForce.com where I can offer all functionality from my base e-commerce app to anyone who wants it. My question is: 1) for organizational purposes I would like to be able to create a new VSS Solution that would consume the business DLL that I already have from e-commece app. But, if I create a new VSS Solution to keep it separated I will need to reference the compiled DLL from the e-commece app and update this reference all the time due to e-commerce changes. What do you think? Is the best way to go? Or is the best way to keep using the same solution and put everything together so I can create a reference directly to the project instead of the DLL? 2) if I choose to keep the same VSS Solution, what if I need to create a service that exposes functionality from other systems? Should I create the new service in the same solution that the component I want to expose is located? My problems are pretty much related to organization of projects. We have several projects and they are following the same development standards, so my initial idea was create a new VSS Solution to center all of the functionality of this new platform just in one place, but if I do that it seems that DLL management will be hard to do. Thanks a lot!
