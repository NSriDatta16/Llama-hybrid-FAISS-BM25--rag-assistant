[site]: stackoverflow
[post_id]: 1816462
[parent_id]: 1816458
[tags]: 
Within the inner class itself, you can use OuterClass.this . This expression, which allows to refer to any lexically enclosing instance, is described in the JLS as Qualified this . I don't think there's a way to get the instance from outside the code of the inner class though. Of course, you can always introduce your own property: public OuterClass getOuter() { return OuterClass.this; } EDIT: By experimentation, it looks like the field holding the reference to the outer class has package level access - at least with the JDK I'm using. EDIT: The name used ( this$0 ) is actually valid in Java, although the JLS discourages its use: The $ character should be used only in mechanically generated source code or, rarely, to access pre-existing names on legacy systems.
