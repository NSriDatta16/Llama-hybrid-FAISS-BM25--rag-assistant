[site]: stackoverflow
[post_id]: 1850407
[parent_id]: 
[tags]: 
WPF DataGrid: ColumnHeaderStyle ContentTemplate is not shown in full height until after resizing

This might be a bug in the WPF Toolkit DataGrid . In my Windows.Resources I define the following ColumnHeaderStyle : Because my columns are generated dynamically, I am defining the columns in code: private void CreateColumn(Output output, int index) { Binding textBinding = new Binding(string.Format("Relationships[{0}].Formula", index)); DataGridTextColumn tc = new DataGridTextColumn(); tc.Binding = textBinding; dg.Columns.Add(tc); tc.Header = output; } where Output is a simple class with Name and Data (string) properties. What I observe is that only the Name property (first TextBlock control in the ContentTemplate 's StackPanel ) is shown . When I drag one of these column headers, I see the entire header (including the Data TextBlock ). Only after manually resizing one of the columns are the column headers rendered correctly . Is there a way to get the column headers to show up correctly in code? Update: as requested, here is the rest of my code for the repro. public class Input { public Input() { Relationships = new ObservableCollection (); } public string Name { get; set; } public string Data { get; set; } public ObservableCollection Relationships { get; set; } } public class Output { public Output() { } public string Name { get; set; } public string Data { get; set; } } public class Relationship { public Relationship() { } public string Formula { get; set; } } Here is the XAML markup: | And finally the code-behind: /// /// Interaction logic for Window1.xaml /// public partial class Window1 : Window { public Window1() { InitializeComponent(); Inputs = new List (); Outputs = new List (); Input i1 = new Input() { Name = "I 1", Data = "data 1" }; Input i2 = new Input() { Name = "I 2", Data = "data 2" }; Inputs.Add(i1); Inputs.Add(i2); Output o1 = new Output() { Name = "O 1", Data = "data 1" }; Output o2 = new Output() { Name = "O 2", Data = "data 2" }; Output o3 = new Output() { Name = "O 3", Data = "data 3" }; Outputs.Add(o1); Outputs.Add(o2); Outputs.Add(o3); Relationship r1 = new Relationship() { Formula = "F1" }; Relationship r2 = new Relationship() { Formula = "F2" }; Relationship r3 = new Relationship() { Formula = "F3" }; Relationship r4 = new Relationship() { Formula = "F4" }; i1.Relationships.Add(r1); i1.Relationships.Add(r2); i2.Relationships.Add(r3); i2.Relationships.Add(r4); CreateColumn(o1, 0); CreateColumn(o2, 1); CreateColumn(o3, 2); dg.Items.Add(i1); dg.Items.Add(i2); dg.ColumnWidth = DataGridLength.SizeToHeader; } private void CreateColumn(Output output, int index) { Binding textBinding = new Binding(string.Format("Relationships[{0}].Formula", index)); DataGridTextColumn tc = new DataGridTextColumn(); tc.Binding = textBinding; dg.Columns.Add(tc); tc.Header = output; } private List Outputs { get; set; } private List Inputs { get; set; } }
