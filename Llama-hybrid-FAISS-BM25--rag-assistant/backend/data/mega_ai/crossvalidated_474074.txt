[site]: crossvalidated
[post_id]: 474074
[parent_id]: 
[tags]: 
Ways to estimate error in a machine learning algorithm's predictions by outputting a probability distribution

I want to make it so that my machine-learning algorithm, when given an input, outputs the parameters of a Gaussian distribution, with the goal of getting an expected error on the prediction. The simplest way I have come across to do that is simply to add another output node dedicated to the variance of the Gaussian distribution, or rather the logarithm of the variance for stability purposes. At training time, one can then use a Gaussian log-likelihood as loss function. In other words, something like this: Now, using this approach, I have found that the model's predictions for $\mu$ are significantly less accurate than they were in my previous model that outputted a point estimate (only $\mu$ ). I attribute that to the fact that by outputting a mean and variance, many of the weights essentially have two purposes since they need to help constructing the outputs for both the mean and the variance. So I have been experimenting with alternatives, and this is what I would like to discuss here. One alternative I have tried is to have an entirely separate branch of the model for predicting the variance. The inputs are fed to two different branches, and in the end the two outputs are collected. At training time what I did is I trained, using MSE as a loss, the branch that predicts $\mu$ on its own, treating it as a point estimate sub-model, then froze its weights, and then proceeded to train the model as a whole. While this approach has worked very well for me, I struggled to find any resource on something similar online, so I have a few questions: Is this approach (or something similar to that) common practice? If not, how come it isn't? Is there any problem in particular that discourages doing that? As I am still relatively new to machine learning, I would love to hear other alternatives that I could consider. My question is deliberately somewhat vague, so feel free to answer with whatever you think could be useful to me.
