[site]: crossvalidated
[post_id]: 362770
[parent_id]: 
[tags]: 
Decision tree / boosting tree in Tensorflow?

When I was looking for some way to break the bottleneck of memory limitation in xgboost, I found there are some boosting tree algorithm that is implemented in Tensorflow such as here . I have some questions about the implementation of boosting tree in Tensorflow: Does the implementation support mini-batch optimization? If so, how is the mini-batch optimization realized? Why bother to use Tensorflow to implement a boosting tree algorithm? The tree-construction process is not differentiable as far as I know, due to the discontinuity at the splitting boundary, therefore the auto-differentiation is only useful for calculating the gradient and hessian for loss function, but these are usually very simple analytical function. Is there some mid-ground between a fully differentiable model and a tree, so that we can still enjoy the advantages from stochastic gradient descent and interpretability of a tree model?
