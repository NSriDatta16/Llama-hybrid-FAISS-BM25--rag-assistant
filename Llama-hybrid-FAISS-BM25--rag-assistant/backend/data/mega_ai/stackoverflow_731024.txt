[site]: stackoverflow
[post_id]: 731024
[parent_id]: 730188
[tags]: 
Cons of JSF we found: The "standard" 5-phase path is very simplistic and inflexible. Varying from the normal method is complex and non-intuitive You simply can't use JSF without Facelets and Rich/ICEFaces.. at the LEAST, other modifications/addons are helpful (SEAM, etc.) It's ok to encapsulate functionality to make things "simpler"... It's NOT ok to make it next to impossible to muck about in there when circumstances require it. server-side storage of component tree is incredibly inconvenient when trying to design a client-side-reactive page. We've moved to Groovy/Grails here. The "default" convention is easy to understand and easy to bypass when necessary. Conventions also apply to modifying the framework (no multi-xml/code file changes). I have yet to need to modify an XML file by hand at all. It's just easier to work with, and is flexible enough for what we need. Grails incorporates Spring WebFlow and Hibernate, only you don't have to modify XML; Grails coding conventions are converted during compile/run time.
