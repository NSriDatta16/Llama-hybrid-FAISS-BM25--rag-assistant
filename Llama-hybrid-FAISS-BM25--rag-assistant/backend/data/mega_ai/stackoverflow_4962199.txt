[site]: stackoverflow
[post_id]: 4962199
[parent_id]: 4957887
[tags]: 
You might check out Text Transformer which claims to be some kind of universal text processing language. I have no specific experience with it. Building robust langauge front ends and usable processing tools is actually a lot of work. If you want to process computer languages in a generic way, you might consider our DMS Software Reengineering Toolkit , a kind of generalized compiler technology for parsing, analyzing, transforming, and/or generating code (or any other kind of formal document). DMS will accept arbitrary context free grammars for langauges, automatically builds an AST with no additional specification effort on your part, and is designed to handle not only large files but very large sets of files in a single computation. Normally people that want to process code need pattern recognition, code analysis and code transformation capabilities; DMS has all of these built in. It also has a variety of predefined, mature grammars for a wide variety of computer langauges, well-known (C, C++, C#, COBOL, Java, JavaScript, ... ) and otherwise (Natural, EGL, Python, MATLAB, ...), and has been used to carry out massive automated analyses and transformations on programs in these various langauges. DMS does not meet your open-source or C#/C++ implementation requirements. It is implemented as a set of domain-specific langauges for describing grammars, analyzers, transformations, prettyprinters, and scripting that allows parallel execution to enable complex analyses to run faster than single-threaded programs.
