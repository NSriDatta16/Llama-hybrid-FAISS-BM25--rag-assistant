[site]: stackoverflow
[post_id]: 3599066
[parent_id]: 3595087
[tags]: 
It's only and optimization technique. When you look at a closed object, say a cube, you only see about half the faces : the faces that are towards you (or, at least, the faces that are not towards you are always occluded by another face that points towards you) If you skip drawing all these backwards-facing faces, it will have two consequences : - the rendering time will be twice better (on average) - the final render won't change (since another, front-facing face will be drawn on top of a "culled" one) So you basically get x2 perf for free. In order to know whether the triangle is front- or back-facing, you take v0-v1 and v0-v2, make a cross product. This gives you the face normal. If this vector is towards you ( dot(normal, viewVector)
