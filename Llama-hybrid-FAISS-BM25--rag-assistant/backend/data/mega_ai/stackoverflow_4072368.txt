[site]: stackoverflow
[post_id]: 4072368
[parent_id]: 4070740
[tags]: 
When you declare a widget in a UiBinder, GWT tries to instantiate it with the default zero-arg constructor. Since your new Widget doesn't have a no-arg constructor, the UiBinder methods fail. You can look into the @UiConstructor and @UiField(provided=true) annotations, but neither will give you a very elegant solution for this. You may be better off programmatically declaring your widget and inserting it into your layout in Java. If you do want to keep using the UiBinder, you can do something like @UiField(provided=true) protected I18NLabel theLabel; public MyCompositeWidgetDefinedByUiBinder() { theLabel = new I18NLabel(eventBusToInject); initWidget(uiBinder.createAndBindUI(this)); } but there's no elegant way to inject an object through a UiBinder other than this.
