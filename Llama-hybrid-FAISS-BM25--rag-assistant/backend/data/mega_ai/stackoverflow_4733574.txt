[site]: stackoverflow
[post_id]: 4733574
[parent_id]: 4731774
[tags]: 
@Toader Mihai offered a solid explanation. (+1 from me) How to lower it: Write less complex code OR write better tested code. (See the graph below) Better tested Code ? In this context this just means: A higher code coverage and usually results in writing more tests. Less complex code ? For example: Refactor your methods into smaller ones: // Complex function doSomething() { if($a) { if($b) { } if($c) { } } else { if($b) { } if($c) { } } } // 3 less complex functions function doSomething() { if($a) { doA(); } else { doNotA(); } } function doA() { if($b) { } if($c) { } } function doNotA() { if($b) { } if($c) { } } (just a trivial example, you'll find more resources for that i'm sure) Additional resources: First off let me provide some additional resources: Creators blog post about the crap index just in case: Cyclomatic complexity explained . Tools like PHP_CodeSniffer and PHPMD will tell you that number in case you want to know. And while it is for you to decide what number is "ok" one often suggested number (that is a litte high imho) is a crap index of 30 resulting in a Graph like this: (You can get the .ods file here: https://www.dropbox.com/s/3bihb9thlp2fyg8/crap.ods?dl=1 )
