[site]: stackoverflow
[post_id]: 4344074
[parent_id]: 
[tags]: 
NSCoding of NSMutableDictionaries containing custom objects

I was trying to serialize a SearchEntity object(custom object) containing an NSMutableDictionary containing a set of type CategoryEntity (custom object). 1 SearchEntity containing: 1 NSMutableDictionary (parameters) parameters containing X CategoryEntities containing just strings and numbers. At this line [encoder encodeObject:parameters forKey:kPreviousSearchEntityKey]; in the SearchEntity encodeWithCoder" I get GDB:Interrupted every time, no error message, exception etc. just GDB:Interrupted. This is the implementation in SearchEntity and parameters is the NSMutableDictionary #pragma mark - #pragma mark NSCoding delegate methods - (void) encodeWithCoder:(NSCoder*)encoder { //encode all the values so they can be persisted in NSUserdefaults if (parameters) [encoder encodeObject:parameters forKey:kPreviousSearchEntityKey]; //GDB:Interrupted! } - (id) initWithCoder:(NSCoder*)decoder { if (self = [super init]) { //decode all values to return an object from NSUserdefaults in the same state as when saved [self setParameters:[decoder decodeObjectForKey:kPreviousSearchEntityKey]]; } return self; } The CategoryEntity also implements the NSCoding protocol and looks like this: - (void) encodeWithCoder:(NSCoder*)encoder { //encode all the values so they can be persisted in NSUserdefaults [encoder encodeObject:ID forKey:kIDKey]; [encoder encodeObject:text forKey:kTextKey]; [encoder encodeObject:category forKey:kCategoryKey]; [encoder encodeObject:categoryIdentifierKey forKey:kCategoryIdentifierKey]; } - (id) initWithCoder:(NSCoder*)decoder { if (self = [super init]) { //decode all values to return an object from NSUserdefaults in the same state as when saved [self setID:[decoder decodeObjectForKey:kIDKey]]; [self setText:[decoder decodeObjectForKey:kTextKey]]; [self setCategory:[decoder decodeObjectForKey:kCategoryKey]]; [self setCategoryIdentifierKey:[decoder decodeObjectForKey:kCategoryIdentifierKey]]; } return self; } I try to encode it from a wrapper for NSUserDefaults, like this: + (void) setPreviousSearchParameters:(SearchParameterEntity*) entity { if (entity) { //first encode the entity (implements the NSCoding protocol) then save it NSData *encodedObject = [NSKeyedArchiver archivedDataWithRootObject:entity]; [[self defaults] setObject:encodedObject forKey:kPreviousSearchKey]; [[self defaults] synchronize]; } } + (SearchParameterEntity*) getPreviousSearchParameters { //retrieve the encoded NSData object that was saved, decode and return it SearchParameterEntity *entity = nil; NSData *encodedObject = [[self defaults] objectForKey:kPreviousSearchKey]; if (encodedObject) entity = [NSKeyedUnarchiver unarchiveObjectWithData:encodedObject]; return entity; } I was thinking that when I ask to Serialize the SearchEntity, it would start to serialize the 'parameters' mutableDictionary object, NSCoder will call "encode" on the CategoryEntities contained in the dictionary and they will all respond with their correct encoded objects. However I just get GDB:Interrupted in the bottom of the console. How can I debug this? And is my approach wrong, should I wrap all levels of encoding in NSData? Ps. I do the exact same thing with a ResultEntity containing NSArrays of CategoryEntities , it encodes with no problems, so I guess the NSMutableDictionary is the only thing sticking out.
