[site]: crossvalidated
[post_id]: 174234
[parent_id]: 
[tags]: 
can random forest project/interpolate based on new values of X?

Sometimes I want a model to predict what would happen when presented with values of predictor variables that it has not seen before. For example, say, I have predictor variables (X) that go from 1 to 10 (integers only) and Y values also go up roughly from 1 to 10 (with some noise). If I train a linear model or a random forest, they learn this relationship. If I then ask the model what would happen if it X == 11 (a value of X that the trained model has never seen before), the linear model will guess 11. The random forest model will, however, guess 10. Similarly, if X == 4.51, the linear model will estimate a y value of 4.5, while the random forest will predict a value of 5 for the Y variable. index = np.arange(0, 300) x = [2] *100 + [3] * 100 + [4] * 100 + [5] * 100 x = [[i] for i in x] y = [i[0]+np.random.normal(0, .4) for i in x] est = ensemble.RandomForestRegressor(n_estimators= 300, min_samples_split =5, oob_score=True) est.fit(x, y)#[:-116] x_forecast = [[i] for i in [6] *100] #x_forecast = [[i] for i in [4.5] *100] est.predict(x_forecast) Is there a way to get random forest to make estimate values of Y that do not exactly equal the expected value of Y for the closest X in the training dataset?
