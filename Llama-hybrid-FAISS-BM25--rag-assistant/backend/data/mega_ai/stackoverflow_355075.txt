[site]: stackoverflow
[post_id]: 355075
[parent_id]: 355060
[tags]: 
streloksi's link does a great job of breaking down the differences. The quick and dirty summary though is ... In terms of syntax and usage. The syntax is roughly the same between the languages. A few quirks here and there (most notably in constraints). But basically if you can read one, you can likely read/use the other. The biggest difference though is in the implementation. Java uses the notion of type erasure to implement generics. In short the underlying compiled classes are not actually generic. They compile down to Object and casts. In effect Java generics are a compile time artifact and can easily be subverted at runtime. C# on the other hand, by virtue of the CLR, implement generics all they way down to the byte code. The CLR took several breaking changes in order to support generics in 2.0. The benefits are performance improvements, deep type safety verification and reflection. Again the provided link has a much more in depth breakdown I encourage you to read
