[site]: stackoverflow
[post_id]: 1250488
[parent_id]: 1250060
[tags]: 
Option #3, setting the HTTP "Accept" header, is more in keeping with the HTTP specification and, among REST purists, is considered most correct. It also means that you keep the same URL (resource) no matter what the representation is. You may, however, encounter user agents that aren't capable of setting an Accept header, so supporting a backup mechanism for specifying the response format is advisable. In that case, I suggest a URL query string parameter. Using a URL query string parameter means you keep the same core URL, no matter the content type returned. This makes it clearer that clients should only issue a PUT to that URL and not to the /foo/bar.json or /foo/bar.xml URLs. Edit: Another thing to consider if you decide to go with the URL suffix (i.e. foo.json vs. foo?format=json) is that you may run into issues with caching proxies. If someone issues a PUT to /foo.json, a proxy won't interpret that as a request to invalidate /foo.xml. If, however, you use /foo?format=json, then it's all stored under the same resource (/foo) in the proxy.
