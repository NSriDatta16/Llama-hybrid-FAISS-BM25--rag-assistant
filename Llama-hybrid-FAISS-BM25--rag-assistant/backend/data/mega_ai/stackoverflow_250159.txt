[site]: stackoverflow
[post_id]: 250159
[parent_id]: 247639
[tags]: 
Ok - had a chance to read it properly. You have an alignment problem, and invoke undefined behaviour when you access the char array as an Obj_list. Most likely your platform will do one of three things: let you get away with it, let you get away with it at a runtime penalty or occasionally crash with a bus error. Your portable options to fix this are: allocate the storage with malloc or a global allocation function, but you think this is too expensive. as Arkadiy says, make your buffer an Obj_list member: Obj_list list; but you now don't want to pay the cost of construction. You could mitigate this by providing an inline do-nothing constructor to be used only to create this instance - as posted the default constructor would do. If you follow this route, strongly consider invoking the dtor list.~Obj_list(); before doing a placement new into this storage. Otherwise, I think you are left with non portable options: either rely on your platform's tolerance of misaligned accesses, or else use any nonportable options your compiler gives you. Disclaimer: It's entirely possible I'm missing a trick with unions or some such. It's an unusual problem.
