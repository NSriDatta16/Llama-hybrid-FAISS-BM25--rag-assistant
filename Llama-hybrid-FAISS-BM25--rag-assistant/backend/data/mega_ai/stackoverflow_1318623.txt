[site]: stackoverflow
[post_id]: 1318623
[parent_id]: 1318595
[tags]: 
What you want is a structure that decomposes space so that particular regions can be found efficiently. A properly decomposed octree or kD-tree should allow you to do this well, as you would only 'open' the section of the tree containing your point p to look for points nearby. This should let you put a fairly low asymptotic bound on how many extra points you need to compare distance to (knowing that below some level of decomposition, all points are close enough). Unfortunately, I don't know the literature in this area well enough to give more detailed pointers. My encounter with these things is from the Barnes-Hut n-Body simulation algorithm. Here's another question closely related to this one. And another . And a third , mentioning a data structure (Hilbert R-Trees) that I hadn't previously heard of.
