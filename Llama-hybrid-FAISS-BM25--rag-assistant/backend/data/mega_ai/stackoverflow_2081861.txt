[site]: stackoverflow
[post_id]: 2081861
[parent_id]: 2081836
[tags]: 
The quick answer: f=open('filename') lines=f.readlines() print lines[25] print lines[29] or: lines=[25, 29] i=0 f=open('filename') for line in f: if i in lines: print i i+=1 There is a more elegant solution for extracting many lines: linecache (courtesy of "python: how to jump to a particular line in a huge text file?" , a previous stackoverflow.com question). Quoting the python documentation linked above: >>> import linecache >>> linecache.getline('/etc/passwd', 4) 'sys:x:3:3:sys:/dev:/bin/sh\n' Change the 4 to your desired line number, and you're on. Note that 4 would bring the fifth line as the count is zero-based. If the file might be very large, and cause problems when read into memory, it might be a good idea to take @Alok's advice and use enumerate() . To Conclude: Use fileobject.readlines() or for line in fileobject as a quick solution for small files. Use linecache for a more elegant solution, which will be quite fast for reading many files, possible repeatedly. Take @Alok's advice and use enumerate() for files which could be very large, and won't fit into memory. Note that using this method might slow because the file is read sequentially.
