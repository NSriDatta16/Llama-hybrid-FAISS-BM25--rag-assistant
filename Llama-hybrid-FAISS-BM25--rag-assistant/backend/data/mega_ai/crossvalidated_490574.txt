[site]: crossvalidated
[post_id]: 490574
[parent_id]: 
[tags]: 
Forecasting Quarterly Time Series Data?

I've gotten very confused reading all the articles about forecasting time series data with seasonality on Medium and other sources. It seems that many provide useful background and importance of stationarity, decomposition, etc. but don't carry this forward with actual examples for quarterly financial data. Problem: Am trying to forecast standard time series data for fast growth SaaS/cloud companies using a proven and robust fitted model ideally with Python and statsmodels. What have I tried? I've had success using FBProphet 's open source framework. But, I find it to be a black box and don't understand how it arrives at its predictions. Using cross validation, I arrived iteratively at the following optimized parameters: best_params = {'changepoint_prior_scale': 0.6, 'changepoint_range': 0.8, 'daily_seasonality': False, 'growth': 'logistic', 'holidays_prior_scale': 0, 'mcmc_samples': 0, 'n_changepoints': 10, 'seasonality_prior_scale': 0.015, 'weekly_seasonality': False} I'm trying to get inside the black box and use something more "raw" such as statsmodels but I am confused by statsmodels docs on which model to use (SARIMAX, ARIMA, ThetaModel, etc.). My data does show exponential growth and many show quarterly seasonality. Example revenues for CRM (Salesforce): data = pd.DataFrame({Timestamp('2003-01-31 00:00:00'): 15600000.0, Timestamp('2003-04-30 00:00:00'): 18900000.0, Timestamp('2003-07-31 00:00:00'): 21600000.0, Timestamp('2003-10-31 00:00:00'): 25400000.0, Timestamp('2004-01-31 00:00:00'): 30100000.0, Timestamp('2004-04-30 00:00:00'): 34800000.0, Timestamp('2004-07-31 00:00:00'): 40600000.0, Timestamp('2004-10-31 00:00:00'): 46400000.0, Timestamp('2005-01-31 00:00:00'): 54600000.0, Timestamp('2005-04-30 00:00:00'): 64200000.0, Timestamp('2005-07-31 00:00:00'): 71900000.0, Timestamp('2005-10-31 00:00:00'): 82700000.0, Timestamp('2006-01-31 00:00:00'): 91100000.0, Timestamp('2006-04-30 00:00:00'): 104700000.0, Timestamp('2006-07-31 00:00:00'): 118100000.0, Timestamp('2006-10-31 00:00:00'): 130100000.0, Timestamp('2007-01-31 00:00:00'): 144200000.0, Timestamp('2007-04-30 00:00:00'): 162400000.0, Timestamp('2007-07-31 00:00:00'): 176600000.0, Timestamp('2007-10-31 00:00:00'): 192800000.0, Timestamp('2008-01-31 00:00:00'): 216900000.0, Timestamp('2008-04-30 00:00:00'): 247600000.0, Timestamp('2008-07-31 00:00:00'): 263100000.0, Timestamp('2008-10-31 00:00:00'): 276500000.0, Timestamp('2009-01-31 00:00:00'): 289600000.0, Timestamp('2009-04-30 00:00:00'): 304900000.0, Timestamp('2009-07-31 00:00:00'): 316100000.0, Timestamp('2009-10-31 00:00:00'): 330500000.0, Timestamp('2010-01-31 00:00:00'): 328400000.0, Timestamp('2010-04-30 00:00:00'): 376800000.0, Timestamp('2010-07-31 00:00:00'): 394400000.0, Timestamp('2010-10-31 00:00:00'): 429100000.0, Timestamp('2011-01-31 00:00:00'): 456900000.0, Timestamp('2011-04-30 00:00:00'): 504400000.0, Timestamp('2011-07-31 00:00:00'): 546000000.0, Timestamp('2011-10-31 00:00:00'): 584300000.0, Timestamp('2012-01-31 00:00:00'): 631900000.0, Timestamp('2012-04-30 00:00:00'): 695500000.0, Timestamp('2012-07-31 00:00:00'): 731600000.0, Timestamp('2012-10-31 00:00:00'): 788400000.0, Timestamp('2013-01-31 00:00:00'): 834700000.0, Timestamp('2013-04-30 00:00:00'): 892600000.0, Timestamp('2013-07-31 00:00:00'): 957100000.0, Timestamp('2013-10-31 00:00:00'): 1076000000.0, Timestamp('2014-01-31 00:00:00'): 1145200000.0, Timestamp('2014-04-30 00:00:00'): 1226800000.0, Timestamp('2014-07-31 00:00:00'): 1318600000.0, Timestamp('2014-10-31 00:00:00'): 1383700000.0, Timestamp('2015-01-31 00:00:00'): 1444600000.0, Timestamp('2015-04-30 00:00:00'): 1511200000.0, Timestamp('2015-07-31 00:00:00'): 1634700000.0, Timestamp('2015-10-31 00:00:00'): 1712000000.0, Timestamp('2016-01-31 00:00:00'): 1809400000.0, Timestamp('2016-04-30 00:00:00'): 1916600000.0, Timestamp('2016-07-31 00:00:00'): 2036600000.0, Timestamp('2016-10-31 00:00:00'): 2144800000.0, Timestamp('2017-01-31 00:00:00'): 2339000000.0, Timestamp('2017-04-30 00:00:00'): 2397000000.0, Timestamp('2017-07-31 00:00:00'): 2577000000.0, Timestamp('2017-10-31 00:00:00'): 2701000000.0, Timestamp('2018-01-31 00:00:00'): 2865000000.0, Timestamp('2018-04-30 00:00:00'): 3006000000.0, Timestamp('2018-07-31 00:00:00'): 3281000000.0, Timestamp('2018-10-31 00:00:00'): 3392000000.0, Timestamp('2019-01-31 00:00:00'): 3603000000.0, Timestamp('2019-04-30 00:00:00'): 3737000000.0, Timestamp('2019-07-31 00:00:00'): 3997000000.0, Timestamp('2019-10-31 00:00:00'): 4513000000.0, Timestamp('2020-01-31 00:00:00'): 4851000000.0, Timestamp('2020-04-30 00:00:00'): 4865000000.0, Timestamp('2020-07-31 00:00:00'): 5151000000.0}) When I try to see seasonal decomposition using statsmodels: from statsmodels.tsa.seasonal import seasonal_decompose results = seasonal_decompose(data) results.plot() Where do I go from here? What does this tell me? Do I have multiplicative or additive seaonality? do I need to take exponential trend out via np.log(data). Which model to fit? What further tests are needed? what if I have other companies with less sesonality? Could you recommend a process for me to test my input data to deterime which model to fit?
