[site]: crossvalidated
[post_id]: 331793
[parent_id]: 
[tags]: 
Should text pre-processing come before or after POS-tagging?

I am currently working on an assignment to produce a sentiment classifier for Twitter. One of the initial, and most important, stages in NLP classification is text pre-processing. For Twitter, this includes steps such as the following: Removing (or not) Twitter mentions Removing (or not) URLs Dealing with capitalised text Dealing with hashtags and more. One of the pre-processing/feature extraction steps is POS-tagging, whereby a grammatical word-type is assigned to each word in a text (in this case a tweet). One thing I am unsure of is whether to POS tag and then do the pre-processing steps (such as those described above) or whether to pre-process and then POS tag. I intend to use the GATE POS-tagger, which is trained on Twitter data, and can be found here: https://gate.ac.uk/wiki/twitter-postagger.html POS-tagging --> pre-processing The reason I would consider doing this way round is because I imagine that a POS-tagger performs better on fully-provided text (i.e. how a tweet appears before being pre-processed). The disadvantage in doing this is that it makes pre-processing more difficult. For example, getting rid of Twitter mentions would become more difficult than just applying a simple regex command to each tweet, partly because the POS-tagger will likely tokenise the '@name' into '@' and 'name'. Pre-processing --> POS-tagging This would make the process quicker and easier. However, as mentioned above, it is of my intuition that a POS-tagger might behave more poorly on a pre-processed text. Any help here would be greatly appreciated. If answering this, perhaps it is a good idea to discuss this problem for both normal text and Twitter, and whether or not the POS-tagger is trained on Twitter data. This would be more beneficial for people stumbling across this question in the future.
