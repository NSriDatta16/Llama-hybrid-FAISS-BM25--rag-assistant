[site]: stackoverflow
[post_id]: 4279356
[parent_id]: 1087246
[tags]: 
HTML5's File[ 1 ], FileWriter[ 2 ], and FileSystem[ 3 ] APIs are available in the latest Developer channel of Google Chrome. The FileSystem API lets you read/write to a sandbox filesystem within a space the browser knows about. You cannot, for example, open 'My Pictures' folder on the user's local FS and read/write to that. That's something in the works, but it won't be ready for a while. Example of writing a file: window.requestFileSystem( TEMPORARY, // persistent vs. temporary storage 1024 * 1024, // 1MB. Size (bytes) of needed space initFs, // success callback opt_errorHandler // opt. error callback, denial of access ); function initFs(fs) { fs.root.getFile('logFile.txt', {create: true}, function(fileEntry) { fileEntry.createWriter(function(writer) { // FileWriter writer.onwrite = function(e) { console.log('Write completed.'); }; writer.onerror = function(e) { console.log('Write failed: ' + e.toString()); }; var bb = new BlobBuilder(); bb.append('Lorem ipsum'); writer.write(bb.getBlob('text/plain')); }, errorHandler); } } Check out this HTML5 Storage slide deck for more code snippets.
