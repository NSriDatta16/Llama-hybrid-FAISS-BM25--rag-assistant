[site]: stackoverflow
[post_id]: 5162583
[parent_id]: 
[tags]: 
Is it posible to optimize (vectorize) these two functions for better performance

In my first attempts in using R I wrote two functions that are not very performant I guess and would appreciate if I can receive some hints on how to make them more performant (vectorized). Both functions come with "test case" at the end. The first function takes two time series xts objects x and y and returns a series which contains data on how many days x is higher/lower than y. require('xts') require('quantmod') countDaysBelowOrAbove 0 ) { if( any( is.na(xy[-(1:NAs),]) ) ) stop("Series contain non-leading NAs") } resultDaysLower = series[,2][i]) { daysLower = 0 daysHigher = daysHigher + 1 } else { daysHigher = 0 daysLower = daysLower + 1 } } else { daysLower = 0 daysHigher = 0 } series$cumDaysLower[i] = daysLower series$cumDaysHigher[i] = daysHigher } return(series) } getSymbols("SPY", from='2005-01-01') SPYclose = Cl(SPY) getSymbols("QQQQ", from='2005-01-01') QQQQclose = Cl(QQQQ) testData = countDaysBelowOrAbove(SPYclose, QQQQclose) The second function I would appreciate help with performance optimization is below. The function takes as parameter an xts object series and an xts object representing lengths of interval to calculate minimum of series at a specified time. The function returns calculated minimum of series with specified window for minimum calculation set in lengths. minimumWithVaryingLength 0 ) { if( any( is.na(serieslengths[-(1:NAs),]) ) ) stop("Series contain non-leading NAs") } result 0) { result[i] Thanks in advance for your kind help. Kind regards, Samo.
