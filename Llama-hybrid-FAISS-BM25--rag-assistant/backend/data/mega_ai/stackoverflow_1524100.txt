[site]: stackoverflow
[post_id]: 1524100
[parent_id]: 1523846
[tags]: 
Here's a modernized version of Pax's excellent answer: use strict; use warnings; open( my $fh, ' ) { my $last_line = $this_line; $this_line = $_; if ($this_line =~ /XXX/) { print $last_line unless $do_next; print $this_line; $do_next = 1; } else { print $this_line if $do_next; $last_line = ""; $do_next = 0; } } close ($fh); See Why is three-argument open calls with lexical filehandles a Perl best practice? for an discussion of the reasons for the most important changes. Important changes: 3 argument open . lexical filehandle added strict and warnings pragmas. variables declared with lexical scope. Minor changes (issues of style and personal taste): removed unneeded parens from post-fix if converted an if-not contstruct into unless . If you find this answer useful, be sure to up-vote Pax's original.
