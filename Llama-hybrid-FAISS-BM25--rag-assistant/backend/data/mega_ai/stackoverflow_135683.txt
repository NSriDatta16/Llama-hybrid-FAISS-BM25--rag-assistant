[site]: stackoverflow
[post_id]: 135683
[parent_id]: 135530
[tags]: 
Generally speaking yes it will be, all modern databases are clever enough to do this. There are exceptions, for example, if the statistics on the table show that the volume of data in it is sufficiently small that a full table read will be more efficient then the index will be discounted, but as a rule, you can rely on it where appropriate. Consequently, you can take advantage of this when designing your indexes. Say for example I have a table which contains A, B, C as key values and columns Y and Z containing data which I know will be retrieved often by the statements SELECT Y FROM table WHERE A = alpha and B = beta and C = gamma SELECT Z FROM table WHERE A = alpha and B = beta and C = gamma The I will generally create an index on A,B,C,X,Z - assuming that X and Z are some reasonably small field. The reason for this is that I know the access pathway in the statements above will use the index, and as the data I want to retrieve is already in the index read then no separate read of the block of data required to retrieve the table data itself will be needed. This strategy can dramatically speed up data retrieval in some circumstances. Of course, you pay for it in update costs and disk space so you need to understand what your database is doing before applying it, but as in most databases reads dramatically outnumber writes it's generally well worth the consideration.
