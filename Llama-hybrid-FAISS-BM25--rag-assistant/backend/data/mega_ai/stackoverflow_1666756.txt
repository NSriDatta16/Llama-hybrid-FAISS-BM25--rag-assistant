[site]: stackoverflow
[post_id]: 1666756
[parent_id]: 1666700
[tags]: 
One thing worth learning if you're a Python beginner is how to use interactive mode to help with this. The first thing to learn is the dir function which will tell you the attributes of an object. >>> mystring = "The big brown fox is brown" >>> dir(mystring) ['__add__', '__class__', '__contains__', '__delattr__', '__doc__', '__eq__', '__ ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__getslice__', '__g t__', '__hash__', '__init__', '__le__', '__len__', '__lt__', '__mod__', '__mul__ ', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', ' __rmul__', '__setattr__', '__str__', 'capitalize', 'center', 'count', 'decode', 'encode', 'endswith', 'expandtabs', 'find', 'index', 'isalnum', 'isalpha', 'isdi git', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lst rip', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit' , 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', ' translate', 'upper', 'zfill'] Remember, in Python, methods are also attributes. So now he use the help function to inquire about one of the methods that looks promising: >>> help(mystring.count) Help on built-in function count: count(...) S.count(sub[, start[, end]]) -> int Return the number of non-overlapping occurrences of substring sub in string S[start:end]. Optional arguments start and end are interpreted as in slice notation. This displays the docstring of the method - some help text which you should get in to the habit of putting in your own methods too.
