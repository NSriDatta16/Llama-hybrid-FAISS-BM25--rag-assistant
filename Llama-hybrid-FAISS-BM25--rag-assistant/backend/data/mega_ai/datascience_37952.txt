[site]: datascience
[post_id]: 37952
[parent_id]: 
[tags]: 
How to implement one vs rest classifier in a multiclass classification problem?

I have a dataset which contains 750 data points with 8 classes in the target variable. I tried implementing simple machine learning models and also did hyperparameter tuning but they results were not much impressive. The best log loss that i could get was 1.52 with a misclassification rate of 53%. What are the other methods that i could apply to improve the models performance ? Also, I want to implement onevsrest classifier with the hope that, it would improve the results, but implementation of the same is not clear to me although I looked in the internet for some clear codes. best_alpha = np.argmin(cv_log_error_array) clf =OneVsRestClassifier(RandomForestClassifier(n_estimators=alpha[int(best_alpha/2)], criterion='entropy', max_depth=max_depth[int(best_alpha%2)], random_state=42, n_jobs=-1)) clf.fit(X_traindata, y_train) sig_clf = CalibratedClassifierCV(clf, method="sigmoid") sig_clf.fit(X_traindata, y_train)
