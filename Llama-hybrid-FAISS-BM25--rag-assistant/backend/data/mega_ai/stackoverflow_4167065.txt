[site]: stackoverflow
[post_id]: 4167065
[parent_id]: 4166642
[tags]: 
From this paragraph of the documentation : The memory algorithm is an object that is placed in the first bytes of a shared memory/memory mapped file segment. Layout of the memory segment : ____________ __________ ____________________________________________ | | | | | memory | reserved | The memory algorithm will return portions | | algorithm | | of the rest of the segment. | |____________|__________|____________________________________________| The library has an extra memory overhead sitting at the beginning of the segment, thus occupying a few bytes of your requested size. According to this post and this post , this exact number of additional bytes cannot be determined : You can't calculate it, because there are memory allocation bookeeping and fragmentation issues that change in runtime depending on your allocation/deallocation pattern. And shared memory is allocated by pages by the OS (4K on linux 64k on windows), so any allocation will be in practice allocated rounded to a page: managed_shared_memory segment(create_only, "name", 20); will waste the same memory as: managed_shared_memory segment(create_only, "name", 4096);
