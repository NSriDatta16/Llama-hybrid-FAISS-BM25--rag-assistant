[site]: stackoverflow
[post_id]: 5671286
[parent_id]: 
[tags]: 
What is "Enterprise JavaScript"?

For web applications I've developed I tend to build up a library of functions, and for some sites I end up encapsulating them all into a single object, so say FooBar and then all the things I end up doing are within that object. My understanding is that this is part-of-the-way to "Enterprise JavaScript" - encapsulating the functionality in ways that are logical, avoid polluting the JavaScript with lots of global variables. How do I distinguish good coding practice from what's considered "Enterprise JavaScript"? A simpler way to ask this might be in terms of scale -- as a web application or site grows it will include more JavaScript and organizing it gets harder, and there are patterns for doing this well and they're Enterprise? What are resources for learning about approaches to handling large libraries of functionality. Or are people just making it up, as in this joke site ? UPDATE: I am not kidding, really, though I wonder if what I'm seeking is more along the lines of Pro JavaScript Design Patterns . Perhaps "Enterprise" encompasses some of this?
