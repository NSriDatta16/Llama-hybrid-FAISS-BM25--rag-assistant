[site]: stackoverflow
[post_id]: 3784441
[parent_id]: 3762746
[tags]: 
The exploit was a classic piece of Javascript injection. Suppose you write a tweet with the following text: "http://www.guardian.co.uk/technology is the best!" When you view the Twitter web page, that becomes a link, like so: http://www.guardian.co.uk/technology is the best! The exploit attacked that link-making function. The raw text of the exploit tweet would read something like this: http://a.no/@";onmouseover=";$('textarea:first').val(this.innerHTML); $('.status-update-form').submit();"class="modal-overlay"/ Which Twitter didn't protect properly, probably because the @" character combination broke their [HTML] parser. That link would generate the following page source: This means that executable content (the onMouseOver="stuff" bit) has ended up in the page source code. Not knowing any better, the browser runs this code. Because it's running in the user's browser, it can do anything the user does; most variations used this power to re-post the content, which is why it spread like a virus. To encourage the user to activate the code by mousing over, they also formatted the block as black-on-black using CSS [Cascading Style Sheets, which determines the page layout]. Other versions were hacked around by users to have all sorts of other effects, such as porn site redirects, rainbow text in their tweets, and so forth. Some of them popped up dialog boxes designed to alarm the users, talking about accounts being disabled or passwords stolen (they weren't, in either case). Twitter fixed this not by blocking the string onMouseOver (which some dim-witted blogs were calling for) but by properly sanitising the input. The " marks in these tweets are now turned into &quot; â€“ the HTML-escaped form. Technically this is a second-order injection attack; the attack string is inserted into the database and handled correctly, but then the attack takes place as the string is read back out instead. It's not that complex an attack at all either - rather embarrassing for Twitter that they were caught out by this. Source: The Twitter hack: how it started and how it worked
