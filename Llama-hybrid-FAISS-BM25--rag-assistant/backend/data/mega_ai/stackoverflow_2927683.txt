[site]: stackoverflow
[post_id]: 2927683
[parent_id]: 2926267
[tags]: 
If you want to use random number generators in purely functional code but not have to explicitly pass around generator state then you can use state monad (or monad transformer) and hide the plumbing. State monads are still referentially transparent and it's safe & normal to escape a state monad. You could also use the ST monad if you want true local mutable state that is purely functional on the outside. Here is some useful code I wrote and use sometimes: rand :: (Random a, RandomGen g, MonadState g m) => a -> a -> m a rand lo hi = do r
