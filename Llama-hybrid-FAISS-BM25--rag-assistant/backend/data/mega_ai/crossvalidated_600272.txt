[site]: crossvalidated
[post_id]: 600272
[parent_id]: 402470
[tags]: 
I had the same issue, with the additional inconvenience of only wanting to apply the transforms to a subset of my features. My solution is essentially the same as Panagiotis Koromilas's, with these key changes: You can specify a subset of columns to transform The log is applied before StandardScaler(). StandardScaler() typically results in ~half your values being below 0, and it's not possible to take the log of a negative value. The inbuilt numpy function np.log1p is used. This allows you to easily pickle the model & pipeline with joblib.dump() and use it elsewhere without needing to make your custom log_transform() function available to the code importing the pickled model. import pandas as pd import numpy as np from sklearn.preprocessing import MinMaxScaler, FunctionTransformer from sklearn.compose import ColumnTransformer from sklearn.linear_model import LogisticRegression from sklearn.pipeline import Pipeline # these columns will have the scaling and transforms applied to them COLS_TO_TRANSFORM = ['col1', 'col2'] # set up the log transformer log_transform = ColumnTransformer( transformers=[ ('log', FunctionTransformer(np.log1p), COLS_TO_TRANSFORM), ], verbose_feature_names_out=False, # if True, "log_" will be prefixed to the column names that have been transformed remainder='passthrough' # this allows columns not being transformed to pass through unchanged ) # this ensures that the transform outputs a DataFrame, so that the column names are available for the next step. log_transform.set_output(transform='pandas') # set up whatever other scaling you want scale = ColumnTransformer( transformers=[ ('scale', StandardScaler(), COLS_TO_TRANSFORM), ], verbose_feature_names_out=False, remainder='passthrough' ) scale.set_output(transform='pandas') # put it all together model = Pipeline(steps=[ ("log", log_transform), ("scale", scale), ("regressor", LogisticRegression()]) PS: set_output() is a new addition in scikit-learn 1.2.0. Before this it was quite awkward to preserve column names when using ColumnTransformer. More detail
