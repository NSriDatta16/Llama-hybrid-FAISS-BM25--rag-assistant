[site]: stackoverflow
[post_id]: 1664627
[parent_id]: 
[tags]: 
Migrating Oracle DATE columns to TIMESTAMP with timezone

Bakground: I've got a legacy app I'm working on that uses DATE types for most time storage in the database. I'd like to try update some of these tables so that they can utilize time zones since this is causing problems with users in different areas from where the db is(see A below). This is for Oracle 10g. Quetions: 1) Can I migrate this "in place." That is can I convert like so DATE_COL = type:DATE => DATE_COL = type:TIMESTAMP ...or will I have to use a different column name? Keep in mind that data needs to be retained. If this can be done semi-easily in a migration script it will work for my purposes. 2) Will this type of conversion be backwards compatible? We likely have some scripts or reports that will hit this table that we may not know about. We can probably deal with it but I'd like to know what sort of hornet's nest I'm walking into. 3) What pitfalls should I be on the lookout for? Thanks, EDIT: (partly in response to Gary) I'm fine with a multi-step process. 1) move data to a new Timestamp column (caled TEMP) with some sort of conversion 2) drop old column (we'll call it MY_DATE) 3) create new timestamp column with the old date column name (MY_DATE) 4) move data to the MY_DATE column 5) drop TEMP column A Gary also wanted clarification on the specific timezone issue. I copied my answer from below to keep it more readable. Basically the data will be accessed from several different areas. We need to be able to convert to/from the local time zone as needed. We also have triggers that use sysdate further complicating things. timestamp with time zone alleviates a lot of this pain. Oh and thanks for the answers so far.
