[site]: stackoverflow
[post_id]: 1478126
[parent_id]: 1477901
[tags]: 
It sounds like in your organization there are change control fears as well as a lack of continuous integration practices that make scaling up development and disaster recovery more difficult. You need to convince your stakeholders that your developers should be working from a branch and that your production environment should have a scriptable way to deploy. If you require a proprietary installer (ISS etc) then make the deployment script work with the default install as well as a production tuned system. Your developers make changes to a branch and they can use continuous integration methodology to deploy that branch to a test / staging server. Then when your stakeholders accept the operation of the staging server you deploy the changes to the production server. If that deployment fails then any disaster recovery would also fail. If your disaster recovery fails then your source control technology has zero value to your organization. Disaster recovery needs to be part of your acceptance tests. This works even if three developers take turns on one workstation which also serves as the staging server. Each has their own user account and separate working directory, and the staging server would simply be a centralized directory.
