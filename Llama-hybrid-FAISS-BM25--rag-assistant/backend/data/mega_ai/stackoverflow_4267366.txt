[site]: stackoverflow
[post_id]: 4267366
[parent_id]: 
[tags]: 
Why is it that my CGRects are not properly registering when touched?

Here is a rather large chunk of code. The comments should be pretty helpful. What I'm trying to do is iterate through an NSArray of CGRects (wrapped in NSValues) and check if the place we're currently touching is inside one of those CGRects. When I run this code however (notice the NSLog statement in the for loop), all it ever does is say that the current loop value is 0. Furthermore, it does this when I touch places that are nowhere near where the CGRects should be. My comments explain how I created the CGRects. Thanks! #import "GameUI.h" @implementation GameUI // This is a scene with just 1 layer on it. +(id) scene { // 'scene' is an autorelease object. CCScene *scene = [CCScene node]; // 'layer' is an autorelease object. GameUI *layer = [GameUI node]; // add layer as a child to scene [scene addChild: layer]; // return the scene return scene; } // initialize your instance here -(id) init { if( (self=[super initWithColor:ccc4(255,255,255,255)] )) { // enable touches self.isTouchEnabled = YES; // unlock touching ingredients to start with touchLocked = NO; // attach nothing attachedSprite = -1; winSize = [CCDirector sharedDirector].winSize; // Build the UI // Counter CCSprite *counter = [CCSprite spriteWithFile:@"counter.png" rect:CGRectMake(0, 0, 480, 320)]; counter.position = ccp(winSize.width/2, winSize.height/2); [self addChild:counter]; // Let's hardcode some hitbox bounds. // I got these values by using Photoshop's info panel and simply using the rectangular marquee tool. // That gave me the origin point and then the two width+height values. breadTouchbox = CGRectMake(241, 12, 71, 61); onionTouchbox = CGRectMake(166, 11, 63, 53); hamTouchbox = CGRectMake(115, 60, 56, 58); cheeseTouchbox = CGRectMake(108, 128, 74, 74); tomatoTouchbox = CGRectMake(47, 162, 52, 47); lettuceTouchbox = CGRectMake(4, 78, 70, 77); ketchupTouchbox = CGRectMake(2, 166, 38, 69); mayoTouchbox = CGRectMake(6, 242, 31, 75); NSValue *breadTouchboxValue = [NSValue valueWithCGRect:breadTouchbox]; NSValue *onionTouchboxValue = [NSValue valueWithCGRect:onionTouchbox]; NSValue *hamTouchboxValue = [NSValue valueWithCGRect:hamTouchbox]; NSValue *cheeseTouchboxValue = [NSValue valueWithCGRect:cheeseTouchbox]; NSValue *tomatoTouchboxValue = [NSValue valueWithCGRect:tomatoTouchbox]; NSValue *lettuceTouchboxValue = [NSValue valueWithCGRect:lettuceTouchbox]; NSValue *ketchupTouchboxValue = [NSValue valueWithCGRect:ketchupTouchbox]; NSValue *mayoTouchboxValue = [NSValue valueWithCGRect:mayoTouchbox]; // Put them in the array touchboxArray = [[NSArray alloc] initWithObjects:breadTouchboxValue, onionTouchboxValue, hamTouchboxValue, cheeseTouchboxValue, tomatoTouchboxValue, lettuceTouchboxValue, ketchupTouchboxValue, mayoTouchboxValue, nil]; // Create the sprites we're going to drag around. Spawn them off screen somewhere. breadSprite = [CCSprite spriteWithFile:@"breadslice.png" rect:CGRectMake(0,0,-200,-200)]; onionSprite = [CCSprite spriteWithFile:@"onionslices.png" rect:CGRectMake(0,0,-200,-200)]; hamSprite = [CCSprite spriteWithFile:@"hamslice.png" rect:CGRectMake(0,0,-200,-200)]; cheeseSprite = [CCSprite spriteWithFile:@"cheeseslices.png" rect:CGRectMake(0,0,-200,-200)]; tomatoSprite = [CCSprite spriteWithFile:@"tomatoslices.png" rect:CGRectMake(0,0,-200,-200)]; lettuceSprite = [CCSprite spriteWithFile:@"lettuceslice.png" rect:CGRectMake(0,0,-200,-200)]; ketchupSprite = [CCSprite spriteWithFile:@"ketchupsplurge.png" rect:CGRectMake(0,0,-200,-200)]; mayoSprite = [CCSprite spriteWithFile:@"mayosplurge.png" rect:CGRectMake(0,0,-200,-200)]; // Make sure you add them to this layer. [self addChild:breadSprite]; [self addChild:onionSprite]; [self addChild:hamSprite]; [self addChild:cheeseSprite]; [self addChild:tomatoSprite]; [self addChild:lettuceSprite]; [self addChild:ketchupSprite]; [self addChild:mayoSprite]; // Put them in the array spriteArray = [[NSArray alloc] initWithObjects:breadSprite, onionSprite, hamSprite, cheeseSprite, tomatoSprite, lettuceSprite, ketchupSprite, mayoSprite, nil]; } return self; } - (void)ccTouchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { // Set the currently touched location to LOCATION. UITouch *myTouch = [touches anyObject]; CGPoint location = [myTouch locationInView:[myTouch view]]; location = [[CCDirector sharedDirector] convertToGL:location]; // NSLog(@"%@", NSStringFromCGPoint(location)); // Check for a touch in any of the touchboxes. If yes, break out of the loop so you preserve arrayCount's value. int arrayCount = 0; NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init]; for (int i = 0; i
