[site]: stackoverflow
[post_id]: 3150920
[parent_id]: 3150003
[tags]: 
Using an unqualified name for the groupId matching the artifactId (e.g. log4j ) is an old deprecated practice which is not recommended : it's bad at the file system level, it generates "repository mess", it makes artifacts harder to find when browsing a repository (even if most people use a search engine nowadays). The recommendation is to include your domain name in the groupId and I would certainly not repeat it in the artifactId (to my knowledge, Spring is NOT doing that - except maybe for OSGI artifacts?). Here is what I use: Parent (pom) groupId : org.companyname.projectname artifactId : root version : x.x.x eg : org.companyname.projectname:root-1.0.0.pom SubParent (pom) groupId : org.companyname.projectname artifactId : subcategory-parent version : x.x.x eg : org.companyname.projectname:subcategory-parent-1.0.0.pom Module (jar) groupId : org.companyname.projectname artifactId : modulename version : x.x.x eg : org.companyname.projectname:modulename-1.0.0.jar And I also use conventions for the element to have a clean overview during reactor builds. Here is an example on a pet project: $ mvn compile [INFO] Scanning for projects... [INFO] Reactor build order: [INFO] Personal Sandbox - Samples - Parent POM [INFO] Personal Sandbox - Samples - EJB3 and Cargo Sample [INFO] Personal Sandbox - Tools - Parent POM [INFO] Personal Sandbox - Tools - Shared Verification Resources [INFO] Personal Sandbox - Samples - EJB3 and Cargo Sample - Services [INFO] Personal Sandbox - Samples - EJB3 and Cargo Sample - Functests [INFO] Sandbox Externals POM This is heavily inspired by Vincent Massol's way to organize big builds like he did with XWiki or Cargo.
