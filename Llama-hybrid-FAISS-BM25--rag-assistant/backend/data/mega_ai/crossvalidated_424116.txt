[site]: crossvalidated
[post_id]: 424116
[parent_id]: 
[tags]: 
Cross Validation and preprocessing tokenizer in python

I have a text dataframe which looks like this: Class Text 8776 Wirtschaft Potente Investoren und das liebe Vieh: Ärzte s... 7810 Web Lokalverbot sei zwar diskriminierend, aber nic... 3658 Kultur In den 80ern lieferten sie kämpferische Gassen... 318 Etat Ebru Umar war nach Kritik an Präsident Erdogan... 3014 International Zahlreiche Menschen in Jaffa niedergestochen, ... the target is to classify the Class. I want to use svm from sklear you run a classification algorithm. Right now I am using a text.tokenizer to convert the strings into numeric features: def generatextrain(train_text, test_text, maxwords): max_words = maxwords tokenize = keras.preprocessing.text.Tokenizer(num_words=max_words, char_level=False) tokenize.fit_on_texts(train_text) # fit tokenizer to our training text data x_train = tokenize.texts_to_matrix(train_text) x_test = tokenize.texts_to_matrix(test_text) return x_train, x_test, maxwords as you can see I am only use the train set to fit the tokenizer. If I want to add PCA to it in a later step, and also implement a cross-validation technique as k-fold von python, what is the right sequence to do so? From my understanding it is forbidden to use test data in the training part, but how does the tokenizer and pca work then in k-fold?
