[site]: crossvalidated
[post_id]: 328980
[parent_id]: 328762
[tags]: 
Without knowing exact details about your architecture it is not possible to provide an exact explanation/calculation of what is going on, but roughly it can be justified as follows: Convolution networks are so successful because they manage to do a lot with very little parameters. The key is sharing those parameters within the network 1 . That means even if you have less parameters than in a LSTM network, they are used many times: the proportion of number of parameters to amount of computation is not equal in 3D convnet and an LSTM. CNN example: Let the input be of shape $(w,h,d)$, having a single channel. We use a convolution layer with $c$ filters of shape $(a,a,a)$, in total $p_\mathrm{CNN}=c(a^3 + 1)$ parameters (1 for bias). Note that the number of parameters does not grow with the input size. To evaluate this layer, we need to perform $w\cdot h\cdot d \cdot c (2a^3+1)$ operations ($a^3$ multiplications and $a^3+1$ additions per filter per spatial location). That means overall complexity of $\mathcal{O}(whdp_\mathrm{CNN})$. LSTM example: Let the input be of shape $(wh,d)$, having a single channel. We use a LSTM layer with $c$ units, in total $p_\mathrm{LSTM}=4c(wh+c+1)$ parameters (4 matrices of shape $(wh,c)$, 4 matrices of shape $(c,c)$ and $4c$ biases). Note that the number of parameters linearly depends on the input size. To evaluate this network on the whole sequence of length $d$, we need to perform $d$ matrix-vector multiplications with complexity $\mathcal{O}(whc)$ and $d$ matrix-vector multiplications with complexity $\mathcal{O}(c^2)$, overall it is $\mathcal{O}(dp_\mathrm{LSTM})$. You can see that if the number of parameters is the same for both networks, $p_\mathrm{CNN}=p_\mathrm{LSTM}$, a CNN needs $wh$-times more computations to evaluate the result. In your case $wh=1800$ and $\frac{p_\mathrm{LSTM}}{p_\mathrm{CNN}} = 2.5$, you can therefore expect roughly 720x longer runtime for the CNN. 1 Recurrent networks also share parameters, but only in the temporal dimension. Convnets share parameters in the spatial dimensions.
