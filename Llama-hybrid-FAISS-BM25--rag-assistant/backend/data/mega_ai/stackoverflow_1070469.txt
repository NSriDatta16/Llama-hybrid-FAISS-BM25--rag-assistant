[site]: stackoverflow
[post_id]: 1070469
[parent_id]: 25268
[tags]: 
For my last project, here's the entire C# SWIG configuration file: %module mdProject %{ #include "mdProject.h" %} I compiled it in SWIG with: swig -csharp -c++ -I../../Include mdProject.i This generated a Project.cxx which I compiled and linked directly into the 'main' DLL, so I didn't need a second C++ 'helper' DLL. SWIG also generated a bunch of C# files which I compiled into a .NET DLL. My other wrappers (Java, PHP, etc) do use a helper DLL. As @patrick mentioned, SWIG uses P/Invoke, so if you have a problem with that, you'll need to find another solution. If you use types that stray from the ordinary (voids, structures, etc), you will have to do some extra work to get it right, but for the average API using int's, char*'s etc, it's fine.
