[site]: crossvalidated
[post_id]: 340310
[parent_id]: 
[tags]: 
Fuzzy substring search within a sentence and scoring the results?

I have a scenario wherein I am expected to search a large array of sentences for a particular phrase and then display the results based on a descending order of score. My question is about suggestions on approaches for a robust scoring algorithm. I am not worried about the absolute value of the score as long as the scoring algorithm is consistent enough for me to do a relative comparison. Examples below: Example 1 sentence 1: autotrader is a medium sized company sentence 2: auto trader is a medium sized company query: Autotrader Expected scoring: Sentence 1 should have a higher score than Sentence 2 because a full match was found Example 2 sentence 1: Auto Trader is a very large company sentence 2: John is a trader of auto components query: Autotrader Expected scoring: Sentence 1 should have a higher score than Sentence 2 because a larger fraction of the query was found Example 3 sentence 1: Auto Trader is a very large company sentence 2: Trader Auto is not a company I am aware of query: Autotrader Expected scoring: Sentence 1 should have a higher score than Sentence 2 Example 4 sentence 1: J.P. Morgan is a large company sentence 2: Morgan Freeman is an American actor query: JP Morgan Expected scoring: Sentence 1 should have a higher score than Sentence 2 Example 5 sentence 1: ubs is a large financial company sentence 2: There are not many p ubs near my office query: UBS Expected scoring: Sentence 1 should have a higher score than Sentence 2 because the term ubs is found as a whole word Example 6 sentence 1: Morgan Stanley is a large financial company sentence 2: Morgan is a common surname whereas Stanley is a popular first name. query: Morgan Stanley Expected scoring: Sentence 1 should have a higher score than Sentence 2 because both the fragments in Morgan Stanley are found in close proximity. EDIT I wonder if creating a Lucene index out of the sentences and then letting Lucene do the search work.
