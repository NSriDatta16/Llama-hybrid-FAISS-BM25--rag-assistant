[site]: stackoverflow
[post_id]: 4615844
[parent_id]: 556814
[tags]: 
Sorry to drag this all up again. I wanted the UISearchBar to be shorter, and I'm using a UISearchBarController, but without actually wanting the index. This is because I have an overlay to the right: To do this, I fake a sectionIndex with one blank item, then hide it. Here's how I do that: - (void)hideTableIndex { for (UIView *view in [tableView subviews]) { if ([view isKindOfClass:NSClassFromString(@"UITableViewIndex")]) { view.hidden = YES; } } } - (NSArray *)sectionIndexTitlesForTableView:(UITableView *)aTableView { if (aTableView == self.searchDisplayController.searchResultsTableView) { return nil; } else { [self performSelector:@selector(hideTableIndex) withObject:nil afterDelay:0]; return [NSArray arrayWithObjects:@"", nil]; } } - (NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index { return 0; } This shortens the the UISearchBar and hides the index so it can't be tapped (a small section would otherwise hand to the left of the overlay that when tapped would scroll the UITableView to the top). Like this: Best of all, when you use the search, you still get the full width bar:
