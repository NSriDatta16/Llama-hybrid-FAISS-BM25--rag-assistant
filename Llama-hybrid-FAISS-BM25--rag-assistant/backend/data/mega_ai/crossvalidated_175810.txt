[site]: crossvalidated
[post_id]: 175810
[parent_id]: 49453
[tags]: 
This may or may not be useful to you, depending on what your needs are. Assuming that you're interested in similarity between clustering assignments: The Jaccard Similarity Coefficient or Jaccard Index can be used to calculate the similarity of two clustering assignments. Given the labelings L1 and L2 , Ben-Hur, Elisseeff, and Guyon (2002) have shown that the Jaccard index can be calculated using dot-products of an intermediate matrix. The code below leverages this to quickly calculate the Jaccard Index without having to store the intermediate matrices in memory. The code is written in C++, but can be loaded into R using the sourceCpp command. /** * The Jaccard Similarity Coefficient or Jaccard Index is used to compare the * similarity/diversity of sample sets. It is defined as the size of the * intersection of the sets divided by the size of the union of the sets. Here, * it is used to determine how similar to clustering assignments are. * * INPUTS: * L1: A list. Each element of the list is a number indicating the cluster * assignment of that number. * L2: The same as L1. Must be the same length as L1. * * RETURNS: * The Jaccard Similarity Index * * SIDE-EFFECTS: * None * * COMPLEXITY: * Time: O(K^2+n), where K = number of clusters * Space: O(K^2) * * SOURCES: * Asa Ben-Hur, Andre Elisseeff, and Isabelle Guyon (2001) A stability based * method for discovering structure in clustered data. Biocomputing 2002: pp. * 6-17. */ // [[Rcpp::export]] NumericVector JaccardIndex(const NumericVector L1, const NumericVector L2){ int n = L1.size(); int K = max(L1); int overlaps[K][K]; int cluster_sizes1[K], cluster_sizes2[K]; for(int i = 0; i
