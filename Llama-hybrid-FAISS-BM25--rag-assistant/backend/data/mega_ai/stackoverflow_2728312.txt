[site]: stackoverflow
[post_id]: 2728312
[parent_id]: 2724252
[tags]: 
Look at QMimeData and its documentation, it has a virtual function virtual QVariant retrieveData ( const QString & mimetype, QVariant::Type type ) const this means to do you drag to the outside you implement this functions accordingly class DeferredMimeData : public QMimeData { DeferredMimeData(QString downloadFilename) : m_filename(downloadFilename) virtual QVariant retrieveData (const QString & mimetype, QVariant::Type type) const { if (mimetype matches expected && type matches expected) { perform download with m_filename } } } The delayed encoding examples shows this principle. You will probably also have to override hasFormat and formats to provide the appropriate types, application/octet-stream probably being the one that might get you the most play, you will probably have to read up on how windows specifically handles drag and drop using mime types. I don't know how you will supply the file name under which the file is saved, but you will probably have to get into the windows side of things. Looking at the source of QWindowsMime might also help. There might me a multiple step process where you will get requests for text/uri-list data for the filenames and then application/octet-stream for the data. Hope this helps
