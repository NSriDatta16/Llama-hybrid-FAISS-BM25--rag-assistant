[site]: crossvalidated
[post_id]: 302510
[parent_id]: 302503
[tags]: 
This sounds like Outlier Detection to me. You should consider Unsupervised (Hierarchical Clustering ) and Semi-Supervised methods. For example, you could use One-class classification . Label all of your training as 'Class1' and see if the classifier assigns it to 'Class1' or 'Other'. Using Python and data with some kind of distance function , have a look at: http://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html http://scikit-learn.org/stable/auto_examples/svm/plot_oneclass.html If you want to use the technique you mentioned, here is a slightly different approach to get better results: Create One-vs-All classifiers. For each binary classifier, the class '1' is fitted against all the other classes '0' . Instances that never made it to class '1' for all classifiers can then be labeled as 'Other' . http://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html Yes, I like SVMs.
