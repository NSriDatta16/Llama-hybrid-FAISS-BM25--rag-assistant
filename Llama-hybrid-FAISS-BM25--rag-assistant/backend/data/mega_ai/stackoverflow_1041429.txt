[site]: stackoverflow
[post_id]: 1041429
[parent_id]: 1041199
[tags]: 
Totally not what you asked for, but it does work, could be used for strings with any number of quotes, and has the benefit of being more readable than your average regular expression (at the expense of way more code) class GetQuotedText { const STATE_OUTSIDE = 'STATE_OUTSIDE'; const STATE_INSIDE = 'STATE_INSIDE'; static private $input; static private $counter; static private $state; static private $results; static private $current; static private $full; static private $all; static private function setInput($string) { $this->input = $string; } static private function init($string) { self::$current = array(); self::$full = array(); self::$input = $string; self::$state = self::STATE_OUTSIDE; } static public function getStrings($string) { self::init($string); for(self::$counter=0;self::$counter 0) { self::$full[] = implode ('',self::$current); self::$current = array(); } } static private function action($char) { self::$current[] = $char; } } $input = 'm0.ttw.mydomain.tel. 60 IN TXT ".tkw" "1" "20090624-183342" "Some text here1"' . "\n" . 'm0.ttw.mydomain.tel. 60 IN TXT ".tkw" "1" "20090624-183341" "Some text here2"'; $strings = GetQuotedText::getStrings($input); print_r($strings);
