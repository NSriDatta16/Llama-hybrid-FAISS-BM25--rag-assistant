[site]: stackoverflow
[post_id]: 5550024
[parent_id]: 5549276
[tags]: 
The base foundation stuff would come first, to ensure that Delphi 64 can be used for what Delphi 32 can't be used: compiler correctness : first and foremost, no internal errors, no incorrect code-gen ability to compile to 64bit DLLs and stability of those stress the memory manager: with large objects, fragmented allocation, multi-threaded allocations, etc. multi-threading: is it stable? is it efficient? does it scale? that for core RTL functions and units, and not forgetting the reference-counted types. floating point: does the compiler deliver proper SSE? are the maths functions properly implemented and correct? what happens if you stress the SSE register set with complex expressions? And as a bonus, ability to accept 64bit object files from the usual C++ compilers.
