[site]: datascience
[post_id]: 117815
[parent_id]: 
[tags]: 
How to classify text and predict if it belongs to the group or not?

I am basically Python Postgres programmer and new to datas science and its tools. I have around 78 million records which contains information like this: CostCenter Description 110000032 Hiring of vehicles 110000032 Hired vehicles 110000032 Vehicles hired 110000032 Hiriing of vehicles 110000032 Pay bill 110000033 Hiring of vehicle CostCenter is pre-defined (Master data) and Description is user entered field and there is no uniformity in what is entered into description. What is required: I want to have a binary split of those, where Hiring of Vehicles (all like matches) - 110000032 are true and remaining all false. The false entries from the above would be 110000032 - Paybill (32 CostCenter is for Hiring of Vehicles) and 110000033 - Hiring of vehicle (33 is not for hiring of vehicle). What I have tried so far: Using RegEx is not useful because, I dont know the different patterns of free text (Description) entered by users. I have used FTS (Full Text Search) of Postgre and tokenized the Description field and get all like matches for HIRE and VEHICLE. What I am looking to do is, train a model so that based on the description, the system can display records whose CostCenter is not matching. What is the correct approach? Supervised Learning? Collobarative Filtering? NLTK NLP? Edited: I have around 3000 unique costcenters in 99 different combinations of the last 2 digits. Thanks
