[site]: datascience
[post_id]: 31936
[parent_id]: 
[tags]: 
Why do I get such a low on image classification task with neural networks?

Below is my r code which I used on this kaggle dataset . I'm not sure why the accuracy is so low, but I suspect that I encoded the pixel matrix incorrectly. I transformed each pixel matrix picture into itself as a row of 200*200 columns and then did that for each pixel matrix making the individual rows for the 14970 pictures in the dataset. I'm not sure if the neural network understands the data and since it is taking data batch after batch I wonder how it can make sense of it. A quick explanation and some suggested improvements to my code would be appreciated. library(png) library(colorspace) library(abind) library(reticulate) library(keras) setwd("~/E-books/Coding/Machine Learning with R/Neural Networks/four-shapes") # Here I create a list of links to retrieve each image files % layer_dense(units = 1000, activation = "relu", input_shape = c(200*200)) %>% layer_dense(units = 1000, activation = "relu") %>% layer_dense(units = 4, activation = "softmax") network %>% compile( optimizer = "rmsprop", loss = "categorical_crossentropy", metrics = c("accuracy") ) network %>% fit(trainPathArray, train_labels, epochs = 5, batch_size = 12smilie metrics % evaluate(testPathArray, test_labels)
