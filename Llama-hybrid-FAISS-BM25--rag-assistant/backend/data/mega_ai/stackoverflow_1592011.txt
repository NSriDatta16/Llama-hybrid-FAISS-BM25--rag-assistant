[site]: stackoverflow
[post_id]: 1592011
[parent_id]: 1591875
[tags]: 
Haven't used App Engine, but my feeling for the most popular python testing tools is unittest/doctest are the testing packages from the Python standard library. unittest is the xUnit for python. nose is a test runner/finder. It has many options, including --with-coverage , which uses coverage to give you code coverage reports. pylint is the most featureful lint-checker for python. Useful beyond a syntax checker since it advises on unused variables/functions, when methods should be functions, and more. pester (mutation testing) buildbot (continuous integration) You'll probably want to reference this (not quite complete) list of Python Testing Tools . For BDD, the field was thin last time I checked. Many of the true BDD tools were not usable with nose and/or too limiting in the syntax they required. You might have some luck with spec , which is a BDD-like nose plugin. Just found pyccuracy , which looks a lot like cucumber, but I haven't tried it. For what its worth, I now just use nosetests -v (the nose runner with --verbose), which will use the first line of the docstring in the test runner output. That is, given a test like: class TestFoo(unittest.TestCase): def testAnyNameHere(self): """ Foo should be bar""" foo = "bar" self.assertEqual(foo, 'bar') nosetests will give: $ nosetests -v Foo should be bar... ok ----------------------------- Ran 1 tests in 0.002s OK
