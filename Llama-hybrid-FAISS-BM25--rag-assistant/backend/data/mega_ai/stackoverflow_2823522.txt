[site]: stackoverflow
[post_id]: 2823522
[parent_id]: 
[tags]: 
hackage package dependencies and future-proof libraries

In the dependencies section of a cabal file: Build-Depends: base >= 3 && = 0.2.0 Should I be doing something like Build-Depends: base >= 3 && = 0.2.0 && (putting upper limits on versions of packages I depend on) or not? I'll use a real example: my "List" package on Hackage (List monad transformer and class) If I don't put the limit - my package could break by a change in "transformers" If I do put the limit - a user that uses "transformers" but is using a newer version of it will not be able to use lift and liftIO with ListT because it's only an instance of these classes of transformers-0.2.x I guess that applications should always put upper limits so that they never break, so this question is only about libraries: Shall I use the upper version limit on dependencies or not?
