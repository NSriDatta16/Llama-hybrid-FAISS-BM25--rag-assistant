[site]: crossvalidated
[post_id]: 326210
[parent_id]: 326171
[tags]: 
I would simply re-size the image and use the same neural network..see the example in https://keras.io/applications/#usage-examples-for-image-classification-models with elephant.jpg. It seems like your problem is actually object detection and not simply classification (a classification task typically means one object/ image). If it is object detection "Classification" in its naive sense does not really have a physical meaning. What does the classification probability of an image as being there mean if there are multiple objects present. This implies that you probably should be using a ROI method in the first place, and naive Resnet50 may not be meaningful in the first place. You can use region proposal based methods (note that even in region proposal based methods, you do in fact re-scale the region proposals to meet the input dimensions for the input image). Your intuitive idea of splitting the image into quadrants is actually on the right track :). It is a special case of YOLO (slide 83 of http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture11.pdf ). You dont actually split it into 4 quadrants, but consider overlapping chunkgs of size 255*255*3 which move over the image
