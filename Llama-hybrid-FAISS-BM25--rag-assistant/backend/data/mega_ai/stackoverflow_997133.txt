[site]: stackoverflow
[post_id]: 997133
[parent_id]: 997106
[tags]: 
Uh, no? You only have to do all 99,999 against the one you picked (rather than all n(n-1)/2 possible pairs), of course, but that's as low as it goes. Looking at your response to nsanders's answer , it is clear you are already on top of this part. But I've thought of a special case where computing the full set of comparisons might be a win. If: the list comes in slowly (say your getting them from some data acquisition system at a fixed, low rate) you don't know until the end which one you want to compare to you have plenty of storage you need the answer fast when you do pick one (and the naive approach isn't fast enough) Looks are faster than computing then you could pre-compute the as the data comes in and just lookup the results per pair at sort time. This might also be effective if you will end up doing many sorts...
