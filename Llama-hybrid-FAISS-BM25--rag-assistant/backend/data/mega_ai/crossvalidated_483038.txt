[site]: crossvalidated
[post_id]: 483038
[parent_id]: 
[tags]: 
Working with systems with Perfect Multicollinearity

I am working with a time-series dataset that is based on demand-supply dynamics with several variables. THe sample data for one time period is: > data # A tibble: 19 x 6 Pred_error_A Pred_error_B Pred_error_C Pred_error_D Pred_error_E Pred_error_Target 1 -0.45 1.72 -0.170 1.85 -0.01 -0.7 2 -0.45 1.72 -0.170 2.35 -0.01 -1.2 3 -0.45 1.92 -0.170 2.35 -0.01 -1 4 -0.0500 0.37 -0.12 1.65 -0.01 -1.5 5 0 -0.840 -0.12 0.950 -0.01 -1.7 6 0 -0.200 -0.12 1.35 -0.01 -1.5 7 0 -0.460 -0.12 1.35 -0.01 -1.8 8 0 -0.520 -0.12 1.05 -0.01 -1.5 9 0 -0.340 -0.12 1.05 -0.01 -1.4 10 0 -0.340 -0.12 1.35 -0.01 -1.7 11 0 -0.110 -0.12 1.05 -0.01 -1.2 12 0 -0.110 -0.12 0.850 -0.01 -1 13 0 0 -0.12 0.350 -0.01 -0.4 14 0 0 -0.12 -0.15 -0.01 0.100 15 0 0 -0.12 -0.350 -0.01 0.300 16 0 0 -0.02 0 -0.01 -0.1 17 0 0 0 0 0 0 18 0 0 0 0 0 0 19 0 0 0 0 0 0 I was working on a regression for each time period with data and wanted to find the relative importance of regressors in explaining the target variable ( Pred_error_A through E and dependent variable is Pred_error_Target ) using relaimpo package in R. However, I soon realized I can't use regression setting because of near to perfect collinearity and hence no relative importance values. Is there a way to go around this? Or, can I use any other method (instead of regression)? Any suggestions will be useful. The predictors are near to perfect and each one is important. I can't exclude any single one and I need the relative importance of all 5 regressors. I am also trying XGBoost as an alternative. However, I am not sure if it takes care of multicollinearity.
