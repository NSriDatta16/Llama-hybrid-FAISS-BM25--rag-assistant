[site]: crossvalidated
[post_id]: 145595
[parent_id]: 
[tags]: 
What are the options when statisticians who only know R need more computing speed

Speed isn't a concern for many statistics projects but sometimes it is, for example MCMC. Assume that hardware improvement is not an option (looking for relatively free solutions that produce orders of magnitude speed improvements over using an interpreted language). This post is inspired by the Highest voted question on Cross Validated that discusses using Python as statistics workbench. In this answer , csgillespie points out that one reason to use python is the ability to interface with C without having to write cumbersome C code when you need speed (for example when doing MCMC). However, packages do exist that allow you to interface with C and Fortran directly from R. Sometimes I need more speed. I do not know either C or Python or Fortran, so as a person who would like to learn a a tool that improves speed when I need it what are the pros and cons of using Python vs. calling C directly in R? Or pros and cons of other options. Preferably the answer should address the learning curve of learning the new tool in addition to its eventual usefulness after mastery. The reason for this question: Currently Cross Validated maintains a list of resources for statistical computing . However, That list contains absolutely nothing about how to interface from R or python with compiled languages that can improve speed. Note I feel this question is most appropriate for crossvalidated and not stackoverflow because of the audience (the answer is intended to be for statisticians). However, if you do think this question is off topic please comment so that it can either be edditted for improvement or moved to an appropriate location.
