[site]: stackoverflow
[post_id]: 3413925
[parent_id]: 
[tags]: 
How to return an array, without allocating it, if size is unknown to caller?

Consider following function: int get_something (int* array, int size); It's purpose is to fill the passed array[size] with data from external resource (queryes to resource are expensive). The question is what to do, if resource has more elements, than provided array can handle? What is the best approach? Edit: Current solution added: Our approach, at the moment is following: When user calls get_something() first time, with null argument we perform a full Query, allocate data in a cache (which is just a key-value storage) and return a number of items. When user calls get_something() next time, with properly initialized buffer, we return him data from cache and clear a cache entry. If user does not call get_something(), timeout occurs and cache for that item gets freed. If user calls get_something() too late, and data has been cleared, we generate error state, so user knows that he has to repeat the request.
