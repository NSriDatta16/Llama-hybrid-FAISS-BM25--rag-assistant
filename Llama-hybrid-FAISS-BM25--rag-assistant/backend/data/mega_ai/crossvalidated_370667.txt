[site]: crossvalidated
[post_id]: 370667
[parent_id]: 15818
[tags]: 
You don't describe what "NLP software" you're using, but your question seems to be around how to build a text-classification system. I build those very frequently and here are a few points that may help: A multinomial classifier provides "scores", whether 0, 1 or something between on multiple classes per observation. It is possible to represent a multinomial classifier as multiple binomial classifiers, with each binomial classifier providing the score for each "category". Sounds like you need 3 multinomial classifiers for each of your "buckets" of categories, each consisting of 31, 11 and 5 binomial classifiers, respectively. From a practical/coding standpoint, this can be accomplished by supplying your text features (most likely some summary of word/sentence vectors) and binary encoded labels to a naive bayes or SVM model, with the binary encodings translating the category you want each model to predict to 1 and the other categories to 0. You should be able to accomplish this with pandas, gensim (word2vec), and scikit. If your question also encompasses how to expose your model to some broader application for the purpose of automated classifications, you can roll your own model management/deployment tools or you can look at something like Watson Machine Learning, that has a pre-built API and GUI tools for various tasks that are part of the model lifecycle.
