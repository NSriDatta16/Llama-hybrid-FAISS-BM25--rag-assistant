[site]: stackoverflow
[post_id]: 4259779
[parent_id]: 4259649
[tags]: 
I use controller classes that do not inherit from UIViewController . The inability to nest actual view controllers arbitrarily in your UI hierarchy is an unfortunate unfairness in the SDK, but I have found that even having faux-controllers of real complexity are reasonable to manage. I just plumb through the critical messages from the real root controller as necessary, and structure the code in a similar way as if it were a real view controller. This is basically Apple's recommendation, also. (Can't find the doc reference at the moment.) If you have LOTS of sub-screen manageable views like this, you could probably build a nicely flexible MyViewController class that inherits from NSObject, and then a MyBaseViewController that inherits from UIViewController that knows how to spawn MyViewControllers and sets up all the messaging appropriately for you. (I haven't needed this level of abstraction yet myself.) Using sub-screen-sized UIWindows is not a standard solution, and I'd be wary of it. Similarly, don't try to just bash ahead and use UIViewControllers anyways. You'll find that if you do so, they'll behave sometimes and misbehave sometimes and you'll waste a lot of time sorting out that fragile interaction.
