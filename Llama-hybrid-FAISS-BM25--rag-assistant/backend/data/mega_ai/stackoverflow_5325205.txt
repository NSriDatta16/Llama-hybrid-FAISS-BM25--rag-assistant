[site]: stackoverflow
[post_id]: 5325205
[parent_id]: 
[tags]: 
How come there is a difference between Chrome and Firefox here?

I am using a recursive function based around for(.. in ..) and hasOwnProperty to clone objects, which works fine in IE and FF... but not Chrome. When iterating over members of an object using for(... in ...) Firefox and Chrome gives different results for hasOwnProperty if the object is a DOM object. Typing the following into the Chrome console vs. the console in Firebug(FF) gives different results: var t = document.createElement("table"); var tr = t.insertRow(-1); for(var p in tr) if(tr.hasOwnProperty(p)) console.log(p); Firefox output: constructor addEventListener Chrome output: clientLeft scrollHeight firstElementChild offsetParent ch offsetWidth isContentEditable hidden previousElementSibling parentElement localName children ownerDocument nodeValue lastElementChild rowIndex offsetLeft tagName className prefix innerHTML previousSibling namespaceURI id childElementCount innerText scrollLeft clientHeight align textContent nextSibling scrollWidth offsetHeight chOff clientWidth nodeName style lang scrollTop offsetTop childNodes baseURI nextElementSibling vAlign sectionRowIndex classList title firstChild attributes dataset outerText cells parentNode clientTop tabIndex contentEditable outerHTML dir lastChild bgColor nodeType spellcheck draggable All the extra properties flagged as true for hasOwnProeperty is causing 'infinite/enough to crash' recusion in my code. Is there a way to determine if a proeperty is a built in DOM object property? Or some other solution..
