[site]: stackoverflow
[post_id]: 5293943
[parent_id]: 
[tags]: 
C#: Object overshoots target

I am having trouble diagnosing the following issue. There are 2 objects, a ring and a target. The ring represents a ship and the target represents the destination. When the user clicks anywhere in the window, the target is placed where you click and the ship then moves to that location. The problem that I am having is the further the ship has to move, the more velocity that ship will achieve, thus overshooting its target. The further the ship has to move translates to a slower deceleration. I am not sure where this is happening. I have provided the code below: using System; using System.Collections.Generic; using System.Linq; using System.Text; using Microsoft.Xna.Framework; namespace ArtificialDumb { class PhysicsObject { public Vector2 Position; public Vector2 OldPosition; public float Mass; public Vector2 Acceleration; public float Drag = 0.01f; public PhysicsObject(float x, float y) { Position = OldPosition = new Vector2(x, y); } public PhysicsObject(Vector2 pos) { Position = OldPosition = pos; } public virtual void Update() { Vector2 velocity = Position - OldPosition; velocity *= (1 - Drag); OldPosition = Position; Position += velocity; Position += Acceleration; } } } using System; using System.Collections.Generic; using System.Linq; using System.Text; using Microsoft.Xna.Framework; namespace ArtificialDumb { class Ship : PhysicsObject { public float MaxThrust; public Vector2 Target; public Ship(Vector2 pos) : base(pos) { MaxThrust = 50f; Mass = 100; } public override void Update() { Vector2 diff = Target - Position; Vector2 Velocity = (Position - OldPosition); // Dark Magic. Do Not Touch. // This is the equation for projectile velocity. -ASR // Edited for correct float value -ASR // people keep touching! - AgH Vector2 thrust = diff - (Velocity * Velocity.Length() * 0.75f); thrust.Normalize(); // todo: Account for when we don't need to use maximum thrusters thrust *= MaxThrust; Acceleration = thrust / Mass; base.Update(); } } }
