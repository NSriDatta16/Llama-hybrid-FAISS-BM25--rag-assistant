[site]: crossvalidated
[post_id]: 466214
[parent_id]: 326142
[tags]: 
Turns out: yes , "data-likelihood-weighted regression" is a thing (although it is not called like this). There is actually a field of research that deals particularly with this question and has developed practically feasible solutions. It is called Covariate Shift Adaptation and has been popularized by a series of highly cited papers by Sugiyama et al., starting around 2007 (I believe). There is also a whole book devoted to this subject by Sugiyama / Kawanabe from 2012, called "Machine Learning in Non-Stationary Environments". I will try to give a very brief summary of the main idea. Suppose your training data are drawn from a distribution $p_{\text{train}}(x)$ , but you would like the model to perform well on data drawn from another distribution $p_{\text{target}}(x)$ . This is what's called "covariate shift". Then, instead of minimizing the expected loss over the training distribution $$ \theta^* = \arg \min_\theta E[\ell(x, \theta)]_{p_{\text{train}}} = \arg \min_\theta \frac{1}{N}\sum_{i=1}^N \ell(x_i, \theta)$$ as one would usually do, one minimizes the expected loss over the target distribution: $$ \theta^* = \arg \min_\theta E[\ell(x, \theta)]_{p_{\text{target}}} \\ = \arg \min_\theta E\left[\frac{p_{\text{target}}(x)}{p_{\text{train}}(x)}\ell(x, \theta)\right]_{p_{\text{train}}} \\ = \arg \min_\theta \frac{1}{N}\sum_{i=1}^N \underbrace{\frac{p_{\text{target}}(x_i)}{p_{\text{train}}(x_i)}}_{=w_i} \ell(x_i, \theta)$$ In practice, this amounts to simply weighting individual samples by their importance $w_i$ . The key to practically implementing this is an efficient method for estimating the importance, which is generally nontrivial. This is one of the main topic of papers on this subject, and many methods can be found in the literature (keyword "Direct importance estimation"). How can we now apply this to the particular question stated here, where one would like to learn a model that is not fitted to the training distribution, but instead works well over some target data space? Well, in this case design the target density $p_{\text{target}}$ to correspond to the region where the model should work well (choose e.g. the uniform distribution over some plausible region), estimate the training density $p_{\text{train}}$ from the data, and perform importance-weighted regression as explained above.
