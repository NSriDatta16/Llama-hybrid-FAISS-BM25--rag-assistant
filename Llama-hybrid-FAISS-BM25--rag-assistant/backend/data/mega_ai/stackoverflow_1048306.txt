[site]: stackoverflow
[post_id]: 1048306
[parent_id]: 
[tags]: 
Callback unmanaged code from managed C#

Bit of a history lesson here. I'm working on a legacy C++/MFC application and am trying to start a incremental modernization by pushing components written in C# (WinForms and later WPF). I'm stucking using .Net/1.1 and VS/2003 for many reasons which are impossible to resolve in the near future. Currently, as a proof of concept, something like this works: #pragma push_macro("new") #undef new WinFormA::Form1* myform; myform = __gc new WinFormA::Form1(); myform->ShowDialog(); #pragma pop_macro("new") The problem I'm having is this - I need the unmanaged C++/MFC code to pass a callback pointer into the managed C# WinForm code so that I can capture user interactions and have them processed by the application. I've looked at some articles such as this MSDN article but it doesn't work in VS/2003 (the compiler doesn't like the delegate syntax). Are there any other options? I don't think I can use DLLImport since I need to interact with the specific application instance not a flat API. Thanks!
