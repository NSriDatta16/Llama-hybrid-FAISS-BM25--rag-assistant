[site]: stackoverflow
[post_id]: 878230
[parent_id]: 877888
[tags]: 
The easiest way to interoperate between C++ and C# is by using managed C++, or C++/CLI as it is called. In VisualStudio, create a new C++ project of type "CLR Class Library". There is some new syntax for the parts that you want to make available to C#, but you can use regular C++ as usual. In this example, I'm using std::vector just to show that you can use standard types - however, in an actual application, I'd prefer to use the .NET types where possible (in this case a System::Collections::Generic::List ). #pragma unmanaged #include #pragma managed public ref class CppClass { public: CppClass() : vectorOfInts_(new std::vector ) {} // This is a finalizer, run when GC collects the managed object !CppClass() { delete vectorOfInts_; } void Add(int n) { vectorOfInts_->push_back(n); } private: std::vector * vectorOfInts_; }; EDIT: Changed the class to hold the vector by pointer instead of by value.
