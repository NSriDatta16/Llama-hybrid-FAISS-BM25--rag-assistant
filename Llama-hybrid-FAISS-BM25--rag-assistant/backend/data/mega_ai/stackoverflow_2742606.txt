[site]: stackoverflow
[post_id]: 2742606
[parent_id]: 2742241
[tags]: 
Instead of forcing you to remember to catch all of the fun exceptions everywhere, I would encourage writing a wrapper for some of the spring calls. So instead of being forced to remember try { SpringThing.doThatOneMethod(); catch (SpringConnectionException sce) { /*handle it*/ } catch (SpringProxyException spe) { /*handle it*/ } catch (SpringRuntimeException sre) { /*handle it*/ } , you could just always invoke your own SpringExceptionsWrapper.doThatOneMethod() . If you really wanted to, you could have the method signatures for your wrapper functions list out some checked exceptions that you might wrap stuff in. I wouldn't encourage it since it forces you to correctly handle it everywhere.
