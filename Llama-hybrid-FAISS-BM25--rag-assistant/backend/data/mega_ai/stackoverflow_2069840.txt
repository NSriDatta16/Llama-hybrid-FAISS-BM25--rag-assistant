[site]: stackoverflow
[post_id]: 2069840
[parent_id]: 2068088
[tags]: 
When you override a function in the derived class, only that function in the derived class is visible to the user of that class. The base class version becomes hidden. Therefore, your pChild pointer calling doIt(int x) will fail since you are using a derived class pointer to call the base class function. The pParent pointer calling doIt(int x) will work since you are using a base class pointer to call the base class function. Even though you have a child object being pointed to by a parent pointer (upcasted), the class type here is determined by the declaration of the pointer which is a CParent. To be able to call that base class function using the derived class pointer, you can: Qualify the base class name in the function call, as in the following: pChild->CParent::doIt(123); Use a using directive to bring the function name from the base class into the derived class, as seen in the previous posts.
