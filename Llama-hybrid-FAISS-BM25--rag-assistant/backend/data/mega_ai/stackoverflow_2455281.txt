[site]: stackoverflow
[post_id]: 2455281
[parent_id]: 
[tags]: 
LINQ query code for complex merging of data

I've posted this before, but I worded it poorly. I'm trying again with a more well thought out structure. I have the following code and I am trying to figure out the shorter linq expression to do it 'inline'. Please examine the "Run()" method near the bottom. I am attempting to understand how to join two dictionaries together based on a matching identifier in one of the objects - so that I can use the query in this sort of syntax. var selected = from a in items.List() // etc. etc. select a; so that I can define my structure in code like ... TModelViewModel = new TModelViewModel { TDictionary = from a in items... etc. etc... } instead of going through a bunch of foreach loops, extra object declarations, etc. This is my class structure. The Run() method is what I am trying to simplify. I basically need to do this conversion inline in a couple of places, and I wanted to simplify it a great deal so that I can define it more 'cleanly'. class TModel { public Guid Id { get; set; } } class TModels : List { } class TValue { } class TStorage { public Dictionary Items { get; set; } } class TArranged { public Dictionary Items { get; set; } } static class Repository { static public TItem Single (Predicate expression) { return default(TItem); // access logic. } } class Sample { public void Run() { TStorage tStorage = new TStorage(); // access tStorage logic here. Dictionary d = new Dictionary (); foreach (KeyValuePair kv in tStorage.Items) { d.Add(Repository.Single (m => m.Id == kv.Key),kv.Value); } } }
