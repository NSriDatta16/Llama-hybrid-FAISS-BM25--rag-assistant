[site]: stackoverflow
[post_id]: 4109066
[parent_id]: 4108970
[tags]: 
Why don't you implement several transformer functions and pass them to Lists.transform() call? public class IntegerTransformer extends Function () { public Integer apply(String from) { return Integer.valueOf(from); } } So, you could write: Lists.transform(stringValues, new IntegerTransformer()); If you want to handle types automatically, you can add a transformer factory or a map: static Map > transformers = new HashMap (); static { transformers.put(Integer.class, new IntegerTransformer()); transformers.put(Integer.class, new LongTransformer()); ... } public static Function get(Class c) { Function transformer = transformers.get(c); if(transformer==null) { throw new RuntimeException(String.format("Type %s is not supported (yet)", clazz.getName())); } return transformer; }
