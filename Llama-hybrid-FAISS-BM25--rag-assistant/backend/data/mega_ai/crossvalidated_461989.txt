[site]: crossvalidated
[post_id]: 461989
[parent_id]: 
[tags]: 
Recursive convolution of a PDF with itself

I was playing around with some simulations and I am trying to understand and produce an analytical solution for the behaviour I see. I generated $512$ sets of data, each set containing $10000$ data points. All data sets were drawn from a Rayleigh distribution with the same shape parameter $\sigma$ . I label each set $X_{i}$ , which has elements $X_{i} = \{x_{j},...,x_{M}\}$ , where $M = 10000$ . I then take the average of the data sets as $$\bar{X}_{N} = \frac{1}{N} \sum_{i}^{N} X_{i} $$ to be explicit, not the average of the $X_{i}$ , but the average of the sets. The resulting average still contains $M = 10000$ points. Plotting the averaged data sets gives the histograms, as follows: What we can clearly see is that as more and more data sets are included in the average, the more normally distributed the resultant data set becomes. This is to be expected, I think, because of the central limit theorem. Now to my question: I would like to show this mathematically. I know that the sum of random variables is described by the convolution from the parent distribution of those variables. I imagine the result to be a two parameter distribution, $F(\sigma, N)$ , $\sigma$ being the same shape parameter of the Rayleigh distribution. And $N$ the number of averages, or convolution iterations as per $$F(x)_{N} = \int_{-\infty}^{+\infty} F_{N - 1}(X) f(x - X) \ dX$$ where $f(x)$ is the original distribution of interest (in my case the Rayeligh). Is it possible to get such a solution? I have been able to calculate the first and iterations of the convolution. For the $N = 1$ case of the above convolution integral. $$\int_{-\infty}^{+\infty} R(X) R(x - X) \ dX = \\ \frac{1}{4 \sigma^{3}}\exp\left(\frac{-x^{2}}{2\sigma^{2}}\right) \left( 2 x \sigma + \exp\left(\frac{x^{2}}{4\sigma^{2}}\right) \sqrt{\pi} \left( x^{2} - 2 \sigma^{2} \right) \rm{erf}(x/2 \sigma) \right)$$ Where $R(x)$ is the Rayleigh distribution. Plotting the above gives a reasonable result if I compare it to my data:
