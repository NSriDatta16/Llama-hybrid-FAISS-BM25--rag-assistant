[site]: stackoverflow
[post_id]: 3146110
[parent_id]: 3145871
[tags]: 
Since you don't have control over the remote side, and you want to do it in the code, I'd suggest doing very simple approximation. I assume a long living program/connection. One-shot uploads would be too skewed by ARP, DNS lookups, socket buffering, TCP slow start, etc. etc. Have two counters - length of the outstanding queue in bytes (OB), and number of bytes sent (SB): increment OB by number of bytes to be sent every time you enqueue a chunk for upload, decrement OB and increment SB by the number returned from send(2) (modulo -1 cases), on a timer sample both OB and SB - either store them, log them, or compute running average, compute outstanding bytes a second/minute/whatever, same for sent bytes. Network stack does buffering and TCP does retransmission and flow control, but that doesn't really matter. These two counters will tell you the rate your app produces data with, and the rate it is able to push it to the network. It's not the method to find out the real link speed, but a way to keep useful indicators about how good the app is doing. If data production rate is bellow the network output rate - everything is fine. If it's the other way around and the network cannot keep up with the app - there's a problem - you need either faster network, slower app, or different design. For one-time experiments just take periodic snapshots of netstat -sp tcp output (or whatever that is on Windows) and calculate the send-rate manually. Hope this helps.
