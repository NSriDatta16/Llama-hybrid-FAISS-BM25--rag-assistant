[site]: datascience
[post_id]: 62810
[parent_id]: 
[tags]: 
Fully-Configured Deep Learning Virtual Machines in Python (VirtualBox or VMware)

Fully-Configured environment setup for Deep Learning Virtual Machines in Python (VirtualBox or VMware) Often when we start working on any new technology, the most common challenge that we face is "How can I not waste time setting up my environment but directly working on the technology?" If you arenâ€™t a Linux user, it can be really hard to figure out how to get a system fully configured with all the required machine learning libraries and tools like TensorFlow, Theano, Keras, OpenCV, and dlib. A lot of people get stuck while installing everything and give up before ever getting to play around with any code. Earlier I used to work on Fully-Configured Deep Learning VM in Python VMware shared by Adam G with the below configuration. Link for VMware Image Link for VitualBox Image The virtual machine image has Ubuntu Linux Desktop 16.04 LTS 64-bit pre-installed with the following machine learning tools: Python 3.5 OpenCV 3.2 with Python 3 bindings dlib 19.4 with Python 3 bindings TensorFlow 1.0 for Python 3 Keras 2.0 for Python 3 Theano face_recognition for Python 3 (for playing around with face recognition) PyCharm Community Edition already set up and ready to go for all these libraries Convenient code examples ready to run, right on the desktop! Even the webcam is preconfigured to work inside the Linux VM for OpenCV / face_recognition examples (as long as you set up your webcam to be accessible in the VMware settings). Currently looking for the latest version of Ubuntu with updated Deep Learning packages. I've been searching around the Internet for a while but I have not been able to find Fully pre-configured latest VM with the updated versions. I would really appreciate if anyone here can share his/her method if he/she had used a Fully-Configured Deep Learning VM in Python (VirtualBox or VMware)
