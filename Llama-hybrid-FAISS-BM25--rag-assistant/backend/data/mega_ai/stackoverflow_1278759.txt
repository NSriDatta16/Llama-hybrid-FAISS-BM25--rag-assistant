[site]: stackoverflow
[post_id]: 1278759
[parent_id]: 1278128
[tags]: 
My suggestion: define a distance function that takes two players stats and return a distance value. Now that you have a distance between the two (that corresponds to the similarity between them) you can use the K-means algorithm to find clusters of similar players. For each cluster you can take a number of values that can help you calculate the so called 'market price' (like the average or median value). Here's a very simple example of how you could compute the distance function between two players: float distance(Player player1, Player player2){ float distance = 0.0; distance += abs(player1.strength - player2.strength) / strengthRange; distance += abs(player1.maxStrength - player2.maxStrength) / maxStrength; distance += abs(player1.motivation - player2.motivation) / motivationRange; distance += abs(player1.age - player2.age) / ageRange; return distance; } Now that you have the distance function you can apply the k-means algorithm: Assign each player randomly to a cluster. Now compute the centroid of each cluster. In your case the centroid coordinates will be (strength, maxStrength, motivation, age). To compute the centroid strength coordinate, for example, just average the strengths for the all players in the cluster. Now assign each player to the nearest centroid. Note that in this step some players may have its cluster changed. Repeat steps 2 and 3 until you have convergence or, in other words, until no player have its cluster changed in step 3. Now that you have the clusters, you can calculate the average price fore similar players.
