[site]: stackoverflow
[post_id]: 3391489
[parent_id]: 
[tags]: 
Saving CGContextRef

I have a drawing app in which I would like to create an undo method. The drawing takes place inside the TouchesMoved: method. I am trying to create a CGContextRef and push it to the stack OR save it in a context property that can be restored later but am not having any luck. Any advice would be great. Here is what I have ... UIImageView *drawingSurface; CGContextRef undoContext; - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { UIGraphicsBeginImageContext(self.view.frame.size); CGContextRef context = UIGraphicsGetCurrentContext(); [drawingSurface.image drawInRect:CGRectMake(0, 0, drawingSurface.image.size.width, drawingSurface.image.size.height)]; UIGraphicsPushContext(context); // also tried but cant figure how to restore it undoContext = context; UIGraphicsEndImageContext(); } Then I have a method triggered by my undo button ... - (IBAction)restoreUndoImage { UIGraphicsBeginImageContext(self.view.frame.size); UIGraphicsPopContext(); drawingSurface.image = UIGraphicsGetImageFromCurrentImageContext(); UIGraphicsEndImageContext(); } When I run this, I believe my drawingSurface is being assigned nil because it just erases everything in the image. My guess is I can't use pop and push this way. But I can't seem to figure out how to just save the context and then push it back onto the drawingSurface. Hmmmm. Any help would be ... well ... helpfull. Thanks in advance - And, just for reference, here is what I am doing to draw to the screen, which is working great. This is inside my TouchesMoved: UIGraphicsBeginImageContext(self.view.frame.size); CGContextRef context = UIGraphicsGetCurrentContext(); [drawingSurface.image drawInRect:CGRectMake(0, 0, drawingSurface.image.size.width, drawingSurface.image.size.height)]; CGContextSetLineCap(context, kCGLineCapRound); //kCGLineCapSquare, kCGLineCapButt, kCGLineCapRound CGContextSetLineWidth(context, self.brush.size); // for size CGContextSetStrokeColorWithColor (context,[currentColor CGColor]); CGContextBeginPath(context); CGContextMoveToPoint(context, lastPoint.x, lastPoint.y); CGContextAddLineToPoint(context, currentPoint.x, currentPoint.y); CGContextStrokePath(context); drawingSurface.image = UIGraphicsGetImageFromCurrentImageContext(); UIGraphicsEndImageContext();
