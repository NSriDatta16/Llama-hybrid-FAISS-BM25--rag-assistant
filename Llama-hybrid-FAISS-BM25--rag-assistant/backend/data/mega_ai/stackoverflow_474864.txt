[site]: stackoverflow
[post_id]: 474864
[parent_id]: 474806
[tags]: 
Adding null-ability to a column does add more storage overhead. A null bitmap is created for every eight nullable columns. For instance, one through eight nullable colums adds one additional byte to the row, nine through sixteen adds another byte for a total of two additional bytes per row, and so on. Checking for NULL versus an empty string ('') is different since you would need to check COLUMN IS NULL OR COLUMN = ''. The comparison of COLUMN = NULL will not work even if COLUMN is NULL since NULL does not equal NULL, hence the IS NULL operator. Also, concatenating or aggregating NULLs with other data will cause major problems since anything concatenated with NULL will result in NULL. Aggregations will disregard NULL and throw a warning, but this might not be the behavior you want with averages. My advice is to stick will non-null columns and use an empty string as a placeholder if you want to minimize storage as much as possible AND you don't want the added headache of checking for NULLs in your code. I'm not suggesting this applies to every case and an argument could be made for nullability, but this approach keeps it simple.
