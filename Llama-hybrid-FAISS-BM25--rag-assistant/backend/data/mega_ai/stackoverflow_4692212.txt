[site]: stackoverflow
[post_id]: 4692212
[parent_id]: 4692065
[tags]: 
Basically you can't delete stuff from the beginning of a file, so you will have to write to a new file. I think the pythonic way looks like this: # get a iterator over the lines in the file: with open("input.txt", 'rt') as lines: # while the line is not empty drop it for line in lines: if not line.strip(): break # now lines is at the point after the first paragraph # so write out everything from here with open("output.txt", 'wt') as out: out.writelines(lines) Here are some simpler versions of this, without with for older Python versions: lines = open("input.txt", 'rt') for line in lines: if not line.strip(): break open("output.txt", 'wt').writelines(lines) and a very straight forward version that simply splits the file at the empty line: # first, read everything from the old file text = open("input.txt", 'rt').read() # split it at the first empty line ("\n\n") first, rest = text.split('\n\n',1) # make a new file and write the rest open("output.txt", 'wt').write(rest) Note that this can be pretty fragile, for example windows often uses \r\n as a single linebreak, so a empty line would be \r\n\r\n instead. But often you know the format of the file uses one kind of linebreaks only, so this could be fine.
