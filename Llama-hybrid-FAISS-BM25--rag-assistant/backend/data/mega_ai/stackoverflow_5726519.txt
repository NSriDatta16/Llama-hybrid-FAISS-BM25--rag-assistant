[site]: stackoverflow
[post_id]: 5726519
[parent_id]: 
[tags]: 
Creating and Storing Log File on device in Android

I am planning to automate the testing of an application by creating a log to store some results of execution of the app and latter on parse it using a piece of python code and plot a graph. The application is a WiFi fingerprinter i.e it collects info such as mac id, rss(recieved signal strength and rank(normalized rss) about the wifi devices in the surrounding environment. So to test this application I would have to take it to the location and record the results(as of now manually). So logcat wouldn't serve the purpose. Automation requires 1. Storing the log in the device 2. Access to the log file in the system through usb Format of the Log file: Snapshot: 1 Fingerprint: 1, Rank: 0.23424, Boolean: true Fingerprint: 2, Rank: 0.42344, Boolean: false Fingerprint: 3, Rank: 0.23425, Boolean: true Snapshot: 2 Fingerprint: 1, Rank: 0.75654, Boolean: false Fingerprint: 2, Rank: 0.23456, Boolean: true Fingerprint: 3, Rank: 0.89423, Boolean: true ................ Now I know there are basically 3 approaches for persistent storage(SharedPrefs wouldn't suit this scenario anyway). I tried Internal Storage, but even after setting the mode of the file as MODE_WORLD_READABLE it was impossible to read the file using Device File Explorer in Eclipse . I am still wary of using external storage for storing the log. Any tutorial on how to write to a file in usb of the device will definitely help. I thought of structuring the data to be stored so as to use SQLite for storage. But this establishing many unnecessary relations(foreign and domestic) between data and make it complex. If there is no way around, then here be dragons . Basically I want to write to a file(easier I suppose) in the device and latter on read it in my system by connecting to it via usb. Any help on how to do it would be much appreciated.
