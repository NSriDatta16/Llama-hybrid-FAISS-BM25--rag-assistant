[site]: stackoverflow
[post_id]: 672447
[parent_id]: 672412
[tags]: 
The result of ClassName.IntProperty is just an integer value. As soon as it's executed and the result is returned, there's no trace of it having come from IntProperty . If you're using .NET 3.5 you can use an expression tree instead, usually created via a lambda expression: Expression > exp = () => ClassName.IntProperty; You can then compile and execute the expression and separately find out what it's doing (retrieving IntProperty in this case). I'm not really sure whether this is suitable for what you want to do though. If you do work out how to save the property name in the database, then GetProperty is the way to go on the retrieval front. Perhaps if you could give more context in the question in terms of how you want to use this, we could help more. You've shown just an expression - if you could show it in terms of where you'd be using it, that would be great. EDIT: You've expanded the property, but not how it's being called. Do you need to call it directly, rather than just fetching the list of properties using Type.GetProperties and storing the list of property names in the database? Again, if you could show the code which calls the property, and how you want it to interact with the database, we may be able to make more progress.
