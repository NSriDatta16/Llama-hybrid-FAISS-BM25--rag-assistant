[site]: crossvalidated
[post_id]: 489950
[parent_id]: 489933
[tags]: 
MLP, CNN, or LSTM are different types of neural network architectures designed to crunch your data. The simplest one is the MLP that takes as input a vector, which usely is tabular data (i-e a row in your csv). CNN and LSTM are more complex architectures that were designed to use the structure of some data. You could very well train an MLP on images of the same size, but you would miss the translation invariant ( a cat on the top left corner is just as well a cat as a cat in the bottom right corner ) that is naturally present in image classification problems and it seems a bit too brutal to compare all the pixels together at once (convolutions process small chunks of data at once and can be interpreted as pattern detectors). LSTM on the other hand try to account for the sequential nature of some data, time series or text for example. I wouldn't use a CNN or a LSTM on tabular data as they are not designed to improve performance on tabular data, yet being designed to perform certain tasks doesn't mean they won't perform well on others. Moreover stating "that for tabular data the random forest or gradient boost techniques are better than Deep Learning" is quite a bold claim. With machine learning, testing always gets the final word and even though it is true that neural networks don't always perform as well as other techniques such as XGboost nothing guarantees that this will apply to your dataset.
