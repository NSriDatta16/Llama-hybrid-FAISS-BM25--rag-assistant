[site]: crossvalidated
[post_id]: 92259
[parent_id]: 74351
[tags]: 
Segmentation vs. Clustering In control system engineering, the ideas of controllability and measurability are, through the Cayley-Hamilton theorem, two faces of the same phenomena. One implies the other. Segmentation and clustering are two faces of the same coin, too. The line of equal probability of cluster membership is the segmentation boundary. This is a deep topic and discussions about convergence, nature of space, and appropriate basis functions are beyond the scope of this answer. Retaining Temporal In formation If I were doing this, then I would augment each temporal membership with cluster membership. I would use both cluster index and cluster Mahalanobis distance. So if you took one measurement at each instant, then clustered the data, your augmented time-series would have three values at each instant - cluster index, Mahalanobis distance (useful), and the measurement itself. Algorithms I have not done much with time-series as a formalism, so this is all hands-on. When I have temporal data and I want to cluster, I just use the time-measurement as another measurement. This means that if you had one measurement per instant, then you have a 2d walk , of sorts, where time is strictly increasing. You can throw away the time and cluster in measurement only. (Here is a link to lots of appropriate approaches: AutonLab ) You can look at both. You can transform to lagged coordinates, or time-difference coordinates and think in terms of velocities, accelerations or such. The classic drunkards walk is 2d-random, and is a diffusion process. Being able to contrive your data as such a walk opens up those analysis tools for use. ( link , link , link , link ) Diffusion is studied in many disciplines including genetics, mathematics, materials science, epidemiology, and computer science. There is no perfect " pepsi " - no silver bullet that solves all problems with ease. There are many good "pepsis", tools in the toolbox for which some will outperform others in particular areas. K-means, Gaussian Mixtures, Radial Basis Function Neural Networks, Support Vector Machines, even Q-learning lookups - these might have use for you. Without a clearer description of the nature of the data, of what you are looking to cluster, it is harder to say which tool to use. If I don't know whether it is a nail or a bolt - I can't say "try to use a wrench" or "try to use a hammer". I hope that you find a tool that works for you. Best of Luck.
