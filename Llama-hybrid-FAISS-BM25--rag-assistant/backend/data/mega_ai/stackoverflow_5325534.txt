[site]: stackoverflow
[post_id]: 5325534
[parent_id]: 
[tags]: 
Delegate methods of UITableView are not responding

I am quite new to IOS development, so forgive me if this problem turns out to be trivial. The following is the case: I want to be able to call the didSelectRowAtIndexPath method to trigger some action when a user interacts with a table view cell. However, it seems that this method is never called for some reason. I am fairly certain that my code is valid. I set the delegate and dataSource properties and I conform to the UITableViewDelegate and UITableViewDataSource protocols. If someone could shed some light on this, I would be very grateful. My code: #import #import @class Employee; #define kTelephoneRowIndex 0 #define kEmailRowIndex 1 #define kLeftLabelTag 4096 #define kRightLabelTag 4097 @interface PersonnelDetailsViewController : UIViewController { UITableView *contactDetailsTable; Employee *employee; } @property (nonatomic, retain) UITableView *contactDetailsTable; @property (nonatomic, retain) Employee *employee; + (NSString *)resourceFilePath:(NSString *)fileName ofType:(NSString *)type; @end and my .m file #import #import "PersonnelDetailsViewController.h" #import "Employee.h" @implementation PersonnelDetailsViewController @synthesize contactDetailsTable, employee; + (NSString *)resourceFilePath:(NSString *)fileName ofType:(NSString *)type { return [[NSBundle mainBundle] pathForResource:fileName ofType:type]; } - (void)loadView { [super loadView]; // Create the header view for the table view UIView *headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 110)]; // Set the image, using rounded corners UIImage *employeeImage; if ([employee.image length] == 0) employeeImage = [UIImage imageNamed:@"logoL1nda70by80"]; else employeeImage = [UIImage imageNamed:employee.image]; UIImageView *employeeImageView = [[UIImageView alloc] initWithImage:employeeImage]; employeeImageView.frame = CGRectMake(10, 15, 70, 80); employeeImageView.layer.masksToBounds = YES; employeeImageView.layer.cornerRadius = 5.0; employeeImageView.layer.borderWidth = 1.0; employeeImageView.layer.borderColor = [[UIColor grayColor] CGColor]; [headerView addSubview:employeeImageView]; UILabel *nameView = [[UILabel alloc] initWithFrame:CGRectMake(95, 35, 180, 20)]; nameView.text = employee.name; nameView.font = [UIFont boldSystemFontOfSize:18]; [headerView addSubview:nameView]; UILabel *functionView = [[UILabel alloc] initWithFrame:CGRectMake(95, 55, 140, 16)]; functionView.text = employee.function; functionView.textColor = [UIColor grayColor]; functionView.font = [UIFont systemFontOfSize:14]; [headerView addSubview:functionView]; [employeeImage release]; [employeeImageView release]; [nameView release]; [functionView release]; contactDetailsTable = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, 320, 370) style: UITableViewStyleGrouped]; contactDetailsTable.backgroundColor = [UIColor clearColor]; contactDetailsTable.tableHeaderView = headerView; [headerView release]; contactDetailsTable.delegate = self; contactDetailsTable.dataSource = self; [self.view addSubview:contactDetailsTable]; } - (void)viewDidUnload { self.contactDetailsTable = nil; self.employee = nil; [super viewDidUnload]; } - (void)viewWillAppear:(BOOL)animated { [contactDetailsTable reloadData]; } - (void)dealloc { [contactDetailsTable release]; [employee release]; [super dealloc]; } #pragma mark - #pragma mark Table View Data Source Methods - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section { return 2; } - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView { return 1;did } - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath { static NSString *contactDetailIdentifier = @"contactDetailIdentifier"; UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:contactDetailIdentifier]; if (cell == nil) { cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:contactDetailIdentifier] autorelease]; UILabel *leftLabel = [[UITextField alloc] initWithFrame:CGRectMake(5, 12, 70, 25)]; leftLabel.textAlignment = UITextAlignmentRight; leftLabel.textColor = [UIColor grayColor]; leftLabel.tag = kLeftLabelTag; leftLabel.userInteractionEnabled = NO; [cell.contentView addSubview:leftLabel]; [leftLabel release]; UILabel *rightLabel = [[UITextField alloc] initWithFrame:CGRectMake(90, 12, 160, 25)]; rightLabel.font = [UIFont boldSystemFontOfSize:16]; rightLabel.tag = kRightLabelTag; rightLabel.userInteractionEnabled = NO; [cell.contentView addSubview:rightLabel]; [rightLabel release]; } NSUInteger row = [indexPath row]; UILabel *leftLabel = (UILabel *)[cell viewWithTag:kLeftLabelTag]; UILabel *rightLabel = (UILabel *)[cell viewWithTag:kRightLabelTag]; switch (row) { case kTelephoneRowIndex: leftLabel.text = @"telefoon"; rightLabel.text = employee.phone; break; case kEmailRowIndex: leftLabel.text = @"e-mail"; rightLabel.text = employee.email; break; default: break; } return cell; } #pragma mark - #pragma mark Table View Delegate Methods - (NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath { return nil; } - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath { NSUInteger row = indexPath.row; if (row == 1) { MFMailComposeViewController *mailController = [[MFMailComposeViewController alloc] init]; [mailController setToRecipients:[NSArray arrayWithObject:employee.email]]; [mailController.navigationBar setTintColor:[UIColor blackColor]]; [self presentModalViewController:mailController animated:YES]; mailController.mailComposeDelegate = self; [mailController release]; } NSLog(@"Row selected is: %d", row); } #pragma mark - #pragma mark MFMailCompose View Delegate Methods - (void)mailComposeController:(MFMailComposeViewController *)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError *)error { [self dismissModalViewControllerAnimated:YES]; } @end
