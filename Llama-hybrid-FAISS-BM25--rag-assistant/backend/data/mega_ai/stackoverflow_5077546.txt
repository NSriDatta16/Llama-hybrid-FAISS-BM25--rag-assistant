[site]: stackoverflow
[post_id]: 5077546
[parent_id]: 1377482
[tags]: 
- (void)parseXMLFileAtURL:(NSString *)URL { arrFilm = [[NSMutableArray alloc] init]; NSURL *url = [NSURL URLWithString:URL]; parser = [[NSXMLParser alloc] initWithContentsOfURL:url]; [parser setDelegate:self]; [parser setShouldProcessNamespaces:NO]; [parser setShouldReportNamespacePrefixes:NO]; [parser setShouldResolveExternalEntities:NO]; [parser parse]; } - (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError { NSString * errorString = [NSString stringWithFormat:@"Unable to download story feed from web site (Error code %i )", [parseError code]]; NSLog(@"error parsing XML: %@", errorString); UIAlertView * errorAlert = [[UIAlertView alloc] initWithTitle:@"Error loading content" message:errorString delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil]; [errorAlert show]; } - (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName attributes:(NSDictionary *)attributeDict { if([elementName isEqualToString:@"item"]){ currentFilm = [Film alloc]; currentNodeContent =[[NSMutableString alloc] init]; } } - (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName { if([elementName isEqualToString:@"title"]){ currentFilm.content = currentNodeContent; } if([elementName isEqualToString:@"link"]){ currentFilm.Link = currentNodeContent; } if([elementName isEqualToString:@"description"]){ currentFilm.Description = currentNodeContent; } if([elementName isEqualToString:@"item"]){ [arrFilm addObject:currentFilm]; [currentFilm release]; currentFilm = nil; [currentNodeContent release]; currentNodeContent = nil; } } - (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string { currentNodeContent = [string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]]; } - (void)parserDidEndDocument:(NSXMLParser *)parser { [activityIndicator stopAnimating]; [activityIndicator removeFromSuperview]; NSLog(@"all done!"); NSLog(@"stories array has %d items", [arrFilm count]); [objtableView reloadData]; } - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation { // Return YES for supported orientations. return (interfaceOrientation == UIInterfaceOrientationPortrait); } #pragma mark - #pragma mark Table view data source // Customize the number of sections in the table view. - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView { return 1; } // Customize the number of rows in the table view. - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section { //NSMutableArray *arr=[xmlcont arrFilm]; return[arrFilm count]; } // Customize the appearance of table view cells. - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath { static NSString *CellIdentifier = @"Cell"; UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier]; if (cell == nil) { cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier] autorelease]; //NSMutableArray *cont = [xmlcont arrFilm]; Film *current = [arrFilm objectAtIndex:indexPath.row]; cell.detailTextLabel.font = [UIFont systemFontOfSize:10.0]; cell.textLabel.font = [UIFont systemFontOfSize:12.0]; cell.textLabel.text = current.content; cell.detailTextLabel.text = current.Link; } return cell; }
