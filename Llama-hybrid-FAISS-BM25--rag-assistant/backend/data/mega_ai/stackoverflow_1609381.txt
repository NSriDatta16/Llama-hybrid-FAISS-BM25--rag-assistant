[site]: stackoverflow
[post_id]: 1609381
[parent_id]: 1609254
[tags]: 
That's a very interesting question because starting right has a lot of benefits (modularization, low-coupling...). Anyway, this is how I would start: 1) put everything into the trunk: http://svn/application/trunk/application 2) if you can, start early to split the code into modules http://svn/application/trunk/application1 module1 module2 3) if a module is stable, move it upstream into its own repository: http://svn/module1/trunk 4) finally, when you have several stable modules and applications, you could end up with http://svn/application1/trunk http://svn/application2/trunk http://svn/module1/trunk http://svn/module2/trunk each application/module having their own release cycle. Alternatively, you can take a look at what the Spring Framework is doing (very nice organization if you ask me) http://svn/application1/trunk http://svn/application2/trunk http://svn/framework/trunk/module1 http://svn/framework/trunk/module2 I would advise against splitting the code into trunk/branches for each module, at least at the beginning of the project: as soon as you start branching (and not working on the trunk), you cannot work with the HEADS of other modules' trunk anymore: you either have to branch all your projects at the same time or work with specific versions (1.0 and not SNAPSHOT). I don't think I'm very clear but let me know if I have to explain it differently.
