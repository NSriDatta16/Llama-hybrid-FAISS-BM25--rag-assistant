[site]: stackoverflow
[post_id]: 1519913
[parent_id]: 1517179
[tags]: 
It seems that if you call 'SetStyle(ControlStyles.UserPaint, true)' the standard OnPaint method implemented for ProgressBar could not be invoked (using base.OnPaint(e) does not work at all). The strangest thing is that even if you actually create a UserControl, and try to draw draw some text upon the progress bar... it doesn't seem to work too... Of course you may place a Label on top of it... but I suppose it is not actually what you wanted to achieve. Ok, it seems that I have managed to solve this problem. It is although a little complicated. First you need to create a transparent Label control. Code below: public class TransparentLabel : System.Windows.Forms.Label { public TransparentLabel() { this.SetStyle(ControlStyles.Opaque, true); this.SetStyle(ControlStyles.OptimizedDoubleBuffer, false); } protected override CreateParams CreateParams { get { CreateParams cp = base.CreateParams; cp.ExStyle |= 0x20; return cp; } } } Second thing is to create UserControl, place a ProgressBar on it (Dock=Fill) - this will be the control that we will use instead of standard ProgressBar. Code: public partial class UserControl2 : UserControl { public UserControl2() { InitializeComponent(); } protected override void OnPaint(PaintEventArgs e) { this.progressBar1.SendToBack(); this.transparentLabel1.BringToFront(); this.transparentLabel1.Text = this.progressBar1.Value.ToString(); this.transparentLabel1.Invalidate(); } public int Value { get { return this.progressBar1.Value; } set { this.progressBar1.Value = value; } } } The strange thing with ProgressBar is that it 'overdraws' the controls that are being placed upon it, so it is needed to send progressbar to back, and bring the label control to front. I haven't found more elegant solution at the moment. This works, the label is being displayed on the progressbar, the background of the label control is transparent, so I think it looks like you wanted it to look :) I may share my sample code if you wish... Oh, btw. this strange behaviour of ProgressBar control that I have mentioned, is responsible for that it is not possible to use Graphics object to draw anything on a control that derives from ProgressBar. The text (or whatever you draw using Graphics object) is actually being drawn but... behind the ProgressBar control (if you take a closer look, you may see this user drawn things flickering when the Value of the ProgressBar changes and it need to repaint itself).
