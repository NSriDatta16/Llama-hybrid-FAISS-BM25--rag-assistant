[site]: stackoverflow
[post_id]: 5099378
[parent_id]: 5099135
[tags]: 
There are some differences between the two approaches but two factors that I can think of will reduce the difference between them: the target of the binding must ultimately take into account all the property change events all along the path using either approach the binding path evaluation is just one part of the much larger binding subsystem This is probably similar to to the differences between re-evaluating property paths in a programming language like C#. Using a temporary variable might help performance and it might not. As a result, I would suggest organizing both XAML and C# with the goals of readability and maintainability instead of performance, at least in this respect. You will find repeating the base data context tedious if you have to do it too often and it will make the XAML look cluttered. That's a good situation to use the properties indirectly through a new data context.
