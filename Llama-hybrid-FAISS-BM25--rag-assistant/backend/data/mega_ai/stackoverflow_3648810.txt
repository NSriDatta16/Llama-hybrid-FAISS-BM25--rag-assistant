[site]: stackoverflow
[post_id]: 3648810
[parent_id]: 3648446
[tags]: 
The way you described it, there is a race condition. -- The user can mark the post v when it is already in the process of being deleted. And the user's request will be ignored. Lots of ways to change this depending on your goals: 1) Change from Post.find(:all, :conditions => ['status = ?', 'd']).each do |p| p.destroy end to Post.find(:all, :conditions => ['status = ?', 'd']).each do |p| p.reload p.destroy if p.status == 'd' end This will minimize the window of time between the status being checked and the post deleted. 2) Change the display of the posts to only show the posts if the status is not "d." This will effectively speedup the deletion since others will have much less time to mark a to-be-deleted post as "v" 3) To give people a longer period to change their minds, only run the batch job once a day, late at night. Once a post is marked as d (to-be-deleted), show the post in a special way to warn users that the post is about to be deleted. This gives them max time to undo the delete request. 4) Never actually destroy the data. (DBMS storage is cheap.) When a post is marked for deletion, just change a flag and don't show it again. This enables users to "undelete" the post whenever they want to--no deadlines to worry about, nor any race conditions.
