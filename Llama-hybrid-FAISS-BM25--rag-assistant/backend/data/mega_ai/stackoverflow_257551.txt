[site]: stackoverflow
[post_id]: 257551
[parent_id]: 
[tags]: 
How to unit test complex methods

I have a method that, given an angle for North and an angle for a bearing, returns a compass point value from 8 possible values (North, NorthEast, East, etc.). I want to create a unit test that gives decent coverage of this method, providing different values for North and Bearing to ensure I have adequate coverage to give me confidence that my method is working. My original attempt generated all possible whole number values for North from -360 to 360 and tested each Bearing value from -360 to 360. However, my test code ended up being another implementation of the code I was testing. This left me wondering what the best test would be for this such that my test code isn't just going to contain the same errors that my production code might. My current solution is to spend time writing an XML file with data points and expected results, which I can read in during the test and use to validate the method but this seems exceedingly time consuming. I don't want to write a file that contains the same range of values that my original test contained (that would be a lot of XML) but I do want to include enough to adequately test the method. How do I test a method without just reimplementing the method? How do I achieve adequate coverage to have confidence in the method I am testing without having to have test points for all possible inputs and results? Obviously, don't dwell too much on my specific example as this applies to many situations where there are complex calculations and ranges of data to be tested. NOTE: I am using Visual Studio and C#, but I believe this question is language-agnostic.
