[site]: stackoverflow
[post_id]: 1058546
[parent_id]: 1058497
[tags]: 
There are several other stack overflow questions that touch on this, though I don't think any summarize the problem so clearly. Here are a few: How do I implement the Post/Redirect/Get pattern in asp.net WebForms? Response.Redirect with POST instead of Get? Both HTTP GET with request body and Can an HTTP GET legally contain content? approach the issue, and the discussions are worth reading. How do I maintain ModelState errors when using RedirectToAction? Most of the convenient solutions are session-based or have more serious drawbacks (such as embedding the message in the querystring). If you cannot guarantee that you'll have sessions, another (quite costly) method is to redirect to different views depending on the outcome of the form submission. For example, you might redirect to EditWidgetView , EditWidgetSaveSuccessfulView , or EditWidgetSaveErrorView (or perhaps you just don't redirect on errors). In some languages and frameworks, this is impractical to the point of making you give up on showing confirmation / error messages at all, but in others it may be worth it.
