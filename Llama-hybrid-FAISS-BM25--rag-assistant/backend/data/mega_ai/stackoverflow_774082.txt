[site]: stackoverflow
[post_id]: 774082
[parent_id]: 774033
[tags]: 
This is happening because the plugin binds the event handlers on page load, and you are then adding dynamic content to the page after the fact. The easiest solution would be to move whatever code you have to instatiate the DomWindow plugin into a function and call it once on page load and again whenever a new link is added. If it starts double binding the already existing links, you'd then have to give the dynamic links a different class and instatiate the second time around for that class. EDIT : There seems to be some misunderstanding here, so I'll explain further: The jQuery live feature (which you are using for .deleteThis ) was designed to fix the problem that you are having. You probably already know this and hence you are using it. The above paragraph was because I believe what you are saying is that the DomWindow edit link you are returning is not opening the DomWindow as you might expect. This is because DomWindow does not use live internally to bind the events. So when you initially instatiate DomWindow on page load, the links get bound, but the new ones don't. If you're willing to edit the source code of the plugin you could directly fix this by simply using live , but it is easier (although not as "clean") to just move the code to a function and call it whenever you're adding more content to the page.
