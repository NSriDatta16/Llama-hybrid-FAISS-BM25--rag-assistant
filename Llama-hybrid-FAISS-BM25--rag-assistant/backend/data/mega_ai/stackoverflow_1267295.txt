[site]: stackoverflow
[post_id]: 1267295
[parent_id]: 1267175
[tags]: 
I would argue that you shouldn't go significantly out of your way to accommodate for non-JS users for the following reasons: All Modern Browsers Support JS This is a snapshot of browser usage today: http://www.w3schools.com/browsers/browsers_stats.asp Even the oldest common browser, IE6, supports basic JavaScript and AJAX. If you decide not to integrate certain features b/c of a JS dependence, this proves that you are essentially doing it for people who started with JavaScript enabled and explicitly chose to disable it. I think these people should expect for some features, and perhaps even entire sites, not to work as a consequence. Few People Willingly Disable JS Building on my point above, average web users don't know or don't care that JS can be disabled in browsers. It's largely a tech savvy crowd who knows how to do this (myself included), and as tech savvy users we should know when to turn it back on as well. Cost of Support In light of the above, consider that choosing to accomodate users who have primarily willingly disabled JS comes with a very real cost. If you are managing a large project with heavy UI requirements, you can easily burn a lot of developer hours accommodating for what is a very small user preference. Check your budget. If it is going to take 2 devs working 40 extra hours each on the project to accomplish this feat, you are easily going to burn a few thousand dollars on what is essentially a non-issue for the vast majority of your users. How about using that time and investment to further buff up your core competency? Precedence I may very well be wrong on this, but I think it would be difficult to find major media or social sites that don't rely on JavaScript for some portion of their functionality to work. If major businesses that rely on the operation and accessibility of their site to stay in business aren't doing it, there's a good chance it's because it isn't needed. CAVEATS: Know your market. Continue to build XHTML/CSS that is semantic (preferably by using the RDFa W3C recommendation). Still strive to make your sites accessible to the visually impaired. Don't believe everything you read. ;) DISCLAIMER: My argument above is largely dependent on how you define "graceful degradation." If you mean all the links still work, that's one thing, but if you mean all the links still work and so does the wombats game, that's another. I'm not trying to argue for making your site so JS dependent that non-JS users can't access any portion of it. I am trying to make an argument for the acceptability of certain features, even some core features, being reliant on JS.
