[site]: stackoverflow
[post_id]: 4711607
[parent_id]: 4711488
[tags]: 
I think the problem is due to the way that Vim treats a function. From the documentation for [[ : *[[* [[ [count] sections backward or to the previous '{' in the first column. |exclusive| Note that |exclusive-linewise| often applies. Unless a section is somehow defined specifically for python files somewhere (I'm not convinced this is possible as they're supposed to be two-letter nroff sections), this will assume that there should be an open-brace in the first column, which isn't relevant for python files. I'd suggest asking on the Vim mailing list to see if there are any plugins or work-arounds for this. Alternatively, you could define a mapping like this: nmap gd :let varname = '\ \>' ?\ / =varname This could be done more elegantly with a function, but this was just a quick hack that should work. It maps gd to a function that sets the variable 'varname' to hold the word the cursor is on, searches backward for def and then searches forward for the variable: :let varname = " Variable setting '\ " Ctrl-R, Ctrl-W: pull in the word under the cursor \>' " Word boundary and string end " Enter - finish this command ? " Search backwards for... \ " def but not undefined etc (using word boundaries) " Enter - Perform search / " Now search forward = " Pull in something from an expression varname " The expression is 'varname', so pull in the contents of varname " Enter - perform search
