[site]: stackoverflow
[post_id]: 173333
[parent_id]: 173272
[tags]: 
Compared with Java: The "using" statement (try/finally is rarely explicit in C#) (C# 1) Delegates as a first class concept (C# 1) Properties and events as first class concepts (C# 1) User-defined value types (C# 1) Operator overloading (use with care!) (C# 1) Iterator blocks (C# 2) Generics without type erasure (C# 2) Anonymous methods (C# 2) Partial types (good for code generation) (C# 2) Object and collection initializers (C# 3) Lambda expressions (C# 3) Extension methods (C# 3) Expression trees (C# 3) Query expressions (aka query comprehensions) (C# 3) Anonymous types (mostly used in query expessions) (C# 3) They're the things I miss from C# when I write in Java, anyway. (That's not an exhaustive list of differences, of course.) Which ones are most important to you is subjective, of course. From a simple "getting things done" point of view the using statement is probably the single biggest pragmatic gain, even though it only builds a try/finally block for you. EDIT: For quick examples of the C# 2 and 3 features, you might want to look at my Bluffer's Guide to C# 2 and the equivalent for C# 3 .
