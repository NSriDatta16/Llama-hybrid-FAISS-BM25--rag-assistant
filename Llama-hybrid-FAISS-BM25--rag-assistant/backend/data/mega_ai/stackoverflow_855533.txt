[site]: stackoverflow
[post_id]: 855533
[parent_id]: 853321
[tags]: 
One major gotcha to keep in mind is testing. Testing a swing app with junit is mostly straight-forward, but in order to get that level of coverage on a gwt app you'll need to widen your arsenal. Straight junit - This is suitable for model classes/utility that don't reference any of the gwt runtime. Just write and run your tests as normal junit, just make sure gwt doesn't try to compile your test code into your module. You can't always factor your classes to get this kind of coverage, but when you can its great and fast. GWTTestCase / junit - This is a special TestCase subclass (junit3-style) that will bootstrap some gwt runtime for the test run. In my experience, it too difficult to get good coverage and is too slow to be useful. Read this for more on the subject. Selenium - This will get you coverage in-browser (and is personally my favorite approach). If you use java selenium-rc and combine it with jetty to serve up your app-under-test, you can even mock out rpc calls to fully test your ui. You also have the ability to run your tests in all the major browsers.
