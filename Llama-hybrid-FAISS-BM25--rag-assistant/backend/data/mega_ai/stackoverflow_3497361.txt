[site]: stackoverflow
[post_id]: 3497361
[parent_id]: 3497341
[tags]: 
Why not use a mocking framework like Moq or RhinoMocks. They allow you to dynamically implement interfaces without the hastle of creating a proxy directly. With Moq you could write: var mock = new Mock (); // mock the interface mock.Setup(foo => foo.Name).Returns("Hello World"); // setup a property Aside from that, you would have to do some complicated work to get what you want. As far as I know, you cannot add method or properties to an existing class at runtime. You could return an instance of a new object that dynamically inherits from the type passed in. Castle definitely allows this, but the code necessary is not especially elegant, or simple.
