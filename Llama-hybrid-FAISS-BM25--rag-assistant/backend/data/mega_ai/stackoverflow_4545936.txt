[site]: stackoverflow
[post_id]: 4545936
[parent_id]: 4545878
[tags]: 
One elegant way is putting all your files which should only be accessed via include outside the web directory . Say your web directory is /foo/www/, make an include directory /foo/includes and set this in your include_path: $root = '/foo'; $webroot = $root.'/www'; // in case you need it on day $lib = $root.'/includes'; // this add your library at the end of the current include_path set_include_path(get_include_path() . PATH_SEPARATOR . $lib); Then nobody will be able to access your libraries directly. There's a lot of other things you could do (test a global variable is set, use only classes in libraries, etc) but this one is the most secure one. Every file which is not in your DocumentRoot cannot be accessed via an url,. But that does not mean PHP cannot get access to this file (check as well your open_basedir configuration if you have it not empty, to allow your include dir in it). The only file you really need in your web directory is what we call the bootstrap (index.php), with a nice rewrite rule or a nice url managment you can limit all your requests on the application to this file, this will be a good starting point for security.
