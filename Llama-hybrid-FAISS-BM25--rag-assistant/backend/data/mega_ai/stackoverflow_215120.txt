[site]: stackoverflow
[post_id]: 215120
[parent_id]: 215074
[tags]: 
Good question. This is not specific to Swing, but a philosophical question about the difference between a model and a view. In general, is converting objects into text the job of the model or the view? My purist head says that actually you want a hierarchy of views - one to convert object model to text, and one to display the text. You might even want more than two - for instance, object-to-text, text-to-document-structure, document-structure-to-HTML, and then CSS to present to the user. However, pragmatism says this may get too hard to remember and maintain. So in your circumstance I would suggest: think about how likely it is you'll ever want to extract non-text data from the model. If it is not very likely, then put the equivalent of convertValueToText in the model. Otherwise, allow the component to either use a renderer, if it is given one, or else take the object value and convert it to text internally. This allows maximum flexibility and probably makes things feel most natural to the users of the API. I believe this is the JTable model though I haven't used Swing for a long time.
