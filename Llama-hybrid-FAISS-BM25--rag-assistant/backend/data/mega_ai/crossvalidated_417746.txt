[site]: crossvalidated
[post_id]: 417746
[parent_id]: 
[tags]: 
Using k-means clustering to train radial basis neural network for highly imbalanced dataset

I am trying to find prototype neurons for my radial basis neural network. My dataset has 30 attributes (of which 28 of them are the result of a single PCA) and 300.000 observations. It is a binary classification problem. After splitting my dataset into train and test set, I further split my train set into class1 and class0 observations. Then, I am using k-means clustering to find the position of centroids. To check the optimal cluster number I am using a silhouette score (I choose the number of clusters at which silhouette score is maximum). The code I use to find the clusters is: kmeans_class1= KMeans(n_clusters=number_cluster_where_silhouette_score_is_max_for_class0, random_state=0).fit(X_class1) class1_centers=kmeans_class1.cluster_centers_ kmeans_class0= KMeans(n_clusters=number_cluster_where_silhouette_score_is_max_for_class1, random_state=0).fit(X_class0) class0_centers=kmeans_class0.cluster_centers_ centers=np.concatenate((class1_centers,class0_centers),axis=0) However, I am not sure if k-means clustering is the correct method to adopt in my problem as my dataset is highly imbalanced and some observations from different classes are very similar to each other (also my results are not really pleasant) What other methods could be appropriate for finding clusters using such a dataset? what can be suggested? I read that decision tree or orthogonal least square can also be applied to train radial basis neural networks. Thank you.
