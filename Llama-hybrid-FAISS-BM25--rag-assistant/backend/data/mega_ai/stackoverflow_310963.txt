[site]: stackoverflow
[post_id]: 310963
[parent_id]: 
[tags]: 
Relational Schema for Fowler's Temporal Expressions

Martin Fowler defines an elegant object model for the scheduling of recurring tasks here , which maps to OO code very nicely. Mapping this to a relational database schema for persistence, however, is tricky. Can anyone suggest a schema + SQL combination that encapsulates all the functionality he describes, particularly in the image on page 11. Intersects and Unions are fairly obvious - the complexity lies in representing the 'Temporal Expressions', which take variable parameters and must be interpreted differently, and then combining those into a 'Temporal Set'. To be clear, there are many ways to represent the concept of recurring events in relational databases. What I'd like everyone's input on is how to map this particular model. Some possible options: 'Meta' tables that define number of, and use of arguments. Ugly, but probably works. However, there is only likely to be a limited number of 'Temporal Expression' forms, so the extreme flexibility this offers is probably too much. Some form of table inheritance, as supported by Postgres (and presumably, other) RBMS. Serialising the parameter list and storing the result in a varchar() is not a solution as that method prevents set-based queries :)
