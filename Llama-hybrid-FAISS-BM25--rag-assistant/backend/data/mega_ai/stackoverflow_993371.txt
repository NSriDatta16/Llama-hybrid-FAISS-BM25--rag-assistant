[site]: stackoverflow
[post_id]: 993371
[parent_id]: 993160
[tags]: 
I'm not aware of anything. This is probably because most DBAs are fairly conservative and would probably not allow an out of the box set of things into their databases. Enforce as much you can in the database with unique constraints, foreign keys, etc. Despite this, there are often many cases where you really can't encode everything into constraints. For instance, an empty table always satisfies constraints, so you have to have an exception report to tell you when a table is unexpectedly empty. Encapsulate all the exception handling into individual granular stored procedures with a consistent naming convention (i.e. usp_Integrity_XXXX ). Create a master stored proc ( usp_Integrity_Master ) that either calls all those stored procs explicitly or using dynamic SQL with a cursor on INFORMATION_SCHEMA to find the appropriate procedures and call them in sequence, logging all the results to an appropriate table and firing off an email, report or whatever. At a previous gig, I actually had a Agent job that called the master integrity check for each database, and emailed me. (Actually, some of the individual problems were emailed to appropriate staff responsible for tracking down and fixing problems. Especially with integration scenarios, you cannot just stop outside information coming in, you have to let it come in invalid and try to get it corrected later)
