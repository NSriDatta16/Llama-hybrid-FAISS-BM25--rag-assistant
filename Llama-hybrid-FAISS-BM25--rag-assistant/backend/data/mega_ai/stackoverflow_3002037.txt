[site]: stackoverflow
[post_id]: 3002037
[parent_id]: 3001984
[tags]: 
They are actually different conditions. What I think you really mean is: if (openFile == null) { openFile = new AppFileDialog().chooseFile("Save", appFrame); if (openFile == null) { return; } } Which shows that they don't mean the same thing, but yours is more elegant if you wish to add more conditions (more ways that the file could be opened, like using a default filename if the user doesn't supply one himself) However I'd prefer: openFile = getOpenFile() if(openFile == null) return; public File getOpenFile() { if(openFile == null) openFile = new AppFileDialog().chooseFile("Save", appFrame); return openFile; } This allows the getOpenFile() method to control the openFile variable completely, never accessing the openFile variable from any other methods (except perhaps a closeFile() method. I use this trick sometimes, making a variable that is "Logically private" to just a couple methods in order to reduce complexity a little.
