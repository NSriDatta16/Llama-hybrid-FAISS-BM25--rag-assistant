[site]: crossvalidated
[post_id]: 476137
[parent_id]: 
[tags]: 
How to set intercept to 1 in logistic regression and extract specific values?

I'm trying to fit a logistic regression model to some data using glm() in R. The data comes from something related to sound propagation, thus in the example I give: x = distance y = proportion of signal at that point count = median count of signal It took me a while to work out the best approach (I still don't know whether it's the best) but after reading around I came to the conclusion as the data in proportion form is bound between 0 and 1, and owing to dissipation with distance, the best way to model this might be using logistic regression. Typically I understood logistic regression to have a response variable which was either 0 or 1 exactly. However, after reading this post I decided to use a similar method ( http://sherrytowers.com/2018/03/07/logistic-binomial-regression/ ) I have some outstanding issues however: Is this a correct way to model this type of data? Given that signal strength at x = 0 should be 100% (i.e. 1 on y axis) how can I force the model to do this (please show in code) (i.e. force intercept to 1 at distance 0). the two horizontal lines are theoretically representative of points at which y = 0.5 and y = 0.05 (i.e. 50% of signal strength and 5% of signal strength) - how can I extract the x values for these (distance at which this occurs; please show in code) Here is a repex describing the above: # creating data df = data.frame(y = c(0.56,0.294,0.556,0.543, 0.02, 0.241, 0.01, 0.435, 0.329, 0.548), count = c(5.6522335,2.9427240,5.5612497,5.4321732 ,0.2384215,2.4116196,0.1077007,4.3548918,3.2932310,5.4793094), x = c(12,293,302,30,602,314,458,172,153,140)) # getting beta for the model # 10 is the max signal that can be achieved in count b = glm(cbind(count,10-count)~x,family = "quasibinomial", data = df) # creates sequence of used to plot curve newdata = data.frame(x = seq(1:1000)) # getting predictions from 0 to 1000 (this function is on the webpage above all it does is extract CIs) ypred = get_prediction_and_confidence_intervals_from_binomial_fit(b,newdata) # setting maximum y for graph ymax = 1 # plotting model ggplot() + geom_point(aes(x = x, y = y), data = df) + geom_line(aes(x = newdata $x,y = ypred[,1])) + geom_line(aes(x = newdata$ x,y = ypred[,2]), size = 2, colour = "red") + geom_line(aes(x = newdata$x,y = ypred[,3]), size = 2, colour = "red") + geom_hline(yintercept = .5) + geom_hline(yintercept = .05) The other thing I don't quite understand is why the model requires a dataframe with two column to calculate proportion (i.e. cbind(count,10-count) in the function call? If I provide the response as proportion it won't work, why?
