[site]: stackoverflow
[post_id]: 1744242
[parent_id]: 1744070
[tags]: 
I think, "use it rarely" ist not the right sentence. I would prefer "throw only in exceptional situations". Many have explained, why exceptions should not used in normal situations. Exceptions have their right for error handling and purely for error handling. I will focus on an other point: An other thing is the performance issue. Compilers struggled long to get them fast. I am not sure, how the exact state is now, but when you use exceptions for control flow, than you will get an other trouble: Your program will become slow! The reason is, that exceptions are not only very mighty goto-statements, they also have to unwind the stack for all the frames they leave. Thus implicitely also the objects on stack have to be deconstructed and so on. So without be aware of it, one single throw of an exception will really get a whole bunch of mechanics be involved. The processor will have to do a mighty lot. So you will end up, elegantly burning your processor without knowing. So: use exceptions only in exceptional cases -- Meaning: When real errors occured!
