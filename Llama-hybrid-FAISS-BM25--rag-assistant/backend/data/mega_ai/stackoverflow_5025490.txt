[site]: stackoverflow
[post_id]: 5025490
[parent_id]: 5025078
[tags]: 
OK, so how about some LINQ ? Something like public class Player { public string Name; public double Rank; } List > someOtherList = new List > { new List { new Player {Name = "A", Rank = 1}, new Player {Name = "B", Rank = 2} }, new List { new Player {Name = "A", Rank = 2}, new Player {Name = "C", Rank = 1} } }; List plrs = (from p in someOtherList.SelectMany(singleList => singleList) group p by p.Name into g select new Player { Name = g.Key, Rank = g.Average(x => x.Rank) }) .OrderBy(x => x.Rank) .ToList(); foreach (Player p in plrs) { OverallPlayers.Add(p.Rank + ". " + p.Name); } EDIT Changed to look something like the OP code. I would dtill strongly recomend you spend some time on that LINQ tutorial once you feel better... List stars = new List { new[] { new Star {Name = "A", Points = 1}, new Star {Name = "B", Points = 2} }, new[] { new Star {Name = "A", Points = 2}, new Star {Name = "C", Points = 1} } }; List plrs = (from p in stars.SelectMany(singleList => singleList) group p by p.Name into g select new Star { Name = g.Key, Points = g.Average(x => x.Points) }) .OrderBy(x => x.Points) .ToList(); foreach (Star p in plrs) { //OverallPlayers.Add(p.Rank + ". " + p.Name); }
