[site]: stackoverflow
[post_id]: 5251689
[parent_id]: 
[tags]: 
Cross domain POST query using Cross-Origin Resource Sharing getting no data back

I'm sending data cross domain via a POST request but the response isn't working, specifically, jQuery's success handler never gets called. Stuff being used: Django, Apache, jQuery. So, I set up a request rather similar to this: $.ajax({ url: "http://somesite.com/someplace", type: "POST", cache: false, dataType: "json", data: { ... }, success: function( msg ) { alert(msg); }, }); As you well know, CORS allows me to respond to an OPTIONS query appropriately to say "Yes, you can POST to me". Which I'm doing. Firebug confirms I'm getting my 200 status code and that the return type is in fact application/json . However, Firebug also confirms that the success handler in the above is not being called. For reference, my response to OPTIONS is: elif request.method == "OPTIONS": response = HttpResponse("") response['Access-Control-Allow-Origin'] = "*" response['Access-Control-Allow-Methods'] = "POST, GET, OPTIONS" response['Access-Control-Allow-Headers'] = "X-Requested-With" return response In contrast, if I set up a complete: function()... handler it works. So, question is: what's happening (or not) and why? I am getting data fine, I'd just like to be able to return the response. Update : This fixes my issue on some browsers but since I don't have a complete definite explanation to this behaviour I'm leaving it open . Ok, so I read the manual and what I understand of it, the algorithm applied is roughly this: User agents may implement a preflight call. This is the OPTIONS request. The idea is that they make this request which gives them an answer with respect to the requested resource, which they are then supposed to cache. I'm not passing back a max-age field, so I suspect whilst success is being returned and the X-request allowed, there is nothing in the user agent's cache which permitted me to make it, so the default rules (isolate the request) are applied. When you make the actual request, I believe the user agent is supposed to inspect the pre-flight cache for permissions. Without my max-age field, I believe it isn't finding these permissions. However, responding with the same headers on POST appears to allow Firefox and Google Chrome to view the response. Opera can not. IE remains untested at the moment. I do not currently understand and it is not clear from the manual (to me at least) whether a CORS request should also answer with these headers in the request as well as the OPTIONS . I shall experiment with the Max-Age header and see what that allows or does not allow. However, I'm still short of some definite authoritative understanding on the issue so if there is someone on here who knows, I'm all ears.
