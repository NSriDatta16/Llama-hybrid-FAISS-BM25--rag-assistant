[site]: stackoverflow
[post_id]: 3307175
[parent_id]: 3307134
[tags]: 
I've been retrofitting unit tests to a C++ project and it is not pleasant. First thing I did was to identify where most of the 'action' occurs. Then use that to start putting unit tests on the functions that can be test easily. Then once you have the easier ones you can start looking at expanding the coverage virally - attack the functions that have fewer dependancies, run through them a few times in a debugger seeing what values are passed in and then write unit tests with those values to make sure you don't break anything. Don't expect a quick fix - it's taken 3 weeks (6hr days, 5 days a week) to get 20% coverage but the code spends 80% of the time in that code so I think it has been time well spent and has uncovered quite a few bugs.
