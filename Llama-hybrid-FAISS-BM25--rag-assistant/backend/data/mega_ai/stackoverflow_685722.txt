[site]: stackoverflow
[post_id]: 685722
[parent_id]: 654722
[tags]: 
UPDATE: In addition to my previous answer below, I suggest reading about the "Presenter First" approach (especially the PDF articles) I would recommend MVP (PassiveView pattern actually) instead of MVC. You don't really need any special frameworks for this, it's just how you organize your code. One approach (which I usually take) is to split each windows form into three entities: A presenter/controller class - this is what you actually start with when developing a form. This is where most/all of your "business" logic should reside. A view interface (IView), which contains the methods, properties and events. This interface is all that the presenter knows about your form. At the end, when you finish implementing the presenter and the view (including unit tests), you can then create the actual form class and make it implement the IView interface. Then it's just a question of adding appropriate controls to the form and wiring them to the interface. Example code (a simple pseudocode, just for illustration): interface IView { string Username { get; set; } string Password { get; set; } event EventHandler LogOnButtonClicked; void InformUserLogOnFailed(); void MoveToMainScreen(); } class Presenter { public Presenter(IView view) { this.view = view; view.LogOnButtonClicked += new EventHandler(OnLogOnButton); } private void OnLogOnButton() { // we ask some service to verify the username/password bool isLogOnOk = logOnService.IsUserAndPasswordOk(view.Username, view.Password); if (isLogOnOk) view.MoveToMainScreen(); else { view.Username = ""; view.Password = ""; view.InformUserLogOnFailed(); } } private IView view; } class Form : IView { public Form() { presenter = new Presenter(this); } public string Username { get { return TextBoxUsername.Text; } set { TextBoxUsername.Text = value; } } public string Password { get { return TextBoxPassword.Text; } set { TextBoxPassword.Text = value; } } public void InformUserLogOnFailed() { MessageBox.Show("Invalid username or password."); } public void MoveToMainScreen() { // code for opening another form... } private Presenter presenter; }
