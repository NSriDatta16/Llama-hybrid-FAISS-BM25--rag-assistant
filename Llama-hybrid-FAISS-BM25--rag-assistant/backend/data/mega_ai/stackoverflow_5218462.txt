[site]: stackoverflow
[post_id]: 5218462
[parent_id]: 5218287
[tags]: 
First things first, your assumptions are incorrect: the Linux kernel does provide limited kernel-mode preemption, if the config options CONFIG_PREEMPT_VOLUNTARY or CONFIG_PREEMPT are set. With preemption turned on, tasks won't be preempted if they are holding locks; the kernel developers pay very close attention to how long processes hold locks, and try to reduce the amount of time that locks are held. (In part for preempt, in part because the longer locks are held, the less concurrent the system may be, if several processors are contending for the same lock. If the locks are held for short times, there is less contention and potentially higher throughput.) Furthermore, the kernel developers try to limit the length of time a process may spend in kernel mode. After all, time spent in the kernel is time that isn't spent in the application, doing whatever it is the application does. If the standard Linux kernel cannot provide you with good enough hard realtime performance handling interrupts, you can of course use a system such as RTLinux , for which commercial support is available.
