[site]: datascience
[post_id]: 56362
[parent_id]: 
[tags]: 
Neural Network input layer with many zeros

I want to design a neural network, an LSTM actually, which can analyze the function call log of an application. My goal is to get my system able to understand if any given functions call sequence is malicious or not. The sequence should also include the arguments for each function call. My design involves an input layer where neurons groups concern a single call function with its arguments. This design also implies that if I ever get this network trained, my input will always be a sequence of zeros, a few numbers different from zero, and other zeros. Can this neural network design ever work? Is there any best practice I'm not aware of that states I should avoid a design like that? Updates My intention is to define the input as a sequence of numbers. Function arguments which are not numbers, such strings, are converted into numbers by some heuristics. Assume the following as a possible input of the NN: {[0,0,0,0],[0,0],[0,0,0,0],[1.2, 3.45, 5.33, 9.10],[0,0,0,0,0]} Brackets are there just for convenience because I plan to make my input as a sequence of numbers without any structure. The following is the representation of this scenario: you have a space of 5 functions with the following signatures: (for convenience I made all arguments float) f1(float a,b,c,d) f2(float a,b) f3(float a,b,c,d) f4(float a,b,c,d) f5(float a,b,c,d,e) and the input I included above is the case where system is evaluating a the safety of a call f4(1.2, 3.45, 5.33, 9.10)
