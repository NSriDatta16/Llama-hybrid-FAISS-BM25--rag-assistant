[site]: stackoverflow
[post_id]: 2125038
[parent_id]: 2124934
[tags]: 
As soon as you make a method virtual, you are giving a derived class a chance to break your class. A responsible deriver will always ask himself "should I call the base implementation?" Guidance for this should always come from documentation. MSDN uses standard verbiage: Notes to Inheritors: When overriding Xxxxx in a derived class, be sure to call the base class's Xxxx method so that blablah happens. The C# language makes that easy with the "base" keyword. Working from the assumption that this documentation is not available or unclear, your second example would strongly discourage a deriver to call the other base class method. After all, s/he wouldn't use the standard pattern. Use this pattern only if you want to discourage the inheritor from calling a base class method.
