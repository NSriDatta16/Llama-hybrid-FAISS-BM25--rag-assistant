[site]: datascience
[post_id]: 117233
[parent_id]: 117180
[tags]: 
If you only have nonfaulty data, there is 2 efficient ways to detect faulted ones. You can use a classification model based on nonfaulty data only. It could be a robust one like XGBoost or Random Forest . In production, if it can't classify the input value correctly (=low score), there are great chances to find a fault. You can also apply a function that adds faults randomly (10% for example) and label them as faulty. Then, you can train a model on those valid faulty and nonfaulty data. The result in production should be probably very accurate. The second option might be better than the first one, as it generalizes better.
