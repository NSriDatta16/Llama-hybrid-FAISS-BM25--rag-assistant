[site]: stackoverflow
[post_id]: 4345108
[parent_id]: 4246506
[tags]: 
This might be some strange case, but to fix it, I needed to handle or dragging events, including the Preview versions. Here's how to make it work. Xaml: Code: public partial class DnDTestBasic : Window { public DnDTestBasic() { InitializeComponent(); } private Point dragStartPoint; private void button_PreviewMouseLeftButtonDown(object sender, MouseButtonEventArgs e) { dragStartPoint = e.GetPosition(null); status.Text = "New drag start position"; } private static bool IsDragging(Point dragStartPoint, MouseEventArgs e) { var diff = e.GetPosition(null) - dragStartPoint; return e.LeftButton == MouseButtonState.Pressed && (Math.Abs(diff.X) > SystemParameters.MinimumHorizontalDragDistance || Math.Abs(diff.Y) > SystemParameters.MinimumVerticalDragDistance); } private void button_PreviewMouseMove(object sender, MouseEventArgs e) { if (IsDragging(dragStartPoint, e)) { status.Text = "Starting drag..."; DragDrop.DoDragDrop(button, new DataObject("Button", button), DragDropEffects.Copy); status.Text = "Dragging done."; e.Handled = true; } } private void textBox_Dragging(object sender, DragEventArgs e) { if (e.Data.GetDataPresent("Button")) e.Effects = DragDropEffects.Copy; else e.Effects = DragDropEffects.None; e.Handled = true; } private void textBox_Drop(object sender, DragEventArgs e) { var button = (Button)e.Data.GetData("Button"); textBox.Text = string.Format("[{0}]", button.Content.ToString()); e.Handled = true; } }
