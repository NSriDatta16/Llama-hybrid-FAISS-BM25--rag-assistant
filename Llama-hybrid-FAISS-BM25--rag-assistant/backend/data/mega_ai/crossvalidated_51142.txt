[site]: crossvalidated
[post_id]: 51142
[parent_id]: 51140
[tags]: 
I ran your code, and performed some diagnostics/debugging. Here's is what I generated, and my interpretation. For transparency, here's my code frequency = pymc.Beta('frequency', alpha=3.5 , beta=31.5, value=0.5) gene_variant = pymc.Bernoulli('gene_variant', p=frequency, value=array([False])) #mean = pymc.Lambda('mean', lambda gene_variant=gene_variant: where(gene_variant, 10.0, 30.0)) """I prefer to use the boiler plate deterministic template. Plus where confuses me sometimes. Please confirm this is indeed what you intended in your Lambda. @pymc.deterministic def mean( gene_variant = gene_variant ): if gene_variant: return 10. else: return 30. counting = pymc.Poisson('counting', mu=mean, value=25, observed=True) model = pymc.MCMC([frequency, gene_variant, mean, counting]) model.sample(iter=10000, burn=5000) mcplot(model) Below are my results, let me know if they match yours, more or less: Interpretation What is observed in the above plots is not that unlikely, given the prior and observation. Considering that you assigned a Beta distribtion skewed heavily towards the true mean being 30 and you observe a value of 25 (which under H1 has probability five orders of magnitude less than H2), I would say the results look right: It would be VERY unlikely to have the mean by 10, hence the trace of mean will VERY unlikely be anything but 30 (and consequently gene_variant would be always False . I did the same analysis with a less strict prior on the frequency ( I chose Uniform over 0,1), and did observe some occurrences of gene_variant == True .
