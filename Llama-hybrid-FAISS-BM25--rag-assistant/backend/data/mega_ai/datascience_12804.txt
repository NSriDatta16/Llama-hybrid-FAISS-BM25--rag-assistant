[site]: datascience
[post_id]: 12804
[parent_id]: 12751
[tags]: 
The way you are doing it is just fine. The idea in time series prediction is to do regression basically. Probably what you have seen other places in case of vector, it is about the size of the input or basically it means feature vector. Now, assuming that you have t timesteps and you want to predict time t+1 , the best way of doing it using either time series analysis methods or RNN models like LSTM, is to train your model on data up to time t to predict t+1 . Then t+1 would be the input for the next prediction and so on. There is a good example here . It is based on LSTM using the pybrain framework. Regarding your question on batch_size , at first you need to understand the difference between batch learning versus online learning. Batch size basically indicates a subset of samples that your algorithms is going to use in gradient descent optimization and it has nothing to do with the way you input the data or what you expect your output to be. For more information on that I suggest you read this kaggle post.
