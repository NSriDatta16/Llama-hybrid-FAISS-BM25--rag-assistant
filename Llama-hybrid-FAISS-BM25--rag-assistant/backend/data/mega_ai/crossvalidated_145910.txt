[site]: crossvalidated
[post_id]: 145910
[parent_id]: 145897
[tags]: 
Let's denote $f$ the true underlying function and $\hat f$ the function that your machine learning algorithm converges too ($\hat f$ belongs to a family of parametrized functions $F$). For simplicity, let's also assume that $f$ can be expressed analytically and that $f$ is deterministic. My question is, are there ways to actually extract this explicit function f? Both in practice and in theory ? I assume that by "practice", you mean with machine learning (using experimental data) and by "theory", you mean modelling mathematically without machine learning (without data). In practice , if you have enough data and if $F$ contains $f$, then it should be possible to obtain $\hat f$ = $f$ with an appropriate machine learning methodology. Theoretically , you may try to model $f$ with physical laws (or other modelling laws). For example is $f(p,s)$ models the time it takes for an object of shape s and weight p to fall from the top of the Eiffel tower, you can use classical mechanics (assuming they are true in the scope/scale of $f$) to model $f$. For apple and oranges, $f$ is subjective to a particular person (given an ambiguous picture, two persons may disagree). So let's consider your $f$. $f$ is then defined by your brain! So if we assume that there exists an analytical expression of $f$, here are the two ways to find it: "in practice" (with machine learning): choose F sufficiently large to model the brain (the brain has more than 80 billions of neurons...), build a big enough dataset and choose a good machine learning algorithm. Ideally the dataset should contain all the possible images of oranges and apples. Then train until you get a null training error AND a null generalisation error. "in theory" (modelling): model the network of biological neurons of your brain. The problem is that we do not yet understand how the brain works. To recap, you can usually find $f$ but it is really hard in both cases: in practice: you need a good F, enough data and a good enough ML algorithm. in theory: you need to know all the "physical laws" and be sure they are correct in the scope of the function $f$.
