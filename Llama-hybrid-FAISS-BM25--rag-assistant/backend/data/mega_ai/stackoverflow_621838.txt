[site]: stackoverflow
[post_id]: 621838
[parent_id]: 621788
[tags]: 
Well, I hardly see (b) employed in practice. I use the approach described in (c) most of the times (the other times is when I don't even separate between the BLL/DAL or have a domain model at all). After all, the business and data components are usually physically co-located, so it's straightforward for the BO to be shared by these two. In fact, frameworks like Hibernate, Entity Framework, Linq2Sql etc. actually encourages (c) by allowing one to perform ORM for complex domain model. DTO is more typically used to pass data from the BLL to the UI though, esp. when the UI and BLL are deployed in separate servers. In this case, the UI will likely need a simplified view of the domain model to reduce cross-process roundtrips and minimize impact of change (when the the domain model changes).
