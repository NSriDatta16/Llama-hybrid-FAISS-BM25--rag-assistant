Norms can be considered from different perspectives in artificial intelligence to create computers and computer software that are capable of intelligent behaviour. In artificial intelligence and law, legal norms are considered in computational tools to automatically reason upon them. In multi-agent systems (MAS), a branch of artificial intelligence (AI), a norm is a guide for the common conduct of agents, thereby easing their decision-making, coordination and organization. Since most problems concerning regulation of the interaction of autonomous agents are linked to issues traditionally addressed by legal studies, and since law is the most pervasive and developed normative system, efforts to account for norms in artificial intelligence and law and in normative multi-agent systems often overlap. Artificial intelligence and law With the arrival of computer applications into the legal domain, and especially artificial intelligence applied to it, logic has been used as the major tool to formalize legal reasoning and has been developed in many directions, ranging from deontic logics to formal systems of argumentation. The knowledge base of legal reasoning systems usually includes legal norms (such as governmental regulations and contracts), and as a consequence, legal rules are the focus of knowledge representation and reasoning approaches to automatize and solve complex legal tasks. Legal norms are typically represented into a logic-based formalism, such a deontic logic. Artificial intelligence and law applications using an explicit representation of norms range from checking the compliance of business processes and the automatic execution of smart contracts to legal expert systems advising people on legal matters. Multi-agent systems Norms in multi-agent systems may appear with different degrees of explicitness ranging from fully unambiguous written prescriptions to implicit unwritten norms or tacit emerging patterns. Computer scientistsâ€™ studies mirror this polarity. Explicit norms are typically investigated in formal logics (e.g. deontic logics and argumentation) to represent and reason upon them, leading eventually to architecture for cognitive agents, while implicit norms are accounted as patterns emerging from repeated interactions amongst agents (typically reinforced learning agents). Explicit and implicit norms can be used together to coordinate agents. Explicit norms are typically represented as a deontic statement that aims at regulating the life of software agents and the interactions among them. It can be an obligation, a permission or a prohibition, and is often represented with some dialect or extension of Deontic logic. At the opposite, implicit norms are social norms that are not written, and they usually emerge from the repetitive interactions of agents. == References ==