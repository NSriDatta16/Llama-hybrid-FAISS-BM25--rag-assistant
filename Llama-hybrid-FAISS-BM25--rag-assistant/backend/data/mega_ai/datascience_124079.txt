[site]: datascience
[post_id]: 124079
[parent_id]: 
[tags]: 
RNN model for predicting sequences based on sequences of different lengths with Keras

I have data that are sequences of repeated values of different lengths. The value is categorical and can take values from 1 to 184. I used padded with 0 and masking: [[1, 1, 2, ... 0, 0, 0], [1, 6, 1, ... 0, 0, 0], ... [4, 4, 3, ... 0, 0, 0]] With that code: padded_inputs = tf.keras.utils.pad_sequences(train['Data'], padding="post") embedding = layers.Embedding(input_dim=10000, output_dim=16, mask_zero=True) X_train = embedding(padded_inputs) My target - y_train that I need to predict is a sequence of the same categorical repeating values with length 10: [[1, 1, 1, 3, 3, 4, 1, 6, 2, 2], [2, 2, 3, 3, 4, 1, 1, 2, 7, 1], ... [6, 9, 1, 2, 3, 3, 3, 2, 2, 2]] I created a simple LSTM model using Keras: model = Sequential() model.add(LSTM(32, input_shape=(None, 16))) model.add(Dense(10, activation='sigmoid')) model.compile(loss='binary_crossentropy', optimizer='rmsprop', metrics=['accuracy']) batch_size = 32 epochs = 10 history = model.fit(X_train, y_train, epochs=epochs, batch_size=batch_size) preds_train = model.predict(X_train) But the model gives a prediction like: [[0.88863385, 0.74388796, 0.8497969 , 0.82645077, 0.55977786, 0.7694494 , 0.8115073 , 0.5448062 , 0.510332 , 0.77190804], [0.88863385, 0.743888 , 0.8497969 , 0.82645077, 0.5597778, 0.7694494 , 0.8115073 , 0.5448062 , 0.510332 , 0.77190804], ... [0.88863385, 0.743888 , 0.8497969 , 0.82645077, 0.55977786, 0.7694495 , 0.8115073 , 0.5448062 , 0.510332 , 0.77190804]] And I need a prediction in format like my target with my categorical values. How can i do that?
