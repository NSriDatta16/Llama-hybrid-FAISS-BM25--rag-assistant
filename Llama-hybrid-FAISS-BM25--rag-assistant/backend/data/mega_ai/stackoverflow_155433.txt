[site]: stackoverflow
[post_id]: 155433
[parent_id]: 155391
[tags]: 
You should stick to using the abstract class BitmapSource if you need to get at the bits, or even ImageSource if you just want to draw it. The implementation BitmapFrame is just the object oriented nature of the implementation showing through. You shouldn't really have any need to distinguish between the implementations. BitmapFrames may contain a little extra information (metadata), but usually nothing but an imaging app would care about. You'll notice these other classes that inherit from BitmapSource: BitmapFrame BitmapImage CachedBitmap ColorConvertedBitmap CroppedBitmap FormatConvertedBitmap RenderTargetBitmap TransformedBitmap WriteableBitmap You can get a BitmapSource from a URI by constructing a BitmapImage object: Uri uri = ...; BitmapSource bmp = new BitmapImage(uri); Console.WriteLine("{0}x{1}", bmp.PixelWIdth, bmp.PixelHeight); The BitmapSource could also come from a decoder. In this case you are indirectly using BitmapFrames. Uri uri = ...; BitmapDecoder dec = BitmapDecoder.Create(uri, BitmapCreateOptions.None, BitmapCacheOption.Default); BitmapSource bmp = dec.Frames[0]; Console.WriteLine("{0}x{1}", bmp.PixelWIdth, bmp.PixelHeight);
