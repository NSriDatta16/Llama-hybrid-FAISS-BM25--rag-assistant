[site]: stackoverflow
[post_id]: 5254929
[parent_id]: 
[tags]: 
Calling navigation controller method from background operation

I'm running a background operation using NSOperation, which gets kicked off from my AppDelegate. What I want to do is when the operation is complete, have it call a method in the RootViewController.m file. Currently there's a property in my AppDelegate named navigationController, and I"ve been trying to set up the call like this: AppDelegate.m: GetRSSOperation *gro = [[GetRSSOperation alloc] initWithURL:rssURL target:self selector:@selector(dataSourceDidFinishLoadingNewData:)]; [queue addOperation:gro]; [gro release]; GetRSSOperation.m: [target performSelectorOnMainThread:selector withObject:alerts waitUntilDone:YES]; I have tried setting the target to self, self.navigationController, self.navigationController.view but none work. I am aware that the issue might be due to my not yet having a complete understanding of the entire ios architecture, so would appreciate any pointers please. **Adding more code to explain: AppDelegate.h #import #import @interface AppDelegate : NSObject { NSOperationQueue *queue; UIWindow *window; UINavigationController *navigationController; NSURL *rssURL; // storage for the alert list from RSS feed NSMutableArray *alerts; } @property (nonatomic, retain) IBOutlet UIWindow *window; @property (nonatomic, retain) IBOutlet UINavigationController *navigationController; @property (nonatomic, retain) NSMutableArray *alerts; @property (nonatomic, retain) NSURL *rssURL; @property (retain) NSOperationQueue *queue; + (id)shared; @end AppDelegate.m #import "AppDelegate.h" #import "RootViewController.h" #import "AlertViewController.h" #import "RefreshTableHeader.h" #import "GetRSSOperation.h" @implementation AppDelegate static AppDelegate *shared; @synthesize window, navigationController, alerts; - (id)init { if (shared) { [self autorelease]; return shared; } if (![super init]) return nil; queue = [[NSOperationQueue alloc] init]; shared = self; return self; } - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions { // Add the navigation controller's view to the window and display. UIImageView *imageview=[[UIImageView alloc]initWithFrame:CGRectMake(270, 3, 37, 37)]; imageview.image=[UIImage imageNamed:@"iphone.png"]; [self.navigationController.navigationBar addSubview:imageview]; [self.window addSubview:navigationController.view]; [self.window makeKeyAndVisible]; if (rssURL == nil) { NSString *alertAddress = @"http://www.compoundstockearnings.com/com/public/selections.cfc?method=getrss&email="; alertAddress = [alertAddress stringByAppendingString:cseLogin]; alertAddress = [alertAddress stringByAppendingString:@"&password="]; alertAddress = [alertAddress stringByAppendingString:csePass]; rssURL = [[NSURL alloc] initWithString:alertAddress]; } GetRSSOperation *gro = [[GetRSSOperation alloc] initWithURL:rssURL target:self selector:@selector(dataSourceDidFinishLoadingNewData:)]; [queue addOperation:gro]; [gro release]; return YES; } return NO; } @end GetRSSOperation just does the rss call, puts it in memory then tries to call the main navigation controller: [target performSelectorOnMainThread:selector withObject:alerts waitUntilDone:YES]; The main navigation controller upon which I wish the thing to execute a selector, looks like this: RootViewController.h #import @interface RootViewController : UITableViewController { IBOutlet RefreshTableHeader *alertTable; UIImageView *imageView; } @end RootViewController.m: #import "RootViewController.h" #import "AppDelegate.h" @implementation RootViewController - (void)dataSourceDidFinishLoadingNewData:(NSMutableArray *)tempAlerts { AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate]; appDelegate.alerts = tempAlerts; reloading = NO; [alertTable flipImageAnimated:NO]; [UIView beginAnimations:nil context:NULL]; [UIView setAnimationDuration:.3]; [self.tableView setContentInset:UIEdgeInsetsMake(0.0f, 0.0f, 0.0f, 0.0f)]; [alertTable setStatus:kPullToReloadStatus]; [alertTable toggleActivityView:NO]; [UIView commitAnimations]; [popSound play]; } Obviously I've shortened it a bit but that's the core of it. I just want the GetRSSOperation to be able to call RootViewController.m - dataSourceDidFinishLoadingNewData. any input appreciated.
