[site]: stackoverflow
[post_id]: 681122
[parent_id]: 680907
[tags]: 
I think you are looking for a "stemming algorithm". Martin Porter's approach is well known among linguists. The Porter stemmer is basically an affix stripping algorithm, combined with a few substitution rules for those special cases. Most stemmers deliver stems that are linguistically "incorrect". For example: both "beautiful" and "beauty" can result in the stem "beauti", which, of course, is not a real word. This doesn't matter, though, if you're using those stems to improve search results in information retrieval systems. Lucene comes with support for the Porter stemmer, for instance. Porter also devised a simple programming language for developing stemmers, called Snowball. There are also stemmers for German available in Snowball. A C version, generated from the Snowball source, is also available on the website, along with a plain text explanation of the algorithm. Here's the German stemmer in Snowball: http://snowball.tartarus.org/algorithms/german/stemmer.html If you're looking for the corresponding stem of a word as you would find it in a dictionary, along with information on the part of speech, you should Google for "lemmatization".
