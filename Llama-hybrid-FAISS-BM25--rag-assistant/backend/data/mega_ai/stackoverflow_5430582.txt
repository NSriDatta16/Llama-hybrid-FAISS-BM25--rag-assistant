[site]: stackoverflow
[post_id]: 5430582
[parent_id]: 
[tags]: 
Importing view functions to models.py - triggering via override save method

I would like to trigger a view function from within the save method of a model, in order to write or update an xml file associated with the instance. #models.py from myapp.views import updateXML, createXML class myModel(models.Model): def save(self, *args, **kwargs): if self.pk is not None: updateXML(self) else: createXML(self) super(FatherAgendaTemplate, self).save(*args, **kwargs) #views.py from myapp.models import otherModel def createXML(instance): print "create XML" print instance def updateXML(instance): print "update XML" print instance The problem is that I need to import otherModel into the views.py which has a foreign key to myModel, and this causes a conflict of some sort and I get the error: ImportError: cannot import name createXML I suppose I'm going about this the wrong way, importing between models and views like this since it throws an import error. What's the correct way to do this? Of course I could do all of the xml writing functions from within models.py and avoid the import conflicts, but this seems like a messy approach.
