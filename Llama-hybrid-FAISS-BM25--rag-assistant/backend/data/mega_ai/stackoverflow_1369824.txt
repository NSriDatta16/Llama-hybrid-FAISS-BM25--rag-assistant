[site]: stackoverflow
[post_id]: 1369824
[parent_id]: 1368322
[tags]: 
use strict; use warnings; use List::Util qw(sum); my @letters = ('A' .. 'Z'); my @raw_data = qw( Apple Apricot Blackberry Blueberry Cherry Crabapple Cranberry Elderberry Grapefruit Grapes Kiwi Mulberry Nectarine Pawpaw Peach Pear Plum Raspberry Rhubarb Strawberry ); # Store the data by starting letter. my %data; push @{$data{ substr $_, 0, 1 }}, $_ for @raw_data; # Set max page size dynamically, based on the average # letter-group size (in this case, a multiple of it). my $MAX_SIZE = sum(map { scalar @$_ } values %data) / keys %data; $MAX_SIZE = int(1.5 * $MAX_SIZE + .5); # Organize the data into pages. Each page is an array reference, # with the first element being the letter range. my @pages = (['']); for my $letter (@letters){ my @d = exists $data{$letter} ? @{$data{$letter}} : (); if (@{$pages[-1]} - 1 [0] =~ s/^(.).*(.)$/$1-$2/ for @pages; # Convert letters to range.
