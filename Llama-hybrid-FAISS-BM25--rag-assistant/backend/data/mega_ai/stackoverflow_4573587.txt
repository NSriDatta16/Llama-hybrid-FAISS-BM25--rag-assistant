[site]: stackoverflow
[post_id]: 4573587
[parent_id]: 
[tags]: 
Scala: custom control structures with several code blocks

Is it possible to create a custom control structure with several code blocks, in the fashion of before { block1 } then { block2 } finally { block3 } ? The question is about the sugar part only - I know the functionality can be easily achieved by passing the three blocks to a method, like doInSequence(block1, block2, block3) . A real life example. For my testing utilities I'd like to create a structure like this: getTime(1000) { // Stuff I want to repeat 1000 times. } after { (n, t) => println("Average time: " + t / n) } EDIT : Finally I came up with this solution: object MyTimer { def getTime(count: Int)(action : => Unit): MyTimer = { val start = System.currentTimeMillis() for(i Unit) = { action(count, time) } } // Test import MyTimer._ var i = 1 getTime(100) { println(i) i += 1 Thread.sleep(10) } after { (n, t) => println("Average time: " + t.toDouble / n) } The output is: 1 2 3 ... 99 100 Average time: 10.23 It is mostly based on the answer by Thomas Lockney , I just added the companion object to be able to import MyTimer._ Thank you all, guys.
