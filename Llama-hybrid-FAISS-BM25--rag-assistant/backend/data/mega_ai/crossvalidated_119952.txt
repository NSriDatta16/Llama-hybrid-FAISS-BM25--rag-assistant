[site]: crossvalidated
[post_id]: 119952
[parent_id]: 
[tags]: 
How to apply Bayes' theorem to the search for a fisherman lost at sea

The article The Odds, Continually Updated mentions the story of a Long Island fisherman who literally owes his life to Bayesian Statistics. Here's the short version: There are two fishermen on a boat in the middle of the night. While one is asleep, the other falls into the ocean. The boat continues to troll along on autopilot all through the night until the first guy finally wakes up and notifies the Coast Guard. The Coast Guard uses a piece of software called SAROPS (Search and Rescue Optimal Planning System) to find him just in time, as he was hypothermic and just about out of energy to stay afloat. Here's the long version: A Speck In The Sea I wanted to know more about how Bayes' Theorem is actually applied here. I found out quite a bit about the SAROPS software just by googling. The SAROPS simulator The simulator component takes into account timely data such as ocean current, wind, etc. and simulates thousands of possible drift paths. From those drift paths, a probability distribution map is created. Note that the following graphics do not refer to the case of the missing fisherman I mentioned above, but are a toy example taken from this presentation Probability Map 1 (Red indicates the highest probability; blue the lowest) Note the circle that is the starting location. Probability Map 2 - More time has passed Note that the probability map has become multimodal. That is because in this example, multiple scenarios are accounted for: The person is floating in the water - top-middle mode The person is in a life raft (more affected by the wind out of the North) - bottom 2 modes (split because of "jibing effects") Probability Map 3 - Search has been conducted along the rectangular paths in red This image shows the optimal paths produced by the planner (another component of SAROPS). As you can see, those paths were searched and the probability map has been updated by the simulator. You might be wondering why the areas that have been searched have not been reduced to a zero probability. That's because there's a probability of failure, $p(\text{fail})$, factored in, that is there's a non-negligible chance that the searcher will overlook the person in the water. Understandably, the probability of failure is much higher for a lone person afloat than for a person in a life raft (easier to see), which is why the probabilities in the top area did not go down very much. Effects of an unsuccessful search This is where Bayes' Theorem comes in to play. Once a search is conducted, the probability map gets updated accordingly so another search can be planned optimally. After reviewing Bayes' Theorem on wikipedia and in the article An Intuitive (and Short) Explanation of Bayesâ€™ Theorem on BetterExplained.com I took the Bayes' equation: $$ P(\text{A}\mid\text{X}) = \frac{P(\text{X}\mid\text{A}) \times P(\text{A})}{P(\text{X})} $$ And defined A and X as follows... Event A: The person is in this area (grid cell) Test X: Unsuccessful search over that area (grid cell) i.e. Searched that area and didn't see anything Yielding, $$ P(\text{person there}\mid\text{unsuccessful}) = \frac{P(\text{unsuccessful}\mid\text{person there}) \times P(\text{person there})}{P(\text{unsuccessful})} $$ I found in Search and Rescue Optimal Planning System that SAROPS calculates the probability of a failed search, $P(\text{fail})$, by taking into account the search paths and simulated drift paths. So for simplicity let's assume that we know what the value of $P(\text{fail})$ is. So now we have, $$ P(\text{person there}\mid\text{unsuccessful}) = \frac{P(\text{fail}) \times P(\text{person there})}{P(\text{unsuccessful})} $$ Is the Bayes' equation applied correctly here? How would the denominator, the probability of an unsuccessful search, be calculated? Also in Search and Rescue Optimal Planning System , they say The prior probabilities are "normalized in the usual Bayesian fashion" to produce the posterior probabilities What does "normalized in the normal Bayesian fashion" mean? Does it mean all probabilities are divided by $P(\text{unsuccessful})$, or just simply normalized to ensure the entire probability map adds up to one? Or, are these one and the same? Lastly, what would be the correct way to normalize the gridded probability map after you've updated for an unsuccessful search, considering that since you haven't searched ALL of the areas (grid cells) you'd have some cells equal to $P(\text{person there})$ and some equal to $P(\text{person there}\mid\text{unsuccessful})$? Yet another simplification note - according to Search and Rescue Optimal Planning System the posterior distribution is actually calculated by updating the probabilities of the simulated drift paths, and THEN re-generating the gridded probability map. In order to keep this example simple enough, I chose to ignore the sim paths and focus on the grid cells.
