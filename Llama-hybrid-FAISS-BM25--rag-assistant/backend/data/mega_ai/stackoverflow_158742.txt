[site]: stackoverflow
[post_id]: 158742
[parent_id]: 158716
[tags]: 
Generate an array 0...N-1 filled a[i] = i . Then shuffle the first K items. Shuffling: Start J = N-1 Pick a random number 0...J (say, R ) swap a[R] with a[J] since R can be equal to J , the element may be swapped with itself subtract 1 from J and repeat. Finally, take K last elements. This essentially picks a random element from the list, moves it out, then picks a random element from the remaining list, and so on. Works in O(K) and O(N) time, requires O(N) storage. The shuffling part is called Fisher-Yates shuffle or Knuth's shuffle , described in the 2nd volume of The Art of Computer Programming.
