[site]: stackoverflow
[post_id]: 1094193
[parent_id]: 1094145
[tags]: 
I don't think you specify the version of the CLR you are using, but you might check out the " BackgroundWorker " control. It is a simple way to implemented multiple threads. The best part, is that it is a part of the CLR 2.0 and up Update in response to your update: If you want to be able to update the progress in the UI -- for example in a progress bar -- the background worker is perfect. It uses an event that I think is called: ProgressChanged to report the status. It is very elegant. Also, keep in mind that you can have as many instances that you need and can execute all the instances at the same time (if needed). In response to your question : You could easily setup an example project and test for your question. I did find the following, here (under remarks, 2nd paragraph from the caution): If the operation raises an exception that your code does not handle, the BackgroundWorker catches the exception and passes it into the RunWorkerCompleted event handler, where it is exposed as the Error property of System.ComponentModel..::.RunWorkerCompletedEventArgs.
