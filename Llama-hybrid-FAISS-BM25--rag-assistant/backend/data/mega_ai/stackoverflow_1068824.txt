[site]: stackoverflow
[post_id]: 1068824
[parent_id]: 1068558
[tags]: 
Update : The use of Concerns have been confirmed as the new default in Rails 4 . It really depends on the nature of the module itself. I usually place controller/model extensions in a /concerns folder within app. # concerns/authentication.rb module Authentication ... end # controllers/application_controller.rb class ApplicationController include Authentication end # concerns/configurable.rb module Configurable ... end class Model include Indexable end # controllers/foo_controller.rb class FooController /lib is my preferred choice for general purpose libraries. I always have a project namespace in lib where I put all application-specific libraries. /lib/myapp.rb module MyApp VERSION = ... end /lib/myapp/CacheKey.rb /lib/myapp/somecustomlib.rb Ruby/Rails core extensions usually take place in config initializers so that libraries are only loaded once on Rails boostrap. /config/initializer/config.rb /config/initializer/core_ext/string.rb /config/initializer/core_ext/array.rb For reusable code fragments, I often create (micro)plugins so that I can reuse them in other projects. Helper files usually holds helper methods and sometimes classes when the object is intended to be used by helpers (for instance Form Builders). This is a really general overview. Please provide more details about specific examples if you want to get more customized suggestions. :)
