[site]: stackoverflow
[post_id]: 1356215
[parent_id]: 1320931
[tags]: 
Just a heads-up to anyone who runs into this problem themselves: I was able to product the correct behavior by instantiating the ABPersonViewController in its delegate's viewDidLoad() method as below: As before, here's my ABPeoplePickerNavigationController delegate's method: - (BOOL) peoplePickerNavigationController:(ABPeoplePickerNavigationController *)peoplePicker shouldContinueAfterSelectingPerson:(ABRecordRef)person { BOOL returnState = NO; PersonViewController *personView = [[PersonViewController alloc] init]; [peoplePicker pushViewController:personView animated:YES]; [personView displayContactInfo:person]; [personView release]; return returnState; } Here's my PersonViewController.h (ABPersonViewController delegate) header file: #import #import #import @interface PersonViewController : UIViewController { ABPersonViewController *personController; } - (void) displayContactInfo: (ABRecordRef)person; @end Finally, here's the delegate's implementation (PersonViewController.m): #import "PersonViewController.h" @implementation PersonViewController - (void) viewDidLoad { } - (void) viewDidUnload { [personController release]; } - (void) displayContactInfo: (ABRecordRef)person { personController = [[ABPersonViewController alloc] init]; [personController setDisplayedPerson:person]; [personController setPersonViewDelegate:self]; [personController setAllowsEditing:NO]; personController.addressBook = ABAddressBookCreate(); personController.displayedProperties = [NSArray arrayWithObjects: [NSNumber numberWithInt:kABPersonPhoneProperty], nil]; [self setView:personController.view]; } - (BOOL) personViewController:(ABPersonViewController*)personView shouldPerformDefaultActionForPerson:(ABRecordRef)person property:(ABPropertyID)property identifier:(ABMultiValueIdentifier)identifierForValue { // This is where you pass the selected contact property elsewhere in your program [[self navigationController] dismissModalViewControllerAnimated:YES]; return NO; } @end Hopefully this ends up being helpful for someone. The AddressBook UI framework was a bit tricky for me to wrap my head around (although I'm new to iPhone development so I'm still learning a lot of the nuances of iPhone program organization).
