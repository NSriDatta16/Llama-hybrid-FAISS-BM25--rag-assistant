[site]: stackoverflow
[post_id]: 3336335
[parent_id]: 3336295
[tags]: 
Use the right data structure for the job. Use a ConcurrentLinkedQueue . Here's how it describes itself in its javadoc: An unbounded thread-safe queue based on linked nodes. This queue orders elements FIFO (first-in-first-out). The head of the queue is that element that has been on the queue the longest time. The tail of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue. A ConcurrentLinkedQueue is an appropriate choice when many threads will share access to a common collection.
