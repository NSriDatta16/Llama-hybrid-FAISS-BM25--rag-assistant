[site]: stackoverflow
[post_id]: 526261
[parent_id]: 219827
[tags]: 
I needed to simulate a browser login to a website to get a login cookie, and the login form was multipart/form-data. I took some clues from the other answers here, and then tried to get my own scenario working. It took a bit of frustrating trial and error before it worked right, but here is the code: public static class WebHelpers { /// /// Post the data as a multipart form /// public static HttpWebResponse MultipartFormDataPost(string postUrl, string userAgent, Dictionary values) { string formDataBoundary = "---------------------------" + WebHelpers.RandomHexDigits(12); string contentType = "multipart/form-data; boundary=" + formDataBoundary; string formData = WebHelpers.MakeMultipartForm(values, formDataBoundary); return WebHelpers.PostForm(postUrl, userAgent, contentType, formData); } /// /// Post a form /// public static HttpWebResponse PostForm(string postUrl, string userAgent, string contentType, string formData) { HttpWebRequest request = WebRequest.Create(postUrl) as HttpWebRequest; if (request == null) { throw new NullReferenceException("request is not a http request"); } // Add these, as we're doing a POST request.Method = "POST"; request.ContentType = contentType; request.UserAgent = userAgent; request.CookieContainer = new CookieContainer(); // We need to count how many bytes we're sending. byte[] postBytes = Encoding.UTF8.GetBytes(formData); request.ContentLength = postBytes.Length; using (Stream requestStream = request.GetRequestStream()) { // Push it out there requestStream.Write(postBytes, 0, postBytes.Length); requestStream.Close(); } return request.GetResponse() as HttpWebResponse; } /// /// Generate random hex digits /// public static string RandomHexDigits(int count) { Random random = new Random(); StringBuilder result = new StringBuilder(); for (int i = 0; i /// Turn the key and value pairs into a multipart form /// private static string MakeMultipartForm(Dictionary values, string boundary) { StringBuilder sb = new StringBuilder(); foreach (var pair in values) { sb.AppendFormat("--{0}\r\nContent-Disposition: form-data; name=\"{1}\"\r\n\r\n{2}\r\n", boundary, pair.Key, pair.Value); } sb.AppendFormat("--{0}--\r\n", boundary); return sb.ToString(); } } } It doesn't handle file data, just form since that's all that I needed. I called like this: try { using (HttpWebResponse response = WebHelpers.MultipartFormDataPost(postUrl, UserAgentString, this.loginForm)) { if (response != null) { Cookie loginCookie = response.Cookies["logincookie"]; .....
