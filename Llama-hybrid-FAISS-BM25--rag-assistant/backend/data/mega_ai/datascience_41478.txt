[site]: datascience
[post_id]: 41478
[parent_id]: 
[tags]: 
Custom Loss Function on a Keras Neural Network

I'm training a Neural Network on Keras to predict class as a triplet of the form S,P,T , where S , P and T have different values. The output of the Neural Network is one joint triplet. In my training data, not all entries of the triplet are tagged for all the samples, i.e. for some samples you can find the y value to be s1,_,t1 or _,p2,_ and so on. I would like to implement a custom loss function that accepts this empty values. I found this example: def masked_loss_function(y_true, y_pred): mask = K.cast(K.not_equal(y_true, mask_value), K.floatx()) return K.binary_crossentropy(y_true * mask, y_pred * mask) My problem is: the y_pred and the y_true are one-hot encoded tensors, so before I compare y_pred and y_true I need to decode them and then compare the inner parts of the triplet. How can I implement this?
