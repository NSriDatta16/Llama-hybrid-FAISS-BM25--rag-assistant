[site]: stackoverflow
[post_id]: 5648647
[parent_id]: 5648556
[tags]: 
Use this class, before putting water mark just make the copy of original image. = 0 && $watermark_x = 0 && $watermark_y _get_ave_color( $main_rgb['red'], $watermark_rbg['red'], $watermark_alpha ); $avg_green = $this->_get_ave_color( $main_rgb['green'], $watermark_rbg['green'], $watermark_alpha ); $avg_blue = $this->_get_ave_color( $main_rgb['blue'], $watermark_rbg['blue'], $watermark_alpha ); # calculate a color index value using the average RGB values we've determined $return_color = $this->_get_image_color( $return_img, $avg_red, $avg_green, $avg_blue ); # if we're not dealing with an average color here, then let's just copy over the main color } else { $return_color = imagecolorat( $main_img_obj, $x, $y ); } # END if watermark # draw the appropriate color onto the return image imagesetpixel( $return_img, $x, $y, $return_color ); } # END for each X pixel } # END for each Y pixel # return the resulting, watermarked image for display return $return_img; } # END create_watermark() # average two colors given an alpha function _get_ave_color( $color_a, $color_b, $alpha_level ) { return round( ( ( $color_a * ( 1 - $alpha_level ) ) + ( $color_b * $alpha_level ) ) ); } # END _get_ave_color() # return closest pallette-color match for RGB values function _get_image_color($im, $r, $g, $b) { $c=imagecolorexact($im, $r, $g, $b); if ($c!=-1) return $c; $c=imagecolorallocate($im, $r, $g, $b); if ($c!=-1) return $c; return imagecolorclosest($im, $r, $g, $b); } # EBD _get_image_color() } # END watermark API ?> and this is how to use it $watermark = new Watermark(); $actual_image = imagecreatefromjpeg("images/$image_file"); $watermark_image = imagecreatefrompng("images/water_mark.png"); //create water marked image with 66% transparency $return_img_obj = $watermark->create_watermark( $actual_image, $watermark_image, 66 ); //now save the updated image imagejpeg($return_img_obj,"images/$image_file1"); //clear the memory imagedestroy($actual_image); imagedestroy($watermark_image); imagedestroy($return_img_obj);
