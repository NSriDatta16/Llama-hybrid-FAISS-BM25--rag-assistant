[site]: stackoverflow
[post_id]: 550591
[parent_id]: 550574
[tags]: 
If you're looking for a way to forcibly terminate execution of all Javascript on a page, I'm not sure there is an officially sanctioned way to do that - it seems like the kind of thing that might be a security risk (although to be honest, I can't think of how it would be off the top of my head). Normally in Javascript when you want your code to stop running, you just return from whatever function is executing. (The return statement is optional if it's the last thing in the function and the function shouldn't return a value) If there's some reason returning isn't good enough for you, you should probably edit more detail into the question as to why you think you need it and perhaps someone can offer an alternate solution. Note that in practice, most browsers' Javascript interpreters will simply stop running the current script if they encounter an error. So you can do something like accessing an attribute of an unset variable: function exit() { p.blah(); } and it will probably abort the script. But you shouldn't count on that because it's not at all standard, and it really seems like a terrible practice. EDIT : OK, maybe this wasn't such a good answer in light of Ã“lafur's. Although the die() function he linked to basically implements my second paragraph, i.e. it just throws an error.
