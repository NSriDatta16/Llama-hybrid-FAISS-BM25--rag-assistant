[site]: stackoverflow
[post_id]: 643597
[parent_id]: 
[tags]: 
ORM Suggestions –With Sprocs

Ok, I have a question that I know is very opinionated (based on all the posts I have read), but I need help. Long story short, I have been using the following model for Data access for past few years. Database->Sprocs->XSD(Typed dataset, drag drop sproc in.net)-> In DAL project make functions to call created methods made by XSD, load all the data then map to projects business objects. The pros of this: 1) Easy drop drag to create SQL calls 2) Sprocs are almost a most due to other constraints and easy to add 3) Project uses own Business objects that fit the solution and not the database, I just map them in C# 4) Code mapping, easy to refactor 5) who doesn’t like everything to be typed and intellisensed Cons: 1) Slow to build 2)Slow to pull data (Table adapter and datasets have bad performance compared to a datareader) 3) Buggy when it comes to null vales. And boy can this krap be buggy and this wastes a lot of time. So that’s what I’ve been doing and not being an idiot, I realized there has to be better ways. So I have spent the last week looking at NHiberabte, LINQ to SQL, Entity Framework, or going back to doing it all with code with datareaders and untyped. SO, the question is what is a good database (sprocs likely to Objects) mapper . My thoughts on the 3 I looked at: 1)Linq to SQL – Well its only SQL and Microsoft pretty much has said it’s a dead technology, so seems pointless. 2) Entity Framework – I probably need more exposure to this one, but it seems like mapping this stuff to my own objects would put me back to where I was. 3) Nhibernate – Looked promising, but dam I hate writing XML files and my current projects have like 30 to 50 Business objects. Also, I have to use sprocs in various areas. Anyone’s suggestions or a really good link to a tutorial on a good ORM would be greatly appreciated. Sorry this question is so long. Thanks, Joe
