[site]: stackoverflow
[post_id]: 4896902
[parent_id]: 4896486
[tags]: 
Well if all the objects you would like to differentiate are round, you could even use a hough transformation for round objects. This is a very good way of distinguishing round objects. But your basic problem seems to be classification - sorting the objects on your image into different classes. For this you don't really need a Neural Network, you could simply try with a Nearest Neighbor match. It's functionalities are a bit like neural networks since you can give it several reference pictures where you tell the system what can be seen there and it will optimize itself to the best average values for each attribute you detected. By this you get a dictionary of clusters for the different types of objects. But for this you'll of course first need something that distinguishes a ball from a moon. Since they are all real round objects (which appear as circles) it will be useless to compare for circularity, circumference, diameter or area (only if your camera is steady and if you know a moon will always have the same size on your images, other than a ball). So basically you need to look inside the objects itself and you can try to compare their mean color value or grayscale value or the contrast inside the object (the moon will mostly have mid-gray values whereas a soccer ball consists of black and white parts) You could also run edge filters on the segmented objects just to determine which is more "edgy" in its texture. But for this there are better methods I guess... So basically what you need to do first: Find several attributes that help you distinguish the different round objects (assuming they are already separated) Implement something to get these values out of a picture of a round object (which is already segmented of course, so it has a background of 0) Build a system that you feed several images and their class to have a supervised learning system and feed it several images of each type (there are many implementations of that online) Now you have your system running and can give other objects to it to classify. For this you need to segment the objects in the image, by i.e Edge filters or a Hough Transformation For each of the segmented objects in an image, let it run through your classification system and it should tell you which class (type of object) it belongs to... Hope that helps... if not, please keep asking...
