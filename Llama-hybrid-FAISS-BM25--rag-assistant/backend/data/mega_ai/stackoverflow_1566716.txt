[site]: stackoverflow
[post_id]: 1566716
[parent_id]: 652449
[tags]: 
Brandon's answer is what I do. Furthermore, I rather like Rails's custom of one model per file. I don't stick to it completely but that is my basic pattern, especially since Python tends to encourage more-but-simpler lines of code than Ruby. So what I do is I make models a package too: models/ models/__init__.py models/user.py models/item.py models/blog_post.py In the main .py files I put my basic class definition, plus perhaps some helper functions (Python's module system makes it much safer to keep quickie helper functions coupled to the class definition). And my __init__.py stitches them all together: """The application models""" from user import User from item import Item from blog_post import BlogPost It's slightly redundant but I have lots of control of the namespace.
