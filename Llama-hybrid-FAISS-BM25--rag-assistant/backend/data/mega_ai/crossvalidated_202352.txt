[site]: crossvalidated
[post_id]: 202352
[parent_id]: 201790
[tags]: 
Once you obtain samples from the posterior $X_1, X_2, \dots, X_n$ and calculate the sample mean, $$s_n = \dfrac{1}{n} \sum_{i=1}^{n} X_i \to E(s), $$ your question now is, how much error have I made in estimating $E(s)$ (assuming $E(s)$ perfectly summarizes $s$). Thus you want to know the Monte Carlo error $$s_n - E(s). $$ Since you don't know $E(s)$, you cannot find that quantity exactly. However, if a Markov chain CLT exists, $$\sqrt{n}(s_n - E(s)) \overset{d}{\to}N(0, \sigma^2), $$ where $\sigma^2 > 0$ is the asymptotic variance of the Monte Carlo error. Thus, in order to understand the Monte Carlo error, you want to learn $\sigma^2$. $\sigma^2$ is tricky because it is not the posterior variance of $s$, and includes the correlation in the Markov chain. There are consistent estimators of $\sigma^2$ available using batch means or spectral variance methods. See http://arxiv.org/abs/math/0703746 http://arxiv.org/abs/0811.1729v5 http://arxiv.org/abs/math/0601446 $\sigma^2$ can be estimated using the R package mcmcse . Below I provide example code for a simple AR(1) Markov chain. The mcse function finds the estimatate of $\sigma/\sqrt{n}$. > library(mcmcse) > n x x[1] > # Ar(1) Markov chain > for(i in 2:n) + { + x[i] > # Batch means estimate of sigma/sqrt(n) and posterior mean > (st_error > # asymptotic variance is not equal to variance of s > sd(x)/sqrt(n) [1] 0.00343409 Thus, in this example code you will report the Monte Carlo standard error to be .00494, and that summarizes your Monte Carlo error. That is all you can say about the Monte Carlo error. If $s$ is of dimension larger than $1$ so that $E(s)$ is a vector, than the same idea can be repeated by looking at the multivariate Markov chain CLT $$\sqrt{n}(s_n - E(s)) \overset{d}{\to} N(0, \Sigma), $$ where now $\Sigma$ is the asymptotic covariance structure of the Monte Carlo error and can be estimated using batch means methods. See http://arxiv.org/abs/1512.07713 . For implementation, you can estimate $\Sigma$ using the mcse.multi function in the same package.
