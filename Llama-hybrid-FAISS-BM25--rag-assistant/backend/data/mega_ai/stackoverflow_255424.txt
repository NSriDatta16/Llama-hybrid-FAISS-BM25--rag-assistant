[site]: stackoverflow
[post_id]: 255424
[parent_id]: 255400
[tags]: 
This is like dynamic properties for a object. C# is not quite a dynamic language unlike javascript or maybe PHP can parse the object properties on the fly. The following two methods are what I can think of. The second one might fit into your requirements. The KISS Way The Keep It Simple Stupid way public class StorageObject { public string Name { get; set; } public string Birthday { get; set; } public List OtherInfo { get; set; } } You can have name value pairs which is separated by '|' OtherInfo = {"Hobbies|Programming", "Website|Stackoverflow.com"} Serialized forms Matthew Jan 1st, 2008 Hobbies|Programming Website|Stackoverflow.com The Dynamic Way in C# Make the name value pair part become an XML element so that you can build it dynamically. public class StorageObject { public string Name { get; set; } public string Birthday { get; set; } public XElement OtherInfo { get; set; } // XmlElement for dot net 2 } You can easily build up OtherInfo object as element centric e.g. XElement OtherInfo = new XElement("OtherInfo"); OtherInfo.Add( ..Hobbies xelement & text value..); OtherInfo.Add( ..WebSite xelement & text value..); The serialized form will be Programming Stackoverflow.com or build it as attribute centric XElement OtherInfo = new XElement("OtherInfo"); OtherInfo.Add( ..nvp xattribute Hobbies & value..); OtherInfo.Add( ..nvp xattribute WebSite & value..); For any dynamic language, it can access to the properties directly. For the rest, they can access the value by read the XML. Reading XML is well supported by most of framework.
