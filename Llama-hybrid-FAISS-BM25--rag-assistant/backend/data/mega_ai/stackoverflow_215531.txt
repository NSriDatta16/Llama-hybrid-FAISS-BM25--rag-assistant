[site]: stackoverflow
[post_id]: 215531
[parent_id]: 215383
[tags]: 
Not really, in my experience. From the way you've set up your views, there would seem to be a much more efficient way to determine which one was tapped: //In your init method, make sure each tile doesn't respond to clicks on its own ... tile.userInteractionEnabled = NO; ... - (void) touchesMoved: (NSSet *)touches withEvent:(UIEvent *)event { CGPoint tappedPt = [[touches anyObject] locationInView: self]; int xPos = tappedPt.x / (TILE_SPACING + TILE_PADDING); int yPos = tappedPt.y / (TILE_SPACING + TILE_PADDING); int tilesAcross = (self.bounds.size.width / (TILE_SPACING + TILE_PADDING)); int index = xPos + yPos * tilesAcross; if (index You need to more clearly decide what should happen in your parent, and what should happen in each tile. You mentioned above that you wanted the tiles to receive touchesBegan events, but you didn't include any code for this. As you presented this, you should probably think about using layers instead of views (if you're not doing any tile-specific event handling). What you've got here can all be done with event tracking within the parent. Keep in mind that if you have TOO many views (or layers), it's gonna get slow. We tried grids of 15x15 in Crosswords, and while it was okay for some things, eventually we gave up on the grid-of-layers approach. (Not sure why the numbering restarted with 1 here...)
