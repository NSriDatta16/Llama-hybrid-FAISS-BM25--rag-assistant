[site]: stackoverflow
[post_id]: 848684
[parent_id]: 848432
[tags]: 
This uses both Draggable and Droppable. The Draggable reverts to it's original position on drop. When dragging starts, the Draggable creates a function to specify where to insert the Droppable that the item gets dropped on. When the item is dropped the drop function inserts the dragged item after the item it was dropped on and invokes the insert function on the dropped item to move the Droppable to the correct position. $(function() { $('.item').draggable( { containment: 'parent', revert: true, revertDuration: 0, start: function() { var that = $(this); var previous = that.prev( '.item:last' ); var next = that.next( '.item:first' ); that.data( 'insert' , function(elem) { if (previous.size() > 0) { $(elem).insertAfter(previous); } else if (next.size() > 0) { $(elem).insertBefore(next); } }); } }); $('.item').droppable( { accept: '.item', drop: function(event, ui) { var elem = $(this); if (elem.siblings('.item').size() > 1) { ui.draggable.insertAfter(elem); var insert = ui.draggable.data('insert'); insert(elem); } else { // case where there are only two elements, swap var parent = elem.closest('.container'); var first = parent.children( '.item:first' ); var last = parent.children( '.item:last' ); last.insertBefore( first ); } } }); }); 1 2 3 4 5
