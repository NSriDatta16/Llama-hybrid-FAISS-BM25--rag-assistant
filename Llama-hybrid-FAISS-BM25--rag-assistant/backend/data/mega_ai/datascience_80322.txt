[site]: datascience
[post_id]: 80322
[parent_id]: 
[tags]: 
How to condition your neural network to seek a specific amount of output?

I transformed a time series with collection values ​​from 0 to 100 into a windows of 60 elements with averages and standard deviation , and counts 0-20 ... 80-100 of the next 30 readings, where each minute represents a collection, in a space timeless. Example: 1 - Divide the data into blocks of 60 elements, where each new block it moves 10 elements Example: 0 to 60, 10 to 70, 20 to 80 ... etc 2 - Then divide the blocks into 5 parts (12x5 = 60) 3 - Calculate average and deviation of each part 4 - Take the next 30 elements from each block of 60 elements Example: 60 to 90, 70 to 100, 80 to 110 ... etc 5 - Calculate how many readings there are from 0 to 100, grouping every 20 Example: 0 to 20, 20 to 40, 40 to 60, 60 to 80 and 80 to 100 (0 to 20) 12,18,11,14 = 4 (20 to 40) 20,25,23 = 3 ... The result would be a dataframe like this: 6 - I collect the largest element of each column and divide all elements of the column by it, generating binary values (0,1): My X consists of mean1,std1 ... mean5,std5 My Y consists of 0-20 ... 80-100 Learning model: cvscores = [] for train, test in kfold.split(X,Y): model = Sequential() model.add(Dense(10, kernel_regularizer=l2(0.001), kernel_initializer=VarianceScaling(), activation='sigmoid', name='hidden-input')) model.add(Dense(5, kernel_regularizer=l2(0.001), kernel_initializer=VarianceScaling(), activation='sigmoid', name='output')) model.compile(loss='mse', optimizer='adam', metrics=['mse']) model.fit(X.iloc[train].values, Y.iloc[train].values, epochs=100, batch_size=5, verbose = 0, validation_data=(X.iloc[test].values, Y.iloc[test].values)) scores = model.evaluate(X.iloc[test].values, Y.iloc[test].values, verbose=0) print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100)) cvscores.append(scores[1] * 100) print("%.2f%% (+/- %.2f%%)" % (np.mean(cvscores), np.std(cvscores))) y = model.predict(X) To finish the process I take the values ​​of y multiplied by the division values ​​of step 6, receiving this output: This neural network aims to answer the following question: In the next 60 readings, how many peaks of 80-100 will happen? My question is: how to use this model to have an output of the next 60 readings? Example: model.predict(X) = 60 readings Index: | 0 | 1 | ... | 58 | 59 | ------------------------------ Output: | 24 | 26 | ... | 42 | 45 | The shape it is in today gives me an output with 1003 lines the size of my data set, I would like to limit this network to working in search of only the next 60 readings, any suggestions?
