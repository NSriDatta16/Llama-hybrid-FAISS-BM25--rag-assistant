[site]: datascience
[post_id]: 76235
[parent_id]: 
[tags]: 
How to train neural network a math multiplication table?

I am trying to train neural network (brain.js) a multiplication table. It is not going too well: requires lots of hidden layers, iterations and very small error threshold, and the results are still incorrect. What am I doing wrong? console.clear(); let net = new brain.NeuralNetwork({hiddenLayers: [128]}); let training_data = [ {input:[2,2], output:[4/81]}, {input:[2,3], output:[6/81]}, {input:[2,4], output:[8/81]}, {input:[2,5], output:[10/81]}, ]; net.train(training_data, { errorThresh: 0.0000001, // error threshold to reach before completion iterations: 500000, // maximum training iterations log: true, // console.log() progress periodically logPeriod: 10000, // number of iterations between logging learningRate: 0.01 // learning rate }); for(let i = 2; i The output is: 2 * 2 = 4.265779517591 2 * 3 = 5.825156696140766 2 * 4 = 7.789406754076481 2 * 5 = 10.152319103479385 2 * 6 = 12.860703930258751 2 * 7 = 15.819618478417397 2 * 8 = 18.90912254154682 2 * 9 = 22.006048411130905 After receiving the answer from SRJ I have changed the neural net so, that it now has 4 hidden layers and receives 10 000 inputs: console.clear(); let net = new brain.NeuralNetwork({hiddenLayers: [4]}); let training_data = [ ]; for(let i = 0; i Still does not work. The output: "29 * 42 = 728.9011776447296". (while in reality should be 1218).
