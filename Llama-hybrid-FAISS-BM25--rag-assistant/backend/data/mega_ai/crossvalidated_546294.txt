[site]: crossvalidated
[post_id]: 546294
[parent_id]: 
[tags]: 
Uncertainty Estimation with Bayesian Inference

I am modeling a generalized extreme value distribution with the code below in PYMC3. I have defined my own distribution as the gev is still not available in pymc3. The function defined is the PDF of extreme value distribution. The priors are taken from the recommendations in the chapter 9 of the book "An Introduction to the Statistical Modelling of the extreme values"(2001) by Stuart Cole.With this prior setting, i am getting a lot of divergences which were corrected by setting target_accept=0.99. Now I want to perform prior predictive checks. I tried to do so as recommended in various tutorials with the in-built Pymc3 function but it keeps on giving me Key errors. Here is the posterior trace of the parameters. The aim of the posterior analysis is to compare the theoretical distribution (MLE) with the distribution obtained from parameters using Bayesian inference. The code is attached below. Many thanks def gev_logp(value, loca, sig, xi): scaled = (value - loca) / sig logp_xi_not_zero = -(tt.log(sig) + ((xi + 1) / xi) * tt.log1p(xi * scaled) + (1 + xi * scaled) ** (-1/xi)) logp_xi_zero = -tt.log(sig) + (xi+1)*(-(value - loca)/sig) - tt.exp(-(value - loca)/sig) logp = tt.switch(tt.abs_(xi) > 1e-4, logp_xi_not_zero, logp_xi_zero) return tt.sum(logp) with pm.Model() as model_gev: loca = pm.Normal('loca', mu=5, sigma=20) sig= pm.Normal('sig',mu=2, sigma=15) xi = pm.Normal('xi', mu=0, sigma=0.1) gev = pm.DensityDist('gev', gev_logp, observed = {'value':datin.data1, 'loca':local,'sig':sig, 'xi':xi}) trace = pm.sample(7000, cores=4, chains=4, tune=2500, return_inferencedata=True, idata_kwargs={"density_dist_obs": False}, target_accept=0.99[![enter image description here][1]][1])
