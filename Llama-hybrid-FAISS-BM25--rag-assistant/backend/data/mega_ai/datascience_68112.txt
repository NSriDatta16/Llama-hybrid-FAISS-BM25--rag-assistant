[site]: datascience
[post_id]: 68112
[parent_id]: 
[tags]: 
How can I make my own Neural Network model for Object Detection?

I'm using the ImageAI module in Python3 to do some object detection on some images I scraped from a video game. In testing, I am able to successfully detect normal world objects from a test photo of a bus and some people using a RetinaNet model that is trained for those normal world objects. However, my objects are not normal world objects such as buses, cars, people, etc. They are 2D models in a video game. Thus, I guess I need to try and build a new RetinaNet type model to load into object detection class. from imageai.Detection import ObjectDetection import os execution_path = os.getcwd() detector = ObjectDetection() detector.setModelTypeAsRetinaNet() detector.setModelPath( os.path.join(execution_path , "resnet50_coco_best_v2.0.1.h5")) detector.loadModel() How can I make my own model (.h5) trained to the objects I really want to detect? I hope this is not too broad. Majority of the information on object detection are using pre-defined models that are already trained to detect pretty common objects. They really don't go into depth of how you train your own models to use against objects that maybe are not ideally classified by these models.
