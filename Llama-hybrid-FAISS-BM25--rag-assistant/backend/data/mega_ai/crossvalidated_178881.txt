[site]: crossvalidated
[post_id]: 178881
[parent_id]: 178725
[tags]: 
There are plenty of indicators and tools to help you determine the number of clusters in your data. However, they may not be relevant for your dataset. Once your done with the elbow method, and the other indices you can easily find (for example, the R package NbClust and its documentation ). You can try a Bayesian non-parametric approach such as the one presented in the DP-means paper which in practice turns to be a simple modification of the $k$-means algorithm. You need still to deal with the parameter $\lambda$ (a penalization term of your variance cost) which determines if new clusters are likely to pop out or not. I think you can find many description of the elbow method, but in substance, you try several successive values of $K$ the number of clusters, and you plot the cost function value of the $k$-means for each of these $K$. If you can spot an elbow it indicates you the "right" number of clusters. Indeed, if you have a "wrong" $K$ your clusters are not meaningful and variance will decrease "smoothly", but if you go from a wrong $K_1$ to a "right" $K_2 = K_1 + 1$ you may spot a strong decrease in the variance of the clusters. Well, that's cooking. If you are willing to try cooking recipes, you can also play with "stability" of your clusters. If you pick a wrong $K$ your clusters will not be stable, and many runs may lead to different clustering. For a right $K$, you may always find the same clustering. So, you can run many k-means for several values of $K$ build a consensus matrix, that is a $N \times N$ matrix $M$ whose coefficient $M_{ij}$ says that $i$ and $j$ were put in the same cluster $M_{ij}$ times over your number of trials. 0 indicates that $i$ were never with $j$, 1 indicates that they were always put in the same cluster run a hierarchical agglomerative algorithm such as Average or Complete Linkage on this similarity matrix You will likely obtain a good dendrogram. Now, you can apply the elbow method to extract $K$ clusters according to the dendrogram (with dynamic programming cut or flat cut). Good luck, this problem is rather well documented on the web, but unsolved in the general case (which may be nonsense to consider).
