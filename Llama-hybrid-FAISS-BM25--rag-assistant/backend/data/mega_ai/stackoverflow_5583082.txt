[site]: stackoverflow
[post_id]: 5583082
[parent_id]: 5582963
[tags]: 
You could do a two-stage initialisation on SmallClass , namely having a constructor that gets it into a stable, but empty state and then have an init() function that turns the empty shell of SmallClass into a working and usable object. It's not the most elegant solution (I personally don't like two-stage initalisation as you can have objects floating around that aren't really usable) but it would work in your scenario. Another option might be to use a SmallClass * in BigClass and use a factory that creates SmallClass object and use that to control the dependency injection.
