[site]: crossvalidated
[post_id]: 459820
[parent_id]: 458022
[tags]: 
As NMDS is prone to converging to locally optimal solutions, not globally optimal ones, the metaMDS() helpers fit the NMDS from multiple random starts and then compare the fits of subsequent runs. If you get two runs that converge to essentially the same solution (assessed via procrustes rotation) then the metaMDS wrapper will declare convergence and terminate the random starts. If you don't it keeps running until you hit the pre-defined number of fits (set via argument trymax ). The key word above is random ; unless you fix the random seed before repeated calls to metaMDS() you'll get different random starts and potentially convergence to different results. That should worry you unless the differences are slight as it implies different local optima that are relatively broad so they keep being found. This isn't the only thing that metaMDS() does however and it is these extra things that the wrapper does when provided with community data that it doesn't do when provided with a dissimilarity matrix that is causing additional differences. library('vegan') data(varespec) dij If you run that you'll see that the scores for ord1 and ord2 are different > all.equal(scores(ord1, 'sites'), scores(ord2, 'sites')) [1] "Mean relative difference: 0.5419395" even though we fixed the seed. This is the result of the extra help things that metaMDS does. If we turn this off ( autotransform = FALSE ) and halfchange off and compare ord2 and ord3 then we get the same site scores > all.equal(scores(ord2, 'sites'), scores(ord3, 'sites')) [1] TRUE Although it is worth noting that the objects ord2 and ord3 are themselves not the same â€” there are other things that we can do if given the community data that we can't do (or don't do) if only given the dissimilarities, but these things don't affect the NMDS solution itself. With something as complex as metaMDS it really is helpful to read and understand the documentation; not everyone that uses this stuff and writes about it online is aware of the details, which do matter. I'm one of the vegan developers and I had to look some of this stuff up as it's not something I use often in my day job. Finally, note that computing the Bray-Curtis distances between your points is not the same as computing the beta diversity of your samples. For that to be true you'd have to be equating local and regional diversity as each sample being a region itself.
