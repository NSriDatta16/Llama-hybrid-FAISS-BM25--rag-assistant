[site]: datascience
[post_id]: 74242
[parent_id]: 73813
[tags]: 
I've done a bit of searching and have actually found a solution to this using tsfresh . You can find the sklearn transformers here: https://tsfresh.readthedocs.io/en/latest/text/sklearn_transformers.html Here is the code snippet from the example. pipeline = Pipeline( [ ('augmenter', RelevantFeatureAugmenter(column_id='id', column_sort='time')), ('classifier', RandomForestClassifier()) ] ) df_ts, y = load_robot_execution_failures() X = pd.DataFrame(index=y.index) pipeline.set_params(augmenter__timeseries_container=df_ts) pipeline.fit(X, y) We pass an empty dataframe to pipeline.fit and specify the input data as a parameter to the tsfresh transformer. df_ts and y have a totally different shape! :-)
