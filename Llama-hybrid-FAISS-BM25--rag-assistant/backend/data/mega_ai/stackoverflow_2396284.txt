[site]: stackoverflow
[post_id]: 2396284
[parent_id]: 2396201
[tags]: 
While the options aren't clear to me the way you described them, I will describe what is common practice. Probably the widest adopted (enterprise system) architecture uses some kind of database as a persistence layer, a middle layer with business logic and an interface (either rich client like swing or web interface) containing the view logic. The client only contains view state-related logic: event processing, notifications, data presentation, data binding etc. Things like data persistence, retrieval, validation are done by sending a request from the interface to the middle layer which then knows how to process the request, processes it and returns any results. This communication usually takes places in the form of web services or session bean method invocations.
