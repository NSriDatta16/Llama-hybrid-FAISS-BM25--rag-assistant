[site]: stackoverflow
[post_id]: 5234853
[parent_id]: 5234810
[tags]: 
Well, for one thing there's no point in creating a byte array and then ignoring it - so your code would be simpler as: byte[] byteEncString = Encoding.UTF8.GetBytes(_strToConvert); return Convert.ToBase64String(byteEncString); A .NET char can end up as 3 bytes when UTF-8 encoded 1 , so that gets to a 45 byte maximum. However, base64 converts 3 bytes to 4 characters, so that gives a 60 character maximum base64 encoded string as the result. 1 This is because any characters not in the basic multilingual plane are represented as a surrogate pair. That pair would end up as 4 bytes, but having taken 2 input characters, so the average "bytes per char " in that case is only 2.
