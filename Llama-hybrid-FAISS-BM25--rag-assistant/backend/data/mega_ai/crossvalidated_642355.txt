[site]: crossvalidated
[post_id]: 642355
[parent_id]: 
[tags]: 
Unit root testing in python

I have a time series (ploted below) which I want to test for the presence of unit root. The way I understand it, a time series with unit root have persistent, lasting effects after an unexpected change; whereas a time series with no unit root presents mean reversion. By that definition, it appears to me (at least visually) that my time series has no unit root in the range 1 , as the plot seems to 'recover' from the unexpected change at around x = 6 , keeping the linear trend growth after it. Similarly for the interval 16 , in which the time series returns to the trend after the change in x = 19 . Both these intervals appear, to me, similar to this example by Wikipedia. The time series does not seem, however, to be free of unit root in its complete x range ( 1 ), as there appears to exist a change in the trend at around x = 13 . So i have tried using from statsmodels.tsa.stattools import adfuller, kpss # ADF test def adf_test(time_series): result = adfuller(time_series, autolag = "AIC") print('ADF Test:') print('Test statistic:', result[0]) print('p-value:', result[1]) print('Critical values:') for key, value in result[4].items(): print(f' {key}: {value}') if result[1] 0.05: print("KPSS Test indicates no unit root") else: print("KPSS Test does not reject the possibility of a unit root") Which, when inputing the time series filtered to the interval 1 , outputs results contrary to my conclusions: ADF Test: Test statistic: 0.6173049555874962 p-value: 0.9880344900280655 Critical values: 1%: -3.5274258688046647 5%: -2.903810816326531 10%: -2.5893204081632653 ADF Test does not reject the possibility of a unit root KPSS Test: Test statistic: 0.16260745736221355 p-value: 0.03616045219815537 Critical values: 10%: 0.119 5%: 0.146 2.5%: 0.176 1%: 0.216 KPSS Test does not reject the possibility of a unit root In fact, I have inputted the time series filtered to the interval 1 (excluding the change at x = 6 ) and also np.arange(0, 1000, 10) (perfectly linear trend, with no changes) to both functions, and the results also indicate presence of unit root. Is my understanding of unit root wrong? Or maybe the python functions I've written? Has it got something to do with the fact that my time series is not stationary? If so, how can I test for the 'ability to recover from changes' (mean reversion) despite the fact that it is non-stationary?
