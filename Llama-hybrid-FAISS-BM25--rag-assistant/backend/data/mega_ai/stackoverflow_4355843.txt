[site]: stackoverflow
[post_id]: 4355843
[parent_id]: 4355812
[tags]: 
Even if your intention is to genericize the handling of different numeric types (e.g., double , decimal , etc.), this isn't the way to do it. When you box to object , and then unbox to T , it will only work if the boxed type actually is T . In other words, it will not perform a type conversion for you. The only way (that I know of) to do the type conversion from object to whatever you want is by using the Convert class: return (T)Convert.ChangeType(ad_id, typeof(T)); Even this is fragile, obviously (as it won't work if T is any non-numeric type); but at least it won't throw exceptions in pretty much all cases you're trying to cover. (Your method as it is currently implemented will throw for every T except int .)
