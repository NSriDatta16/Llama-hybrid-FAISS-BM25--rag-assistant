[site]: stackoverflow
[post_id]: 839515
[parent_id]: 839291
[tags]: 
Well, for two reasons really: Because of portability, since some systems won't do the virtual memory management for you. You'll inevitably need to divide this array into smaller chunks for it to be useful, then to keep track of all the chunks, then eventually as you start "freeing" some of the chunks of the array you no longer require you'll hit the problem of memory fragmentation . All in all you'll end up implementing a lot of memory management functionality (actually pretty much reimplementing the malloc) without the benefit of portability. Hence the reasons: Code portability via memory management encapsulation and standardisation. Personal productivity enhancement by the way of code re-use.
