[site]: datascience
[post_id]: 11803
[parent_id]: 
[tags]: 
What recommendation engine for a situation where users can only see a fraction of all items?

I want to add a recommendation feature to a document management system . It is a server on which most company documents are stored. Employees browse the web interface and click to download (or read online) the documents they want. Each employee only has access to a subset of all documents: My goal : Recommend to an employee the documents recently opened by their teammates, or the spreadsheet that serves as an annex to the document they just opened, or anything they might want to read. There are many recommendation engines for publicly available data (all Netflix users can see all movies), but the situation here is special: Each employee only has the permission to a fraction of all documents, whereas in Netflix any user has access to all movies. Example : Employee1 can read DocumentA but not DocumentB. Employee2 can read both and Employee3 cannot read any. Of course, I must not recommend to an employee documents to which she/he does not have access. Furthermore, I guess I should consider the popularity of a document only in the context of the employees who have access to it. To make things even more complicated, employees sometimes move from a project to another, which impacts the documents to which they have access. Is there a name for this kind of problem? Can it be reduced without precision/efficiency loss to a more common kind of problem? If not, what approach would work well for this kind of problem? Note: A Netflix-like recommendation engine is not good enough. A document with 50 views should be prominent if only 10 employees (including me) have access to it, but not prominent if 100000 employees have access to it. In case it is needed, here are a few data specifics: The average company has 1000 employees, about 10000 documents, an employee clicks about 5 documents per day. Each project has an average of 10 employees having access to it, and has about 100 documents. Each employee works on an average of 5 projects in parallel.
