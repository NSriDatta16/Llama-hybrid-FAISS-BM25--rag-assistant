[site]: stackoverflow
[post_id]: 3404751
[parent_id]: 3403751
[tags]: 
Wow, that's serious topic and so many answers are possible. In the industry, Ajax and client-side scription usage are as a productivity and maintainability issue as a GUI or usability tool. It's sometimes easier (especially in an MVC server environnement) to get only a part of content rahter than all content. But it's almost question of point of view I'll try to answer your 3 questions, just remember I'm like you in the sense I think many articles or book really lacks of balance (obviously, me too) : To me the main disadvantage of using heavy javascript on client (such as building all GUI in JS) versus serving HTML pages from server is the lack of control you get over errors, little graphical bugs, environnement differences, etc. You end up acting like a software vendor distributing desktop applications, you cant get real control over useability on client-side. Of course, this disadvantage can be almost totally struggled using a browser agonstic framework (like jQuery) and running rendering tests in many environnement. You should try both technicles, using Ajax is not always best and it can sometimes save your life (go build a dynamic tree with multiple selections and millions of branches with only HTML). I general I apply this rule : if user changes screen (ie between a listing and a form) I reload the whole page, if not I use Ajax. I must disagree, in web developement, client side scripting wil still keep being used for GUI stuff, except for offline web solutions (like Gears) there is no reason the browser embeds databases or hard business logic. Business layer is just too important to us to rely on browser to handle it. Data storage is on the same position (again to me) it has to be kept on servers. This separation of concerns is in my everyday job and I think these huge responsibilities can never be delegate to a browser, there is just too much insecurity, incompatibility, bugs issues. Server side shines at all stages I stated below, but as for data transfer format I prefer transferring directly HTML to browser or using JSON for any other structured data I need to pass. Using XML seems a little verbose to go for lightweight clients. If you can avoid iframe, do it, there is no reason to use them in 99.9% of cases I've saw. As a matter of conclusion, you're student, learn things that are interesting. If you prefer improve your knowledge on client side, do it, there is a lot to learn here (HTML parsers, DOM and JS apis, browser internals are really interresting to me). But you have to know in corporates I've worked for, the web as 2 meanings : communication and a support for business application GUIs. I currently work for web applications (intranet), we are 3 front end developers doing PHP and javascript while there are 20 people doing server side Java. Just to give you the place taken by GUI in professional wide scale apps.
