[site]: stackoverflow
[post_id]: 5238270
[parent_id]: 
[tags]: 
Android several Web Service Calls on load

I have been learning Android for the past 3 months or so. However, I haven't come across anything like this yet. I want to access several different web services when the application is initially loaded. The response from these web services should go into the DB for retrieval where needed in the application. I have a splash screen from which I am attempting to do this: public class SplashScreen extends BaseActivity { protected static final int SPLASH_DURATION = 2000; protected ContactInfoRetriever contactInfoRetriever = new ContactInfoRetriever(); public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.splash_screen); startSplashThread(); } private void startSplashThread() { Thread splashThread = new Thread() { @Override public void run() { try { Looper.prepare(); // fire off the calls to the different web services. updateContactInfo(); updateFooInfo(); updateBarInfo(); int waited = 0; while (waited { @Override protected ContactInfo doInBackground(String... params) { // this calls a class which calls a web service, and is then passed to an XML parser. // the result is a ContactInfo object return contactInfoRetriever.retrieve(); } @Override protected void onPostExecute(final ContactInfo result) { runOnUiThread(new Runnable() { public void run() { InsuranceDB db = new InsuranceDB(SplashScreen.this); // insert the ContactInfo into the DB db.insertContactInfo(result); } }); } } private class PerformFooTask extends AsyncTask { // similar to the PerformContactInfoSearchTask } private class PerformBarTask extends AsyncTask { // similar to the PerformContactInfoSearchTask } } I haven't been successful with this yet. What is the best way to do this? I don't need to update the UI thread when the tasks are completed. Does this mean I should be using something other than AsyncTask ? I read something about a Looper and Handler. Is this the correct thing to use? Any code samples would be wonderful. Thanks, Zack
