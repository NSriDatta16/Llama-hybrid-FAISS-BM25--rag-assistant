[site]: stackoverflow
[post_id]: 4410821
[parent_id]: 
[tags]: 
How can I modify an environment variable across all running shells?

I use Terminal.app and iTerm , both of which support running multiple shells simultaneously via multiple tabs and multiple windows. I often use this feature, but as a result, if I want to change an environment variable setting, I generally have to run the same command once in every single tab and window I have open -- as well as any new tabs or windows that I open in the future. Is it possible for my shells to communicate with each other such that I can change an environment variable once, and have that change propagate to all my other currently running shells? I know that I can statically set env variables in a startup file like .bashrc . I also know that I can have subshells inherit the environment of parent shells, either normally or via screen . Neither of those options address this question. This question is specifically about dynamically changing the environment of multiple currently-running shells simultaneously. Ideally, I'd like to accomplish this without writing the contents of these variables to disk at any point. One of the reasons I want to be able to do this is so that I can set sensitive information in an env variable, such as hashed passwords, and refer to them later on in other shells. I would like to be able to set these variables once when I log in, and be able to refer to them in all my shells until I log out, or until the machine is restarted. (This is similar to how ssh-agent works, but as far as I'm aware, ssh-agent will only store SSH keys, not env variables.) Is it possible to make shells communicate like this?
