[site]: crossvalidated
[post_id]: 220222
[parent_id]: 219825
[tags]: 
You can get shockingly far with just a few basic concepts. Notation, an explosion of variables etc... can make things look complicated, but the core idea of particle filtering is remarkably simple. Some basic probability that you would need to (and likely already do!) understand: Computing marginal distribution : $P(X = x) = \sum_i P(X = x, Y = y_i)$ Def. Conditional probability: $P(X \mid Y) = \frac{P(X,Y)}{P(Y)}$ Bayes Rule: $P(X \mid Y) = \frac{P(Y \mid X) P(X)}{P(Y)}$ Bayesian terms: eg. prior, likelihood, posterior (+1 @Yair Daon, I agree!) The basic steps of a particle filter are incredibly simple: First: Start with some beliefs about some hidden state. For example, you may start with the belief that your rocket is on the launch pad. (In a particle filter, beliefs about the hidden state will be represented with a cloud of points, each point denotes a possible value of the hidden state. Each point is also associated with a probability of the state being the true state.) Then you iterate the following steps to update from time $t$ to time $t+1$: Prediction step: Move forward location of points based upon law of motion. (eg. move points forward based upon rocket's current speed, trajectory etc...). This will typically expand out the cloud of points as uncertainty increases. Probability update step: Use data, sensor input to update probabilities associated with points using Bayes Rule. This will typically collapse back the cloud of points as uncertainty is reduced. Add some particle filtering specific steps/tricks. Eg. : Occasionally resample your points so that each point has equal probability. Mix in some noise, prevent your probability step (2) from collapsing your cloud of points too much (in particle filtering, it's important that there's at least one point with positive probability vaguely at your true location!) Example: Initialize your filter: - Look at your location, where you are standing. Now close your eyes. Then iterate: Take a step forward with your eyes closed. Prediction step: given past beliefs about where you were standing, predict where you are now standing given a step forward. (Note how uncertainty expands because your step forward with your eyes closed isn't super precise!) Update step: Use sensors (eg. feeling around, etc...) to update your beliefs about where you're standing. REPEAT! The probability machinery required to implement is basically just basic probability: Bayes rule, computing marginal distribution etc... Highly related ideas that might help understand the big picture: In some sense, steps (1) and (2) are common to any Bayesian filtering problem . Some highly related concepts to possibly read about: Hidden Markov model . A process is Markov if the past is independent of the future given the current state. Almost any time series is modeled as some kind of Markov process. A Hidden Markov Model is one where the state isn't directly observed (eg. you never directly observe the exact location of your rocket and instead infer it's location through a Bayesian filter). Kalman Filter . This is an alternative to particle filtering that's commonly used. It's basically a Bayesian filter where everything is assumed to be multivariate Gaussian.
