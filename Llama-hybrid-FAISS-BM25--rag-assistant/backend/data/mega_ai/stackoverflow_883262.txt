[site]: stackoverflow
[post_id]: 883262
[parent_id]: 877128
[tags]: 
I managed to do what I wanted by using the pListcompiler ( http://sourceforge.net/projects/plistcompiler ) open source porject. Using this compiler you can write the property file in a .plc file using the following format: plist { dictionary { key "StringsTable" value string "Root" key "PreferenceSpecifiers" value array [ dictionary { key "Type" value string "PSGroupSpecifier" key "Title" value string "AboutSection" } dictionary { key "Type" value string "PSTitleValueSpecifier" key "Title" value string "Version" key "Key" value string "version" key "DefaultValue" value string "VersionValue" key "Values" value array [ string "VersionValue" ] key "Titles" value array [ string "r" kRevisionNumber ] } ] } } I had a custom run script build phase that was extracting my repository revision to .h file as described by brad-larson here . The plc file can contain preprocessor directives, like #define, #message, #if, #elif, #include, #warning, #ifdef, #else, #pragma, #error, #ifndef, #endif, xcode environment variables. So I was able to reference the variable kRevisionNumber by adding the following directive #include "Revision.h" I also added a custom script build phase to my xcode target to run the plcompiler every time the project is beeing build /usr/local/plistcompiler0.6/plcompile -dest Settings.bundle -o Root.plist Settings.plc And that was it!
