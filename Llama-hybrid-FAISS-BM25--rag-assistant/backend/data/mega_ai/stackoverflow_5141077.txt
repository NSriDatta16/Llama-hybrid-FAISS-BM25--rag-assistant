[site]: stackoverflow
[post_id]: 5141077
[parent_id]: 5140924
[tags]: 
It will help to define methods for single and double taps (void) handleSingleTap {} (void) handleDoubleTap {} So then in touchesEnded you can call the appropriate method based on the number of taps, but only call handleSingleTap after a delay to make sure double tap has not been executed: -(void) touchesEnded(NSSet *)touches withEvent:(UIEvent *)event { if ([touch tapCount] == 1) { [self performSelector:@selector(handleSingleTap) withObject:nil afterDelay:0.3]; //delay of 0.3 seconds } else if([touch tapCount] == 2) { [self handleDoubleTap]; } } In touchesBegan , cancel all requests to handleSingleTap so that the second tap cancels the first tap's call to handleSingleTap and only handleDoubleTap will be called [NSObject cancelPreviousPerformRequestsWithTarget:self selector:@selector(handleSingleTap) object:nil];
