[site]: stackoverflow
[post_id]: 1709262
[parent_id]: 1708306
[tags]: 
First some preparation to have something to test with: CREATE TABLE People ( ID int PRIMARY KEY ,[Name] varchar(50) ,DateOfBirth datetime ,DateJoined datetime ,DateLeft datetime ) go -- some data to test with INSERT INTO dbo.People VALUES (1, 'Bob', '1961-04-02', '1999-01-01', '2007-05-07') ,(2, 'Sadra', '1960-07-11', '1999-01-01', '2008-05-07') ,(3, 'Joe', '1961-09-25', '1999-01-01', '2009-02-11') go -- helper table to hold years CREATE TABLE dimYear ( CalendarYear int PRIMARY KEY ) go -- fill-in years for report DECLARE @yr int ,@StartYear int ,@EndYear int SET @StartYear = 2000 SET @EndYear = 2009 SET @yr = @StartYear WHILE @yr Then a function to return person's age for each year, if the person is still an active member. -- returns [CalendarYear], [Age] for a member, if still active member in that year CREATE FUNCTION dbo.MemberAge(@DateOfBirth datetime, @DateLeft datetime) RETURNS TABLE AS RETURN ( SELECT CalendarYear, CASE WHEN DATEDIFF(dd, cast(CalendarYear AS varchar(4)) + '-01-01',@DateLeft) > 0 THEN DATEDIFF(yy, @DateOfBirth, cast(CalendarYear AS varchar(4)) + '-01-01') ELSE -1 END AS Age FROM dimYear ); go And the final query: SELECT a.CalendarYear AS "Year" ,a.Age AS "Age" ,count(*) AS "Number Of Lives" FROM dbo.People AS p CROSS APPLY dbo.MemberAge(p.DateOfBirth, p.DateLeft) AS a WHERE a.Age > 0 GROUP BY a.CalendarYear, a.Age
