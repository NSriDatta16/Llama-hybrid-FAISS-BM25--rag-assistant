[site]: stackoverflow
[post_id]: 5367443
[parent_id]: 3876646
[tags]: 
I was wanting to do the same in my own app, but I was also a bit clueless on how this was done in the Twitter app. After having a long play with that cell in the Twitter app, trying to break it to see what it'd do (eg, pressing multiple buttons at the same time, scrolling while tapping etc XD), I think I've figured out how it's done. From what I can see, it's a single UITableViewCell (ie spanning multiple lines) with a special custom contentView added into it that renders everything in there (text, lines etc). When a user taps the cell, the custom view works out which region of the overall cell was tapped (Possible by intercepting touchesBegan in the custom view class), and then redraws that particular region as highlighted (probably entirely within drawRect). Since if you look VERY closely, the highligthed blue background overlaps the cell curved corner slightly (denoting it's being drawn over the top), my guess is the custom cell is also personally rendering the highlighted blue background (As opposed to the UITableViewCell doing it as per usually). Hope that helped. It's not a very elegant solution, but it should hopefully do the trick.
