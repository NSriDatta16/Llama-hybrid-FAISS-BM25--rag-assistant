[site]: stackoverflow
[post_id]: 2400311
[parent_id]: 2400254
[tags]: 
There are a few problems in your program: You are using the same index into expr and temp arrays. This works for the first time since both will be 0 to start with but when you want to process the 2nd number, you need to reset the index into the temp array back to 0 . Clearly this cannot be done using a single index. You'll have to use two indices, i and j . By the time you complete the processing of the 2nd number ( 34 in "12 34" ) you'll reach the end of the string and hence the sscanf never gets run on the second occasion ( in general for the last occasion). So after the for loop you need another sscanf to extract the last number. Also you should return from the function once you've extracted the number from the string and incremented i. You should avoid using gets () and use fgets () instead because of security reasons. You can combine the multiple test for the digits into a single test as shown: Something like this. void copyTemp(char *expr,char *temp){ int i; int j = 0; for(i = index_counter; expr[i] != '\0'; i++){ if (expr[i] >= '0' && expr[i] After these changes it works as expected: $ gcc b.c 2> /dev/null && ./a.out 12 34 Expression: 12 34 Temporary: 12 number is: 12 Expression: 12 34 Temporary: 34 number is: 34 Your approach is very fragile...if a user gives multiple spaces between the input numbers..your program will fail.
