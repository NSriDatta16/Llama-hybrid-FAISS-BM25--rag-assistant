[site]: stackoverflow
[post_id]: 1065956
[parent_id]: 
[tags]: 
Flow Chart to model inspection process in .NET winform application

We're writing a .NET winform application and I'm looking for options on one of the features. The end user for this system will be defining inspection processes which need to be easy to follow and will be used to show inspectors their options when inspecting a product as well as to drive the inspection module on which questions need to be asked to an inspector as they perform their duties and issue a certificate. I'd like to be able to find a flowchart addin so that admin users can create something like this (sorry, I can't find an image hosting site that work hasn't blocked) and the data generated from the flowchart (XML or something similar, don't care what the output is as long as I can parse it). This way I have something graphically to show inspectors as well as being able to generate the necessary pages when the inspector is doing the work. I've evaluated Windows WF PageFlow however in their whitepaper they state that you can only have one workflow per asp.net application. There are many products and each will need their own workflow. As a solution it's also a little complex for the average end user. Another option that's been discussed is to just use words and have a logic builder interface that we would develop ourselves where the whole flow would be written out with if/else statements (almost like pseudo code). However IMO it makes that flow difficult to see for the inspectors who are actually doing the inspections. So my question is does anybody know of any other options that would solve this issue? Ideally I'd like to offer up a free solution, however as we're evaluating options, I can also bring forward commercial solutions. Our environmnet is VB.NET running the 3.0 .NET runtime, The admin console (currently being built) is a Winforms application, The client component will be ASP.NET. If a solution only works in .NET 3.5 I'd like to hear about it as well please. Fixing this issue would justify migrating to the later version of .NET
