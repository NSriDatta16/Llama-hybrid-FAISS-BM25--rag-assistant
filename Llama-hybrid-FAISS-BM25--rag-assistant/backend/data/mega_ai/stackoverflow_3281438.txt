[site]: stackoverflow
[post_id]: 3281438
[parent_id]: 852498
[tags]: 
Having started on asp.net webforms and shifted to asp.net mvc I can comfortably say I much prefer asp.net mvc. Some people will prefer webforms whilst some people will prefer mvc. Webforms has been around a long time and has a very rich community and there are countless user controls you can download and buy. Webforms feels very familar to Winforms developers and anybody that has had any experience in event based programming. Webforms in my opinion however, is quite heavyweight. It pulls the wool over your eyes to deliver you an experience coding asp.net pages that feels somewhat like creating a windows application. Drag controls onto a page (or write the markup yourself) and register event handlers for OnClick etc. and databind datasources etc. In order to get a good grasp of Webforms you need to have a good understanding on the asp.net page lifecycle and all the events that occur. This is paramount to ensuring you databound your controls at the correct stage of the page life cycle, restore viewstate correctly etc. It's a webforms learning curve. As others have stated MVC requires more knowledge of html, javascript/JQuery, CSS and a general understanding of the model, view, controller paradigm. Whilst asp.net webforms 4 I believe? has made in roads at producing slightly cleaner html, you still have the issue with complex pages of bloated viewstate, ugly looking html etc. What is nice is using a framework like ASP.NET MVC but then leveraging some webforms controls like charting, report server. Rather than placing these directly into your view as you would a page in asp.net mvc however, it's best to abstract away the webforms components from MVC and have them return an image or FileContentResult or something similar.
