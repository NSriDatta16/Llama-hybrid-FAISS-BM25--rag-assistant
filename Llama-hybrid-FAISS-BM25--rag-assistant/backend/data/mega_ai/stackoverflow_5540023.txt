[site]: stackoverflow
[post_id]: 5540023
[parent_id]: 
[tags]: 
How do I force a namespace prefix on an attibute in a SOAP request created using suds

I am using python suds (version: 0.3.9 GA build: R659-20100219) to interact with a SOAP service with the following structure: Service ( DPWSService ) tns="http://ejb.revitalization.services.ndg/" Prefixes (1) ns0 = "http://ejb.revitalization.services.ndg/" Ports (1): (DPWSPort) Methods (13): addTimer(request request, ) deleteProvider(request request, ) deleteTimer(request request, ) doHarvest(request request, ) doIngest(request request, ) doNewUpdateProvider(request request, ) getHarvestHistory(GetHistoryRequest request, ) getIngestHistory(GetHistoryRequest request, ) getList(GetListType request, ) getListNames() getProviderDetails(request request, ) getProviderStatistic(request request, ) getStatusProcess(request request, ) Types (63): AddTimerResponse CSWProviderDetailsType ConfirmationType ContactType DataRangeType DeleteProviderResponse DeleteTimerResponse DoHarvestResponse DoIngestResponse DoNewUpdateProviderResponse EmailContactType GetHarvestHistoryResponse GetHistoryRequest GetIngestHistoryResponse GetListNamesResponse GetListResponse GetListType GetProcessStatusResponse GetProviderDetailsResponse GetProviderStatisticResponse HarvestHistoryType HarvestProviderType HarvestType IngestHistoryType ListNames OAIProviderDetailsType ProcessIDType ProviderCommonType ProviderContactType ProviderDetail ProviderDetailsType ProviderIDType ProviderStatistic ResponseType TimerInfoCommonType TimerInfoDetail TimerInfoLogDetail addTimer addTimerResponse deleteProvider deleteProviderResponse deleteTimer deleteTimerResponse doHarvest doHarvestResponse doIngest doIngestResponse doNewUpdateProvider doNewUpdateProviderResponse getHarvestHistory getHarvestHistoryResponse getIngestHistory getIngestHistoryResponse getList getListNames getListNamesResponse getListResponse getProviderDetails getProviderDetailsResponse getProviderStatistic getProviderStatisticResponse getStatusProcess getStatusProcessResponse I need to send a SOAP request with a structure like below: 1031 That is, I need to append the target namespace in front of the id attribute. If I don't the request fails :( I have tried several ways to create my doIngest request object, but I can only create a request like below: 1031 That is, without the target namespace prefix on the id attribute. I have tried variants of: request = wsClient.factory.create('doIngest.request') request.EmailReportID = "1031" request.ProcessID = wsClient.factory.create('ProcessIDType') request.ProcessID._id= "1430" result=wsClient.service.doIngest(request) and: request = wsClient.factory.create('{http://ejb.revitalization.services.ndg/}doIngest.request') request.EmailReportID = "1031" request.ProcessID = wsClient.factory.create('{http://ejb.revitalization.services.ndg/}ProcessIDType') request.ProcessID._id="1430" result=wsClient.service.doIngest(request) and: request = wsClient.factory.create('doIngest.request') request.EmailReportID = emailIDs request.ProcessID = wsClient.factory.create('ProcessIDType') request.ProcessID._id = wsClient.factory.resolver.qualify('{http://ejb.revitalization.services.ndg/}_id') request.ProcessID._id=procID result=wsClient.service.doIngest(request) but I get the same SOAP request The WSDL tells me: and which shows that the id does want the namespace prefix. The question is therefore, how do I force the namespace prefix onto my id attibute? Thanks to Gandi Solution was therefore: Update Suds to 0.4 (as MessagePlugin was not available in version: 0.3.9) then: class MyPlugin(MessagePlugin): def marshalled(self, context): ProcIDnode = context.envelope.getChild('Body').getChild('doIngest').getChild('request')[0] #Get the value of the id attribute ProcIDattVal = ProcIDnode.get('id') #Remove the errant id, used as a tidy-up stage ProcIDnode.unset('id') #Get the namespace prefix for the target namespace ProcIDnspref = ProcIDnode.findPrefix('http://ejb.revitalization.services.ndg/') #Create the new attribute name with namespace prefix applied newProcIDattname = ProcIDnspref + ':id' #Insert the new attribute. ProcIDnode.set(newProcIDattname,ProcIDattVal)
