[site]: crossvalidated
[post_id]: 524683
[parent_id]: 
[tags]: 
Correct methodology using $g$-computation to estimate Average Treatment Effect on the Treated ($ATT$)?

I have a question about the $g$ -computation methodology for estimating the Average Treatment Effect on the Treated ( $ATT$ ) in the following article . The authors recommend estimating the $ATT$ by first performing a regression model for $Y$ on the binary treatment $A$ and covariates $X$ , then finding $E(Y^1|A=1)$ from the observed values of $Y|A=1$ and estimating the counterfactual $E(Y^0|A=1)$ by imputing the predicted value of $Y$ from the regression formula by substituting $A=0$ into the regression formula, but only for the observed $A=1$ records. So far so good. For the next step, Wang et al. stack the records with the $E(Y^1|A=1)$ and $E(Y^0|A=1)$ estimates into a single dataset coupled with their $A$ values of 1 and 0, respectively. They then regress $Y$ on $A$ , where $ATT$ is estimated from the regression coefficient on $A$ . Rather than regress $Y^*$ on $A$ why not simply compute the average of the difference $E(Y^1|A=1) - E(Y^0|A=1)$ for all records where $A=1$ ? When I run a simulation the two methods return different results for the ATT point estimates - see R code below on a simulated dataset. # Simulation data from "Targeted Maximum Likelihood Estimation for Causal Inference in # # Observational Studies", Schuler & Rose, 2016. # x1 $A==1,] df_a0 A = 0; y_a0 = predict(lm_test, newdata=df_a0) y_a1 = df_trmt$Y df_preds $att att) # [1] -0.284822 $att)/length(df_preds$ att)) # [1] 0.08707805 # Alternate g-computation calculation of ATT (based on Wang et al. (2017) article). # df_a0_2 = data.frame(cbind(Y=y_a0, A=df_a0 $A)) df_a1_2 = data.frame(cbind(Y=y_a1, A=df_trmt$ A)) df_preds_2 |t|) # (Intercept) 25.1946 0.1265 199.207
