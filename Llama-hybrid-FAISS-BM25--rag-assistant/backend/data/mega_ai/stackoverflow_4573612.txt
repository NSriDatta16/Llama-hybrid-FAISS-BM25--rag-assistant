[site]: stackoverflow
[post_id]: 4573612
[parent_id]: 
[tags]: 
error C2593: 'operator <<' is ambiguous

i have some problems with template operator class Manager { multiset AddToSend; LinkedList ClientList; LinkedList ActiveClientList; list initList; list commandsList; } in this class i try to use this method: void Manager:: PrintAllClientDetialsTofile() { ofstream myfile; myfile.open ("Result.txt",ios::app); myfile my template ostream & operator & listToprint) { Link * tmp = listToprint->pm_head; for(int i=0;i m_data); tmp=tmp->m_next; } return os; } i also have template class template class Link { private: T* m_data; Link* m_next; Link* m_prev; the client class: #pragma once #ifndef _CLIENT_H_ #define _CLIENT_H_ #include #include #include "Advertising.h" #include "Email.h" #include "FaceBook.h" #include "Msn.h" #include "Sms.h" #include "Bill.h" #include #include "LinkedList.h" using namespace std; struct CompareAddPtrClient : public std::binary_function { bool operator()(Advertising* x, Advertising* y) const { if(x->GetMadeOrderTime() GetMadeOrderTime()) return true; else return false; } }; class Client { string m_clientname; string m_companyName; string m_cod;//check if have length of 15 string m_telephone; string m_email; int m_lastOrder; int m_orderUntill; multiset m_clientsAdds; LinkedList BillsForClient; public: Client(string clientName,string companyName,string cod,string telephone,string email); Client(string clientName); ~Client(void); //getters LinkedList * GetClientsBills(){return &BillsForClient;} const string GetTelephoneNum()const {return m_telephone;} const string GetEmail()const{return m_email;} const int GetClientUntill()const{return m_orderUntill;} const int GetLastOrderTime()const{return m_lastOrder;} //setters void UpdateLastTimeMadeOrder(int theday){m_lastOrder=theday;} void UpdateOrderUntill(int theday){m_orderUntill=theday+7;} //functions friend ostream & operator when i use this function to print my list i get compile error: error C2593: 'operator i found similar question that was asked the question but i don't understand how to solve this problem. thank you :)
