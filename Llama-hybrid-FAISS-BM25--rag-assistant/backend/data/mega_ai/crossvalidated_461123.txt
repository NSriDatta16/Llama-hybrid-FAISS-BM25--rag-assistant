[site]: crossvalidated
[post_id]: 461123
[parent_id]: 
[tags]: 
Methods or processes for discovering the major reasons for linear regression coefficients?

Other than inspecting data at random, what are some statistical or graphical processes or methods for determining the major reasons for coefficients in linear regressions? Example Suppose we have the iris dataset, and regress Sepal.Length = Sepal.Width + Petal.Length + Petal.Width + Speciesversicolor_dummy + Speciesvirginica_dummy giving Coefficients: (Intercept) Sepal.Width Petal.Length Petal.Width 2.1713 0.4959 0.8292 -0.3152 Speciesversicolor_dummy Speciesvirginica_dummy -0.7236 -1.0235 When inspecting the dummy variables, the result looks odd at first glance, since the omitted Species, setosa, appears to increase the prediction by 2.1713 ( given by the intercept ), and the other two species (versicolor and virginica) have negative coefficients, despite their average Sepal.Length being much higher than that of setosa. Species ave_sep_len 1 setosa 5.01 2 versicolor 5.94 3 virginica 6.59 This seemed odd, until I inspected the other variables, which showed the full picture: Species ave_sep_len ave_sep_wid ave_pet_len ave_pet_wid 1 setosa 5.01 3.43 1.46 0.246 2 versicolor 5.94 2.77 4.26 1.33 3 virginica 6.59 2.97 5.55 2.03 and it becomes evident that the massive difference in ave_pet_len is driving a huge amount of the difference in the estimates, so much so that the dummy variables are pushed into having counter-intuitive sign. Question I learned of the main driver(s) of the coefficients through manual inspection, and the dataset was sufficiently small as to allow this, but on larger datasets this may not be viable. What methods (statistical, graphical or otherwise) are commonly used for larger datasets? Note Here is some R code to reproduce if desired library(dplyr) # With Species Species_Dummies $Species - 1) %>% as.data.frame %>% select(-1) %>% # Remove first column and let whatever it was be the 'base' model `colnames ") %>% sapply(function(x) { paste0(x[2], "_dummy") } )) # Give columns nice names (fit % group_by(Species) %>% summarise(ave_sep_len = mean(Sepal.Length), ave_sep_wid = mean(Sepal.Width), ave_pet_len = mean(Petal.Length), ave_pet_wid = mean(Petal.Width)) # Species ave_sep_len ave_sep_wid ave_pet_len ave_pet_wid # 1 setosa 5.01 3.43 1.46 0.246 # 2 versicolor 5.94 2.77 4.26 1.33 # 3 virginica 6.59 2.97 5.55 2.03
