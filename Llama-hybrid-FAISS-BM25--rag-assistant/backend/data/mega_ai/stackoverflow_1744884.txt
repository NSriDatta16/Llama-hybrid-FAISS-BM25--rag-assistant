[site]: stackoverflow
[post_id]: 1744884
[parent_id]: 1743999
[tags]: 
A word of warning, when returning a reference: pay attention to the lifetime of whatever you're returning. This example is bad: int &function() { int x; // BAD CODE! return x; } ... function() = 10; x doesn't exist outside of function , and neither do any references to it. In order to return a reference from a function, the object being referred to has to last at least as long as the reference. In the above example, x would need to be declared static. Other possibilities would be making x a global variable, or making function a class member function and returning a reference to a class member variable, or allocating x on the heap and returning a reference to that (although that gets tricky with deallocation)
