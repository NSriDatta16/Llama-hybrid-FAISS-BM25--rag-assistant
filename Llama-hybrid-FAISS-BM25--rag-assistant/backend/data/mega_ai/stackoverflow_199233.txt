[site]: stackoverflow
[post_id]: 199233
[parent_id]: 194289
[tags]: 
What I've gathered from the responses so far: For chess board data representations: See the Wikipedia article on [chess board representations]( http://en.wikipedia.org/wiki/Board_representation_(chess)) . For chess move data representations: See the Wikipedia articles on Portable Game Notation and Algebraic Chess Notation For chess rules representations: This must be done using a programming language. If one wants to reduce the amount of code written in the case where the rules will be implemented in more than one language then there are a few options Use a language where an embedable interpreter exists for the target languages (e.g. Lua, Python). Use a Virtual Machine that the common languages can compile to (e.g. IronPython for C#, JPython for Java). Use a background daemon or sub-process for the rules with which the target languages can communicate. Reimplement the rules algorithms in each target language. Although I would have liked a declarative syntax that could have been interpreted by mutliple languages to enforce the rules of chess my research has lead me to no likely candidate. I have a suspicion that Constraint Based Programming may be a possible route given that solvers exist for many languages but I am not sure they would truly fulfill this requirement. Thanks for all the attention and perhaps in the future an answer will appear.
