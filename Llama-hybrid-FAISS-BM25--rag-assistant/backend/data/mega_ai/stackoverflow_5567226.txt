[site]: stackoverflow
[post_id]: 5567226
[parent_id]: 5533945
[tags]: 
I don't know how to exactly solve this, but it's very interesting. I think you need every different processing unit in the GPU: Vertex shader Throw a normal line of points to your vertex shader. Let the vertex shader displace the points to the bezier. Geometry shader Let your geometry shader create an extra point per vertex. foreach (point p in bezierCurve) new point(p+(0,thickness,0)) // in tangent with p1-p2 Fragment shader To stroke your bezier with a special stroke, you can use a texture with an alpha channel. You can check the alpha channel on its value. If it's zero, clip the pixel. This way, you can still make the system think it is a solid line, instead of a half-transparent one. You could apply some patterns in your alpha channel. I hope this will help you on your way. You will have to figure out things yourself a lot, but I think that the Geometry shading will speed your bezier up. Still for the stroking I keep with my choice of creating a GL_QUAD_STRIP and an alpha-channel texture.
