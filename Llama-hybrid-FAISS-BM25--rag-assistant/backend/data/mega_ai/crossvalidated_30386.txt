[site]: crossvalidated
[post_id]: 30386
[parent_id]: 30385
[tags]: 
Can't you do this just by choosing an appropriate distance metric? You then should be able to use any clustering algorithm that uses distances - single-linkage, average-linkage, DBSCAN, OPTICS, even k-medoids. For example, you could use the distance function $$ d(a,b) := \alpha |x(a) - x(b)|^2 + (1-\alpha) \sqrt{\sum_{i=1}^{5} |c_i(a)-c_i(b)|^2}$$ Where $\alpha$ controls the balance between locality (which is deliberately squared, to punish larger differences more) and a similar shape using euclidean distance on attributes $c_1$ to $c_5$. If you want an even more flexible approach, you could give GDBSCAN a try (Generalized DBSCAN). For this you need to define when two objects are similar (e.g. distance in x) along with a predicate when it starts/continues a cluster (e.g. similarity in the coefficients to the neighbours).
