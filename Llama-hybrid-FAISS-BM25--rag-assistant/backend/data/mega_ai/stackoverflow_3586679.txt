[site]: stackoverflow
[post_id]: 3586679
[parent_id]: 3568098
[tags]: 
What if I just use the script tag hack by itself and communicate strictly in JSON? Is that safe? If not, why not? Lets say you have two servers - frontend.com and backend.com. frontend.com includes a tag like this - . when the browser evaluates code.js is considered a part of frontend.com and NOT a part of backend.com . So, if code.js contained XHR code to communicate with backend.com, it would fail . Would it be any more safe with HTTPS? Example scenarios would be appreciated. If you just converted your to https, it would NOT be any secure. If the rest of your page is http, then an attacker could easily man-in-the-middle the page and change that https to http - or worse, include his own javascript file. If you convert the entire page and all its components to https, it would be more secure. But if you are paranoid enough to do that, you should also be paranoid NOT to depend on an external server for you data. If an attacker compromises backend.com, he has effectively got enough leverage on frontend.com, frontend2.com and all of your websites. In short, https is helpful, but it won't help you one bit if your backend server gets compromised. So, what are my options? Add a proxy server on each of your client applications. You don't need to write any code, your webserver can automatically do that for you. If you are using Apache, look up mod_rewrite If your users are using the latest browsers, you could consider using Cross Origin Resource Sharing . As The Rook pointed out, you could also use Flash + Crossdomain. Or you could use Silverlight and its equivalent of Crossdomain. Both technologies allow you to communicate with javascript - so you just need to write a utility function and then normal js code would work. I believe YUI already provides a flash wrapper for this - check YUI3 IO What do you recommend? My recommendation is to create a proxy server, and use https throughout your website.
