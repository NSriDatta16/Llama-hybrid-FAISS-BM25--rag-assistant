[site]: crossvalidated
[post_id]: 390667
[parent_id]: 85909
[tags]: 
Indeed, plm will not allow you to run a FE model, when there is a lower-level unit (i.e. you want household instead of individual, country instead of states etc). And indeed, there's nothing wrong about doing what you want. The trick in this case is just to make the time variable unique, crossing it with the sub-level unit: make a time-individual if you do at household level, or state-year if you do at region level. See similar post: https://stackoverflow.com/questions/43510067/fixed-effects-plm-package-r-multiple-observations-per-year-id/43573731 library(plm) #> Loading required package: Formula data("Produc", package = "plm") Produc $year_state year, Produc$state, sep="_") ## will throw warning Produc_plm Warning in pdata.frame(Produc, index = c("region", "year")): duplicate couples (id-time) in resulting pdata.frame #> to find out which, use e.g. table(index(your_pdataframe), useNA = "ifany") ## will throw error: reg_plm_1 Warning: non-unique values when setting 'row.names': '1-1970', '1-1971', #> '1-1972', '1-1973', '1-1974', '1-1975', '1-1976', '1-1977', '1-1978', #> '1-1979', '1-1980', '1-1981', '1-1982', '1-1983', '1-1984', '1-1985', #> Error in `.rowNamesDF Use the trick instead: Produc_plm2 Let's check with package lfe if we got it right: library(lfe) #> Loading required package: Matrix #> #> Attaching package: 'lfe' #> The following object is masked from 'package:plm': #> #> sargan library(broom) reg_lfe_1 [1] TRUE
