[site]: stackoverflow
[post_id]: 2407006
[parent_id]: 2406567
[tags]: 
For read-only properties I use the decorator, else I usually do something like this: class Bla(object): def sneaky(): def fget(self): return self._sneaky def fset(self, value): self._sneaky = value return locals() sneaky = property(**sneaky()) update: Recent versions of python enhanced the decorator approach: class Bla(object): @property def elegant(self): return self._elegant @elegant.setter def elegant(self, value): self._elegant = value
