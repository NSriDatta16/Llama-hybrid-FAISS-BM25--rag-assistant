[site]: crossvalidated
[post_id]: 231160
[parent_id]: 231092
[tags]: 
To add to the excellent suggestions above, I would say if you are interested in getting a firm grasp on more basic concepts in probability and statistics, "From Algorithms to Z-Scores: Probabilistic Computing in Statistics" is an excellent primer on using computers to understand some of the most important beginner/intermediate concepts in probability theory and stochastic processes. I'll also second either "An Introduction to Statistical Learning" or "Elements of Statistical Learning" (ESL) as an introduction to machine learning (ML). I think ESL in particular is amazing, but it does take a much more mathematics-heavy look at the ML concepts, so if you only consider yourself "okay" at stats, you might want to give it a read once you've gotten more experience with ML. If you're interested in Machine Learning for the sake of being employed or solving problems, getting hands-on experience is key. Take some introduction to data science/machine learning courses. Andrew Ng does an amazing introduction to machine learning in his course at Coursera here . I would also suggest you download some datasets and start playing around with them. If you haven't already, download R and RStudio (in my opinion, more friendly to beginners than Python or Matlab), and sign up at kaggle and do some of their beginner problems. They have great walkthroughs that can get you using ML with basically no idea what's actually happening, but it gives you an idea about the kind of steps you'd need to take to actually implement an ML solution. I'd personally encourage a combination of starting off using ML tools without really knowing what they do (using Kaggle datasets or similar); and learning fundamental concepts like cross-validation, overfitting, using confusion matrices, different measures of how good a model is, etc. To me, it's much more important to know how to use the algorithms, and knowing how to identify when things are working/aren't working, than it is to understand how the algorithms work.
