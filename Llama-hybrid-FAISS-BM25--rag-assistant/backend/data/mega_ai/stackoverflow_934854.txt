[site]: stackoverflow
[post_id]: 934854
[parent_id]: 
[tags]: 
How to disable warnings 4510 and 4610 from std::list class?

I have a bunch of warnings C4510 and C4610 when I use std::list with my class. It is a warning stating that default constructor is not available, and I want to disable them. When I put: #pragma warning(disable: 4510) inside .cpp file that is instantiating this list nothing happens. I tried placing this pragmas around function where I instantiate lists and even on top of the .cpp file but the results are the same - nothing happens. It only works if I disable warnings in properties dialog of .cpp file. I hate hiding stuff in properties like that because they get overlooked by developers. I would like to have them localized around the function. Is there something I could do about this? EDIT: Ok. This is how my code basically looks like. This code generates warnings 4510 and 4610 on warning level 4: #include class foo { public: foo(int) { } }; class bar {}; class problem_class { foo m_foo; const bar *m_bar; public: problem_class(const foo &_foo, const bar *_bar) : m_foo(_foo), m_bar(_bar) { } }; void problem_fn(std::list &problem_collection) { foo _foo(3); problem_collection.clear(); problem_collection.push_back(problem_class(_foo, new bar)); } int main(int , char **) { std::list collection; problem_fn(collection); return 0; }
