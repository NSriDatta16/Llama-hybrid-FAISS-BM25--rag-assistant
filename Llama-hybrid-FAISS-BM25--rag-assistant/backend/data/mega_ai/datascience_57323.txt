[site]: datascience
[post_id]: 57323
[parent_id]: 57322
[tags]: 
~ If we consider the problem as an image classification task, Basically, we can use a CNN trained on images belonging to 7 classes ( which represent the steering levels ). We give an image to the CNN and it outputs a steering level. This is a classification problem which will take each frame ( image ) of the video and output the steering level. So as the car steers the probability for the centre steering level will increase assuming that the road is straight after taking the turn. See multiclass image classification . ~ else, if we train an agent for the problem ( reinforcement learning ), Reinforcement learning requires an agent ( in our case, the car ) which produces some action ( steering levels ) in an environment ( street, road etc. ) and gets an reward accordingly. The rewards need to be maximized. We will have a CNN which encodes an image to a vector representation. So, consider two cases. We have an image which needs to the car to steer hard left . In the first case, the car turns soft left and loses its path. Here, the reward for this action becomes -100. In the other case, the car turns hard left , stays on the road and hence gets a reward of 100. Basically, the agent gets a positive reward if it stays on the road doing some action ( steering level ) else it gets a negative reward showing that this action should not be made on such an image ( road ). See here for learning RL. Tip: You can try combining both the above methods. Generate class probabilities ( steering levels ) from CNN. If the car does not steer well, increase the loss by a certain factor. Try thinking from a human perspective. Imagine driving a car and the cautions you take to avoid going out the road.
