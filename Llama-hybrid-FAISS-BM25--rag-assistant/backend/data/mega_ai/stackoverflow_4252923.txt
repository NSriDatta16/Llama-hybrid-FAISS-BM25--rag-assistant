[site]: stackoverflow
[post_id]: 4252923
[parent_id]: 4252885
[tags]: 
I'm going to make an assumption here and say that what you're trying to do is call a Disconnect (perhaps a network resource) for both the disconnect and exit buttons. Instead of calling one event handler method from the other you may want to refactor the disconnect event handler's code into a separate method. Then call that method from both handlers. For example: private void Disconnect() { //Disconnect here } private void btnDisconnect_Click(object sender, EventArgs e) { //do some other stuff here Disconnect(); } private void btnExit_Click(object sender, EventArgs e) { //do some other exit stuff here Disconnect(); } This makes your code much cleaner and saves you from having to call one event handler from another. This begins to separate your view logic from the rest of your program's logic, which is much more desirable and much easier to maintain in the long run. For instance you may want a separate controller for handling the network resource, instead of embedding it into the view's logic.
