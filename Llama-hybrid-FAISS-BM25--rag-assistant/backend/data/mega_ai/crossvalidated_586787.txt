[site]: crossvalidated
[post_id]: 586787
[parent_id]: 
[tags]: 
Combining multiple stock time series to one data set for LSTM

I am trying to predict daily stock return volatility using an LSTM network. My data comprises price data of five different stocks, over the same time frame. My question, to which I have not found an answer online yet, is how to combine multiple time series into one data set for the LSTM to train on. A similar question was asked here , however I believe my problem is different, since the LSTM ought to predict the daily volatility of each stock individually, whereas the model in question predicts sales of the same product, presumably. I understand that simply appending additional stocks at the bottom of the data set is out of question due to the temporal factor. In the linked post there was a suggestion of using one-hot encoding, but I am having a hard time understanding how I would do that in practice. Below is a sample of how i imagine my data set would look like with one-hot encoded stock "names" (I have around 15 features, not just two). What I am having trouble with are two things: Say I am currently predicting daily volatility of stock 1. On day 1, in the row for stock 2, is it correct that I take the same Y value as in the row above? Or do I take Y(2)_t=2? The latter does not make sense to me. My understanding is that the LSTM will assume that each row represents a new time step - but the time only changes from the 3rd row to the 4th in my above screenshot. How do I handle this problem that the LSTM considers the information of multiple stocks to be at the same time? Intuitively, do I have to transform my features to columns, so that it would look roughly like the screenshot below? Thank you for taking the time to consider.
