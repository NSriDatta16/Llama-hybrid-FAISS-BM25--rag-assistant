[site]: stackoverflow
[post_id]: 3792160
[parent_id]: 3555689
[tags]: 
I think this code produces sane answers. The reference average quoted in the question seems to be wrong. The memory allocation is not needed. The value of MAX_HOUR was 24 but there were only 23 data values in the array. The indexing in building up the array to be regressed was bogus, referencing negative indexes in the pval array (and hence leading to erroneous results). The variable Nhour was referenced before it was initialized; the variable length was not correctly set. There wasn't good diagnostic printing. The body of main() here is substantially rewritten; the editing on linear_regression() is much more nearly minimal. The code is more consistently laid out and white space has been used to make it easier to read. This version terminates the regression when there is no longer enough data left to fill the array with 5 values - it is not clear what the intended termination condition was. #include #include #include #include void linear_regression(const float *x, const float *y, const int n, float *beta1, float *beta0); int main(void) { float pval[]={ 76.26, 68.68, 71.49, 73.08, 72.99, 70.36, 57.82, 58.98, 69.71, 70.43, 77.53, 80.77, 70.30, 70.50, 70.79, 75.58, 76.88, 80.20, 77.69, 80.80, 70.50, 85.27, 75.25, }; const int Nhour = 5; const int MAX_HOUR = sizeof(pval)/sizeof(pval[0]); const int size_hour = 7; float ref_avg; float sum = 0.0; float m; float b; float calc_y[6]; float calc_x[6]; /* Get the average of the first seven elements */ for (int i = 0; i 1); for (int i = 0; i
