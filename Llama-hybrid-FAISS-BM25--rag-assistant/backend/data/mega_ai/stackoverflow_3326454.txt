[site]: stackoverflow
[post_id]: 3326454
[parent_id]: 3326438
[tags]: 
A relative jump differs from an absolute or long jump in that the instruction does not encode the entire target address to where execution will continue. Rather, it encodes a portion of the address or an offset from the current instruction pointer, depending on the architecture. This saves program memory space and in non-pipelined architectures it will also execute slightly faster. The limitation is that you can only jump shorter distances. For current instruction relative jumps, the range is often a signed offset of the storage size used to encode the address. For example, if an 8-bit opcode and 8-bit offset is used, then the jump range would be typically -126 to +129 from the jump instruction. The asymmetry is due to the fact that the offset is added to the instruction pointer, which at the time of the addition points to the next instruction instead of the current one.
