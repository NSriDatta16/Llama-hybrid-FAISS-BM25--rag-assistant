[site]: stackoverflow
[post_id]: 5670303
[parent_id]: 5670164
[tags]: 
WebLogic 10.3.4 includes new Java EE6 API support including JAX-RS 1.1 with Jersey. We recently did a webcast on this functionality and Webcast #4 covers JAX-RS. Here's the link: http://www.oracle.com/technetwork/middleware/weblogic/learnmore/weblogic-javaee6-webcasts-358613.html There is also an example application on this called Oracle Parcel Service and you can download the code here: https://www.samplecode.oracle.com/sf/projects/oracle-parcel-svc/ . If you use JAXB you can marshall from JSON and XML into the same Java object. The challenge here is that the JAXB generated classes are not serializeable by default so if you wanted to access a remote EJB from the JAX-RS service then you would have a problem. Since you can't have the modules in the same EAR, there is another option. You could possibly use Java EE shared libraries. Then you could deploy your EJB's as a Java EE Shared library and reference that library in your REST client. Here is an example: In your EJB module, include something like the following in your manifest: Extension-Name: ops-util Implementation-Title: OPS 2.0 Utils Library EXAMPLE_ONLY Implementation-Vendor: Oracle Implementation-Vendor-Id: com.oracle Implementation-Version: 2.0.1 Specification-Title: Oracle Parcel Service 2.0 Utils Library Specification-Vendor: Oracle Specification-Version: 2.0 Then reference the shared library in weblogic.xml (WAR) or weblogic-application.xml (EAR): ops-util 2.0 2.0.1 false
