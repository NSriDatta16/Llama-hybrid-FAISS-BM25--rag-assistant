[site]: crossvalidated
[post_id]: 638657
[parent_id]: 
[tags]: 
Time series model selection based on demand

I am working on a time series forecasting project in my office. We have to forecast the demand for 10 products at each store level (no hierarchy). Just at store level is enough..We have 20 stores.So, we have a total of 200 series. We have exogenous variables such as day, week day, month, weather etc as input variables to the series Now, the problem is each product may exhibit a different demand pattern in each store.For example some parts in store 1 may be fast runners and the same parts in store 3 could be slow runners. So, my question, is how can I select the model based on time series data? I should already preconfigure the models based on my understanding of demand? For ex - Random Forest, Croston (for intermittent demand), seasonal naive (sporadic or no demand) etc. So, the only way is even though I know croston is not an appropriate model for constant demand, high runners, code will still run through that model, costing us time and resources? Is there any elegant existing solution using python which will pick the model based on its understanding of the demand pattern of product in each store? Or the only solution is to pre-configured the list of models? For ex - let's say I provide 10 model names to the model dictionary, then all the 200 series will be tested for all the 10 models? Is this the only way? How do time series experts here usually do this in a efficient way? what is the project methodology that you usually follow to do this sort of project?
