[site]: datascience
[post_id]: 49278
[parent_id]: 49218
[tags]: 
You need to consider how to best to represent the geometry of the airfoil (your output) and the pressure distribution (your input). Typically, for airfoils, as you are probably aware, you can do this by parameterizing the shape and pressure by turning them into length N 1D vectors that start and end at the trailing edge. Bear in mind that as well as the pressure distribution the eventual shape of the airfoil will depend optionally upon M additional variables: the Reynolds number, the angle of incidence, the Mach number (assuming you are dealing with compressible flows) and possibly more. These may need to be included as part of the input vector. You should then create a network with N+M input neurons, a number of fully connected hidden layers (you should experiment with different layer numbers and nodes) and N output neurons with an appropriate activation function, start with a linear one. If you're new to neural networks I'd recommend setting this up using Keras in Python.
