[site]: stackoverflow
[post_id]: 774067
[parent_id]: 772777
[tags]: 
Here is a fairly fast method to split strings using only T-SQL and you input parameter is only a string. You need to have a table and a function (as described below) already set up to use this method. create this table: CREATE TABLE Numbers (Number int not null primary key identity(1,1)) DECLARE @n int SET @n=1 SET IDENTITY_INSERT Numbers ON WHILE @N create this function to split the string array (I have other versions, where empty sections are eliminated and ones that do not return row numbers): CREATE FUNCTION [dbo].[FN_ListAllToNumberTable] ( @SplitOn char(1) --REQUIRED, the character to split the @List string on ,@List varchar(8000) --REQUIRED, the list to split apart ) RETURNS @ParsedList table ( RowNumber int --REQUIRED, the list to split apart ,ListValue varchar(500) --OPTIONAL, the character to split the @List string on, defaults to a comma "," ) AS BEGIN --this will return empty rows, and row numbers INSERT INTO @ParsedList (RowNumber,ListValue) SELECT ROW_NUMBER() OVER(ORDER BY number) AS RowNumber ,LTRIM(RTRIM(SUBSTRING(ListValue, number+1, CHARINDEX(@SplitOn, ListValue, number+1)-number - 1))) AS ListValue FROM ( SELECT @SplitOn + @List + @SplitOn AS ListValue ) AS InnerQuery INNER JOIN Numbers n ON n.Number here is an example of how to split the parameter apart: CREATE PROCEDURE TestPass ( @ArrayOfInts varchar(255) --pipe "|" separated list of IDs ) AS SET NOCOUNT ON DECLARE @TableIDs TABLE (RowNumber int, IDValue int null) INSERT INTO @TableIDs (RowNumber, IDValue) SELECT RowNumber,CASE WHEN LEN(ListValue) this is based on: http://www.sommarskog.se/arrays-in-sql.html
