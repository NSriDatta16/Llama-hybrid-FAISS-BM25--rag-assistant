[site]: stackoverflow
[post_id]: 145738
[parent_id]: 145720
[tags]: 
Refactor mercilessly and hope for the best. Update (4 years later and hopefully wiser) Like S.Lott's comment says: Pay attention to Naming. Spread the word to all 'committers' in the team. Good names make things searchable and thereby reduces duplication. Have ONE way of doing something and keep it ACCESSIBLE and SEARCHABLE. Write code for the average (L.C.D.) programmer.. Don't be clever where simple would suffice. (That includes design-pattern shoe-horning compulsion and related disorders) Adopt a common set of conventions, styles, guidelines, standards, et.all early. Ensure buy-in and thereby compliance within the team. (This means everyone uses the tabs (or spaces)!). It doesn't matter what you choose - the goal is that the code should look consistent Have a gatekeeper (respected by the team), who eyeballs all check-ins for red-flags. Write code test-first / outside-in. This usually ensures that your code is usable by multiple clients. (See GOOS's bullet on context-independence)
