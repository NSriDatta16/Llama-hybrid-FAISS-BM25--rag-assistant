[site]: stackoverflow
[post_id]: 3931426
[parent_id]: 3930833
[tags]: 
You're asking about two different features: upcasting and typecasting. The two are distinct in C++, since you don't need typecasting to upcast. Upcasting is when you treat an instance of a descendent class as an instance of a base class; the principle behind this is the Liskov substitution principle . Typecasting involves reinterpreting the type or converting between types in C++. There are different kinds of typecasting in C++ , each with different typecasting operators ( static_cast , dynamic_cast , reinterpret_cast , const_cast , C-style cast). Typecasting allows for more general substitutions, and doesn't so much follow a principle as violate them, which is why C and C++ programs that use casting aren't type safe.
