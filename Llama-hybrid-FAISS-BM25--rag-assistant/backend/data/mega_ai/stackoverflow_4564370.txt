[site]: stackoverflow
[post_id]: 4564370
[parent_id]: 4564293
[tags]: 
If you strive for your application to be storage agnostic then yes. One way to do it is to have your model contain abstractions for your repositories, such as abstract classes or interfaces. Then you would have a separate project, which you could call something like data access layer (DAL), and it would hold a reference to your model project and implement the abstract repositories. The benefits of this is a cleaner separation of responsibilities between your project (eg. your model project implements business logic and your DAL project knows the gory details about how to fetch data). Furthermore, this would allow you to implement two different DAL's, one targetting SQLServer and one targetting SqlLite for example.
