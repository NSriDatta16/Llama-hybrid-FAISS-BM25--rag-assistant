[site]: stackoverflow
[post_id]: 1021602
[parent_id]: 1021018
[tags]: 
Well, I've had great results with named_scope s like these: named_scope :has_cat_older_than lambda { |a| { :conditions => ["men.id in ( select man_id from wives where wives.id in ( select wife_id from cats where age > ? ) )", a] } } and named_scope :has_young_wife_named lambda { |n| { :conditions => ["men.id in ( select man_id from wives where name = ? and age I can now successfully do Member.has_cat_older_than(6).has_young_wife_named('Miriam').has_young_wife_named('Vashti') and get what I'm expecting. These scopes don't require the use of the joins, and they seem to play well with the other styled joins. w00t! Commentary elicited on whether this is an efficient way to do this, or if there is a more 'rails-y' way. Some way to include a scope from another model as an sql subquery fragment could be useful...
