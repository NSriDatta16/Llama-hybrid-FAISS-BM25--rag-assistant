[site]: stackoverflow
[post_id]: 2213787
[parent_id]: 2213748
[tags]: 
Patrick Smacchia's NDepend site has a good set of definitions: Metrics Definitions . His NDepend tool (for .NET) provides many different ways of quantifying a codebase. How useful metrics are, well that is a bit more contentious. They are good for getting a sky level view of a codebase, but are they useful day-to-day? How many shops out there use (or care about) metrics on a weekly basis? I suspect most are more concerned with the bug count: number of bugs fixed and number of bugs reported. Certainly measures like cohesion and coupling give indicators of possible refactoring points. Another important metric: How many tests are there, and roughly how much code coverage do those tests represent. Refactoring without tests and good test coverage is a risky business. Software metric Code Metrics Overview
