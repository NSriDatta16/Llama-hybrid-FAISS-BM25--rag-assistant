[site]: stackoverflow
[post_id]: 3995154
[parent_id]: 
[tags]: 
hitTest returns wrong UIView

I have a view hierarchy which contains smaller views on a scroll view. Each view can have subviews in it such as buttons etc. For some reason, buttons on the view aren't clicked; exploring this further showed that while the scroll view receives the touchBegan event, the button does not. Calling the hitTest:event: message shows that the button is not returned, even though it is within the limits. I've included a log output describing the touch's location on the scroll view, the item returned from hitTest, the touch's location if I called locationInView: using the expected item, and the hierarchy of the expected item (with frames printed). From this output I can deduce that the button should have been called... Can anyone explain this? Am I missing something? touched ({451, 309}) on > (location in expected item: {17, 7.5}) expected touched item is: view: >, layer transform: [1, 0, 0, 1, 0, 0] view: >, layer transform: [1, 0, 0, 1, 0, 0] view: >, layer transform: [1, 0, 0, 1, 0, 0] view: >, layer transform: [1, 0, 0, 1, 0, 0] view: >, layer transform: [1, 0, 0, 1, 0, 0] view: >, layer transform: [0, 1, -1, 0, 0, 0] view: >, layer transform: [1, 0, 0, 1, 0, 0] Update : Other than the UIWindow and VCViewsContainerView , all views are created programmatically using initWithFrame: or in the case of the button, buttonWithType: . The VCViewContainer is initialized using CGRectZero and when the UIImageView is created, its frame is set to the image's size + additional space for labels on the bottom of it. Update 2 : When calling [self.layer hitTest:location] with the same location, I get the layer of the correct view! What's going on here...?
