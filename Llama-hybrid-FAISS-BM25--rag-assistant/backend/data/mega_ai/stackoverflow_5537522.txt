[site]: stackoverflow
[post_id]: 5537522
[parent_id]: 5537438
[tags]: 
One idea would be to create template-driven / view-driven pages accessing a web service or an API serving all the data you need. You could link URLs to templates, and the templates call data retrieval functions either via web service (AJAX style) or statically. The business logic part is then limited to processing of inputs and preparing generic retrieval and provide mechanisms for e.g. filtering or sorting, while the templates determine how to filter, how to sort or how to paginate etc. I suggest that you use a proper object-relational mapping (ORM) framework / ActiveRecord pattern (see here on StackOverflow , or in Wikipedia ) that allows you to use generic retrieval objects that can be re-configured by the template to suit its needs (such as the aforementioned filtering and sorting). The actual retrieval would then be done in the template when needed by calling a special method like find() , load() or similar on the retrieval objects. EDIT: Regarding template frameworks as others suggested, I do not like them very much as they often duplicate functionality already found in PHP, reinventing the wheel by adding yet another parser layer; a benefit you get from any decent template framework however is caching (there may be some PHP-based templating engines out there that also support caching).
