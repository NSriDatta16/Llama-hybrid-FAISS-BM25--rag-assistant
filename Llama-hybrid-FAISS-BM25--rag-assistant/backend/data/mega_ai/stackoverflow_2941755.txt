[site]: stackoverflow
[post_id]: 2941755
[parent_id]: 2665799
[tags]: 
It's doable, but requires a bit of setup. I just got it working with xUnit. Presumably the below will work with NUnit too. For this to work, you'll need three projects The System Under Test -- SUT A testing project using your favorite unit testing framework -- xUnitTest A VS Test Project -- VSTest Create the VSTest project (breath easy) Delete the default UnitTest1.cs file Add a "Generic Test" to VSTest Specify the full path to the win32 version of the console runner for your testing framework, such as xunit.console.x86.exe Specify the full path to the xUnitTest dll Under the VS Test Menu->Edit Test Settings->Local-> Data & Diagnostics "Tab" Make sure only Code Coverage is enabled Select Code Coverage row, then click the "Configure" button above (yes, this is a well designed UI :) In the "Code Coverage Detail" dialog Select both the dlls for SUT and xUnitTest Enable "Instrument assemblies in test" Now when you run the VS2010 test, it'll correctly instrument the test dlls, run the code runner and gather the info into Visual Studio.
