[site]: stackoverflow
[post_id]: 3018941
[parent_id]: 3013986
[tags]: 
while Bean Validation as suggested by Pascal is more elegant, a quick and easy solution would be entity lifecycle listener methods inside the entity class: @PrePersist @PreUpdate protected void validate(){ if(this.disabled && !this.elements.isEmpty()){ throw new IllegalArgumentException( "Only types without elements may be disabled"); } } or better yet, have an Assert class (as in JUnit or Spring that encapsulates the exception throwing): @PrePersist @PreUpdate protected void validate(){ Assert.same( // but this implies a bi-directional constraint this.disabled, this.elements.isEmpty(), "Only types without elements may be disabled and vice-versa" ); }
