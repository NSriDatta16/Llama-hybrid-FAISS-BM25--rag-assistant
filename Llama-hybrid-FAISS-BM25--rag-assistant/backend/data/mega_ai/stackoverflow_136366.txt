[site]: stackoverflow
[post_id]: 136366
[parent_id]: 
[tags]: 
How can I leverage an ORM for a database whose schema is unknown until runtime?

I am trying to leverage ORM given the following requirements: 1) Using .NET Framework (latest Framework is okay) 2) Must be able to use Sybase, Oracle, MSSQL interchangeably 3) The schema is mostly static, BUT there are dynamic parts. I am somewhat familiar with SubSonic and NHibernate, but not deeply. I get the nagging feeling that the ORM can do what I want, but I don't know how to leverage it at the moment. SubSonic probably isn't optimal, since it doesn't currently support Sybase, and writing my own provider for it is beyond my resources and ability right now. For #3 (above), there are a couple of metadata tables, which describe tables which the vendors can "staple on" to the existing database. Let's call these MetaTables , and MetaFields . There is a base static schema, which the ORM (NHibernate ATM) handles nicely. However , a vendor can add a table to the database (physically) as long as they also add the data to the metadata tables to describe their structure. What I'd really like is for me to be able to somehow "feed" the ORM with that metadata (in a way that it understands) and have it at that point allow me to manipulate the data. My primary goal is to reduce the amount of generic SQL statement building I have to do on these dynamic tables. I'd also like to avoid having to worry about the differences in SQL being sent to Sybase,Oracle, or MSSQL. My primary problem is that I don't have a way to let ORM know about the dynamic tables until runtime, when I'll have access to the metadata Edit : An example of the usage might be like the one outlined here : IDataReader rdr=new Query("DynamicTable1").WHERE("ArbitraryId",2).ExecuteReader(); (However, it doesn't look like SubSonic will work, as there is no Sybase provider (see above)
