[site]: stackoverflow
[post_id]: 3432144
[parent_id]: 3391854
[tags]: 
to copy a post i posted here: https://stackoverflow.com/questions/3430705/3432079#3432079 there are two things to get a handle upon: Academic Knowledge: Know the Theory - get a great handle on the theory of programming, the theory of language design, the theory behind the architectures you are coding on Know the Math - all programming eventually boils down to math - know predicate logic, trig, vectors, geometry, (basic) set theory, graphs, basic matrix theory, a little numerical analysis doesnt hurt either - as well as complexity theory Know your Language - get a book, read it, make notes for reference. Apress titles work well for C# http://www.amazon.com/Pro-2010-NET-Platform-Fifth/dp/1430225491/ref=sr_1_1?ie=UTF8&s=books&qid=1281215548&sr=8-1 is good. Then read blogs and videos, learn to use the Redgate Reflector and MSDN help Know your Tools - for C# this means Visual Studio 2010 - Link is a great way to learn. Also get a decent refactorer - ReSharper is my favorite but there are others. Know your Ecosysyem - know what libraries are out there, learn how to use one or two of the best Skills: Know how to define a projct - no matter how good a programmer you are if you build the wrong thing you will have failed epically. Know how to design - learn the theory on object orientated design - the Gang Of Four software patterns are classics and every coder should be aware of them. Know how to document code - this is critical for long lasting code and for working well in a team. Write it, Document it, Test it => Resuse it Know how to work in a team - work hard, play nice, communicate well. Know which tool to use - get a feel for as many types of languages, actual languages, technologyies, libraries and so on as you can so that you know which to use in which situations Know how to learn - from those around you, from the web, from documentation and most importantly from your own mistakes. I'm sure others can add to these lists ;)
