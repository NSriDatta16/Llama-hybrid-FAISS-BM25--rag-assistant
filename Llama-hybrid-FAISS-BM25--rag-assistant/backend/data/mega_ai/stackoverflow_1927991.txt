[site]: stackoverflow
[post_id]: 1927991
[parent_id]: 1927660
[tags]: 
First, I should note they’re not identical; b has been recompressed and lost quality. You can see this if you look carefully on a good monitor. To determine that they are subjectively “the same,” you would have to do something like what fortran suggested, although you will have to arbitrarily establish a threshold for “sameness.” To make s independent of image size, and to handle channels a little more sensibly, I would consider doing the RMS (root mean square) Euclidean distance in colorspace between the pixels of the two images. I don’t have time to write out the code right now, but basically for each pixel, you compute (R_2 - R_1) ** 2 + (G_2 - G_1) ** 2 + (B_2 - B_1) ** 2 , adding in an (A_2 - A_1) ** 2 term if the image has an alpha channel, etc. The result is the square of the colorspace distance between the two images. Find the mean (average) across all pixels, then take the square root of the resulting scalar. Then decide a reasonable threshold for this value. Or, you might just decide that copies of the same original image with different lossy compression are not truly “the same” and stick with the file hash.
