[site]: stackoverflow
[post_id]: 4173444
[parent_id]: 3890633
[tags]: 
Because Maps are their own collection, you would need to iterate over every Map collection searching within for the Location your Player is referenced. You can't access embedded documents directly. You have to enter through the collection and work your way down. To avoid iterating all of the Maps you can store both the Location reference AND the Map reference in your Player document. This allows you to chain criteria that selects your Map and then the Location within it. You have to code a method on your Player class to handle this. def location self.map.locations.find(self.location_id) end So, similar to how you answered yourself except you could still store the location_id in your player document instead of using the coord attribs. Another way would be to put Maps, Locations, and Players in their own collections instead of embedding the Location in your Map collection. Then you could use reference relationships without doing anything fancy... however your really just using a hierarchical database likes it's a relational database at this point...
