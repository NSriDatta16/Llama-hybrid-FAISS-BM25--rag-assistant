[site]: stackoverflow
[post_id]: 2154487
[parent_id]: 2154464
[tags]: 
It is here: _singWraper.SetMyValue(singleVa); vs: SingWraper.SetMyValue(singleVa); In the second, you access a property , therefore you clone the struct; essentially this is the same as: var clonedAndIndependentValue = SingWraper; // getter clonedAndIndependentValue.SetMyValue(singleVa); Note we've updated a different struct value; contrast to field access, which talks to the existing struct value. Yet another example of why mutable structs are evil. DON'T DO IT . Make the struct immutable (no Set* methods, property setters, or other shenanigans). Or use a class.
