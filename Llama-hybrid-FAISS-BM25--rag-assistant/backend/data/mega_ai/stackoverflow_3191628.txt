[site]: stackoverflow
[post_id]: 3191628
[parent_id]: 3191612
[tags]: 
First question - do you have to return a List ? Can you return an IEnumerable instead? If so, performance gets a lot better: IEnumerable FindFriends() { return doc.Descendants("user").Select(user => new Friend { ID = user.Element("id").Value, Name = user.Element("name").Value, Url = user.Element("url").Value, Photo = user.Element("photo").Value }); } Rather than actually creating new buckets and stuffing values into them, this creates a projection , or a new object that simply contains all of the logic for how to create the new Friend objects without actually creating them. They get created when the caller eventually starts to foreach over the IEnumerable. This is called "deferred execution". This also makes one assumption - All the nodes in your XML fragment are friends. If that isn't true, the first part of the XML selection might need to be a little more complex. And as @anon points out, even if you do need to return a List for some reason not obvious from the information you've provided, you can just call .ToList() at the end of the return statement. This will just execute the projection I described above straight into a new bucket, so you only ever create one.
