[site]: stackoverflow
[post_id]: 3146653
[parent_id]: 3142625
[tags]: 
The best way to do this is: #ifndef FALSE #define FALSE 0 #elif FALSE != 0 #undef FALSE #define FALSE REWRITE_PROGRAM("FALSE") #endif #ifndef TRUE #define TRUE 1 #elif TRUE != 1 #undef TRUE #define TRUE REWRITE_PROGRAM("TRUE") #endif Where REWRITE_PROGRAM is a macro which calls a function (providing the line number and source file in advance) that, using advanced neural networks, will intelligently rewrite your code so as to avoid conflicting definitions of TRUE or FALSE where TRUE is defined to be anything other than 1 and FALSE to be anything other than 0. After it generates the corrected code and builds it, it will execute the newly built version of the application and exit. As a backup, the rewrite AI will also make sure that its new assumptions are correct by adding more code with REWRITE_PROGRAM should it ever encounter a case where its assumptions are incorrect. Ultimately the program will rewrite itself repeatedly until it is correct, and this way you don't have to worry about how TRUE and FALSE are defined, conflicts, and whether those definitions will change in the future.
