[site]: stackoverflow
[post_id]: 3504462
[parent_id]: 3499538
[tags]: 
F#, 496 I could reduce this a lot, but I like this as it's still in the ballpark and pretty readable. open System.IO let mutable a:_[,]=null let N y x= [-1,-1;-1,0;-1,1;0,-1;0,1;1,-1;1,0;1,1] |>Seq.sumBy(fun(i,j)->try if a.[y+i,x+j]='X' then 1 else 0 with _->0) [ ] let M(r)= let b=File.ReadAllLines(r.[0]) a b.[y].[x]) for i=1 to int r.[1] do a match N y x with|3->'X'|2 when a.[y,x]='X'->'X'|_->'.') File.WriteAllLines("out.txt",Array.init 40(fun y-> System.String(Array.init 80(fun x->a.[y,x])))) 0 EDIT 428 By request, here's my next stab: open System let mutable a,k=null,Array2D.init 40 80 [ ] let M r= a IO.File.ReadAllLines(r.[0]).[y].[x]) for i=1 to int r.[1] do a match Seq.sumBy(fun(i,j)->try if a.[y+i,x+j]='X'then 1 else 0 with _->0)[-1,-1;-1,0;-1,1;0,-1;0,1;1,-1;1,0;1,1]with|3->'X'|2 when a.[y,x]='X'->'X'|_->'.') IO.File.WriteAllLines("out.txt",Array.init 40(fun y->String(Array.init 80(fun x->a.[y,x])))) 0 That's a 14% reduction with some basic golfing. I can't help but feel that I'm losing by using a 2D-array/array-of-strings rather than a 1D array, but don't feel like doing that transform now. Note how I elegantly read the file 3200 times to initialize my array :)
