[site]: crossvalidated
[post_id]: 210442
[parent_id]: 210366
[tags]: 
Let consider a classic ML problem: $X_{train}$ (the data for training), $y_{train}$ (the response for training), $X_{test}$ (the data for testing), $y_{test}$ (the data for testing). You are using 2 models: linear regression ($LinReg$) and the $SVM$ and you train them in the following way: Linear Regression: transform some variables $X_{train,transform} = f(X_{train})$ Then train: $log(y_{train}) = LinReg(X_{train,transform})$ SVM: Train $y_{train} = SVM(X_{train})$ To predict you go through the same steps: Linear Regression: transform using previous transformation $f$. $X_{test,transform} = f(X_{test})$ Then get the $y's$: $\hat{y}_{test} = exp(LinReg(X_{test,transform}))$ SVM: Train $\hat{y}_{test} = SVM(X_{test})$ If you want to compare the 2 models you can use either log or non log metric. Without the log: $RMSE^{SVM} = \|\hat{y}_{test} - y_{test}\|/\sqrt{n} = \|SVM(X_{test}) - y_{test} \|/\sqrt{n}$ $RMSE^{Reg} = \|\hat{y}_{test} - y_{test}\|/\sqrt{n} = \|LinReg(X_{test,transform}) - y_{test} \|/\sqrt{n}$ With the log: $RMSE^{SVM} = \|log(\hat{y}_{test}) - log(y_{test})\|/\sqrt{n} = \|log(SVM(X_{test})) - log(y_{test}) \|/\sqrt{n}$ $RMSE^{Reg} = \|log(\hat{y}_{test}) - log(y_{test})\|/\sqrt{n} = \|log(LinReg(X_{test,transform})) - log(y_{test}) \|/\sqrt{n}$ With $n$ the number of points in the testing set and $\|.\|$ the euclidean norm. Finally if you want you can also re-compute training RMSE (with or without log) by just replacing $test$ with $train$ in above equations. Hope this answer your question.
