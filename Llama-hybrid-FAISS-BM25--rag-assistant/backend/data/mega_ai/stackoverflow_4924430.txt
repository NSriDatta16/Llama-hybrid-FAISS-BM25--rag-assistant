[site]: stackoverflow
[post_id]: 4924430
[parent_id]: 441309
[tags]: 
Personally when I look at code the following looks pretty clunky to me: data.value.set ( data.value.get () + 1 ) ; rather than simply data.value++ ; or data.value = data.value + 1 ; Data encapsulation is useful when passing a class around and you want to ensure the value is modified in a controlled fashion. However when you have public set and get functions that do little more than set the value to what ever is passed in, how is this an improvement over simply passing a public data structure around? When I create a private structure inside a class, I created that structure to organize a set of variables into one group. I want to be able to modify that structure within the class scope, not get copies of that structure and create new instances. To me this prevents a valid use of structures being used to organize public variables, if I wanted access control I'd use a class.
