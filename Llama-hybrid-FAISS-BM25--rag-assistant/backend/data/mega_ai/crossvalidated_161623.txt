[site]: crossvalidated
[post_id]: 161623
[parent_id]: 
[tags]: 
Fitting an arc from samples taken at evenly spaced angles

I have an application where I am rotating an object and measuring its position in X,Y as it rotates. There is some measurement error in both X and Y at each point (haven't yet been able to characterize, but I'm hoping roughly normally distributed.) I want to fit these points to a circle so that I can determine the center of rotation. My first attempt was to use a least squares fit based on the data moments, like that described in this paper . The problem with this approach is that it tends to greatly underestimate the radius in my qualification experiments. I've come up with a 'hackier' approach that seems to be working okay, by taking into account the fixed angular spacing. Here is what I'm currently doing: Let's index the samples, spaced at angles $\Delta w$, so that we have $i \in [-n,n]$, with coordinates $(x_i,y_i)$. First transform the coordinates, setting $(u_i,v_i) = (x_i - x_0, y_i - y_0)$. Take the presumed chord formed by each $(u_i,v_i)$ and compute the radius $r$ using $\theta_i = i \Delta w$ and $r_i = \frac{\sqrt {u_i^2 + v_i^2}} {2\sin(\theta_i/2)}$. Take the mean of the radius estimates and use this as our radius. For each $k \in [1,n]$, compute the vector perpendicular to $(u_k,v_k)-(u_{-k},v_{-k})$. Take the average of all these vectors to yield a vector $p$. Check if $p$ is facing the 'wrong direction' by summing the dot product of $p$ with the various $(u_i,v_i)$. If so, negate it. The center of the circle is then $c = (x_0,y_0) + r\frac{p}{|p|}$. The above doesn't strike me as very robust, however, as I don't believe it's doing any sort of minimization in a least squares sense. Is there a better approach to this? I also plan to repeat this process by sampling multiple times at each angle, but is there a better way to incorporate that data into a single fit? In response to comment, some additional details: Measurements are taken by rotating a mechanism to known angles, then imaging a feature and recording the feature's position at each angle. There is error both in the physical positioning of the mechanism and the vision-based measurement of position. I'm typically taking 21 samples ranging +/- 10 degrees. Here is a plot of an example data set vs the circle fit from my hacky algorithm. Note that the fit here is particularly poor due to the middle $(x_0,y_0)$ point being offset to the left from the bulk of the data, since I currently always include that center point in the arc. This still works better than fitting with the moments, though, as it imposes that the points cover a roughly 20 degree portion of the circle. Here is the raw data for the above case, spaced at 1 degree intervals: ErrXCal ErrYCal -0.04 0.1964 -0.0309 0.1764 -0.0099 0.1484 -0.0226 0.135 -0.0233 0.1332 -0.0261 0.1125 0.002 0.0633 0.0048 0.0404 -0.0011 0.0474 -0.0149 0.0353 -0.0073 -0.0017 0.0253 -0.019 0.0317 -0.0369 0.065 -0.069 0.0652 -0.1065 0.098 -0.1035 0.0837 -0.1064 0.1072 -0.1292 0.1179 -0.1717 0.1839 -0.175 0.1691 -0.178
