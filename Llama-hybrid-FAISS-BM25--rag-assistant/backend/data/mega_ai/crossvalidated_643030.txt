[site]: crossvalidated
[post_id]: 643030
[parent_id]: 642814
[tags]: 
I don't think you want regrid in your case unless you want the marginal averaging being done on the response scale and not on the transformed scale (which you likely want because you chose it for a reason). For more details see here: https://cran.r-hub.io/web/packages/emmeans/vignettes/transformations.html Just to quote the important section (and keep reading below that section as well): Timing is everything Dealing with transformations in emmeans is somewhat complex, due to the large number of possibilities. But the key is understanding what happens, when. These results come from a sequence of steps. Here is what happens (and doesn’t happen) at each step: The reference grid is constructed for the log(conc) model. The fact that a log transformation is used is recorded, but nothing else is done with that information. The predictions on the reference grid are averaged over the four percent levels, for each source, to obtain the EMMs for source – still on the log(conc) scale. The standard errors and confidence intervals for these EMMs are computed – still on the log(conc) scale. Only now do we do back-transformation… The EMMs are back-transformed to the conc scale. The endpoints of the confidence intervals are back-transformed. The t tests and P values are left as-is. The standard errors are converted to the conc scale using the delta method. These SEs were not used in constructing the tests and confidence intervals. The model is our best guide This choice of timing is based on the idea that the model is right. In particular, the fact that the response is transformed suggests that the transformed scale is the best scale to be working with. In addition, the model specifies that the effects of source and percent are linear on the transformed scale; inasmuch as marginal averaging to obtain EMMs is a linear operation, that averaging is best done on the transformed scale. For those two good reasons, back-transforming to the response scale is delayed until the very end by default. But keep reading here: https://cran.r-hub.io/web/packages/emmeans/vignettes/transformations.html#regrid Since you didn't provide example data I used the CO2 data and the way I think you want the data to be analyzed: require(emmeans) #> Loading required package: emmeans require(multcomp) m I think you really only need this approach; inference are the same compared to the following approaches below: emm pairs(emm) #> contrast ratio SE df null t.ratio #> Quebec nonchilled / Mississippi nonchilled 1.366 0.1498 80 1 2.840 #> Quebec nonchilled / Quebec chilled 1.129 0.1239 80 1 1.106 #> Quebec nonchilled / Mississippi chilled 2.201 0.2415 80 1 7.190 #> Mississippi nonchilled / Quebec chilled 0.827 0.0907 80 1 -1.734 #> Mississippi nonchilled / Mississippi chilled 1.612 0.1768 80 1 4.350 #> Quebec chilled / Mississippi chilled 1.949 0.2139 80 1 6.084 #> p.value #> 0.0286 #> 0.6870 #> 0.3130 #> 0.0002 #> #> P value adjustment: tukey method for comparing a family of 4 estimates #> Tests are performed on the log scale cld(emm) #> Type Treatment response SE df lower.CL upper.CL .group #> Mississippi chilled 15.3 1.18 80 13.1 17.8 1 #> Mississippi nonchilled 24.6 1.91 80 21.1 28.7 2 #> Quebec chilled 29.8 2.31 80 25.5 34.7 23 #> Quebec nonchilled 33.6 2.61 80 28.8 39.2 3 #> #> Confidence level used: 0.95 #> Intervals are back-transformed from the log scale #> P value adjustment: tukey method for comparing a family of 4 estimates #> Tests are performed on the log scale #> significance level used: alpha = 0.05 #> NOTE: If two or more means share the same grouping symbol, #> then we cannot show them to be different. #> But we also did not show them to be the same. This will just split the data by Treatment (inferences remain the same compared to first approach): emm2 pairs(emm2) #> Treatment = nonchilled: #> contrast ratio SE df null t.ratio p.value #> Quebec / Mississippi 1.37 0.150 80 1 2.840 0.0057 #> #> Treatment = chilled: #> contrast ratio SE df null t.ratio p.value #> Quebec / Mississippi 1.95 0.214 80 1 6.084 #> Tests are performed on the log scale cld(emm2) #> Treatment = nonchilled: #> Type response SE df lower.CL upper.CL .group #> Mississippi 24.6 1.91 80 21.1 28.7 1 #> Quebec 33.6 2.61 80 28.8 39.2 2 #> #> Treatment = chilled: #> Type response SE df lower.CL upper.CL .group #> Mississippi 15.3 1.18 80 13.1 17.8 1 #> Quebec 29.8 2.31 80 25.5 34.7 2 #> #> Confidence level used: 0.95 #> Intervals are back-transformed from the log scale #> Tests are performed on the log scale #> significance level used: alpha = 0.05 #> NOTE: If two or more means share the same grouping symbol, #> then we cannot show them to be different. #> But we also did not show them to be the same. This will just split the data by Type (inferences remain the same compared to first approach): emm3 pairs(emm3) #> Type = Quebec: #> contrast ratio SE df null t.ratio p.value #> nonchilled / chilled 1.13 0.124 80 1 1.106 0.2721 #> #> Type = Mississippi: #> contrast ratio SE df null t.ratio p.value #> nonchilled / chilled 1.61 0.177 80 1 4.350 #> Tests are performed on the log scale cld(emm3) #> Type = Quebec: #> Treatment response SE df lower.CL upper.CL .group #> chilled 29.8 2.31 80 25.5 34.7 1 #> nonchilled 33.6 2.61 80 28.8 39.2 1 #> #> Type = Mississippi: #> Treatment response SE df lower.CL upper.CL .group #> chilled 15.3 1.18 80 13.1 17.8 1 #> nonchilled 24.6 1.91 80 21.1 28.7 2 #> #> Confidence level used: 0.95 #> Intervals are back-transformed from the log scale #> Tests are performed on the log scale #> significance level used: alpha = 0.05 #> NOTE: If two or more means share the same grouping symbol, #> then we cannot show them to be different. #> But we also did not show them to be the same. Created on 2024-03-19 with reprex v2.1.0
