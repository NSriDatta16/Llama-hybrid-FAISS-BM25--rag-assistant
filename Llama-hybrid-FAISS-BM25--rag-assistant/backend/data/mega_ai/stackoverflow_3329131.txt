[site]: stackoverflow
[post_id]: 3329131
[parent_id]: 3328512
[tags]: 
Though there may be plenty of arguments each way in theory, I'd bet that it is largely philosophical in origin. Scheme, a Lisp-1, prefers elegance over practicality, and chose the same define syntax for variables and functions, which makes a single namespace feel natural (and encourages a functional style of programming). Common Lisp tends to prefer practicality and power over elegance, and was an attempt at consensus-building, so seeing an existing two-namespace solution broadly accepted and working well, accepted it. In practice, however, it mostly means three things: In Common Lisp (and other Lisp-2's), you have to use funcall a lot In Scheme (and other Lisp-1's), you have to be careful not to override needed function names with variables; e.g. function arguments like lst instead of list On the Internet, there will be arguments It is one major factor in why some people prefer one Lisp to another, however.
