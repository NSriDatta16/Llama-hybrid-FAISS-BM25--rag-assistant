[site]: datascience
[post_id]: 69625
[parent_id]: 
[tags]: 
How to code a simple forward propagation of recurrent neural networks?

I know the theory behind recurrent neural networks or RNN but I am confused about its implementation. This is an rnn equation I got from the web, I tried to code the forward propagation alone in python's numpy import numpy as np outputs = 5 inputs = 3 # Input value # (batch_size,seq_len, vocab_len) X = np.ones((10,3,3)) # Initializing rnn weights and hidden states Wxh = np.random.rand(outputs,inputs) Whh = np.random.rand(outputs,inputs) Why = np.random.rand(outputs,inputs) h = np.zeros((1,inputs)) # Forward propagation def rnn(x,h): h = np.tanh(np.dot(Whh,h.T) + np.dot(Wxh,x.T)) y = np.dot(Why,h.T) return y,h for i in X: _,h = rnn(i,h) But I get a broadcasting error. How do we implement the forward propogation of rnn?
