[site]: datascience
[post_id]: 85414
[parent_id]: 
[tags]: 
Support Vector Machines (SVM) vs Minimum distance between two convex hulls

Imagine that we have two sets of seperable points, X and Y, in the plane (R^2) that we want to classify. To find the optimal line (hyperplane) that separates these two sets of points we can: Run a SVM algorithm Find the minimum distance line segment between the convex hulls of X and Y and take the line perpendicular to the midpoint of this line. 2 can be done using an algorithm of H. Edelsbrunner in O(logn+lognm) time. But I guess creating the convex hulls of the point sets would be O(nlogn), so overall it should take O(nlogn) time. I do not know the time complexity of the SVM algorithm. Do both algorithms achieve the same result? If not, why are they different? If yes, why would we prefer the SVM algorithm over 2?
