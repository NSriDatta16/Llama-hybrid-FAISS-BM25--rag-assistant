[site]: stackoverflow
[post_id]: 1931362
[parent_id]: 
[tags]: 
conditional implementations of methods

ok.. think of objectA.. objectA has optional properties defined in its protocol. the delegate may or may not implement these, but if you do decide to implement them, you must provide a valid return. now what if i have objectA.delegate set to objectB but object be needs to implement them all at compile time, and at runtime will decide which ones it may or may not support. The problem in implementing them all as stubs means that the objectA will simply use 'respondsToSelector' to see if the delegate is trying to use optional properties, and if so it will assume they are valid and use them. Since objectB(delegate) has to decide conditionally which ones to implement, the only solution i can see is to use 'class_addMethod'. I was hoping there could be a more elegant and possibly more optimal solution, but not sure as what it may be.
