[site]: crossvalidated
[post_id]: 476262
[parent_id]: 475791
[tags]: 
Problem Framing : Without the strategy part, this would be a straight up forecasting problem. But once you add the concept of choosing among different strategies, it becomes an optimization problem , also referred to as a decision problem, not a predictive one: This is not about using independent inputs to predict an outcome of a dependent variable. It is about choosing the right inputs, the parameters of your different strategies, which you can set as you wish pending some constraints, to optimize the value of your outcome, in this case the market share of your product basket. The inputs are called "the decision variables", because they are what you want to decide upon. The output is called "the objective function" because it is the KPI you want to maximize or minimize (you can maximize market share or profit, or you can minimize cost or losses - mathematically maximizing or minimizing an objective function end up being very similar). There will also be constraints (i.e. not all strategies are feasible because of your budget, supplier leadtimes, etc...) which limit the range of possible values for your decision variables. What I just described is a standard optimization problem, which is part of the field of OR , more so than statistical inference or ML. But your problem is more complicated than a standard OR problem, because it also has a predictive component, not just an optimization component. This is because you need to predict the market share from each possible choice of strategy, before you apply the optimization algorithm to decide which strategy to choose. Possible Approaches : You problem is very tricky. I can think of 3 approaches, each has its challenges based on what you describe: Reinforcement Learning : The "modern approach" would be to use Reinforcement Learning, but based on your description (5 products and very infrequent updates - every 6~12 months) you don't have enough data for an RL model (Maybe an old school Markov Decision Process RL approach , but definitely not a NNet RL model - I don't have enough experience with MDPs to tell if they work in a data poor regime). Assortment Optimization : Your problem sounds almost exactly like an assortment planning problem , except that I don't what do you mean exactly by "implementing a strategy". In assortment planning, the decision variables are pretty simple, of the five products, you want to choose which % of each of the 5 products you should carry in the basket: Should it be 20% of each one? 50% of the top seller and 12.5% of each of the other 4? 40% of the top seller, 30% of the 2nd best seller, and 10% of the remaining 3? etc... The reason I am hesitant to classify your use case as a straight up assortment planning problem is because from what you describe, there is more to your different strategies (negotiations with the suppliers, etc...) than simply deciding the right mix of product in the basket. If it is just a case of deciding the mix, then here is a good book with some intuitive explanations and examples of assortment optimization . If there is indeed more to picking a strategy than just optimizing the mix, then some sort of MDP based simulation and RL approach is probably your only option. But I don't know if that can be done with so little data. Causal Impact : You might also try one other thing - do a straight up time series forecasting approach of the market share with your current product mix, and then use a causal impact/intervention analysis to see how the baseline forecast would be impacted by different decisions. This approach would work with very little data, and is probably the easiest to implement of the 3, but would require a lot of domain and marketing knowledge to work.
