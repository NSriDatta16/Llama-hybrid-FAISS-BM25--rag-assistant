[site]: stackoverflow
[post_id]: 1777969
[parent_id]: 1770857
[tags]: 
There are two really good reasons to go with MVVM: It helps you produce business logic and data access code that is more easily unit tested With very little extra effort, all of your UX should be easy to modify in Blend As several posters have metioned, any eventing related to the UX can be handled in code-behind, but you should be exposing and accessing (read and write) data through your View Models for easy binding in your Views. As for the extra effort I referred to in #2, you could easily add a static property to your App object to determine if the application is running versus a View being opened in Blend. If the View is open in Blend, leverage mock data instead of making data access calls. Here's some sample code that works for checking if Blend has a View open: if (Application.Current == null || Application.Current.GetType() == typeof(Application)) { isInDesignMode = true; } else { isInDesignMode = false; } Hope this helps.
