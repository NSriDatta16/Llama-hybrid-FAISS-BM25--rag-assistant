[site]: stackoverflow
[post_id]: 3636293
[parent_id]: 3636224
[tags]: 
Assuming this is on Apache. If at all possible, I'd recommend doing this using a .htaccess file that re-routes all requests to a "site is down" message. Something like: RewriteRule (.*) /downmessage.php [L] (note that any image resources will be redirected, too) Compared to a PHP-side flag check and offline message, this is faster, plus it has the huge advantage that resources like uploaded images and style sheets are no longer reachable either - which they otherwise might be, through cached files, URLs, Google Images hits... In a PHP-based "offline" mechanism where those resources are not blocked, the fact that some resources are still reachable if somebody knows the URL is very difficult to explain to users ("but we took the site down, didn't we?") and if the site gets taken down because of legal problems regarding a published image (can happen to everyone!), the image could still be reachable without the site owner knowing. The downside to this is that it requires the mod_rewrite module on the server, and PHP needs to have write access to the .htaccess file: Both not always the case. However , while this method has its advantages, the basic premise of your question is worth looking at before implementing any changes. You say that the check for the takedown XML file is taking too much time. I don't think that is the case. file_exists() checks are cached internally, and should not cause any noticeable slowdown even for very many requests. The average Drupal or WordPress page loads dozens of include files on every request. A single file_exists pales in comparison.
