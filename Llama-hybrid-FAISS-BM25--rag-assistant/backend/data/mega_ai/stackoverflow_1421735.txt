[site]: stackoverflow
[post_id]: 1421735
[parent_id]: 
[tags]: 
Why does Ruby Builder's XmlMarkup use different syntax to groovys' NodeBuilder

Groovys' NodeBuilder uses def someBuilder = new NodeBuilder() someBuilder.people(kind:'folks', groovy:true) { person(x:123, name:'James', cheese:'edam') { project(name:'groovy') project(name:'geronimo') } person(x:234, name:'bob', cheese:'cheddar') { project(name:'groovy') project(name:'drools') } } whereas Rails' XmlMarkup uses xm = Builder::XmlMarkup.new xm.instruct! # xm.html { # xm.head { # xm.title("History") # History } # xm.body { # xm.comment! "HI" # xm.h1("Header") # Header xm.p("paragraph") # paragraph } # } # Why is it that with Rails you need to use an explicit receiver (xm) whereas with Groovy you can ommit it? I've heard about the dislike for instance_eval in ruby, why is it groovy can get away with this style whereas ruby can't? Thanks fractious , just finished reading that article, it's a superb roundup of the different techniques you can use for building DSLs in ruby. I'd vote you up but no rep yet.
