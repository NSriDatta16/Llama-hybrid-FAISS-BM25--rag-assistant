[site]: stackoverflow
[post_id]: 1074223
[parent_id]: 1074027
[tags]: 
Stobor is on the right track. I visited the page with the class and how-to information that you obviously used: http://www.xml.com/pub/a/2005/12/21/json-dynamic-script-tag.html . The script there takes advantage of the callback= value that Yahoo uses to specify the callback function that wraps the JSON data (thus making it JSON P data). You have a callback=getGeo in your URL, but the TwitterCounter API does NOT have a way to specify a callback function. I created a full HTML page using the code you were using: Twittercounter API Test var bObj; // Define the callback function function getGeo(jsonData) { $('#content').append(''+jsonData.rank+''); bObj.removeScriptTag(); } $(document).ready(function() { $('form#search').bind("submit", function(e){ e.preventDefault(); $('#content').html(''); // The web service call var req = 'http://twittercounter.com/api/?username=Anand_Dasgupta&output=json&results=3&callback=getGeo'; // Create a new request object bObj = new JSONscriptRequest(req); // Build the dynamic script tag bObj.buildScriptTag(); // Add the script tag to the page bObj.addScriptTag(); }); }); and Firebug gave me an error when I activated the button. The reason is based on this paragraph in the original article's writeup: That's a valid JavaScript statement, so it can be the target of a script tag that returns JavaScript (raw JSON data, without the callback function, is not a valid JavaScript statement, so it will fail to load if it is the target of a script tag). For comparison, look at the XML version of this call here. The "valid JavaScript statement" is the one with the function name wrapping the actual data. Stobor's solution would be perfect, if Twittercounter would allow for JSONP requests and let you specify a wrapper function. As it is, you'll have to create your own proxy to act as an intermediary. I have an example on how to create one using PHP on my blog .
