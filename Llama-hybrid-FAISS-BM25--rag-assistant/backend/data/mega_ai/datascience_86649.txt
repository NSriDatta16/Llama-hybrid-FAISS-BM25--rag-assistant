[site]: datascience
[post_id]: 86649
[parent_id]: 
[tags]: 
Parameter estimation using convolutional for exponential functions

I was inspired by this paper where the authors fed an 1-dimenisonal input waveform to the simple convolutional neural network and got an estimate of four parameters of the analytic model. This inspired me to see if I could use CNNs to estimate parameters of more complex analytic models. I have a complex non-linear (contains exponential and Bessel functions) set of equations that depend on five parameters: v1 = 0.1 -> 5 v2 = 1e3 -> 1e4 v2 = 1e3 -> 1e4 v4 = 0.01 -> 0.5 v5 = 0.01 -> 1.0 The output waveform is exponential and can vary 4-6 orders of magnitude over the observed time period. I generated around 200K sample waveforms and the parameter values used to generate them. I construct the following network in Tensorflow: Model: "sequential_1" _____ Layer (type) Output Shape Param # ===== conv1d_2 (Conv1D) (None, 376, 128) 2048 _____ conv1d_3 (Conv1D) (None, 372, 64) 41024 _____ dense_7 (Dense) (None, 372, 512) 33280 _____ dense_8 (Dense) (None, 372, 512) 262656 _____ dense_9 (Dense) (None, 372, 512) 262656 _____ dense_10 (Dense) (None, 372, 512) 262656 _____ flatten (Flatten) (None, 190464) 0 _____ dense_11 (Dense) (None, 512) 97518080 _____ dense_12 (Dense) (None, 512) 262656 _____ dense_13 (Dense) (None, 5) 2565 ===== Total params: 98,647,621 Trainable params: 98,647,621 Non-trainable params: 0 When I go to train the network I noticed that the accuracy remains low and loss is large. When I go to predict parameters I notice that I get a rough (~20% difference between predicted and actual) estimate for v2/v3 but the rest of the variables are 0. This leads me to believe that the issue is the many orders of magnitude difference between the input and different outputs. Hence, I did the following, I normalized the data by taking the logarithm of the input curve to ensure the input is I tried a couple different networks and normalizations but so far nothing has shown any promise. So now I'm wondering if any of you guys has an ideas? Should I be trying a different kind of NN (other than CNN)? Is there something I can do to have the NN more amenable to handling exponentially varying inputs/outputs ? Finally does anyone know of any papers that does parameter estimation of exponential analytic functions ? The one I linked fits a linear function and I think the complexity might be the major issue here.
