[site]: stackoverflow
[post_id]: 5120152
[parent_id]: 
[tags]: 
To Make My Outer Loop be Aware of Existence of the Inner Loop

I think my title basically describes what I stuck at now in XSLT.But to be more precise, what I mean is "How to make the outer loop be aware that the inner DOES get executed or not in XSLT". Please pardon me since I am a beginner in this field. Firstly, my initial xml is a blank one, and my XSLT is basically going to grab data from loads of xml data files, and create a resulting xml file, with the tags that I want. Specifically, the problems I am concerning happen in two templates "Outer" and "Inner", and these two templates are actually loop structure themselves, they are trying to loop through every row of certain xml files. The control of flow is straight-forward: I call Outer in my main XSLT and then we enter a "for-each" loop of Outer, and within each run of this Outer, I will call "Inner", so it is a Loop-within-Loop Structure. For now, we can ignore all other things but only know that once I enter the outer loop, I will create a "HL" Segment, and then Inner gets called and entering the inner loop, and for each run of Inner, I will create a "HL" segment too. One thing to be noted it that, Inner cannot be entered unless certain criteria is met, so there can be situations that Inner is not entered at all, and all the HL segment is created in Outer alone. It is this HL segment that I want to count, I will share a small fragment of code to let you have an idea. Outer Loop: .... Inner Loop: .... Currently, there are two rows in $rechca, and only one in $rechcf that satisfy the two loops, so the Outer Loop repeats two times and Inner just gets executed one time. Therefore, the desired output should be 2 3 4 But currrent output is: 2 3 3 If there are no this inner Loop, things will be perfect. But currently the Outer Loop is not aware of the existence of the Inner Loop: Once Inner gets called, then when it returns the control to outer Loop, the at the top should not contain the "position()+1" but "position()+2" instead (Since Inner got called once before entering this new Outer, so a new HL segment was created in there). As you may see, I created a variable called "indicator". In Java/C++, I would just update this indicator to another value other than 0, every time we enter inner, set it to one. Then doing a test at HL01 of Outer to determine correct value to be added to position(). Really stuck here, please kindly help! Thanks.
