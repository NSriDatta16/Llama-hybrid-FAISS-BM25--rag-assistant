[site]: stackoverflow
[post_id]: 2483402
[parent_id]: 2481664
[tags]: 
While I realize you are getting your URLs from Application, this example uses a contrived url source that you can modify to your needs. I would think you would probably want to store url/link text so I used KeyValuePair as the array element type. If you truly need only the URL, simply change KeyValuePair to string. jQuery .getJSON Using a simple aspx page handler would be accomplished something like this: UriListHandler.aspx protected void Page_Load(object sender, EventArgs e) { string someParam = Request["someParam"] ?? ""; Response.ClearContent(); Response.ClearHeaders(); // prevent cacheing Response.Cache.SetExpires(DateTime.UtcNow.AddMinutes(-1)); Response.Cache.SetCacheability(HttpCacheability.NoCache); Response.Cache.SetNoStore(); Response.ContentType = "text/plain"; // note, this is just a list, not a dictionary. Keys need not be unique KeyValuePair [] uriList = new KeyValuePair [100]; for (int i = 0; i (String.Format("http://www.example.com/page{0}.htm?someParam={1}", i, someParam), String.Format("page{0}", i)); } JavaScriptSerializer serializer = new JavaScriptSerializer(); string json = serializer.Serialize(uriList); Response.Write(json); } UriListClient.htm $(document).ready(function() { $('#getUriListButton').click(function() { $.getJSON('UriListHandler.aspx', { someParam: "HEY" }, function(responseObj, status, xhr) { var list = $(' '); for (var i = 0; i ').attr('href', responseObj[i].Key).html(responseObj[i].Value); list.append(link).append(' '); } var uriListContainer = $('#uriListContainer'); uriListContainer.html('').append(list); }); }); }); Get Uri List jQuery.ajax Using a webservice is going to introduce some new concepts such as using 'ScriptService' attribute. UriListService.asmx.cs using System; using System.Collections.Generic; using System.ComponentModel; using System.Web; using System.Web.Script.Services; using System.Web.Services; namespace WebApplication1 { [WebService(Namespace = "http://tempuri.org/")] [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)] [ToolboxItem(false)] // To allow this Web Service to be called from script, using ASP.NET AJAX, uncomment the following line. [ScriptService] // we uncommented the following line ;-) public class UriListService : WebService { [WebMethod] public KeyValuePair [] GetUriList(string someParam) { // prevent cacheing HttpContext.Current.Response.Cache.SetExpires(DateTime.UtcNow.AddMinutes(-1)); HttpContext.Current.Response.Cache.SetCacheability(HttpCacheability.NoCache); HttpContext.Current.Response.Cache.SetNoStore(); // note, this is just a list, not a dictionary. Keys need not be unique var uriList = new KeyValuePair [100]; for (int i = 0; i ( String.Format("http://www.example.com/page{0}.htm?someParam={1}", i, someParam), String.Format("page{0}", i)); } return uriList; } } } UriListServiceClient.htm $(document).ready(function() { $('#getUriListButton').click(function() { $.ajax({ url: 'UriListService.asmx/GetUriList', type: "post", // http post to ScriptService data: '{"someParam": "HEY"}', // the params expected by the server contentType: "application/json", // sending json request dataType: "json", // expecting json response success: function(data) { var unwrappedDate = data.d; var list = $(' '); for (var i = 0; i ').attr('href', unwrappedDate[i].Key).html(unwrappedDate[i].Value); list.append(link).append(' '); } var uriListContainer = $('#uriListContainer'); uriListContainer.html('').append(list); }, error: function(a, b, c) { alert(a.responseText); } }); }); }); Get Uri List .ASPX codebehind To do this without ajax from codebehind is fairly trivial UriListFromCodeBehind.aspx public static void RenderUriList(string someParam) { // note, this is just a list, not a dictionary. Keys need not be unique var uriList = new KeyValuePair [100]; for (int i = 0; i ( String.Format("http://www.example.com/page{0}.htm?someParam={1}", i, someParam), String.Format("page{0}", i)); } for (int i = 0; i {1} \r\n", uriList[i].Key, uriList[i].Value)); } } Uri List: Hope that helps, Sky
