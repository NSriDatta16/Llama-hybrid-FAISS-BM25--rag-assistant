[site]: stackoverflow
[post_id]: 2775547
[parent_id]: 
[tags]: 
Minimum Acceptable Code Coverage Numbers in the real world

Possible Duplicate: What is a reasonable code coverage % for unit tests (and why)? I am in the middle of putting together some guidelines around unit test code coverage and I want to specify a number that really makes sense. It's easy to repeat the 100% mantra that I see all over the internet without considering the cost benefit analysis and when diminishing returns actually sets in. I solicit comments from persons who have actually reported code coverage on real-life, medium/large-sized projects. What percentages were you seeing? How much is too much? I really want some balance ( in figures ) that will help developers produce hight quality code. Is 65% coverage too low to expect? Is 80% too high?
