[site]: crossvalidated
[post_id]: 410778
[parent_id]: 
[tags]: 
How would someone use curves as an input to a supervised learning model?

I was asked this question during a test and couldn't figure out the answer: You have a set of curves against time $X_i(t)$ that you want to use as input to a supervised learning model. The curves could be daily or hourly observations of a time varying metric, measured from $t=0$ up to $t=T$ . Each individual curve $X_i(t)$ corresponds to a single example in the training data set. How do you encode the curves into a feature or set of features for your model? The different curves would look something like: The example mentioned was yield curves , but it was indicated that the question was regarding any set of time varying curves, as long as they were all over the same length of time $T$ . Presumably the rate at which the curves are sampled is regular, but high enough that using the discrete samples as an input vector won't work. The purpose of the supervised learning model wasn't specific: It could be forecasting, or regression, or some sort of logistic regression. The main idea was how would you feature engineer the curve data, My answer was to either: Choose a sufficiently high order n of polynomial, such that any one of the $X_i(t)$ can be reasonably approximated by a polynomial $\hat{X}_i = x_{i,0} + x_{i,1} t + x_{i,2} t^2 + \cdots + x_{i,n} t^n$ and then use $x_{i,0}, x_{i,1}, x_{i,2}, \ldots ,x_{i,n}$ as my $n+1$ features. Or, treat each curve as a time series, and use the values of the ACF,PACF, the seasonality index, and the slope of the trend as inputs to our model. The response I got was: neither, you need to use principal component analysis. But no further explanation was given. My questions: What is wrong with the approaches I suggested? And how exactly can principal component analysis turn our curves into features? Wouldn't PCA just rotate our curves for us?
