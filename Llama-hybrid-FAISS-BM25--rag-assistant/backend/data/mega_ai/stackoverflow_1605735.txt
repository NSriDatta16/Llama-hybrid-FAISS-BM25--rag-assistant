[site]: stackoverflow
[post_id]: 1605735
[parent_id]: 
[tags]: 
ASP.NET MVC, Model and ViewModel separation of concerns?

Lately, I've been exploring what's the best way to organize presentation layer of ASP.NET MVC application when underlying Model is complex. What came up till now is MVVM architecture with their ViewModel objects. However, I'm not sure what are the best practices when this kind of architecture is in case. Does ViewModel objects can contain Model objects? If MVVM used, is it advisable that Model objects are used on Views? Where validation should be implemented, on ViewModel or Model classes? Should business layer (service layer) know about ViewModel , and who is responsible for mapping between ViewModel and Model?
