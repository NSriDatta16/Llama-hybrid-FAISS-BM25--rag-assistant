[site]: datascience
[post_id]: 31585
[parent_id]: 
[tags]: 
Interpreting hyper-engine output for hyperparameter optimization of a neural network?

I am currently trying to optimize the learning rate of a neural network built in tensorflow. The network has 3 hidden layers, with 500, 250 and 100 neurons respectively. I have adapted code from an example provided by the author of hyper-engine, a python package for hyperparameter optimization that can be used with tensorflow. The example may be found here . Essentially all that has been altered is the definition of the model provided for hyperparameter optimization. The range over which the learning rate will be evaluated has also been narrowed by an order of magnitude. The current search space is from 0.1 to 0.01. The output from this python script is an xjson file. The xjson consists of multiple entries of a single key value pair, {'points' : 'values'}. 'values' quite clearly represents the accuracy of the classifier on the test data. The key, 'points' seems like it should represent the learning rate corresponding to the respective accuracy for that key value pair. However, the values taken on by points range from 0.000002 - 1. For this reason, I'm finding quite difficult to interpret the meaning of 'points'. I also failed to find any information about interpretation of the output on the github for this package. If anybody could help me understand the output from this code, it would be greatly appreciated.
