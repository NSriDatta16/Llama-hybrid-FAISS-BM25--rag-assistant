[site]: crossvalidated
[post_id]: 616209
[parent_id]: 616157
[tags]: 
You missed some important output from plot_smooth() and some critical understanding about what the function is doing. The reason I was confused absent knowledge about what plot_smooth() was doing is that the models you specified have up to 85 smooths (depending on how the levels of medu fall into the group s) and yet the plots showed a single smooth per group . This doesn't make sense — why just one smooth? What does that smooth represent for each group? — unless you understand what plot_smooth() is doing. Looking at the printed output that plot_smooth() sends to the console explains what must be going on. Here is a reproducible example using the simdat data set from itsadug : library("mgcv") library("itsadug") library("dplyr") data(simdat) # Model with random effect and interactions: m3 filter(Group == "Adults") m1 filter(Group == "Children") m2 This produces: where the effects show are clearly different, more so than in your actual example. What's going on? Look at the output from plot_smooth() that is printed to the console: Summary: * Time : numeric predictor; with 50 values ranging from 0.000000 to 2000.000000. * Subject : factor; set to the value(s): a01. # Note what is states about the subjects chosen for the three plots. In m1 the subject a01 was chosen, while in m2 the subject c01 was chosen. For m3 we are back to a01 . This explains why one of the curves matches across the three plots but the other doesn't. The reason what different subjects is because of your subsetting the data - subject a01 in this example is only in one of the Child or Adult groups, for obvious reasons. Hence, when you are plotting these smooths for the individual models there is no way that it could show the same subject across all three models/plots. In your case it is reasonable to assume that the same medical unit is present in both groups, but it is also reasonable to assume that the default/reference level of the medu factor in the data used to fit the subset models is different. gam() and bam() drop empty levels on factors, which, combined with the previous point will mean than different medu levels from the full data set become the reference level in the subsets of data, and hence you see the behaviour that you ask about; the medu level in the two data subset plots is different and hence one of the smooths in the combined model/plot will not match with one of the two plots for the data subset models. The solution could be to specify the medu level you want to show in all plots, assuming that one level is present in all groups? But I would ask you why you want this plot? Why do you want to focus on a specific subject? What are you trying to show for these smooths? If it is to show some kind of average effect in the two groups, conditioning on a single subject would be a bit weird. If you explain a bit more about why you are doing what you are doing, I can suggest an alternative way to proceed.
