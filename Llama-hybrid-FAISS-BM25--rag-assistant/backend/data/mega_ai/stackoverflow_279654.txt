[site]: stackoverflow
[post_id]: 279654
[parent_id]: 279546
[tags]: 
Edit: Didn't realize you wanted to try and fit the text to a fixed number of lines. This was a tough one to try and solve. This is the best I could come up with and may not be the most elegant, but it seems to work: public SizeF CalculateWidth(Font font, Graphics graphics, int numOfLines, string text) { SizeF sizeFull = graphics.MeasureString(text, font, new SizeF( float.PositiveInfinity, float.PositiveInfinity), StringFormat. GenericTypographic); float width = sizeFull.Width/numOfLines; float averageWidth = sizeFull.Width/text.Length; int charsFitted; int linesFilled; SizeF needed = graphics.MeasureString(text, font, new SizeF(width, float. PositiveInfinity), StringFormat. GenericTypographic, out charsFitted, out linesFilled); while (linesFilled > numOfLines) { width += averageWidth; needed = graphics.MeasureString(text, font, new SizeF(width, float.PositiveInfinity), StringFormat.GenericTypographic, out charsFitted, out linesFilled); } return needed; } Example usage: Font font = new Font("Arial", 12, FontStyle.Regular, GraphicsUnit.Pixel); Graphics g = Graphics.FromImage(new Bitmap(1, 1)); string text = "Some random text with words in it."; SizeF size = CalculateWidth(font, g, 3, text);
