[site]: crossvalidated
[post_id]: 169616
[parent_id]: 
[tags]: 
How would you modify your model according to that confusion matrix?

How would you proceed with your model, if the confusion matrix looks like on the picture below? Classes 2, 3 and 4 get misclassified a lot among each other. EDIT: The Confusion Matrix was created using a single RandomForest estimator, trained on all 9 Classes. 18k examples, 200 trees. my next approach was to build 4 different random forest estimators in scikit ipython, so maybe i can distinguish the similar classes better: estimator1 can only classify: "Class_2" and "Not_Class2". estimator2 can only classify: "Class_3" and "Not_Class3" estimator3 can only classify: "Class_4" and "Not_Class4" estimator_rest can classify: Classes 1 and 5 to 9. And then i iterate through every datasetrow for prediction and make an If-Check through all estimators until one of them can classify it. So there is no voting or anything. So each estimator checks, if the row is of its own class. if yes, make a prediction and go to next loop iteration, else pass datarow over to next estimator. This approach is extremely slow though. Because i iterate row-wise through all dataset rows and in worst case i call the estimator 4 times. So my question also involves, if there is a more efficient / faster way to combine these estimators? Atm 100 predictions cost 1 minute of processing time. That's too slow. I'm using scikit, pandas python.
