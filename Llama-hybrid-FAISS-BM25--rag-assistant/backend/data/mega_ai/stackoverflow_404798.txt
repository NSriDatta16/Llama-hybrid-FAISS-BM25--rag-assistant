[site]: stackoverflow
[post_id]: 404798
[parent_id]: 71201
[tags]: 
Of course you could (should) also use the caching features in the SixPack library . Forward (normal) cache, based on HttpCache, which works by putting attributes on your class. Simplest to use, but in some cases you have to wait for the content to be actually be fetched from database. Pre-fetch cache, from scratch, which, after the first call will start refreshing the cache behind the scenes, and you are guaranteed to have content without wait in some cases. More info on the SixPack library homepage . Note that the code (especially the forward cache) is load tested. Here's an example of simple caching: [Cached] public class MyTime : ContextBoundObject { [CachedMethod(1)] public DateTime Get() { Console.WriteLine("Get invoked."); return DateTime.Now; } }
