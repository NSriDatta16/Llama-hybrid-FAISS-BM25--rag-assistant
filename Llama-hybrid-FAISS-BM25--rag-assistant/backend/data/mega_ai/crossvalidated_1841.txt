[site]: crossvalidated
[post_id]: 1841
[parent_id]: 
[tags]: 
Hypothesis testing that one time-series of a measure of entropy doesn't belong to a population

Disclaimer: I'm a software engineer, not a statistician, so please forgive any blunt error :-) I have a set of time-series "curves", each measuring the entropy of a given artifact. Now, I'm standing over the following premises (please criticize them as you see fit): In order to approximate the upper bounds of the Kolmogorov complexity $K(s)$, of a string $s$, one can simply compress the string $s$ with some method, implement the corresponding decompressor in the chosen language, concatenate the decompressor to the compressed string, and measure the resulting string's length. For this purpose, I've used the bzip2 application, setting its compression level to the supported maximum (-9). If one is only interested in a time-series analysis of a set of evolving strings, calculating the compressed deltas is enough to present a relative measure of entropy between any two strings (at least that's my interpretation after reading Cilibrasi05). For that, I used the diff unix tool, with the (--minimal) parameter, again followed by a bzip2 compression, with the aforementioned settings. I'm doing this to analyze the evolution of the entropy in a software artifact (code, model, whatever). I'm not worried with the absolute values, but with the relative increase (or decrease) in entropy. Now here comes the problem: I've done this for a set of 6 artifacts, which ought to belong to the same population, but I don't know how to provide statistical evidence of that (the corresponding of doing a two-tailed t-test of two samples). One of the artifacts evolution should be different from all the others. We're talking something like an exponential v.s. sub-linear growth. How do I provide statistical evidence of that? Again, the disclaimer of being a software engineer. Although I would appreciate every academic reference (papers, books, etc.) you could handle, I'm looking for something pragmatic that I can use in the next few days, like a script in R, or something in SPSS. P.S. I'm sorry for asking for a recipe , instead of a theoretical explanation.
