[site]: stackoverflow
[post_id]: 4881362
[parent_id]: 4838591
[tags]: 
Firstly, I'm assuming you are not already running inside a Maven plugin, as there are easier ways to achieve that with the available APIs there. The MavenXpp3Reader solution posted earlier will allow you to read the POM easily, however does not take into account inheritance of the parent and interpolation of expressions. For that, you would need to use the ModelBuilder class. Use of this is quite simple, for example from Archiva is this code fragment: ModelBuildingRequest req = new DefaultModelBuildingRequest(); req.setProcessPlugins( false ); req.setPomFile( file ); req.setModelResolver( new RepositoryModelResolver( basedir, pathTranslator ) ); req.setValidationLevel( ModelBuildingRequest.VALIDATION_LEVEL_MINIMAL ); Model model; try { model = builder.build( req ).getEffectiveModel(); } catch ( ModelBuildingException e ) { ... } You must do two things to run this though: instantiate and wire an instance of ModelBuilder including its private fields use one of Maven's resolvers for finding the parent POMs, or write your own (as is the case in the above snippet) How best to do that depends on the DI framework you are already using, or whether you want to just embed Maven's default container.
