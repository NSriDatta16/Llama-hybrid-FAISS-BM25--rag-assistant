[site]: stackoverflow
[post_id]: 5004955
[parent_id]: 5004882
[tags]: 
I would suggest a language that has a dense virtual machine instruction set. Another answer here suggested Forth, which is surely a VM, but which I think fails that test by virtue of using pointers (non-dense fullwords) to select execution routines. Google's compiled version of Java, Dalvik , is supposed to be designed with the intent to minimize memory footprint while being pretty fast to interpret. Being open source, apparantly you can get it and use it for your own purposes. You can likely bend it to avoid use of garbage collection to help manage the data storage footprint. There is also a Cint , an interpreter for C with a small VM. Probably not as fast as Dalvik, which uses simulated registers rather than a stack.
