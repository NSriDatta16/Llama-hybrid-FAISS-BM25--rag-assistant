[site]: stackoverflow
[post_id]: 4317585
[parent_id]: 4311034
[tags]: 
Questions specific to game development are best suited to https://gamedev.stackexchange.com/ by the way. So in the past I've had say an EnemyManager class I consider any SomethingManager class to be a sign that your code isn't organised accurately yet. For the most part, objects should manage themselves. If they can't, that implies there is some external information about them, and that information probably has a representation more specific than 'manager'. 3 game-specific examples might be GameWorld, GameRegion, or GameLevel. Enemies exist within a world, or a region of the world, or a current game level, so have such an object maintain its list of enemies. and likewise for the player projectiles had a PlayerProjectilesManager class Projectiles too would live in some sort of game space, a world, region, or level. By now, you can probably guess that one of the above objects can (and probably should) be responsible for owning all the above objects (perhaps indirectly, via a container class, but not via a heavyweight manager of any sort) and responsible for detecting collisions and resolving them.
