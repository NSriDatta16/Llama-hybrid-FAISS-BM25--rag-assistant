[site]: stackoverflow
[post_id]: 1129067
[parent_id]: 814756
[tags]: 
First, you could check out the Ribbon Preview in the WPF Toolkit by Microsoft. Or, one general approach would be like this: Make a DependencyProperty in your Window / top-level control that you can trigger off of, like IsShowingKeyTips . Catch keyboard input to flip this as you deem appropriate. Make a ContentControl that has two dependency properties like 1) IsShowingKeyTip and 2) KeyTipText . Let's call this KeyTipContentControl . Edit the ContentControl 's ControlTemplate to look how you want. Make it a Canvas or your favorite layout container, use some bindings to size it properly, maybe throw in some negative Margin values. If you want to be fancy, make some AttachedProperties like KeyTip.Text to bubble them up from the plain control to the KeyTipContentControl . In your XAML, put the ContentControls around the Controls you want the KeyTips on. Set the bindings as appropriate. You'll end up with something like this at the top level: To handle the key press in an elegant fashion is not something I'm up for right now. :-)
