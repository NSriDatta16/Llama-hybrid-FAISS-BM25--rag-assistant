[site]: stackoverflow
[post_id]: 5411134
[parent_id]: 
[tags]: 
Database topology design confusion

Background I run (read: inherited) a network that is setup very similar to a shared hosting provider. There are between 300-400 sites running on the infrastructure. Over the years the database topology has become extremely fragmented, in that it's a 1 to 1 relationship from webserver->database. Problems The applications are 9 times out of 10 designed by third party design firms that have implemented wordpress/joomla/drupal etc. The databases are sort of haphazardly spread across 6 database servers. They are not replicated anywhere. The applications have no concept of separate database handles to separate INSERT to a master and a SELECT to a slave. Using single master builtin mysql replication creates a huge bottleneck. The amount of inserts will down the master db very quickly. Question My question becomes, how can I make my database topology as flat as possible while leaving room for future scalability? In the future I'd like to add more geographic locations to my network that can replicate the same databases across a 'backnet'. In the past I've looked into multi-master replication but saw a lot of issues with things like auto_increment column collisions. I'm open to enterprise solutions. Something similar to the Shareplex product for Oracle replication. Whatever the solution is, it's not reasonable to expect the applications to change to accommodate this new design. So things like auto_increment columns need to remain the same and gel across the entire cluster. Goal My goal is to have an internally load balanced hostname for each cluster that I can point all the applications at. I This would also afford me fault tolerance that I don't presently have. At present, removing a database from rotation is not possible. Applications like Cassandra and Hadoop look amazingly similar to what I want to achieve but NoSQL isn't an option for these applications. Any tips/pointers/tutorials/documentation/product recommendations are greatly appreciated. Thank you.
