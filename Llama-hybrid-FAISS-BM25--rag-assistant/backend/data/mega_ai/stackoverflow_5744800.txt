[site]: stackoverflow
[post_id]: 5744800
[parent_id]: 5743020
[tags]: 
You can pack any number of files into AIR app (although export time may rise substantially). You can't create 'just' executable, because AIR apps need to be installed and HTMLLoader will need separate files for pages and pictures anyway. Basically, all you need to do is: create AIR with mx:HTML as main content point mx:HTML to app:/index.html make sure your site files are embedded en masse into installer (put them into src dir) For pdf files to work in the browser, user need Acrobat installed. Flash content should work inside mx:HTML. Update: Hide all files from user is harder. I did something similar though, not entire site, but application with embedded pages and links. All your content can be packed into some zip file (not in exe, even native AIR application cannot customize its exe wrapper.) You can even encrypt each file if you wish. The problem is links and files (pictures, styles and scripts.) I solved pictures problem with data URI scheme (see my question - self-answered - about this.) I think other files can be embedded this way too. To make links working, you need to listen to Event.LOCATION_CHANGE. New location will tell where HTML control wants to go (it will not be able to find page), unzip corresponding page and set it as htmlText. So, if you really wish to embed everything, that's what I would do: Pack all your files into one zip file for later unzipping using some library with non-sequential zip access (I used coltware's airxzip) Make page serving system. This includes unpacking page, scanning it for used files (css, js, pictures), unpacking files, converting them into base64 and embedding into page with data:URI scheme. If your files aren't (or rarely) shared between pages, you can embed them before packing and use as is. I don't know if Webkit supports JavaScript via this protocol, even if not, you can convert it to text based script.
