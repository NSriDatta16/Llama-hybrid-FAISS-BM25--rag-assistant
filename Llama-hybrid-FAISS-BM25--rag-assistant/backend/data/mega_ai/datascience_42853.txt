[site]: datascience
[post_id]: 42853
[parent_id]: 42843
[tags]: 
If you are looking for something easy to use and to read, definitely go for Keras. Example of CNN in Keras : model = Sequential() model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=input_shape)) model.add(Conv2D(64, (3, 3), activation='relu')) model.add(MaxPooling2D(pool_size=(2, 2))) model.add(Dropout(0.25)) model.add(Flatten()) model.add(Dense(128, activation='relu')) model.add(Dropout(0.5)) model.add(Dense(num_classes, activation='softmax')) model.compile(loss=keras.losses.categorical_crossentropy, optimizer=keras.optimizers.Adadelta(), metrics=['accuracy']) So easy to read ! Source , literally the first link when searching for "keras CNN" on Google. I really enjoy Keras, because it's easy to read, easy to use, great documentation, and if you want to mess up things at lower level you can do it by touching the back-end of Keras (Tensorflow or Theano) EDIT (following your comment) Excellent blog : Keras vs Tensorflow
