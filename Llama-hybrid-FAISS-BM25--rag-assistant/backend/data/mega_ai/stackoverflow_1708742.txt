[site]: stackoverflow
[post_id]: 1708742
[parent_id]: 1708690
[tags]: 
I don't know about performance, but in terms of maintenance and readabilty the use of a list<> is far better. One large problem with using datasets with data tables is that the next guy to work on the code will have a big problem figuring out what tables are in a given dataset - especially when you consider the habit a lot of people seem to have of creating new tables and adding them to the set for use later. With a list of objects it is strongly typed and explicit, moreover the structure of the object is well known and will references to properties will change with the object. Often with datatables people will resort to referencing columns by index rather than name which is a timebomb. If performance is an issue then look at other generic collections, things like dictionary have very very nice key retrieval properties (almost n(1) apparently) which can make a huge impact in the right spots. Obviously this sits on top of a discussion about interfaces and am assuming that you know how you want to expose your objects functionality.
