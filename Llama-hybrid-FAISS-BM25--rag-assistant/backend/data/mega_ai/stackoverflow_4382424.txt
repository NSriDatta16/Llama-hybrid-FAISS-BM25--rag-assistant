[site]: stackoverflow
[post_id]: 4382424
[parent_id]: 4379574
[tags]: 
After having a quick look at your code I think I found a couple of parts that needed attention. I'll try and break them down below: SMSAppAppDelegate 1) Notice that in your interface file, you declare your CoreData variables with an underscore at the end of the variable name. Then you create properties for each of the ivar without the underscore. That is all fine as long as you @synthesize them making the correct assignment, which seems to be missing from your implementation: @synthesize managedObjectContext=managedObjectContext_; @synthesize managedObjectModel=managedObjectModel_; @synthesize persistentStoreCoordinator=persistentStoreCoordinator_; DownloadContacts 1) In this class you are calling the managedObjectContext directly through the variable. I wouldn't recommend that but this is not your actual problem. Notice that you release the managedObjectContext on dealloc even though you have no ownership of it! 2) What I would do in this case is declare a property for the context and always access it via the property. Also if you rename your instance variable to include an underscore at the end you are minimising your chances of accessing it directly (i.e. without using self.) and it will make it easier for you to find where in this class you are actually doing that (there are a couple of places from memory). So in your interface file, rename managedObjectContext ivar and declare a property: NSManagedObjectContext *managedObjectContext_; ... @property (nonatomic, retain) NSManagedObjectContext managedObjectContext; And don't forget to make the assignment on @sythesize and release on dealloc, since you are using a retain property: @synthesize managedObjectContext=managedObjectContext_; ... [managedObjectContext_ release]; Then if you try and compile you will get two or three errors of unrecognised instance variable which is where you have to go and change it to self.managedObjectContext MessagesRootViewController And finally I'd recommend you go through the same process in your MessagesRootViewController but this one should still work fine as is! See how you go and let me know if any of the above is not clear! Cheers, Rog
