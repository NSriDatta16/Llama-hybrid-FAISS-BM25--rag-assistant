[site]: stackoverflow
[post_id]: 217239
[parent_id]: 216865
[tags]: 
If a macro can be def'ed, there must be a facility to undef. a memory tracker I use defines its own new/delete macros to track file/line information. this macro breaks the SC++L. #pragma push_macro( "new" ) #undef new #include #pragma pop_macro( "new" ) Regarding your more specific question: namespaces are often emul;ated in C by prefixing library functions with an identifier. Blindly undefing macros is going to add confusion, reduce maintainability, and may break things that rely on the original behavior. If you were forced, at least use push/pop to preserve the original behavior everywhere else.
