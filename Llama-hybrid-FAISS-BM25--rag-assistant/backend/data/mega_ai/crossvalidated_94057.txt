[site]: crossvalidated
[post_id]: 94057
[parent_id]: 
[tags]: 
lme / lmer - split-plot with Non orthogonal subdesign

I have an agricultural field experiment (testing a plant protection agent): Split plot design with: 2 whole plot treatments "infestation": "high" & "low" 8 split-plot treatments ("treat"): 1. Untreated Control ("Ctrl1") 2. Reference Product ("Ctrl2") 3. 1 x Test-Product 1 4. 2 x Test-Product 1 5. 3 x Test-Product 1 6. 1 x Test-Product 2 7. 2 x Test-Product 2 8. 3 x Test-Product 2 and 4 replicates ("block"): The parameter of interest in this example is grain ( yield ): First, I could model this: lme(yield ~ infestation * treat, random = ~ 1 | block/infestation, data) or lmer(yield ~ infestation * treat + (1 | block/infestation), data) But as can be seen treatments 3-8 can and have to be recoded as 2 products ("prod") being tested 1-3 times ("times"), so I have a 2x3 subdesign. One possibility would be subsetting the data: data2 and recode the resting treatments to "prod" = 1,2 and "times" = 1:3 then run: lme(yield ~ infestation * form * times, random = ~ 1 | block/infestation, data) Afterwards I could still do contrasts to compare the control treatments with the treated ones. But (here my actual problem starts): I read an article of H.P. Piepho : " A Note on the Analysis of Designed Experiments with Complex Treatment Structure ", HortScience 41(2):446--452. 2006 The author wants to show " how a meaningful analysis can be obtained based on a linear model by appropiate coidng of factors. (...) Our main objective is to demonstrate that the introduction of dummy variables can conveniently solve a wide variety of inferential problems that would otherwise either require ... multiple linear contrasts... or not make fully eficient use of the data, e.g when only data from orthogonal subdesigns are analysed. " A very similar example (Example 1 in the article) is discussed within, and an alternative analysis in SAS is proposed - which I wanted to try to realise in R. The author adds a dummy variable ( ctrl_vs_trt ) to the data and codes it: "control", "trt" (in my case trt , Ctrl1 , Ctrl2 ". The he uses: (in his case prod is form ulation, and times is conc entration) PROC GLM; CLASS block contr_vs_trt form conc; ## MODEL set = block contr_vs_trt contr_vs_trt * form contr_vs_trt * conc contr_vs_trt * form * conc; RUN. I cite a further paragraph: " Of course, a test for contr_vs_trt is not produced with this model, and one cannot compute simple means or marginal means. Also, the Type I SS for form , conc , and form x conc are not the same as with Type III SS. With Type III SS, the test for form is adjusted for conc , as fitting conc takes out the control when coding factors as in Table "xy" (as I did here). Similarly, the test for conc is adjusted for form , because fitting of form takes out the control. As a result, the Type III ANOVA for the model form x conc turns out to be that for the 3x2 factorial subdesign. (...) It seems much more stringent and transparent to use the nested model contr_vs_trt/(form x conc) , as this properly reflects all nesting and crossing features of the design. " Now, how to do that in lme or lmer ? lme does not run at all, even if I simplify to: lme(yield ~ prod * times, random = ~1|block, data), I get Error in MEEM(object, conLin, control$niterEM) : Singularity in backsolve at level 0, block 1 The term prod * times cannot be run ( prod + times logically can). Eliminating both controls from the data set resolves this problem. lmer runs with prod * times , but always given the message: fixed-effect model matrix is rank deficient so dropping "x" columns / coefficients I understand that the subdesign is not orthogonal and therefor dropping is occuring, but I cannot say if the analysis after dropping can still be right. Also, I do not know how to specify the full model (leaving out the "infestation" whole plot for a second): lmer(yield ~ prod * times + (1|block/ctr_vs_trt), data) prod * times is nested inside ctr_vs_trt but both are nested inside the same block (or whole plot). Is nesting of fixed effects possible in lme or lmer - does it work as I proposed? Does it even make sense to run the full model? With aov() I get the model running, even the partitioning of Df's is right. But due to strong non-orthogonality it is not possible to assume that the results are right. I can get meaningful results subsetting and using contrasts, but I found the authors approach interesting and it would help in the analysis of some of my other trials. Thanks in advance for any help; I hope this question is not too long...
