[site]: stackoverflow
[post_id]: 1947155
[parent_id]: 1947030
[tags]: 
trying to give a complete answer based on the answers given here. the way you found (please don't use this one because it is not very readable): def val(): var = float(raw_input("Age:")) status = ("Working","Retired")[var>65] print "You should be:",status using the python 2.5+ syntax: def val(): var = float(raw_input("Age:")) status = "Working" if var>65 else "Retired" print "You should be:",status using the other common method still preferred by some people: def val(): var = float(raw_input("Age:")) status = var>65 and "Working" or "Retired" print "You should be:",status i personally tend to use the last since the order of the operands is the same as the C ternary operator. EDIT: found some problems with the last approach (thx Roberto Bonvallet). from wikipedia: this code would break if op1 could be a "falsy" value (None, False, 0, an empty sequence or collection, â€¦) as the expression would return op2 (whether it was truthy or falsy) instead of the (falsy) op1 so my final suggestion would be to use the 2.5+ ternary operator since it is simple, readable and offers short-circuit behavior.
