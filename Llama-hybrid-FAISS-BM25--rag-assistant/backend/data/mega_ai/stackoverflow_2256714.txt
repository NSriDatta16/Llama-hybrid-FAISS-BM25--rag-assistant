[site]: stackoverflow
[post_id]: 2256714
[parent_id]: 2256604
[tags]: 
There are some tools that might help you do this (things that aim to encrypt your bytecode also tend to remove unused things). However I would NOT advise doing that. It is good that you found a way to encourage yourself to keep the code tested (great infact!). However, as you have found out, the way you chose isn't all that good. There are many reasons to keep the test code separate from the code itself. What I would do is (one class at a time): 1) bite the bullet and make a parallel set of classes for testing 2) move anything that has an @Test before it to the new classes 3) move over anything else that keeps the tests from compiling/running. Then make use of a code coverage tool (I like Cobertura but there are others) to give you a visual of how much of your code is tested. Add to that the idea of writing the tests before you run the code and you should do well. Basically this is a very formulated way of working. If you follow the regiment of coding and code coverage and then fix the places where the coverage is poor you should find it just as easy as if the test code is in the class. It is all habit - and good habits are better than bad :-)
