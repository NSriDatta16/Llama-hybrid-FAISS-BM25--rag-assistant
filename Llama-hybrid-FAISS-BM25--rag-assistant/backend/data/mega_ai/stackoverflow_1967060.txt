[site]: stackoverflow
[post_id]: 1967060
[parent_id]: 1966579
[tags]: 
If those are "parts" to the same application, you should separate them using URL mappings instead, this way maintenance is easier (since the url endpoints will be "centralized" and you'll be editing them in python) and everything gets more concise (app.yaml maps applications ). Read this for clarification You'd basically add new mappings to several different handlers and organize those as python modules. (...) from myapp import Part1, Part2 # etcetera (...) application = webapp.WSGIApplication([('/part1', Part1), ('/part2', Part2])]) In case you're having trouble modularizing your python code, perhaps reading the official docs will help. EDIT : My answer above is basically the same as the first one, it wasn't there when I started answering, sorry. A little more clarification on why this is better than having each part as a separate application: Module loading will only happen once per application restart If you check your appengine dashboard, some modules may take a long time to load (mostly when they're big, obviously) Profiling your whole set would be just a matter of adding a Middleware to application . Even with all that, I think the most important point would be: code organization will be way easier to accomplish since you can separate applications and logics in individual packages/applications.
