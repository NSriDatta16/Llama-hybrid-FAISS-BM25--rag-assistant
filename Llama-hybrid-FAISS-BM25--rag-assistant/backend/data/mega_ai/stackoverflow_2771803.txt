[site]: stackoverflow
[post_id]: 2771803
[parent_id]: 2770792
[tags]: 
If you use psycopg2 you can use cursor.description to check column names, and use fetched data type to convert it to required string like data to acceptable format. This code creates INSERT statements that you can use not only with PostgreSQL, but also with other databases (then you probably will have to change date format): cursor.execute("SELECT * FROM %s" % (table_name)) column_names = [] columns_descr = cursor.description for c in columns_descr: column_names.append(c[0]) insert_prefix = 'insert into %s (%s) values ' % (table_name, ', '.join(column_names)) rows = cursor.fetchall() for row in rows: row_data = [] for rd in row: if rd is None: row_data.append('NULL') elif isinstance(rd, datetime.datetime): row_data.append("'%s'" % (rd.strftime('%Y-%m-%d %H:%M:%S') )) else: row_data.append(repr(rd)) print('%s (%s);' % (insert_prefix, ', '.join(row_data))) In psycopg2 there is even support for COPY . Look at: COPY-related methods on their docs If you prefer using metadata then you can use my recipe: Dump PostgreSQL db schema to text . It is based on Extracting META information from PostgreSQL by Lorenzo Alberton
