[site]: stackoverflow
[post_id]: 2907408
[parent_id]: 2907259
[tags]: 
This is a candidate for an immutable struct that " looks like " an enumeration: (Also, I noticed you used the same id value for two of them, so I fixed that... You can use the following just as you would an enumeration... PostVoteTypeFunctions myVar = PostVoteTypeFunctions.UpVote; and real nice thing is that this approach requires no instance storage other than a 4-byte integer (which will be stored on stack, since it's a struct). All hard-coded values are stored in the type itself... of which only one will exist per AppDomain... public struct PostVoteTypeFunctions { private int id; private bool isDef; private PostVoteTypeFunctions ( ) { } // private to prevent direct instantiation private PostVoteTypeFunctions(int value) { id=value; isDef = true; } public bool HasValue { get { return isDef; } } public bool isNull{ get { return !isDef; } } public string Name { get { return id==1? "UpVote": id==2? "DownVote": id==3? "SelectAnswer": id==4? "Favorite": id==5? "Offensive": id==6? "Spam": "UnSpecified"; } } public int PointValue { get { return // Why not hard code these values here as well ? id==1? PostVotePointValue.UpVote: id==2? PostVotePointValue.DownVote id==3? PostVotePointValue.SelectAnswer: id==4? PostVotePointValue.Favorite: id==5? PostVotePointValue.Offensive: id==6? PostVotePointValue.Spam: 0; } } // Here Add additional property values as property getters // with appropriate hardcoded return values using above pattern // following region is the static factories that create your instances, // .. in a way such that using them appears like using an enumeration public static PostVoteTypeFunctions UpVote = new PostVoteTypeFunctions(1); public static PostVoteTypeFunctions DownVote= new PostVoteTypeFunctions(2); public static PostVoteTypeFunctions SelectAnswer= new PostVoteTypeFunctions(3); public static PostVoteTypeFunctions Favorite= new PostVoteTypeFunctions(4); public static PostVoteTypeFunctions Offensive= new PostVoteTypeFunctions(5); public static PostVoteTypeFunctions Spam= new PostVoteTypeFunctions(0); }
