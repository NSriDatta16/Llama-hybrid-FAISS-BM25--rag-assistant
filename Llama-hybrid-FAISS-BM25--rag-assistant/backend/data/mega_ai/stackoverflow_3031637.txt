[site]: stackoverflow
[post_id]: 3031637
[parent_id]: 2992052
[tags]: 
Well, to scan for all available networks for the application you can use the NetworkDiagnostic tool from RIM. Anther piece of code to scan for your phone connectivity and get the best connection string can be found in How to reliably establish a network connection on any BlackBerry device , /** * Determines what connection type to use and returns the necessary string to use it. * @return A string with the connection info */ private static String getConnectionString() { // This code is based on the connection code developed by Mike Nelson of AccelGolf. // http://blog.accelgolf.com/2009/05/22/blackberry-cross-carrier-and-cross-network-http-connection String connectionString = null; // Simulator behavior is controlled by the USE_MDS_IN_SIMULATOR variable. if (DeviceInfo.isSimulator()) { if (UploaderThread.USE_MDS_IN_SIMULATOR) { logMessage("Device is a simulator and USE_MDS_IN_SIMULATOR is true"); connectionString = ";deviceside=false"; } else { logMessage("Device is a simulator and USE_MDS_IN_SIMULATOR is false"); connectionString = ";deviceside=true"; } } // Wi-Fi is the preferred transmission method. else if (WLANInfo.getWLANState() == WLANInfo.WLAN_STATE_CONNECTED) { logMessage("Device is connected via Wifi."); connectionString = ";interface=wifi"; } // Is the carrier network the only way to connect? else if ((CoverageInfo.getCoverageStatus() & CoverageInfo.COVERAGE_DIRECT) == CoverageInfo.COVERAGE_DIRECT) { logMessage("Carrier coverage."); String carrierUid = getCarrierBIBSUid(); if (carrierUid == null) { // Has carrier coverage, but not BIBS. So use the carrier's TCP network logMessage("No Uid"); connectionString = ";deviceside=true"; } else { // otherwise, use the Uid to construct a valid carrier BIBS request logMessage("uid is: " + carrierUid); connectionString = ";deviceside=false;connectionUID="+carrierUid + ";ConnectionType=mds-public"; } } // Check for an MDS connection instead (BlackBerry Enterprise Server). else if ((CoverageInfo.getCoverageStatus() & CoverageInfo.COVERAGE_MDS) == CoverageInfo.COVERAGE_MDS) { logMessage("MDS coverage found"); connectionString = ";deviceside=false"; } // If there is no connection available abort to avoid bugging the user unnecssarily. else if (CoverageInfo.getCoverageStatus() == CoverageInfo.COVERAGE_NONE) { logMessage("There is no available connection."); } // In theory, all bases are covered so this shouldn't be reachable. else { logMessage("no other options found, assuming device."); connectionString = ";deviceside=true"; } return connectionString; } /** * Looks through the phone's service book for a carrier provided BIBS network * @return The uid used to connect to that network. */ private static String getCarrierBIBSUid() { ServiceRecord[] records = ServiceBook.getSB().getRecords(); int currentRecord; for (currentRecord = 0; currentRecord = 0) { return records[currentRecord].getUid(); } } } return null; }
