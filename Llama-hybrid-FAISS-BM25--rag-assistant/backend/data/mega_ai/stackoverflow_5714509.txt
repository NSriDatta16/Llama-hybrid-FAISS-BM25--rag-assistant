[site]: stackoverflow
[post_id]: 5714509
[parent_id]: 5713839
[tags]: 
I’m assuming that feed3 is the object returned by the JSON parser after having parsed the JSON data you listed in another question. In that case: * the top level object is an array * every element in the array is an object/dictionary representing news * this object/dictionary contains the following keys: * application (object/dictionary with two keys: id, name) * id (number) * name (string) * created_time (string) * from (object/dictionary with two keys: id, name) * id (number) * name (string) * icon (string) * id (string) * likes (object/dictionary with two keys: count, data) * count (number) * data (array) * every element in the array is an object/dictionary * this object/dictionary has two keys (id, name) * id (number) * name (string) * link (string) * name (string) * picture (string) * properties (array of objects/dictionaries) * type (string) * updated_time (string) When parsing JSON data, it’s vital to understand how data is organised. I suggest you always do the above whenever you have to parse JSON. Since you’re interested in ‘type’, you need to follow this path: traverse the top level array of news every element in the array is an object/Dictionary this object/dictionary has a key called ‘type’ The following code should do the trick: for (NSDictionary *news in feed3) { NSString *type = [news objectForKey:@"type"]; if ([type isEqualToString:@"status"]) { … } else if ([type isEqualToString:@"photo"]) { … } else if ([type isEqualToString:@"link"]) { … } else if ([type isEqualToString:@"video"]) { … } } Note that, in general, you should use -objectForKey: instead of -valueForKey: : -objectForKey: is a method declared in NSDictionary and it is used to obtain an object stored in the dictionary given the corresponding key. -valueForKey: is a KVC method and serves another purpose. In particular, it can return an array when you’re not expecting one!
