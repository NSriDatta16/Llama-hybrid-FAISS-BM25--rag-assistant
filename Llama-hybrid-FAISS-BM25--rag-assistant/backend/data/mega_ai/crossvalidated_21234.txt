[site]: crossvalidated
[post_id]: 21234
[parent_id]: 13251
[tags]: 
If you can accept that this b value has a variance, then the problem is solved. The standard Kalman filter update step can handle non-square sensor-to-measurement matrices. You're already calling it 'H' so you're on the right track. You Just might need to include a finite variance on b or you'll end up with a degenerate (non-positive definite one or more zero-Eigen-value) covariance matrix after the update step, and that may cause you problems elsewhere. I bet that if you consider the variance of b to be zero the result will be identical to rotating the system so your slice is axis-aligned, and then running the Gaussian slice algorithm shown in Andrew Moore's data mining slides , and then rotating back to the original coordinate space. See the section on Gaussian (http://www.autonlab.org/tutorials/gaussian.html). If this isn't your only sensor just remember that the Kalman-filter update step is Bayesian inference (http://en.wikipedia.org/wiki/Bayesian_inference), and your simulation state is just a sensor. If your sensors errors are uncorrelated (which they should be or the basic Kalman filter won't be quite right) it doesn't matter what order you 'update' them together because a Bayseian update is commutative (http://en.wikipedia.org/wiki/Commutative_property) and associative (http://en.wikipedia.org/wiki/Associativity). Sorry about the links, I don't have enough points to post more than two.
