[site]: stackoverflow
[post_id]: 4342363
[parent_id]: 4324219
[tags]: 
@Bernard: I work at ThoughtWorks and have much more experience using Go (Cruise) than Bamboo, so I'll just give you info on now Go addresses your query "We're looking at trying to automate our release process from dev into test into uat into production": Modeling and automating your entire release process by way of deployment pipelines has been conceptualized by Go and has been around since its earlier versions( previously called Cruise). Deployment pipelines break a complex build into a series of stages that itself are a collection of jobs. The stages can be manually or automatically triggered. It's also pretty easy to view and control the flow of changes as they propagate through the environments from the pipeline dashboard UI itself. Here is a detailed example of automatically deploying to UAT (http://www.thoughtworks-studios.com/go/2.0/help/rm_deploy_to_environment.html). "including running unit tests, having code reviews": Go enables you to split test suites and run them in parallel. You also get a comprehensive report with detailed trails of which jobs have failed, the tests that have failed, which check-in broke the tests, etc, and email alerts for the build events you choose. Go also auto-publishes artifacts and these can be viewed from the report itself. This is pretty useful when sniffing out a build. In Go, it's very simple to implement ratcheting (http://skizz.biz/blog/2008/03/11/fixing-broken-windows-with-ratcheting/), so you can fail builds that don't meet your coding standards thresholds. "and enforcing permissions on who is allowed to push builds from UAT into production": You can control access to projects and environments with both view and operate permissions by grouping pipelines. Additionally you can lock down who is allowed to trigger a build. Unlike a lot of tools in the market, Go provides visibility into relationships between triggered builds, environment modeling, aggregating results from parallel builds, ease of auto-publishing artifacts, and auto-updating build agents @jgritty: Go is the successor to Cruise from ThoughtWorks Studios.
