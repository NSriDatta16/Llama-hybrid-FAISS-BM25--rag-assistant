[site]: stackoverflow
[post_id]: 4705736
[parent_id]: 4703432
[tags]: 
Hmm... You're interpolating the normal as a varying variable, so the fragment shader should receive the correct per-pixel normal. The only explanation (I can think of) of the fact that you're having the result as on your left image is that every fragment on a given face ultimately receives the same normal . You can confirm it with a fragment shader like: void main() { vFragColor = normalize(vVaryingNormal); } If it's the case, the question remains: Why? The vertex shader looks OK. So maybe there's something wrong in your geometry ? What is the data which you send to the shader? Are you sure you have correctly calculated per-vertex normals, not just per-face normals? The orange lines are normals of the diagonal face, the red lines are normals of the horizontal face. If your data looks like the above image, then even with a correct shader you'll get flat shading. Make sure that you have correct per-vertex normals like on the lower image. (They are really simple to calculate for a sphere.)
