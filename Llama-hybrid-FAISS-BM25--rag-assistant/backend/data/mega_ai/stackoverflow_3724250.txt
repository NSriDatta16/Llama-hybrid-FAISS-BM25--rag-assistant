[site]: stackoverflow
[post_id]: 3724250
[parent_id]: 3724232
[tags]: 
Well, you can throw an exception from your action, catch AggregateException in GetPerson (i.e. put a try/catch block around Parallel.Invoke ), check for it being the right kind of exception, and return null. That fulfils everything except stopping all the threads. I think it's unlikely that you'll easily be able to stop already running tasks unless you start getting into cancellation tokens. You could stop further tasks from executing by keeping a boolean value to indicate whether any of the tasks so far has failed, and make each task check that before starting... it's somewhat ugly, but it will work. I suspect that using "full" tasks instead of Parallel.Invoke would make all of this more elegant though.
