[site]: crossvalidated
[post_id]: 419078
[parent_id]: 397656
[tags]: 
I never used autoencoders for sparse data , but my first reaction was "why should this matter?". I found the question interesting, so I made a small Google search and among the first search results, I found an answer by Ian Googfellow to a similar question, who says You shouldn't need to do anything special for this. Standard good practices for initialization and training should take care of it. I guess, this could be considered as an authoritative answer for your question. I don't know how other frameworks, but Keras and TensorFlow support sparse matrices (if it is a matter of memory performance). All you need is a dense, convolutional, or recurrent (depending on nature of your data) layer, or layers, as encoder, and same things for decoder, where on the output layer you would need something like exp function to transform the outputs to non-negative values, if it is counts data (think of Poisson regression ).
