[site]: stackoverflow
[post_id]: 996941
[parent_id]: 996904
[tags]: 
I don't think you really meant static methods, as that would be a pretty non-OO way of going about something like this, and no such facility is built into C#. There are standard ADO.NET classes, however, that will let you do this without any ORM wrapping or using DataSet 's and the like.- If you truly want to manually invoke the stored proc and get back a set of results without ANY ORM or standardized storage mechanism doing it for you, this would be your best bet: using(System.Data.IDbConnection conn = /*create your connection here*/) { using(System.Data.IDbCommand cmd = conn.CreateCommand()) { cmd.CommandType = CommandType.StoredProcedure; cmd.CommandText = "AddXYZ"; // add your parameters here using cmd.CreateParameter() and cmd.Parameters.Add() using(System.Data.IDbDataReader reader = cmd.ExecuteReader()) { while(reader.Read()) { // read your results row-by-row } } } } You didn't specify which database engine you were connecting through, so I used the common interfaces that will abstract you away from that. If you wish (though I generally frown on code that does this) you can use platform-specific classes that make things SLIGHTLY easier, at least in terms of adding parameters (the code isn't as verbose as the interface-based approach)
