[site]: stackoverflow
[post_id]: 3007200
[parent_id]: 3005296
[tags]: 
To strictly answer the question title, runtime enhancement is done using a javaagent that can be dynamically loaded when using JDK 1.6 (this is documented in Entity Enhancement ). Regarding the problem you're facing, I suspect it to be an OpenJPA bug (I've seen several similar issues like OPENJPA-755 ), the error message is incoherent with your code since you're setting the primary key field to null and don't have any version field. You should report it. That being said, an easy way to "workaround" the issue would be to create a new Item instance inside the loop. Something like this: public void insert() { for (int i = 0; i Additional notes: Why are you passing System.getProperties() when creating the EntityManagerFactory ? You should close the EntityManagerFactory at the end of your test: @AfterClass public static void closeEntityManagerFactory() { emf.close(); } Update: To answer a comment. From the JPA specification: 3.2 Entity Instance’s Life Cycle This section describes the EntityManager operations for managing an entity instance’s lifecycle. An entity instance may be characterized as being new, managed, detached, or removed. A new entity instance has no persistent identity , and is not yet associated with a persistence context. A managed entity instance is an instance with a persistent identity that is currently associated with a persistence context. A detached entity instance is an instance with a persistent identity that is not (or no longer) associated with a persistence context . A removed entity instance is an instance with a persistent identity, associated with a persistence context, that is scheduled for removal from the database. So if you have a detached entity (that is thus not associated with a persistent context ) and if you set the Id annotated fields to null (it has thus no persistent identity ), then you have exactly what the specification defines as a NEW entity, regardless of OpenJPA behavior. That's why I consider this to be a bug in OpenJPA (and the error message is incoherent anyway).
