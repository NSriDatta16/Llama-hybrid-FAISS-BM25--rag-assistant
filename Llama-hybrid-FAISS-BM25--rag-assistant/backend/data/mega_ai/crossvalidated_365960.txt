[site]: crossvalidated
[post_id]: 365960
[parent_id]: 
[tags]: 
logistic regression does not show good results in confusion matrix

I am using the following dataset, original version, obtained from: https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/ I want to apply logistic regression to classify the samples on that dataset, my code is the following: import numpy as np from sklearn.model_selection import train_test_split data = np.genfromtxt("breast-cancer-wisconsin.data",delimiter=",") X = data[:,1:-1] X[X == '?'] = '-999999' X = X.astype(int) y = data[:, -1].astype(int) X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2) lg=linear_model.LogisticRegression(n_jobs = 10) lg.fit(X_train,y_train) predictions = lg.predict(X_test) cm=confusion_matrix(y_test,predictions) print(cm) score = lg.score(X_test, y_test) print("Accuracy: %0.2f (+/- %0.2f)" % (score.mean(), score.std() * 2)) The attributes are the following: # Attribute Domain -- ----------------------------------------- 1. Sample code number id number 2. Clump Thickness 1 - 10 3. Uniformity of Cell Size 1 - 10 4. Uniformity of Cell Shape 1 - 10 5. Marginal Adhesion 1 - 10 6. Single Epithelial Cell Size 1 - 10 7. Bare Nuclei 1 - 10 8. Bland Chromatin 1 - 10 9. Normal Nucleoli 1 - 10 10. Mitoses 1 - 10 11. Class: (2 for benign, 4 for malignant) I have deleted the first column because it is only the ID, and replaced the ? characters with a big number, so that it could be classified as an outlier. The problem I got is when I compare my results to the ones obtained in this page: https://anujdutt9.github.io/ML_LogRSklearn.html Because I am obtaining an accuracy of: Accuracy: 0.34 and on the link mentioned before the accuracy was approximately 95%. The results of my confusion matrix are also poor, for example, I obtain: [[ 1 92] [ 0 47]] From my data I can see that is not necessary to apply normalization and in a lot of examples I see that one can use logistic regression. What is wrong with my model? Thanks
