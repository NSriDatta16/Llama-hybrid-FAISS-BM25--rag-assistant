[site]: stackoverflow
[post_id]: 1151195
[parent_id]: 1130434
[tags]: 
I'd suggest a totally different approach that gets rid of the storage problem entirely, and should make your app more efficient. Storing serialized arrays full of information that can be retrieved from your database anyway is redundant and highly inefficient. The best approach here would be to normalize your data. You should create a fourth table, perhaps called ' region_categories ', which will be a simple lookup table: CREATE TABLE region_categories ( regionId int unsigned not null, categoryId int unsigned not null, PRIMARY KEY(regionId,categoryId) ); Now, instead of saving everything to an array, for each town/region you should instead populate this table with the categories that are in that town. Your data size is very small, as all you are storing is a pair of ids. When it comes time to retrieve the categories for a given region, you just have to run a simple SELECT statement: SELECT category.* FROM region_categories AS rc LEFT JOIN categories AS c ON rc.categoryId=c.categoryId WHERE rc.regionId=[whatever region you're dealing with] Now you can iterate through your results, and you'll have all the categories for that region.
