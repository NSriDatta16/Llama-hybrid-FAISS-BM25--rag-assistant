[site]: datascience
[post_id]: 69769
[parent_id]: 69766
[tags]: 
Multiclassification with xgboost is normally done One vs All. Meaning that first you try to predict if it belongs to class one or not. Then two second class or not... You can understand as the probability of belongin to one class and not to the rest. Let's put an example for better understanding: say that you have a ton of patients that have 3 illnes: Corona Virus, Sars and HIV. You build your multiclassification model with xgboost or whatever and for a new patient you do a prediction and check the probabilities: Corona [0.8] Sars [0.1] HIV [0.01] Not sick [0.09] What you do from here is select the most probable cause (corona) and that is your final class. If you do multilabel you can get something like this too Corona [0.9] Sars [0.20] HIV [0.999] Meaning that even if it has a high probability of getting corona it also has a higher probability of having HIV. In multiclassification is different from multilabel where you can have a patient that has both of the sickness From the sklearn documentation : The one-vs-the-rest meta-classifier also implements a predict_proba method, so long as such a method is implemented by the base classifier. This method returns probabilities of class membership in both the single label and multilabel case. Note that in the multilabel case, probabilities are the marginal probability that a given sample falls in the given class. As such, in the multilabel case the sum of these probabilities over all possible labels for a given sample will not sum to unity, as they do in the single label case. In summary, if sickness are independent it will predict the probability of the patient having one sickness, there has to be a class not sick just if there is the possibility for the patient not being sick Note: In NN is different
