[site]: stackoverflow
[post_id]: 5437261
[parent_id]: 
[tags]: 
Does TrackPopupMenu "harm" my HMENU?

Heya. Finally, after a lot of fiddling, I got a .rc-loaded context menu for my tray notify icon working. (Dialog based Windows API application, no MFC). However, in the various examples and usage demonstrations I always saw that the HMENU is being created ( CreateMenu() , LoadMenu() ) and destroyed ( DestroyMenu() ) right before/right after the call to TrackPopupMenu() . Popup menus for notify icons are, like, not at all documented on MSDN (at least I haven't found more than a single paragraph about them). Intuitively, I put the LoadMenu() in the message handling for WM_INITDIALOG and store the HMENU , so I don't have to create and destroy the menu every time. As I said, I haven't found any examples where this is done similarly, which I find a bit intriguing. Is it possible that my HMENU would ever get "corrupted" while using the menu or the application? Or is it safe to go for the (well, marginal) extra performance as I do? INT_PTR CALLBACK MainDlg(HWND ..., UINT, WPARAM, LPARAM) { switch (message) { case WM_INITDIALOG: ... HMENU hMenuBar = LoadMenu(hInst, MAKEINTRESOURCE(IDR_NOTIFYMENU)); hNotifyMenu = GetSubMenu(hMenuBar, 0); ... break; ... case WM_NOTIFYICON: switch (lParam) { case WM_RBUTTONUP: // there is no WM_CONTEXTMENU for { // nid.uVersion != NOTIFYICON_VERSION_4 POINT CursorPos; GetCursorPos(&CursorPos); // this is where I saw LoadMenu and stuff in examples SetForegroundWindow(hDlg); // otherwise menu won't disappear TrackPopupMenu(hNotifyMenu, TPM_LEFTALIGN, CursorPos.x, CursorPos.y, 0, hDlg, NULL); PostMessage(hDlg, WM_NULL, 0, 0); // otherwise menu locks hDlg // this is where I saw DestroyMenu in examples } return (INT_PTR)TRUE; } ... } ... }
