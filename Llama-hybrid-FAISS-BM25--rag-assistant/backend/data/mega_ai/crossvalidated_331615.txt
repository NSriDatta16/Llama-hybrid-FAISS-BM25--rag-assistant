[site]: crossvalidated
[post_id]: 331615
[parent_id]: 331554
[tags]: 
The literature on learning similarity or distance functions is usually referred to as similarity learning or metric learning. The wikipedia article is: https://en.wikipedia.org/wiki/Similarity_learning . Although the article shows a bilinear formulation, you can also use more complex forms such as a multi-layer neural network. You can use a loss function like margin loss, which forces the similarity of a correct pair to be higher than an incorrect pair by a given margin. See https://en.wikipedia.org/wiki/Hinge_loss (Weston and Watkins ...) for the case where the margin is 1. However, IMO, your problem is not about finding the right literature. It's about understanding the relationship between your input and desired output. If I understand correctly, the desired distance function is Levenshtein distance. It's hard to see how a simple formulation (e.g., bilinear or MLP) could learn a function that computes Levenshtein distance from the input strings. The simplest solution is to just provide Levenshtein distance as a feature to your classifier. You could use something more complex that can may learn Levenshtein distance, like https://arxiv.org/abs/1803.00057 , but that's probably an overkill.
