[site]: stackoverflow
[post_id]: 542949
[parent_id]: 542664
[tags]: 
I assume this is a part of an AIR application. (Accessing the clipboard from a plain Flex app is not possible.) I have no experience with AIR, but your second code block is clearly wrong. An URLRequest instance does nothing in itself, it is but a static object storing the request details. In order to fetch the data from that URL, you need to create a Loader , and pass the request to that loader like this: var req:URLRequest = new URLRequest(value.file.url); // this is a local file (e.g. file:///C:/somefile.jpg) var ldr:Loader = new Loader(); ldr.addEventListener(Event.COMPLETE, function(event:Event):void { var b:Bitmap = event.target.content as Bitmap; }); ldr.load(req); Of course, you'd have to fill in the Event.COMPLETE handler. Note that the Loader class can be used to load SWF and image objects, for all everything else, you'd have to use URLLoader and parse the data yourself. Regarding the nativeDragDrop block, here's a snippet from the documentation : Typically a handler for the nativeDragEnter or nativeDragOver event evaluates the data being dragged, along with the drag actions allowed, to determine whether an interactive object can accept a drop. To specify that an interactive object is an eligible target, the event handler must call the NativeDragManager.acceptDrop() function, passing in a reference to the object. If the user releases the mouse button over the designated object, the object becomes the drop target and dispatches the nativeDragDrop event. Are you calling NativeDragManager.acceptDrop() properly?
