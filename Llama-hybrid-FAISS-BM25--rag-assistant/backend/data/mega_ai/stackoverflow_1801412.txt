[site]: stackoverflow
[post_id]: 1801412
[parent_id]: 1202424
[tags]: 
I'm encountering the same problem. It is certainly not what I would expect, a click event in my terminology implies that the distance between mouseDown and mouseUp is below a certain threshold. Here is some code that works in my experiments: var mouseDownLocation; var mouseClickThreshold = 5; function init() { var map = new VEMap('myMap'); map.LoadMap(new VELatLong(-27.15,153),8,'r' ,false); map.AttachEvent("onmousedown", function(e) { var x = e.mapX; var y = e.mapY; mouseDownLocation = new VEPixel(x, y); }); map.AttachEvent("onmouseup", function(e) { var x = e.mapX; var y = e.mapY; if(Math.abs(mouseDownLocation.x - x) + Math.abs(mouseDownLocation.y - y) > mouseClickThreshold) { return; } pixel = new VEPixel(x, y); var LL = map.PixelToLatLong(pixel); document.getElementById("myMapInfo").innerHTML = "Pixel X: " + x + " | Pixel Y: " + y + " LatLong: " + LL + " " + e.eventName; }); } The message will be displayed only if the mouse didn't move too much between the down and up events, i.e. a normal click should trigger it, a drag shouldn't. This is using the VE API in version 6.2 and expects two divs with IDs "myMap" and "myMapInfo". It's also code that's experimental and could be improved upon, but the general approach seems ok.
