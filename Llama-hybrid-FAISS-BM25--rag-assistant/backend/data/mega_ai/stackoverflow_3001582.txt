[site]: stackoverflow
[post_id]: 3001582
[parent_id]: 2994448
[tags]: 
This might work for your needs: $text = ' This is a paragraph with an image '; echo preg_replace("/ ]*(\ssrc=['\"][^'\"]*['\"]))?[^>]*?(\/?)>/i",' ', $text); // This is a paragraph with an image The RegExp broken down: / # Start Pattern ]* # Match anything other than '>', Zero or More Times ( # Start Capture Group $2 - ' src="...."' \s # Match one whitespace src= # Match 'src=' ['"] # Match ' or " [^'"]* # Match anything other than ' or " ['"] # Match ' or " ) # End Capture Group 2 )? # End Non-Capture Group, match group zero or one time [^>]*? # Match anything other than '>', Zero or More times, not-greedy (wont eat the /) (\/?) # Capture Group $3 - '/' if it is there > # Match '>' /i # End Pattern - Case Insensitive Add some quoting, and use the replacement text it should strip any non src= properties from well-formed HTML tags. Please Note This isn't necessarily going to work on ALL input, as the Anti-HTML + RegExp people are so cleverly noting below. There are a few fallbacks, most notably "> would end up "> and a few other broken issues... I would recommend looking at Zend_Filter_StripTags as a full proof tags/attributes filter in PHP
