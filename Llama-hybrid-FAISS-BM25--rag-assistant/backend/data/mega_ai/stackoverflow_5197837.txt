[site]: stackoverflow
[post_id]: 5197837
[parent_id]: 5197732
[tags]: 
No need to check for null, in general. An allocation failure will throw a std::bad_alloc exception, which you can deal with if you like. The standard indicates: "If an allocation function declared with a non-throwing exception-specification (15.4) fails to allocate storage, it shall return a null pointer. Any other allocation function that fails to allocate storage shall indicate failure only by throwing an exception of a type that would match a handler (15.3) of type std::bad_alloc (18.6.2.1)." http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3092.pdf YMMV depending on how standards-compliant your compiler actually is. I think most modern c++ compilers should be embarrassed to do it differently. :)
