[site]: stackoverflow
[post_id]: 986008
[parent_id]: 980791
[tags]: 
I came up with a solution. It's not elegant, but it solves my problem. When the commmand line interpreter cannot go further with the tokens, I pass the remaning of the data to a CALL :label command. Here is an example: @ECHO OFF SET DATA=01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 FOR /F "tokens=1,31* delims= " %%i IN ("%DATA%") DO ( ECHO 1st token: %%i ECHO 31th token: %%j CALL :processdatatokens32-62 %%k ) :processdatatokens32-62 SET DATA=%* FOR /F "tokens=1,31* delims= " %%i IN ("%DATA%") DO ( ECHO 32nd token: %%i ECHO 62th token: %%j CALL :processdatatokens63-83 %%k ) GOTO :EOF :processdatatokens63-83 SET DATA=%* FOR /F "tokens=1,31* delims= " %%i IN ("%DATA%") DO ( ECHO 63th token: %%i ECHO 93th token: %%j ) GOTO :EOF The output is: 1st token: 01 31th token: 31 32nd token: 32 62th token: 62 63th token: 63 93th token: 93
