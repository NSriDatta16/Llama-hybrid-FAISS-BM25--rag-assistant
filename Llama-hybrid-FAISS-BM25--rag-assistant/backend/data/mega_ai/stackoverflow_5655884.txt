[site]: stackoverflow
[post_id]: 5655884
[parent_id]: 5611666
[tags]: 
Despite my solution could be less elegant than this one I find mine quicker and easier. I just defined a method like this: private def normalizeClass(c: Class[_]): Class[_] = if (classOf[AnyRef].isAssignableFrom((c))) c else if (c == classOf[Int]) classOf[java.lang.Integer] // Add all other primitive types else classOf[java.lang.Boolean] So by using it in my former filterByClass method as it follows: def filterByClass[A](l: List[_], c: Class[A]) = l filter (normalizeClass(c).isInstance(_)) the invocation of: filterByClass(List(1, "One", false), classOf[Int]) just returns List(1) as expected.
