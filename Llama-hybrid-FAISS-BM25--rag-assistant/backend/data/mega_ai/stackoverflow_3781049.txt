[site]: stackoverflow
[post_id]: 3781049
[parent_id]: 
[tags]: 
Using the "This" Pointer in c++

I've been reading about the "this" pointer on various sites (e.g. the MSDN manuals) and understand its basic uses -- returning a copy your own object or using a pointer of it for returns/comparison. But I came across this statement: // Return an object that defines its own operator[] that will access the data. // The temp object is very trivial and just allows access to the data via // operator[] VectorDeque2D_Inner_Set operator[](unsigned int first_index) { return VectorDeque2D_Inner_Set (*this, first_index); } What does that do? Does it somehow increment the this operator, and if so, why?? (This comes from an example I was given on stack overflow, so there may be mistakes in the syntax. Let me know if a bigger chunk is necessary, I can paste more code in.) EDIT 1 Here's the entire listing, for more info. The function is near the bottom of the class. Note I renamed the variable from x to index and renamed the templated inner class. I forgot to put the typecast to the templated inner-class, which I have added in this update. Any ideas now? template class Container { private: // ... public: // Proxy object used to provide the second brackets template class OperatorBracketHelper { Container & parent; size_t firstIndex; public: OperatorBracketHelper(Container & Parent, size_t FirstIndex) : parent(Parent), firstIndex(FirstIndex) {} // This is the method called for the "second brackets" T & operator[](size_t SecondIndex) { // Call the parent GetElement method which will actually retrieve the element return parent.GetElement(firstIndex, SecondIndex); } } // This is the method called for the "first brackets" OperatorBracketHelper operator[](size_t FirstIndex) { // Return a proxy object that "knows" to which container it has to ask the element // and which is the first index (specified in this call) return OperatorBracketHelper (*this, FirstIndex); } T & GetElement(size_t FirstIndex, size_t SecondIndex) { // Here the actual element retrieval is done // ... } }
