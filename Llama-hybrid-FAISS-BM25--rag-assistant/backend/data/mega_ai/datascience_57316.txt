[site]: datascience
[post_id]: 57316
[parent_id]: 57302
[tags]: 
Convolutional Neural Networks can work with 3 dimensional data, and they don't require much feature engineering. Provided you have enough training data, that seems like a way to go. As long as your data is in the form of a grid it is actually easy-peasy. Just imagine an image-like pipeline, but of the form [x,y,z,n]. Where n is the number of examples. As opposed to [x,y,n] (black and white) or [x,y,c,n] (color-channels). It might be the case however that your data is in a vector format (as tends to happen with building models). I do believe there are experiments with straight up graphs and deep learning, but my feeling is that you might be better rasterising your model in that case. You will probably need to add some layers to compress the data concepts (conv and pools etc) and end with a fully connected layer of 1 node (since you are looking for a scalar).
