[site]: stackoverflow
[post_id]: 5109414
[parent_id]: 
[tags]: 
LINQ to SQL mapping associations to create a list of entities

I'm reading Apress Pro ASP.NET MVC Framework and there are some LINQ to SQL examples, but they don't show the database for this example and it's not entirely clear how it works so I was hoping I can get some clarification from the community. As far as I understand, in the database an Item cannot have a list of Bid s, so if we wanted the list we would query the Bids table for all the Bid s with a matching ItemID . In the book's example it looks like there is an association established between the Item and the Bid , but I suspect that the Items table does not have a foreign key which would link it to a Bid so I have several questions: What is the association based on? Does LINQ automatically figure out which table to make the association in, based on the associated model (in this case Bid is mapped to the Bids table)? Would the Bids property of the Item model be automatically populated with all the matching Bid s? If no, then how can it be achieved? Here is the example [Table(Name="Members")] public class Member { [Column(IsPrimaryKey=true, IsDbGenerated=true, AutoSync=AutoSync.OnInsert)] internal int MemberID { get; set; } [Column] public string LoginName { get; set; } [Column] public int ReputationPoints { get; set; } } [Table(Name = "Items")] public class Item { [Column(IsPrimaryKey=true, IsDbGenerated=true, AutoSync=AutoSync.OnInsert)] public int ItemID { get; internal set; } [Column] public string Title { get; set; } [Column] public string Description { get; set; } [Column] public DateTime AuctionEndDate { get; set; } [Association(OtherKey = "ItemID")] private EntitySet _bids = new EntitySet (); public IList Bids { get { return _bids.ToList().AsReadOnly(); } } } [Table(Name = "Bids")] public class Bid { [Column(IsPrimaryKey=true, IsDbGenerated=true, AutoSync=AutoSync.OnInsert)] internal int BidID { get; set; } [Column] internal int ItemID { get; set; } [Column] public DateTime DatePlaced { get; internal set; } [Column] public decimal BidAmount { get; internal set; } [Column] internal int MemberID { get; set; } internal EntityRef _member; [Association(ThisKey = "MemberID", Storage = "_member")] public Member Member { get { return _member.Entity; } internal set { _member.Entity = value; MemberID = value.MemberID; } } }
