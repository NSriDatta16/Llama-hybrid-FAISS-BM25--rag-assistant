[site]: stackoverflow
[post_id]: 284582
[parent_id]: 192641
[tags]: 
I have had this same problem for a long time - it's annoying. I like the idea of making your own config file and having each DLL parse it, though it still might be easy to miss having to change the config. One thing I have done in the past to at least make this a little easier is to make sure that any config values that the Setting1.Settings file are invalid. For instance, I have a class that uses LINQ-To-SQL to talk to the DB. So it has a Setting1.settings file that it stores the connection string to database in. The default value that is entered (upon dragging and dropping the database tables into the designer) is the connection string of the dev database. Once I have the DBML file created based off of the test database, I can go in and edit the Settings file and type in a database name like "FAKE_DATABASE". That way, if you use the DLL in another project, and then forget to merge the config files to add in the proper config value for the DLL, at least you'll get an error saying something like "Cannot connect to FAKE_DATABASE". Of course, if you have to work with the designer again, you'll have to change the value back to the value of your dev database. Huge pain. They've gotta change this somehow.
