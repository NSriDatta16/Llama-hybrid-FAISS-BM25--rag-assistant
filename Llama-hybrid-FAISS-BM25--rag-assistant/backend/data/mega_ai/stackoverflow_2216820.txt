[site]: stackoverflow
[post_id]: 2216820
[parent_id]: 2216610
[tags]: 
You can probably achieve this easily by using the "Touch Down" and "Touch Drag Inside" events of the UIButton. If you want to use the -touchesMoved: approach, you can use a variable to keep track of the last button that triggered a sound and only play a sound if the current button is not the one that last played a sound. In more detail: Declare a UIView *lastButton; in your header and then: -(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { UITouch *touch = [[event allTouches] anyObject]; CGPoint location = [touch locationInView:touch.view]; if(CGRectContainsPoint(c1pianoview.frame, location) && lastButton != c1pianoview) { //play c1 lastButton = c1pianoview; } else if(CGRectContainsPoint(d1pianoview.frame, location) && lastButton != d1pianoview) { //play d1 lastButton = d1pianoview; } } - (void)touchedEnded:(NSSet *)touches withEvent:(UIEvent *)event { lastButton = nil; } - (void)touchedCancelled:(NSSet *)touches withEvent:(UIEvent *)event { [self touchesEnded:touches withEvent:event]; }
