[site]: stackoverflow
[post_id]: 5086527
[parent_id]: 5085665
[tags]: 
The essential difference is in what function is being repeated twice. In the correct one, average-damp is being applied twice, with the net effect of more damping; ((repeated average-damp 2) f) reduces, mathematically, to (lambda (x) (+ (* 0.75 x) (* 0.25 (f x)))) (apologies if my syntax is off, my lisp is very, very rusty). This makes the algorithm less susceptible to the wild fluctuations of the transformation. The second one, though, applies (average-damp (lambda (y) (/ x (expt y 2)))) twice - that is, it damps the transformation once and then repeats the resulting function. One application of average-damp is just enough to keep the sequence from diverging but not enough to actually make it converge. It actually converges to an oscillating state, bouncing back and forth between 1.672645084943273 and 2.8804350135298153 . However, the damped transformation is applied twice at every step, so fixed-point only sees every other element of the sequence - that subsequence converges to the latter, even though the sequence as a whole fails to converge.
