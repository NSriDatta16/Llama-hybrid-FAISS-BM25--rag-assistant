[site]: crossvalidated
[post_id]: 207622
[parent_id]: 207460
[tags]: 
My solution will not only answer your question exactly (within linear algebra roundoff error) for the general case, but actually gives you the entire probability distribution of number of successful (i.e., completed) streaks. This can readily be solved by using a discrete time discrete state (time-homogeneous) Markov Chain, in an approach similar in spirit to, but with larger state space, than the methods I used in https://math.stackexchange.com/questions/383704/probability-of-streaks/1739987#1739987 . After you read my answer in that thread plus this thread, you should be a wizard in using Markov Chains to solve all manner of streaks problems. I will let p = probability of winning per round k = number of wins for successful streak n = number of rounds Then g is determined to be the upper bound on largest number of streaks, calculated as g = floor(n/k) Define the states as bivariate pairs(i,j), in which i denotes the current number of successful (i.e., completed) streaks and j is the length of the current streak. i will range from 0 to g, and j will range from 0 to k-1, except for when i = g, in which case j only goes from 0 to 0, and we make that state, (g,0), an absorbing state because we can't get any additional successful streaks. Order the states with j increasing fastest, then i increasing. I.e., with k = 3, the states would be (0,0),(0,1),(0,2),(1,0),(1,1),(1,2), etc. Once the Markov Chain one step transition matrix, M, has been populated (see below), we compute the n step Markov Chain transition matrix, Mn as $M^n$. Given that we start in state (0,0) before the first of n rounds, the first row of Mn contains the probabilities of being in the various states after n rounds. For each possible value of number of successful streaks i, the sum of the probabilities over j for all states (i,j) provides the probability of exactly i successful streaks having occurred. It is then trivial to compute the expected number of successful streaks. The one step transition matrix is populated as follows (note that w.p. is short for "with probability"): For each i from 0 to g-1 (I'll show here for the case k = 3) State (i,0) transitions to (i,0) w.p. 1-p and to (i,1) w.p. p State (i,1) transitions to (i,0) w.p. 1-p and to (i,2) w.p. p State (i,2) transitions to (i,0) w.p. 1-p and to (i+1,0) w.p. p The absorbing state (g,0) transitions w.p. 1 to (g,0) The population of the one step Markov Chain for a general value of k (and n) is shown in my MATLAB code below. Everything on a line after % is a comment. k = 3; n = 200; p = .6; % set k, n, and p to particular values g = floor(n/k); B = [(1-p)*ones(k,1),p*eye(k)]; % recurring block in transition matrix M. % B is a k by (k+1) matrix, consisting of a column vector of (1-p) 's, % right-horizontally concatenated with p times the k by k identity matrix % Start building up one step transition matrix, M M = zeros(g*k+1); % (g*k+1) by (g*k+1) matrix of zeros for i=0:g-1, M(k*i+1:k*(i+1),k*i+1:k*(i+1)+1) = B; end; M(g*k+1,g*k+1) = 1; % Construction of M is now complete Mn = M^n; % n step transition matrix % Calculate array of probabilities of number of successful streaks % and place in prob_array prob_array = zeros(g+1,1); for i=0:g-1, prob_array(i+1) = sum(Mn(1,k*i+1:k*i+k)); end; prob_array(g+1) = Mn(1,g*k+1); % prob_array is now complete expected_number_streaks = (0:g)*prob_array Here are example results for n = 200 rounds, and streaks of length k = 3, with bonus results for streaks of length k = 5. Here is an example one step transition matrix, for p = 0.6, n = 11, k = 3, which results in g = 3.
