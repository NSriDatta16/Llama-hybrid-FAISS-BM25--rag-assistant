[site]: stackoverflow
[post_id]: 2672238
[parent_id]: 2672069
[tags]: 
If you mean what I think you mean by "average" (and "distance," i.e. the L2 norm mentioned by dreeves), here's a procedure that I think should work for finding the average distance between a point and a line segment. You'll need a function dot(A,B) which takes the dot product of two vectors. // given vectors (points) A, B, C K1 = dot(A-C,A-C) K2 = 2*dot(B-A,A-C) K3 = dot(B-A,B-A) L1 = sqrt(K3*(K1+K2+K3)) L2 = sqrt(K3*K1) N = 4*K3*L1 + 2*K2*(L1-L2) + (K2*K2-4*K1*K3)*log((K2+2*L2)/(2*K3+K2+2*L1)) D = N / (8*K3^1.5) Assuming I've transcribed everything correctly, D will then be the average distance. This is basically just pseudocode for evaluating the result of an integral that I did in Mathematica. There may be some neat computational shortcut for this but if there is, I don't know it. (And unless there is one, I'd question how much you really need to do this computation) If you want to find the average distance from the closest point on a line segment CD to all points on AB, in most cases the closest point will be either C or D so you can just check both of those to see which is closer (probably using some minimum-distance calculation as referenced in other answers). The only exception is when CD and AB are parallel and you could run a perpendicular from one to the other, in which case you'd have to define your requirements more precisely. If you wanted to find the average distance between all points on CD and all points on AB... it could be done with a double integral, though I shudder to think how complicated the resulting formula would be.
