[site]: stackoverflow
[post_id]: 269074
[parent_id]: 268816
[tags]: 
I've been asking similar questions lately ( here and here ) and I've found a couple things that can help. I understand the same issues that you're finding with UI interaction being forced into code. 1: Write "classes" for the functionality and pass in the elements to modify in the constuctor, whether it's the ID for the element or the element itself, up to you. 2: Write "events" for the sections that may vary depending on the page or control. By events, I mean just placeholder methods that you can overwrite with actual functions. So for examples... var FilterControl = function() { //the "event" var self = this; this.onLoadComplete = function() { }; //This is the command that calls the event this.load = function() { //do some work ... //Call the event self.onLoadComplete(); }; }; //somewhere else in the code var filter = new FilterControl(); filter.onLoadComplete = function() { //unique calls just for this control }; 3: Get an IDE that is more Javascript friendly. I love my Visual Studio, but Apanta makes a outstanding IDE that has a really powerful Javascript IDE (it allows you to drag .JS files into a File References dialog so you get intellisense for all those Javascript documents solving one of the main reasons why it's hard to split up Javascript!
