[site]: stackoverflow
[post_id]: 2373925
[parent_id]: 2373476
[tags]: 
What about: TypeName myFunction() { TypeName result; void* storage = &result; /*Magic code that stores a value in the space pointed to by storage*/ return result; } Here, all your variables will be stored on the stack so you shouldn't encounter heap-related problems (depending on what exactly your "magic" code does). Is there a reason why you have your storage array separate from result ? If the results will simply be copied into result , it would make more sense (IMHO) to only use one object (and either keep a void* pointer to it or type-cast &result as needed). If there is a reason to use a separate storage and result , you will probably get better milage using TypeName storage = new TypeName and delete instead of malloc(4) and free .
