[site]: stackoverflow
[post_id]: 2691581
[parent_id]: 949004
[tags]: 
I just implemented a zoom-in/zoom-out on touch using cocos2D and SpaceManager. The already accepted answer looks fine but I wanted to show how you could go about this if you are already using SpaceManager. Note: this snippet zooms in and out in one swoop. The already accepted answer can be looked at to see how you would modify this to only do the zoom out upon release. This is how I did it: #pragma mark touch - (BOOL)ccTouchBegan:(UITouch *)touch withEvent:(UIEvent *)event { NSLog(@"Touched began"); CGPoint position = [touch locationInView: [touch view]]; CGPoint positionLocal =[[CCDirector sharedDirector] convertToGL: position]; cpShape *touchedShape = [smgr getShapeAt:positionLocal]; if (touchedShape != nil) { NSLog(@"something was touched"); cpCCSprite *cpCCSOwner = (cpCCSprite *) touchedShape->data; // Let's do 'pulse' special effect on whatever we just touched, just to give the user some feedback cpFloat originalScale_ = cpCCSOwner.scale; CCFiniteTimeAction *zoomAction = [CCScaleTo actionWithDuration:0.1f scale:originalScale_ * 1.2f];// zoom in CCFiniteTimeAction *shrinkAction = [CCScaleTo actionWithDuration:0.1f scale:originalScale_];// zoom out CCSequence *actions = [CCSequence actions:zoomAction, shrinkAction, nil];// zoom in, then zoom out [cpCCSOwner runAction:actions];// now // Since I just grabbed the object, it should stop moving cpCCSOwner.shape->body->v = cpvzero; // Let's keep track of what we are touching. cpCCSpriteTouched = cpCCSOwner; //
