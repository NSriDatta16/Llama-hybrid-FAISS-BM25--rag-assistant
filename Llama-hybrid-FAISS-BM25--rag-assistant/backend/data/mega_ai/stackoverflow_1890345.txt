[site]: stackoverflow
[post_id]: 1890345
[parent_id]: 1885800
[tags]: 
Don't try to obfuscate your Perl. You're wasting your time there. I show plenty of people how to break that sort of stuff in Mastering Perl just so they won't try to do it. Have you considered implementing the sensitive stuff in C and shipping a pre-compiled binary with a Perl interface? It's relatively easy to do and has the same effect without relying on a clever trick. The determined, skilled person can still reverse engineer it, but that's true for any solution. You do have to compile the library for each platform, but if this stuff is important enough to protect, it important enough to charge enough to people to use it. Alternatively, put the sensitive stuff behind a web service so they never get the code. One clever tactic I've seen involves a file that is tailored to each client, whether through formatting or content. This serves as something like a low-grade watermark using banal code, comments, or docs. Find that curious text sequence and you know the source of the leak. The business answer is to not give the program to people you don't trust, or to make the penalties stiff enough to discourage it.
