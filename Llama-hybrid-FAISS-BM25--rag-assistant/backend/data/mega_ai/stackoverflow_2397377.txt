[site]: stackoverflow
[post_id]: 2397377
[parent_id]: 2397348
[tags]: 
What you're looking for is the Levenshtein Distance . An implementation in Objective-C: ------------------------------------------------------------------------ // // NSString-Levenshtein.h // // Created by Rick Bourner on Sat Aug 09 2003. // rick@bourner.com @interface NSString(Levenshtein) // calculate the smallest distance between all words in stringA and stringB - (float) compareWithString: (NSString *) stringB; // calculate the distance between two string treating them each as a // single word - (float) compareWithWord: (NSString *) stringB; // return the minimum of a, b and c - (int) smallestOf: (int) a andOf: (int) b andOf: (int) c; @end -------------------------------------------------------------------- // // NSString-Levenshtein.m // // Created by Rick Bourner on Sat Aug 09 2003. // Rick@Bourner.com #import "NSString-Levenshtein.h" @implementation NSString(Levenshtein) // calculate the mean distance between all words in stringA and stringB - (float) compareWithString: (NSString *) stringB { float averageSmallestDistance = 0.0; float smallestDistance; float distance; NSMutableString * mStringA = [[NSMutableString alloc] initWithString: self]; NSMutableString * mStringB = [[NSMutableString alloc] initWithString: stringB]; // normalize [mStringA replaceOccurrencesOfString:@"\n" withString: @" " options: NSLiteralSearch range: NSMakeRange(0, [mStringA length])]; [mStringB replaceOccurrencesOfString:@"\n" withString: @" " options: NSLiteralSearch range: NSMakeRange(0, [mStringB length])]; NSArray * arrayA = [mStringA componentsSeparatedByString: @" "]; NSArray * arrayB = [mStringB componentsSeparatedByString: @" "]; NSEnumerator * emuA = [arrayA objectEnumerator]; NSEnumerator * emuB; NSString * tokenA = NULL; NSString * tokenB = NULL; // O(n*m) but is there another way ?!? while ( tokenA = [emuA nextObject] ) { emuB = [arrayB objectEnumerator]; smallestDistance = 99999999.0; while ( tokenB = [emuB nextObject] ) if ( (distance = [tokenA compareWithWord: tokenB] ) Author of the source above: Rick Bourner, http://www.merriampark.com/ldobjc.htm
