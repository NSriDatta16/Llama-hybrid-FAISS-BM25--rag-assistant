[site]: stackoverflow
[post_id]: 643526
[parent_id]: 643410
[tags]: 
For the specific scenario, you are changing the return type of the method, that will be caught at compile time. If it didn't it would appear on code coverage (as mentioned by Aaron). Even then, you should have automated functional tests, which would be run soon after the check-in. That said, I do automated smoke tests, so in my case those would caught that :). Without thinking on the above, you still have 2 important factors playing in the initial scenario. You want to give your unit testing code the same attention as the rest of the code, which means it is reasonable to want to keep them DRY. If you were doing TDD, that would even push this concern to your design in the first place. If you are not into that, the other contrary factor involved is YAGNI, you don't want to get every (un)likely scenario in your code. So, for me it would be: if my tests are telling me I am missing something, I double check the test is ok and proceed with the change. I make sure not to do what if scenarios with my tests, as it is a trap.
