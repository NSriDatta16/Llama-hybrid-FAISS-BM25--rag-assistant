[site]: stackoverflow
[post_id]: 4045016
[parent_id]: 
[tags]: 
Django sub-directory views and import all files from __init__.py

Technically not a django question, more a python question. In urls.py I've got the following: urlpatterns = patterns('locate.views', url(r'^', 'index.index'), ) And a directory structure like this: locate/ views/ __init__.py index.py # where there is "def index(request) : ...." What I would like to do is avoid having to say "index.index", but rather have things flatten out a bit. Thus yielding: urlpatterns = patterns('locate.views', url(r'^', 'index'), ) This of course is quite possible if I make __ init __.py contain: from .index import index ... But after the 99th time of doing that it would be nice to have it automated. I've gotten close with some poking around with __ import __ and the like but wondering if anybody else has a working code fragment and/or a better way to handle this pattern in django. Update Used version of Amit's code: this is in the views/__init__.py file (which will be pulled to a library shortly): from glob import glob1 from types import FunctionType import os def import_views(dirname, views_prefix='') : for filename in glob1(dirname, '*.py'): if filename == '__init__.py': # I assume you don't want that continue module_name = os.path.basename(filename).split('.py')[0] # You might need to change this, depending on where you run the file: imported_module = __import__("%s.%s" % (__package__, module_name), fromlist=[module_name,]) idict = imported_module.__dict__ for method_name in idict.get('__all__', idict.keys()): method = idict[method_name] if not isinstance(method, FunctionType): continue if views_prefix and not method_name.startswith(views_prefix): continue globals()[method_name] = method import_views(os.path.dirname(__file__))
