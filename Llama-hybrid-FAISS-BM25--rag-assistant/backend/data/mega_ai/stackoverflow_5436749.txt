[site]: stackoverflow
[post_id]: 5436749
[parent_id]: 3374166
[tags]: 
if you're talking about detecting syntax errors, such queries should fail when being parsed and never get run, so the data is safe. i doubt you'll ever find a regex or other tool that does as good a job as mysql itself and that will never give false negatives. shouldn't you be more concerned about returning meaningful debugging error messages from mysql? if you're worried about input being unsanitised then you're not making it quick and easy enough to escape parameters. it only takes one decent function to translate any php variable into a safe mysql literal. drill into those authors that they must use that function for every parameter. e.g. a db class method: final function esc($val) { if ($val === null) return 'NULL'; if (is_bool($val)) return $val ? 'TRUE' : 'FALSE'; if (is_int($val) || is_float($val) || (is_string($val) && $val === (string) (int) $val)) return $val; if (is_object($val) || is_array($val)) $val = serialize($val); else $val = (string) $val; if (strlen($val)) { if ($this->real_esc) $val = mysql_real_escape_string($val, $this->cnn); else $val = mysql_escape_string($val); } return "'$val'"; } where $this->real_esc = function_exists('mysql_real_escape_string'); is done already for performance.
