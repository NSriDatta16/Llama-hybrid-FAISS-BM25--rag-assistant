[site]: stackoverflow
[post_id]: 2601550
[parent_id]: 2485771
[tags]: 
Yes and no. Facebook uses delegated auth to have your application connect with it. Therefore, the user is intended to put their password into something "trusted" (e.g. the Facebook login page) so that your app doesn't actually see it, and only gets the key as a result. The idea is that users are thus trained to not trust other web pages/apps with their password. Therefore, FB provides this web popup in their FBConnect library, with no other explicit way of turning a user's credentials into a session. That said, and I'll answer your technical question since it's a legit question; you could do what you wanted by creating an offscreen UIWebView, hosting whatever the FB login URL is in that web view, and injecting Javascript into the page using stringByEvaluatingJavaScriptFromString: . That Javascript could take the username/password, fill out the form, and submit it, without the user ever seeing it. Read the FBConnect library code to understand what URL to use, and what to do with the result of submitting the page-- you could wire that back through into the library. Doing this is (1) fragile, since you'll have to rely on IDs and stuff that can/will change to defeat just such techniques and (2) likely violates terms of use for FB Connect and of course is (3) not great for the health of auth on the web in general, since it doesn't reinforce that users should not trust 3rd parties with their passwords. And it should absolutely go without saying that if you go it alone and give users a better-looking auth experience, never, ever store or do anything with their credentials besides giving them to Facebook.
