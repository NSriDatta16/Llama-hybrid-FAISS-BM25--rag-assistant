[site]: stackoverflow
[post_id]: 4038277
[parent_id]: 4037474
[tags]: 
As others have said you have to wrap the functions in a copy to and then back from a C-style buffer.This solution using a short life wrapper object does this pretty elegantly: using namespace std; class Wrap { public: Wrap(string &S,int Length):Buffer(Length),Orig(S) { //constructor copies the string to the buffer copy(Orig.begin(),Orig.end(),&Buffer[0]); cout Buffer; string &Orig; }; void Func(char *T) //a typical C-Style function that modifies the string { cout This code outputs: Construct Function Destruct HQQa which demonstrates how and that it works. This doesn't solve the problem that you have to specify the buffer length but it does allow the function called to change the length AND contents of the string (up to the specified buffer size).
