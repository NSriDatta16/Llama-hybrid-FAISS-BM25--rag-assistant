[site]: crossvalidated
[post_id]: 500640
[parent_id]: 
[tags]: 
Goto method of simulating regression data for Deep Learning

Short story: How would you simulate tabular data for a Deep Learning regression task? Longer story: Simulating data for linear regression is pretty straightforward (this is Python): import numpy as np sigma = 1 N = 100 p = 5 intercept = 1 X = np.random.normal(0, 1, N * p).reshape((N, p)) betas = np.random.normal(0, 3, p) e = np.random.normal(0, sigma, N) y = intercept + X @ betas + e Simulating data for logistic regression is also pretty easy: sigma = 1 N = 100 p = 5 intercept = 1 X = np.random.normal(0, 1, N * p).reshape((N, p)) betas = np.random.normal(0, 3, p) e = np.random.normal(0, sigma, N) mu = intercept + X @ betas + e pr = np.exp(mu)/(1 + np.exp(mu)) y = np.random.binomial(1, pr, size=N) But with Deep Learning, $y = f(X)$ where $f$ can be a very non-linear intricate function. I wonder if there is a Goto method for simulating tabular data for Deep Learning? Are there common $f$ people are using?
