[site]: stackoverflow
[post_id]: 2945785
[parent_id]: 2945100
[tags]: 
I don't understand what you're trying to accomplish. However, I suspect your UPDATE statement needs a WHERE clause. (' WHERE OrderID = X ', with X replaced by the OrderID of the row you're editing) I suppose you could create a dictionary object with values initially set to False. Dim dict As Object Set dict = CreateObject("Scripting.Dictionary") dict.Add "DeptA", False dict.Add "DeptB", False ' .. etc. ' Then go through the items in your listbox, changing the dict value to True. dict(myval) = True Finally, build your UPDATE statement based on the dictionary values. But that all seems like too much work to me. So now I'm wondering about your table structure. Is tblMain set up similar to this?: OrderID DeptA DeptB DeptC DeptD ------- ----- ----- ----- ----- 127 True False False True If so, consider a related table for the Dept information. OrderID Which_Department ------- ---------------- 127 DeptA 127 DeptD The rule of thumb governing this is "columns are expensive; rows are cheap". Edit : Seems to me you have two sets of items: SetA is all possible items; SetB is a subset of SetA. You want to produce a True for each item in SetB and a False for each SetA item which is not in SetB. Is that correct when you substitute dict (the dictionary object) for SetA and lstResults for SetB? What I was trying to suggest is load dict with all the possible "DeptX" keys and assign them as False. Then iterate your lstResults and change each of those (in dict ) to True. Afterward, build your SQL statement from dict . Dim varKeys As Variant Dim i As Integer Dim strFragment As String varKeys = dict.keys() For i = LBound(varKeys) To UBound(varKeys) strFragment = strFragment & ", " & varKeys(i) & " = " & dict(varKeys(i)) Next i strFragment = Mid(strFragment, 3) sql = sql & strFragment & "WHERECLAUSE"
