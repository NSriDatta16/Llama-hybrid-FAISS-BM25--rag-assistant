[site]: stackoverflow
[post_id]: 2302120
[parent_id]: 2301960
[tags]: 
I suppose you could also declare a minor instance of the Feature Envy code smell, although it really is somewhat trivial. Perhaps a class method on MailingList could be introduced, so the controller method becomes something like def update if @mailing_list = MailingList.update_attributes_by_id(params) ... class MailingList def self.update_attributes_by_id(params) id = params.delete(:id) find(id).update_attributes(params) ... (not tested, so handle with care) Would I bother in real life? Probably not, for one thing the two-part find/update thing is so common that people understand it immediately - someone coming to code like the above is going to have to stop and think a little, even if you have a perfectly expressive name. These analysers (I run Kevin Rutherford's reek on my own code) are great, but they don't understand context so they're seldom going to offer perfect information. They're useful for identifying areas that may benefit from attention but there will be plenty of false positives and they'll also miss things, so they need to be used with awareness.
