[site]: stackoverflow
[post_id]: 4115384
[parent_id]: 3880497
[tags]: 
Okay, it's not pretty, but I have the same problem and I came up with a workaround of sorts that kicks in when you release your fingers from the screen. I instantiate a boolean: bool noPin = false; I then use this to determine whether zoom or pan is being done by the user (these fire between the MouseLeftButtonDown and MouseLeftButtonUp events). On the Up event, I then check whether the user was zooming or panning and, if not, place my pushpin. private void mHome_MouseLeftButtonDown(object sender, MouseButtonEventArgs e) { noPin = false; } private void mHome_MouseLeftButtonUp(object sender, MouseButtonEventArgs e) { if (!noPin) PlacePushPin(); } private void mHome_MapPan(object sender, MapDragEventArgs e) { tbTemp.Text += "pan"; } private void mHome_MapZoom(object sender, MapZoomEventArgs e) { tbTemp.Text += "zoom"; } It's not beautiful but, well, it was the best I could manage.
