[site]: stackoverflow
[post_id]: 4560050
[parent_id]: 3060654
[tags]: 
After much trial and error I created the following work around. This is based on a situation where the login is managed by a platform other than Magento. I was not able to find a way to share a session with Magento that was initialized outside of Magento. Instead I created a simple Magento extension that hooks to the event observer 'http_response_send_before'. Now whenever Magento loads a page, the module will check to see if the user is logged in to the other system. If so, it retrieves the email of that user, and logs the user into Magento using the email address as the identifier, and sets the session for that customer. Obviously the customer must already exist in Magento for the login to work. Here are the files and the code contained within. Feel free to modify to work with your system. /app/code/local/Verve/Session/etc/config.xml 0.5.1 model Verve_Session_Helper_Login loginEvent /app/code/local/Verve/Session/Helper/Login.php class Verve_Session_Helper_Login extends Mage_Core_Helper_Abstract { static function loginEvent($observer) { $session = Mage::getSingleton('customer/session'); if (!$session->isLoggedIn()) { YOUR CODE HERE, FIND EMAIL OF LOGGED IN USER if(@$email){ $customer = Mage::getModel('customer/customer'); $customer->loadByEmail($email); $session = Mage::getSingleton('customer/session'); $session->start(); $session->setCustomer($customer); $url = $_SERVER['REQUEST_URI']; Mage::app()->getFrontController()->getResponse()->setRedirect($url); } } } } /app/etc/modules/Verve_Session.xml true local
