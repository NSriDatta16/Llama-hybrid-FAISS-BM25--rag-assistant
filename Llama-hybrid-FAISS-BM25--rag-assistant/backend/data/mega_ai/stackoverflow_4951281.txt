[site]: stackoverflow
[post_id]: 4951281
[parent_id]: 4950956
[tags]: 
I don't think you can do it as easily as sysrqb states. On a side note, there is really no difference to starting from start or end; the goal is to find the minimum amount of stops each way, where each stop is as close to 200m as possible. The question as stated seems to allow travelling beyond 200m per day, and the penalty is equally valid for over or under (since it is squared). This prefers an overage of miles per day rather than underage, since the penalty is equal, but the goal is closer. However, given this layout A ----- B----C-------D------N 0 190 210 390 590 It is not always true. It is better to go to B->D->N for a total penalty of only (200-190)^2 = 100 . Going further via C->D->N gives a penalty of 100+400=500 . The answer looks like a full breadth first search with active pruning if you already have an optimal solution to reach point P, removing all solutions thus far where sum(penalty-x) > sum(penalty-p) AND distance-to-x This would be an O(n^2) algorithm Something like... Quicksort all hotels by distance from start (discard any that have distance > hotelN) Create an array/list of solutions, each containing (ListOfHotels, I, DistanceSoFar, Penalty) Inspect each hotel in order, for each hotel_I Calculate penalty to I, starting from each prior solution Pruning For each prior solution that is beyond 200 distanceSoFar from current, and Penalty>current.penalty, remove it from list loop
