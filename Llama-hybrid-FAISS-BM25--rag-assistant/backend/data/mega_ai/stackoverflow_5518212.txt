[site]: stackoverflow
[post_id]: 5518212
[parent_id]: 5518101
[tags]: 
My solution is pretty involved and requires both modifying the OmniAuth Facebook strategy and adding Rack middleware. First, I added a class attribute and changed a method in OmniAuth::Strategies::Facebook (I put this at the end of my omniauth.rb config file, but it belongs in the lib directory): module OmniAuth module Strategies class Facebook Second, I added a piece of Rack middleware to determine if the request was from a mobile device and then set the display accordingly: module Rack class FacebookMobileOmniauth def initialize(app) @app = app end MOBILE_USER_AGENTS = 'palm|blackberry|nokia|phone|midp|mobi|symbian|chtml|ericsson|minimo|' + 'audiovox|motorola|samsung|telit|upg1|windows ce|ucweb|astel|plucker|' + 'x320|x240|j2me|sgh|portable|sprint|docomo|kddi|softbank|android|mmp|' + 'pdxgw|netfront|xiino|vodafone|portalmmm|sagem|mot-|sie-|ipod|up\\.b|' + 'webos|amoi|novarra|cdm|alcatel|pocket|ipad|iphone|mobileexplorer|' + 'mobile' def call(env) request = Request.new(env) if request.user_agent.to_s.downcase =~ Regexp.new(MOBILE_USER_AGENTS) OmniAuth::Strategies::Facebook.display = 'touch' else OmniAuth::Strategies::Facebook.display = nil end return @app.call(env) end end end And lastly, I added the Rack middleware to my config.ru: require ::File.expand_path('../config/environment', __FILE__) use Rack::FacebookMobileOmniauth # new run Mystupid::Application
