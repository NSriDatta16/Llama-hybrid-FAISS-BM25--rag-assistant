[site]: datascience
[post_id]: 103413
[parent_id]: 
[tags]: 
How is a time series with strong seasonality and trend stationary?

I was playing around with time series and stationarity and stumbled on something which I'm not getting completely. There are two popular ways of testing out stationarity - ADF and KPSS. And I was using both(KPSS with a constant trend) on different time series and see how it works. from statsmodels.tsa.stattools import adfuller, kpss def _check_stationary_adfuller(x, confidence, **kwargs): result = adfuller(x, **kwargs) if result[1]>confidence: return False, result else: return True, result def _check_stationary_kpss(x, confidence, **kwargs): result = kpss(x, **kwargs) if result[1] First I did the usual synthetic time series: White Noise - Both tests gave non-stationary White Noise with trend - ADF said Non-stationary, and KPSS said stationary (because we are running the version which allows for constant trend) Till now things were as expected. Now I started with some real world time series. 1. ADF: Non Stationary, KPSS: Stationary Which I assumed was because of a slight trend in the time series. I tried removing the trend by fitting a linear trend and taking that out, but KPSS still seems to say that it was not stationary. 2. To experiment further, I artificially enhanced the trend in the series by adding a manually created trend to it. Now the most startling thing happened. Both ADF and KPSS started to tell that this is a stationary series. I tried running KPSS without the constant trend and thankfully it said the series was not stationary. Now the questions are: Why would adf be so wrong and say that this was stationary? Is it good practice to always do multiple tests and make a voting decision to check for stationarity? Would detrending with a linear fit normally make a trend stationary series into a stationary series?
