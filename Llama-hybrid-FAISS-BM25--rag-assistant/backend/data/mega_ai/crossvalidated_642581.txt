[site]: crossvalidated
[post_id]: 642581
[parent_id]: 
[tags]: 
How does plotting QQ plot on ggplot work?

I am new to r programming and have ran into an odd situation while plotting a QQ plot for studentised residuals with ggplot2. See code and plot below: > rstandard(model_iq) 1 2 3 4 5 6 7 8 9 10 11 12 13 1.13429572 1.16124625 0.47049187 0.83542825 -0.18827262 0.47293724 -0.34506576 -1.29589101 1.43866080 1.02882375 -0.19085879 0.50767008 1.99950824 14 15 16 17 18 19 20 21 22 23 24 25 26 -0.86482930 -0.50277823 0.72606420 -0.66445743 -0.77124490 -1.11242024 -1.30150324 1.80073085 0.52791966 -0.02534021 0.77932014 -0.72089642 -1.00615253 27 28 29 30 31 32 33 34 35 36 37 38 -1.28725357 0.83347411 1.27023923 0.98982050 -0.58952946 -1.06235680 -1.05706351 0.56601524 0.36680592 -0.75715996 -1.91748085 -1.23402619 ggplot(data_iq, aes(sample = rstandard(model_iq))) + stat_qq_band(alpha = 0.4) + stat_qq_point(shape = 21, size = 3, fill = "blue3", colour = "grey60") + stat_qq_line(col = "red", linetype = "dashed") What I am trying to do is simply to check if my studentised residuals have a normal distribution. My question is this: Why is my stat_qq_line() not a line where x = y? Is there something I am missing here with regards to QQ plotting for studentised residuals? I noticed that my data would fit far better if I have a stat_qq_line() where x = y. I do not believe this is a complicated question, but ChatGPT has been fairly useless in helping understand whether the stat_qq_line() is wrong and why. Pardon my ignorance, but I hope that someone could enlighten me as to why stat_qq_line() takes on the values it does and whether I can use it as is to verify normality. This is my first time plotting QQ plots and I am trying to understand how this works.
