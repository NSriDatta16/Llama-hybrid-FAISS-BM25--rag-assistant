[site]: stackoverflow
[post_id]: 270029
[parent_id]: 
[tags]: 
Is it considered bad design to do lengthy operations in a constructor?

I am implementing a class to compare directory trees (in C#). At first I implemented the actual comparison in the class's constructor. Like this: DirectoryComparer c = new DirectoryComparer("C:\\Dir1", "C:\\Dir2"); But it doesn't feel "right" to do a possible lengthy operation in the constructor. An alternative way is to make the constructor private and add a static method like this: DirectoryComparer c = DirectoryComparer.Compare("C:\\Dir1", "C:\\Dir2"); What do you think? Do you expect a constructor to be "quick"? Is the second example better or is it just complicating the usage of the class? BTW: I wont mark any answer as accepted because I don't think there is a correct answer, just preference and taste. Edit: Just to clarify my example a little. I'm not only insterested if the directories differs, I'm also interested in how they differ (which files). So a simple int return value wont be enough. The answer by cdragon76.myopenid.com actually is pretty close to what I want (+1 to you).
