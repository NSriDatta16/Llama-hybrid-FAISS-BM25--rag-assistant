[site]: stackoverflow
[post_id]: 2398176
[parent_id]: 2352718
[tags]: 
Db4o uses the CLR-reflection mechanisms to retrieve meta-information of the objects, in order to store it. This works fine for C#, VB.NET etc. Languages such as IronPython and IronRuby used an additional layer on top the CLR to allow all the wonderful dynamics features. Now when db4o uses the CLR-reflection is sees add the additional stuff which is used to implement the dynamic features. In the attempt to store this information is fails. There not a simple an elegant solution available today =( As already stated in the comments, you could define you data-object in C# or VB.NET, so that you have plain old CLR objects. I think this is the quickest solution and should work. You could 'teach' db4o about the object-model of python by writing you own reflector . But that's certainly not easy. Db4o has a 'SelfReflector' which is intended for environments without reflection. There basically add manually the required meta-info for each object. However I cannot find any documentation on this. Another possibility would be to use a ODBMS which is created specially for Python, like ZODB instead of db4o. But I'm not sure if ZOBR runs on IronPython.
