[site]: stackoverflow
[post_id]: 5668035
[parent_id]: 
[tags]: 
Why does Flex's Matrix Transform Snap Child Back to Top Corner of Parent?

I'm having trouble with Matrix Transforms in Flex. I have a Flex Canvas with nothing but an Image in it, like so. To this image I am applying zoom/rotation transforms using code like this: private function _rotateAndZoomImage(zoom:Number, angle:Number):void{ var radians:Number = angle * (Math.PI / 180.0); var offsetWidth:Number = ( img.contentWidth/2.0 ); var offsetHeight:Number = ( img.contentHeight/2.0 ); var matrix:Matrix = new Matrix(); matrix.translate(-offsetWidth, -offsetHeight); matrix.rotate(radians); //Do the zoom matrix.scale (zoom/100, zoom/100); matrix.translate(+offsetWidth, +offsetHeight); img.transform.matrix = matrix; } This all works. BUT. The image is draggable. The user can move it anywhere inside the canvas that is it's parent. Once the image has been moved and the transform is applied the image gets "snapped" back to the original 0,0 (top left of the canvas) location before being transformed and is left there afterwards - not where the user would expect it to be. After messing about with this for the best part of a day I still can't work out why on earth it's doing this. Anybody? Edit: Note that the same happens without the two calls to .translate() in the above code. So the following code also snaps the image back to 0,0 of the canvas after it has been moved: private function _rotateAndZoomImage(zoom:Number, angle:Number):void{ var radians:Number = angle * (Math.PI / 180.0); var matrix:Matrix = new Matrix(); matrix.rotate(radians); matrix.scale (zoom/100, zoom/100); img.transform.matrix = matrix; } Jake
