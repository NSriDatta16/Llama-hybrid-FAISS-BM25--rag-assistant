[site]: crossvalidated
[post_id]: 119834
[parent_id]: 
[tags]: 
what does a negative logloss value indicate

I am using logloss python function provided here and I am getting results as -2.99 when I use a machine learning algorithm on my dataset. What does that mean? The algorithm's predictions are bad (or) good? How good or bad? This is the code I am using. (New to python as well, so maybe my inputs to the function are totally wrong?) dataset = pd.read_csv('../training.csv') cols = dataset[dataset.columns] cols.drop(['tobepredicted'], axis=1, inplace=True) cols.drop('ID', axis=1, inplace=True) features = cols.columns target = dataset['tobepredicted'] train = dataset[features] cfr = SVR(C=100, kernel="poly", degree=3) #Simple K-Fold cross validation. 5 folds. cv = cross_validation.KFold(len(train), n_folds=5) N = len(dataset) l = range(N) results = [] for traincv, testcv in cv: trainLen = len(traincv) shuffle(l) probas = cfr.fit(train.ix[l[:trainLen]], target.ix[l[:trainLen]]).predict(train.ix[l[trainLen:]]) results.append(llfun(target.ix[l[trainLen:]], probas)) #print out the mean of the cross-validated results print "Results: " + str(np.array(results).mean())
