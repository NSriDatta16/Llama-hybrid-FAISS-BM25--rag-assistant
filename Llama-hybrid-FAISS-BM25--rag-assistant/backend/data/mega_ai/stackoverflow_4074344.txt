[site]: stackoverflow
[post_id]: 4074344
[parent_id]: 4074312
[tags]: 
To answer your first question: Yes it is possible and that is what the Rails framework encourages: reuse of code (otherwise known as the DRY-principle). Specific to view logic, there is a helper for each and every one of your models. This is the default/convention, though it is not something you have to adhere to. I'll explain more about this in the next paragraph. So yes, put your form_button method into a helper -- not necessarily application_helper.rb . To answer your second question: You could stick it in application_helper.rb , but there's nothing stopping from you making things a little more logical (i.e., creating a buttons_helper.rb ). In Rails 3 specifically, all helpers are available to each and every view (though this has ruffled some feathers). So what you could do instead is create a new helper for yourself (i.e., rails g helper Buttons ), specifically for creating your buttons, and put your logic in there. Take a look at this Railscast . It describes in more detail exactly what I've said above. I had the same question and found it very helpful. http://railscasts.com/episodes/101-refactoring-out-helper-object
