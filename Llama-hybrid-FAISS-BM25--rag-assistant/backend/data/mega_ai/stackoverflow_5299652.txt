[site]: stackoverflow
[post_id]: 5299652
[parent_id]: 
[tags]: 
Creating a class for storing extra information and linking it to a host class

So I have been trying to figure out the best way to go about this but always end up hitting a wall somewhere. Basically, my problem is this: I have a layer that can draw items of the type UIElement. In my case, I need to be able to draw UIElements of two types, Image and Shape. They are both inherited from UIElement. Now I want to create a class of my own, lets call the class a LayerItem. The LayerItem contains some additional information about the specific item, such as the name. My first solution was to inherit the LayerItem from the Image-class and add the new fields. This way I was able to also catch all the events that the Image-object received (for example MouseOver) and then cast the object to LayerItem for the retrieval of the extra related information. Showing the image was accomplished by setting the object's Source-property. This approach, however, does not work if the objects can also be shapes, since shapes do not have the Source-property. Basically what I am looking for is "the right way" to accomplish this, in a way that allows me to use the events directly. Only solution I can currently come up with is to have a dictionary mapping the UIElements to the LayerItems, then fetching the LayerItem from there by the use of the UIElement whose event was raised. So, are there some better, perhaps more sophisticated ways of accomplishing this? EDIT: Thanks for the reply, but I'm not sure that's exactly what I am looking for. Let me try to clarify. Basically, I have a layer that I can draw different things on (Images or Shapes) by adding the graphic in question onto the layer and giving it coordinates. The idea is that the user can click on the layer and choose from a list of things what kind of a graphic he/she would like to use to represent the added item. The extra information about the item, such as id and name, are stored in a database and I need a way to link this information to the graphical item. So all of this would be handled by code, the items are created and deleted dynamically. This is also where the events come in. To be able to recognize which item the user clicked (to show the extra information, allow drag-n-drop etc), I think the events produced by the UIElement are the easiest to use. And about providing code as an example, well that's slightly hard because it depends a lot on the implementation :) But I surely can try and put something up if my explanation still isn't clear enough!
