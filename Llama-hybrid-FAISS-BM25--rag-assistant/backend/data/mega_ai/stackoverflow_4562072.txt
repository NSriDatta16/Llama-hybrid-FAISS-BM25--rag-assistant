[site]: stackoverflow
[post_id]: 4562072
[parent_id]: 4561524
[tags]: 
F# and Nemerle versions quite different: Nemerle defines class while F# defines struct. Nemerle defines readonly members while F# defines mutable members. Nemerle defines public properties while F# defines public fields. Nemerle defines constructor while F# doesn't define it. Analogous Nemerle code for F# example is following: struct X mutable A : string mutable B : string The second example is almost the same: Nemerle defines constructor for My while F# doesn't define it. Nemerle defines Properties which return the value passed in constructor while F# defines properties with constant values. Nemerle version is much shorter and clearer than F# version here. P.S. About curly braces vs indent syntax. Nemerle supports both syntaxes. You can write either: class M { static Main() : void { Console.WriteLine("A"); } } Or use indent: #pragma indent class M static Main() : void Console.WriteLine("A"); Or even use both styles ! #pragma indent class M static Main() : void { Console.WriteLine("A"); }
