[site]: stackoverflow
[post_id]: 427149
[parent_id]: 427083
[tags]: 
As to MVC, it was introduced in 1979. I remember implementing it for the first time in my career in Aldus Persuasion for Windows (a one-time competitor to Powerpoint) in the 1988/89 time frame. MVC frameworks are all the rage in RIA applications such as Adobe Flex-based web programming (Cairngorm, Mate, PureMVC, etc.). In my company our first Flex app was not done as MVC, yet we had multiple views into the model. It got to be a mess. We refactored to MVC and life got way better for the developers. As far as I can tell it's only the folks that try to implement MVC on the server-side via any of the various web frameworks, that are the ones the complain about MVC. The Fallacies of Distributed Computing would have informed them that it was a bad idea to do MVC where the presentation rendering layer is separated by the gulf of a network connection. Distributed MVC is just as bad as distributed objects. With RIA web apps, such as those based on Flex, MVC is done purely on the client side - just as it was introduced in Smalltalk graphical workstations back in '79. RIA clients then only use async service calls and/or messaging to communicate with the server-side. For an app that did nothing but throw up a single CRUD form, then yeah, MVC might be overkill. But for rich GUI apps that have a fair amount of complexity going on, MVC can remain a very sensible pattern to adopt.
