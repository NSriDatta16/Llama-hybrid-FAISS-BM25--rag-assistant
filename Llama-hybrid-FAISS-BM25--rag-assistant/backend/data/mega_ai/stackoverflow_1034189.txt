[site]: stackoverflow
[post_id]: 1034189
[parent_id]: 1034165
[tags]: 
(Updated post specifically for a Javascript solution.) In Javascript, your code might look like this: if (data.match(/ ]+id="JSBALLOONS">([\S\s]*?) /)) { inner_script = RegExp.$1; } That part between parentheses ([\S\s]*?) is saved by the regex engine and is accessible to you after a match is found. In Javascript, you can use RegExp.$1 to reference to the matched part inside the script tags. If you have more than one of such a group, surrounded by () , you can refer to them with RegExp.$2 , and so on, up to RegExp.$9 . Javascript will not match newline characters by default, so that is why we have to use ([\S\s]*?) rather than (.*?) , which may make more sense. Just to be complete, in other languages this is not necessary if you use the s modifier ( /.../s ). (I have to add that regexes are typically very fragile when scraping content from HTML pages like this. You may be better off using the jQuery framework to extract the contents.)
