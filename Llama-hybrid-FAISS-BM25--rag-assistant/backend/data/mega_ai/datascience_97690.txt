[site]: datascience
[post_id]: 97690
[parent_id]: 
[tags]: 
1D CNN time series classiifcation : ValueError: Shapes (10, 10, 8) and (10, 8) are incompatible

I'm working on a time series classification using ASHRAE RP-1043 chiller dataset which has 65 columns and more than 3000 rows for each chiller fault and normal condition. And I have used 1D CNN and training results are 99.35% which is pretty good and tested with data that didn't involve in training data set. and my output categorical feature is one hot encoded Following is the code i used for it and works pretty good.And the train data shape is as following # make it 3d input X_train = scaled_x_train.reshape(-1,1,65) X_train.shape,y_train.shape` ((81600, 1, 65), (81600, 8)) def create_nn_model(): model = Sequential() model.add(Conv1D(filters=64, kernel_size=1, activation='relu', input_shape=(X_train.shape[1],X_train.shape[2]))) model.add(Conv1D(filters=64, kernel_size=1, activation='relu')) model.add(Dropout(0.5)) model.add(MaxPooling1D(pool_size=1)) model.add(Flatten()) model.add(Dense(100, activation='relu')) model.add(Dense(8, activation='softmax')) model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy']) return model model = create_nn_model() model.fit(X_train, y_train, epochs=100,batch_size=10,verbose=1) But here when i change the kernel size to 3 and max pooling size to 2 and also the input shape as in the following i get the following error. # make it multi steps compatible input X_train = scaled_x_train.reshape(-1,10,65) y_train = y_train.reshape(-1,10,8) X_train.shape,y_train.shape >((8160, 10, 65), (8160, 10, 8)) def create_nn_model(): model = Sequential() model.add(Conv1D(filters=64, kernel_size=3, activation='relu', input_shape=(X_train.shape[1],X_train.shape[2]))) model.add(Conv1D(filters=64, kernel_size=3, activation='relu')) model.add(Dropout(0.5)) model.add(MaxPooling1D(pool_size=2)) model.add(Flatten()) model.add(Dense(100, activation='relu')) model.add(Dense(8, activation='softmax')) model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy']) return model model = create_nn_model() model.fit(X_train, y_train, epochs=100,batch_size=10,verbose=1) ValueError: Shapes (10, 10, 8) and (10, 8) are incompatible. Model: "sequential_81" _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= conv1d_141 (Conv1D) (None, 8, 64) 12544 _________________________________________________________________ conv1d_142 (Conv1D) (None, 6, 64) 12352 _________________________________________________________________ dropout_61 (Dropout) (None, 6, 64) 0 _________________________________________________________________ max_pooling1d_61 (MaxPooling (None, 3, 64) 0 _________________________________________________________________ flatten_58 (Flatten) (None, 192) 0 _________________________________________________________________ module_wrapper_91 (ModuleWra (None, 8) 1544 ================================================================= Total params: 26,440 Trainable params: 26,440 Non-trainable params: 0 May be i may not have very much clear idea as to what kernel and filters. Or is it something to be done with the my 3d input shape? Can please anyone advice me on setting up the structure of data for the model's input layer (both X and Y)
