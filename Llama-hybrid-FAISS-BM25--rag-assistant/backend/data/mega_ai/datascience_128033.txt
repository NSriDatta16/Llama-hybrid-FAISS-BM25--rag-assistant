[site]: datascience
[post_id]: 128033
[parent_id]: 
[tags]: 
How to apply this schematic of a CNN?

I'm trying to apply a model from a paper to my problem, however I get very poor results (RÂ² = 0.1 for regression). I think I don't understand the schematic drawing of the CNN used in the paper. Could you please help me understand it? Step 1: This is the schematic of what the authors call convp-20(1x2x2). As input they are using an image with several channels, each representing a principal component. Is my implementation in pytorch correct? step1 = nn.Sequential( # in_dim = (n, n_components, 15, 15) nn.Conv2d( in_channels=n_components, out_channels=n_components*20, kernel_size=2, groups=n_components ), # dim = (n, n_components*20, 14, 14) nn.BatchNorm2d(n_components*20), nn.ReLU(), nn.MaxPool2d(2), # dim = (n, n_components, 7, 7) ) Step 2: The next step in the paper is called convp-20(20x2x2). This comes immediately after convp-20(1x2x2) and is repeated 3 times. Is my implementation correct? I'm particularly unsure about this step. step2 = nn.Sequential( nn.Conv2d( in_channels=n_components*20, out_channels=n_components, kernel_size=2, groups=n_components ), # dim = (n, n_components, 6, 6) nn.BatchNorm2d(n_components), nn.ReLU(), nn.MaxPool2d(2), # dim = (n, n_components, 3, 3) ) Final step: As final layer they use this. I think my code should be correct? step_final = nn.Sequential( nn.Flatten(), nn.Linear(in_features=20*3*3, out_features=1) # I want to use regression instead of classification, therefore output dim = 1 # Also the input dim is dependant on how many times the convp-20(20x2x2)-step has been applied ) If you want to read the paper, you can find it here and look under the section "4. 2D-CNN with Principal Components."
