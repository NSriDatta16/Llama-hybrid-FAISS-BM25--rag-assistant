[site]: stackoverflow
[post_id]: 903124
[parent_id]: 903114
[tags]: 
Don't use a button, use multi-touch and NSTimer: Make a view-local NSTimer object inside your interface, then use it to start/cancel the timer -(void)movePlayer:(id)sender { } -(void)touchesBegan:(NSSet*)touches withEvent:(UIEvent*)event { timer = [NSTimer scheduledTimerWithTimeInterval:0.3 target:self selector:@selector(movePlayer:) userInfo:nil repeats:YES]; } -(void)touchesEnded:(NSSet*)touches withEvent:(UIEvent*)event { if (timer != nil) [timer invalidate]; timer = nil; } -(void)touchesMoved:(NSSet*)touches withEvent:(UIEvent*)event { if (timer != nil) { [timer invalidate]; timer = nil; } } This way, you can repeat the event at a predefined interval, and not have to rely on a button, and get the repeat behaviour you're looking for. Note the touchesMoved trigger - if they move their finger, this cancels the timer, and the player stops moving.
