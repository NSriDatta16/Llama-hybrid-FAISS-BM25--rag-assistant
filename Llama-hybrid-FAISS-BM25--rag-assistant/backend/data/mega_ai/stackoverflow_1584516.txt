[site]: stackoverflow
[post_id]: 1584516
[parent_id]: 1584455
[tags]: 
Still not exactly what I would call elegant, but less yuck than having to change the whole API is NSInvocation: Polygon *poly; UIColor *color; BOOL filled; // Assume the above variables exist NSInvocation *inv = [NSInvocation invocationWithMessageSignature:[target messageSignatureForSelector:message]]; [inv setArgument:&poly atIndex:2]; [inv setArgument:&color atIndex:3]; [inv setArgument:&filled atIndex:4]; [inv performSelector:@selector(invokeWithTarget:) withObject:target afterDelay:1]; The other best option is just to create a wrapper method that calls the original method you want with appropriate arguments (perhaps given as a dictionary or array), which matches the signature needed to perform after a delay.
