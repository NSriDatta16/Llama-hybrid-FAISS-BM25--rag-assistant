[site]: stackoverflow
[post_id]: 5282433
[parent_id]: 5282327
[tags]: 
I'd start by organising your data source in a different way. Get a datasource NSArray that contains 9 NSDictionaries representing your categories. Inside each category, you have a couple of keys - one for a corresponding string with the category name and one for a corresponding array of MyObjects that belong to the category: dataSource [ item1 { catName = @"CategoryName 1" objects = NSArray of MyObjects for catName1 } item2 { catName = @"CategoryName 2" objects = NSArray of MyObjects for catName2 } etc... ] Once you have the data organised this way, your datasource methods for the table view will look like this (conceptually): numberOfSections can be accessed with [datasource count] titleForSection can be accessed with [[datasource objectAtIndex:indexPath.section] valueForKey:@"catName"] numberOfRowsInSection can be accessed with [[[datasource objectAtIndex:indexPath.section] valueForKey:@"objects"] count] And finally, the MyObject for each row can be accessed with [[[datasource objectAtIndex:indexPath.section] valueForKey:@"objects"] objectAtIndex:indexPath.row] on the cellForRowAtIndexPath: method. Makes sense? Let me know if you have any questions. Cheers, Rog [EDIT TO ANSWER YOUR FOLLOW UP QUESTION] This is based on a few assumptions but you should get the gist of it. For the purpose of testing this, I created a MyObject class that returns an instance with random generated category names. - (void)createDatasource { NSInteger numberOfObjects = 10; NSMutableArray *objects = [NSMutableArray arrayWithCapacity:numberOfObjects]; NSMutableArray *categories = [NSMutableArray arrayWithCapacity:numberOfObjects]; for (int i = 0; i
