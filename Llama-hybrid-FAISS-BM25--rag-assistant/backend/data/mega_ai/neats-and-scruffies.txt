In the history of artificial intelligence (AI), neat and scruffy are two contrasting approaches to AI research. The distinction was made in the 1970s, and was a subject of discussion until the mid-1980s. "Neats" use algorithms based on a single formal paradigm, such as logic, mathematical optimization, or neural networks. Neats verify their programs are correct via rigorous mathematical theory. Neat researchers and analysts tend to express the hope that this single formal paradigm can be extended and improved in order to achieve general intelligence and superintelligence. "Scruffies" use any number of different algorithms and methods to achieve intelligent behavior, and rely on incremental testing to verify their programs. Scruffy programming requires large amounts of hand coding and knowledge engineering. Scruffy experts have argued that general intelligence can only be implemented by solving a large number of essentially unrelated problems, and that there is no silver bullet that will allow programs to develop general intelligence autonomously. John Brockman compares the neat approach to physics, in that it uses simple mathematical models as its foundation. The scruffy approach is more biological, in that much of the work involves studying and categorizing diverse phenomena. Modern AI has elements of both scruffy and neat approaches. Scruffy AI researchers in the 1990s applied mathematical rigor to their programs, as neat experts did. They also express the hope that there is a single paradigm (a "master algorithm") that will cause general intelligence and superintelligence to emerge. But modern AI also resembles the scruffies: modern machine learning applications require a great deal of hand-tuning and incremental testing; while the general algorithm is mathematically rigorous, accomplishing the specific goals of a particular application is not. Origin in the 1970s The distinction between neat and scruffy originated in the mid-1970s, by Roger Schank. Schank used the terms to characterize the difference between his work on natural language processing (which represented commonsense knowledge in the form of large amorphous semantic networks) from the work of John McCarthy, Allen Newell, Herbert A. Simon, Robert Kowalski and others whose work was based on logic and formal extensions of logic. Schank described himself as an AI scruffy. He made this distinction in linguistics, arguing strongly against Chomsky's view of language. The distinction was also partly geographical and cultural: "scruffy" attributes were exemplified by AI research at MIT under Marvin Minsky in the 1970s. The laboratory was famously "freewheeling" and researchers often developed AI programs by spending long hours fine-tuning programs until they showed the required behavior. Important and influential "scruffy" programs developed at MIT included Joseph Weizenbaum's ELIZA, which behaved as if it spoke English, without any formal knowledge at all, and Terry Winograd's SHRDLU, which could successfully answer queries and carry out actions in a simplified world consisting of blocks and a robot arm. SHRDLU, while successful, could not be scaled up into a useful natural language processing system, because it lacked a structured design. Maintaining a larger version of the program proved to be impossible, i.e. it was too scruffy to be extended. Other AI laboratories (of which the largest were Stanford, Carnegie Mellon University and the University of Edinburgh) focused on logic and formal problem solving as a basis for AI. These institutions supported the work of John McCarthy, Herbert Simon, Allen Newell, Donald Michie, Robert Kowalski, and other "neats". The contrast between MIT's approach and other laboratories was also described as a "procedural/declarative distinction". Programs like SHRDLU were designed as agents that carried out actions. They executed "procedures". Other programs were designed as inference engines that manipulated formal statements (or "declara