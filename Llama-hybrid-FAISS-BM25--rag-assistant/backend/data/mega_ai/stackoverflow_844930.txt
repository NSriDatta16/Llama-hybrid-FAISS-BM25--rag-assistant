[site]: stackoverflow
[post_id]: 844930
[parent_id]: 778396
[tags]: 
For example, there might be 1,000,000,000 purchase arrays, and I want to count how many of them have a purchase in "Springfield" followed by a purchase in "Hometown" (note that order is important). Maybe I'm wrong, but I think a relational DB would be too slow for this purpose. What you describe are typical data warehouse queries, and AFAIK those are usually implemented using relational DBs, albeit ones that are optimized for reporting rather than for concurrent transaction processing. However, I don't think the difference in speed will be extreme if you use a "regular" RDBMS. Of course, if you have enough money, you could go for a special data warehouse DBMS. The most important influence on speed is going the be 1) a technology optimized for quering large disk-based data sets - thats exactly what all "real" DMBSs offer, and 2) data organized in the right way. 3b) Count the number of times records appear in a certain order. For example, how many arrays are there were a purchase over 50 was made and then a purchase in "Springfield" was made? I don't know what kind of database you would use to do this. You would use a relational DB with a schema designed to support that kind of query . You are going to have to give up your preconceived notion of how the data should be represented.
