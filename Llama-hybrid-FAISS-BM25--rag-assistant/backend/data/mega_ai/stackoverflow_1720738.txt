[site]: stackoverflow
[post_id]: 1720738
[parent_id]: 
[tags]: 
Looking for a disk-based B+ tree implementation in C++ or C

I am looking for a lightweight open source paging B+ tree implementation that uses a disk file for storing the tree. So far I have found only memory-based implementations , or something that has dependency on QT (?!) and does not even compile. Modern C++ is preferred, but C will do too. I prefer to avoid full embeddable DBMS solution, because: 1) for my needs bare bone index that can use the simplest possible disk file organization is enough, no need for concurrency, atomicity and everything else. 2) I am using this to prototype my own index, and most likely will change some of the algorithms and storage layout. I want to do that with a minimum of effort. It's not going to be production code.
