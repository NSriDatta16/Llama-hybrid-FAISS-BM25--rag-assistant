[site]: crossvalidated
[post_id]: 417597
[parent_id]: 225877
[tags]: 
Just noticed this question is over two years old, but this answer might prove useful for future readers. Check Figure 3 of the paper you referenced in the comments, or Figure 1 of the version of the paper that was published in the JoE. This figure demonstrates the shape of several different loss functions, including both MSE and QLIKE. Importantly, you'll note that MSE and QLIKE have a very different shape, so you can expect the results from using the two loss functions to be quite different. Your assertion in the comments that MSE is more sensitive to outliers is mostly correct, except for the far left tail of the loss function, where QLIKE is actually more sensitive to outliers. More generally, what you're running up against is one of the core problems of this area of the literature. Volatility processes in asset returns tends to be dominated by a small number of very large observations. This means that loss functions such as the MSE are not good at rejecting null hypotheses, since the analysis is typically dominated by a small number of large observations that get emphasized by the non-robust nature of the MSE loss function. QLIKE partially solves this problem by being robust to extreme observations in the right tail, but unfortunately it is not particularly robust in the left tail. Further, since QLIKE is not a symmetric loss function (in fact MSE is the only symmetric loss function in the class discussed by Patton), so it penalizes positive and negative loss differently. This means that if you are comparing two forecast procedures, one of which on average produces positively biased forecasts, and the other on average produces negative biased forecasts where the bias is of the same magnitude, then using QLIKE will massively favour the forecast with positive bias. So unless you have some reason to particularly prefer bias of one kind over another, QLIKE must be regarded as an imperfect solution to the problem. So what is the solution? There may not be one, unless you're willing to make some further structural assumptions about the true data-generating process behind your model.
