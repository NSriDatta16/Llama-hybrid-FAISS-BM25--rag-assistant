[site]: stackoverflow
[post_id]: 3235486
[parent_id]: 
[tags]: 
recv/send on raw socket before SSL wrap(), Python

I'm wondering if I can recv/send data on a raw socket before wrapping it - I've looked through the documentation and searched for it but couldn't find anything specific. What I basically want to do: client, addr = listeningSocket.accept() client.recv(32) client.send(b'hello') client.setblocking(0) sslSocket = ssl.wrap_socket(client, keyfile='key.pem', certfile='cert.pem', server_side=True, ssl_version=ssl.PROTOCOL_TLSv1) sslSocket.write(b'hello') The problem is I get an error that I'm pretty sure is related to the client.recv() before wrapping (or at least I think that's it since I do not get it before adding the recv?) sslSocket = ssl.wrap_socket(client, keyfile='key.pem', certfile='cert.pem', server_side=True, ssl_version=ssl.PROTOCOL_TLSv1) File "/usr/lib/python3.1/ssl.py", line 381, in wrap_socket suppress_ragged_eofs=suppress_ragged_eofs) File "/usr/lib/python3.1/ssl.py", line 135, in __init__ raise x File "/usr/lib/python3.1/ssl.py", line 131, in __init__ self.do_handshake() File "/usr/lib/python3.1/ssl.py", line 327, in do_handshake self._sslobj.do_handshake() ssl.SSLError: [Errno 8] _ssl.c:488: EOF occurred in violation of protocol Is this legal? Is there anyway to do this (I really need to send before wrapping since the client expects a raw string before the SSL data starts flooding.) Appreciate any guidance possible. Note: I need to respond to a policy request from flash. The connection with flash is going to be secure, but the policy request isn't
