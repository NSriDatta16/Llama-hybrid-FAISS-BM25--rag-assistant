[site]: stackoverflow
[post_id]: 1937459
[parent_id]: 1937404
[tags]: 
The differences are very minor in the .NET world. A .exe is simply an assembly that was compiled with the /target:winexe compiler option and contains a static Main() method in one of its types. As opposed to a DLL type of assembly, compiled with the /target:library option. Having an entry-point is very important for a .exe, that's where the program starts executing. Every Windows program gets started that way. You just don't see it in a ASP.NET app, the .exe that runs your code is iis.exe. To confuse you more, an assembly that is compiled to a .exe in .NET works just as well as a .dll. You only have to use Assembly.LoadFrom() in your code and you'll have access to all the types in the .exe module, just like you'd have in a .dll module. Key point is that if the CLR isn't hosted by some other executable process, like ASP.NET or SQL server or MMC or the myriad of programs that leverage CorBindToRuntimeEx(), you'll need to tell .NET where your code starts executing. Main point that it starts at Main().
