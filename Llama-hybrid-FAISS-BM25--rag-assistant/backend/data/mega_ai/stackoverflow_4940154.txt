[site]: stackoverflow
[post_id]: 4940154
[parent_id]: 
[tags]: 
PHP - Best Practice for Passing Variables to Include Files

This is more of a 'How should I?' rather than 'How do I?' question. Generally, what is considered the best way to pass variables to an included file? For example, let's say I'm using a fragment for a menu, and want one of the menu items (the current one) to have a certain class name (this is a very generic sample - not something I'm actually using): 'home', 'href' => 'home.php'), array('text' => 'about', 'href' => 'about.php'), array('text' => 'contact', 'href' => 'contact.php') ); ?> href=" "> i'll call the above 'menu.inc.php'. obviously it's looking for a variable (int) called $active_index to determine which link to give the '.active' class to. so - you could just define $active_index before calling the include, but this seems like poor practice to me since perhaps a variable of that name might have been defined for something else earlier and a later part of the script is still looking for it. or - you could use an absolute path and append variables using a querystring ( include 'menu.inc.php?active_index=1' ), but again that seems like a bad idea since you might need the 'real' $_GET within any given include . or - you could start each included file with ob_start and return ob_end_clean() , then use something like this to get the return: function load_view($file, $variables){ extract($variables); return include($file); } // passed like 2))?> but again this seems to have a number of cons (having to restructure all your include files accordingly with the ob functions and a return statement).
