[site]: stackoverflow
[post_id]: 5197459
[parent_id]: 5196395
[tags]: 
Probably not the answer you're looking for, but it may help... Closures are not new, they've been around since the dawn of programming (Lisp, Algol-60). The best way to learn about how they are used is to look at a mature language where they've been around forever and see how people use them. Functional languages and closures are synonymous, usually referred to as "higher order" programming - where functions (methods) take other functions as arguments and functions can be created on the fly (blocks). So looking at a book on programming in Haskell is not a bad choice, or maybe F#. If that seems too radical you could look at Ada 95, a "conventional" language with inline functions, though it is a (profitable) niche language and the features are probably not widely used. If you want something relatively new look at C# where inline functions were added in v2. C#'s inline functions have many of the same pitfalls as Obj-C ones, and people fell into them with uninformed glee - so look for a recent C# book when their use was more mature. And in closing, don't overuse blocks. They are a very powerful tool, and when applicable can produce very good solutions. When used inappropriately however... here be dragons ;-)
