[site]: stackoverflow
[post_id]: 1935879
[parent_id]: 1935761
[tags]: 
What you wish to implement is a basic queue utilizing your storage layer. User ( id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, email VARCHAR(125) NOT NULL ); User_Group ( id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, user_id INTEGER UNSIGNED NOT NULL, group_id INTEGER UNSIGNED NOT NULL ); Group ( id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(75) NOT NULL, description VARCHAR(255) ) MailingList ( id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, user_id INTEGER UNSIGNED NOT NULL, ); # mails to be sent out to groups / all MailQueue ( id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, group_id INTEGER UNSIGNED, time_to_send DATETIME DEFAULT CURRENT_TIMESTAMP ); You would queue up group emails be entering entries in the MailQueue with a valid unix timestamp. You should create a group 'All' which you will assign each and every user to so that you can still utilize the tables properly. You would run your cron query like so: SELECT User.email FROM MailQueue INNER JOIN User_Group ON (MailQueue.group_id = User_Group.id) INNER JOIN User ON (User_Group.user_id = User.id) WHERE MailQueue.time_to_send You need to ensure you DELETE the resultset after you have used them as you do not which to send duplicate email entries. If you wish to keep a log of sent emails, simply add another TINYINT(1) UNSIGNED field indicating sent_email = 1 and fix your SELECT query to only grab results if the value is 0.
