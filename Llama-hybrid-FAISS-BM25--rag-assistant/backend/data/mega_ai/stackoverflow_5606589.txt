[site]: stackoverflow
[post_id]: 5606589
[parent_id]: 
[tags]: 
Why do I not need to free this memory?

I'm writing a Python C extension, and in the examples listed here , there is a snippet of code: static PyObject * spam_system(PyObject *self, PyObject *args) { const char *command; int sts; if (!PyArg_ParseTuple(args, "s", &command)) return NULL; sts = system(command); return Py_BuildValue("i", sts); } According to the documentation for parsing a string with PyArg_ParseTuple, "You must not provide storage for the string itself; a pointer to an existing string is stored into the character pointer variable whose address you pass." So how does Python know when the memory pointed to by "command" can be freed? How is a memory leak not occurring?
