[site]: crossvalidated
[post_id]: 589556
[parent_id]: 589541
[tags]: 
The short answer is that it should be Ok to use SNR as you described in certain case as explained below. Consider this: the simplest way to improve the example image knowing its symmetry would be to calculate the average on 8 repeating slices. One slice goes from the center to the right horizontally and from the center to upper right corner at 45 degrees. So you stack up all 8 slices, and create a new slice whose pixels are average across 8 slices, then create a new image by repeating this new slice 8 times. The resulting image should have lower noise. The way you defined the noise includes two components: complexity of an image and bona fide noise. If your image was a simple white noise, then the contribution from the complexity would be zero. In your case there's some structure in the background, which contributes to the noise. By using the symmetry, we reduce noise coming from the bona fide noise, and not the complexity of the background. So, the simple standard deviation of the whole image will reflect the reduction of bona fide noise after image processing. Hence, it seems to me it's an acceptable metric to compare images with the same symmetric background. If the backgrounds are different, then this metric would not account for the complexity of the background. Whether you need to account for this or not depends on your goals. In your image the symmetry group is probably $D_2$ . This is a very interesting question indeed. background of the signal If I had to account for the background of the image, then something like Kernel density could be used to extract the background on the slice. Then I'd calculate the noise over the background and use it to get stdev. This way we could compare noise between images of different background complexity. Consider the variance equation: $$\frac 1 n \sum_i(x_i-\bar x)^2$$ Instead of using a global average $\bar x$ , we'll calculate the local average $\mu_i$ , perhaps, using Kernel density estimators such as $$\mu_i=\sum_j K(x_i-x_j)x_j$$ Then the local variance would be $$\frac 1 n \sum_i(x_i-\mu_i)^2$$ This equation excludes the complexity of the background that is represented with smoothed pixels $\mu_i$ , and makes it possible to fairly compare images of different backgrounds.
