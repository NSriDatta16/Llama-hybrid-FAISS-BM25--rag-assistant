[site]: stackoverflow
[post_id]: 3289275
[parent_id]: 2886763
[tags]: 
You can't, WPF objects can only be accessed from the thread that created them so by definition you can't do any background processing on them. But, as you already discovered you can use serialization techniques to create a copy in another thread and you can serialize the result back. XamlWriter/XamlReader can serialize almost every WPF object but can be slow on large object graphs. And for TextPointer maybe you can use GetOffsetToPosition/GetPositionAtOffset to recreate an equivalent TextPointer back in the main thread. Another options is to use freezables, objects that inherit from Freezeable can be used from other threads (after the Freeze method is called), documents are not freezable but drawing and geometries are - so you may be able to transfer document "fragments" between threads as drawings.
