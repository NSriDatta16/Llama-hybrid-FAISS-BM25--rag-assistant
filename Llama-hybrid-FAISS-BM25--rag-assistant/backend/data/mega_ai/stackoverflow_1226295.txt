[site]: stackoverflow
[post_id]: 1226295
[parent_id]: 1226159
[tags]: 
In general having a python-django at the frontend and calling some core services via network for data retrieval and analysis is quite a normal architecture. We use that almost for everything in our company here. We don't use .NET, but I don't think it makes so much of a difference. This approach is very scalable, since if our bottleneck is the core -- we add computing power there, without touching the frontends at all and vice versa. Since all your core services are not accessible from the outside, you can make quite strong assumptions about the kind of data you receive and lay the burden of the validation on the frontend side, which is pretty handy, since in the core you have strongly typed language and data validation is much easier with dynamic one. In order to exploit this gain more fully I'd advise you to use some type-aware protocol for communication of the two parts, something like SOAP or Thrift
