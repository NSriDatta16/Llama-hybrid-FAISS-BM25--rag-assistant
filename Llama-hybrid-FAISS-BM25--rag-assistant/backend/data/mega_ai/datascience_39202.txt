[site]: datascience
[post_id]: 39202
[parent_id]: 39200
[tags]: 
Yes, it is possible to convert code from one programming language to another using sequence-to-sequence neural networks. Sequence-to-sequence can learn to translate anything from anything if there are consistent patterns and enough paired examples. However, it would not be efficient because the models would only indirectly learn the semantics (i.e., the meaning of the code) through the observed string literals (i.e., the characters that appear). It would be more efficient to map one observed sequence of string literals to semantics, then use the latent semantics representation to generate a new observed sequence of string literals. There are a variety of ways of doing that depending on much you handicap yourself. If you give the model access to abstract syntax tree (AST) , it becomes much easier. Then a tree-based Long Short-Term Memory (LSTM) could learn the semantic space. Overall, this is a field of study that tries to build a Neural Network Transpiler.
