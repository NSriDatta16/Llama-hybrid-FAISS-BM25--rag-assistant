[site]: datascience
[post_id]: 115488
[parent_id]: 
[tags]: 
Hex-binning Geospatial Data

Okay, I feel like this maybe a very easy to answer for many of you. If you feel tempted to downvote this question, please know I tried earnestly for a dozen hours to find what I think should have been an easy answer, yet could not find it because perhaps that's how new I am to data science and data-related Python packages. I have simple lat-long coordinates that I would like to hex-bin. I see this in so many programs, including kepler.gl, matlab, d3 etc, but instead of seeing a visualization of the bins, I just want to have the bin count in tabular form (to then visualize elsewhere): For example, maybe it's a simple function that takes in a list of lat-long pairs and a radius, which returns a dataset like the following: Hex Center Lat Hex Center Long Bin Count 40.525 70.426 26 ... ... ... I'm specifically looking for a Python-language answer. What I've tried so far (I've tried to explain my specific problems at the end of this code block) # https://towardsdatascience.com/geobinning-starbucks-88bc636f43c6 import numpy as np # linear algebra import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv) import geobinning as gb import geopandas as gpd import pyogrio # Here is where I read in the raw geo coordinate data potholes = pd.read_csv('./data.csv') # extract coordinates points = [] for i, d in potholes.iterrows(): points.append([d['Y'], d['X']]) # Yeah, I bring in a pre-built geojson containing my grid, because that is what `geobinning` ingests grid = gpd.read_file('./hexgrid.json') gridBlocks = grid['geometry'] # Make the call to geobinning # based on https://pypi.org/project/geobinning/ polygons = [] for gridBlocks in gridBlocks: lng,lat = gridBlocks.exterior.coords.xy lng= list(lng) lat= list(lat) coords = list(map(list,zip(*[lng,lat]))) polygons.append(coords) binCountLookup = gb.geobin(polygons, points) #### # Okay not sure what to do now. # First, the resulting `binCountLookup` is all zeros. # Second, I don't know how to join the tables. It's probably just one simple function call, right? #### data.csv sample REQUEST_ID,CREATED_ON,Y,X 62946,2016-04-18T15:23:00,40.414919,-79.949436 137829,2017-03-08T10:24:00,40.413857,-79.949049 137655,2017-03-08T08:20:00,40.414341,-79.949477 72775,2016-05-24T18:23:00,40.412456,-79.949367 201777,2017-12-05T16:29:00,40.411797,-79.949422 201223,2017-12-01T09:30:00,40.411947,-79.949487 hexgrid.json sample { "type": "FeatureCollection", "features": [ { "type": "Feature", "properties": {}, "geometry": { "type": "Polygon", "coordinates": [ [ [-79.94868393697234, 40.41183792453613], [-79.94897928535387, 40.41222734167669], [-79.94956998211696, 40.41222734167669], [-79.94986533049848, 40.41183792453613], [-79.94956998211696, 40.41144850739557], [-79.94897928535387, 40.41144850739557], [-79.94868393697234, 40.41183792453613] ] ] } }, { "type": "Feature", "properties": {}, "geometry": { "type": "Polygon", "coordinates": [ [ [-79.94868393697234, 40.41261675881726], [-79.94897928535387, 40.41300617595782], [-79.94956998211696, 40.41300617595782], [-79.94986533049848, 40.41261675881726], [-79.94956998211696, 40.4122273416767], [-79.94897928535387, 40.4122273416767], [-79.94868393697234, 40.41261675881726] ] ] } }, { "type": "Feature", "properties": {}, "geometry": { "type": "Polygon", "coordinates": [ [ [-79.94868393697234, 40.41339559309838], [-79.94897928535387, 40.41378501023894], [-79.94956998211696, 40.41378501023894], [-79.94986533049848, 40.41339559309838], [-79.94956998211696, 40.41300617595782], [-79.94897928535387, 40.41300617595782], [-79.94868393697234, 40.41339559309838] ] ] } }, { "type": "Feature", "properties": {}, "geometry": { "type": "Polygon", "coordinates": [ [ [-79.94868393697234, 40.41417442737951], [-79.94897928535387, 40.41456384452007], [-79.94956998211696, 40.41456384452007], [-79.94986533049848, 40.41417442737951], [-79.94956998211696, 40.413785010238946], [-79.94897928535387, 40.413785010238946], [-79.94868393697234, 40.41417442737951] ] ] } }, { "type": "Feature", "properties": {}, "geometry": { "type": "Polygon", "coordinates": [ [ [-79.94868393697234, 40.414953261660635], [-79.94897928535387, 40.415342678801196], [-79.94956998211696, 40.415342678801196], [-79.94986533049848, 40.414953261660635], [-79.94956998211696, 40.414563844520075], [-79.94897928535387, 40.414563844520075], [-79.94868393697234, 40.414953261660635] ] ] } } ] } Thank you so much for considering this question!
