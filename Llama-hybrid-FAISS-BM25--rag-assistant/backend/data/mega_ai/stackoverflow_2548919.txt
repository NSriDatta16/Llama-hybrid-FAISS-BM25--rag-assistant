[site]: stackoverflow
[post_id]: 2548919
[parent_id]: 2548835
[tags]: 
As per OP, this can be Perl, not just bash. Here we go NEW SOLUTION: (paying attention to extension) ~/junk/a1$ ls f1.txt f2.txt f3.txt z1 z2 ~/junk/a1$ ls ../a2 f1.txt f2.1.txt f2.2.txt f2.3.txt f2.txt z1 # I split the one-liner into multiple lines for readability $ perl5.8 -e '{use strict; use warnings; use File::Copy; use File::Basename; my @files = glob("*"); # assume current directory foreach my $file (@files) { my $file_base2 = basename($file); my ($file_base, $ext) = ($file_base2 =~ /(.+?)([.][^.]+$)?$/); my $new_file_base = "../a2/$file_base"; my $new_file = $new_file_base . $ext; my $counter = 1; while (-e $new_file) { $new_file = "$new_file_base." . $counter++ . $ext; } copy($file, $new_file) || die "could not copy $file to $new_file: $!\n"; } }' ~/junk/a1> ls ../a2 f1.1.txt f1.txt f2.1.txt f2.2.txt f2.3.txt f2.4.txt f2.txt f3.txt z1 z1.1 z2 OLD SOLUTION: (not paying attention to extension) ~/junk/a1$ ls f1 f2 f3 ~/junk/a1$ ls ../a2 f1 f2 f2.1 f2.2 f2.3 # I split the one-liner into multiple lines for readability $ perl5.8 -e '{use strict; use warnings; use File::Copy; use File::Basename; my @files = glob("*"); # assume current directory foreach my $file (@files) { my $file_base = basename($file); my $new_file_base = "../a2/$file_base"; my $new_file = $new_file_base; my $counter = 1; while (-e $new_file) { $new_file = "$new_file_base." . $counter++; } copy($file,$new_file) || die "could not copy $file to $new_file: $!\n"; } }' ~/junk/a1> ls ../a2 f1 f1.1 f2 f2.1 f2.2 f2.3 f2.4 f3
