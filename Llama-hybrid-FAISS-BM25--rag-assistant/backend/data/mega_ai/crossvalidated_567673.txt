[site]: crossvalidated
[post_id]: 567673
[parent_id]: 567570
[tags]: 
The data is the same, the formula is the same, the model fitting function is the same -> it's the same fitted model. But the intercept and the coefficients represent different quantities, even though they are given the same name in the summary. In the first table, you use the "sum to zero contrast" for both treatment and status. This means that the intercept represents the average weight gain (of a person?) with average status and average treatment. Not sure what status (hopefully, not gender!) and treatment stand for, but it's likely "average status" and "average treatment" don't represent a meaningful reality. In the second table, you use the default "treatment contrast". This means that the intercept represents the average weight gain of a person with status 0 given treatment 0. Here treatment1 is the expected weight gain of a person with status 0 given treatment 1. (The weight gain of a person with status 1 given treatment 1 is tbStatus1 + tbStatus1:treatment1 .) The difference between the sum contrast ( contr.sum ) and the treatment contrast (the default) is easier to illustrate with a single categorical predictor that takes one of two values. n [1] 0.6920208 # With contr.sum coding, the intercept is the average of the treatment effects (effect0 + effect1) / 2 #> [1] 0.5 # and `treatment1` is the difference between treatment "0" and the average # Yep, it's that confusing: contr.sum orders the levels from 1st to (k-1)st # and the default coefficient names are not helpful. (effect0) - (effect0 + effect1) / 2 #> [1] -0.5 broom::tidy(lm(y ~ treatment, contrasts = list(treatment = contr.sum))) #> # A tibble: 2 Ã— 5 #> term estimate std.error statistic p.value #> #> 1 (Intercept) 0.495 0.0103 48.0 1.95e-261 #> 2 treatment1 -0.492 0.0103 -47.6 4.80e-259 # With contr.treatment coding, the intercept is the effect of treatment "0" effect0 #> [1] 0 # and `treatment1` is the difference between treatment "1" and treatment "0" # Since there is a single binary predictor, `treatment1` under contr.treatment # is twice `treatment1` under contr.sum -> More likely to be statistically # different from 0. (effect1 - effect0) #> [1] 1 broom::tidy(lm(y ~ treatment)) #> # A tibble: 2 Ã— 5 #> term estimate std.error statistic p.value #> #> 1 (Intercept) 0.00391 0.0173 0.226 8.21e- 1 #> 2 treatment1 0.983 0.0207 47.6 4.80e-259 The question about sum vs treatment contrast coding has been asked many times, eg. treatment and sum contrasts, inconsistent results .
