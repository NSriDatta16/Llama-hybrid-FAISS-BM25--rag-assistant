[site]: stackoverflow
[post_id]: 5574801
[parent_id]: 5574723
[tags]: 
The way it's done in similar cases is for the first malloc to allocate some significant but not too large chunk, which would suit most cases (as you described), and every subsequent realloc call to double the requested size. So, if at first you allocate 100, next time you'll realloc 200, then 400, 800 and so on. In this way the chances of subsequent reallocation will be lower after each time you do it. If memory serves me right, that's how std::vector behaves. after edit The optimal initial allocation size would be the one that will cover most of your cases on one side, but won't be too wasteful on the other side. If your average case is 50, but can spike to 500, you'll want to allocate initially 50, and then double or triple (or multiple by 10) every next realloc so that you could get to 500 in 1-3 realloc s, but any further realloc s would be unlikely and infrequent. So it depends on your usage patterns, basically.
