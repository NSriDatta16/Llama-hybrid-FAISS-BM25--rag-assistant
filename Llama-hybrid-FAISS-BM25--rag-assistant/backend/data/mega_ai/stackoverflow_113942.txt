[site]: stackoverflow
[post_id]: 113942
[parent_id]: 91957
[tags]: 
To me the actual copy & search & replace seems like the perfect job for an XSLT stylesheet. In an XSLT you have no problem at all to just copy everything (including the items you're having problems with) and simply insert your data where it is required. You can pass the specific value of your data in via an XSL parameter or you can dynamically modify the stylesheet itself (if you include as a string in your Groovy program). Calling this XSLT to transform your document(s) from within Groovy is very simple. I quickly cobbled the following Groovy script together (but I have no doubts it can be written even more simple/compact): import javax.xml.transform.TransformerFactory import javax.xml.transform.stream.StreamResult import javax.xml.transform.stream.StreamSource def xml = """ """.trim() def xslt = """ """.trim() def factory = TransformerFactory.newInstance() def transformer = factory.newTransformer(new StreamSource(new StringReader(xslt))) transformer.setParameter('mobil', '1234567890') transformer.setParameter('email', 'john.doe@foobar.com') transformer.transform(new StreamSource(new StringReader(xml)), new StreamResult(System.out)) Running this script produces: 1234567890 john.doe@foobar.com
