[site]: stackoverflow
[post_id]: 183306
[parent_id]: 183033
[tags]: 
Use a decent quality profiler and determine where your bottlenecks are. Then start asking how to improve performance. Anyone who makes any blanket statements like 'avoid reflection' without understanding both your performance profile and your problem domain should be shot (or at least reeducated). And given the size of the .Net landscape it's pretty much meaningless to talk about C# optimization: are we talking about WinForms, ASP.Net, BizTalk, Workflow, SQL-CLR? Without the context even general guidelines may be at best a waste of time. Consider also what you mean by 'speed it up' and 'improve performance'. Do you mean greater resource efficiency, or lower perceived wait time for an end user (assuming there is one)? These are very different problems to solve. Given the forum I feel obliged to point out that there some quite good coverage on these topics in Code Complete. Not C# specific mind. But that's a good thing. Bear in mind the language-specific micro-optimisations might well be subsumed into the next version of whatever compiler you're using, And if the difference between for and foreach is a big deal to you you're probably writing C++ anyway, right? [I liked RedGate's ANTS Profiler, but I think it could be bettered] With that out the way, some thoughts: Use type(SomeType) in preference to instance.GetType() when possible Use foreach in preference to for Avoid boxing Up to (I think) 3 strings it's ok to do StringA + StringB + StringC. After that you should use a StringBuilder
