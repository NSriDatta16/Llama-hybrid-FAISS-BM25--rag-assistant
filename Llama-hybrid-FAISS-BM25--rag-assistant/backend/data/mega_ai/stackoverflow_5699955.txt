[site]: stackoverflow
[post_id]: 5699955
[parent_id]: 5699828
[tags]: 
What's good: 1. List is a general case for many implementations. List trololo = new ListImpl(); Hides real implementation for the user: public List giveMeTheList(){ List trololo = new SomeCoolListImpl(); return trololo; } By design it's good: user shouldn't pay attention to the realization. He just gets interface access for the implementation. Implementation should already has all neccessary properties: be fast for appending, be fast for inserting or be unmodifiable, e.t.c. What's bad: I've read that all raw types will be restricted in future Java versions, so such code better write this way: List trololo = new ListImpl (); In general wildcard has the same meaning: you don't know fo sure will your collection be heterogenous or homogeneous?
