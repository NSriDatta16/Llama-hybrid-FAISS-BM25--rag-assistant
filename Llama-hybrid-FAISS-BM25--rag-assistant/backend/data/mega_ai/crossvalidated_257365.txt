[site]: crossvalidated
[post_id]: 257365
[parent_id]: 
[tags]: 
Correct standard error and p-values for Bradley-Terry model applied to ranking data ("rank-breaking")

One way to analyze ranking data is to use the Bradley-Terry data by converting ranks to pairwise comparisons (e.g. a>b>c becomes a>b, b>c, a>c) This is called "rank-breaking" in the machine learning literature. (But it was proposed already by Thurstone in 1931 in the context of the similar Thurstone model.) I would like to apply the Bradley-Terry model with rank-breaking, even though other models are available, because in general these models are either not implemented fully in R, have restrictive assumptions, or cannot deal with a large number of ranked items. The problem, as I understand it, is that the Bradley-Terry model assumes that each pairwise comparison is an independent observation. But this is not true in the case of rank-breaking. Rankings can only produce transitive data, while if the data were really consisting of independent observations, some portion should be intransitive. So the resulting standard errors and p-values are anti-conservative. For a better explanation of the issues, see this article by Albert Maydeu-Olivares: http://www.ub.edu/gdne/amaydeusp_archivos/amaydeu%20imps2001.pdf It is not difficult to get correct p-values using a permutational method. The original data can be permuted randomly as rankings (not allowing intransitivity to arise), then undergo rank-breaking and provide a valid distribution under the null model of the p-values. But my question is how to obtain correct standard errors and p-values, using an analytical method implemented in R. What follows is a reproducible example using the salad dataset from the prefmod package. library(prefmod) library(BradleyTerry2) # Define function that does rank-breaking; suggestions to speed this up are welcome! rankbreak x[i,cc[,2]] r0[cc] This gives the following result: Call: BTm(outcome = cbind(win1, win2), player1 = player1, player2 = player2, data = salad_bn) Deviance Residuals: 1 2 3 4 5 6 1.0818 0.2381 -1.1220 0.4101 0.5344 0.6499 Coefficients: Estimate Std. Error z value Pr(>|z|) ..B 1.5585 0.2973 5.242 1.59e-07 *** ..C 1.1966 0.2851 4.198 2.70e-05 *** ..D 0.5095 0.2742 1.858 0.0632 . --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 (Dispersion parameter for binomial family taken to be 1) Null deviance: 42.1804 on 6 degrees of freedom Residual deviance: 3.3621 on 3 degrees of freedom AIC: 31.549 Number of Fisher Scoring iterations: 4 The permutational approach to estimate the p-values (using 9999 permutations) gave these corrected p-values: ..B ..C ..D 0.00003 0.00057 0.13600 As expected, these p-values are higher than in the Bradley-Terry model, demonstrating that it produces anti-conservative p-values in this case. An additional problem is that the first p-value (..B) would need even more than 9999 permutations to be estimated with acceptable accuracy! (And accurate p-values are needed if we want to correct for multiple testing.) The permutational approach requires a lot of computational power, even with this small dataset. The permutations are easy to parallelize, but I think I would be wasting a lot of resources if an analytical solution were available. I wonder if existing solutions similar to those for clustered standard errors in regression analysis apply to this problem. Or if any of the solutions described by Maydeu-Olivares in the article referenced above would be available in R. To summarize, the solution I am looking for... produces correct p-values and SEs for the Bradley-Terry model with rank-breaking; uses an analytical / not computationally-intensive method; is implemented in R (or can be implemented); works with datasets with a large number of items being compared.
