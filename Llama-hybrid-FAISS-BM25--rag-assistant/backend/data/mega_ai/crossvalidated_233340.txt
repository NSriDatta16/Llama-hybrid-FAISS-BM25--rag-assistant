[site]: crossvalidated
[post_id]: 233340
[parent_id]: 
[tags]: 
What regression model to use for judgment data?

I am new to statistic modeling and I need help with choosing the right model for an analysis. We run an experiment on word order variation in German. We presented sentences to 27 participants who had to rate the acceptability of the sentences on a 7-point scale. The sentences all contained three arguments: subject (S), direct object (DO) and indirect object (IO) with all possible their 8 permutations. They also varied with respect to whether each argument was a full noun phrase (like “the dog”) or a pronoun (“he”), so that there was a total of 8 x 6 = 48 critical items. The data looks like this: Item WordOrder PhraseTyp Rating Participant 1 S-IO-DO Pro-NP-Pro 3 A 2 S-IO-DO NP-NP-Pro 2 A 3 S-IO-DO Pro-Pro-Pro 2 A 4 S-IO-DO NP-NP-NP 4 A … … … … … 15 S-DO-IO Pro-NP-NP 6 A 16 S-DO-IO NP-Pro-Pro 7 A … … … … … What I would like to test is if the word order of the argument (“WordOrder”) or the distribution of pronouns/nominal phrases (“PhraseType”) has an effect on the rating. I guess I can use some kind of regression modeling. I am not sure, what I should use. According to what I read, I seems as if I need some kind of mixed effects model, with random effects for participants (not sure about items). Is that correct? I am also not sure if I need linear regression or ordinal logistic regression? What is the best function to use with R? I tried the following: glmer(Rating ~ WordOrder + PhraseType + (1|Participant), data = RatingData) This gives me an warning message: In glmer(Rating ~ WordOrder + PhraseType + (1 | Participant), data = RatingData): calling glmer() with family=gaussian (identity link) as a shortcut to lmer() is deprecated; please call lmer() directly If I use this, I get the following summary of the the model: Linear mixed model fit by REML ['lmerMod'] Formula: Rating ~ WordOrder + PhraseType + (1 | Participant) Data: RatingData REML criterion at convergence: 4292.9 Scaled residuals: Min 1Q Median 3Q Max -3.4997 -0.6709 -0.0844 0.5890 3.5763 Random effects: Groups Name Variance Std.Dev. Participant (Intercept) 0.3809 0.6172 Residual 1.7083 1.3070 Number of obs: 1248, groups: Participant, 26 Fixed effects: Estimate Std. Error t value (Intercept) 1.89503 0.18013 10.521 WordOrderDO-S-IO 0.43269 0.12816 3.376 WordOrderIO-DO-S -0.06250 0.12816 -0.488 WordOrderIO-S-DO 0.67308 0.12816 5.252 WordOrderS-DO-IO 2.12019 0.12816 16.543 WordOrderS-IO-DO 2.46635 0.12816 19.244 PhraseTypeNP-NP-Pro -0.55128 0.14799 -3.725 PhraseTypeNP-Pro-NP 0.50000 0.14799 3.379 PhraseTypeNP-Pro-Pro -0.03846 0.14799 -0.260 PhraseTypePro-NP-NP 0.98077 0.14799 6.627 PhraseTypePro-NP-Pro -0.30769 0.14799 -2.079 PhraseTypePro-Pro-NP 0.42949 0.14799 2.902 PhraseTypePro-Pro-Pro -0.40385 0.14799 -2.729 Correlation matrix not shown by default, as p = 13 > 12. Use print(x, correlation=TRUE) or vcov(x) if you need it Judging just from the intercepts, this looks as I would have expected it; e.g. having the subject at the beginning has a positive effect. (If I interpret the results correctly). What I do not really understand is why I do not get those significance stars (“**” etc.). Is this the right approach, or should I use ordinal logistic regression? (I tried that as well but didn't get anything working). Sorry for the longish post.
