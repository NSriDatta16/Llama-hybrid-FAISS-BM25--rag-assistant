[site]: stackoverflow
[post_id]: 912944
[parent_id]: 912583
[tags]: 
I'm guessing you want to show some additional user interface on the first launch? If it's a separate window, I'd advise creating a subclass of NSWindowController . Add a new NIB file for the first-run user interface to your project and change the class of the File's Owner object to FirstLaunch . Control-drag a wire from the File's Owner delegate onto the window to connect it with the window outlet. You create IBOutlet s by adding an instance variable to the class. If your app will only run on Leopard or higher, it's better to declare your outlets like this: @interface FirstLaunch : NSWindowController { NSTextField *myTextField; } @property (nonatomic, retain) IBOutlet NSTextField *myTextField; @end In Interface Builder, you'll control-drag a wire from the File's Owner onto the control to associate it with that outlet. Make sure that you release your reference to each IBOutlet in your class's dealloc method (if you're not using garbage collection) or else your app will leak memory. Buttons send action messages when they're clicked, so you'll need to provide an action method for the button to call. You do that by declaring a method with a signature like this: - (IBAction)myButtonClicked:(id)sender; In Interface Builder, you'll control-drag a wire from the button onto your window controller and choose the myButtonClicked: method. To make all this work, you'll need to create an instance of the window controller and tell it to load the NIB file at runtime. So, in your AppDelegate class, when you've determined that this is the first launch, you'll do this: FirstLaunch *firstLaunchController = [[FirstLaunch alloc] initWithWindowNibName:@"nameOfNibFile"]; [firstLaunchController show:self]; You'll probably want to keep the reference to the window controller in an instance variable instead of a local variable like I've done here. And, depending on your application, it may make more sense to show this as a sheet. But once you've made it this far, you'll be able to figure out how to do that on your own.
