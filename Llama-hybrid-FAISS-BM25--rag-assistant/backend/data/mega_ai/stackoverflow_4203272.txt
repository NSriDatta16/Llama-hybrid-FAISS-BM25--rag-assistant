[site]: stackoverflow
[post_id]: 4203272
[parent_id]: 
[tags]: 
LINQ to SQL Ordering from external method

It seem to me that this was hard... var MostRated = (from p in db.Posts let AverageRating = CalculateAverageRatingFromPost(p) where p.PostStatus == Convert.ToInt32(PostStatusEnum.Published.Value) && p.IsDeleted == false orderby p.PublishedDate descending select new { PostUrl = Common.PostUrl(p.Section.Name, p.Permalink), Title = Common.TrimString(p.Title, 50), Excerpt = Common.TrimString(p.Excerpt, 80), AverageRate = CalculateAverageRating((from pr in db.Ratings where pr.ObjectType == Convert.ToInt32(ObjectTypeEnum.Post.Value) && pr.ObjectID == p.ID select pr).SingleOrDefault()), PublishedDate = new DateHelper().DateTimeInWords(p.PublishedDate.Value) }).OrderByDescending(o => o.AverageRate).Take(5).ToList(); and the other method is private Decimal CalculateAverageRating(Rating pr) { if (pr != null) { Decimal Average = ((1 * (Decimal)pr.Star1) + (2 * (Decimal)pr.Star2) + (3 * (Decimal)pr.Star3) + (4 * (Decimal)pr.Star4) + (5 * (Decimal)pr.Star5)) / ((Decimal)pr.Star1 + (Decimal)pr.Star2 + (Decimal)pr.Star3 + (Decimal)pr.Star4 + (Decimal)pr.Star5); return Average; } else { return 0; } } I get this run time error "no supported translation to SQL". What i want is to get lists of the posts, and do a small quick calculations of the rating and then sort those from highest to low and take 5 posts only. Thanks
