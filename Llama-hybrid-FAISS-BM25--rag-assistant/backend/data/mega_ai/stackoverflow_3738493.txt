[site]: stackoverflow
[post_id]: 3738493
[parent_id]: 3738362
[tags]: 
Again, there is no size limit above which deque is or not better than vector. Memory fragmentation implications are pretty much the same in either case, except when you have already done a huge load of allocations/deallocations and there is not enough contiguous space left for a big vector. But this case is very rare. Remember that memory space is per process (google for virtual memory ). And you can remedy it by allocating the memory for the vector (by the reserve method) before the cluttering takes place. The tradeoff is in term of what you want to do with it . If the structure is basically immutable and you only want to access it / overwrite it by index access, go for vector. Deque is when you need to do insertions either at the end, the beginning or in the middle, something vector cannot handle naturally (except for inserting at the end). Herb Sutter's articles are in general of great quality, but you'll notice that when you do "number crunching" in C++, most of the stuff you're taught in "general C++" books must be taken with an extra word of caution. The poor indexing performance you experience with deques is perhaps important for your application. In this case, don't use deque.
