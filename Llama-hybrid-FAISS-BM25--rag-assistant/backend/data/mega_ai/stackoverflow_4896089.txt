[site]: stackoverflow
[post_id]: 4896089
[parent_id]: 4895157
[tags]: 
Let's analyze your problem step-by-step. You need to: Retrieve all the words from a file Iterate over all the words Increment the counter N every time you find a word of length N Output the result You already did the step 1: def many(fname): infile = open(fname,'r') text = infile.read() infile.close() L = text.split() Then you (try to) sort the words, but it is not useful. You would sort them alphanumerically, so it is not useful for your task. Instead, let's define a Python dictionary to hold the count of words lengths = dict() @sukhbir correctly suggested in a comment to use the Counter class, and I encourage you to go and search for it, but I'll stick to traditional dictionaries in this example as i find it important to familiarize with the basics of the language before exploring the library. Let's go on with step 2: for word in L: length = len(word) For each word in the list, we assign to the variable length the length of the current word. Let's check if the counter already has a slot for our length: if length not in lengths: lengths[length] = 0 If no word of length length was encountered, we allocate that slot and we set that to zero. We can finally execute step 3: lengths[length] += 1 Finally, we incremented the counter of words with the current length of 1 unit. At the end of the function, you'll find that lengths will contain a map of word length -> number of words of that length . Let's verify that by printing its contents (step 4): for length, counter in lengths.items(): print "Words of length %d: %d" % (length, counter) If you copy and paste the code I wrote (respecting the indentation!!) you will get the answers you need. I strongly suggest you to go through the Python tutorial .
