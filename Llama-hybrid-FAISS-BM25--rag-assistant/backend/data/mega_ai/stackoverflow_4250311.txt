[site]: stackoverflow
[post_id]: 4250311
[parent_id]: 4250281
[tags]: 
Of course this "leaks", by exit ing before s 's stack frame is left you don't give s 's destructor a chance to execute. As for your question wrt std::string storage: Different implementations do different things. Some allocate some 12 bytes on the stack which is used if the string is 12 bytes or shorter. Longer strings go to the heap. Other implementations always go to the heap. Some are reference counted and with copy-on-write semantics, some not. Please turn to Scott Meyers' Effective STL , Item 15.
