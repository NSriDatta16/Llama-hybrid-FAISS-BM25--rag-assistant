[site]: stackoverflow
[post_id]: 1113480
[parent_id]: 1112665
[tags]: 
With everything as you describe, it is technically safe to eval repred strings, however, I'd avoid doing it anyway as it's asking for trouble: There could be some weird corner-case where your assumption that only repred strings are stored (eg. a bug / different pathway into the storage that doesn't repr instantly becmes a code injection exploit where it might otherwise be unexploitable) Even if everything is OK now, assumptions might change at some point, and unsanitised data may get stored in that field by someone unaware of the eval code. Your code may get reused (or worse, copy+pasted) into a situation you didn't consider. As Alex Martelli pointed out, in python2.6 and higher, there is ast.literal_eval which will safely handle both strings and other simple datatypes like tuples. This is probably the safest and most complete solution. Another possibility however is to use the string-escape codec. This is much faster than eval (about 10 times according to timeit), available in earlier versions than literal_eval, and should do what you want: >>> s = 'he\nllo\' wo"rld\0\x03\r\n\tabc' >>> repr(s)[1:-1].decode('string-escape') == s True (The [1:-1] is to strip the outer quotes repr adds.)
