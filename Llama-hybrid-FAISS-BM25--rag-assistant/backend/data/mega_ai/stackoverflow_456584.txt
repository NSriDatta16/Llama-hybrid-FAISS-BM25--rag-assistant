[site]: stackoverflow
[post_id]: 456584
[parent_id]: 456575
[tags]: 
@tunaranch is correct. It is also the same issue as in this Python question . The gist is that Java keeps an object around for the integers from -128 to 127 (Python does -5 to 256) and returns the same object every time you ask for one. If you ask for an Integer outside of this fixed range, it'll give you a new object every time. (Recall that == returns whether two objects are actually the same, while equals compares their contents.) Edit : Here's the relevant paragraph from Section 5.1.7 of the Java Language Specification : If the value p being boxed is true , false , a byte , a char in the range \u0000 to \u007f , or an int or short number between -128 and 127, then let r1 and r2 be the results of any two boxing conversions of p. It is always the case that r1 == r2 . Note that this also describes what happens with other types.
