[site]: stackoverflow
[post_id]: 2557810
[parent_id]: 2557578
[tags]: 
I've had a similar scenario for new products on a website. Usually, you'll want new product to appear first in the list. But sometimes you want to reorganize. Here is the solution that worked really well for me (applied to your scenario): id, img, sort_position, timestamp Display images where sort_position is null and order by date Display images where sort_position is not null and order by sort_position At first, images will just display in the order from newest to oldest. Without maintenance, this is ideal. Once you assign sort_position (hopefully done automatically by serializing the images and their positions with a scripting language), the position you want for all items will be set. The first rule no longer applies, but the sort order you set persists. But because the first rule is in place, you can now continue to add images without needing to maintain the sort positions. New images will show up top/first, and then your organized grouping will show below. Then if you want to sort, the script just re-serializes the positions. It maybe a little overkill for what you want, but it certainly helped me cut down maintenance on products in categories with over 100 items in it. If you have more specifics on your environment, I can provide more specifics on this type of solution.
