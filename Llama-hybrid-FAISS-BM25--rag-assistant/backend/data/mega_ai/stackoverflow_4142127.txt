[site]: stackoverflow
[post_id]: 4142127
[parent_id]: 2504722
[tags]: 
The parser isn't that complex... I looked at the Packet.Net code (which is the parse for SharpPcap) and all of the fields are stored in commonly used formats. The IP Addresses are stored in System.Net.IPAddress format so you can just call .ToString on them to get a text string that properly includes the dot marks. The port numbers are stored as ushort which can be printed the same as any other integer. The only part that needs to be interpreted in its binary form is the Data field because that changes based on what protocol is being used on the next layer up. SharpPcap/Packet.Net does most of the work for you already and fields are stored in the most convenient or identical forms to those found in the protocol specification. Just use intellisense to check the field's type and if it's not one you're familiar with (such as System.Net.IPAddress or System.NetworkInformation.PhysicalAddress (For MAC addresses)) just google it.
