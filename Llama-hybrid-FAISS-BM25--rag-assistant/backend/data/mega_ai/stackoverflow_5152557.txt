[site]: stackoverflow
[post_id]: 5152557
[parent_id]: 4634583
[tags]: 
I'd say: create a donation class with all that it needs create a member variable of membership (which should be of the type Donation). you can have a method in the membership class such: public function makeDonation($data) { $this->donation = new Donation($data) // maybe with the data parameter; $this->donation->commit() // whatever it does to set things up ...... whatever you need } This way you have nice decoupling between the items. Also the Donation should implement an iterface so that if behavior is later changed it should still contain the methods required by the memeber class. Thsi way it is more flexible than inheritance. I had asked a similar question some time ago and got a good answer: Elegant alternatives to the weird multiple inheritance
