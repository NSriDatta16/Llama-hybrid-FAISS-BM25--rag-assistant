[site]: stackoverflow
[post_id]: 5315743
[parent_id]: 3467334
[tags]: 
Here is working code... may help somebody public class ImageDemo extends Activity { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(new Panel(this)); } class Panel extends View { private Bitmap mBitmap; private Canvas mCanvas; private Path mPath; private Paint mPaint; Bitmap bitmap; Canvas pcanvas; int x = 0; int y =0; int r =0; public Panel(Context context) { super(context); Log.v("Panel", ">>>>>>"); setFocusable(true); setBackgroundColor(Color.GREEN); // setting paint mPaint = new Paint(); mPaint.setAlpha(0); mPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN)); mPaint.setAntiAlias(true); // getting image from resources Resources r = this.getContext().getResources(); Bitmap bm = BitmapFactory.decodeResource(getResources(), R.drawable.mickey); // converting image bitmap into mutable bitmap bitmap = bm.createBitmap(295, 260, Config.ARGB_8888); pcanvas = new Canvas(); pcanvas.setBitmap(bitmap); // drawXY will result on that Bitmap pcanvas.drawBitmap(bm, 0, 0, null); } @Override protected void onDraw(Canvas canvas) { // draw a circle that is erasing bitmap pcanvas.drawCircle(x, y, r, mPaint); canvas.drawBitmap(bitmap, 0, 0,null); super.onDraw(canvas); } @Override public boolean onTouchEvent(MotionEvent event) { // set parameter to draw circle on touch event x = (int) event.getX(); y = (int) event.getY(); r =20; // At last invalidate canvas invalidate(); return true; } } }
