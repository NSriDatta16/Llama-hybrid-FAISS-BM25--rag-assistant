[site]: stackoverflow
[post_id]: 4435940
[parent_id]: 4435870
[tags]: 
I don't believe either solution is universally more correct than the other. I think the more appropriate solution heavily depends on the context. With that being said, in my humble opinion, while the first solution as you mention requires more processing, it also offers a lot more flexibility. JSON is great for representing data hierarchy and structure. If you ever wanted to add in more data or structure, I believe the first solution (with the nested userInfo) would handle the transition more smoothly. For example let's say you wanted to support the info for multiple users, then the only switch you would need to make is to have userInfo contain a JSON array of multiple userInfo objects. To take this a step further, let's say you also wanted include a new set of data entirely - say locationInfo - you would benefit from the nested hierarchy to separate out these two different classes of data. Ultimately, I believe that the right solution is the one that is most appropriate to the context of your application but I would encourage you to be forward thinking in how you approach your design and try to anticipate how you might use this implementation in the future. Just food for thought. Good luck!
