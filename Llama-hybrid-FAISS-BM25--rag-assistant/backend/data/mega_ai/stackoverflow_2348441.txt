[site]: stackoverflow
[post_id]: 2348441
[parent_id]: 2348374
[tags]: 
It doesn't get any more elegant than this: Node* merge2(Node* n1, Node* n2) { n1->next = merge(n1->next, n2); return n1; } Node* merge(Node* n1, Node* n2) { return (n1 == null) ? n2 : (n2 == null) ? n1 : (n1->data data) ? merge2(n1, n2) : merge2(n2, n1); } Assuming that you understand recursion, this is as clear as it gets. I should point out that this is good for an interview answer only (where presumably demonstrating clarity of thought has more impact than simply showing that you know how to write programs). In practice, you wouldn't want to merge this way, since it uses O(n) stack depth, which likely would cause a stack overflow. Also, it's not a tail-recursion, so it's not compiler-optimizable.
