[site]: stackoverflow
[post_id]: 2188447
[parent_id]: 2188273
[tags]: 
Correct. You must transform your attribute into an NSData object. You would need to serialize an NSURL to NSData -- and the default NSKeyedUnarchiveFromDataTransformerName transformer will do this for you. Another approach, and the one that I use for URLs, is to maintain two parallel properties. One transient property of undefined type for the URL, and a second persistent property of string type for the backing store. I lazily construct the URL from the string the first time it's requested, and I update the string property whenever the URL is changed. There's no way to enforce it, but you really don't want to use the string property from outside your entity's class. I generally make the @property definition for the string attribute private to remind myself not to use it.
