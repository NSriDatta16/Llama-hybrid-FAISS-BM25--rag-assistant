[site]: stackoverflow
[post_id]: 4635314
[parent_id]: 4634807
[tags]: 
There's lots of related stuff on Bayesian monads in Haskell. Here's one reference: http://www.randomhacks.net/articles/2007/02/22/bayes-rule-and-drug-tests See also "Purely functional lazy non-deterministic programming" available from this page: http://www.cs.rutgers.edu/~ccshan/ Edit: I also fail to see why you can't just give correlateWith the following type signature, and run it inside the do block directly rather than try to "push" the random state in within a let binding. correlateWith :: Double -> Random Double -> Random Double -> Random (Double, Double)
