[site]: datascience
[post_id]: 17189
[parent_id]: 
[tags]: 
Neural network training with known erroneous data

I am trying to make a neural network to predict some values but I know my training data contains lots of "bad" expected outputs. That is I know some of the data would train it in the wrong direction. Would it make sense to train the network once, then remove data that the network produces a big error for (supposing that that's the "bad" data) and then retrain it with the rest? Is there some other better way to approach this? I'm sorry I'm only starting out dealing with NNs and I don't know much of the related jargon to make the question clearer.
