[site]: stackoverflow
[post_id]: 3470517
[parent_id]: 3470168
[tags]: 
This new method uses one box called info into which the correct content is loaded using the .load() function. alternative html: alternative script: $('#1G').live('click', function(){ if ($("#info").hasClass("1")) return false; $('#info').removeClass("1 2 3").slideUp('slow', function() { $(this).load('_packages/bronze.html') }).slideToggle('slow').addClass("1"); }); $('#2G').live('click', function(){ if ($("#info").hasClass("2")) return false; $('#info').removeClass("1 2 3").slideUp('slow', function() { $(this).load('_packages/silver.html') }).slideToggle('slow').addClass("2"); }); $('#3G').live('click', function(){ if ($("#info").hasClass("3")) return false; $('#info').removeClass("1 2 3").slideUp('slow', function() { $(this).load('_packages/gold.html') }).slideToggle('slow').addClass("3"); }); css for style.css : #info { display: none; overflow: hidden; height: 120px; } some other script that changes: $('#brz').load('_packages/bronze.html'); $('#slv').load('_packages/silver.html'); $('#gld').load('_packages/gold.html'); The above can all just go away. EDIT I added the code I mentioned in my comment to prevent the buttons from functioning if the click is on the currently selected item. It's probably not the most elegant solution but it works. I add the class 1 , 2 , or 3 depending on the item clicked, and remove all of them upon a click of a different one.
