[site]: datascience
[post_id]: 117973
[parent_id]: 
[tags]: 
scikit learn logistic regression to annotate single cell RNA seq data

I want to use scikit learn logistic regression to train a model on a labelled single cell RNA sample and subsequently apply this model on new unlabelled single cell RNA seq samples to annotate the cells in these samples. The sample I use to train the model has about 23000 genes but the unlabelled samples have a different number of genes. The trained model expects an input of 23000 genes so I want to ask what the best approach would be. I could alter the count table of each of the unlabelled samples and add the missing genes with value 0 for all cells and use this to fit the model on. But this would introduce false information. I could take the intersection of all genes for all samples and train the model on this set of common genes. But then the model depends a lot on the specific samples that are being analysed. So none of these options seem correct to me. I have successfully trained the model on the labelled data and I am now struggling to find the right strategy to proceed. I would very much appreciate any input! This is what I did: d23_counts_norm is the normalised counts table I used to train and test the model. d23_norm.obs["CellType"] refers to the cell type annotation in this sample. I want to train a model so it can distinguish the different cell types present in the annotated model using the gene expression data. The cells are split: 80% for training, 20% for testing. The model scores are good: 0,99 and 0,94 when training and testing the model. When I want to apply the model on a new sample (LX146_norm count table) the error tells me the model expects 23656 features (because the sample the model was trained on had this many features) but finds only 19389 features in the new sample.
