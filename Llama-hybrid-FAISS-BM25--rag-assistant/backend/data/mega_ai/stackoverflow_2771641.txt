[site]: stackoverflow
[post_id]: 2771641
[parent_id]: 2771078
[tags]: 
Perhaps this example may make things more help clarify. Recall that Python names are not storage (as variables are in other languages) but references to storage. You can find what a name refers to with id(name). The identity operator x is y tells whether two names point at the same object. >>> class A(object): ... name = 'A' ... >>> x = A() >>> A.name is x.name True >>> x.name = 'fred' # x.name was bound to a new object (A.name wasn't) >>> A.name is x.name False >>> x = A() # start over >>> A.name is x.name True # so far so good >>> A.name = 'fred' >>> A.name is x.name True # this is somewhat counter-intuitive
