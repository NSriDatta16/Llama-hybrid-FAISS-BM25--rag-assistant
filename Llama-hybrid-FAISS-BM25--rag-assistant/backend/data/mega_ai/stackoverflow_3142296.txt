[site]: stackoverflow
[post_id]: 3142296
[parent_id]: 3142046
[tags]: 
You're probably roughly correct. The site knows where your viewport is and only loads the part that is visible, in 16 char "chunks". The DB just saves 16 char strings with an x and y coord. You can see it updating in 1x16 blocks if you drag quickly. As for sending, if it were me I would cache the text and only send one 16 char "chunk" at a time. Each time an edit occurs check if its in the same chunk as the last one. If not send the last chunk and start caching the new one. To keep the view up to date you could have it check for changes in your view area by sending an ajax request every couple seconds with window.setInterval() . It could send back some JSON or something with just the chunks that have changes, maybe encoded with their location in the grid in the first few chars. I'm just hand waving here, I haven't looked at the code, but you're right. Its a fascinating site. EDIT: More detail... Check out the init() function (line 906 in yourworld.js). That's the best point of entry if you want to study the code. You can see how editing works at line 953. On keydown the script focuses a hidden input element which catches the text. Then he uses a callback on setInterval to get the first character from the input field every 10ms and then blank the field. If there's a char then it gets cached in an array and put in the active cell on the grid. He says in a comment this is to prevent pasting. The array of edits is sent every two seconds (line 1017). Each character of input is sent with a position and timestamp. fetchUpdates() handles getting newly updated cells from the server (line line 383). It contains a jQuery.ajax request with a callback on success to a function that makes the necessary changes and calls fetchUpdates() again after a 1 second setTimeout() .
