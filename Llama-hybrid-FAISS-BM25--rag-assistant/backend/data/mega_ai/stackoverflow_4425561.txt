[site]: stackoverflow
[post_id]: 4425561
[parent_id]: 
[tags]: 
Trying To Use Levenshtein Distance In T-SQL Query - Help Optimizing Please

I'm am trying to use a levenshtein algorithm I found on the 'net to calculate the closest value to a search term. In order to implement fuzzy term matching. My current query runs about 45 seconds long. I'm hoping I can optimize it. I've already added indexes for the fields that I'm calculated the levenshtein value for. The levenshtein function I found may not be the most optimized and I take no credit in it's implementation. Here is that function: CREATE FUNCTION [dbo].[LEVENSHTEIN]( @s NVARCHAR(MAX), @t NVARCHAR(MAX) ) /* Levenshtein Distance Algorithm: TSQL Implementation by Joseph Gama http://www.merriampark.com/ldtsql.htm Returns the Levenshtein Distance between strings s1 and s2. Original developer: Michael Gilleland http://www.merriampark.com/ld.htm Translated to TSQL by Joseph Gama Fixed by Herbert Oppolzer / devio as described in http://devio.wordpress.com/2010/09/07/calculating-levenshtein-distance-in-tsql */ RETURNS INT AS BEGIN DECLARE @d NVARCHAR(MAX), @LD INT, @m INT, @n INT, @i INT, @j INT, @s_i NCHAR(1), @t_j NCHAR(1),@cost INT --Step 1 SET @n = LEN(@s) SET @m = LEN(@t) SET @d = REPLICATE(NCHAR(0),(@n+1)*(@m+1)) IF @n = 0 BEGIN SET @LD = @m GOTO done END IF @m = 0 BEGIN SET @LD = @n GOTO done END --Step 2 SET @i = 0 WHILE @i And here is the query I'm using: SELECT [Address], [dbo].[LEVENSHTEIN](@searchTerm, [Address]) As LevenshteinDistance FROM Streets Order By LevenshteinDistance I'm not a DBA so please forgive my ignorance in any best practices - that's why I'm here to learn :). I really don't want to offload this processing in the business layer and am hoping to keep it in the data layer but with only 16k records taking 45 seconds to process it's currently not usable. This is only with a small subset of the records which will comprise the entire data store once I'm done processing the input files. Thanks in advance.
