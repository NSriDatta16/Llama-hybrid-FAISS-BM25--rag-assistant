[site]: stackoverflow
[post_id]: 405785
[parent_id]: 405770
[tags]: 
Speaking from a C/C++ point of view: Your first example will be optimized by most compilers. If the java-compiler from Sun really executes this loop it's the compilers fault, but take my word that any post 1990 C, C++ or Fortran-compiler completely eliminates such a loop. Your second example can't be optimized in most languages because memory allocation happens as a side-effect of concatenating the strings together. If a compiler would optimize the code the pattern of memory allocation would change, and this could lead to effects that the programmer tries to avoid. Memory fragmentation and related problems are issues that embedded programmers still face every day. Overall I'm satisfied with the optimizations compilers can do these days.
