[site]: datascience
[post_id]: 66117
[parent_id]: 
[tags]: 
Masking seems not working for missing values problem in LSTM

I am trying to use LSTM to predict time series in keras. My input data shape is (1000,6,1)(samples,timesteps,features). There is some missing data in different timesteps. For example,[2,1,1]=NaN,[3,4,1]=NaN. First, I normalize all these data between (0,1) Then I try to use fillNan to replace these Nan by special values(-1 for example). Finally, I use Masking to escape the special values. My code is like that: model = Sequential() model.add(Masking(mask_value=1.5,input_shape=(train_X.shape[1], train_X.shape[2]))) model.add(LSTM(32)) model.add(Dense(3)) model.compile(loss='mae', optimizer='adam') model.fit(train_X, train_y, epochs=50, batch_size=72,validation_data=(test_X, test_y), verbose=2, shuffle=False) When I choose different special values, the outcomes changed and I don't know where is the problem. train_X.shape=(700,6,1),train_y.shape=(300,3). Is it because there is also NaN in the trian_y which is not Masked?
