[site]: stackoverflow
[post_id]: 4359775
[parent_id]: 
[tags]: 
Windows: how to get cameras supported resolutions?

So to get cameras list and let user select one (C++, Boost, dshow, windows) I use such code: #include "StdAfx.h" #include "list.h" #include #include #include HRESULT CamerasList::EnumerateDevices( REFGUID category, IEnumMoniker **ppEnum ) { // Create the System Device Enumerator. ICreateDevEnum *pDevEnum; HRESULT hr = CoCreateInstance(CLSID_SystemDeviceEnum, NULL, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&pDevEnum)); if (SUCCEEDED(hr)) { // Create an enumerator for the category. hr = pDevEnum->CreateClassEnumerator(category, ppEnum, 0); if (hr == S_FALSE) { hr = VFW_E_NOT_FOUND; // The category is empty. Treat as an error. } pDevEnum->Release(); } return hr; } int CamerasList::SelectFromList() { int i = 0; int SelectedIndex; IEnumMoniker *pEnum; printf("\nLet us select video device\n"); printf("Available Capture Devices are:\n"); HRESULT hr; hr = EnumerateDevices(CLSID_VideoInputDeviceCategory, &pEnum); if (SUCCEEDED(hr)) { IMoniker *pMoniker = NULL; while (pEnum->Next(1, &pMoniker, NULL) == S_OK) { IPropertyBag *pPropBag; HRESULT hr = pMoniker->BindToStorage(0, 0, IID_PPV_ARGS(&pPropBag)); if (FAILED(hr)) { pMoniker->Release(); continue; } VARIANT var; VariantInit(&var); // Get description or friendly name. hr = pPropBag->Read(L"Description", &var, 0); if (FAILED(hr)) { hr = pPropBag->Read(L"FriendlyName", &var, 0); } if (SUCCEEDED(hr)) { std::cout Write(L"FriendlyName", &var); pPropBag->Release(); pMoniker->Release(); } SelectedIndex = 999; if (i i-1 || SelectedIndex (s); } catch(std::exception& e){ std::cout Release(); }else { printf("no Video Devices found. \n") ; //cout I need to somehow get list of camera supported resolutions for selected camera. How to do such thing?
