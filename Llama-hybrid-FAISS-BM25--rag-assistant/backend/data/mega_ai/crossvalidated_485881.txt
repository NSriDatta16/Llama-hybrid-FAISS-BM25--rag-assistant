[site]: crossvalidated
[post_id]: 485881
[parent_id]: 485772
[tags]: 
The “typical” Bayesian way to do this (at least, it seems typical to someone with my background – I’m sure others would greatly disagree) would go like this: There is some unknown function $f(\mathbf{x})$ , where $\mathbf{x}$ is a four-element vector. You have (possibly noisy) observations of $f(\mathbf{x}_i) = y_i$ for $i = 1, \dots, N$ . You want to find an $\mathbf x$ such that $f(\mathbf x) \approx 1.8$ . We’re going to need to assume that $f$ is, in some sense, “smooth.” If we don’t assume anything, then we can’t do anything at all. But what kind of assumption we make is going to determine how our process goes. The most common general-purpose assumption is that $f$ follows a Gaussian process , with some general-purpose covariance function like a squared exponential (Gaussian) or Matérn. You can choose a family of covariances, perhaps based on prior knowledge about what $f$ “should” look like, and then select parameters (of the covariance, maybe a mean function, and the amount of observation noise) to maximize the marginal likelihood of your observed dataset. Once you’ve selected a prior for $f$ , you can find a posterior distribution for the $f$ after observing your dataset; there’s a simple formula to follow there. Then, you can find the $\mathbf x$ that, say, minimizes $\mathbb E (f(\mathbf x) - 1.8)^2$ . This will probably take some numerical optimization, e.g. gradient descent. There’s good software out there to help with this process; for instance, if I were doing this I’d expect the whole thing should be less than 30 lines of code in GPflow or GPyTorch , but if you’re not familiar with TensorFlow or PyTorch respectively then software packages in your preferred language of choice might be easier to use. All of this assumes, of course, that (a) you have reasonably noisy data and/or (b) you don’t have any training points with outputs near 1.8. If the API is deterministic and you happened to get a dataset point with $y = 1.813$ , well, use that $\mathbf x$ and call it a day.
