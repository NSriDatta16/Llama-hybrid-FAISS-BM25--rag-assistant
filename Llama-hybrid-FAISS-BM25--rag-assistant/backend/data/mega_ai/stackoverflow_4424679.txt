[site]: stackoverflow
[post_id]: 4424679
[parent_id]: 4423631
[tags]: 
It appears there's no publicly available way to reliably remove the wishlist link block from the layout. (you can skip to the end for a workaround) The addLinkBlock assumes the presence of the block that's been passed, so using remove in the way you describe results in a fatal error being thrown Fatal error: Call to a member function getPosition() on a non-object in /Users/alanstorm/Sites/magento1point4.2.dev/app/code/core/Mage/Page/Block/Template/Links.php on line 112 Here's the core code that causes that error app/code/core/Mage/Page/Block/Template/Links.php public function addLinkBlock($blockName) { $block = $this->getLayout()->getBlock($blockName); $this->_links[$this->_getNewPosition((int)$block->getPosition())] = $block; return $this; } This method assumes its going to be able to pull out a block by whatever name gets passed, so we can't just remove the wishlist_link block as we could in previous versions. The only mechanism for removing a link appears to be the following method on the same block class app/code/core/Mage/Page/Block/Template/Links.php public function removeLinkByUrl($url) { foreach ($this->_links as $k => $v) { if ($v->getUrl() == $url) { unset($this->_links[$k]); } } return $this; } However, this is done using string comparison, and there's no reliable way (that I know of) to generate a URL Object from a layout file, cast it as a string, and pass it into the method (this would be required, as there are numerous configuration settings that can change what the final string URL will be). That makes this method not helpful for our needs. So, what we can do it modify the existing wishlist_link block to use a blank or non-existant template. This way the block still renders, but it renders as an empty string. The end result is we avoid the fatal error mentioned above, but still manage to remove the link from our selected pages. The following would remove the link from all the pages using the default handle. blank-link.phtml
