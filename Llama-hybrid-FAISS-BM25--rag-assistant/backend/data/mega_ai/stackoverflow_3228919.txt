[site]: stackoverflow
[post_id]: 3228919
[parent_id]: 3228523
[tags]: 
I would either Expose an event in ViewModel A that ViewModel B can subscribe to. I would then raise that event anytime the selection changes. Leverage INotifyPropertyChanged for notification to ViewModel B I prefer option 1 because it makes it more obvious what you're trying to do. Plus it's more efficient (you don't have code smell of filtering on which property changed and then doing some action.) IMHO I think relay commands should only be used as an interface between a view and a viewmodel to aid in a separation of concerns. But when you're programming from a class to a class, just use standard OOP conventions. so pseudo code would probably look like this: public class ViewModelA { public event EventHandler SelectedObjectChanged; public IList ObjectList {get;set;} public MyObject _SelectedObject; public MyObject SelectedObject { get { return _SelectedObject;} set { _SelectedObject = value; if (SelectedObjectChanged != null) SelectedObjectChanged(value); } } }
