[site]: stackoverflow
[post_id]: 5335886
[parent_id]: 5335381
[tags]: 
Here are two strategies you might think about. You will have to adjust the columns used to select duplicates based upon what you actually consider a duplicate. I just included all of your listed columns other than the id column. The first simply creates a new table without duplicates. Sometimes this is actually faster and easier than trying to delete all the offending rows. Just create a new table, insert the unique rows (I used min(id) for the id of the resulting row), rename the two tables, and (once you are satisfied that everything worked correctly) drop the original table. Of course, if you have any foreign key constraints you'll have to deal with those as well. create table table_copy like table_name; insert into table_copy (id, market, agent, report_name, producer_code, report_date, entered_date, sync) select min(id), market, agent, report_name, producer_code, report_date, entered_date, sync from table_name group by market, agent, report_name, producer_code, report_date, entered_date, sync; RENAME TABLE table_name TO table_old, table_copy TO table_name; drop table table_old; The second strategy, which just deletes the duplicates, uses a temporary table to hold the information about what rows have duplicates since MySQL won't allow you to select from the same table you are deleting from in a subquery. Simply create a temporary table with the columns that identify the duplicates plus an id column that will actually hold the id to keep and then you can do a multi-table delete where you join the two tables to select just the duplicates. create temporary table dups select min(id), market, agent, report_name, producer_code, report_date, entered_date, sync from table_name group by market, agent, report_name, producer_code, report_date, entered_date, sync having count(*) > 1; delete t from table_name t, dups d where t.id != d.id and t.market = d.market and t.agent = d.agent and t.report_name = d.report_name and t.producer_code = d.producer_code and t.report_date = d.report_date and t.entered_date = d.entered_date and t.sync = d.sync;
