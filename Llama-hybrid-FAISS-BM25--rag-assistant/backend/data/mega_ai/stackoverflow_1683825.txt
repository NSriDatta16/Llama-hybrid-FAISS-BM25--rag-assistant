[site]: stackoverflow
[post_id]: 1683825
[parent_id]: 
[tags]: 
key-value store for time series data?

I've been using SQL Server to store historical time series data for a couple hundred thousand objects, observed about 100 times per day. I'm finding that queries (give me all values for object XYZ between time t1 and time t2) are too slow (for my needs, slow is more then a second). I'm indexing by timestamp and object ID. I've entertained the thought of using somethings a key-value store like MongoDB instead, but I'm not sure if this is an "appropriate" use of this sort of thing, and I couldn't find any mentions of using such a database for time series data. ideally, I'd be able to do the following queries: retrieve all the data for object XYZ between time t1 and time t2 do the above, but return one date point per day (first, last, closed to time t...) retrieve all data for all objects for a particular timestamp the data should be ordered, and ideally it should be fast to write new data as well as update existing data. it seems like my desire to query by object ID as well as by timestamp might necessitate having two copies of the database indexed in different ways to get optimal performance...anyone have any experience building a system like this, with a key-value store, or HDF5, or something else? or is this totally doable in SQL Server and I'm just not doing it right?
