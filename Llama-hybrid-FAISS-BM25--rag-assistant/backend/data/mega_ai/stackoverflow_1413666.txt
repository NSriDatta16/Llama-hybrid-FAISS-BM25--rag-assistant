[site]: stackoverflow
[post_id]: 1413666
[parent_id]: 1413604
[tags]: 
rebugging is always needless - just don't delete the bugs in the first place... For a real answer, you can't do better than 'it depends'. If: you don't tend to have the kind of problems that automated unit testing can find (as opposed to performance, visual or aesthetic ones) you have some other way of designing the code (e.g. UML) you don't tend to have cause to change things while keeping them working It could well be the case that TDD doesn't really work out for you. Or maybe you are doing it wrong, and if you did it differently it would work better. Or, just maybe, it is actually working but you don't realise it. One thing about working solo is that self-assessment is difficult . In general, people's self-views hold only a tenuous to modest relationship with their actual behavior and performance. The correlation between self-ratings of skill and actual performance in many domains is moderate to meagerâ€”indeed, at times, other people's predictions of a person's outcomes prove more accurate than that person's self-predictions. In addition, people overrate themselves. On average, people say that they are "above average" in skill (a conclusion that defies statistical possibility), overestimate the likelihood that they will engage in desirable behaviors and achieve favorable outcomes, furnish overly optimistic estimates of when they will complete future projects, and reach judgments with too much confidence. Several psychological processes conspire to produce flawed self-assessments.
