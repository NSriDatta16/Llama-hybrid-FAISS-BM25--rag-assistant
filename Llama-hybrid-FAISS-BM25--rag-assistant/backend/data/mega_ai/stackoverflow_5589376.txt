[site]: stackoverflow
[post_id]: 5589376
[parent_id]: 
[tags]: 
Why *not* change the priority of a ThreadPool (or Task) thread?

There are many places across the web and Stack Overflow where one is discouraged from changing the priority of a ThreadPool thread or TPL Task . In particular: "You have no control over the state and priority of a thread pool thread." "The runtime manages the thread pool. You have no control over the scheduling of the thread, nor can you change the thread's priority." "You should not change the Culture or Priority or... of a PoolThread. Just like you don't paint or re-decorate a rental car." "There are several scenarios in which it is appropriate to create and manage your own threads instead of using thread pool threads: (such as...) You require a thread to have a particular priority." "Each thread in ThreadPool runs at the default priority and the code to change the ThreadPriority has no effect." However, it is a simple matter to do so, and the debugger shows that the change does seem to stick (insofar as the value can be read back). Thread.CurrentThread.Priority = ThreadPriority.AboveNormal; So the question is, what is the specific reason for this particular taboo? My suspicion: doing so disturbs the delicate load balancing-assumptions of the pool. But this doesn't explain why some sources say that you can't change it.
