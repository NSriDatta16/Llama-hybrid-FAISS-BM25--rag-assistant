[site]: crossvalidated
[post_id]: 312737
[parent_id]: 
[tags]: 
Mean Absolute Error (MAE) derivative

$$MAE=|y_\textrm{pred} - y_\textrm{true}|$$ $$\dfrac{\mathrm dMAE}{\mathrm dy_\textrm{pred}} = ?$$ I'm trying to understand how MAE works as a loss function in neural networks using backpropogation. I know it can be used directly in some APIs - e.g. Keras - however I see tensorflow doesn't allow it (although you can manually declare it tf.abs(tf.minus(y_pred,y_true)) ). My question is: How is the derivative of MAE generally calculated (I only found this which uses an apparently complex approximation) and specifically how is it computed in tensorflow (when manually declaring) and keras?
