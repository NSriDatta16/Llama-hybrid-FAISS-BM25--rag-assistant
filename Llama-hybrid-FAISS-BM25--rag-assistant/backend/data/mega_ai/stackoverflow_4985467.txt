[site]: stackoverflow
[post_id]: 4985467
[parent_id]: 4985356
[tags]: 
I don't really do much with server-side frameworks because our ASP.NET backend already handles the 90% and all the custom server-side controls everyone else has written deals with that last 5%. In term's of client side there is little you can do apart from writing generic re-useable controls. The main reason I use jQuery is because it abstracts cross-browser compliance away. I use it just like I would with JavaScript except it works effortlessly in IE. Build re-useable controls on top of jQuery. Make custom plugin's. Make all the custom code you've written far more generic so you can re-use it from project to project. I recommend you take a look at backbone.js . It's a client-side MVC framework that really allows you to customize your web applications. Building on top of such a MVC framework makes the code very easy to extend and very manageable. The nice thing about this is that you have a lot of control and you can set up your own generic framework on top of that allows for re-use, re-use & re-use. One of the important things to remember is to delegate cross-browser compliance to an underlying library like jQuery and then build abstractions on top of it. In my personal experience the generic bad code lying around everywhere is dragging us down a lot more then the limitations of jQuery. Maybe if everyone wrote great code we would notice limitations of jQuery. I can't really see any limitations of the ASP.NET framework yet.
