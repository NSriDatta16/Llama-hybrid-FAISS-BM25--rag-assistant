[site]: stackoverflow
[post_id]: 2467670
[parent_id]: 2467376
[tags]: 
...there are tens of events... Personally, then I'd just add the non-serialized markers, which for field-like events is most easily done via: [field: NonSerialized] public event SomeEventType SomeEventName; (you don't need to add a manual backing delegate) What are your serialization requirements exactly? BinaryFormatter is in many ways the least friendly of the serializers; the implications on events are a bit ugly, and it is very brittle if stored (IMO it is only really suitable for transport, not for storage). However; there are plenty of good alternatives that would support most common "deep clone" scenarios: XmlSerializer (but limited to public members) DataContractSerializer / NetDataContractSerializer protobuf-net (which includes Serializer.DeepClone for this purpose) (note that in most of those serialization support would require extra attributes, so not much different to adding the [NonSerialized] attributes in the first place!)
