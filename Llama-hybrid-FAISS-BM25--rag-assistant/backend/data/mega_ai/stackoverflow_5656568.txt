[site]: stackoverflow
[post_id]: 5656568
[parent_id]: 5641366
[tags]: 
you can't really take one method and pick it over the other w/o covering some of your business requirements first. the questions you need to ask yourself are: is SEO important if yes: important NOT to have the content in the body as it's not relevant or unique, may affect your keyword density and give the wrong impression about the real content of the page to google, then AJAX important TO have in the body for google to see, then render in a hidden element I have a feeling your app won't require much of that but it's a valid point. DOM and "is performance important" if yes (you already use canvas... 100+ draggables...) how many (is too many?) nodes are you going to have that have tooltips (extra dom nodes)? too many? go with ajax / event delegation few tooltips per page: can still pre-render it to save the extra request(s) footprint of adding all the tip events, delegate ! delay while waiting for XHR onComplete undesirable? pre-render! Network / requests if you go the ajax route, you need to figure a way to minimize the number of requests possible, especially if the same tooltips can be triggered again and again. this means: caching request results locally on page and checking against cache first before requesting it from the server if your data is not dynamic / real time, consider even pushing to localStorage under some key / db id, this will survive page reload, transition and return visitors. as for the how-to, I know you are perfectly capable of doing the actual code so good luck :) from my experience, I do a mix of both. stock information that changes often but not that often is cached per page load. usage/sizing info, form helpers etc that don't change i cache in localStorage instead. tooltips that have an obvious SEO value are in the body.
