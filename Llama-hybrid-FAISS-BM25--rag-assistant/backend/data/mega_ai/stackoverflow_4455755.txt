[site]: stackoverflow
[post_id]: 4455755
[parent_id]: 4455559
[tags]: 
I would only consider moving the logic to the database as a last resort. A good guide is to keep set based processing in the database, and iterated processing in the application. You've got a number of foreach statements and unless they can be flattened into set operations you are really going to suffer in the database world. If this is the application of a business rule then it should be in the application layer, unless there are reasons to put it in the database. It will take a lot of time to port your 1500 lines to code to TSQL. You can use the .NET CLR if it's a recent version of MSSQL, but in my experience that's significantly slower than .NET on a Windows Server It should be relatively simple to pull all your required data up front to avoid the N+1 selects; get everything you'll need and join it all into an appropriate object graph. Finally, it seems like the first 4 steps are replicated for all requests. It might make sense to select all the data and process those first four steps and then keep the graph in memory, avoiding the significantly upfront hit of retrieving and preprocessing everything for each request. This may not be possible but would remove the data retrieval problem altogether.
