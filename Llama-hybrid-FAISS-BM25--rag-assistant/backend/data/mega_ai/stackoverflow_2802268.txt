[site]: stackoverflow
[post_id]: 2802268
[parent_id]: 2802248
[tags]: 
You don't ever want to use floating point formats (such as double and float in Java) for currency operations, because they have limited precision and have been designed to hold values that are somehow derived from measuring (in which case they aren't absolutely precise to begin with, in which case the limited precision is less of a problem). What Every Computer Scientist Should Know About Floating-Point Arithmetic is the article on the topic. It's a bit heavy on math, but it really helps to understand that (Alternatively, the article linked to by Michael Borgwardt is much easier to understand and still demonstrates/explains the problem). To avoid this kind of problems, make sure that you use BigDecimal exclusively in your code and that all external storage/transfer points use fixed-point/arbitrary-precision values as well (i.e. your database shouldn't store floating point numbers either).
