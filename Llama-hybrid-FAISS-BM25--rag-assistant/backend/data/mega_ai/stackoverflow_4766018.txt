[site]: stackoverflow
[post_id]: 4766018
[parent_id]: 4765469
[tags]: 
I've populated a JTable through a DefaultTableModel with the (Object[][] data, String[] headers) The DefaultTableModel is a dynamic model, which means rows and columns can be added dynamically. Arrays are not dynamic so when you create a DefaultTableModel using arrays, the data from the arrays is copied to a Vector of Vectors. I want to be able to load the new data back into an array (Object[][]). I'd rather not just update the array bit by bit Unfortunately you will have to update the array cell by cell since the data is not stored in a 2D array. Or, since the DefaultTableModel does use a Vector of Vectors to store the data you can use the getDataVector() method to access the data. Then you get each row from the Vector and invoke the List.toArray() method on the row Vector before adding it to your array. Either way you will need to loop through the Vectors in the model. If you want to use the 2D array as storage for the TableModel, then you will need to create a custom TableModel that uses the supplied array for the data storage. After implemting all the required methods of the TableModel interface you will need to provide a getTableDataArray() method to return the reference to the array.
