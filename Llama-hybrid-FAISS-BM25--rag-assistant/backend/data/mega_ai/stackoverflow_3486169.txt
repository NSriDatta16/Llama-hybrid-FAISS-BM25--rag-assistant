[site]: stackoverflow
[post_id]: 3486169
[parent_id]: 3486141
[tags]: 
At least as a starting point (and probably permanently, unless the prof made me change it) I'd use an std::vector to manage the storage, and just write a front-end that manages the offsets to the indices as needed. Edit: if I was forced to change that, I'd still study std::vector 's interface, and imitate it as much as possible, so nearly the only change would be the (possibly) non-zero lower bound on the index. I'd also study how it manages memory, and imitate that as well. Finally, I'd segment things about the same way -- i.e., have one class that just manages a vector with a fixed lower bound of zero, and a second class that just deals with the offset to indices necessary for a non-zero lower bound.
