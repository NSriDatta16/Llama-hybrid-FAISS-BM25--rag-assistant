[site]: stackoverflow
[post_id]: 4866661
[parent_id]: 
[tags]: 
Gracefully closing a windowless app in WinAPI

I'm writing a little utility app to control the system master volume via hotkeys for my GF, whose laptop is for some reason deprived of such function keys. I whipped up the code pretty much instantly and I've got the main functionality working perfectly; however, since I'm not creating any windows (just a message loop handling the WM_HOTKEY message), I can't terminate the app in a more elegant manner than just gracelessly terminating the process (also, when the system is shutting down, it shows the "should I wait for the process to end or kill it now" window with some rubbish in the place where the window title usually is). Is there any way of doing this which doesn't involve creating a fake window just for the sake of intercepting WM_CLOSE messages? Here's the code (I left out the mixer control functions intentionally, they're irrelevant to the question): int WINAPI WinMain(HINSTANCE hThisInstance, HINSTANCE hPrevInstance, LPSTR lpszArgument, int nCmdShow) { MSG msg; int step; MixerInfo_t mi; HANDLE mutex; mutex = CreateMutex(NULL, TRUE, "volhotkey"); if (mutex == NULL) return 1; if (GetLastError() == ERROR_ALREADY_EXISTS) return 0; RegisterHotKey(NULL, 1, MOD_ALT | MOD_CONTROL, VK_F5); RegisterHotKey(NULL, 2, MOD_ALT | MOD_CONTROL, VK_F6); RegisterHotKey(NULL, 3, MOD_ALT | MOD_CONTROL, VK_F7); mi = GetMixerControls(); step = (mi.maxVolume - mi.minVolume) / 20; while (GetMessage(&msg, NULL, 0, 0)) { switch (msg.message) { case WM_HOTKEY: switch (msg.wParam) { case 1: AdjustVolume(&mi, -step); break; case 2: AdjustVolume(&mi, step); break; case 3: SetMute(&mi, !IsMuted(&mi)); break; } MessageBeep(MB_ICONASTERISK); break; case WM_DESTROY: PostQuitMessage(0); break; default: break; } } UnregisterHotKey(NULL, 1); UnregisterHotKey(NULL, 2); return msg.wParam; } Thanks in advance! Oh, and for the record, WM_DESTROY is also never posted.
