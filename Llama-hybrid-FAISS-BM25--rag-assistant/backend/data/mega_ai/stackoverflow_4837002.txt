[site]: stackoverflow
[post_id]: 4837002
[parent_id]: 
[tags]: 
I don't like MDD but like UML - why should I use MDD if I think it is useless ?

I am a java software developer/architect and I like UML. Saying that I also hate the java generated code. I don't see any value trying to generate the skeleton of my application: creating empty classes is really easy and I don't need a tool to do that also I cannot reuse the generated code because the way it is generated makes it impossible to reuse The dilemma for me is that my requirements changed so quickly that I need to be able to implement the new demand immediately into an existing code. My problem is that if I generate my code from my model and then manually develop inside the generated codebase, I cannot generate code again using a model because my modification would be erased. Except I copy/paste the changes back and forth. That is an enormous effort for too few results. Therefore I do not use MDD but still use a lot UML. Could UML be successful in a project without MDD code generation ? I am asking this question because I have a new boss who wants to introduce full MDD process with IBM RSA and today I prefer to have live code and model synchronization or merge with Omondo. Why change a running and proven system? Why systematically generate code from a model while I can do it directly in the code and just merge it later with the model? Why get crap database code generation which cannot even be deployed while I can add stereotype in order to get java annotation and use them with hibernate to generate my database? One of the reason for boss's change is to get a better project documentation in HTML format. I highly doubt this and think he is looking for more control on delivery and does not know what else to invent! Other argumentative reasons: Use a product from a large and stable company. Have a full model available which could be deployed in any other language. (This is why for me MDD is stupid because it is impossible to deploy on any platform any server, any database just from a model. So why to waste my time?) Please give me some arguments in order to come back at next meeting and crash this stupid new MDD fan who wants to reorganize the way we work today!
