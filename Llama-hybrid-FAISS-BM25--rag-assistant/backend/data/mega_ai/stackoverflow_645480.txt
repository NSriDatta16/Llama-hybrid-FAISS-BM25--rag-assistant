[site]: stackoverflow
[post_id]: 645480
[parent_id]: 645471
[tags]: 
First: Most "big servers" are just PCs with extra processors and more memory, often configured in a cluster or farm. If you can set up your $500 PC at home to be a dedicated server, the same principles will apply. Of all the applications in the world, few run on true "big machines" that are modern-day mainframes with specialized operations. The only difference between your single-processor desktop at home is how quickly it can complete its dedicated task, and how many instances of that task can it run in parallel. The picture you provided is a typical large datacenter, but each individual machine you see there is a single server probably running Linux, Unix, Windows, or possibly Solaris or something. But at the core, just a very powerful PC. Second: For your first job, you won't be the one to do this. There's someone else who will set up the servers, and they will give you access to deploy your code. Your second job will likely be the same. Along the way, you'll start learning how do deal with this by necessity - in little bits at first, until you're the expert. If you're in a huge organization, there's someone dedicated to managing things like routers and load balancers that you don't need to worry about unless you want to learn. If you're not in an organization large enough to justify that, then you probably also are not running systems at such a large scale that you need to know how to admin a $20k Cisco switch. You can download an article on how to do Windows load balancing or buy a $500 balancer and read the manual in 30 minutes. You'll start small and if dealing with that is what you enjoy, the next time you'll work up to a $2000 device. By the time you get to high-end enterprise hardware, it won't seem so intimidating because it's not so different from the last thing you worked on. The web product I work on runs on a large farm of servers, each with many processors and many gigabytes of memory, and terabytes of disk space. But you know what? They run Windows 2008 Server, which you can download a half-year demo for free and install it on any machine. Every person on our development team has a private development server, also running Windows Server 2008. When we deploy to production, it's essentially just putting our program on a much bigger, much faster version of the same thing.
