[site]: stackoverflow
[post_id]: 1124809
[parent_id]: 
[tags]: 
embedding absolute path for shared libraries

Using a vendor provided cross-compiling toolchain (apparently an OpenEmbedded derivative), I'm unable to embed the absolute path to third-party (open source, compiled in house)libraries. With the following gcc command line: arm-linux-gcc test_connect_send.o gprs_connect.o \ /package/host/myvendor.com/API-R-2.0.0/Release/Libraries/libgprs_stuff.so \ /package/host/myvendor.com/API-R-2.0.0/Release/Libraries/libpower_supply_stuff.so \ /package/host/myvendor.com/API-R-2.0.0/Release/Libraries/libgsm_stuff.so \ /package/host/myvendor.com/API-R-2.0.0/Release/Libraries/libtcp_stuff.so \ /package/host/aspl.es/vortex-1.1.0/lib/libvortex-1.1.so \ /package/host/aspl.es/axl-0.5.6/lib/libaxl.so.0 -o test_connect_send objdump says: Dynamic Section: NEEDED /package/host/myvendor.com/API-R-2.0.0/Release/Libraries/libgprs_stuff.so NEEDED /package/host/myvendor.com/API-R-2.0.0/Release/Libraries/libpower_supply_stuff.so NEEDED /package/host/myvendor.com/API-R-2.0.0/Release/Libraries/libgsm_stuff.so NEEDED /package/host/myvendor.com/API-R-2.0.0/Release/Libraries/libtcp_stuff.so NEEDED libvortex-1.1.so.0 NEEDED libaxl.so.0 NEEDED libgcc_s.so.1 NEEDED libc.so.6 Notice how my vendor's libraries do have their full path, while aspl's don't. Also, notice how the name embedded is different from the one I specified on the command line. I'd like to know why (who is messing with my paths), and how to solve it. p.s.: I know about RPATH, that's not the answer I'm looking for
