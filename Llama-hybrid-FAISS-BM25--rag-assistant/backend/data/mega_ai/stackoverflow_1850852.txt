[site]: stackoverflow
[post_id]: 1850852
[parent_id]: 1850756
[tags]: 
a.each_index { |i| j = a[i].index 'S'; p [i, j] if j } Update: OK, we can return multiple matches. It's probably best to utilize the core API as much as possible, rather than iterate one by one with interpreted Ruby code, so let's add some short-circuit exits and iterative evals to break the row into pieces. This time it's organized as an instance method on Array, and it returns an array of [row,col] subarrays. a = [ %w{ a b c d }, %w{ S }, %w{ S S S x y z }, %w{ S S S S S S }, %w{ x y z S }, %w{ x y S a b }, %w{ x }, %w{ } ] class Array def locate2d test r = [] each_index do |i| row, j0 = self[i], 0 while row.include? test if j = (row.index test) r
