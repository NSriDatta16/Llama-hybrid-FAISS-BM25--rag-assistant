[site]: datascience
[post_id]: 110596
[parent_id]: 110593
[tags]: 
this algorythm is not the best for solving a Snake Game (best proven are RLs), however, I think this can actually work if your model is well built. As far I understand, your knowledge about DGA is correct. Maybe the error is in the way you select the best parents for each epoch, you must choose the best agents for breeding. How do you choose the best agents for breeding? The best solution would be choose those who can reach the destination point. Maybe none of them can reach such point, so the problem is: which one did better? I would code it as the one who can reach closer to the destination point. In case you are not choosing the best parents for breeding, your algorythm will not converge to any better solution. In case you are doing right, try to generate different hidden layer shapes for each agent and use it as a new parameter to crossover and mutation, this should work better than a fixed shape for all agents. I hope this to be useful!
