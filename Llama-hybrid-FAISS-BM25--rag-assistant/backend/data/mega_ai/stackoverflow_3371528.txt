[site]: stackoverflow
[post_id]: 3371528
[parent_id]: 3371127
[tags]: 
Yes you force a path to be a system include by using the optional SYSTEM flag include_directories(SYSTEM path) https://cmake.org/cmake/help/latest/command/include_directories.html Starting with CMake 2.8.12 you can use the new target_include_directories to include system directory includes at the target level, while leveraging the new usage requirement features of cmake: target_include_directories(foo SYSTEM PUBLIC path) Now target foo will use path as a system include, and anything that links to foo will also use path as automatically as a system include. You can control the propagation of these usage requirements by changing the PUBLIC keyword to PRIVATE or INTERFACE. https://cmake.org/cmake/help/latest/command/target_include_directories.html
