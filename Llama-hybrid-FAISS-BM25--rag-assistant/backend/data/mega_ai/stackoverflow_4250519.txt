[site]: stackoverflow
[post_id]: 4250519
[parent_id]: 
[tags]: 
Structure Reading Theory Problem

Iam have a DBC file, which is a database file for a game, containing ingame usable spell data, like ID, SpellName, Category etc... Struct is something like this: [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi, Pack = 1)] public struct SpellEntry { public uint ID; public uint Category; public float speed; [MarshalAs(UnmanagedType.ByValArray, SizeConst = 8, ArraySubType = UnmanagedType.I4)] public int[] Reagent; public int EquippedItemClass; [MarshalAs(UnmanagedType.LPStr)] // Crash here public string SpellName; } Iam reading the file with a binary reader, and marshaling it to the struct. Snippet: binReader.BaseStream.Seek(DBCFile.HEADER_SIZE + (index * 4 * 234), SeekOrigin.Begin); buff = binReader.ReadBytes(buff.Length); GCHandle handdle = GCHandle.Alloc(buff, GCHandleType.Pinned); Spell.SpellEntry testspell = (Spell.SpellEntry)Marshal.PtrToStructure(handdle.AddrOfPinnedObject(), typeof(Spell.SpellEntry)); handdle.Free(); Now to be more complex, lets see how does the DBC file storing the strings, for example the SpellName. Its not in the records, strings are contained in the end of the file, in a "string table" block. The string data in the records contains a number (offset) to the string in the string table. (so its not really a string). I managed to read all the strings from the string block (at the end of the file), to a string[]. (this is dont before start reading the records) Then I would start reading the records, but first problem Is : 1.) I cant read it, because it "crashes" on the last line of my struct (because its not a string really) 2.) I cant assign a string to the number. When I read it, it will be a number, but at the end, as a result, I have to assign that string to the SpellName, thats got pointed by the number, in the string table. Jeez .
