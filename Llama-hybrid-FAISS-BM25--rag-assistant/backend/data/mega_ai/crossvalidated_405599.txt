[site]: crossvalidated
[post_id]: 405599
[parent_id]: 
[tags]: 
Problems estimating a "Bayesian version of FIML"

I am anticipating that my question exposes some basic ignorance about how mcmc works, but here we go: In an attempt to deal with missing data I am trying to simultaneously estimate a regression model as well as the co-variance of the variables in the regression model and some auxiliary variables. (Which I think is similar to what full information maximum likelihood [FIML] is doing, though FIML does not impute data .) To be specific: Assume matrix $X$ has the columns $y,e,m,el$ , the last entry being the product of variables $e$ and $l$ . Column $y$ has missing values. I want to estimate the effect of $e$ on $y^i$ . To deal with missing data I also estimate the co-variance matrix of $X^i$ , where $y^i$ and $X^i$ are vector/matrix with imputed values. After successfully implementing such a model in the R package lavaan , I am now having problems with a Bayesian version. Specifically, one can write up such a model in the probabilistic programming language Stan as follows: data { int N; int K; vector[N] y; vector[N] m; vector[N] e; vector[N] el; int nmiss; int missidx[nmiss]; } parameters { real intercept; real b; real sigma; corr_matrix[K] Omega; vector[K] mu; vector [K] tau; vector[nmiss] yimp; } transformed parameters { cov_matrix[K] Sigma = quad_form_diag(Omega,tau); } model { // omitting priors to keep this shorter vector[N] yl = y; yl[missidx] = yimp; // regression target += normal_lpdf(yl | intercept + e*b,sigma); // covariance for (n in 1:N) { vector[K] vec = to_vector({yl[n],e[n],el[n],m[n]}); target += multi_normal_lpdf(vec | mu, Sigma); } } When I try to estimate this model, I can't simultaneously estimate the regression weight for $e$ and the covariance matrix. There is some "interference" (for the lack of a better term) which makes that the regression weight for $e$ and the variance of $e$ in the variance-covariance matrix for $X$ are underestimated. I can "hack around" this problem by multiplying the log posterior of the covariance multi_normal_lpdf(vec | mu, Sigma) with a large number. This works intuitively because it gives precedence to the estimation of the co-variation between all variables and thus estimates the effect of $e$ on $y$ based on imputed data with the right covariance. However, I assume others must have thought deeper about this and would be glad about any pointer or comment. I'd also be happy about a pointer to some pseudo-code for FIML estimation, because I am not sure I am understanding the details directly.
