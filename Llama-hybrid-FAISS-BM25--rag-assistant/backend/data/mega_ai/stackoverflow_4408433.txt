[site]: stackoverflow
[post_id]: 4408433
[parent_id]: 4408049
[tags]: 
Using a domain-driven approach , or model oriented approach where the DB is merely seen as an 'implementation-detail', does not mean that you should ignore the integrity of your data. I see no reason why you should drop foreign-key (and other) constraints from your database. The database is more then just a storage for your data. It's task is also to guard the integrity of it. It is perfectly possible to combine the 2 worlds (domain driven and relational database) with NHibernate. Make sure that the 2 areas focus on what they're best at. And, the database is best at storing data and making sure that the data remains valid / integer.
