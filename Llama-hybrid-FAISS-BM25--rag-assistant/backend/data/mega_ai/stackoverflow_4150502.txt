[site]: stackoverflow
[post_id]: 4150502
[parent_id]: 
[tags]: 
Stack Overflow issue, Asp.net MVC

I am getting "System.StackOverflowException was unhandled" on public VolunteerDBEntities() : base("name=VolunteerDBEntities", "VolunteerDBEntities") { OnContextCreated(); } It happens when I change this: public class OrganizationService : IOrganizationService { private IValidationDictionary _validationDictionary; private IOrganizationRepository _repository; public OrganizationService(IValidationDictionary validationDictionary) : this(validationDictionary, new OrganizationRepository()) { } public OrganizationService(IValidationDictionary validationDictionary, IOrganizationRepository repository) { _validationDictionary = validationDictionary; _repository = repository; } ...} To this: public class OrganizationService : IOrganizationService { private IValidationDictionary _validationDictionary; private IOrganizationRepository _repository; private ISessionService _session; public OrganizationService(IValidationDictionary validationDictionary) : this(validationDictionary, new OrganizationRepository(), new SessionService()) { } public OrganizationService(IValidationDictionary validationDictionary, IOrganizationRepository repository, ISessionService session) { _validationDictionary = validationDictionary; _repository = repository; _session = session; } ...} I'm clueless on this one. I set this up for unit testing and anytime I add a class variable to this service, it crashes. I can add a class variable to another services or create a service that replicates this minus the interface and it works. Any ideas? Session Service Construct: public class SessionService: ISessionService { private IMembershipService _membershipService; private IVolunteerService _volunteerService; private IMessageService _messageService; public SessionService() : this(new AccountMembershipService(null), new VolunteerService(null), new MessageService()) {} public SessionService(IMembershipService membershipservice, IVolunteerService volunteerservice, IMessageService messageservice) { _membershipService = membershipservice; _volunteerService = volunteerservice; _messageService = messageservice; } Other Service Constructs: private IValidationDictionary _validationDictionary; private IVolunteerRepository _repository; private IOrganizationService _orgservice; public VolunteerService(IValidationDictionary validationDictionary) : this(validationDictionary, new VolunteerRepository(), new OrganizationService(null)) {} public VolunteerService(IValidationDictionary validationDictionary, IVolunteerRepository repository, IOrganizationService orgservice) { _validationDictionary = validationDictionary; _repository = repository; _orgservice = orgservice; } public class AccountMembershipService : IMembershipService { private readonly System.Web.Security.MembershipProvider _provider; private IValidationDictionary _validationDictionary; private IVolunteerService _volservice; private IEmailService _emailservice; public AccountMembershipService(IValidationDictionary validationDictionary) : this(validationDictionary, null, new VolunteerService(null), new EmailService()) { } public AccountMembershipService(IValidationDictionary validationDictionary, System.Web.Security.MembershipProvider provider, VolunteerService volservice, EmailService emailservice ) { _validationDictionary = validationDictionary; _provider = provider ?? Membership.Provider; _volservice = volservice; _emailservice = emailservice; }
