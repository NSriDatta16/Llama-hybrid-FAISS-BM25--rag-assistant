[site]: crossvalidated
[post_id]: 311054
[parent_id]: 
[tags]: 
Adaptive (automated model selection) algo for simple time series models in Python?

I'm looking to create a predictive model for time series data using historical data only (no other variables) and simple curve fits (linear, polynomial, exponential etc). The issue is that I'm trying to use a single algorithm on thousands of heterogeneous data sets and each data set exhibits various "regimes" across time, so I'm looking for something that is adaptive. For instance, if I have 10 years worth of data, maybe year 1 is best fit by a 4th degree polynomial, years 2 to 4 best fit linearly, and years 4 to 10 by an exponential. Because I'm doing this over many data sets, I need the algorithm to choose the ideal fits on its own. Is there something more or less pre-built there that already fulfills some of these needs? If not, where would you suggest I start to create something quickly? I have a good amount of Python dev experience and data manipulation/vis (pandas, matplotlib) and some sklearn experience.
