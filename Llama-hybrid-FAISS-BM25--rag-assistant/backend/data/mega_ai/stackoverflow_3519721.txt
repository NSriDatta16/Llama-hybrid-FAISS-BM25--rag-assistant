[site]: stackoverflow
[post_id]: 3519721
[parent_id]: 3519648
[tags]: 
The key word "DISTINCT" in SQL has the meaning of "unique value". When applied to a column in a query it will return as many rows from the result set as there are unique, different values for that column. As a consequence it creates a grouped result set, and values of other columns are random unless defined by other functions (such as max, min, average, etc.) If you meant to say you want to return all rows for which Col006 has a specific value, then use the "where Col006 = value" clause. If you meant to say you want to return all rows for which Col006 is different from all other values of Col006, then you still need to specify what that value is => see above. If you want to say that the value of Col006 can only be evaluated once all rows have been retrieved, then use the "having Col006 = value" clause. This has the same effect as the "where" clause, but "where" gets applied when rows are retrieved from the raw tables, whereas "having" is applied once all other calculations have been made (i.e. aggregation functions have been run etc.) and just before the result set is returned to the user. UPDATE: After having seen your edit, I have to point out that if you use any of the other suggestions, you will end up with random values in all other 9 columns for the row that contains the value "item1" in Col006, due to the constraint further up in my post.
