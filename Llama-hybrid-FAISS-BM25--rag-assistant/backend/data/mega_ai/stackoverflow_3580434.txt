[site]: stackoverflow
[post_id]: 3580434
[parent_id]: 3579965
[tags]: 
This stylesheet: Books with no unique ID 20]"> True With your input, output: Books with no unique ID &lt;Book&gt;&lt;ID&gt;1&lt;/ID&gt;&lt;Name&gt;Book1&lt;/Name&gt;&lt;Price&gt;24.??&lt;/Price&gt;&lt;Country&gt;US&lt;/Country&gt;&lt;/Book&gt; &lt;Book&gt;&lt;ID&gt;1&lt;/ID&gt;&lt;Name&gt;&lt;/Name&gt;&lt;Price&gt;24.69&lt;/Price&gt;&lt;/Book&gt; Books with no float Price &lt;Book&gt;&lt;ID&gt;1&lt;/ID&gt;&lt;Name&gt;Book1&lt;/Name&gt;&lt;Price&gt;24.??&lt;/Price&gt;&lt;Country&gt;US&lt;/Country&gt;&lt;/Book&gt; Books with empty element &lt;Book&gt;&lt;ID&gt;1&lt;/ID&gt;&lt;Name&gt;&lt;/Name&gt;&lt;Price&gt;24.69&lt;/Price&gt;&lt;/Book&gt; Books with missing element &lt;Book&gt;&lt;ID&gt;1&lt;/ID&gt;&lt;Name&gt;&lt;/Name&gt;&lt;Price&gt;24.69&lt;/Price&gt;&lt;/Book&gt; With proper input: 1 Book1 19.50 US 2 Book2 24.69 CA Output: 1 Book1 19.50 United States 2 Book2 24.69 True Canada Note : Ussing keys for performance. This is proof of concept. In real life, the XHTML output should be wrapped into an xsl:message instruction. From http://www.w3.org/TR/xslt#message The xsl:message instruction sends a message in a way that is dependent on the XSLT processor. The content of the xsl:message instruction is a template. The xsl:message is instantiated by instantiating the content to create an XML fragment. This XML fragment is the content of the message. NOTE:An XSLT processor might implement xsl:message by popping up an alert box or by writing to a log file. If the terminate attribute has the value yes, then the XSLT processor should terminate processing after sending the message. The default value is no. Edit : Compacting code and addressing country map issue. Edit 2 : In real life, with big XML documents and more enterprice tools, the best approach would be to run the transformation with XSLT 2.0 schema-aware processor for validating, or run validation independly with well-know schema validators. If for some reason these choices aren't aviable, don't go with my proof-of-concept answer because having keys for each validation rule make cause a lot of memory use for big documents. The better way for last case, is to add rules to catch validation errors ending transformation with message. As example, this stylesheet: No integer ID at No float Price at Empty element at Missing element at Duplicate ID at 20]"> True With your input, this message stops the transformation: Duplicate ID ar /Books[1]/Book[1]/ID[1] With proper input, outputs the same as before.
