[site]: stackoverflow
[post_id]: 5335583
[parent_id]: 5335197
[tags]: 
In step 18, I assume you mean ssh-add ~/.ssh/id_rsa ? If so, that explains this: I also suspect some local ssh caching weirdness because if i mv ~/.ssh/id_rsa KAKA and mv ~/.ssh/id_rsa.pub POOPOO, and do ssh git@github.com -v, it still Authenticates me and says it serves my /home/meder/.ssh/id_rsa when I renamed it?! It has to be cached?! ... since the ssh-agent is caching your key. If you look on GitHub, there is a mederot account. Are you sure that this is nothing to do with you? GitHub shouldn't allow the same SSH public key to be added to two accounts, since when you are using the git@github.com:... URLs it's identifying the user based on the SSH key. (That this shouldn't be allowed is confirmed here .) So, I suspect (in decreasing order of likelihood) that one of the following is the case: You created the mederot account previously and added your SSH key to it. Someone else has obtained a copy of your public key and added it to the mederot GitHub account. There's a horrible bug in GitHub. If 1 isn't the case then I would report this to GitHub, so they can check about 2 or 3. More : ssh-add -l check if there is more than one identify exists if yes, remove it by ssh-add -d "that key file"
