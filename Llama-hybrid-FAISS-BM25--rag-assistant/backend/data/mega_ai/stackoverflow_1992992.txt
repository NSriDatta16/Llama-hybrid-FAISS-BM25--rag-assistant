[site]: stackoverflow
[post_id]: 1992992
[parent_id]: 1992978
[tags]: 
Do you mean a random string? If so, simply create a string containing the 36 characters, generate 5 random numbers and create the string based on the character positions (pseudo-code): string src = "0123456789abcdefghijklmnopqrstuvwxyz" string dst = "" for i = 1 to 5: dst = dst + src[random(len(src))] If you want 5 unique characters, you do the same thing but with one slight difference. Generate the first random number in the range 0 through 35, the second in the range 0 through 34 and so on. Then, as you add the character from the source string to your own string, replace the used character in the source string with the last character in the source string. This will prevent the same character from being selected twice: string src = "0123456789abcdefghijklmnopqrstuvwxyz" int srclen = len(src) string dst = "" for i = 1 to 5: idx = randon(len(src)) dst = dst + src[idx] src[idx] = src[srclen-1] srclen = srclen - 1 Aside: @Tatu has provided a simple solution using str_shuffle which is a more elegant way of doing that last method (unique characters) but I'm not convinced it's the most efficient way since it's likely to involve a lot of swaps to get a decent shuffle. The method here seems to me to be more likely to be faster. Keep that in mind if performance is important, but also keep in mind that I haven't tested how good it is - it may be fast enough - it may even blow my solution out of the water :-) As with all performance-related things, measure, don't guess.
