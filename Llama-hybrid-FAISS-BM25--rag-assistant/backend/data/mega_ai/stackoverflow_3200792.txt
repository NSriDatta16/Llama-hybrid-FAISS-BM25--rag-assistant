[site]: stackoverflow
[post_id]: 3200792
[parent_id]: 3173646
[tags]: 
I think that while "porting" is the right verb in this context, the concept may not be right. This might be an unpopular answer, but here goes: Don't port. Some number of classes may be directly usable (with just language translation) from one platform to another. Those you port. The UI, however, can and should be allowed to vary quite freely between the two platforms... different concepts, and more importantly, different components and different conventions, both from the user perspective and the developer side. Case in point is the New York Times app on iPhone vs. Android. I'm sure they managed to keep about half of the app running on shared code, but the rest is translated to follow the idioms and SDKs of each platform. Superficially, it's the same app, but when you really get into it, many things are quite different. So, instead of advising you "not to finish one port before starting any of the others," I would advise you to identify the common or shareable pieces of the app, and pay close attention to getting those as generic as possible. The rest of the app should probably be platform specific (Obviously your iPhone and iPad versions should share about 90% or more of their actual code...)
