[site]: stackoverflow
[post_id]: 72736
[parent_id]: 72626
[tags]: 
When you instantiated the IsolatedStorageFile, did you scope it to IsolatedStorageScope.Machine? Ok now that you have illustrated your code style and I have gone back to retesting the behaviour of the methods, here is the explanation: GetMachineStoreForAssembly() - scoped to the machine and the assembly identity. Different assemblies in the same application would have their own isolated storage. GetMachineStoreForDomain() - a misnomer in my opinion. scoped to the machine and the domain identity on top of the assembly identity. There should have been an option for just AppDomain alone. GetMachineStoreForApplication() - this is the one you are looking for. I have tested it and different assemblies can pick up the values written in another assembly. The only catch is, the application identity must be verifiable. When running locally, it cannot be properly determined and it will end up with exception "Unable to determine application identity of the caller". It can be verified by deploying the application via Click Once. Only then can this method apply and achieve its desired effect of shared isolated storage.
