[site]: stackoverflow
[post_id]: 146630
[parent_id]: 146575
[tags]: 
A .webloc file doesn't have anything in its data fork; instead, it stores the URL it refers to as a resource in its resource fork. You can see this on the command line using the DeRez(1) tool Here I've run it on a .webloc file that I dragged out of my Safari address bar for this question: % DeRez "Desktop/Crafting .webloc file - Stack Overflow.webloc" data 'drag' (128, "Crafting .webloc file -#1701953") { $"0000 0001 0000 0000 0000 0000 0000 0003" /* ................ */ $"5445 5854 0000 0100 0000 0000 0000 0000" /* TEXT............ */ $"7572 6C20 0000 0100 0000 0000 0000 0000" /* url ............ */ $"7572 6C6E 0000 0100 0000 0000 0000 0000" /* urln............ */ }; data 'url ' (256, "Crafting .webloc file -#1701953") { $"6874 7470 3A2F 2F73 7461 636B 6F76 6572" /* http://stackover */ $"666C 6F77 2E63 6F6D 2F71 7565 7374 696F" /* flow.com/questio */ $"6E73 2F31 3436 3537 352F 6372 6166 7469" /* ns/146575/crafti */ $"6E67 2D77 6562 6C6F 632D 6669 6C65" /* ng-webloc-file */ }; data 'TEXT' (256, "Crafting .webloc file -#1701953") { $"6874 7470 3A2F 2F73 7461 636B 6F76 6572" /* http://stackover */ $"666C 6F77 2E63 6F6D 2F71 7565 7374 696F" /* flow.com/questio */ $"6E73 2F31 3436 3537 352F 6372 6166 7469" /* ns/146575/crafti */ $"6E67 2D77 6562 6C6F 632D 6669 6C65" /* ng-webloc-file */ }; data 'urln' (256, "Crafting .webloc file -#1701953") { $"4372 6166 7469 6E67 202E 7765 626C 6F63" /* Crafting .webloc */ $"2066 696C 6520 2D20 5374 6163 6B20 4F76" /* file - Stack Ov */ $"6572 666C 6F77" /* erflow */ }; The only resources that probably needs to be in there are the 'url ' and 'TEXT' resources of ID 256, and those probably don't need resource names either. The 'urln' resource might be handy if you want to include the title of the document the URL points to as well. The 'drag' resource tells the system that this is a clipping file, but I'm unsure of whether it needs to be there in this day and age. To work with resources and the resource fork of a file, you use the Resource Manager â€” one of the underlying pieces of Carbon which goes back to the original Mac. There are, however, a couple of Cocoa wrappers for the Resource Manager, such as Nathan Day's NDResourceFork .
