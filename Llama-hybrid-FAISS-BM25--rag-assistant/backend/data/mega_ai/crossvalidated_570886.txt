[site]: crossvalidated
[post_id]: 570886
[parent_id]: 
[tags]: 
Linear Regression: Minimizing proposed changes to the response variable with a goal of statistical insignificance?

I am performing a linear regression for a pay equity analysis. That regression will typically look something like this (where yearsOfExperience is a stand-in for one or many controls that may be included): $$ compensation = \beta_0 + \beta_1isFemale + \beta_2yearsOfExperience + \epsilon $$ So, we'll run the regression and possibly tell the client "it looks like your coefficient for isFemale is significant and negative". They'll want to know "what is the cheapest possible remediation dollar amount that I have to distribute to make it such that my gender pay gap is no longer statistically significant"? In other words, I need to minimize proposed increases in the response variable (for a subset of observations) that changes the model such that the p-value associated with the isFemale coefficient increases above a threshold (often 0.1). I'm currently executing a binary search, which probably gets me "pretty close" to the minimization: I fix "budget distribution %" to be based on the relative size of each underpaid woman's residual. (neither "females with positive residuals" nor "males" would get any proposed compensation increases) come up with a high overall budget "guess" and low overall budget "guess" get the midpoint of those guesses distribute that amount to underpaid women based on the % value explained in (1) re-fit the model to see whether isFemale is still significantly associated with lower pay. If my p-value is above 0.1, I adjust my guess downward, and if my p-value is still below 0.1, I adjust my guess upward. Then I start again at (4). Since this involves iteratively re-fitting the model, it can be computationally expensive. I also can't be sure I'm truly getting the minimum remediation amount as I have to fix the distribution % in step 1. I have tried minimization (via scipy.optimize ), but the constraints are non-differentiable. Methods like basinhopping don't seem to allow for the constraints that I'd need either. Is there a more elegant statistical method to solve this problem?
