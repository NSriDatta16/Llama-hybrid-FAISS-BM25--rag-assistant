[site]: stackoverflow
[post_id]: 1793072
[parent_id]: 1783957
[tags]: 
So, I don't want to really bust your bubble, but... maybe I should? As a professional game developer, I have to say that there really need to be three types of "languages" for game development. First, there's your engine-level language. This is typically C++. It's all about performance. The artifacts of gameplay are not meant to be implemented here (sadly, they often are). Next comes the gameplay language. This is lightweight, easy to understand, and designed for rapid iteration. Finally, there is some sort of visual scripting language. This is the lightest of all and is geared toward non-programmers (level designers, etc.). That being said: Definitely check out UnrealScript. It's used throughout the industry (since the Unreal Engine is a cornerstone of FPS game development). I would highly recommend supporting: Concurrent programming (check out what CCP does with Stackless Python for Eve Online) Network replication (check out UnrealScript, you can tag functions to run on either the server or the client, or to be safe to run on the client, etc.) State (as mentioned) would be great. UnrealScript has this facility. This needs to be safely done (i.e., enter and exit at any point, complex transitions handled elegantly, etc.) Good luck!
