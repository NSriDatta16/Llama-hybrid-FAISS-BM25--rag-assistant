[site]: stackoverflow
[post_id]: 4394312
[parent_id]: 
[tags]: 
This tag is pending removal. Instead, please use tags excel and vba . ( More info on the removal ) VBA (Visual Basic for Applications) was introduced in Excel 5.0 in 1993 as an alternative to the Excel version 4.0 macro language (XLM). While XLM is currently still supported in later Excel versions (including Excel 2013), VBA is overwhelmingly the dominant language. Microsoft has been encouraging users to migrate XLM macros to VBA. With Office 2010, they have added new features to make this process easier. A partial migration roadmap may be found on the official Excel blog . VBA is an object-oriented version of Basic derived from VB6, it provides complete control of the Office environment, anything that can be done by the user in Office can be done with VBA code. Automation of charts, pivot tables, data entry, filtering and workbook creation are just some examples. Hence there's more to VBA than simply recording a macro. But you can use macro recording as a tool to help you find out certain properties, worksheet methods available in VBA IDE. Almost all versions of Office include a comprehensive and reasonably modern IDE for Visual Basic including a code editor, dialog editor, object browser, and a source debugger. However, in some Starter editions, the VBA Editor (VBE) is not available , and programming in VBA cannot be done. Getting Started: In addition to reading the links section below, a good way to get started is to use the Macro Recorder within Excel as follows: Start recording (Developer->Code->Record Macro). If the developer-tab is not visible, you can show it by going to File->Options->Customize Ribbon, and checking "Developer" in the window on the right. Manually perform the operations that you want to automate Stop recording Analyze the generated code - you'll get hints on the data object model (how to get access on worksheets, ranges, cells) and on common operations on the data. Write your own code based on these hints ; Debug : use the debugger (set breakpoints to break execution - a break-point is set by clicking on a code-line until it gets red); Use F8 for single stepping through the code (executing line by line); use the Immediate window to output debug data with Debug.Print -statements . Use Watches to dig into the data model. Related Tags : excel-2016 excel-2013 excel-2010 excel-2007 excel-2003 vba Links: Getting Started with VBA in: Office Excel 2010 101 VBA Samples VBA OOP Basics MSDN Excel: How do I ... , Concepts , Object model referece VBA: How-to topics , Conceptual topics , Language reference Reference Books Mastering VBA for Office 2010 Power Programming with VBA in Excel 2003 Excel 2010 Excel 2013 Excel 2016 Professional Excel Development: The Definitive Guide
