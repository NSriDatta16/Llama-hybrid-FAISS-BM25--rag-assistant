[site]: stackoverflow
[post_id]: 4356083
[parent_id]: 
[tags]: 
Help with Object Design for Asynchronous Population of UIScrollView

Greetings collective, I am new to Cocoa and have been tasked with working on a prototype application for iPhone and iPad running 4.2. I am having trouble designing a process that will backfill data into a custom object that I am using to populate a UIScrollView. Each custom object displays movie data (artwork, cast, etc.) and this data is called from a REST service. I would like this Movie object to be responsible for it's rendering and therefore "farm out" it's data needs to a separate object that can do the actual REST calls, JSON parsing etc. I've been trying to wrap my head around using delegates, or NSOperation's or direct callbacks to deliver a solution, but I'm having trouble discerning which avenue to pursue. I know I need to process this data in the background, to keep the UI alive on the main thread, but I struggle with how to engineer the connections between these objects: TheaterViewController //ViewController that contains the UIScrollView Currently, I am populating TheaterViewController's UIScrollView with 11 (arbitrary allotment) MovieView items - MovieView shows an ActivityIndicator to let the user know it's working on delivering the content MovieItem //a single movie and it's respective data MovieView //individual View that displays a single MovieItem content DataAgent //background-capable object that fetches data from app server DataWarehouse //Singleton-designed class that maintains an NSMutableArray of MovieItem's In my current design, TheaterViewController populates the UIScrollView with 11 MovieView's. Each MovieView then goes about getting it's own data. I know how to get DataAgent to check DataWarehouse for it's content and if not present, then call the REST service. What I don't know how to do, is inform/callback/post to MovieView that DataAgent has finished getting the data (preferably in an asynchronous fashion) so it can render it's completed view. Can anyone point me to a document, or example that does this kind of asynchronous callback process? Thanks in advance for any pointers you good folks come up with -
