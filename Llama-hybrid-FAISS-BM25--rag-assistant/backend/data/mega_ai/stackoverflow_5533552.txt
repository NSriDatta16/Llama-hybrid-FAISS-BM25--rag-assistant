[site]: stackoverflow
[post_id]: 5533552
[parent_id]: 5373658
[tags]: 
Since I'm new on stackoverflow, I can't post more than two hyperlinks!! So the version with links is at http://www.reddit.com/r/compsci/comments/ghc0w/please_recommend_must_read_favorite_papers_in/c1no849 The book that zamanbakshi recommends, Transaction Processing: Concepts and Techniques , by Gray and Reuter, is really, really good. I carried it around so much that the cover fell off--and this is a hardcover. It is somewhat outdated on some topics, of course, but it is a much better read than most later books, such as Weikum and Vossen's Transactional Information Systems , which is a good book, but makes my eyes glaze over, I have to admit. If I recall correctly, the Gray and Reuter text doesn't cover Mohan's repeating histories recovery technique, which is essential. See ARIES/NT: A Recovery Method Based on Write-Ahead Logging for Nested Transactions and ARIES: A Transaction Recovery Method Supporting Fine-Granularity Locking and Partial Rollbacks Using Write-Ahead Logging, at the very least, but most of Mohan's papers are worth reading. The book Concurrency control and Recovery in Database Systems by Bernstein, et al., is out of print, but you can download it from his Microsoft Research page. There are also a lot of good publications there from David Lomet and the late (or missing) Jim Gray. Some important papers that aren't in the 2nd edition of the Red Book (the edition I have): A critique of ANSI SQL isolation levels (1995) Gray, et al. The dangers of replication and a solution (1996) Gray and Helland Generalized Isolation Level Definitions (2000) Adya, et al. A recent paper that I think deserves more attention is Serializable Isolation for Snapshot Databases (2009) by Cahill, Röhm, and Fekete. It's a really simple technique that works surprisingly well. I hope that it gets implemented in some DBMSes. While searching for related stuff, I came across this interesting reading list. It mostly has flash memory-related stuff, but there are some general papers of interest, too, including some recent Stonebraker papers. I recommend skipping Date's "Third Manifesto" stuff. I was quite disappointed by it. I don't think he has ever done any object-oriented programming. His earlier books and articles on relational DBMSes are good, if a bit repetitive. A good description of a main-memory DBMS is The Architecture of the Dalí Main-Memory Storage Manager. The non-action-consisent, non-WAL checkpointing blew my mind at first. Here are a couple about non-consistent distributed data management (for very, very big data): BASE: an Acid alternative (2008) Pritchett Life beyond Distributed Transactions: an Apostate's Opinion (2007) Helland
