[site]: stackoverflow
[post_id]: 284933
[parent_id]: 284906
[tags]: 
use a standard menubar (amateur GUI designers seem to like to chart their own course here for some reason). Make sure the first items are File, Edit and View, and the last one is Help don't worry about color themes or skins; stick to a standard look that is consistent with your platform use the default system font use menu accelerators that are consistent with your platform stick to the tried and true layout with a menubar on top, a status bar on the bottom, and if required, a navigation pane on the left never do a system-wide grab If you have a choice, make all windows resizable. use groups of radiobuttons for "choose exactly one". Always make sure one of them is selected by default. If you want the user to be able to not choose any, add another radiobutton for "no choice" use groups of checkbuttons for "choose zero or more" constrain input if necessary (ie: simply ignore non-digits in a numeric input field) rather than waiting for a user to enter data, submit, then throw up a dialog saying "hey, letters aren't allowed!". If they aren't allowed, don't accept them in the first place. be liberal in what you accept as input. For goodness sake, don't throw a fit for a SSN field if they leave out the hyphens, or put then in when you don't want them. The computer is smart, let it figure out that xxxxxxxxx and xxx xx xxxx and xxx-xx-xxxx are all valid social security numbers. always allow spaces in long fields such as serial numbers and whatnot. Data quality goes way up if a user is allowed to group numbers in sets of three or four. If your data model can't handle the spaces you can remove them before saving the data. Avoid pop-up dialogs like the plague. Never display one unless you absolutely must. If you decide you must, stop and rethink your design before continuing. There are times when they are necessary, but those times are considerably less frequent than you might imagine. pay attention to keyboard traversal. Most toolkits make an attempt to get it right, but always double-check. A use should be able to use the tab key to traverse the widgets in a logical manner. All of these rules can, of course, be broken. But only break it if you are breaking it for a justifiable reason. Remember, the software is there to aid the user, it should be doing what they want, rather than making them do what it wants.
