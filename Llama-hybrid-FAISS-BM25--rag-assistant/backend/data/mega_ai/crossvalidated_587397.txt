[site]: crossvalidated
[post_id]: 587397
[parent_id]: 
[tags]: 
How to detect low and high flow outliers with seasonal time series data in R?

I have a dataset recording daily river flow from 1976 to 2017. I want to find out unusually high (potential flood) or low (potential drought) flow values from that datatset. What's the best way to identify such outliers? I define unusually high/low flow values as outliers as per the definition below: "An anomaly/outlier can be defined as a data point or collection of data points that don't seem to follow the same pattern as the rest of the data.". I must account for the seasonality of my data, where higher flow values are expected in winter and autumn while lower values are expected in spring and summer. Below is an example using the anomalize R package with the twitter algorithm, I am not sure if this is even capable of capturing low flows. Also is the remainder (output from the anomalize() function == observed value - trend) informative when comparing rivers with generally high flow values against river with small flow values? Do you have any suggestion? (I would greatly appreciate a demonstration of the method recommended using the provided dataset) #install.packages("remotes") #remotes::install_github("cvitolo/rnrfa") library(rnrfa) #river flow data library(tidyverse) #> Warning: package 'tidyverse' was built under R version 4.1.1 #> Warning: package 'ggplot2' was built under R version 4.1.3 #> Warning: package 'tibble' was built under R version 4.1.3 #> Warning: package 'tidyr' was built under R version 4.1.3 #> Warning: package 'readr' was built under R version 4.1.3 #> Warning: package 'purrr' was built under R version 4.1.1 #> Warning: package 'dplyr' was built under R version 4.1.3 #> Warning: package 'stringr' was built under R version 4.1.1 #> Warning: package 'forcats' was built under R version 4.1.1 library(metR) # season function #> Warning: package 'metR' was built under R version 4.1.3 #> #> Attaching package: 'metR' #> The following object is masked from 'package:purrr': #> #> cross #get_data info % as_tibble() %>% rename(date = Index, flow = gdf) %>% mutate(season = metR::season(date)) #plot: df %>% ggplot()+ aes(x = date, y = flow, group = 1, col = season)+ geom_line()+ geom_point(size = 0.7) #Anomaly detection: library(anomalize) #> == Use anomalize to improve your Forecasts by 50%! ============================= #> Business Science offers a 1-hour course - Lab #18: Time Series Anomaly Detection! #> Learn more at: https://university.business-science.io/p/learning-labs-pro anomalies % time_decompose(flow, method = "twitter", frequency = "1 week", trend = "3 months") %>% #season anomalize(remainder) #> Converting from tbl_df to tbl_time. #> Auto-index message: index = date #> frequency = 7 days #> Registered S3 method overwritten by 'quantmod': #> method from #> as.zoo.data.frame zoo #> median_span = 91 days anomalies %>% plot_anomaly_decomposition() Created on 2022-08-31 by the reprex package (v2.0.1)
