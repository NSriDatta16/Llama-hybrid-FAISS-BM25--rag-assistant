[site]: datascience
[post_id]: 107759
[parent_id]: 
[tags]: 
Deep Learning: which kind of layer for {time_series + static} -> time_series problems?

as you can see in the image below, I need to bridge static data (on the left) and time series data (on the right) to create a time series output. I have looked at this example on keras library which deals with transformers but to no avail. generally what are the layers that are used to solve: time_series + static -> time_series would the "core" of the answer change if it were (=core maybe you keep the same framework and then you just pick the latest value or "reduction" of some kind): time_series + static -> static here the time series part is more "features" based on time that changes and I would avoid using RNN/LSTM or the sort as much as possible. it's just a matter of concatenating things without resulting in not exploding my features and therefore adding "bias" to the problem p.s.: I know there are some custom solutions for this problem but here I need to deal with transforming/concatenating things as I will add multiple sources like this (this is a simple example) and I need a general way to deal with this kind of aggregation problem (feeding everything to a single RNN will not do)
