[site]: crossvalidated
[post_id]: 177057
[parent_id]: 
[tags]: 
AIC in R: Back-transformation of model averaged coefficient estimates

I am running an analysis using a mixed model with lmer in R. I am using AIC as my model selection process. I have a global model and am including within the selection process all subset models including the null. My global model: lmer ( N ~ Time * Treatment + (1|Replicate) where time is continuous, treatment a 2-level factor, and replicate is a random effect to account for repeated measures taken over time within the same indivdual. N is Nitrogen and is my response. Firstly, for my global model I have standardised to a mean of zero and SD of 2, as I understand this is neccessary to allow comparability of variables across models. My top model set (delta AICc >7) has identified 2 models (the interaction model and the addtive model with the two fixed effects). Thus I have model-averaged across these two models. I have the following output: Model-averaged coefficients: Estimate Std. Error z value Pr(>|z|) (Intercept) 12.48242 0.13051 95.645 My question is how can I obtain parameter estimates that are "normal" - the output estimates are obviously useful for relative comparison of effect size between my variables, but importantly, I would like "true" slope values that I can report in conjunction with the accompanying Figure. For instance, in my model Time runs from 0 to 120 hours, and thus knowing a true slope value I can estimate from my model N at 120hrs using slope parameter*120. But if I used the standardised slope estimate above (z.time 0.50782) this would be N@120hrs = 0.50782*120 = 60.94 which is way, way off the y-axis scale!! For comparison, the slope of Time for the interaction model is 0.008156, and the slope of Time for the additive model is 0.0059351. So I expect a true Time slope value in the region of 0.007. I have read that I need to back-transform these estimates, using an inverse-logit transformation of the form p = 1/(1+1/e^x) where e^x is exponential and x the parameter of interest. This gives the same value as using the invlogit function in the "arm" package in R. In this instance for my standardised slope: invlogit(0.50782) =0.6242953 which is still off the y-axis! So clearly the inverse-logit transformation is doing something different and not giving the value I would be expecting. How can I get true parameter estimates?
