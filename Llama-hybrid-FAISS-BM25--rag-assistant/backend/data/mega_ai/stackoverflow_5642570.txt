[site]: stackoverflow
[post_id]: 5642570
[parent_id]: 5642414
[tags]: 
Reorganized your code a bit. The main culprit was whitespace. You need to trim your URL string before using it (i.e. trim($url); ). Other changes: Set your search term outside the for loop, since it never changes. Setup the curl object outside the loop and reuse it by just changing the URL each time. Use curl_setopt_array() to set multiple curl options in one statement. Use a foreach loop, since you're iterating over the entire array anyway and the code is cleaner. Using stripos() is more efficient than strstr() and is case-insensitive anyway. Use the !== comparator to prevent implied typecasting (FALSE !== 0, but FALSE == 0). Check the returned $html string as curl_exec() can return FALSE if it fails. Close the curl object at the end (i.e. outside the if statement too). The code below can be run on my quick mockup . URLs: Search Term: 1, CURLOPT_RETURNTRANSFER => 1, CURLOPT_CUSTOMREQUEST => 'GET', CURLOPT_HEADER => 1, ); $ch = curl_init(); curl_setopt_array($ch, $options); foreach ($urls as $url) { curl_setopt($ch, CURLOPT_URL, trim($url)); $html = curl_exec($ch); if ($html !== FALSE && stristr($html, $term) !== FALSE) { // Found! echo $url; } } curl_close($ch); } ?>
