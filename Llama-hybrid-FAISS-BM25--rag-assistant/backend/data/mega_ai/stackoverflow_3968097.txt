[site]: stackoverflow
[post_id]: 3968097
[parent_id]: 
[tags]: 
NHibernate criteria fetchmode

I have a type Type1 with a property Type2s consisting of a List . I have configured the NHibernate mapping for the property as follows: [Map(0, Table = "Type2s", Schema = "MySchema", Cascade = CascadeStyle.All, Lazy = true, Inverse = true)] [Key(1, Column = "Type1Id")] [OneToMany(2, Class = "Type2, MyNamespace")] What is the difference in behavior between these two criteria for retrieval of Type1 instances: var criteria1 = DetachedCriteria.For (); var criteria2 = DetachedCriteria.For ().SetFetchMode("Type2s", FetchMode.Join); When I invoke .List on the executable criteria from these criteria, presumably the SQL to retrieve the Type2s associated with each Type1 instance is not run until I actually attempt to access the property because the property is marked as being Lazy. Is this a correct assumption? If I want to force evaluation of the Lazy property how can this best be achieved?
