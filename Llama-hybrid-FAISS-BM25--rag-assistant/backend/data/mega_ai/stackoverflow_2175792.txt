[site]: stackoverflow
[post_id]: 2175792
[parent_id]: 2174659
[tags]: 
The first thing that I can see without seeing your controller action method is that you have no properties that you can write to, so the presumption is that this object is a read-only model. At minimum, we need to see the controller action method(s) that use(s) this object, and, if available, the view(s). UPDATE: As I understand it, the purpose of the ModelBinder is to take the data received from the HTML form, query string and/or session data and populate an instance of a .NET class, and, conversely, provide data from that same class instance for use in an HTML form. From what I'm looking at, your Cart class has behaviors and storage, but no transportable data in the form of read/write properties. MVC uses .NET reflection to find the read/write properties in the class. Since you have no read/write properties in your class, your model binding is failing, because your custom ModelBinder has nothing to transport. You might want to look at these two articles for model binding assistance: http://odetocode.com/Blogs/scott/archive/2009/04/27/6-tips-for-asp-net-mvc-model-binding.aspx http://odetocode.com/Blogs/scott/archive/2009/05/05/iterating-on-an-asp-net-mvc-model-binder.aspx
