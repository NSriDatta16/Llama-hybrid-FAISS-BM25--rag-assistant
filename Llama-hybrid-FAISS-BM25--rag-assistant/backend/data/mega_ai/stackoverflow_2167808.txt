[site]: stackoverflow
[post_id]: 2167808
[parent_id]: 2167453
[tags]: 
The best description is probably the one in the HTML5 draft here : http://dev.w3.org/html5/spec/semantics.html#the-noscript-element . In text/html, the details of exactly what happens are quite complex. Just follow the link above. No point in reproducing here. For application/xhtml+xml, the draft says: The noscript element must not be used in XML documents. The noscript element is only effective in the HTML syntax, it has no effect in the XHTML syntax. So in application/xhtml+xml, the contents of noscript should be displayed regardless of whether scripting is available or not. Of course, if scripting is enabled, it's pretty trivial to use script to remove such elements from the DOM. CORRECTION. On further research, what the above quote means I think, is that the noscript element has no effect on the parsing . In the XHTML section here, http://dev.w3.org/html5/spec/the-xhtml-syntax.html#the-xhtml-syntax , the draft says The user agent is expected to hide noscript elements for whom scripting is enabled, irrespective of CSS rules. So, as you say, when scripting is enabled the noscript element does hide its contents. However, that's all it does, and images are loaded anyway. In addition, I tried this: Test Test 1 Test 2 document.getElementById("ns").parentNode.removeChild(document.getElementById("ns")); And although the noscript node is removed from the dom, Firefox still tried to load the image.
