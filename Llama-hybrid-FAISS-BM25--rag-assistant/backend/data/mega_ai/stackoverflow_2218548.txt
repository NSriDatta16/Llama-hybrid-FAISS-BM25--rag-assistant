[site]: stackoverflow
[post_id]: 2218548
[parent_id]: 2218435
[tags]: 
As many other people have mentioned, static is a storage class specifier, not a type. What this means, specifically, is that the static keyword tells tells the compiler something about where a variable should be placed, whether or not it should appear as a symbol for external linking, or how long the variable should remain in existence. A type is an interpretation of a memory location. It's a description of what kind of data lives in that location and comes associated with a set of operations that can be performed on that data. So type and storage class are only related in that they both say something about a piece of data. The typedef keyword is for creating new names for types. As for a random analogy... A type is like talking about a specific make and model of car. A storage class is like saying that a car is stored in a private heated garage and only used on a private racetrack. A typedef is a nickname for a specific make and model.
