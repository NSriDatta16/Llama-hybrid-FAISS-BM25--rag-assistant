[site]: stackoverflow
[post_id]: 1349883
[parent_id]: 1349734
[tags]: 
Unordered sets have to pay for their O(1) average access time in a few ways: set uses less memory than unordered_set to store the same number of elements. For a small number of elements , lookups in a set might be faster than lookups in an unordered_set . Even though many operations are faster in the average case for unordered_set , they are often guaranteed to have better worst case complexities for set (for example insert ). That set sorts the elements is useful if you want to access them in order. You can lexicographically compare different set s with , , > and >= . unordered_set s are not required to support these operations.
