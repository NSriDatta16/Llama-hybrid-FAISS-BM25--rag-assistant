[site]: stackoverflow
[post_id]: 1604569
[parent_id]: 1604551
[tags]: 
There are effectively only two approaches : Identify the user behind each request and associate this identify with a session context (stored in memory, in database, where-ever) That's where session IDs or cookies (for ID purposes) come in. Manage that 100% of the context be passed back by the client (embedding the context in the urls or forms which will be used by the client; ViewState works in this fashion (*). Also, Cookies can be used as well to store such context. The way the context data is persisted between requests and, for the systems that are based upon identifying the user, the way the identity is supplied, provide many variations upon the two approaches listed above . For example: context in database, context in memory context in a file context passed in ViewState (*) context ..., context stored in a cookie ID from SessionID passed on URL/Form ID from Cookie (*) edit: I had originally ViewState marked as a session ID passing device, but as pointed by erikkallen, the default use of ViewState is with passing the context info, not the ID. In the end, however, it all hinges on whether the context is stored server side or shuttled to/from the client with each request.
