[site]: datascience
[post_id]: 37107
[parent_id]: 37091
[tags]: 
Yes, you can use a neural network exactly with the architecture you have described. Just define a consistent mapping from your grid to your input and output layer shapes. For example square $(x,y)$ can map to input neuron $5*y + x$ for zero-based indexing. If square (3,3) is never on in your training input data then it will be hard to predict what will happen in an unseen example where it is on, so the short answer is no. However, if you think your data exhibits any special structure you might be able to leverage this to still make a good prediction. If you think nearby squares behave similarly you might get good results with a convolutional neural network, which can learn from similar patterns nearby but possibly not exactly on the square you are interested in. If you think certain patterns of squares behave similarly despite translation or rotation you could augment your training data with translations and rotations and you might then have training examples where (3,3) is on. With all that said, 50 training examples is low so it might be hard to get good results.
