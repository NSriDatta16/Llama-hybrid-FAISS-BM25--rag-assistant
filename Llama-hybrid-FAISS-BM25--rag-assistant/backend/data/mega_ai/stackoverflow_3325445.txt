[site]: stackoverflow
[post_id]: 3325445
[parent_id]: 3325401
[tags]: 
From the top of my head, I can think of two ways you can achieve this. Either work with a UIButton instead of a UIImageView . Set the button's type to "custom" in Interface Builder and choose your image as the background image of the button. Assign an IBAction to the button and make it invisible from your action. If - for whatever reason - you have to stick with an UIImageView , create a subclass that overrides -touchesBegan:inView: . Additionally, make sure that you set the image view's userInteractionEnabled property to YES so that your -touchesBegan:inView: selector is called whenever the user touches the view. The default value of that property for UIImageView is NO so the last step is important! Update Here's some sample code to get you started with the button approach in case you need to do this programmatically: UIButton* btn = [UIButton buttonWithType:UIButtonTypeCustom]; [btn setBackgroundImage:img forState:UIControlStateNormal]; [btn addTarget:self action:@selector(buttonTouched:) forControlEvents:UIControlEventTouchUpInside]; [self.view addSubview:btn];
