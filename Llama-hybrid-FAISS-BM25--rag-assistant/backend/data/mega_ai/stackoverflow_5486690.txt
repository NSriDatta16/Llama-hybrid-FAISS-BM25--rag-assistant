[site]: stackoverflow
[post_id]: 5486690
[parent_id]: 
[tags]: 
#region variance & Confidence Calculation

// None yet... using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Windows.Forms; using USBkit; //This is for the costomised dll wrapper. using System.IO; //This if for binary file operations. using lbrStatistics; //This is for the statistics library. namespace USBTL { public partial class Form1 : Form { int iUSBDevice; //This is the USB enuminator. bool bUSBDeviceStatus = false; //Status of USB device. //bool bWriteFileSet = false; //File pathway is set or not. //bool bWriteTofile = false; //Writting to file. bool bflasher = false; float[,] fTemperatureData; //Temperature Data array. const int iTemperatureDataSize = 128; const int iNumberOfChannels = 2; float [] fMeanValue; //This array is for the Mean Value. float [] fStdDev; //This array is for the standard Deviation. float[] fVariance; //This array is for the Variance calculations. float[] fConfidence; //This array is for the Confidence calculations. float[] fMaxTemperature= new float [2] {30, 30}; //This is the Temperature conversion constand. float[] fMaxInputVoltage= new float [2] {255*4/5, 255*4/5}; //This is the Input Range coverage constant. enum ChanID {Chan1, Chan2}; //Just an enumeration for the Analogue Input Channels. //Class Form1 constructor. public Form1() { InitializeComponent(); } // Form1_Load opens up the USB Device and initialises the data buffer. private void Form1_Load(object sender, EventArgs e) { Console.WriteLine("Application is starting!!"); //Just a message on the output window fMeanValue = new float [iNumberOfChannels]; fStdDev = new float [iNumberOfChannels]; fVariance = new float[iNumberOfChannels]; fConfidence = new float[iNumberOfChannels]; for (int y = 0; y 0;y--) for (int i = fTemperatureData.GetLength(y)-1; i > 0; i--) fTemperatureData[i,y] = fTemperatureData[i - 1,y]; for(int y=iNumberOfChannels-1; y>0; y--) fTemperatureData[0,y] = (float) iAnalogueInput[y]*fMaxTemperature[y]/fMaxInputVoltage[y]; #endregion #region Mean Value Calculation for (int y = 0; y
