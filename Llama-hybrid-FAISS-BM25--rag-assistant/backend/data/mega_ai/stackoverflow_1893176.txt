[site]: stackoverflow
[post_id]: 1893176
[parent_id]: 1870717
[tags]: 
First of all, I have the opinion that every programmer should learn new languages. This is especially true for RPG programmers that have lived in the safe as400 world with no memory leaks, no alloc/malloc, no pointers, no linkers and other stuff that is taken for granted by all other programmers. Maybe this is a personal rant, but I do have the opinion that iSeries programmers are drifting apart from the real World of Programming. That having said, I have done my share of projects to "webulate" legacy systems. I have been working with very different tools including the initial IBM solutions (yeah, I am getting old ...). We were always able to deliver a solution but most of the times it failed in the long term. The most important reason was the lack of speed by the supplier to pick up the new trends and techniques (e.g. ajax) and incorporate them in their product. I do always admire these beautifull products (from their website I think that Strategi is beautifull too) but I have come to the conclusion that it helps on the short term, but it is not the choice for the long term. The first argument is nature of any "webify" tool. Their benefit is that the iSeries programmer is quick up and running. In no-time, new products are delivered. However, after some time the users have new requirements and some of them can not be produced with the tool. Most of the times these tools don't let you program on the metal of the machine. On the other hand, they don't allow you to incorporate other techniques (e.g. jQuery) that can do the trick. Therefore, most of the time you are forced to have an average application. The second argument has to do with you and your co-workers. Are you happy with living on an island? If you read the programmers magazine's, the forums and interesting products (e.g. Sourceforge), do you want this stuff? I think that any programmer should learn and become familiar with general techniques. Think SQL, OO, dynamic languages, java, Eclipse, Apache, class libraries/modules and so on. If you use these tools/languages/principles in your environment, then you will be able to learn from other people's experiences, attract young programmers, participate in communities, and become inspired by new technology. Nowadays I do work for a company that is changing more and more from legacy systems to "normal" stuff. Think SQL, JDBC, java, Websphere but also still use RDML and RPG. Our toolbox is increasing very quickly which give us the opportunity to choose the best tool for the job. And yes, this still includes RDML and RPG. For example, how about a java programma that calls with JDBC a stored procedure with the required business logic on the iSeries. That stored procedure is written with RPG/RDML. This changing world is sometimes intimidating for the "old school" programmers. On the other hand, you can easily see who does have the talent and skills, and who is just doing the same trick for years. The other group is enthousiastic because they can now work closely with other programmers on projects and share the same understanding of technology. Therefore, we do now identify and pick up new technologies that will help us in the daily job, much quicker and easier. So, it's still up to you if Strategi is the way to go. I tried to describe that this choice effects more then only the next project. It has to do with you and your coworkers as part of the Programmers World. Personally, I am still hoping to get started with Python in the workplace.
