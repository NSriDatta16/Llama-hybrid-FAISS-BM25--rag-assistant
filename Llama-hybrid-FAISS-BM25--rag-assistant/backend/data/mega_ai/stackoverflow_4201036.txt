[site]: stackoverflow
[post_id]: 4201036
[parent_id]: 4200980
[tags]: 
If you need to use this more often or if you just want to have more elegant code, you can use lambda expressions and delegates to create a new abstraction for this purpose: static void SafeForEach (this IEnumerable source, Action op) { foreach(var el in source) { try { op(el); } catch (Exception e) { } } } Then you can write just: xmls.SafeForEach(xml => { // Xml processing }); However, using exceptions in situations where an error is expected is not the best programming style. If you can write a method, say IsValid that returns true if the document is valid, then you could write: foreach(var xml in xmls.Where(x => x.IsValid)) { // Xml processing }
