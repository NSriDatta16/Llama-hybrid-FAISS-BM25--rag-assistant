[site]: crossvalidated
[post_id]: 381964
[parent_id]: 
[tags]: 
How can a neural network be used to find parameters of Beta distribution?

Let $\{\vec{X}_i, Y_i\}_{i=1}^N$ be a data set of length $N$ where $\vec{X}_i$ is a vector of independent variables and $Y_i$ is a response variable. Assume that each $Y_i$ is drawn from a Beta distribution parameterized by $\vec{X}_i$ . Namely, there is a function $f(\vec{X}_i)=(\alpha_i,\beta_i)$ . Then, $Y_i\sim Beta(\alpha_i, \beta_i)$ . I'd like to train a neural network, $f$ , which takes an $\vec{X}_i$ and returns a parameterization for a Beta distribution, $(\alpha_i,\beta_i)$ . My guess as to how to accomplish this is the following: Network takes $\vec{X}_i$ as input and outputs $\alpha_i,\beta_i$ Loss function is the negative log likelihood of the Beta distribution: $-\log\mathcal{L}(\alpha_i, \beta_i|Y_i)$ Does this seem like the correct approach?
