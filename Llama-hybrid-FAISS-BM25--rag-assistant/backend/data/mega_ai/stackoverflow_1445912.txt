[site]: stackoverflow
[post_id]: 1445912
[parent_id]: 1445827
[tags]: 
Do you want to build your interpreter from scratch? Begin with implementing an easier functional language like the lambda calculus or a lisp variant. For the latter there is a quite nice wikibook called Write yourself a Scheme in 48 hours giving a cool and pragmatic introduction into parsing and interpretation techniques. Interpreting Haskell by hand will be much more complex since you'll have to deal with highly complex features like typeclasses, an extremely powerful type system (type-inference!) and lazy-evaluation (reduction techniques). So you should define a quite little subset of Haskell to work with and then maybe start by extending the Scheme-example step by step. Addition: Note that in Haskell, you have full access to the interpreters API (at least under GHC) including parsers, compilers and of course interpreters. The package to use is hint (Language.Haskell.*) . I have unfortunately neither found online tutorials on this nor tried it out by myself but it looks quite promising.
