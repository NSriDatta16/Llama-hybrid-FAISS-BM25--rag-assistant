[site]: stackoverflow
[post_id]: 1774164
[parent_id]: 1750485
[tags]: 
RJS isn't "evil", but I think the issue with it is twofold: It's hard (impossible?) to do unobtrusive JavaScript with RJS. If you are writing a Javascript-heavy application and have a lot of logic, and that logic changes, you're going to have to change a fair number of files instead of only one. Also, and this is personal preference, it's rather ugly to see tags with compressed Javascript dotted throughout it. RJS abstracts away Javascript, which can lead to ignorance of the language. The idea behind RJS was to enable a developer to be able to write everything for a web application (apart from the HTML and CSS which a designer would probably tackle) using just one language: Ruby, but in practice this falls short in the same way that it's possible, but not recommended, to create ASP.NET applications by dragging and dropping controls or using a lot of heavy code generating Wizards. If all you need is a simple solution that requires a sprinking of Ajax then RJS works fine. RJS is a good tool when you are just getting started with Rails and need some "quick and dirty" Ajax effects that are used sparingly (for example, the canonical comment for a Blog that fades in on the same page). Once you start requiring heavy Javascript usage then RJS becomes more of a liability because it is shielding the developer from something that they really should be trying to understand.
