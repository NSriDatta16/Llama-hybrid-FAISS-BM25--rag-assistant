[site]: stackoverflow
[post_id]: 4505525
[parent_id]: 4497305
[tags]: 
Refactoring the mocks out in the way that @Serghei suggests is good. I also see that the name of the behaviour isn't actually describing the behaviour. I like to use the word "should", as in, "My class should do some stuff ". Your class shouldn't send the user to the database when it's registering a user. It should ask the repository to save the user. That's all. It doesn't know whether the repository sends it to the database, keeps it in memory or nukes it from orbit. It's not your class's responsibility. By phrasing the behaviour this way, you can explicitly show - and help others understand - where the scope of your class's responsibility ends. If you rename your method something like WhenRegisteringANewUser_AsksRepositoryToSaveIt() that might make the example you've given feel more natural.
