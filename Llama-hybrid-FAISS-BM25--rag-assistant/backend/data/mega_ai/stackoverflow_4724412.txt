[site]: stackoverflow
[post_id]: 4724412
[parent_id]: 
[tags]: 
JSF2 : inject service objects to managedbean from Spring?

I have tested this, trying to inject an service object to a @ManagedBean, but it failed with a nullpointerexception, being the userService is null. I am currently using Tomcat 7, JSF 2, and here are some of my pom.xml 1.6 3.0.3.RELEASE 3.6.0.Final .... Here is the exception trace : javax.faces.el.EvaluationException: java.lang.NullPointerException at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:102) at com.sun.faces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:102) at javax.faces.component.UICommand.broadcast(UICommand.java:315) at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:775) at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:1267) at com.sun.faces.lifecycle.InvokeApplicationPhase.execute(InvokeApplicationPhase.java:82) at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101) at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118) at javax.faces.webapp.FacesServlet.service(FacesServlet.java:312) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:306) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:240) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:108) at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:558) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:379) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:243) at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:259) at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:281) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) at java.lang.Thread.run(Thread.java:636) Caused by: java.lang.NullPointerException at org.albertkam.ui.LoginBean.login(LoginBean.java:38) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:616) at org.apache.el.parser.AstValue.invoke(AstValue.java:262) at org.apache.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:278) at com.sun.faces.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:98) at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:88) ... 23 more Here's my ManagedBean : @ManagedBean @RequestScoped public class LoginBean { private MstUser entityMstUser; @Autowired private UserService userService; @PostConstruct private void init() { this.entityMstUser = new MstUser(); } And here's my service bean .. @Service public class UserService { @Autowired private UserDAO userDao; public void login(MstUser entityMstUser) { And here's my applicationContext.xml .. And my web.xml albert simpleWebapp contextConfigLocation /WEB-INF/applicationContext.xml /WEB-INF/datasourceContext.xml org.springframework.web.context.ContextLoaderListener facesServlet javax.faces.webapp.FacesServlet facesServlet /faces/* faces/index.xhtml javax.faces.PROJECT_STAGE Development And my faces-config.xml, although there's really nothing related in here .. in en org.albertkam.common.messages msgs org.albertkam.common.errors errs id.co.sofcograha.override_messages --> org.albertkam.common.BusinessExceptionHandlerFactory I wonder if it's possible to do such thing, injecting a Spring managed bean to a @ManagedBean ? Please share your experience in this .. Thank you ! *********** added some new experiment results **************** org.springframework.web.context.request.RequestContextListener org.jboss.weld.environment.servlet.Listener Hello, I have tested this, trying to inject an service object to a @ManagedBean, but it failed with a nullpointerexception, being the userService is null. I am currently using Tomcat 7, JSF 2, and here are some of my pom.xml 1.6 3.0.3.RELEASE 3.6.0.Final .... Here is the exception trace : javax.faces.el.EvaluationException: java.lang.NullPointerException at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:102) at com.sun.faces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:102) at javax.faces.component.UICommand.broadcast(UICommand.java:315) at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:775) at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:1267) at com.sun.faces.lifecycle.InvokeApplicationPhase.execute(InvokeApplicationPhase.java:82) at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101) at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118) at javax.faces.webapp.FacesServlet.service(FacesServlet.java:312) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:306) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:240) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:108) at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:558) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:379) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:243) at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:259) at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:281) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) at java.lang.Thread.run(Thread.java:636) Caused by: java.lang.NullPointerException at org.albertkam.ui.LoginBean.login(LoginBean.java:38) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:616) at org.apache.el.parser.AstValue.invoke(AstValue.java:262) at org.apache.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:278) at com.sun.faces.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:98) at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:88) ... 23 more Here's my ManagedBean : @ManagedBean @RequestScoped public class LoginBean { private MstUser entityMstUser; @Autowired private UserService userService; @PostConstruct private void init() { this.entityMstUser = new MstUser(); } And here's my service bean .. @Service public class UserService { @Autowired private UserDAO userDao; public void login(MstUser entityMstUser) { And here's my applicationContext.xml .. And my web.xml albert simpleWebapp contextConfigLocation /WEB-INF/applicationContext.xml /WEB-INF/datasourceContext.xml org.springframework.web.context.ContextLoaderListener facesServlet javax.faces.webapp.FacesServlet facesServlet /faces/* faces/index.xhtml javax.faces.PROJECT_STAGE Development And my faces-config.xml, although there's really nothing related in here .. in en org.albertkam.common.messages msgs org.albertkam.common.errors errs id.co.sofcograha.override_messages --> org.albertkam.common.BusinessExceptionHandlerFactory I wonder if it's possible to do such thing, injecting a Spring managed bean to a @ManagedBean ? Please share your experience in this .. Thank you ! *********** added some new experiment results **************** Just now i tried using @Named to replace @ManagedBean and @Inject to replace @Autowired, and it worked, although i still dont really understand the reason why. So here's the modifed managed bean : @Named("userBean") @RequestScoped public class LoginBean { private MstUser entityMstUser; @Inject private UserService userService; @PostConstruct private void init() { this.entityMstUser = new MstUser(); } This works, the service object got injected, although the userService is managed by Spring ? How is that possible ? Here's some additional things that i add along the way .. I added this in the web.xml org.springframework.web.context.request.RequestContextListener org.jboss.weld.environment.servlet.Listener I also added an empty WEB-INF/beans.xml And this inside the faces-config.xml org.springframework.web.jsf.el.SpringBeanFacesELResolver Im a bit concerned here with using the @Named, because i've had a bad experience using it along with ViewScoped. I'd feel alot safer when i have @ManagedBean being able to be injected with service objects by the spring framework. I wonder what you guys usually do to connect the ManagedBean with your business service objects .. using CDI, or pure Spring, or the combination of them ?
