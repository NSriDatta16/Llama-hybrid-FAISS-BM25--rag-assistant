[site]: stackoverflow
[post_id]: 2666504
[parent_id]: 2432759
[tags]: 
I'll try to summarize my experience regarding storage drive serial number retrieval on linux. I assume you want the serial number of the storage device identity (as per SCSI specification) not the serial number of the USB device (as per USB specification under Device Descriptor ), these two are different entities. NOTICE! Most devices tend to implement a serial number in the USB-Controller and leave the serial number of the inner SCSI-disk unimplemented. So if you want to uniquely identify an USB-device the best way is to create a string from the Device Descriptor (USB specification) like VendorId-ProductId-HardwareRevision-SerialNumber In the following I shall describe how to retrieve the SN of the storage drive, as asked. Drives fall in 2 categories (actually more, but let's simplify): ATA-like (hda, hdb ...) and SCSI-like (sda sdb ...). USB drives fall in the second category, they are called SCSI attached disks . In both situation ioctl calls can be used to retrieve the required information (in our case the serial number). For SCSI devices (and these include USB drives) the Linux generic driver and it's API is documented at tldp . The serial number on SCSI devices is available inside the Vital Product Data (short: VPD) and is retrievable by using the SCSI Inquiry Command . A commad line utility in linux that can fetch this VPD is sdparm : > yum install sdparm > sdparm --quiet --page=sn /dev/sda Unit serial number VPD page: 3BT1ZQGR000081240XP7 Note that not all devices have this serial number, the market is flooded with cheep knockoffs, and some usb flash disks return strange serials (for example my sandisk cruzer returns just the letter "u"). To overcome this some people choose to create a unique identifier by mixing different strings from VPD like Product ID, Vendor ID and Serial Number. Code in c: #include #include #include #include #include #include #include #include #include int scsi_get_serial(int fd, void *buf, size_t buf_len) { // we shall retrieve page 0x80 as per http://en.wikipedia.org/wiki/SCSI_Inquiry_Command unsigned char inq_cmd[] = {INQUIRY, 1, 0x80, 0, buf_len, 0}; unsigned char sense[32]; struct sg_io_hdr io_hdr; int result; memset(&io_hdr, 0, sizeof (io_hdr)); io_hdr.interface_id = 'S'; io_hdr.cmdp = inq_cmd; io_hdr.cmd_len = sizeof (inq_cmd); io_hdr.dxferp = buf; io_hdr.dxfer_len = buf_len; io_hdr.dxfer_direction = SG_DXFER_FROM_DEV; io_hdr.sbp = sense; io_hdr.mx_sb_len = sizeof (sense); io_hdr.timeout = 5000; result = ioctl(fd, SG_IO, &io_hdr); if (result For the sake of completness i'll also provide the code to retrieve the serial number for ATA devices (hda, hdb ...). This will NOT work for USB devices. #include #include #include #include #include #include #include #include #include int main(){ struct hd_driveid *id; char *dev = "/dev/hda"; int fd; fd = open(dev, O_RDONLY|O_NONBLOCK); if(fd config & (1 command_set_1 & 4)) { close(fd); printf("Serial Number: %s\n", id->serial_no); } else { perror("support not removable"); } close(fd); } }
