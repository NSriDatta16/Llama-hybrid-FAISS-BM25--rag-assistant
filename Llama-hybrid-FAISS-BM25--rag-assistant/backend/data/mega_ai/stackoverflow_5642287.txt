[site]: stackoverflow
[post_id]: 5642287
[parent_id]: 5642140
[tags]: 
You need to use a getter and a setter for your object. One way is to use getter/setter functions directly: var foo = function() { this.setting = false; this.getSetting = function() { return this.setting; } this.setSetting = function(val) { this.setting = val; this.refresh(); } this.refresh = function() {...} } If you want to use foo.setting transparently as an attribute, there are language constructs for that, but unfortunately they are not interoperable across browsers. In somewhat of a throwback to 3 years ago, there's one method supported by Mozilla, Safari, Chrome and Opera and another method for Internet Explorer. This is the standard method: http://robertnyman.com/2009/05/28/getters-and-setters-with-javascript-code-samples-and-demos/ IE9 has something else, and I'm not sure if it even works for non-DOM objects.
