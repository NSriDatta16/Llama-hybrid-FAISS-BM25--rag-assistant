[site]: stackoverflow
[post_id]: 1082378
[parent_id]: 
[tags]: 
what is the basic use of aligned_storage?

What is the basic usage of std::tr1::aligned_storage ? Can it be used as auto memory for a data type Foo like the one below? struct Foo{...}; std::tr1::aligned_storage ::value >::type buf; Foo* f = new (reinterpret_cast (&buf)) Foo(); f->~Foo(); If so, what about storing multiple Foo in the buf like, std::tr1::aligned_storage ::value >::type buf; Foo* p = reinterpret_cast (&buf); for(int i = 0; i!= 5; ++i,++p) { Foo* f = new (p) Foo(); } Are they valid programs? Is there any other use case for it ? Google search only yields the documentation about aligned_storage, but very little about the usage of it.
