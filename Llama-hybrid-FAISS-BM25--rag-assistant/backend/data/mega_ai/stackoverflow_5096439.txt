[site]: stackoverflow
[post_id]: 5096439
[parent_id]: 5096371
[tags]: 
That description of boxing is inaccurate. The object created isn't just an instance of the bare System.Object ; each value type effectively has its own "hidden" corresponding reference type which is just a class deriving from ValueType implementing the same interfaces as the value type, and with a field of the type of the value type. That's certainly how I think of it, at least, and it's roughly how the CLI spec describes it. System.Object itself doesn't have any storage for this. I'd also want to correct the "storing the variable" part - boxing stores the value in an object. That value might be the value of a variable, or the result of a method call, or whatever. Of course for reference types, boxing isn't required at all. You really need to distinguish between a reference and an object though - once you've got the two clear in your mind, most other things follow fairly easily. Then remember that the value of a variable is never an object - it's only ever a value type value or a reference (or a pointer :) (Oh, and this is covered somewhat in C# in Depth, but not in great detail. You might be interested in Eric Lippert's post "The Truth About Value Types" though.)
