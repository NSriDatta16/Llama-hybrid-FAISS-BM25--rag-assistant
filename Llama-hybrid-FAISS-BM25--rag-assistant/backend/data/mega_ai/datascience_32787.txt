[site]: datascience
[post_id]: 32787
[parent_id]: 
[tags]: 
Changing multiple models into 1 model

I am working for a recruitment company on developing machine learning algorithms to automatically classify job applicants as either to be interviewed or not be interveiwed. The data is highly imbalanced (i.e most applicants will not be interviewed.) Currently, to do this we use a machine learning model per job. We feed it examples of applicants with their status. However, this has generally low performance due to the small size of the training dataset. A potential improvement on this approach could be creating a single model which takes in as input information on the applicant and information on requirements of the job and then predicting whether or not to interview. Is this approach likely to work and a technique that is used/has been researched in any context? Note: the actual problem I am working on is to do with classifying publications for inclusion in medical systematic reviews. The 'different jobs' represent different review topics, the 'job requirements' are the criteria for inclusion and each 'applicant' is actually a medical publication. I used this example as it is comparable and requires less domain expertise to understand.
