[site]: stackoverflow
[post_id]: 3064985
[parent_id]: 3063879
[tags]: 
You can also leverage SQL 2005's pivoting functions to achieve what you want. This way you don't need to hard code any questions as you do in cross-tabulation. Note that I called the source table "mytable" and I used common table expressions for readability but you could also use subqueries. WITH unpivoted AS ( SELECT id, value, question FROM mytable a UNPIVOT (value FOR question IN (quality,speed) ) p ) ,counts AS ( SELECT question, value, count(*) AS counts FROM unpivoted GROUP BY question, value ) , repivoted AS ( SELECT question, counts, [1], [2], [3] FROM counts PIVOT (count(value) FOR value IN ([1],[2],[3])) p ) SELECT question, sum(counts*[1]) AS [1], sum(counts*[2]) AS [2], sum(counts*[3]) AS [3] ,sum(counts*[1]) + 2*sum(counts*[2]) + 3*sum(counts*[3]) AS Total FROM repivoted GROUP BY question Note if you don't want the breakdown the query is simpler: WITH unpivoted AS ( SELECT id, value, question FROM mytable a UNPIVOT (value FOR question IN (quality,speed) ) p ) , totals AS ( SELECT question, value, count(value)*value AS score FROM unpivoted GROUP BY question, value ) SELECT question, sum(score) AS score FROM totals GROUP BY question
