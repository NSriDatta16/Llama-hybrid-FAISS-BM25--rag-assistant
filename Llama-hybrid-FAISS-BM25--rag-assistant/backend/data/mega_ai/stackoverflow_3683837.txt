[site]: stackoverflow
[post_id]: 3683837
[parent_id]: 3680883
[tags]: 
instanceofTom's comment nailed it - Different languages have different definitions of package and module. Therefore there's no language agnostic answer to this question. I'll try to answer it from the perspective of some of the languages I know: Java: It has a concept of package s, which are basically just a mechanism for organizing Java classes, interfaces etc into namespaces. They require hierarchical structure. package s don't have first class status. It might also be worth noting that superpackage s proposed for Java 7 are also sometimes referred to as module s. Modula: module s, same in concept to Java's package s. Don't require hierarchical structure. C#: namespaces , same in concept to Java's package s. Don't require hierarchical structure. C++: namespaces , As the name indicates, these are just namespaces. Don't require hierarchical structure. Haskell: module s, same in concept to Java's package s. Scala: package s in Scala are same as package s in Java, except that they don't require hierarchical structures. A few more restrictions like one-public-class-per-file have also been relaxed. object s in Scala are also referred to as modules, and they also enjoy the first-class status. F#: namespaces in F# are same as C# namespace s. Besides namespace s, F# also has modules which are implemented at CLR level as .NET classes with static methods. They aren't first-class entities.
