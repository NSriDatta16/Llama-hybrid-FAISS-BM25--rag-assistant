[site]: crossvalidated
[post_id]: 574670
[parent_id]: 391737
[tags]: 
The first step is to organise all of your historical data and clean it - you say you have inconsistent reporting due to network problems, this will lead to gaps in your historical dataset which will need to be imputed. The method by which you choose to do this will wildly vary depending on the size of the gaps. From there you would need to decide on what features might influence rainfall at time $t+1$ - maybe you could use temperature, cloud cover, humidity, lagged features (rainfall at $t_{t-1}$ may influence rainfall at time $t$ ) etc... From there it becomes a machine learning problem where you will aim to build a model(s) to forecast raincover - this can be done in Python or R. Finally you move onto deployment - you may only want to forecast the days raincover in the morning and so this is fairly easy to do with a simple script that you manually enter your features into and the model spits a forecast back out or you could go the more complex route of hosting your model and feeding it a constant stream of data to get continuous predictions - This is a major can of worms however. Those are the broad-strokes, you could just open source your data on somewhere like Kaggle and have the open-source community build out your model for you and you merely have to use it to predict!
