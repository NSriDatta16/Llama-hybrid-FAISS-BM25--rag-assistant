[site]: stackoverflow
[post_id]: 1227213
[parent_id]: 874581
[tags]: 
I see this question is already answered, but I noticed that Robert commented that he was hoping for an open source solution. I'd recommend using Glazed Lists' Separator list, the API for which you can be found here: http://publicobject.com/glazedlists/glazedlists-1.8.0/api/ca/odell/glazedlists/SeparatorList.html Here's some sample code that will produce a list of items grouped by their first letter: alt text http://img300.imageshack.us/img300/8977/separatorlist.png public class SeparatorListTest { private static Comparator createComparator() { return new Comparator () { public int compare(String stringOne, String stringTwo) { return stringOne.substring(0,1).compareTo(stringTwo.substring(0,1)); } }; } private static ListCellRenderer createListCellRenderer() { return new DefaultListCellRenderer() { @Override public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) { JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus); if (value instanceof SeparatorList.Separator) { SeparatorList.Separator separator = (SeparatorList.Separator) value; label.setText(separator.getGroup().get(0).toString().substring(0,1)); label.setFont(label.getFont().deriveFont(Font.BOLD)); label.setBorder(BorderFactory.createEmptyBorder(0,5,0,0)); } else { label.setFont(label.getFont().deriveFont(Font.PLAIN)); label.setBorder(BorderFactory.createEmptyBorder(0,15,0,0)); } return label; } }; } public static void main(String[] args) { EventList rawList = GlazedLists.eventListOf( "apple", "appricot", "acorn", "blueberry", "coconut", "chesnut", "grape"); SeparatorList separatorList = new SeparatorList (rawList, createComparator(), 1, 1000); JList list = new JList(new EventListModel (separatorList)); list.setCellRenderer(createListCellRenderer()); JScrollPane scrollPane = new JScrollPane(list); scrollPane.setBorder(null); JFrame frame = new JFrame(); frame.add(scrollPane, BorderLayout.CENTER); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setSize(200,200); frame.setLocationRelativeTo(null); frame.setVisible(true); } }
