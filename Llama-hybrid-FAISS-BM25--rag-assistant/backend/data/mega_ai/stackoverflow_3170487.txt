[site]: stackoverflow
[post_id]: 3170487
[parent_id]: 3155752
[tags]: 
Well, I don't think anyone mentioned components... this is really where the re-usable stuff should go in CakePHP, at least in my opinion, as I see it, the controller is unique, as is the model, and the component is where you put re-usable code to be called by the controllers. It really depends on what you're trying to do, if you are just re-using code within a class (where it doesn't have any real utility outside of that class), then don't bother with a component, just use a function in the class.. however, when you find yourself using a function that is approximately the same in more than one controller, then put it into a class.. IMO the best thing is to just always try to break your classes into logical functions as you create them and then only worry about creating a component later on, out of a function in the class, meaning that if you aren't sure if you are going to re-use something, don't spend the extra time making it a component at first as that can easily be done later (but just takes a bit more work / thinking it through)... if you know ahead of time you are going to be reusing a function then just go ahead and put it into a component to begin with. (another thing in Cakephp that is great is that within the folders for model, controller, component... you can make your own folders and put files into them without cakephp caring where they are, as long as they are in the overall correct directory (i.e. controller, if its a controller) so, if you have a bunch of controllers that, say are for doing an action that you think of as "updating user profile information" then you just create a folder for this and put all those in there and you can do the same for components that relate to this (within the component directory)... but when you call a controller in this folder, you don't have to reference the folder in the calling url.. something I find very handy as it saves a lot of tedious work while allowing you to keep your class files very organized)
