[site]: crossvalidated
[post_id]: 554111
[parent_id]: 554065
[tags]: 
Dave Harris gave a detailed answer (+1), so let me just give a more general comment. You seem to worry about computational complexity, why? This should never be your biggest concerns. In practice, for simple models such as linear regression more computationally demanding method on a modern computer would usually run few seconds, maybe minutes, slower than the less demanding one. It could make a visible difference for more complicated models where the training could take hours or days. In both cases you should however ask yourself what is most important for you for the particular problem? For example, if you have strict business requirements for the algorithm to return predictions in milliseconds, than you would worry about computational complexity and discard any demanding algorithm. On another hand, if you have a research project where in two years you need to write a report and your model would train for a week non stop, it is likely not a major problem. Many computationally expensive algorithms have additional merits, for example, non-parametric models would not make distributional assumptions that are not appropriate for your data, obtaining uncertainty estimates as with Bayesian models, more accurate results, etc.
