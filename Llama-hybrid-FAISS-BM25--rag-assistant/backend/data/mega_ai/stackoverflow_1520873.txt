[site]: stackoverflow
[post_id]: 1520873
[parent_id]: 1520423
[tags]: 
The best-known (to me at least!) time series database is Fame but it's expensive and I strongly doubt that there's anything like, say, an ActiveRecord implementation for it. Unless it's changed a lot in the 10 or so years since I last touched it, it isn't SQL-friendly at all. With a fairly tightly-focused application, you can take a more flexible view of your data. For example, consider what is the information that you're actually looking to store? Is it the atomic price/hi/lo/close/vol/whatever, or is it more appropriately a time series of such values? If you always want to view the series, store a series per row, not a value. Throwing a few ideas out here... How might it look if you stored a year or a month of a single value for a single stock in one row? Maybe as an XML string, or JSON or something more terse of your own devising. Compressed CSV, perhaps? That ought to fit a month's values into a 255-character column. (Use something like Huffman coding to do the encoding, perhaps - a single dictionary ought to work for all instances of such similar data). You can still hold a horizontal view as well: with the extremely low update rate you'll have (should only be data fixes, I'd guess) you can probably stand to build that stuff. There's an obvious downside to this: you'll have a bunch of extra work to do. I don't have any personal experience, but MogoDB claims to offer relational-style flexibility with key-value performance. As mentioned elsewhere key-value database might be worth looking at: Tokyo Cabinet , CouchDB or one of the others again, perhaps, with concatenated value for the time series.
