[site]: crossvalidated
[post_id]: 17547
[parent_id]: 17402
[tags]: 
Because this question is receiving answers that vary from astronomically small to almost 100%, I would like to offer a simulation to serve as a reference and inspiration for improved solutions. I call these "flame plots." Each one documents the dispersion of genetic material within a population as it reproduces in discrete generations. The plots are arrays of thin vertical segments depicting people. Each row represents a generation, with the starting one at the top. The descendants of each generation are in the row immediately beneath it. At the beginning, just one person in a population of size $n$ is marked and plots as red. (It's hard to see, but they are always plotted at the right of the top row.) Their direct descendants are likewise drawn in red; they will show up in completely random positions. Other descendants are plotted as white. Because the population sizes can vary from one generation to the next, a gray border at the right is used to fill empty space. Here is an array of 20 independent simulation results. The red genetic material eventually died out in nine of these simulations, leaving survivors in the remaining 11 (55%). (In one scenario, the bottom left, it looks like the entire population eventually died out.) Wherever there were survivors, though, almost all the population contained the red genetic material. This provides evidence that the chance of a randomly selected individual from the last generation containing the red gene is about 50%. The simulation works by randomly determining a survivorship and a mean birth rate at the beginning of each generation. Survivorship is drawn from a Beta(6,2) distribution: it averages 75%. This number reflects both mortality before adulthood and those people not having any children. Birth rate is drawn from a Gamma(2.8, 1) distribution, so it averages 2.8. The result is a brutal story of insufficient reproductive capacity to compensate for generally high mortality. It represents an extremely pessimistic, worst-case model--but (as I have suggested in comments) the ability of the population to grow is not essential. All that matters in each generation is the proportion of red within the population. To model reproduction, the current population is thinned down to the survivors by taking a simple random sample of the desired size. These survivors are randomly paired (any odd survivor left over after pairing doesn't get to reproduce). Each pair produces a number of children drawn from a Poisson distribution whose mean is the generation's birth rate. If either of the parents contains the red marker, all the children inherit it: this models the idea of direct descent through either parent. This example starts with a population of 512 and runs the simulation for 11 generations (12 rows including the start). Variations of this simulation starting with as few as $n=8$ and as many as $2^{14} = 16,384$ people, using different amounts of survivorship and birth rates, all exhibit similar characteristics: by the end of $\log_2(n)$ generations (nine in this case), there's about a 1/3 chance that all the red has died out, but if it hasn't, then the majority of the population is red. Within two or three more generations, almost all the population is red and will remain red (or else the population will die out altogether). A survivorship of 75% or less in a generation isn't fanciful, by the way. In late 1347 rats infested with bubonic plague first made their way from Asia to Europe; during the next three years, somewhere between 10% and 50% of the European population died as a result. The plague recurred almost once a generation for hundreds of years afterwards (but usually not with the same extreme mortality). Code The simulation was created with Mathematica 8: randomPairs[s_List] := Partition[s[[Ordering[RandomReal[{0, 1}, Length[s]]]]], 2]; next[s_List, survive_, nKids_] := Flatten[ConstantArray[Max[#], RandomVariate[PoissonDistribution[nKids]]] & /@ randomPairs[RandomSample[s, Ceiling[survive Length[s]]]]] Partition[Table[ With[{n = 6}, ArrayPlot[NestList[next[#, RandomVariate[BetaDistribution[6, 2]], RandomVariate[GammaDistribution[3.2, 1]]] &, Join[ConstantArray[0, 2^n - 1], ConstantArray[1, 1]], n + 2], AspectRatio -> 2^(n/3)/(2 n), ColorRules -> {1 -> RGBColor[.6, .1, .1]}, Background -> RGBColor[.9, .9, .9]] ], {i, 1, 20} ], 4] // TableForm
