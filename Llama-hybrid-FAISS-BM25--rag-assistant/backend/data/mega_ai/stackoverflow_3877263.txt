[site]: stackoverflow
[post_id]: 3877263
[parent_id]: 
[tags]: 
Magento - extending the Mage_Catalog_Model_Resource_Eav_Mysql4_Product_Collection class

OK, so this is leading on from another question I asked here recently. Basically, I want to extend the Mage_Catalog_Model_Resource_Eav_Mysql4_Product_Collection class, so I can add some extra filters for the product collections that can be re-used throughout my store (such as best-selling). This is meant to replace the following code, which I currently use, which is in my template.phtml file: $_bs_productCollection = Mage::getResourceModel('reports/product_collection') ->addAttributeToSelect('name') ->addAttributeToFilter('visibility', $visibility) ->addOrderedQty() ->setOrder('ordered_qty', 'desc') ->setPageSize(6); $_bs_productCollection->load(); So, I set up my module, and it's loading (it shows in the admin/system/config/advanced). Folder structure as follows: etc/modules/Samsmodule.xml local/Samsmodule local/Samsmodule/Catalog local/Samsmodule/Catalog/etc local/Samsmodule/Catalog/etc/config.xml local/Samsmodule/Catalog/Model local/Samsmodule/Catalog/Model/Resource/Eav/Mysql4/Product/Collection.php local/Samsmodule/Catalog/Helper (not sure if this is needed or not) My Samsmodule.xml is: true local My config.xml is: 0.1.0 Samsmodule_Catalog_Model_Resource_Eav_Mysql4_Product_Collection And my Collection.php is: addAttributeToSelect($attribute)->addOrderedQty()->setOrder('ordered_qty', 'desc')->addAttributeToFilter('visibility', $visibility)->addCategoryFilter($_category)->setPageSize($no_of_items); return $this; } } And then from my template.phtml I call it like so: $_bs_productCollection = Mage::getResourceModel('reports/product_collection') ->filterbyBestSelling('name',$visibility,$_category,6); But it's not working - what am I missing? If I just add the code from my Collection.php to the bottom of my core Collection.php file, and use the same call, it works fine.
