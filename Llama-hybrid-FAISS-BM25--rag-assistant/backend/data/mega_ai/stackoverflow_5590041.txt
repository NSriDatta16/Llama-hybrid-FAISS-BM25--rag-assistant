[site]: stackoverflow
[post_id]: 5590041
[parent_id]: 5280175
[tags]: 
nanothief, first you would have to consult your C compiler to compile your C code into a library. For example, assuming the function above is in a file named MyLib.c, and assuming you use GCC: $ gcc -c MyLib.c ... which results in MyLib.o object file $ gcc -shared -o MyLib.so MyLib.o ... which results in MyLib.so shared object, which is your library file (but keep in mind that while this library may compile fine for me in my environment, it may not work for you in your environment). Then, in your Ruby code, you would need to load the FFI gem with: require 'ffi' However, the beauty of using the FFI/Ruby approach is that you do not need to make assumptions about the your gem users' environment. Hence, in most cases, the library which you load with ffi_lib is expected to be already compiled and existing somewhere on the library path of your gem user's machine. With a C extension, you would have to package up the C source with your gem and have your gem users compile the C source themselves. This might not work if your users do not have access to a C compiler for their environment, or if they are using JRuby (only has limited support for C extentions, IIRC). If you are interested, you could have a look at this gem I wrote that leverages FFI .
