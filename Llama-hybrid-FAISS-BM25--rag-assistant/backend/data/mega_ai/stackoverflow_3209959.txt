[site]: stackoverflow
[post_id]: 3209959
[parent_id]: 3207976
[tags]: 
At work we manage several clocks at once, not only time zones but also some more esoteric clocks used for spacecraft navigation. The only things that really matter are: that you are consistent with ONE AND ONLY ONE CLOCK , whichever you pick, and that you have the APPROPRIATE CLOCK CONVERSIONS for when you need a VIEW OF TIME in a CLOCK DIFFERENT FROM YOUR ONE AND ONLY ONE CLOCK . So: One and Only One Clock : Pick the simplest one which will solve your problem, most likely this will be UTC (what some people would -incorrectly- call Greenwich, but the point remains: the zero line). Appropriate clock conversions : This depends on your application, but you need to ask and answer the following 2 questions: How much resolution do I need? Do I need to make sure I account for leap seconds? Once you answered, you may be able to pick standard libraries or more estoreric ones. Again, you must ask these questions. View of time : when someone picks a view of time (say, Pacific Time) simply call the appropriate clock conversion on demand. Really, that's it. As for libraries, I use Python for scripting, but NAIF Spice Library for mission design, and in-house code for spacecraft navigation. The difference between them is simply the resolution and the reliability on having accounted for everything you need to account for (Earth rotation, Relativity, time dilation, leap seconds, etc.) Of course, you will pick the library that fits your needs. Good luck. Edit: I forgot to mention: don't try to implement your own time management library - use an off the shelve one. If you try, you may be successful, but your real project will die and you will only have one average date time library to show for it. Maybe I'm being exaggerated, but making a solid, general purpose date time library is far from trivial, i.e., it is a project in itself.
