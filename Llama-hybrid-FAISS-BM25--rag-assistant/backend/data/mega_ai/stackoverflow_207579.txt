[site]: stackoverflow
[post_id]: 207579
[parent_id]: 207512
[tags]: 
There are many many many issues to consider when setting up a roster schedule, so aku's tip about genetic algorithms is the best one. You need a good evaluation function to determine the quality of the roster for such an algorithm, and you can, and should, consider things like the following (but not limited to): have you solved the workload problem with this roster? (ie. do you have enough people at work at all times?) if not, can you live with the consequences? (for hospitals, you might have to postpone lunch 15 min one day in order to have enough people available for it, or just drag it slightly out in time) is the roster a good one, considering things like shift stability for each person, their days off, whether or not they get weekends off with some regularity is the roster legal? taking things like local regulations into account, that regulate things like how much time must pass between one shift and another (downtime), how much can each person work inside a given interval (day, week, month)
