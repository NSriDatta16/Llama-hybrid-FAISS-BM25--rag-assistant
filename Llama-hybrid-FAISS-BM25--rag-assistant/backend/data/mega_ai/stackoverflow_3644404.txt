[site]: stackoverflow
[post_id]: 3644404
[parent_id]: 3644321
[tags]: 
Private/protected methods are used in compiled languages like C++ and Java. If code is compiled instead left in script form these rules are enforceable. And in these languages particularily can hide cumbersome internal or machine level implementations. PHP only has these functions, because its developers thought the lack of protected/private methods was meant when people were deriding PHP4 as not being a proper object oriented language. The use of encapsulation as design concept in PHP is undisputed. The use of these language constructs is however not necessary, and can easily be removed in source code anyway. But in lieu of proper library documentation or if coprogrammers don't honor coding style, it's useful to restrict access. So, in conclusion: technical use case meager, encouraging to use designated interfaces to abstract processes okay. Often however it is more senseful to design APIs in a way that makes all desirable functionality and data easily available, so the temption to access extraneous interna is reduced. The more you expose, the more difficult it gets to change internal processing later. The more inherent data your expose, the less workarounds or convoluted object structures arise.
