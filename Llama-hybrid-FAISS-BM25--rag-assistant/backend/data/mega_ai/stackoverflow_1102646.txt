[site]: stackoverflow
[post_id]: 1102646
[parent_id]: 1102592
[tags]: 
I would have thought that it would be better to simply create a test that would make it easy for you to put developers into different 'skill buckets'. Why not have three or four sections or features that the developer must 'layer' features on top one another to show their programming and design skills. Part 1 : Implement x easy difficulty features. Part 2 : Implement x medium difficulty features. Part 3 : Implement x difficult features. Part 4 : Implement x very difficult features. And give the developer 1 hour to write the application. Make it realistic that they can implement the features in the given time frame. As Joel and Jeff say on the Stackoverflow podcast, there is a direct correlation between developer skill and speed. Think about the way exams are structured? We can all get 100% of the questions correct in any exam we sit if we had infinite time, but in 1 hour? This way, If a developer takes your test and only implements features up to Section 2 in the time period, then you should have a safe indication that they are not suitable for the job. Section 3 features all done then they are good enough and section 4 complete would indicate that they are very experienced and a slight cut above the rest. However I would also look at the overall polish that the developer has given to the code. If they implemented all features up to section 4, but poorly, then they are also not going to be someone you want. IF a developer only did up to section 3 but implemented everything very elegantly, then I would want to hire them. I also think that 1 hour is perhaps a little too long. I would aim for 10-40 minutes obviously you may need to cut out section 4 that I proposed.
