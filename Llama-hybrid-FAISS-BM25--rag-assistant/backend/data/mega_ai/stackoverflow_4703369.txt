[site]: stackoverflow
[post_id]: 4703369
[parent_id]: 4703301
[tags]: 
If you are talking about internal server architecture, there are many considerations. Is there any security? Is the retrieval of an image subject to any business logic? What web server will you be using? What type of request distribution are you looking at (will you be serving 1 of 10 images 50% of the time and 1 of 100,000 the other 50%? Let's say no security, and you are using a simple web server that is not going to do any caching for you. That (by which I mean caching) is going to be your main issue. You will want to write an isapi filter/module/whatever to keep your images with the highest x% hits in memory. x will depend on your distribution pattern. As far as storage, do not store your images in a database. File systems are very very good at traversing directory structures. Just put your "hello.png" image in an 'images/png/h/e/l' directory using how ever number of letter directories you find fits you library to
