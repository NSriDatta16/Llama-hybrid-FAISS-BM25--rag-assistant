[site]: stackoverflow
[post_id]: 2669909
[parent_id]: 2669770
[tags]: 
To get access to N-th index you could use function get as follows: std::pair ::type::const_iterator, hmap::nth_index ::type::const_iterator > pit = hmap.get ().equal_range(boost::make_tuple( partnerAge, false ) ); equal_range returns pair of iterators of N-th index. You will get range of elements that are satisfy the specified condition since your composite key is not unique. To iterate through that range you could use loop from the first iterator to the second iterator. Consider using named indexes to use them as get () , because specifying actual number is not very readable. count has syntax similar to equal_range : size_t cnt = hmap.get ().count(boost::make_tuple( partnerAge, false ) );
