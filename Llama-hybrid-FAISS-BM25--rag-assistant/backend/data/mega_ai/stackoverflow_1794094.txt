[site]: stackoverflow
[post_id]: 1794094
[parent_id]: 1793008
[tags]: 
If I understand correctly I built a functional copy of the code-fragment and fixed it to correctly handle the type conversion. You really only missed two things: . #1 - You were indexing into the columns by ordinal and using that information to obtain the column type. Then setting the information you indexed the column my name. I corrected this with the introduction of the 'columnName' variable below. . #2 - To properly convert the string input to the desired column type you only need to use the System.Convert.ChangeType(object, Type) method as shown below. static void Main() { DataSet ds = new DataSet(); DataTable dt = ds.Tables.Add("Repartition"); DataColumn col; col = dt.Columns.Add("ID_USAGER", typeof(int)); col = dt.Columns.Add("TestString", typeof(string)); col = dt.Columns.Add("TestInt", typeof(int)); col = dt.Columns.Add("TestDouble", typeof(double)); string testData = "TestString;TestInt;TestDouble"; testData += Environment.NewLine + "Test1;1;1.1"; testData += Environment.NewLine + "Test2;2;2.2"; Test(ds, new StringReader(testData)); } public static void Test(DataSet thisDataSet, StringReader sr) { string[] strDataLines = sr.ReadLine().Split(';'); string strReadDataLine; strReadDataLine = sr.ReadLine(); while (strReadDataLine != null) { string[] strReadDataLineSplited = strReadDataLine.Split(';'); DataRow thisRow = thisDataSet.Tables["Repartition"].NewRow(); DataTable item = thisDataSet.Tables["Repartition"]; for (int i = 0; i
