[site]: stackoverflow
[post_id]: 5094897
[parent_id]: 4396203
[tags]: 
Each row of the DataGrid has it's DataContext set to that object. If the ItemSource for the grid is an ObservableCollection, each row's DataContext is the Organization object. There are two ways to handle this. Create a wrapping or extension ViewModel that exposes the command. Then the command should fire.Here is some psuedo code. public class OrganizationExtensionViewModel { /// Private currentOrginization property. /// private Organization currentOrginization; public Organization CurrentOrganization { get { return this.currentOrginization; } set { if (this.currentOrginization != value) { this.currentOrginization = value; this.RaisePropertyChanged("CurrentOrganization"); } } } public ViewModelCommand ViewOrganizationCommand { get; set; } public OrganizationExtensionViewModel(Organization o) { this.CurrentOrganization = o; this.ViewOrganizationCommand = new ViewModelCommand(this.ViewOrgnaizationClicked); } } Define the ViewModel in the xaml as a StaticResource and refer to it as the binding path. ... In the grid
