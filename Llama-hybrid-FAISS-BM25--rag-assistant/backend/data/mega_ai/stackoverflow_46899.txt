[site]: stackoverflow
[post_id]: 46899
[parent_id]: 46863
[tags]: 
At first glance, the solution is to use reference modification to STRING together the two strings, including the space. The problem is that you must know how many trailing spaces are present in FIRST-NAME, otherwise you'll produce something like 'JOHNbbbbbbbbbbbbDOE', where b is a space. There's no intrinsic COBOL function to determine the number of trailing spaces in a string, but there is one to determine the number of leading spaces in a string. Therefore, the fastest way, as far as I can tell, is to reverse the first name, find the number of leading spaces, and use reference modification to string together the first and last names. You'll have to add these fields to working storage: WORK-FIELD PIC X(15) VALUE SPACES. TRAILING-SPACES PIC 9(3) VALUE ZERO. FIELD-LENGTH PIC 9(3) VALUE ZERO. Reverse the FIRST-NAME MOVE FUNCTION REVERSE (FIRST-NAME) TO WORK-FIELD. WORK-FIELD now contains leading spaces, instead of trailing spaces. Find the number of trailing spaces in FIRST-NAME INSPECT WORK-FIELD TALLYING TRAILING-SPACES FOR LEADING SPACES. TRAILING-SPACE now contains the number of trailing spaces in FIRST-NAME. Find the length of the FIRST-NAME field COMPUTE FIELD-LENGTH = FUNCTION LENGTH (FIRST-NAME). Concatenate the two strings together. STRING FIRST-NAME (1:FIELD-LENGTH – TRAILING-SPACES) “ “ LAST-NAME DELIMITED BY SIZE, INTO FULL-NAME.
