[site]: stackoverflow
[post_id]: 975809
[parent_id]: 974511
[tags]: 
The List error happening due to the semantics of lists. It's tricky because bags also get mapped to IList by default, but this is due to the lack of a collection type with "bag" semantics in the .NET framework. In a "bag," conceptually, there is no order because items are just thrown into the bag and removed in any order and could easily be moved around inside the bag. A list, however, is inherently ordered and indexed (think of it as an array with additional semantics, so each element has an unique index value). The error message you are getting indicates that NHibernate wants a column that stores the index value for each element (so it must be unique and, since it's an IList , ant integer value). Since you don't appear to have an index column, you'll have to order them another way, perhaps by adding an ORDER BY clause in your query. As for the first issue, you might need to rethink how you are working with this. Actually, you might be able to leverage NHibernate filters , but I don't have any experience with them to say how it might work out. Your Followers collection is really all users that are related to the Fiche (all User s that reference Fiche ), so it's more like RelatedUsers . Using the Repository Pattern, you could have a method like FindFollowers(Fiche fiche) that would query for all RelatedUsers where the User does not equal the Owner . This pattern might additionally benefit you since you wanted to have the User s be ordered. Something like (C#, Criteria query): session.CreateCriteria(typeof(Fiche)) .CreateCriteria("RelatedUsers", JoinType.InnerJoin) .Add(Restrictions.Not(Restrictions.Eq("Id", fiche.Owner.Id))) .AddOrder(Order.Asc("PropertyNameToOrderBy")) .List ();
