[site]: stackoverflow
[post_id]: 4692020
[parent_id]: 4689670
[tags]: 
You probably want something like: final Session sess = factory.openSession(); try { boolean committed = false; final Transaction tx = sess.beginTransaction(); try { //do some work ... tx.commit(); committed = true; } finally { if (!committed) { tx.rollback(); } } } finally { sess.close(); } I've taken the liberty of rolling back no matter what exception, and avoided the issue about which checked exceptions to declare. As Vincent and Robert's answers mention, using the Execute Around idiom allows you to write the code once (although it's still highly verbose).
