[site]: stackoverflow
[post_id]: 913304
[parent_id]: 913267
[tags]: 
Home is responsible for the creation of the Remote (kind of like its constructor) and LocalHome and Local have the same relationship. In each case the container is giving you a proxy that references the real EJB class that you write. If I had to guess, what the question was looking for was the use of remote for the session bean and local for the entity bean. Anyway, although these concepts can still exists, things have been much better simplified in EJB3. EDIT: In response to the comment, with EJB3, the bean class itself can implement the remote and the home interfaces directly (for the session beans). They are made EJB's with a single annotation. Stateful beans have a couple more annotations to deal with state issues. Entity beans do not have a Home interface, and do not need a local interface, you can interact with the java object directly. There is an EntityManager that retrieves the right entity beans based on a query, and that EntityManager is injected via an annotation. That kind of sums it up in a paragraph. There are great tutorials on the web for this stuff, but EJBs in general solve a class of problem that is hard to appreciate unless you deal with the problem. They aren't the only way to solve it, but unless you deal with this type of programming, just reading about it won't really help you relate to it.
