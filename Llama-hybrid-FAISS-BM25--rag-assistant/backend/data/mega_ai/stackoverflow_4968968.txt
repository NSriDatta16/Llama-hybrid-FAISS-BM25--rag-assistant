[site]: stackoverflow
[post_id]: 4968968
[parent_id]: 4968795
[tags]: 
IPAddress is not IP+Port. You want IPEndPoint. Example from http://www.java2s.com/Code/CSharp/Network/ParseHostString.htm public static void ParseHostString(string hostString, ref string hostName, ref int port) { hostName = hostString; if (hostString.Contains(":")) { string[] hostParts = hostString.Split(':'); if (hostParts.Length == 2) { hostName = hostParts[0]; int.TryParse(hostParts[1], out port); } } } Edit: Ok, I'll admit that wasn't the most elegant solution. Try this one I wrote (just for you) instead: // You need to include some usings: using System.Text.RegularExpressions; using System.Net; // Then this code (static is not required): private static Regex hostPortMatch = new Regex(@"^(? (?:\[[\da-fA-F:]+\])|(?:\d{1,3}\.){3}\d{1,3})(?::(? \d+))?$", System.Text.RegularExpressions.RegexOptions.Compiled); public static IPEndPoint ParseHostPort(string hostPort) { Match match = hostPortMatch.Match(hostPort); if (!match.Success) return null; return new IPEndPoint(IPAddress.Parse(match.Groups["ip"].Value), int.Parse(match.Groups["port"].Value)); } Note that this one ONLY accepts IP address, not hostname. If you want to support hostname you'll either have to resolve it to IP or not use IPAddress/IPEndPoint.
