[site]: stackoverflow
[post_id]: 5301843
[parent_id]: 5294193
[tags]: 
I know that SQL Server can store a row's data at leaf level in a clustered index. I believe that PostgreSQL doesn't do this. If so, what is its storage paradigm? Unlike SQL Server and other engines, PostgreSQL does not store the id of the transaction that changed the record in the indexes, only in the heap. The indexes just point into the heap (and store the ctid of the appropriate record as a row pointer and hence a part of the key). This means that for each query, even if it could be satisfied by an index lookup, a heap lookup should still be made to ensure the visibility of the data to the current transaction. Thus said, covering indexes are not that useful in PostgreSQL : since heap lookups should be made anyway, the engine can just take all the data from the heap.
