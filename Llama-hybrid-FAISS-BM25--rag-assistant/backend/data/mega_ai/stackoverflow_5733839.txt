[site]: stackoverflow
[post_id]: 5733839
[parent_id]: 5732526
[tags]: 
You can perform hit detection to determine if the CGPoint that represents the tap gesture lies within a shape that is defined by a CGPath . - (id)initWithFrame:(CGRect)frame { ... CGPathRef outline = CGPathCreateMutable(); CGPathMoveToPoint(outline, NULL, 20, 20); // Build up path ... } - (void) touchesBegan:(NSSet*)touches withEvent:(UIEvent*)event { CGPoint point = [[touches anyObject] locationInView:self]; if (CGPathContainsPoint(outline, NULL, point, false) { ... dragIsRespected = YES; } } - (void)touchesMoved:(NSSet*)touches withEvent:(UIEvent*)event { if (dragIsRespected) { ... } } - (void)dealloc { CGPathRelease(outline); ... } The bad thing is that building up the path for complex shapes is tedious. The good thing is that since you're dealing with finger taps, coarse outlines should probably suffice. Plus, this allows your touch target to diverge from the the opaque parts of the image in case you need some additional space to help with usability. It also allows for transparency within the touch target, thus allowing you to have more complex images if necessary. You can get the desired boundary points pretty easily if you just map them out in an image editor.
