[site]: stackoverflow
[post_id]: 1571133
[parent_id]: 1571102
[tags]: 
Using an explicit structure allows you to trade more simple code for more performance. Using the stack for recursion often allows for very elegant and short code. Using an explicit stack usually makes the code (much) more complex but you can save in a couple of places: You don't need to pay for a function/method invocation (very useful for scripted/dynamic languages) You can save only those bits you need. If you use recursion, you must save the whole stack frame (with all local variables, the return address, all parameters). You can look around in your explicit stack (i.e. you can see what happened "two recursions before") which is a bit hard with a normal stack While the real stack can be limited for many reasons, you can allocate as much memory as you need for your implicit stack (or even use a database).
