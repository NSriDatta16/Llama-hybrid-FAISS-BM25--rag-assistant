[site]: stackoverflow
[post_id]: 2143265
[parent_id]: 2143072
[tags]: 
When you subclass UIImageView there are a couple different ways the application can call the object into being. UIImageViews created in Interface Builder are pre-compiled and loaded into memory without calling an -(id)init method. Instead, they call - (void)awakeFromNib after the contents of the nib are loaded into memory. Make sure your class identity is set to your subclass and set userInteractionEnabled in the awakeFromNib method in your subclass. This will allow you to set user interaction without binding. To completely load the UIImageView programmatically, make sure your allocating from the right class. Your code was calling from the UIImageView superclass. - (void)viewDidLoad { foo = [[MyImageView alloc] initWithFrame:CGRectMake(0.0, 45.0, 324, 52.0)]; foo.image = [UIImage imageNamed:@"Picture 1.png"]; [self.view addSubview:foo]; [super viewDidLoad]; } This will call the - (id)initWithFrame from your subclass instead of the superclass and perform your custom code. This also sends the - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event calls to your subclass instead of to the superclass.
