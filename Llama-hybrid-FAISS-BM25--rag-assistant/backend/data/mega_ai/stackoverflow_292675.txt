[site]: stackoverflow
[post_id]: 292675
[parent_id]: 292646
[tags]: 
You can avoid adding event handlers to each list item by adding a single event handler to the containing element (the unordered list) and leveraging the concept of event bubbling. In this single event handler, you can use properties of the event object to determine what was clicked. It appears that you are wanting to map data in an array to list items. While parsing out an array index out of the list item id would work, another approach would be to store a "key" value on the list item as an expando, and use javascript object properties to do a lookup for your data. Partial Example: //oData is a object (eg. var oData = {};) that has been populated with properties //whose value is the desired data (eg. oData["myKey"] = 123;) alert(oData[event.srcElement.key]); // alerts 123 As far as bad effects of the first technique you showed, one bad effect is that with many list items you end up with many event handlers being defined, which at some point would have an impact on performance. Also note that you may be unintentionally creating a global var in your loops by omitting the var keyword for "i".
