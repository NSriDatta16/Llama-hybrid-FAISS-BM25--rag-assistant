[site]: stackoverflow
[post_id]: 3842498
[parent_id]: 3842435
[tags]: 
An index works by allowing the database to organize data around a set of column(s). I'll admit I'm not 100% sure on the technical implementation of this, but it creates a data structure using the values and mapping them to the object ID for each row in a table. (If Im' wrong on this, somebody correct me, though it shouldn't affect the value of my answer as a whole) You try to create an index on anything you're going to be searching frequently, to speed it up. By having an index on partNum then you can find anything by partNum very quickly. the index on partId, partNum , though, would allow for very fast searches on the table where you have to match both columns. Consider the following: SELECT * FROM MyTable WHERE partId = 2 AND partNum = 7 This would use IDX_PART_ID_PART_NUM to do the search, using both values to scan the index, rather than just IDX_PART_NUM . This would still be faster than if you had an index on both columns separately. Essentially, it allows the values of both columns to be indexed together, so for every value of the one, it will know the allowed values of the other, and won't have to do 2 lookups for each query, when it can do one. To answer the question, if you query both columns frequently, then keep the multipart index.
