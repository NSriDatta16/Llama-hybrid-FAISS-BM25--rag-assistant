[site]: crossvalidated
[post_id]: 635774
[parent_id]: 
[tags]: 
Team vectors similar to word vectors for a corpus of text

Is there any way I could iteratively create a set of vectors, similar to vectors when embedding words through word2vec, that could represent vectors between teams, and also capture information about a point differential between teams? Or anything I should look into to possible find an approach to do this? *As an example, say I have 3 teams, team A, team B, and team C. Team A beat team B by 30 points. Team B beat team C by 3 points.* Could I create vectors for these teams that capture that team B and team C are nearly 10 times more similar than Team A is to either team. I have attempted an approach using the python networkx library, where I created a network graph, used transitive closure to fill in unknown distances and then fit a multidimensional scaling transform on the shortest path found for each node pair. However, this above approach produced vectors that did not capture these correct differences between teams. I think this approach may not have been able to capture the inherent deviation present in team scores seen in sports. Additionally, since this approach was not iterative I couldn't start with vectors from a previous year and train them as new game results come in. As an aside, please let me know if I need to change formats, readn any documentation or alter this question/post in any way. Thank you.
