[site]: stackoverflow
[post_id]: 1735457
[parent_id]: 1735394
[tags]: 
Indeed interesting question but I am in doubt if there is adequate answer at all. Here are only obvious factors I see right from the start: Overall design quality . Even if you are new in well designed code you can very quickly identify where you should look to get answers. Project documentation quality . For poor documented projects even developers that are in project from the start can't say anything about some parts. Implementation quality . OK. You have good general architecture, good documentation for interfaces but even one really bad programmer could break all of this. This is because many companies are very strict about code reviews and I think it is the only one technique to prevent such situation. Programmer experience . As you move ahead you see number of 'already known' code "bricks" in software new to you and experience is great help in this so contractors are often very experienced specialists familiar with various approaches and this gives average contractor ability to move much faster then full time programmer which is brilliant but worked 10 years in only 1 project context. General person smartness . My opinion this is really not so important as most of others factors but it is really important. ... but the common problem is often companies hire contractors for some existing software improvement and they simply think this is only about to hang picture on the wall. You should perform some negotiation to force them to understand part of work is to understand what really should be done to meet their requirements at all. And such "learning" requires resources and is part of work itself. But I think it is slightly off-topic for StackOverflow (despite I voted up ;) ). Is it more for Startups discussion?
