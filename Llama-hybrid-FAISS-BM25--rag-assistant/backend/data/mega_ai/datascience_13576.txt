[site]: datascience
[post_id]: 13576
[parent_id]: 
[tags]: 
Selecting the right algorithm for match probability prediction

Looking for assistance kick-starting a new machine learning scenario. In this case I need to pair one entity (ex. person) with a group of entities (ex. other people) given a history of matching patterns over time. For example: Assume we have people who like other people with a combination of traits such as height, weight, education level, etc... This notation of 'like' is bi-directional when calculating probabilities. When a new person arrives I'd like to isolate a group of people (ranked by probability) to recommend them too. In this case the input would be a single person with all their traits and the output would be a list of people with ranked probabilities of matching. There seems to be two main sets of data Known people Traits known people have liked or not with the traits of people they have liked or not I am relatively new so not sure which types of training model to use. For example, is this something that can be accomplished most reasonable with a linear regression model, binary classification, boost-tree's, matchbox, etc, etc, etc..? Possibly I need a combination. I am using the Azure Machine Learning studio which has lots of options but I am just not sure where to start in this scenario. Any suggestions or pointers would be appreciated in helping
