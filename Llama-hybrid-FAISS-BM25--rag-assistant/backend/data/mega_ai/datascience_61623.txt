[site]: datascience
[post_id]: 61623
[parent_id]: 
[tags]: 
Best approach/model to match keywords to sentences

I'm very new to machine learning and AI stuff. I have the following problem I want to tackle and would like some advice as to how I should approach it: Basically, I want to take some keywords and produce a sentence or list of sentences where the keywords are most relevant: []string -> []string . The keywords could be any word, e.g. cat, dog, lemon, tea. and they would return a set of sentences that have been learned before. So for example: dog -> its a nice day cat -> its not a nice day lemon -> its a normal day tea -> hello, world! Would be a very basic data set. And then I would enter the keywords [ dog, tea ] and be given back [ "it's a nice day", "hello, world!" ] . In addition I would want to be able to train this model with new words and sentences. At first glance I thought I could use a naive bayesian classifier? Though the model requires learning, and to my limited understanding of ML, I figure this would be some kind of neural network classifier. Some research leads to me that NN are only capable of dealing with floating point/integer inputs? So I would have to map the strings somehow to this. Which is apparently called a "sequence to sequence" model. Is this the way I would approach this problem? A sequence-to-sequence neural network? Or am I completely off the ball here.
