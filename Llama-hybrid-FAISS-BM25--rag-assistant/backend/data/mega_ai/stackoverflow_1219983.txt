[site]: stackoverflow
[post_id]: 1219983
[parent_id]: 1219860
[tags]: 
EDIT: This answer was posted a long ago, and the htmlDecode function introduced a XSS vulnerability. It has been modified changing the temporary element from a div to a textarea reducing the XSS chance. But nowadays, I would encourage you to use the DOMParser API as suggested in other anwswer . I use these functions: function htmlEncode(value){ // Create a in-memory element, set its inner text (which is automatically encoded) // Then grab the encoded contents back out. The element never exists on the DOM. return $(' ').text(value).html(); } function htmlDecode(value){ return $(' ').html(value).text(); } Basically a textarea element is created in memory, but it is never appended to the document. On the htmlEncode function I set the innerText of the element, and retrieve the encoded innerHTML ; on the htmlDecode function I set the innerHTML value of the element and the innerText is retrieved. Check a running example here .
