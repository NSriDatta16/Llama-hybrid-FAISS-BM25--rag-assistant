[site]: stackoverflow
[post_id]: 1220665
[parent_id]: 1215949
[tags]: 
Here's what we ended up doing. I made a huge table to collect everyone's ratings at http://etherpad.com/sugarorgy (Revision 25, just in case it gets vandalized with me adding this public link to it) and then used the following Perl script to parse the data into a CSV file: #!/usr/bin/env perl # Grabs the cupcake data from etherpad and parses it into a CSV file. use LWP::Simple qw(get); $content = get("http://etherpad.com/ep/pad/export/sugarorgy/latest?format=txt"); $content =~ s/^.*BEGIN_MAGIC\s*//s; $content =~ s/END_MAGIC.*$//s; $bakery = "none"; for $line (split('\n', $content)) { next if $line =~ /sar kri and deb/; if ($line =~ s/bakery\s+(\w+)//) { $bakery = $1; } $line =~ s/\([^\)]*\)//g; # strip out stuff in parens. $line =~ s/^\s+(\w)(\w)/$1 $2/; $line =~ s/\-/\-1/g; $line =~ s/^\s+//; $line =~ s/\s+$//; $line =~ s/\s+/\,/g; print "$bakery,$line\n"; } Then I did the averaging and whatnot in Mathematica: data = Import["!~/svn/sugar.pl", "CSV"]; (* return a bakery's list of ratings for the given type of cupcake *) tratings[bak_, t_] := Select[Drop[First@Select[data, #[[1]]==bak && #[[2]]==t && #[[3]]=="g" &], 3], #!=-1&] (* return a bakery's list of ratings for the given cupcake attribute *) aratings[bak_, a_] := Select[Flatten[Drop[#,3]& /@ Select[data, #[[1]]==bak && #[[3]]==a&]], #!=-1&] (* overall rating for a bakery *) oratings[bak_] := Join @@ (tratings[bak, #] & /@ {"V", "C", "R", "W"}) bakeries = Union@data[[All, 1]] SortBy[{#, oratings@#, Round[Mean@oratings[#], .01]}& /@ bakeries, -#[[3]]&] The results are at the bottom of http://etherpad.com/sugarorgy .
