[site]: stackoverflow
[post_id]: 453886
[parent_id]: 453870
[tags]: 
Estimating how long something like that might take is dependent on many different factors. For example, an experienced programmer can easily knock out a simple arithmetic expression evaluator in a couple of hours, with unit tests. But a novice programmer may have to learn about parsing techniques, recursive descent, abstract representation of expression trees, tree-walking strategies, and so on. This could easily take weeks or more, just for arithmetic expressions. However, don't let that discourage you. As Jeff and Joel were discussing with Eric Sink on a recent Stack Overflow podcast , writing a compiler is an excellent way to learn about many different aspects of programming. I've built a few compilers and they are among my most memorable programming projects. Some classic books on building compilers are: Compilers: Principles, Techniques, and Tools (also known as The Dragon Book) The Structure and Interpretation of Computer Programs (also known as SICP) Algorithms + Data Structures = Programs
