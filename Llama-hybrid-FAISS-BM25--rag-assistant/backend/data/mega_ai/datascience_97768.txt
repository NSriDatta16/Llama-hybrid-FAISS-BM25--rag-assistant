[site]: datascience
[post_id]: 97768
[parent_id]: 97754
[tags]: 
It depends which scenario you chose. When you train any data science model, it won't move anymore. For example, if you train K-Means, you'll get at a result the cendroid of every cluster. If you train a random forest, you'll have as a result your trees. Then, when you apply your model, it gives you an answer according to that. The answer will always be the same, if your entry is the same. So if you trained your model in your 80 samples, after testing it on your 20 remaining, the model remains the same, trained on the 80 samples, and will give the exact same answer if you test it again on the same 20 samples. However, it's possible to re-train your model : You make all your tests with your 80-20, and once you found the good parameters, you retrain a new model on your 100 samples, so it'll be more precise if it has to classify new samples. What you want to do is avoid retraining your model, but include the result of new samples each time you encounter one : that's hard, not all models can do it, and that's not for a starter level at all. It also raises a lot of questions (I won't go into too much details) What I'd suggest you is to manually set a threshold to re-train your model. Example : don't re-train your model until you have 1000 new samples to insert, or only re-train your model each month at a defined date, with the data you know at this time.
