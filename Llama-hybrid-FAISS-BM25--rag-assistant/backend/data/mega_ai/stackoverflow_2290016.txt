[site]: stackoverflow
[post_id]: 2290016
[parent_id]: 
[tags]: 
Git Commit Messages: 50/72 Formatting

Tim Pope argues for a particular Git commit message style in his blog post: http://www.tpope.net/node/106 . Here is a quick summary of what he recommends: First line is 50 characters or less. Then a blank line. Remaining text should be wrapped at 72 characters. His blog post gives the rationale for these recommendations (which I will call “50/72 formatting” for brevity): In practice, some tools treat the first line as a subject line and the second paragraph as a body (similar to email). git log does not handle wrapping, so it is hard to read if lines are too long. git format-patch --stdout converts commits to email — so to play nice it helps if your commits are already wrapped nicely. A point I would like to add that I think Tim would agree with: The act of summarizing your commit is a good practice inherently in any version control system. It helps others (or a later you) find relevant commits more quickly. So, I have a couple of angles to my question: What chunk (roughly) of the “thought leaders” or “experienced users” of Git embrace the 50/72 formatting style? I ask this because sometime newer users don’t know or don’t care about community practices. For those that don’t use this formatting, is there a principled reason for using a different formatting style? (Please note that I’m looking for an argument on the merits, not “I’ve never heard of it” or “I don’t care.”) Empirically speaking, what percentage of Git repositories embrace this style? (In case someone wants to do an analysis on GitHub repositories… hint, hint.) My point here is not to recommend the 50/72 style or shoot down other styles. (To be open about it, I do prefer it, but I am open to other ideas.) I just want to get the rationale for why people like or oppose various Git commit message styles. (Feel free to bring up points that haven’t been mentioned, too.)
