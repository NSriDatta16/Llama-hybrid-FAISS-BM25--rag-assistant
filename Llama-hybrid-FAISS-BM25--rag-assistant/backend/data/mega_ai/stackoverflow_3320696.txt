[site]: stackoverflow
[post_id]: 3320696
[parent_id]: 3320649
[tags]: 
In IL, this is possible. In C#: no. You can use virtual to run a method in a type before that type's ctor, but it is discouraged and risky. But: class Foo { public Foo() { Console.WriteLine("Foo ctor"); SomeMethod(); // BAD IDEA (calling a virtual method in a ctor) } protected virtual void SomeMethod() {} } class Bar : Foo { protected override void SomeMethod() { Console.WriteLine("SomeMethod in Bar"); } public Bar() : base() { /* only to show call order */ Console.WriteLine("Bar ctor"); } } It is a bad idea because you can't guarantee that the subclasses are ready for the method-call.
