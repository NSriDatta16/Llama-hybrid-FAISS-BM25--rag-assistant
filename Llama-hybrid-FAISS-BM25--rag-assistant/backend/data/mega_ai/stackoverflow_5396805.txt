[site]: stackoverflow
[post_id]: 5396805
[parent_id]: 
[tags]: 
Force binding in WPF

I'm writing tests which will check correctness of Binding elements specified in XAML. They work so far, the only issue is that I do not know how to correctly force databinding to happen. Surprisingly it is not enough to simply set something in DataContext , binding won't happen until you show your control/window. Please not that I'm writing 'unit'-tests and I'd like to avoid showing any windows. Take a look at following code: // This is main class in console application where I have all WPF references added public class Program { [STAThread] public static void Main() { var view = new Window(); BindingOperations.SetBinding(view, Window.TitleProperty, new Binding("Length")); view.DataContext = new int[5]; //view.Show(); view.Close(); // Here I'm creating a Window and putting an array as DataContext to that window. I'm binding Window.Title to Array.Length so I expect to see number 5 printed in console. But until I Show window (commented line) I will get empty string. If I uncomment that line then I will receive desired 5 in console output. Is there any way I can make binding happen without showing a window? It is pretty annoying to look at ~20 windows while launching tests. P.S.: I know I can make windows more transparent and etc, but I'm looking for more elegant solution. UPDATE Code above is simplified version of what I really have. In real code I receive a View (some UIElement with bindings) and object ViewModel . I do not know which exactly binding there were set on View , but I still want all of them to be initialized. UPDATE 2 : Answering to the questions regarding what I test and I why. I do not intend to test that classes like Binding , BindingBase , etc are working as expected, I assume they are working. I'm trying to test that in all my XAML files I have written bindings correctly. Because bindings are stringly typed things, they are not verified during compilation and by default they cause only errors in output window, which I'm missing occasionally. So if we take my example from above and if we will made a typo there in binding: {Binding Lengthhh} then my tests will notify you that there is no property with name Lengthhh available for binding. So I have around 100 XAML files and for each XAML I have a test (3-5 lines of code) and after launching my tests I know for sure that there are no binding errors in my solution.
