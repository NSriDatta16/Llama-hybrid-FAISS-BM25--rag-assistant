[site]: crossvalidated
[post_id]: 427918
[parent_id]: 
[tags]: 
Learning to rank for time series with LightGBM data formatting

I have multiple time series, one for each item, say item1, item2,...itemN. N>=500. I have features associated for each of the items and a dependent variable. I am currently studying learning to rank as I believe it would be a fit for my problem. I would like detect the best N performing items in the list at any given moment in time. More specifically I would want to use the LightGBM implementation of LTR. The documentation online is not sufficient for me on how this can be adapted to a problem that does not have queries or documents. The data for training is structured as follows: 0 10:0.89 11:0.75 12:0.01 17:0.45 18:0.91 21:0.78 27:0.72 29:0.77 30:0.76 39:0.65 43:0.79 44:0.88 45:0.88 66:0.64 69:0.25 70:0.41 71:0.83 74:0.79 77:0.70 83:0.56 85:0.72 86:0.93 91:0.35 98:0.70 101:0.96 108:0.20 122:0.86 123:0.19 124:0.47 127:0.43 129:0.05 133:0.45 139:0.92 145:0.47 146:0.58 147:0.63 149:0.84 154:0.73 155:0.50 159:0.31 170:0.90 172:0.67 173:0.40 174:0.79 177:0.88 178:0.55 179:0.52 187:0.21 192:0.48 195:0.59 197:0.83 204:0.80 208:0.50 212:0.82 216:0.29 222:0.48 235:0.22 239:0.88 241:0.21 242:0.40 243:0.69 245:0.77 247:0.76 253:0.55 265:0.70 266:0.27 271:0.34 276:0.58 281:0.91 282:0.75 300:0.43 where I understand that the first value is the rating score and the subsequent values are feature_id:feature_value Also, in the documentation I have found this: For LambdaRank learning, it needs query information for training data. LightGBM uses an additional file to store query data, like the following: 27 18 67 ... It means first 27 lines samples belong to one query and next 18 lines belong to another, and so on. Note: data should be ordered by the query. My question is the following: Where can I find information about how the data should be structured for learning to rank problems, in order to make sure I am able to adapt the LTR to other fields, where there are no documents nor queries.
