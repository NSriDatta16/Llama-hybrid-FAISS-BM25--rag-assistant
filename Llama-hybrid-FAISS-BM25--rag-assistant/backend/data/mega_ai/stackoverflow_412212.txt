[site]: stackoverflow
[post_id]: 412212
[parent_id]: 412019
[tags]: 
Soprano had some nice optimizations your call: public static float Sigmoid(double value) { float k = Math.Exp(value); return k / (1.0f + k); } If you try a lookup table and find it uses too much memory you could always looking at the value of your parameter for each successive calls and employing some caching technique. For example try caching the last value and result. If the next call has the same value as the previous one, you don't need to calculate it as you'd have cached the last result. If the current call was the same as the previous call even 1 out of a 100 times, you could potentially save yourself 1 million calculations. Or, you may find that within 10 successive calls, the value parameter is on average the same 2 times, so you could then try caching the last 10 values/answers.
