[site]: crossvalidated
[post_id]: 629033
[parent_id]: 
[tags]: 
Dealing with conditional heteroskedasticity in dynamic linear model

I'm working on a regression problem and am struggling to figure out how to deal with the conditional heteroskedasticity present in the error terms. I will try and work through what I have done so far, but the end question is : How do I produce valid confidence intervals from a dynamic linear regression where the model errors display conditional heteroskedasticity? The crux of the problem is that I am trying to estimate a beta coefficient between 2 different variables. Some important points: Interpretation of the beta in original units is extremely important, so I want to try and avoid complicated transformations of the data where possible. I eventually want to obtain valid confidence intervals on the regression parameters. Visualising the data : We have 2, very clearly non-stationary time series (X, the independent variable, and Y, the dependant variable). Taking differences and applying the adf.test to check for stationarity before any modelling : ADF Test results : data: data.diff[, 1] Dickey-Fuller = -14.518, Lag order = 14, p-value = 0.01 alternative hypothesis: stationary data: data.diff[, 2] Dickey-Fuller = -14.603, Lag order = 14, p-value = 0.01 alternative hypothesis: stationary Using the differenced time series, I use the auto.arima function in R to fit an ARIMA model : ARMAReg = forecast::auto.arima(y = data.diff[,1],xreg = data.diff[,2]) summary(ARMAReg) Series: data.diff[, 1] Regression with ARIMA(3,0,2) errors Coefficients: ar1 ar2 ar3 ma1 ma2 X 0.3297 -0.9302 -0.0773 -0.3913 0.9462 -0.0510 s.e. 0.0393 0.0217 0.0191 0.0353 0.0213 0.0009 sigma^2 = 4.034: log likelihood = -6394.72 AIC=12803.44 AICc=12803.48 BIC=12845.54 Training set error measures: ME RMSE MAE MPE MAPE MASE ACF1 Training set 0.0007491417 2.006506 1.338148 NaN Inf 0.514481 0.001929202 When we look at the residuals in this model, they seem ok on first glance : Theres some random spikes in the residuals every 6 months or so, but this is due to a known issue with the X value data (which I will fix). However, when we look at the pacf of the square residuals, we see clear signs of heteroskedasticity : Now given the knowledge I have of these 2 time series, I know the relationship between them is dynamic, so I tried to fit a dynamic linear regression model with time vary coefficients, with a plot of the time varying beta and its 2sd confidence intervals below (most of the code was taken from here : http://lalas.github.io/quantitativeThoughts/ ) : start.vals = c(0,0,0) buildDLM = function(parm, x.mat){ parm = exp(parm) return( dlmModReg(X=x.mat, dV=parm[1], dW=c(parm[2], parm[3])) ) } DLM.mle = dlmMLE(y=data.diff[,1], parm=start.vals, x.mat=data.diff[,2], build=buildDLM, hessian=T) DLM.dlm = buildDLM(DLM.mle$par, data.diff[,2]) DLM.filtered = dlmFilter(y = data.diff[,1], mod = DLM.dlm) alpha.f = xts(DLM.filtered $m[-1,1,drop=FALSE],order.by = index(data.diff)) beta.f = xts(DLM.filtered$ m[-1,2,drop=FALSE],order.by = index(data.diff)) mse.list = dlmSvd2var(DLM.filtered $U.C, DLM.filtered$ D.C) se.mat = t(sapply(mse.list, FUN=function(x) sqrt(diag(x)))) se.xts = xts(se.mat[-1, ], index(beta.f)) colnames(se.xts) = c("alpha", "beta") a.u = alpha.f + 1.96*se.xts[, "alpha"] a.l = alpha.f - 1.96*se.xts[, "alpha"] b.u = beta.f + 1.96*se.xts[, "beta"] b.l = beta.f - 1.96*se.xts[, "beta"] PerformanceAnalytics::chart.TimeSeries(cbind(beta.f, b.l, b.u)[-c(1:20)], main="Filtered estimates of beta", colorset=c(1,2,2), lty=c(1,3,3),ylab=expression(beta),xlab="") Now we get to the heart of my problem (and thank you for reading this far!). If i look at the residuals from this model, theres a couple of issues. The first is there is clearly some autocorrelation here, but this I know can be solved by fitting a DLM ARMA model (which I done but wont add here as the post is already quite long) : The main problem I am trying to solve is the problem of conditional heteroskedasticity, which can be seen in : As far as I am aware, this will render my confidence intervals on the parameter estimates useless (please correct me if I am wrong), so assuming I can fix the auto correlation with a DLM ARMA model, how would I go about fixing the heteroskedasticity so that I can produce valid confidence intervals without applying arbitrary transformations to the data that makes interpretation of the beta impossible ? I would also like to stick with a model that allows the beta to vary with time as I know this is how the series behave vs on another. So far my thoughts on how to solve are : I know for fixed parameter regression one can produce heteroskedasticity robust standard errors - is this possible to do with a state space regression ? I have read a lot about GARCH and Stochastic Volatility models to deal with this issue, but they dont really strike me as regression models, so I'm not sure if these would work. I have no idea if this would make any sense but I have read about use a Particle Filters to estimate the parameters of a state space model instead of a Kalman Filter when the error terms are non-gaussian. Is this something worth exploring ? Thanks for reading, and any help would be much appreciated!
