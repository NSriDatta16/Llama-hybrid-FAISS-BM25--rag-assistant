[site]: stackoverflow
[post_id]: 5408227
[parent_id]: 5407809
[tags]: 
BTW: I'm not entirely sure about FLTK's memory structure. Hiding the screen might not delete memory at all, but just hide the GUI representation of the window, allowing you to open it again later in the same state. A good method for GUI is Model-View-Controller architecture, where you have a controller to operate the GUI as necessary. This would manifest itself more as: WindowManager wm; void ScreenA::exit() { wm.registerExit(screenb_ptr); wm.actOnExit(); } Or some such similar thing to have a central orchestrator of your windows. This allows for: Pluggable interfaces Better organization Guards against bugs
