[site]: crossvalidated
[post_id]: 584687
[parent_id]: 584649
[tags]: 
This is a comment to complement @Lynn's answer (+1) which explains the big mistake in your implementation of the bootstrap. There is another error. It's more subtle as it doesn't have an obvious effect on the coverage of the confidence interval: You should use the sample statistic, not the average of the bootstrapped statistics as the center of the bootstrap confidence interval. Here is the updated python code: import numpy as np np.random.seed(1234) sample_size = 100 bootstrap_reps = 1000 population_mean = 100 population_std = 5 sample = np.random.normal(population_mean, population_std, sample_size) # Function to generate bootstrap samples bootstrap_sample = lambda: np.random.choice(sample, size=sample_size, replace=True) # The sample mean is an estimator of the population mean estimator = np.mean sample_statistic = estimator(sample) bootstrapped_statistics = [ estimator(bootstrap_sample()) for _ in range(bootstrap_reps) ] # Use the sample statistic [here the sample mean], # not the average of the bootstrapped statistics, # to construct the confidence interval sample_statistic, np.mean(bootstrapped_statistics) # (100.17556141562721, 100.18181492004352) # Lower and upper limit of the 95% confidence interval for the population parameter z_alpha = 1.96 ci_lower = sample_statistic - z_alpha * np.std(bootstrapped_statistics) ci_upper = sample_statistic + z_alpha * np.std(bootstrapped_statistics)
