[site]: stackoverflow
[post_id]: 2163653
[parent_id]: 2140129
[tags]: 
As far as I know, there's no real 'standard', at least no standard most software would conform to. My convention is to name my dynamic and static .lib equally, but place them in different directories if a project happens to support both static and dynamic linkage. For example: foo-static foo.lib foo foo.lib foo.dll The library to link against depends on the choice of the library directories, so it's almost totally decoupled from the rest of the build process (it won't appear in-source if you use MSVC's #pragma comment(lib,"foo.lib") facility, and it doesn't appear in the list of import libraries for the linker). I've seen this quite a few times. Also, I think that MSVC/Windows based projects tend to stick more often with a single, official linkage type - either static, or dynamic. But that's just my personal observation. In short: Windows/MSVC shared: foo.dll import: foo.lib static: foo.lib You should be able to use this directory-based pattern with CMAKE (never used it). Also, I don't think it's a 'bug'. It's merely lack of standardization. CMAKE does (imho) the right thing not to establish a pseudo-standard if everyone likes it differently.
