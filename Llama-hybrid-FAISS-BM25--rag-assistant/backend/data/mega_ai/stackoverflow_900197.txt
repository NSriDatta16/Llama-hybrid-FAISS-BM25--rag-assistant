[site]: stackoverflow
[post_id]: 900197
[parent_id]: 899917
[tags]: 
It's partly because older compilers did not support the declaration of a true class constant class C { const int ARealConstant = 10; }; so had to do this class C { enum { ARealConstant = 10 }; }; For this reason, many portable libraries continue to use this form. The other reason is that enums can be used as a convenient syntactic device to organise class constants into those that are related, and those that are not class DirectorySearcher { enum options { showFiles = 0x01, showDirectories = 0x02, showLinks = 0x04, }; }; vs class Integer { enum { treatAsNumeric = true }; enum { treatAsIntegral = true }; enum { treatAsString = false }; };
