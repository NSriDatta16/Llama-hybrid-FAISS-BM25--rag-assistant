[site]: stackoverflow
[post_id]: 5294598
[parent_id]: 5294536
[tags]: 
Is this the better way to handle this? Depending on your usage, you may want to store this as an instance variable (unless you really want the block to be shared between classes, and thus changed for all classes anytime startEvent: is called). Is a __block an NSObject? a C declaration? It's a C storage qualifier. Why do I have to copy it? Is it not possible just to retain it? You can retain it, but it probably won't do what you want it to do. In C and Objective-C, blocks are created on the stack. When you copy it, it (and any variables it closed over) are copied to the heap. If you retain it, it and its variables are not copied to the heap. If it's not an Obj-C Object, why I can call to [... copy] and [... retain] as it were? Magic. :) More seriously, in Objective-C, blocks are designed to act as Objective-C objects. (It's similar to the reason you can seamlessly cast between NSString and CFStringRef -- the objects are designed to make this possible.)
