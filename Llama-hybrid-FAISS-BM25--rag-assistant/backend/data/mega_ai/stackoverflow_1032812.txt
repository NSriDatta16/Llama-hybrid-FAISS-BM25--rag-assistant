[site]: stackoverflow
[post_id]: 1032812
[parent_id]: 1032788
[tags]: 
In these cases it is better to use a tool and then fix up whatever the tool missed. In this case I used .net code converter to get this result: Dim defaultStyleName = DirectCast(doc.MainDocumentPart.StyleDefinitionsPart.GetXDocument().Root.Elements(w & "style").Where(Function(style) DirectCast(style.Attribute(w & "type"), String) = "paragraph" AndAlso DirectCast(style.Attribute(w & "default"), String) = "1").First().Attribute(w & "styleId"), String) Dim q1 = doc.MainDocumentPart.GetXDocument().Root.Element(w & "body").Elements().[Select](Function(p, i) Do Dim styleNode = p.Elements(w & "pPr").Elements(w & "pStyle").FirstOrDefault() Dim styleName = If(styleNode IsNot Nothing, DirectCast(styleNode.Attribute(w & "val"), String), defaultStyleName) Return New () End Function) Dim q2 = q1.[Select](Function(i) Do Dim text As String = Nothing If i.Element.Name = w & "p" Then text = i.Element.Elements().Where(Function(z) z.Name = r OrElse z.Name = ins).Descendants(w & "t").StringConcatenate(Function(element) DirectCast(element, String)) Else text = i.Element.Descendants(w & "p").StringConcatenate(Function(p) p.Elements().Where(Function(z) z.Name = r OrElse z.Name = ins).Descendants(w & "t").StringConcatenate(Function(element) DirectCast(element, String)), Environment.NewLine) End If Return New () End Function) Dim q3 = q2.[Select](Function(i) New Commands.MatchInfo()).Where(Function(i) (styleSearchString Is Nothing OrElse i.Style IsNot Nothing) AndAlso (contentSearchString Is Nothing OrElse i.Pattern IsNot Nothing)) Return q3.ToArray() Again, the code is probably not perfect but it should get you 95% of the way there. The compiler should help you with the rest.
