[site]: datascience
[post_id]: 88450
[parent_id]: 
[tags]: 
Single layer multiple input neural network?

I am implementing single layer neural network using stochastic gradient descent. When I train the model for single input it gives the answer correctly. Now when I use the second input to update my weights two things are happening: Weights obtained from previous iteration are updated due to which my previous answer is lost. Weights obtained from this cycle are not able to give correct output. If this keep happening how I can fit the whole data set? My weight updating routine is as follows: $W = W - (alpha) * (input) * (delta)$ Edit: I have trained my model upto 1000 iterations. Now when i predict the output using training data it only shows 80% accuracy which is same as accuracy obtained with test data. Why my trained model not converging or may be overfitting? input_nodes = 4 hidden_nodes = 10 output_nodes = 2 learning_rate = 0.1
