[site]: stackoverflow
[post_id]: 1486922
[parent_id]: 1486708
[tags]: 
Ideally, no instance-wide variables would be used and everything would be passed as a parameter and well-documented in comments. That being said, it can get very tedious to comment every little thing and method parameter lists can start to look ridiculous (unless you have a hierarchy of partially-applied methods). Pragmatically, a balance should be sought between using non-local variables and making everything excruciatingly explicit. There is at least one case where you have to have instance- or class-level variables and that's when an implementation-specific value has to be retained between method calls. Scalability and concurrency depend on minimization if not complete elimination of state and side effects except for the most local and exclusive of runtime scopes. OOP without objects or display classes (i.e., closures) would be procedural, yes. Languages are increasingly becoming multiparadigm, but a lot of them have a primary paradigm. C# is object oriented with functional features. F# is functional with objects. If the data is immutable, then instance variables are always okay in my books.
