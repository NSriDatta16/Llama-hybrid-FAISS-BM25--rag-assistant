[site]: stackoverflow
[post_id]: 5007247
[parent_id]: 
[tags]: 
Finding or building an inter-process broadcast communication channel

So we have this somewhat unusual need in our product. We have numerous processes running on the local host and need to construct a means of communication between them. The difficulty is that ... There is no 'server' or master process Messages will be broadcast to all listening nodes Nodes are all Windows processes, but may be C++ or C# Nodes will be running in both 32-bit and 64-bit simultaneously Any node can jump in/out of the conversation at any time A process abnormally terminating should not adversely affect other nodes A process responding slowly should also not adversely affect other nodes A node does not need to be 'listening' to broadcast a message A few more important details... The 'messages' we need to send are trivial in nature. A name of the type of message and a single string argument would suffice. The communications are not necessarily secure and do not need to provide any means of authentication or access control; however, we want to group communications by a Windows Log-on session. Perhaps of interest here is that a non-elevated process should be able to interact with an elevated process and vise-versa. My first question: is there an existing open-source library?, or something that can be used to fulfill this with little effort. As of now I haven't been able to find anything :( If a library doesn't exist for this then... What technologies would you use to solve this problem? Sockets, named-pipes, memory mapped files, event handles? It seems like connection based transports (sockets/pipes) would be a bad idea in a fully connected graph since n nodes requires n(n-1) number of connections. Using event handles and some form of shared storage seems the most plausible solution right now... Updates Does it have to be reliable and guaranteed? Yes, and no... Let's say that if I'm listening, and I'm responding in a reasonable time, then I should always get the message. What are the typical message sizes? less than 100 bytes including the message identifier and argument(s). These are small. What message rate are we talking about? Low throughput is acceptable, 10 per second would be a lot, average usage would be around 1 per minute. What are the number of processes involved? I'd like it to handle between 0 and 50, with the average being between 5 and 10.
