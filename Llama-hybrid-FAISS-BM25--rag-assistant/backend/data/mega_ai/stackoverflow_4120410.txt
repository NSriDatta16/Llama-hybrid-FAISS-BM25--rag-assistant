[site]: stackoverflow
[post_id]: 4120410
[parent_id]: 
[tags]: 
Convert Multidimensional Java Array to String-Matrix?

I can't seem to get this toString() method to work? The deepToString method works perfectly, except that I have to print them out in an organized way, like a matrix would look like with aligned rows and columns. I had it working a while ago, but I changed something and now god knows what I did, I have no idea how to get it back. Anyhow, does anyone know how to output a multidimensional array to matrix like string form? Also, another issue I am having is figuring out how to check if the numbers >= 0, because they can't be negative. Not sure how to do that? Thought I could store each value as it loops and check if it's negative, but I just keep getting confused and/or running into errors. Any help regarding these issues would be greatly appreciated, I have been working on this for like 5hrs and have not gotten anywhere! _ Here is the code I have so far: import java.util.Arrays; public class MatrixOperations { public static void main(String[] args) { double[][] matrix1 = { { 0.0, 1.0, 2.0 }, { 3.0, 4.0, 5.0 }, { 6.0, 7.0, 0.8 }, }; double[][] matrix2 = { { 1.0, 1.0, 1.0 }, { 0.0, 0.0, 0.0 }, { 2.0, 2.0, 2.0 } }; System.out.println(toString(matrix1)); System.out.println(Arrays.deepToString(add(matrix1, matrix2))); } // Throws an IllegalArgumentException unless A and B contain n arrays of // doubles, each of // which contains m doubles, where both n and m are positive. (In other // words, both A // and B are n-by-m arrays.) // // Otherwise, returns the n-by-m array that represents the matrix sum of A // and B. public static double[][] add(double[][] A, double[][] B) { if (A.length != B.length || A[1].length != B[1].length) { throw new IllegalArgumentException("Rows and Columns Must Be Equal"); } double[][] S = new double[A.length][A[1].length]; for (int i = 0; i 0) { result.append(M[0]); for (int i = 0; i Thank you for all your help! :)
