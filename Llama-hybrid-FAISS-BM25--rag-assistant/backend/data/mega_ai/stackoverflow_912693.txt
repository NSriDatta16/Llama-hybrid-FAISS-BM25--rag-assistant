[site]: stackoverflow
[post_id]: 912693
[parent_id]: 912309
[tags]: 
The default constructor of List starts with an empty array as internal storage. A call to Add(T item) checks if an array resize is necessary, and will double the Capacity property (via the EnsureCapacity method). When the Capacity property is set it ... Creates a new array with the new size (double the original!) Copies elements from the old one into the new one. Changes internal reference into the new one. So, assuming a Capacity of n would imply that during the resize you have a total memory usage of 3n. How many items does your List contain when it fails? Try using the constructor that accepts an capacity if you know how many items will be added. This avoids any resizes that may need to be done (and may throw your OutOfMemoryException directly if you require huge memory blocks).
