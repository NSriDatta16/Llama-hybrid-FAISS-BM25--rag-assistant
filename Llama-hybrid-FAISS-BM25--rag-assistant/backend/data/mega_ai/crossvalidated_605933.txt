[site]: crossvalidated
[post_id]: 605933
[parent_id]: 
[tags]: 
Forecasting VECM model ( Python and R )

I'm working on an academic project. The aim is to forecast some cointegrated time series. I retrieved the data from 2008 to 2018 of the observations of 30 time series. I performed a unit-root test to each of them and 16 of them are integrated of order 1. Then I performed a Johansen test to this multiple time series and found that there exist some cointegration vectors. Then I estimated a VECM model in order to forecast future values of these time series. I performed all the test both in Python and R studio and the result are quite identical. The estimates of the VECM model are the same. To validate the VECM model I performed a normality test on the residuals and I got a high p-value, so the residuals, probably, follows a normal distribution. So, unless I'm forgetting something, I think that these time series are cointegrated. My doubts are about the forecasts. When I predict the future values ( that are identical both in python and R) of each single time series, after some initial adjustments, the future observations "will have an asymptote". Maybe a image will explain better what I'm tryng to write: These two are the plots of the 100 future observations of the first and the second time series. All the others have a similar asymptotic behaviour. Why is this happening? Am I missing something? When I print the array of the values of the future predictions, after like 100 steps ahead, the predictions will even be constant. I'm guessing that maybe this has something to do with how Python and R manage the unobservable error term of the VECM model, but I'm only guessing. Do you think that I'm doing something wrong or that I'm not understanding something?
