[site]: stackoverflow
[post_id]: 5083415
[parent_id]: 5083319
[tags]: 
First off, only one UIViewController per screen. Period. From there you will want two subviews added to UIViewController's main view (the one that's loaded in viewDidLoad). To put this into web terms think of the view controller's view as . In the end you'll probably want something like this. - (void)viewDidLoad { [super viewDidLoad]; UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0.0, 0.0, 320.0, 45.0)]; // Further configure your scroll view as you presumably already have in ListingDetails [self.view addSubview:scrollView]; [scrollView release]; UIView *staticView = [[UIView alloc] initWithFrame:CGRectMake(0.0, 45.0, 320.0, 435.0)]; [self.view addSubview:staticView]; [staticView release]; } Edit: Setting this up in Interface Builder In your view controller's .h @interface SampleViewController : UIViewController { UIScrollView *scrollView; UIView *staticView; } @property (nonatomic, retain) IBOutlet UIScrollView *scrollView; @property (nonatomic, retain) IBOutlet UIView *staticView; @end and in the .m file @implementation SampleViewController @synthesize scrollView; @synthesize staticView; - (void)viewDidUnload { [super viewDidUnload]; self.scrollView = nil; self.staticView = nil; } - (void)dealloc { [scrollView release], self.scrollView = nil; [staticView release], self.staticView = nil; [super dealloc]; } @end Now in the Interface Builder file, you can right-click and drag from File's Owner (that's your UIViewController subclass) directly to the views on screen. When you release a popup will appear and you choose the property in the code you want to connect that view to. Once this is established you can reference those views in code like so. - (void)viewDidLoad { [super viewDidLoad]; // Assume we need to make some tweaks once the view has loaded self.staticView.backgroundColor = [UIColor redColor]; self.scrollView.backgroundColor = [UIColor blackColor]; }
