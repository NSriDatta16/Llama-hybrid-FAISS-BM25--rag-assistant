[site]: stackoverflow
[post_id]: 3966360
[parent_id]: 3966294
[tags]: 
I'd say approach it in focussed baby steps. Step#1: Should always be to get some tests around your area of invasion TForm - regression tests aka safety net. In your case, sense what the app is doing. From what I read, it seems to be a data transformer. So spend time to understand all (or most important if all is not feasible) combinations of input data and the corresponding output schedules. Write them up as tests. Ensure that all tests pass. Step#2: Now attempt your refactorings. Move blocks of code into cohesive classes etc all under the safety of the regression net. Testing complex datasets - testing file dumps should be the last resort. But in this case, it seems like a simple option to get started. Maybe you could later make it a first class domain object TSchedule with its own Equals() implementation. Defer design decisions/changes until you have a solid regression test suite around your area of modification.
