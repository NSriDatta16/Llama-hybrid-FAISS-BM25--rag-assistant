[site]: stackoverflow
[post_id]: 4767456
[parent_id]: 
[tags]: 
Replacing character with File.separator using java.regex Pattern Matcher

I have a field called 'path' in back end database, which stores the path to certain resource. Instead of storing lots of backslashed (escaped) path for windows path, my idea is to let user enter the path with certain character as file separator (independent of OS). For example: original path: \\\\server\\share\\ with escaped path in db: \\\\\\\\server\\\\share\\\\ instead I want: %%server%share% and later I wanted to replace those with java's File.separator for the real thing. For this job, the quickest solution I found is to use the java.regex Pattern Matcher. My function for this job is: private String convertToRealPathFromDB(String pth) { String patternStr = "%"; String replaceStr = File.separator; String convertedpath; //Compile regular expression Pattern pattern = Pattern.compile(patternStr); //pattern to look for //replace all occurance of percentage character to file separator Matcher matcher = pattern.matcher(pth); convertedpath = matcher.replaceAll(replaceStr); System.out.println(convertedpath); return convertedpath; } but the same File.separator which was supposed to save life is creating trouble with java.lang.StringIndexOutOfBoundsException: String index out of range: 1 I have tested with other characters (for example: replace '%' with 'q') and this function works fine but File.separator and "\\\\" as replace string is not working. I like to know it there is workaround for this. Or better, easier and elegant solution.
