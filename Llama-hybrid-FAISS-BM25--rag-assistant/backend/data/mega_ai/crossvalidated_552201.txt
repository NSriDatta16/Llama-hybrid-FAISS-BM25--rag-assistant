[site]: crossvalidated
[post_id]: 552201
[parent_id]: 
[tags]: 
Should I use StandardScaler on non-stationary data?

When I'm using StandardScaler on non-stationary data, like exponential global temperature, I use it as follows: scaler_x = StandardScaler() X_train_mms = scaler_x.fit_transform(X_train) X_test_mms = scaler_x.transform(X_test) scaler_y = StandardScaler() y_train_std = scaler_y.fit_transform(y_train.reshape(-1,1)) y_test_std = scaler_y.transform(y_test.reshape(-1, 1)) My questions are: In details my data is a monthly temperature time series data, using features from the last time step and the previous year's time step for temperature (months as categorical variables, and CO 2 ). If I use the scaling only on X_train (and transform on X_test ) I get really bad results. So I used the scaling also on the target values y , but then I thought if I use it also on y ,when i am going back to validate the model(when I inverse the results back with scaler_y ): Am I not giving information which I am not supposed to the model, and that's why the model is better? or actually I am not supposed to use StandardScaler on non-stationary data at all? The problem is also co2 scale is much bigger than the temperature, so I have to scale it ,I just wonder if it is correct or I should try another way.
