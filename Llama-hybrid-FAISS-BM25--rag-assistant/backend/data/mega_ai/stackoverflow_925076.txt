[site]: stackoverflow
[post_id]: 925076
[parent_id]: 906501
[tags]: 
The reason why your example doesn't work is that you're setting the xml:lang property after MyUserObject has already been constructed. The TextBlock (and Binding, and Converter) have already been created w/the default language, that is, en-US. TheDuke is incorrect about multiple xml:lang attributes. While it's true you only have 1 UI thread, and it does only have 1 culture, each FrameworkElements is allowed it's own xml:lang . To test this out, set your xml:lang attribute in your MyUserControl XAML (in your first code listing) to de-DE. You should see de-DE now appearing twice in bold. To solve the problem, you have to set up the DataBinding AFTER MyUserControl has been constructed and the Language/xml:lang attribute has been set. I did a quick test by adding the DataBinding in MyUserControl's Loaded event. This gives you the results I think you're expecting (de-DE in the first line, fr-Fr in the second). alt text http://img35.imageshack.us/img35/4588/howtochangetheculturein.png MyControl XAML Listing: My converter culture is MyControl Code-Behind: using System.Windows; using System.Windows.Controls; using System.Windows.Data; namespace WPFCultureTester { /// /// Interaction logic for MyUserControl.xaml /// public partial class MyUserControl : UserControl { public MyUserControl() { InitializeComponent(); } private void UserControl_Loaded(object sender, RoutedEventArgs e) { this.foo.SetBinding( TextBlock.TextProperty, new Binding("") { Converter = CultInfoConverter.Converter }); } } } BTW, I took the liberty of adding a singleton Converter to CultInfoConverter, and renaming some namespaces, so you may have to change it back if you're doing a straight cut/paste.
