[site]: stackoverflow
[post_id]: 2977
[parent_id]: 2968
[tags]: 
I would look at Java migrations of Zork , and lean towards a simple Natural Language Processor (driven either by tokenizing or regex) such as the following (from this link): public static boolean simpleNLP( String inputline, String keywords[]) { int i; int maxToken = keywords.length; int to,from; if( inputline.length() = inputline.length()) return false; // check for blank and empty lines while( to >=0 ) { to = inputline.indexOf(' ',from); if( to > 0){ lexed.addElement(inputline.substring(from,to)); from = to; while( inputline.charAt(from) == ' ' && from = keywords.length) { status = true; break;} } } return status; } ... Anything which gives a programmer a reason to look at Zork again is good in my book, just watch out for Grues. ...
