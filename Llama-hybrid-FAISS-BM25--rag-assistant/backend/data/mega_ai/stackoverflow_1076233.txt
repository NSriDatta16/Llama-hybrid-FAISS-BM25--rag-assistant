[site]: stackoverflow
[post_id]: 1076233
[parent_id]: 1017970
[tags]: 
please repeat after me (min 3x) there is no silver bullet I will not use a technology just because its the latest thing from msft I will not use something just to get it on my resume Not only are their competent SQL coders, any decent app programmer, especially LOB apps, should write intermediate SQL. If you don't know any SQL and are writing LINQ to SQL, how are you going to debug your data calls? How are you going to profile them to fix bottlenecks? We're trying out LINQ to SQL and I think there are major issues with it, such as: There is no simple way to return the query results to another object. This in itself seems insane. Microsoft created the var anonymous datatype, and recommends using it, but there is no way to move this data out of your local method, hence the oo paradigm breaks if you have to use the data in the same function that retrieved it. Tables are NOT objects. Study up on 3rd normal form etc. Relational databases are for storing data, not using it. I don't want to be restricted or encouraged to use my tables as objects. The data I retrieve from the database will very often be joins of multiple tables, and may include SQL casts, functions, operators, etc. There is no performance gain, and a slight loss Now I have way more code to worry about. There are the dbml files and still a DAL to actually write the LINQ. Yes, lots of it is machine-generated, that doesn't mean its not there, its something else that can go wrong (i.e. your dbml files, etc.). Now that I've given the background, I will attempt to answer you actual question, why do people use LINQ To SQL: Its the latest thing from Microsoft and I want it on my resume. Msft has convinced managers/execs that it will decrease coding time Developers hate SQL. (no good dev environment or debugging except manually--it would be nice to have better intellisense to a sql tool.) I encourage people not to jump on the bandwagon just because everyone else is, learn enough to put it on your resume, be willing to use it if forced to, but try and really understand the pros and cons first.
