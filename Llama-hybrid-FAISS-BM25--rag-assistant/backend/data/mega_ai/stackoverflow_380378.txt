[site]: stackoverflow
[post_id]: 380378
[parent_id]: 377204
[tags]: 
Ok, after some struggle I got working workaround for that. It is ugly from design point of view, but works well enough for me. That's how it works: Store the initial width of column. self.SetColumnWidth(colNum, wx.LIST_AUTOSIZE_USEHEADER) self.__columnWidth[colNum] = self.GetColumnWidth(c) Register handler for update UI event. wx.EVT_UPDATE_UI(self, self.GetId(), self.onUpdateUI) And write the handler function. def onUpdateUI(self, evt): for colNum in xrange(0, self.GetColumnCount()-1): if self.GetColumnWidth(colNum) The self.GetColumnCount() - 1 is intentional, so the last column is not resized. I know this is not an elegant solution, but it works well enough for me - you can not make columns too small by double clicking on dividers (in fact - you can't do it at all) and double-clicking on the divider after last column resizes the last column to fit list control width. Still, if anyone knows better solution please post it.
