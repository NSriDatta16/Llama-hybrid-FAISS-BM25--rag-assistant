[site]: stackoverflow
[post_id]: 2717803
[parent_id]: 2717476
[tags]: 
There are approximately 10 123 game trees in chess out of which you have about 4.5 × 10 6 in that database. We can ignore the game trees, and only consider state-space complexity of which there are anywhere between 10 43 and 10 50 legal states. Let's assume that all games in that database have unique moves, and that there are 1000 moves on average per game, which gives us 4.5 × 10 9 states. Taking the estimated lower bound 10 43 of possible states, that only covers 4.5 × 10 -34 of all states. I don't know what is the total number of unique board positions that exclude rotations or reflections, but it will only reduce it by a factor of two or so, which is not very helpful. You would need to add more domain knowledge into the statistical engine and find out the level of similarity between two given board positions as there is a 1 in 10 35 chance that you will not find a matching board position (including reflections and rotations). I think the biggest key here would be finding how how two given board positions are similar. That will incorporate a lot more domain knowledge than just simple transformations. It is a great idea nonetheless that is worth exploring further, although I suspect that it has been tried before given the complexity of chess and the interest around it.
