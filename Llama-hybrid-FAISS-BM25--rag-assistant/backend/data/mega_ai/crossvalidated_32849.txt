[site]: crossvalidated
[post_id]: 32849
[parent_id]: 
[tags]: 
Specifying uncorrelated random effects for orthogonal polynomial codes

I am modelling eyetracking data where people can look at one of two objects on the screen. Our experimental manipulation is meant to increase the likelihood that they look at object A over object B. However, the effect isn't likely to be linear and what we actually hypothesize is that our control participants will have a greater fit to a quadratic or cubic curve (indicating more alternation between the two objects) than our experimental condition. It's a between-subjects manipulation. So, I am using orthogonal polynomial codes to model with lmer() , with a model like: elog(proportion-A) ~ ot1 + ot2 + ot3 + Condition + ot1:Condition + ot2:Condition + ot3:Condition + (1 | Subject) + (0 + ot1 | Subject) + (0 + ot2 | Subject) + (0 + ot3 |Subject) Am I right in entering the random slopes as non-correlated (i.e., as distinct error terms) because orthogonal polynomial codes should not correlate with each other and should have unique effects on the predicted variable (looking proportion)? This has an added benefit of being able to use Markov Chain Monte Carlo sampling with languageR 's pvals.fnc() , but we do get different results than if I enter the random terms like (1 + ot1 + ot2 + ot3 | Subject) and so I want to make sure this is OK.
