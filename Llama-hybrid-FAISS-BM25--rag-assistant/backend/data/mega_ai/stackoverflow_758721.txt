[site]: stackoverflow
[post_id]: 758721
[parent_id]: 758673
[tags]: 
It makes sense to use a pointer to a pointer whenever the pointer actually points towards a pointer (this chain is unlimited, hence "triple pointers" etc are possible). The reason for creating such code is because you want the compiler/interpreter to be able to properly check the types you are using (prevent mystery bugs). You dont have to use such types - you can always simply use a simple "void *" and typecast whenever you need to actually dereference the pointer and access the data that the pointer is directing towards. But that is usually bad practice and prone to errors - certainly there are cases where using void * is actually good and making code much more elegant. Think of it more like your last resort. => Its mostly for helping the compiler to make sure things are used the way they are supposed to be used.
