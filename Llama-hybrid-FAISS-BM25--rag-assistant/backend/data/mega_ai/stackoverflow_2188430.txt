[site]: stackoverflow
[post_id]: 2188430
[parent_id]: 2115131
[tags]: 
Straight up answer to your question (about how to implement your code in Linq): this.CartItems.Where(item => item.EffectivePrice != null).ToList().ForEach ( item => item.EffectivePrice = CurrencyHelper.GetLocalizedCurrency(item.EffectivePrice); ); There is no reason to have to explicitly specify the index of the item in the list (at least I haven't seen a reason). The .ToList() gives you a List of object references for you to manage. You AsQueryable() to save a few CPU cycles. It's a little strange, however, to overwrite a property with the results of the method call as subsequent method calls on that property may alter the value over and over again. But, nonetheless, Linq's method is far more elegant. The drawback, that I can see, is the inability to edit-and-continue with any method that contains Linq.
