[site]: stackoverflow
[post_id]: 4451982
[parent_id]: 
[tags]: 
How to test this function which uses get_template without providing a template path?

I've got this function: def _render(object, template, context_name=None, classes=None): """ Helper function that execute the form/field actual rendering. """ if not context_name: context_name = 'object' template = get_template(template) c = { context_name: object, 'classes': classes, } return template.render(Context(c)) I want to test it, but I don't want to provide any existing template in my file system just a "virtual" one like ie. input_chunk : class RenderCustomChunk(TestCase): """ The ``_render()`` class should return a fully rendered html code based on the given template chunk and parameters passed with the rendering function ie. classes. """ def setUp(self): self.test_object = 'Test Object' self.test_template_name = 'TestTemplate.html' self.input_chunk = u' {{ object }} ' self.render_output = u' %s ' % self.test_object def test_should_render_custom_object(self): self.assertEqual(forms._render(self.test_object, self.test_template_name), self.render_output) Is there any elegant way to do that?
