[site]: stackoverflow
[post_id]: 5176354
[parent_id]: 5175399
[tags]: 
Store the session data in a database and use a common key for the users that need to share the data. But, you said you can't use a database and it has to be in memory. My first thought after that was to do something like what you described (with a standalone application on the server that the web application makes calls to). You may also be able to accomplish your objective by leveraging the Cache, but I'm not 100% sure about this. http://msdn.microsoft.com/en-us/library/ms972379.aspx - Caching article Oh, idea! Create a temporary XML file on the server to track each of these multiuser sessions, and load/parse at each request. But still, this isn't in memory, so maybe that's no good. The HttpApplication lifecycle does not span to multiple users. I am not a little confused about the HttpApplicationState object: [This article] (http://msdn.microsoft.com/en-us/library/ms972109.aspx) says it spans to every user of the application. It is basically a dictionary. I also think you might benefit from reviewing the ASP.NET Application life cycle. The article I use for reference is http://msdn.microsoft.com/en-us/library/ms178473.aspx . Good luck, and let us know what you end up doing
