[site]: stackoverflow
[post_id]: 560047
[parent_id]: 559984
[tags]: 
I found the following in the ASP.NET MVC source code : public virtual void RenderView(ViewContext viewContext) { // TODO: Remove this hack. Without it, the browser appears to always load cached output viewContext.HttpContext.Response.Cache.SetExpires(DateTime.Now); ViewUserControlContainerPage containerPage = new ViewUserControlContainerPage(this); // Tracing requires Page IDs to be unique. ID = Guid.NewGuid().ToString(); RenderViewAndRestoreContentType(containerPage, viewContext); } So this explains why my Expires header always is the current time. However I really don't think this is what is tripping up Chrome becasue I created the simplest possible page as follows, and Chrome was still quite happily going back to the server and giving me a 200 public partial class test : System.Web.UI.Page { protected void Page_Load(object sender, EventArgs e) { TimeSpan cacheDuration = TimeSpan.FromSeconds(33); var cache = Response.Cache; cache.SetCacheability(HttpCacheability.Public); cache.SetExpires(DateTime.Now.Add(cacheDuration)); cache.SetMaxAge(cacheDuration); cache.AppendCacheExtension("must-revalidate, proxy-revalidate"); } }
