[site]: stackoverflow
[post_id]: 822198
[parent_id]: 196652
[tags]: 
Stored procedures make sense for professional-grade (IE enterprise-grade) applications where you: Want to allow your database engineer to optimize queries for performance Want to abstract complexity of queries to simple API's WANT your logic distributed, because some of what happens in the database might be intellectual property that you don't want to expose to other parties WANT your logic distributed, because that is the nature of distributed, n-tier computing you might want the database engineer or DBA to modify schema without modifying application code (stored procs, by virtue of providing API's, provide a layer of abstraction) There are other reasons. Prepared statements are better for work done within a session. But if you are taking the time to create a prepared statement, you have essentially done everything necessary to create a stored procedure. The difference is that the stored procedure is available across multiple sessions (subject to GRANTS in the database). What I can not figure out is that if you have the option for stored proc vs. prepared statement, why you would bother with prepared statements. Most of the SP vs PS discussions seem to focus on what the differences are between them, not on why to use one vs the other. That always appears to boil down to "depends on what you are trying to do." But I haven't seen a well organized description of: use a proc if you need VS use a statement if you need....
