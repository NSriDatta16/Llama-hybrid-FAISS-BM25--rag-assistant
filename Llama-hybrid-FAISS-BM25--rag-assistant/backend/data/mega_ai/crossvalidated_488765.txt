[site]: crossvalidated
[post_id]: 488765
[parent_id]: 
[tags]: 
How to explain why categorical inputs (as is) versus categorical inputs (as binary) produce different coefficients in logistic regression

Background When using logistic regression, I observe that using categorical inputs (as-is i.e. leaving them as categorical with type factor) versus using said categorical inputs but transforming them into binaries (i.e. dummy variables) produce different coefficients. Question How do I explain why the two above-mentioned methods produce different coefficients, hence different interpretations of the model's inputs? When do I use one versus the other? Example (coded in R) Here is an example using the titanic dataset (not the best example but I hope you get the point). Dataset came from: https://www.kaggle.com/c/titanic/data?select=train.csv # This dataset has been saved to my desktop. I now import this dataset setwd("C:/Users/kimye/Dropbox/Project - Data Science/Ad-Hoc/Logistic Regression - Compare categorical and binary input") dat $Age[is.na(dat1$ Age)] $Survived Survived) # Fit logistic regression log_regr_1 This is the model's output. Call: glm(formula = Survived ~ ., family = binomial(link = "logit"), data = dat1) Deviance Residuals: Min 1Q Median 3Q Max -2.0747 -0.6214 -0.5745 0.8187 2.0504 Coefficients: Estimate Std. Error z value Pr(>|z|) (Intercept) 13.8538826 378.5896017 0.037 0.971 PassengerId 0.0002150 0.0003242 0.663 0.507 Sexmale -2.5162654 0.1720593 -14.624 Now, I try a different version where I transform the categorical variables to binaries (dummy variables). # assign to a new dataset dat2 % select(PassengerId, Sex) dat2_sex $sex_flag % spread(Sex, sex_flag) dat2_sex$ female[is.na(dat2_sex $female)] male[is.na(dat2_sex$male)] % select(PassengerId, Embarked) dat2_embarked $embarked_flag % spread(Embarked, embarked_flag) dat2_embarked$ V1[is.na(dat2_embarked $V1)] C[is.na(dat2_embarked $C)] Q[is.na(dat2_embarked $Q)] S[is.na(dat2_embarked$S)] % select(-Sex, -Embarked) %>% left_join(dat2_sex, by = 'PassengerId') %>% left_join(dat2_embarked, by = 'PassengerId') # Fit logistic regression log_regr_2 Here is the model's output. Call: glm(formula = Survived ~ ., family = binomial(link = "logit"), data = dat2) Deviance Residuals: Min 1Q Median 3Q Max -2.0747 -0.6214 -0.5745 0.8187 2.0504 Coefficients: (2 not defined because of singularities) Estimate Std. Error z value Pr(>|z|) (Intercept) -1.4934505 0.2701625 -5.528 0.0000000324 *** PassengerId 0.0002150 0.0003242 0.663 0.507 Age -0.0076739 0.0065830 -1.166 0.244 female 2.5162654 0.1720593 14.624
