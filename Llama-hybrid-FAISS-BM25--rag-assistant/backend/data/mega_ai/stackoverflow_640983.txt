[site]: stackoverflow
[post_id]: 640983
[parent_id]: 
[tags]: 
Detect newline byte from filestream

I'm trying to collect information from a textfile which contains names of organisations (without spaces) and floating integers. I want to store this information in an array structure. The problem I'm having so far is collecting the information. Here is a sample of the textfile: CBA 12.3 4.5 7.5 2.9 4.1 TLS 3.9 1 8.6 12.8 4.9 I can have up to 128 different numbers for each organisation, and up to 200 organisations in the textfile. This is what my structure looks like so far: struct callCentre { char name[256]; float data[20]; }; My main: int main() { callCentre aCentre[10]; getdata(aCentre); calcdata(aCentre); printdata(aCentre); return 0; } And the getdata function: void getdata(callCentre aCentre[]) { ifstream ins; char dataset[20]; cout > dataset; ins.open(dataset); if(ins.good()) { while(ins.good()) { ins >> aCentre[c].name; for(int i = 0; i > aCentre[c].data[i]; if(ins == '\n') break; } c++; } } else { cout What I'm trying to achieve in my getdata function is this: store the organisation name first into the structure, then read each float into the data array until the program detects a newline byte. However, so far my check for the newline byte isn't working. Assume that variables c and MAX are already defined. How should I go about this properly?
