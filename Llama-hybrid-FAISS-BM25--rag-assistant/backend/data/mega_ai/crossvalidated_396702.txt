[site]: crossvalidated
[post_id]: 396702
[parent_id]: 206944
[tags]: 
Do a fixed number of episodes/iterations. Simplest approach which will give you near-optimal solution. Evaluate on N number of episodes and take an average. For example rollout 5 episodes, take average return $ G $ and compare that with best possible $ G_{max} $ (if that info is available) or with 2-3 previous results with something like RMSE. UPD . This one was incorrect. Due to randomness involved in an algorithm you cannot do that. This will work only for value iteration. Track Q-function updates. Once it becomes smaller than some small number e you can stop running episodes/iterations. e = 0.001 # some small number while True: # improving our Q delta = 0 # track updates while True: # running episode old_Q = Q[s, a] new_Q = Q[s, a] + alpha * (r + gamma*max_a(Q[s', a']) - Q[s, a]) delta = max(delta, old_Q-new_Q) if delta ^^ apply the code only for value iteration. Also check this question for more information.
