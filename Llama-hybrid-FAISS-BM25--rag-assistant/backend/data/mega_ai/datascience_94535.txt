[site]: datascience
[post_id]: 94535
[parent_id]: 94527
[tags]: 
I suppose your question is .... " How to do multi-task learning? " Should you take a neural network approach, for instance: A simple example with the above diagram is to pass Columns 1-8 into the "Shared Layers". The task specific layers would each be related to your three targets ie. Task 1 - Arousal, Task 2 - Dominance &, Task 3 - Valance. Do have a look at this review article on multi-task learning and its various types. A more accessible article with some code examples here . Addendum Edit: To address OP's inquiry about how to implement the above. I am not sure of the tools you plan to use, I am familiar with Python mainly. The below is a guide or suggested approach for implementing the multi-task learning with a deep learning framework: Install Python, and get the keras and TensorFlow libraries, and other data science libraries (ie. pandas ) Try implement a smaller system first, or a toy model (see here for example code -- just try making sure you can run a simple graph first) Try the a more complicated graph model Adapt the final code in the above article to have 3 loss functions, (ie. one each for valence, arousal and dominance) Use a subset of your data for the model -- making sure it runs. You want your input features as columns 1-8 and your three targets or outcomes as valence, arousal and dmomiance. Once model and code is running well, do a train-test split of your data (a 80:20 split, ie. 20% of the data is reserved as an unseen data). You can use sklearn test-train-split for this purpose. Train model on test data. Check your model by doing a prediction on the test data, and seeing how different (you can use metrics like absolute error or mean squared error) to measure this. To improve your model further, tweak around the hyperparameters - ie. changing the optimiser or learning rate. This is a very broad overview, sorry I can't go into the specifics as this is a large topic. If you don't understand any of the above terms you can do a quick search on them and you should be on your way.
