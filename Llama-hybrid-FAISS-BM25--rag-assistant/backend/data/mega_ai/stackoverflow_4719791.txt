[site]: stackoverflow
[post_id]: 4719791
[parent_id]: 4706626
[tags]: 
The behavior of the SDK is intended. An exception is not "crashing" the application, but rather telling you when an error state has occurred. You are basically doing it correctly, but instead of catching Exception you should only catch FacebookOAuthException like this: try { FacebookApp app = new FacebookApp(FacebookToken); var args = new Dictionary (); args["message"] = "hi"; args["caption"] = "appcaption"; args["description"] = "appdescription"; args["name"] = "appname"; args["picture"] = "apppicture"; args["link"] = "applink"; app.ApiAsync("/me/feed", args, (X) => { calback(X); }, HttpMethod.Post); } catch (FacebookOAuthException) { // This is where you would reauthorize the user or send them to a 'login' page Uri url = new Uri("/MyFacebook.xaml", UriKind.Relative); NavigationService.Navigate(url); } I would also suggest reading up on .Net exception handling to give you a better understanding of when and why they are used. http://msdn.microsoft.com/en-us/library/ms229005.aspx
