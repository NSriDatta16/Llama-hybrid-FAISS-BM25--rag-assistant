[site]: stackoverflow
[post_id]: 708684
[parent_id]: 
[tags]: 
Why is the size of my vector full of structs so large when I load it's serialization in from a file?

As most of you may be following my line of questions already know, i'm trying to create a program that can serialize multiple structs to a .dat file, read them back in via loading it's serialization, edit the contents, and then re-write them to the file and so on. It's a inventory program I am trying to do and I can't get it to work for the life of me. The file i'm loading in, is blank. My program takes like 10 seconds to even load and now I know why. It's cause the size of my vector is like 250 thousand. Oh wait... this time I ran it the size of my vector was 5,172,285. Thats a pretty big vector full of structs. There aren't any run-time or compile errors, but I am pretty sure I am doing something wrong. The file i'm loading in is completely blank too. Code: // Project 5.cpp : main project file. #include "stdafx.h" #include #include #include #include #include using namespace System; using namespace std; #pragma hdrstop int checkCommand (string line); template void writeVector(ofstream &out, const vector &vec); template vector readVector(ifstream &in); struct InventoryItem { string Item; string Description; int Quantity; int wholesaleCost; int retailCost; int dateAdded; } ; int main(void) { cout structList = readVector ( in ); cout void writeVector(ofstream &out, const vector &vec) { out ::const_iterator i = vec.begin(); i != vec.end(); i++) { out >(istream &in, InventoryItem &i) { in >> i.Item >> i.Description; in >> i.Quantity; in >> i.wholesaleCost >> i.retailCost; in >> i.dateAdded; return in; } template vector readVector(ifstream &in) { size_t size; in >> size; vector vec; vec.reserve(size); for(unsigned int i = 0; i > tmp; vec.push_back(tmp); } return vec; } Can someone simply show me how to turn this in to a program that can actually write serialized vectors full of structs to a file, and then read them back in so I can edit them and store them back for loading later? Oh my goodness what a ride this has been! THANK YOU for any help you can provide!
