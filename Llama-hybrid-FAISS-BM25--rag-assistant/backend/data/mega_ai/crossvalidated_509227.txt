[site]: crossvalidated
[post_id]: 509227
[parent_id]: 
[tags]: 
Coverage of a Bootstrap Confidence Interval for a Change in a Binomial Proportion

How can I estimate the coverage of a bootstrap confidence interval for a change in a binomial proportion please? For example, if the results from two tests ( A and B ) are: A --------- B OK Not Tot ----------------------------- OK 11 6 17 Not 0 11 11 ----------------------------- T0t 11 17 28 Then I can estimate improvement ( I ): Improvement (I) = pB/pA-1 using a bootstrap technique defined by the Python code below. 1000 runs bootstrap size = 28 This gave an estimate and a 95% CI of I : I = 55% [14%, 150%] How can I get the coverage of that CI please? In Python: print('Generate the sample data') data = pd.DataFrame({'A':[1]*11+[0]*6+[0]*11, 'B':[1]*11+[1]*6+[0]*11}) print('sample size: ',len(data)) print('') print('A B X') print('1 1',len(data[((data.A==1)&(data.B==1))])) print('1 0',len(data[((data.A==1)&(data.B==0))])) print('0 1',len(data[((data.A==0)&(data.B==1))])) print('0 0',len(data[((data.A==0)&(data.B==0))])) print('') # Results Lower = {} Media = {} Upper = {} # Control Parameters Runs_Max = 1000 Runs = range(Runs_Max) BS = len(data) print('bootstrap size: ',BS) # Results I_R = [] for R in Runs: # Bootstrap BooP = data.sample(BS, replace=True) # Data X_11 = len(BooP[((BooP.A==1)&(BooP.B==1))]) X_10 = len(BooP[((BooP.A==1)&(BooP.B==0))]) X_01 = len(BooP[((BooP.A==0)&(BooP.B==1))]) X_00 = len(BooP[((BooP.A==0)&(BooP.B==0))]) # Improvement (I) = pB/pA-1 if X_11+X_10 == 0: I_x = 10101 # approx infinity! else: I_x = (X_11+X_01)/(X_11+X_10)-1 # Results I_R.append(I_x) # CI Lower[R] = np.percentile(I_R, 2.5) Media[R] = np.percentile(I_R, 50 ) Upper[R] = np.percentile(I_R, 97.5) Low = Lower[max(list(Lower.keys()))] Med = Media[max(list(Lower.keys()))] Hig = Upper[max(list(Lower.keys()))] print('I = ',Med,Low,Hig) ```
