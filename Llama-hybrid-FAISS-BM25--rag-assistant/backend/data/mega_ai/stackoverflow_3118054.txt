[site]: stackoverflow
[post_id]: 3118054
[parent_id]: 3117375
[tags]: 
I solved a similar scenario leveraging the ViewModel lifecycle: I created an ISessionAware interface (with a SetSession method) to be implemented by repositories, then I initialized the repositories through ISessionAware in the OnInitialize method of the ViewModel (which is enforced by Caliburn when the VM is managed by a ScreenConductor). Using reflection to inspect the properties holding the repositories, I could put all the infrastructure on a BaseDataVM class. Using a scope in the container would be more elegant, I think, but I don't know Ninject.
