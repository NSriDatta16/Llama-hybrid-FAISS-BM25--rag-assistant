[site]: stackoverflow
[post_id]: 4334511
[parent_id]: 52732
[tags]: 
To send you the ends of a line which is a tag, I use HTML Symbol Entities from w3schools An example, taken from a project would be as follows: The line above shows that there is a directory called library which contains the file video.swf Besides, there is the file video.xml in the directory library. That file contains the lines Long ago my son Alex downloaded the code of VideoDisplay class and the directory library from Internet I have iproved the code of the class VideoDisplay. by writting 2 members public function pos():Number { return ns.time; } public function close():Void { return ns.close(); } The program I have created is more than an explorer and presenter of .flv files It also is an explorer and presenter of the chosen fragments of each .flv file Now the code of VideoDisplay class is: class util.VideoDisplay { //{ PUBLIC MEMBERS /** * Create a new video display surface */ function VideoDisplay(targetURI:String, parent:MovieClip, name:String, depth:Number, initObj) { display = parent.attachMovie("VideoDisplay", name, depth, initObj); // create video stream nc = new NetConnection(); nc.connect(targetURI); ns = new NetStream(nc); // attach the video stream to the video object display.video.attachVideo(ns); } /** * Video surface dimensions */ function setSize(width:Number, heigth:Number):Void { display.video._width = width; display.video._height = heigth; } /** * Video clip position */ function setLocation(x:Number, y:Number):Void { display._x = x; display._y = y; } /** * Start streaming * @param url FLV file * @param bufferTime Buffer size (optional) */ public function play(url:String, bufferTime:Number):Void { if (bufferTime != undefined) ns.setBufferTime(bufferTime); ns.play(url); } /** * Pause streaming */ public function pause():Void { ns.pause(); } /** * Seek position in video */ public function seek(offset:Number):Void { ns.seek(offset); } /** * Get position in video */ public function pos():Number { return ns.time; } public function close():Void { return ns.close(); } //} //{ PRIVATE MEMBERS private var display:MovieClip; private var nc:NetConnection; private var ns:NetStream; //} }
