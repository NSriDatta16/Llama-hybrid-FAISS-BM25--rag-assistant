[site]: stackoverflow
[post_id]: 528284
[parent_id]: 528234
[tags]: 
I like Glass' rules of 3 when it comes to Reuse (which seems to be what you're interested in). 1) It is 3 times as difficult to build reusable components as single use components 2) A reusable component should be tried out in three different applications before it will be sufficiently general to accept into a reuse library From this I think you can extrapolate these corollaries a) If you don't have the budget for 3 times the time it would take you to build a single use component, maybe you should hold off on reuse. (Assuming Difficulty = Time) b) If you don't have 3 places where you'd use the component you're building, maybe you should hold off on building the reusable component. I still think OOP is useful for building the single use component, because you can always refactor it into something that is really reusable later on. (You can also refactor from PP to OOP but I think OOP comes with enough benefits regarding organization and encapsulation to start there)
