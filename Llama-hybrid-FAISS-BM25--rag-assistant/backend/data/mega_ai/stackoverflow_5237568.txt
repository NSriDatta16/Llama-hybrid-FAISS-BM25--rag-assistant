[site]: stackoverflow
[post_id]: 5237568
[parent_id]: 5226370
[tags]: 
I thought about this for a while, and indeed, ahgood was correct, SSI does not have a built-in file detection function, so flow control is limited. As an aside, I did find a reference to an extended version of SSI (a VMS based system) http://wasd.vsm.com.au/doc/env/env_0400.html and there were some extensions that would allow you to check for file existence in some sort of a fashion. However, more often then not, if one were using SSI, one would probably be running in a LAMP environment, so one could take advantage of SSI's ability to run a CGI/PHP script in the include statement. Without too much trouble, one could resort to: Insert An Existing File Insert a Non-Existing File which uses a PHP script to do all the file checking: I pass two file names, the intended file and the backup/default file, the script checks for the first and if it is not found, uses the second. This approach begs the question, why use SSI when PHP is available? In some cases, especially in a legacy system, there may be a big website based on SSI and a work-around, though less elegant, would solve a problem. PHP is not mandatory, a PERL script would also work. Finally, I did experiment with trying to use PHP's apache_setenv but I could not figure out how to pass environment variables between PHP, Apache and SSI (I also tried setting $_SERVER and $_ENV variables but without success).
