[site]: crossvalidated
[post_id]: 144375
[parent_id]: 109232
[tags]: 
edited response* Some few changes which may drive forward a little signal... Scaling: RF is only scaling invariant to the features not to the responses. RFreg uses mean square error as loss function and CV squared residuals to assess performance. Try to take the logarithm or sqaure root to your responses to lower leverage of few 'outliers'. Filtering: Use the function rfcv from randomForest to select variables. Otherwise a linear filter may be useful. Collinearity filtering: " I checked chi-square between pairs of variables and removed the ones that could be associated (p-value " -Don't use a specific p-value threshold Variable importance: Variable importance of broken model should not be trusted. Evaluating RF perfomance: That RF do fit it's own training set is irrelevant. The trees of RFreg are grown almost to max depth and will overfit the training set. Only cross-validation(segmentaion, OOB, nFold, etc.) can be used to assess the performance. The following code shows how %var explained is computed and how the OOB prediction is made. library(randomForest) obs = 500 vars = 100 X = replicate(vars,factor(sample(1:3,obs,replace=T))) y = rnorm(obs,sd=5)^2 RF = randomForest(X,y,importance=T,ntree=20,keep.inbag=T) #var explained printed print(RF) cat("% Var explained: \n", 100 * (1-sum((RF$y-RF$pred )^2) / sum((RF$y-mean(RF$y))^2) ) ) #how out-of-bag predicted values are formed #matrix of i row obs with j col predictions from j trees allTreePred = predict(RF,X,predict.all=T)$individual #for i'th sample take mean of those trees where i'th sample was OOB (inbag==0) OOBpred = sapply(1:obs,function(i) mean(allTreePred[i,RF$inbag[i,]==0])) #we can see the values are the same +/- float precision hist(OOBpred-RF$predicted) #if using RF to predict it's own training data Ypred = predict(RF,X) #any obs (i) will be present in ~0.62 of the nodes and influence it's own #prediction value. Therefore does the following prediction plot falsely #look promising par(mfrow=c(1,2),mar=c(4,4,3,3)) ylims=range(c(pred,OOBpred)) plot(y ,Ypred,ylim=ylims,main=paste("simple pred \n R^2=" ,round(cor(y,Ypred ),2))) plot(y,OOBpred,ylim=ylims,main=paste("OOB prediction \n R^2=" ,round(cor(y,OOBpred),2)))
