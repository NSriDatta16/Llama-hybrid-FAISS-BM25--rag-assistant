[site]: stackoverflow
[post_id]: 2006700
[parent_id]: 2003480
[tags]: 
Although eval does have its uses, this is not one of those cases. You have no idea what is being submitted to the eval at run time - and by the sounds of things you are storing something which you are then treating as code in a user-data storage location. If the constant was defined before the array was declared then the serialized version would contain the value instead of the label. I can only assume that the value may differ depending on the context at run-time. I would suggest that a better solution would be to roll your own macro language in PHP, e.g. something like: 'abcdefg', 'SO_IS_THIS' => 23 ); // for inline constants foreach ($defs as $label =>$val) { define($label, $key); } replacer($defs,true); function replacer($in, $init=false;) { static $defs; static $vals; if ($init) { $defs=array_keys($in); $vals=array_values($in); return count($in); } return str_replace($defs, $vals, $in); // you might want to use preg_replace() with a pattern based on $defs for a neater solution } function fix_var(&$in) { if (is_array($in)) { foreach ($in as $key=>$dummy) { fix_var($in[$key]); } } else { $in=replacer($in); } } ?> C.
