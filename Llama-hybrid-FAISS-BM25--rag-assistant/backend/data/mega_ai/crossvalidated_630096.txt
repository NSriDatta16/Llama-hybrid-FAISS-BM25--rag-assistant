[site]: crossvalidated
[post_id]: 630096
[parent_id]: 
[tags]: 
Why does a 1-knot spline regression have 3 coefficients?

I've been learning about spline regressions, and I'm trying out a statsmodels negative binomial spline regression as a changepoint detector for a time series of count data. I'm pretty confused about the coefficients of the model, and I'm hoping I might ask for some pointers. I'm using the statsmodels.api GLM to fit the model. # set a possible knot location and run the model to see how it fits. possible_knot = 5 basis_x = dmatrix(f"bs(count_index, knots=({possible_knot},), degree=1, include_intercept=True)", {"count_index": count_data.index}, return_type='dataframe') spline_model = sm.GLM(count_data.weekly_counts, basis_x, family=sm.families.NegativeBinomial(alpha=1.0)).fit() As I understand it, this spline regression is fitting two different models with the data split at the "knot" location. There's only one regressor, the time variable. So I expect there would be only be two coefficients for the model (plus the intercept). But when I look at the summary() output, I see three coefficients pluss the intercept: I see the intercept. But why are there three coefficients for my one-knot spline? Is one of them the intercept for regression #2 in the spline? Or ... have I messed up somewhere else? I'm confused about how to interpret these results since there are more coefficients than I know what to do with. I've seen there are other questions about spline coefficients, but I think my question is more basic, and I haven't managed to understand how to apply those discussions here. Thank you!
