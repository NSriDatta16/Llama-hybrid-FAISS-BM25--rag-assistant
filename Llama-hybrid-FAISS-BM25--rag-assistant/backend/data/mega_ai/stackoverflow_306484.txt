[site]: stackoverflow
[post_id]: 306484
[parent_id]: 305780
[tags]: 
I'm more familiar with non-MS DBMS, but... Since you cannot add two DATETIME values, you cannot ordinarily average them. However, you could do something similar to: SELECT AVG(datetime_column - TIMESTAMP '2000-01-01 00:00:00.000000') + TIMESTAMP '2000-01-01 00:00:00.000000' FROM table_containing_datetime_column; This calculates the average interval between the start of 2000 and the actual datetime values, and then adds that interval to the start of 2000. The choice of 'start of 2000' is arbitrary; as long as the datetime subtracted in the AVG() function is added back, you get a sensible answer. This does assume that the DBMS used supports SQL standard 'timestamp' notation, and supports the INTERVAL types appropriately. The difference between two DATETIME or TIMESTAMP values should be an INTERVAL (indeed, INTERVAL DAY(9) TO SECOND(6), to be moderately accurate, though the '9' is somewhat debatable). When appropriately mangled for the DBMS I work with, the expression 'works': CREATE TEMP TABLE table_containing_datetime_column ( datetime_column DATETIME YEAR TO FRACTION(5) NOT NULL ); INSERT INTO table_containing_datetime_column VALUES('2008-11-19 12:12:12.00000'); INSERT INTO table_containing_datetime_column VALUES('2008-11-19 22:22:22.00000'); SELECT AVG(datetime_column - DATETIME(2000-01-01 00:00:00.00000) YEAR TO FRACTION(5)) + DATETIME(2000-01-01 00:00:00.00000) YEAR TO FRACTION(5) FROM table_containing_datetime_column; Answer: 2008-11-19 17:17:17.00000
