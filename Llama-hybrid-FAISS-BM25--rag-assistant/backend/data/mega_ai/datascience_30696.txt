[site]: datascience
[post_id]: 30696
[parent_id]: 30672
[tags]: 
It mostly depends on the amount of data you have available for training. However, unless you have an extremely limited dataset and you are unable to generate synthetic data, CNNs are currently the best approach for solving your task . With sufficient data, they are very robust. To improve their performance, you can augment your dataset by randomly rotating, flipping, brightening, contrasting, scaling, cropping, blurring, and adding noise to the images throughout training. It also depends on your speed requirements and computational resources. Traditional methods have the potential to be quite fast, but if you only care about accuracy, a deep network would probably perform better. Note that some CNNs are also quite fast, such as MobileNets . There are a few reasons you might go "old school" and use template matching and more traditional approaches as suggested by @TheDjentleman: You do not have enough data to make a CNN robust AND you cannot generate synthetic data CNNs do not meet your speed requirements AND the traditional methods do You do not have sufficient resources to train a deep network, such as GPU(s). FYI Google developed a cloud computing tool for researchers and developers at a pretty reasonable cost. If none of those criteria fit your situation, go with a CNN. Lastly, you do not necessarily need a generic binary classification CNN. You can use an object detection network or even a semantic segmentation network and just ignore the location data if you do not need it.
