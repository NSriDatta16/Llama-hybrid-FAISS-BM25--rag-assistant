[site]: stackoverflow
[post_id]: 4931378
[parent_id]: 4898950
[tags]: 
Here is a sample of how to upload binary data. But an uploading to /me/photos won't publish the image into wall :( The image saving into your app's album. I'm stuck on how to announce it in the feed. Yet another way is to post an image into "Wall Album", by URL==" graph.facebook.com/%wall-album-id%/photos ". But didn't found any way to create sucha album (user creates it when uploading an image via the site). { string boundary = "---------------------------" + DateTime.Now.Ticks.ToString("x"); uploadRequest = (HttpWebRequest)WebRequest.Create(@"https://graph.facebook.com/me/photos"); uploadRequest.ServicePoint.Expect100Continue = false; uploadRequest.Method = "POST"; uploadRequest.UserAgent = "Mozilla/4.0 (compatible; Windows NT)"; uploadRequest.ContentType = "multipart/form-data; boundary=" + boundary; uploadRequest.KeepAlive = false; StringBuilder sb = new StringBuilder(); string formdataTemplate = "--{0}\r\nContent-Disposition: form-data; name=\"{1}\"\r\n\r\n{2}\r\n"; sb.AppendFormat(formdataTemplate, boundary, "access_token", PercentEncode(facebookAccessToken)); sb.AppendFormat(formdataTemplate, boundary, "message", PercentEncode("This is an image")); string headerTemplate = "--{0}\r\nContent-Disposition: form-data; name=\"{1}\"; filename=\"{2}\"\r\nContent-Type: {3}\r\n\r\n"; sb.AppendFormat(headerTemplate, boundary, "source", "file.png", @"application/octet-stream"); string formString = sb.ToString(); byte[] formBytes = Encoding.UTF8.GetBytes(formString); byte[] trailingBytes = Encoding.UTF8.GetBytes("\r\n--" + boundary + "--\r\n"); long imageLength = imageMemoryStream.Length; long contentLength = formBytes.Length + imageLength + trailingBytes.Length; uploadRequest.ContentLength = contentLength; uploadRequest.AllowWriteStreamBuffering = false; Stream strm_out = uploadRequest.GetRequestStream(); strm_out.Write(formBytes, 0, formBytes.Length); byte[] buffer = new Byte[checked((uint)Math.Min(4096, (int)imageLength))]; int bytesRead = 0; int bytesTotal = 0; imageMemoryStream.Seek(0, SeekOrigin.Begin); while ((bytesRead = imageMemoryStream.Read(buffer, 0, buffer.Length)) != 0) { strm_out.Write(buffer, 0, bytesRead); bytesTotal += bytesRead; gui.OnUploadProgress(this, (int)(bytesTotal * 100 / imageLength)); } strm_out.Write(trailingBytes, 0, trailingBytes.Length); strm_out.Close(); HttpWebResponse wresp = uploadRequest.GetResponse() as HttpWebResponse; }
