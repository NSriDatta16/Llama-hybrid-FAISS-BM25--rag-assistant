[site]: stackoverflow
[post_id]: 213528
[parent_id]: 213465
[tags]: 
... It depends... Actually the best things is developing the UI using a css / javascript / html for a style / behaviour / structure + data, in these days people wants ajax interactions (they see that cooly things everywhere so they expectation is that they don't have to reload entire pages everytime) so I think you should take this into consideration. BTW MVC ends when your content is served, and it haven't to be HTML content, you can serve xml or json in your View. ASP.NET MVC permit to return Content("TEXT") so you can organize your back end using MVC and user interaction/behaviour in javascript, for example when an ajax call is sent to the server you are calling the Controller part of your application, so you can call an Ajax action that switch to an ajax Model that render as JSON and return to the JS part of your UI (The behavioural part). Since the Behavioural part is defined in your View part (initial View is composed of CSS / HTML JS) so as long as is a presentational part I think you haven't broken the MVC patterns. PS. I' m was forgetting to say that obviously DB actions stay in your model (you can think at model as the place where the Data Access Layer + Business Object Layer stay)
