[site]: stackoverflow
[post_id]: 4925557
[parent_id]: 4925441
[tags]: 
It is atomic, because it is just a primitive 32 bit value. Hence when you read it, there is a guarantee that you will see a value set by one of the threads, but you won't know which one it was. If it was a long , you wouldn't have the same guarantee, although in practice most VM implementations do treat long writes as atomic operations. This is what the JLS has to say on the issue: VM implementors are encouraged to avoid splitting their 64-bit values where possible. Programmers are encouraged to declare shared 64-bit values as volatile or synchronize their programs correctly to avoid possible complications. But with ints you are safe, question is, is this very weak guarantee enough for you? More often than not, the answer is a no.
