[site]: stackoverflow
[post_id]: 1977841
[parent_id]: 1977629
[tags]: 
Your " factory " function could be written in this way: function factory(fn, /* arg1, arg2, ..., argn */) { var obj = new fn(), // Instantiate using 'new' to preserve the prototype chain args = Array.prototype.slice.call(arguments, 1); // remove fn argument fn.apply(obj, args); // apply the constructor again, with the right arguments return obj; } // Test usage: function SomeConstructor (foo, bar) { this.foo = foo; this.bar = bar; } SomeConstructor.prototype.test = true; var o = factory(SomeConstructor, 'foo', 'bar'); // will return: Object foo=foo bar=bar test=true, and o instanceof SomeConstructor; // true However, the new operator is not bad, I would not encourage you to avoid it, I would recommend you to stick with a proper naming convention, constructor functions identifiers in PascalCase , all other identifiers in camelCase , and also I highly recommend you to use JsLint it will help you to detect that kind of mistakes early.
