[site]: stackoverflow
[post_id]: 3120373
[parent_id]: 2946291
[tags]: 
The easiest way to achieve this would be to create multiple projects that compile the same sources. You could have projects for each of the cases you want (DLL, Static Lib). You could then have multiple configurations for those projects so that they could generate multiple variations. Project A (DLL) "DebugStatic" Configuration - Debug, Static CRT -> MYLIBDS.DLL "ReleaseStatic" Configuration - Release, Static CRT -> MYLIBS.DLL "DebugDynamic" - Debug, DLL CRT -> MYLIBD.DLL "ReleaseDynamic" - Release, DLL CRT -> MYLIB.DLL Project B (LIB) "DebugStatic" Configuration - Debug, Static CRT -> MYLIBDS.LIB "ReleaseStatic" Configuration - Release, Static CRT -> MYLIBS.LIB "DebugDynamic" - Debug, DLL CRT -> MYLIBD.LIB "ReleaseDynamic" - Release, DLL CRT -> MYLIB.LIB You could use the same approach to generate distinct binaries for Ansi vs. Unicode, x86 vs. x64, single threaded vs. multi-threaded, etc. Each project includes the same set of source files with conditionalized code blocks as needed. Then, you can add something like this into the header file associated with the library to make it easier to link in the appropriate version: #ifdef _DEBUG #ifdef _DLL #pragma comment(lib, "MYLIBD.LIB") #else #pragma comment(lib, "MYLIBDS.LIB") #endif #else #ifdef _DLL #pragma comment(lib, "MYLIB.LIB") #else #pragma comment(lib, "MYLIBS.LIB") #endif #endif
