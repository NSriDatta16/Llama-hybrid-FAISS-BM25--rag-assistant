[site]: stackoverflow
[post_id]: 3891718
[parent_id]: 3891513
[tags]: 
They differ in how expressive the low level machine type system is. The LLVM machine is pretty expressive. The C-- machine on the other hand, puts a lot of responsibility on the language front end. Quoting from the C-- FAQ : "simply, C-- has no high-level types---it does not even distinguish floating-point variables from integer variables. This model gives the front end total control of representation and type system" Also visually they look a lot different. C-- looks a lot like C, LLVM looks a lot like assembler. Pragmatically, LLVM has a lot more momentum right now. It has a JIT compiler, Apple is using it for 3D pipeline things and people are using it to connect to GCC and all sorts of weird and wonderful things. Someone called it " almost absurdly easy to work with ". On the other hand C-- is much smaller and probably easier to entirely comprehend. (I imagine a normal person with some dedication can fully understand all aspects of it.)
