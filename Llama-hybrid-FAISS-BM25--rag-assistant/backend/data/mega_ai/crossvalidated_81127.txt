[site]: crossvalidated
[post_id]: 81127
[parent_id]: 81091
[tags]: 
You want to know when the difference between counts (a Gap) of the same word in different groups is unexpectedly large. It sounds like you are assuming that the Gap between different groups generally speaking should be small. You also only have 2 groups of counts - you only give 2 datasets - which would make testing for significance difficult. You could try a Bayesian approach, provided that you are willing to make some assumptions. Bayes' theorem relates the data you have to ideas about the distributions from which your data came. Specifically, the theorem, when applied to the multiple hypotheses of your problem looks like: $P(H_1|Gap) = \frac{P(Gap|H_1)P(H_1)}{P(Gap|H_1)P(H_1) + P(Gap|H_2)P(H_2)}$ for the first hypothesis and $P(H_2|Gap) = \frac{P(Gap|H_2)P(H_2)}{P(Gap|H_1)P(H_1) + P(Gap|H_2)P(H_2)}$ for the second. The issue here is the definition of $H_1$ and $H_2$: what are they and how do you specify them? Once you know what they are, what about conditional distributions? I took a stab at doing this in Python (code/results below) but first, how I answered these questions. I assumed that you have no idea whether the Gap between 2 counts of a word should be large or small, so I assumed that for each word it could go either way, with 50/50 chance and set $P(H_1) = 0.5$ and $P(H_2) = 0.5$. Next, what about the conditionals? Well, you want to know about the probability of a Gap given some expected Gap size. As the Gaps will be integers, it made sense to model the distribution of Gaps as a Poisson distribution , with each hypothesis $H$ getting its own $\lambda$ parameter. That is, each $H \sim Pois(\lambda, Gap)$ with a different $\lambda$. These assumptions are made with no real data, and that is the drawback of this approach. That being said, here is what an implementation could look like: import math def pois(l, k): return math.exp(-l) * (l**k)/math.factorial(k) def bayes_test(h1, h2, gap): lp1 = pois(h1, gap) * 0.5 lp2 = pois(h2, gap) * 0.5 pb = lp1 + lp2 print ''.join(["P( H1 | gap ): ", str(lp1/pb), "\nP( H2 | gap ): ", str(lp2/pb)]) return [lp1/pb, lp2/pb] And here is what possible output would look like: >>> bayes_test(7, 30, 10) P( H1 | gap ): 0.999785530317 P( H2 | gap ): 0.000214469683207 [0.9997855303167933, 0.00021446968320674848] Using the Poisson distribution function I defined, we set $\lambda_1 = 7$ and $\lambda_2 = 30$, meaning that our hypotheses are that the expected Gap size is either 7 for $H_1$ or 30 for $H_2$, and we test with some observed Gap size of 10. We see then that it is much more likely that our data is explained by an expected Gap size of 7 than of 30. So, the takeaway is that if you can rework your question to be asking about several hypotheses, you can use a Bayesian approach to ask which hypothesis is more probable.
