[site]: stackoverflow
[post_id]: 4023104
[parent_id]: 
[tags]: 
how to force a stored procedure be pre-cached and stay in memory?

Stored procedures are compiled on first use. There are options to clear cache: DBCC FREEPROCCACHE DBCC DROPCLEANBUFFERS --To Verify whether the cache is emptied --DBCC PROCCACHE or to recompile or to reduce recompilations. But is it possible to force frequently used stored procedures' execution plans be pre-cached and stay in memory? I know how to do it in ADO.NET, i.e. from outside of SQL Server, but this question is how to do inside SQL Server - to be launched with the start of SQL Server itself. (*) For example, I see in SSMS Activity Monitor a running process (Task State: RUNNING, Command: SELECT) that is continuously executing T-SQL (according to Profiler) in context of tempdb database though SQL Server Agent is disabled and SQL Server is not loaded by anything, see "Details of session 54" in " Where are all those SQL Server sessions from? ". How would I do the similar resident process (or, rather, auto-starting by SQL Server start service or session) periodically recycling stored procedure? Related question: Stored procedure executes slowly on first run Update: Might be I should have forked this question in 2 but my main curiosity is how to have periodic/ looping activity with SQL Server Agent disabled? How was it made with mentioned above RUNNING SELECT session (*)? Update2: Frequently I observe considerable delays while executing stored procedures querying very small amount of data which cannot be explained only through necessity to read huge amounts of data. Can we consider this - considerable delays on insignificantly small data - as context of this question?
