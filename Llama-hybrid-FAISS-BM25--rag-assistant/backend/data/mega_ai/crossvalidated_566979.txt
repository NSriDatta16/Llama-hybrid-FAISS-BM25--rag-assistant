[site]: crossvalidated
[post_id]: 566979
[parent_id]: 
[tags]: 
How to project a new vector onto PCA space when data is high-dimensional?

Branching off this question: How to project a new vector onto PCA space? Let's say our input matrix is of dimensionality, e.g. 90 samples and 10000 features. If we run PCA on this high-dimensional data we get: # Sudo Code in an R like language. data = read.csv("highdimdata.csv") dimensions(data) # Returns 90 x 10000 result = pca(data) dimensions(result.eiganvalues()) # Returns 90 x 1 dimensions(result.eiganvector()) # Returns 90 x 20 Note, that 20 here is arbitrary number of principal components. We can set this higher or lower. Of course, we cannot exceed min(samples, feature), i.e. min(90, 10000). If we try to project a new sample: newsample = read.csv("newsample.csv") dimensions(newsample) # Returns 1 x 10000 newsample_eiganv = (newsample %*% result.eiganvector()) // ISSUE HERE Issue: Because of the dimensionality mismatch it is impossible to project new data onto the PCA space. Cannot project a vector of (1 x 10000) onto a matrix of (90 x 20). There has to be a solution. People re-project new data all the time. What am I missing here?
