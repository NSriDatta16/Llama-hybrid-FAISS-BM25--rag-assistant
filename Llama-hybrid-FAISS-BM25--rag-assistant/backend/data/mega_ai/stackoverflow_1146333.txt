[site]: stackoverflow
[post_id]: 1146333
[parent_id]: 1141191
[tags]: 
I'm not sure this is the best way to do this, but it turns out that the programs in my test folder did have their own unique make targets. However, there were some issues. If I issue make at the top level, all of src/ and test/ are built If I issue make at test/ level, changes to src/ won't be picked up To solve this, I wrote a shell script that does the following: Enter src, and build it. (if changes to src/ have happened, src/ is rebuilt) Enter test, and build a specific binary. (this will rebuild the specific binary if it has changed and will relink of the code in src/ has been updated by the previous step) The code is listed below: #!/bin/sh TYPE="$1" WHICH="$2" OUT="`readlink -f ./buildandrun.out`" rm -rf $OUT if test ! -n "$WHICH" then echo "Please specify which type to build" exit 1 fi if test ! -n "$WHICH" then echo "Please specify which $TYPE to build" exit 2 fi RV=0 echo "" >> $OUT echo "Building src" >> $OUT echo "" >> $OUT cd src make >> $OUT || RV=3 cd .. if test $RV != 0; then exit $RV; fi echo "" >> $OUT echo "Building $TYPE/$WHICH" >> $OUT echo "" >> $OUT cd $TYPE make "$WHICH" >> $OUT || RV=4 cd .. if test $RV != 0; then exit $RV; fi echo "" >> $OUT echo "Running $TYPE/$WHICH" >> $OUT echo "" >> $OUT $TYPE/$WHICH || RV=5 exit $RV This lets me do the following: ./buildandrun.sh test check_curl_requestheaders Hopefully there will eventually be someone who can show me a more elegant solution to this problem, preferably using autoconf and automake. I have a feeling that this is probably something that these tools do out of the box and I just haven't discovered it yet.
