[site]: crossvalidated
[post_id]: 416407
[parent_id]: 415691
[tags]: 
Before you get to estimation, you need to fix your model so that it respects the support of the observable outcome variable. You say in the comments that this represents percentage damage to a building, so it is restricted to be between zero and one (i.e., one-hundred percent). In its present form, your model has a regression function that is limited to values in the support, but it allows errors to go beyond this. That is a bad model, since it allows observable values well outside their possible range, and it will give prediction intervals that extend beyond the possible range. In view of the meaning of your output variable, I would recommend you use some form of nonlinear model where the output is restricted to the interval between zero and one. If you would like to use something like your present model, then the simplest way to correct its present problem ---while preserving the intended form of your model--- is to put the error terms inside the transformation, rather than adding it afterwards. Given explanatory variables $a_1,...,a_n$ and response variables $R_1,...,R_n$ , you can model the latter as: $$R_i = \Phi \Bigg( \frac{1}{\alpha} \cdot \log \bigg( \frac{a_i}{\beta} \bigg) + \varepsilon_i \Bigg) \quad \quad \quad \varepsilon_1,...,\varepsilon_n \sim \text{IID N}(0, \sigma^2).$$ This model form still uses the function $\Phi$ (standard notation for the CDF of the standard normal distribution) as your transformation, but now the error terms appear inside this function. This ensures that the response variable is subject to random error, but it must still remain between zero and one. From this point you can proceed with your Bayesian analysis by imposing the relevant priors and finding the posterior distribution and predictive distribution (e.g., by MCMC methods). The above model form will ensure that the predictive distribution for the response variable respects its support, so your interval estimates should not go beyond the bounds of allowable values.
