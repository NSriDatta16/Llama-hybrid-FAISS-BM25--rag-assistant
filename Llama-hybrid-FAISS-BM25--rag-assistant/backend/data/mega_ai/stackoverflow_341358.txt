[site]: stackoverflow
[post_id]: 341358
[parent_id]: 340645
[tags]: 
You can do this with an IValueConverter. Here is a simple one: public class XAttributeConverter : IValueConverter { public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture) { var xml = value as XElement; var name = parameter as string; return xml.Attribute(name).Value; } } Then in your Xaml you can reference the type converter and pass the attribute name as the parameter: This is when you bind to the xml loaded in an XElement: XElement xml = XElement.Parse(" "); ItemList.ItemsSource = xml.Descendants("item"); Not a super elegant binding syntax, but it does work and is easier than mapping to classes.
