[site]: crossvalidated
[post_id]: 195293
[parent_id]: 
[tags]: 
What is the most appropriate way to transform proportions when they are an independent variable?

I thought I understood this issue, but now I'm not as sure and I'd like to check with others before I proceed. I have two variables, X and Y . Y is a ratio, and it is not bounded by 0 and 1 and is generally normally distributed. X is a proportion, and it is bounded by 0 and 1 (it runs from 0.0 to 0.6). When I run a linear regression of Y ~ X and I find out that X and Y are significantly linearly related. So far, so good. But then I investigate further and I start to think that maybe X and Y 's relationship might be more curvilinear than linear. To me, it looks like the relationship of X and Y might be closer to Y ~ log(X) , Y ~ sqrt(X) , or Y ~ X + X^2 , or something like that. I have empirical reasons to assume the relationship might be curvilinear, but not reasons to assume that any one non-linear relationship might be better than any other. I have a couple of related questions from here. First, my X variable takes four values: 0, 0.2, 0.4, and 0.6. When I log- or square-root-transform these data, the spacing between these values distorts so that the 0 values are much further away from all the others. For lack of a better way of asking, is this what I want? I assume it isn't, because I get very different results depending on the level of distortion I accept. If this isn't what I want, how should I avoid it? Second, to log-transform these data, I have to add some amount to each X value because you can't take the log of 0. When I add a very small amount, say 0.001, I get very substantial distortion. When I add a larger amount, say 1, I get very little distortion. Is there a "correct" amount to add to an X variable? Or is it inappropriate to add anything to an X variable in lieu of choosing an alternative transformation (e.g. cube-root) or model (e.g. logistic regression)? What little I've been able to find out there on this issue leaves me feeling like I should tread carefully. For fellow R users, this code would create some data with a sort of similar structure as mine. X = rep(c(0, 0.2,0.4,0.6), each = 20) Y1 = runif(20, 6, 10) Y2 = runif(20, 6, 9.5) Y3 = runif(20, 6, 9) Y4 = runif(20, 6, 8.5) Y = c(Y4, Y3, Y2, Y1) plot(Y~X)
