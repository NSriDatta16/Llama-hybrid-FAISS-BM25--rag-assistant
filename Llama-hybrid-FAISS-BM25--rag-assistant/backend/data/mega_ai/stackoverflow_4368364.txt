[site]: stackoverflow
[post_id]: 4368364
[parent_id]: 
[tags]: 
Implementing classes in python

Hey this is one of the classes that I had for homework in my cs class and now i'm playing around with python. I want to learn how to design classes in python and would like to implement this one. It's a relatively straight forward class. Help would be appreciated. Here's the code: #include #include #include #include #include #include #include #include using namespace std; int num_flights=0 ; const int Columns_Total = 14; /*the total columns are 14 for each flight*/ class Flight { public: Flight(); void major_calc(string& filename,ifstream& is,string& line, ofstream& os); void print (ofstream& os); private: vector > store; int num_lines; double avg_wind_speed; double avg_height; double avg_tempr; double std_dev_speed; double std_dev_height; double std_dev_tempr; }; Flight::Flight() { } void Flight::major_calc(string& filename,ifstream& is, string& line, ofstream& os) { num_lines=0; vector single_line; /* Vector to one test line of a flight*/ vector flight_height; /* Vector stores the heights associated with all the test lines for a particular flight*/ vector flight_wind_speed; /* Vector stores the wind speeds associated with all the test lines for a particular flight*/ vector flight_tempr; /* Vector stores the temperatures associated with all the test lines for a particular flight*/ while(getline(is,line)) { if (line.substr(0,3) == "ACM") /* Checks a new flight */ { num_flights++; os > FieldInfo; single_line.push_back(FieldInfo); } store.push_back(single_line); flight_height.push_back(single_line[4]); /* Updates the height vector with the value from a particular test line*/ flight_wind_speed.push_back(single_line[3]); /* Updates the wind speed vector with the value from a particular test line*/ flight_tempr.push_back(single_line[8]);/* Updates the temperature vector with the value from a particular test line*/ } single_line.clear(); /* Empties the single line vector so it can be used again*/ } double temp1=0; /* temporary variables used to calculate the average height, average speed and average temperature*/ double temp2=0; double temp3=0; for (int i=0; i >filename; ifstream is; is.open(filename.c_str()); /*open the file*/ bool FileDoesntExist = is.fail(); if(FileDoesntExist) /*checks if the file exists*/ { cout complete; while(!is.eof()) { Flight test; while(getline(is,line)) { test.major_calc(filename,is,line,os); test.print(os); } complete.push_back(test); } return 0; }
