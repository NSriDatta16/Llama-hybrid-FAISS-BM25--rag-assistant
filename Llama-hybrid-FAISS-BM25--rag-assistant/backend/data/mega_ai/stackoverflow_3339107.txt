[site]: stackoverflow
[post_id]: 3339107
[parent_id]: 3337426
[tags]: 
Example scenario: I have 2 projects, "common-project" and "application-project". The application-project depends on the API provided by common-project. There are also 3rd party jars (example guava) used by both projects. I would create 3 maven projects: a parent aggregating module, a common-project module and an application-project module depending on common-project and declare guava as dependency in the parent module (so that child project will inherit it). Something like this: $ tree Q3337426 Q3337426 ├── application-project │ ├── pom.xml │ └── src │ ├── main │ └── ... │ └── test │ └── ... ├── common-project │ ├── pom.xml │ └── src │ ├── main │ └── ... │ └── test │ └── ... └── pom.xml Where the parent pom.xml looks like this: 4.0.0 com.stackoverflow.Q3337426 Q3337426 pom 1.0-SNAPSHOT Q3337426 - Root http://maven.apache.org com.google.guava guava r05 junit junit 3.8.1 test common-project application-project The pom.xml for the common-project: 4.0.0 Q3337426 com.stackoverflow.Q3337426 1.0-SNAPSHOT common-project Q3337426 - Common Project The pom.xml for the application-project: 4.0.0 Q3337426 com.stackoverflow.Q3337426 1.0-SNAPSHOT application-project Q3337426 - Application Project ${project.groupId} common-project ${project.version} This is the Maven way to organize such a project and will allow to trigger a reactor build from the root project to build everything. (...) Both projects are under active development, so I would prefer not to have to build a jar of common-project first, then "install" that to my local repository before I can use the new features in application-project. The m2eclipse plugin can Resolve dependencies from Workspace projects (this is actually the default behavior). So if you import both application-project and common-project , the former would be configured to depend on the sources of common-project (instead of depending on the jar). Changes made to common-project will be immediately visible when using this setup. This should solve your concern inside the IDE. Outside the IDE, run a reactor build on the top project.
