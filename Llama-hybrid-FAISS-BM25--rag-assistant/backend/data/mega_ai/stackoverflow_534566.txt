[site]: stackoverflow
[post_id]: 534566
[parent_id]: 534274
[tags]: 
(relates to messages/classes, not just primitives) Google designed "protocol buffers" for this type of scenario (they shift a huge amount of data around) - their format is compact (using things like base-128 encoding) but extensible and version tolerant (so clients and servers can upgrade easily). In the .NET world, I can recommend 2 protocol buffers implementations: protobuf-net (by me) dotnet-protobufs (by Jon Skeet) For info, protobuf-net has direct support for ISerializable and remoting (it is part of the unit tests ). There are performance/size metrics here . And best of all, all you do is add a few attributes to your classes. Caveat: it doesn't claim to be the theoretical best - but pragmatic and easy to get right - a compromise between performance, portability and simplicity.
