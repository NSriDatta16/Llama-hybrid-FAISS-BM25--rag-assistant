[site]: stackoverflow
[post_id]: 1907855
[parent_id]: 1905258
[tags]: 
Whether to use S3, S4, or a package at all is mostly a style issue (as Dirk says), but I would suggest using one of those if you want to have a very well structured object (just as you would in any OOP language). For instance, all the time series classes have time series objects (I believe that they're all S3 with the exception of its ) because it allows them to enforce certain behavior around the construction and usage of those objects. Similarly with the question about creating a package: it's a good idea to do this if you will be re-using your code frequently or if the code will be useful to someone else. It requires a little more effort, but the added organizational structure can easily make up for the cost. Regarding S3 vs. S4 (discussed on R-Help here and here ), the basic guideline is that S3 classes are more "quick and dirty" while S4 classes place more rigid control over objects and types . If you're working on Bioconductor, you typically will use S4 (see, for instance, "S4 classes and methods" ). I would recommend reading some of the following: "A (Not So) Short Introduction to S4" by Christophe Genolini "Programmers' niche: A simple class, in S3 and S4" by Thomas Lumley "Brobdingnag: a ''hello world'' package using S4 methods" by Robin K. S. Hankin "Converting packages to S4" by Douglas Bates "How S4 Methods Work" by John Chambers For documentation, Hadley's suggestion is spot on: Roxygen will make life easier and puts the documentation right next to the code. That aside, you may still want to provide other comments in your code beyond what Roxygen or the man files require, in which case it's a good practice to comment your code for other developers. Those comments will not end up in your package; they will only be visible in the source code.
