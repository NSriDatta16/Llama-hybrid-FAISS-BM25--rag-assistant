[site]: stackoverflow
[post_id]: 1758418
[parent_id]: 1758315
[tags]: 
Since you are doing a shuffle, you are basically touching every element at least once, so you already have a big O of at least N. If you pick a random index, then test the element at that location, then you are going to get the variable you want before you have touched N elements, guaranteed, thus a guaranteed improvement. If you have a 20% distribution of elements then you would expect every 5th random index to give you an element that meets your criteria. While this is not a guarantee, it is a probabliltiy. Absolute worst case scenario, you would choose all 80% of the elements that didn't meet your criteria, then the next one would be your random element. you max execution would be limited to would be would be .8N + 1, still better than N. and on average your big O cost would be something like a constant of 5-10 . WAAAAY better in terms of execution as N increases.
