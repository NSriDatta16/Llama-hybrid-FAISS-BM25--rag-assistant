[site]: stackoverflow
[post_id]: 4105500
[parent_id]: 4105474
[tags]: 
I believe the quickest (as in quickest to develop) is LINQ to SQL . It does exactly that. Create classes that represent a list of attributes from each table. When accessing them, it retrieves data automatically from the database and populates these objects with data, which you can use then as a list of objects. It's all automated. You just write one single row of code for this, after you've made the mapping (dragged tables from the database to the Linq to SQL mapping) The code can look as simple as this: List yourList = YourAutomaticallyGeneratedDataContext.Something.ToList(); For Firebird, of course, LINQ to SQL won't work. Try Entity Framework instead. NHibernate is too much of a fuss, in my opinion. But since you want the Quickest to process , I recommend you check out this site: http://ormbattle.net/ Choose your weapon, then fire. I am not considering the option with DataReader. It's a pain, and can lead to bugs. It's hard to maintain too. Or, check this question, Best free ORM tools to use with .NET 2.0/3.5
