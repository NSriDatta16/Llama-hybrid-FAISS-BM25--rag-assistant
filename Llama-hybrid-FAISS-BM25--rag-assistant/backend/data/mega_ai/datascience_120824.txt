[site]: datascience
[post_id]: 120824
[parent_id]: 120822
[tags]: 
The best way for imputation depends not only on tha data, but also on the models that operate on the data. Not knowing the data and not knowing model, all I can do is to give some approaches. You could perform a normal imputation and add for each column with nans another binary column that indicates whether the value was imputed or originally there. By doing so, the information is not lost to the model and some models might learn to use these binary flags. There are some models that can handle nan-values. Some tree based models like XGBoost store for example a default child for nan-values in each node. There are more complex imputation methods that you could try. One could for example try to predict a nan-value based on the values of the other columns. This might be computational expensive and take some interations to converge (if the prediction of a value in column A is based on nan-values in column B and afterwards the value in column B is imputed in a similar way, then one might want to update the imputation in column A as well).
