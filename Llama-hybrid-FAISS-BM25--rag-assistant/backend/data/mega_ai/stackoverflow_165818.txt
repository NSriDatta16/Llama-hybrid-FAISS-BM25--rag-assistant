[site]: stackoverflow
[post_id]: 165818
[parent_id]: 165783
[tags]: 
You'll be giving up some control of the DOM True, nothing will explode, but it's bad practice. If you put duplicate ids on the page you'll basically loose the ability to be sure about what you're getting when you try to access an element by its id. var whoKnows = document.getElementById('duplicateId'); The behavior is actually different, depending on the browser. In any case, you can use classNames for duplicate values, and you'll be avoiding the problem altogether . The browser will try to overlook faults in your markup, but things become messy and more difficult . The best thing to do is keep your markup valid. You can describe both the type of the element and its unique database id in a className. You could even use multiple classNames to differentiate between them. There are a lot of valid possibilities : or or or These are all completely legitimate & valid snippets of XHTML. Notice how, in the last snippet, that I've still got an id working for me, which is nice. Accessing elements by their id is very quick and easy, so you definitely want to be able to leverage it when you can. You'll already spend enough of your time in javascript making sure that you've got the right values and types . Putting duplicate ids on the page will just make things harder for you. If you can find ways to write standards-compliant markup, it has many practical benefits .
