[site]: stackoverflow
[post_id]: 1915649
[parent_id]: 
[tags]: 
Variation in execution time

I've been profiling a method using the stopwatch class, which is sub-millisecond accurate. The method runs thousands of times, on multiple threads. I've discovered that most calls (90%+) take 0.1ms, which is acceptable. Occasionally, however, I find that the method takes several orders of magnitude longer, so that the average time for the call is actually more like 3-4ms. What could be causing this? The method itself is run from a delegate, and is essentially an event handler. There are not many possible execution paths, and I've not yet discovered a path that would be conspicuously complicated. I'm suspecting garbage collection, but I don't know how to detect whether it has occurred. Finally, I am also considering whether the logging method itself is causing the problem. (The logger is basically a call to a static class + event listener that writes to the console.)
