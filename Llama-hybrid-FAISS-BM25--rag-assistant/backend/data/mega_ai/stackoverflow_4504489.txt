[site]: stackoverflow
[post_id]: 4504489
[parent_id]: 
[tags]: 
MonadPlus definition for Haskell IO

I was just writing a quick bit of code, and I wanted to use the guard function in the IO Monad. However, there is no definition of MonadPlus for IO which means that we cannot use guard in IO land. I have seen an example of using the MabyeT transformer to use guard in the Maybe Monad and then lifting all of the IO actions but I do not really want to do that if I do not have to. Some example of what I want might be: handleFlags :: [Flag] -> IO () handleFlags flags = do when (Help `elem` flags) (putStrLn "Usage: program_name options...") guard (Help `elem` flags) ... do stuff ... return () I was wondering if there was a nice way to get a guard function (or something similar) in the IO Monad through a declaration for MonadPlus or otherwise. Or perhaps I am doing it wrong; is there a better way to write that help message in the function above? Thanks. (P.S. I could use if-then-else statements but it seems to defeat the point somehow. Not to mention that for a lot of options it will result in a huge amount of nesting.)
