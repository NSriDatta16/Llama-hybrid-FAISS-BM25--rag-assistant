[site]: stackoverflow
[post_id]: 4352321
[parent_id]: 4329487
[tags]: 
The solution ended up using a subquery to set the max results. I added the subquery using Subqueries.PropertyIn. I am cloning the "criteria" to "limiter" because I added criterion expression in code not shown. So I need to clone these criterion into the subquery so the top 10 select will be in the "IN" statement. Now I can eager load the child collections and add pagination to the root entity to get 10 enties back without issues with cartesian or n+1. I will try to follow up with more complete and organized code. //criteria = context.Session.CreateCriteria (); //changed criteria to DetachedCriteria. criteria = DetachedCriteria.For (); DetachedCriteria limiter = CriteriaTransformer.Clone(criteria); limiter.SetProjection(Projections.Id()); limiter.SetMaxResults(10); criteria.Add(Subqueries.PropertyIn("AssociateId", limiter)); criteria.SetFetchMode("Roles", NHibernate.FetchMode.Eager); criteria.SetFetchMode("Messages", NHibernate.FetchMode.Eager); criteria.SetFetchMode("DirectReports", NHibernate.FetchMode.Eager); criteria.SetResultTransformer(new DistinctRootEntityResultTransformer()); return criteria.List ();
