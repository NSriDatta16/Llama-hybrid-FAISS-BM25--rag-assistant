[site]: crossvalidated
[post_id]: 559876
[parent_id]: 
[tags]: 
How to model risk with Neural Networks (is there a better approach)?

What should be our target if we have our features and our return is variable. Suppose we have: feature_1 feature_2 potential_payout actual_payout 10 20 200 +200 5 3 20 -10 1 2 5 -10 So, we have this sort of a "gambling" set up. High potential payouts are being paid less frequently. How to model this with Neural Nets? I've tried many things like computing implied probabilities and modelling them directly, but that doesn't seem to work well (I understand there's a good reason for that). So what should be the target, does using NNs even make senes? Is there any already-made package for PyTorch? Please think of this like "which horse should I bet on" given past races. Is there any closely related Kaggle example?
