[site]: stackoverflow
[post_id]: 5045458
[parent_id]: 
[tags]: 
Firefox does not report exception when using JavaScript DOMContentLoaded with document.addEventListener

I am writing an internal framework that can have no dependencies (i.e. jQuery, etc.) and am trying to implement my own DOM ready-style functionality. It seems that when a callback in the ready queue (array of callbacks to complete on DOM ready), if an exception is thrown inside that function, execution stops and continues onto the next callback (which is what I want), but Firefox will not report the error (log to the console, trigger onerror, anything). Am I doing something wrong? I have implemented this using a combination of a pattern by Dean Edwards ( http://dean.edwards.name/weblog/2009/03/callbacks-vs-events/ ) and the jQuery source. I do not wish to implement just like jQuery because if one callback fails, the subsequent callbacks won't execute. var readyCallbacks = []; (function () { var currentHandler, fireReady, removeEvents, loopCallbacks = function () { for (var i = 0, len = readyCallbacks.length; i Here is my test implementation. The console is written to and the DOM element has been manipulated. In IE error with the UNDEFINED_VARIABLE++; is shown in the console, but not in Firefox. Client.ready(function () { console.log('logging before error'); UNDEFINED_VARIABLE++; // This does not error in Firefox console.log('logging after error, not logged in Firefox'); }); Client.ready(function () { console.log('before DOM access'); document.getElementById('cheese').innerHTML = 'cheese'; console.log('after DOM access'); }); test
