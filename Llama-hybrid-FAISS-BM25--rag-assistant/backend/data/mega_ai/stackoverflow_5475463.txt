[site]: stackoverflow
[post_id]: 5475463
[parent_id]: 
[tags]: 
Hibernate : Use of @OneToMany or @ManyToMany targeting an unmapped class

i can't find where is my error, where i'm not mapping my class, but to me everything shoud be fine.. but isn't. Can someone help me to find it ? org.hibernate.AnnotationException: Use of @OneToMany or @ManyToMany targeting an unmapped class: com.bytecode.entities.Event.categorytagit[com.bytecode.entities.Categorytagit] at org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1068) at org.hibernate.cfg.annotations.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:600) at org.hibernate.cfg.annotations.CollectionBinder$1.secondPass(CollectionBinder.java:541) at org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:43) at org.hibernate.cfg.Configuration.secondPassCompile(Configuration.java:1130) at org.hibernate.cfg.AnnotationConfiguration.secondPassCompile(AnnotationConfiguration.java:324) at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1286) at org.hibernate.cfg.AnnotationConfiguration.buildSessionFactory(AnnotationConfiguration.java:859) package com.bytecode.entities; // Generated 29/03/2011 12:15:48 by Hibernate Tools 3.2.1.GA import java.util.Date; import java.util.HashSet; import java.util.Set; import javax.persistence.CascadeType; import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.FetchType; import javax.persistence.GeneratedValue; import static javax.persistence.GenerationType.IDENTITY; import javax.persistence.Id; import javax.persistence.JoinColumn; import javax.persistence.JoinTable; import javax.persistence.ManyToMany; import javax.persistence.ManyToOne; import javax.persistence.OneToMany; import javax.persistence.Table; import javax.persistence.Temporal; import javax.persistence.TemporalType; /** * Event generated by hbm2java */ @Entity @Table(name = "event", catalog = "tagit") public class Event implements java.io.Serializable { private Integer id; private User user; private String name; private Date iniEventDate; private Date iniInscDate; private Date endInscDate; private String urlPicture; private Integer idEventoFacebook; private String description; private Integer places; private Integer lottery; private String street; private String city; private Integer idMainEvent; private Set tags = new HashSet (0); private Set presentparticipantses = new HashSet (0); private Set users = new HashSet (0); private Set categorytagit = new HashSet (0); public Event() { } public Event(User user, String name, Date iniEventDate, String description, String street, String city) { this.user = user; this.name = name; this.iniEventDate = iniEventDate; this.description = description; this.street = street; this.city = city; } public Event(User user, String name, Date iniEventDate, Date iniInscDate, Date endInscDate, String urlPicture, Integer idEventoFacebook, String description, Integer places, Integer lottery, String street, String city, Integer idMainEvent, Set tags, Set presentparticipantses, Set users, Set categorytagit) { this.user = user; this.name = name; this.iniEventDate = iniEventDate; this.iniInscDate = iniInscDate; this.endInscDate = endInscDate; this.urlPicture = urlPicture; this.idEventoFacebook = idEventoFacebook; this.description = description; this.places = places; this.lottery = lottery; this.street = street; this.city = city; this.idMainEvent = idMainEvent; this.tags = tags; this.presentparticipantses = presentparticipantses; this.users = users; this.categorytagit = categorytagit; } @Id @GeneratedValue(strategy = IDENTITY) @Column(name = "id", unique = true, nullable = false) public Integer getId() { return this.id; } public void setId(Integer id) { this.id = id; } @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "idOrganizer", nullable = false) public User getUser() { return this.user; } public void setUser(User user) { this.user = user; } @Column(name = "name", nullable = false, length = 55) public String getName() { return this.name; } public void setName(String name) { this.name = name; } @Temporal(TemporalType.TIMESTAMP) @Column(name = "iniEventDate", nullable = false, length = 19) public Date getIniEventDate() { return this.iniEventDate; } public void setIniEventDate(Date iniEventDate) { this.iniEventDate = iniEventDate; } @Temporal(TemporalType.TIMESTAMP) @Column(name = "iniInscDate", length = 19) public Date getIniInscDate() { return this.iniInscDate; } public void setIniInscDate(Date iniInscDate) { this.iniInscDate = iniInscDate; } @Temporal(TemporalType.TIMESTAMP) @Column(name = "endInscDate", length = 19) public Date getEndInscDate() { return this.endInscDate; } public void setEndInscDate(Date endInscDate) { this.endInscDate = endInscDate; } @Column(name = "urlPicture") public String getUrlPicture() { return this.urlPicture; } public void setUrlPicture(String urlPicture) { this.urlPicture = urlPicture; } @Column(name = "idEventoFacebook") public Integer getIdEventoFacebook() { return this.idEventoFacebook; } public void setIdEventoFacebook(Integer idEventoFacebook) { this.idEventoFacebook = idEventoFacebook; } @Column(name = "description", nullable = false, length = 65535) public String getDescription() { return this.description; } public void setDescription(String description) { this.description = description; } @Column(name = "places") public Integer getPlaces() { return this.places; } public void setPlaces(Integer places) { this.places = places; } @Column(name = "lottery") public Integer getLottery() { return this.lottery; } public void setLottery(Integer lottery) { this.lottery = lottery; } @Column(name = "street", nullable = false) public String getStreet() { return this.street; } public void setStreet(String street) { this.street = street; } @Column(name = "city", nullable = false, length = 55) public String getCity() { return this.city; } public void setCity(String city) { this.city = city; } @Column(name = "idMainEvent") public Integer getIdMainEvent() { return this.idMainEvent; } public void setIdMainEvent(Integer idMainEvent) { this.idMainEvent = idMainEvent; } @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "event") public Set getTags() { return this.tags; } public void setTags(Set tags) { this.tags = tags; } @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "event") public Set getPresentparticipantses() { return this.presentparticipantses; } public void setPresentparticipantses(Set presentparticipantses) { this.presentparticipantses = presentparticipantses; } @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY) @JoinTable(name = "eventuser", catalog = "tagit", joinColumns = { @JoinColumn(name = "idEvent", nullable = false, updatable = false)}, inverseJoinColumns = { @JoinColumn(name = "idUser", nullable = false, updatable = false)}) public Set getUsers() { return this.users; } public void setUsers(Set users) { this.users = users; } @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY) @JoinTable(name = "eventcategory", catalog = "tagit", joinColumns = { @JoinColumn(name = "idEvent", nullable = false, updatable = false)}, inverseJoinColumns = { @JoinColumn(name = "idCategory", nullable = false, updatable = false)}) public Set getCategorytagit() { return this.categorytagit; } public void setCategorytagit(Set categorytagit) { this.categorytagit = categorytagit; } } My hibernate.cfg: org.hibernate.dialect.MySQLDialect com.mysql.jdbc.Driver jdbc:mysql:xxxx xxxxxxxxx xxxxxxxxxxxx thread 2 5 100 20 50 60 true true UPDATE: package com.bytecode.entities; // Generated 29/03/2011 12:15:48 by Hibernate Tools 3.2.1.GA import java.util.HashSet; import java.util.Set; import javax.persistence.CascadeType; import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.FetchType; import javax.persistence.GeneratedValue; import static javax.persistence.GenerationType.IDENTITY; import javax.persistence.Id; import javax.persistence.JoinColumn; import javax.persistence.JoinTable; import javax.persistence.ManyToMany; import javax.persistence.OneToMany; import javax.persistence.Table; /** * Categorytagit generated by hbm2java */ @Entity @Table(name = "categorytagit", catalog = "tagit") public class Categorytagit implements java.io.Serializable { private Integer id; private String name; private Set likeses = new HashSet (0); private Set categoryfacebooks = new HashSet (0); private Set events = new HashSet (0); public Categorytagit() { } public Categorytagit(String name) { this.name = name; } public Categorytagit(String name, Set likeses, Set categoryfacebooks, Set events) { this.name = name; this.likeses = likeses; this.categoryfacebooks = categoryfacebooks; this.events = events; } @Id @GeneratedValue(strategy = IDENTITY) @Column(name = "id", unique = true, nullable = false) public Integer getId() { return this.id; } public void setId(Integer id) { this.id = id; } @Column(name = "name", nullable = false, length = 55) public String getName() { return this.name; } public void setName(String name) { this.name = name; } @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "categorytagit") public Set getLikeses() { return this.likeses; } public void setLikeses(Set likeses) { this.likeses = likeses; } @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "categorytagit") public Set getCategoryfacebooks() { return this.categoryfacebooks; } public void setCategoryfacebooks(Set categoryfacebooks) { this.categoryfacebooks = categoryfacebooks; } @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY) @JoinTable(name = "eventcategory", catalog = "tagit", joinColumns = { @JoinColumn(name = "idCategory", nullable = false, updatable = false)}, inverseJoinColumns = { @JoinColumn(name = "idEvent", nullable = false, updatable = false)}) public Set getEvents() { return this.events; } public void setEvents(Set events) { this.events = events; } }
