[site]: stackoverflow
[post_id]: 292995
[parent_id]: 
[tags]: 
C# and MySQL - Gentle Framework alternatives

I'm playing around at the start of a personal project in C# and MySQL. I am familiar with the use of the Gentle Framework (using MyGeneration to generate the classes, based on the data model). Here's what I like about Gentle; Simple-to-use [class].Retrieve(id) / [object].Persist() semantics with strong-typing of fields; I start with the DB data model, and choose when to generate new code files; MyGeneration allows for some 'manual code sections' which are kept across generations... ...and partial classes allow me to add permanent code in parallel files, e.g. simple read-only properties (like 'FullName' from FirstName and Surname members for a Person object) - or I could use inheritance; I find it a tolerable and quick way to create a DAL, and add certain Business-Object-Layer-like facilities to it. Unfortunately, to query efficiently, I end up using queries / SqlCommands a fair bit, and relies on weakly typed references to column names etc., and appears to risk sidestepping the object broker and therefore caching advantages. In any event, Gentle is no longer being developed, and it seems like a good time to consider alternatives. So, what should I consider? Generation of strongly-typed ADO Datasets is possible, but it seems like it will be difficult to add to it (e.g. that 'FullName' virtual column) in a way that will persist after updates to the table structure with regeneration of the dataset. NHibernate seems to have lots of fans... but my first looks into it seem to suggest that the XML data definition is king, not the existing data-model in the DB. It also looks quite heavy on dependencies; The SubSonic demo appears to suggest it generates files, and in the demo of WebAppProjects, looks like it might generate files in a way that I could add to, or inherit from; The MySql Connector.Net tools appear not to support the dataset generation for Linq (e.g. via drag-and-drop), and I suspect that this is a key need for strongly-typed data access. Your thoughts will be gratefully appreciated! Thank you in advance...
