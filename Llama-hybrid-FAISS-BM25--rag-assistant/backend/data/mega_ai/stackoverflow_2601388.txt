[site]: stackoverflow
[post_id]: 2601388
[parent_id]: 2601313
[tags]: 
Since you iterate twice over the array in a nested way, worst case cost should be O(n²).. a closer look would show you that since you start second loop from the element after the one you are checking you have: N-1 + (N-2) + (N-3) + (N-4) + (N-5) + .... + 1 comparisons so the exact average cost would be N*(N-1) / 2 According to your comment I think that you should assume that every element is uniformely chosen between the set of possible values. This means that the element A[i] has the probability 1/n of being exactly a specified value. Starting from here you can do your considerations: first of all you choose a whatever element of the array A[i] . What is the probability of having A[i] == A[i+1] ? It's 1/n² since both elements are supposed to be random. what is the probability of having A[i] == A[i+2] ? You have 1/n * (n-1/n) * 1/n because you have respectively a specified element, anything except the specified one, and the same specified element you can extend the argumentation over any element A[k] with k>i , then you add all probabilities and you will have which is the average probability of having two unique element in the array starting from a specified one. you extend thing thing further considering that you can start from any A[i] with i = 0..l-1 . Of course every different i will have different probabilities because array will be shorter as i increases. NOTE : n is the number of different items that can be inserted into the array, not its length. After this you can easily estimate your average comparison cost..
