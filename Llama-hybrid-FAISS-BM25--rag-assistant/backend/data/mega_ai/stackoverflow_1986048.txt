[site]: stackoverflow
[post_id]: 1986048
[parent_id]: 1985978
[tags]: 
Assuming this is question 6.8, it doesn't say you have to use accumulate - it says use "a library algorithm". However, you can use accumulate: #include int main () { std::string str = "Hello World!"; std::vector vec(10,str); std::string a = std::accumulate(vec.begin(), vec.end(), std::string("")); std::cout All that accumulate does is set 'sum' to the third parameter, and then for all of the values 'val' from first parameter to second parameter, do: sum = sum + val it then returns 'sum'. Despite the fact that accumulate is declared in it will work for anything that implements operator+() Note : This solution, while elegant, is inefficient, as a new string will be allocated and populated for each element of vec .
