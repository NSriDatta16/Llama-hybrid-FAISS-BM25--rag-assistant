[site]: stackoverflow
[post_id]: 1841094
[parent_id]: 1778126
[tags]: 
Your code outputs: null shot a fireball at null for 1 damage! null has 99 HP left! null attacked the null for 7 damage! null has 92 HP left! ...etc adon_y_coya's suggestion outputs: Hero shot a fireball at Dragon for 15 damage! Dragon has 85 HP left! Hero shot a fireball at Dragon for 13 damage! Dragon has 72 HP left! ...etc Martijin Courteaux's suggestion outputs: Hero attacked the Dragon for 5 damage! Dragon has 95 HP left! Hero shot a fireball at Dragon for 12 damage! Dragon has 83 HP left! ...etc Bozho's suggestion outputs: Hero shot a fireball at Dragon for 1 damage! Dragon has 99 HP left! Hero shot a fireball at Dragon for 3 damage! Dragon has 96 HP left! ...etc jitter's suggestion outputs: Hero shot a fireball at Dragon for 17 damage! Dragon has 83 HP left! Hero attacked the Dragon for 14 damage! Dragon has 69 HP left! ...etc William's suggestion is exactly the same as adon_y_coya's. So, it appears that you have no less than five posted answers, consisting of four different ways to do it. And yet you haven't accepted a single answer and you seem to think that this topic is full of trolls and unhelpful. But I think the real problem is that you just don't understand what you're doing, at least in terms of inheritance. You are shadowing your name variable, so that the subclass's name variable and the superclass's name variable are two different variables. You are referencing Combatant.name, which is different from Enemy.name and Player.name, because you are shadowing. That leads me to another possible "solution" for you, although it's just an indicator that you're doing it wrong in the first place. public void attack(Combatant target) { damage = (int) (Math.random() * attack); System.out.println( ((this instanceof Player) ? ((Player)this).name : ((Enemy)this).name) + " attacked the " + ((target instanceof Player) ? ((Player)target).name : ((Enemy)target).name) + " for " + damage + " damage!"); target.hp -= damage; System.out.println( ((target instanceof Player) ? ((Player)target).name : ((Enemy)target).name) + " has " + target.hp + " HP left!"); } That approach gives the correct output, but completely eliminates the purpose of class inheritance, obviously. adon_y_coya's suggestion is the correct one, because it is the one that correctly utilizes inheritance. And don't tell me my suggestion doesn't work. Because, as Joonas Pulakka so cleverly pointed out, twice, the suggestions do work. If you're still finding problems with them then it's because you don't understand Java inheritance well enough - so go find a Java book and read it, because you are not solid enough in your understanding to start messing with inheritance. That's why you've got a -2; people feel that you should probably learn more before you start asking others.
