[site]: stackoverflow
[post_id]: 575533
[parent_id]: 575480
[tags]: 
fields should be an array, whereas labels and rules should be objects as you want to use strings as keys. Also, addField() is the same for each instance of FormBuddy() (names of constructor functions should be capitalized) and should reside in the prototype, ie function FormBuddy() { this.fields = []; // this is the same as `new Array()` this.labels = {}; // this is the same as `new Object()` this.rules = {}; } FormBuddy.prototype.addField = function(field, label, rule) { this.fields.push(field); this.labels[field] = label; this.rules[field] = rule; }; You can access the labels/rules via var buddy = new FormBuddy(); buddy.addField('foo', 'bar', 'baz'); alert(buddy.labels['foo']); alert(buddy.rules.foo); Just to further enrage Luca ;), here's another version which also dosn't encapsulate anything: function FormBuddy() { this.fields = []; } FormBuddy.prototype.addField = function(id, label, rule) { var field = { id : id, label : label, rule : rule }; this.fields.push(field); this['field ' + id] = field; }; FormBuddy.prototype.getField = function(id) { return this['field ' + id]; }; var buddy = new FormBuddy(); buddy.addField('foo', 'label for foo', 'rule for foo'); It's similar to Gumbo's second version, but his fields object is merged into the FormBuddy instance. An array called fields is added instead to allow for fast iteration. To access a field's label, rule, or id, use buddy.getField('foo').label To iterate over the fields, use // list rules: for(var i = 0, len = buddy.fields.length; i
