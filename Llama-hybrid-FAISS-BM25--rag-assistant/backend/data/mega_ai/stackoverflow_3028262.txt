[site]: stackoverflow
[post_id]: 3028262
[parent_id]: 3027705
[tags]: 
A couple of issues that effect the success or failure of cross-language conversion are the relative semantic richness of the languages, and their semantic models. Translation from C++ to C should be relatively easy, but translation of C to idiomatic C++ would be next to impossible because that would be next to impossible to automatically turn a procedural program into an OO program. Translation of Java to C would be relatively simple, though handling storage management would be messy. Translation of C into Java would be next to impossible if the C program did funky pointer arithmetic or casting between integers and different kinds of pointer. Translation of a functional language to an imperative language would be much easy though the result would probably be inefficient, an non-idiomatic. Translation of an imperative language to a functional language is probably beyond the state of the art .... unless you implement an interpreter for the imperative language in the functional language. What this means is that some translators are necessarily going to be more successful than others in terms of: completeness and accuracy of translation, and readability and maintainability of the resulting code.
