[site]: crossvalidated
[post_id]: 632599
[parent_id]: 188616
[tags]: 
Scikit-learn has a ROC Curve with Visualization API which can be applied to random forest as well. I quote here the part of their code relevant to the random forest: import matplotlib.pyplot as plt from sklearn.datasets import load_wine from sklearn.ensemble import RandomForestClassifier from sklearn.metrics import RocCurveDisplay from sklearn.model_selection import train_test_split X, y = load_wine(return_X_y=True) y = y == 2 X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42) rfc = RandomForestClassifier(n_estimators=10, random_state=42) rfc.fit(X_train, y_train) ax = plt.gca() rfc_disp = RocCurveDisplay.from_estimator(rfc, X_test, y_test, ax=ax, alpha=0.8) plt.show() with the result The value of AUC is available as rfc_disp.roc_auc . If only the AUC is of interest (but not the ROC curve), one can also use roc_auc_score : from sklearn.metrics import roc_auc_score y_pred = rfc.predict_proba(X_test)[:,1] auc = roc_auc_score(y_test, y_pred) print(auc)
