[site]: stackoverflow
[post_id]: 5624563
[parent_id]: 
[tags]: 
Awkward data structure

I am writing a utility that takes tab delimited text files and outputs HTML tables. Part of the functionality is the ability to pass filter values at the command prompt. So, for example, if we have a column "A" I should be able to pass --filter "A" "foo" and see only rows for which the column "A" contained "foo." This brings me to my question. I'm writing this in C, and perhaps due to my inexperience with the language, I'm having trouble expressing my "filter" data structure. My initial stab at the problem is to store the filters upfront: //Parse parameters and values, i.e. --start, --length for (; i And then, once I have the column names, to create a sparsely populated array of filter values that corresponds to the length of the file header. So, if I'm looking at column 4, I look up the fourth value of the filter array and check if it is populated with a value. The code that expands the "initial" storage of the filter into this lookup table is as follows: //Now that we know how many cols we have, create a sparsely populated filter array for (j=0,i=0; i Other than being awkward, I can see that if I specify a filter that has the same value for both the column name and the filter value, this won't work. In something like Python, I'd handle this with dictionaries. What is the best idiom available for this situation when working in C? Thank you for your time.
