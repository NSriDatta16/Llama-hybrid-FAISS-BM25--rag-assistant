[site]: stackoverflow
[post_id]: 1276377
[parent_id]: 1276333
[tags]: 
Here is the official/MSDN hot-spot to learn about static classes The main features of a static class are: * They only contain static members. * They cannot be instantiated. * They are sealed. * They cannot contain Instance Constructors Basically a static class is identical to a 'normal'/non-static class which has only static methods and a private ctor. Marking it as static helps clarify intent and helps the compiler do some compile-time checks to disallow certain things e.g. disallow instantiation. Real-world uses I can think of: Use it to house or as a way to organize utility methods (methods not associated with any instance of a type) e.g. Math for Min and Max methods extension methods e.g. StopWatchExtensions for a Reset method on a StopWatch
