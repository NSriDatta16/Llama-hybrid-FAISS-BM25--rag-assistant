[site]: stackoverflow
[post_id]: 1006130
[parent_id]: 1005989
[tags]: 
I did this a while ago for a large government business rules engine. Using XML schema to describe the data, I used XML schema annotations to add in all of the rules engine specific bits, ensuring that the schema remained valid. The GUI provided a traditional Explorer-style view with a treeview showing the structure and the right-hand pane displaying the detail for the selected tree node. I used some fairly complex XSLT (with some custom extensions) to generate a small XML document representing a form and a small engine that would render the controls dynamically from that form definition. The code behind the form updates an XML fragment which is then translated back into an XML diffgram by another piece of XSLT and used to update the in-memory representation of the schema. Once the annotated XML schema was built, a compiler then generated two .NET assemblies, one containing a code representation of the schema and the other the implementation of the business rules. It was a fairly complex piece of code, but one that was very flexible and dynamic and the vast majority of the UI could be customised through XSLT alone. Indeed, some users required different views which were handled entirely through an additional dynamically loaded assembly that included the XSLT. Cost around 2.5M GBP and took over two years to develop, mind (the whole thing, not just the UI). It remains the development that I've been most proud of in my 28 years in the business! Happy to discuss further if you want.
