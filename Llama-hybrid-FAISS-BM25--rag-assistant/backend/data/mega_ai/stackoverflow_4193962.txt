[site]: stackoverflow
[post_id]: 4193962
[parent_id]: 4193920
[tags]: 
print put whitespace between variables and emit a newline. If this is just the whistespaces between strings that bother you, just concatenate the strings before printing. print varone+vartwo+varthree Really, there is (much) more than one way to do it. It always comes out creating a new string combining your values before printing it. Below are the various ways I can think of: # string concatenation # the drawback is that your objects are not string # plus may have another meaning "one"+"two"+"three" #safer, but non pythonic and stupid for plain strings str("one")+str("two")+str("three") # same idea but safer and more elegant ''.join(["one", "two", "three"]) # new string formatting method "{0}{1}{2}".format("one", "two", "three") # old string formating method "%s%s%s" % ("one", "two", "three") # old string formatting method, dictionnary based variant "%(a)s%(b)s%(c)s" % {'a': "one", 'b': "two", 'c':"three"} You can also avoid creating intermediate concatenated strings completely and use write instead of print. import sys for x in ["on", "two", "three"]: sys.stdout.write(x) And in python 3.x you could also customize the print separator: print("one", "two", "three", sep="")
