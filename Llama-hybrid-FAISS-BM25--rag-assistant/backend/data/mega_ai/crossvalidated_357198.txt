[site]: crossvalidated
[post_id]: 357198
[parent_id]: 
[tags]: 
Hierarchical Version of Bayesian Change Detection Model in JAGS

I am trying to create a hierarchical changepoint detection model in JAGS, estimating group difference in changepoint based on individual changepoints in scores for an outcome variable (fictional in this case). I can run a non-hierarchical version of this same analysis, based on a single set of scores, but am having trouble thinking through the hierarchical structure in JAGS . Here is code for creating the toy data. score is a fictional outcome variable measured on each of 84 days for forty individuals (variable id ) divided equally among two groups (variable group ). Data is created so the individuals in group A tend to have a later breakpoint (around day 34) than those in group B (around day 15). set.seed(1234) breakpointG1 Now plot all participants in one graph, but with a separate loess-smoothed line for each group. ggplot(df, aes(x = days, y = score)) + geom_point(aes(colour = factor(id))) + geom_smooth(aes(group = group, linetype = group), colour = "black", span = 0.5, se = F) + guides(colour = F) The difference in group change thresholds is clearly visible on this graph. Now for the Bayesian analysis verifying what we can see with our eyes. First step is to create the data list from the dataframe. y $score sdY group)) sid $id days days nTotal We also need a vector where each element is the group number of the subject in question (i.e. there will be 40 elements in this vector) groupOfSubject = NULL for ( sIdx in 1:nID ) { groupOfSubject = c( groupOfSubject , unique(g[sid==sIdx]) ) } dataList = list(y = y, sdY = sdY, days = days, sid = sid, nTotal = nTotal, nDays = nDays, nID = nID, nG = nG, groupOfSubject = groupOfSubject) Now the model string for jags. The main things I am interested in estimating are the group changepoints muChng[] and the muB[] s for pre- and post-breakpoint score . I have used nested indexing but I must confess I am out of my depth here. cat(" model{ # likelihood for (oIdx in 1:nTotal) { y[oIdx] ~ dnorm(mu[sid[oIdx]], 1/sigma^2) mu[sid[oIdx]] Next adapt the mcmc chains using rjags::jags.model() . library(rjags) jagsModel But the model doesn't run Error in jags.model(file = "temp.jag", data = dataList, n.chains = 3, : RUNTIME ERROR: Compilation error on line 7. Attempt to redefine node mu[1] I am not as familiar with breakpoint models as with the general linear model so am not sure where I am going wrong. Something to do with the nested indexing in the definition of mu[] in the likelihood function I think, but I can't see where, and none of the alternatives I have tried seem to work. Any help much appreciated.
