[site]: stackoverflow
[post_id]: 832497
[parent_id]: 
[tags]: 
ASP.NET MVC solution organization

I'm looking to create a fairly large-scale ASP.NET MVC project and I want to break it out so that it's not all in one project and one assembly. I looked at how Oxite does their organization ( http://oxite.codeplex.com/Wiki/View.aspx?title=architecture ) but I was wondering how other people do it too. Any suggestions? Currently, I'm considering something very similiar to Oxite: Project - This project contains the model layer which includes models, configuration classes, and interfaces for services and repositories. There should not be much application logic here, mostly data structures. Project.Core - This project contains all the code for controller and routing including filters and results. Also included in here is ViewData model. Project.Site - This project contains the Views, images, javascript and all other static non-code files. There should be minimal C# code here, the majority should live in Project.Core
