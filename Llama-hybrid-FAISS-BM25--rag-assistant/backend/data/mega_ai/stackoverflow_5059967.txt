[site]: stackoverflow
[post_id]: 5059967
[parent_id]: 
[tags]: 
jQuery Plugin - passing and executing an arbitrary function

I am fairly new at JQ so any help on this appreciated, few remaining cranial follicles are being traumatized... I have a simple jQuery plugin that uses Ajax to populate the #selector (UL) with results (as a series of ) using AppendTo. This is a cross-domain call so, as far as I can tell, only asych:true is supported. The plugin works but I need to allow the user to hit the appended DOM items with arbitrary functions (i.e. functions determined by the plugin user like $(".foo").draggable() or whatever) and doing it outside of the plugin doesn't work because we are cross-domain and async. I think I need to pass the arbitrary function to the plugin at run time but that is far as I can get. I have fiddled with delegate()/trigger() and bind(namespcae.bar) but have had no success so far... How should this be handled? The call looks like this: $(document).ready( function () { $('#targetDiv').myPlugin({ count: 10}); //$(".foo").draggable(); // does not work, because we are async. }); The plugin looks like this: (function ($) { $.fn.myPlugin = function (options) { $.ajaxSetup({ cache: true, async: false }); // false doesn't work - cross domain var defaults = {count: 5}; var options = $.extend(defaults, options); return this.each(function () { var obj = $(this); $.ajax({ type: 'GET', async: false, dataType: 'json', data: {}, url: 'http://someurl.com?callback=?&otherstuff=somedata', success: function (data) { $.each(data.results, function (i, item){ t = $( + item.text ').appendTo(obj); // this works but may need any arbitrary jQuery.ui function //t = $(item.text).appendTo(obj).draggable(); // maybe this but not sure how it should be done //$(t).trigger(ArbitraryEventHandler); ???
