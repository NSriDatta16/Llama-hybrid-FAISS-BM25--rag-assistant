[site]: crossvalidated
[post_id]: 145746
[parent_id]: 
[tags]: 
How To Better Represent A Problem To A Machine Learning Algorithm

I am familiar with the basics of how to present a problem to a machine learning algorithm using binary encodings. I am also familiar with, but still learning about, feature selection/extraction and construction. However, I am wondering if there is a term or keyword for the way in which you deicde to encode your problem for an algorithm, and how someone can improve their ability to present this problem to an algorithm. I believe this to be related to, but distinct from feature selection and construction . I am looking for a general answer, and a topic/keyword to continue learning afterwards, but I have provided a few examples below to illustrate where I have found difficulties: For example, a common problem is how to solve a maze in under 100 steps by representing each step (forward, left, right, backwards) using binary values 00, 01, 10, 11. When presenting this to a genetic algorithm you would then use two bits for every step for 200 total bits. But I'm not sure I could easily present this same problem to a neural network. For a neural network, days of the year could be represented by using 365 individual nodes, of which only one would be activated and the rest would have a value of 0. When combined with other features, perhaps one or two, they seem to be dwarfed by the number of other dimensions created using 365 input nodes to represent a year. We could reduce the dimensions by using th 52 weeks of the year, but at the cost of losing information about individual days of the week. Surely, there must be a better way to think of this problem. *Also if there are other methods than binary encodings, please indulge. ADDEDUM: Truth be told, what I am asking is so basic it seems to be glossed over as trivial in many machine learning tutorials. They may give an example, such as the maze above, and quickly explain how to encode this to the algorithm at hand, but I have seen very little material which focuses solely on the many different ways a problem can be encoded and presented to an algorithm... or else I am not looking in the right places which is why I asked for some keywords. This lack of focus is surprising to me considering how important it is to ask the machine the proper question and in the correct form, which in my opinion, supercedes even the subject of feature selection which would come after the encoding patterns have been figured out; technically, the features are selected first and then they are encoded second. Surely there are more ways than one to think of a given problem.
