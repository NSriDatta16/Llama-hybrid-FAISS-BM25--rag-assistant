[site]: stackoverflow
[post_id]: 5686575
[parent_id]: 
[tags]: 
Why isn't this Python import working?

I have three modules: plugin_grt.py fragments.py helpers.py Right at the top of plugin_grt.py I have from jpa_export_helpers import SourceFile, Mysql, Conv, Columns, Column, Table, ForeignKey, Index, Catalog, Inheritance which works, that is I can use Table.whateverMethod(...) without problems. Now when I add the same import to the top of the fragments.py module I get: Traceback (most recent call last): File "C:\Users\Kawu\AppData\Roaming\MySQL\Workbench\modules\jpa_export_plugin_grt.py", line 53, in from jpa_export_helpers import SourceFile, Mysql, Conv, Columns, Column, Table, ForeignKey, Index, Catalog, Inheritance File "C:\Users\Kawu\AppData\Roaming\MySQL\Workbench\modules\jpa_export_helpers.py", line 2, in from jpa_export_fragments import Type, EnumValue File "C:\Users\Kawu\AppData\Roaming\MySQL\Workbench\modules\jpa_export_fragments.py", line 2, in from jpa_export_helpers import SourceFile, Mysql, Conv, Columns, Column, Table, ForeignKey, Index, Catalog, Inheritance ImportError: cannot import name SourceFile Why isn't this working? The only workaround is to import the classes right where they're needed, but it's not something I like (at least for now): def getPrimaryKeyColumns(self): from jpa_export_helpers import Columns return Columns.getPrimaryKeyColumns(self.table.columns) Note, I'm originally a Java guy so importing "at will" seems strange to me. Anyway, what's the problem here?
