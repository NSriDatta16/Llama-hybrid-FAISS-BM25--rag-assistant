[site]: datascience
[post_id]: 124817
[parent_id]: 
[tags]: 
Examples of decision processes where action has no effect on the next state, but has on the reward?

Within my studies, I work on a recurrent reinforcement learning project and I struggle to find real-world problems with a property that is important to my solutions. I look for instances of problems which can be modelled similarly to Markov Decision Processes. In them after every state s_t, there's a next state s_(t+1), but action a_t doesn't impact s_(t+1) , only the reward r_(t+1). However, we accept information about a_t as a part of s_(t+1) that may change. A prime example is trading. Consider a price series like (s_t = (5, 5, 6, 5)). Taking an action a_t (e.g., buying) doesn't alter the next state (s_(t+1) = (5, 6, 5, 4)), but it does influence the reward r_(t+1) (e.g., you incur a loss of 10%). The only information that can be in the state that can be dependent on the previous action is what the previous action was. The other very similar problem I found is portfolio optimization - I can take it into account, because: there is a series of actions actions take into account previous action (current weights of assets) and the state (e.g. historical prices) choice of action doesn't impact the next state (prices don't care about one transaction), but information about previous action is an exception the reward is calculated based on a series of historical actions and states (e.g rate of return, I know that there are also immediate rewards, but let's assume we calculate it afterwards) Could you find more instances of such a problem? Of course, it doesn't have to be associated with finance. It's also important that the output of the model could be interpreted as a decision, rather than not continuous output. Edit: I came up with the idea that I can achieve such an environment, when states can be described as a Markov Chain, so it could be not only financial markets but also e.g. weather. Maybe someone will find it helpful to ideate some instances of problem I seek. I also came up with catching similar problems like outliers detection in time series or real-time trend detection and modelling them as RRL problems.
