[site]: stackoverflow
[post_id]: 5738447
[parent_id]: 5738081
[tags]: 
To explain your “bug”: The red and green boxes are set to float to the right and left of the page. Their container does not expand to surround them, and the black and yellow lines touch each other. That’s not a bug, that’s how floats work. Floated elements do not take up vertical space in their ancestor elements. This is because floating was originally designed to enable text to flow around images — if you have a floated image inside a paragraph of text, and it’s taller than the text in that paragraph, you generally want the next paragraph to also flow around the image. To explain how your “fix” works, for your HTML it’s this bit that does it: header:after { clear: both; content: "."; display: block; height: 0; visibility: hidden; } It works thus: The :after pseudo-class effectively adds an anonymous HTML element after the element specified by the rest of the selector (which we’ll call the original element), and allows you to style it. Which is a bit meaningless without... ...the content property. This gives the anonymous element some content, allowing it to affect the layout of the page. display: block and clear: both make this anonymous element clear any floats that come before it (i.e. the floats within the original element). The anonymous element appears after the content box of the original element, but before the padding, border and margin boxes, which is why the clearing pushes the original element’s border down past the floats. height: 0; and visibility: hidden; then make the anonymous element invisible, but don’t prevent it from affecting the page’s layout. Your “fix” repeats this CSS for div:after , article:after and aside:after . I’m not sure why it doesn’t just use all three selectors together on one CSS rule, i.e. header:after, article:after, aside:after, div:after { /* Fix CSS here */ } Or indeed apply the CSS to a class instead of elements, so that you can choose when to apply it, e.g. clear-floats:after { /* Fix CSS here */ }
