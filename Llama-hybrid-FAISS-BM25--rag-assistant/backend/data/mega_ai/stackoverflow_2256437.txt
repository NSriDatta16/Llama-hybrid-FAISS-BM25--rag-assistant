[site]: stackoverflow
[post_id]: 2256437
[parent_id]: 2254694
[tags]: 
Another idea might to be to use Hadoop for your backend. It has similarities with CouchDB which someone mentioned before, but focuses more on effective processing of big datasets with MapReduce algorithms. In comparison to CouchDB, Hadoop isn't real suited for real-time applications or as a database behind a website, because it has a high latency of accessing a single entry, but it real shines when iterating over all elements and computing even Peta-Bytes of data. So maybe you should give Hadoop a try. Of course, it might take some time to get used to those MapReduce algorithms, but they are really a great way for describing such problems. And you don't have to deal with the storage of the interim results on your own. And a nice side-effect is, that your algorithm will still work when your data set becomes bigger, but then you might have to add another server. :-) There is also quite a lot of books and documentation about Hadoop and MapReduce available, and here is a nice tutorial which might help you to get started with Hadoop and Python.
