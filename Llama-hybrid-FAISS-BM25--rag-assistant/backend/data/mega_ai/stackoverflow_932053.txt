[site]: stackoverflow
[post_id]: 932053
[parent_id]: 622456
[tags]: 
After some experimentation I managed to find a working solution. The below allows me to have two comboboxes dependent on the same datasource, as well as each other. I’m sure elegant approach, but this seems to work. 1) On my ObservableCollection I added two additional properties, ToSelected and FromSelected. 2) Then instead of binding to the Comboboxes, I populated them directory through a loop. Not the best way to do this, but it seemed to be the most straight forward. foreach (Countries.Country currentCnty in CountryList) { ComboBoxItem toItem = new ComboBoxItem(); toItem.Content = currentCnty; CmboToCountry.Items.Add(toItem); ComboBoxItem fromItem = new ComboBoxItem(); fromItem.Content = currentCnty; CmbFromCountry.Items.Add(fromItem); } 3) I then created method called UpdateLogic. This simply loops through the ObservableCollection setting the selected records for the From and To comboboxes. 4) Then on selection change for each combobox I added the following to set the visibility other combobox items. For example the To Country combobox would set the visibility of the From Country items and vice versa. //Update the underlying collection with selected items UpdateLogic((Countries.Country)CmboToCountry.Content, (Countries.Country)CmboFromCountry.Content); for (int iLoop = 0; iLoop 0)) ? Visibility.Collapsed : Visibility.Visible; } The business requirement of having two inter-dependent comboboxes has been an interesting challenge. Hopefully this helps someone in the future. Though I’m sure there is a more elegant solution to perform this task.
