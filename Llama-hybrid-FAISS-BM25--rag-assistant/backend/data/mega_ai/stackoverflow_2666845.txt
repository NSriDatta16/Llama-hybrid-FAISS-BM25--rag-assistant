[site]: stackoverflow
[post_id]: 2666845
[parent_id]: 2666602
[tags]: 
It seems that you know your way around JS. Unfortunately, I don't know of such feature in the language, and am pretty sure that it does not exist. Your best option, in my opinion is either using a uniform interface and extend it, or extend the prototypes from which your objects inherit (then you can use instanceof before going forward with the method call) or use the somewhat cumbersome '&&' operator in order to avoid the access of nonexistent properties/methods: obj.methodName && obj.methodName(art1,arg2,...); You can also extend the Object prototype with Anurag's suggestion ('call').
