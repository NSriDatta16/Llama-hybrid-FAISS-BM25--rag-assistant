[site]: crossvalidated
[post_id]: 72637
[parent_id]: 72631
[tags]: 
Clustering is seldom, if ever, used for recommendations, since it is too crude. The most common techniques used are: matrix factorization; read, for example, "Matrix Factorization Techniques for Recommender Systems" by Koren, Bell, and Volinsky. If you use R, there is are packages NMFN and gnmf for non-negative matrix factorization. In your case, this will be the matrix of 0's and 1's. There are many modifications and versions of this technique. KNN. For each class, find classes highly correlative with it. Then predict the probability for this class as a linear regression (or, in your case, logistic regression) of the correlative classes, with relaxation. Restricted Boltzmann Machines. This is relatively hard to understand or implement. Read, for example, "Restricted Boltzmann Machines for Collaborative Filtering" by Salakhutdinov, Mnih, and Hinton. There are no Restricted Boltzmann Machine packages on R. Often, a combination of different approaches (blending) is used, providing better results than each one separately. For example, Netflix uses a blending of Matrix Factorization and Restricted Boltzmann Machines.
