[site]: stackoverflow
[post_id]: 952151
[parent_id]: 952062
[tags]: 
Generally: Constructors (if there are overloads) Static methods Methods Properties Events Possibly grouping an interface's implementation (namely IEnumerable ), but absolutely for explicit interface implementations Nested types If ASP.NET: Controls (fields whose name maps to a control) If I have a method that has a few overloads then I add a region for those. Or if there are a few methods that are similar but not necessarily overloads (e.g., Find, FindAll, FindIndex, etc. in List then they'd be in one region of "Find"). The point is to group things off for if I want to find something in the class but not by name. Effectively the regions provide metadata about members of the class that are only good for editing. That's my general approach to organization, which my regions also follow from. Again: in general. Every class is different (otherwise why write it?) so YMWV: there is no "may" in that.
