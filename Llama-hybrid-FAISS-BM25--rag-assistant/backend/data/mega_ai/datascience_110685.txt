[site]: datascience
[post_id]: 110685
[parent_id]: 110638
[tags]: 
First, if you are interested in identifying duplicate records via clustering I would suggest you to use agglomerative hierarchical algorithm (e.g. single-linkage). It will result with a complete dendogramm and somewhere in the bottom of this dendogramm you will find your duplicated records. Second, regarding TF-IDF representation, I am not sure it will yield a good result, since TF-IDF relies on word frequency, thus different spelling of the same name (e.g. Jim and James) or address will result in different vectors. For a somehow simplier solution I would run your data through any pre-trained language model (e.g. word2vec from gensim https://radimrehurek.com/gensim/models/word2vec.html ), sum up all embeddings from the same person and then run either a KNN or a hierarchical clustering.
