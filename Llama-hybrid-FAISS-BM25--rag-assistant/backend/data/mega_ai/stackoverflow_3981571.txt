[site]: stackoverflow
[post_id]: 3981571
[parent_id]: 733630
[tags]: 
This can be done via just over writing the ActiveRecord::Timestamp module methods. Not actually overwriting the entire module. I need to to accomplish this same goal as I am working with a legacy database. I am on rails 3 and I have started following a methodology of how to monkey patch my code with over writing rails functionality. I first create the base project that I am working with and create a file called that in the initializers. In this case I created active_record.rb. And within the file I put code to override two methods that controlled the timestamp. Below is the sample of my code: module ActiveRecord module Timestamp private def timestamp_attributes_for_update #:nodoc: ["updated_at", "updated_on", "modified_at"] end def timestamp_attributes_for_create #:nodoc: ["created_at", "created_on"] end end end NOTE: I would also like to mention that this sort of monkey patching to get things to work is frowned upon and may break on upgrades so be careful and be fully aware of what it is that you want to do. Updates: Change timestamp column names from symbol to string per api change . Thanks Techbrunch for bringing this API change to my attention.
