[site]: datascience
[post_id]: 29297
[parent_id]: 29292
[tags]: 
I have just used LSTM to train a model predict time series value and get good result as below: # reshape input to be [samples, time steps, features] trainX = np.reshape(trainX, (trainX.shape[0], 1, trainX.shape[1])) testX = np.reshape(testX, (testX.shape[0], 1, testX.shape[1])) model = Sequential() model.add(LSTM(40, input_shape=(trainX.shape[1], trainX.shape[2]))) model.add(Dense(1)) model.compile(loss='mean_absolute_error', optimizer='adam') model.fit(trainX, trainY, epochs=10, batch_size=1, verbose=0) Here is my result: blue is real value, orange is predict.
