[site]: stackoverflow
[post_id]: 4415364
[parent_id]: 
[tags]: 
Elegantly Parsing Rigid Data in Perl

I'm working with a large dataset that basically boils down to something like this: my $input = q( 111 222 333 555 ); # new-lines are either CR+LF, LF, or CR Based on the example above, let's assume that the following constraints are in effect: There will always be 5 lines of data. Data in each line is enclosed in a single tag such as ... . Data will contain no nested tags. All lines use the same tag (e.g foo ) to enclose their data. Ultimately, taking the above as the data source, I'd like to end up with something akin to this: my %values = ( one => '111', two => '222', three => '333', four => '', five => '555' ); This is my attempt: my @vals = $input =~ m! (.*?) !ig; if (scalar @vals != 5) { # panic } my %values = ( one => shift @vals, two => shift @vals, three => shift @vals, four => shift @vals, five => shift @vals ); This works as I want, however it looks ugly and is not very flexible. Unfortunately, this is the best I can do for now since I'm new to Perl. So, given the above constraints, what's a more elegant way to do this?
