[site]: stackoverflow
[post_id]: 4258684
[parent_id]: 4258517
[tags]: 
Using a separate table for each survey nearly invalidates the use of a database. You might as well just store the results in files. You do, however, need three tables: Survey Definition, Survey Questions, and Survey Answers. It may look something like this... Surveys: ID; name; description Questions: ID; text; surveyID Answers: ID; answer; questionID You could add complexity from there to handle enumerated answers... Surveys: ID; name; description Questions: ID; text; surveyID Choices: ID; choice; questionID Answers: ID; choiceID You use the relationships between each table to aggregate to the next highest level, allowing you to get results from any question, survey, or any other attributes for any model you choose to add without trying to abstract away the source for your select statements. This also allows you to aggregate answers per user or surveying organization later on after adding them to your schema. If each survey has its own table structure, aggregating data across surveys becomes hugely impractical as your application grows.
