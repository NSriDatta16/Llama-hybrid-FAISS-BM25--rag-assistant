[site]: stackoverflow
[post_id]: 5639313
[parent_id]: 5638934
[tags]: 
The loop will only break if cvQueryFrame() returns a NULL frame or if the user presses q on the keyboard. Add a debug so you know when the first situation happens: frame = cvQueryFrame( capture ); if( !frame ) { qDebug("cvQueryFrame failed!"); break; } Are you sure cvCaptureFromCAM(0) works ? Depending on the OS I have to pass -1 for it. But the fact is that you'll never know if cvCaptureFromCAM(0) succeeded because you don't check the return, and this might be the problem! capture = cvCaptureFromCAM(0); if (!capture) { qDebug("cvCaptureFromCAM failed!"); //exit(0); or whatever } EDIT: Pay huge attention to this: you are creating a window named "video DisplUM" but you are trying to display the frames on a different window, named "video". Anyway, it's also better if you change the window creation function to use the appropriate enum: cvNamedWindow("video DisplUM", CV_WINDOW_AUTOSIZE); and on faceTracker::run( ) comment detectFaces() for now and add a call to cvShowImage( "video DisplUM", frame ); Always be sure your application works with the minimum requirements before adding fancy stuffs, like face detection. My final suggestion is: write enough code just to capture the images from one thread and display them on a window, and then go from there.
