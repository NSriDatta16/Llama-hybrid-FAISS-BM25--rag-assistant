[site]: stackoverflow
[post_id]: 4391630
[parent_id]: 4390534
[tags]: 
This function will return true if the passed text is an URL. It is based on a regex seen here on SO. function validate_url ($url) { $regex = '/^(https?|ftp):\/\/'; //protocol $regex .= '(([a-z0-9$_\.\+!\*\'\(\),;\?&=-]|%[0-9a-f]{2})+'; //username $regex .= '(:([a-z0-9$_\.\+!\*\'\(\),;\?&=-]|%[0-9a-f]{2})+)?'; //password $regex .= '@)?'; //auth requires @ $regex .= '((([a-z0-9][a-z0-9-]*[a-z0-9]\.)*'; //domain segments AND $regex .= '[a-z][a-z0-9-]*[a-z0-9]'; //top level domain OR $regex .= '|((\d|[1-9]\d|1\d{2}|2[0-4][0-9]|25[0-5])\.){3}'; $regex .= '(\d|[1-9]\d|1\d{2}|2[0-4][0-9]|25[0-5])'; //IP address $regex .= ')(:\d+)?'; //port $regex .= ')(((\/+([a-z0-9$_\.\+!\*\'\(\),;:@&=-]|%[0-9a-f]{2})*)*'; //path $regex .= '(\?([a-z0-9$_\.\+!\*\'\(\),;:@&=-]|%[0-9a-f]{2})*)'; //query string $regex .= '?)?)?'; //path and query string optional $regex .= '(#([a-z0-9$_\.\+!\*\'\(\),;:@&=-]|%[0-9a-f]{2})*)?'; //fragment $regex .= '$/i'; return (preg_match($regex, $url) ? true : false); } You can try it here: http://www.exorithm.com/algorithm/view/validate_url EDIT in response to comment, this function will validate URL fragments like /index.php or index.php function validate_url_fragment ($url) { $regex = '/^(((\/?([a-z0-9$_\.\+!\*\'\(\),;:@&=-]|%[0-9a-f]{2})*)*'; //path $regex .= '(\?([a-z0-9$_\.\+!\*\'\(\),;:@&=-]|%[0-9a-f]{2})*)'; //query string $regex .= '?)?)?'; //path and query string optional $regex .= '(#([a-z0-9$_\.\+!\*\'\(\),;:@&=-]|%[0-9a-f]{2})*)?'; //fragment $regex .= '$/i'; return (preg_match($regex, $url) ? true : false); } if (validate_url_fragment($url) || validate_url($url)) { //is url } else { //not url } (note that the empty string is valid, so you may want a special case for that)
