[site]: crossvalidated
[post_id]: 372143
[parent_id]: 
[tags]: 
R glm() with a categorical response variable

I want to know whether I can use glm() with a categorical response variable, and if yes how exactly. I have a response variable with three unordered levels, and both categorical and continuous predictors. Here is an example dataset with just continuous predictors: outcome |z|) (Intercept) 0.205746 1.412173 0.146 0.884 expl1 -0.001620 0.016636 -0.097 0.922 expl2 0.008509 0.014943 0.569 0.569 When I compare the output to that of MCMCglmm(): expl In MCMCglmm() I code with 'trait' to express the latent variables 2/3, and consequently the output has separate coefficients for level 2/3: Location effects: factor(outcome) ~ -1 + trait:(expl1 + expl2) post.mean l-95% CI u-95% CI eff.samp pMCMC traitoutcome.2:expl1 -0.006716 -0.036872 0.025785 80.26 0.690 traitoutcome.3:expl1 -0.010447 -0.041454 0.017851 103.78 0.516 traitoutcome.2:expl2 0.004231 -0.021471 0.037971 67.26 0.808 traitoutcome.3:expl2 0.011534 -0.014867 0.041410 105.17 0.424 The glm() output does not feature this, so I am worried it is interpreting 'outcome' as a continuous variable despite my use of factor(). As far as I have found in glm() descriptions, defining dummy variables is not necessary (see here: https://stackoverflow.com/questions/42797087/how-to-create-dummy-variables-for-use-in-a-glm-in-r ). Also, the glm families does not include a multinominal model, and I'm not sure whether the binominal model (as I did above) can be used, despite glm() above not throwing an error. Any help is very welcome. PS In reality, I need a mixed model, which supposedly can be fitted by glmmPQL() in the MASS library, which depends om glm(). Hence the question about glm() only. I want to compare results with MCMCglmm(). EDIT: OK my question was perhaps too long and not very clear. But it's not a duplicate. I don't want to know which function I can use for a multinomial regression. I want to know if glm() can do it. Or, how I can make it work with glmmPQL() as suggested elsewhere. Again, I need a mixed model and it's not clear from the suggested duplicate question that nnet's multinom() can deal with that.
