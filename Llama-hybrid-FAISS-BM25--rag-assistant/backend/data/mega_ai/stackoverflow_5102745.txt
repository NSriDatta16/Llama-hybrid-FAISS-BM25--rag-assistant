[site]: stackoverflow
[post_id]: 5102745
[parent_id]: 5101933
[tags]: 
Use jQuery to get a list of the IDs after you have moved a row. Something like: var inputs = $("#myTable").find("tr").find("input"); // store each rows id in an array - this will be in the correct order var ids = []; inputs.each(function(){ ids.push($(this).val()); }); Then pass this list to a PageMethod or WebService and loop through the list, setting the priority of each row in the database. Obviously you will also need to take into account paging or any filtering you have applied to the items too. Update : You might want to also look at jQueryUI Sortable to enable drag/drop sorting. You would update the db in the same way. Update 2 : Here is a simple delay function. var delay = (function () { var timer = 0; return function (callback, ms) { clearTimeout(timer); timer = setTimeout(callback, ms); }; })(); Then use it as follows: delay(function () { MySortFunction(); }, 300); This will delay the function for x milliseconds and cancel any previous calls if you call it again within the specified time.
