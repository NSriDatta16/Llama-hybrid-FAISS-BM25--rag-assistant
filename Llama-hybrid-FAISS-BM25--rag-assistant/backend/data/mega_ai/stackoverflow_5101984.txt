[site]: stackoverflow
[post_id]: 5101984
[parent_id]: 5101930
[tags]: 
I would probably use a partial view or a display template that I would include instead of HTML helper because stuffing so much HTML in a C# code looks ugly. So for example I would have a view model: public class SomeViewModel { public int Type { get; set; } public string Headline { get; set; } } and a partial: @model AppName.Models.SomeViewModel @Model.Headline and then: @Html.Partial("Foo", new SomeViewModel { Type = 1, Headline = "My headline" }) This of course doesn't mean that your HTML helper wouldn't work. It's just that normally HTML helpers should be used to generate small fragments of HTML and in this particular example this doesn't seem to be the case. Also you get HTML intellisense if used in a view which might aid you identify unclosed tags, not properly formatted HTML, ... whereas inside C# everything is one big magic string. And one final remark about your HTML helper if you decide to use it: Make sure you HTML encode this Headline string before putting it inside the string builder or you might get bad XSS surprises.
