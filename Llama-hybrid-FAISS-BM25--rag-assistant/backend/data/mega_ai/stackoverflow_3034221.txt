[site]: stackoverflow
[post_id]: 3034221
[parent_id]: 3033483
[tags]: 
It is possible to access the underlying container without copying the data, but it requires a certain amount of evil. The container is exposed as a protected member, called c , which allows shenanigans such as this: template class Shenanigans : private stack { public: explicit Shenanigans(stack & victim) : victim(victim) { swap(victim); } ~Shenanigans() { swap(victim); } using stack ::c; private: stack & victim; }; int main() { stack s; s.push(42); { Shenanigans sh(s); // The deque is accessible as sh.c, but the stack is temporarily empty. cout Of course a far, far better solution is to choose a container that meets your needs.
