[site]: crossvalidated
[post_id]: 52968
[parent_id]: 52959
[tags]: 
I don't exactly how you modeled your data, but considering that what you have is a database with intentions of vote for candidate A and B, and you modeled those intentions as beta distribution, such that: $Y = 1$, if the person intends to vote for A $Y = 0$, if the person intends to vote for B With $Y_i \sim Bern(\theta)$ and the prior $\theta \sim Beta(\alpha, \beta)$ (or can be any other prior) The you will get a chain of values of $\theta$, that is, you have a distribution of probabilities for $\theta$. I think that's what you meant you have right now in your chains, right? Now, to get the proportion of $Y=1$ as you want, you just need to do a for each chain, the you get a distribution of probabilities for your Y: you will get chains with only 1 and 0 and by doing sum(a)/length(a) (or mean(a) ) you'll get the proportion for candidate A. If you have more than 2 candidates, you can also do this, but your likelihood will be categorical, and you'll have to generate random values for a categorical distribution instead of using rbinom . EDIT : the answer above was assuming you were using a cross section design, but now I realiaze your are doing a time series using the proportion of votes for the candidate in the preceding elections. So, as you said you are using a dynamic linear model, I supposed your likelihood is something like this: $Y_t \sim Dist(f(\beta_0 + beta_1*Y_{t-1} + beta_2*Y_{t-2}), otherParameters)$ Where the $Dist$ is the distribution you are using to model it (e.g.: normal), $f(.)$ is the link function - you said you are using $f(x)=logit(x/(1-x))$, I think. So, if you are using a model like that, and you want to predict a value for an year $Y_t$ that have $Y_{t-1}=0.8$ and $Y_{t-2}=0.6$, for example, you'll need to generate to a random value for $Dist$ for each iteration of your chain: $Random\_from\_Dist(f(\beta_0 + beta_1*0.8 + beta_2*0.6), otherParameters)$ So, if your chain have 1000 iteractions (that is, 1000 values for $\beta_1$, $\beta_2$ and so on), you'll also have 1000 iteractions for your variable, that is, you have an approximation of the sample of probabilities of your variables, if you want the predicted average of votes this candidate will have, you can then do get mean of that sample. You have 3 chains? You do the above for each of then and then you'll have 3 approximations for the sample of your variable and then you may want to combine those sample into one. You model may be specified in another way, pretty different than that, but it's important that you get the ideia behind it so you can easily apply it to your model.
