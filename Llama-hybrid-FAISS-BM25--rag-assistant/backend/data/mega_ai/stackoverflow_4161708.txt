[site]: stackoverflow
[post_id]: 4161708
[parent_id]: 
[tags]: 
Why am I not getting a grey background in this program

I followed the tutorial on this page: http://iphone-3d-programming.labs.oreilly.com/ch01.html I got down to the part where it says, "Compile and build and you should now see a solid gray screen. Hurray!" However, when I ran the program, I just get a black screen. These are what the files look like: HelloArrowAppDelegate.h #import #import "GLView.h" @interface HelloArrowAppDelegate : NSObject { UIWindow *m_window; GLView* m_view; } @end HelloArrowAppDelegate.mm #import "HelloArrowAppDelegate.h" @implementation HelloArrowAppDelegate - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions { // Override point for customization after application launch. CGRect screenBounds = [[UIScreen mainScreen] bounds]; m_window = [[UIWindow alloc] initWithFrame: screenBounds]; m_view = [[GLView alloc] initWithFrame:screenBounds]; [m_window addSubview: m_view]; [m_window makeKeyAndVisible]; return YES; } - (void)dealloc { [m_view release]; [m_window release]; [super dealloc]; } @end GLView.h #import #import #import #import #import @interface GLView : UIView { EAGLContext* m_context; } -(void) drawView; @end GLView.mm #import "GLView.h" @implementation GLView - (void) drawView { glClearColor(0.5f, 0.5f, 0.5f, 1); glClear(GL_COLOR_BUFFER_BIT); [m_context presentRenderbuffer:GL_RENDERBUFFER_OES]; } + (Class) layerClass { return [CAEAGLLayer class]; } - (id)initWithFrame:(CGRect)frame { if ((self = [super initWithFrame:frame])) { CAEAGLLayer* eaglLayer = (CAEAGLLayer*) super.layer; eaglLayer.opaque = YES; m_context = [[EAGLContext alloc] initWithAPI:kEAGLRenderingAPIOpenGLES1]; if (!m_context || ![EAGLContext setCurrentContext:m_context]) { [self release]; return nil; } // OpenGL Initialization GLuint framebuffer, renderbuffer; glGenFramebuffersOES(1, &framebuffer); glGenFramebuffersOES(1, &renderbuffer); [m_context renderbufferStorage:GL_RENDERBUFFER_OES fromDrawable: eaglLayer]; glFramebufferRenderbufferOES( GL_FRAMEBUFFER_OES, GL_COLOR_ATTACHMENT0_OES, GL_RENDERBUFFER_OES, renderbuffer); glViewport(0, 0, CGRectGetWidth(frame), CGRectGetHeight(frame)); [self drawView]; } return self; } - (void)dealloc { if ([EAGLContext currentContext] == m_context) { [EAGLContext setCurrentContext:nil]; } [m_context release]; [super dealloc]; } @end
