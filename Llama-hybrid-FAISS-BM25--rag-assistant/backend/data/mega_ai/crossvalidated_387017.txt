[site]: crossvalidated
[post_id]: 387017
[parent_id]: 
[tags]: 
Using Random Forest for Optimisation

Can random forests be used for optimisation? I created a random forest which predicts prices, customers will pay. Lets assume I want to maximize the price a customer will pay. To do this I have 3 variables. Two of them are fixed, so you can just modify one variable. Is it sensible to plot a graph, which shows how price will change depending on values of the third variable? I don't know a paper in which this has already been done. Are there any arguments against doing this? Thanks! Edit: Pseudo-Code for maximizing prices for a customer of age 25 and an income of 20000 USD y = price //dependent variable X = independent varianbles //in this case customer_age, annual_income, marketing_incentives (only marketing_incentives can be adjusted) RF = fit random Forest custAge = 25 annualIncome = 20000 for incentives in range(0,100): pricePredcited = RF.predict(custAge, annualIncome, incentives) print(pricePredcited) Then just search for the max. pricePredcited
