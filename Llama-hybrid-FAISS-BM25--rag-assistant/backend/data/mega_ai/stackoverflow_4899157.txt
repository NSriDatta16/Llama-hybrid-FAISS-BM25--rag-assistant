[site]: stackoverflow
[post_id]: 4899157
[parent_id]: 
[tags]: 
performance hit when eager loading entity using nhibernate with mvc

I have a web app that I am building using asp mvc with nhiberante 3.0. I have the following code for querying my data - ICriteria rowCount = session.CreateCriteria(typeof(entity1)); rowCount.SetResultTransformer(CriteriaSpecification.DistinctRootEntity) .SetProjection(Projections.RowCount()); ICriteria query = session.CreateCriteria(typeof(entity1)); query.SetFetchMode("entity2", FetchMode.Eager); query.SetResultTransformer(CriteriaSpecification.DistinctRootEntity); query.SetFirstResult((pageIndex - 1) * pageSize); query.SetMaxResults(pageSize); query.Future (); return new PagedList (query.List (), pageIndex, pageSize, rowCount.List ().FirstOrDefault()); Now this is returning the correct data to my view, but the performance is awful. If I do not eager load entity2, the performance is great. The only problem with that is the view is then doing working with the data which I've read is not good practice. Is it ok to have the view do this little bit, or is that bad practice? If it is bad practice, is there a better way that I can build this class for my data access? Thanks for any thoughts. EDIT - my mappings are pretty straightforward. Here is a simplified version. entity1 - \ and entity2 - I will also have to look into using projections to pass to my view - that may be a valid answer.
