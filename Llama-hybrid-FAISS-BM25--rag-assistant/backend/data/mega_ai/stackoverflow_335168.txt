[site]: stackoverflow
[post_id]: 335168
[parent_id]: 335137
[tags]: 
ASP.NET creates a GUID that is stored in a cookie by default (but you can specify the use of the querystring) to identify the user. The objects associated with that cookie are stored on the server within the IIS process by default. You can also create custom session object stores (Session-State Store Providers), for example if you wanted to keep session objects out-of-process. More info here: http://msdn.microsoft.com/en-us/library/ms178587.aspx But to actually answer your question... Out of the box, you are correct in the assumption that the session store stores only a reference to the object. Although, you can specify the storage behavior of the session functionality in the web.config I believe, to achieve serialization too. The 3 modes: InProc - session kept as live objects in web server (aspnet_wp.exe). Use "cookieless" configuration in web.config to "munge" the sessionId onto the URL (solves cookie/domain/path RFC problems too!) StateServer - session serialized and stored in memory in a separate process (aspnet_state.exe). State Server can run on another machine SQLServer - session serialized and stored in SQL server The above is from: http://www.eggheadcafe.com/articles/20021016.asp
