[site]: stackoverflow
[post_id]: 5648297
[parent_id]: 5648197
[tags]: 
These linker errors are pointing out that you are missing a definition somewhere (as opposed to a declaration). Not having access to your code makes this difficult for us to determine, especially without having any verbose linker errors. [EDIT] This code compiles and links for me just fine in a managed C++ project: #pragma managed class A { public: template void foo(T blah) { int i = 0; } }; //Class B wraps class A (also regular non-ref class): class B { public: template void foo(T blah) { a.foo(blah); } private: A a; }; // Class C is a ref class, which calls class B with an explicit type : ref class C { public: C() { b = new B(); } ~C() { } !C() { delete b; } void foo(int blah) { b->foo(blah); } private: B* b; };
