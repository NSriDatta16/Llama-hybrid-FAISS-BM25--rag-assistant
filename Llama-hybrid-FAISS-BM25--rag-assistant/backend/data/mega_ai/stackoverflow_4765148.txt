[site]: stackoverflow
[post_id]: 4765148
[parent_id]: 4764434
[tags]: 
I am not sure if I understand the problem well, and I also just started to read the docs of data.table library, but I think if you would like to get the columns of y and also do something to those by the columns of a , you might try something like: > x[y,a*y] foo boo [1,] 5 50 [2,] 8 44 [3,] 9 36 [4,] 8 26 [5,] 5 14 Here, you get back the columns of y multiplied by the a column of x . If you want to get x 's foo multiplied by y 's boo , try: > y[,x*boo] foo a [1,] 10 50 [2,] 22 44 [3,] 36 36 [4,] 52 26 [5,] 70 14 After editing: thank you @Prasad Chalasani making the question clearer for me. If simple merging is preferred, then the following should work. I made up a more complex data to see the actions deeper: x So only an extra column was added to each data.table. Let us see merge and doing it with data.tables : > system.time(merge(x,y)) user system elapsed 0.027 0.000 0.023 > system.time(x[,list(y,x)]) user system elapsed 0.003 0.000 0.006 From which the latter looks a lot faster. The results are not identical though, but can be used in the same way (with an extra column of the latter run): > merge(x,y) foo a zoo b boo [1,] 1 20 5 30 10 [2,] 2 21 4 31 11 [3,] 3 22 3 32 12 [4,] 4 23 2 33 13 [5,] 5 24 1 34 14 > x[,list(x,y)] foo a zoo foo.1 b boo [1,] 1 20 5 1 30 10 [2,] 2 21 4 2 31 11 [3,] 3 22 3 3 32 12 [4,] 4 23 2 4 33 13 [5,] 5 24 1 5 34 14 So to get xy we might use: xy . To compute a one-column data.table from xy$foo * xy$boo , the following might work: > xy[,foo*boo] [1] 10 22 36 52 70 Well, the result is not a data.table but a vector instead. Update (29/03/2012): thanks for @David for pointing my attention to the fact that merge.data.table were used in the above examples.
