[site]: stackoverflow
[post_id]: 1188920
[parent_id]: 1188413
[tags]: 
According to the documentation , You can specify that an attribute is optional—that is, it is not required to have a value. In general, however, you are discouraged from doing so—especially for numeric values (typically you can get better results using a mandatory attribute with a default value—in the model—of 0). The reason for this is that SQL has special comparison behavior for NULL that is unlike Objective-C's nil. NULL in a database is not the same as 0, and searches for 0 will not match columns with NULL. false == (NULL == 0) false == (NULL != 0) Moreover, NULL in a database is not equivalent to an empty string or empty data blob, either: false == (NULL == @"") false == (NULL != @"") So, try a test with NULL, which is not nil. Better yet, set a default and change the attribute to be non-optional. That's what I've ended up doing in my models, and in practice it works quite well. Edit: See my comment above. I tried creating a new managed object with an optional attribute not set, and it was nil. BOOL isNil = ([newManagedObject numberAttribute] == nil); //equals YES Another edit: I came back to this later and checked out an object loaded from the cache in the debugger (gdb is your friend!). It was trying to access memory location 0x0, which is NULL.
