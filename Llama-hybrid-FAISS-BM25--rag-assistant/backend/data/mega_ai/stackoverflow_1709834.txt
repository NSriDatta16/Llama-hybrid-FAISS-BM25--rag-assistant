[site]: stackoverflow
[post_id]: 1709834
[parent_id]: 1709600
[tags]: 
A standard-conforming UUID may be one of several variants, it looks like this: AAAAAAAA-BBBB-CCCC-DDDD-FFFFFFFFFFFF The first (hex)digit of the DDDD part determines the variant. If it is one of 8,9,A,B it is conforming to the current spec (0-7 are reserved for backward compatibility, C,D are reserved for Microsoft, and E,F are reserved for future use) If it conforms to the current spec, check the first digit of the CCCC part which determines the UUID version: Time-based with unique or random host identifier (MAC) DCE Security version (with POSIX UIDs) Name-based (MD5 hash) Random Name-based (SHA-1 hash) Version 4 is simply randomly chosen. Version 3 and 5 are generated by hashing and throwing away some bits which means you have basically no chance in recovering any information from it. Details on how to build it can be found in RFC4122 or at the UUID Generator webpage . I could not find any version 2 UUIDs so I didn't check how to extract the data. Version 1 is generated from a time-stamp and current host MAC address. (The standard also allows to use a random address instead if you set the "broadcast/multicast" bit of the MAC address.) The following perl snipped parses the MAC address and Time from a version 1 uuid: my $uuid="AAAAAAAA-BBBB-CCCC-DDDD-FFFFFFFFFFFF"; $uuid=~tr/-//d; my $time_low=hex substr($uuid,2* 0,2*4); my $time_mid=hex substr($uuid,2* 4,2*2); my $version =hex substr($uuid,2* 6,1); my $time_hi =hex substr($uuid,2* 6+1,2*2-1); my $time=($time_hi*(2**16)+$time_mid)*(2**32)+$time_low; my $epoc=int($time /10000000) - 12219292800; my $nano=$time-int($time/10000000)*10000000; my $clk_hi =hex substr($uuid,2* 8,2*1); my $clk_lo =hex substr($uuid,2* 9,2*1); my $node =substr($uuid,2*10,2*6); $node=~/^(..)(..)(..)(..)(..)(..)$/ || die; $node="$1:$2:$3:$4:$5:$6"; print "time: ",scalar localtime $epoc," +",$nano/10000,"ms\n"; print "clock id: ",$clk_hi*256+$clk_lo,"\n"; print "Mac: $node\n"; my $byte=hex $1; if(hex($1)&1){ print "broadcast/multicast bit set.\n"; }; And last but not least, there are several assigned UUIDs, for example for GPT partitions .
