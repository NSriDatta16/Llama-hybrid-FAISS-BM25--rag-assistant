[site]: stackoverflow
[post_id]: 3963919
[parent_id]: 3963872
[tags]: 
You can't just replace the string, you'll have to replace the entire TextNode element, since TextNode elements can't contain child elements in the DOM. So, when you find your text node, generate your replacement element, then replace the text node with a function similar to: function ReplaceNode(textNode, eNode) { var pNode = textNode.parentNode; pNode.replaceChild(textNode, eNode); } For what it appears you want to do, you will have to break apart the current Text Node into two new Text Nodes and a new HTML element. Here's some sample code to point you hopefully in the right direction: function DecorateText(str) { var e = document.createElement("span"); e.style.color = "#ff0000"; e.appendChild(document.createTextNode(str)); return e; } function SearchAndReplaceElement(elem) { for(var i = elem.childNodes.length; i--;) { var childNode = elem.childNodes[i]; if(childNode.nodeType == 3) { // 3 => a Text Node var strSrc = childNode.nodeValue; // for Text Nodes, the nodeValue property contains the text var strSearch = "Special String"; var pos = strSrc.indexOf(strSearch); if(pos >= 0) { var fragment = document.createDocumentFragment(); if(pos > 0) fragment.appendChild(document.createTextNode(strSrc.substr(0, pos))); fragment.appendChild(DecorateText(strSearch)); if((pos + strSearch.length + 1) Maybe jQuery would have made this easier, but it's good to understand why all of this stuff works the way it does.
