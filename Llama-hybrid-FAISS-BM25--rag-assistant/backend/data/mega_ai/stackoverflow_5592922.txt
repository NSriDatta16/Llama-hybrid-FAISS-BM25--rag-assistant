[site]: stackoverflow
[post_id]: 5592922
[parent_id]: 5587189
[tags]: 
I personally prefer using out for returning a status and a value in a method. The method should return a status enum , and the result as an out parameter. ResultTypeEnum MyMethod(in param1, blah param2, out MyType returnValue); If you need more than one parameter returned, I would suggest creating a struct or class that contains all the results: struct MyType { int blah; Myblah hello; } This way you don't have multiple out parameters and don't overload your method with confusing parameters. Throwing an exception should be left as a last resort. Only if there's a critical error in the method that should require immediate attention you should throw an exception. If you just want to return a method's state you should use enums.
