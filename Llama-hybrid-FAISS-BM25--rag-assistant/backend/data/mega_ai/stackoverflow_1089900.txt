[site]: stackoverflow
[post_id]: 1089900
[parent_id]: 1089752
[tags]: 
My first response is that it's probably a mistake to do so. UIButton and UIImageView are distinct subclasses of UIView (and UIButton is a subclass of UIControl ) so the only things they have in common are UIView methods. If sender is really a UIButton , treating it as a UIImageView is likely to result in errors, such as "unrecognized selector sent to instance" and the like. In general, a cleaner solution is to create a separate method that is the action for a UIImageView . (Unlike Java, Objective-C and Cocoa prefer to not shoehorn UI response code into a single method based on the event type â€” rather, you organize the code logically based on the operation that needs to happen.) If you must call this method from both buttons and image views, you can separate the logic like this: - (IBAction) startClick:(id)sender { if ([sender isKindOfClass:UIButton]) { ... } else if ([sender isKindOfClass:UIImageView]) { ... } }
