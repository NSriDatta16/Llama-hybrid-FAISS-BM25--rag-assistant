[site]: stackoverflow
[post_id]: 507137
[parent_id]: 506105
[tags]: 
I'm not sure what the original poster is asking exactly. Since indexOf(...) and contains(...) both probably use loops internally, perhaps he's looking to see if this is possible at all without a loop? I can think of two ways off hand, one would of course be recurrsion: public boolean containsChar(String s, char search) { if (s.length() == 0) return false; else return s.charAt(0) == search || containsChar(s.substring(1), search); } The other is far less elegant, but completeness...: /** * Works for strings of up to 5 characters */ public boolean containsChar(String s, char search) { if (s.length() > 5) throw IllegalArgumentException(); try { if (s.charAt(0) == search) return true; if (s.charAt(1) == search) return true; if (s.charAt(2) == search) return true; if (s.charAt(3) == search) return true; if (s.charAt(4) == search) return true; } catch (IndexOutOfBoundsException e) { // this should never happen... return false; } return false; } The number of lines grow as you need to support longer and longer strings of course. But there are no loops/recurrsions at all. You can even remove the length check if you're concerned that that length() uses a loop.
