[site]: stackoverflow
[post_id]: 4017980
[parent_id]: 4012928
[tags]: 
I ended up doing the following: Create document as a memorystream. Create a pdfTemplate, add content to it and remember how big the content is. Add a new (2nd) page, the same size as the content, and add template to it. Reseek to start of memorystream, open a PdfReader on it. Create a new PDF file with PdfCopy, copying the 2nd page from memory to the file. After a day searching for a more direct method, this seemed the most expedient. Basically: dim ms As New IO.MemoryStream dim doc As New Document dim pw As PdfWriter = PdfWriter.GetInstance(doc, ms) doc.Open Dim cb As PdfContentByte = pw.DirectContent Dim tpl = cb.CreateTemplate(doc.PageSize.Width, doc.PageSize.Height) ... add content to template ... ' Add template to a new page of the right dimensions doc.Add(New Paragraph(" ")) ' page 1 content required for NewPage to work doc.SetPageSize(New Rectangle(width, height)) ' size of content we added doc.NewPage() cb.AddTemplate(tpl, 0, 0) ' Close our in-memory doc but leave stream open. pw.CloseStream = False pw.Close() doc.Close() ' Now create actual file and write only second page of doc. ms.Seek(0, IO.SeekOrigin.Begin) ' Go back to start of memorystream Dim pr As New PdfReader(ms) doc = New Document(pr.GetPageSizeWithRotation(2)) ' New doc, size of page 2 Dim copier As New PdfCopy(doc, New IO.FileStream( , IO.FileMode.Create)) doc.Open() copier.AddPage(copier.GetImportedPage(pr, 2)) ' Add page 2 of our in-memory document. copier.Close() doc.Close() pr.Close() Now I have a PDF with a single page custom sized to the content which was added. Hope it helps someone else!
