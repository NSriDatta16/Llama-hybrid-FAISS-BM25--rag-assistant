[site]: stackoverflow
[post_id]: 4637962
[parent_id]: 
[tags]: 
C# 4.0 Merge .dll assembly with .NET

I decided to leave my other question to die, since I thought of a new idea using Jeffrey Richter's method written on this page to merge a .dll library to my application. So I added my .dll file as an embedded resource and also added it as a reference. Then in Program.cs (I have no idea where the code he posted is supposed to go), I added this: ... [STAThread] static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); string[] args = Environment.GetCommandLineArgs(); if (args.Length > 1) _in = args[1]; SingleInstanceController controller = new SingleInstanceController(); controller.Run(args); AppDomain.CurrentDomain.AssemblyResolve += (sender, argsx) => { String resourceName = "AssemblyLoadingAndReflection." + new AssemblyName(argsx.Name).Name + ".dll"; using (var stream = Assembly.GetExecutingAssembly().GetManifestResourceStream(resourceName)) { Byte[] assemblyData = new Byte[stream.Length]; stream.Read(assemblyData, 0, assemblyData.Length); return Assembly.Load(assemblyData); } } ; Am I supposed to change resourceName to something else? Have I added it correctly (in the right place)? Now the problem is, it still fails to find and load the assembly and I'm not sure what I've done wrong. Any help would be appreciated.
