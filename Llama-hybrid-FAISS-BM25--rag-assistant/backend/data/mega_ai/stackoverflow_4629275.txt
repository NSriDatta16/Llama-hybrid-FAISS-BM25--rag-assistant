[site]: stackoverflow
[post_id]: 4629275
[parent_id]: 4623151
[tags]: 
Watches are about one entity in a concurrent system and promises are about two entities. promises are more of a way to communicate between events on different timelines. They provide a way for a piece of code to receive a response with out having to worry about what mechanism will be providing the answer. the original code path can create a promise and pass it to two different code paths in a single thread, or threads, or agents, or nodes in a distributed system. then when one of the threads/agents/refs needs an answer it can block on the promise with out having to know anything about the entity that will be fulfilling the promise. And when the other thread/agent/ref/other figures out the answer it can fulfill the promise with out having to know anything about the entity that is waiting on the promise (or not yet waiting). promises are a communication mechanism across timelines that are independent of the concurrently mechanism used. Watches are a way of specifying a function to call when an atom or ref changes. this is a way of communicating intent to all the future states of a single agent/ref , by saying "Hey, make sure this condition is always true", or "log the change here".
