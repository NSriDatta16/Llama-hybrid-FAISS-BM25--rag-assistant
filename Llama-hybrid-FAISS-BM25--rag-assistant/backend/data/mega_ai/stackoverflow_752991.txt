[site]: stackoverflow
[post_id]: 752991
[parent_id]: 727342
[tags]: 
I thought I'd have a go and see if you could do this with the out-of-the box components and script.aculo.us . It is possible, though there would be a bit of work in getting it to look nice and provide a slick UI. The demo view: ]]> ]]> Sortable /**/ /**/ /* */ Beans: public class JobPageBean { // Declaration: // // jobPageBean // job.JobPageBean // request // private UIComponent dataTable; private UIComponent updateCommandButton; public void setTable(UIComponent dataTable) { this.dataTable = dataTable; } public UIComponent getTable() { return dataTable; } public String getTableClientId() { FacesContext context = FacesContext .getCurrentInstance(); return dataTable.getClientId(context); } public void setUpdateCommandButton( UIComponent updateCommandButton) { this.updateCommandButton = updateCommandButton; } public UIComponent getUpdateCommandButton() { return updateCommandButton; } public String getUpdateCommandButtonClientId() { FacesContext context = FacesContext .getCurrentInstance(); return updateCommandButton.getClientId(context); } } public class JobBean { // Declaration: // // jobBean // job.JobBean // session // private List jobs; private DataModel model; private String newJob; public DataModel getJobs() { if (jobs == null) { jobs = new ArrayList (); model = new ListDataModel(jobs); } return model; } public String updatePriorities() { if (jobs != null) { Collections.sort(jobs); } return null; } public String getNewJob() { return newJob; } public void setNewJob(String newJob) { this.newJob = newJob; } public String addNewJob() { if (newJob == null || newJob.trim().length() == 0) { return null; } Job job = new Job(); job.setText(newJob); job.setPriority(jobs.size()); jobs.add(job); newJob = null; return null; } } public class Job implements Comparable { private String text; private int priority; public String getText() { return text; } public void setText(String text) { this.text = text; } public int getPriority() { return priority; } public void setPriority(int priority) { this.priority = priority; } public int compareTo(Job other) { if (other.priority == priority) { return 0; } return other.priority You can reorder the rows by dragging them, but you need to submit the form to save the changes - you won't get good AJAX support without a 3rd party framework that adds it (at least, not until JSF 2.0) I used MyFaces 1.2.3, the dataTable of which renders its tbody element with an id attribute ending in :tbody_element - I don't know if all implementations do this I haven't bothered with too much in the way of input validation, or looked at using the keyboard for accessibility support, or all those other things required for a professional UI...
