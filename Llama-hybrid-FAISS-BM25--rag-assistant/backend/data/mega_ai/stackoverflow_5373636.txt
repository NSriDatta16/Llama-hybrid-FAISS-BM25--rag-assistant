[site]: stackoverflow
[post_id]: 5373636
[parent_id]: 5306451
[tags]: 
@interface MainScene : CCLayer { CCSprite *dial; CGFloat dialRotation; } + (id)scene; @end --------------------------------- @implementation MainScene + (id)scene { CCScene *scene = [CCScene node]; CCLayer *layer = [MainScene node]; [scene addChild:layer]; return scene; } - (id)init { if((self = [super init])) { CCLOG(@"MainScene init"); CGSize size = [[CCDirector sharedDirector]winSize]; dial = [CCSprite spriteWithFile:@"dial.png"]; dial.position = ccp(size.width/2,dial.contentSize.height/2); [self addChild:dial]; self.isTouchEnabled = YES; [self scheduleUpdate]; } return self; } - (void)dealloc { [super dealloc]; } - (void)update:(ccTime)delta { dial.rotation = dialRotation; } - (void)ccTouchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { } - (void)ccTouchesMoved:(NSSet *)touches withEvent:(UIEvent *)event { UITouch *touch = [touches anyObject]; //acquire the previous touch location CGPoint firstLocation = [touch previousLocationInView:[touch view]]; CGPoint location = [touch locationInView:[touch view]]; //preform all the same basic rig on both the current touch and previous touch CGPoint touchingPoint = [[CCDirector sharedDirector] convertToGL:location]; CGPoint firstTouchingPoint = [[CCDirector sharedDirector] convertToGL:firstLocation]; CGPoint firstVector = ccpSub(firstTouchingPoint, dial.position); CGFloat firstRotateAngle = -ccpToAngle(firstVector); CGFloat previousTouch = CC_RADIANS_TO_DEGREES(firstRotateAngle); CGPoint vector = ccpSub(touchingPoint, dial.position); CGFloat rotateAngle = -ccpToAngle(vector); CGFloat currentTouch = CC_RADIANS_TO_DEGREES(rotateAngle); //keep adding the difference of the two angles to the dial rotation dialRotation += currentTouch - previousTouch; } - (void)ccTouchesEnded:(NSSet *)touches withEvent:(UIEvent *)event { } EDIT: I am sorry I can't get this to stay in code mode. But this is the solution and it should be easy to implement in your code. cheers!
