[site]: stackoverflow
[post_id]: 4274225
[parent_id]: 4274190
[tags]: 
When you declare a variable using extern , you are telling the compiler that the variable was defined elsewhere and the definition will be provided at the time of linking. Inclusion is a different thing altogether. extern An external variable must be defined, exactly once, outside of any function; this sets aside storage for it. The variable must also be declared in each function that wants to access it; this states the type of the variable. The declaration may be an explicit extern statement or may be implicit from context. -The C Programming Language A variable must be defined once in one of the modules(in one of the Translation Units) of the program. If there is no definition or more than one, an error is produced, possibly in the linking stage (as in example 1 and 2). Try something like the following a.c int i =10; //definition b.c extern int i; //declaration int main() { printf("%d",i); } Compile, link and create an executable using gcc a.c b.c -o executable_name or gcc -c a.c // creates a.o gcc -c b.c // creates b.o Now link the object files and create an executable gcc a.o b.o -o executable_name
