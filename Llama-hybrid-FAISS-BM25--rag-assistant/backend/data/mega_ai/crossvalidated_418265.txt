[site]: crossvalidated
[post_id]: 418265
[parent_id]: 417517
[tags]: 
Discrete coordinates shouldn't be a problem since you can easily map them into [0;1]x[0;1]. Using any recurrent network would be fine (including LSTM), however, I suggest you look into an attention mechanism instead of LSTM which could be beneficial in your case. As input you set mapped sequence of x,y from [0;1]x[0;1] as output you get a vector of current position [0;1]x[0;1] then you should map output into your discrete domain. Obviously, you can expect that NN output wouldn't fit perfectly into your discrete domain. In that case, you can estimate the nearest point or coordinate i. e. by simply rounding. I suggest you first test your NN with optimization-based on RMSE. I think it could perfectly fit the problem, because of euclidean space. If sequence length is fixed (like last 15 locations) or has only small fluctuations you can also apply convolutions layers instead of LSTM.
