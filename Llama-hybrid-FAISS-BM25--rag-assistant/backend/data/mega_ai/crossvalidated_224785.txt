[site]: crossvalidated
[post_id]: 224785
[parent_id]: 224544
[tags]: 
Let's say that we have movies $m_1, m_2, \ldots, m_n$. So we have $n$ many movies. Also let's say that we have users $u_1, u_2, \ldots, u_k$. So we have $k$ many users. Now you have chosen two users out of those $k$ many users. Namely $u_1$ and $u_2$ users. Now, your goal is to find to similarity between these two users $u_1$ and $u_2$. Here is a heuristic: Find all common movies that were rated by users $u_1$ and $u_2$. Let's say that the two users have only the following movie ratings in common (say) $m_5, m_7, m_9, m_{12}$. Create this table for each user: | m_5 | m_7 | m_9 | m_12 -----+-----+-----+-----+------ u_1 | 0.1 | 0.8 | 0.5 | 0.3 u_2 | 0.15| 0.7 | 0.6 | 0.8 Then find the movie-wise absolute differences: | m_5 | m_7 | m_9 | m_12 -----+-----+-----+-----+------ u_1 | 0.1 | 0.8 | 0.5 | 0.3 u_2 | 0.15| 0.7 | 0.6 | 0.8 -----+-----+-----+-----+------ diff | 0.05| 0.1 | 0.1 | 0.5 Then find the average of the absolute differences: $\frac{0.05 + 0.1 + 0.1 + 0.5}{4} = 0.1875$. The similarity between the two users is then $0.1875$. But this simple answer is really bad though for any real-life scenario for at least the following reasons: It ignores time . It assumes that if two users rated a movie similarly in the past, then it is exactly as important as if they rated a movie in the present. This is really an unrealistic assumption because people grow differently over time as they age. Therefore it's important to consider the rating time and penalize older events to make them less related. It ignores other behavioral aspects of users that can hint about their movie preferences. It basically assumes that only knowing users movie ratings is adequate to predict what movies they like in the future. Which is obviously unrealistic. The move information we get about the users, the more we can predict their behavior. Of course there is a data size limits after which returns start to diminish, but I think that we are far away from such limits and we have a lot of room of incorporating more input. These limitations apply to all other answers (including this one, obviously). What I have been trying to address in my other answers is a better solution hat doesn't have those.
