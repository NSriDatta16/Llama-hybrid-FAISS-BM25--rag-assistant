[site]: stackoverflow
[post_id]: 3529347
[parent_id]: 3501498
[tags]: 
It seems this is really a bug or at least inconsistency in ASP.NET MVC 2. I have examined its source and found what InputHelper() method called from TextBoxFor() helper receives default value calculated with ModelMetadata.FromLambdaExpression(expression, htmlHelper.ViewData).Model But SelectInternal() method called from DropDownListFor() helper receives only a name of a control found with ExpressionHelper.GetExpressionText() method. So SelectInternal() tries to find default value using ViewData.Eval() method from MVC 1. It's known what this method isn't able to extract values from arrays by numeric index. So in your case are applicable model.Sch_ID) %> model.Vragen[i].Evvr_Type)%> but not model.Vragen[i].Evvr_Type) %> because it's equivalent to At the same time I want to emphasize again what model.Vragen[i].Evvr_Type)%> isn't equivalent to because latter even in MVC 2 can't bind default value. Possible workarounds First . Since SelectInternal() also checks ModelState dictionary you can fill this dictionary before returning the view. for (int i=0; i This will be done by MVC itself after from post, so you should do it manually only first time. Second . Instead of model.Vragen[i].Evvr_Type, ViewData["vraagtype"] as List )%> use model.Vragen[i].Evvr_Type, new SelectList(ViewData["vraagtype"] as IEnumerable, "Value", "Text", Model.Vragen[i].Evvr_Type))%> ViewData["vraagtype"] in this case doesn't have to contain objects of SelectListItem, any IEnumerable is enough. You may check SelectList() method description in case of need.
