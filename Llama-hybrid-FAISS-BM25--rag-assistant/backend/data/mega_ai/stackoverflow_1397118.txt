[site]: stackoverflow
[post_id]: 1397118
[parent_id]: 1318291
[tags]: 
Background: For various reasons onload() is not considered the proper approach for loading Javascript, see for example Launching Code on Document Ready , with the most important/noticeable one being that Javascript code isn't run until the page has finished downloading entirely, including images and the like, which might take an eternity therefore (e.g. if an external banner ad server is down etc.). Instead it is recommended to load Javascript as soon as the DOM is ready, but unfortunately there is no cross browser compatible native solution for this, see Getting notified when the page DOM has loaded (but before window.onload) ; please note that my entire answer is based upon the most excellent Javascript library jQuery , which offers a cross browser solution for this problem , consequently I'd definitely favor the two higher voted answers over the accepted solution myself. Likely cause: Your issue seems to be caused by the opposite behavior though: Chrome facilitates the WebKit rendering engine, just like Safari , and for the latter onload() is discussed to behave differently, see section When does onload fire? in Is Safari faster? . Another description of this problem specific to Chrome can be found in window.onload not working correctly in Chrome , without an explanation though. In conclusion I suspect onload() to fire before the DOM is actually loaded completely, at least concerning the requirements of TinyMCE, which is notoriously fragile regarding issues like this and simply ceases to load. Possible solution: Just facilitating attribute defer on the script tag as outlined in window.onload not working correctly in Chrome is again not cross browser compatible, hence I'd simply go with the widely deployed and proven approach of using the already mentioned jQuery cross browser solution for the onload() problem , which is good practice anyway and should in principle take care of your inverse issue as well. Update: There are indeed some bugs filed against WebKit which could back my conclusion (no matter whether this behavior actually constitutes a bug or is intentional), see: onload sometimes fired before all resources are loaded window.onload fires before all subresources loaded Window.onload is firing before image resources are loaded
