[site]: stackoverflow
[post_id]: 1299324
[parent_id]: 1299216
[tags]: 
Perhaps a property backing store, similar to the way WPF stores properties ? So, you could have: Dictionary mPropertyBackingStore = new Dictionary (); public PropertyThing MyPropertyThing { get { return mPropertyBackingStore["MyPropertyThing"] as PropertyThing; } set { mPropertyBackingStore["MyPropertyThing"] = value; } } You can do all the pre-processing you want now, safe in the knowledge that if anyone did access the variable directly, it would have been really really hard compared to the property accessor. P.S. You may even be able to use the dependency property infrastructure from WPF... P.P.S. This is obviously going to incur the cost of casting, but it depends on your needs - if performance is critical, perhaps this isn't the solution for you. P.P.P.S Don't forget to initialise the backing store! (; EDIT: In fact, if you change the value property stored to a property storage object (using the Command pattern for example), you could do your processing in the command object...just a thought.
