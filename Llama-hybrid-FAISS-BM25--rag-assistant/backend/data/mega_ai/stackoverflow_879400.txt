[site]: stackoverflow
[post_id]: 879400
[parent_id]: 870723
[tags]: 
So...we know we have a fragmented heap. The next question is: what's causing the fragmentation? What's keeping these free objects from being released? The recommendations I have read is to examine the objects right after the free space: !dumpheap -stat Dump the method table of the Free object: !dumpheap -mt 000db8e8 Select one Free object from the list to examine more closely: !dumpobj 0x2003b0b0 Record the object's size Dump the next object after it: !dumpobj 0x2003b0b0+1000 Find the object holding a reference !gcroot 0x2003b0b0+1000 Dump the gchandle of the object found. I usually get down this rabbit hole, and my limited knowledge of the .NET API fails here. Is this the correct way to debug the problem? Jeff
