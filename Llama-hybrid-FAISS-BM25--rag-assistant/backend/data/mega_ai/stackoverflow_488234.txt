[site]: stackoverflow
[post_id]: 488234
[parent_id]: 486838
[tags]: 
There's a few things I use for practice - admittedly, they're more algorithmic than business oriented, but lets face it business oriented stuff can get tedious if that's what you do all day long: Code Golf on SO - check out the following tags that all have great mini tasks Code-Golf Golf Algorithm Language-Agnostic Project Euler - found at http://projecteuler.net/ Check out other questions on SO to give you ideas of tasks to program - a great one to start off with can be found here Alternate FizzBuzz Questions Attempt to figure out answers to questions that come up on here that you wouldn't otherwise know the answer to. For practice in business aspects of programming, try and understand what most business wants when it comes to software and that is software to assist them to do their every day jobs. This may come down to software that does specific tasks for a user (i.e. you) or it may be software that allows storage, retrieval and reporting of business data. Create a project that allows you to store and retreive data using various patterns, taking note of performance differences of each - i.e. DataSet vs. DataAdapter vs. DataReader vs. LINQ-to-SQL and Stored Procedures vs. TableDirect vs. QueryStrings. There's only so many ways of storing and retrieving data from a database. Grab a demo database from the internet - like AdventureWorks or the infamous Northwind and write yourself reports displaying the data in various formats. I often find that utility software I use that I find online just doesn't quite cut it. Sure some of them have some nice features, but inevitably there's always something missing. So I surf around and find a bunch of utilities that cover everything I think one of them should do, take all the best/most useful bits and [taking note of things I like about each of the tools] I write my own. The best way is to always think: "How do I want to use it" rather than "how must I use it if I program it this way".
