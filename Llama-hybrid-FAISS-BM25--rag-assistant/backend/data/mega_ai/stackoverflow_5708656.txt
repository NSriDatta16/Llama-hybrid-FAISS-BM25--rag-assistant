[site]: stackoverflow
[post_id]: 5708656
[parent_id]: 5708239
[tags]: 
I advice against using a bitmask for the following reasons: Index cannot be used efficiently Querying is harder Readability / Maintenance is severely impacted The average developer out there doesn't know what a bitmask is Flexibility is reduced (upper limit to nr of bits in a number) Depending on your query patterns, planned feature set and data distribution I would go with your option 1, or even something simple as: user_permissions( user_id ,read ,create ,download ,print ,approve ,primary key(user_id) ); Adding a column is a schema modification, but my guess is that adding a privilege "Purge", will require some code to go along with it, so the privileges may not have to be as dynamic as you think. If you have some sick distribution of data, such as 90% of the user base doesn't have a single permission, the following model also works fine (but falls apart when doing larger scans (one 5-way join vs a single full table scan). user_permission_read( user_id ,primary key(user_id) ,foreign key(user_id) references user(user_id) ) user_permission_write( user_id ,primary key(user_id) ,foreign key(user_id) references user(user_id) ) user_permission_etcetera( user_id ,primary key(user_id) ,foreign key(user_id) references user(user_id) )
