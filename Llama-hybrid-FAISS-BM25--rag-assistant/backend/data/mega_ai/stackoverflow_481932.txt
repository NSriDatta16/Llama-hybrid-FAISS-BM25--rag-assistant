[site]: stackoverflow
[post_id]: 481932
[parent_id]: 481900
[tags]: 
Do read the Raymond Chen blog postings that ShuggyCoUk's answer pointed to. But pay special attention to this bit: But the real question that is raised whenever somebody asks, "What's the maximum number of threads that a process can create?" is "Why are you creating so many threads that this even becomes an issue?" The "one thread per client" model is well-known not to scale beyond a dozen clients or so. If you're going to be handling more than that many clients simultaneously, you should move to a model where instead of dedicating a thread to a client, you instead allocate an object. (Someday I'll muse on the duality between threads and objects.) Windows provides I/O completion ports and a thread pool to help you convert from a thread-based model to a work-item-based model.
