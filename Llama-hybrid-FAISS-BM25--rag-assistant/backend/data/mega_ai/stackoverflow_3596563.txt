[site]: stackoverflow
[post_id]: 3596563
[parent_id]: 
[tags]: 
ASP.NET MVC - Populating a form dynamically through the database

I am porting a search application from Classic ASP to ASP.NET MVC2. One of hte pages is a dynamically populated search form that is broken up into 4 categories, each with 2 rows. The client is able to uncheck options for each of these categories. When this happens, each category is dynamically repopulated top to bottom, left to right. The person who programmed the Classic ASP version setup a subroutine that searched through the database (which has a boolean field for each search field) and then returned an array. He then took the array and called another subroutine that looped through the array and then generated each of the categories. Right now, the only thing I can think of is to create a model that has methods for each of the categories, each of which return a List. A simple example would be: class SearchPageOrganizer { // Declare SearchFields object private SearchFields fields; // Contructor; instantiates SearchFields object public SearchPageOrganizer(SearchFields searchFields) { this.fields = searchFields; } // Gets a list of fields active in the characteristics category public List GetCharactersticsList() { List list = new List (); // Check if the Color field is active if (fields.Color) { list.Add("Color"); } // Check if the Size field is active if (fields.Size) { list.Add("Size"); } // Return the list return list; } } Then what I could do is split the list according to the size of each row, and then loop through each the list and call a user control that is able to render the HTML dynamically based on a name parameter. The problem with this technique is that, for some odd reason, it feels like I am not doing this in the most simplistic way. For anyone who reads this, is there an easier way in which you would implement this? Thanks!
