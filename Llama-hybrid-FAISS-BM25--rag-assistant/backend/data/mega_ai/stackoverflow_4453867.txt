[site]: stackoverflow
[post_id]: 4453867
[parent_id]: 4401667
[tags]: 
Here's another wild idea. Isolate all your System.Drawing , PInvoke, GDI, etc. into a separate component, and wrap it as an ActiveX object. Embed the ActiveX object in your web page, and make your Silverlight application consume its services somehow. I guess this would require some "plumbing" in the level of the web page (e.g. a script that would activate the ActiveX object, and expose the results to the Silverlight app through the document or something) This is just an initial thought I had. I guess it can be improved in many ways. What do you think? :) Edit: If it is acceptable for your Silverlight code to run in Out-of-Browser mode, then Silverlight 4 supports embedding an ActiveX control in your Silverlight application. This just might make it feasible to wrap all your old implementation in some ActiveX and use it from Silverlight.
