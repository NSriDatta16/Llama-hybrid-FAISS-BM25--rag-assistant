[site]: stackoverflow
[post_id]: 1618746
[parent_id]: 1618394
[tags]: 
First of all, select description, weight, owner.name from Dog is not valid SQL. It would have to be something like select description, weight, Person.name from Dog join Person on Dog.person_id = Person.id instead. Secondly, why? While it's possible to do what you want (see below), it's extremely verbose to do so via Criteria API and you gain nothing to show for it. Savings on data transfer for a couple of columns are negligible unless said columns are huge blobs or you're selecting hundreds of thousands of records. In either case there are better ways to deal with this issue. Anywho, to do what you want for criteria, you need to join linked table (Person) via alias and specify projection on main criteria using said alias: Criteria criteria = session.createCriteria(Dog.class, "dog") .createAlias("owner", "own") .setProjection( Projections.projectionList() .add(Projections.property("dog.description")) .add(Projections.property("dog.weight")) .add(Projections.property("own.name")) ); There's a description and an example of the above in Criteria Projections documentation . Keep in mind that, when executed, the above criteria would return a list of object arrays. You'll need to specify a ResultTransformer in order to have results converted into actual objects.
