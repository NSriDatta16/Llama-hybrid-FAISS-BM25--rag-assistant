[site]: datascience
[post_id]: 24943
[parent_id]: 11314
[tags]: 
Here is a pretty extensive guide on change/anomaly detection in time series: "Anomaly Detection of Time Series", a masters thesis by Deepthi Cheboli. You can start from the simple parametric approaches that have been mentioned before, but I want to let you know that there is an actual methodology devoted to this exact problem, which is very easy to build and use. The name of your problem is novelty detection , and the perfect tool to handle it without any burn-in data, is called One-Class Support Vector Machines . What it does is it learns from the single class, and checks any test cases against the learned single group to see if it is different than what it is used to seeing. I guess this is what you are trying to do. You are avoiding sacrificing any time or data points after the change happens. If you were fine with burning in some data after the change, and build a "classification" (with an abuse of the term) approach, then you didn't have to go the one-class SVM way. If you believe the time-series that you currently have has a good behavior, and anything that doesn't look like it should be immediately detected, then one-class SVM it is. This model is implemented in R, Python, Matlab, and I am sure many other platforms, so depending on which program you use, I'd recommend giving it a try.
