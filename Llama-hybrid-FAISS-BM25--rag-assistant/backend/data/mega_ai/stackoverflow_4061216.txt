[site]: stackoverflow
[post_id]: 4061216
[parent_id]: 4061185
[tags]: 
The thing you've encountered is called closure and it is an essential part of Javascript. A closure is an expression (typically a function) that can have free variables together with an environment that binds those variables (that "closes" the expression). What happens is that the anonymous function assigned to ondrag closes over it's environment including variable i . As a consequence whenever i changes outside of this function, i will contain the new value inside accordingly. The way you can workaround this behavior in the current context is to create another scope with an additional self-executing function. for (var i=0; i You can read more on the topic: Use Cases for JavaScript Closures by @kangax
