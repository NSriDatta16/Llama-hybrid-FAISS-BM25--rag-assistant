[site]: datascience
[post_id]: 73419
[parent_id]: 
[tags]: 
mAP calculation for object detection yolov3

I'm currently working on yolov3 implementation in tensorflow 2.0 and currently I'm working on calculating the mAP (mean average precision) scores to evaluate trained models which is a popular metric in measuring the accuracy of object detectors like Faster R-CNN, SSD, yolo, ... Average precision computes the average precision value for recall value over 0 to 1. Here's an illustrative plot that calculates mAP scores for 30 classes: 31.05 % is calculated by averaging the average precision values for all classes in the model (9.32 / 30) * 100 = 31.05% . As of my understanding the more the figure, the better and it is a good indicator to rely on when deciding to stop the training / train further. The question is assuming for example I have a dataset of 2000 images with n bounding boxes and m classes and the validation data will be 0.2 of the dataset size(1600 training examples and 400 validation examples) should I be calculating the map scores on the whole training dataset after each epoch or just take some fraction of it? I mean to calculate training and validation mAP scores should I make predictions at the end of each epoch and calculate mAP accordingly on 1600, 400 examples respectively? or just take a fraction maybe(100 examples) and predict and calculate on the 100 examples? I'm concerned about efficiency, for example if I'm working with a large dataset, let's say 100k images, wouldn't it be extremely inefficient to make predictions on 100k images after each epoch?
