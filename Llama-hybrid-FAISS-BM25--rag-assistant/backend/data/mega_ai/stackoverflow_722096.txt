[site]: stackoverflow
[post_id]: 722096
[parent_id]: 720646
[tags]: 
Please use strict and use warnings . Many of the troublesome things you have going on in this code will be flagged for you if you use these pragmas. You are also expending a lot of effort to append to the end of your arrays. You can use push to do this without knowing the index of the last item. Using push like this will let you simplify your code quite a bit. Use () to make an empty array (well list really). Use [] to make an array reference. use {} to make a hash reference. You've been using hash refs in a number of places. It is also best to use lexical filehandles instead of global filehandles. Using global file handles is using unnecessary global variables, which is asking for trouble. Also check for success on your calls to open . open( my $fh, ' When you are working with data structures, Data::Dumper is a useful module to see what's going on. use Data::Dumper; my $foo = { bar => [ 0..5], baz => { a..z }, }; my @qux = ( [qw/a b c d/], [0..5] ); print Dumper $foo; print Dumper \@qux; Also, take a look at perldsc and perlreftut they have good examples of how to work with references and nested data structures.
