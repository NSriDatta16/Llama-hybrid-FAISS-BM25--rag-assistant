[site]: stackoverflow
[post_id]: 539336
[parent_id]: 539067
[tags]: 
The other answers work well if you want a thorough copy, but here is another approach that you may be intrigued by. If you are using LINQ to SQL, you can create a DBML file and then use the CreateDatabase() method on your data context. It does not copy the entire schema (omits some constraints, UDFs, Procs, etc...) but is useful in scenarios where you may want to operate on tables and perhaps partition your database testing. Here are a few steps: Create a Windows Forms App Create a DBML file (LINQ to SQL classes) called Foo Drag Tables/Objects you're interested in to the design surface Close / Save Some place in your application you could write code like: FooDataContext fooData = new FooDataContext(@"connection string to new database"); fooData.CreateDatabase(); Here is the documentation for the method I described above.
