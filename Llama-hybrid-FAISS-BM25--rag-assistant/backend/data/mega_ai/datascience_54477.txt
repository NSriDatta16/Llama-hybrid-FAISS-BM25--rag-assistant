[site]: datascience
[post_id]: 54477
[parent_id]: 
[tags]: 
How to get high accuracy in CNNs?

ML and Data Science world. I am a newbie to CNNs, but do possess a basic understanding of ML and Neural Networks. I wanted to create my own CNN that works on the Cats and Dogs Dataset. I preprocessed the data and built my network, but when I fit the model with the data, I am not able to get more than 55% accuracy, which means the model isn't learning anything. Can anybody explain what I am doing wrong here? model = Sequential() model.add(Conv2D(filters=32, kernel_size=(3,3),padding='SAME', input_shape=X[0].shape)) model.add(Activation('relu')) model.add(MaxPooling2D(pool_size=(2,2), dim_ordering='th')) model.add(Conv2D(filters=64, kernel_size=(3,3), padding='SAME')) model.add(Activation('relu')) model.add(MaxPooling2D(pool_size=(2,2), dim_ordering='th')) model.add(Dropout(rate=0.4)) model.add(Conv2D(filters=128, kernel_size=(3,3), padding='SAME')) model.add(Activation('relu')) model.add(MaxPooling2D(pool_size=(2,2), dim_ordering='th')) model.add(Dropout(rate=0.35)) #model.add(Conv2D(filters=64, kernel_size=(3,3), padding='SAME')) #model.add(Activation('relu')) #model.add(MaxPooling2D(pool_size=(2,2), dim_ordering='th')) model.add(Flatten()) model.add(Dense(1024)) model.add(Activation('relu')) model.add(Dropout(rate=0.3)) model.add(Dense(2)) model.add(Activation('softmax')) And this is the optimizer part: opt = keras.optimizers.SGD(lr=0.0001, decay=0.0) model.compile(optimizer=opt, loss='binary_crossentropy', metrics['accuracy']) print(model.summary()) model.fit(X, np.array(Y), validation_data=(test_x, np.array(test_y)), epochs=30, verbose=2) I've been stuck on this for the past 2 days. Any and all help is appreciated. Thanks.
