[site]: crossvalidated
[post_id]: 379795
[parent_id]: 
[tags]: 
Fitting a NN model on one-to-many function

Given $f(x) = y$ as a surjective (many-to-one) function, we know that $f^{-1} (y) = x$ is a one-to-many mapping for function $f^{-1}$ . In my application, $x$ is a spatial data represented by a 2D image and $y$ is a time-series data over a fixed interval. Building a neural network to represent $f(\cdot)$ has been trivial but to represent $f^{-1}(\cdot)$ is not as simple due to the nature of the function. Here I represent $f^{-1} (y) = x$ graphically. $f^{-1} (y) = x$ "> In this pictorial representation, I actually need the green stippled line to touch all data points instead of taking the average. The challenge here is that $x$ is known to have residuals with Gaussian distribution, so a large dataset of $x$ will naturally form a Gaussian cloud and fitting a neural network model with of course fit something similar to the green stippled line. Are there ways to represent a one-to-many function with a neural network? I've been reading on kernelization and was thinking of kernelizing $y$ but in my application $y$ is already a high dimensional data with 10-dimensions. I appreciate your thoughts, thank you.
