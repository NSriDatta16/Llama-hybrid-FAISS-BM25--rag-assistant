[site]: stackoverflow
[post_id]: 1354361
[parent_id]: 1354312
[tags]: 
MVC concept is a good practice in general and should still be used in game designs as a general principle. But by the interactive nature of the game UI, you should also look into event based architecture. MVC does not contradict with event based architecture if designed carefully. (PureMVC as an example.) I suggest you to use observable pattern on all display objects so they can all listen/fire events. This will save you a lot of headache later on. When your code base gets more complex, you will eventually HAVE TO use more decoupling techniques such as your option 2 describes. Also mediator pattern will help as well. Edit: Mediator Pattern is generally a good way to organize application level events. Here is a blog about using MVC, events and mediators in game programming: http://ezide.com/games/writing-games.html
