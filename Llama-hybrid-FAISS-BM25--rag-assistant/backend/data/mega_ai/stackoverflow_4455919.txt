[site]: stackoverflow
[post_id]: 4455919
[parent_id]: 
[tags]: 
How to begin and rollback a database transaction to wrap a PHPUnit suite for Magento

I'd like to use a transaction rollback method to isolate my database for unit testing purposes. Ideally, I would use a structure something like this: public static function setUpBeforeClass(){ Mage_Core_Model_Resource_Transaction::beginTransaction(); } public function testOne(){...} public function testTwo(){...} public static function tearDownAfterClass(){ Mage_Core_Model_Resource_Transaction::rollBack(); } Unfortunately the Mage_Core_Model_Resource_Transaction class doesn't expose public begin/rollbackTransaction functions. I can't find any public Magento functions to meet the requirement. Is there a Zend equivalent that will work? I guess I could rewrite Mage_Core_Model_Resource_Transaction and add public wrappers for the protected methods, but I'm hesitant to override such a core class. I have also tried using $this->model = Mage::getModel('model_being_tested'); $this->model->getResource()->beginTransaction(); ... $this->model->getResource()->rollBack(); and then use the $this->model in the tests but that can't be used in static functions. Any suggestions or alternative architectures? Thanks in advance.
