[site]: stackoverflow
[post_id]: 4264871
[parent_id]: 4264797
[tags]: 
Is this what you want: int main() { std::wstring data1 = L"U+9FA5 (\0x9FA5)"; std::wstring data2 = Lâ€œU+0041 (A)"; } The wstring is just a container of wchar_t objects. There is no implied encoding of the characters (it just stores what you put it). Windows wchar_t is currently 2 bytes so it can probably only store UTF-16 characters. Linus wchar_t is usually 4 bytes. So it can use an encoding of UTF-16 or UTF-32. Though it most normal situations these overlap and top half is just all zero (exceptions of course are code-points not on the BMP or surrogate pairs). Note: UTF-8 characters are not normally used internally (though they can be) in an application as they are not fixed width. But it is extremely useful for transport and storage because of its compressibility (and backwards compatibility with ASCII does not hurt). Note: C/C++ does not preclude the use of other encoding formats for its strings.
