[site]: stackoverflow
[post_id]: 4272367
[parent_id]: 
[tags]: 
Getting an instance of a bean excplicitly in runtime

I have a case where I have a bean (let's call it A) which needs some other bean (B). This B is retrieved from a static method of a class using MethodInvokingFactoryBean. This static method depends on the state of the system and will work after the web application is loaded. I need to access the B only in runtime (no interaction in the constructor). How can I configure the A to autowire bean B and only initialize it the first time A requires it? Is using getBean on the Application context the only way? Thanks! * Edit - Added some xmls :) * This is the definition of bean B. This is the definition of bean A. I can't use Autowire to wire B into A because it will initialize it (B) on A's construction. B's targetMethod will only work after the web app has been initialized. I can use ApplicationContext.getBean("B") inside A, but it's not elegant and will be a problem with unit testing unless I do the following (which is also not desired): public BInterface getB() { if (b == null) { b = ApplicationContext.getBean("B"); } return b; }
