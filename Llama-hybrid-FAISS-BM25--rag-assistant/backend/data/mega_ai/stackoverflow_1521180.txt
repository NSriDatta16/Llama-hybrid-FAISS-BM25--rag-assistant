[site]: stackoverflow
[post_id]: 1521180
[parent_id]: 1521062
[tags]: 
It looks pretty close to me. Strings in C are null-terminated, which means that the end of the string is indicated by a null character. In a sense, a string in C is really just an array of bytes. When you do: cout > name; If I enter the string "Book", in memory it'll look like something like: |0|1|2|3|4|5..49| |B|o|o|k|0|*HERE BE DRAGONS* Well, really it will contain the ASCII values corresponding to those letters, but for our purposes, it contains those letters. There here be dragons is memory that that you didn't initialize, so it contains whatever garbage your platform sets it to. So when you copy your string, you need to instead look for that 0 byte at the end of the string. for(int i=0; name[i]!=0; i++) { cart_of_names[0][i] = name[i]; } Then when you output it, you don't actually need to do it a character at a time. You can just do cout . cout knows where the string ends because of that terminating null character.
