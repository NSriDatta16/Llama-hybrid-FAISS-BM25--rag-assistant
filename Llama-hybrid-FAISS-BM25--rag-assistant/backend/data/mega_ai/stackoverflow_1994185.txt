[site]: stackoverflow
[post_id]: 1994185
[parent_id]: 1993720
[tags]: 
Build your serializable object model. Create and populate an instance of it. Serialize it to XML. Now you know what your input XML will need to look like. Generally speaking, so long as you don't mess around with the various attributes that let you exert control over the formatting of serialized XML, every property that's a value type will look like this: ValueSerializedToText and every property that's a reference type will look like this: Value Value ...and so on. So, in your example, one would expect that XML to deserialize into an object of type Hero whose Legion property contained an object that had an Andromeda property. Which is to say, no, that's not what your XML should look like. What you're actually going to have is a Hero object with Name and Faction properties, which might be serialized like this: Hellbourne Corrupted Disciple ... But all of this is worrying about the wrong thing . You shouldn't be focusing your attention on what you want the XML to look like. You should focus on what you need your object model to look like. Do this, and the XML serialization format will take care of itself.
