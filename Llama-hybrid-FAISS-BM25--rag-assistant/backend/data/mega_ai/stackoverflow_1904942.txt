[site]: stackoverflow
[post_id]: 1904942
[parent_id]: 1903190
[tags]: 
If you're looking for a pure C solution, here it is, including a driver program. It turns out to be pretty simple: to rotate by n , you: reverse the first n elements in-place, reverse the remaining elements in-place, and reverse the whole array in-place. This requires one element worth of extra storage (for reversing). #include #include #include /* print an array */ static void print_array(unsigned char *arr, size_t n, const char *prefix) { size_t i; if (prefix) { printf("%s: ", prefix); } for (i=0; i 1) { char *eptr; shift = strtoul(argv[1], &eptr, 0); if (*eptr || errno == ERANGE) { perror("strtoul"); return EXIT_FAILURE; } } print_array(arr, narr, "before shift"); rotate(arr, narr, shift); print_array(arr, narr, "after shift"); return EXIT_SUCCESS; }
