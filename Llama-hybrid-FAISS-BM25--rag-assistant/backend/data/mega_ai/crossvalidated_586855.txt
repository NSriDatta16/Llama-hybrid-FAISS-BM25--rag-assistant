[site]: crossvalidated
[post_id]: 586855
[parent_id]: 586567
[tags]: 
I would like to use loess to predict the ‘true’ value of genes with low ‘Integrity’ values. That's probably not a good idea. Look at your example F , which plots some log-gene-expression values against Integrity . If you use the smoothed plot to get a value of log-gene-expression corresponding to a particular Integrity , all of your values would be in the range of 2.5 to 3.0. That's throwing away a lot of detail. Even if individual values aren't equally reliable, the individual expression values (or their averages over multiple samples) are presumably the most reliable values that you have. There's no good reason to replace the observed values with what otherwise is close to the average expression across all genes. You might, however, want to put less emphasis in your model on the values with the lowest Integrity . That's something that can be done by the limma package , using a similar approach in the opposite direction: modeling a type of Integrity as a function of gene-expression value. When your model involves multiple genes measured in multiple samples, in an overall model you might weight each gene's value inversely with respect to the variance of its gene-expression estimate. With the sample sizes usually found in this type of study, however, those estimates can vary widely among genes even if the underlying distributions of the gene-expression values are similar. Relying on variance estimates from individual genes can be misleading. Thus limma can pool information across genes and estimate the variance as a function of gene-expression level. It then uses the pooled estimate in its modeling. That's the opposite direction from what you propose. I haven't tried to use things like your Integrity values in that way to differentially weight genes in a limma model, but I suspect that it has been done and is documented in Bioconductor help threads. In terms of your invocations of loess() , it's mostly a matter of how much wiggliness that your want to allow in the curve and whether you want all data points to be treated equally. For wiggliness there's no single best answer; the defaults often work well. It's not clear to me that differential weighting according to Integrity will do much for you. In your plots with Integrity on the x-axis, that down-weights all points at any Integrity equally, increasingly so as you move from Integrity=100 down toward Integrity=0 . But the local regression done by loess() is based on regions of similar values along the x-axis already, so the relative weighting by Integrity won't matter much locally. If you have a very wide span, it will tend to put more emphasis on the information from the right side of the plot. If you instead model Integrity as a function of gene expression, then you might weight by how precisely the Integrity values themselves are estimated.
