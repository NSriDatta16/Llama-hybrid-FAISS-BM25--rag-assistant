[site]: crossvalidated
[post_id]: 262463
[parent_id]: 260595
[tags]: 
Okay, after some more research and discussions, I think I have a solution: Reiterate data set library(ggplot2) library(dplyr) # we need this package now # The initial data set subject Question 2: We treat this test as a 2nd level analysis and take a subject as the unit of observation instead of the single successes of each subject. Like that, we can collapse the data over the single trials and end up with one proportion of successes per condition per participant. With this type of data organization, we can then do a two sample paired t-test. Of course, we lose some information with this approach - namely the variance how the proportions for each participant come about - ... so if somebody has a better idea, let me know! # Collapse the data across single trials. We will end up with # one proportion of successes per condition per participant collapseSubjCond % group_by(subject, condition) %>% summarize(meanOutcome=mean(outcome)) # Make a more sensible plot showing just the proportion of correct. # Showing the porportion of incorrect as well is kind of a duplicate because # it is apparent from the proportion correct dummy % group_by(condition) %>% summarize(meanOutcome=mean(meanOutcome)) ggplot(dummy, aes(x = condition, y = meanOutcome, fill = condition)) + geom_col() # Make a paired t-test t.test(meanOutcome~condition, data=collapseSubjCond, paired=TRUE) Question 1: With the same general idea as in Question 2, we treat the subject as a unit of observation and do a paired t-test between meanSuccesses and meanFailures per participant ... collapsed over conditions # From our data frame that contains one proportion of successes per condition # and per participant, we want only one proportion of successes per participant dummy % group_by(subject) %>% summarize(meanOutcome=mean(meanOutcome)) # Now we have three participant. One proportion of successes for each participant # and the failures are 1-successes meanSuccess
