[site]: stackoverflow
[post_id]: 3273679
[parent_id]: 3273155
[tags]: 
You're talking about perspective transformation from 2D planar onto a square 'in space' I think. Well - This one is not that difficult. The mathematics are explained in the paper: Heckbert, Paul, Fundamentals of Texture Mapping and Image Warping, Masterâ€™s thesis, UCB/CSD 89/516, CS Division, U.C. Berkeley, June 1989. (I don't link to the paper due to copyright reasons. It's available on the net and you shouldn't have any problems finding it though) This gives you the math and some ready to use equations to do it. If you are looking for some "easy to rip" code I suggest to download the OpenVG reference implementation and take a close look at the functions "vguComputeWarpQuadToSquare", "vguComputeWarpSquareToQuad" and "vguComputeWarpQuadToQuad" :-) They cover all you need. Download here: http://www.khronos.org/registry/vg/ri/openvg-1.1-ri.zip These functions will calculate a 3x3 matrix that does the transformation. To use this matrix you have to extend your 2D coordinates into 2D homogenous coordinates. That's not that difficult but beyond the scope of the question. If you need help to work with them I suggest that you ask that in a different question.
