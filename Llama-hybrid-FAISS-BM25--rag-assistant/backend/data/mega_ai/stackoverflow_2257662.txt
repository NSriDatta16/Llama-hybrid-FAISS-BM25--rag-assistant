[site]: stackoverflow
[post_id]: 2257662
[parent_id]: 2257050
[tags]: 
The design you have gone for is very chatty. You have attached a new FinishHandler to each widget, when you only need to set it to your btnFinish . The way you have it set, for each change in the GUI, you will update your DataStorage object. Instead, by only adding it to the btnFinish , you can reduce the amount of times your Handler gets called and can simplify your process. Of course, you will then need to consolidate your itemStateChanged and actionPerformed methods. This will then give you the option of initializing your DataStorage object when you get into actionPerformed , and you can then initiate your persistence process. Look at SwingWorker and concepts around concurrency in Swing as you look into moving your data from memory to storage. EDIT: By 'consolidate your itemStateChanged and actionPerformed methods,' I mean move all of you data gathering for your checkboxes into the action performed method. This way, when you click on your finish button, you can gather all of the data that you need for your DataStorage object.
