[site]: crossvalidated
[post_id]: 262677
[parent_id]: 
[tags]: 
Fitting a neural network via maximum likelihood

Is it possible to fit a NN given pairs (X, Y) , such that NN(X) = Y using maximum-likelihood (ML) and not gradient descent (GD)? Example: I have a NN with weights W I feed it with 10 samples X and get 10 output Y I add noise e and get new output Y+e I evaluate Y+e and assign them some weights How do I perform a weighted fitting of pairs (X, Y+e) ? I was thinking about ML because I don't think that I can weigh the samples with GD. And I know that I could use ML if I would have, for instance, a Gaussian (or apply expectation-maximization to a mixture model). I tried to search on Google but I did not find much. Any reference (and possibly some implementation) would be much appreciated.
