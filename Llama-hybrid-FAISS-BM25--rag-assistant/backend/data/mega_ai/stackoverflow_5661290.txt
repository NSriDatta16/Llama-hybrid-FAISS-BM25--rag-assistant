[site]: stackoverflow
[post_id]: 5661290
[parent_id]: 5646854
[tags]: 
OK. I got it working ... Create LogicTests as described here (section setting up Logic Testing): http://developer.apple.com/library/ios/#documentation/Xcode/Conceptual/iphone_development/135-Unit_Testing_Applications/unit_testing_applications.html Manually add the CoreData.framework to the newly created Target for the Logic Tests: Drag it from the application target to the logic test target (folder "link binary with libraries). Right-click on your *.xcdatamodeld and select Get Info -> Targets. Select the Logic Tests target (for some strange reason the actual application target was not selected in my case ... but that works) In your unit test class (you created in step 1: LogicTests.m) add the following method: - (void) setUp { NSArray *bundles = [NSArray arrayWithObject:[NSBundle bundleForClass:[self class]]]; NSManagedObjectModel *mom = [NSManagedObjectModel mergedModelFromBundles:bundles]; STAssertNotNil(mom, @"ManangedObjectModel ist nil"); NSPersistentStoreCoordinator *psc = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel:mom]; STAssertTrue([psc addPersistentStoreWithType:NSInMemoryStoreType configuration:nil URL:nil options:nil error:NULL] ? YES : NO, @"Should be able to add in-memory store"); self.context = [[NSManagedObjectContext alloc] init]; self.context.persistentStoreCoordinator = psc; [mom release]; [psc release]; } Now you have a Logic Test with Core Data support set up. The logic testing is done in isolation (without simulator) by building the LogicTests target. For this a temporary in-memory database is created. In your test methods you can now do something like: - (void) testStuff { NSManagedObject *managedObj = [NSEntityDescription insertNewObjectForEntityForName:@"Account" inManagedObjectContext:self.context]; [managedObj setValue:[NSNumber numberWithInt:90000] forKey:@"id"]; NSError *error = nil; if (![self.context save:&error]) { STFail(@"Fehler beim Speichern: %@, %@", error, [error userInfo]); } } Hope this helps.... Have fun!
