[site]: stackoverflow
[post_id]: 3899092
[parent_id]: 3897229
[tags]: 
Google Protobufs are specifically not intended to be extended. Here's a paragraph from the documentation (in the middle of this: http://code.google.com/apis/protocolbuffers/docs/cpptutorial.html ): Protocol Buffers and O-O Design Protocol buffer classes are basically dumb data holders (like structs in C++); they don't make good first class citizens in an object model. If you want to add richer behaviour to a generated class, the best way to do this is to wrap the generated protocol buffer class in an application-specific class. ... You should never add behaviour to the generated classes by inheriting from them. This will break internal mechanisms and is not good object-oriented practice anyway. I can see how such advice would seem annoying if you only wanted that one method, but in general it's pretty good advice. If you really have no other functionality to warrant creating an application-specific "Person" class, there is nothing wrong with just defining a top-level function: string concatenateNameEmail(const proto::Person &person) { ... }
