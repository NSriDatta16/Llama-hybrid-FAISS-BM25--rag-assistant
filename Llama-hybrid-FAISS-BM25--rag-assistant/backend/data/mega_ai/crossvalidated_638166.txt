[site]: crossvalidated
[post_id]: 638166
[parent_id]: 
[tags]: 
Why can't SSL handle tabular data?

Performance Analysis of Self-Supervised Strategies for Standard Genetic Programming 1 INTRODUCTION Self-supervised learning (SSL) methods have been widely used to train deep learning models for computer vision and natural language processing domains. This training paradigm works by leveraging large amounts of unlabeled data on domain-specific pretext tasks, which allows the learning of underlying relationships and patterns within the data. These models can be fine-tuned for downstream tasks with reduced amounts of labeled data, leading to a performance improvement compared to training exclusively on the reduced labeled data. These strategies are a common practice in computer vision [3, 7] and natural language processing [11], with pretext tasks generally involving the alteration of the input data. Some common pretext tasks are rotation [6], context prediction [5] and permutation prediction [8]. While SSL works seamlessly for these domains, the same cannot be said about tabular data. Tabular data is by nature heterogeneous and does not have a global structure, making the development of pretext tasks not trivial. Recently, frameworks have been proposed which define domain-specific pretext tasks for tabular data, such as corrupted data reconstruction and contrastive Mixup, which yield models that can produce robust feature transformations [4, 14]. Most standard machine learning algorithms are not compliant with heavily processed data or even require data to be distributed in a specific manner. Genetic programming (GP) [10], by performing its own feature construction and selection, has much fewer underlying assumptions when compared with more traditional machine learning models. This characteristic prompts the following research question: Is standard GP capable of leveraging data processed using SSL methods to improve its performance? To the best of our knowledge, no prior study has been conducted on any kind of SSL for GP. In this work, we aim to fill that gap by analyzing the performance of a standard GP algorithm upon data transformation with SSL models. I haven't understood the emphasized text. Why is it harder for an SSL to handle tabular data? What oes it mean by - Tabular data is by nature heterogeneous and does not have a global structure ?
