[site]: crossvalidated
[post_id]: 24808
[parent_id]: 24521
[tags]: 
Returning to the discarded HMM approach. An HMM is just a state space model that assumes discrete hidden state. I think you have dismissed the state space approach too soon. The forecasting question you bring up is quite general for such models which I'll discuss in discrete time formulation, since that's what you've got. (If you happen to know about how Kalman filters work, use that intuition; they're used for very similar state space models when gaussian assumptions apply.) State and the role of past observations The basic assumption of any state space model is that the future is independent of the past given the current (hidden) state, and that the observations at a point depend only on the hidden state. Consequently when you have the state you don't need the preceding observed values or states. (And if that isn't enough, you need a formulation with more state...) The state is intended to represent all the relevant information. Forecasting Conceptually speaking, to forecast, you start with a distribution over the current hidden state, and you use the estimated transition function -- a transition matrix in the HMM case -- to propagate this distribution forward in time. Once you've moved forward to the point in time where you want to forecast you have a (wider) distribution over the future state. (Alternatively in the HMM case you can find the most likely state to be in then, but you will have neglected quite a bit of uncertainty.) You then generate a predictive distribution over observables by taking a weighted average of the conditional distribution of the observations where the weights are from the distribution over the hidden state. Basically it's just like filtering, only without tightening up the state estimate on the basis of observations. On cursory glance, the packages you mention don't seem to have a function for more than one step ahead forecasting (because that's needed to compute the likelihood) but now you know what you want to do, you may be able to persuade them to do so, or write the relevant function yourself. This is described in mathematical detail in a bunch of places, e.g ch. 5 of Zucchini and MacDonald (2008) for the HMM case. They also offer an R implementation. Petris and Patrone (2011) is a more general review of state space model packages in R, including those that work with non-discrete state models. These would be good places to start. Multivariate state space modelling is not particularly straightforward, but most of the difficulties are numerical and good implementations for the classic models are increasingly available.
