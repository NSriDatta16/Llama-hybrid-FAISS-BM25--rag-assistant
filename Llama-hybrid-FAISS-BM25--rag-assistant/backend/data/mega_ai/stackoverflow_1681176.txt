[site]: stackoverflow
[post_id]: 1681176
[parent_id]: 1681144
[tags]: 
With few exceptions, nothing is "constant". We prefer to call them "slow variables" -- their value changes so slowly that we don't mind recompiling to change them. However, we don't want to have many instances of 0x07 all through an application or a test script, where each instance has a different meaning. We want to put a label on each constant that makes it totally unambiguous what it means. if( x == 7 ) What does "7" mean in the above statement? Is it the same thing as d = y / 7; Is that the same meaning of "7"? Test Cases are a slightly different problem. We don't need extensive, careful management of each instance of a numeric literal. Instead, we need documentation. We can -- to an extent -- explain where "7" comes from by including a tiny bit of a hint in the code. assertEquals( 7, someFunction(3,4), "Expected 7, see paragraph 7 of use case 7" ); A "constant" should be stated -- and named -- exactly once. A "result" in a unit test isn't the same thing as a constant, and requires a little care in explaining where it came from.
