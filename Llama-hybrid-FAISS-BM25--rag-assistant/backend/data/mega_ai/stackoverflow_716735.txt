[site]: stackoverflow
[post_id]: 716735
[parent_id]: 715472
[tags]: 
I would download ReSharper (and the following plugins: Exceptional, Agent Smith, Agent Johnsson), the #1 tool to improve code quality and speed up development. Resharper is not free, but it IS worth the money ;) Then download Xunit: http://xunit.codeplex.com To create a test is simple: public class MyObjectTest { MyObject _objectToTest = new MyObject(); [Fact] private void TestStart() { _objectToTest.Start(); Assert.True(_objectToTest.IsStarted); } } ReSharper, integrated with xunit, will give you an icon next to each test method. The icon lets you test (and debug) the method directly in the IDE without you having to start the entire program. Can't be easier. Most developers would say that Test driven development means that you create the test first and the object after it. I usually begins with creating the class, adding the mandatory methods to it and then create the test. It's a bit faster and you'll probably start to refactor the class when you've started to build the test. When you create the class, spend most of the time document each method. The documentation should motivate why the method exists, what it expects from the arguments, and what it returns. If you can't describe it properly, you'll most likely have to refactor it.
