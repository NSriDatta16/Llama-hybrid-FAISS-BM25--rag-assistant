[site]: stackoverflow
[post_id]: 3091919
[parent_id]: 3091783
[tags]: 
You can specify the connection timeout within the SQL connection string, when you connect to the database, like so: "Data Source=localhost;Initial Catalog=database;Connect Timeout=15" On the server level, use MSSQLMS to view the server properties, and on the Connections page you can specify the default query timeout. I'm not quite sure that queries keep on running after the client connection has closed. Queries should not take that long either, MSSQL can handle large databases, I've worked with GB's of data on it before. Run a performance profile on the queries, prehaps some well-placed indexes could speed it up, or rewriting the query could too. Update: According to this list , SQL timeouts happen when waiting for attention acknowledgement from server: Suppose you execute a command, then the command times out. When this happens the SqlClient driver sends a special 8 byte packet to the server called an attention packet. This tells the server to stop executing the current command. When we send the attention packet, we have to wait for the attention acknowledgement from the server and this can in theory take a long time and time out. You can also send this packet by calling SqlCommand.Cancel on an asynchronous SqlCommand object. This one is a special case where we use a 5 second timeout. In most cases you will never hit this one, the server is usually very responsive to attention packets because these are handled very low in the network layer. So it seems that after the client connection times out, a signal is sent to the server to cancel the running query too.
