[site]: stackoverflow
[post_id]: 5358108
[parent_id]: 5326210
[tags]: 
-- This is a copy from my answer on the SpecFlow Googe Group -- I think there is a misunderstanding here. I think it does not make sense to use inheritance the way you propose it. SpecFlow works quite different compared to traditional xUnit Test frameworks. In SpecFlow step-definitions are global. Step definitions do not have to reside in a base class to be usable from a subclass. Step definitions are not comparabe to methods in test fixtures from xUnit frameworks. Generally all classes that are decorated with the [Binding] attribute are scanned by SpecFlow to discover step definitions. All the step definitions that are found are availabe at runtime when SpecFlow parses and executes features. For SpecFlow to find a matching step definition it is not relevant in which class the step definitiond is definied. However when SpecFlow has found a matching step definition, it needs to be able to instantiate the class on which it is defined. Therefore classes that contain step definitions must not be abstract. The instance is primarily used to pass state between related step definitions (however there are other possibilities to pass state). The same is true for hooks (Before .../ After ...): They are global, at runtime it does not matter on which class they are defined. The above is the general concept. Things get a bit more complicated, when we start considering scoped steps: Step definitions can be scoped to tags and scenarios, hooks can be scoped to tags. Examples: https://github.com/techtalk/SpecFlow/blob/master/Tests/FeatureTests/ScopedStep/ScopedStepsBindings.cs https://github.com/techtalk/SpecFlow-Examples/blob/master/ASP.NET-MVC/BookShop/BookShop.AcceptanceTests.Selenium/Support/SeleniumSupport.cs Read more here: http://groups.google.com/group/specflow/browse_frm/thread/080c531cb17c86e0/5350665da2544871?#5350665da2544871 Read more on the Cucumber wiki. About global steps: https://github.com/cucumber/cucumber/wiki/Feature-Coupled-Steps-(Antipattern ) Step organisation: https://github.com/cucumber/cucumber/wiki/Step-Organisation
