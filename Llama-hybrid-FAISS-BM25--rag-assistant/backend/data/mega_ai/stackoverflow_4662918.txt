[site]: stackoverflow
[post_id]: 4662918
[parent_id]: 4662872
[tags]: 
Looking at the database query below. I have joined the two queries "It's my first join so I'm not sure I've done it right." It is reading the information in both tables and displaying it. But the below code is displaying every entry in "worklog" that has a record in the "worklognotes" table. I need it to display one entry from "worklog" and many notes from "worklognotes" Yes, thats how it works when you join. Youre going to get the worklog entry and a worklognotes entry as a single row. This means youre going to have the same worklog entry multiple times unless it only has one worklognote. You need to sort this out on the php side if you want display in some kind of hierarchy. So if you want all worklogs (or more than jsut one really) and their notes you would use the query you have and then iterate over the results to organize then appropriately for example assume $result is your mysql_result resource and $worklog_columns and $worklognote_columns contain an array of the columns names for each table in the format 'column_name' => null then you might do something like the following: $worklog = array(); while(false !== ($record = mysql_fetch_assoc($result))){ // get only the data for a worklognote $note = array(array_intersect_key($result, $worklognote_columns)); // get the primary key of the worklog $id = $record['worklog_id']; if(!isset($worklog[$id])){ // if we havent already processed this worklog form a previous row // get the work log data in a separate array $log = array_intersect_key($result, $worklog_columns); // add a notes key which will hold an array of worklog_notes // and assifn the note joined to this row as the first note $log['notes'] = array($note); } else { // otherwise jsut append the not joined to this row // to the existing worklog we processed $worklog[$id]['notes'][] = $note; } } However the thing you have to be aware of is that if the two tables youre joining have columns with the same name, then if you use MYSQL_ASSOC you will only get the value from the column on the joined table, not from both. IF you need access to the value on both tables then you either need to use MYSQL_NUM or MYSQL_BOTH or alias every column in your query.
