[site]: stackoverflow
[post_id]: 3622941
[parent_id]: 3621503
[tags]: 
I have experience as a beginner in programming, studying independently (while working full time as a public school teacher). Last year I bought the book "Principles and Practice Using C++". With my PowerBook, it wasn't too difficult at the beginning, but then after a couple of chapters it started getting really hard, and I just dropped it. I have come to realize that book isn't easy to follow as a beginner (working independently). Then in the fall I bought a netbook and began using Linux for the first time. Early this spring I started going through "The C Programming Language" within a Linux environment. A lot of things (emacs, gcc, gdb ... even how to execute a file, how to change permissions to make it executable, how to navigate simple bash commands), I had to work through trial and error, it was very slow. I think that if you as an instructor can make those things easy to work through and fill the gaps that Kernighan & Ritchie assume the students have, then it should work. Once yoiu get past that other stuff, as a beginning student it's really nice to have something explained in a very clear and understandable manner. For me, it combines a well-written text with exercises. Definitely though, some of the students will require more support with the problems. Sometimes I spent a week just working on one problem and it was very frustrating.
