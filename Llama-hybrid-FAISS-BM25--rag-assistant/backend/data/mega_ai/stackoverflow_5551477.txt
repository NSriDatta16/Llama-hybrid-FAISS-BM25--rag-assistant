[site]: stackoverflow
[post_id]: 5551477
[parent_id]: 
[tags]: 
Adding a column containing screen-scraped values to a CSV file

I am working on building a map of building permits issued in El Paso, TX. This is my first foray into the wonderful world of python, and it's been fun, but I cannot figure out the csv module to save my life. I have a .csv file containing the fields 'Date', 'Building Number', 'Building Type', 'Description', 'Project Name', 'Expiration Date', 'Status', to which I need to add a column called "address" with the address associated with each building number. I have got the code to get the address using the building permit number down, but I am at a loss as to how to get each building number in sequence, use it to get the address for the permit, then write it to the new 'address' column. why they couldn't have just put the address in the .csv file in the first place is beyond me. here's what I've got so far to get the address: from BeautifulSoup import BeautifulSoup import urllib CaseNo = "RSP11-00459" # this is an example of the building permit number format DBaseEntry = urllib.urlopen("http://permits.elpasotexas.gov/tm_bin/tmw_cmd.pl?tmw_cmd=StatusViewCase&shl_caseno=%s " % CaseNo) Soup = BeautifulSoup(DBaseEntry.read()) Dang = Soup.findAll("td", { "class" : "ReportCell"})[5] Address = str(Dang) TableEntry = Address[23:-5].strip( ) print TableEntry it's inelegant, but I need a way to get the building number values as CaseNo, then write TableEntry as the value for the (newly created) Address column. these tables will all have 100 rows each, if it matters. any thoughts/suggestions?
