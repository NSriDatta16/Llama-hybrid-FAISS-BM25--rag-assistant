[site]: crossvalidated
[post_id]: 177428
[parent_id]: 
[tags]: 
Maximum weight value for a neural network

I am a beginner in the world of neural networks and I have a basic question that I'd like to get the answer to. Is there a way to estimate the maximum value of a weight or a way to keep it in an established range? ORIGIN OF THE PROBLEM For now I've only been messing around with neural networks with simple problems (logic gates: xor, and, or, with 2 and more inputs). And what I want to do is to transfer a neural network from a PC to an FPGA. So far, I've been able to convert the inputs for most problems to value between 0 and 1, which is simple, so I'd like to know if there is a way to estimate the maximum value a weight can have in a specific neural network. THE PROBLEM The problem with the size comes from the FPGA's multipliers, which are all 18bits (in my case) for a single multiplier and are not very limited in quantity, but are also not abundant. I know I can increase the resolution by using more than 1 multiplier per multiplication, but it would cut my resources in half and if I dare use floating point, I'd be cutting my resources by 1/5, which is bad for problems with many neurons. For example: My FPGA has 220 multipliers, which would allow for a maximum of 44 neurons per neural network ( IF I don't want to use multipliers for the sigmoid function, which is possible in some cases) and I want to execute a neural network that has 64 neurons (real network that I actually would like to execute), so floating point is out of the question in this case. Imagine now that the maximum weight value is about 60,000, then 16 bits are necessary to represent it, and 2 bits for the decimal points (fixed point arithmetic), which may be bad, depending on the system's needs (I think). Imagine a system where a value like 18.12 wold be translated to 18.00 or 18.25. There is a chance that a problem may have a solution in the PC but not in the FPGA. So that's my problem. I hope I've been able to give a clear description of the problem so that somebody can help me.
