[site]: stackoverflow
[post_id]: 4502048
[parent_id]: 4501965
[tags]: 
Using a class allows you to encapsulate and re-use code. Here's an example (PHP 5): class car { public $color; public function __construct($color) { $this->color = $color; } public function show_off() { return 'This car is ' . $this->color; } } // And now I can re-use the code elegantly: $car_one = new car('blue'); $car_two = new car('red'); $car_thr = new car('yellow'); echo $car_one->show_off(); // This car is blue echo $car_two->show_off(); // This car is red echo $car_thr->show_off(); // This car is yellow I must say that, like you—when I was still very green—I felt like OOP was a solution in search of a problem. But, after diving in and using it, eventually it clicked. Objects, in their simplest form, are like containers of logic and data that you can pass around. This can be very advantageous. And yet, I remember my mindset when I first started learning OOP. The above example would not click. The only way to appreciate it is to use it. Once you do, you'll be very glad you did.
