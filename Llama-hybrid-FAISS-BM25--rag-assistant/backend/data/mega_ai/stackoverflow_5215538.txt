[site]: stackoverflow
[post_id]: 5215538
[parent_id]: 5215268
[tags]: 
The problem in the code you posted is that iterating over an open file includes the newline characters. Other answers deal with that issue. This answer is to point out that the strategy is very inefficient if the search is to be done often. If the search will be performed a number of times, then it is best to to store the word list as a Trie , which enables O(m) lookups, with m being the length of the searched string, while constructing the Trie has complexity similar to searching the word list for one word. The Trie can be stored to disk (pickled?) for fast retrieval. Looking up a word against the dictionary using the posted code takes time proportional to the size of the dictionary, which is O(n) . Building the Trie is O(n+C) , with a big C , which makes it worth it only if there are going to be frequent searches. I took a look, and the Web says that there are several implementations of Trie in Python ready to try .
