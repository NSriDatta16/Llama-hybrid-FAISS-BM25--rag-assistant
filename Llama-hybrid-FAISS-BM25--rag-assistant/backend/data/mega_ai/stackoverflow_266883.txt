[site]: stackoverflow
[post_id]: 266883
[parent_id]: 266776
[tags]: 
I tend to create an interface in most of my projects called IFileController that has all file operations on it. This can have the basic ones, plus any methods that the .NET framework doesn't provide that deal with files. Using a dependency injection framework, you can get an instance of IFileController without knowing exactly what type it is, and use it without needing to mess around with mocking framework types. This makes everything much more testable, and as a bonus you can change the file storage mechanism without changing your code at all. On the down side, any new developers need to be told about this interface, otherwise they will just use the .NET methods directly.
