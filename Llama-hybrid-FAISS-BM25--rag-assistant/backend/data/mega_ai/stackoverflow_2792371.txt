[site]: stackoverflow
[post_id]: 2792371
[parent_id]: 2761443
[tags]: 
I'm now using a modification of my previous answer to run on Windows: just move everything into @proguard_windows.txt so you don't have to worry about running as a script. My new @proguard_windows.txt looks like: -injars bin;lib/scala-library.jar(!META-INF/MANIFEST.MF,!library.properties) -outjar gen/scandroid.jar -libraryjars lib/android.jar -dontwarn -dontoptimize -dontobfuscate -dontskipnonpubliclibraryclasses -dontskipnonpubliclibraryclassmembers -keepattributes Exceptions,InnerClasses,Signature,Deprecated, SourceFile,LineNumberTable,*Annotation*,EnclosingMethod -keep public class com.banshee.** { public protected *; } -keep public class org.xml.sax.EntityResolver { public protected *; } And note that in windows, you need to use a semicolon for -injars. Nasty. The builder looks like this: (running cygwin here, so the cat option path takes a slash) James@Greine:/cygdrive/c/Users/james/workspace/Scala2$ cat .externalToolBuilders/proguard.launch You'll want to put this in .externalToolBuilders/proguard.launch. The interesting thing here is that it's just a java command, not any kind of shell script, so it's fairly easy to port between Windows/Mac (and I'm assuming Linux, but haven't done that yet), since you're just changing the location of the actual java binary. (Submitting this as a new answer because it's a bit different than the one that got marked as the correct(ish) answer)
