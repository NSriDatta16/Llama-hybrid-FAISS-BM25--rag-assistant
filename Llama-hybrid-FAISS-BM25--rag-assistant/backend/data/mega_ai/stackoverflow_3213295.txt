[site]: stackoverflow
[post_id]: 3213295
[parent_id]: 3212851
[tags]: 
I am not sure why you need to retirieve names, a very crude way to get all names and dots in function is import inspect import parser import symbol import token import pprint def func(foo): return foo.bar - foo.baz s = inspect.getsource(func) st = parser.suite(s) def search(st): if not isinstance(st, list): return if st[0] in [token.NAME, token.DOT]: print st[1], else: for s in st[1:]: search(s) search(parser.ast2list(st)) output: def func foo return foo . bar foo . baz May be you can improve upon that by reading syntax tree more elegantly, I am using parser instead of ast module because i am on python 2.5
