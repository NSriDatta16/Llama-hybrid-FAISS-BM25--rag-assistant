[site]: stackoverflow
[post_id]: 3945183
[parent_id]: 3830043
[tags]: 
My solution was to use data URIs. This isn't very elegant since it bloats the size of the HTML and doesn't work in IE prior to IE8, but it does allow you to not bother worrying about creating files out of the image attachments Jasper sends you either. If you're going to implement this, you want to add this argument to your request: Then you need to parse the report HTML that JasperServer sends back: foreach ($attachments as $name => $attachment) { // Cut off the cid: portion of the name. $name = substr($name, 4); // Replace any image URIs with a data: uri. if (strtolower(substr($name, 0, 4)) !== 'uuid' && strtolower($name) !== 'report') { if (strtoupper(substr($attachment, 0, 3)) === 'GIF') { // It's a GIF. $report = str_replace("data:$name", 'data:image/gif;base64,' . base64_encode($attachment), $report); } elseif (/* more file type tests */) { // and so on... } } } For large images, it's best to do as Gordon suggested and pass in a parameter specifying the URL of a file that is permanently stored on the server. This method is more of a failsafe for gracefully handling any unexpected images JasperServer tries throwing at you.
