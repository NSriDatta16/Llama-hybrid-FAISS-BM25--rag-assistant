[site]: stackoverflow
[post_id]: 4539839
[parent_id]: 4539449
[tags]: 
You are correct, subrepos in Mercurial (or submodules in Git) are based on a nested organization . But in your specific case you need: two separate repos, not nested A way to reconcile both organizations (yours and the nested "subrepo") would be to have three repos a parent repo (private one, as in can be pushed to a private repo) the project (private one, as in can be pushed to a private repo) the library (public one, as in can be pushed to a public repo) That would give the following: /dev .hg (private repo) .hgsubs (declare the two nested repos 'project' and 'ci/library') project .hg (private repo for your project) config .hgignore (for ignoring anyhting from libraries) libraries (private directory, not version) (symlink to /dev/ci/library) ci library .hg (public repo That way, you keep: your two repo separate as you want a link between the two in order to be able to get back those two repo at the exact reference you left them (i.e. you last pushed each of those repos).
