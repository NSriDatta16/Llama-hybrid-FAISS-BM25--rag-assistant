[site]: stackoverflow
[post_id]: 2059660
[parent_id]: 2059638
[tags]: 
I have written and maintained huge monolithic libraries for many years, and I'm way happier since I moved away from it. Take my advice: Break your application down into as small classes as possibly makes sense. It's good for organizing, as well as memory usage (a huge PHP class definition can eat up a lot of RAM, and RAM is a limited resource in a PHP script). Use PHP 5's autoloading mechanism to load only those classes thart you need in the current context. I think the way Zend Framework is organized and built is quite good. You may want to take a look at how they designed their classes, and how they organized the immense amount of functionality in the framework. As for how to organize tools and helper objects and libraries, I asked that question a few weeks back and got very good feedback. I'm still not done reading it, actually.
