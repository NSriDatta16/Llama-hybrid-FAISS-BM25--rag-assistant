[site]: crossvalidated
[post_id]: 567464
[parent_id]: 
[tags]: 
How can I make sense of alpha values obtained from scikit-learn OC-SVM?

I am building a ML model that uses the OC-SVM for anomaly detection. For our cost function we require the alphas obtained from the OC-SVM. We use the OC-SVM of scikit-learn, which I assume is based on libsvm (as it is stated that this is the case for sklearn.svm.SVC). Now to obtain the alphas, I followed the suggestion given here: https://stackoverflow.com/questions/33860938/how-to-get-all-alpha-values-of-scikit-learn-svm-classifier assuming the same method works for the OC-SVM case. However, I notice there seems to be a discrepancy between alpha values obtained here and what is described in the dual problem of the OC-SVM. In the dual problem (also described in the libsvm manual https://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf page 5) it is required for alpha values to sum to 1. Using the method above, we obtain many alpha values of exactly 1. Therefore, summing them would give a much larger value than 1. I was wondering, how is the dual problem implemented in the scikit-learn OC-SVM through libsvm? Is this requirement to the alpha values actually present? Is there a better way to obtain them, or can I simply divide the svm.dual_coef_ by the sum of its values?
