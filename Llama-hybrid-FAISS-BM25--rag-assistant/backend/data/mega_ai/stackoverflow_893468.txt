[site]: stackoverflow
[post_id]: 893468
[parent_id]: 893059
[tags]: 
What would the recommended strategy for testing a product be at this point, besides usability testing? I'd recommend code inspection, by someone/people who know (or who can develop) the product's functional specification. An extreme, purist way would be to say that, because it "has been an overall free-for-all with no testing whatsoever", therefore one can't trust any of it: not the existing testing, nor the code, nor the developers, nor the development process, nor management, nothing about the project. Furthermore, testing doesn't add quality to software (quality has to be built-in, part of the development process). The only way to have a quality product is to build a quality product; this product had no quality in its build, and therefore one needs to rebuild it: Treat the existing source code as a throw-away prototype or documentation Build a new product piece-by-piece, optionally incorporating suitable fragments (if any) of the old source code. But doing code inspection (and correcting defects found via code inspection) might be quicker. That would be in addition to functional testing. Whether or not you'll want to not only test it but also spend the extra time effort to develop automated tests depends on whether you'll want to maintain the software (i.e., in the future, to change it in any way and then retest it). You'll also need: Either: Knowledge of the functional specification (and non-functional specification) Developers and/or QA people with a clue Or: A small, simple product Patient, forgiving end-users Continuing technical support after the product is delivered
