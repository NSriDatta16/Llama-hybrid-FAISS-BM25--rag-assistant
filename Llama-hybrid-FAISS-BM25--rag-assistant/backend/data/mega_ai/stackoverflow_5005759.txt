[site]: stackoverflow
[post_id]: 5005759
[parent_id]: 5005361
[tags]: 
firstly you should understand exactly what the workflow is, and Joel L explains that very simply. You should encapsulate the methods in a class to keep everything together, some thing like sp: class FormTokenizer { private $context = ""; public function __construct($auth_token = "auth_token") { $this->context = $context; } public function generateToken() { $_SESSION[form_tokens][$this->context] = hash('sha256', rand() . time() . $_SERVER['HTTP_USER_AGENT']); return $this; } public function getToken() { return isset($_SESSION[form_tokens][$this->context]) ? $_SESSION[form_tokens][$this->context] : false; } function generateField() { return sprintf(' ',$this->context,$this->getToken()); } public function validateToken() { if(isset($_POST["a_" . $this->context])) { return $this->getToken() == $_POST["a_" . $this->context]; } return false; } } and a simple usage would be: $Token = new FormTokenizer("registration"); if(isset($_POST)) { if($Token->validateToken() === false) { //Token Onvalid } } //Generate a fresh token. $hidden_input = $Token->generateToken()->generateField();
