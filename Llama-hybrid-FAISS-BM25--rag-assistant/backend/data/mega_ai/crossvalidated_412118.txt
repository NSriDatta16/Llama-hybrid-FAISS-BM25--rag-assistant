[site]: crossvalidated
[post_id]: 412118
[parent_id]: 
[tags]: 
how to implement a one-to-many LSTM network with output of different dimension at each time step

I'm trying to replicate the controller described in "NEURAL ARCHITECTURE SEARCH WITH REINFORCEMENT LEARNING"( link ) to find the best set of hyperparameters for a CNN. The controller is a LSTM network, for which the output at each step are the probabilities to sample each value for a given hyperparameter. for instance my search space could be: space = {number of filters = [16,32,64,128], filter size = [3,5]} Given this search space the RNN should output at step 1 a vector like [0.2,0.5,0.2,0.1] and a vector like [0.3,0.7] at step 2. How to make the LSTM have different outputs dimensions at each step using tensorflow?
