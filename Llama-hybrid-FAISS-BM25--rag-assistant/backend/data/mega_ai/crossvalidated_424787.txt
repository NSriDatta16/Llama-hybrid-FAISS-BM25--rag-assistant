[site]: crossvalidated
[post_id]: 424787
[parent_id]: 
[tags]: 
Interpolate/Impute Time Series Data from another Time Series

I have a dataset of multiple lakes with water level elevations through time. The observations are not regularly spaced and have many large gaps. Further, some of the older observations may be of lower or unknown quality. I created a model that does a reasonably good job of predicting water levels across time, but still misses the actual observations by varying amounts. I would like to create a third inputed/interpolated set of data in which the solution is: informed by the modeled values where observations are missing crosses the highly weighted observations and is informed by the lower weighted observations So far, I have used a time series linear model with the precipitation model as a regressor and a seasonal component to perform this. It works reasonably well, but I cannot see a way to introduce weighting to the process. Further, it relies to heavily on the global coefficient and intercepts making it a bit too volatile when the modeled value significantly misses the observed. I am thinking that I need to use some sort of weighted loess that relies on local coefficients and can accommodate weighting. Here's what I have so far. library(dplyr) library(tsibble) library(fable) library(ggplot2) test_data % group_by(site_name) %>% model(lm = TSLM(observed~modeled)) %>% fabletools::interpolate(test_tsibble) tslm_interpolate % dplyr::select(obs_year, site_name, observed = observed.y, imputed = observed.x, modeled, weights) tslm_interpolate %>% ggplot(aes(x=obs_year))+ geom_line(aes(y = imputed), color = "blue")+ geom_line(aes(y = modeled), color = "red")+ geom_point(aes(y = observed), color = "green")+ facet_wrap(~site_name, scales = "free_y") I am open to just about any solution that gives me a full time series of imputed/interpolated values that crosses the highly trusted actual observations.
