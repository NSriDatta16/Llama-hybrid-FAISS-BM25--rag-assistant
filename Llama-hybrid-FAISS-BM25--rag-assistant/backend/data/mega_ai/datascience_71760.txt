[site]: datascience
[post_id]: 71760
[parent_id]: 55215
[tags]: 
If your problem is unbalanced classification, I don't think the problem can be solved through a custom loss function. Building custom, balanced mini-batches is usually the thing to do, if it doesn't work it could be that your dataset is so much inbalanced that even this trick doesn't work. Can I ask you how many observations do you have for the "rare" class? If they are too little, image augmentation could be the way to go: applying random distortions to original images before feeding them into the Network at each training iteration is a way to artificially increase the size of your dataset (while fighting overfitting at the same time). An alternative could be to crate an Autoencoder, and treat the problem as an anomaly detection task. Anomaly detection has to deal with anomalies, that, by definition, are very rare events. You could exploit the fact that your model learns only one class properly, and treat the occurrence of the other class as an anomaly. Its appearance should be detected from an unusually compression Loss by the Autoencoder.
