[site]: stackoverflow
[post_id]: 96641
[parent_id]: 66649
[tags]: 
Google Maps uses images sliced into blocks which are dynamically loaded as the user pans in different directions. The Google Maps Image Cutter Paul Dixon mentions is the tool you want for this. If you just want to pan one large image, rather than have the additional complexity of slicing the image up into blocks, then instead of using the CSS overflow property, you should use the clip property. This is supported on all browsers worth thinking about, down to IE4 if I remember correctly. One point to note: the CSS2.1 spec shows examples with the rect values separated by commas. However this isn't supported by IE6 (perhaps not IE7, either). However all other browsers understand the version without commas. So instead of clip: rect(5px, 40px, 45px, 5px); you should use clip: rect(5px 40px 45px 5px); for compatibility. You need a container set to position:relative around the element, which you then set to position: absolute. So the basic technique is to update the top and left values as the user drags, use these together with the defined width and height of the view onto the image to create the appropriate rect() string, and update the top, left, and clip properties of the element's style property. Don't do what I did and leave out the "px" after the values in the rect() string. It took me ages to realise why it wasn't working :-)
