[site]: stackoverflow
[post_id]: 5481586
[parent_id]: 5481237
[tags]: 
I wrote a category on NSManagedObject a while ago that creates an NSDictionary representation of the managed object. You can use the NSDictionary outside of the managed object context. Disclaimer: this code hasn't been thoroughly tested, and also note that it only handles the attributes of the managed object and does not handle relationships . NSManagedObject+CLDAdditions.h ------------------------------ @interface NSManagedObject (CLDAdditions) - (NSDictionary*)cld_dictionaryRepresentation; @end NSManagedObject+CLDAdditions.m ------------------------------ @implementation NSManagedObject (CLDAdditions) - (NSDictionary*)cld_dictionaryRepresentation { // Create empty dictionary NSMutableDictionary *objectDictionary = [NSMutableDictionary dictionary]; // Set the entity [objectDictionary setObject:[[self entity] name] forKey:@"entity"]; NSDictionary *attributeKeys = [[self entity] attributesByName]; // Go through each of the attributes and add them to the dictionary for (NSString *attributeKey in attributeKeys) { id attributeValue = [self valueForKey:attributeKey]; if (attributeValue) { // Supported objects if ([attributeValue isKindOfClass:[NSNumber class]] || [attributeValue isKindOfClass:[NSString class]] || [attributeValue isKindOfClass:[NSNull class]] || [attributeValue isKindOfClass:[NSDate class]] || [attributeValue isKindOfClass:[NSData class]] || [attributeValue isKindOfClass:[NSURL class]]) { [objectDictionary setObject:attributeValue forKey:attributeKey]; // Unsupported objects } else if ([attributeValue isKindOfClass:[NSDictionary class]] || [attributeValue isKindOfClass:[NSArray class]]) { [NSException raise:NSGenericException format:@"Objects of type \"%@\" are not supported as Core Data attributes.", [attributeValue class]]; // Transformable objects (conforming to NSCoding) // TODO: Add support for custom value transformers } else if (([[attributeKeys objectForKey:attributeKey] attributeType] == NSTransformableAttributeType) && [attributeValue conformsToProtocol:@protocol(NSCoding)]) { NSData *attributeData = [NSKeyedArchiver archivedDataWithRootObject:attributeValue]; [objectDictionary setObject:attributeData forKey:attributeKey]; // Otherwise raise an exception } else { [NSException raise:NSGenericException format:@"Unsupported object type \"%@\". Objects must conform to the NSCoding protocol.", [attributeValue class]]; } } } return objectDictionary; } @end
