[site]: stackoverflow
[post_id]: 5508947
[parent_id]: 
[tags]: 
What is the best way to store historical stock data in 1-min intervals?

I need to build a system to store the following data: 10,000 stocks For each stock, I should keep data for 1000 fields ("open", "high", .....) Each field gets updated 390 times in a day (meaning, there are 390 intervals) Overall, I have a total of 10 years of data for each stock/field/interval Here are the requirements in terms of insertion/querying: Fast inserts of data as it comes in Retrievals would normally be as follows: give me all stocks for field 'X' on interval 'Y' . such a query must be retrieved as fast as possible In terms of budget, since I do not have the means to buy a huge server and something like SQL-SERVER to store the data, a friend recommended that I look into MySQL. I tried it, but queries are extremely slow if I don't add any indices to the table. On the other hand, if I do add indices, the insertions are tremendously slow, so this does not help either. My machine has only 2GB of memory in it, so either way, the indices will not fit in memory. What is the best way to store such data in a scalable way (I might have even more fields as time goes by...)? is it true that flat binary files, on a by field/by interval basis, are the best solution given my requirements and budget? (If it makes any difference at all, I use Linux)
