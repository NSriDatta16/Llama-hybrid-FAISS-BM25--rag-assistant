[site]: datascience
[post_id]: 16878
[parent_id]: 16873
[tags]: 
I pondered this question a little more, there might not be an optimal loss function.. But here is an idea which could utilize SVMs hyperplane seperation ability. I take the point cloud, if I need an approximating line from the bottom, copy points below with user defined gap, and I flip the points, as in mirror image along the x-axis. I give both point groups opposing labels, then feed the whole thing to SVM. Ideally I should get something like this: The top line is the line I am looking for. Code import pandas as pd points1 = np.array(pd.read_csv('quadri.csv')) plt.plot(points1[:,0], points1[:,1], 'o') points2 = np.copy(points1) points2[:,1] -= 7. xmin = np.min(points2[:,0]); xmax = np.max(points2[:,0]) points2[:,0] = (xmax-points2[:,0])+xmin points = np.vstack((points1,points2)) plt.plot(points[:,0], points[:,1], 'o') plt.xlim(4,14); plt.ylim(0,15)
