[site]: stackoverflow
[post_id]: 5137948
[parent_id]: 5085704
[tags]: 
Editor: you can use whatever you want. I used emacs for my first year of erlang, but I'm currently using gedit. Version Control: I like git. It seems that most of the erlang community agrees (most projects are hosted on github). Workflow: I'd recommend getting familiar with rebar . Here is an example of a rebar-flavored Makefile: REBAR := ./rebar .PHONY: all deps doc test clean release all: deps $(REBAR) compile deps: $(REBAR) get-deps doc: $(REBAR) doc skip_deps=true test: $(REBAR) eunit skip_deps=true clean: $(REBAR) clean release: all test dialyzer --src src/*.erl deps/*/src/*.erl Here are some basic pointers: Put your unit tests in the same modules as the code they are testing. See the rebar wiki for details. Add {cover_enabled, true} to your rebar.config file. Every time you run make test you get a coverage report in HTML! Add your project's dependencies to your rebar.config and you can fetch and build them when you run make deps . Make sure to comment your code with edoc. If you do, rebar can build all of your docs when your run make doc .
