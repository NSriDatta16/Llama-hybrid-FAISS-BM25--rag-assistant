[site]: stackoverflow
[post_id]: 2613782
[parent_id]: 2611401
[tags]: 
I'm not quite sure what you want to do here. Parameters are indeed passed by value. In the case of objects (and by object here I mean everything that has reference semantics, i.e. everything but Booleans, Number, ints, Strings, etc), a reference to them is passed by value, so in your function you have a reference to the original object, not a reference to a copy of the object. So, if you want to dereference the object and change some value or call some method on it, you'll be ok. The only thing that wont work is changing the reference itself; i.e. you can't null it out or assign a new object to it: function dereferenceParam(param:Object):void { param.someInt = 4; param.someMethod(); } function reassignParam(param:Object):void { param = null; // or param = new Object(); } dereferenceParam() will work as most people expect, reassignParam won't. Now, the only possible "problem" I think you could have as per your last paragraph would be that you want to remove or null out the search object from some array you have. I'm afraid in that case, the only way would be to loop through the array.
