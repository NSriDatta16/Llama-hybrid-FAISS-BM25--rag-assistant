[site]: stackoverflow
[post_id]: 1616043
[parent_id]: 1615676
[tags]: 
While not strictly related to the code above, which is a mere human-readable representation of instructions that can be translated to any machine code so long as the translation maintains the defined semantics of the specific language and environment ... It is possible that a smart compiler could translate: int8 c = 1, c = 2; into a single int16 assignment (perhaps storing both values in a single register) if it was written to do so. On the other hand, int16 d = 4; may take multiple cycles (read: be non-atomic) on 8-bit hardware. Go figure. Yes, certain CPUs can change two variables (multiple storage slots) in an atomic ("simultaneous") operation. The most common of these provide the basis for hardware-safe synchronization. CMPXCNG - Compare and Exchange CMPSWP - Compare and Swap In the sake of optimization of the years (even exlcuding systems designed for vectorized processing and the like), I would be surprised to not find more specialized instructions. Also, while even further from simple assignments, context switches and register file swaps may also be done atomically.
