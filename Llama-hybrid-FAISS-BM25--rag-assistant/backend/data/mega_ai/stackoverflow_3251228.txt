[site]: stackoverflow
[post_id]: 3251228
[parent_id]: 2260922
[tags]: 
My question is VS2010 == VS2008 + ReSharper ? Oh hell no. VS2010 has more features than VS2008, and some of those feature ideas were stolen from ReSharper, but vanilla VS2010 is still a long way behind VS2010 + ReSharper 5 or even VS2008 + ReSharper 5. From a quick glance at my 31 Days of ReSharper blog posts (written back in the R# 2.5 days), here are just a few ReSharper features that are still not present in VS2010: (Please correct me if VS2010 does have any of these -- I haven't actually used it that much without ReSharper!) Unused code highlighted in gray and with quick-fixes to delete the unused code for you (this is just one of many hints and warnings R# does that VS does not) Visual indication of where you have hints, warnings, and errors in a source file (colored stripe next to the vertical scroll bar) Integrated unit-test runner that's not locked down to only MS's test framework Shared settings for code formatting, code templates, etc. -- check these settings into version control, and they'll be picked up automatically by other computers (no manual export/import) Go To Type -- a pop-up window where you can enter a type name (or part of the name) and jump straight to the right source file Navigate to derived types / overriding methods Code Structure View -- view a list of members in your type, and drag/drop to reorder them in your source code R# will suggest variable names for you You can invoke an Intellisense dropdown that shows types from all namespaces (and then it adds the using for you) It's eerily good at guessing what you meant when you tell it to fix an error for you Remove unused braces and Invert If Generate Code (I particularly like Generate Equals and GetHashCode , even though I use them very rarely) Viral Rename (if you rename a type, it'll also suggest that you rename any variables that were named after the type) And best of all, Safe Delete . Safe Delete rocks. And that's just the features that R# had in 2.5 when I wrote the 31 Days of ReSharper. They've added plenty of new features since (I just don't have a comprehensive list handy). A couple of my favorites are the background solution-wide analysis, which will tell you in nearly real-time if you have compiler errors anywhere in your solution, and Inspect > Value Origin, which is just wicked cool.
