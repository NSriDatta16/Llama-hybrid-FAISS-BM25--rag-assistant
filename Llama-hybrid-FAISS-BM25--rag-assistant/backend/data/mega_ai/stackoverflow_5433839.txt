[site]: stackoverflow
[post_id]: 5433839
[parent_id]: 
[tags]: 
Python unit-testing in multiple threads

I would like to unit-test the functionality of a few classes that mainly do file in- and output. Furthermore I would like to do that on multiple cores (--jobs=4). The problem is, that the files that are created by the classes often have the same name and they get mixed up in multiple threads. What I do currently is that I run each unit-test in a separate directory like so: def test(self): if os.path.exists("UniqueDir"): os.system("rm -rf UniqueDir") os.mkdir("UniqueDir") os.chdir("UniqueDir") #Do the actual testing os.chdir("..") os.rmdir("UniqueDir") The downsides are very obvious: Each test must receive a unique directory name Each test has this overhead of source which really is not pleasant to look at at all What approach could I use to 1. separate my tests from one another but 2. do it in a more elegant way? Any help, suggestion etc. is appreciated! Cherio Woltan
