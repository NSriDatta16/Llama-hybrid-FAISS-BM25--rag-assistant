[site]: datascience
[post_id]: 94069
[parent_id]: 94067
[tags]: 
Clearly your exercice is not very clear, at least it is not to me. I guess you should consider $I$ as the variance or std deviation of the variable, just make sure that is a parameter of your code so you can change it later in case it is not what you assumed it was. Check up in your course if it corresponds to something, but it doesn't seem anything familiar to me. Not sure what your second question means, but here are the vectors that need to be created according to me : Vector of points (1st question), each points lives in 2-D space (feature size). Vector of classes (2nd question), this vector looks something like [1, 0, 2, 2, 1, 1, ...]. For this vector, it would mean that first value of your vector of points belongs to class 1, second value to class 0 , third to class 2, ... As the exercise is asking about euclidian distance classifier, you just need to create an algorithm that takes a point, computes the euclidian distance with each class center, and classify it in the closest class. (Not sure that kind of classifier can be considered Machine Learning but w/e). You probably noticed it, but the mean values given are 3-D vectors, which is quite weird as I said that our points live in 2-D space. I guess the last value of each mean vector is the class of the point generated (just my guess, not blaming your teacher, but as I said your exercise isn't very clear). So according to that interpretation, the classes would be distributed according to distribution : [0, 1], I variance or std deviation for class 2. [0, 0], I variance or std deviation for class 1. [1, 0], I variance or std deviation for class 0. Hope it helps, if you have any remaining questions, feel free to ask.
