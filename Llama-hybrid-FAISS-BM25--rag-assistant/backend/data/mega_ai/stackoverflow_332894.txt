[site]: stackoverflow
[post_id]: 332894
[parent_id]: 332798
[tags]: 
TL;DR MySQL does not have an equivalent concept of varchar(max) , this is a MS SQL Server feature. What is VARCHAR(max)? varchar(max) is a feature of Microsoft SQL Server. The amount of data that a column could store in Microsoft SQL server versions prior to version 2005 was limited to 8KB. In order to store more than 8KB you would have to use TEXT , NTEXT , or BLOB columns types, these column types stored their data as a collection of 8K pages separate from the table data pages; they supported storing up to 2GB per row. The big caveat to these column types was that they usually required special functions and statements to access and modify the data (e.g. READTEXT , WRITETEXT , and UPDATETEXT ) In SQL Server 2005, varchar(max) was introduced to unify the data and queries used to retrieve and modify data in large columns. The data for varchar(max) columns is stored inline with the table data pages. As the data in the MAX column fills an 8KB data page an overflow page is allocated and the previous page points to it forming a linked list. Unlike TEXT , NTEXT , and BLOB the varchar(max) column type supports all the same query semantics as other column types. So varchar(MAX) really means varchar(AS_MUCH_AS_I_WANT_TO_STUFF_IN_HERE_JUST_KEEP_GROWING) and not varchar(MAX_SIZE_OF_A_COLUMN) . MySQL does not have an equivalent idiom. In order to get the same amount of storage as a varchar(max) in MySQL you would still need to resort to a BLOB column type. This article discusses a very effective method of storing large amounts of data in MySQL efficiently.
