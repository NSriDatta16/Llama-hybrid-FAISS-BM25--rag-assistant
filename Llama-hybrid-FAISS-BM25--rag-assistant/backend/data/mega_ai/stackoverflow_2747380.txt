[site]: stackoverflow
[post_id]: 2747380
[parent_id]: 2747194
[tags]: 
Writing automated acceptance tests can reap large benefits. In particular, it will: Improve customer confidence in a product which is proven to be stable Lower maintenance costs Reduce the risk and fear of change Allow for faster and more cheaper changes to the system While you may be 100% familiar with the application now, try putting it down for a few months or years and come back to it to make changes. Believe me, it is much easier being able to run a suite of tests to prove that your new changes haven't broken anything. Finally, consider writing your acceptance tests before you write the code, ala Test Driven Development fashion. Not only will this give you better code but you'll have full test suite coverage when your finished. Don't kid yourself about the costs. Yes, it takes time, commitment and energy to write and maintain an automated acceptance test suite. But this is cheaper than alternative which is no tests and no idea what happens if you change something and what knockon effect it will have. What is your customer confidence worth? What is the real cost of fixing a bug after its been shipped?
