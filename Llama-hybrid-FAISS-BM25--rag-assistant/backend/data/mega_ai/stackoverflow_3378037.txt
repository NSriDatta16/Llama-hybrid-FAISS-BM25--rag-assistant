[site]: stackoverflow
[post_id]: 3378037
[parent_id]: 536399
[tags]: 
Using "hidesBackButton=YES" is really not an elegant solution, cause it HIDES the button which is not what we want. An acceptable work-around would be adding a UILabel to the window just over the back button at least disabling the touches on the button. Add this method to your AppDelegate class: - (void) disableLeftBarButtonItemOnNavbar:(BOOL)disable { static UILabel *l = nil; if (disable) { if (l != nil) return; l = [[UILabel alloc] initWithFrame:CGRectMake(0, 20, 160, 44)]; l.backgroundColor = [UIColor clearColor]; l.userInteractionEnabled = YES; [self.window addSubview:l]; } else { if (l == nil) return; [l removeFromSuperview]; [l release]; l = nil; } } You can call it like this from any view controller to disable: MyAppDelegate *appDeleg = (MyAppDelegate *) [[UIApplication sharedApplication] delegate]; [appDeleg disableLeftBarButtonItemOnNavbar:YES]; To enable: MyAppDelegate *appDeleg = (MyAppDelegate *) [[UIApplication sharedApplication] delegate]; [appDeleg disableLeftBarButtonItemOnNavbar:NO];
