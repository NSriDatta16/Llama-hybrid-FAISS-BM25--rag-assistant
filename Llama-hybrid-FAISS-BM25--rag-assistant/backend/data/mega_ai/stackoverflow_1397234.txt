[site]: stackoverflow
[post_id]: 1397234
[parent_id]: 
[tags]: 
PHP Curl: read incrementally

I have a PHP script that's supposed to take in a URL and search a database for a cached version of the URL. If it finds it, it prints out the cached version to the user, otherwise it downloads it using cURL and echos it to the user. Currently, the downloading script looks something like this: // create a new cURL resource $ch = curl_init(); // set URL and other appropriate options curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_HEADER, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_BINARYTRANSFER, 1); // grab URL and pass it to the browser $data = curl_exec($ch); $mimetype = curl_getinfo($ch, CURLINFO_CONTENT_TYPE); // close cURL resource, and free up system resources curl_close($ch); mysql_query("INSERT INTO `cache_files` (`key`, `original_url`, `file_data`, `mime_type`) VALUES (". "'" . mysql_real_escape_string($key) . "', " . "'" . mysql_real_escape_string($url) . "', " . "'" . mysql_real_escape_string($data) . "', " . "'" . mysql_real_escape_string($mimetype) . "')" ); if (isset($_GET["no_output"])) die; header ("Content-Type: " . $mimetype); header ('Expires: '.gmdate('D, d M Y H:i:s \G\M\T', time() + 157680000), true); header ('Last-Modified: '.gmdate('D, d M Y H:i:s \G\M\T'), true); header ('Cache-Control: public; max-age=157680000'); header ('Pragma: '); print $data; This is currently working fine, however, large files are not send to the end user until they are 100% downloaded, which causes incremental rendering not to be triggered. I want to know if there's a way that cURL can pass the data to the user as it downloads, but also have the data available in a string for script consumption.
