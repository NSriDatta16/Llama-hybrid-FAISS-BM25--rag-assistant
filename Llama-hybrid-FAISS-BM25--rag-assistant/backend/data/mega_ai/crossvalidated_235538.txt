[site]: crossvalidated
[post_id]: 235538
[parent_id]: 235106
[tags]: 
A general approach is to look at likelihood of data given model parameters, i.e. $P(\text{sequences}|\text{matrix elements})$, or, for practical reasons, log-likelihood. For (not-hidden) Markov model, it is simply $\log L = \sum \log m_{ij}$, where we sum over all transitions that have occurred. As you see, it does not matter what is the number of sequences, or their lengths (they may be all different). Be warned that a single occurrence of a transition with the matrix element being 0 makes likelihood zero. In general, you compare it against baselines of uniformly distributed symbols, and symbols distributed according to their observed distribution. See also: perplexity (for measuring performance of sequence prediction). You can easily compute log-likelihood per transition for both train and validation data. For a general reference, I recommend: LR Rabiner, A tutorial on hidden Markov models and selected applications in speech recognition , Proceedings of the IEEE, 1989 Measuring uncertainty of this model can be more complicated and depend on the assumptions (as always). Below I mention two general approaches, which can be tailored for Markov model. Approach 1: Gaussian approximation of likelihood You need to be careful with the stochastic matrix conditions when differentiating log-likelihood. See: MacKay's Information Theory, Inference, and Learning Algorithms Chapter IV Probabilities and Inference: Laplace's Method Approach 2: Bayesian model (with matrix elements being random variables) Depends on prior (I would go with a flat prior for stochastic matrix), and takes a lot of computational power (Markov Chain Monte Carlo, not to be confused with Markov Chain you are using), but gives interpretable results (and no risk of zero estimates). Again, MacKay is wonderful at explaining this approach. For the technical part I recommend PyMC3 in Python, especially with this tutorial: github.com/markdregan/Bayesian-Modelling-in-Python I guess there are some tools in R, but I've never used them.
