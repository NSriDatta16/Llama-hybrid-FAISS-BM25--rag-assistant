[site]: stackoverflow
[post_id]: 4816521
[parent_id]: 4816197
[tags]: 
var root = $("#root")[0]; var nodeList = []; function appendChildren(node, array) { if (node.hasChildNodes()) { for (var i = 0; i Tested here . A recursive solution. This can be done more elegantly using functional style programming. This one relies on underscore.js for a cross browser .reduce implementation. You can rely on array.reduce if you target newer browsers. function nodeToChildren(node) { if (node.hasChildren()) { _.reduce(node.children, function (memo, val) { return memo.concat(nodeToChildren(val)); }, [].concat(node)); } else { return node; } } var array = nodeToChildren(root); Give me a few moments to test/debug this. I forgot the jQuery option var array = $(root).find("*").toArray()
