[site]: stackoverflow
[post_id]: 3537727
[parent_id]: 3537589
[tags]: 
Returning a reference is a C++ term. An example that demonstrates the syntax: class Array { // This is C++ code public: int size() const; float& operator[] (int index); ... }; int main() { Array a; for (int i = 0; i C# doesn't have this capability, it is quite incompatible with the notion of a garbage collector. C++ implements this under the hood by actually returning a pointer. This falls flat when the garbage collector moves the underlying internal array, the pointer becomes invalid. It is not much of a problem because variables of an object are already true references in managed code, much like the C++ notion of a reference. But not value types, they are copied. You'd use an indexer in this specific example: class Array { // This is C# code private T[] storage; public T this[int index] { get { return storage[index]; } set { storage[index] = value; } } // etc... }
