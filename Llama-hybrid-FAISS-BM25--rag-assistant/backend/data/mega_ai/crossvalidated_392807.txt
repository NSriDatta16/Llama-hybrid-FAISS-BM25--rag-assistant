[site]: crossvalidated
[post_id]: 392807
[parent_id]: 392676
[tags]: 
It might be that the problem is so hard that the training points you have are not enough to estimate the underlying decision function(e.g. in a checker-board pattern, you would only expect to obtain a decent estimate once you are covering a big part of the squares). Have you played around with the number of training points? How many points do you have available? have you tried other approaches? Neural networks are probably the most fickle model to throw on an arbitrary problem. What does logistic regression say? How about a random forest? Both algorithms have some basic ways to analyze their decision function and measure how important certain variables are to the decision boundary.
