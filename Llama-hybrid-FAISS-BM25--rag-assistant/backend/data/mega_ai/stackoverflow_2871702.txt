[site]: stackoverflow
[post_id]: 2871702
[parent_id]: 2871344
[tags]: 
Another alternative is poly.points.foldLeft(Int.MaxValue)((b, a) => Math.min(b, a.x)) , which should also work with Scala 2.7.x. The differences compared to the reduceLeft version are you have a start value ( Int.MaxValue in our case, any real data will be smaller or equal to this) there are no constraints between the type of the elements and the type of the result, like the lower bound constraint for reduceLeft Nevertheless Eastsun's solution is more elegant. BTW if you already have case classes you can ommit the new keyword, and can use the automatically generated factory method in the companion object. So the line creating the poly becomes val poly = Polygon(Point(2,5), Point(7,0), Point(3,1)) , which is a bit easier to read.
