[site]: crossvalidated
[post_id]: 540916
[parent_id]: 
[tags]: 
How do I combine predictions of four Poisson regressions that use the same independent variable?

Question : I have a large area, $N_{total}$ , where I decomposed spatially into smaller $i$ squares (northwest, northeast, southwest, and southeast quadrants) and ran Poisson regression on these four squares individually using the same independent variable $X$ (time series). How do I combine the four squares $N_{i}$ into one predictive model $N_{total}$ ? Specifically, I want to combine $N_{NW}$ , $N_{NE}$ , $N_{SE}$ , $N_{SW}$ so that $N_{total} = N_{NW} + N_{NE} + N_{SE} + N_{SW}$ where each square is represented as these regression equations: $ln(N_{NW}) = 0.5X + 2$ $ln(N_{NE}) = -0.5X + 2$ $ln(N_{SE}) = -0.5X - 2$ $ln(N_{SW}) = 0.5X - 2$ So I can have a total event count for the entire square (all four regions)? In other words, I want to add up the four predictive time series and compare with observation of whole square. Problem : When I try to combine the four squares by adding the four region's predictions, the correlation between predicted and observed is essentially zero with hardly any variance compared to $N_{total}$ observation. Specifically, I believe the opposing regression coefficients and intercepts effectively cancel each other out when summing $N_i$ up. The reason I decompose into four quadrants and then run regression separately instead of running the regression on the larger square is because the dependent variable affects $N_i$ differently as depicted by the sign of the regression coefficient. Apologies in advance if this question is duplicated, but I couldn't find a similar question that answered for me. Please forgive my limited stats background. Edit: Below is the actual data whereas the above example is a simplified case. The code lists four regions in four separate data.frames where the predictor is the El Nino Southern Oscillation (enso) and the predictand is tropical cyclone genesis (counts/season). library(ggplot2) ### Setting up the four quadrants genesis_nw $year, total = genesis_nw$ count+genesis_ne $count+genesis_se$ count+genesis_sw $count, nw_count = genesis_nw$ count, ne_count = genesis_ne $count, sw_count = genesis_sw$ count, se_count = genesis_se$count) predict $nw_count_predict ne_count_predict $se_count_predict sw_count_predict $total_predict nw_count_predict+predict $ne_count_predict+predict$ se_count_predict+predict$sw_count_predict ### plot predict vs observation ggplot(predict, aes(x=year)) + geom_line(aes(y=nw_count_predict), color = "red") + geom_line(aes(y=nw_count), color = "black") + labs(x = "NW TC count", y = "Season") ggplot(predict, aes(x=year)) + geom_line(aes(y=ne_count_predict), color = "red") + geom_line(aes(y=ne_count), color = "black") + labs(x = "NE TC count", y = "Season") ggplot(predict, aes(x=year)) + geom_line(aes(y=se_count_predict), color = "red") + geom_line(aes(y=se_count), color = "black") + labs(x = "SE TC count", y = "Season") ggplot(predict, aes(x=year)) + geom_line(aes(y=sw_count_predict), color = "red") + geom_line(aes(y=sw_count), color = "black") + labs(x = "SW TC count", y = "Season") ### Plotting total ggplot(predict, aes(x=year)) + geom_line(aes(y=total_predict), color = "red") + geom_line(aes(y=total), color = "black") + labs(x = "Total TC count", y = "Season") Here are the plots from the code. Red is predicted. Black is observed. And the total...
