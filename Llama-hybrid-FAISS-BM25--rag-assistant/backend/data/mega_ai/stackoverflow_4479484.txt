[site]: stackoverflow
[post_id]: 4479484
[parent_id]: 4479179
[tags]: 
Perhaps I misunderstand the question, but .NET isn't built on top of a framework. In fact, it's the other way around. Frameworks often extend languages as the languages become more powerful and they often ship in the same pack with language compilers. However, there are also Domain-Specific Languages which are built on top of an existing framework and an existing language. Technically these are not languages but more of a scripting API. C#.NET and VB.NET language specs haven't actually changed all that much with the exception of optional parameters, named arguments, co/contra variance and a few others. It's the framework around them that recently gave us expressions, linq and etc. EDIT 1: Unless we consider virtual machines such as JVM a framework, than i can see how that could be true. EDIT 2: Having understood the question, the answer is simple. It's portability (in terms of compiling to an intermediate language when you're dealing with Java or .NET environments) and the ability to leverage the power of the framework.
