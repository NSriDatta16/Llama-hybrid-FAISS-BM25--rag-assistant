[site]: stackoverflow
[post_id]: 2815910
[parent_id]: 2815902
[tags]: 
Well you can make it simpler with object initializers, to start with: for (int i = 0; i I would probably leave it at that though... there's currently no ForEach extension method on IEnumerable - and for good reasons , although I know it's not a universally held opinion ;) In this case, you'd still need to know i in order to set options.Attributes[i] - unless you could set the whole of options.Attributes in one go, of course... without knowing about the types involved, it's pretty hard to advise further. If options.Attributes is a writable property (e.g. an array), you could use: options.Attributes = objEntityCode.Select(code => new EntityCodeKey { EntityCode = code.EntityCodes, OrganizationCode = Constants.ORGANIZATION_CODE }).ToArray(); If options.Attributes is actually just a property which returns a type with an indexer, that won't work.
