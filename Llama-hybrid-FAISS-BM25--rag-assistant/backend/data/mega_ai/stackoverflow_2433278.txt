[site]: stackoverflow
[post_id]: 2433278
[parent_id]: 2312688
[tags]: 
For a short argument, here are the key differences : A web applciation will reside in the browser, intermix a bunch of maybe integrable technologies (html, javascript, css, server-side applciation programming, ...) while a Swing java web startable application will require on client side only a small XML knowledge (even automatable using maven jnlp depoloyment packaging). On the connection point of view, a browser application will require you to use only HTTP communication protocol, while a Swing web started application will allow you to use any kind of protocol you want, provided a Java implementation exists, obviously. On the deployment side, it's quite identical : you deploy your application server-side, and a mechanism allows user to get it on its machine. However, using JNLP, you can allow user to have a start menu item for your application, making next launches faster than by requiring him to navigate to your site. In fact, i think it's only a question of desired user experience. If you want your users to consider your application as a shared "site", the web application is the development model of choice. However, if you want your users to consider your application as a work application, then Swing+JWS is the solution of choice. It integrates in many OSes, deploys over http (and hence can enter deep in enterprises networks without having to worry about firewalls more than a web site) and will allow you to provide far more integrationf eatures (drag'n'drop to OS, respect to native look'n'feel or to your company look'n'feel, and so on).
