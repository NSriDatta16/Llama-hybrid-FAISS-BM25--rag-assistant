[site]: stackoverflow
[post_id]: 3563537
[parent_id]: 3561600
[tags]: 
Not sure this is what you are doing at your end, but narrating what a similar situation faced by me: For our website we have used a table to store the complete URL with their corresponding RewritePath (I am using ASP.NET). RewritePath maps to the actual page ex. Default.aspx, which a SEF (Search Engine Friendly) URL ex. /Home, points to. Although I use this URL Storage in Database (in my case it is around 100K URL's) as a persistence storage for my in memory Cache, rather than Querying the URL's every time from DB. I have found our website speed has considerably increased due to the in memory Cache being used for retrieving the SEF to RewritePath mapping. I have used IDictionary for this. NOTE: In this implementation the major problem which I got was of thread safety on concurrent requests. In order to remove these concurrency issues, we changed the Isolation Level in that insertion (via SP) which has been done in a transaction and also checked for already existing SEFURL, if any. It should be unique in our case also, thus used the check before insertion. May be of some help to you.
