[site]: stackoverflow
[post_id]: 4336492
[parent_id]: 
[tags]: 
Memory leak when using OpenMP

The below test case runs out of memory on 32 bit machines (throwing std::bad_alloc) in the loop following the "post MT section" message when OpenMP is used, however, if the #pragmas for OpenMP are commented out, the code runs through to completion fine, so it appears that when the memory is allocated in parallel threads, it does not free correctly and thus we run out of memory. Question is whether there is something wrong with the memory allocation and deletion code below or is this a bug in gcc v4.2.2 or OpenMP? I also tried gcc v4.3 and got same failure. int main(int argc, char** argv) { std::cout > nts(100); #pragma omp parallel { #pragma omp for for(int begin = 0; begin > nts(100); int begin, i; try { for(begin = 0; begin > c; return 0; }
