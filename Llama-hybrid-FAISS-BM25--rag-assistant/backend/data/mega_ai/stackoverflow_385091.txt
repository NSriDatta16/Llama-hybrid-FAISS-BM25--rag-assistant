[site]: stackoverflow
[post_id]: 385091
[parent_id]: 384913
[tags]: 
I prefer using a separate Acquisition object over your code. Your code if fragile when an exception occurs between the Enter and Leave calls: class CS_Acquire { CRITICAL_SECTION &cs; public: CS_Acquire(CRITICAL_SECTION& _cs) : cs(_cs) { EnterCriticalSection(cs); } ~CS_Acquire() { LeaveCriticalSection(cs); } }; Then in your class methods you would code it as: template void SharedVector::PushBack(const T& value) { CS_Acquire acquire(&cs); vect.push_back(value); }
