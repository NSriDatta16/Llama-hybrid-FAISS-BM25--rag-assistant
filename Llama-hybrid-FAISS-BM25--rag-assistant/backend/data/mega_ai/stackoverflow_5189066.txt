[site]: stackoverflow
[post_id]: 5189066
[parent_id]: 5130810
[tags]: 
The first thing I noticed is that you didn't have a minimum boundary. You'll need that in order to enforce the upper AND lower bound. What is the correct math for setting the bounding box and why? First thing is that dragObj needs to account for both boundaries (applies to position: absolute ): // parentNode is our bounding box // the minimum boundary is based on the top left corner of our container obj.minBoundX = e.parentNode.offsetLeft; obj.minBoundY = e.parentNode.offsetTop; // the maximum is the bottom right corner of the container // or.. the top left (x,y) + the height and width (h,y) - the size of the square obj.maxBoundX = obj.minBoundX + e.parentNode.offsetWidth - e.offsetWidth; obj.maxBoundY = obj.minBoundY + e.parentNode.offsetHeight - e.offsetHeight; Enforcing the boundaries is a simple update to freeMovement : dragObj.element.style.left = Math.max(dragObj.minBoundX, Math.min(event.clientX - dragObj.posX, dragObj.maxBoundX)) + "px"; dragObj.element.style.top = Math.max(dragObj.minBoundY, Math.min(event.clientY - dragObj.posY, dragObj.maxBoundY)) + "px"; Can I get rid of the position: relative in the .bound class? Yup. Can I make .drag class not position: absolute? Yup. You'll just want to change your positions to be relative and your calculations to account for this. For example, your minimum bound will now be 0. // parentNode is our bounding box // the minimum boundary is based on the top left corner of our container obj.minBoundX = 0; obj.minBoundY = 0; Here is the JSFiddle for the position:absolute version: http://jsfiddle.net/feWcQ/ (works with Firefox 4). I also added two tiny boxes that show your boundaries. Hopefully my answer helps you!
