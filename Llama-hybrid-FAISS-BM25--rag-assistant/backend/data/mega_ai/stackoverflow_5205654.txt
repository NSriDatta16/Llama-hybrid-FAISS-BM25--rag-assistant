[site]: stackoverflow
[post_id]: 5205654
[parent_id]: 
[tags]: 
C callback with JNA makes JRE crash

I'm having problems handling callbacks in JNA. I'm trying to use a C API that uses callbacks to handle several session events (logged in, logged out, connection problem...). The session object (called sp_session ) is an opaque struct. All the callbacks are registered in a sp_session_callbacks structure. According to the API, I am supposed to declare the callbacks object, and put it into a Config object that I will provide when creating the sp_session object. If I don't want to use certain callbacks, I am supposed to initialize them with null . The API is using the __stdcall calling convention. Here is a snippet of the C header that's relevant to my problem: #define SP_CALLCONV __stdcall typedef struct sp_session sp_session; /// Here is my equivalent JNA code: The sp_session object public class sp_session extends PointerType{ public sp_session(Pointer address) { super(address); } public sp_session() { super(); } } The sp_session_callbacks object, containing all the callbacks public class sp_session_callbacks extends Structure{ public LoggedIn logged_in; public LoggedOut logged_out; public ConnectionError connection_error; } The callbacks object (here is LoggedIn, but of course I have one for each callback) public interface LoggedIn extends StdCallCallback { public void logged_in(sp_session session, int error); } The native library, with the declaration of all the methods public interface JLibspotify extends StdCallLibrary{ int sessionCreate(sp_session_config config, PointerByReference sess); int sessionLogin(sp_session session, String username, String password); // All the other methods defined by the API } And my main class, binding it all together public class Test{ static{ System.loadLibrary("libspotify"); } public static void main(String[] args){ JLibspotify lib = (JLibspotify)Native.loadLibrary("libspotify", JLibspotify.class); sp_session_config cfg = new sp_session_config(); } sp_session_callbacks sessCallbacks = new sp_session_callbacks(); LoggedIn loggedInCallback = new LoggedIn(){ public void logged_in(sp_session session, int error) { System.out.println("logged_in() called"); } }; sessCallbacks.logged_in = loggedInCallback; cfg.session_callbacks = sessCallbacks; PointerByReference sessionPbr = new PointerByReference(); int error_id = sessionCreate(cfg, sessionPbr); // CRASHES HERE sp_session mySession = new sp_session(sessionPbr.getValue()); } } So, the sessionCreate function call makes the JRE crash with the trace at the end of the post EXCEPTION_ACCESS_VIOLATION (0xc0000005) problematic frame: C [jna3666290841889849729.dll+0xa3f4] . It looks like the logged_in callback is causing this, because when I set it to null it runs ok. Plus, if I initialize the connection_error callback, that has the exact same signature, it doesn't crash either. I'm running version 3.2.7 of JNA. I tried with an anterior version (3.0.9) and it also failed. I'm running the JDK 1.7 beta version, but I tried with the 1.6 and it also failed. Thank you! # # A fatal error has been detected by the Java Runtime Environment: # # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0499a3f4, pid=1368, tid=1344 # # JRE version: 7.0-b129 # Java VM: Java HotSpot(TM) Client VM (21.0-b01 mixed mode, sharing windows-x86 ) # Problematic frame: # C [jna3666290841889849729.dll+0xa3f4] # # If you would like to submit a bug report, please visit: # http://java.sun.com/webapps/bugreport/crash.jsp # The crash happened outside the Java Virtual Machine in native code. # See problematic frame for where to report the bug. # --------------- T H R E A D --------------- Current thread (0x01b79400): JavaThread "main" [_thread_in_native, id=1344, stack(0x00340000,0x00390000)] siginfo: ExceptionCode=0xc0000005, reading address 0x1993053a Registers: EAX=0x19930522, EBX=0x100dc77c, ECX=0x00010004, EDX=0x1008d3e0 ESP=0x0038f58c, EBP=0x0038f5b4, ESI=0x0038f5a4, EDI=0x100b79b0 EIP=0x0499a3f4, EFLAGS=0x00210212 Top of Stack: (sp=0x0038f58c) 0x0038f58c: 100dc77c 0038f5a4 00010004 0038f688 0x0038f59c: 05983de0 05981330 0598289c 05983de0 0x0038f5ac: 05983de0 00000014 0038f688 1008d3ea 0x0038f5bc: 05983de0 10030d77 0038fc44 100b79b0 0x0038f5cc: ffffffff 1008d334 00000000 05983de0 0x0038f5dc: 1008d3e0 05983fc4 1008d9fd 0038f770 0x0038f5ec: 00000000 00000000 7275016a 055310b0 0x0038f5fc: 00000000 00010001 00000000 00000000 Instructions: (pc=0x0499a3f4) 0x0499a3d4: 01 00 89 e5 57 56 8d 75 f0 53 83 ec 1c 8b 7d 14 0x0499a3e4: 8b 5f 4c 8b 03 89 4c 24 08 89 74 24 04 89 1c 24 0x0499a3f4: ff 50 18 83 ec 0c 85 c0 0f 94 c0 0f b6 c0 85 c0 0x0499a404: 89 45 ec 75 19 8b 03 31 d2 89 54 24 08 89 74 24 Register to memory mapping: EAX=0x19930522 is an unknown value EBX=0x100dc77c is an unknown value ECX=0x00010004 is an unknown value EDX=0x1008d3e0 is an unknown value ESP=0x0038f58c is pointing into the stack for thread: 0x01b79400 EBP=0x0038f5b4 is pointing into the stack for thread: 0x01b79400 ESI=0x0038f5a4 is pointing into the stack for thread: 0x01b79400 EDI=0x100b79b0 is an unknown value Stack: [0x00340000,0x00390000], sp=0x0038f58c, free space=317k Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code) C [jna3666290841889849729.dll+0xa3f4] Java_com_sun_jna_Native_initialize_1ffi_1type+0x1054 C [libspotify.dll+0x8d3ea] sp_error_message+0x35a C [jna3666290841889849729.dll+0xcb77] Java_com_sun_jna_Native_initialize_1ffi_1type+0x37d7 C [jna3666290841889849729.dll+0xc7c2] Java_com_sun_jna_Native_initialize_1ffi_1type+0x3422 C [jna3666290841889849729.dll+0x4561] Java_com_sun_jna_Pointer__1getString+0xa31 C [jna3666290841889849729.dll+0x4d2e] Java_com_sun_jna_Function_invokeInt+0x2e j com.sun.jna.Function.invokeInt(I[Ljava/lang/Object;)I+0 j com.sun.jna.Function.invoke([Ljava/lang/Object;Ljava/lang/Class;Z)Ljava/lang/Object;+315 j com.sun.jna.Function.invoke(Ljava/lang/Class;[Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;+214 j com.sun.jna.Library$Handler.invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;+341 j $Proxy0.sp_session_create(Lcom/nbarraille/jspotify/model/sp_session_config;Lcom/sun/jna/ptr/PointerByReference;)I+20 j com.nbarraille.jspotify.main.Test.main([Ljava/lang/String;)V+273 v ~StubRoutines::call_stub V [jvm.dll+0x115f6d] V [jvm.dll+0x1b788e] V [jvm.dll+0x115fed] V [jvm.dll+0xa2507] V [jvm.dll+0xac867] C [javaw.exe+0x209e] C [javaw.exe+0xa23b] C [javaw.exe+0xa2c5] C [kernel32.dll+0x51194] BaseThreadInitThunk+0x12 C [ntdll.dll+0x5b429] RtlInitializeExceptionChain+0x63 C [ntdll.dll+0x5b3fc] RtlInitializeExceptionChain+0x36 Java frames: (J=compiled Java code, j=interpreted, Vv=VM code) j com.sun.jna.Function.invokeInt(I[Ljava/lang/Object;)I+0 j com.sun.jna.Function.invoke([Ljava/lang/Object;Ljava/lang/Class;Z)Ljava/lang/Object;+315 j com.sun.jna.Function.invoke(Ljava/lang/Class;[Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;+214 j com.sun.jna.Library$Handler.invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;+341 j $Proxy0.sp_session_create(Lcom/nbarraille/jspotify/model/sp_session_config;Lcom/sun/jna/ptr/PointerByReference;)I+20 j com.nbarraille.jspotify.main.Test.main([Ljava/lang/String;)V+273 v ~StubRoutines::call_stub --------------- P R O C E S S --------------- Java Threads: ( => current thread ) 0x0182fc00 JavaThread "Low Memory Detector" daemon [_thread_blocked, id=4664, stack(0x04170000,0x041c0000)] 0x0182ac00 JavaThread "C1 CompilerThread0" daemon [_thread_blocked, id=1728, stack(0x01b20000,0x01b70000)] 0x01829800 JavaThread "Attach Listener" daemon [_thread_blocked, id=112, stack(0x04020000,0x04070000)] 0x01826400 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=5836, stack(0x03ea0000,0x03ef0000)] 0x01819800 JavaThread "Finalizer" daemon [_thread_blocked, id=4724, stack(0x03f80000,0x03fd0000)] 0x01817800 JavaThread "Reference Handler" daemon [_thread_blocked, id=3940, stack(0x01ad0000,0x01b20000)] =>0x01b79400 JavaThread "main" [_thread_in_native, id=1344, stack(0x00340000,0x00390000)] Other Threads: 0x01816400 VMThread [stack: 0x01a30000,0x01a80000] [id=3876] 0x01843000 WatcherThread [stack: 0x040d0000,0x04120000] [id=4636] VM state:not at safepoint (normal execution) VM Mutex/Monitor currently owned by a thread: None Heap def new generation total 4928K, used 3630K [0x23450000, 0x239a0000, 0x289a0000) eden space 4416K, 82% used [0x23450000, 0x237db858, 0x238a0000) from space 512K, 0% used [0x238a0000, 0x238a0000, 0x23920000) to space 512K, 0% used [0x23920000, 0x23920000, 0x239a0000) tenured generation total 10944K, used 0K [0x289a0000, 0x29450000, 0x33450000) the space 10944K, 0% used [0x289a0000, 0x289a0000, 0x289a0200, 0x29450000) compacting perm gen total 12288K, used 860K [0x33450000, 0x34050000, 0x37450000) the space 12288K, 7% used [0x33450000, 0x33527190, 0x33527200, 0x34050000) ro space 10240K, 43% used [0x37450000, 0x3789ce40, 0x3789d000, 0x37e50000) rw space 12288K, 53% used [0x37e50000, 0x384c2710, 0x384c2800, 0x38a50000) Code Cache [0x01e90000, 0x01f20000, 0x03e90000) total_blobs=234 nmethods=82 adapters=88 free_code_cache=32972224 largest_free_block=0 Dynamic libraries: 0x00880000 - 0x008b0000 C:\Program Files\Java\jdk1.7.0\bin\javaw.exe 0x778f0000 - 0x77a2d000 C:\Windows\SYSTEM32\ntdll.dll 0x77070000 - 0x77144000 C:\Windows\system32\kernel32.dll 0x75cf0000 - 0x75d3a000 C:\Windows\system32\KERNELBASE.dll 0x60000000 - 0x60041000 C:\Program Files\BitDefender\BitDefender 2011\Active Virus Control\Midas_00078_002\midas32.dll 0x61000000 - 0x61028000 C:\Program Files\BitDefender\BitDefender 2011\Active Virus Control\Midas_00078_002\plugin_base.m32 0x67000000 - 0x67048000 C:\Program Files\BitDefender\BitDefender 2011\Active Virus Control\Midas_00078_002\plugin_nt.m32 0x64000000 - 0x64021000 C:\Program Files\BitDefender\BitDefender 2011\Active Virus Control\Midas_00078_002\plugin_registry.m32 0x62000000 - 0x6202d000 C:\Program Files\BitDefender\BitDefender 2011\Active Virus Control\Midas_00078_002\plugin_extra.m32 0x65000000 - 0x6501a000 C:\Program Files\BitDefender\BitDefender 2011\Active Virus Control\Midas_00078_002\plugin_net.m32 0x63000000 - 0x630a6000 C:\Program Files\BitDefender\BitDefender 2011\Active Virus Control\Midas_00078_002\plugin_fragments.m32 0x75e10000 - 0x75eb0000 C:\Windows\system32\ADVAPI32.dll 0x775c0000 - 0x7766c000 C:\Windows\system32\msvcrt.dll 0x75d50000 - 0x75d69000 C:\Windows\SYSTEM32\sechost.dll 0x77670000 - 0x77711000 C:\Windows\system32\RPCRT4.dll 0x76f00000 - 0x76fc9000 C:\Windows\system32\USER32.dll 0x77a50000 - 0x77a9e000 C:\Windows\system32\GDI32.dll 0x77a30000 - 0x77a3a000 C:\Windows\system32\LPK.dll 0x75d70000 - 0x75e0d000 C:\Windows\system32\USP10.dll 0x74830000 - 0x749ce000 C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.7600.16661_none_420fe3fa2b8113bd\COMCTL32.dll 0x772f0000 - 0x77347000 C:\Windows\system32\SHLWAPI.dll 0x775a0000 - 0x775bf000 C:\Windows\system32\IMM32.DLL 0x75eb0000 - 0x75f7c000 C:\Windows\system32\MSCTF.dll 0x72740000 - 0x727fe000 C:\Program Files\Java\jdk1.7.0\jre\bin\msvcr100.dll 0x01b80000 - 0x01e89000 C:\Program Files\Java\jdk1.7.0\jre\bin\client\jvm.dll 0x746c0000 - 0x746f2000 C:\Windows\system32\WINMM.dll 0x73920000 - 0x7392c000 C:\Program Files\Java\jdk1.7.0\jre\bin\verify.dll 0x73330000 - 0x73350000 C:\Program Files\Java\jdk1.7.0\jre\bin\java.dll 0x75d40000 - 0x75d45000 C:\Windows\system32\PSAPI.DLL 0x733a0000 - 0x733b3000 C:\Program Files\Java\jdk1.7.0\jre\bin\zip.dll 0x10000000 - 0x10259000 C:\Windows\System32\libspotify.dll 0x77150000 - 0x77185000 C:\Windows\system32\WS2_32.dll 0x77a40000 - 0x77a46000 C:\Windows\system32\NSI.dll 0x75ba0000 - 0x75cbc000 C:\Windows\system32\CRYPT32.dll 0x75ab0000 - 0x75abc000 C:\Windows\system32\MSASN1.dll 0x74ee0000 - 0x74f38000 C:\Windows\system32\WINHTTP.dll 0x74e90000 - 0x74edf000 C:\Windows\system32\webio.dll 0x754c0000 - 0x754d6000 C:\Windows\system32\CRYPTSP.dll 0x75260000 - 0x7529b000 C:\Windows\system32\rsaenh.dll 0x750a0000 - 0x750b7000 C:\Windows\system32\USERENV.dll 0x75a40000 - 0x75a4b000 C:\Windows\system32\profapi.dll 0x75a30000 - 0x75a3c000 C:\Windows\system32\CRYPTBASE.dll 0x728a0000 - 0x728b6000 C:\Program Files\Java\jdk1.7.0\jre\bin\net.dll 0x75480000 - 0x754bc000 C:\Windows\system32\mswsock.dll 0x75470000 - 0x75476000 C:\Windows\System32\wship6.dll 0x73950000 - 0x73960000 C:\Windows\system32\NLAapi.dll 0x75340000 - 0x75384000 C:\Windows\system32\DNSAPI.dll 0x71030000 - 0x71038000 C:\Windows\System32\winrnr.dll 0x71020000 - 0x71030000 C:\Windows\system32\napinsp.dll 0x71000000 - 0x71012000 C:\Windows\system32\pnrpnsp.dll 0x74fd0000 - 0x74fd5000 C:\Windows\System32\wshtcpip.dll 0x74d30000 - 0x74d4c000 C:\Windows\system32\IPHLPAPI.DLL 0x74d20000 - 0x74d27000 C:\Windows\system32\WINNSI.DLL 0x70c60000 - 0x70c66000 C:\Windows\system32\rasadhlp.dll 0x71ba0000 - 0x71bd8000 C:\Windows\System32\fwpuclnt.dll 0x73930000 - 0x7393f000 C:\Program Files\Java\jdk1.7.0\jre\bin\nio.dll 0x04990000 - 0x049e5000 C:\Users\nbarraille\AppData\Local\Temp\jna3666290841889849729.dll VM Arguments: jvm_args: -Djava.library.path=C:\Windows\System32 -Dfile.encoding=Cp1252 java_command: com.nbarraille.jspotify.main.Test Launcher Type: SUN_STANDARD Environment Variables: PATH=C:/Program Files/Java/jdk1.7.0/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0/bin/../jre/lib/i386;C:\Windows\System32 USERNAME=nbarraille OS=Windows_NT PROCESSOR_IDENTIFIER=x86 Family 6 Model 23 Stepping 10, GenuineIntel --------------- S Y S T E M --------------- OS: Windows 7 Build 7600 CPU:total 2 (2 cores per cpu, 1 threads per core) family 6 model 23 stepping 10, cmov, cx8, fxsr, mmx, sse, sse2, sse3, ssse3, sse4.1 Memory: 4k page, physical 3624108k(885020k free), swap 7246452k(3637664k free) vm_info: Java HotSpot(TM) Client VM (21.0-b01) for windows-x86 JRE (1.7.0-ea-b129), built on Feb 10 2011 07:43:39 by "java_re" with unknown MS VC++:1600 time: Mon Mar 07 14:25:08 2011 elapsed time: 0 seconds EDIT: * Code to test the API in C * #include "api.h" /* --- Data --- */ const uint8_t g_appkey[] = {/*My appkey*/}; /* --------------------------- SESSION CALLBACKS ------------------------- */ static void logged_in(sp_session *sess, sp_error error){ printf("logged_in() called: \n"); } static void log_message(sp_session *sess, const char *data){ printf("log_message() called %s : \n", data); } static void notify_main_thread(sp_session *sess){ printf("notify_main_thread() called \n"); } static sp_session_callbacks session_callbacks = { //.logged_in = (void*)&logged_in, //.notify_main_thread = (void*)&notify_main_thread, //.log_message = (void*)&log_message, }; static sp_session_config spconfig = { .api_version = 7, .cache_location = "tmp", .settings_location = "tmp", .application_key = g_appkey, .application_key_size = sizeof(g_appkey), .user_agent = "jspotify", .callbacks = &session_callbacks, .userdata = NULL }; int main(int argc, char **argv) { sp_session *sp; const char *username = "foo"; const char *password = "bar"; spconfig.application_key_size = sizeof(g_appkey); printf("Creating session \n"); sp_error err = sp_session_create(&spconfig, &sp); if(err != 0){ printf("Error occured: %d \n", err); return 0; } printf("Login\n"); sp_session_login(sp, username, password); Sleep(10000); return 0; } When I run it like this (without callbacks), the output is: Creating session Login And when I register the callbacks (uncomment the lines), it doesn't even print anything! It looks like it doesn't print anything when a callback is called, because if I comment the sp_session_login line, only the declaration of notify_main_thread (which is the only one printed) will prevent the program from printing...
