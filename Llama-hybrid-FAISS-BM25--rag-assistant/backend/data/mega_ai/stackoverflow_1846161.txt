[site]: stackoverflow
[post_id]: 1846161
[parent_id]: 1223795
[tags]: 
Inner classes require conversion of '.' to '$' in Matlab. This may actually due to the way the Java compiler stores internal class objects. It behaves similarly for internal classes (e.g. javax.swing.plaf.basic.BasicTextUI$UpdateHandler ). Matlab is not as smart as the JVM to automatically convert these internal '$' into '.'. Therefore, we can't use the regular simple dot-notation in these cases in Matlab, and since '$' is an invalid character in Matlab syntax, we must resort to using the '$' within javaObject , javaMethod , awtinvoke and their relatives. For example: Java: InnerClass c = new com.example.test.SomeEnum.InnerClass; MATLAB: c = javaObject('com.example.test.SomeEnum$InnerClass') Enums require similar conversion of '.' to '$' in Matlab. But MATLAB's javaObject function calls the class constructor, and since enums have no constructor, we get the following error: No constructor with appropriate signature exists in Java class Luckily enum has the builtin method valueOf() that we can use with javaMethod : Java: SomeEnum e = com.example.test.SomeEnum.MY_FAVORITE_ENUM; MATLAB: e = javaMethod('valueOf','com.example.test$SomeEnum','MY_FAVORITE_ENUM'); Similarly: Java: int n = com.example.test.Foo.MAX_FOO; MATLAB: n = javaMethod('com.example.test.Foo$MAX_FOO') Static fields can be gotten directly in Matlab using simple dot notation: redColor = java.awt.Color.red; The full list of static fields can be gotten using Matlab's built-in struct function: >> staticFields = struct(java.awt.Color.red) staticFields = white: [1x1 java.awt.Color] WHITE: [1x1 java.awt.Color] lightGray: [1x1 java.awt.Color] LIGHT_GRAY: [1x1 java.awt.Color] gray: [1x1 java.awt.Color] GRAY: [1x1 java.awt.Color] darkGray: [1x1 java.awt.Color] DARK_GRAY: [1x1 java.awt.Color] black: [1x1 java.awt.Color] BLACK: [1x1 java.awt.Color] red: [1x1 java.awt.Color] RED: [1x1 java.awt.Color] pink: [1x1 java.awt.Color] PINK: [1x1 java.awt.Color] orange: [1x1 java.awt.Color] ORANGE: [1x1 java.awt.Color] yellow: [1x1 java.awt.Color] YELLOW: [1x1 java.awt.Color] green: [1x1 java.awt.Color] GREEN: [1x1 java.awt.Color] magenta: [1x1 java.awt.Color] MAGENTA: [1x1 java.awt.Color] cyan: [1x1 java.awt.Color] CYAN: [1x1 java.awt.Color] blue: [1x1 java.awt.Color] BLUE: [1x1 java.awt.Color] OPAQUE: 1 BITMASK: 2 TRANSLUCENT: 3 MATLAB's function javaObject may not work if the default constructor is private (hidden), and javaMethod probably won't work either. If the class with the static methods is nested you may be out of luck. For my systray utility on the File Exchange, I used the reflection approach, as described in this post: http://UndocumentedMatlab.com/blog/setting-system-tray-popup-messages/ Credit: edited by Mark Mikofski
