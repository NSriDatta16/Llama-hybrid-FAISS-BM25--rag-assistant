[site]: stackoverflow
[post_id]: 4124290
[parent_id]: 4124142
[tags]: 
Which part of your 'timeline' is the actual component receiving the mouseDragged() event? Normally on receiving this event you would move the component to match the dragging action - that way, the component should always be under the mouse and always receive the mouseDragged() event until you let go of it. Are you moving this component as you process the events? A small button-like rectangle used as a slider would make an excellent component to use. (If you are trying to treat your whole timeline as the component and are therefore not moving it to match, what do you want to happen if the user drags the mouse while outside?) Although Windows (and possibly others) support capturing the mouse, Java does not appear to. You might be able to provide a custom event queue something like this: Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() { public void eventDispatched(AWTEvent e) { // Look for mouse messages and handle them... } } , AWTEvent.MOUSE_MOTION_EVENT_MASK + AWTEvent.MOUSE_EVENT_MASK);
