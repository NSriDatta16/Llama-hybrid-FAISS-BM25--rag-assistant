[site]: crossvalidated
[post_id]: 285452
[parent_id]: 142696
[tags]: 
Lets take an example to clarify your query. Assume the 20 inputs are pixel intensity values for a 5x4 pixel image, and the neural network is being trained to recognize the digits 1 to 5 from these images. In this case, the interpretation of class 10000 would be digit '1', 01000 would be digit '2' and so on. But a neural network generally gives a continuous valued output, so the output would be something like 0.9 0.2 0.1 0.7 0.1 . From this "prediction", you would have to determine the output class by applying a threshold/cutoff such as 0.5 to get the output class as 10000 . Alternatively, you could select the class with highest probability, for example - if the output is 0.1 0.4 0.05 0.1 0.3 then select class as 01000 since the second output has the highest probability. The answers to your questions are: Yes, the class representation interpreted by you is correct, but the output would not be a discrete number 0/1, it would be a continuous valued output which you would need to interpret and convert into a class. Regarding interpreting the output 11000 , in case two of the five outputs have exactly the same probability, then, its a symptom of poor training. The remedy is to select better features and/or more training samples to improve the neural network's ability to identify the class appropriately. In case you need the output to be a five bit string, and if that is your real objective, then the network needs to be trained for such inputs. One such example could be to produce codes from input data, e.g. an auto-encoder which reduces the dimensionality of a given dataset. The relationship between prediction and classification is that classification is the task of converting a continuous valued prediction into a class membership within a set of discrete classes.
