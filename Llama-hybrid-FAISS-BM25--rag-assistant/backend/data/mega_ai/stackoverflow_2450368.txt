[site]: stackoverflow
[post_id]: 2450368
[parent_id]: 1076575
[tags]: 
I think that real problem with code quality or testing is that you have to put a lot of work into it and YOU get nothing back. less bugs == less work? no, there's always something to do. less bugs == more money? no, you have to change job to get more money. unit-testing is heroic , you only do it to feel better about yourself. I work at place where management is encouraging unit-testing, however I am the only person that writes tests(i want to get better at it, its the only reason I do it). I understand that for others writing tests is just more work and you get nothing in return . surfing the web sounds cooler than writing tests. someone might break your tests and say he doesn't know how to fix or comment it out(if you use maven). Frameworks are not there for real web-app integration testing(unit test might pass, but it might not work on a web page), so even if you write test you still have to test it manually. You could use framework like HtmlUnit , but its really painful to use. Selenium breaks with every change on a webpage. SQL testing is almost impossible(You can do it with DbUnit , but first you have to provide test data for it. test data for 5 joins is a lot of work and there is no easy way to generate it). I dont know about your web-framework , but the one we are using really likes static methods , so you really have to work to test the code.
