[site]: crossvalidated
[post_id]: 487134
[parent_id]: 487040
[tags]: 
Here are simulations comparing two samples of size 15 from $\mathsf{Norm}(0,1)$ and $\mathsf{Norm}(1,1),$ respectively. My simulation shows that the pooled t test has better power than the two-sample Wilcoxon test, which is well-known, and that neither test has power $0.8.$ set.seed(2020) pv = replicate(10^4, t.test(rnorm(15,0,1), rnorm(15,1,1), var.eq=T)$p.val) mean(pv It seems that I have misunderstood what you are doing, that your simulation code is wrong, or both. It might be helpful to have a clearer explanation of what you are doing with ranks, and to see the inner loop of your program where you compute power. [It makes no sense to take averages of ranks for the two samples separately: for example, if $n=15,$ then both sets of ranks would run from 1 through 15 and both sets of ranks would always sum to 120. You might want to look at what the Wilcoxon rank-sum test does with ranks of the two samples.] Here are simulations with sample sizes $n=25$ and difference $0.5$ in population means. In neither case is power anywhere near 80%. set.seed(1066) pv = replicate(10^4, t.test(rnorm(25,0,1), rnorm(25,.5,1), var.eq=T)$p.val) mean(pv Note: For pooled t tests, here is an online 'power and sample size' calculator, that works for reasonable parameters.
