[site]: stackoverflow
[post_id]: 545620
[parent_id]: 545601
[tags]: 
Yeah, I did that once. Didn't help. I think software development is hard, and there is no way that listing these four concepts, no matter how important, will improve the quality of the code in your organization. What you really need is building up knowledge and experience. If I had to make up a list, it would contain: Accept that the rule 0 is to produce better code . If a single coders does not agree to this, you may be in trouble. Do code reviews. That will fix most of the problems you list, and has tons of other advantages. Communicate about what you're doing - the more often, the better. Put your ego aside and don't hesitate to ask your senior colleagues for advice. If you're a senior developer, listen to your younger peers, often more in tune with the latest techs, ideas, practices and idioms. Respect your code base. Every single line of code is important and must be right. All of these are human factors. I think that's where to road to better programming in an organization starts.
