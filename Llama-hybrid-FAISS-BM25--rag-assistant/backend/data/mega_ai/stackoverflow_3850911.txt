[site]: stackoverflow
[post_id]: 3850911
[parent_id]: 3848406
[tags]: 
The content should be stored in the database in the original form. For example: this is a paragraph should be stored exactly as: this is a paragraph To make SQL injection impossible just escape the input strings with a proper escape function and sanitize your data (for example if it is supposed to be an integer, do an (int) cast). If you're using a framework this will be done for you by the database layer. I used to also do my own escape functions which are pretty easy to do. Upon display in an HTML page one should use htmlentities (or for example Zend_View's escape method). There is no imminent reason why one would not accept storing special characters in the database as long as the database accepts them and the content is safely output to prevet XSS and such. The idea behind my arguments is that content should be "exportable" for any platform/place. So if it's an HTML page you are going to use htmlentities(), if it's a CSV file you're going to use CSV exporting functions to process that text, etc.
