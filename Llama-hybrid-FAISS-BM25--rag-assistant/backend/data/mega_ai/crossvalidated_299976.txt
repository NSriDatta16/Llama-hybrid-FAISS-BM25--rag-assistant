[site]: crossvalidated
[post_id]: 299976
[parent_id]: 299970
[tags]: 
We cannot simulate separate values (because states of the Markov chain are dependent, so we cannot assume that a state taken at some random time instant will be ~ Beta(a, b), This is not true. Once the chain has converged, or after a "burn-in" period, every draws' marginal distributions will be the target distribution (Beta(a,b) in this case). This is because the Markov chain is stationary. If $X^i \sim \pi(x^i)$, and the transition distribution is $f(x^{i+1}|x^i)$, then at the next step $X^{i+1} \sim \int f(x^{i+1}|x^i)\pi(x^i)dx^i = \pi(x^{i+1})$. The last equality is the definition of stationarity/invariance. And yes, the draws are dependent, but there is no contradiction here. But then we can easily depict Beta(a, b) WITHOUT the constant C, I'm not sure if I follow this, but I will remind you that if you perform Metropolis-Hastings, at every iteration when you calculate the acceptance ratio, you do not have to evaluate the target density. Only something proportional to it. This is because the ratio of the unnormalized densities is the same as the ratio of the normalized ones, and these ratios are required for calculating the acceptance probabilities of your proposals at each iteration. calculate numerically its integral, then take a number of points, say, 100,000, and divide this quantity into separate bins that we would have formed by dividing the random variable support into equal bin ranges, and assigning each bin a share of points out of 100,000 (depending on the area of Beta(a, b) over the bin range as percentage). When you "calculate numerically" an integral, you're taking a sample average using all of your samples. Say you are interested in estimating the mean of your Beta(a,b) distribution. Then you take $$ \frac{1}{10000}\sum_i x^i, $$ and this approximates the integral/expectation. The reason this works is because the Markov chain designed by the Metropolis-Hastings algorithm is irreducible, and has as its stationary distribution the thing you're interested in. The separation of the support into bins is only done for plotting purposes. Both methods do not allow us to generate 1 separate draw from the distribution in question (or there is a way?). I don't think you are describing two techniques. You are referring to one technique, the MH algorithm, and describing two things that you may do with your samples (as far as I can tell).
