[site]: stackoverflow
[post_id]: 4819931
[parent_id]: 4819809
[tags]: 
Looking at your code (and I don't wish to be unkind), I don't think you're on the right track with this one. I recommend that as a first step you forget about code altogether, and think simply about the algorithm or process you'd use. You should be able to write it down in English as a list of steps. Only once you have that list, should you then think about how you'd implement it in code. To answer your actual question, you're currently getting the exception because you're accessing elements past the end of the list. This is due in part to the fact that incrementing until z equals list.length stops too late; an array with length 4 has elements with indices 0-3, so list[4] will throw the exception you're encountering. (Right now your combination-finding logic won't do the right thing. x is never changed, so every combination (given the example) will start with Kennedy . As z hits the length of the list it stops growing, but y continues to grow, so you'll get some iterations where the second and third entries are identical, and you haven't considered whether y will exceed the bounds. You're also looping over i but doing nothing with it. Your program, if it didn't crash, would output something like this: Kennedy, Johnson, Nixon Kennedy, Johnson, Ford Kennedy, Nixon, Ford Kennedy, Ford, Ford Kennedy, Johnson, Nixon Kennedy, Johnson, Ford Kennedy, Nixon, Ford Kennedy, Ford, Ford Kennedy, Johnson, Nixon Kennedy, Johnson, Ford Kennedy, Nixon, Ford Kennedy, Ford, Ford Kennedy, Johnson, Nixon Kennedy, Johnson, Ford Kennedy, Nixon, Ford Kennedy, Ford, Ford And you have a lot of special-casing in there. The assumption that you need to iterate while j only works when there are exactly four elements in the input. The check that you should increment y if j >= 1 is again a special-case that only creates the right result with exactly four elements. Again, I encourage you to think about the process you you might use to find every permuation of three elements in an input of arbitrary length , without thinking about code at all.)
