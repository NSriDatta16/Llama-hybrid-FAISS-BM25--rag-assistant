[site]: stackoverflow
[post_id]: 515558
[parent_id]: 510846
[tags]: 
Thanks for people who answered. I think I have found a quite elegant way to do what I wanted and still use the standard voters API. The 2nd parameter to the vote method of AccessDecisionVoter is the secured object. I can create a contract between the decision manager and the voters, that this object is of a specific class/interface that is a wrapper , through which the original secured object can be fetched and also additional information can be added by the voters that deny the access. I saw a pattern like this in other frameworks as well. This solution has the following advantages over other possible solutions: The voters can remain stateless, so they can be singletons The standard interface of the AccessDecisionVoter is used and no new return values are added The additional information is saved in an object that is discarded automatically because no one uses it after the AbstactDecisionManager 's decide method, so no cleanup code is required Cheers.
