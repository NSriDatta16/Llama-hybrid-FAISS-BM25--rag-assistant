[site]: stackoverflow
[post_id]: 1085567
[parent_id]: 1085532
[tags]: 
I think you're on the right track - I would say the "Bomb Bonus" is still related to the player object because it affects the enemies around the player. You just need to implement the "Bomb Bonus"'s use() method like this: class BombBonus(Bonus): def use(self, player): assert isinstance(player, Player) # TODO: find all enemies that are close to the player - assuming you # have all enemy objects in a list call 'enemies' global enemies for enemy in enemies: if distance(player.position, enemy.position) You'll need to work out your own implementation of distance() . Developing a game without a detailed plan means that you're often going to have new ideas which almost fit your existing objects, and you will need to choose whether to expand your existing classes with new features to support your new idea, or create a new set of classes because you think the new idea is too different. There's no right and wrong here, just make sure your ideas stay organized in a way that makes sense to you.
