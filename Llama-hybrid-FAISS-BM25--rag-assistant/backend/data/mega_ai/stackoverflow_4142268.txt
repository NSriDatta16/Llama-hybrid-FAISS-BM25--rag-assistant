[site]: stackoverflow
[post_id]: 4142268
[parent_id]: 4140563
[tags]: 
If you have access to the templatedparent (SelectedItem, FindVisualParent etc.) you can do this if you apply Names to the TextBoxes. Example if ControlTemplate is for ComboBoxItem. private void AddUser_Click(object sender, RoutedEventArgs e) { ComboBoxItem comboBoxItem = GetVisualParent (button); TextBox textBox = comboBoxItem.Template.FindName("numberTextBox", comboBoxItem) as TextBox; //... } Another way to get the TextBoxes within the ControlTemplate would be to use the Visual Tree. Something like this private void AddUser_Click(object sender, RoutedEventArgs e) { Button button = sender as Button; Grid parentGrid = GetVisualParent (button); List textBoxes = GetVisualChildCollection (parentGrid); foreach (TextBox textBox in textBoxes) { if (textBox.Tag == "Number") { // Do something.. } else if (textBox.Tag == "Login") { // Do something.. } else if (textBox.Tag == "Password") { // Do something.. } } } And an implementation of GetVisualParent and GetVisualChildCollection public static T GetVisualParent (object childObject) where T : Visual { DependencyObject child = childObject as DependencyObject; // iteratively traverse the visual tree while ((child != null) && !(child is T)) { child = VisualTreeHelper.GetParent(child); } return child as T; } public static List GetVisualChildCollection (object parent) where T : Visual { List visualCollection = new List (); GetVisualChildCollection(parent as DependencyObject, visualCollection); return visualCollection; } private static void GetVisualChildCollection (DependencyObject parent, List visualCollection) where T : Visual { int count = VisualTreeHelper.GetChildrenCount(parent); for (int i = 0; i
