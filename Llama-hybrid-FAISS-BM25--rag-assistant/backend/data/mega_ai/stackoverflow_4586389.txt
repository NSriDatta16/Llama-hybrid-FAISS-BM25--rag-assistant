[site]: stackoverflow
[post_id]: 4586389
[parent_id]: 4579317
[tags]: 
I can offer a few thoughts: 1: Documentation and examples have been a major challenge for my projects using Hadoop and related projects. Compared to MySQL, it's often hard to find what features are available, and how to use them. The mailing lists have been a great help in this regard. Learning to think in terms of batch processing and 'full table scans' has also been an adjustment, and getting used to Map Reduce programming is non-trivial, although there are many tools available to shield you from writing raw map reduce. 2: Much of the Hadoop & friends code base is still basically alphaware, and sometimes things change a lot from version to version. You'll definitely want a test cluster to do your upgrade on first and see what breaks. Dramatic API changes are not unexpected during an upgrade. 3: I have not worked with memcached specifically, and I use Hadoop for back end ETL processing, not rendering pages. Can't really help you here. 4: The best way to understand the projects is to get the code and start looking at it. Practice using it for a while, and eventually you'll find something you think could be done better, or a feature you want. That's as good a place as any to get involved. Be sure to sign up for the developer mailing lists, and pay attention to the existing list of bugs and feature requests to see if someone is already working on something similar. Most of these projects you'll need to get someone with commit rights to put your code in, but that isn't too hard. Read up on the specific project you're interested in contributing to for more specific information.
