[site]: stackoverflow
[post_id]: 1722560
[parent_id]: 
[tags]: 
How to implement an Enterprise-grade JavaScript "framework" for web designers?

I have been tasked with improving the current mess that is our JavaScript "strategy"; we're an online shopping company and my boss has given me time to do this properly. He is very keen on keepin this modular and increase the reusability of the components. Our HTML is being rendered with JSP and we have lots of custom tags writing out, for example, information about products without the web designers needing to worry about it. Now, we want to do similar things with JavaScript. The web designers should be given a set of custom tags, like, say, ... some HTML here ... that will wrap the HTML in a with a drag bar at the top and a close button. My idea is to mark the div with a unique namespaced CSS class name, like foo_draggable , and then put all my functions in a single JS file. That JS file then sees if there are elements with the CSS class foo_draggable in the DOM and if it finds any it will attach the required event handlers. However, I am worried about scaling problems, and wondering whether it is a good idea to have lots of selector queries running when they quite often aren't going to be used. The first alternative would be to initiate each draggable item explicitly but that would mean putting tags all over the place. The second approach would be to not put all UI function in one file but rather just download the ones I need, but that would mean lots more HTTP requests and slower page load speed. Has anyone got experience with this?
