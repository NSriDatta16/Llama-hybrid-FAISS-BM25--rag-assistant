[site]: stackoverflow
[post_id]: 4330192
[parent_id]: 
[tags]: 
MBProgressHUD altering data output?

I'm trying to use MBProgressHUD to show a loading animation while I'm accessing information to smooth out the process of going from a UITableView listing to a UIWebView that has detailed information of the item selected. If I call [self fetchPlayer]; without using MBProgressHUD I have no issues and everything works fine albeit without the animation. But if I call [self loadingAnimation]; it half works. The first time I select something from the UITableView it loads correctly every time, but if I go back and select the same or different item I will quite often get null values for playerDetails items. I'm not sure what the MBProgressHUD method could be doing to cause this but here is the code. The NSLog is displaying the correct information - but the main class that is calling the two methods does not output it correctly. - (void)loadingAnimation { // The hud will dispable all input on the view (use the higest view possible in the view hierarchy) HUD = [[MBProgressHUD alloc] initWithView:self.navigationController.view]; // Add HUD to screen [self.navigationController.view addSubview:HUD]; HUD.labelText = @"Loading"; // Show the HUD while the provided method executes in a new thread [HUD showWhileExecuting:@selector(fetchPlayer) onTarget:self withObject:nil animated:YES]; } - (void)fetchPlayer { NSManagedObjectContext *pcontext = [[AppController sharedAppController] managedObjectContext]; NSFetchRequest *pfetch = [[NSFetchRequest alloc] init]; NSEntityDescription *pentity = [NSEntityDescription entityForName:@"Players" inManagedObjectContext:pcontext]; [pfetch setEntity:pentity]; NSPredicate *ppredicate = [NSPredicate predicateWithFormat:@"playerID=%@", [playerNews playerID]]; [pfetch setPredicate:ppredicate]; NSError *perror; NSArray *plist = [pcontext executeFetchRequest:pfetch error:&perror]; playerDetails = [plist objectAtIndex:0]; NSLog(@"%@ %@ %@ %@ %@", [playerNews playerID], [playerDetails valueForKey:@"playerFirstName"], [playerDetails valueForKey:@"playerLastName"], [playerDetails valueForKey:@"position"], [playerDetails valueForKey:@"dateOfBirth"]); [pfetch release]; NSManagedObjectContext *context = [[AppController sharedAppController] managedObjectContext]; NSFetchRequest *fetch = [[NSFetchRequest alloc] init]; NSEntityDescription *entity = [NSEntityDescription entityForName:@"Teams" inManagedObjectContext:context]; [fetch setEntity:entity]; if (![playerDetails valueForKey:@"team"]) { team = [playerDetail team]; } else { team = [playerDetails valueForKey:@"team"]; } NSPredicate *predicate = [NSPredicate predicateWithFormat:@"team=%@", team]; [fetch setPredicate:predicate]; NSError *error; NSArray *list = [context executeFetchRequest:fetch error:&error]; playerTeam = [list objectAtIndex:0]; [fetch release]; }
