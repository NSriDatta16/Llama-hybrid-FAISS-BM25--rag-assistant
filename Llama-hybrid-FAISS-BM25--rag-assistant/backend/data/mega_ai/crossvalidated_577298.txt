[site]: crossvalidated
[post_id]: 577298
[parent_id]: 575826
[tags]: 
I think I’ve found an answer to my question - at least, an answer I’m satisfied with. Thank you to @whuber for the direction. Given a complex wave that follows the time series (from the original post) ... : t ... find the formula for n harmonics that compose the signal. Let’s keep it to the first 2 harmonics for the sake of brevity. First, we can keep the following equation in mind: $$ y(t) = \sum_{n = 0}^{n where h is the harmonic number, and t is time. For the purposes of this example, we are not interested in finding every harmonic that composes the complex wave, so we can limit the sum of the time-domain signal to the first 2 harmonics. Now we can apply an fft() to the data (thanks again, @whuber), and proceed to extract the Fourier series sine and cosine coefficients from the FFT object using the formulae $A_h = 2*(ReFFT/N)$ and $B_h = -2*(ImFFT/N)$ , where $ReFFT$ is the real component from the FFT algorithm and $ImFFT$ is the imaginary component. The reconstructed wave kind of resembles the original complex wave, and the individual harmonics can be plotted as functions y1 and y2 in the code below. My full workflow is shown here as a reprex. Open to suggestions or comments on any improvements that can be made!! FFT $ah[41]*cos((2*pi*41*t)/(2001*0.1)) + bh$ bh[41]*sin((2*pi*41*t)/(2001*0.1)) y2 = ah $ah[14]*cos((2*pi*14*t)/(2001*0.1)) + bh$ bh[14]*sin((2*pi*14*t)/(2001*0.1)) y0 = ah $ah[1]*cos((2*pi*2*t)/(2001*0.1)) - bh$ bh[1]*sin((2*pi*2*t)/(2001*0.1)) library(ggplot2) ggplot() + geom_line(mapping = aes(x = t, y = y), color = "black") + geom_line(mapping = aes(x = t, y = y0+y1+y2), color = “blue”) # The above ggplot looks similar to plot(t, y, “l”)
