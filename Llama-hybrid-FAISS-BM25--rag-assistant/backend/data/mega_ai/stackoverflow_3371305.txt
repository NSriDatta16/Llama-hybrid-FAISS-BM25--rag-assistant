[site]: stackoverflow
[post_id]: 3371305
[parent_id]: 3353932
[tags]: 
A big thank you to adamk for providing the guidance necessary to solve this, in the answer he provided. He suggested that I add two CREATE TABLE commands in the DatabaseHelper's onCreate method (on for each of my feeds). However, I needed to abstract things a little more so that I could still use multiple instantiations of the TitlesBrowser activity and so that I wouldn't have to rewrite the helper class every time a new feed came on board. For those interested, here's the solution I came up with. First of all, I removed the CREATE TABLE commands in the DatabaseHelper 's onCreate method. I also removed the private table_name variable (and its associated set method) and I replaced this with a public method called makeTable(): public class DatabaseHelper extends SQLiteOpenHelper { private static final String DATABASE_NAME="baroquedub.db"; public DatabaseHelper(Context context) { super(context, DATABASE_NAME, null, 1); } @Override public void onCreate(SQLiteDatabase db) { } @Override public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) { android.util.Log.w("Baroquedub", "Upgrading database, which will destroy all old data"); db.execSQL("DROP TABLE IF EXISTS mixtapes"); onCreate(db); } public void makeTable(String theTableName){ SQLiteDatabase thisDB = DatabaseHelper.this.getWritableDatabase(); thisDB.execSQL("CREATE TABLE IF NOT EXISTS "+ theTableName + "(_id INTEGER PRIMARY KEY AUTOINCREMENT, " + "id INTEGER, " + "title TEXT, " + "details TEXT, " + "picture TEXT, " + "viewed BOOLEAN DEFAULT '0' NOT NULL);"); } } In TitlesBrowser , rather than instantiating the DatabaseHelper, setting the table name and then reading in the data: db=new DatabaseHelper(this); db.setTableName(theFeedType); dbCursor=db.getReadableDatabase().rawQuery("SELECT _ID, id, title FROM "+theFeedType+" ORDER BY id", null); Instead, I reworked all this so that it would more elegantly handle the creation and loading of the database data from each table: The database Helper is created as before, then the new databaseLoad() method tries to read from the required table and if it can't, it calls the DatabaseHelper's public makeTable() method, before finally trying to load the data again: @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Intent i = getIntent(); theUrl = (String) i.getStringExtra("the_url"); theFeedType = (String) i.getStringExtra("the_feed_type"); // show saved in DB db=new DatabaseHelper(this); databaseLoad(); } private void databaseLoad(){ try { // table exists dbCursor=db.getReadableDatabase() .rawQuery("SELECT _ID, id, title FROM "+theFeedType+" ORDER BY id", null); displayContent(); } catch (Exception e) { // table doesn't exist db.makeTable(theFeedType); databaseLoad(); // try again } }
