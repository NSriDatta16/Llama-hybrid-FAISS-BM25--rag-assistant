[site]: stackoverflow
[post_id]: 1066582
[parent_id]: 1066544
[tags]: 
Interfaces for attackable and pickupable items, perhaps: interface IAttackable { void Attack(); event Killed; } interface ILiftable { void Get(Container putHere); } Then you can do simple type checks to see if you can attack or pick things up. Yes, a mediator object sounds like a good idea... For instance, it might subscribe to all the IAttackable.Killed events and send a signal to the User class when something dies in the same room as them. It might also be a go-between for organising how much damage each takes. Personally, I'd have a Creature class, and have both enemies and users subclass from that, to simplify things a little (and potentially enable enemies to fight amungst themselves if the need should arise).
