[site]: stackoverflow
[post_id]: 4156451
[parent_id]: 
[tags]: 
How to iterate through a container in another class?

I've come across this issue a few times and would like find out if there is a simple method or pattern I can use to solve it. Imagine a tree structure where each node contains a STL container (vector) of pointers to children. I want client code to be able to traverse this tree, and iterate through the child containers to access other parts. My problem is that I want to maintain encapsulation for my nodes while at the same time letting clients easily see all of the children for that node. I also want to make sure that if a client gets a const reference to the root node in the tree, then all access to subsequent parts of the tree are also const. Should I try to make an iterator class for my node type, have a node method return vector iterators , or is there a more elegant pattern I'm missing? Edit: I want to stress again that while I see some good ideas presented, I have containers of pointers to other nodes. Returning a vector ::const_iterator will not prevent clients from calling non-const methods on the node. It only protects the pointers themselves from pointing at different objects.
