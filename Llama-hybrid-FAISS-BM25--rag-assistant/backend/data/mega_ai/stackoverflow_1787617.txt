[site]: stackoverflow
[post_id]: 1787617
[parent_id]: 1786971
[tags]: 
As with any new technology, you'll need to spend some time learning MVC to understand how to use it securely. Since it is more bare-metal than ASP.NET web forms, you do have more opportunity to shoot yourself in the foot if you are not careful. For example: With WebForms you typically do not worry about Cross Site Request Forgery attacks because the mitigation is handled for you (via hidden viewstate data). With ASP.NET MVC you need handle this yourself by embedding a secure token in your form and validating it in your controller... the framework provides helpers (Html.AntiForgeryToken function) but you still need to know when to use it. The automatic Model binding features of MVC are very useful, however you need to understand how binding works to protect against potential malicious data coming into your controller. Again, MVC offers mitigation options (explicit binding), but you still need to know when and how to use it. These are just tools and techniques specific to MVC, every framework will have their own set of them. As far as security is concerned, I think the framework you use is much less important than having a thorough understanding of general security issues as well as your own application's threat model.
