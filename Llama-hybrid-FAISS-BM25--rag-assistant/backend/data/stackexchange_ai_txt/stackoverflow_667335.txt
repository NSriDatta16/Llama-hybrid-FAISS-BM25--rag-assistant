[site]: stackoverflow
[post_id]: 667335
[parent_id]: 667285
[tags]: 
There are a couple different answers to this question, and it is a bit subjective, but some reasons I can think of are: struct s are value-type, class es are reference type. If you're using 16 bytes for total storage, it's probably not worth it to create memory references (4 to 8 bytes) for each one. When you have really small objects, they can often be pushed onto the IL stack, instead of references to the objects. This can really speed up some code, as you're eliminating a memory dereference on the callee side. There is a bit of extra "fluff" associated with classes in IL, and if your data structure is very small, none of this fluff would be used anyway, so it's just extra junk you don't need. The most important difference between a struct and a class , though, is that struct s are value type and class es are reference type.
