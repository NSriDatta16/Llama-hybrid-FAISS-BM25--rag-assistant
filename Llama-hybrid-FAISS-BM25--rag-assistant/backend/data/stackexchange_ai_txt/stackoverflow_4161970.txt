[site]: stackoverflow
[post_id]: 4161970
[parent_id]: 4151552
[tags]: 
I suggest looking at the examples in the javac page, particularly Separating Source Files and Class Files . Splitting out source, class files and libraries is common. See, for example, the Maven Standard Directory Layout and Sun Developers Network - Project Conventions . Most IDEs will encourage a similar layout. Why not do the simple thing and have source files in the same directory as class files? For one thing, if you delete or rename a class, but forget to delete the class file, you can have source code that references the old class. There are a few other gotchas that most of us don't remember because no one puts classes and source files in the same directory. If you are just experimenting with Java and JUnit I strongly recommend an IDE like Eclipse. For automated builds you might want to consider looking into Ant, Maven or Ivy, but for getting started an IDE has a smaller learning curve with a lot of extra benefits (code completion, debugging, a UI for reviewing JUnit test failures...).
