[site]: stackoverflow
[post_id]: 5744776
[parent_id]: 5742692
[tags]: 
Resource files and static data in the app.xaml won't work for you since you want to be able to change these items at a later date since these will be read only. I don't know what you are referring to when you say "lose data" by storing in IsolatedStorage. This is your best bet and is actually really easy to do. Here is an example of saving a simple boolean: private void SaveSettings() { IsolatedStorageSettings settings = IsolatedStorageSettings.ApplicationSettings; settings["VibrationOn"] = VibrationOn; } Then to load it later: private void LoadSettings() { IsolatedStorageSettings settings = IsolatedStorageSettings.ApplicationSettings; bool vo; if (settings.TryGetValue ("VibrationOn", out vo)) VibrationOn = vo; else VibrationOn = true; } You would call your LoadSettings() method in the Application_Launching and Application_Activated events and then your SaveSettings() in the Application_Deactivated and Application_Closing events within your App.xaml.cs. You can also serialize objects or write whole files.
