[site]: stackoverflow
[post_id]: 4850900
[parent_id]: 
[tags]: 
Console/GUI surrogate application via Winapi

Can someone with a good experience with WinAPI guide me in the right direction with app that behaves like this: User starts an app (win32 with entry-point winmain). App connects to the database, selects data, does some internal calculation, if everything is good, launches a new app and exits. Blocking, possibly long action, but service-like, on success there is no GUI. If there are problems (bad connection string, invalid data, etc.), the app creates a window with multiple controls and allows user to fix what he can. If connection string and data is valid, but the application cannot be launched, previous window is not shown, but another one is created, with other set of controls, where user has to do other actions before he can continue. So, what would be the cleanest way to handle such requirements. So far I can imagine following approaches: 1) Create a message loop, and post a WM_CUSTOM_INIT, which causes initial data retrieval attempt, then, post back thread messages on different statuses. 2) Do everything as in console app, first, call database, then, if something goes wrong, create a message loop and window. Exit window, exit message loop, if nothing works, create another window and another message loop. What bugs me is the hidden message loops the database app will create, because of CoInitialize(NULL). And PostThreadMessage, which might fail if some dll decides to throw a MessageBox indicating something. Also, in the first approach, I would be blocking on longer calls, which might lock some other app if it decides to enumerate windows or something with SendMessage/SendMessageTimeout(WM_GETTITLEORSOMETHING). Also the focus will probably be the problem in second case, as the app will loose the foreground privilege in the beginning, and then it wont be able to wake up as foreground again. Overall this seems a bit messy, and the more I think about it, the more I feel I'm missing something, or doing something completely wrong.
