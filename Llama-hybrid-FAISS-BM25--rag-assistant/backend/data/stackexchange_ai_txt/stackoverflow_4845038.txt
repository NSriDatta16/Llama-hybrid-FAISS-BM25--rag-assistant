[site]: stackoverflow
[post_id]: 4845038
[parent_id]: 4842667
[tags]: 
You need to do your homework! Martin Fowler is highly knowledgeable when it comes to UI patterns (and patterns in general). See his article on UI architectures: http://martinfowler.com/eaaDev/uiArchs.html Martin proposed a patten he called presentation model (PM) where the PM is a representation of the view which is independant of the UI controls in the view itself: http://martinfowler.com/eaaDev/PresentationModel.html He mentions how this pattern is easiest to implement with UI frameworks that pemrmit databinding, which reduces the need for 'plumbing' code. Gossman first coined the term Model-View-ViewModel (MVVM), however most consider this to be the same pattern as PM, however, most consider MVVM to be a WPF / Silverlight specific version of PM, i.e. MVVM typically implies further conventions are followed, e.g. use of DataTemplates, ICommand, etc ... Neither pattern are that similar to MVC, if you draw the dependencies to the three components of each pattern, MVC creates a triangle, whereas PM & MVVM are a line. Most experienced developers take a pragmattic approach to patterns. They are a tool, pick the one that best fits your problem, and if you have to bend it a bit to make it fit, go for it. Stop stressing - and write some code ;-)
