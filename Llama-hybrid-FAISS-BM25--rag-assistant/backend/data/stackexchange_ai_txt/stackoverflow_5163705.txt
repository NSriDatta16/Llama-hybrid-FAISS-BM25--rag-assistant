[site]: stackoverflow
[post_id]: 5163705
[parent_id]: 4939688
[tags]: 
The answer is that it is vendor and platform dependent. Here's what the Math class javadoc says on the subject: "Unlike some of the numeric methods of class StrictMath, all implementations of the equivalent functions of class Math are not defined to return the bit-for-bit same results. This relaxation permits better-performing implementations where strict reproducibility is not required." "(By default many of the Math methods simply call the equivalent method in StrictMath for their implementation.) Code generators are encouraged to use platform-specific native libraries or microprocessor instructions, where available, to provide higher-performance implementations of Math methods. Such higher-performance implementations still must conform to the specification for Math." The chances are that a typical JVM will implement the operations as calls to C libraries that in turn use FPU instructions where available. But you can't generalise ... If you want to math operations where the algorithms are tightly specified, you need to use StrictMath rather than Math . The StrictMath versions of the operations are (I understand) guaranteed to give the same answers on any Java platform. The downside is that they are most likely slower.
