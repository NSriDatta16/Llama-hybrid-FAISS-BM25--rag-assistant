[site]: crossvalidated
[post_id]: 623363
[parent_id]: 116363
[tags]: 
Try roerich library for abrupt change detection in time series. It contains several algorithms for change point detection. Each of them returns a score that you can use to characterize the detected changes. Example on a simple case with several abrupt changes: import numpy as np # generate a sample n = 100 X1 = np.random.normal(0, 0.1, size=(n, 1)) X2 = np.random.normal(1, 0.1, size=(n, 1)) X3 = np.random.normal(0, 0.1, size=(n, 1)) X = np.concatenate((X1, X2, X3), axis=0) cps_true = [n, 2*n] Now, apply one of the algorithms in the library: import roerich from roerich.change_point import SlidingWindows # change points detection cpd = SlidingWindows(window_size=20, metric='energy', bootstrap=False, n_runs=1) score, cps_pred = cpd.predict(X) # visualization roerich.display(X, cps_true, score, cps_pred=None) Result: More examples are in this short intro on Medium.
