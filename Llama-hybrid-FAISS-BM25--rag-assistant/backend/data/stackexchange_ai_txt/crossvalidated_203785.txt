[site]: crossvalidated
[post_id]: 203785
[parent_id]: 
[tags]: 
force tgp to use a zero mean GP prior

I'm using the tgp package in R for fully Bayesian Gaussian Process Regression, and it's great! I'm currently performing regression for experimental data coming from turbomachinery testing, and I'm using the bgp function. This function uses a GP prior with either a linear mean or a constant mean (respectively, option meanfn="linear" or meanfn="constant" , which is the default). Note that tgp allows the use of treed Gaussian priors, but for now I'm staying simple, so I'm using the bgp function which doesn't use regression trees, just ordinary Gaussian Processes. I would like my posterior predictive mean to go to zero away from the training set data, for physical reasons. How can I impose that? I was thinking to set the prior over $\beta_0$ to a Normal distribution centered at 0 and with an extremely small variance, but I'm not sure how to do that. From help(btgp) bprior Linear (beta) prior, default is "bflat"; alternates include "b0" hierarchical Normal prior, "bmle" empirical Bayes Normal prior, "b0not" Bayesian treed LMstyle prior from Chipman et al. (same as "b0" but without tau2), "bmzt" a independent Normal prior (mean zero) with inverse-gamma variance (tau2), and "bmznot" is the same as "bmznot" without tau2. The default "bflat" gives an “improper” prior which can perform badly when the signal-to-noise ratio is low. In these cases the “proper” hierarchical specification "b0" or independent "bmzt" or "bmznot" priors may perform better Default is the improper prior "bflat" , which is not what I want. If I use the "b0" hierarchical Normal prior, I guess I cannot set the mean and the variance because they should become additional hyperparameters to be determined in the Bayesian paradigm. Thus, I may go for "bmzt" , the independent Normal prior with zero mean. However, with this prior I cannot set the variance, which is again an hyperparameter. Basically, I want my prior mean function to be zero, so that away from the data, also the posterior predictive mean will be zero. Is there a way to achieve that? EDIT: nobody wants to have a try? :) As my actual case is quite complicated, I wrote a small test case which illustrates the main problem, with the help of the tgp package author. NOTE: unless you have an optimized version of R, you may want to set BTE = c(1000,10000,2) in the call to bgp , or you may have to wait for a very long time to get an answer. # clear the workspace rm(list=ls()) gc() graphics.off() # set seed for reproducibility set.seed(825) # load required packages library(tgp) library(ggplot2) # simulated data x The resulting plot is The mean response is the red line: the blue line is the GP posterior predictive mean, and the green lines give the 90% credible interval.Thus, outside the training data range, the data mean is indeed included in the 90% credible interval, but I would like the predictive mean to converge to it...I think that if I could find a way to set the standard deviation of the prior for $\beta_0$ to some extremely small value, I would achieve what I want, but I don't know how to do it. EDIT2: I can use either a multiplicative (separable) squared exponential kernel or an additive squared exponential kernel. sep_Gaussian_Kernel
