[site]: crossvalidated
[post_id]: 35668
[parent_id]: 
[tags]: 
Density estimation with scaled sinc-like kernels

Given data points $x_i$ in $\mathbb{R}^d$ with function values $f_i$, one can estimate the function at a given $x$ by $\ \ \ \ \text{f}_{est}( x ) = \frac {\sum { w_i f_i }} {\sum { w_i }}$ with $w_i = k( |x - x_i| )$. Here $k$() is a kernel function, often Gaussian. See also Radial basis function . Consider this variant: a) make f$_{est}$() scale-free, the same for $x_i$ at distances 1, 2, 3 $\dots$ as at 10, 20 30 $\dots$, by taking some number Nnear of the points near $x$ and scaling these Nnear distances by their average $Dav$: $\ \ \ \ wscaled_i = k( \frac {|x - x_i|} { Dav } )$ b) use the Catmull-Rom a.k.a. C-R spline kernel: The C-R spline is widely used in signal and image processing because it approximates the sinc kernel, which reconstructs band-limited signals on uniform grids perfectly. (For scattered / non-uniform points, I have no idea.) As you see, C-R is 0 at 1, negative from 1 to 2, then 0 beyond 2. Now if the scaled distances $\frac {|x - x_i|} {Dav}$ are all 1, $\sum {wscaled_i}$ will be 0; hmm. Even if they're all near 1, e.g. $\sim \mathcal{N}(1, \text{small}\ \sigma)$, that's not so hot either. Do scaled sinc-like kernels make sense for density estimation ? Has anyone used them in practice ? (Added): Inverse distance weighting is also scale-free, property a) above. Fwiw, changing the $\tfrac{1}{distance}$ kernel in IDW with python to the M-N spline kernel makes not much of a difference there.
