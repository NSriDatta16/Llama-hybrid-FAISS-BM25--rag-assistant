[site]: stackoverflow
[post_id]: 379829
[parent_id]: 378935
[tags]: 
I think you may be confusing an assembly (which is Microsoft.NET terminology for a DLL or EXE file - a binary package of compiled code) with assembly language (the low-level programming languages based on symbolic representations of underlying machine code instructions) In the context of Microsoft .NET assemblies, logical grouping of modules means organizing your code namespaces according to the role it performs - such as System.Data.SqlClient vs. System.Data.OledbClient - and organized into assemblies (usually .DLL files) so that each assembly forms a cohesive, clearly-defined collection of functions and classes. For example, all Microsoft's library code for dealing with HTTP, HTML and other Web technology is packaged in the System.Web DLL - and within this DLL there are multiple namespaces so you can selectively including various parts of this technology. This minimises the number of physical DLL files you need to manage, whilst keeping the various responsibilities within those DLLs clearly separated using namespaces.
