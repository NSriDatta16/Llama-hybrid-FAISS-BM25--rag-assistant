[site]: stackoverflow
[post_id]: 4465647
[parent_id]: 4465297
[tags]: 
Welcome to a long, long journey in working with web applications. The best thing to do with what information you've provided is to start any of the great tutorials available on dynamic web site development. Set realistic goals for learning PHP programming (since that's the language you stated interest in) and understand at the outset that this is going to take a HUGE investment of time and effort to learn and do effectively. But to give a basic rundown on what makes a dynamic site: Dynamic websites (in the smaller context) and web applications (in the larger context) rely on some kind of persistence layer (usually a database like MySql) to store data and user input, since the basic HTTP environment is stateless and does not provide any provisions for remembering and maintaining user content. So, some kind of 'display tier' presents a form that gathers user input, whether this be a login, editing a page, making a blog post, etc. This is sent via HTTP to the 'program tier' that sanitizes and secures this input and saves it down to a database or flat file. On retrieval, the program tier is also responsible for calling this data back up from its storage using any set of program specified identifiers (in databases these usually take the form of primary keys.) Most of these kinds of applications will be built with some kind of framework that follows one of the well-known programming structures. One of the most common for web apps is called Model-View-Controller. This is because the way this architecture seperates these tiers closely resembles the flow of a typical user request in a web environment (view - interface for the user, controller - program tier, model - a programmed representation of the data linked up to the database to implement its properties). Keep in mind this is all just the theory in a summary. You will very likely start out writing simple procedural (top to bottom scripts) programs that run basic commands as you increase your vocab of PHP. If you are seriously interested in learning this as a possible career or a vehemently pursued hobby, I suggest searching up some basic PHP CMS tutorials to get a feel for how the database and PHP work together. If you are just trying to get together a simple, one time content managed solution then I really must suggest you utilize some of the great open-source solutions available like Wordpress. Either way I wish you the best of luck in your pursuit!
