[site]: crossvalidated
[post_id]: 643111
[parent_id]: 641401
[tags]: 
I start by quoting relevant information provided in the comments: This is an example of how the dataset looks. plant.number is plant ID (specifically I had the plants numbered based on when I treated them, not collected them, but that is a minor difference). I treated multiple flowers on one plant individual when possible, because I expect high mortality rates. This is why I sometimes have multiple of the same elevation, species and plant.number, for example in the data provided multiple instances of elevation: 2300, species: inermis, plant.number: 1. I had two different seedset from two different treated flowers on the same plant individual, a pseudoreplication data #> seedset elevation species plant.number #> 1 0 2300 burtonii 1 #> 2 0 2300 burtonii 1 #> 3 0 3500 burtonii 1 #> 4 3 3500 burtonii 4 #> 5 0 2300 inermis 1 #> 6 5 2300 inermis 1 #> 7 2 2300 inermis 2 #> 8 2 2800 inermis 1 #> 9 0 2800 inermis 2 #> 10 0 2800 inermis 4 #> 11 2 2300 purpureus 1 #> 12 4 2300 purpureus 3 #> 13 0 2800 purpureus 1 #> 14 4 2800 purpureus 1 #> 15 5 2800 purpureus 2 #> 16 13 3500 purpureus 2 Given this information, I add a column plant.id to uniquely identify plants across the elevations. (I just discovered the handy dplyr::consecutive_id function to assign group ids to rows with the same value in one or more columns.) data |> mutate( plant.id = consecutive_id(elevation, species, plant.number) ) #> seedset elevation species plant.number plant.id #> 1 0 2300 burtonii 1 1 #> 2 0 2300 burtonii 1 1 #> 3 0 3500 burtonii 1 2 #> 4 3 3500 burtonii 4 3 #> 5 0 2300 inermis 1 4 #> 6 5 2300 inermis 1 4 #> 7 2 2300 inermis 2 5 #> 8 2 2800 inermis 1 6 #> 9 0 2800 inermis 2 7 #> 10 0 2800 inermis 4 8 #> 11 2 2300 purpureus 1 9 #> 12 4 2300 purpureus 3 10 #> 13 0 2800 purpureus 1 11 #> 14 4 2800 purpureus 1 11 #> 15 5 2800 purpureus 2 12 #> 16 13 3500 purpureus 2 13 The plant.number column can now be dropped. As an aside, I suspect that non-consecutive plant.number means that a flower was treated but died and this information could be of interest in itself, eg. to investigate whether the mortality rate varies by elevation and/or species. The question states that species is to be treated as a random factor because the seven species were randomly chosen. The individual plants were randomly chosen as well. So the random structure is "plants nested within species". m1 Let's extract the random effects from the fitted model. Here we are not interested in the estimates (we are working with only a sample of the data) but in what the random effects represent. ranef(m1) #> $`plant.id:species` #> (Intercept) #> 1:burtonii -0.24585008 #> 2:burtonii -0.33057256 #> 3:burtonii 0.23505749 #> 4:inermis 0.43947808 #> 5:inermis 0.18659931 #> 6:inermis 0.05404257 #> 7:inermis -0.33313993 #> 8:inermis -0.33313993 #> 9:purpureus -0.06814540 #> 10:purpureus 0.24836947 #> 11:purpureus -0.35289996 #> 12:purpureus 0.15879164 #> 13:purpureus 0.46953209 #> #> $species #> (Intercept) #> burtonii -0.61197697 #> inermis 0.02481162 #> purpureus 0.81685544 We have one random effect for each species and for each plant (nested within species). Intuitively, this makes sense because a species of plants can grow at different elevations but an individual plant grows at one particular spot, which is of course at one particular elevation. It can be instructive to fit the model with plant.number instead of plant.id and look at the random effect estimates again. In that case, glmmTMB assumes — incorrectly — that the same plant can be observed at more than one elevation. The OP has a follow-up question: Why does the "species" also not need to be elevation specific in the same way as plant.id, since the same species are in multiple elevations? This could be a reasonable thing to do. It would have the consequence of modeling the random variability within species that is due to elevation in addition to the fixed elevation effect . It may help to fit that model and look at the variance components. m2 print(VarCorr(m1), comp = "Variance") #> Conditional model: #> Groups Name Variance #> plant.id:species (Intercept) 0.27235 #> species (Intercept) 0.48825 print(VarCorr(m2), comp = "Variance") #> Conditional model: #> Groups Name Variance #> plant.id:elevation:species (Intercept) 0.12200 #> elevation:species (Intercept) 0.17988 #> species (Intercept) 0.50111 The "plant within species" variance is (approximately) decomposed into "elevation within species" and "plant within elevation within species" variance. This analysis of variance looks at an additional aspect of how the outcome varies with elevation that could complement the analysis of its fixed (ie. average across species) effect.
