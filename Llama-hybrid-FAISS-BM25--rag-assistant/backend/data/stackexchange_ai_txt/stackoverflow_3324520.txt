[site]: stackoverflow
[post_id]: 3324520
[parent_id]: 3324484
[tags]: 
One approach I found to work is to specifically describe the dependencies of the install rule. For each file we need to construct a rule such as: trg_dir/my_file: my_file install $ To do this, however some gmake magic is needed: TRG := /trg BIN_TRG := $(TRG)/bin ETC_TRG := $(TRG)/etc BIN_FILES := b1 b2 b3 ETC_FILES := e1 e2 e3 INSTALLS := $(addprefix $(BIN_TRG)/,$(BIN_FILES)) \ $(addprefix $(ETC_TRG)/,$(ETC_FILES)) install: $(INSTALLS) define install_rule $(1)/$(2): $(2) install $(2) $(1)/$(2) endef $(foreach file,$(BIN_FILES),$(eval $(call install_rule,$(BIN_DIR),$(file)))) $(foreach file,$(ETC_FILES),$(eval $(call install_rule,$(ETC_DIR),$(file)))) .PHONY: install I feel that this code need some explanation, this is also my major gripe with it - it is more complicated then such a seemingly common task should be: The install: target stays phony, but it will now only be used to check that the individual install rules, are up-to-date. The rules are generated with evaluation of the result of calling a macro definition of the individual rule. We use a $(foreach ...) function to iterate over each file, and gives the proper parameters when $(call ...) ing the install_rule . I put the question and answer here, although I seemingly solved it already, because I am not happy with this solution. Any more elegant one will be eagerly accepted.
