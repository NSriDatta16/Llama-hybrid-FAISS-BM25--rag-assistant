[site]: stackoverflow
[post_id]: 2079765
[parent_id]: 2069326
[tags]: 
NSMutableArray *newUrls = [NSMutableArray arrayWithArray: [self urls]]; [newUrls addObject: newurlimadding]; [self setUrls: [NSArray arrayWithArray: newUrl]]; What did you create newUrls for if not to set it as the new value of urls ? Besides that, there are a couple of things you're doing wrong: No model objects. Bindings hates this. Unless your table view exists solely to display the different parts of the URL (scheme, host, path, etc.), each in one column, you're not giving Bindings what it wants. Pay attention to the fields in the Bindings Inspector. Note that there are two: Controller Key and Model Key Path. They're exactly what they say on their tins: The Controller Key is the key for a property of the controller, which should provide model objects. The Model Key Path is the key path for one or more properties in the model, which usually should provide value objects, such as strings and numbers. You probably need to create a model class and make the URL a property of that class. I'd guess that you have other objects, perhaps in parallel arrays, that you can move to properties of the model class. Do that, so that you're working with Bindings instead of against it. Not using array accessors. You're just setting the whole array at once, which is inefficient and may cause display problems (such as selection highlights disappearing). Implement and use array accessors for this array property. Accessorizer can help you here. I actually have no idea whether this will fix your crash because you haven't told us anything about it. You should edit your question to include any exception messages or other crash-describing output, which you'll find in the Run Log/Debugger Console. Also, since the type of urls can be mutable, you should set it to copy , not retain .
