[site]: stackoverflow
[post_id]: 5067053
[parent_id]: 5066925
[tags]: 
You should put the elements in an array, run a sort function over the elements, and re-append the sorted elements to the container. // container is var container = document.getElementById("list"); // all elements below var elements = container.childNodes; // temporary storage for elements which will be sorted var sortMe = []; // iterate through all elements in for (var i=0; i 1) { /* * prepare the ID for faster comparison * array will contain: * [0] => number which will be used for sorting * [1] => element * 1 * something is the fastest way I know to convert a string to a * number. It should be a number to make it sort in a natural way, * so that it will be sorted as 1, 2, 10, 20, and not 1, 10, 2, 20 */ sortMe.push([ 1 * sortPart[1] , elements[i] ]); } } // sort the array sortMe, elements with the lowest ID will be first sortMe.sort(function(x, y) { // remember that the first array element is the number, used for comparison return x[0] - y[0]; }); // finally append the sorted elements again, the old element will be moved to // the new position for (var i=0; i You can test this code at http://jsfiddle.net/4gkDt/1/
