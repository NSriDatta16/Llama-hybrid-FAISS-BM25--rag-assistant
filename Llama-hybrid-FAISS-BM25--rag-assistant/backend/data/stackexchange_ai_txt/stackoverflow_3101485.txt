[site]: stackoverflow
[post_id]: 3101485
[parent_id]: 3101386
[tags]: 
Option 1 : It's a good option if you add some libraries to it to avoid re-programming what it has been programmed already (see out of scope paragraph) You don't need to maintain a web.xml for every Servlet. You must maintain one web.xml per application running in Tomcat. Strict types = less bugs. What's the problem with restarting tomcat? You develop with Eclipse for example, who has a server integrated so you don't need to deploy to see your changes and when you reach certain milestone or release, you deploy to production server. Option 2: I have no experience whatsoever with it. But slow? Don't think so. Difficult to debug? You come from PHP...I'm sure you find it easier :). Option 3: Spring is a huge factory with tons of various tools and items. Then you take that items and construct a bike or a tank out of them. (Thanks to Max comments) Out of your scope : JSF is on top of JSP so does a lot of stuff for you, and helps you develop a MVC pattern. It provides you with a nice framework, which is easy to understand if you already know JSP. I'd give it a second try. Also consider using GWT , maybe is what you are looking for. My two cents: I'd go with Hibernate and JSF (and Richfaces) or GWT. You'll learn, you'll have fun, you'll get what you want. Grails and Groovy has become really popular lately. I'm sure if you choose them you'll learn and have fun too.
