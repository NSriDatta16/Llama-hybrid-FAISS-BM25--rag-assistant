[site]: stackoverflow
[post_id]: 2036257
[parent_id]: 2035136
[tags]: 
Actually, if you were looking to type objects, place the type at the method level like: public T GetValue (string sessionKey) { } Class level is more if you have the same object in session, but session can expand to multiple types. I don't know that I would worry about controlling the session; I would just let it do what it's done for a while, and simply provide a means to extract and save information in a more strongly-typed fashion (at least to the consumer). Yes, indexes wouldn't work; you could create it as an instance instead, and make it static by: public class SessionManager { private static SessionManager _instance = null; public static SessionManager Create() { if (_instance != null) return _instance; //Should use a lock when creating the instance //create object for _instance return _instance; } public object this[string key] { get { .. } } } And so this is the static factory implementation, but it also maintains a single point of contact via a static reference to the session manager class internally. Each method in sessionmanager could wrap the existing ASP.NET session, or use your own internal storage.
