[site]: stackoverflow
[post_id]: 5505634
[parent_id]: 5504504
[tags]: 
No, nothing supports this out of the box with Magento, and there's no module I know of that offers this functionality. You could implement a version of this if you wanted to. All of Magento's config files are (or should be, don't hold me to it) loaded via the Mage_Core_Model_Config class. #File: app/code/core/Mage/Core/Model/Config.php public function loadModulesConfiguration($fileName, $mergeToObject = null, $mergeModel=null) { $disableLocalModules = !$this->_canUseLocalModules(); if ($mergeToObject === null) { $mergeToObject = clone $this->_prototype; $mergeToObject->loadString(' '); } if ($mergeModel === null) { $mergeModel = clone $this->_prototype; } $modules = $this->getNode('modules')->children(); foreach ($modules as $modName=>$module) { if ($module->is('active')) { if ($disableLocalModules && ('local' === (string)$module->codePool)) { continue; } $configFile = $this->getModuleDir('etc', $modName).DS.$fileName; if ($mergeModel->loadFile($configFile)) { $mergeToObject->extend($mergeModel, true); } } } return $mergeToObject; } You could create a class rewrite for this model that would alter the $filename based on environment, and then load the appropriate configuration file. While it's an interesting idea, I don't think it's a good one. Differences in environment is something that should be handled on a deployment level, and a module's config.xml file shouldn't have any environment specific information in it anyways. Environment specific information is kept in one location app/etc/local.xml Your build/deploy system should modify local.xml as needed depending on which environment you're deploying to.
