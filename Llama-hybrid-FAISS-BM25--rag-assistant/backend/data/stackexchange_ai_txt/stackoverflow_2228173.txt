[site]: stackoverflow
[post_id]: 2228173
[parent_id]: 1924216
[tags]: 
A WSDL is effectively your published SOAP interface of your web service. Many clients use this to generate their client proxies that expose all your webservice methods in their programming language of choice. Most of these code-generated clients are very fragile and will choose to throw an exception if they see an element they don't recognize (i.e. its not in the WSDL) rather than ignore it. Some are more relaxed and it is really up to the client technology they use i.e. Microsoft's new DataContract's have IExtensibleData interface on their clients to specifically hold data they don't recognize so they will largely ignore unknown elements. SOAP and code-generated client proxies lends itself to these kind of problems because they generate clients that want to understand 'the entire schema' rather than just the bits they are interested in. The alternative is for them to use an Xml Parser and just pull out the bits that they need. If your web service is under development or constant change then SOAP is really not your best choice as it will mean with every change they will have to regenerate, rebuild and redeploy their service clients. Depending on your situation you may want to consider providing REST+POX (Plain Old Xml) web services instead as its simpler to parse as it doesn't have the overhead of SOAP, can be called via a normal URL and by consumed by environments that don't have a SOAPClient library (e.g. directly in a browser, using AJAX)
