[site]: stackoverflow
[post_id]: 1076835
[parent_id]: 1075628
[tags]: 
I find it helps to think of these problems as a landscape, where you're trying to find the lowest point. Methods like genetic algorithms are used when the landscape is too large to just test all the points, and the "shape" of the landscape is such that methods like gradient-descent will get you stuck in local minima. One good example is Rastrigin's function ( image ref ): (source: scientific-computing.com ) : Your choices are: Generation size: Too large: you're going to have a long epoch time, restricting how many chances each individual has to explore it's neighbourhood. Too small: you don't get good coverage of the search space. Mutation rate: Too high: you risk the individuals "jumping" over a solution they were close to. Too low: they're all going to get stuck in local minima. So it really does depend on your own particular search space. Experiment with the parameters and try to find the optimal combination. I would agree that using another GA to optimise the parameters is not going to solve the problem.
