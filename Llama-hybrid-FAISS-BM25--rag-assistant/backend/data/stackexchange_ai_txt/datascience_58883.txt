[site]: datascience
[post_id]: 58883
[parent_id]: 58881
[tags]: 
I suggest you to use Stanford NLP tools . They have a library specifically for NER . They are all written in Java, but nltk provides a Python wrapper for them. You can call it with: from nltk.tag.stanford import StanfordNERTagger You must have Java installed of course. As far as I understood, Stanford modules are the best publicly available NLP tools around. It's worth to give it a try. There is also an independent python module called stanfordnlp that contains a NER tagger. Alternatively, you might try with Coreference Resolution models. They are made available from library from Stanford CoreNLP , another free software from Stanford. All stanford tools are very good, but surprisingly heavy files. spacy also have a coreference sub-module called NeuralCoref 4.0 based on LSTM models. Their developers say it's state-of-the-art. I never tried it but I'll definitely will, since it looks promising. UPDATE: Library neuralcoref is absolutely fantastic for coreference resolution tasks. It's developed by Huggingface (!) and based on SpaCy. It is a very powerful tool, quick and easy to use, and I strongly suggest to use that insteaf of Stanford's CoreNLP.
