[site]: stackoverflow
[post_id]: 835063
[parent_id]: 
[tags]: 
How can I get to my anonymous arrays in Perl?

The following code generates a list of the average number of clients connected by subnet. Currently I have to pipe it through sort | uniq | grep -v HASH . Trying to keep it all in Perl, this doesn't work: foreach $subnet (keys %{keys %{keys %days}}) { print "$subnet\n"; } The source is this: foreach $file (@ARGV) { open(FH, $file) or warn("Can't open file $file\n"); if ($file =~ /(2009\d{4})/) { $dt = $+; } %hash = {}; while( ) { @fields = split(/~/); $subnet = $fields[0]; $client = $fields[2]; $hash{$subnet}{$client}++; } close(FH); $file = "$dt.csv"; open(FH, ">$file") or die("Can't open $file for output"); foreach $subnet (sort keys %hash) { $tot = keys(%{$hash{$subnet}}); $days{$dt}{$subnet} = $tot; print FH "$subnet, $tot\n"; push @{$subnet}, $tot; } close(FH); } foreach $day (sort keys %days) { foreach $subnet (sort keys %{$days{$day}}) { $tot = $i = 0; foreach $amt (@{$subnet}) { $i++; $tot += $amt; } print "$subnet," . int($tot/$i) . "\n"; } } How can I eliminate the need for the sort | uniq process outside of Perl? The last foreach gets me the subnet ids which are the 'anonymous' names for the arrays. It generates these multiple times (one for each day that subnet was used).
