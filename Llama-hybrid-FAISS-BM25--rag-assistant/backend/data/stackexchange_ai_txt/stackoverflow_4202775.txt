[site]: stackoverflow
[post_id]: 4202775
[parent_id]: 4202687
[tags]: 
There's very few reasons to use assembly language these days, even low-level constructs like SSE and the older MMX have built-in intrinsics in both gcc and MSVC (icc too I bet but I never used it). Honestly, optimizers these days are so insanely aggressive that most people couldn't match even half their performance writing code in assembly. You can change how data is ordered in memory (for locality) or tell the compiler more about your code (through #pragma ), but actually writing assembly code... doubt you'll get anything extra from it. @VJo, note that using intrinsics in high level C code would let you do the same optimizations, without using a single assembly instruction. And for what it's worth, there have been discussions about the next Microsoft C++ compiler, and how they'll drop inline assembly from it. That speaks volumes about the need for it.
