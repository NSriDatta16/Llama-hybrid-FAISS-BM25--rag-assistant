[site]: stackoverflow
[post_id]: 4858880
[parent_id]: 
[tags]: 
Java/ JDBC – Multi Parameter Search Best Practice

I’m using the following code to generate a search results from a relational DB, depending on the multiple (Optional) search parameters from the web based client. Presently I’m using “ java.sql.Statement ” to achieve the functionality but I need the same to be achieved using “ java.sql.PreparedStatement ” in order to prevent SQL injections. Let me know a best practice to change the code E.g. User inputs from web based client. param1 - Optional param2 - Optional dateParamFr - Optional dateParamTo - Optional Pseudo code of SQL patterns depending on the search parameters as follows IF (WITHOUT ANY SEARCH PARAMETER){ SELECT * FROM TEST_TABLE; } ELSE IF(WITH param1){ SELECT * FROM TEST_TABLE WHERE COLUMN1= param1; } ELSE IF(WITH param1 & param2){ SELECT * FROM TEST_TABLE WHERE COLUMN1= param1 AND COLUMN2= param2 } SO ON ……… Following is the fragment of Java code in my EJB /* NOTE : Hashtable pSearchParam is a method parameter */ Connection cnBOP = null; Statement stmt = null; StringBuffer sb = new StringBuffer(""); try { cnBOP = jdbcBOP.getConnection(); // DataSource jdbcBOP stmt = cnBOP.createStatement(); /* ######################## SQL BODY ######################################*/ sb.append("SELECT COLUMN1, COLUMN2, DATE_COLUMN "); sb.append("FROM TEST_TABLE "); /* ######################## SQL WHERE CLAUSE ##############################*/ if(pSearchParam.size()>=1){ sb.append("WHERE "); Enumeration e = pSearchParam.keys(); int count =0; while(e.hasMoreElements()){ if (count >=1) sb.append("AND "); String sKey = (String) e.nextElement(); if (sKey.equals("param1")) sb.append ("COLUMN1 ='"+pSearchParam.get(sKey)+"' "); else if (sKey.equals("param1")) sb.append ("COLUMN2 ='"+pSearchParam.get(sKey)+"' "); else if (sKey.equals("dateParamFr")) sb.append ("DATE_COLUMN >= TO_DATE('"+pSearchParam.get(sKey)+" 00:00:00','DD/MM/YYYY HH24:MI:SS') "); else if (sKey.equals("dateParamTo")) sb.append ("DATE_COLUMN
