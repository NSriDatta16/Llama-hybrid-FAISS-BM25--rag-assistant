[site]: stackoverflow
[post_id]: 2095095
[parent_id]: 
[tags]: 
jQuery-UI Dialog Memory Leaks

I'm working with IE7 and some jQuery dialogs and I'm running into about a 6meg leak per dialog opened. I'm assuming it's to do with closures, but so far everything I've done to remove them haven't helped. At this point I think I've taken care of all the closures except on for a callback function I pass in, but it's still leaking 6 megs even after the dialog is closed and removed. The relevant source code is: function DialogDestroyAndRemove(event) { $(event.target).dialog("destroy").remove(); } function CallbackAndCloseDialog(event) { if (event.data.callback != undefined) { event.data.callback(event.data.callbackResponse); } $("#" + event.data.dialogId).unbind('dialogbeforeclose').dialog('close'); } // alert dialog modal with ok button function AlertDialog(dialogTitle, dialogText, callbackFunction) { // dynamically generate and add a div so we can create the pop-up $('body').append(" " + dialogText + " "); // define/configure the modal pop-up $("#alertDialog").dialog({ draggable: false, resizable: false, modal: true, autoOpen: true, open: function() { $("#alertDialog").parents('.ui-dialog-buttonpane button:eq(0)') .focus() //focus so the button is highlighted by default .bind('click', { callback: callbackFunction, callbackResponse: 'OK', dialogId: 'alertDialog' }, CallbackAndCloseDialog); }, overlay: { backgroundColor: '#000', opacity: 0.5 }, buttons: { 'OK': function() { } } }).bind('dialogbeforeclose', function(event, ui) { // Close (X) button was clicked; NOT the OK button if (callbackFunction != undefined) { callbackFunction('cancel'); } callbackFunction = null; }).bind('dialogclose', DialogDestroyAndRemove); } One thing I did above that I'm not sure if it's needed was instead of defining the callback for the OK button when it's defined (and therefore having a closure since it's referencing the callback) to define it using a .bind once the dialog is open. I was hoping that being able to pass the callback as part of the data to the click event might help remove the closure. Any ideas what else I can change to get rid of this leak?
