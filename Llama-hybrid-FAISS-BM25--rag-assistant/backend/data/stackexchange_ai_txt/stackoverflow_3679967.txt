[site]: stackoverflow
[post_id]: 3679967
[parent_id]: 
[tags]: 
Calling a Visual Basic DLL in C++

I have acquired a DLL that was created in Visual Basic from a third party vendor( Sensor DLL.dll ). This DLL contains functions for talking to a sensor, and I need to call these functions from a Visual C++ program I am writing. The vendor will not provide a header file, and I do not know Visual Basic. If I had a header file this would be a 15 minute project... instead I am still struggling with it a week later. Please Help! I am told one function ( Get_Data ) in the DLL is of the form: Public Function Get_Data(ByVal Handle As String) As String I have tried several methods for calling this Get_Data function with no success: Method 1) the DllImport attribute #using using namespace System::Runtime::InteropServices; namespace Sensor { [DllImport("Sensor DLL.dll", EntryPoint = "Get_Data", CharSet = System::Runtime::InteropServices::CharSet::Unicode)] BSTR Get_Data(BSTR Handle); } //then I call the function Sensor::Get_Data(Handle); This method seems to be the closest I have gotten to a sloution. It compiles, but gives the following error when it runs: An unhandled exception of type 'System.EntryPointNotFoundException' occurred Additional information: Unable to find an entry point named 'Get_Data' in DLL 'Sensor DLL.dll'. I have tried various datatype combinations/permutations besides BSTR including BSTR*, wchar_t, int, etc. It is possible that I missed one, but each datatype returns the same error. Method 2) dllimport storage-class attribute __declspec(dllimport) BSTR Get_Data(BSTR Handle); //then I call the function Get_Data(Handle); This method is confusing to me because I don't specify the DLL I want to import from. I have copied the DLL to the project folder and I have added it to the project manually, so hopefully that means it can be found. When I compile the linker returns the following errors: error LNK2028: unresolved token (0A00034F) "wchar_t * __cdecl Get_Data(wchar_t *)" (?Get_Data@@$$FYAPA_WPA_W@Z) referenced in function "int __cdecl main(void)" (?main@@$$HYAHXZ) error LNK2019: unresolved external symbol "wchar_t * __cdecl Get_Data(wchar_t *)" (?Get_Data@@$$FYAPA_WPA_W@Z) referenced in function "int __cdecl main(void)" (?main@@$$HYAHXZ) I suspected maybe this meant I should be using wchar_t or wchar_t* instead of BSTR, but changing to either datatype results in the same error. Method 3) GetProcAddress typedef BSTR (*Get_Data_Ptr)(BSTR Handle); HINSTANCE LoadMe; LoadMe = LoadLibraryA("Sensor DLL.dll"); if (!LoadMe) std::cout This will compile, but gives the following error when run: An unhandled exception of type 'System.AccessViolationException' occurred Additional information: Attempted to read or write protected memory. This is often an indication that other memory is corrupt. When I mouse over the various parts of this code in debug mode it seems that, like the first method, it was also unable to find the 'Get_Data' entry point in the DLL. Has anyone called functions from a VB DLL using C++ when you haven't made the DLL yourself and you don't have .idl files, etc? Does anyone have a working example like this you could share? Thanks!
