[site]: stackoverflow
[post_id]: 4306759
[parent_id]: 
[tags]: 
XNA ActiveX Control - Cannot find custom ContentReader when running in IE

What I Have MyGraphicsLibrary.Content.Pipeline.dll public class MyModelProcessor { } public class MyModelContent { } [ContentTypeWriter] public class MyModelContentWriter : ContentWriter { protected override void Write(ContentWriter output, MeshDataContent value) { value.Write(output); } public override string GetRuntimeType(TargetPlatform targetPlatform) { return "MyGraphicsLibrary.MyModel, MyGraphicsLibrary"; } public override string GetRuntimeReader(TargetPlatform targetPlatform) { return "MyGraphicsLibrary.MyModelReader, MyGraphicsLibrary"; } } MyGraphicsLibrary.dll: Strongly Named public class GraphicsDeviceControl : System.Windows.Forms.Panel { } public class MyModel { } public class MyModelReader : ContentTypeReader { } GraphicsDeviceControl is based on this XNA sample . ActiveXApplication.dll: Strongly Named, Registered for COM Interop [Guid("")] [ProgId("ActiveXApplication.ActiveXControl")] [ComVisible(true)] public class ActiveXControl : System.Windows.Forms.UserControl { } public class MyGraphicsDeviceControl : MyGraphicsLibrary.GraphicsDeviceControl { } ActiveXControl is the main UI for the application I'm embedding in IE7/8 with the tag. The site the control is hosted on has been added to Trusted Sites. MyGraphicsDeviceControl loads models based on information passed to ActiveXControl from the web page. The models loaded were created from FBX models with MyModelProcessor and written with MyModelContentWriter . I am currently using XNA 3.0. The Problem When MyGraphicsDeviceControl executes the following line: this.contentManager.Load ("modelName") I receive the following error: Error loading "pathToModel\modelName". Cannot find ContentTypeReader MyGraphicsLibrary.MyModelReader, MyGraphicsLibrary. This error does not occur when using ActiveXControl in a Windows Forms application. When using the default XNA model classes, the error does not occur (I'm trying to use the custom model class rather than abusing the Tag property of the XNA Model class). Using Reflector, I traced through ContentManager.Load looking for the source of the exception and found it to happen when XNA attempts to call Type.GetType() using the string defined in MyModelContentWriter.GetRuntimeReader() which returns null. The Question Any thoughts as to why Type.GetType() is returning null when trying to load MyModelReader and not XNA's ModelReader when running in IE? UPDATE: After looking into the issue some more, I was able to find a way to get my custom model class to load when running in IE. By adding a handler for AppDomain.AssemblyResolve , I was able to return the assembly containing MyModelReader which allowed the Type.GetType() call in the XNA code to succeed. Based on the information I read about Reflection and assembly loading, I assume I was able to use the XNA model class without a problem because the XNA assemblies are registered in the GAC where as mine is not. However, MyGraphicsLibrary.dll was already loaded in the AppDomain , so I'm not entirely sure why it was unable to resolve the assembly. I assume it has something to do with the context in which it was loaded, but I'm not sure which context the assemblies are loading in when running in IE.
