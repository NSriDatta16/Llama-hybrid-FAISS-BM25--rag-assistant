[site]: stackoverflow
[post_id]: 2307407
[parent_id]: 2307291
[tags]: 
The getHeaderField() method doesn't work for me You're asking this in the context of java.net.URLConnection , is it? No, obtaining the raw HTTP response headers is not possible with URLconnection . You'll need to fall back to low-level Socket programming. Here's an SSCCE , just copy'n'paste'n'run it. package com.stackoverflow.q2307291; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.net.Socket; public class Test { public static void main(String[] args) throws IOException { String hostname = "stackoverflow.com"; int port = 80; Socket socket = null; PrintWriter writer = null; BufferedReader reader = null; try { socket = new Socket(hostname, port); writer = new PrintWriter(new OutputStreamWriter(socket.getOutputStream())); writer.println("GET / HTTP/1.1"); writer.println("Host: " + hostname); writer.println("Accept: */*"); writer.println("User-Agent: Java"); // Be honest. writer.println(""); // Important, else the server will expect that there's more into the request. writer.flush(); reader = new BufferedReader(new InputStreamReader(socket.getInputStream())); for (String line; (line = reader.readLine()) != null;) { if (line.isEmpty()) break; // Stop when headers are completed. We're not interested in all the HTML. System.out.println(line); } } finally { if (reader != null) try { reader.close(); } catch (IOException logOrIgnore) {} if (writer != null) { writer.close(); } if (socket != null) try { socket.close(); } catch (IOException logOrIgnore) {} } } } To avoid SO being overloaded by everyone trying this snippet, here's how the output will look like: HTTP/1.1 200 OK Cache-Control: private Content-Type: text/html; charset=utf-8 Expires: Sun, 21 Feb 2010 20:39:08 GMT Server: Microsoft-IIS/7.5 Date: Sun, 21 Feb 2010 20:39:07 GMT Connection: close Content-Length: 208969 To learn more about sending HTTP requests the low-level way, read the HTTP specification . However, you probably want to make use of getHeaderFields() method instead to retrieve a header with multiple values. The getHeaderField() namely only returns the last value, as per the linked API doc. List cookies = connection.getHeaderFields().get("Set-Cookie");
