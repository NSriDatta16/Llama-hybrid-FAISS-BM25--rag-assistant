[site]: datascience
[post_id]: 29902
[parent_id]: 
[tags]: 
How to concatenate feature vectors of different dimensions?

I have been using different deep learning models and extracting features from different layers for the given images. My code goes like this: #load libraries from keras import applications from keras.preprocessing import image from keras.applications.resnet50 import preprocess_input from keras.models import Model import numpy as np #declare models model1 = applications.VGG16(weights='imagenet', include_top=False) model1.summary() model1 = Model(inputs=model1.input, outputs=model1.get_layer('block5_conv3').output) model1.summary() img_path = 'elephant.jpg' img = image.load_img(img_path, target_size=(100,100)) x = image.img_to_array(img) x = np.expand_dims(x, axis=0) x = preprocess_input(x) block5_conv3_features = model1.predict(x) #dimensions (1,6,6,512) model2 = applications.VGG19(weights='imagenet', include_top=False) model2.summary() model2 = Model(inputs=model2.input, outputs=model2.get_layer('block2_conv1').output) model2.summary() img_path = 'elephant.jpg' img = image.load_img(img_path, target_size=(100,100)) x = image.img_to_array(img) x = np.expand_dims(x, axis=0) x = preprocess_input(x) block2_conv1_features = model2.predict(x) #dimensions (1,50,50,128) model3 = applications.ResNet50(weights='imagenet',include_top=False) model3.summary() model3 = Model(inputs=model3.input, outputs=model3.get_layer('avg_pool').output) model3.summary() img_path = 'elephant.jpg' img = image.load_img(img_path, target_size=(224, 224)) x = image.img_to_array(img) x = np.expand_dims(x, axis=0) x = preprocess_input(x) preds = model3.predict(x) #dimensions (1,1,1,248) I'm getting feature vectors of dimensions (1,6,6,512), (1,50,50,128) and (1,1,1,128) from three different models. How can I concatenate these feature vectors in Python?
