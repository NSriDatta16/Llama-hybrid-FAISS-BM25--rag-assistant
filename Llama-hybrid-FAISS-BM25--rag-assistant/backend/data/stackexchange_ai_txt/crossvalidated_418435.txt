[site]: crossvalidated
[post_id]: 418435
[parent_id]: 
[tags]: 
Possible that one model is better than two?

I'm trying to predict fantasy_points for individual Basketball players in upcoming games. The formula to calculate a player's fantasy_points is: fantasy_points = (1 * points_scored) + (1.5 * assists) So if Player A scores 10 points and 4 assists: Player A fantasy_points = (1 x 10) + (1.5 x 4) = 16 I have a few seasons worth of player data. My data is organized so that one row represents a player's performance in one game. This includes explanatory variables that are knowable before the game (player age, past performance variables, opponent strength) and the target variables points_scored , assists and fantasy_points . | player | explanatory variables | points_scored | assists | fantasy_points | |--------|-----------------------|---------------|--------------|---------------------:| | A | ... | 10 | 4 | 16 | | B | ... | 3 | 10 | 18 | | C | ... | | | | Using Scikit-Learn's ElasticNet regressor along with GridSearchCV to find the best penalty, I tried to predict how many fantasy points players will have in an upcoming game. I've tried two approaches(training/CV not shown): Two Model Approach : I trained two separate models: A points_scored_model trained with points_scored as it's target An assists_model trained with assists as it's target To figure out how many fantasy_points a player would have in an upcoming game, I combined the predictions like this: predicted_points_scored = points_scored_model.predict(row_for_player_c) predicted_assists = assists_model.predict(row_for_player_c) predicted_fantasy_points = \ (1 * predicted_points_scored) + (1.5 * predicted_assists) One Model Approach : I trained one model: fantasy_points_model trained with fantasy_points as it's target Then I predicted fantasy points like this: predicted_fantasy_points = fantasy_points_model.predict(row_for_player_c) Because the underlying formula (1*points + 1.5*assists) is incorporated into the Two Model Approach , I would imagine that it would be able to predict fantasy_points more accurately than the One Model Approach . I used R^2 score to compare the models and it turns out that the One Model Approach performs much better than the Two Model Approach . It seems like the One Model Approach has less information about the problem so how could it score better? Additionally, is there a way to leverage the fantasy points formula to get better predictions?
