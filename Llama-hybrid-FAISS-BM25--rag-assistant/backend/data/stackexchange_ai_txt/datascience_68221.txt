[site]: datascience
[post_id]: 68221
[parent_id]: 
[tags]: 
Classification model using RNN(action detection)

1) Could it be useful to use RNN for classification problem? (e.g. to distinguish which action is taken: car is going, walking, digging, nothing) . If 1 question is positive, how should RNN structure look like? I have dataset of 4 actions, many examples for each action, each example includes 124 samples. So my X_train, X_test are arrays of float(400000, 124, 1); y_train, y_test are arrays of int(0 or 1 or 2 or 3 depends on action). My data preprocessing: X_train, X_test, y_train, y_test = np.array(X_train), np.array(X_test), np.array(y_train), np.array(y_test) X_train = np.reshape(X_train, (X_train.shape[0], X_train.shape[1], 1)) X_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], 1)) My structure: regressor = Sequential() regressor.add(LSTM(units=55, return_sequences=True, input_shape=(X_train.shape[1], 1))) regressor.add(Dropout(0.2)) regressor.add(LSTM(units=50)) regressor.add(Dropout(0.2)) regressor.add(Dense(4,activation='softmax')) regressor.compile(optimizer='adam', loss='sparse_categorical_crossentropy') regressor.fit(X_train, y_train, epochs=5, batch_size=32) y_pred = regressor.predict(X_test)
