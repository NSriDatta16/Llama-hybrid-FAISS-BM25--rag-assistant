[site]: stackoverflow
[post_id]: 888042
[parent_id]: 887908
[tags]: 
You should be prepared to discuss a variety of testing terms, such as: "black box" testing, "white box" testing, etc. unit tests functional tests smoke tests BVTs (Build Verification Tests) the differences between stress testing and load testing performance testing globalization testing interoperability testing manual testing vs. automated testing (when?, why?) api testing security testing regression testing code coverage testing (etc...) You likely don't need experience in all of them, but you should express an awareness. A general knowledge of the following is helpful (refer to IEEE 829 for a start): - test plans - what should be in a good plan? - test cases - what should be in a good test case? - test design specifications - incident reporting (including bug tracking) - software specifications - what does one look for? You should start thinking about how you would test different things. What are the base cases? Are there any boundary cases? What could be wrong with any given product or item? Think creatively... For a few starting references on testing, I suggest looking at the following: Cem Kamer's book on software testing Wikipedia for some more starting points IEEE 829 ( related articles should be sufficient to get you thinking, as the full spec is good for insomniacs)
