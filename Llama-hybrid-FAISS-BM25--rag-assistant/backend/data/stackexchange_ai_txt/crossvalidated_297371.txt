[site]: crossvalidated
[post_id]: 297371
[parent_id]: 
[tags]: 
Blind deblurring: Can you train a neural network on artificially blurred images?

I'm reading the paper " Blind Image Blur Estimation via Deep Learning " which was published in IEEE Transactions on Image Processing in 2016. As I understand it, the blind deblurring algorithm presented in the paper has basically three steps: Divide the blurry image into patches. For each image patch, use a classification algorithm to determine the type of blur for that patch. Possible types of blur include motion blur, Gaussian blur, and defocus blur. Once the type of blur for a given patch has been determined, use a regression algorithm (specifically GRNN ) to predict the blur model parameters for that region. (Gaussian blur has a single parameter $\sigma$, for example.) Now that we know the blur kernels for all image patches, we can do a final non-blind deblurring step to recover the sharp image. My question is about how the GRNN in step 2 is trained. For each type of blur, such as Gaussian blur, the paper trains a GRNN using a training dataset that is created by artifically blurring a lot of sharp image patches using many randomly generated parameters for the given blur model. In this way, the "ground truth" is known for all blurry image patches in the training set. This training procedure is discussed in section IV.A of the paper. Question: Is it valid to use artificially blurred images to train the neural network? To me this seems to be too easy to be true. The main difficulty in using deep learning successfully is constructing a huge dataset of labeled data, which is often a laborious and expensive process, and the paper seems to have evaded this difficulty entirely by generating a training dataset artificially. Is that valid?
