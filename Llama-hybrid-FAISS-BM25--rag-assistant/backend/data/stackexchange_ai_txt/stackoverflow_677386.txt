[site]: stackoverflow
[post_id]: 677386
[parent_id]: 676503
[tags]: 
Others have covered the basics, but I'd like to say a few words about how a compiler is implemented that may be enlightening in his case. The compiler maintains a list (called the symbol table ) of variable names in use at any particular point in the program and some information about the variables. The list of information includes: their assigned storage (in this register, at that memory location, etc...) what type they are (i.e. integer or string or SubWhatsitObj ) including any restriction (like for instance constantness) any linkage information the compiler needs The compiler uses this information to decide how to treat expressions involving the variables. The kind of meta-information that is stored in the symbol table can also be derived for any expression from it's components. Except in the special case of numeric type conversion, a cast just tells the compiler to use different meta-information for a variable or expression than would usually be the case. No bits in memory are affected at all, but the outcome of a calculation may be.
