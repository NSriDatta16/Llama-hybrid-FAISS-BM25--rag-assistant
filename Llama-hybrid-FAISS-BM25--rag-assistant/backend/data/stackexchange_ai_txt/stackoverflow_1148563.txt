[site]: stackoverflow
[post_id]: 1148563
[parent_id]: 
[tags]: 
Offline storage in firefox 3.5 for file://

I was trying out the code for offline storage in firefox 3.5, taken from http://starkravingfinkle.org/blog/2008/05/firefox-3-offline-app-demo-part-2/ . When the page loads i get a dialog prompting me that the application is asking for storing data, but when i press Allow, the dialog does not go away . The app works fine at the online demo given on the website. The source file containing the javascript is as follows : todo.html TODO - Offline Demo var taskStorage = "[]"; var storageDomain = location.hostname; if (storageDomain == "localhost") storageDomain += ".localdomain"; function loaded() { updateOnlineStatus("load", false); document.body.addEventListener("offline", function () { updateOnlineStatus("offline", true) }, false); document.body.addEventListener("online", function () { updateOnlineStatus("online", true) }, false); if (typeof globalStorage != "undefined") { var storage = globalStorage[storageDomain]; if (storage && storage.taskStorage) { taskStorage = storage.taskStorage; } } fetchList(); } function updateOnlineStatus(msg, allowUpdate) { var status = document.getElementById("status"); status.innerHTML = (navigator.onLine ? "[online]" : "[offline]"); var log = document.getElementById("log"); log.appendChild(document.createTextNode("Event: " + msg + "\n")); if (navigator.onLine && allowUpdate) { update(); log.appendChild(document.createTextNode("Updated server\n")); } } function httpRequest(type, data, callback) { var httpreq = new XMLHttpRequest(); httpreq.onreadystatechange = function() { if (httpreq.readyState == 4) callback(httpreq.readyState, httpreq.status, httpreq.responseText); }; httpreq.open(type, "todo-server.php", true); if (type == "POST") { httpreq.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); } httpreq.send(data); } function loadList(readyState, status, responseText) { if (readyState == 4) { if (status == 200) { taskStorage = responseText; var tasks = eval("(" + taskStorage + ")"); var html = ""; for (var i=0; i " + tasks[i].data + " "; } document.getElementById("tasklist").innerHTML = html; if (typeof globalStorage != "undefined") { globalStorage[storageDomain].taskStorage = taskStorage; } } } } function fetchList() { if (navigator.onLine) { httpRequest("GET", null, loadList); } else { loadList(4, 200, taskStorage); } } function addItem() { var data = document.getElementById("data").value; document.getElementById("data").value = ""; var tasks = eval("(" + taskStorage + ")"); tasks.push({"name": Date.now(), "data": data }); taskStorage = tasks.toJSONString(); update(); } function removeItems() { var tasks = eval("(" + taskStorage + ")"); var newTasks = []; var items = document.getElementById("tasklist").getElementsByTagName("input"); for (var i=0; i ") != -1) { task = task.replace(" ", ""); task = task.replace(" ", ""); } else { task = " " + task + " "; } tasks[i].data = task; } } taskStorage = tasks.toJSONString(); update(); } function update() { if (navigator.onLine) { var post = "action=update&data="; post += encodeURIComponent(taskStorage); httpRequest("POST", post, function(readyState, status, json) { fetchList(); }); } else { loadList(4, 200, taskStorage); } } body { font-family: verdana,tahoma, arial; } div#container { width: 300px; } div#title { font-size: 120%; } div#subtitle { font-size: 80%; } div#tasklist { margin-bottom: .5em; } div#log { font-size: 90%; background-color: lightgray; margin-top: 1em; white-space: pre; } Task Helper - ONLINE simple online/offline demo application Event Log
