[site]: stackoverflow
[post_id]: 667846
[parent_id]: 
[tags]: 
Can you Unit Test Obfuscated Code?

I am looking to obfuscate our Java web app code within our existing Ant build script, but am running into problems around unit testing. I am obfuscating the code right after it has been compiled, before it is jar-ed and before the unit tests are ran. However, if I obfuscate my production code and not my test code, all my tests fail because they are trying to call methods that no longer exist because they have been renamed by the obfuscator. I can mark certain methods to not obfuscate so they can be used by external systems such as our test suite, but since we are shooting for high unit test coverage we will need to mark all of our methods as un-obfuscatable. If I obfuscate the test classes as well, I run into two problems: 1: The production classes and the test classes get merged into the same output directory and I am unable to exclude the test classes from the production .jar files 2: I cannot run my normal Ant batchtest call: because the obfuscator has changed the names of the tests. I could just run the obfuscator on the resulting .war/.ear files, but I want to have our unit tests run against the modified code to drive out any bugs caused by the obfuscator. I am currently working with Zelix KlassMaster, but I am still in the evaluation phase so I would be open to other options if they would work better.
