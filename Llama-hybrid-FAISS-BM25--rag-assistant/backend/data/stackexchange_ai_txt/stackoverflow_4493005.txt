[site]: stackoverflow
[post_id]: 4493005
[parent_id]: 4492770
[tags]: 
This is tricky but can be done, even if there is no specified line-height or other style. It does involve a bunch of moving parts. First, build a "sacrificial" container . Fill it with a known number of lines of text, one character each, and position it far off-screen: // calculate height per line $calcdiv = $(' ').css({ width: '50px', position: 'absolute', // don't affect layout left: '-2000px' // position far off=screen }).html('A B C D E'); // add five lines $('body').append( $calcdiv ); // make the browser render it var lineHeight = $calcdiv.height()/5; // average height per line Now we know the approximate height of a line, in pixels, as rendered by this browser. We turn our attention to the box to be measured: $origDiv = $('div#div_to_measure'); $measureDiv = $origDiv.clone(); // clone it $measureDiv.css({ position: 'absolute', left: '-1000px', // position far off-screen height: 'auto' // let it grow to its natural full height }); $('body').append( $measurediv ); // add it to the DOM, browser will render it ...and now we know the approximate number of lines in the box if allowed to attain its natural dimensions as rendered by the browser: var numLines = $measureDiv.height() / lineHeight; We have to clone() because the original box to be measured may have its height restricted by the current page styles and layout. Now some cleanup: $calcdiv.remove(); $measureDiv.remove(); Here's an example: http://jsfiddle.net/redler/FuWue/
