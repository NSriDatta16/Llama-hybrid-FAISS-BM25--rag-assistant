[site]: stackoverflow
[post_id]: 4088640
[parent_id]: 
[tags]: 
UPDATE statement uses EXEC to execute a stored procedure to SET a column value

I am almost finished changing a cursor-based stored procedure over to set-based. Almost, because I have only one thing left to figure out. They use a stored procedure called GetSequence to query a table, update it with a new sequence number (old + 1) and return the new sequence number value. This wasn't an issue when they used cursors because they assigned the output value to a variable, then used the variable. The only way I can think of to keep the new stored procedure set based is to execute GetSequence in an INSERT or UPDATE statement. However, I get that wonderfully specific error, "Incorrect syntax near the keyword 'EXEC'", when I try that. This is the old code: DECLARE @new_UD_campaignID BIGINT -- Get the new ud_lead_id for the new lead set EXEC ppGlobal.dbo.Getsequence 'ud_campaign_id', @new_UD_campaignID OUTPUT DECLARE @OrderNum VARCHAR(9); IF @corpCamp LIKE '%LEP%' BEGIN SELECT @OrderNum = ( 'L' + RIGHT('00000000' + CAST(@new_UD_campaignID AS VARCHAR(8)), 8) ) END ELSE BEGIN SELECT @OrderNum = ( 'C' + RIGHT('00000000' + CAST(@new_UD_campaignID AS VARCHAR(8)), 8) ) END This works, but is really slow because it is in a cursor and updating over two million rows. The new code I am trying looks like this: UPDATE @List SET OrderNumBigInt = EXEC (ipCore.dbo.Getsequence 'ud_campaign_id', @new_UD_campaignID OUTPUT) I can't find any specific documentation indicating that you cannot execute a stored procedure within a SELECT or UPDATE statement to set a column value. Has anyone tried something similar, but with success?
