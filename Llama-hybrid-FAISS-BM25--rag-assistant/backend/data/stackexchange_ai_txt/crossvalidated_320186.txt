[site]: crossvalidated
[post_id]: 320186
[parent_id]: 
[tags]: 
Could this be classed as machine learning?

I did a little Google Search on machine learning and got this: Machine learning is the ability of a system to learn without being explicitly programmed. So I decided to attempt to do this on java. PS: I will include the code at the end as it is quite long. I created a very basic program that let's you input the "Name", "Mass" and "Volume" of an object in a textfield. It then stores this data. Then, if you - for example - find an object, but you don't know its name, but know it's mass and volume; there is another textfield that enables you to input the "Mass" and "Volume". Then BASED ON THE INFORMATION IT HAS ALREADY STORED FROM YOUR INPUTS, it can make an estimate on what the object is, then print it out on the console. The more data there is, the better the estimate. Just for the record, I made the following functions to print to console, just for fun and so I don't have to type System.out.print() or System.out.println() all the time. // Print public static void print(String message) { System.out.print(message); } public static void print(double number) { System.out.print(number); } // Print line public static void println(String message) { System.out.println(message); } public static void println(double number) { System.out.println(number); } Here's the meat of the code (using JAVAFX): // TextField 1 guessBox = new TextField(); guessBox.setPromptText("Entry 1 - Entry 2"); // TextField 2 storeBox = new TextField(); storeBox.setPromptText("Name - Entry 1 - Entry 2"); // Button 1 guessButton = new Button(" Guess "); // Button 2 storeButton = new Button(" Store "); //////////////////////////////////////////////////// // FUNCTIONALITY //// ////////////////////////////////////////////////// // Object names ArrayList matter = new ArrayList<>(); // Mass ArrayList mass = new ArrayList<>(); // Volume ArrayList volume = new ArrayList<>(); // Button functionality storeButton.setOnAction( e -> { String message = storeBox.getText(); String[] str = message.split(" - "); if(message.isEmpty()) { storeBox.setText(message); } else if(!message.isEmpty() && str.length != 3) { storeBox.setText(message); } else if(!message.isEmpty() && str.length == 3) { String na = str[0]; double ms = Double.parseDouble(str[1]); double rd = Double.parseDouble(str[2]); matter.add(na); mass.add(ms); volume.add(rd); storeBox.setText(""); } }); guessButton.setOnAction( e -> { String message1 = guessBox.getText(); String[] str1 = message1.split(" - "); if(message1.isEmpty()) { guessBox.setText(message1); } else if(!message1.isEmpty() && str1.length != 2) { guessBox.setText(message1); } else if(!message1.isEmpty() && str1.length == 2) { int i = 0; double m = Double.parseDouble(str1[0]); double r = Double.parseDouble(str1[1]); double ratio = m/r; double sol = ratio; double m1 = mass.get(i); double r1 = volume.get(i); double ratio1 = m1/r1; double sol1 = ratio1 ; int len = matter.size() - 1; double newArr[] = new double[len + 1]; while(i By the way, the double sol = ratio is there simply because I wanted sol to be the result of an operation involving ratio for better accuracy. But left it at sol = ratio for now.
