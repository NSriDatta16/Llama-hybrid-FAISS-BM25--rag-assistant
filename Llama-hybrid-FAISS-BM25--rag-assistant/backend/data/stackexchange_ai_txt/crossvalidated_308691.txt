[site]: crossvalidated
[post_id]: 308691
[parent_id]: 
[tags]: 
How to correctly train a random forest classifier using live churn data (i.e. a snapshot)

I am assisting in the creation of a churn classification model and would like to use a random forest as it is a model that I understand fairly well. I have prepared a large dataset (~600,000 observations) which includes a fairly balanced distribution of active and churned customer records. I have already run a random forest model on an 80% training split and got desirable out-of-bag error estimates which tells me that a random forest is the way to proceed. However, a large proportion of the very people I wish to predict churn probabilities for have been used for training. This adds bias to the model and I am quite sure is not the correct way to go about this. My question, therefore, is should I take a much smaller sample of the original data for splitting into train and test sets, train a model and validate on the test set, then predict the remainder of the unseen data using said model? If so, then that leaves me concerned about the active customers used for training. How can I apply the model to those? Churn, for me, represents a different situation to, say, credit risk as it uses a snapshot of the data whereby churn status is taken at that instant rather than an absolute outcome such as good or bad loan. Thanks in advance.
