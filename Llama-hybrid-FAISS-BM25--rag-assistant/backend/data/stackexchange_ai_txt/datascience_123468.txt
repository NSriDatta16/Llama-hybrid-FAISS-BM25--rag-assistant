[site]: datascience
[post_id]: 123468
[parent_id]: 123464
[tags]: 
KMeans and MiniBatch K-Means are generally faster than DBSCAN for large datasets. The fact that MiniBatch K-Means didn't complete even after 3 hours is unusual, unless your documents are extremely long or your machine has limited resources. DBSCAN 's time complexity is O(n log n) in best case scenarios (when using a spatial index), but it can be as bad as O(n^2) in worst case scenarios. So it's not surprising that it's taking a long time with such a large dataset. There might be a few things you could try: BIRCH Algorithm : Balanced Iterative Reducing and Clustering using Hierarchies (BIRCH) is an unsupervised data mining algorithm used to perform hierarchical clustering over particularly large data-sets. You can find this at sklearn.cluster.Birch Dimensionality Reduction : Techniques like PCA or t-SNE could help reduce the dimensionality of your TF-IDF vectors before applying any clustering method, which could make these methods run faster. Online/Incremental Clustering Algorithms : These types of algorithms process one instance at a time and thus require less memory space compared to batch-based algorithms like KMeans or DBSCAN . Remember that regardless of which method you choose, preprocessing steps such as normalization or removing stop words from your text data can have great impacts on both running time and result quality.
