[site]: stackoverflow
[post_id]: 2397551
[parent_id]: 2391865
[tags]: 
Well, alignment is usually stretching the storage size of some value to occupy some "round" space, like 32, 64, 128 bit etc. If we're talking about binary formats, it may be done in order to optimize format processing. Read/write operations can be quicker when you read/write some "round" data length portions. I found a reading for you, formulated in better words I can come up with right now: Data structure alignment Data structure alignment is the way data is arranged and accessed in computer memory. It consists of two separate but related issues: data alignment and data structure padding . When a modern computer reads from or writes to a memory address, it will do this in word sized chunks (e.g. 4 byte chunks on a 32-bit system). Data alignment means putting the data at a memory offset equal to some multiple of the word size, which increases the system's performance due to the way the CPU handles memory. To align the data, it may be necessary to insert some meaningless bytes between the end of the last data structure and the start of the next, which is data structure padding .
