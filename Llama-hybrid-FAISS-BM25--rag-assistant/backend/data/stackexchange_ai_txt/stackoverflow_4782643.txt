[site]: stackoverflow
[post_id]: 4782643
[parent_id]: 4780914
[tags]: 
depends on the browser and the mootools version. first thing though, if you want to keep your existing code, use .getElements("td.r1") - a more qualified selector will be better for browsers that lack getElementsByClassName and querySelectorAll. I asked a similar question in my interview with Fabio Miranda Costa of the mootools-core and Slick teams (for v1.3) and you can read his reply here (bottom!): http://fragged.org/intermoos-part-6-fabio-miranda-costa-gets-slick_1213.html to save you the click, what is the better practice with slick now: // 1 $$("#someid div.something"); // or 2 document.id("someid").getElements("div.something"); his reply was: On the first example: If the browser has the querySelectorAll method, the Slick Engine will detect it and use it right away, lightning fast If the browser does not have it, in short–it will do document.getElementById(‘someid’).getElementsByTagName(‘div’) and for each of the found nodes, it will check for the existence of the class ‘something’. The second example: For every browser, it will grab the element with id ‘someid’; Then, if the browser has querySelectorAll, it will use this method to grab all the divs with the ‘something’ class from the ‘someid’ context; if the browser don’t have it will use the getElementsByTagName(‘div’) method from the ‘someid’ context and for each of the found nodes it will check for the existence of the class ‘something’. So, as seen, first one will be faster for most of the browsers and is recommended. From the time of this interview Firefox, Safari, Chrome, Opera and IE >= 8, have the querySelectorAll function.
