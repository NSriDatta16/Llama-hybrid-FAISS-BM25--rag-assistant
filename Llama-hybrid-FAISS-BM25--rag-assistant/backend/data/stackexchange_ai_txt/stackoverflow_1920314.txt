[site]: stackoverflow
[post_id]: 1920314
[parent_id]: 1920287
[tags]: 
Here is a great write up with some examples. http://javadude.com/articles/passbyvalue.htm Here is my simple take on the issue. Java is always a pass-by-value language. It helps to think of it as a pass-by-reference language when talking about objects. BUT this is not entirely true. What it is doing is passing the value of the memory address. EDIT: Thanks for the down votes. Maybe you should have read the article first. Since no one has a will take the liberty to give an example: public class Dog { public String name; public Dog(String name) { this.name = name; } public static void main(String []args) { Dog newDog = new Dog("Max"); newDog.test(newDog); System.out.println(newDog.name); } public void test(Dog dog) { dog = new Dog("Gotcha"); } } So what does the above output to the console? Now if you guys screaming pass-by-reference were correct it would print "Gotcha" but it doesn't it prints "Max". But wait, that is exactly like pass-by-value behaviour. But why? Because in Java Objects are not passed by reference. A correct statement would be Object references are passed by value.
