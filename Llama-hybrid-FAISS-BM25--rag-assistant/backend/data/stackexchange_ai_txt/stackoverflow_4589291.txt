[site]: stackoverflow
[post_id]: 4589291
[parent_id]: 4588830
[tags]: 
Second-ish refactor. I think this is clean, elegant, and most of all complete. It's easy to read with no hardcoded field lengths or ugly RegEx. I vote mine as the best! Yay! I'm the best, yay! ;) def parse_chromo(file_name) last_segment = "" segments = Hash.new {|segments, key| segments[key] = []} IO.foreach(file_name) do |line| next if !line || line[0] == "#" values = line.split if values.length == 3 && last_segment != (segment_id = values[1]) segments[segment_id] += segments[last_segment].pop(2) last_segment = segment_id end segments[last_segment] I used this as my data file: #Base_ID Segment_ID Read_Depth 1 101 2 102 3 seg1 103 4 seg1 104 5 105 6 106 7 201 8 202 9 seg2 203 10 seg2 204 11 205 12 206 13 207 14 208 15 209 16 210 17 211 18 212 19 301 20 302 21 seg3 303 21 seg3 304 21 305 21 306 21 307 Which outputs: { "seg1"=>["101", "102", "103", "104", "105", "106"], "seg2"=>["201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212"], "seg3"=>["301", "302", "303", "304", "305", "306", "307"] }
