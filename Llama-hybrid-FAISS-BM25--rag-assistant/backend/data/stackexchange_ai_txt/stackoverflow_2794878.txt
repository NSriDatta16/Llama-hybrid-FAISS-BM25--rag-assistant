[site]: stackoverflow
[post_id]: 2794878
[parent_id]: 2794818
[tags]: 
Here are a couple ways you might prefer: open System.Linq.Expressions type System.Object with member this.ToExpression() : Expression = // explicit match this with | :? System.Int32 -> upcast Expression.Constant(this) // upcast | :? System.Boolean -> Expression.Constant(this) :> _ // _ | _ -> failwith "bad expression" By explicitly stating the return type on the member declaration, you can then infer it in the body, e.g. via _ as a "please infer this type for me" or by using the upcast operator which will infer the type to up-cast to from the constraints.
