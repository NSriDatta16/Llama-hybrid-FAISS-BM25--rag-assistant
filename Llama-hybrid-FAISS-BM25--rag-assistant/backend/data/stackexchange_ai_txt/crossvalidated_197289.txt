[site]: crossvalidated
[post_id]: 197289
[parent_id]: 196613
[tags]: 
Before I describe how I approach the problem, I would make a small change in your setup. I would replace $w = 1 - r\,t$ with $w = e^{-r\,t}$, where $w$ is what you call wear and $r$ is the wear rate. (If you don't like that, I think it's easy to follow my approach with your setup.) The data are of the form $y_{1:n} = (y_1,\ldots,y_n)$ where $y_i = (w_i,t_i)$. You have suggested the unobserved wear rates are distributed $r_i \stackrel{\text{iid}}{\sim} \textsf{N}(\mu,\sigma^2)$. Given $w_i = e^{-r_i\, t_i}$, we have $w_i \stackrel{\text{iid}}{\sim} \textsf{LN}(-\mu\,t_i, \sigma^2\,t_i^2)$, where $\textsf{LN}$ denotes the log-normal distribution. However, as you point out, we only observe data for which $w_i > b$, where $b$ is the bound you describe. Therefore the actual observations have a truncated log-normal distribution: $\textsf{LN}_{[b,1]}(-\mu\,t_i, \sigma^2\,t_i^2)$. (I have included a truncation from above at 1 as well; it probably doesn't matter.) Let $\theta = (\mu,\sigma,b)$ denote the unknown parameters. The likelihood is given by $p(y_{1:n}|\theta) = \prod_{i=1}^n p(y_i|\theta)$ where $$ p(y_i|\theta) = \textsf{LN}_{[b,1]}\big(w_i\,\big|\,-\mu\,t_i,\, \sigma^2\,t_i^2\big). $$ Given the likelihood, my approach is Bayesian, in part because the distribution for $b$ is nonstandard and has a sharp cutoff at $\min(w_1,\ldots,w_n)$. The posterior distribution is proportional to the likelihood times the prior distribution $p(\theta)$: $$ p(\theta|y_{1:n}) \propto p(y_{1:n}|\theta)\,p(\theta). $$ Any information you have about the unknown parameters $(\mu,\sigma,b)$ should be incorporated into your prior distribution. As I have no subject-matter expertise, I adopted the flat prior $p(\theta) \propto 1$ to experiment with. This prior is improper, but doesn't seem to produce any problems here. (One has to be careful.) At this point there are a number of ways to proceed. I chose to adopt a simple random-walk Metropolis sampler to make MCMC draws from the posterior distribution. I use my own code written in Mathematica, so I'm not sure how helpful it would be. The main trick for me is to find a reasonable scale for the proposals, which is not too hard in this case because there are only three parameters and it turns out they are not highly correlated in the posterior You may be able to code this up in JAGS or Stan and run it from within R. I don't know off hand. Good luck.
