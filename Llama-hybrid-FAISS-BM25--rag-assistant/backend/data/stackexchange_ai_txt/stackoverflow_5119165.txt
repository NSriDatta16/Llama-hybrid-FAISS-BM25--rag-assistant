[site]: stackoverflow
[post_id]: 5119165
[parent_id]: 
[tags]: 
C# - Query Multiple Comma Delimited Value Search Parameters w/ String Splitter

Requirement: I have a windows application written in C# that currently will only search a .CSV file by 1 Corp value (ex: Search by Corp: 160) and I want it to search multiple Corp values seperated by commas (ex: Search by Corp: 160, 220, 310, 550, 610). Problem: How do I search multiple corp values seperated by commas?? (ex: Search by Corp: 160, 220, 310, 550, 610). The string has to be split by the comma value and the value of each string must be set to x+1 # of variables (ex: Corp1, Corp2, Corp3) when there are x # of commas (ex: Corp1, Corp2, Corp3 has 2 commas so 3 variables would have to be defined) and then looping the search x+1 times for each of the corp values Here is the relevant code in MainForm.cs code where the corp value is defined: private SearchCriteria GetSearchCriteria() { // Initialize Search Parameters object SearchCriteria sc = new SearchCriteria(textBoxCorp.Text, textBoxOrderNumber.Text, textBoxCampaign.Text, textBoxCity.Text, comboBoxState.Text, textBoxZip.Text, folderBrowserDialog1.SelectedPath, folderBrowserDialog2.SelectedPath, radioButtonAny.Checked, radioButtonAll.Checked); return sc; } private void textBoxCorp_TextChanged(object sender, EventArgs e) { } Here is the relevant code in SearchProcess.cs where the corp value is brought in and checked to see if it matches the search: // Function runs in worker thread and emulates long process. public void Run() { m_sc = (SearchCriteria)m_form.Invoke(m_form.m_DelegateGetSearchCriteria); // Display parameters m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search on Corp: " + m_sc.get_Corp() }); m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search on OrderNumber: " + m_sc.get_OrderNumber() }); m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search on Campaign: " + m_sc.get_Campaign() }); m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search on City: " + m_sc.get_City() }); m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search on State: " + m_sc.get_State() }); m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search on Zip: " + m_sc.get_Zip() }); m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search on Source Path: " + m_sc.get_SourcePath() }); m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search on Target Path: " + m_sc.get_TargetPath() }); if (m_sc.get_SearchAND()==true) { m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search for All" }); } else { m_form.Invoke(m_form.m_DelegateAddString, new Object[] { "Search for Any" }); } // Found should be true if ANY of the criteria are met. // This is an OR logic gate // If any of the given fields do match then it is a true if (m_sc.get_SearchOR().Equals(true)) { // Check for the Corp type match if (m_sc.get_Corp() != "" && String.Compare(AgentID, m_sc.get_Corp()) == 0) { found = true; } } // Copy the file if ANY of the search criteria have been met if (found) { m_form.Invoke(m_form.m_DelegateAddString, new Object[] {"FOUND: Order_No: " + Order_No + " barcode: " + barcode + " MailerCode: " + MailerCode + " AgentID: " + AgentID + " City: " + City + " State: " + State + " ZIP: " + ZIP}); //passes values to TransferFile TransferFile(directory, barcode, AgentID, ZIP); } } // end for that finds each matching record Any help would be greatly appreciated! Thanks!!!
