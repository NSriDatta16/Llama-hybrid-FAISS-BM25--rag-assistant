[site]: stackoverflow
[post_id]: 1451209
[parent_id]: 237372
[tags]: 
From tinkering with it I've found out that: it's deterministic it doesn't do any kind of pixel based posterization to achieve final effect it probably doesn't use any kind of pixel based edge detection, it seems to work rather with areas then edges. it calculates the shapes closed polygons to draw (some of the polygon edges might overlap with image edges). when the edges of polygons are known then color of each area enclosed in edges (not necessarily belonging to one polygon) is colored with average color of pixels of original image that area covers. edge of polygon can intersect with itself. Especially visible for high edge simplicity. as 'line simplicity' drops, the number of polygon edges increases, but also number of polygons increases. edge fidelity influences line polygon edge count but does not influence polygon count high edge fidelity (=3) causes single polygon to have very long and very short edges at the same time, low fidelity (=1) causes single polygon to have all edges roughly the similar length high edge simplicity and low edge fidelity seem to prefer polygons anchored at edges of image, even at cost of sanity. Altogether it looks like simplified version of Live Trace algorithm from Adobe Illustrator that uses polygons instead of curves. ... or maybe not.
