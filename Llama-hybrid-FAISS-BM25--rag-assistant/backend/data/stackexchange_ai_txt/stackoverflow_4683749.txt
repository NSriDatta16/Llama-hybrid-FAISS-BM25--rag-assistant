[site]: stackoverflow
[post_id]: 4683749
[parent_id]: 4323990
[tags]: 
First of all Object tag is not fully supported in all browsers (Source) Next, from my experience, jQuery (which heavily relies on document.createDocumentFragment ) sometimes fails to attach/trigger events on dynamically created/cloned DOM nodes, which could explain why your object failed to initialize. That said, to try and fix your problem, I suggest using native document.createElement and document.appendChild methods instead of jQuery.html . You can try document.innerHTML but if that fails, you can always go with the ones I mentioned earlier. My suggestion is to either alter your service to replace: function addElement(parentid, tag, attributes) { var el = document.createElement(tag); // Add attributes if (typeof attributes != 'undefined') { for (var a in attributes) { el.setAttribute(a, attributes[a]); } } // Append element to parent document.getElementById(parentid).appendChild(el); } addElement('plugin', 'object', {name:"signer",id:"signer",type:"application/x-personal-signer2"}); OR if you cannot change the content that is returned by the service, run this after you include the content onto your page: /* * Goes through al the object tags in the element with the containerid id * and tries to re-create them using the DOM builtin methods */ function reattachObjectTags(containerid) { jQuery('#'+containerid+' object').each(function(){ var attrs = {}, el = this; // We're insterested in preserving all the attributes var saved_attrs = {}, attr; for(var i=0; i THIS IS ALL UNTESTED - I typed this off the top of my mind, since I don't have the means to fire up IE and test this.
