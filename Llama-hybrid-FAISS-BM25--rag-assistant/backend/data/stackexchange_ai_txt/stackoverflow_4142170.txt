[site]: stackoverflow
[post_id]: 4142170
[parent_id]: 4142125
[tags]: 
File memory mapping is faster when page out occurs, as the file itself is used as paging storage. If the memory in the memory mapped file is not changed there is no need to flush the the page to the paging file as the data is in the file already and windows can reread the page from disk. .EXE and .DLL files are loaded using this mechanism and thus are their own page storage. If the memory in the memory mapped file is written, then page out is the same as if the paging file had been used. Faster possibly as the same place on disk is used (subject to NTFS optimisations). The plain APIs consume page file backed memory to hold the contents of the file while in memory. On slightly different perspective both APIs are optimised as memory mapped files are may actually be used the Read/Write File APIs under the hood so you get a micro-optimisation as you're using a lower abstraction Both mechanisms will employ the VMM/Cache manager.
