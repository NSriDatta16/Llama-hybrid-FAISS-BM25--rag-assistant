[site]: stackoverflow
[post_id]: 1483034
[parent_id]: 532274
[tags]: 
Usually something like O(logN) comes about because the data is size N, but it is organized e.g. in a tree where the depth of the tree is logN. If the typical search involves going from the root to the leaf (in worse case) then it is easy to see that the algorithm will be O(logN). There are no hard and fast rules - you just have to look at each case, figure out the worse case scenario, and calculate what the cost of that would be.
