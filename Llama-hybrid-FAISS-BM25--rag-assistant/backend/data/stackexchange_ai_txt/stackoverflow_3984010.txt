[site]: stackoverflow
[post_id]: 3984010
[parent_id]: 3983975
[tags]: 
It's not clear what exactly you mean by 'different modes.' Lots of people spend a ton of time dreaming up abstract structures, behavioral, and organizational patterns for code. Another term for these concepts is design patterns . Aside from cleanly formatting and documenting your code, these concepts help you keep your code logically and functionally clean and operational . They are well-known and mainstream because they have been proven to work in many implementations; you won't use all of them on every project, but you will probably start using combinations/variations of them if you want to scale. My advice would be to familiarize yourself with these and then reflect on where a particular pattern would work well in your application/state machine. EDIT: Response to your edits. For GUI development, in principle, you want to achieve separation of presentation code, behavior code, and state code. Some patterns lend themselves naturally to this end, for example the Model-View-Controller (MVC) pattern.
