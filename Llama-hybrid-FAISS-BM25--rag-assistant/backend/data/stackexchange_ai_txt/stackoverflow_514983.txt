[site]: stackoverflow
[post_id]: 514983
[parent_id]: 514953
[tags]: 
I only write unit tests where I know it saves me time. When I started out unit-testing this was only a small percentage of the classes (those awful ejb's!!). Today I test almost everything and I save total development time on every single thing I do . If there was an efficient way of testing user input through a microphone I'd do it too. But as far as I know, it's not possible in a manner that saves me time. So i think you should unit test everything that is in your current "test capability". You should try to stretch this capability, but overreaching really sends signals of wrong priorities; In all likelihood there's some other test that deserves your attention more. (Technically I'm test infected but not TDD infected ) The law of diminishing returns applies to unit testing as much as any other testing; your payback on that last 5% is very low and the cost is high.
