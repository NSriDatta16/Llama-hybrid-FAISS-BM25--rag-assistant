[site]: stackoverflow
[post_id]: 1479639
[parent_id]: 1479574
[tags]: 
C doesn't offer much in the way of code organization. There's functions and files. Whenever you want to implement an interface with hidden implementation, or perhaps with private functions, create two files, like "foo.h" and "foo.c". The interface and/or public functions are function prototypes in "foo.h", and the functions are written in "foo.c". In addition, any hidden implementation or other private functions are in "foo.c", but marked as static , such as static int foo_internal_function(int i); . Functions marked static may only be referenced in the file they exist in, not any other. There are no formal namespaces, although you can get much the same effect with prefixing function names, such as Foo_discombobulate_developers() . There are no classes, although you can at least get some encapsulation effects with the files. There is no extensible hierarchy, just files and functions. C doesn't have anywhere near the organization of later languages, but lots of really good programs have been written in it. Be careful, comment anything confusing (and in C there are likely to be confusing things), and keep good notes.
