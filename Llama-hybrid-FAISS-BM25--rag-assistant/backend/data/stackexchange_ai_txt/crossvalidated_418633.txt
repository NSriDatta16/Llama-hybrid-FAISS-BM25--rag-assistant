[site]: crossvalidated
[post_id]: 418633
[parent_id]: 418584
[tags]: 
(Edited taking into account comments below. Thanks to @BenBolker & @WeiwenNg for helpful input.) Fit a fractional logistic regression to the data. It is well suited to percentage data that is bounded between 0 and 100% and is well-justified theoretically in many areas of biology. Note that you might have to divide all values by 100 to fit it, since programs frequently expect the data to range between 0 and 1. And as Ben Bolker recommends, to address possible problems caused by the binomial distribution's strict assumptions regarding variance, use a quasibinomial distribution instead. I've made some assumptions based on your code, such as that there are 2 viruses you are interested in and they may show different patterns (i.e. there may be an interaction between virus type and number of copies). First, the model fit: dat $logcopies Copies_per_uL) dat $Genome_cov_norm Genome_cov/100 fit |t|) (Intercept) -5.9702 2.8857 -2.069 0.0486 * logcopies 2.3262 1.0961 2.122 0.0435 * VirusUMAV 2.6147 3.3049 0.791 0.4360 logcopies:VirusUMAV -0.6028 1.3173 -0.458 0.6510 --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 (Dispersion parameter for quasibinomial family taken to be 0.6934319) Null deviance: 30.4473 on 29 degrees of freedom Residual deviance: 2.7033 on 26 degrees of freedom If you trust the p-values, the output does not suggest that the two viruses differ meaningfully. This is in contrast to @NickCox's results below, though we used different methods. I'd not be very confident either way with 30 data points. Second, the plotting: It's not hard to code up a way to visualize the output yourself, but there appears to be a ggPredict package that will do most of the work for you (can't vouch for it, I haven't tried it myself). The code will look something like: library(ggiraphExtra) ggPredict(fit) + theme_bw(base_size = 20) + geom_line(size = 2) Update: I no longer recommend the code or the ggPredict function more generally. After trying it out I found that the plotted points don't exactly reflect the input data but instead are changed for some bizarre reason (some of the plotted points were above 1 and below 0). So I recommend coding it up yourself, though that is more work.
