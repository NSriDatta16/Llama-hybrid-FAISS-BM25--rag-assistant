[site]: stackoverflow
[post_id]: 2373299
[parent_id]: 2373207
[tags]: 
There are a couple of problems: int main() { PicLib *lib = new PicLib; beginStorage(lib); return 0; } It is best to allocate and delete memory in the same scope so that it is easy to spot. But in this case just declare it locally (and pass by reference): int main() { PicLib lib; beginStorage(lib); return 0; } In beginStorage() But I see no reason to manipulate a pointer. Pass it by reference and just use it locally. void beginStorage(PicLib& lib) { .... } In the PicLib class you have a RAW pointer: databases. If you have a RAW pointer that you own (you create and destroy it) then you must override the compiler generated versions of the copy constructor and assignment operator. But in this case I see no reason touse a pointer it would be easier to just use a vector: class PivLib { private: std::vector databases; };
