[site]: stackoverflow
[post_id]: 333161
[parent_id]: 332862
[tags]: 
Examining the stack dump: InitTerm is simply a function that walks a list of other functions and executes each in step - this is used for, amongst other things, global constructors (on startup), global destructors (on shutdown) and atexit lists (also on shutdown). You are linking with CGAL, since that CGAL::Random::Random in your stack dump is due to the fact that CGAL defines a global variable called default_random of the CGAL::Random::Random type. That's why your error is happening before main, the default_random is being constructed. From the CGAL source, all it does it call the standard C srand(time(NULL)) followed by the local get_int which, in turn, calls the standard C rand() to get a random number. However, you're not getting to the second stage since your stack dump is still within srand() . It looks like it's converting your thread into a fiber lazily, i.e., this is the first time you've tried to do something in the thread and it has to set up fiber-local storage before continuing. So, a couple of things to try and investigate. 1/ Are you running this code on pre-XP? I believe fiber-local storage ( __set_flsgetvalue ) was introduced in XP. This is a long shot but we need to clear it up anyway. 2/ Do you need to link with CGAL? I'm assuming your application needs something in the CGAL libraries, otherwise don't link with it. It may be a hangover from another project file. 3/ If you do use CGAL, make sure you're using the latest version. As of 3.3, it supports a dynamic linking which should prevent the possibility of mixing different library versions (both static/dynamic and debug/nondebug). 4/ Can you try to compile with VC8? The CGAL supported platforms do NOT yet include VC9 (VS2008). You may need to follow this up with the CGAL team itself to see if they're working on that support. 5/ And, finally, do you have Boost installed? That's another long shot but worth a look anyway. If none of those suggestions help, you'll have to wait for someone more knowledgable than I to come along, I'm afraid. Best of luck.
