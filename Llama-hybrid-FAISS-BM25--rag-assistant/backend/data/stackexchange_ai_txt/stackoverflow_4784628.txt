[site]: stackoverflow
[post_id]: 4784628
[parent_id]: 4784445
[tags]: 
I will agree wilth Daniel's answer - having a property named NumberOfFollowers would be most logical. As a guide, if there is data you can access via the User object itself, then have properties\methods created directly on the User class. Oftern if you have foregin keys to other tables, then accessing those data items can be done via the User class and should be encapsulated inside properties\methods. On the other hand, if you wanted to find information relating to a User , but would require another object's help, then create a UserService class. Keep the repository simple - have data retrieval\manipulation methods only, and created more involved/business logic hungry methods in a seperate service class e.g. public class UserService { private DbContext Context {get; set;} public IList GetUserDocument(User user) { // Assuming User table does not have a Document ID as a foregin key.. // Do whatever you need to do to get document. } } The above is rough guide and by no means the defacto standard, but it works well for me.
