[site]: datascience
[post_id]: 126862
[parent_id]: 
[tags]: 
How to get the closest samples to time series dataset?

I have a deep learning time series classification model. I want to understand if the model failed to classify, due to missing or incorrupt training inputs. For simplicity let's say we have a training dataset with 4 sequences, and I want to check which training sequence is the most similar to investigate sample: F1, F2, F3, F4 are the inputs to the model. I want to check for F5, which "f" is the clostest ? according to the plot, it seems that the red (f1). When I'm trying to run KDTree or fastdtw , they give f2 (green). why is it ? which algorithm can I use to get similar samples from the training set ? full code: import pandas as pd import numpy as np import plotly.graph_objects as go import plotly.express as px import matplotlib.pyplot as plt from scipy.spatial import KDTree l_colors = ["red", "green", "blue", "orange", "black"] l_title = ["f1", "f2", "f3", "f4", "f5"] arr_data = np.array([[30, 34, 9, np.nan, np.nan, np.nan], # f1 [10, 11, 39, 40, 55, np.nan], # f2 [190, 120, -10, np.nan, np.nan, np.nan], # f3 [40, 100, -20, np.nan, np.nan, np.nan], # f4 [30, 35, 10, 40, 45, 55]]) # f5 def create_plot(data): for i in range(len(data)): time = np.arange(0, 6) values = data[i] plt.plot(time, values, color=l_colors[i], marker='o', linestyle='-', label=f'{l_title[i]}') plt.xlabel('time') plt.ylabel('Vol') plt.legend() plt.grid(True) create_plot(arr_data) data_no_f5 = arr_data[:-1] f5 = arr_data[-1, :] data_no_f5[np.isnan(data_no_f5)] = 0 f5[np.isnan(f5)] = 0 tree = KDTree(data_no_f5) distance, index = tree.query(x = f5.reshape(1, -1), k = 1, # nearest_neighbors, p = 2) # Euclidean distanc print(l_title[index[0]]) from fastdtw import fastdtw distances = [fastdtw(f5, row)[0] for row in data_no_f5] closest_row_index = np.argmin(distances) print(l_title[closest_row_index])
