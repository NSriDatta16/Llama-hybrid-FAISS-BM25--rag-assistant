[site]: stackoverflow
[post_id]: 924849
[parent_id]: 924761
[tags]: 
Oh boy. This depends a lot on the engine. I can tell you now that you want the second option. How does lighting work? Is it dynamic or static? Let's assume it's a combination of both. For static lighting, check the lightmap nearby. It's either vertex based or a texture, either way, you can sample it at a few points nearby and average them. Look at how the engine computes the lighting for models, dig into the graphics code and see where the data actually comes from, you can use the same source. Some games have volumetric lighting information, Quake 2 does this on a per-leaf basis in the BSP tree (easy to check) and Quake 3 has volumetric textures (also easy to check). Then you'll need to add the dynamic lights. One way you can do this is by shooting rays from the player (probably a few different rays to be sure, from different parts of the player) towards the light source. Count how many are hit and add a little bit to your number for each one, depending on how far the light is. All decent game engines have a procedure for "shoot ray and see what it hits", it's how AIs do line of sight and how you figure out what bullets hit and what happens when you run into the wall. Don't shoot too many rays too far because it could be slow. You wouldn't have to recompute this value too often, you could do it whenever a new light source is created and then every second or so.
