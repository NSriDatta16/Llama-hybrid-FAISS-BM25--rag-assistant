[site]: stackoverflow
[post_id]: 900369
[parent_id]: 
[tags]: 
C++ boost shared_ptr as a hash_map key

I'm making a neural network and wanted to use a hash_map to keep weight references for output neurons for each neuron: class Neuron; //forward declaration was there (sorry I forgot to show it earlier) typedef double WEIGHT; typedef stdext::hash_map ,WEIGHT> NeuronWeightMap; class Neuron { private: NeuronWeightMap m_outputs; //... public: Neuron(); ~Neuron(); //... WEIGHT GetWeight(const boost::shared_ptr & neuron) const { NeuronWeightMap::const_iterator itr = m_outputs.find(neuron); if( itr != m_outputs.end() ) { return itr->second; } return 0.0f; } }; I realize that I can't use the boost::shared_ptr as the key of a stdext::hash_map, so what would be another suggestion? Are there any work-arounds or is the only option to use a different key or maybe switch to an std::map? Thanks! Here is the errors: 1>c:\program files (x86)\microsoft visual studio 8\vc\include\xhash(61) : error C2440: 'type cast' : cannot convert from 'const boost::shared_ptr ' to 'size_t' 1> with 1> [ 1> T=Neuron 1> ] 1> No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called 1> c:\program files (x86)\microsoft visual studio 8\vc\include\xhash(99) : see reference to function template instantiation 'size_t stdext::hash_value (const _Kty &)' being compiled 1> with 1> [ 1> _Kty=boost::shared_ptr 1> ] 1> c:\program files (x86)\microsoft visual studio 8\vc\include\xhash(98) : while compiling class template member function 'size_t stdext::hash_compare ::operator ()(const _Kty &) const' 1> with 1> [ 1> _Kty=boost::shared_ptr , 1> _Pr=std::less > 1> ] 1> c:\program files (x86)\microsoft visual studio 8\vc\include\hash_map(80) : see reference to class template instantiation 'stdext::hash_compare ' being compiled 1> with 1> [ 1> _Kty=boost::shared_ptr , 1> _Pr=std::less > 1> ] 1> c:\program files (x86)\microsoft visual studio 8\vc\include\xhash(119) : see reference to class template instantiation 'stdext::_Hmap_traits ' being compiled 1> with 1> [ 1> _Kty=boost::shared_ptr , 1> _Ty=common_ns::WEIGHT, 1> _Tr=stdext::hash_compare ,std::less >>, 1> _Alloc=std::allocator ,common_ns::WEIGHT>>, 1> _Mfl=false 1> ] 1> c:\program files (x86)\microsoft visual studio 8\vc\include\hash_map(90) : see reference to class template instantiation 'stdext::_Hash ' being compiled 1> with 1> [ 1> _Traits=stdext::_Hmap_traits ,common_ns::WEIGHT,stdext::hash_compare ,std::less >>,std::allocator ,common_ns::WEIGHT>>,false> 1> ] 1> FILE_PATH_REMOVED\neuralnet.h(21) : see reference to class template instantiation 'stdext::hash_map ' being compiled 1> with 1> [ 1> _Kty=boost::shared_ptr , 1> _Ty=common_ns::WEIGHT 1> ] 1>NeuralNet.cpp 1>c:\program files (x86)\microsoft visual studio 8\vc\include\xhash(61) : error C2440: 'type cast' : cannot convert from 'const boost::shared_ptr ' to 'size_t' 1> with 1> [ 1> T=Neuron 1> ] 1> No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called 1> c:\program files (x86)\microsoft visual studio 8\vc\include\xhash(99) : see reference to function template instantiation 'size_t stdext::hash_value (const _Kty &)' being compiled 1> with 1> [ 1> _Kty=boost::shared_ptr 1> ] 1> c:\program files (x86)\microsoft visual studio 8\vc\include\xhash(98) : while compiling class template member function 'size_t stdext::hash_compare ::operator ()(const _Kty &) const' 1> with 1> [ 1> _Kty=boost::shared_ptr , 1> _Pr=std::less > 1> ] 1> c:\program files (x86)\microsoft visual studio 8\vc\include\hash_map(80) : see reference to class template instantiation 'stdext::hash_compare ' being compiled 1> with 1> [ 1> _Kty=boost::shared_ptr , 1> _Pr=std::less > 1> ] 1> c:\program files (x86)\microsoft visual studio 8\vc\include\xhash(119) : see reference to class template instantiation 'stdext::_Hmap_traits ' being compiled 1> with 1> [ 1> _Kty=boost::shared_ptr , 1> _Ty=common_ns::WEIGHT, 1> _Tr=stdext::hash_compare ,std::less >>, 1> _Alloc=std::allocator ,common_ns::WEIGHT>>, 1> _Mfl=false 1> ] 1> c:\program files (x86)\microsoft visual studio 8\vc\include\hash_map(90) : see reference to class template instantiation 'stdext::_Hash ' being compiled 1> with 1> [ 1> _Traits=stdext::_Hmap_traits ,common_ns::WEIGHT,stdext::hash_compare ,std::less >>,std::allocator ,common_ns::WEIGHT>>,false> 1> ] 1> FILE_PATH_REMOVED\neuralnet.h(21) : see reference to class template instantiation 'stdext::hash_map ' being compiled 1> with 1> [ 1> _Kty=boost::shared_ptr , 1> _Ty=common_ns::WEIGHT 1> ] 1>Generating Code...
