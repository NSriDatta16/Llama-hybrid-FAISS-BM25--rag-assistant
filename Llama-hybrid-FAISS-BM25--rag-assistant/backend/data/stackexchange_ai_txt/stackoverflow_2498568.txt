[site]: stackoverflow
[post_id]: 2498568
[parent_id]: 2484187
[tags]: 
Assuming that your enlarged Dublin map is a movieClip containing all it's own buttons etc, you could capture the clip's onRollOver event to start zooming, something like this: // d is an object containing all the variables we need for where to start & finish var d:Object = { start_x:dublin._x, start_y:dublin._y, start_xscale:dublin._xscale, start_yscale:dublin._yscale, end_x:0.5*Stage.width,// change end_x and end_y... end_y:0.5*Stage.height,//... to suit your layout end_xscale:100, end_yscale:100, totalSteps:10,// zoom in 10 steps (more steps = slower) currentStep:0 }; //dublin is set to be invisible (but rollOver-able) to start with dublin._alpha = 0; //the doStep function does a single stage of the zoom (once per frame) function doStep(clip):Void { var fraction=d.currentStep/d.totalSteps; clip._x = d.start_x+(d.end_x-d.start_x)*fraction; clip._y = d.start_y+(d.end_y-d.start_y)*fraction; clip._xscale = d.start_xscale+(d.end_xscale-d.start_xscale)*fraction; clip._yscale = d.start_yscale+(d.end_yscale-d.start_yscale)*fraction; }; //catch rollOver and rollOut events for the dublin clip: dublin.onRollOver = function() { if (d.currentStep =d.totalSteps) { delete this.onEnterFrame; } }; } }; dublin.onRollOut = function() { if (d.currentStep>0) { //start shrinking this.onEnterFrame = function() { d.currentStep--; doStep(this); if (d.currentStep To implement this, do the following: Put an instance of your large-scale map, (instance name = dublin ) on the stage, and use the resizing tool to shrink it down so it sits over the location of Dublin on your large-scale map. You can set it's _alpha to (say) 20 for convenience (gets set to 0 at runtime). Paste the code (above) on the timeline of dublin 's parent, in a frame where dublin is present (forgive me, I've kind of assumed you're not using AS2 classes to organise your code). There's one drawback to this technique : because we're capturing the onRollOver event with dublin , you may find that any buttons inside it do not respond to rollOvers; they can still be made clickable, however. Hope this helps.
