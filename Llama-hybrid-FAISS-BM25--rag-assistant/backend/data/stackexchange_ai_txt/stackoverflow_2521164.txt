[site]: stackoverflow
[post_id]: 2521164
[parent_id]: 2521143
[tags]: 
public class Column extends ArrayList {} List deck = Cards.createNewDeck(); Column[] columns = new Column[10]; int c = 0; for (int i = 0; deck.size() > 50; i = (i+1)%10) { if (columns[i] == null) columns[i] = new Column(); columns[i].add(Cards.dealTopCard(deck)); } The modulo ( % ) operator gives the remainder of the integer division between the two numbers effectively giving you a number that goes back to 0 when reaching 10. By the way you should decide: use a bidimensional array or just ArrayLists , don't mix things. Then since generics do exist, use them instead that extending classes: that's what parametric polymorphism is for! Something like: ArrayList > columns = new ArrayList >();
