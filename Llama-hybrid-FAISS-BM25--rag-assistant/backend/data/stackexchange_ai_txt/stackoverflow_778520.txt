[site]: stackoverflow
[post_id]: 778520
[parent_id]: 639263
[tags]: 
See this discussion It is essentially impossible in plain managed code in Compact Framework 1.0. In 2.0 is it possible but error prone, fragile and most importantly NOT guaranteed to be correct (a serious flaw). I would suggest instead writing a macro which can find all instances of "((MethodInfo)MethodBase.GetCurrentMethod())" and determinte the method in which they reside. Simply converting every line like so ".*\(\(MethodInfo\)MethodBase\.GetCurrentMethod\(\)\).*" to throw new Exception((MethodInfo)MethodBase.GetCurrentMethod()).Name); Compile for the non compact framework (fixing by hand the locations that the regex replace broke, there shouldn't be many) Run every method in the classes where replacements happened by reflection catch the resulting exceptions and print the message (method name) and the first line of the stack trace. This then gives you a list of what you need to put in directly at each call site (probably backed up by a lazily created static field holding the MethodInfo for each one. This is cumbersome but might work reasonably well as a one off action pre framework update though to be honest it might be just as quick to go through and do it by hand.
