[site]: stackoverflow
[post_id]: 1950559
[parent_id]: 
[tags]: 
accessing variable modifications made from within an inline function in javascript

I'm trying to pass local variables to an inline function in javascript and have that (inline) function manipulate those variables, then be able to access the changed variable values in the containing function. Is this even possible? Here's a sample of the code I'm working with: function addArtists(artist, request, origElm, xml){ //variables var artistIdArray = []; /*coding*/ //traverse xml $('element', xml).each(function(){ /*coding*/ $.ajax({ /*parameters*/ success: function(html) { var artistAbb = html; /*coding*/ //add this element's id to the array of ids to make it draggable later artistIdArray.push(artistAbb); alert(artistIdArray[artistIdArray.length - 1]); }//end on success });//end ajax call });//end each(function() alert(artistIdArray.length); } The problem is I keep getting artistIdArray.length = 0, even though elements are several elements are 'alerted' after they're added to the array. Like I said, I don't know if it's even possible without global variables or objects. Any ideas? Am I totally wrong? Edit: Entire function function addArtists(artist, request, origElm, xml){ //variables var artistIdArray = []; //create ordered list //set new s class var olClass = "artists"; //holds the class of new //create id for new var olId = "artists"; //holds the id of new //create actual element var ol = $(' ').attr('id',olId) .addClass(olClass) .appendTo(origElm); //create the elements from the returned xml //create class for new s, (just the request minus the 's') var liClass = request.substring(0, request.length-1); //traverse xml $('element', xml).each(function(){ //create id for new based on artist abbreviation var artist = $(this).text(); $.ajax({ url: "php/artistToAbb.php", data: {artist: artist}, dataType: "html", async: true, success: function(html) { var artistAbb = html; //create li var li = $(' ').attr('id', artistAbb) .addClass(liClass) .appendTo(ol); //create arrow icon/button for li var img = $(' ').attr('id', artistAbb + 'ArrowImg') .attr("src","images/16-arrow-right.png") .attr('onclick', "expand(this, '" + artistAbb + "', 'years', 'danwoods')") .addClass("expImg") .appendTo(li); var artistTxt = $(' ' + artist + ' ') .addClass("artist_txt") .attr('onMouseOver', 'catMouseOver(this)') .attr('onMouseOut', 'catMouseOut(this)') .appendTo(li); //tag the ol element's class $($(origElm)[0]).addClass('expanded'); //add this element's id to the array of ids to make it draggable later artistIdArray.push(artistAbb); alert(artistIdArray[artistIdArray.length - 1]); }//end on success });//end ajax call });//end each(function() //make newly added artist elements draggable for(var n = 0; n
