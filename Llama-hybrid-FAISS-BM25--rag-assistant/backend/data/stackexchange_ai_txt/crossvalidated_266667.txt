[site]: crossvalidated
[post_id]: 266667
[parent_id]: 257742
[tags]: 
The problem (apparently) is that you haven't chosen reasonable priors for the model. As I'm not familiar with the trend you're using, I first did a simple maximum-likelihood estimate (using a Poisson likelihood) to get a sense of reasonable values for the parameters. Then I set priors that would accommodate those parameter values, but made the priors very broad so that they would not bias the posterior. Your data, along with a smattering of the posterior predictive trends from the MCMC chain, are shown here: Here is complete R code, which should run as is. # Original script from http://stats.stackexchange.com/questions/257742/bayesian-parameter-estimation-with-negative-binomial-data-no-model-fit-achieved # Extensively modified by John K. Kruschke, 10-March-2017. graphics.off() # This closes all of R's graphics windows. rm(list=ls()) # Careful! This clears all of R's memory! library(rjags) y 0") if ( sd 0") rate = ( mode + sqrt( mode^2 + 4 * sd^2 ) ) / ( 2 * sd^2 ) shape = 1 + mode * rate return( list( shape=shape , rate=rate ) ) } nGammaPrior = gammaShRaFromModeSD( mode=nOpt , sd= nOpt/2 ) nSh = nGammaPrior$shape nRa = nGammaPrior$rate bGammaPrior = gammaShRaFromModeSD( mode=bOpt , sd= bOpt/2 ) bSh = bGammaPrior$shape bRa = bGammaPrior$rate #--------------------------------------------------------------- modelString =" model { for (i in 1:N) { # Likelihood y[i] ~ dnegbin( p[i] , r ) # re-parametarization for p[i]: See # http://doingbayesiandataanalysis.blogspot.com/2012/04/negative-binomial-reparameterization.html p[i]
