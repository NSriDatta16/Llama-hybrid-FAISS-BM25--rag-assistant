[site]: stackoverflow
[post_id]: 5370362
[parent_id]: 5369642
[tags]: 
Something must have obviously gone wrong with your TabTemplate. Maybe it is better to start from scratch. I have set up a class that does not extend TabTemplate, but has an instance of it as a member. This way, you'll get to separate the text and the graphics, but should be able to make the clip resize as a whole, instead of resizing its parts separately. Two things are important for this to work: You will have to remove the textfield from TabTemplate. It will be generated dynamically. If you want to use embedded fonts, you'll have to take care of embedding the font style and setting the TextFormat; I did not put any such code in there. You cannot use 9-slice-scaling with vector masks. If you have a mask that requires 9-slice-scaling, you will need to change the way your graphics are set up, or create a drawing mechanism in ActionScript (for example, if you want rounded corners) that refreshes when the text has been set. Here's the code: package mypackage { import flash.display.MovieClip; import flash.text.TextField; import flash.text.TextFieldType; import flash.text.TextFieldAutoSize; public class Tab extends MovieClip { private var background : TabTemplate = new TabTemplate(); private var tabname : TextField = new TextField (); public function set text( value:String ):void { tabname.type = TextFieldType.DYNAMIC; tabname.multiline = tabname.wordWrap = false; tabname.autoSize = TextFieldAutoSize.LEFT; tabname.text = value; tabname.y = (background.height - tabname.textHeight) *.5; tabname.x = tabname.y; addChild (tabname); background.width = tabname.width + (tabname.x *2); addChildAt (background, 0); } public function get text():String { return tabname.text; } } } See if this works for you. If not, let me know if you get any error messages, and let's go on from there.
