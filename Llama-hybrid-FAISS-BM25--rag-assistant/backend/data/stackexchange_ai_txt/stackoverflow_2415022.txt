[site]: stackoverflow
[post_id]: 2415022
[parent_id]: 
[tags]: 
NullReferenceException while working with ObjectBuilder in implementing MVP pattern

I am implementing MVP pattern in my application. But I am getting NullReferenceException on the Page_Load of my view class. Here is my presenter class: using Microsoft.Practices.CompositeWeb; namespace PresenterDLL { public class NamePresenter : Presenter { public void SayHello() { View.Name = 200; } } public interface IProduct { int Name { get; set; } } } and here is code behind class of my view: using System; using PresenterDLL; using Microsoft.Practices.ObjectBuilder; public partial class _Default : BasePage, IProduct { private NamePresenter _presenter; [CreateNew] public NamePresenter Presenter { set { this._presenter = value; _presenter.View = this; } } protected void Page_Load(object sender, EventArgs e) { if (!IsPostBack) { this._presenter.OnViewInitialized(); this._presenter.SayHello(); } this._presenter.OnViewLoaded(); } public int Name { get { return 10; } set { TextBox1.Text = value.ToString(); } } } while running the application I am getting NullreferenceException in the Page_Load method, as _presenter is null. Because it's never called. So, what should i do so that ObjectBuilder can call it before the page life cycle begins.. My base page class is: public class BasePage : Microsoft.Practices.CompositeWeb.Web.UI.Page { public BasePage() : base() { // _ctlForm = this; // WebClientApplication.BuildItemWithCurrentContext(this); } protected override void OnInit(EventArgs e) { base.OnInit(e); //Disable all caching Response.CacheControl = "no-cache"; Response.AddHeader("Pragma", "no-cache"); Response.Expires = -1; } protected override void OnPreInit(EventArgs e) { //This has been moved to the top since the preinit in the base clase is responsible //for dependency injections. //ObjectFactory.BuildUp(this); base.OnPreInit(e); } protected override void OnPreRender(EventArgs e) { base.OnPreRender(e); } } Can someone please figure out where is the problem...
