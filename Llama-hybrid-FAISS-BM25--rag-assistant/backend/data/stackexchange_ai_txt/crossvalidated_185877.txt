[site]: crossvalidated
[post_id]: 185877
[parent_id]: 
[tags]: 
Prediction intervals for forecast from aggregated cases

I have data on $N$ individuals that were followed for some time. Variable $Y$ that describes accumulation of some goods by the individuals. For each individual there is some number of records (different in each case). Values of $Y$ grow for each individual $i=1,...,N$, through the time denoted as $t$ (I do not have records for all the $t$'s for each individual), resulting in $y_{it}$ observations. There are two explanatory variables $X$ and $Z$ for each individual (unfortunately they are correlated, but both need to be included since having strong predictive power). Each of the individuals started the growth at different time point counting from the beginning of the experiment, i.e. at time $g_i$ and time $t$ is counted from this moment for each individual. (The simulated data example is provided below if the description appears blurry.) My current model is a variation of linear regression $$ y_{it} = \alpha + \beta t + \gamma x_i + \zeta z_i + \varepsilon $$ but since the growth is rather exponential than linear, GLM with Gaussian family and log link function was used. Next, the estimated parameters are used with external data to produce a forecast and the predicted values are aggregated over $g_i + t$ time points, so to obtain total growth of $Y$ in the external population. I have partial information on $Y$ in the external population. How to calculate prediction intervals in this case? First thing that comes to my mind is bootstrap, but maybe there is less computationally intensive method (even if approximate)? Another option is hierarchical Bayesian model to obtain posterior predictive distribution, but again I want to avoid computationally intensive methods in here if possible. Below I post an R code example that produces a simplified simulated data and reproduces the basic analysis. set.seed(123) N 0.75) { # t=0 was observed for each case data[r, ]$id % filter(g % group_by(g) %>% summarise(total = sum(forecast)) plot(aggregated_fsct$g, aggregated_fsct$total)
