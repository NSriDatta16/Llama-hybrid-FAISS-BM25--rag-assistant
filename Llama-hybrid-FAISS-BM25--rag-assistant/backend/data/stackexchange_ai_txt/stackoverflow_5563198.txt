[site]: stackoverflow
[post_id]: 5563198
[parent_id]: 5562356
[tags]: 
Data hiding is a way of controlling dependency of code in one part of an application on code in another part of the application . That is, when one bit of code changes, should one or more other bits of code consequently need updating too? As much as possible, you want the answer to that to be "no", because otherwise every little change you make to your program kicks off an avalanche of consequent changes before the program settles into a stable state where it will again operate properly. To discourage a programmer from making their code arbitrarily dependent on any aspects of your class's implementation, and encourage them to only rely on a controllable part necessary for objects of the class to perform their intended function for the client, you can nominate the data and/or functions that the client is allowed to use: that's the "public" and/or "protected" interface. Other things that you want to be able to change without the client code needing to care should be made private . This is all about development, and has nothing to do with the data the program handles at run-time, or protecting the program logic/data from snooping on by the end user . As an example, taskinoor appropriately cites a Date class that ensures the dates stored remain valid, so that client code can't just reach in and set the date to "31 Feb" or some other non-sensical value. Further, without affecting clients, it is possible to change the data layout from say having three numbers store day, month and year to one number storing days since some reference day without affecting the clients (yielding a different performance profile - faster relative movements through dates but slower conversions to/from D/M/Y values).
