[site]: stackoverflow
[post_id]: 5533103
[parent_id]: 5529836
[tags]: 
Well, i don't see how it would be possible. I wouldn't say it's "outrageous" to suggest, it's simply not the intended use. In fact this whole concept, while very useful in this situation, was not designed to answer this case. LINQ was intended as an extendable query language with a rich expression mechanism. Linq extends the language syntax to allow strong, type-safe expressions on the provided types and this is why you can use it in this way to get a strong and typesafe expression. In this case, you are creating a function that transforms one data type (the T object) into another - a general object. If i was prohibited from writing something like p=>p.Name+"something" i would lose a lot of the inherent flexibility of the language. I.e. This would not be possible p=>p.X + p.Y as some query result that returns a sum of elements. The solution you showed is designed to utilize a feature of linq - strong, type safe property names. It provides an elegant way of using linq to solve a problem, but like any solution - it is open to possible abuse. A developer that passes p=>p.Name+"something" did not grok the intended use of the solution, which is a matter for training.
