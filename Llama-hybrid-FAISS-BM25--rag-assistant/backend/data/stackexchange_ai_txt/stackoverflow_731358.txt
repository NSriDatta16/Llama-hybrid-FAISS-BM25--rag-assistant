[site]: stackoverflow
[post_id]: 731358
[parent_id]: 
[tags]: 
Need some suggestion for a database schema design

I'm designing a very simple (in terms of functionality) but difficult (in terms of scalability) system where users can message each other. Think of it as a very simple chatting service. A user can insert a message through a php page. The message is short and has a recipient name. On another php page, the user can view all the messages that were sent to him all at once and then deletes them on the database. That's it. That's all the functionality needed for this system. How should I go about designing this (from a database/php point of view)? So far I have the table like this: field1 -> message (varchar) field2 -> recipient (varchar) Now for sql insert, I find that the time it takes is constant regardless of number of rows in the database. So my send.php will have a guaranteed return time which is good. But for pulling down messages, my pull.php will take longer as the number of rows increase! I find the sql select (and delete) will take longer as the rows grow and this is true even after I have added an index for the recipient field. Now, if it was simply the case that users will have to wait a longer time before their messages are pulled on the php then it would have been OK. But what I am worried is that when each pull.php service time takes really long, the php server will start to refuse connections to some request. Or worse the server might just die. So the question is, how to design this such that it scales? Any tips/hints? PS. Some estiamte on numbers: number of users starts with 50,000 and goes up. each user on average have around 10 messages stored before the other end might pull it down. each user sends around 10-20 messages a day. UPDATE from reading the answers so far: I just want to clarify that by pulling down less messages from pull.php does not help. Even just pull one message will take a long time when the table is huge. This is because the table has all the messages so you have to do a select like this: select message from DB where recipient = 'John' even if you change it to this it doesn't help much select top 1 message from DB where recipient = 'John' So far from the answers it seems like the longer the table the slower the select will be O(n) or slightly better, no way around it. If that is the case, how should I handle this from the php side? I don't want the php page to fail on the http because the user will be confused and end up refreshing like mad which makes it even worse.
