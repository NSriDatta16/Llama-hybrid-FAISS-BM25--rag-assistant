[site]: stackoverflow
[post_id]: 2103243
[parent_id]: 
[tags]: 
Custom web MVC for a legacy Java EE project

I am in the middle of creating my own custom MVC web framework for a project. This project has very old code base where one JSP page directly submits a form to another JSP whereas the paths are also hardcoded. Now it is a big project and putting Struts or JSF will take considerable amount of time. So my suggestion is to build a small custom MVC framework and convert many existing page flows into it and also encourage them to develop newer applications using this new MVC frameworks. I would like to review this with all of you whether it makes sense or we should directly go to the standard MVC frameworks. My idea 1. Create one front controller servlet which will have URL pattern like /*.sm 2. This servlet reads one config file and creates a map whose key is requestedURI and value is the class name of the command bean. 3. upon intercepting any action request it reads the parameter map (request.getParameterMap()). This servlet refers the already built map, understand whose command bean is to be invoked? Creates an instance of this command bean. 4. pass the parameter map to this command bean and calls execute method. 5. if any exception is found, front controller servlet forwards the request to one global error page 6. if everything is fine, it then forwards the request to the expected URI (by removong .sm and replace it with .jsp) Do you think I am missing anything here? I know I can make it more fancy by providing error page per request page in the config file or so but those can be done later as well.
