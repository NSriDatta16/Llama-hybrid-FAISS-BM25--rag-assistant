[site]: crossvalidated
[post_id]: 286908
[parent_id]: 286900
[tags]: 
Often a flat forecast is in fact better than non-trivial ARIMA , just to mention this. However, your data certainly aren't such a case. One problem is that you haven't told R that your data are a time series with a frequency of 365. In this case, R can't "on its own" decide that there is seasonality. After all, a long string of data could have all kinds of seasonalities, e.g., with cycle lengths of 7 (daily data with weekly seasonality), 365.25 (daily data with yearly seasonality), 30 (daily data with monthly seasonality), 60, 3600, 24 (I'll let you guess), 11 (yearly sunspot data), etc. You can't just "let the algorithm decide". Always specify the frequency parameter if your time series might be seasonal. And even if you have specified the frequency , ARIMA has major problems in detecting seasonality with few long cycles in the data - even if the seasonality is "obvious" for a human. library(forecast) set.seed(1) temps The last two commands actually produce the very same plot, because auto.arima() simply doesn't detect the seasonality. The solution is to force auto.arima() to use a seasonal model, by specifying D=1 : plot(forecast(auto.arima(ts(temps,frequency=365),D=1),h=365)) See also this earlier question. So. This hopefully addresses one of your questions. Your other question is, to be honest, unclear to me. How do you expect to get a different forecast each time you run your modeling (assuming you re-run it on the same data each time)? ARIMA does not involve any randomization. It is deterministic. However, you do already get predictive distributions and prediction intervals. See the fan plots for the forecasts. Maybe this earlier question is helpful: How to incorporate uncertainty of actual historical data into forecast prediction intervals?
