[site]: crossvalidated
[post_id]: 383726
[parent_id]: 383717
[tags]: 
If I understand you correctly, you have a single input, day_time, which is nonlinear, as stated in example. Logistic regression is linear in its inputs, however, you are free to make nonlinear transformations of your original inputs and use those as inputs. In your case you could dummy code day_time into 21 Boolean variables. In fact I would use one dummy code for day-of week, one for time of day, and then also create the interactions ( = day_x_time_y). You would then also create interaction with the patient ids, to cover individual effects as you described (person X only missing daytime slot 19). You would then regularise the model using L1 or L2 regularisation. This model would then identify day patterns, or time patterns, or patient X time patterns. Regularisation ensures that the model aims to have as general a model as possible ( if most people miss on Monday, then the model will pick up a general Monday effect,rather than learning a Monday effect separately for each patient). You can do what I describe by using the https://patsy.readthedocs.io/en/latest/quickstart.html and scikit learn packages. You would provide a formula such as Medicine taken ~ hour * day* person, And patsy would create a matrix of all the base variables and every possible interaction.you would then pass this matrix to scikit learn to perform the regularised logistic regression As an alternative model you could use a tree model such as xgboost, but I would still break day_time into two separate variables, day and time
