[site]: crossvalidated
[post_id]: 148487
[parent_id]: 
[tags]: 
How to measure loss of performance of clustering by applying dimensionality reduction

Let's suppose I have a given dataset with $n$ features. Having a data-centric approach, I would like to measure the loss of performance of applying a given dimensionnality reduction technique, for a given clustering algorithm. The dimensionality reduction part doesn't matter to the point that my problem could be seen as a symmetric problem, that is how well do I over/under-perform if I get a dataset with more/less features. In other words I would like to benchmark several couples of (dimensionality reducer, clustering algo) considered as black-boxes. The only thing I suppose I know, is the dataset I have and its number of features before and after the dimension modification step : $n$ and say $n+m$ where $m\in \mathbb Z$. Is there any measure of clustering performance that allows me to compare the results of the clustering algorithm before and after the alteration of dimension? I am aware of a number of clustering performance metrics, I would like to know the 'best' ones in my particular case. Thanks in advance. EDIT This is why "best" is between pythonic quotation marks gung. As far as i know, clustering rely on a distance (often euclidean). Many metrics also rely on distances, and it is somewhat natural to use the same distance for clustering and evaluating clustering. Some other metrics don't rely on a distance, at the cost of not being able to compare clustering on different datasets (rank index). The point is to find a metric that meets the following requirements : different datasets dimensions (with one set included in the other) different resulting numbers of clusters eventually different number of points in the datatasets (this in not mandatory) It should measure "how much" consistent are the clusters given by the augmentation or reduction of the dataset dimension compared to the clustering on the initial dataset. Silhouette coefficient looks like a good candidate but maybe there is a more appropriate one or just a more sophisticated version. Let me know
