[site]: stackoverflow
[post_id]: 3961184
[parent_id]: 3961125
[tags]: 
I made a similar app as a Java project last semester. Make the AI decide bets based on its own cards, not based on its (or other players) possibilities. Fold with bad cards, check/see with good cards, raise with great cards. Your AI player should be able to understand when they have a pair/three of a kind/full house. Where they will be stupid is that they may throw away four suited cards and not wait for a flush draw, or throw away a great straight draw. The computer also has no concept of bluffing, and won't be scared away by large bets. It's easy to beat an AI when you know how it makes decisions. EDIT: The problem with AI is that "sounds quite simple" and "is quite simple" can be very different things. I'm pretty sure that I researched the same type of programs ( Univeristy of Alberta , etc.) for about a week, but we may have ended up rolling our own. We (four people) did our project in 4 weeks, so 20+ weeks should be totally doable. Even though it doesn't use the same programming language, I used PokerTH as the Golden Example of what I was emulating the end result to be. We released our project as fvtctxholdem on SourceForge under the Academic Free License after it was graded, (source available here , revision history here ) so if there is any code that is useful, feel free to use it as long as you give it proper attribution. Our project was command-line only, so you won't find any graphics of interest here.
