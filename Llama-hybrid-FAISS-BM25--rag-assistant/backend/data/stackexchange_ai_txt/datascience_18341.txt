[site]: datascience
[post_id]: 18341
[parent_id]: 
[tags]: 
How are weights represented in a convolution neural network?

I have been trying to develop a convolution neural network following some guides online . However, most guides I have encountered gloss over an important detail, which is how to programmatically represent the weights in a CNN. As far as I understand, in a "regular" neural network, the weight of a connection is a numerical value, which is adjusted in order to reduce the error; then back-propagation is used to further update the weights, reducing thus the error, etc. However, in a CNN, the input is an array of numbers (the image), and a subset of those (the filter) to calculate the mean error, by multiplying the filter pixels by the original pixels. So, is there a weight neuron for each filter (kernel or feature map) of the image? Or is a single weight neuron represented by the sum of all the mean error's calculated from convolving the filter over the receptive field, such that you have one value, in the end, that is the total error for the entire image?
