[site]: crossvalidated
[post_id]: 630578
[parent_id]: 
[tags]: 
Peculiar silhouette score is reduced with more clusters

I am working with Python and a set of sensors. I want to use clustering on them. To do that I have used hierarchical cluster with average linkage and euclidean distance as: Clustering_Jerarquico=linkage(data_state_normalized, 'average') Now, I want to use the silhouette score to check for the optimal amount of clusters. Inspired by the elbow method, I have generated the following for loop to check for which value of "t" the graph slows down silhouette_index_list=[] for i in range(100, -1, -1): clusters_provisional=fcluster(Clustering_Jerarquico, t=i, criterion="distance") silhouette_avg_provisional = silhouette_score(data_state_normalized, clusters_provisional, metric='euclidean') silhouette_index_list.append(silhouette_avg_provisional) I am expecting to see an increase in the index until I arrive at a value of 1 at the distance of 0. However, I see a function which increases until it arrives to a top value and then decreases again. This makes no sense to me. As far as I understand, the silhouette index should go between -1 and 1 from the case in which all the data is in a single cluster until the case in each variable is in it's own cluster. Am I understanding it wrong or can this be explained by the data itself? I have cleaned the data using data_state_normalized = scaler.fit_transform(data_state)
