[site]: stackoverflow
[post_id]: 1713028
[parent_id]: 1712963
[tags]: 
It really depends on the situation. If you're working within your own branch or using git, fire away If there is an automated build process or continuous integration, you'll want to submit granular improvements If you're working concurrently with others on a branch, you'll want to submit when you have solid granular improvements, but on more of a 'milestone' basis. Generally when I work it's in my own branch, so I follow 2 guidelines Commit if something is "complete". This is often used loosely - it can be a function, a class, a page, something that is complete enough that it can stand on it's own Commit if it's a "This works, but it's ugly" situation. Committing here acts as a fallback as I go back and revise my ugly fixes into something more elegant. Worse case, I go back to the working solution, however ugly.
