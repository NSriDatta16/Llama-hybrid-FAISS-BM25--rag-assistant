[site]: stackoverflow
[post_id]: 3782113
[parent_id]: 3781935
[tags]: 
This is possible through the built-in model binder, but you have to do a little bit of convention-based naming of your form objects. First, your action needs to take a collection: [HttpPost] public ActionResult CreateFoos(List foos) { // I have a list of the foo objects that were posted } And then, in the view, let's say you wanted to make a form for each object: x[i].Property1) %> x[i].Property2) %> x[i].Property3) %> Pay attention to how the controls are rendered in the HTML, because in your "create" view, you might want to have a javascript button that allows the user to add another record, and you'll have to increase the index for each additional control. It's not too hard, but I just wanted to warn you to pay attention to the source it actually generates.
