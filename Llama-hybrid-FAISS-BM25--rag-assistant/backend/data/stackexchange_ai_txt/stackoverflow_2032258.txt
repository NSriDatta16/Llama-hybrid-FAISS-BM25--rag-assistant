[site]: stackoverflow
[post_id]: 2032258
[parent_id]: 2032239
[tags]: 
When you're dealing with binary numbers you can use a bit field , e.g.: bit(64) is a bit field with up to 64 significant bits (the maximum size allowed). In order to insert constant values, you can use the b'value' notation like so: insert into bits values (b'0001001101001'); You can convert a bit field to a number by just adding 0 or using cast(). There's also the handy bin(), hex(), and oct() function to print the value in a particular base. If non-numeric, varbinary or blob would be the most efficient storage method, binary is also available (it will pad shorter values with nil bytes tho). In case, you don't want to deal with the conversions, you can store the string in a varchar or char. It will only use up about 8 times the space of a compact varbinary. To insert/read from your app, you'll need to convert your sequence into a packed byte array, then store the packed string in the varbinary column. In C# you might use BitConverter, for php you might use pack/unpack.
