[site]: stackoverflow
[post_id]: 3095237
[parent_id]: 3094266
[tags]: 
A couple of reasons you could need a manifest. First and foremost, you need one to tell Windows that your program is aware of UAC policies. That requires a manifest that contains the element. If that is missing, Windows will treat your program as a legacy program and redirect unsafe access to the registry and the file system. Writes to privileged registry keys are redirected to HKCU. File writes to privileged directories are redirected to isolated storage. You'll need a manifest if your program is using DLLs that are stored in the Windows side-by-side cache. That is pretty unlikely to be the case if you still use VS6. WinSxS is used for the MFC and CRT libraries by VS2005 and VS2008 programs. But not VS2010, by popular demand from MSFT customers. You'll need a manifest if you want to enable visual themes for your application. Required to load the modern version of the common controls from comctl32.dll version 6.0, stored in the side-by-side cache rather than the legacy version stored in system32. And you need a manifest if you use registry-free COM, the manifest entries replace what is normally written to the registry, allowing for local deployment of in-process COM servers. Most of this is automated in the modern versions of Visual Studio.
