[site]: stackoverflow
[post_id]: 3096131
[parent_id]: 
[tags]: 
What is the best components stack for building distributed log aggregator (like Splunk)?

I'm trying to find the best components I could use to build something similar to Splunk in order to aggregate logs from a big number of servers in computing grid. Also it should be distributed because I have gigs of logs everyday and no single machine will be able to store logs. I'm particularly interested in something that will work with Ruby and will work on Windows and latest Solaris (yeah, I got a zoo). I see architecture as: Log crawler (Ruby script). Distributed log storage. Distributed search engine. Lightweight front end. Log crawler and distributed search engine are out of questions - logs will be parsed by Ruby script and ElasticSearch will be used to index log messages. Front end is also very easy to choose - Sinatra. My main problem is distributed log storage. I looked at MongoDB, CouchDB, HDFS, Cassandra and HBase. MongoDB was rejected because it doesn't work on Solaris. CouchDB doesn't support sharding (smartproxy is required to make it work but this is something I don't want to even try). Cassandra works great but it's just a disk space hog and it requires running autobalance everyday to spread the load between Cassandra nodes. HDFS looked promising but FileSystem API is Java only and JRuby was a pain. HBase looked like a best solution around but deploying it and monitoring is just a disaster - in order to start HBase I need to start HDFS first, check that it started without problems, then start HBase and check it also, and then start REST service and also check it. So I'm stuck. Something tells me HDFS or HBase are the best thing to use as a log storage, but HDFS only works smoothly with Java and HBase is just a deploying/monitoring nightmare. Can anyone share its thoughts or experience building similar systems using components I described above or with something completely different?
