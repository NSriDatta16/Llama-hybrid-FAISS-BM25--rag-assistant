[site]: stackoverflow
[post_id]: 381824
[parent_id]: 381761
[tags]: 
From my understanding of cloud computing (which is barely anything at the present time), I don't think there's an awful lot of differences between the "cloud" and the way a lot of us do things already - we request data from a service provider, that provider gives us the information which may be stored in disparate resources around the internet or it may be hosted on their own servers, we don't care. All we care is that we requested data, and they give it to us... like a Google search, who really knows what goes on behind the closed doors of Google except their design and development team. There are some useful applications of this cloud notion though, the relationship between SO and Gravitar and OpenID for your avatars and login to StackOverflow. Disparate resources on the internet all functioning together to give a cohesive product. There's also the storage mechanism that you can subscribe to with your iPhone (for those of us that have the iPhone) - it allows all your data and files to sit out there somewhere on the internet and when you need access to it your iPhone tells Apple that you want your file and miraculously that file appears on your iPhone. So there are applications of cloud usage out there today that are being used. How useful I would consider that depends on how I could conceivably write software to leverage that. There are many useful applications for this. Is the technology more prone to attacks? Well like any technology, if you don't take the necessary steps to secure it, then sure. It depends on the architecture of your cloud. In answer to those that think it's just the latest buzz word, there are many useful applications of this technology that will leverage it. Whether that becomes mainstream is another question. As a developer, you really need to evaluate whether this approach is useful for the project you're on and can be leveraged effectively - just like any other technology. If it is useful and can leverage it effectively, then use it. If you can't, then don't.
