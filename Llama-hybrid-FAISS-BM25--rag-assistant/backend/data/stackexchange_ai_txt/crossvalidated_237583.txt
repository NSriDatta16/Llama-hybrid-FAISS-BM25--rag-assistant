[site]: crossvalidated
[post_id]: 237583
[parent_id]: 236636
[tags]: 
I see two research aims here: 1) Building a prediction model to help you evaluate whether future loan requests should be accepted/rejected; 2) Building an optimization algorithm to identify which loan product should you offer to the accepted requests. 1) For prediction, I would build multiple prediction models and asses their performance. Then, select the best model or combine models. In my experience, non-parametric models perform best, but it does not hurt to try also a logistic regression. In any case, try a bootstrap aggregating algorithm (such as random forests) and a boosting algorithm (xgboost is very trendy nowadays). Usually, the choice of model selection lies between these two types of algorithms depending on whether you need to reduce variance or bias. 2) For the optimization algorithm you focus on the data related to the past granted loans and how they performed. To take into account all four dimensions you indicate, I see two options: First, ask the bank to give you the total compounded values of the loans (compounded principal + interest + fees). There are different methods of computing the monthly installments (the most commonly used ones are declining balance and flat rates) and this results in different compounded loan values. As there are multiple loan products, there is no way you can compare them, unless you have this compounded value. Second, if bank does not help, you can break down the dataset in multiple subsets, one for each loan product, and do different analyses for each loan product by computing yourself the Future Value of the installments, computed at the time of loan reimbursement (i.e. in 48 months in the case of first two observations, 60 months in the case of the third observation and so on). This will combine amount, interest_rate and term_in_months. And then you just add the origination_fee (ideally, you would also compute its future value, but you need to use a rate of return which the bank should give you, not the interest_rate). This is not very correct from a financial standpoint, but in order to really be precise you need the bank’s collaboration because you should consider the inflation and risk of the bank to actually compute the value of a loan for the bank. The second approach is less desirable because the computations do not depend on the method for the installment computation. But as you apply this formula for identical product designs (remember you broke down the dataset by different loan products), you should be able to compare the resulting values of similar loan products. Here it is an example for the first observation in case you need to go with the second option (I assume the interest rate is 13%? – seems quite high): The Future Value of the loan = (45000/48) (1+0.13)^48 +(45000/48) (1+0.13)^47+…+(45000/48)*(1+0.13)^1 + 750 Then, your aim is to maximize this value. You can either go with a simple OLS regression with the outcome variable being the above calculated loan Future Value (and then use this model to predict the loan amount that the new borrower should receive), or you can try something more fancy such as a genetic algorithm… Hope this helps. Good luck!
