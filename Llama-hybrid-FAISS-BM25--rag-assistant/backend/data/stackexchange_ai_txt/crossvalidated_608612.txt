[site]: crossvalidated
[post_id]: 608612
[parent_id]: 608608
[tags]: 
The boundary for what is "just statistically significant" (i.e. the p-value is just below some "significance threshold" such as 0.05) is, if everything you observe is the true state of nature, around the point where you would have 50% power with that sample size. This is rather obvious, when you think about it: If what you observed is exactly the truth, then by chance you have a 50% probability of a larger effect and a 50% probability of a smaller effect (unless weird boundary effects come into play). How much larger of an effect size do you need for X% power vs. 50% power? Well, see the plot below (note the y-axis is a log-axis; code provided at the end). As you observe when you go from a sample size with a result that is "just significant" to one, where you assume everything you observed as true, to 80% power, you need slightly over twice the sample size. However, there's another big point: What you observe is not the true data generating parameters. Especially, if you only proceed to the next experiment in case the first experiment is "significant", you tend to overestimate effect sizes (and this is worse the more underpowered the first experiment was). A Bayesian analysis with as realistic as possible prior distributions for the first experiment (including appropriate skepticism about whether certain effects exist or are of large size) might help in this respect. I'd be tempted to fit a Bayesian ordinal regression model e.g. with brms in R with sensible priors (see e.g. BÃ¼rkner, P.C. and Vuorre, M., 2019. Ordinal regression models in psychology: A tutorial. Advances in Methods and Practices in Psychological Science, 2(1), pp.77-101. preprint: https://psyarxiv.com/x8swp/download?format=pdf ). library(tidyverse) tibble(`Target power` = seq(0.5, 0.99, 0.01)) %>% rowwise() %>% mutate( `Sample size ratio` = power.t.test(delta=0.01, sd=1, power=`Target power`) $n / power.t.test(delta=0.01, sd=1, power=0.5)$ n) %>% ungroup() %>% ggplot(aes(x=`Target power`, y=`Sample size ratio`)) + theme_bw(base_size=18) + geom_hline(yintercept=1, linetype=2, col="darkred", size=2) + geom_vline(xintercept=c(0.8, 0.9), linetype=2, col=rgb(1,0.2,0.2, 0.4)) + geom_line(size=2, col="royalblue") + geom_point(size=5, col="darkblue", data=.%>%filter(`Target power` %in% c(0.5, 0.8,0.9))) + scale_y_log10(breaks=c(1, 1.25, 1.5, 1.75, 2, 2.5, 3, 3.5, 4, 5))
