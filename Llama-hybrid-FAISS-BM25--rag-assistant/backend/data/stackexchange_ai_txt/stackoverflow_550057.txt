[site]: stackoverflow
[post_id]: 550057
[parent_id]: 549397
[tags]: 
(Note to all readers: I hate using answers for this, too, but this discussion is too long for comments. The downside, of course, is that it ends up not sorted chronologically. If you don't like it, I suggest you complain to the Stack Overflow admins about comments being length-limited and plain-text-only.) I don't understand what you mean by implementing array accessors in the view. Implement accessors, including indexed accessors, for the mutable array property that you've exposed as a binding. Bindings is built on top of KVO. And KVC. All bindings are implemented using observeValueForKeyPath: Overriding that is one way, sure. The other way is to implement accessors in the object with the bindable property (the view). My custom view provides a binding that the app binds to an array -- or in this case, an array controller. Accessor methods apply to KVC, not KVO. Cocoa Bindings will call your view's accessors for you (presumably using KVC). You don't need to implement the KVO observe method (unless, of course, you're using KVO directly). I know this because I've done it that way. See PRHGradientView in CPU Usage . Curiously, the documentation doesn't mention this. I'm going to file a documentation bug about it—either I'm doing something fragile or they forgot to mention this very nice feature in the docs. It absolutely matters that I'm getting a set message on every array update. I wouldn't have posted it as a question if it didn't matter. There are quite a large number of people who engage in something called “premature optimization”. I have no way of knowing who is one of them without asking.
