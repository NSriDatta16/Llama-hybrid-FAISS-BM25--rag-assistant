[site]: stackoverflow
[post_id]: 760490
[parent_id]: 760383
[tags]: 
I don't know about patches, but on OS X the "standard" for this with cocoa apps is Sparkle . Basically it does "appcasting". It downloads the full app each time. It might be worth looking at it for inspiration. I imagine on OS X you can probably just download the actual part of your app bundle that contains your specific code (not the libs etc that get packaged in) and that'd be fairly small and easy to replace in the bundle. On Windows, you'd probably be able to do a similar trick by not bundling your app into one exe - thus letting you change the one file that has actually changed. I'd imagine your actual Python code would be much less than 40Mb, so that's probably the way to go. As for replacing the running app, well first you need to find it's location, so you could use sys.executable to get you a starting point, then you could probably fork a child process to, kill the parent process and have the child doing the actual replacement? I'm currently playing around with a small wxPython app and wondering about exactly this problem. I'd love to hear about what you come up with. Also how big is you app when compressed? If it compresses well then maybe you can still afford to send the whole thing.
