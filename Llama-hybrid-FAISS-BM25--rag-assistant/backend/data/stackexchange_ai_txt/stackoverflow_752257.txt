[site]: stackoverflow
[post_id]: 752257
[parent_id]: 752183
[tags]: 
I suggest compiling the majority of your code against your minimum target. Have code that uses particular optional libraries clearly separated, but dependent upon the bulk of your code. Dynamically load the code that uses optional libraries once. The main class should do something that checks for the presence of the required library/version in its static initialiser. In the case of JNLP, your JNLP main class load the JNLP dependent code statically. (Note that attempting to catch class loading related exceptions from normally linked code is unreliable.)
