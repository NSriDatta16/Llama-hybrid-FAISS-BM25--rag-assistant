[site]: stackoverflow
[post_id]: 3496581
[parent_id]: 
[tags]: 
Common practices for SQL Server access from Windows Application on remote network?

Background We have a Windows .NET application used by our field employees who travel all over the country and live out of hotels most of the time. Recently we added some features that connect directly to our SQL Server 2005 for data access (i.e. SqlConnection.Open()). Since then we have run into some issues with this generating errors indicating an inability to access the server. The intermittent nature of this error among our employees led us to believe that it could be due to a port-blocking issue, and that some hotels may be blocking port 1433 - used by SQL Server. As we began researching this issue, we came across many comments expressing that having port 1433 publicly open is a major security hole, and that it should be limited to internal/local use. Question So my question is this - what alternatives are there for a Windows application to request and receive data from a SQL Server database that will result in better security and bypass common blockages placed by public networks (such as hotel WiFi)? I know that one option is VPN, but from what I hear it is not uncommon for VPN connection to be blocked on public networks either.
