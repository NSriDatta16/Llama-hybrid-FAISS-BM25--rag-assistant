[site]: stackoverflow
[post_id]: 3524196
[parent_id]: 3524112
[tags]: 
A static singleton class is the way that I see this dealt with most of the time. Using logging as a more commonly seen cross-cutting concern, I always see my logging calls looking like this: public class SomeClassThatDoesStuff { private static readonly ILog log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType); public void DoStuff() { log.Info("Doing something"); } } You're global time class would seem like a similar type of cross-cutting concern and I'd approach it the same way I agree that doing it with DI is going to be tedious and not terribly pragmatic.
