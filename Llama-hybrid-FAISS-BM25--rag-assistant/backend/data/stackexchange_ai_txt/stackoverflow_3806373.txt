[site]: stackoverflow
[post_id]: 3806373
[parent_id]: 3802454
[tags]: 
I believe you are right and wikipedia is wrong. The C++0x draft standard describes "deleted functions" (8.4p10) as functions which may not be used in any way (or else the program is ill-formed). They play no part in scope or name lookup different from normal functions. And the relevant paragraphs concerning new expressions have remained the same: [5.3.4p8] A new-expression obtains storage for the object by calling an allocation function (3.7.4.1). ... [5.3.4p9] If the new-expression begins with a unary :: operator, the allocation function's name is looked up in the global scope. Otherwise, if the allocated type is a class type T or array thereof, the allocation function's name is looked up in the scope of T. If this lookup fails to find the name, or if the allocated type is not a class type, the allocation function's name is looked up in the global scope. So yes, the expression ::new NonNewable [or ::new(mem) NonNewable ] would choose an overload of ::operator new , ignoring the function NonNewable::operator new , and would not make the program ill-formed.
