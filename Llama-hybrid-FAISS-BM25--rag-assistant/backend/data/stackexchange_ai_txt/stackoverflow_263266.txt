[site]: stackoverflow
[post_id]: 263266
[parent_id]: 263175
[tags]: 
There's a number of different solutions people have used. In my experience it really depends more on your usage patterns related to that data and not the sheer number of rows per table. For example, "How many inserts/updates per second are occurring." Questions like these will play into your decision of what back-end database solution you'll choose. Take Google for example: There didn't really exist a storage/search solution that satisfied their needs, so they created their own based on a Map/Reduce model.
