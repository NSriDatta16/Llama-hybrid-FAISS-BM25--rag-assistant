[site]: stackoverflow
[post_id]: 1407225
[parent_id]: 1406995
[tags]: 
Just thinking aloud, this may end up fairly silly: struct Average { Average() : total(0), count(0) {} operator float() const { return total / count; } Average &operator+=(float f) { total += f; ++count; } float total; int count; }; struct Counter { Counter (std::map &m) : averages(&m) {} Counter operator+(const MYSTRUCT &s) { (*averages)[s.a] += s.b; return *this; } std::map *averages; }; std::map averages; std::accumulate(v.begin(), v.end(), Counter(averages)); BOOST_FOREACH(MYSTRUCT &s, v) { s.b = averages[s.a]; } Hmm. Not completely silly, but perhaps not compelling either...
