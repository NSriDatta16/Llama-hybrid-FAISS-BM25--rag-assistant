[site]: stackoverflow
[post_id]: 1053927
[parent_id]: 1053829
[tags]: 
Code reuse is the ideal, of course, but there are many practical obstacles that get in the way. For example (thinking primarily of library reuse here): You might not know about the existing functionality, or know if it meets your needs. Sometimes the time needed to find out about reusable functionality is greater than the time needed to implement it yourself. The existing code may differ slightly from what you need. Sometimes the differences may not be apparent until you are well into trying to reuse the code. The existing code may have bugs that only become apparent when used in your application (a special case of #2). Debugging into other people's code is often a real challenge, particularly if you don't have modifiable source available. The existing code may come with license restrictions that are inappropriate for your project as a whole. The existing code may come with a lot of dependencies on other libraries and code, that bloat your executable, make it more fragile, or restrict your ability to deploy it to some environments. The existing code may conflict with other libraries you also want to link with your application.
