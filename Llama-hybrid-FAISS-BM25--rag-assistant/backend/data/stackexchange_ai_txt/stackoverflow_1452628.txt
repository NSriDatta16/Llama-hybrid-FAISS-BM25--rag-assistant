[site]: stackoverflow
[post_id]: 1452628
[parent_id]: 1452612
[tags]: 
EDIT : The OP goal was actually pretty unclear and I'm modifying my answer after some clarifications. Well, I'm not sure, but maybe a logging framework will suit your needs. If so, have a look at: Log4J : The most famous logging framework, widely used. Java Logging aka java.util.logging : didn't succeed to replace Log4J. Logback : " Logback is intended as a successor to the popular log4j project. It was designed, in addition to many individual contributors, by Ceki Gülcü, the founder of log4j ". SL4J : A " Simple Logging Facade for Java serves as a simple facade or abstraction for various logging frameworks, e.g. java.util.logging, log4j and logback, allowing the end user to plug in the desired logging framework at deployment time ". And pick one of them (I'd use Log4J or Logback). To save your messages for later processing from the webapp (e.g. generating a web page with some graphs/charts), the best approach is to use a database. Just read/write them from/to a simple table with a timestamp column. If you are not really familiar with Java, JDBC, persistence, connection pooling, datasource, etc, I'd suggest to use the Spring framework as it will hide most of the complexity. For the database part, have a look at the Chapter 11. Data access using JDBC from the Spring documentation. Pay a special attention to the JdbcTemplate or the SimpleJdbcTemplate , they should allow you to get the job done.
