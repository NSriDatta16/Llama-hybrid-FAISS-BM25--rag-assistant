[site]: stackoverflow
[post_id]: 2090944
[parent_id]: 
[tags]: 
Very Compact Bitarray in Java

I'm looking for a very compact way of storing a dense variable length bitarray in Java. Right now, I'm using BitSet , but it seems to use on average 1.5*n bits of storage space for a bit vector of size n . Typically, this isn't a problem, but in this case the bitarrays being stored are a pretty significant part the memory footprint of the application. So, it would really help to get them to be a little bit smaller. The space required by BitSet seems to be due to the fact that the array of longs used to back the data structure tends to double each time it is expanded to hold more bits: // BitSet's resizing code private void ensureCapacity(int wordsRequired) { if (words.length I could write my own alternative implementation of BitSet that scales the backend data structure more conservatively. But, I'd really hate to duplicate functionality that is already in the standard class libraries if I don't have to.
