[site]: stackoverflow
[post_id]: 2557963
[parent_id]: 2557352
[tags]: 
I hammered out a quick and dirty benchmark on some images using numpy's sort routines on the flat array. This is averaged over a few hundred random images and a few hundred images of human faces. Both are single precision. On random images... quicksort took 0.000153 seconds per image. mergesort took 0.000170 seconds per image. heapsort took 0.000241 seconds per image. On real images... quicksort took 0.000136 seconds per image. mergesort took 0.000143 seconds per image. heapsort took 0.000230 seconds per image. All of the algorithms seem to benefit from the existing partial ordering, especially quicksort. Numpy doesn't seem to have a sorted list merge function, so I can't try pre-sorting the rows, alas.
