[site]: datascience
[post_id]: 101935
[parent_id]: 
[tags]: 
Using output of ML algorithms as an input to different ML algorithm (Ensemble Learning)

I want to assign weights to multiple models and make an single ensemble model. I want to use my outputs as the input to a new machine learning algorithm and the algorithm will learn the correct weights. but how do I give the output of multiple models as an input to a new ML Algorithm as I am getting output like this preds1=model1.predict_prob(xx) [[0.28054154 0.35648097 0.32954868 0.03342881] [0.20625692 0.30749627 0.37018309 0.11606372] [0.28362306 0.33325501 0.34658685 0.03653508] ... preds2=model2.predict_prob(xx) [[0.22153498 0.30271243 0.26420254 0.21155006] [0.32327647 0.39197589 0.23899729 0.04575035] [0.18440374 0.32447016 0.4736297 0.0174964 ] ... How to I make a single Dataframe from the output of these 2 or more models ? the simplest way of doing this is given below but I want to give the output to a different ML algorithm to learn weights. model = LogisticRegression() model.fit(xx_train, yy_train) preds1 = model.predict_proba(xx_test) model = KNeighborsClassifier(n_neighbors=5, metric='minkowski', p=2 ) model.fit(xx_train, yy_train) preds2 = model.predict_proba(xx_test) # Each weight is evaluated by calculating the corresponding score for i in range(len(weights)): final_inner_preds = np.argmax(preds1*weights[i]+ preds2*(1-weights[i]), axis=1) scores_corr_wts[i]+= accuracy_score(yy_test, final_inner_preds)
