[site]: stackoverflow
[post_id]: 2922215
[parent_id]: 
[tags]: 
Why is retrieving a ResultSet from Oracle stored procedure so slow?

I have to improve some code where an Oracle stored procedure is called from a Java program. Currently the code is really really slow: up to about 8 seconds on my development machine. On the same machine, if I directly call an SQL query that does about the same treatment and returns the same data, it takes under 100 ms... The code creates a CallableStatement, registers one of the output parameters to be an Oracle cursor, and then retrieves the cursor using the getObject method of the statement and parse it to ResultSet: cstmt = conn.prepareCall("{ call PKG_ESPECEW.P_ListEspece( ?, ?, ?, ?, ?, ? ) }"); cstmt.registerOutParameter(4, oracle.jdbc.OracleTypes.CURSOR); [...] cstmt.executeQuery(); rs = (ResultSet)cstmt.getObject(4); rs.setFetchSize(1000); //supposed to help ? options = new HashMap (1000); rs.next() //added that to measure exactly the length of the first call while(rs.next()) { [...] } I put some timestamps in the code to know which part is taking so long. The result: The first call to rs.next() is taking up to various seconds. The result sets are average, from 10 to a couple thousands rows. As I said before, handling similar result sets coming from a regular PreparedStatement takes 10-100 ms depending the size. Is anything wrong with the code? How do I improve it? I'll do direct SQL where critical if I haven't any other solution, but I'd prefer a solution that allows me to not rewrite all the procedures! Here is the definition of the stored procedure: PROCEDURE P_ListEspece(P_CLT_ID IN ESPECE.ESP_CLT_ID%TYPE, -- Langue de l'utilisateur P_ESP_GROUP_CODE IN ESPECE.ESP_CODE%TYPE,-- Code du groupe ou NULL P_Filter IN VARCHAR2, -- Filtre de la requÃªte P_Cursor OUT L_CURSOR_TYPE, -- Curseur P_RecordCount OUT NUMBER, -- Nombre d'enregistrement retourne P_ReturnStatus OUT NUMBER); -- Code d'erreur
