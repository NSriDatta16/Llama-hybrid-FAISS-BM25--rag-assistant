[site]: stackoverflow
[post_id]: 696688
[parent_id]: 694672
[tags]: 
As Anton suggests the problem lies in the parameters passed to the function. I did not notice this yesterday but the CARDIDTYPE structure is passed by pointer in the GetCardID function, and by value in the GetCardStatus function. In my calls I passed the CARDIDTYPE by pointer to the GetCardStatus also, forcing the P/Invoke framework to locate the correct function by specifying the exact function name as found in Dependecy Walker. I solved this by defining the CARDIDTYPE as a struct instead of a class, and pass it by reference to the GetCardId function. Further the CARDIDTYPE is marshaled as a Struct when passed to the GetCardStatus function. This in addition to Antons technique of using two function definitions with different pData types (CARD_INFO_1 and CARD_INFO_2) now works correctly. Here is the final definitions: [StructLayout(LayoutKind.Sequential, Pack = 1)] public struct CARDIDTYPE { public UInt32 JobId; public UInt32 CardNum; public IntPtr hPrinter; } [StructLayout(LayoutKind.Sequential)] public class CARD_INFO_1 { public bool bActive; public bool bSuccess; } [StructLayout(LayoutKind.Sequential)] public class CARD_INFO_2 { public UInt32 dwCopiesPrinted; public UInt32 dwRemakeAttempts; public Win32Util.SYSTEMTIME TimeCompleted; } [DllImport("ICE_API.DLL", CharSet = CharSet.Auto, CallingConvention = CallingConvention.Winapi, SetLastError = true)] public static extern bool GetCardId(HandleRef hDC, ref CARDIDTYPE pCardId); [DllImport(@"ICE_API.DLL", EntryPoint = "GetCardStatus", CallingConvention = CallingConvention.Winapi, SetLastError = true)] public static extern bool GetCardStatus([MarshalAs(UnmanagedType.Struct)]CARDIDTYPE CardId, UInt32 level, [In, Out] CARD_INFO_1 pData, UInt32 cbBuf, out UInt32 pcbNeeded); [DllImport(@"ICE_API.DLL", EntryPoint = "GetCardStatus", CallingConvention = CallingConvention.Winapi, SetLastError = true)] public static extern bool GetCardStatus([MarshalAs(UnmanagedType.Struct)]CARDIDTYPE CardId, UInt32 level, [In, Out] CARD_INFO_2 pData, UInt32 cbBuf, out UInt32 pcbNeeded); Thank you both for your contribution to solving this problem :-)
