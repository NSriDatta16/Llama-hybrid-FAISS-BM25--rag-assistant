[site]: crossvalidated
[post_id]: 144935
[parent_id]: 
[tags]: 
Estimating the opinion of a user by looking at opinions of other users

First of all, a bit of background: i am not a statistics expert but i am an enthusiast about data analysis. I have this list of "items" and for each item i have a list of "users" and the vote that each user gave to an item. Of course there are many many missing data because not all the items were voted by all the users. What i would like to do is trying my hand at giving advices: telling to a user "since these are your votes, you will problably like this item and won't like this other item". I know it is something that is routinely done and i would like to find a tutorial on how to do this, maybe using R. I was thinking about PCA but I can't use it because of the missing values. Each and every user has some missing values and i should eliminate all the data. I tried looking into "impute" but from what i understood, this is more of a tecnique to enable to later apply PCA rather than finding a really good estimate of the missing values. Now i am naively thinking along this line: Let's say i want to predict which vote a user U* would give to item I*. 1) I consider only users that gave a vote to I*. Lets call them "Ux". 2) Among all the votes given by the Ux, I consider only those given to Items already voted by U*. I call these Items "Iy". 3) I would like to say that if U* often voted like another user U' in regard to the Iy, then probably Ux will give a vote to I* similar to the one that U' gave. This is reasonable. 4) Now: I don't know how to deal with the opposite situation. If my U* and another U'' ofthen vote differently, what should I do? Don't take the votes of U'' into consideration or should I try to have the predicted vote of U* for I* as different as possible from the one given by U''? If so, different how? Let's say that on average the votes of U* and U'' differ, in absolute value, by 3, should I try to impose a difference of 3 on the predicted value of the vote of U* for I*? 5) Find somehow that number the minimize the sum of the differences between the expected distances of the vote given by U* from the votes given by the Ux. 6) I also want to take into account the fact that if U* and U''' both gave a vote to many many items than the opinion of U''' must weight more than the opinion of a user U'''' that voted only 1 item in common with U*, even if he gave the same vote as U*. Usually i would say that, after positioning each user in a space that has as many dimensions as the number of items, I should find the nearest neighbourghs of U* in this space and consider their vote with a higher weight than those that are far away. But once again i don't know how to consider distances since i can't put all the users in the same space since i am lacking "coordinates". Another approach that i would like to pursue is: for each Ux I do a linear regression of his votes and those of U* and see how much they are correlated. I estimate the vote of U* from each of these regression and I take the average of these, weighted by the correlation coefficient and by the number of items in the correlation. In this way i try to consider more those users to which my U* is more correlated. What about this? Notice that i am not just interested in finding similar users (like in question 131386) but i want to be able to PREDICT missing values. I hope you can address me toward a feasible path but, once again, keep in mind i am not a statistician and i need sources that are somehow accessible.
