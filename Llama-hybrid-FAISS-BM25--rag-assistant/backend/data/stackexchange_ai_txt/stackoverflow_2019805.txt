[site]: stackoverflow
[post_id]: 2019805
[parent_id]: 617424
[tags]: 
Another option is to use quick-select. Quick-select returns the position of the k-th element in a list. After you have the position and the value of the k-th element, go over the list and take every element whose value is smaller/larger than the k-th element. I found a c# implementation of quick-select here: link text Pros: O(n+k) average running time. Cons: The k elements found are not sorted. If you sort them the running time is O(n + logk) I haven't checked this, but I think that for a very small k the best option is to do k runs over the array, each time finding the next smallest/largest element.
