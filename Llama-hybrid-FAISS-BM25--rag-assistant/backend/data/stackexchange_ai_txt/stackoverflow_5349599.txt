[site]: stackoverflow
[post_id]: 5349599
[parent_id]: 
[tags]: 
pointer segfault problems

pointer segfault problems... I've been doing c++ for some weeks meanwhile but i ran again into that issue. basically i have these classes given. I cant change them. I start with an instance of _ns3__importAuftragResponse kout; class SOAP_CMAC _ns3__importAuftragResponse { public: ns2__SOAPImportResult *return_; ... class SOAP_CMAC ns2__SOAPImportResult { public: bool *error; int *numberOfIgnoreds; .... My code needs to check for the numberOfIgnoreds first approach ns2__SOAPImportResult* imp_result; imp_result = kout.return_; int num; num = *imp_result->numberOfIgnoreds; or i use ns2__SOAPImportResult imp_result; imp_result = *(kout.return_); int* num; *num = *imp_result.numberOfIgnoreds; I mostly get segmentation fault I know generally what happens at runtime but cant come up with the correct ode. PLease help. EDIT made progress thx to your answer, Nawaz , but still need some understanding ns2__SOAPImportResult * imp_ptr = new ns2__SOAPImportResult; imp_ptr = kout.return_; int * num = new (int); // next line segfaults *num = *imp_ptr->numberOfIgnoreds; what's hard for me to understand is, how or why allocate memory for something that is already "there" as there is the member return_ of the object kout So is it correct to say I need to allocate memory for the variable I assign it to (which is of same type of course)?
