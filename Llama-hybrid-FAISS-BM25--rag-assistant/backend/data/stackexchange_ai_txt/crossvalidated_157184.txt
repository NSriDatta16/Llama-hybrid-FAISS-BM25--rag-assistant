[site]: crossvalidated
[post_id]: 157184
[parent_id]: 157022
[tags]: 
This can be solved by using the ingenious combination of afex with lsmeans (and also multcomp if one desires so, but this is usually not necessary). Furthermore, thanks to afex functionality to aggregate automatically, dplyr is not needed. library(afex) require(lsmeans) require(multcomp) data(obk.long) # Step 1: set up the model using afex # but use return = "aov" to obtain an object lsmeans can handle. fit |t|) ## c1 == 0 1.3333 1.0678 1.249 0.359 ## c2 == 0 -0.2222 0.7758 -0.286 0.780 ## (Adjusted p values reported -- free method) Note that the first contrast ( c1 : A and B when gender = F) correspond to your first result while the latter one does not. You must have made an error. The second contrast you wish can also be obtained easier (simply ignore the other two rows): pairs(lsmeans(fit, "treatment"), adjust = "none") ## NOTE: Results may be misleading due to involvement in interactions ## contrast estimate SE df t.ratio p.value ## control - A -2.0277778 0.8347673 10 -2.429 0.0355 ## control - B -1.8055556 0.7338014 10 -2.461 0.0336 ## A - B 0.2222222 0.7757662 10 0.286 0.7804 ## ## Results are averaged over the levels of: gender
