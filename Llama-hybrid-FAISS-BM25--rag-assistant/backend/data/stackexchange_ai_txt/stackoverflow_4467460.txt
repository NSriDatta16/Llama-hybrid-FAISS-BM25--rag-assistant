[site]: stackoverflow
[post_id]: 4467460
[parent_id]: 
[tags]: 
A question on how to solve the string problem in Java

I've created a simple xml file here: http://roberthan.host56.com/productsNew.xml which is quite simple, the root node is [products] while all other element nodes are [product]. Under each [product] node, there are two child nodes, [code] and [name], so it basically looks like: [product] [code]ddd[/code] [name]ssss[/name] [/product] I've also written up the following Java code to parse this XML file and take out the text content of the [product] node, and add it to a JComboBox. docBuilder = docFactory.newDocumentBuilder(); doc = docBuilder.parse("http://roberthan.host56.com/productsNew.xml"); NodeList productNodes = doc.getElementsByTagName("product"); productlist.clear(); for (i = 0; i The code is quite straightforward, I firstly parse the xml and get all the product nodes and put them into a nodelist, and the productList is an arrayList. I loop through the all the [product] nodes, for each of them, if it has child nodes, then I take the second child node (which is the [name] node) and put the text content of it in the array list, and finally, I loop through the arrayList and add each item to the combo box. The problem I got is, if I select the [code] child node, which means "Node nameNode = nl.item(1)", it will work perfectly; however, if I change that item(1) to item(2) to extract all the [name] nodes, the combo box will have a drop down list, but all the items are blank, like I have inserted 10 empty strings. Also, if I try to add a "Hello World" string into the combo box after the above code, the "Hello World" item will appear after the 10 empty items. I have spent the whole afternoon debugging this but still no breakthrough, the XML is actually quite simple and the Java is straightforward too. Could anyone share some thoughts with me on this please. Thanks a lot!
