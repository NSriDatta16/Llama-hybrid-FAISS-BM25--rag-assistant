[site]: crossvalidated
[post_id]: 615560
[parent_id]: 615205
[tags]: 
In cases like yours, I've reported the median and the quartiles, as mkt suggested . But, inspired by the OverLordGoldDragon's answer and motivated by the wish to keep the idea of the mean and sd and, at the same time, not to deviate too much from established statistical practices, I propose an alternative. I don't know whether it's been used so far, so I'll call it the " decomposed standard deviation ". It also allows you to report the results as three numbers, in the form $\overline x ~ (+sd_A; -sd_B)$ . Standard deviation is: $$ sd = \sqrt{\frac{1}{N-1}\sum_i (x_i - \overline x)^2}. $$ The sum can be decomposed into the sum over the elements above and below $\overline x$ : $$ sd = \sqrt{\frac{1}{N-1} \left( \sum_{i:x_i \gt \overline x} (x_i - \overline x)^2 + \sum_{i:x_i (I've left out the summation over $i: x_i = \overline x$ , as it evaluates to zero). Define: $$ \begin{align} sd_A &= \sqrt{\frac{1}{N_A + \frac{N_0-1}{2}} \sum_{i:x_i \gt \overline x} (x_i - \overline x)^2 }, \\ sd_B &= \sqrt{\frac{1}{N_B + \frac{N_0-1}{2}} \sum_{i:x_i \lt \overline x} (x_i - \overline x)^2 } \end{align} $$ with $N_A$ , $N_B$ , and $N_0$ being the number of elements " above ", " below " and " equal to " the mean, respectively. Then, the standard deviation can be rewritten as: $$ sd = \sqrt{\frac{(N_A + \frac{N_0-1}{2})sd_A^2 + (N_B + \frac{N_0-1}{2})sd_B^2} {N-1} }. $$ If no values are exactly equal to $\overline x$ , which is very likely in practice, the formulae simplify to: $$ \begin{align} sd_A &= \sqrt{\frac{1}{N_A - 0.5} \sum_{i:x_i \gt \overline x} (x_i - \overline x)^2 }, \\ sd_B &= \sqrt{\frac{1}{N_B - 0.5} \sum_{i:x_i \lt \overline x} (x_i - \overline x)^2 }, \\ sd &= \sqrt{\frac{(N_A -0.5)sd_A^2 + (N_B - 0.5)sd_B^2} {N-1} }. \end{align} $$ It is easy to show that for perfectly symmetric data, $sd$ , $sd_A$ , and $sd_B$ are exactly the same. For asymmetric, they differ. Also, it is easy to see that for non-negative data, $\overline x - sd_B$ is always non-negative. Below is a simple graphical example: and you'd report the result as $1.56 ~ (+3.08; -0.93)$ . This makes the asymmetry in the data explicit and, at the same time, avoids the implication that data can be negative. Below is the Python code to reproduce the figure and play with the data: import matplotlib.pyplot as plt import numpy as np def decomposed_std(x): m = x.mean() xA = x[x > m] xB = x[x $sd_B = {sB:.2f}$ ', horizontalalignment='right') plt.text(1.2*m, 1.05*y_top, f' $sd_A = {sA:.2f}$ ', horizontalalignment='left') plt.text(x_right, 1.1*y_top, ' $\overline{x} = ' f'{m:.2f}$ \n' ' $sd = ' f'{s:.2f}$ ', horizontalalignment='right', verticalalignment='top') plt.title('Histogram with decomposed standard deviation') plt.xlim(-2, 1.05*x_right) plt.show()
