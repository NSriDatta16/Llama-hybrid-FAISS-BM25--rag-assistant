[site]: stackoverflow
[post_id]: 889913
[parent_id]: 889774
[tags]: 
The easiest way is to use a TextField. Even is your UI Does not call for one, you can set it's frame to zero so it doesnt show up onscreen. Then you can get access to the keys pressed by using the text field's delegate callback methods. - (void)viewDidLoad { [super viewDidLoad]; //CGRectZero because we don't want the textfield to be shown onscreen UITextField *f = [[UITextField alloc] initWithFrame:CGRectZero]; //We set the delegate so we can grab keypressed f.delegate = self; [self.view addSubview:f]; [f becomeFirstResponder]; //Show the keyboard } - (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string { if (string.length >0) { NSLog(@"%@ Pressed",string); } else { NSLog(@"Backspcae pressed"); } } - (BOOL)textFieldShouldReturn:(UITextField *)textField { NSLog(@"return pressed"); return YES; } Note: to avoid a compiler warning, make sure in your .h file the class explicitly says it implements the UITextFieldDelegate protocal. ie: @interface MyViewController : UIViewController
