[site]: stackoverflow
[post_id]: 5123292
[parent_id]: 5122542
[tags]: 
The best way would be to create in the app where you have Organization a file (say, "forms.py"), and do this: from registration.forms import RegistrationForm from forms import * from models import Organization class RegistrationFormWithOrganization(RegistrationForm): organization_logo = field.ImageField() organization_name = field.CharField() def save(self, profile_callback = None): Organization.objects.get_or_create(user = self.cleaned_data['user'], logo = self.cleaned_data['organization_logo'], name = self.cleaned_data['organization_name']) super(RegistrationFormWithOrganization, self).save(self, profile_callback) And then in your base URLs, override the existing URL to registration, and add this form as your the form to use: form organization.forms import RegistrationFormWithOrganization url('^/registration/register$', 'registration.views.register', {'form_class': RegistrationFormWithOrganization}), url('^/registration/', include('registration.urls')), Remember that Django will use the first URL that matches the regexp, so will match your call and not django-registration's. It will also tell registration to use your form, not its own. I've skipped a lot of validation here (and, probably, the derivation of the user object... if so, go read the source code to registration to see where it comes from), but this is definitely the right track to get a few things into the page with a minimum amount of effort on your part.
