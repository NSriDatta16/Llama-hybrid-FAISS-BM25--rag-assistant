[site]: datascience
[post_id]: 47398
[parent_id]: 46483
[tags]: 
I think, and have done similar problem too, that this problem can be solved in this way: 1. Generate NGrams 2. Create 1 hot encoding matrix 3. Pass to Naive Bayes or Random forest It would automatically count the words count (you can apply TFIDF too) and based on that weightage will be calculated. Examples: https://medium.com/data-from-the-trenches/text-classification-the-first-step-toward-nlp-mastery-f5f95d525d73 https://www.ritchieng.com/machine-learning-multinomial-naive-bayes-vectorization/ This is detailed one: https://www.analyticsvidhya.com/blog/2018/04/a-comprehensive-guide-to-understand-and-implement-text-classification-in-python/
