[site]: stackoverflow
[post_id]: 1928899
[parent_id]: 
[tags]: 
Please help me speed up this mahjong algorithm

I am writing some mahjong-related functions in JavaScript. Here is what I have below, with code for test cases. Note that mahjong hands are represented by arrays, with: element 0 being the total number of tiles in the hand elements 1 through 34 being the number of tiles of each type in the hand first craks, then dots, then bams, then winds, and finally dragons The function to find waits runs really slow. How can I speed it up? // tiles are indexed as follows: // 1..9 = 1 crak .. 9 crak // 10..18 = 1 dot .. 9 dot // 19..27 = 1 bam .. 9 bam // 28..34 = east, south, west, north, white, green, red var wall = new Array(); set_up_wall(); function set_up_wall() { for (var i=1; i =wall[i]) n-=wall[i++]; wall[i]--; wall[0]--; return i; } // get number of a tile (or 0 if honor) // e.g. 8 bams = 8 function tilenum(i) { if (i>27) return 0; if (i%9==0) return 9; return i%9; } // get suit of a tile (or 0 if honor) function tilesuit(i) { var eps = 1e-10; return Math.ceil(i/9-eps)%4; } // is this a well-formed hand? function well_formed(h) { // this function is recursive if (h[0]==2) return only_pairs(h); if (h[0]==14) { if (only_pairs(h)) return true; if (thirteen_orphans(h)) return true; } if (h[0]%3 != 2) return false; // wrong no. of tiles in hand // now we start splitting up the hand // look for three of a kind for (var i=1; i =3) { // create new hand minus the three of a kind hh = new Array(); for (var j=0; j =1 && h[i+1]>=1 && h[i+2]>=1) { // create new hand minus the run hh = new Array(); for (var j=0; j =3) return false; return true; } // thirteen orphans? function thirteen_orphans(h) { var d=0; var c=new Array(14, 1,0,0,0,0,0,0,0,1, 1,0,0,0,0,0,0,0,1, 1,0,0,0,0,0,0,0,1, 1,1,1,1,1,1,1); for (var i=0; i 0) return false; if (h[i]!=c[i]) d++; } return d==1; } // this is inefficient function waits(h) { var w=new Array(); for (var j=0; j "); document.write("Waits: "+tiles_to_string(waits(x))+" "); x = new Array(13, 1,0,0,0,0,0,0,0,1, 1,0,0,0,0,0,0,0,1, 1,0,0,0,0,0,0,0,1, 1,1,1,1,1,1,1); document.write("Hand: "+tiles_to_string(x)+" "); document.write("Waits: "+tiles_to_string(waits(x))+" "); x = new Array(13, 0,0,0,0,0,0,0,0,0, 3,1,1,1,1,1,1,1,3, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0); document.write("Hand: "+tiles_to_string(x)+" "); document.write("Waits: "+tiles_to_string(waits(x))+" "); x = new Array(13, 4,0,0,3,3,3,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0); document.write("Hand: "+tiles_to_string(x)+" "); document.write("Waits: "+tiles_to_string(waits(x))+" "); x = new Array(13, 0,0,4,3,3,3,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0); document.write("Hand: "+tiles_to_string(x)+" "); document.write("Waits: "+tiles_to_string(waits(x))+" ");
