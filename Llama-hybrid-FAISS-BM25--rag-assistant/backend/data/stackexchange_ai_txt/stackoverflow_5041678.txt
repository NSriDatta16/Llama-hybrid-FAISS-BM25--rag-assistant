[site]: stackoverflow
[post_id]: 5041678
[parent_id]: 
[tags]: 
Tracking Django/FastCGI Process Errors

I run a Django based site on Nginx with FastCGI server. The site generally works great. But every 2-3 days, the site run into unknown problem and stop responding to any requests. Munin graphs shows IO blocks read & write per second increases 500% during the problem. I also wrote a python script to record the the following stats every one minute. Load Averages CPU Usage (user, nice, system, idle, iowait) RAM Usage Swap Usage Number of FastCGI Processes RAM Used by FastCGI Processes The record shows during the problem, number of FastCGI processes doubled (from normal value of 10-15 to 25-30). And the RAM usage by FastCGI processes also doubled (from 17% to 35% of total RAM on server). The memory usage increase required more swap to be used so it slow down disk IO made the server unresponsive. FastCGI parameters I used: maxspare=10 minspare=5 maxchildren=25 maxrequests=1000 I guess the problem is due to poorly written Python code in some part of my site. But I just don't know how to find out which part of the code froze existing FastCGI processes and forking new instances.
