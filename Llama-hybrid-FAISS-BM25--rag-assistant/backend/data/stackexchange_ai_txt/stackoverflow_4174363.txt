[site]: stackoverflow
[post_id]: 4174363
[parent_id]: 4170288
[tags]: 
CALayer cannot react on touch events directly, but lots of other objects in your program can - for example the UIView which is hosting the layers. Events, such as an event that is generated by system when screen is touched, are being sent over so called "responder chain". So when the screen is touched, a message is sent (in other words - method is called) to the UIView which lies at the location of touch. For touches there are three possible messages: touchesBegan:withEvent: , touchesMoved:withEvent: and touchesEnded:withEvent: . If that view does not implement the method, the system will try to send it to the parent view (superview in iOS language). It's trying to send it until it reaches the top view. If none of the views implement the method, it tries to be delivered to current view-controller, then it's parent controller, then to the application object. That means you can react on touch events by implementing mentioned methods in any of these objects. Usually the hosting view or the current view-controller are the best candidates. Let's say you implement it in the view. Next task is to figure out which of your layers have been touched, for this you can use convenient method convertPoint:toLayer: . For example here's it might look like in a view controller: - (void)touchesBegan:(NSSet*)touches withEvent:(UIEvent*)event { CGPoint p = [(UITouch*)[touches anyObject] locationInView:self.worldView]; for (CALayer *layer in self.worldView.layer.sublayers) { if ([layer containsPoint:[self.worldView.layer convertPoint:p toLayer:layer]]) { // do something } } }
