[site]: stackoverflow
[post_id]: 4181036
[parent_id]: 
[tags]: 
Problem trying to code Conway's Game of Life in C++

I'm building this program using the reni2D library found on involuntaryexercise.com I've created a grid consisting of a 2D array of rows and colums in which each square is clicked to be on and off. Now, I'm trying to make some working algorithms that adhere to the rules, but when running the program they all disappear after having the program go through the related loops. I don't see anything inherently wrong here, so I'm relying on the eyes of skilled programmers to guide me on the right path. [UPDATE]: The program now works better, except that it doesn't follow the Game Of Life rules for some reason. if(raGetKey(VK_RETURN)) { //occupied cells for(int i=0; i (-1) && sq[i][j-1].isOn == true){ sq[i][j].neighbors += 1; printf("The occupied sq[%d][%d] gains a neighbor\n", i, j); } if((i+1) (-1) && sq[i-1][j].isOn == true){ sq[i][j].neighbors += 1; printf("The occupied sq[%d][%d] gains a neighbor\n", i, j); } if(sq[i][j].neighbors >= 4) break; //Diagonal if((i+1) (-1) && (j-1)> (-1) && sq[i-1][j-1].isOn == true){ sq[i][j].neighbors += 1; printf("The occupied sq[%d][%d] gains a neighbor\n", i, j); } if((i-1)>(-1) && (j+1) (-1) && sq[i+1][j-1].isOn == true){ sq[i][j].neighbors += 1; printf("The occupied sq[%d][%d] gains a neighbor\n", i, j); } } //Empty cells if(sq[i][j].isOn == false && sq[i][j].neighbors 0 && (j-1)>0) {*/ if((j+1) 0 && sq[i][j-1].isOn == true){ sq[i][j].neighbors += 1; printf("The empty sq[%d][%d] gains a neighbor\n", i, j); } if((i+1) -1 && sq[i-1][j].isOn == true){ sq[i][j].neighbors += 1; printf("The empty sq[%d][%d] gains a neighbor\n", i, j); } if(sq[i][j].neighbors >= 4) break; //Diagonal if((i+1) (-1) && (j-1)> (-1) && sq[i-1][j-1].isOn == true){ sq[i][j].neighbors += 1; printf("The empty sq[%d][%d] gains a neighbor\n", i, j); } if((i-1)>(-1) && (j+1) (-1) && sq[i+1][j-1].isOn == true){ sq[i][j].neighbors += 1; printf("The empty sq[%d][%d] gains a neighbor\n", i, j); } //} } } } for(int i=0; i = 4){ sq[i][j].isOn = false; sq[i][j].neighbors = 0; printf("sq[%d][%d] is ON and has neighbors is greater than or equal to 4... Died from overpopulation\n", i, j); } if(sq[i][j].neighbors > 1 && sq[i][j].neighbors
