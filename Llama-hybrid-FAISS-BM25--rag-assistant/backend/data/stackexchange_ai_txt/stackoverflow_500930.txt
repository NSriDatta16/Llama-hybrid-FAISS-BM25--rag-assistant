[site]: stackoverflow
[post_id]: 500930
[parent_id]: 500925
[tags]: 
With LINQ, and using C# (I don't know VB much these days): bool b = listOfStrings.Any(s=>myString.Contains(s)); or (shorter and more efficient, but arguably less clear): bool b = listOfStrings.Any(myString.Contains); If you were testing equality, it would be worth looking at HashSet etc, but this won't help with partial matches unless you split it into fragments and add an order of complexity. update: if you really mean "StartsWith", then you could sort the list and place it into an array ; then use Array.BinarySearch to find each item - check by lookup to see if it is a full or partial match. Update: in the recent .Net, Contains has optional StringComparison parameter , that can be used for case-insensitive comparison, e.g. myString.Contains(s,StringComparison.CurrentCultureIgnoreCase);
