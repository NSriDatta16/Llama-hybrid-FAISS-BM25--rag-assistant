[site]: stackoverflow
[post_id]: 5504408
[parent_id]: 5504176
[tags]: 
I think you should definitely create your own hash class and use it instead of Hash . It would take care of the keyset, and wrap per-object storage. It could have class methods to edit your keyset such as: def self.add_key(key, default_value) def self.remove_key(key) and instance methods that you would use in your container classes, which would mimick Hash methods: def get(key) def set(key, value) def find_key(value) etc. You could use ordinary Hash for underlying storage, of course. If you need to be able to expand your keyset whenever you add a new key to any of the instances, just call add_key from set .
