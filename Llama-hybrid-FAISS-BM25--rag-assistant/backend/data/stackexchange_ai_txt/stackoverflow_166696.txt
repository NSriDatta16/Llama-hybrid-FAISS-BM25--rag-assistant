[site]: stackoverflow
[post_id]: 166696
[parent_id]: 166550
[tags]: 
Software is knowledge capture. You're encoding someone's knowledge of how to do something. The software should fit what's "natural" for the problem. When in doubt, ask someone else and see what people actually say and do. What about the situation where the "common" case is do nothing? What then if( common ) { // pass } else { // great big block of exception-handling folderol } Or do you do this? if( ! common ) { // great big block of except-handling folderol } The "always positive" rule isn't really what you want first. You want to look at rules more like the following. Always natural -- it should read like English (or whatever the common language in your organization is.) Where possible, common cases first -- so they appear common. Where possible use positive logic; negative logic can be used where it's commonly said that way or where the common case is a do-nothing.
