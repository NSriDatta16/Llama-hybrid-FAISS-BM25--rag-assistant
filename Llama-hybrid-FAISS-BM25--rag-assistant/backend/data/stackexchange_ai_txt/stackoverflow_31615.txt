[site]: stackoverflow
[post_id]: 31615
[parent_id]: 18783
[tags]: 
CREATE INDEX Assure there are indexes available for your WHERE and JOIN clauses. This will speed data access greatly. If your environment is a data mart or warehouse, indexes should abound for almost any conceivable query. In a transactional environment , the number of indexes should be lower and their definitions more strategic so that index maintenance doesn't drag down resources. (Index maintenance is when the leaves of an index must be changed to reflect a change in the underlying table, as with INSERT, UPDATE, and DELETE operations.) Also, be mindful of the order of fields in the index - the more selective (higher cardinality) a field, the earlier in the index it should appear. For example, say you're querying for used automobiles: SELECT i.make, i.model, i.price FROM dbo.inventory i WHERE i.color = 'red' AND i.price BETWEEN 15000 AND 18000 Price generally has higher cardinality. There may be only a few dozen colors available, but quite possibly thousands of different asking prices. Of these index choices, idx01 provides the faster path to satisfy the query: CREATE INDEX idx01 ON dbo.inventory (price, color) CREATE INDEX idx02 ON dbo.inventory (color, price) This is because fewer cars will satisfy the price point than the color choice, giving the query engine far less data to analyze. I've been known to have two very similar indexes differing only in the field order to speed queries (firstname, lastname) in one and (lastname, firstname) in the other.
