[site]: crossvalidated
[post_id]: 394771
[parent_id]: 
[tags]: 
MASE and handling nan-values

I'd like to ask advice on how to correctly compute Mean Absolute Scaled Error (2006, Hyndman, Rob J., and Anne B. Koehler.) over the following example: y_hat = [1, 2, 3, 4, 0, 0, 0, 0, 9] y_true = [1, 2, 3, 4, np.nan, 5, 6, 7, 9] Should I delete NaN and look at two separate non-nan subsets averaging their MASE scores? As far as I get from this discussion and post by Dr. Hyndman MASE represents simple MAE, divided by the mean absolute error of the one-step "naive forecast method" (i.e. some constant to scale MAE error). So I face situation where I have 2 choices: y_hat = [1, 2, 3, 4, 0, 0, 0, 9] y_true = [1, 2, 3, 4, 5, 6, 7, 9] vs y_hat_1 = [1, 2, 3, 4], y_hat_2 = [0, 0, 0, 9] y_true_1 = [1, 2, 3, 4], y_true_2 = [5, 6, 7, 9] where MASE = (MASE(y_hat_1, y_true_1) + MASE(y_hat_2, y_true_2)).mean() What is correct way to compute MASE here?
