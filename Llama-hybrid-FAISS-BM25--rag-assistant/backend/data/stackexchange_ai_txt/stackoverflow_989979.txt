[site]: stackoverflow
[post_id]: 989979
[parent_id]: 989844
[tags]: 
The previous answer showing the WMI solution is a good alternative and worth trying first. -- I am not aware of a .NET Framework class that exposes the service description. The first thing I would consider is requiring authenticated connections (e.g. NTLM) and impersonate the caller. As long as you don't do a double-hop (i.e. make a remote call with your impersonated credentials) you may find that you are able to successfully make the registery read. If that is not possible then making a P/Invoke call may work. If the credentials your web service has the SERVICE_QUERY_CONFIG permission you could do the following: Find the service you are interested in using the ServiceController class Using the ServiceHandle property make a P/Invoke call to QueryServiceConfig2 using the SERVICE_CONFIG_DESCRIPTION info level passing in null for the buffer and 0 for the lenght, reading the required buffer length from pcbBytesNeeded. Allocate the proper buffer length and call QueryServiceConfig2 a second time getting the service description. Obviously reading from the registery is a little more straight-forward (and in the end the permissions issues may be similar in both cases) - but using a supported API seems like a less fragile solution.
