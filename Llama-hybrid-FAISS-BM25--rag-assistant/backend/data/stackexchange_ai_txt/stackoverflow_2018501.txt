[site]: stackoverflow
[post_id]: 2018501
[parent_id]: 1941564
[tags]: 
For java it is extremely straight foward. In the initialize you will want to make the following changes: public void mouseDragged(PInputEvent e) { super.mouseDragged(e); // Update the squiggle while dragging. updateSquiggle(e); } to public void mouseDragged(PInputEvent e) { super.mouseDragged(e); if (e.isControlDown()) { updateSquiggle(e); } } Explanantion: This is possible because PInputEvent inherits the java event and therefore has the isControlDown() option. In C# this is not the case and you will need to extend it manually, or add it. There is a description of how to do it for C# (which I am not very familiar with) in Part 3 of the following tutorial . For C# I would assume the listener should look something like the following: protected void squiggle_ControlDown(object sender, PInputEventArgs e) { PNode node = (PNode)sender; switch (e.KeyCode) { case Keys.Control: updateSquiggle(); break; } } I hope this helps, I wish it hadn't been so long since I'd used C# or I could have given you a more specific answer.
