[site]: stackoverflow
[post_id]: 1990430
[parent_id]: 1990399
[tags]: 
G'day, A web server, e.g. Apache, just sends back static content is response to a client request for content. For example a request for http://www.myserver.com/index.html typically causes the server to open the file and return the content of the file wrapped with the relevant http components. Basically CGI is a technique for generating such web pages dynamically via other applications which are run by the web server on an as-needed basis. The directory cgi-bin is typically used to house the scripts being run. Though it's heavily focused on Perl The book " CGI Programming with Perl " has an excellent intro about CGI. Edit: As asked in the comments below, "if PHP can take care of dynamic content, then what's the need for CGI". There's a few points here. out of the box, PHP can be pretty slow. CGI, especially in its mod_perl guise, or when using app's built in compiled languages, PHP doesn't have very strong error handling, but this can be worked around, I don't think that there's real support for ASP, Windows app's or DB's, and PHP security is a bit of a worry, e.g. having register_globals enabled, and PHP's flaws are extremely well known. The design of the PHP language itself also contains many inconsistencies, e.g. a fairly useless object model, scoping is fairly bad, inconsistent naming, and poor organisation of the standard library. I believe that PHP5 goes a long way to improving these points. While security is always a concern, with CGI implementations you are able to minimise the security problem in well publicised ways. HTH cheers,
