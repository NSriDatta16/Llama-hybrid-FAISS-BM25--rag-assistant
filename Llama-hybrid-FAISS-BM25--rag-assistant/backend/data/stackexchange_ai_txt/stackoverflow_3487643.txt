[site]: stackoverflow
[post_id]: 3487643
[parent_id]: 3487328
[tags]: 
Using the idea of Skip and Take, I put together the following and it was pretty easy and works a treat thanks :-) protected void Page_Load(object sender, EventArgs e) { IEnumerable posts = from post in MemberPostCacher.Instance.Posts orderby post.Date descending select post; memberPostsRepeater.DataSource = GetPageMemberPosts(posts); memberPostsRepeater.DataBind(); } private IEnumerable GetPageMemberPosts(IEnumerable posts) { int totalNumberOfPosts = posts.Count(); int pageSize = int.Parse(ConfigurationManager.AppSettings["MemberPostsPageSize"]); int totalPages = GetTotalPages(totalNumberOfPosts, pageSize); int currentPage = 1; if (Request.QueryString["page"] != null) { int.TryParse(Request.QueryString["page"], out currentPage); if (currentPage totalPages) { currentPage = 1; } } SetIntroVisibility(currentPage); SetLinks(currentPage, totalPages); SetPageNumberText(currentPage, totalPages); return posts.Skip((currentPage - 1) * pageSize).Take(pageSize); } private int GetTotalPages(int numberOfPosts, int pageSize) { return numberOfPosts % pageSize == 0 ? numberOfPosts / pageSize : numberOfPosts / pageSize + 1; } private void SetIntroVisibility(int currentPage) { membersIntro.Visible = currentPage == 1; } private void SetLinks(int currentPage, int totalPages) { linkPrevious.Visible = currentPage != 1; linkNext.Visible = currentPage != totalPages; linkPrevious.NavigateUrl = FormatPageLink(currentPage - 1); linkNext.NavigateUrl = FormatPageLink(currentPage + 1); } private string FormatPageLink(int pageNumber) { return string.Format("{0}{1}{2}", Request.CurrentExecutionFilePath, "?page=", pageNumber); } private void SetPageNumberText(int currentPage, int totalPages) { lblNumRecords.Text = string.Format("&nbsp;&nbsp;Page {0} of {1}&nbsp;&nbsp;", currentPage, totalPages); if(totalPages == 1) { lblNumRecords.Visible = false; } }
