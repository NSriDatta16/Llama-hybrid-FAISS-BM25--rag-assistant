[site]: stackoverflow
[post_id]: 823419
[parent_id]: 823294
[tags]: 
I follow convention 1 all the time. Although, I do add an additional qualifier if there are two objects side by side. But having said that, making this convention mandatory may be problematic: In a certain context cart may be a good enough name for a ShoppingCart object (if, for example, there is no other 'cart' in the same function to be confused with). Sometimes the convention may completely obscure the purpose of the declared object. For example Window scoreBoard = new Window() says that we have an object which is indeed a Window but is being used as a scoreBoard. Very expressive. But following convention 1 you'd have to write Window window = new Window() which totally hides the intention behind this window. So I'd say use this naming idea everywhere except when it hinders meaning or appears unreasonably demanding. About convention 2, I totally agree. Keeping property names succinct and letting the object name complete the full meaning of its invocation is an elegant thing. It works perfectly with well named objects. So there's little reason to be shy of using it.
