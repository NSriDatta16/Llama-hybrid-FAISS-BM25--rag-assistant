[site]: stackoverflow
[post_id]: 3480542
[parent_id]: 3479395
[tags]: 
Why are you doing this? var _root:MovieClip = parent.parent as MovieClip; ... _root.addChild(sp); This style of display list management is reminiscent of ActionScript 2's leniency with encapsulation and polymorphism. Your Greeter object should not be attempting to access items above it on the display list in this fashion. Greeter ought to be adding this rectangle as a child of itself, and there is no reason to use MovieClip objects in this context, Sprites are more appropriate. To answer your question and fix the resulting answer about addChild, the use of the Spark Application instead of mx:Application is the reason why addChild is not a valid function. Spark application instances must contain a new breed of display object, as above, either an extension of SpriteVisualElement or an object that implements the functions defined in IVisualElement. If you are not leveraging Spark's layout and skinning functionality, simply change to using Flex 3/Halo/mx Application tag, and you will be able to addChild() as expected with a standard object extending Sprite instead of SpriteVisualElement.
