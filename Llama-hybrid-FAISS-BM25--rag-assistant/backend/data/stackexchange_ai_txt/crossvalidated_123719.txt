[site]: crossvalidated
[post_id]: 123719
[parent_id]: 123346
[tags]: 
If the number of features n is quite large, use the linear kernel, because it takes much time to compute RBF kernel values for features; the saved time can be used to train with more examples or perform more exhaustive validation to optimize parameters. And if n is small, using the RBF kernel doesn't matter. If the number of training examples is also small, then you have available computation time to run both and check which performs better by validation. In addition, if the data features are mostly not numerical, such as the presence of some properties or words with feature values 0 or 1, use the linear kernel, since using RBF kernel makes less sense under such circumstances. On the contrary, if main features of the data are numerical variables, then RBF is a good choice. For example, if a BMI value between 18 to 23 is often indicative of better health, and the task is to train an SVM to predict things related to healthiness or certain diseases, then the values of RBF with good chosen landmarks in the space can properly capture health condition.
