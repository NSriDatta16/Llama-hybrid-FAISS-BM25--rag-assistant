[site]: stackoverflow
[post_id]: 237258
[parent_id]: 236744
[tags]: 
I'm a big fan of mix-and-match, and an incremental change of the development process. I agree that iterative development should be your first goal, but I think you can approach it in even smaller steps. From my experience, I would recommend the following order - pick the first you don't do already: Fix Bugs First. I wish I wouldn't have to say that. This is the call of sanity, and also required to have shorter cycles. Small steps. Train the habit of implementing the smallest change that is a visible step towards the next feature, then compile and test. Break down all your tasks into Yes! Start with making sure developers have fast machines. How much better advise could get?! Build Everything Daily. Set up a double-click full builds from Source Control to installation medium, ideally on a separate PC. This are the first step to the frequent builds, but they help a lot on their own already. For us, it was a crucial step in getting reliable, reproducable build results. Start writing Unit Tests. Don't bother about coverage yet, don't enforce "write tests first", but put the framework in place. Write tests for new code and changes. Then run them with your daily builds. Short Cycles. Now it's the time, you have all tools in place to make weekly or two-weekly in house releases: The codebase is in a deliverable state many times a day, making the build is a double-click away, and at least something is working.
