[site]: stackoverflow
[post_id]: 1304031
[parent_id]: 
[tags]: 
Efficient Immutable Map Implementation?

I'm wondering if there is an implementation of a map which is: Immutable , so that I can use it in functional programming, and effortlessly ensure transactions and concurrency. Fast . I've checked out Binary Search Trees (RB, AVL) and Tries, but none of them seemed to be as fast as Hash Tables. Is there a map implementation that supports constant time for updates and retrievals? (or at least very fast logarithmic time) In short, is there a functional data structure that can compare with Hash Maps in performance?
