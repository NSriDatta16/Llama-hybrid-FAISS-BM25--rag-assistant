[site]: stackoverflow
[post_id]: 3921629
[parent_id]: 3921012
[tags]: 
Do you see anything wrong with this? Can you think of any reason this might be wrong, inneficient, or whatever? Yes. your build tools will either be: so dumb/manual that they don't realise client code needs to be recompiled when the implementation file changes, or smart enough that they do, so... changes to the part of the implementation file that the client code would normally be decoupled from - out of line functions, private implementation etc. - now trigger a recompilation of client code. That decoupling is a primary reason for having headers versus implementation files in the first place. Compromising it is unacceptable for lower-level code in an enterprise scale build. it's just one more thing for other developers to have to discover before they can understand your code. Is there any better way (besides actually putting the implementation in the header file)? Better in what way? Is there a practical problem you're trying to solve? If so, there are probably many ways to solve it. If you're problem is simply a frustration with the inelegance, then move on... life's too short.
