[site]: crossvalidated
[post_id]: 407917
[parent_id]: 407729
[tags]: 
Your main confusion is that you appear to not be correctly identifying the difference between the functional and the target distribution. I would say your target distribution appears to be a simple uniform distribution, while the functional is the fancy guy. Confusingly, your functional involves a gamma density. MCMC gives you an estimate of an expectation. Your expectation is this: $$ \int_0^\infty \chi_{[1,2]}(x)\Gamma(C,x)\left|\cos(R x)\right| \, dx = E_X[h(x)] $$ where $h(x) = \frac{1}{\Gamma(c)}x^{c-1}e^{-x} \left|\cos(R x)\right|$ is the function that your func evaluates, and $X \sim \text{Uniform}(1,2]$ . $h$ is the functional, and $\text{Uniform}(1,2]$ is the target distribution. Metropolis-Hastings wouldn't be my first choice for this problem, but you seem to be using random walk Metropolis-Hastings. I think this because you are proposing samples like this: $$ X^*\mid X_{t-1} \sim \text{Normal}(X_{t-1}, 1). $$ You call $X^*$ new , and $1$ step (this name confuses me, but that's not that important). You can write your target distribution as $\pi(x) = \chi_{[1,2]}(x)$ , and this makes your acceptance ratio $$ a(x_{t-1},x^*) = \min(1, \pi(x^*)/\pi(x_{t-1})). $$ Note that you are incorrectly calculating this with min(1,prox/ant) . You are using the $h$ function here, when you shouldn't be (if you're targeting this uniform distribution). Instead, use this code (yours with minimal changes) from scipy.stats import gamma,norm import numpy as np import matplotlib.pyplot as plt def sampler(N): step=1 old=1.5 i=0 points=[] while i np.random.uniform(): old=new i+=1 points.append(old) return points Your mc function appears to be correct. It is calculating $$ N^{-1} \sum_{i=1}^{N} h(x_t) $$ where $x_t$ are all your samples (which you are calling points ). Finally, yes, your answer is valid as well. You are likely reversing the argument order in the gamma.pdf function.
