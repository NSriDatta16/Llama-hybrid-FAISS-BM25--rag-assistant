[site]: stackoverflow
[post_id]: 5386731
[parent_id]: 
[tags]: 
FacesConverter not working with mojarra 2.1.0-b09, 2.1.1-b02?

With this maven dependency, it works : com.sun.faces jsf-api 2.0.4-b09 compile com.sun.faces jsf-impl 2.0.4-b09 compile But with this, it's not working : com.sun.faces jsf-api 2.1.0-b09 --> 2.1.1-b02 compile com.sun.faces jsf-impl 2.1.0-b09 --> 2.1.1-b02 compile with the exception of SEVERE: Servlet.service() for servlet [Faces Servlet] in context with path [/primebert] threw exception [Expression Error: Named Object: heroConverter not found.] with root cause javax.faces.FacesException: Expression Error: Named Object: heroConverter not found. at com.sun.faces.application.ApplicationImpl.createConverter(ApplicationImpl.java:1311) at org.jboss.weld.environment.servlet.jsf.ForwardingApplication.createConverter(ForwardingApplication.java:153) at com.sun.faces.facelets.tag.jsf.ValueHolderRule$LiteralConverterMetadata.applyMetadata(ValueHolderRule.java:85) at com.sun.faces.facelets.tag.MetadataImpl.applyMetadata(MetadataImpl.java:81) at javax.faces.view.facelets.MetaTagHandler.setAttributes(MetaTagHandler.java:129) at javax.faces.view.facelets.DelegatingMetaTagHandler.setAttributes(DelegatingMetaTagHandler.java:102) at com.sun.faces.facelets.tag.jsf.ComponentTagHandlerDelegateImpl.doNewComponentActions(ComponentTagHandlerDelegate Impl.java:402) And here's my simple converter class : import javax.faces.component.UIComponent; import javax.faces.context.FacesContext; import javax.faces.convert.Converter; import javax.faces.convert.FacesConverter; @FacesConverter("heroConverter") public class HeroBeanConverter implements Converter { public Object getAsObject(FacesContext context, UIComponent ui, String newValue) { System.out.println("getting as object"); HeroBean hero = HeroBean.findHeroBeanByName(newValue); System.out.println("found hero : " + hero); return hero; } public String getAsString(FacesContext context, UIComponent component, Object value) { System.out.println("getting as string for value " + value); if (value == null) return ""; return ((HeroBean) value).getName(); } } Is it a bug, or im at a mistake here ? :-D
