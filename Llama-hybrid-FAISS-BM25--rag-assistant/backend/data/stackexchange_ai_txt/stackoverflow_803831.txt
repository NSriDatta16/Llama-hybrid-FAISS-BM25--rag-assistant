[site]: stackoverflow
[post_id]: 803831
[parent_id]: 801828
[tags]: 
I haven't seen this pattern before, but it seems fairly pointless to me. I guess the intent is to keep the returned value safe if the client code calls "release" on the parent object. It doesn't really hurt anything, but I doubt that situation comes up all that often in well-designed libraries. Ah, ok. from the documentation smorgan linked to, it seems this is now one of the methods that Apple is currently recommending that people use. I think I still prefer the old-school version: - (NSString *) value { return myValue; } - (void) setValue: (NSString *) newValue { if (newValue != myValue) { [myValue autorelease]; // actually, I nearly always use 'release' here myValue = [newValue retain]; } }
