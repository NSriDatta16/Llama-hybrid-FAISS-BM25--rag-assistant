[site]: stackoverflow
[post_id]: 368738
[parent_id]: 323363
[tags]: 
Ruby's gem tool follows a path discovery algorithm which, apparently, is not Windows (as I see from your ruby -v ) friendly. You can get a clear picture if you trace, for example, a Rails application loading with ProcMon . Every (I really mean every ) require starts a scan over all directories in Ruby's path plus all gem directories. A typical require takes 20 ms on an average machine. Since Rails makes hundreds of require s, those 20 ms easily sum up to seconds every time you launch the Rails environment. Take in the time to initialize the fixtures in the database and you get a better idea of why it takes so much time to just begin running the test-cases. Perhaps because of each file-system architecture and implementation (path caching etc.), this is less of a problem in Linux than in Windows. I don't know who you should blame, though. It looks like the NTFS file-system could be improved with a better path caching implementation, but clearly the gem tool could implement the caching itself and have its performance not so dependent on the platform.
