[site]: datascience
[post_id]: 14132
[parent_id]: 14124
[tags]: 
You could try the following: Divide up the day into various parts - early-morning, morning, noon, afternoon, evening, late evening, night, etc. Assign time boundaries to each part of the day, e.g. noon could be 12 pm to 1 pm. Create 3 new labels - "part of the day to call the customer", for each positive case (status of call=true) assign it the corresponding label (morning/noon/evening). These labels will be in one-hot encoded format e.g. prefer_morning=0/1, prefer_noon, prefer_evening, etc. Build 3 models to predict whether the lead prefers morning/noon/or evening time of the day for a call to be successful. Additionally, I recommend adding additional features such as occupation, gender, etc. since the features listed in the table (city, etc.) are too ambiguous and do not give much information to differentiate among customers. EDITED as per suggestion in comments: When using the model, each lead would get classified as prefers_morning=yes/no, prefers_noon=yes/no and prefers_evening=yes/no. Based on the time of the day, for example in the morning, the call center agent (or software) could pick up and call leads classified in the morning preference set. When its noon, the call software picks up form the noon preferred list, and so on.
