[site]: stackoverflow
[post_id]: 4034842
[parent_id]: 4034728
[tags]: 
If you store the aggregates in an intermediate Object (something like MyAggragatedResult), you could consider a caching proxy: class ResultsProxy { calculateResult(param1, param2) { .. retrieve from cache .. if not found, calculate and store in cache } } There are quite a few caching frameworks for java, and most like for other languages/environments such as .Net as well. These solution can take care of invalidation (how long should a result be stored in memory), and memory-management (remove old cache items when reaching memory limit, etc.).
