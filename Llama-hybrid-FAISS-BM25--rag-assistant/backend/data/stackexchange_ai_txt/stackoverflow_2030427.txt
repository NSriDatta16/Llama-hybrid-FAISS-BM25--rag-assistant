[site]: stackoverflow
[post_id]: 2030427
[parent_id]: 2027270
[tags]: 
I guess what you want is to have cars that have "similar" characteristics to be clustered nearby, and additionally that the cost in general increases rightwards, and speed in general increases upwards. I would try to following approach. Suppose you have N cars and you want to put them in an X * Y grid. Assume N == X * Y. Put all the N cars in the grid at random locations. Define a metric that calculates the total misordering in the grid; for example, count the number of car pairs C1=(x,y) and C2=(x',y') such that C1.speed > C2.speed but y C2.price but x Run the following algorithm: Calculate current misordering metric M Enumerate through all pairs of cars in the grid and calculate the misordering metric M' you obtain if you swapt the cars Swap the pair of cars that reduces the metric most, if any such pair was found If you swapped two cars, repeat from step 1 Finish This is a standard "local search" approach to an optimization problem. What you have here is basically a simple combinatorial optimization problem. Another approaches to try might be using a self-organizing map (SOM) with preseeded gradient of speed and cost in the matrix.
