[site]: stackoverflow
[post_id]: 1555363
[parent_id]: 1555326
[tags]: 
First, you are strongly discouraged to do almost any cast, so you should limit it as much as possible! You lose the benefits of Java's compile-time strongly-typed features. In any case, Class.cast() should be used mainly when you retrieve the Class token via reflection. It's more idiomatic to write MyObject myObject = (MyObject) object rather than MyObject myObject = MyObject.class.cast(object) EDIT: Errors at compile time Over all, Java performs cast checks at run time only. However, the compiler can issue an error if it can prove that such casts can never succeed (e.g. cast a class to another class that's not a supertype and cast a final class type to class/interface that's not in its type hierarchy). Here since Foo and Bar are classes that aren't in each other hierarchy, the cast can never succeed.
