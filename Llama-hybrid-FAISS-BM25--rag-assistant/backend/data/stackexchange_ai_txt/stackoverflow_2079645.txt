[site]: stackoverflow
[post_id]: 2079645
[parent_id]: 2079551
[tags]: 
I'll have a look later. It sounds somewhat familiar. I had the same issue with characters not being displayed in the swf in a static text field, although displayed in the IDE( flash cs3), when I was working on a multilingual website. The problem that time was with the Greek Characters in Arial. I had to download a separate version of Arial with proper Greek characters and that fixed it. Maybe it's the same issue and you need a different version of the same font. Have you tried the same thing with Courier New or Lucida Console ? I've tried a basic setup( the name Tōru Iwatani written in 2 textields, one Courier New, one Lucida Console, embedded font, dynamic text, rotated textfield, just to test embedding and it diplayed fine. EDIT: Hi, I've made some tests using monospaced fonts from dafont.com This is the snippet I used to find the fonts that should work: var fonts:Array = Font.enumerateFonts(); for(var i:int = 0 ; i This is the list I got: Monaco Lucida Grande Bitstream Vera Sans Mono saxMono JackInput Liberation Mono Regular F25 Bank Printer I've tried a few with 2 different approaches. Embedding the font in the Library didn't help as you can see here: Embedding the font using an instance on Stage worked for some of the fonts: Here is the code I used for the test, pretty messy but it's a test :) l.text = j.text = f.text = li.text = s.text = b.text = 'Hello Tōru Iwatani...Hello Tōru Iwatani...Hello Tōru Iwatani...'; var lucida:TextField = getStyledTextField("Lucida Grande"); var liberation:TextField = getStyledTextField("Liberation Mono Regular"); var sax:TextField = getStyledTextField("saxMono"); addChild(lucida); addChild(liberation); addChild(sax); liberation.y = 30; sax.y = 60; lucida.htmlText= liberation.htmlText = sax.htmlText = " Hello Tōru Iwatani... "; function getTextField(font:String):TextField{ var label:TextField = new TextField(); label.defaultTextFormat = new TextFormat(font,11,0x33333); label.autoSize = TextFieldAutoSize.LEFT; label.border = true; label.embedFonts = true; return label; } function getStyledTextField(font:String):TextField{ var style:StyleSheet = new StyleSheet(); style.parseCSS(".text { color:#333333; font-family:"+font+"; }"); var label:TextField = new TextField(); label.styleSheet = style; label.autoSize = TextFieldAutoSize.LEFT; label.border = true; label.embedFonts = true; return label; } l, li, b, j, etc. are instance names for the dynamic textfields on stage using fonts like lucida grande, liberation, bitstream vera sans mono, JackInput, etc. I'm not sure what the issues is, but embedding the characters on stage worked for me, also, I embedded all the glyphs just to make sure. It takes ages to compile, you might want to pick a font that you like out of those that work, and take out glyphs gradually until you find the minimal amount of glyphs you need to use. Goodluck, George
