[site]: stackoverflow
[post_id]: 598189
[parent_id]: 598157
[tags]: 
I am a python beginner as well. While I cannot say why exactly Exception handling has been called cheap in the context of that answer, here are my thoughts: Note that checking with if-elif-else has to evaluate a condition every time. Exception handling, including the search for an exception handler occurs only in an exceptional condition, which is likely to be rare in most cases. That is a clear efficiency gain. As pointed out by Jay, it is better to use conditional logic rather than exceptions when there is a high likelihood of the key being absent. This is because if the key is absent most of the time, it is not an exceptional condition. That said, I suggest that you don't worry about efficiency and rather about meaning. Use exception handling to detect exceptional cases and checking conditions when you want to decide upon something. I was reminded about the importance of meaning by S.Lott just yesterday. Case in point: def xyz(key): dictOb = {x:1, y:2, z:3} #Condition evaluated every time if dictOb.has_key(key): #Access 1 to dict print dictOb[key] #Access 2 Versus #Exception mechanism is in play only when the key isn't found. def xyz(key): dictOb = {x:1, y:2, z:3} try: print dictOb[key] #Access 1 except KeyError: print "Not Found" Overall, having some code that handles something,like a missing key, just in case needs exception handling, but in situations like when the key isn't present most of the time, what you really want to do is to decide if the key is present => if-else. Python emphasizes and encourages saying what you mean. Why Exceptions are preferred to if-elif -> It expresses the meaning more clearly when you are looking foe exceptional aka unusual/unexpected conditions in your code. It is cleaner and a whole lot more readable. It is more flexible. It can be used to write more concise code. Avoids a lot of nasty checking. It is more maintainable. Note When we avoid using try-except, Exceptions continue being raised. Exceptions which aren't handled simply go to the default handler. When you use try-except, you can handle the error yourself. It might be more efficient because if-else requires condition evaluation, while looking for an exception handler may be cheaper. Even if this is true, the gain from it will be too minor to bother thinking about. I hope my answer helps.
