[site]: stackoverflow
[post_id]: 5139836
[parent_id]: 4947161
[tags]: 
If you are implementing several different comparison operations on the same slice type, you can use embedding to avoid redefining Len and Swap each time. You can also use this technique to add parameters to the sort, for example to sort in reverse or not depending on some run-time value. e.g. package main import ( "sort" ) type T struct { Foo int Bar int } // TVector is our basic vector type. type TVector []T func (v TVector) Len() int { return len(v) } func (v TVector) Swap(i, j int) { v[i], v[j] = v[j], v[i] } // default comparison. func (v TVector) Less(i, j int) bool { return v[i].Foo
