[site]: crossvalidated
[post_id]: 532079
[parent_id]: 531715
[tags]: 
The ordinal model you fitted is based on the idea that there is a variable $y$ having a logistic distribution (slightly heavier-tailed than normal), whose mean depends on the predictors. But instead of being able to observe $y$ directly, we only observe which interval $(-\infty, c_1], (c_1, c_2], (c_2, c_3], (c_3, \infty)$ it falls in. That makes $y$ a latent variable (exists but not observed). The cut points $c_j$ are estimated by the model-fitting software, in this case they are about $-1.89, 0.11, 2.04$ respectively as shown in the "thresholds" part of the output. Notice that for any constant $a$ , if we were to replace $y$ by $y+a$ , and $c_j$ by $c_j+a$ , then nothing would change in terms of the probabilities of falling in the respective intervals. So what is done (I think) for sake of identifiability of the parameters is to assume that the overall average of the $y$ values is zero. And that makes about half of the predicted $y$ values negative and the other half positive. By default, emmeans() estimates the marginal means of this latent $y$ variable; so, as just explained, some of those estimates are negative and some are positive. Another option is to use emmeans(..., mode = "mean.class") . In that case, we obtain the estimated distributions of the four ordinal levels for each accent and obtain the mean of that distribution. So this is something like what you would obtain by fitting a regression model to the ordinal response as a numerical variable. The catch is that this presumes the levels are numbered 1, 2, 3, and 4; and so those means will be one higher than you might expect, given that you numbered them 0, 1, 2, and 3. I'd suggest you stick with the latent-variable parameterization anyway. The mixed model you have fitted also assumes there are random effects for listener, item, and speaker. Those random effects are on the latent scale; that is, the latent variable $y$ is subject to additional random variations.
