[site]: datascience
[post_id]: 116108
[parent_id]: 116035
[tags]: 
If you exactly know the shapes of your tensor then try this code... Decorate this function by @tf.function and specify the input shapes and first time it will take some extra time for tracing then next time it will be executed very effectively. @tf.function(input_signature=[tf.TensorSpec( shape=[None], dtype=tf.int32 #Can change the shape according to your inputs ), tf.TensorSpec( shape=[None], dtype=tf.bool )]) def transform(_inputs , _index): out_left = tf.ragged.boolean_mask(_inputs, _index) _index = tf.math.logical_not(_index) out_right = tf.ragged.boolean_mask(_inputs, _index) reconstruced_tensor = tf.concat([out_left, out_right], axis=-1) return reconstruced_tensor #Some dummy inputs _inputs = tf.range(10) indices = tf.cast(tf.random.uniform(shape=[10], minval=0, maxval=2, dtype=tf.int32 ), dtype=tf.bool) transform(_inputs, indices) Output ```
