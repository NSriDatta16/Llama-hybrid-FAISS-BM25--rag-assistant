[site]: stackoverflow
[post_id]: 3185991
[parent_id]: 3185933
[tags]: 
I think it is more complicated than that. First, methods tend to follow a power-law distribution: In any given project there will be some outliar methods which are so immensely larger than the vast majority of the other methods that the average size never converges. Second, If you need to issue ten API calls in order to fulfil one specific task, there is no point in breaking this sequence of calls into two methods just to meet a size cap. When you break something into parts you have to give two names (or even three) instead of one. you have to document each part, etc. Bottom line: small is good, but do not follow it blindly. The best advice is to try to make every method coherent (focused).
