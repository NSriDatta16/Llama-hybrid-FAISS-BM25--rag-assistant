[site]: datascience
[post_id]: 107986
[parent_id]: 
[tags]: 
How Should I Create Waveform Datasets

Full disclosure I asked this on StackOverflow and it got taken down as it was more of a how do I do this, not how do I code this question: I am trying to simulate/fake data that I eventually will expect to collect in the real world. I will be recording 4 different signals at the same univariate time series. Each signal is unique and aids in the final model's classification capability. Each sample set would have 4 waveforms like below: In addition I would be able to classify each one of these datasets into one of 10 classes. I am trying to utilize sklearn to generate the data, but only get scalar values per feature. Is there a way to generate something like my fake signals plot above with the classification? My first pass was to just create random data via numpy, but after throwing it into any sort of model, it fails to find any fit: y = np.random.randint(n_classes, size=num_samples) X = np.random.normal(size=(num_samples, n_dims)) Ideally I'd want data that when plotted in a dimensionality reduction view like t-SNE would have clusters like below: Any suggestions how I could achieve this? My inital thoughts were to use the sklearn make_classification to generate a scalar value for each waveform that would essentially be a seed, but I am thinking there probably is both an easier and more correct way.
