[site]: stackoverflow
[post_id]: 4732349
[parent_id]: 4732270
[tags]: 
You will need to persist the data somehow. There are several options: Store it on the server. When the form is submitted, your server-side script will receive the data; it can persist it in a database, session variable, or some other form of storage that's appropriate for your application. Whenever the client re-visits the page with the form, have the server generate the form's HTML with the persisted data. Use HTML5's local storage . While not supported in legacy browsers, all modern ones provide the local storage API. When the user submits the form (attach an event listener to the form's "submit" event), you can store the form data by making calls to localStorage[key] = value and retrieving it with localStorage[key] . Store it in a cookie. Although I don't recommend this approach, you can create a cookie with the form data. The only restriction is that the data needs to be represented as a string, but I recommend JSON . However, you probably should not use this approach since cookies are sent to the server for each request; if the form fields contain a lot of data, then you're also unnecessarily sending a lot of data to the server. Using HTML5's local storage gives you a self-encapsulated approach that requires no server-side configuration: (function() { var form = document.getElementsByName('myform')[0]; if (localStorage['name'] !== undefined) { var displayArea = document.getElementById('theName'); displayArea.textContent = localStorage['name']; } form.addEventListener('submit', function() { var nameField = document.getElementsByName('name')[0]; localStorage['name'] = nameField.value; }, false); })();
