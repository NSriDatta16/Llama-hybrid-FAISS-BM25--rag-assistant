[site]: stackoverflow
[post_id]: 2490861
[parent_id]: 2490839
[tags]: 
There are, at least, two ways to find unassociated records. 1. Using LEFT JOIN SELECT DISTINCT -- each country only once tblCountry.countryID, tblCountry.tblCountry FROM tblCountry LEFT JOIN tblProjectCountry ON tblProjectCountry.countryID = tblCountry.countryID WHERE tblProjectCountry.ProjectID IS NULL -- get only records with no pair in projects table ORDER BY tblCountry.countryID As erikkallen mentioned this could perform not well . 2. Using NOT EXISTS Various version of using NOT EXISTS or IN were suggested by rohancragg and others: SELECT tblCountry.countryID, tblCountry.tblCountry FROM tblCountry WHERE -- get only records with no pair in projects table NOT EXISTS (SELECT TOP 1 1 FROM tblProjectCountry WHERE tblProjectCountry.countryID = tblCountry.countryID) ORDER BY tblCountry.countryID Depends on your DBMS and size of countries and projects tables both version could perform better. In my test on MS SQL 2005 there was no significant difference between first and second query for table with ~250 countries and ~5000 projects . However on table with over 3M projects second version (using NOT EXISTS ) performed much, much better. So like always, it's worth to check both versions.
