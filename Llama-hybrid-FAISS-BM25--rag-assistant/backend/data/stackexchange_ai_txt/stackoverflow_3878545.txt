[site]: stackoverflow
[post_id]: 3878545
[parent_id]: 1649503
[tags]: 
I found this as the only sensible, short discussion of how to go back and forth from R objects and python. naufraghi's solution prompted the following approach to converting a data.frame, which retains the nicer slicing capabilities of the dataframe: In [69]: import numpy as np In [70]: import rpy2.robjects as ro In [71]: df = ro.r['data.frame'](a=r.c(1,2,3), b=r.c(4.0,5.0,6.3)) In [72]: df Out[72]: In [73]: print(df) a b 1 1 4.0 2 2 5.0 3 3 6.3 In [74]: recdf = np.rec.fromarrays(df, names=tuple(df.names)) In [75]: recdf Out[75]: rec.array([(1, 4.0), (2, 5.0), (3, 6.2999999999999998)], dtype=[('a', ' Seems a bit off-topic at this point, but I'm not sure what the appropriate procedure would be to capture this question & answer of mine!
