[site]: stackoverflow
[post_id]: 4254294
[parent_id]: 
[tags]: 
C++ Dynamically convert string to any basic type

In C++ I need to convert a string to any type at runtime where I do not know what type I might be getting in the string. I have heard there is a lexical_cast in boost that I can use, but what would be the most effective way to implement it? I might get a bunch of string like this from a client: Date="25/08/2010", Someval="2", Blah="25.5". Now I want to be able to convert these strings to their type, eg, the Somval is obviously an int, and the Date could be a boost::date or whatever. The point is, I don't know at this time in what order these would be given to me, so it's hard to write some code that will perform a bunch of casts. I could use a bunch of if/else statements or a switch/case statements, however I'm thinking that there is possibly a better way to do this. I'm not looking for something different to lexical_cast, I can totally use that, I am looking to see if someone knows a better way then doing this: std::string str = "256"; int a = lexical_cast (str); //now check if the cast worked, if not, try another... This is too much of a guessing game, and if I have 10 possible types, for any given string, it sounds a bit ineffective. Especially if it has to do 1000's of these at any given time. Can anybody advice? Alex Brown notes - the example string is a fragment of the XML data that comes from the client.
