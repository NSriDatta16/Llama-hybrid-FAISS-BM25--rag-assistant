[site]: stackoverflow
[post_id]: 3667518
[parent_id]: 3667484
[tags]: 
EDIT: since writing this answer, I learned of the HTML5 oninput event which is much more appropriate than key events because it will detect all forms of input including paste, drag and drop, etc. The event is supported in all major browsers except IE 8 and lower, but you can simulate the event in IE by mapping to onpropertychange instead. Example: if ("onpropertychange" in myInput && !("oninput" in myInput)) { myInput.onpropertychange = function () { if (event.propertyName == "value") myHandler.call(this, event); } } else myInput.oninput = myHandler; Note that onpropertychange doesn't fire when inputting into non-form elements with the contentEditable property set. onkeyup will only fire after the key is lifted, so for best results use onkeypress and/or onkeydown . If you use a timer with a delay of 0ms, you can get the new value immediately after it is updated: myInput.onkeydown = function () { var self = this; window.setTimeout(function () { alert(self.value); },0); } Example: http://jsfiddle.net/fgcYD/ Note that this won't catch pasting or dragging and dropping text into the box. For those you need other events.
