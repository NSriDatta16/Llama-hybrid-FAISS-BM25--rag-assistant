[site]: datascience
[post_id]: 81562
[parent_id]: 81479
[tags]: 
One way to do this is by creating separate preprocessing steps for each data type, the most common case is you have categorical and continuous variables from sklearn.pipeline import Pipeline from sklearn.compose import make_column_transformer from sklearn.compose import make_column_selector as selector from sklearn.linear_model import LogisticRegression cont_prepro = Pipeline([("imputer",SimpleImputer(strategy = "median")),("scaler",StandarScaler())]) cat_prepro = Pipeline([("imputer",SimpleImputer(strategy = "most_frequent")),("encoder",OneHotEncoder(handle_unknown = "ignore"))]) preprocessing = make_column_transformer((cont_prepro,selector(dtype_exclude = "object")),(cat_prepro,selector(dtype_include = "object")) pipe = Pipeline([("preprocessing",preprocessing),("model",LogisticRegression())]) If you want to separate features on each step by listing instead of by type you should create a list with the specific columns as you already did in your example and remove the selector part. In your case: pipe_one = Pipeline([("num_impute",SimpleImputer(strategy='median')),('Std', StandardScaler())]) preprocessing = make_column_transformer((pipe_one,["feat_1","feat_2"]),remainder='passthrough') pipe = Pipeline([("preprocessing",preprocessing),("model",LogisticRegression())])
