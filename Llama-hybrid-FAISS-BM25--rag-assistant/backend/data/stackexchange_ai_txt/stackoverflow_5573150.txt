[site]: stackoverflow
[post_id]: 5573150
[parent_id]: 
[tags]: 
Overlay text over an image background and convert to PDF

Using .NET, I want to programmatically create a PDF which simply consists of a background image with two labels over it with different fonts and positioning. I have read about existing PDF libraries, but don't know (if applicable) which one is the easiest for such a simple task. Anyone care to guide me? P.D.: I do not want to create the PDF with a generated image that already overlays the text over the background image . Edit: This is the final working code: public string Create() { if (!Directory.Exists(ApplicationImagePath)) { Directory.CreateDirectory(ApplicationImagePath); } // Smart card var doc = new Document(PageSize.GetRectangle("153 242.65"), 0, 0, 0, 0); using (var stream = File.Create(filepath)) { var writer = PdfWriter.GetInstance(doc, stream); doc.Open(); var image = Image.GetInstance(CarnetData.Frame, ImageFormat.Png); image.Alignment = Element.ALIGN_CENTER; image.ScaleToFit(153, 242.65f); doc.Add(image); BaseFont font = BaseFont.CreateFont(GetFontPath(CarnetConfiguration.FontType), BaseFont.IDENTITY_H, BaseFont.EMBEDDED); font.PostscriptFontName = CarnetConfiguration.FontType.ToString(); float verticalPosition = writer.GetVerticalPosition(false); var pName = new Paragraph(CarnetData.Name, new Font(font, FontData.EmployeeFont.SizeInPoints)) { SpacingBefore = verticalPosition - 51f, MultipliedLeading = 1.1f, Alignment = Element.ALIGN_CENTER }; doc.Add(pName); var pDepartment = new Paragraph(CarnetData.Department, new Font(font, FontData.DepartmentFont.SizeInPoints)) { SpacingBefore = 1.5f, MultipliedLeading = 1.2f, Alignment = Element.ALIGN_CENTER }; doc.Add(pDepartment); writer.ViewerPreferences = PdfWriter.PageModeUseNone + PdfWriter.CenterWindow + PdfWriter.PageLayoutSinglePage; doc.Close(); } return filepath; } Thanks for the help. :)
