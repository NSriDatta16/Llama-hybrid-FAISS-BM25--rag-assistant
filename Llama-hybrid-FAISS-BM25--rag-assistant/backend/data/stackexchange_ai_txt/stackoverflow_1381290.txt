[site]: stackoverflow
[post_id]: 1381290
[parent_id]: 1376077
[tags]: 
C (157 characters) I'm stuck there for the time being. I don't think C will beat J on this one. Thanks to strager for helping trim 8 characters, though. char*p,a[999][80];w,x,y=500;main(c){for(gets(memset(p=*a,32,79920));*p; a[y][x++]=c=*p++)y+=*p c;for(;++w Formatted: char *p, /* pointer to current character (1st) or line (2nd) */ a[999][80]; /* up to 998 lines of up to 79 characters */ w, x, y = 500; /* three int variables. y initialized to middle of array */ main(c){ for(gets(memset(p=*a, 32, 79920)); /* 999 * 80 = 79920, so the entire array is filled with space characters. * memset() returns the value of its first parameter, so the above is * a shortcut for: * * p = *a; * memset(p, 32, 79920); * gets(p); * * Incidentally, this is why I say "up to 998 lines", since the first * row in the array is used for the input string. * * **** WARNING: Input string must not be more than 79 characters! **** */ *p;a[y][x++] = c = *p++) /* read from input string until end; * put this char in line buffer and in prev */ y += *p c; /* the use of commas saves from using { } */ for(;++w I didn't bother supporting input of more than 79 characters, since that would cause confusing wrap on most terminals.
