[site]: stackoverflow
[post_id]: 3831989
[parent_id]: 3831767
[tags]: 
I played with your code and it seems you are doing everything ok, though I'm no expert in Clutter. I also ran your program under gdb and some interesting things showed up: Program received signal SIGSEGV, Segmentation fault. [Switching to Thread 0xb799db70 (LWP 3023)] 0x002d97c6 in glDisable () from /usr/lib/nvidia-current/libGL.so.1 (gdb) thread apply all bt Thread 2 (Thread 0xb799db70 (LWP 3023)): #0 0x002d97c6 in glDisable () from /usr/lib/nvidia-current/libGL.so.1 #1 0x001b3ec3 in cogl_disable_fog () from /usr/lib/libclutter-glx-1.0.so.0 #2 0x0018b00a in ?? () from /usr/lib/libclutter-glx-1.0.so.0 #3 0x0019dc82 in clutter_stage_get_actor_at_pos () from /usr/lib/libclutter-glx-1.0.so.0 #4 0x080498de in receive_loop () at seg.cpp:19 Apparently the crash happened on glDisable () from /usr/lib/nvidia-current/libGL.so.1 . Notice that I use NVIDIA's OpenGL driver on my GeForce 8600 GT. Can you confirm that your application also crashes on computers with other video cards (not NVIDIA)? I doubt the crash is due to a bug on NVIDIA's OpenGL implementation. For me it seems that *clutter_threads_enter/leave()* is not protecting *clutter_stage_get_actor_at_pos()* since I tested *receive_loop()* being called as a callback: g_signal_connect(stage, "button-press-event", G_CALLBACK(receive_loop), NULL); so we know that your code seems to be ok. I encourage you to send your question to Clutter discussion and help mailing list: clutter-app-devel-list a mailing list for application developers using Clutter, its integration libraries or toolkits based on Clutter.
