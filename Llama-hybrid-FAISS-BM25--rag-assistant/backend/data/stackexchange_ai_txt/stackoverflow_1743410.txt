[site]: stackoverflow
[post_id]: 1743410
[parent_id]: 1743295
[tags]: 
To address your questions: Am I taking a wrong approach to this? Printing the revision number in the file itself is useful, but that revision number counts for the file only. Other files in your project will probably have different revision numbers and that will make it difficult for you to track down what group of files actually went into a build. Should I take a different approach and just use an auto incrementing build number in Visual Studio? No, stick with the one in subversion. Don't rely on your development tools to tell you what version your file is, use the version control system instead. What do you do in your organization? We use tagging . Once the files in our project are at a point to where we feel like we can deploy it to production, we tag that group of files (usually giving it a date in %Y%m%d format). Tagging has a lot of benefits to it. From that tag, we'll build and deploy. We don't have a proper build server or continuous integration server yet. We're still small like you but we're getting there :-) EDIT: I should have pointed out that Tagging is useful because it will tell you what state your whole project was in (it's a snapshot of all the files in your project regardless of revision number). It's also handy if you have to roll back to a previous revision. This is, of course, after you have been tagging for a while.
