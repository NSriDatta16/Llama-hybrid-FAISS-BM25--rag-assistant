[site]: crossvalidated
[post_id]: 459262
[parent_id]: 459082
[tags]: 
You don't need to use matching to do this. Ideally, you want to estimate new survey weights that when applied to the nonprobability sample make it look similar to the survey-weighted probability sample. This is analogous to using propensity score weighting to reweight a control group so that it resembles a treated group, except in this case the treated group (i.e., the probability sample) already has weights. The R package WeightIt can help you estimate weights in this scenario. You'll want to structure your data so that you have a variable that indicates whether each observation comes from the probability (1) or nonprobability sample (0), and another variable that represents the existing sample weights (the survey weights for the probability sample and 1 for the nonprobability sample). Then, you want to estimate ATT weights, which will reweight the nonprobability sample to resemble the survey-weighted probability sample. There are a variety of methods to do so. Ackerman et al. (2020) found that generalized boosted modeling with balance targeting did the best of the four methods they considered, but you can try other methods as well. Once you've estimated the weights, you can assess the degree to which the samples resemble each other. This is analogous to checking for covariate balance in observational studies. You can use the cobalt package to do this. Below is some sample code that you could use (replacing the variables with your own). I'll use S for the probability/nonprobability sample indicator (with S = 1 for the probability sample), and sw for the survey weights, which, again, are equal to 1 for the nonprobability sample and equal to the survey weights for the probability sample. library(WeightIt); library(cobalt) w.fit If you just want to use the newly weighted nonprobability sample and ignore the probability sample, you can extract the weights from the w.fit object and subset those with S == 0 . If you want to use both samples combined, you need to multiply the estimated weights by the original survey weights (i.e., new_w ). In the call to WeightIt , you can specify different estimation methods with the method argument. "ps" is logistic regression-based propensity score weighting. You can try "gbm" or "super" to use the methods in Ackerman et al. (2020), who also use WeightIt in their simulation, but these methods require additional choices. "ebal" or "optweights" can be good choices because they guarantee exact balance on the means of the covariates you include, but they require additional assumptions about the form of the selection model. Note: I'm the author of both WeightIt and cobalt .
