[site]: stackoverflow
[post_id]: 4726400
[parent_id]: 4726370
[tags]: 
Have you never heard about prevalence frameworks ? EDIT some clarifications on the term. Like James Gosling now says, no SQL DB is as efficient as an in-memory storage. Prevalence frameworks (most known being prevayler and space4j ) are built upon this idea of an in-memory, maybe storable on disk, storage. How do they work ? In fact, it's deceptively simple : a storage object contains all persistent entities. This storage can only be changed by serializable operations. As a consequence, putting an object in storage is a Put operation performed in isolated context. As this operation is serializable, it may (depending upon configuration) be also saved on disk for long-term persistence. However, the main data repository is the memory, which proides undoubtly fast access time, at the cost of a high memory usage. Another advantage is that, because of their obvious simplicity, these frameworks hardly contain more than a tenth of classes Considering your question, the use of Space4J immediatly came to my mind (as it provides support for "passivation" of rarely used objects, that's to say their index key is in memory, but the objects are kept on disk as long as they're not used). Notice you can also find some infos at c2wiki .
