[site]: datascience
[post_id]: 33964
[parent_id]: 
[tags]: 
Python XGBoost killing kernel

My Jupyter notebook's python kernel keeps dying when attempting to train an XGBoost logistic classifier. Previously, I have run all of the following code successfully. Presently, there are issues. First, I will show you the code chunk that I am able to run successfully: import xgboost as xgb xgtrain = xgb.DMatrix(data = X_train_sub.values, label = Y_train.values) # create dense matrix of training values xgtest = xgb.DMatrix(data = X_test_sub.values, label = Y_test.values) # create dense matrix of test values param = {'max_depth':2, 'eta':1, 'silent':1, 'objective':'binary:logistic'} # specify parameters via map where my data is small: X_train_imp_sub.shape (1365, 18) however, my notebook's kernel keeps dying on this chunk: xgmodel = xgb.train(param, xgtrain, num_boost_round = 2) # train the model predictions = xgmodel.predict(xgtest) # make prediction from sklearn.metrics import accuracy_score accuracy = accuracy_score(y_true = Y_test, y_pred = predictions.round(), normalize = True) # If False, return # of correctly classified samples. Else, return fraction of correctly classified samples print("Accuracy: %.2f%%" % (accuracy * 100.0)) As stated before, I have been able to run both chunks successfully before. I have shut down all other notebooks and restarted my computer without luck. I am launching jupyter through Anaconda Navigator on a Macbook Pro. UPDATE: To further debug, I used Terminal CLI and ran: conda install runipy runipy MyNotebook.ipynb which was very helpful, because it produced the following error message that I could then Google: OMP: Error #15: Initializing libomp.dylib, but found libiomp5.dylib already initialized. OMP: Hint This means that multiple copies of the OpenMP runtime have been linked into the program. That is dangerous, since it can degrade performance or cause incorrect results. The best thing to do is to ensure that only a single OpenMP runtime is linked into the process, e.g. by avoiding static linking of the OpenMP runtime in any library. As an unsafe, unsupported, undocumented workaround you can set the environment variable KMP_DUPLICATE_LIB_OK=TRUE to allow the program to continue to execute, but that may cause crashes or silently produce incorrect results. For more information, please see http://openmp.llvm.org/ I found this thread: https://github.com/dmlc/xgboost/issues/1715 Which shows others having the same problem on MacOS. I also suspected the problem being linked to matplotlib somehow because running any cell with matplotlib related code somehow causes the xgb.train to kill the kernel.
