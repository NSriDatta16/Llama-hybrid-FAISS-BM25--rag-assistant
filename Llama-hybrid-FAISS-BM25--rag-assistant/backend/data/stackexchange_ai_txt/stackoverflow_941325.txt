[site]: stackoverflow
[post_id]: 941325
[parent_id]: 941283
[tags]: 
the canonical example is Quicksort, which has a worst time of O(n^2), while Heapsort's is O(n logn). in practice however, Quicksort is usually faster then Heapsort. why? two reasons: each iteration in Quicksort is a lot simpler than Heapsort. Even more, it's easily optimized by simple cache strategies. the worst case is very hard to hit. But IMHO, this doesn't mean 'big O fails' in any way. the first factor (iteration time) is easy to incorporate into your estimates. after all, big O numbers should be multiplied by this almost-constant facto. the second factor melts away if you get the amortized figures instead of average. They can be harder to estimate, but tell a more complete story
