[site]: stackoverflow
[post_id]: 3592687
[parent_id]: 3579741
[tags]: 
IMHO, this design looks pretty complex. Have you investigated the possibility of defining your domain types directly through the ORM? It's what an ORM is designed for, after all... It would certainly open lot's of possibilities without this huge extra effort... Many people don't know that Linq 2 SQL actually supports POCO style , at least to some extent? If you can consider other ORM alternatives, both NHibernate and Entity Framework have better POCO support though. POCO allows you to define your domain model directly on top of the ORM, but in a way that your domain classes can be (more or less, depending on the actual ORM) 'persistence ignorant'. As such, you can leverage the ORM's querying capabilities to expose a rich domain querying API to your users. If you would consider Entity Framework (v4), you might also want to have a look at WCF Data Services Just my 2 cents...
