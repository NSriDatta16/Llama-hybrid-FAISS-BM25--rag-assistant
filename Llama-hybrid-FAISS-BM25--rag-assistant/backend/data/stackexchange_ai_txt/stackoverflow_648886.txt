[site]: stackoverflow
[post_id]: 648886
[parent_id]: 648675
[tags]: 
Check PEP 202 which was where list comprehensions syntax was introduced to the language. For understanding your example, there is a simple rule from Guido himself: The form [... for x... for y...] nests, with the last index varying fastest, just like nested for loops. Also from PEP 202, which serves to answer your question: Rationale List comprehensions provide a more concise way to create lists in situations where map() and filter() and/or nested loops would currently be used. If you had a situation like that, you could find it to be more elegant. IMHO, though, multiple nested list comprehensions may be less clear in your code than nested for loops, since for loops are easily parsed visually.
