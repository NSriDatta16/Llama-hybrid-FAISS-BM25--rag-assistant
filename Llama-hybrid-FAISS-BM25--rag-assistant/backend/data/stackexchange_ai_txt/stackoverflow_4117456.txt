[site]: stackoverflow
[post_id]: 4117456
[parent_id]: 4117443
[tags]: 
No, I don't think that is a good idea. A better approach is to add an index on the user_name column - and perhaps another index on (user_name, user_property) for looking up a single property. Then the database does not need to scan all the rows - it just need to find the appropriate entry in the index which is stored in a B-Tree , making it easy to find a record in a very small amount of time. If your application is still slow even after correctly indexing it can sometimes be a good idea to partition your largest tables. One other thing you could consider is normalizing your database so that the user_name is stored in a separate table and use an integer foriegn key in its place. This can reduce storage requirements and can increase performance. The same may apply to user_property .
