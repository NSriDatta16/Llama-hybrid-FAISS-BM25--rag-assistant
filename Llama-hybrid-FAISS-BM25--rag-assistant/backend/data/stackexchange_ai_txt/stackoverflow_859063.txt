[site]: stackoverflow
[post_id]: 859063
[parent_id]: 859013
[tags]: 
Adding unit tests to a large existing codebase is harder than beginning from scratch. I will encourage you to do so anyway since it will pay of in the long run. I've done the same exercise and my take is: whenever you want to change an existing feature, create at least unit tests that verifies that the changed code works as expected. You should also strive to test other code that is directly dependent on the code your changing. That way you have some insurance that your change is not breaking a lot. Of course, whenever you create new code, this should be completely backed by unit tests. This way you will gradually build up a solid unit test base. Unit test projects are just Library projects that you add to the solution.
