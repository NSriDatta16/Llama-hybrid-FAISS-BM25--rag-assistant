[site]: stackoverflow
[post_id]: 1965990
[parent_id]: 1965975
[tags]: 
Since user name need to be unique within a domain, I don't think I'd be overly concerned with the OU. Building this in could make your code more fragile and will make it more complicated. I would try using the new UserPrincipal class if you can. using (var context = new PrincipalContext( ContextType.Domain )) { using (var user = UserPrincipal.FindByIdentity( context, IdentityType.SamAccountName, userName )) { if (user != null) { user.ChangePassword( oldPassword, newPassword ); // or if you don't have the user's old password and // do have enough privileges. // user.SetPassword( newPassword ); } } }
