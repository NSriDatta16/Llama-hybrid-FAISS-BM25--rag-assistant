[site]: crossvalidated
[post_id]: 457327
[parent_id]: 
[tags]: 
How to embed the preceding knowledge in the training?

I am trying to train a neural network that takes Height(X0) and Weight(X1) as input, output the corresponding prediction to calories(y). First 4 columns below are part of the training set, the last column is the prediction by the model. Height(X0) Weight(X1) Calories(y) Measurement(C) Prediction(y_hat) 1 177.11 69.85 2800.0 0.0 2800.1 2 167.11 59.85 2600.0 -0.1 2800.2 3 197.11 79.85 3500.0 0.2 2800.3 ... Calories(y) is the target value in the dataset for training. "Measurement" is some kind of measurement of Calories(y), whose absolute value is closer to 0, the better, which indicates how precisely the values of Calories(y) is. The negative and positive sign of C denote the direction, negative means less than, positive mean greater than. For instance, first record means 2800.0 Calories is the exact amount a person needs whose Height(X0) = 177.11 and Weight(X1) = 69.85; 2nd record means 2600.0 is actually less than the exact amount a person needs whose Height(X0) = 167.11 and Weight(X1) = 59.85; 3rd record means 3500.0 is actually greater than the exact amount a person needs whose Height(X0) = 197.11 and Weight(X1) = 79.85; Well, those numbers are just used to explain how does the system work, may be wrong to nutritionists. As to the last column, the learning/training algorithm should keep the prediction for record 1 around 2800, so, 2800.1 is pretty good; prediction for 2nd record would be a bit greater than 2600.0; prediction for 3rd record would be a bit less than 3500.0. The question is that: How to put the preceding knowledge "Measurement" in training?
