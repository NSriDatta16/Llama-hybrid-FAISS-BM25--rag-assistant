[site]: stackoverflow
[post_id]: 4503408
[parent_id]: 4502425
[tags]: 
Monotouch on iPhone would probably be your best path - especially for corporate software where you might not need the full capabilities of the platform. In speed critical code you could fall back to Objective-C or even C as needed. One of the reasons I would advocate iOS over other platforms is: 1) Stronger frameworks. Android has pretty good frameworks but they don't have anything like CoreData, which could be very handy for speeding enterprise development. There are also other third party frameworks like CorePlot that could be really useful producing in-app graphs and CoreAnimation has a lot of possibility for data visualization. There's also the Accelerate framework which leverages the device GPU (if present) to speed calculations for things like Linpack and FFT work. 2) Full ability to deploy what you want - there are no restrictions on iOS enterprise deployment, and anyone with a D&B number can be in the iOS Enterprise development program. So you don't have to worry about the app store. 3) Leveraging existing app base - although it's vague as to what you are trying to do, there's a good chance you can make use of some third party applications in your workflow, where the much larger and quality-oriented iPhone app store could be a benefit. URL and file type handlers allow applications to pass data between them. 4) Third party cases and accessories - Otterbox makes cases for the Touch, iPhone and iPad, but basically there are a ton of third party options for chargers, car mounting kits, etc. The iPad seems like it would work pretty well for your needs, either the 3G model (which you can use a micro-sim with) or paired with a MiFi kind of device (like the Verizon pairing). Monotouch does cost money to use but it would probably give your developers a real speed boost in development time, and let them focus on learning the frameworks.
