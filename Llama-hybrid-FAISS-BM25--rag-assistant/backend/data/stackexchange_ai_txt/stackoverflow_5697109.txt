[site]: stackoverflow
[post_id]: 5697109
[parent_id]: 5692540
[tags]: 
also possible duplicate of MKMapView with custom MKAnnotation Here is how you can create a custom callout http://blog.asolutions.com/2010/09/building-custom-map-annotation-callouts-part-1/ Wondering how to solve "3. try to inherit MKMapView, found it impossible to get touch events." on earlier than iOS4.x devices, here is how Subclass MKAnnotationView, shown below ( .h and .m files ) .h file #import #import @interface ClickableMapAnnotationView : MKAnnotationView { SEL pinClicked; id delegate; } @property(nonatomic, assign) SEL pinClicked; @property(nonatomic, assign) id delegate; @end .m file #import "ClickableMapAnnotationView.h" @implementation ClickableMapAnnotationView @synthesize pinClicked; @synthesize delegate; - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { if ( delegate != nil && [delegate respondsToSelector:pinClicked] ) [delegate performSelector:pinClicked withObject:self.annotation]; [super touchesBegan:touches withEvent:event]; } @end Then in UIViewController for mapView you need to set the ClickableAnnotation delegate and selector -(MKAnnotationView *)mapView:(MKMapView )mapViewParam viewForAnnotation:(id )annotation { static NSString PIN_RECYCLE_ID = @"pin"; if ( annotation == self.mapView.userLocation) // this is my location pin, skip return nil; ClickableMapAnnotationView* pin = (ClickableMapAnnotationView*)[self.mapView dequeueReusableAnnotationViewWithIdentifier: PIN_RECYCLE_ID]; if ( pin == nil ) { pin = [[[ClickableMapAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier: PIN_RECYCLE_ID] autorelease]; // wire, pin clicked functionality pin.delegate = self; pin.pinClicked = @selector(annotationViewClicked:); .... -(void) annotationViewClicked:(id) sender { // map pin has been clicked }
