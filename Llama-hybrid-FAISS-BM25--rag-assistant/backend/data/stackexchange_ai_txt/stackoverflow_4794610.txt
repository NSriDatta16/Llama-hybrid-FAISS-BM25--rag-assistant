[site]: stackoverflow
[post_id]: 4794610
[parent_id]: 
[tags]: 
Trouble with XPCOM XPathEvaluator

I'm having trouble evaluating XPaths using the nsIDOMXPathEvaluator from Mozillas XPCOM. I'm running the following javascript code through XPCShell: [...] var myPaths = new Array(); myPaths[0] = "/"; myPaths[1] = "/node()"; myPaths[2] = "/html"; for(i in myPaths) { myPath = myPaths[i]; var document = doms[0]; var xpEval = Components.classes["@mozilla.org/dom/xpath-evaluator;1"].createInstance(Components.interfaces.nsIDOMXPathEvaluator); var ns = xpEval.createNSResolver(document.documentElement); var type = Components.interfaces.nsIDOMXPathResult.UNORDERED_NODE_SNAPSHOT_TYPE; var res = xpEval.evaluate(myPath, document.documentElement, ns, type, null); dump("\nPath: "+myPath+"\n"); dump("Result length: "+res.snapshotLength+"\n"); for ( var i=0 ; i The doms-list is an array of html-documents parsed using do_parse_document from the xpcshell testing utilities. The top of all documents are: My trouble is that the XPaths I use as input doesn't quite return what I expect. Below is the output from the above snippet: Path: / Result length: 1 ... Node: [object XMLDocument] ... ... .nodeName: #document Path: /node() Result length: 2 ... Node: [object DocumentType] ... ... .nodeName: html ... Node: [object HTMLHtmlElement] ... ... .nodeName: html Path: /html Result length: 0 Path: //html Result length: 0 I would expect at least 1 or 2 results from the /html and //html paths. (Those returned when using /node() as path) I can't get correct output when doing queries like count(//p) either (that one returns 0 although there are plenty of paragraphs in the document). I have tried calling document.evaluate() instead of xpEval.evaluate() with the same results. I have tried just passing null for namespace, same results. Am I making some stupid mistake(s), or might there be some quirks in the nsIDOMXPathEvaluator that means I can't use it how I intend? Thanks for your time! Regards, Torin
