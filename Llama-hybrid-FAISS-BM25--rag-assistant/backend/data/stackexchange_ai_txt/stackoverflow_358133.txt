[site]: stackoverflow
[post_id]: 358133
[parent_id]: 357543
[tags]: 
Your question didn't describe the environment, but if you are using an OO language (e.g. Java) you could use dependency injection. Write a MessageSender interface with two implementations; one ( EmailMessageSender ) actually sends emails, while the other ( FileMessageSender ) captures the message in a string. Write and test EmailMessageSender in isolation; once it's verified, put it on the shelf. Write the other parts of the system against MessageSender and test them using an (injected) instance of FileMessageSender . (If FileMessageSender also allows retrieval of the "sent message" content, then you can use it in unit testing.) Once you've verified the rest of the system, deploy it using (again via injection) a properly-configured instance of EmailMessageSender .
