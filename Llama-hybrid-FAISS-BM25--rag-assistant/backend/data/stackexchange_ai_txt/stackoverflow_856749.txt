[site]: stackoverflow
[post_id]: 856749
[parent_id]: 856654
[tags]: 
I had a very similar issue a couple of months ago with uploaded images, thumbnail generation and the question of where the code to generate the thumbnail images should go. I too really felt that this code belonged in the service layer (not least because the storage for the image files and thumbnails was abstracted out into an interface and injected via an IOC container and I didn't want to have any dependency injection into my domain layer). In the end I created all the thumbnails at the point the image is uploaded via calls to the service layer from the UI controller. I did try generating the images in the domain layer before this though. To do this I used a pattern whereby when the domain layer needed to generate an image it raised an event which was hooked up to the service layer. The service layer then passed an instance of the storage interface back via event args to the domain layer so the domain layer could persist the image. This was very loosely based on some ideas on Udi Dahan's blog that I came across about using events in a domain model as a way of leveraging logic in the service layer. I can't find the reference on Udi's site now unfortunately but it's there somewhere. In any case it never really felt right - it seemed like tight coupling via another route, which is why I reverted to having the thumbnails created at the time the image is first uploaded via the service layer. However, perhaps in your case you could use the idea of events from the domain layer to invoke logic in the service layer. I'm sure there's a lot of value in the idea itself it just didn't quite fit what I was doing.
