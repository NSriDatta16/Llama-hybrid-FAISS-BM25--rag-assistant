[site]: stackoverflow
[post_id]: 1841338
[parent_id]: 1841243
[tags]: 
What you are doing is to separate behavior from data. It is similar to the strategy pattern, with the difference that it's reversed. I would not say it's a bad idea (could be useful if your data has different storage techniques but the same behavior). As some pointed out, it has also strong connotations of MVC. I would not say, instead, that is an anemic antipattern. You do have behavior, you are just not storing data on the same class instance. Summing up I would not condemn it, and it is similar to strategy and MVC
