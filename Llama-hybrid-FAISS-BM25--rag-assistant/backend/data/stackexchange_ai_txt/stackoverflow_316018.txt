[site]: stackoverflow
[post_id]: 316018
[parent_id]: 315667
[tags]: 
Another Perl attempt: #!/usr/bin/perl -w use strict; use File::Slurp; use Tie::File; # Usage: # # $ perl WordCount.pl # # Example: # # $ perl WordCount.pl *.text # # Counts words in all files given as arguments. # The words are taken from the file "WordList". # The output is appended to the file "WordCount.out" in the format implied in the # following example: # # File,Word1,Word2,Word3,... # File1,0,5,3,... # File2,6,3,4,... # . # . # . # ### Configuration my $CaseSensitive = 1; # 0 or 1 my $OutputSeparator = ","; # another option might be "\t" (TAB) my $RemoveHyphenation = 0; # 0 or 1. Careful, may be too greedy. ### my @WordList = read_file("WordList"); chomp @WordList; tie (my @Output, 'Tie::File', "WordCount.out"); push (@Output, join ($OutputSeparator, "File", @WordList)); for my $InFile (@ARGV) { my $Text = read_file($InFile); if ($RemoveHyphenation) { $Text =~ s/-\n//g; }; my %Count; for my $Word (@WordList) { if ($CaseSensitive) { $Count{$Word} = ($Text =~ s/(\b$Word\b)/$1/g); } else { $Count{$Word} = ($Text =~ s/(\b$Word\b)/$1/gi); }; }; my $OutputLine = "$InFile"; for my $Word (@WordList) { if ($Count{$Word}) { $OutputLine .= $OutputSeparator . $Count{$Word}; } else { $OutputLine .= $OutputSeparator . "0"; }; }; push (@Output, $OutputLine); }; untie @Output; When I put your question in the file wc-test and Robert Gamble's answer into wc-ans-test , the Output file looks like this: File,linux,frequencies,science,words wc-ans-test,2,2,2,12 wc-test,1,3,1,3 This is a comma separated value (csv) file (but you can change the separator in the script). It should be readable for any spreadsheet application. For plotting graphs, I would recommend gnuplot , which is fully scriptable, so you can tweak your output independently of the input data.
