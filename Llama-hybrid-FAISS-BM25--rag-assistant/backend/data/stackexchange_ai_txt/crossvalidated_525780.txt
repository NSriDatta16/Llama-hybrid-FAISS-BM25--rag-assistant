[site]: crossvalidated
[post_id]: 525780
[parent_id]: 168481
[tags]: 
First to attempt to answer the question given the criteria set I am not entirely sure about the comments the desired shift .15 the number of steps which the algorithm should run =30 However if the CUSUM is set for an odds ratio of 1.5, the baseline rate of an in-contol process is 0.15 and the random data drawn from a binomial distribution, the R code could look something like this: bisect.search = H) { current = H) if (length(exceed.h) == 0) { warning("Never exceeded threshold, try again with lower threshold (H) or higher number of trials") return(Inf) } run.lengths In truth most of the time this would be written in RCPP for performance (note the 10 times increase in the number of replications in the example below): #include using namespace Rcpp; double ARL0(double H, double p, int replications, double OR) { double si0(log(1 / (1 - p + (OR * p)))); double si1(log(OR / (1 - p + (OR * p)))); // we could fill a vector and figure out inter-quartile range etc with std::vector run(replication); // and then figure out each run length with int drawNo(0); // however adding together the total draws to reach replication will give us the same answer as adding together run lengths unsigned long long total(0); // at very large replications and very tolerant H values, this may overflow double current(0.0); for(int i = 0; i if you wanted to be really clever, you would alter the above code to increase the number of replications as the bisection search algorithm honed in closer to the desired run length. Both the above should be giving an H (threshold) value around 1.82 Then to give a more real world approach The VLAD package for R includes the ability to perform CUSUM control limit calculations based on fast and accurate Markov chain approximations, and alternatively to run Monte-Carlo trials with random numbers generated from beta distributions etc. Different control limit generation techniques can be applied and multi-threading is used to speed up processing time. The peer reviewed references given in the package read-me (co-authored by the R package author) explore the use of the different techniques on offer.
