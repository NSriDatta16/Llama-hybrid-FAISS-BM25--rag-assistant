[site]: stackoverflow
[post_id]: 1363768
[parent_id]: 1363411
[tags]: 
What is important is to learn and understand what really goes on in the machine. Memory, CPU, I/O, devices. To understand the stack, the allocation heaps, structure layout in memory, virtual method calls, threads, cache, this kind of stuff. C and C++ are much closer to the metal and you will be forced to understand these concepts. CLR is at a higher abstraction level and hides usually is hidden behind the courtain. But the idea is that once you know how the machine works is pretty easy to see behind the smoke and mirrors of CLR and udnerstand what's going on. This helps tremedously when you debug an issue, or when you design an application, as you get to understand the system and use it to your advantage. If you just learn the high level managed stack it will always appear to be some sort of VooDoo and you'll be trapped into making wrong assumptions and bad decissions. That's why I believe that is you are passionate about this field you should learn and use some C/C++. A similar reasoning, but a weaker case, goes for the native OS API (ie. Win32 on Windows) vs. the managed equivalent. Originally the .Net framwork was a thin shim atop the Win32 API and this was visible all over the place where you needed to take the Handle from your managed object and do some p-Invoke to leverage some API that was left our in the managed libraries. But thinks have evolved, now there are entire frameworks that are exposed only as managed (eg. WCF) and you can go a long way on using Stream.BeginRead w/o ever even knowing GetQueuedCompletionStatus exists. Other than that, learning C++ vs. learning C# is largely a matter of learning the standard libraries vs. the managed framework. The standard libraries are way more fun imho and they will expose you faster to advanced concepts. You can transpose the experience of understanding the STL algorithms and the fun of getting your first mem_fun_p to work into managed code later (lambda expressions, linq). So to cut on the ramblings, I belive one should understand C/C++ before going to C#. Lerning C# and to start using the managed framework is easy . Will take years to master it and looks like for some years now it will be one step ahead of you with new releases that make old part of the library obsolete. If you engage at this first w/o a sound grip on what goes on underneath, you may not have the time to catch up later.
