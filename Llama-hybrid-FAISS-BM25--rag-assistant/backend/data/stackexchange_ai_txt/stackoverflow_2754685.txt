[site]: stackoverflow
[post_id]: 2754685
[parent_id]: 2754469
[tags]: 
Argh , you found the solution whilst I was writing it up for you. Here's a simple example that I came up with: run = function() { # The probability transition matrix trans = matrix(c(1/3,1/3,1/3, 0,2/3,1/3, 2/3,0,1/3), ncol=3, byrow=TRUE); # The state that we're starting in state = ceiling(3 * runif(1, 0, 1)); cat("Starting state:", state, "\n"); # Make twenty steps through the markov chain for (i in 1:20) { p = 0; u = runif(1, 0, 1); cat("> Dist:", paste(round(c(trans[state,]), 2)), "\n"); cat("> Prob:", u, "\n"); newState = state; for (j in 1:ncol(trans)) { p = p + trans[state, j]; if (p >= u) { newState = j; break; } } cat("*", state, "->", newState, "\n"); state = newState; } } run(); Note that your probability transition matrix doesn't sum to 1 in each row, which it should do. My example has a slightly altered probability transition matrix which adheres to this rule.
