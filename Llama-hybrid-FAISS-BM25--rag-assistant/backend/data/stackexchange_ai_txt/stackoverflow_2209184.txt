[site]: stackoverflow
[post_id]: 2209184
[parent_id]: 2208324
[tags]: 
It's ok to POST & emulating PATCH where not available Before explaining this, it's probably worth mentioning that there's nothing wrong with using POST to do general updates (see here ) In particular: POST only becomes an issue when it is used in a situation for which some other method is ideally suited: e.g., retrieval of information that should be a representation of some resource (GET), complete replacement of a representation (PUT) Really we should be using PATCH to make small updates to complex resources but it isn't as widely available as we'd like. We can emulated PATCH by using an additional attribute as part of a POST. Our service needs to be open to third-party products such as SAP, Flex, Silverlight, Excel etc. That means that we have to use the lowest common denominator technology - for a while we weren't able to use PUT because only GET and POST were supported across all the client technologies. The approach that I've gone with is to have a "_method=patch" as part of a POST request. The benefits are; (a) It's easy to deal with on the server side - we're basically pretending that PATCH is available (b) It indicates to third-parties that we are not violating REST but working around a limitation with the browser. It's also consistent with how PUT was handled a few years back by the Rails community so should be comprehensible by many (c) It's easy to replace when PATCH becomes more widely available (d) It's a pragmatic response to an awkward problem.
