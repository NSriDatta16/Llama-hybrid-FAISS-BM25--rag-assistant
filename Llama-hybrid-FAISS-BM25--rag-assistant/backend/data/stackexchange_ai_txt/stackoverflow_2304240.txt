[site]: stackoverflow
[post_id]: 2304240
[parent_id]: 2123483
[tags]: 
I've done "unit" testing with K2.net 2003, another commercial BPM. I'd really call this integration testing, because it requires a test server and it's relatively slow. However, it is automated. There's a good discussion of this in the book Professional K2 blackpearl (it applies to K2.net 2003 as well). In order to apply it to your platform, the tool set has to have an API that permits starting process instances, obtaining work items, completing work items, etc. You write tests using any supported language (I used C#) and a testing framework (I used NUnit). If the API supports synchronous calls, this is easier to do. For each test: Start the process under test Progress the work item to a decision point Set process instance data appropriately Complete the work item Assert that the work item is now at the expected activity Delete or complete the process instance Base test classes or helper methods can make this easier. You could even write a DSL for testing maps. Essentially you want full "test coverage" of the process/map - test every decision point and insure that the correct branch is taken.
