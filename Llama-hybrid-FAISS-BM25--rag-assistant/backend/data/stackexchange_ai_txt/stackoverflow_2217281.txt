[site]: stackoverflow
[post_id]: 2217281
[parent_id]: 2217076
[tags]: 
I take it that layerRef is an ivar that you've mapped to self.layer? You seem to be moving between accessors and direct ivar access, which is very confusing and error-prone. Make sure to always access your ivars through accessors. This will go a long way towards saving you memory management troubles. You'd implement the layerproperty something like this: @property (nonatomic, readwrite, retain) CGLayerRef layer; @synthesize layer = _layer; - (void)setLayer:(CGLayer)aLayer { CGLayerRetain(aLayer); CGLayerRelease(_layer); _layer = aLayer; } ... CGLayerRef layer = CGLayerCreateWithContext(context, self.imageView.frame.size, NULL); self.layer = layer; CGLayerRelease(layer); The point of this is to put all of your memory management of the ivar inside of setLayer: . The most common cause of crashes on ivar access is that you have mismanaged the memory management on it. Accessors protect you from that. A copule of other noteworthy points: Never release something without immediately setting it to nil if it's staying in context. In your case you're releasing layerRef, but you don't clear the ivar. That means if you get touchesEnded: again before you get another touchesMoved: , you'll double-release the layer. That's probably the actual cause of your problem. Accessors protect you from this. Your touchesMoved: code seems very wrong. You're creating a new layer every time you get a move. You can get dozens of touchesMoved: for a single touchesEnd: . Or you could get no touchesMoved: at all. I think you meant to put this code in touchesBegan: ?
