[site]: stackoverflow
[post_id]: 4034354
[parent_id]: 4034020
[tags]: 
Here's what you want: - f.fields_for :referrals, @organization.referrals.select{|ref|ref.new_record?} do |qf| = render :partial => 'referral_fields', :locals => {:qf => qf} The first parameter is the association name, which rails needs in order to know how to structure the params. If your first parameter is a collection, rails can usually infer the association name from that collection. Your collection however, has been filtered into a regular array, where the association can't be as easily inferred. So you pass the specific collection as the second parameter. Good luck! UPDATE I've built out a small rails app to analyze the problem, and the solution above is working just fine for me - the edit form doesn't display existing referrals, only new ones. I'll post the relevant code, so we can see where you and I might differ. One caveat, this is all in erb since I rarely work with haml and wouldn't want a typo to mess up the solution :) My models: # app/models/organization.rb class Organization My controller's edit action: # app/controllers/organizations_controller.rb class OrganizationsController My views: # app/views/organizations/edit.html.erb Editing 'referral', :locals => {:f => referral_fields} %> # app/views/organizations/_referral.html.erb Of course, I just read your new comments, and maybe you don't need this anymore. Oh well, more documentation for posterity :)
