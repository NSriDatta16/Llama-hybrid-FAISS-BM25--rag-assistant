[site]: stackoverflow
[post_id]: 1258341
[parent_id]: 1059863
[tags]: 
This is doable but not via the visual drag / drop tool. You have to do three things: Create a new method from the datacontext class that will be called to "get" your data public partial class DatabaseDataContext { [Function(Name = "dbo.Contact_Get")] [ResultType(typeof(Contact))] [ResultType(typeof(int))] public IMultipleResults GetContacts([Parameter(Name = "PageIndex", DbType = "Int")] System.Nullable pageIndex, [Parameter(Name = "PageSize", DbType = "Int")] System.Nullable pageSize, [Parameter(Name = "Sort", DbType = "NVarChar(10)")] string sort, [Parameter(Name = "ContactTypeId", DbType = "Int")] System.Nullable contactTypeId) { IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageIndex, pageSize, sort, contactTypeId); return ((IMultipleResults)(result.ReturnValue)); } } Create a new page template (List.aspx for example) for the particular table you want in the CustomPages folder to control the selecting from. Control the gridview's selecting mechanism. protected void GridDataSource_Selecting(object sender, LinqDataSourceSelectEventArgs e) { DatabaseDataContext db = new DatabaseDataContext(); IMultipleResults results = db.GetContacts(e.Arguments.StartRowIndex, e.Arguments.MaximumRows, e.Arguments.SortExpression, (int?)e.WhereParameters["ContactTypeId"]); e.Result = results.GetResult ().ToList(); e.Arguments.TotalRowCount = results.GetResult ().Single (); } Check out the Dynamic Data SP sample on the codeplex site for DD that shows you how to do this: http://aspnet.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=14473
