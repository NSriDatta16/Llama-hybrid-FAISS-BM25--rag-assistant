[site]: stackoverflow
[post_id]: 3721901
[parent_id]: 3721770
[tags]: 
Speaking in terms of Prolog, which I've had some experience in, I find that logical programming is suited towards certain tasks but very unfathomable when it comes to debugging an application beyond a certain size. It's paradigm doesn't work with certain problems or certain scales of problems. Prolog is not a general purpose programming language. It's intended for AI. It has a set purpose - and it doesn't really give attention to other things. A modern programming langauge doesn't have a purpose. It just does . It is generic and equally applicable to the majority of programs a typical business case encounter. This is a huge advantage. C# knowledge is tranferable into many domains, Prolog just isn't. Writing certain types of application (let's say real-time graphics) would be horrendously painful in a logical programming language. The very concept gives me a terrible headache (seriously). I don't think logical programming has ever been a competitor. It is always rightly used in a specialist context, not generic. It isn't fighting for popularity. I don't know if F# brings anything new to the party. It seems to be quite popular, although I wouldn't know if you'd call it strictly logical programming, it seems like a kind of hybrid.
