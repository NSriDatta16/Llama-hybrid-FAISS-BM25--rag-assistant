[site]: stackoverflow
[post_id]: 654830
[parent_id]: 322401
[tags]: 
Here's a little function which will do what you want - it presumes you know the number of groups you want to make: function arrayToGroups(source, groups) { //This is the array of groups to return: var grouped = []; //work out the size of the group var groupSize = Math.ceil(source.length/groups); //clone the source array so we can safely splice it (splicing modifies the array) var queue = source.slice(0); for (var r=0;r And you use it like: var herbs = ['basil', 'marjoram', 'aniseed', 'parsely', 'chives', 'sage', 'fennel', 'oregano', 'thyme', 'tarragon', 'rosemary']; var herbGroups = arrayToGroups(herbs, 3); which returns: herbGroups[0] = ['basil', 'marjoram', 'aniseed', 'parsely'] herbGroups[1] = ['chives', 'sage', 'fennel', 'oregano'] herbGroups[2] = ['thyme', 'tarragon', 'rosemary'] It doesn't do any sanity checking to make sure you pass in an array and a number, but you could add that easily enough. You could probably prototype it into the Javascript's object type, too, which would give you a handy 'toGroups' method on Arrays.
