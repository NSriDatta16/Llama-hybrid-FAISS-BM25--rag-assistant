[site]: stackoverflow
[post_id]: 4932838
[parent_id]: 4932018
[tags]: 
This may lead to a bit of a clumsy answer, but firstly I usually work in MSSQL T-SQL, and secondly the site doesn't appear to support more than one command, so you can't write a proc using variables and stuff, unless I'm missing something. You get the list of all events a particular staffer teaches by joining teaches with events - eventid on the former and id on the latter: select * from event e inner join teaches t on t.event = e.id having got this dataset, you can then use the aggregate function 'sum' over the event.duration field to work out the total number of hours. If you just sum it straight off you'll get the total length of all the events in the whole database, but if you use 'group by' on the staff id, it'll sum up each staffer's hours separately - group by is pretty much essential when working with aggregate functions: select t.staff as staff, sum(duration) as contactHours from event e inner join teaches t on t.event = e.id group by t.staff You can use this data to work out the average number of hours taught, the same way you'd work out the average with a pen and paper - sum the hours for each staffer, divide by the number of staffers. This time we can use the aggregate functions 'count' and 'sum' without grouping, because we do actually want to work over the whole dataset. However, because we need the group-by in order to count the hours for each staffer, we need to separate the two selects... one way is as a sub-select, which here I've called 'staffContact': select sum(contactHours) / count(staff) as averageHours from ( select t.staff as staff, sum(duration) as contactHours from event e inner join teaches t on t.event = e.id group by t.staff ) staffContact That will give you the average hours. You don't need the 'occurs' table, because the question doesn't care about which week you're talking about, it's just asking about how much time the staffer spends in events.
