[site]: stackoverflow
[post_id]: 1441529
[parent_id]: 
[tags]: 
WPF DataGrid Best Practices?

I am working on an MVVM-based WPF app that uses the DataGrid . The grid is data-bound to an ObservableCollection (the Widget list). The user needs to be able to insert a Widget into the list below the currently-selected Widget , to delete a selected Widget , and to reorder the Widget s on the grid. I'll implement the reordering through dragging and dropping. Before I dig into this, I want to get a reality check on my approach. Here is what I am planning to do: The Widget class will have an Index property that will be used to order the Widget list. Additions, deletions, and reordering will be done by manipulating this Index property, and sorting will be done on the Widget list, rather than through a CollectionView . Before the DataContext is set, the Widget list will be sorted on the Index property. When a user adds a Widget , the Index property will be incremented by 1 for each Widget below the selected item on the grid, and the new Widget will be given the index number opened up by the renumbering. The Widget list will resorted, and the bindings will be refreshed. When a user deletes a Widget , the Widget will be removed from the list, and the Index property of items on the grid below the deleted item will be decremented by 1. The Widget list will be resorted, and the bindings refreshed, as above. Reordering will be done as a combination delete-and-insert. Here is my question: Is this a reasonable strategy for implementing inserting, deleting, and reordering? Is there a better way to go about it? Any good articles or blog posts on the subject? I've looked, but I'm not coming up with anything on-point. Thanks for your help.
