[site]: stackoverflow
[post_id]: 5443920
[parent_id]: 5443653
[tags]: 
A Bezier curve is quite easy to compute. First of all is separable, that means that you can compute it one coordinate at a time (first x, then y, then z...). For a given coordinate the following is a function that uses the definition: double bezier(double A, // Start value double B, // First control value double C, // Second control value double D, // Ending value double t) // Parameter 0 Note that in the above function the parameter t is not the arc-length parameter for the curve but a generic parameter that goes from t=0 (where the point is at the beginning of the curve) to t=1 (where the point is at the end of the curve). An interactive version of the above picture where you can drag A, B, C, D and AB points is available here . It's implemented with html/js/canvas and tested only on Chrome, Firefox, Safari. If you need to move your objects at a controlled specific speed in XYZ an easy way is to compute an approximated polyline (for example by sampling the curve for 100 values of t ) and then walk at constant speed on the resulting polyline. The true arc-length parametrization for a Bezier cubic (i.e. using a parameter that is the length measured along the curve) is rather annoying to compute (IIRC there is no closed form solution for the integral).
