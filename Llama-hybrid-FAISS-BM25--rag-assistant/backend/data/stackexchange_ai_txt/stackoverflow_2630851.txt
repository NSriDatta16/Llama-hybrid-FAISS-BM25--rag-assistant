[site]: stackoverflow
[post_id]: 2630851
[parent_id]: 76624
[tags]: 
The current draft of so called C++0x , it is n3092 says in 7.2 Enumeration declarations , paragraph 6: It is implementation-defined which integral type is used as the underlying type except that the underlying type shall not be larger than int unless the value of an enumerator cannot fit in an int or unsigned int. The same paragraph also says: If no integral type can represent all the enumerator values, the enumeration is ill-formed. My interpretation of the part unless the value of an enumerator cannot fit in an int or unsigned int is that it's perfectly valid and safe to initialise enumerator with 64-bit integer value as long as there is 64-bit integer type provided in a particular C++ implementation. For example: enum MyEnum { Undefined = 0xffffffffffffffffULL };
