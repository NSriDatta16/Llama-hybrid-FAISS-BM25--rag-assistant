[site]: stackoverflow
[post_id]: 5479567
[parent_id]: 5478045
[tags]: 
I see these sort of questions popping up all over the web. The most common answer you will find is to use the right "tool" for each job, so neither Mongo nor a standard RDBMS will fit every single application better than the rest of the databases, but to my opinion you should definitely invest some time into learning this new "tool" because it will give you an even better perspective on what fits better your mindset and programming style. I too have recently started using MongoDB after using SQL databases for years and I can tell you it's worth the experience. You can do just about everything with Mongo, most definitely everything you described on your list, but be prepared to make some trade-offs in the process. I don't know what language you're using. I use PHP and I think MongoDB fits PHP much better then any of the SQL databases do in a sense that it organizes data in JSON format, which is more "natural" to PHP (arrays, classes, etc) tree-like structure, which allows to pretty much dump the whole array or a part of it to the DB without having to do a lot of "mapping" and get it back when you need it. In-addition, shema-less design can give you a little more flexibility on how to organize (or not organize :)) your data. Also, if you want to develop a large application, MongoDB will be a lot easier to scale than most SQL DBs. But for a little more "strict" applications, where data "consistency" and "durability" is more important, I would probably chose one of the old-fashioned RDMBS databases, such as PostgreSQL. In fact nothing stops you from using both tools in the same project if you have to. Hope this helps!
