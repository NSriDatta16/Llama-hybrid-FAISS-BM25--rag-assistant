[site]: stackoverflow
[post_id]: 3926642
[parent_id]: 
[tags]: 
How to implement n:m relation in Java?

I need to implement an n:m relation in Java. The use case is a catalog. a product can be in multiple categories a category can hold multiple products My current solution is to have a mapping class that has two hashmaps. The key of the first hashmap is the product id and the value is a list of category ids The key to the second hashmap is the category id and the value is a list of product ids This is totally redundant an I need a setting class that always takes care that the data is stored/deleted in both hashmaps. But this is the only way I found to make the following performant in O(1) : what products holds a category? what categories is a product in? I want to avoid full array scans or something like that in every way. But there must be another, more elegant solution where I don't need to index the data twice. Please en-light me. I have only plain Java, no database or SQLite or something available. I also don't really want to implement a btree structure if possible.
