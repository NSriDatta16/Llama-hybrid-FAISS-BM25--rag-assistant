[site]: stackoverflow
[post_id]: 4483022
[parent_id]: 
[tags]: 
how to organize & implement jsp file structure using Spring

I'm a php programmer now doing a Java web project using Spring framework. I'm trying to organize my JSP files the way i would have organized my .tpl files in php. So if it would have been php i would have done it like this: index.tpl includes one of layout.tpls (ajax.tpl, mobile.tpl, general.tpl, simplified.tpl . . .) includes the header of the page includes menus includes the actual content of the page includes the page footer then from the php controller i would be able to do something like this: setLayout('general'); showTopMenu(false); setContent('mySexyPage'); beside that i would have organized my stuff so that my views (tpl files) will be organized in folder—ã each corresponding to a single controller. like this: userManager addUSer.tpl editUser.tpl editUserPermissions.tpl articleManager addArticle.tpl editArticle.tpl and in each controller somehow define from which folder to load my content template. Now in Spring i have a controller with methods handling requests and each of the methods returning what the view should be. I can extend all my controllers from a single abstract class where i will create an instance of ModelAndView with all default values set, then request handling methods will add what they need to the instance their daddy already created and return it. The problem with the above approach is that i'm not forcing the coder who's writing controllers to use the ModelAndView object i created, he way still return anything he wants from the handling method he wrote. Is there some interface containing a method like ModelAndView getModelAndView() my daddy controller will implement so Spring will ignore whatever handler methods are returning? Or is there some better way to do this ?
