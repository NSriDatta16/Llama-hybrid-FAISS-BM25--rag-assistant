[site]: stackoverflow
[post_id]: 3431123
[parent_id]: 3430651
[tags]: 
Considering how negative numbers are represented, the following will compute a - b: int a, b, c; // assign to a and b c = a + (~b + 1); // () not needed, just to show the point as the OP already noted:) This moves the attention to your add implementation, that is of course wrong. The following is an odd way to do it (just since other better ways are already given) int add1(int a, int b, int *c) { int r = *c & 1; a &= 1; b &= 1; *c = a&b | a&r | b&r; return a^b^r; } int inv(int a) { int i, r = 0; for(i = 0; i >= 1; } return r >i, b>>i, &c); r (keeping the same idea the code can be made better, just too tired to do it finer)
