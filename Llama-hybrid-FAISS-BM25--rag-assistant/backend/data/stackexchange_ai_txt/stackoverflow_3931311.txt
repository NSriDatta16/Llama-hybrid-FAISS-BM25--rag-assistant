[site]: stackoverflow
[post_id]: 3931311
[parent_id]: 3931246
[tags]: 
Think of all your code as "transforms input to output": X -> [A] -> Y X is the data that goes in, [A] is the transformer, Y is the output. In your case, you have this setup: [Client] -> X -> [Server] -> Y -> [Client] So the unit tests work like this: You need a test that runs the client code to generate X . Verify that the code actually produces X with an assert. X should be a final static String in the code. Use the constant X in a second test to call the server code which transforms it into Y (another constant). A third test makes sure that the client code can parse the input Y This way, you can keep the tests independent and still make sure that the important parts work: The interface between the components.
