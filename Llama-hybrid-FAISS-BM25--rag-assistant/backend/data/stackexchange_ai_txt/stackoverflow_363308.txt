[site]: stackoverflow
[post_id]: 363308
[parent_id]: 359732
[tags]: 
There's a lot of good answers here about why you shouldn't -- and I'm on the side that agrees that you shouldn't omit braces. If you're looking for more terse code, I'd actually work with a ternary statement. They provide compactness with a certain amount of unambiguity and are more resistant to accidents. The problem with omitting braces, as mentioned, is the likelihood of mistakes after the fact. Most programmers will agree that they can read: if( foo ) bar(); The problem comes when people come and change the statement and don't pay attention. At the last place I worked, there was actually a problem that arose from someone modifying the statement or commenting out a line. A coding standard was put in place to make sure bugs like that never happened again. As someone else said, programmer time is the expensive bit. Like commenting your code, it's often faster to just leave out bits because they're optional, but easily maintainable code often relies on those 'optional' things. Lastly, some people have mentioned that modern editors and IDEs should auto-indent and show you scope automatically. My answer is to not use such things as a crutch. There are times when you're looking at code out of a source repository or over a remote connection or even in an email -- these are the realities of development. You may not have an IDE or advanced editor to show you what you're doing wrong. Always write your code so that it's understandable no matter what you load it in.
