[site]: stackoverflow
[post_id]: 5550608
[parent_id]: 5550369
[tags]: 
can a context switch occur when a method call (the stored procedure in this case) is not finished yet? Yes. Context switches occur all the time and more often than you probably think. Is it possible that an IL-instruction is getting all the Threading resources instead of the GUI thread ? Technically speaking your IL code is translated to native machine code and this is what gets executed by your CPU. An instruction can't "get all threading resources". Your CPU just constantly executes code, it has no knowledge of threads, processes etc. It's the operating system that organizes things in that way and takes care of running those threads in turn for a specific time slice. When occurs a context switch to another process? Context switches normally occur between threads. Processes are not run, it's their threads that receive execution time. A context switch can happen any time - when the time slice for the thread is over, it goes to sleep waiting for something, there is an interrupt and an interrupt handler needs to be executed. is it different from context switching to different threads belonging to the same process Like I said context switching occurs between threads. The next thread to be executed might be from your process or from some other process. My guess is that you wait from your GUI thread for the async operation (second thread executing an SP) to complete in some way - you block. You could have done SP execution on the GUI thread to begin with - the result is the same. The solution is for your second thread to call into the GUI thread once its complete. For example the BackgroundWorker offers a special event for this (RunWorkerComplete). Otherwise you can do it using Control.Invoke/BeginInvoke or SynchronizationContext.Post/Send.
