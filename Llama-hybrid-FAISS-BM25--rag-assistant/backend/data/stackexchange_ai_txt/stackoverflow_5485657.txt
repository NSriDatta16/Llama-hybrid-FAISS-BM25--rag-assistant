[site]: stackoverflow
[post_id]: 5485657
[parent_id]: 
[tags]: 
How to include the latest record from a child model into a query

I have traders that are evaluated on a regular basis. The evaluations have a foreign key to the trader. I want to list all the traders along with their current evaluation status. This is possible using a custom property added to the Trader model. However, I want to be able to filter the results on the status of the latest evaluation (for example, all those current evaluations that are still open). However, as has been shown before ( Custom properties in a query ), you can't include a custom model property in a query. I would have created a foreign key in the Trader model, that records that id of the most current Evaluation, however, that's not possible, because then the models will reference each other, and then you get into an circular ordering problem when creating the classes, ie Trader refers to Evaluation, but Evaluation hasn't been declared yet, or putting Evaluation first, yet Trader isn't declared. So far I assumed that I would use Trader as my base query, and lookup the Evaluations. I thought an alternative to get around the problem would be to create a query based on Evaluation, and then lookup Traders instead. However, this means that those Traders who have not been evaluated yet, would never appear in results (unless I made sure that Traders always have at least one Evaluation record). Or I suppose I could resort to using raw SQL. Any suggestions on how to go about solving this would be greatly appreciated. Here are the models: Class Trader(models.Model): territory = models.ForeignKey(Territory) organisation_name = models.CharField(max_length=30) contact_title = models.CharField(choices=TITLE_CHOICES, max_length=4) contact_forename = models.CharField(max_length=30, blank=True) contact_lastname = models.CharField(max_length=30) ... def _get_current_evaluation(self): return Evaluation.objects.filter(trader=self).latest('open_date') current_evaluation = property(_get_current_evaluation) Class Evaluation(models.Model): trader = models.ForeignKey(Trader) open_date = models.DateField("Open Date", null=True, blank=True) rated_date = models.DateField("Rated Date", null=True, blank=True) closed_date = models.DateField("Closed Date", null=True, blank=True) status = models.ForeignKey(RatingStatus, null=True, blank=True) ...
