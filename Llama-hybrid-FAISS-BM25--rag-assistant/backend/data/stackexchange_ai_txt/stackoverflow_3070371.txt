[site]: stackoverflow
[post_id]: 3070371
[parent_id]: 3070317
[tags]: 
In C++ you can declare a 2-dimensional int-array of a predetermined size using int a[30][10]; . You can allocate new arrays with new in Java because arrays are Objects ant thus they have to be created using new in Java. But C++ does not force you to create everything using new . Of course, it would be no problem to introduce these new syntax for declaring arrays also in C++, but why introduce a new syntax, if "everybody" is used to the existing one? Note that you can not declare a 2-dimensional array with sizes determined at runtime using int arr[n][m] . You have to create an array of arrays representing a 2-dimensional array using int **arr = new int[n][m] i.e. in C++ an array of pointers pointing to each subarray. Analoguesly for higher dimensional arrays. Another way for multidimensional arrays is to declare just a 1-dimensional array and compute the indices accordingly. However, this involves some thoughts on how to organize data.
