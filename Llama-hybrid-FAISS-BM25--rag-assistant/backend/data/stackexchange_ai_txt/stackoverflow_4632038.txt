[site]: stackoverflow
[post_id]: 4632038
[parent_id]: 4357485
[tags]: 
I'm the developer named - thought I should talk about what we finally did to implement this feature: To clarify what this is actually used for, this database is for searching events which may have a geographical location. At first I found this free map data: https://www.ga.gov.au/products/servlet/controller?event=GEOCAT_DETAILS&catno=60803 . However the data was difficult to work with and we decided to simply generate a basic outline of each of the states using Google Maps's My Maps feature (which RMW did). I then created a pl/sql implementation of the PNPOLY function, and wrote the search code to run the PNPOLY function comparing the lat and lng of each event with the state outlines (exported from My Maps) and to only return events within the boundaries. There were 2 main problems with this: Towns/Cities on the border betwen 2 states were sometimes seen as being in the wrong state due to the low resolution of the state outlines. Concern that the implementation was inefficient/inelegant (though no perf testing was done). That implementation would probably have worked fine except for the first issue - towns were appearing in the wrong state. The current implementation abandons the PNPOLY function in favour of a much simpler solution: I added boolean columns to the events table - one for each state/territory in Australia. when events are geocoded, we pull the state name out of the Google Maps API result and then compare it to a list of state names - if one matches we set the flag for that state to TRUE. When searching, the state restriction simply becomes WHERE in_wa = TRUE (for searching events within Western Australia). To migrate the existing events which didn't have the flags set, I didn't want to waste the PNPOLY code, and didn't want to hammer Google Maps with requests, so I wrote a migration to run the PNPOLY check over each event and set the correct flag for each event - this caused some current events to have the wrong state set because of the same issue above, but this won't affect future events. You can see it in action at http://collectiveaction.com.au/events - choose from the state dropdown and click 'Update search results'.
