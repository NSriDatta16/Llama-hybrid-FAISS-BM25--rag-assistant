[site]: stackoverflow
[post_id]: 2800724
[parent_id]: 1998598
[tags]: 
Integration tests help you to validate if your software is working properly . Unit tests help you to find why your software is breaking . Unit tests to some extent also contribute to the first goal. Plus it has a couple of advantages: It's generally way cheaper to write and run a unit test with a much smaller scope. It's easier to get coverage for the combinatoric explosion of states of you components using unit tests than an integration test. Say you have a setup involving three components. Each of them has 3 different states. Then integration testing the entire setup would involve checking 3 * 3 * 3 = 27 conditions. Unit testing the individual components would require testing 3 + 3 + 3 = 9 conditions. (This is oversimplified, but you will hopefully see the point.) Because of this, unit tests are generally more popular than integration tests. However, you really cannot do without integration tests. Integration tests should be the cornerstone used for acceptance of your software. Having unit tests only just proves that you have a bunch of stuff doing something . An integration test proves that you have working software .
