[site]: datascience
[post_id]: 17215
[parent_id]: 11868
[tags]: 
There are several changes between current version of cifar10_cnn.py and the code in your question. However, both version is not that bad (10% accuracy) in my environment. Result of your code: X_train shape: (50000, 32, 32, 3) 50000 train samples 10000 test samples Not using data augmentation. Train on 50000 samples, validate on 10000 samples Epoch 1/200 50000/50000 [==============================] - 21s - loss: 1.7470 - acc: 0.3528 - val_loss: 1.3405 - val_acc: 0.5222 ... Epoch 20/200 50000/50000 [==============================] - 20s - loss: 0.6308 - acc: 0.7800 - val_loss: 0.7183 - val_acc: 0.7588 Result of cifar10_cnn.py : X_train shape: (50000, 32, 32, 3) 50000 train samples 10000 test samples Using real-time data augmentation. Epoch 1/200 50000/50000 [==============================] - 26s - loss: 1.5978 - acc: 0.4226 - val_loss: 1.1876 - val_acc: 0.5712 ... Epoch 20/200 50000/50000 [==============================] - 24s - loss: 1.7479 - acc: 0.4229 - val_loss: 1.6603 - val_acc: 0.4292
