[site]: stackoverflow
[post_id]: 2242533
[parent_id]: 2242518
[tags]: 
edit â€” This answer is from 2010, and quite obsolete. Since then the language has added the Object.getPrototypeOf() API, which vastly simplifies the process. You could use the "constructor" property of the object to find the prototype there, and then chain along that until you reached the end of the rainbow. function getPrototypes(o) { return (function gp(o, protos) { var c = o.constructor; if (c.prototype) { protos.push(c.prototype); return gp(c.prototype, protos); } return protos; })(o, []); } (maybe) (or maybe not :-) give me a sec) (well crap; I think it's possible but ignore that code) [edit] wow this is totally blowing my mind - that function's close but not quite right; setting up a chain of prototypes is weird and I'm feeling scared and lonely. I suggest paying attention only to the awesome @CMS above.
