[site]: stackoverflow
[post_id]: 1278606
[parent_id]: 1278512
[tags]: 
In my opinion, the decision to partition should be based more on the need for table maintenance activities (purging, archiving, etc.) than performance. In your case I'm guessing you'll probably be performing index range scans on the samples for a date range, so make sure the date index is locally (instead of globally) partitioned also . This will also eliminate the need to rebuild the index if you truncate a partition. I'd also guess that the joins on the PK will use seeks by rowid so that will happen after the index range scan and there's no way partitioning can affect this. [Edit] With regard to relating the PK and CREATED_ON columns, I work with a couple of systems that construct the numeric key from a sequence that is prefixed with YYYYMMDD and that works pretty well. You'll have to: Liberally estimate the number of samples you'll have per day Define a sequence that has this as a maximum value and then cycles back to 0 Have a function that returns YYYYMMDD || {sequence value left-padded with zeros to the appropriate fixed length} that is called from a trigger or application code when the key is needed Some would disagree with embedding meaning in the key, but in practice it is useful to look at a sample ID and have an idea of when it was processed
