[site]: stackoverflow
[post_id]: 3207560
[parent_id]: 1208623
[tags]: 
The only reason I can think to do that would be if you want to do a functional test of the actual asynchronous connection. That's going to be pretty fragile, and slow down your test bundle. A better approach is to write unit tests of your implementations of NSURLConnection's delegate methods , like connection:didFinishLoading: (for success cases) and connection:didFailWithError: (for error cases) I generally set up sample response values and verify that my delegate handles them correctly. For example: NSString *responseJSON = @"{\"remove\": [123,432], \"new\": [1,2]}"; NSData *responseBytes = [responseJSON dataUsingEncoding:NSUTF8StringEncoding]; // in requestHandler, data would have been set by calls to connection:didReceiveData: [requestHandler setData:responseBytes]; [requestHandler connectionDidFinishLoading:nil]; // set expectations here for what you'll do with the response ...
