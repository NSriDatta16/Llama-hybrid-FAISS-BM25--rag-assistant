[site]: stackoverflow
[post_id]: 2314887
[parent_id]: 
[tags]: 
MSTest: No tests are run because no tests are loaded or the selected tests are disabled

I have a c# solution with the following structure: mySolution myProject myProject.MSTests References Microsoft.VisualStudio.QualityTools.UnitTestFramework sutMSTests.cs sutMSTests.cs: [TestClass()] public class sutMSTests { [TestMethod] public void MyTest0() { Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(4, 2 + 2); } } When I try to run the tests via Test, Run, All Tests In Solution, I get the following on the VS2008 status line: No tests are run because no tests are loaded or the selected tests are disabled. Test, Windows, Test View shows no tests. Note: I created the tests manually (works for xUnit.net) instead of using Microsoft's wizards. I've compared my hand created MSTest setup to the setup another test that I generated using the wizard and they appear to be sufficiently similar. Question: What are the most likely causes of the error message above? Edit 2010-02-25: More information: I right clicked the Solution Items folder, and choose Add, New Project, type Test Projects,Test Documents::Visual Studio Test Project template. The new project's default do nothing test "TestMethod1" was detected and passed. However, my test did not show up ... so I copied and pasted my test method into the default test test project "TestProject1". My test was detected in "TestProject" BUT not in its original location. I closely compared the files, organization, and settings of "TestProject1" with my hand created test project. At this point, I am guessing that some setting gets made by the Visual Studio Test Project template that is not easily detectable. imo, it should be just as easy to create a test project by hand as it is to create one with the Visual Studio Test Project template. please note: I'm not saying that I'm against using the Visual Studio Test Project template; for me, I like to understand what's behind the curtain since this makes me imho a much better programmer.
