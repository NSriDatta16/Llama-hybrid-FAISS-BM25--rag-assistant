[site]: stackoverflow
[post_id]: 4125094
[parent_id]: 4124595
[tags]: 
You can try adding the -pthread command-line option to g++: this options means, in GCC parlance: "do everything required for POSIX threading support". This might unlock support for __thread . Thread-local storage with __thread requires some specific system support, in the compiler but also in the linkers (both the static linker, invoked at the end of the compilation, and the dynamic linker, when the program is executed). I do not know whether your specific combination (a rather old g++ with a rather old Solaris) is supported (some googling shows me that some people can use it with an older gcc [3.4.3] with a newer Solaris [10]). If it is not supported, you can use the POSIX / Single Unix functions pthread_key_create() , pthread_setspecific() and pthread_getspecific() . They are somewhat slower, and not nearly as convenient, as the __thread qualifier, but at least they work.
