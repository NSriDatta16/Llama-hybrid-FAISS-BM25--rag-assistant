[site]: stackoverflow
[post_id]: 2999913
[parent_id]: 2999537
[tags]: 
template std::vector where(const std::vector & vec, T t) { std::vector results; for(int i = 0; i Overload for additional function object arguments as you wish. Use: template struct AlwaysAccept { bool operator()(const T& t) { return true; } }; std::vector floats; // insert values into floats here std::vector results = where(floats, AlwaysAccept ()); Noah Robert's solution is nice, but I'm not wholly sure how I could make that work.
