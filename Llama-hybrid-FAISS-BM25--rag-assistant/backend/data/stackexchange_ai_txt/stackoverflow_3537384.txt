[site]: stackoverflow
[post_id]: 3537384
[parent_id]: 3537363
[tags]: 
The strict pragma has three parts: strict references, strict variables, and strict subs. The one you're running into is strict vars This generates a compile-time error if you access a variable that wasn't declared via our or use vars , localized via my , or wasn't fully qualified. Because this is to avoid variable suicide problems and subtle dynamic scoping issues, a merely local variable isn't good enough. Because it generates compile-time errors, your non- BEGIN code won't even have a chance to run. You can temporarily allow non-strict variables inside a block as in { no strict 'vars'; print "Not defined!\n" unless defined $x; } but note that Perl's defined operator tells you whether a value is defined, not whether a variable has been declared. Tell us more about your application, and we can give you better advice about how to handle it.
