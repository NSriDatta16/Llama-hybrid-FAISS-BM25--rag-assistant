[site]: stackoverflow
[post_id]: 4338491
[parent_id]: 2289894
[tags]: 
You can save HICON s with the IPicture::SaveAsFile() method. Here's a sample C++ program that uses it: #include "stdafx.h" #include #include #pragma comment(lib, "oleaut32.lib") HRESULT SaveIcon(HICON hIcon, const wchar_t* path) { // Create the IPicture intrface PICTDESC desc = { sizeof(PICTDESC) }; desc.picType = PICTYPE_ICON; desc.icon.hicon = hIcon; IPicture* pPicture = 0; HRESULT hr = OleCreatePictureIndirect(&desc, IID_IPicture, FALSE, (void**)&pPicture); if (FAILED(hr)) return hr; // Create a stream and save the image IStream* pStream = 0; CreateStreamOnHGlobal(0, TRUE, &pStream); LONG cbSize = 0; hr = pPicture->SaveAsFile(pStream, TRUE, &cbSize); // Write the stream content to the file if (!FAILED(hr)) { HGLOBAL hBuf = 0; GetHGlobalFromStream(pStream, &hBuf); void* buffer = GlobalLock(hBuf); HANDLE hFile = CreateFile(path, GENERIC_WRITE, 0, 0, CREATE_ALWAYS, 0, 0); if (!hFile) hr = HRESULT_FROM_WIN32(GetLastError()); else { DWORD written = 0; WriteFile(hFile, buffer, cbSize, &written, 0); CloseHandle(hFile); } GlobalUnlock(buffer); } // Cleanup pStream->Release(); pPicture->Release(); return hr; } int _tmain(int argc, _TCHAR* argv[]) { HICON hIcon = (HICON)LoadImage(0, L"c:\\windows\\system32\\perfcentercpl.ico", IMAGE_ICON, 32, 32, LR_LOADFROMFILE); if (!hIcon) return GetLastError(); HRESULT hr = SaveIcon(hIcon, L"c:\\temp\\test.ico"); return hr; }
