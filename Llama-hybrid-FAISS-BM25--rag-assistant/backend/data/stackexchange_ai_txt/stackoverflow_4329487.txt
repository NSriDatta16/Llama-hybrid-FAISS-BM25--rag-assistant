[site]: stackoverflow
[post_id]: 4329487
[parent_id]: 
[tags]: 
NHibernate paging criteria with fetchmode eager. (using fluent NH)

Question: How to get an eager loaded criteria to return paged results on the root entity with all child collections set fetchmode = eager. I am trying to get a 10 item paged result set with eager loaded child collections. The problem is the query does a select top 10 wrapped around the entire select. The causes it to return only the first 10 results including all joined records. If the first entity has 10 child objects then my result set will return 1 entity with 10 child objects loaded. I need the entities and child collections returned hydrated (lazy off). If I turn lazy loading off and run this query I get the n+1 query for each associate in result set. This is my basic query process: criteria = context.Session.CreateCriteria (); criteria.SetMaxResults(10); //hardcoded for testing criteria.SetFirstResult(1); //hardcoded for testing criteria.SetFetchMode("Roles", NHibernate.FetchMode.Eager); criteria.SetFetchMode("Messages", NHibernate.FetchMode.Eager); criteria.SetFetchMode("DirectReports", NHibernate.FetchMode.Eager); criteria.SetResultTransformer(new DistinctRootEntityResultTransformer()); return criteria.List (); public AssociateMap() { ReadOnly(); Id(x => x.AssociateId); Map(x => x.FirstName); Map(x => x.LastName); Map(x => x.ManagerId); Map(x => x.Department); Map(x => x.Email); Map(x => x.JobTitle); Map(x => x.LastFirstName).Formula("LTRIM(RTRIM(LastName)) + ', ' + LTRIM(RTRIM(FirstName))"); HasMany(x => x.Messages).KeyColumn("AssociateId").Inverse().Cascade.All(); HasMany(x => x.Roles).Element("RoleKey"); HasMany(x => x.DirectReports).KeyColumn("ManagerId").Cascade.None().ForeignKeyConstraintName("FK_Associate_Manager"); //HasMany(x => x.DirectReports).Element("ManagerId").CollectionType(typeof(Domain.Associate)); }
