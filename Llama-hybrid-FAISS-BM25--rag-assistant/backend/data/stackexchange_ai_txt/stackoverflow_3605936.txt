[site]: stackoverflow
[post_id]: 3605936
[parent_id]: 
[tags]: 
How can I add a test method to a group of Django TestCase-derived classes?

I have a group of test cases that all should have exactly the same test done, along the lines of "Does method x return the name of an existing file?" I thought that the best way to do it would be a base class deriving from TestCase that they all share, and simply add the test to that class. Unfortunately, the testing framework still tries to run the test for the base class, where it doesn't make sense. class SharedTest(TestCase): def x(self): ...do test... class OneTestCase(SharedTest): ...my tests are performed, and 'SharedTest.x()'... I tried to hack in a check to simply skip the test if it's called on an object of the base class rather than a derived class like this: class SharedTest(TestCase): def x(self): if type(self) != type(SharedTest()): ...do test... else: pass but got this error: ValueError: no such test method in : runTest First, I'd like any elegant suggestions for doing this. Second, though I don't really want to use the type() hack, I would like to understand why it's not working.
