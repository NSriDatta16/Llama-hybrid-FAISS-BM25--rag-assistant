[site]: stackoverflow
[post_id]: 1832450
[parent_id]: 730364
[tags]: 
A good queuing system makes it easier to do distributed computing over multiple threads, processors, machines, (& even organizations). A while back (10 years) I used a message sending metaphor to implement a front-office options pricing system for an interdealer broker. We had services implemented in C++, VB6 and Excel/VBA (even using the Excel solver!!), data storage as flat files and sql, end-user applications writen in Excel and VB6, with a complex data model (market data, yield curves and vol surfaces). Asynchronous messaging (with persistent / reliable messages and pub / sub) made the whole thing work very effectively and scalably - we were able to add Tokyo and NY offices to the London infrastructure without even visiting the remote site - just a bog standard install. I'm a big fan though I am surprised at how far they haven't come in the last 10 years or so.
