[site]: crossvalidated
[post_id]: 46575
[parent_id]: 46568
[tags]: 
I don't think 9 observations are enough to get a very good model. But my first question is that why you are trying time series approach? Is there any prior knowledge about that? So let's look at the data first. plot(1:9,dependent,type="l",lwd=2) To me, this looks like a polynomial in time. So let's try a very simple model based on linear models: > t=1:9 > fit3=lm(dependent~poly(t,d=4)+unemployment) > summary(fit3) Call: lm(formula = dependent ~ poly(t, d = 4) + unemployment) Residuals: 1 2 3 4 5 6 7 8 9 467.5 -1060.9 -673.9 3285.1 -1908.3 -786.1 256.0 784.4 -363.6 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 43961.04 9056.19 4.854 0.0167 * poly(t, d = 4)1 -25246.64 8288.92 -3.046 0.0556 . poly(t, d = 4)2 -65.03 3248.32 -0.020 0.9853 poly(t, d = 4)3 15749.95 6348.52 2.481 0.0892 . poly(t, d = 4)4 -3661.36 3586.58 -1.021 0.3825 unemployment 379.18 1355.26 0.280 0.7978 --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Residual standard error: 2426 on 3 degrees of freedom Multiple R-squared: 0.977, Adjusted R-squared: 0.9386 F-statistic: 25.46 on 5 and 3 DF, p-value: 0.01162 Then I will compare the fitted values of your model (fit2) with my model (fit3). > plot(1:9,dependent,type="l",ylim=range(dependent,fitted(fit2),fitted(fit3)),lwd=2) > points(1:9,fitted(fit2),type="l",col="blue") > points(1:9,fitted(fit3),type="l",col="green",lwd=2) The blue one is based on fit2 and the green one is based on fit3. You can see that the polynomial (green curve) is doing a good job compared to fit2. We can compare the two models simply by using AIC criteria: > AIC(fit3) [1] 169.9483 > AIC(fit2) [1] 184.5996 AIC for the fit3 is less than fit2. So fit3 provides a better fit (at least based on this criteria). As I said, this is just a very simple model, you should check the residuals for any possible problem such as auto correlation before using the model for any predictions. But if you want to get a prediction at this stage then here is how to do it: > predict(fit3,newdata=data.frame(t=10,unemployment=unemployment_future)) 1 46118.13
