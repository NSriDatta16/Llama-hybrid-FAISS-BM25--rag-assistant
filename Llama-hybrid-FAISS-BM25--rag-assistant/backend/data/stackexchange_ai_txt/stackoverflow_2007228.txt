[site]: stackoverflow
[post_id]: 2007228
[parent_id]: 2006824
[tags]: 
Encapsulation is the process of hiding the implementation. Whether the collection stores its data in an array or not is an implementation detail; if it was encapsulated you would want to be able to change it to another storage type. The very fact that you are exposing state ( or derived state ) as getters and setters breaks encapsulation and implies you are implementing an abstract data type rather than a true object-oriented class. For example, an ArrayList is a data type which does not represent any true encapsulation of behaviour in an application. Whether this is what you want depends how and where the type is to be used. I would tend to either make Container implement Iterable for external interation if it is simply a container data type, or provide an internal iterator method to which you pass a visitor if it intended as an encapsulated class. If it is an abstract data type, strongly consider using the built-in ones such as int[] or List instead.
