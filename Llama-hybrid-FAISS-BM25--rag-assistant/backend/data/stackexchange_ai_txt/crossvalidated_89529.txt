[site]: crossvalidated
[post_id]: 89529
[parent_id]: 
[tags]: 
Pricing Model for desktop computers

I am trying to implement a pricing model to automatic price desktops based on some attributes(say memory, disk and brand for now). I have collected some sold history data from the internet and they are more like in a " melted " format. Say, there are three transactions have been done in the history. TransactionID Brand Memory Disk SoldPrice 1 Lenovo 1G 60G $100 2 IBM NA 60G $150 3 Lenovo 4G NA $200 ... And the data in I have looks like this: SoldPrice Attribute Value $100 Brand Lenovo $100 Memory 1G $100 Disk 60G $150 Brand IBM $150 Disk 60G $200 Brand Lenovo $200 Memory 4G I know I can use reshape(2) package in R to cast the data back to the wide format which might be a perfect machine learning problem using whatever methods(Linear regression, or omnipotent random forest). However, my gut feeling tells me will it actually be a perfect fit for Bayesian algorithm if I don't change anything? So you can easily get the probability distribution for each conditions. So it will be easier to calculate. P(Price|Brand*Memory*Disk) = P(Price|Brand) * P(Price|Memory) * P(Price|Disk) Then we can have a plot of the probability for different prices vs the given computer spec. will be very easy to calculate and actually will have a better accuracy than other models? I am more on the programming side so please provide more detail if you are mentioning graduate level math. I wish I can get some mathematical suggestion or guidance about my thought here instead of Stackoverflow.
