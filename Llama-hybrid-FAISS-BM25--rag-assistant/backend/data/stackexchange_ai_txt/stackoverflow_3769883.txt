[site]: stackoverflow
[post_id]: 3769883
[parent_id]: 3768565
[tags]: 
EDIT: Dec 2019 The Path2D() constructor is supported by all major browsers now, "allowing path objects to be declared on 2D canvas surfaces". EDIT: Nov 2014 You can now use ctx.drawImage to draw HTMLImageElements that have a .svg source in some but not all browsers (75% coverage: Chrome, IE11, and Safari work, Firefox works with some bugs, but nightly has fixed them). var img = new Image(); img.onload = function() { ctx.drawImage(img, 0, 0); } img.src = "http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg"; Live example here . You should see a green square in the canvas. The second green square on the page is the same element inserted into the DOM for reference. You can also use the new Path2D objects to draw SVG (string) paths. In other words, you can write: var path = new Path2D('M 100,100 h 50 v 50 h 50'); ctx.stroke(path); Live example of that here. Original 2010 answer: There's nothing native that allows you to natively use SVG paths in canvas. You must convert yourself or use a library to do it for you. I'd suggest looking in to canvg : (check homepage & demos ) canvg takes the URL to an SVG file, or the text of the SVG file, parses it in JavaScript and renders the result on Canvas.
