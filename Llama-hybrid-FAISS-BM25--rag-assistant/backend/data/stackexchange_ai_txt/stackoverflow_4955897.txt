[site]: stackoverflow
[post_id]: 4955897
[parent_id]: 4955804
[tags]: 
The degree of interoperability depends to a large degree on the data types that are passed in and out - if you stick to simple types / primitives such as strings / integers etc then it is easier for other clients to access it. If you return .net specific objects such as datasets it will be difficult to interoperate. Also you need to consider if you will secure these. If you use WCF for example this implements WS-Security 1.1 and SOAP 1.2 - the clients will need to be conversant in these standards In principle web-services should be interoperable across clients, although in reality you can enounter vendor specific issues that can cause problems (e.g. the .net datasets example). I'd suggest building a simple prototype and creating a number of test clients in the expected client technologies to prove the interoperability (to quote 'The pragmatic programmer' to fire some tracer bullets )
