[site]: stackoverflow
[post_id]: 2962258
[parent_id]: 2962207
[tags]: 
If the the average number of strings resident in the table is low--like under 10,000 entries--an associative array would be a reasonable approach, even using a linear search if it's on a modern CPU architecture. Otherwise, constructing a "perfect hash" requires inspecting each character of the string and computing a unique value based on the possible range. For example, if only the 26 characters A..Z are allowed in the key, this would work: int hash (const char *key) { int h = 0; while (key && *key) h = h * 26 + (*key++ - 'A'); return h; }
