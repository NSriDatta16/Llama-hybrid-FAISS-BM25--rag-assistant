[site]: stackoverflow
[post_id]: 2649940
[parent_id]: 2649882
[tags]: 
There are loads of Python GUI libraries , among which, some support Windows. The mentionables here are WxPython , which despite their Win95-type screenshots can support native Windows widges . Additionally, as Mike Graham mentioned, there is support for the great GTK+ through PyWin , whose Windows support has really come a long way their Window's screenshots can indicate the extent to which it is well-integrated with the native widget look-and-feel. PyQt uses the QT Toolkit, which also has good windows support, and, of course, there is always the option of using the Win32 wrappers to access the Windows GUI APIs directly (though, the APIs are quite ugly, which is not the wrappers so much as it is the Win32 APIs; this is probably only worth pursuing if you are already familiar with the Windows APIs). Two more options, somewhat more out of the box, would include leaving CPython behind and leveraging IronPython (which runs on the .NET runtime and hence has access to Windows.Forms, or, to be really obtuse Gtk# via Mono) and Jython (which runs on the JVM and can leverage either the quite messy Swing , which has some native Windows widget support or SWT , which supports native windows widgets). So, all in all, there are lots of options on Python to leverage the native Windowslibrary.
