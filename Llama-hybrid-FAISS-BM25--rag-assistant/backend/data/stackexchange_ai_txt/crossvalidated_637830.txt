[site]: crossvalidated
[post_id]: 637830
[parent_id]: 
[tags]: 
Missing features for nodes in a Graph Neural Network (GNN)

I have built an undirected graph that I want to use to train a binary classifier. The graph represents a network of clients connected through the addresses they used to register. For example, if my partner and I live in the same house, we would show up as C1 -> A1 , where Ci represents the i -th customer and Ai is the i -th address. In other words, my edges table looks as follows: src dst C1 A1 C2 A1 … … As you can see, I have two types of nodes: customers and addresses (this is NOT the label I want to predict, though!). I'm using this graph to predict a binary outcome that only customers can have (for example, if they've committed credit card fraud). Likewise, I only have observable features for customers. I have neither a flag nor features for addresses. For example, my attributes table looks as follows (completely excludes nodes that represent addresses): customer_id X1 … Xp target C1 42 … 784.53 1 … … … … … Cn 39 … 1042.22 0 How should I train a GNN to predict a target considering that all the nodes that represent addresses lack both a target and features? Some options I have considered: Fill missing values with zero and interpret the features/target as the product of $\text{is_customer}_i \times X_{i,p}$ (where $\text{is_customer}_i$ is 1 for customers and 0 for addresses). Treat the graph as a heterogeneous graph .
