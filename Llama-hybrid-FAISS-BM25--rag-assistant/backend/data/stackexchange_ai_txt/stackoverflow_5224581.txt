[site]: stackoverflow
[post_id]: 5224581
[parent_id]: 
[tags]: 
Magento's magic setter only updated some db columns

I have a custom mysql table we'll call module_identifiers and a corresponding model in my module called Identifiers. This is my setup script: $installer = $this; $installer->startSetup(); $installer->run(" CREATE TABLE `{$installer->getTable('module_identifiers')}` ( `module_identifier_id` int(11) NOT NULL AUTO_INCREMENT, `identifier` varchar(255) NOT NULL, `customer_id` int(11) unsigned NOT NULL, `profile_name` varchar(100) NOT NULL, `provider` varchar(50) NOT NULL, PRIMARY KEY (`module_identifier_id`) ) ENGINE=InnoDB DEFAULT CHARSET=latin1; "); $installer->endSetup(); In my Module/Model/Identifiers.php class Namespace_Module_Model_Identifiers extends Mage_Core_Model_Abstract { protected function _construct() { $this->_init('module/identifiers'); } } And in Module/Model/Mysql4/Identifiers.php class Namespace_Module_Model_Mysql4_Identifiers extends Mage_Core_Model_Mysql4_Abstract { protected function _construct() { $this->_init('module/identifiers', 'module_identifier_id'); } } So when I want to write to this table, I've been doing this: Mage::getModel('module/identifiers') ->setIdentifier($profile['identifier']) ->setCustomerId($customer_id) ->save(); And that was working great until I added the provider and profile_name columns, and those are never updating with this: Mage::getModel('module/identifiers') ->setIdentifier($profile['identifier']) ->setProvider($profile['provider']) ->setProfileName($profile['profile_name']) ->setCustomerId($customer_id) ->save(); I dropped my custom table, removed my module's setup script from the core_resource list so it would run again (which it did), and the new rows are added to the database, but they're missing the data for my new columns. Yes, I've verified that my $profile array has the correct data. What am I doing wrong?
