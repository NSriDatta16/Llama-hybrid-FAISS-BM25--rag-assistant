[site]: stackoverflow
[post_id]: 3624020
[parent_id]: 3623984
[tags]: 
You're using float for storage, but you comparisons are being performed against the literals which are of type double . The values of x and y aren't exactly 0.3 and 0.7, as those numbers aren't representable in binary floating point. It happens that the closest float to 0.3 is greater than the closest double to 0.3, and the closest float to 0.7 is less than the closest double to 0.7... hence your comparison results. Assuming the representations are the same as in C# (where I happen to have some tools to help) the values involved are: 0.3 as float = 0.300000011920928955078125 0.3 as double = 0.299999999999999988897769753748434595763683319091796875 0.7 as float = 0.699999988079071044921875 0.7 as double = 0.6999999999999999555910790149937383830547332763671875 So that explains why it's happening... but it doesn't explain how to work around the issue for whatever your code is actually trying to do, of course. If you can give more context to the bigger problem, we may be able to help more.
