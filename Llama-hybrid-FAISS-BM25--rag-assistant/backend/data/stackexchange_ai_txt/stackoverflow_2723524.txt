[site]: stackoverflow
[post_id]: 2723524
[parent_id]: 2723456
[tags]: 
When you POST a form via ajax to an action method on your controller, the ModelBinder architecture kicks in to parse the posted form values into business objects for you. You can leverage modelbinding in a few different ways. public ActionResult MyAction(MyObject obj) { } In the above example, the modelbinder implicitly tries to create a MyObject from the information it received in the request. public ActionResult MyAction(FormCollection stuff) { MyObject obj = new MyObject(); TryUpdateModel(obj); } Here we are explicitly trying to bind the posted form data to an object that we created. The ModelBinder will try to match the posted values to the properties of the object. In either of these cases, you can query the ModelState object to see if there were any errors that occurred during translation of the posted values to the object. For an introduction to model binding, see here . For advanced modelbinding to lists and dictionaries, see Phil Haack's post .
