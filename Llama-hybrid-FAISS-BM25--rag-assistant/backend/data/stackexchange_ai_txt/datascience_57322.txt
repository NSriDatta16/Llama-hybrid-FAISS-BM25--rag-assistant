[site]: datascience
[post_id]: 57322
[parent_id]: 
[tags]: 
Best approach for a simple self driving car

I'm planning to build a small car with autonomous driving (maybe modifying my current rc car or using a robot car kit, using arduino and raspberry). I'll use a CNN, and I'm thinking how to collect data (I want to try a similar approach to the Udacity simulator). My doubt is if is better to aim at supervised learning or reinforcement learning. I'm more inclined to the supervised learning, but I don't know the best way to record data. If I'll go with the robot car kit, the front wheel doesn't steer (it use different wheels speed to turn left or right). So I could create 3 function for each direction, like "soft left", "medium left" and "hard left" to control the car when I train it, and then predict from 7 possibility: - soft left, medium left, hard left, center, soft right, medium right, hard right So 7 possible output. Otherwise if I use a car with the front wheel that are able to steer, I have 3 possible class, like -1 for left button, 0 for center (any button pressed) and 1 for right button. So 3 possible output, without any gradient for the steering angle. With the reinforcement learning honestly I don't know where to start. How can I tell to the car when it does something wrong and give her a reward? With a simulator is simple, but with a real car how can I assing a reward score for each frame that I collect? If you have any paper about this I appreciate it. What's the best approach in your opinion?
