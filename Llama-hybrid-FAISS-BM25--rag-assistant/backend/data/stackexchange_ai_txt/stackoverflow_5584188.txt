[site]: stackoverflow
[post_id]: 5584188
[parent_id]: 5583885
[tags]: 
For better or for worse, the normal system for a universal application is that you provide two separate versions of your MainWindow NIB; the iPad and iPhone have different aspect ratios and wildly different pixel densities, so Apple want you to consider more than just pixel resolution. You'll notice that in Xcode 4 you have two separate sets of 'Deployment Info' in your project and can specify separate "Main Interface" files there. That's also where you can specify different loading screens and icons (by drag and drop is easiest; let Xcode ensure the filenames are correct). If your application is just the same interface, but adjusted, it's quite normal to supply different NIBs that nominate the same classes as their owners. So, e.g. supposing you had a class, MainMenuViewController , full of the usual IBActions and IBOutlets, you might then create MainMenuViewController-iPhone.xib and MainMenuViewController-iPad.xib. Both of those would nominate their class as MainMenuViewController and contain suitable controls wired in. In your iPhone MainWindow NIB you'd set to load that view controller from MainMenuViewController-iPhone, in the iPad MainWindow NIB you'd set it to load from MainMenuViewController-iPad. Because both causes instances of the same class to be instantiated, and are set up so that class can reach the relevant controls, you write the model part of your code only once. With that in mind, all you have to do is use the iPad graphics in your iPad NIBs, use the iPhone graphics (with the @2x being handled automatically) in iPhone NIBs. If you need to do any runtime checks, you should look at the user interface idiom. For example: if(UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone) { // do something with the iPhone resources } else { // do something with the iPad resources } See here for documentation on UI_USER_INTERFACE_IDIOM. Assuming you build with the latest SDK, that's always available and safe to call, even on versions of iOS predating the iPad's introduction.
