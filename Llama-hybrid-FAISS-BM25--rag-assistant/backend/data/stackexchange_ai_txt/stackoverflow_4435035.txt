[site]: stackoverflow
[post_id]: 4435035
[parent_id]: 4400790
[tags]: 
If you find that there is no universal language, you can try a pragmatic model-driven development approach, using a template-based code generator. On the template you keep the underlying concepts of an algorithm. Then, you would add code for this algorithm in one or more specific languages (C++,Java,JS,Python) when necessary. You would have to do it anyway, whatever the language or approach you choose. A configuration switch would pick the correct language for any template you apply. AtomWeaver is a code generator that works with templates and employs ABSE as the modeling approach.
