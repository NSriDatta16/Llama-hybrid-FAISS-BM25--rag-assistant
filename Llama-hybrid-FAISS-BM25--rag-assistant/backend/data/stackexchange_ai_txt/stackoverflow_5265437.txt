[site]: stackoverflow
[post_id]: 5265437
[parent_id]: 5265074
[tags]: 
There is OOP and polymorphism in Java) You can write smt like ActionFactory.create(grade).execute() //returns some instance public static AbstractAction create(int grade){ //can be based on Maps as @Ted Hopp mentioned if(grade >= 0){ return new PositiveAction(); } else { return new NegativeAction(); } } //can be interface class AbstractAction{ public abstract void execute(); } class PositiveAction extends AbstractAction { public void execute(){Sout("positive");} } class NegativeAction extends AbstractAction { public void execute(){Sout("negative");} } It seems more verbose, but it works in real tasks. Java isn't for elegant solutions. Java for work. Feel Java)
