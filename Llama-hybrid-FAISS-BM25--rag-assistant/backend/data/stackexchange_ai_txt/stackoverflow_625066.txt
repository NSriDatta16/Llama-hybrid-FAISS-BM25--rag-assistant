[site]: stackoverflow
[post_id]: 625066
[parent_id]: 468220
[tags]: 
I don't know of a great way to run tests automatically from Eclipse, but I've put together a straight forward method of automatically building and deploying tests using ant. My project is organized as follows: Let's call the project root directory root Inside, I have the build.xml generated by the activityCreator script in the SDK. I have a second project containing my tests located in root/tests This project has it's own AndroidManifest.xml (see the structure of the Android API Demos as an example) This project also has it's own build.xml In order to support junit in the root/tests/build.xml, you need to add the path to junit. One way to do this is to add the path to the compile, dex, debug, and release targets (release is omitted, but it needs the same change that debug does). Also in the compile target we include the ../src path: Converting compiled files and external libraries into ${outdir}/${dex-file}... Packaging ${out-debug-package}, and signing it with a debug key... Now, we can build both projects separately. The final touch is to add a new target to root/build.xml that will build and deploy the project and tests and execute the tests. To do this add the following target to root/build.xml: Building and installing tests.. Once this is all in place, start the emulator, and run "ant tests". This will build, deploy, and execute your tests in one command.
