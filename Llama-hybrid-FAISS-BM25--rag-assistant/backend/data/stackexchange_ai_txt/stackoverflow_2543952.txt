[site]: stackoverflow
[post_id]: 2543952
[parent_id]: 2529246
[tags]: 
compile in a WinForms project for FrameWork 3.5 drag an instance of Control1 from the ToolBox to a Form Surface ... make sure its TabStop property is set to 'true put some other controls on the form. verify that when the instance of Control1 is tabbed to: it shows a selection rectangle which disappears as you "tab away" from it. verify if you click on the instance of Control1 that it shows the selection rectangle, and if you click on some other control it disappears. namespace testFocusableControl { // VS Studio 2010 RC1 : Tested against FrameWork 3.5 Full (not 'Client) public class Control1 : Control { public Control1() { SetStyle(ControlStyles.UserMouse, true); } protected override void OnLostFocus(EventArgs e) { this.Invalidate(); base.OnLostFocus(e); } protected override void OnGotFocus(EventArgs e) { this.Invalidate(); base.OnGotFocus(e); } protected override void OnPaint(PaintEventArgs e) { if (this.Focused) { ControlPaint.DrawFocusRectangle(e.Graphics, this.ClientRectangle, Color.Red, Color.Blue); } base.OnPaint(e); } } } The only "loose end" here for me is that this solution will show the selection rectangle on a mouse-click, but I did not implement any MouseDown code as Thomas suggested. Note that if you make the Control above a 'ContainerControl via 'SetStyle(ControlStyles.ContainerControl, true); and add some other control to it, even if you set the TabStop property of the added control to 'false : ... if it clicked ... it will get focus, and you will lose the focus rectangle shown on the ContainerControl.
