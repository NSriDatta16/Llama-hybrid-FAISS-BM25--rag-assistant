[site]: stackoverflow
[post_id]: 3865449
[parent_id]: 3864678
[tags]: 
In some circumstance is possible to improve it: Just for fun: u can use SortedList, if ur mailing list is mailing list (because u have a delimiter like ";") u can do as bellow: first calculate ur running time algorithm: Words: n item. (each item has an O(1) length). mailing list: K item. each item in mailing list average length of Z. each sub item in mailing list item average length of Y so the average number of subitems in mailing list items is m = Z/Y. ur algorithm takes O(n*K*Z). // the best way with knut algorithm 1.now if u sort the words list in O(n log n). 2.1- use mailingListItem.Split(";".ToCharArray()) for each mailing list item: O(Z). 2.2- sort the items in mailing list: O(m * log m) total sorting takes O(K * Z) in worth case with respect to (m logm 3- use merge algorithm to merge items of bad word and specific mailing list: O((m + n) * k) total time is O((m+n)*K + m*Z + n^2) with respect to m So if performance is very very very important, u can do this.
