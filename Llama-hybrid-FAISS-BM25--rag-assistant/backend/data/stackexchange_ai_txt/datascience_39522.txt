[site]: datascience
[post_id]: 39522
[parent_id]: 39521
[tags]: 
In short your friend is correct, seq2seq is a reasonable match to the problem. However, from your numbers this could be too complex to use current machine learning libraries on. Despite you calling it "not feasible", you are far better off with the reverse engineering effort in my opinion. If you really want to have a try using ML, you could start with some shorter files with the generated output and attempt to train a LSTM-based seq2seq model to match them. It may help, if the HTML is strongly templated and driven by data in the binary file, to reverse-engineer just the templating, and use seq2seq model to derive a more raw data sequence as opposed to HTML. You should expect to spend several weeks learning how seq2seq works, followed by an unknown amount of time in the attempt to apply it to your problem. You will need a large number of sample files to train your model - hundreds of thousands, maybe millions. There might be exceptions if the generated HTML is very repetitive/formulaic, or if short segments of binary data can also generate short segments of HTML (so you could train on smaller segments of the larger files). If any of this would break the terms and conditions for use of the software, I advise you not to attempt either reverse engineering or machine learning.
