[site]: crossvalidated
[post_id]: 628061
[parent_id]: 626786
[tags]: 
Your question is getting at leakage — in this case, allowing information to 'leak' from the training set into the testing set. If your feature is just computed directly from other features, one record (row) at a time, with no influence from statistics computed over the whole dataset, then it doesn't matter if you create the feature before or after splitting because you are maintaining the assumption of independence between the records. On the other hand, if you use statistics from the entire dataset, then you must do all your training and fitting — including parameterizing new features etc — on the training set only. For example, if you are standardizing the data then the mean and variance come from X_train only. Hopefully, armed with the intuition that you can't mix information from the training set into data that ends up in the validation or testing sets, you can make smart decisions about any feature engineering steps you are considering. (FWIW, it sounds like you are in the latter situation and should therefore split first.)
