[site]: stackoverflow
[post_id]: 152843
[parent_id]: 38427
[tags]: 
Step by step... The only solution is to start isolating blocks of code. If you don't have too much implementation leakage (see below **) then start building fachades that isolate the classes behind. Move those clases to a different project and make the fachade load the dlls on startup and redirect the calls to factory methods. Focus on finding areas/libraries that are fairly stable and split them to isolated library dlls. Building and versioning them separately will help you to avoid integration pains. I have been on that situation on the past and the only way is to take the task with patience. By the way, a good side effect of splitting code is that interfaces became cleaner and the output dll size is smaller!!. In our project suffling/reorganizing the code around and reducing the amount of gratuitous includes reduced the final output by 30%. good luck! ** --> a consumer calling obj->GetMemberZ()->GetMemberYT->GiveMeTheData(param1, param2)
