[site]: stackoverflow
[post_id]: 4274215
[parent_id]: 
[tags]: 
How can I fix my Factory Pattern to eradicate these compile errors?

My goal is to create a system wherein I can provide the string name of an class at run time and have it return an instance of that class in turn. Searching stackoverflow, I came across an example that seems to do exactly what I am trying to accomplish, although I am currently unable to have it compile properly. The following is based on that code: //LevelObject.h #pragma once #include #include class LevelObject { protected: int ID; public: template static LevelObject* createT(void) { return new T(0); } LevelObject(void); ~LevelObject(void); }; struct BaseFactory { typedef std::map map_type; static LevelObject* createInstance(const std::string& s) { map_type::iterator it = getMap()->find(s); if(it == getMap()->end()) { return 0; } return it->second(); } private: static map_type* objectMap; protected: static map_type* getMap() { if(!objectMap) { objectMap= new map_type; } return objectMap; } }; template struct DerivedRegister : BaseFactory { DerivedRegister(const std::string& s) { getMap()->insert(std::make_pair( s, &LevelObject::createT )); } }; //Item.h #pragma once #include "LevelObject.h" class Item : public LevelObject { int ID; static DerivedRegister reg; public: Item(int id); ~Item(void); }; //Item.cpp #include "Item.h" Item::Item(int id) { ID = id; } Item::~Item(void) { } DerivedRegister Item::reg("item"); The logic is that the derived objects, i.e. Item, will register a string and reference to a function that returns an instance of itself. On calling createInstance, it will take in a user inputted string and use the map to determine the object to return. Unfortunately, this code is not compiling correctly, and gives me the following errors: Error 1 error C2752: 'std::tr1::_Remove_reference ' : more than one partial specialization matches the template argument list Error 2 error C2528: 'abstract declarator' : pointer to reference is illegal c:\program files\microsoft visual studio 10.0\vc\include\type_traits 965 Error 3 error C2528: 'type' : pointer to reference is illegal c:\program files\microsoft visual studio 10.0\vc\include\type_traits 349 If someone can help smooth out these errors, I would greatly appreciate it. Or perhaps I am going about this entirely wrong in the first place, so if someone instead feels that I should be going in a different direction entirely please let me know. Thanks in advance.
