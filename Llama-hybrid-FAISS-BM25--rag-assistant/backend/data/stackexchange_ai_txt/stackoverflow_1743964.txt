[site]: stackoverflow
[post_id]: 1743964
[parent_id]: 
[tags]: 
Determining value based on adjacent cells in matrix

Input: a maze represented by an arbitrarily sized matrix of bools. (Out of bounds counts as 0) 00100 00100 01110 11111 01110 00100 Output: a nice looking representation of the maze (neighbourhood gets mapped to a wchar_t ): ┌─┐ │1│ ┌┘1└┐ ┌┘111└┐ |11111| └┐111┌┘ └┐1┌┘ └─┘ Edit: Basically each 0 gets mapped to a 4 bit value representing the wall layout. My approach and thoughts: I thought it would be simplest to look at each cell at a time. Then look at it's neighbours to determine what kind of value to put there. Turns out I have 8 boolean inputs (all neighbours), this generates 2^8=256 different scenarios. I don't feel like hard coding them all. Is there a more elegant way to map the values correctly?
