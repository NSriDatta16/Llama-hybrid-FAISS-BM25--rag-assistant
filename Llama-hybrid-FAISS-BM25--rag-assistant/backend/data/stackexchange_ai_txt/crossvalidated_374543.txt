[site]: crossvalidated
[post_id]: 374543
[parent_id]: 
[tags]: 
How to interpret/choose alpha in ridge regression

I have questions on how to apply ridge regression on my data set, which has about 75 samples with 8 features (x's) and usually 3 targets (y's). I tried the following feature engineering methods. only use the first order features ( $x_i$ ); first order + 2nd order w/o interaction terms ( $x_i, x_i^2$ ); first order + all 2nd terms ( $x_i, x_i^2, x_ix_j$ ) For each case, I always scale the X and Y values (even though it may not help) by: x_scaler = StandardScaler() y_scaler = StandardScaler() X_all_scale = x_scaler.fit_transform(X_all) Y_all_scale = y_scaler.fit_transform(Y_all) and try to find the good Î± by minimizing the validation set MSE in 10-fold cv. alpha = np.logspace(-5, 1, 7, endpoint=True) Here is what I got for the three cases and I don't know whether I understand right. Case 1: $X={x_i}$ . mean_MSE = 0.40 ~ 0.45, fitting $R^2$ =0.83 ~ 0.84. Value may vary in 10-fold cv. Best alpha is either 0.01 to 0.0001. Case 2: $X={x_i, x_i^2}$ . mean_MSE = 0.38 ~ 0.39, fitting $R^2$ =0.88 ~ 0.89. Value may vary in 10-fold cv. Best alpha is either 0.01 or 0.001. Case 3: $X={x_i, x_i^2, x_ix_j}$ . mean_MSE = 0.35 ~ 0.39, fitting $R^2$ =0.91 ~ 0.96. Value may vary in 10-fold cv. Best alpha is either 1 or 10. Based on the MSE and $R^2$ , it looks like Case 3 is the best choice. However, the alpha value is always very big -- it may indicate that the model is high-bias (under-fit due to too high dimension w/ relatively small data): it's very bad and only learnt the mean. My question is how can I know whether case 3 is a high-bias model and which case is should I choose. Thank you all!
