[site]: crossvalidated
[post_id]: 469739
[parent_id]: 
[tags]: 
The correct way of performing OneHotEncoding for neural network models

I have a dataset of multiclass (0,1,2) labels. Since I am using Keras, I need to first perform OneHotEncoding on the class column in the dataset using keras.utils.to_categorical method. Thus, I wonder which one of the following cases is correct: Case 1 (perform to_categorical separately on train and test labels): from sklearn.model_selection import train_test_split from keras.utils import to_categorical X, y = load_data(path) x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2) model.fit(x_train, to_categorical(y_train)) model.predict(x_test, to_categorical(y_test)) Case 2 (perform to_categorical before splitting): from sklearn.model_selection import train_test_split from keras.utils import to_categorical X, y = load_data(path) y = to_categorical(y) x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2) model.fit(x_train, y_train) model.predict(x_test, y_test)
