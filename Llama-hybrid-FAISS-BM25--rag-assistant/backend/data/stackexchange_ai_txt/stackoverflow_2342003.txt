[site]: stackoverflow
[post_id]: 2342003
[parent_id]: 2341958
[tags]: 
Say you have User in the database. They'll have been assigned a primary key by the database system. So for a profile image, you could store it as: /media/users/profile-image/ .jpg Similarly for a Photo record. It'll have a PK so you could quickly save it as: /media/photos/ .jpg You'll notice that on many social networking (et al) sites, the filenames that get served are not the original filenames. Try it. Upload a file to Flickr and see what that filename turns into. That's because they go through a process like this. If you need a more complicated filename that nobody could ever guess, you could considering hashing. A hash is an interpretation of a string that is reproducible. To stop people guessing the hashes, you add a "salt" which is an extra sting that only you know. So "my salt" + goes in and Lhflkjh34kjb3 (or something like that) comes out. You could do this process every time you're trying to work out what image file you need but it's quite expensive. I would suggest storing this back in the database. Note: as this example uses the primary, auto-generated key, you would need to insert the record and then update it with the filename. One last point: storing the full path will get in your way eventually. As applications grow, you inevitably need to branch out and reorganise things. If you store have a full path to the image, you'd need to change all the filenames when you restructure. It's much simpler.
