[site]: stackoverflow
[post_id]: 2160052
[parent_id]: 
[tags]: 
WCF service returning an array of dictionary

I've been trying to use a SilverLight client to call an ASP.Net WCF service that would return a Dictionary . That worked fine when the values in the dictionary were simple types like int , string or Guid . However, I now have a scenario where I need one of the values to be an array of Dictionary ! It all compiles fine and the signature of the service has not changed but the service call now fails. Any ideas how to fix it? I've trying to annotate my service class and methods with the KnownType and ServiceKnownType attributes but that didn't work. Here is a piece of code: [ServiceContract(Namespace = "")] [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)] public class Service1 { [OperationContract] [ServiceKnownType(typeof(Dictionary ))] public Dictionary GetObject() { return new Dictionary () { { "pty1", 1 }, { "pty2", Guid.NewGuid() }, { "pty3", "blah" }, { "pty4", new Dictionary [] { new Dictionary () { { "pty1", 4 }, { "pty2", Guid.NewGuid() }, { "pty3", "blah" }, } , new Dictionary () { { "pty1", 4 }, { "pty2", Guid.NewGuid() }, { "pty3", "blahblah" }, } } } }; } } Thank you for your answers. I've turned on WCF tracing and, as suspected, there is a problem during serialization. The problem is not the serialization of Dictionary but the one of Array of Dictionary . Here the exception logged by WCF service. There was an error while trying to serialize parameter :GetObjectResult. The InnerException message was 'Type 'System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]][]' with data contract name 'ArrayOfArrayOfKeyValueOfstringanyType: http://schemas.microsoft.com/2003/10/Serialization/Arrays ' is not expected. Add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to DataContractSerializer.'. Please see InnerException for more details. I've also try to define a new DataContract class with a single data member but it lead to the very same error. Here is the code for that, followed by the exception logged by WCF logging. [DataContract] [KnownType(typeof(ObjectHolder))] public class ObjectHolder { [DataMember] public object Object { get; private set; } public ObjectHolder(object obj) { this.Object = obj; } } There was an error while trying to serialize parameter :GetObjectResult. The InnerException message was 'Type 'System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[SilverlightApplication7.Web.ObjectHolder, SilverlightApplication7.Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]][]' with data contract name 'ArrayOfArrayOfKeyValueOfstringObjectHolderWAwxSTlb: http://schemas.microsoft.com/2003/10/Serialization/Arrays ' is not expected. Add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to DataContractSerializer.'. Please see InnerException for more details. Again I've played with ServiceKnownType for ObjectHolder , ObjectHolder[] and even ObjectHolder[][] since the exception mentions an " ArrayOfArrayOfKeyValueOfstringObjectHolder ". Still no solution yet.
