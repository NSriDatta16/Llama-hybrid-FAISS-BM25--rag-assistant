[site]: stackoverflow
[post_id]: 1964737
[parent_id]: 1960028
[tags]: 
Here's something that's easy; I don't know how good it is. To get smooth , use your favorite blurring algorithm. E.g., average points within radius 5. Space cost is order the size of the image and time is the product of the image size with the square of the blurring radius. Take the difference of each individual pixel with the original image, find the maximum value of (original[i][j] - blurred[i][j]) , and add that value to every pixel in the blurred image. The sum is guaranteed to overapproximate the original image. Time cost is proportional to the size of the image, with constant additional space (if you overwrite the blurred image after computing the max. To do better (e.g., to minimize the square error under some set of constraints), you'll have to pick some class of smooth curves and do some substantial calculations. You could try quadratic or cubic splines, but in two dimensions splines are not much fun.
