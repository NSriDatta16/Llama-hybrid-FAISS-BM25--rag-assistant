[site]: stackoverflow
[post_id]: 5558677
[parent_id]: 2010892
[tags]: 
In theory, it is possible to store objects with functions: function store (a) { var c = {f: {}, d: {}}; for (var k in a) { if (a.hasOwnProperty(k) && typeof a[k] === 'function') { c.f[k] = encodeURIComponent(a[k]); } } c.d = a; var data = JSON.stringify(c); window.localStorage.setItem('CODE', data); } function restore () { var data = window.localStorage.getItem('CODE'); data = JSON.parse(data); var b = data.d; for (var k in data.f) { if (data.f.hasOwnProperty(k)) { b[k] = eval("(" + decodeURIComponent(data.f[k]) + ")"); } } return b; } However, function serialization/deserialization is unreliable because it is implementation-dependent .
