[site]: stackoverflow
[post_id]: 1965820
[parent_id]: 1965279
[tags]: 
I don't think there's a "magical" solution for the iPhone for this. I once looked for the same thing didn't find any "easy to use" solution. Best I could find : http://www.clintharris.net/2009/iphone-app-shared-libraries/ Especially the part regarding "Fat libraries", that refers to http://latenitesoft.blogspot.com/2008/10/iphone-programming-tips-building-unix.html But the MAKE configuration doesn't look easy (at least for me). The way I do it : I build the static libs separately for all configurations I need (simulator x86 debug, and device arm debug for instance). This gives me two different .a files. I renamed them mylibrary_arm.a and mylibrary_x86.a Then, for any project that wants to use those 2 libraries, I drag and drop THE TWO .a FILES into the client project that needs the .a library + the .h headers that will enable the use of those libraries. Then, when I choose simulator or device in this client project, the compiler chooses the right .a AUTOMATICALLY to compile and run properly . So in the end, the only boring phasis is the generation of the .a themselves, but the use of them is quite easy and XCode adjusts itself automatically.
