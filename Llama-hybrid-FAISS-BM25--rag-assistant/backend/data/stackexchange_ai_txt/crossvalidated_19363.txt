[site]: crossvalidated
[post_id]: 19363
[parent_id]: 19355
[tags]: 
Here is the plot of your data: It is clear then, that it is probably not generated by statistical model. It is then not surprising that AR(1) predictions look suspicious. I suspect that some S-curve type function can be perfectly fitted to your data. Update Note What comes below is complement to IrishStat answer with R code illustrations. On the other hand, as IrishStat pointed out, AR(1) model is useful here. In fact we have the following: > bb summary(lm(V1~lV1,data=bb)) Call: lm(formula = V1 ~ lV1, data = bb) Residuals: Min 1Q Median 3Q Max -0.44873 -0.16852 0.00065 0.20665 0.28504 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 8.112e+05 9.046e+00 89681 So we have a perfect fit (in the precision of original data): > fitted(lm(V1~lV1,data=bb))-bb$V1[-1] 2 3 4 5 6 -0.0431514978 0.2081317329 -0.2217918197 0.1431496162 -0.2695231647 7 8 9 10 11 0.1938952347 -0.0006489181 -0.1915123449 0.0177617292 -0.2850446492 12 0.4487340818 The forecast for future values is : $$Y_{t+h}=\alpha(1+\rho+...+\rho^{h-1})+\rho^hY_t$$ where $Y_t$ is the last point of the data, $h$ -- the forecasting horizon, and $\alpha$ and $\rho$ are estimated coefficients: > coef(lm(V1~lV1,data=bb)) (Intercept) lV1 8.112164e+05 6.791302e-01 Since your data is without stochastic error, the usual methods might behave strangely, which is illustrated by the following code: > auto.arima(ts(bb$V1)) Series: ts(bb$V1) ARIMA(2,2,1) Coefficients: ar1 ar2 ma1 1.9691 -0.9691 0.8809 s.e. NaN NaN NaN sigma^2 estimated as 37898: log likelihood=-70.44 AIC=148.88 AICc=156.88 BIC=150.09 Or even > arima(ts(bb$V1),order=c(1,0,0)) Series: ts(bb$V1) ARIMA(1,0,0) with non-zero mean Coefficients: ar1 intercept 0.9569 2497162.58 s.e. 0.0575 27950.09 sigma^2 estimated as 80110030: log likelihood=-127.46 AIC=260.92 AICc=263.92 BIC=262.37 As you see the AR(1) coefficient is estimated incorrectly. The fit is also very bad compared to OLS fit: > ts(bb$V1)-fitted(arima(ts(bb$V1),order=c(1,0,0))) Time Series: Start = 1 End = 12 Frequency = 1 [1] -10830.884 20317.315 14226.441 10090.616 7281.075 5373.793 [7] 4077.641 3198.024 2600.654 2194.570 1919.289 1731.313 The precise explanation why is that can be complicated, but the general rule is, that algorithms might perform poorly on corner cases (zero errors in this case).
