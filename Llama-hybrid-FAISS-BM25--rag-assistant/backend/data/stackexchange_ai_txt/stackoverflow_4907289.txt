[site]: stackoverflow
[post_id]: 4907289
[parent_id]: 4906932
[tags]: 
To 1. A module is created/opened by simply saying: module MyModule def first_module_method end end To 2. The lib folder. If you want to organize your modules in the lib folder, you can put them into modules themselves. For example, if you wanted a subfolder super_modules your modules would be defined as follows: module SuperModules module MyModule def first_module_method end end end To 3./5. When including the module in a class you can simply call the modules methods as if they were defined within the class: class MyClass include MyModule def some_method first_module_method #calls module method end end To 4. Frst, make sure that your module is really needed in every class of your application. If it isn't it makes sense to only include it where it is need so as not to bloat the classes that don't need it anyways. If you really want the module everywhere, include look at the class hierarchy of your classes in the app. Do you want the module in all models? You could open ActiveRecord::Base and add add your module there.
