[site]: stackoverflow
[post_id]: 5128822
[parent_id]: 5128555
[tags]: 
All "business logic" should be put in the Model , not the controller. The query for recent Users and Posts should be in the User and Post model. Then, if you have a site-wide view element, move it into a partial and add that partial into the application.html.erb . # User.rb model User def recent # logic and query here end end # Post.rb (see above) # application_controller.rb before_filter :get_recent_posts before_filter :get_recent_users ... private def get_recent_posts @recent_posts = Post.recent end def get_recent_users @recent_users = User.recent end # application.html.erb ... ... 'layouts/footer', :locals => { :recent_users => @recent_users, :recent_posts => @recent_posts } %> # layouts/_footer.html.erb # same for posts A few important things to note: don't access the instance variables (the @foo) in the partial... pass it into the locals hash and access it as a variable instead. It's just generally bad practice you could also use a module look into caching because you probably don't want to hit your database TWICE on every page load. You could use fragment caching on the footer and expire it every 15 minutes (probably the best option).
