[site]: stackoverflow
[post_id]: 4296395
[parent_id]: 4295657
[tags]: 
I wont say this is a better answer than Paul Johnson but this is one way to do it if I understood what you wanted: import Control.Monad.State import System.Random -- utility function to hide plumbing of random generator types. rand :: (Random a, RandomGen g, MonadState g m) => a -> a -> m a rand lo hi = do r I'm using the standard random generator module since I've never used random-fu but the principle should be the same just make a rand action if it doesn't exist in the library. I'm using type-classes to keep the code generic, you can use this with any monad (transformer) that is an instance of the MonadState type-class. You don't have to use type-classes you can use your specific monad in the type of rand instead if you want.
