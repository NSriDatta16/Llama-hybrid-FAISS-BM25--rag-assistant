[site]: stackoverflow
[post_id]: 3807210
[parent_id]: 3807040
[tags]: 
To test something, you need a reference, something to compare the results to. For the framework or the script, the production code can be used as reference - unless the versions are not compatible: if all tests pass with framework N and with framework N+1, then there is no [visible] regression, will all due restrictions (provided enough coverage...). That's where writing unit tests for testing frameworks or scripts may be considered a waste of time. The existing frameworks probably works in most cases, so spending time to put it under unit tests can be a waste. As with any piece of software, writing unit tests when you add new features, or when you rework some parts of the code will be helpful. I usually don't write unit tests for my test programs, or only for specific parts where automated tests are valuable. I grow them along with the production code, using each one as a scaffolding for the other.
