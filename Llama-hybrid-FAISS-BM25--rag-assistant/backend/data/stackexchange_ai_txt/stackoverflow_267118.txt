[site]: stackoverflow
[post_id]: 267118
[parent_id]: 267045
[tags]: 
Definitely. Let's think of a concrete example. Say we have an abstract class Animal . Say, we make some subclasses Cat , Dog , Mosquito , and Eagle . We can implement its Eat() , Breathe() , Sleep() methods of the abstract class Animal . So far, so good. Now, let's say we want to have the Fly() method for the Mosquito and Eagle classes. Since these two organisms aren't really well-related (one is a bird, another is an insect) it wouldn't be easy to come up with a common ancestor for the two that we can have as an abstract class. This would best be implemented by an interface IFly . The IFly interface can have a Fly() method to be implemented. Both Mosquito and Eagle classes can both be subclasses of the abstract class Animal and implement the interface IFly and be able to Eat() , Breathe() , Sleep() and Fly() without having some type of odd ancenstral relationship between the two classes.
