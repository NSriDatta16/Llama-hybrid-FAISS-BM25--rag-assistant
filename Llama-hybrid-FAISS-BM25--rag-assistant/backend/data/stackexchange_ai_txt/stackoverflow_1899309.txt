[site]: stackoverflow
[post_id]: 1899309
[parent_id]: 1899196
[tags]: 
For the ARM side you need a USB Stack. For the PC side you need to implement an USB driver and an application interfacing the driver. It is therefore easier to stick to one of the common profiles (HID, Mass Storage, Virtual COM). For all these you will be able to find USB stacks and not to have to implenent your own. Also you won't need to implement a USB driver for the PC. I think that the easiest thing to do is to use a Virtual COM approach. From the PC side it would like you are accessing a Serial Port. The speed however can be higher than standard RS232 ports. I have found this USB Stack targetting an earlier processor. You could adapt it for your needs or use it as reference. Generally a Virtual COM driver for the PC will be provided along with the ARM USB stack. Another approach is to use libusb . This will allow you to interact with USB without writing a kernel driver. For application notes and commercial USB stacks look here . If you are determined to write your own stack and driver, Jungo is the industry leader for embedded USB stacks and drivers.
