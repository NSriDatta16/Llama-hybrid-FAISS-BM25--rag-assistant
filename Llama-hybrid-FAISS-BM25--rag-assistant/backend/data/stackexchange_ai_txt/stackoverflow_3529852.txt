[site]: stackoverflow
[post_id]: 3529852
[parent_id]: 
[tags]: 
Sitemesh like functionality with XSLT?

I recently asked a question about using XSL/t for creating a site layout and child pages Here .. Where the layout would decorate the child page. I want to expand on that idea and come up with SiteMesh like functionality. Note that I'm going to have a very small number of xsl layout files, most of my xsl files should be for the child pages.. The layout is fairly basic, it includes a header, a main menu, a footer, a body with a content div under it. SiteMesh allows you to define template files as a fairly standard html file, and then child pages which will override sections of the parent. For instance, here is a basic template (decorator) for sitemesh: - Site Title @import "css/global.css"; Mysite.com goes here And then here would be an example of a child page: Child Page p { margin: 10 } Content Goes here Once the decorator is applied to the child page, the result contains the body of the child page where the decorator:body was at, and the decorator:head gets replaced as well, etc.. Pretty simple how it works and fairly effective way of organizing a site. So now lets say we are using XSL/T instead and we want to use a similar structure where we don't keep redefining what the layout looks like, rather we define that hopefully only once (or maybe a few times for pages that aren't very similar), and we replace out sections if the child template has them. Sounds like this would be very simple, but the problem is that the data backing this site will look like (not really a blog site but just as an example of what i'm dealing with) Blogs UserBlogs First Blog John Doe ... So now Lets say I have a master template like this: - Site Title @import "common.css" here except the title --> Header/log that stuff here Cat 1 Cat 2 ... in the child --> My Site, copyright, bla bla So then what I want to do is take that xml from above (the one about blogs) and apply that to my child page, and take the result of that transformation and apply it to my master template (which will copy/apply elements as needed). I'm not sure if there is a way to do this in a single transformation. Currently the architecture is such that I'm provided with the xml as shown, and I have to construct that into a page.. I thought maybe I could have the master template include the child template, then use xsl:call-template wrapped in an xsl:variable declaration to capture the results of the child template on the current xml.. I need to somehow take the results of that transformation to replace the master templates title/header/content section. Any idea how this can be done? I see on this site: http://www.devguru.com/technologies/xslt/quickref/xslt_element_calltemplate.html that you can capture the results of a xsl:call-template in the xsl:variable declaration I'm just confused how you can then use that data besides ouputing it.. Any help would be appreciated
