[site]: stackoverflow
[post_id]: 3051776
[parent_id]: 
[tags]: 
While within a switch block

I've seen the following code, taken from the libb64 project . I'm trying to understand what is the purpose of the while loop within the switch block - switch (state_in->step) { while (1) { case step_a: do { if (codechar == code_in+length_in) { state_in->step = step_a; state_in->plainchar = *plainchar; return plainchar - plaintext_out; } fragment = (char)base64_decode_value(*codechar++); } while (fragment step = step_b; state_in->plainchar = *plainchar; return plainchar - plaintext_out; } fragment = (char)base64_decode_value(*codechar++); } while (fragment > 4; *plainchar = (fragment & 0x00f) step = step_c; state_in->plainchar = *plainchar; return plainchar - plaintext_out; } fragment = (char)base64_decode_value(*codechar++); } while (fragment > 2; *plainchar = (fragment & 0x003) step = step_d; state_in->plainchar = *plainchar; return plainchar - plaintext_out; } fragment = (char)base64_decode_value(*codechar++); } while (fragment What can give the while? It seems that anyway, always the switch will perform only one of the cases. Did I miss something? Thanks.
