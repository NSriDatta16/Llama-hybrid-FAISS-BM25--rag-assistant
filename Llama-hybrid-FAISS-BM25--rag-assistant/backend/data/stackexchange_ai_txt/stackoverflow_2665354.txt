[site]: stackoverflow
[post_id]: 2665354
[parent_id]: 2665264
[tags]: 
There are three standard pragmas in C99: #pragma STDC FP_CONTRACT on-off-switch #pragma STDC FENV_ACCESS on-off-switch #pragma STDC CX_LIMITED_RANGE on-off-switch Where 'on-off-switch' is one of ON, OFF, DEFAULT. These can be used at compile time to modify the behaviour of the compiler in arcane ways (these ones are related to the C99 floating point behaviour). The standard reserves STDC for standard pragmas; other people can use anything else they like. There are non-standard pragmas too - as pointed out by Samuel Klatchko. Basically, they are a way to get the compiler to do non-standard things in a semi-standard way. One example is ' #pragma pack ' which means that structures are created with no padding between members, even if that means that access to those members will be sub-optimal (space is more important than time, presumably). This isn't a particularly good idea (though those who use it will object to that); but it is a commonly perceived requirement, so compilers often support it. I've been programming in C for - oh, 25 years and a bit to spare. I've not needed to use pragma once. I've toyed with it a couple of times, but never really needed to use it. Maybe I'm lucky.
