[site]: stackoverflow
[post_id]: 2859695
[parent_id]: 2855189
[tags]: 
Algorithm idea: average the four points to get a point inside the polygon. Then calculate the angle of the ray between that center point and each point, using inverse trigonometric functions, like explained here . Then sort by the angles. That should give you a (counter-)clockwise ordering, depending on the sort order and what you consider "zero degrees". UPDATE: here's some code. Mostly untested, but it's the idea. function sorted_points(points) { points = points.slice(0); // copy the array, since sort() modifies it var stringify_point = function(p) { return p.x + ',' + p.y; }; // finds a point in the interior of `pts` var avg_points = function(pts) { var x = 0; y = 0; for(i = 0; i It sorts points (an array of objects like {x: 1, y: 1} ) counter-clockwise.
