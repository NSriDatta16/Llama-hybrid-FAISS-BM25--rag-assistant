[site]: stackoverflow
[post_id]: 2308557
[parent_id]: 2273683
[tags]: 
I have a different opinion. I think IOC containers certainly have a role in dynamic languages. I do not share the opinion that a language being dynamic removes the need for a clearly structured composition of objects. Or that a dynamic language 'provides' the same functionality. An IOC container is simply a tool to manage this organization. Even in a dynamic language I want to 'wire' together components. Without making hard dependencies between those components. Or maybe even without specifying the actual implementation class for those components.
