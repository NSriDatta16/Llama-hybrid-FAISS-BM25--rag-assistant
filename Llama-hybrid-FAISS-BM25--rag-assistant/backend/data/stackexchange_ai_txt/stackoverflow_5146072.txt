[site]: stackoverflow
[post_id]: 5146072
[parent_id]: 
[tags]: 
How to partially and progressively iterate over a javascript object?

I'm using jQuery and the Flickr API to return a json object containing many photos from a user's photostream. I would like to iterate over the resulting object to show 40 photos initially, followed by a "load more" button. Each time that button is clicked, the next batch of 40 photos will be appended to the existing list of photos. Once there are no further items in the object, the button goes back to acting as a hyperlink to the user's Flickr profile. At the moment, I have working code that displays the first 40 photos. But when the "load more" button is clicked, I am adding all the remaining items to the HTML. This is because I couldn't find a way to produce the kind of behaviour described above. Perhaps there is a more efficient approach that I have also missed. Here is my existing code. Any additional comments or improvements would be most welcome. $(function () { myApp.uri = myApp.flickrUrl + '&per_page=' + myApp.maxNum + '&api_key=' + myApp.flickrApiKey + '&user_id=' + myApp.flickrUserId; myApp.getPhotos(myApp.uri, myApp.callback); }); var myApp = { flickrApiKey : 'xxxx', flickrUserId : 'xxxx', flickrUrl : 'http://api.flickr.com/services/rest/?format=json&extras=url_t&method=flickr.people.getPublicPhotos', callback : 'jsonFlickrApi', minNum : 40, maxNum : 500 }; myApp.getPhotos = function (u, c) { var jxhr = $.ajax({ dataType : 'jsonp', url : u, jsonpCallback : c, timeout : 5000 }) .success(function (data, status) { var photosContainer = $('#photos'); photosContainer.prepend(' '); var photosList = $('#photos ul'); // while there are more photos to load, the default link text // is replaced with a string stored in a data-* attribute var moreLink = $('#more'); var moreLinkText = moreLink.text(); var moreLinkTextJs = moreLink.attr('data-text-js'); moreLink .attr('data-text-nojs', moreLinkText) .text(moreLinkTextJs) .insertAfter(photosContainer); // initially populate the Photo List with the first 40 photos $.each(data.photos.photo, function (i, item){ if (i '; $(photoEl).appendTo(photosList); } }); // click on "More" link loads in all remaining photos. // would like this to load the next 40 in the object // each click until there are no items left...at which point unbind moreLink.live('click', function (e) { e.preventDefault(); $.each(data.photos.photo, function (i, item){ if (i >= myApp.minNum) { var photoEl = ' '; $(photoEl).appendTo(photosList); } }); // unbind events and revert the link text moreLink.text(moreLinkText).blur().die(); }); }) .error(function (status) { }); };
