[site]: stackoverflow
[post_id]: 1814407
[parent_id]: 1814388
[tags]: 
Well, as far as source control goes, somebody needs to take the lead and set up the basic structure of the project, directories, etc. and communicate it to the team. On projects I work on, this is usually an architect or senior developer, someone who knows the best practices for project organization for the team/company. With respect to avoiding having multiple people working on the same tasks, that's a project management function; someone needs to determine what tasks need to be done, and communicate it to the team. If you are working in an agile/scrum environment, the team may divide and hand out work items amongst themselves, but in either case you need to communicate to avoid doing the same work twice. EDIT To address the issue of multiple people working on the same task, I tend to work on smaller teams, 2-6 people; in this environment, I have had a lot of success with a scrum -influenced approach using the Crystal Clear methodology: Architect(s)/designer(s) come up with high level design Architect(s)/designer(s) define iterations/deliveries, the first of which is a "project skeleton" which consists of architectural and back-end components and a thin slice of the app Lead person breaks up features into 1-3 day tasks/units of work (estimated) Team meets and discusses priority, timing and dependencies of tasks, and divides up the first set of tasks The team has brief daily meetings to discuss status/priorities and dependencies, and change direction if necessary With larger projects/teams, you will almost certainly need someone whose main job is dedicated to tracking status, dependencies and conflicts.
