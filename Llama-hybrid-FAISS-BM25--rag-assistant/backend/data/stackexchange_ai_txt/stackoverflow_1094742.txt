[site]: stackoverflow
[post_id]: 1094742
[parent_id]: 1094679
[tags]: 
In programming , recursion is really a special case of iteration - one where you use the call stack as a special means of storing state. You can rewrite any recursive method to be an iterative one. It may be more complicated or less elegant, but it's equivalent. In mathematics , there are certain problems that require recursive techniques to arrive at an answer - some examples are finding roots ( Newton's Method ), computing primes, graph optimization, etc. However, even here, there's just a question of how you differentiate between the terms "iteration" and "recursion". EDIT: As others have pointed out, there exist many functions whose definition is recursive - ex. the Ackermann function . However, this does not mean that they cannot be computed using iterative constructs - so long as you have a turing complete operation set and unlimited memory.
