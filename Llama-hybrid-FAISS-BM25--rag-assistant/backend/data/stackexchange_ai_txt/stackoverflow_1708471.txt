[site]: stackoverflow
[post_id]: 1708471
[parent_id]: 1595015
[tags]: 
Ok, i'll try it... I haven't tried to run it, but it should work more or less. At least it's a good start. If you have any questions, feel free to ask. public class ProfilesProposalProvider implements IContentProposalProvider { private List proposals; private String proposalQuery; private Thread retrievalThread; public void setProposals( List proposals, String query ) { synchronized( this ) { this.proposals = proposals; this.proposalQuery = query; } } public IContentProposal[] getProposals( String contents, int position ) { // Synchronize incoming thread and retrieval thread, so that the proposal list // is not replaced while we're processing it. synchronized( this ) { /** * Get proposals if query is longer than one char, or if the current list of proposals does with a different * prefix than the new query, and only if the current retrieval thread is finished. */ if ( retrievalThread == null && contents.length() > 1 && ( proposals == null || !contents.startsWith( proposalQuery ) ) ) { getProposals( contents ); } /** * Select valid proposals from retrieved list. */ if ( proposals != null ) { List validProposals = new ArrayList (); for ( IContentProposal prop : proposals ) { if(prop == null) { continue; } String propVal = prop.getContent(); if ( isProposalValid( propVal, contents )) { validProposals.add( prop ); } } return validProposals.toArray( new IContentProposal[ validProposals.size() ] ); } } return new IContentProposal[0]; } protected void getProposals( final String query ) { retrievalThread = new Thread() { @Override public void run() { GetProfilesJob job = new GetProfilesJob("profiles", query); job.schedule(); try { job.join(); ArrayList names = job.getResults(); if (names != null){ List props = new ArrayList (); for ( String name : names ) { props.add( new ProfileProposal( name, name ) ); } setProposals( props, query ); } } catch (InterruptedException e) { e.printStackTrace(); } retrievalThread = null; } }; retrievalThread.start(); } protected boolean isProposalValid( String proposalValue, String contents ) { return ( proposalValue.length() >= contents.length() && proposalValue.substring(0, contents.length()).equalsIgnoreCase(contents)); } }
