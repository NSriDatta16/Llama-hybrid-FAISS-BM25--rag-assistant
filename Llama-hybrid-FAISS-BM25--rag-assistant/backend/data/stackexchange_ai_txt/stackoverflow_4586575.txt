[site]: stackoverflow
[post_id]: 4586575
[parent_id]: 
[tags]: 
Structure Javascript file for a web application

I'm working on my first web application, and as it becomes larger and larger I'm having some questions as to what the cleanest way to organize the code is. Would some more experienced developers care to share what method they use? This is what I'm currently doing: When the page loads, it's pretty much an html "template" with empty div's that have an id or class identifier ... etc. and then I fill it in upon page load using Javascript functions (that will also be called later upon user actions). All code is in a separate file, but I've found that it really ends up looking like a list of selectors, events, and the corresponding function. For instance: $('#current-view li a').click(function() { ... }); $('#save-form-button').click(function() { ... }); $('.employee-name').focus(showAutoComplete); $('input, textarea').attr('spellcheck', false); My whole file is basically a long list of these sorts of things. Is this the way other developer's structure a web app? I'm pretty much just teaching myself so I don't have any code for comparison. And another thing I've wondered -- is it cleaner to do something like this: $('#current-view li a').click(function() { *set the current tab* }); $(document).ready(function() { $('#current-view li#'+last_active_tab+' a').click(); }); or where a separate function like selectView is defined and then: $('#current-view li a').click(selectView); $(document).ready(function() { selectView.apply($('#current-view li#'+last_active_tab+' a')[0]); }); Thanks!
