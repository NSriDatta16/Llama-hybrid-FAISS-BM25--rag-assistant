[site]: datascience
[post_id]: 118831
[parent_id]: 
[tags]: 
Classification Algorithms for Geospatial Vector Data

I am new to the world of Geospatial Analysis. As such, I am interested in Machine Learning / Deep Learning techniques for classifying geospatial vector data specifically (as opposed to raster data). I've searched the web quite a bit and it seems to me that most of the ML research on geospatial data focuses on raster data. I am interested however in analyzing vector data. The only paper researching learning techniques applied on geospatial vector data I found is this: https://arxiv.org/abs/1806.03857 , which refers to Polygon data. I was wondering if there are any techniques focused on Point vector data. More specifically, my problem refers to classifying road intersections into roundabouts or not roundabouts , so it's a binary classification problem. The available input data consists of the GPS lat / lon points contained inside the intersection polygons. So each sample contains a list of GPS points that we know that are contained in the intersection. I was considering taking the point coordinates as features and since each intersection contains a different number of points, the feature vectors will have variable-length. From what I've read up until now, my only potential solution consists of taking each points' latitude and longitude as features and zero-padding to a fixed size (maybe the maximum number of points contained in an intersection) then feeding this data to an MLP or SVM. However, due to the dimensionality curse, I doubt this would work, especially given that I only have ~800 intersection samples available. My question is: how do I solve the variable-length feature vectors problem?
