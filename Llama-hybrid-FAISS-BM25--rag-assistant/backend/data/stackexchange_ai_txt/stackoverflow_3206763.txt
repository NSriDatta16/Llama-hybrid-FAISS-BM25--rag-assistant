[site]: stackoverflow
[post_id]: 3206763
[parent_id]: 3206710
[tags]: 
I don't see a problem with each respective class having the references you've mentioned - it's how many domain models work with 1: n relationships. So your class could look like this (C#): public class AppUser { public string Email { get; set;} public string FullName { get; set;} public bool Active { get; set;} public List Organizations { get; set;} //... and so on } public class Organization { public string Name { get; set;} public string Domain { get; set;} public List Members { get; set;} //... and so on }
