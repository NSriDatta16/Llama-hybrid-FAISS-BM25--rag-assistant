[site]: stackoverflow
[post_id]: 4427776
[parent_id]: 4427239
[tags]: 
You can use PHP's DOM classes/functions to do this. Start by creating/loading your document: $d = new DOMDocument(); $d->loadHTML($yourWellFormedHTMLString); Then you'll want to locate the document node that you want to alter. You can do this using XPath: $xpathsearch = new DOMXPath($d); $nodes = $xpathsearch->query('//div[contains(@class,'main')]'); Then you'll want to iterate over matching nodes, and create new nodes inside: foreach($nodes as $node) { $newnode = $d->createDocumentFragment(); $newnode->appendXML($yourCodeYouWantToFillIn); $node->appendChild($newnode); } If you don't mind messing around with a library at an early stage of development, take a look at CAST (content-addressed style templating). It's pretty much designed to do what you're describing, and if nothing else, you could peer inside the source to see examples. (NOTE: I'm sure the astute will note that //div[contains(@class,'main')] isn't exactly the equivalent of the CSS selector div.main ... since the class attribute can contain more than one class. Doing this precisely is unwieldy enough I think it's better to start with the simplified expression when you're introducing people to it, even if it might best for those who go this route to eventually get to know xpath well enough to handle this right. Or, just use ids more instead of classes. :)
