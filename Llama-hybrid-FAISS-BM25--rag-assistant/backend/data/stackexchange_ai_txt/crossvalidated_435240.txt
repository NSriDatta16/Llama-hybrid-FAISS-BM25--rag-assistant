[site]: crossvalidated
[post_id]: 435240
[parent_id]: 
[tags]: 
time series decomposition and multivariate models

I have a series of time series data which looks like: # A tibble: 1,095 x 5 date ts1 ts2 ts3 ts4 1 2013-01-01 23 33 29 10 2 2013-01-02 98 110 105 84 3 2013-01-03 72 108 76 27 4 2013-01-04 129 186 109 69 5 2013-01-05 135 163 173 146 6 2013-01-06 116 155 115 98 7 2013-01-07 48 81 49 45 8 2013-01-08 60 53 54 36 9 2013-01-09 44 40 55 36 10 2013-01-10 51 101 82 48 # ... with 1,085 more rows Lets say I want to predict ts1 using the data from ts2 , ts3 and ts4 . I could add in a number of time series features based on the date etc. weekday, weekend etc. Say I use a model such as SVM, RandomForest etc. (the model is not important just that it can take in multivariate data and make a regression prediction). What would be the best way for me to tackle this problem? With the data I do the following: library(lubridate) library(forecast) library(dplyr) timeseriesdata % mutate( day = day(date), month = month(date) # create # normal time series features based on the # date ) %>% as.ts(frequency = 365) Which just creates some additional features and puts the data into time series (incorrectly, puts the data into time series) Time Series: Start = 1 End = 6 Frequency = 1 date ts1 ts2 ts3 ts4 day month 1 15706 23 33 29 10 1 1 2 15707 98 110 105 84 2 1 3 15708 72 108 76 27 3 1 4 15709 129 186 109 69 4 1 5 15710 135 163 173 146 5 1 6 15711 116 155 115 98 6 1 Next: The variables in the model are seasonal so I want to decompose them. ts2_decomp % tbats() ts3_decomp % tbats() I can plot these: plot(ts2_decomp) plot(ts2_decomp) In a standard decomposition model I can do something like Y_t - S_t to remove the seasonal component. My question is, as part of the inputs to my "SVM/RandomForest" model what can I now add into the model, now that I have removed the seasonal, trend and cyclical components, or separated them? That is, do I feed the model the fitted.values ? or should I take the S , the C and the T decomposed values and feed these to the model as "new information/variables". If this is "allowed" how can I access the level , season1 and season2 parts of the tbats decomposition? I am just a little confused here since previously I was just applying (naively) past ts2 , ts3 and ts4 (as well as past ts1 ) time series in order to try to predict future ts1 levels. I can add the fitted values back to the data to create my final data: decomped_ts_features $fitted.values, ts3_fitted = ts3_decomp$ fitted.values ), data.frame(timeseriesdata) ) %>% as_tibble() decomped_ts_features # A tibble: 1,095 x 9 ts2_fitted ts3_fitted date ts1 ts2 ts3 ts4 day month 1 71.8 57.0 15706 23 33 29 10 1 1 2 46.7 37.6 15707 98 110 105 84 2 1 3 93.5 85.9 15708 72 108 76 27 3 1 4 89.6 68.4 15709 129 186 109 69 4 1 5 87.4 51.9 15710 135 163 173 146 5 1 6 69.7 74.6 15711 116 155 115 98 6 1 7 110. 118. 15712 48 81 49 45 7 1 8 60.0 53.5 15713 60 53 54 36 8 1 9 50.3 57.0 15714 44 40 55 36 9 1 10 43.8 61.1 15715 51 101 82 48 10 1 Any advice would be great. Data: data
