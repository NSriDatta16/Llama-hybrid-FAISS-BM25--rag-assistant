[site]: stackoverflow
[post_id]: 4606805
[parent_id]: 4606469
[tags]: 
By "environment" they probably mean the equivalent of "scope" in other languages. Consider the following C fragment: if (7 Note that in the outer scope (marked out by the outer set of braces) the only variable is j. In the inner scope there is a new j and a k. So there are three variables here, the outer j, and the inner j and k. One way of implementing this is to define a scope to be a list of "environments". As you enter a new block, you put another "environment" in your list. When looking up variables by name, you look first in the most recently added "environment". If it isn't found there, you move along the list of environments to the next and look there, and so on. An "environment" itself is often just a list of pairs, matching up names of variables with values. So it sounds like you are being asked to pass such a list to your function, each pair giving the symbol for a boolean variable and its value. Based on which variables are currently "in scope", you fetch their values out of the environment and use them in the expressions you are evaluating (according to that expression grammar you've been given). In your case, it sounds like you aren't being asked to worry about which enviroments are in scope. You just have one environment, i.e. one list of pairs. Sounds like a fair bit of work, good luck! One reference that might help is: http://michaux.ca/articles/scheme-from-scratch-bootstrap-v0_9-environments
