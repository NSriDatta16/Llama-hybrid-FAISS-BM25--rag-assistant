[site]: stackoverflow
[post_id]: 2200884
[parent_id]: 2178618
[tags]: 
This should do the trick, it's hardly elegant but it shouldn't be too hard to refine it: $(document).ready(function() { if ($.browser.version = jQuery.browser.msie && parseInt(jQuery.browser.version) == 6) { } else { $("#sidebar").fadeTo('fast', 0.5); $("#maindiv").hover(function() { /// The below line is what I just changed, putting the fadeTo() value /// to 0.5 causes the divs to fade out to be translucent. $("#primarycontainer,#sidebar").stop().fadeTo('fast', 0.5); }, function() { $("#sidebar").stop().fadeTo('fast', 0.5); $("#primarycontainer").stop().fadeTo('fast', 1); }); $("#sidebar").hover(function() { $(this).stop().fadeTo('fast', 1); $('#primarycontainer').stop().fadeTo('fast', 0.5); }, function() { $(this).stop().fadeTo('fast', 0.5); $('#primarycontainer').stop().fadeTo('fast', 1); }); } }); EDIT Ok, I get the feeling you've miscommunicated your intentions here: This code will: Fade #sidebar and #primarycontainer alternately on hover, with the container that is being hovered becoming completely opaque and the div that is not being hovered becoming translucent. Make #sidebar translucent when nothing is being hovered Make both #sidebar and #primarycontainer completely opaque when #maindiv is hovered over if that is not what you're trying to achieve, then alter the question slightly and I'll sort the code to do what you ask. As for #maindiv doing odd behaviour, it's most likely a quirk in your html or css, the jQuery code is sound.
