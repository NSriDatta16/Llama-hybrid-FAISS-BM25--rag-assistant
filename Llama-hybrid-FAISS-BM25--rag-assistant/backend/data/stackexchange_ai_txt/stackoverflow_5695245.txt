[site]: stackoverflow
[post_id]: 5695245
[parent_id]: 5694737
[tags]: 
Your code is not doing what you think it is. Look at this: query = "UPDATE customer" + " SET customer.cust_ID=custID, customer.sale_ID=saleID, customer.first_Name=firstName, customer.mI=mInitial, customer.last_Name=lastName, customer.street_Name=streetName, customer.city=city, customer.state=state, customer.zip_Code=zipCode,customer. DOB=DOB2, customer.agent_ID=agentID, customer.home_Phone=homePhone, customer.cell_Phone=cellPhone, customer.profession=profession, customer.employer=employer, customer.referrer=referrer" + " WHERE customer.cust_ID=custID " The content of query at this point is exactly what will be sent to the database. JSP will not magically fill in custID , saleID (etc...) for you before sending the query to the database. Because of this, Oracle has no sweet clue what custID is (it certainly isn't the name of some other column in the customer table). Hence, you receive the invalid identifier error. I think you were trying to do this: query = "UPDATE customer" + " SET customer.cust_ID=" + custID + ", customer.sale_ID=" + saleID + ... Like duffymo mentioned, this is asking for serious SQL-injection trouble (just think of the values that the client could submit in order to hijack your SQL via the custID field). The better way is to use parameters on a PreparedStatement : query = "UPDATE customer" + " SET customer.cust_ID=?, customer.sale_ID=? ..."; PreparedStatement statement = conn.prepareStatement(query); statement.setString(1, custID); statement.setString(2, saleID); statement.executeUpdate();
