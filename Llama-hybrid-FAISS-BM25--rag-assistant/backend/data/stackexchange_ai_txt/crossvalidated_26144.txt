[site]: crossvalidated
[post_id]: 26144
[parent_id]: 
[tags]: 
How to get real-valued continous output from Neural Network?

In most of the examples I've seen so far of neural networks, the network is used for classification and the nodes are transformed with a sigmoid function . However, I would like to use a neural network to output a continuous real value (realistically the output would usually be in the range of -5 to +5). My questions are: 1. Should I still scale the input features using feature scaling? What range? 2. What transformation function should I use in place of the sigmoid? I'm looking to initially implement it PyBrain which describes these layer types . So I'm thinking that I should have 3 layers to start (an input, hidden, and output layer) that are all linear layers? Is that a reasonable way? Or alternatively could I "stretch" the sigmoid function over the range -5 to 5?
