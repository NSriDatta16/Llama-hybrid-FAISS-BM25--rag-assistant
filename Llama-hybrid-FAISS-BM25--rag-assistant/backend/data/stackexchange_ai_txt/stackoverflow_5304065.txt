[site]: stackoverflow
[post_id]: 5304065
[parent_id]: 5296936
[tags]: 
Main shortcomings I would say is that the webhttpbinding makes it difficult to handle HTTP specific concerns. It works great if all you are doing is passing an object over HTTP that is serialized into XML or JSON and which may be transported over different formats. HTTP is much more than a simple transport protocol for XML and JSON, it is an application layer protocol with rich semantics. Web API is specifically targetting folks that want to build systems over HTTP that fully levergage HTTP's richness. Web API embraces that HTTP Resources can have a multitude of representations based on the needs of different clients. One end of the spectrum could be a dumb browser that just talks to a service using a Form url encoded post and a GET, while the other end could be a more rich client that uses Atom/OData or a hypermedia based media type. Web API embraces that there are other HTTP specific concerns like conneg, etags, etc which allow better leveraging intermediary web servers. Web API is designed with more testability in mind, thus you can address working with HTTP messages or other concerns in a more testable manner. Web API has a more simplified configuration story. You can read more about the rationale here: http://blogs.msdn.com/b/endpoint/archive/2010/11/01/wcf-web-apis-http-your-way.aspx
