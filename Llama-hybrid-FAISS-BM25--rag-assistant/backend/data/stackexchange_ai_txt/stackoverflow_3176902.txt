[site]: stackoverflow
[post_id]: 3176902
[parent_id]: 2720467
[tags]: 
I'm not familiar with the tools available in C#, but your question seems to be mostly one about storage rather than C#. How you store a DAG will no doubt depend on the use cases you have in mind. You can represent a DAG in two tables in a relational database, for example, where one table holds information about the nodes (A, B, C, etc.) and another holds information about the edges between the nodes (A -> B, A -> C, etc.). A graph database such as Neo4j might also be a good way to go. Your mileage will vary when it comes to things like horizontal scaling and concurrent access, depending on the approach you adopt. You may want to keep a denormalized representation around for speeding up some kinds of queries, but such a strategy involves tradeoffs you'll want to understand before going with it.
