[site]: stackoverflow
[post_id]: 3220663
[parent_id]: 3220456
[tags]: 
You could do something like this, but it is pretty ugly and I would not recommend it (see below for my actual suggestion about how to handle this issue). Create a dummy_field tinyint field, sum_position int field and average_position decimal field and run the following few statements within the same connection (I am usually very much against MySQL stored procedures, but in this case it could be useful to store this in a SP). SET @updated_ads := ''; SET @current_position := 0; UPDATE mytable SET view_counter= view_counter+1, dummy_field = (SELECT @updated_ads := CONCAT(@updated_ads,id,"\t",ad_text,"\r\n"))*0, /* I added *0 for saving it as tinyint in dummy_field */ sum_position = sum_position + (@current_position := @current_position +1), average_position = sum_position / view_counter ORDER BY view_counter DESC LIMIT 5; SELECT @updated_ads; Then parse the result string in your code using the delimiters you used (I used \r\n as a row delimiter and \t as the field delimiter). What I actually suggest you to do is: Query for selected ads. Write a log file with the selected ads and positions. Write a job to process the log file and update view_counter, average_position and sum_position fields in batch.
