[site]: stackoverflow
[post_id]: 2689660
[parent_id]: 2689566
[tags]: 
Two options; the simplest (but giving odd xml) is: XmlSerializer ser = new XmlSerializer(typeof(AList), new Type[] {typeof(B), typeof(C)}); With example output: The more elegant is: XmlAttributeOverrides aor = new XmlAttributeOverrides(); XmlAttributes listAttribs = new XmlAttributes(); listAttribs.XmlElements.Add(new XmlElementAttribute("b", typeof(B))); listAttribs.XmlElements.Add(new XmlElementAttribute("c", typeof(C))); aor.Add(typeof(AList), "ListOfBs", listAttribs); XmlSerializer ser = new XmlSerializer(typeof(AList), aor); With example output: In either case you must cache and re-use the ser instance; otherwise you will haemorrhage memory from dynamic compilation.
