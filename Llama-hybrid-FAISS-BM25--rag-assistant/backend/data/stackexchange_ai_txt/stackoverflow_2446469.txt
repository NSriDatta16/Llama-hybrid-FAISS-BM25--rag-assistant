[site]: stackoverflow
[post_id]: 2446469
[parent_id]: 2446147
[tags]: 
To set the permissions pragmatically you need to do the following. 1) Break Role Inheritance of the item 2) Add the new role assignment To break the Break Role Inheritance of an item you call the BreakRoleInheritance method on the item, passing true will copy the current permissions for the list to the item. item.BreakRoleInheritance(false); You then need to get the items Role Assignments collection and add a new role assignment to it. The role assignment is created for a SPPrincipal and has a SPRoleDefinition bound to it. SPRoleAssignmentCollection rolesAssignments = item.RoleAssignments; SPRoleAssignment userRoleAssignment = new SPRoleAssignment(principal); userRoleAssignment.RoleDefinitionBindings.Add(roleDefinition); rolesAssignments.Add(userRoleAssignment); To fetch a Role Definition you can go to the current SPWeb’s FirstUniqueRoleDefinitionWeb property so you keep any customisations that have been made to your sites permissions and then use the SPWeb’s Role Definitions Collection. (I am not too sure of the disposal pattern for the FirstUniqueRoleDefinitionWeb property, if you are using SPContext Dont dispose it) if (web.FirstUniqueRoleDefinitionWeb != null) { using (SPWeb firstUniqueRoleDefinitionWeb = web.FirstUniqueRoleDefinitionWeb) { return firstUniqueRoleDefinitionWeb.RoleDefinitions[roleName]; } } return web.RoleDefinitions[roleName]; Hope this helps you in the right direction
