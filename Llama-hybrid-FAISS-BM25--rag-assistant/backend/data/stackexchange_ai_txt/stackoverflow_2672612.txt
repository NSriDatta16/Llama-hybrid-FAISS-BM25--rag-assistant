[site]: stackoverflow
[post_id]: 2672612
[parent_id]: 2671474
[tags]: 
Thank you Marcel. You're right, the trick is to clone the range, then remove the specific original range. This way we can revert to the cloned range. Your help led me to the below code, which switches the selection to elsewhere, and then back according to a timeout. I couldn't have done it without you, and grant you the correct answer for it :D addRange test #trigger { background: lightgreen } Switch to this text This is some (rather short) text. Trigger testCase(). var origRange; var s = window.getSelection(); var reselectFunc = function () { s.removeAllRanges(); s.addRange(origRange); }; var testCase = function () { // Before modifying selection, save it var userSelection,selectedText = ''; if(window.getSelection){ userSelection=window.getSelection(); } else if(document.selection){ userSelection=document.selection.createRange(); } selectedText=userSelection; if(userSelection.text){ selectedText=userSelection.text; } if(/msie|MSIE/.test(navigator.userAgent) === false){ /* you shouldn't do this kind of browser sniffing, users of Opera and WebKit based browsers can easily spoof the UA string */ selectedText=selectedText.toString(); } origRange = userSelection; var range = s.getRangeAt(0); origRange = range.cloneRange(); var sasDom = document.getElementById("switch"); s.removeRange(range); range.selectNode(sasDom); s.addRange(range); window.setTimeout(reselectFunc, 1000); }; window.onload = function () { var el = document.getElementById("trigger"); el.onmouseover = testCase; };
