[site]: stackoverflow
[post_id]: 3218718
[parent_id]: 3161119
[tags]: 
I am not an C# expert but I would say that this is because in production your code is optimize in static void TestGC() { WeakReference w1 = new WeakReference(new Object()); WeakReference w2 = new WeakReference(new Object()); GC.Collect(); Console.WriteLine("o1 is alive: {0}", w1.IsAlive); Console.WriteLine("o2 is alive: {0}", w2.IsAlive); } No more o1, o2 binding remain. EDIT: This is a Compiler optimization named constant folding. Which can be done with or without a JIT. If you have a way to disable the JIT but kept the release optimization you're gonna have the same behavior. People should pay attention to the note: NOTE : this occurs only when the code is compiled in Release mode and run outside the debugger this is the key. PS: I am also assuming that your understand what WeakReference mean.
