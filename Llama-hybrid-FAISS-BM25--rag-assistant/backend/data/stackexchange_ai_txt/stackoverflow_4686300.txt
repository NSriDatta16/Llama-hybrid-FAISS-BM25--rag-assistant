[site]: stackoverflow
[post_id]: 4686300
[parent_id]: 4684906
[tags]: 
Here's an example of usage for anyone else that's wondering. It automatically loads user data from ldap when you read an organizationalRole . UserRole class: @LDAPObject(structuralClass="organizationalRole", defaultParentDN="dc=Roles,dc=example,dc=com") public class UserRole extends LDAPModel implements models.deadbolt.Role { @LDAPField(attribute="cn",inRDN=true,filterUsage=FilterUsage.ALWAYS_ALLOWED) public String name; private List members; public List getMembers() { return members; } /** * Called when creating a Java object from an LDAP entry. */ @LDAPSetter(attribute="roleOccupant") void initMembers(String[] occupants) throws LDAPException { members = new ArrayList (); if (occupants == null || occupants.length == 0) return; for (String dn : occupants) members.add(User.findByDN(dn)); } /** * Called when turning a Java object into an LDAP entry. */ @LDAPGetter(attribute="roleOccupant") String[] storeMembers() { if (members == null) return null; String[] member_strings = new String[members.size()]; for (int i = 0; i User class: @LDAPObject(structuralClass="inetOrgPerson", auxiliaryClass={"mozillaOrgPerson","posixAccount","sambaSamAccount","shadowAccount"}, defaultParentDN="dc=People,dc=example,dc=com") public class User extends LDAPModel implements RoleHolder { ... @LDAPField(attribute="givenName",filterUsage=FilterUsage.ALWAYS_ALLOWED) public String fname; @LDAPField(attribute="sn",filterUsage=FilterUsage.ALWAYS_ALLOWED) public String lname; public static User findByDN(String dn) throws LDAPException { LDAPConnection conn = ... LDAPPersister persister = LDAPPersister.getInstance(User.class); return persister.get(dn, conn); }
