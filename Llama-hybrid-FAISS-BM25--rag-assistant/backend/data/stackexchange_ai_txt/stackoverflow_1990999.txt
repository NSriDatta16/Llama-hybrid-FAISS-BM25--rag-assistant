[site]: stackoverflow
[post_id]: 1990999
[parent_id]: 1989008
[tags]: 
Maybe have a look at Glassbox a troubleshooting agent for Java applications that automatically diagnoses common problems . From Glassbox - Automated monitoring and troubleshooting using AOP : Glassbox deploys as a war file to your appserver and then uses AspectJ load time weaving to monitor application components and other artifacts, in order to identify problems like excess or failed remote calls, slow queries, too many database queries, thread contention, even what request parameters caused failures. All this without changing the code or the build process. (...) Glassbox monitors applications non-invasively by using aspects to track component interactions. We also monitor built-in JMX data, notably on a Java 5 VM we sample thread data (every 100 ms by default). As a request is processed, we summarize noteworthy events such as where time was spent and what parameters were involved in making things slow or fail. We also detect higher-level operations (such as Struts actions or Spring controllers) that we use to report on. Our AJAX Web client then provides summaries of status by operation on the machines being monitored and we generate a more detailed analysis on request. Glassbox allows monitoring clusters of servers: the Web app uses JMX Remote or direct RMI to access data from remote servers. We also provide JMX remote access to the lower-level summary statistics. It's a nice application, give it a try.
