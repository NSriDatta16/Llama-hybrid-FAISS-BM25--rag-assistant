[site]: stackoverflow
[post_id]: 5282447
[parent_id]: 
[tags]: 
NSURLDownload resumeData nil

I've written an download tool. It's working fine with NSURLDownload. But when it comes to resuming downloads I have some problems. The resumeData is always nil! When I download the same files with jDownloader, stop the download and resume again, jDownloader resumes the download! So is is possible with this files and the server! code: - (void)startDownload { status = @"loading"; NSURLRequest *theRequest = [NSURLRequest requestWithURL:[NSURL URLWithString:url] cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:60.0]; urlDownload = [[NSURLDownload alloc] initWithRequest:theRequest delegate:self]; [urlDownload setDeletesFileUponFailure:NO]; if (!urlDownload) { [self error:@"Failed starting download request!"]; } } test: - (IBAction)stopWithResumeOption:(id)sender { [urlDownload cancel]; NSData *tempData = [urlDownload resumeData]; NSLog(@"%@",tempData); } If I stop the download while loading with "stopWithResumeOption" I get always nil! Am I missing something?! Edit: What info does the resumeData return at all? If it is only the length of the already downloaded data or something, maybe I can create this resumeData by myself?! Anyone tried this before? Edit 2: Here is the response header of one file I'm trying to resume: { "Accept-Ranges" = bytes; "Cache-Control" = "max-age=0"; Connection = "keep-alive"; "Content-Length" = 43346723; "Content-Type" = "application/pdf"; Date = "Sun, 13 Mar 2011 13:08:44 GMT"; Etag = 1185n; Pragma = public; Server = dbws; "X-Robots-Tag" = "noindex,nofollow"; } Even an ETag is provided by the server! Is there a chance to do it this way: - (IBAction) resume:(id)sender { NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:url] cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:60.0]; NSString *authHeader = [NSString stringWithFormat:@"bytes=%llu-%llu",bytesReceived, totalBytesToLoad]; [request addValue:authHeader forHTTPHeaderField:@"Range"]; urlDownload = [[NSURLDownload alloc] initWithRequest:request delegate:self]; } But I'm not sure how to go on with this try...
