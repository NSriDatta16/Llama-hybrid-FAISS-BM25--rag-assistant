[site]: stackoverflow
[post_id]: 3296822
[parent_id]: 3296620
[tags]: 
I find the logic of a 'jack of all trade but master of none' can sometimes be a fallacy. A broad knowledge of different fields, programming languages and technologies can let you see patterns, relationships and solutions which you would be oblivious to if you only knew or worked with a very specific set of tools. There is a phrase people in medicine use: 'show an oncologyst a patient and they will find a cancer, show a neurologist the same patient and they will find a neurological disease' . Sometimes being very specialised biases your view to such an extent that you try and apply your very specific knowledge to fit a problem rather than looking for the best solution. This does not however mean you cannot be an expert at many things. You mentioned you had only been programming for a year. You are obviously very enthusiastic and have aptitude, but thats a very short time. You will have many years to become intimately familiar with many aspects of your craft. Has anyone of you been proficient in more than just one programming language There are only a few distinct language paradigms, and within those most languages only vary significantly by syntax, library support and programming environments. Once you learn a few types of languages learning more becomes trivial (I guess similarly to natural languages). Personally I would not consider simply knowing many languages a sign of being well rounded in computer science/software development. It's pretty well taken for granted you should be able to pick up a given language or dev environment without much effort. Being familiar with different fields, such as Machine learning, Artificial Intelligence, Numerical Modelling, Computer Vision, Computer Graphics, many branches of higher mathematics, etc... is much more difficult to achieve and maintain. Such things I often lament not knowing and seemingly not having enough time to experiment with. I guess it depends on what you need to use though.
