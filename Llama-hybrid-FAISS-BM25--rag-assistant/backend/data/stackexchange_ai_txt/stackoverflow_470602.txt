[site]: stackoverflow
[post_id]: 470602
[parent_id]: 469913
[tags]: 
You need to use lookahead as some of the other responders have said, but the lookahead has to account for other characters between its target word and the current match position. For example: (?=.*word1)(?=.*word2)(?=.*word3) The .* in the first lookahead lets it match however many characters it needs to before it gets to "word1". Then the match position is reset and the second lookahead seeks out "word2". Reset again, and the final part matches "word3"; since it's the last word you're checking for, it isn't necessary that it be in a lookahead, but it doesn't hurt. In order to match a whole paragraph, you need to anchor the regex at both ends and add a final .* to consume the remaining characters. Using Perl-style notation, that would be: /^(?=.*word1)(?=.*word2)(?=.*word3).*$/m The 'm' modifier is for multline mode; it lets the ^ and $ match at paragraph boundaries ("line boundaries" in regex-speak). It's essential in this case that you not use the 's' modifier, which lets the dot metacharacter match newlines as well as all other characters. Finally, you want to make sure you're matching whole words and not just fragments of longer words, so you need to add word boundaries: /^(?=.*\bword1\b)(?=.*\bword2\b)(?=.*\bword3\b).*$/m
