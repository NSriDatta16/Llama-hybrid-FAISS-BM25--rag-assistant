[site]: stackoverflow
[post_id]: 294009
[parent_id]: 
[tags]: 
Elegant Object comparison

When comparing two objects (of the same type), it makes sense to have a compare function which takes another instance of the same class. If I implement this as a virtual function in the base class, then the signature of the function has to reference the base class in derived classes also. What is the elegant way to tackle this? Should the Compare not be virtual? class A { A(); ~A(); virtual int Compare(A Other); } class B: A { B(); ~B(); int Compare(A Other); } class C: A { C(); ~C(); int Compare(A Other); }
