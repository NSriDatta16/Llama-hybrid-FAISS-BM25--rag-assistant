[site]: crossvalidated
[post_id]: 213086
[parent_id]: 
[tags]: 
MLE vs. Optimization in R to find best performer

I have data that looks like this: machine = c(rep("A",10),rep("B",6),rep("C",7)) score1 = c(.0,.2,.34,.69,.50,.50,.23,.63,.69,.98,.39,.40,.45,.45,.46,.48,.69,.99,.66,.63,.16,.16,.55) score2 = c(.58,.78,.39,.25,.36,.4,.3,.10,.36,.15,.4,.49,.15,.14,.36,.98,.98,.40,.12,.12,.33,.1,.1) weightedscore = .5*score1 +.5*score2 d =data.frame(machine = machine , score1 = score1, score2 =score2, weightedscore = weightedscore ) d avg_score1 = aggregate(d$score1, by=list(d$machine), FUN=mean) avg_score2 = aggregate(d$score2, by=list(d$machine), FUN=mean)[2] avg_weightedscore = aggregate(d$weightedscore, by=list(d$machine), FUN=mean)[2] averages =cbind(avg_score1, avg_score2, avg_weightedscore) colnames(averages) I want to score all 23 observations across all 3 machines by combining score1 and score2 because my goal is to rank the machines by who is best at maximizing score1 and score2. Initially my score has a 50/50 weighting: weightedscore = .5*score1 +.5*score2 But I'd like to find the optimal weights that maximize both score 1 and score 2. How would that be done or is there a better way to rank the machines based on who is best at maximizing score1 and score2? Thank you.
