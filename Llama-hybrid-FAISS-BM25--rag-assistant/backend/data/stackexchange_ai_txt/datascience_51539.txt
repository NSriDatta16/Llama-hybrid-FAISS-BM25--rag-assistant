[site]: datascience
[post_id]: 51539
[parent_id]: 51323
[tags]: 
I solved this issue with the help of @Franziska W. Thanks! I currently reverse transform y_test and y_pred and then calculate the metrics as following: # qt_y is a QuantileTransformer instance, gb is a GradientBoostingRegressor y_pred = gb.predict(X_test) inv_y_pred = qt_y.inverse_transform(y_pred.reshape(-1, 1)) inv_y_test = qt_y.inverse_transform(y_test.reshape(-1, 1)) mse_test = mean_squared_error(inv_y_test, inv_y_pred) print("RMSE on Test:", np.sqrt(mse_test)) print("MSE on Test:", mse_test) mae_test = mean_absolute_error(inv_y_test, inv_y_pred) print("MAE on Test:", mae_test)
