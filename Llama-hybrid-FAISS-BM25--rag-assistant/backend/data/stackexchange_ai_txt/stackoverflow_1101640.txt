[site]: stackoverflow
[post_id]: 1101640
[parent_id]: 1101611
[tags]: 
The itertools package provides additional generator-style functions. For instance, you can use izip in place of zip to save on some memory. You could also perhaps write an average function so you can turn diffs into a generator instead of a list comprehension: from itertools import izip def average(items): sum, count = 0, 0 for item in items: sum += item count += 1 return sum / count diffs = (j - i for i, j in izip(oil_changes[:-1], oil_changes[1:]) next_oil = oil_changes[-1] + average(diffs) Alternatively, you could change your definition of diffs to: diffs = [oil_changes[i] - oil_changes[i-1] for i in xrange(1, len(oil_changes))] I dunno, it's not really a huge improvement. Your code is pretty good as is.
