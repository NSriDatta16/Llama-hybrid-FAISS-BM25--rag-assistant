[site]: stackoverflow
[post_id]: 5325774
[parent_id]: 
[tags]: 
Read cross domain JSON response

$.ajaxSetup( {contentType: 'application/json'} ); function submit_data(f){ alert('submitting') var data_string = $(f).serialize(); $.ajax({ url: "http://localhost:3000/application/1/contact_us.json?jsonpcallback=?"+data_string, dataType: "jsonp", type : 'post', processData: false, crossDomain: true, contentType: "application/json", jsonp: false, jsonpcallback: result() }); } function result(){ alert('back in') alert(data) } function jsonp1300279694167(){ alert('dhoom') } I have script above querying across domain and posting data within a form. Everything seems to work fine. JSON response can be seen in the firebug console. I want to process the response and display status messages accordingly to the user. How should I achieve it? UPDATE I have tried as suggested by T.J. Crowder but have no luck yet. The modified code is as below function submit_data(f){ alert('submitting') var data_string = $(f).serialize(); $.ajax({ url: "http://localhost:3000/application/1/contact_us.json?"+data_string, dataType: "jsonp", crossDomain: true, success: handleSuccess() }); } function handleSuccess(data) { alert("Call completed successfully"); alert(data); } This does not accesses data and alerts undefined . If I try to pass it from success: handleSuccess() it errors and redirects with a http request. I am getting response from a Ruby on Rails application. Here is the method I am hitting def create errors = ContactUsForm.validate_fields(params) logger.info errors.inspect if errors.blank? respond_to do |format| format.json {render :json => {:status => 'success'}.to_json} end else respond_to do |format| format.json {render :json => {:status => 'failure', :errors => errors}.to_json} end end end Is there any thing that I need to configure in my rails app
