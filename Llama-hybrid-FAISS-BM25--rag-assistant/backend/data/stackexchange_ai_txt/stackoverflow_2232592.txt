[site]: stackoverflow
[post_id]: 2232592
[parent_id]: 2232492
[tags]: 
Unless you are using Data Transfer Objects (DTO) for persistence and using that model, having a root object for persist-able classes in my experience greatly decreases code repetition and increases developer productivity. And even when using a DTO, I think it could be helpful though I rarely use DTOs so can't speak from experience. I would not consider it code smell for the following reasons: Increase in productivity of developers. Consolidates persistence code in one class. Easy to change to another framework that implements the same methodology (have to only change inheritance of all your business classes, and update checks of the original root class). Edit: Inline statichippo's answer, I agree with his opinion about this base class including information about the underlying data storage mechanisms (such as table/column names, database type, etc).
