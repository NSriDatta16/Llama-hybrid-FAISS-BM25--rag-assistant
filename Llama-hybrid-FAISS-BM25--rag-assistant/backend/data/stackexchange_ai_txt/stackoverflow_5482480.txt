[site]: stackoverflow
[post_id]: 5482480
[parent_id]: 
[tags]: 
How does HttpServletRequest.getParameter work?

I have a code in search.java which uses getParameter and xmltransform. I am using search.java to search a database of books depending on the title given. For all the criteria I get the output. But when I give C++ as the title in index.jsp which sends the value of the title to search.java. The search.java uses getParameter method to receive the input. My program gives me the output but taking C as the title. The problem is that the getParameter is called twice. First when it is called it gets C++ but after xmltransform when I use getParameter again it gets C. That is why I get only books pertaining to the title C. The code is as follows protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { Boolean access = (Boolean) request.getSession().getAttribute("access"); if (access == null) access = false; if (contextPath == null) //contextPath = HOST + getServletContext().getContextPath() + "\\"; //changed the above line to get http://localhost:8085/SemanticWeb contextPath = HOST + getServletContext().getContextPath() + "/"; System.out.println(contextPath); System.out.println("Search in doget"); SemanticSearch semsearch = new SemanticSearch(request.getSession()); System.out.println("After getsession"); semsearch.loadData(REALPATH + RDFDATASOURCEFILE); String xml = request.getParameter("xml"); String title = request.getParameter("s"); /*Writer writer = response.getWriter(); writer.write(request.getParameter("s"));*/ System.out.println("the value of s taken by getparameter " +title); System.out.println("After ASOURCEFILE"); // Ask just for XML Response if (xml != null && xml.equals("1") && title != null) { System.out.println("this is xml "+xml); //response.setCharacterEncoding("UTF-8"); response.setContentType("text/html; charset=utf-8"); System.out.println("Search for Title in search.java"); System.out.println("This is the title "+title); semsearch.searchForTitleXML(response.getOutputStream(), null, title); System.out.println("Back in Search.java"); return; } System.out.println("This is the title just before xmltransform "+title); xmlTransform(contextPath + "Search?xml=1&s=" + title, contextPath + (access ? "xsl\\data_admin.xsl" : "xsl\\data.xsl"), response.getOutputStream()); //System.out.println(xmlResponse); System.out.println("Done in Search.java"); } public static void xmlTransform(String xml_uri, String xsl_uri, OutputStream out) { // JAXP reads Data trough Source-Interface Source xmlSource = new StreamSource(xml_uri); Source xsltSource = new StreamSource(xsl_uri); System.out.println("I am here"); System.out.println("This is the xmlsource "+xml_uri); System.out.println("This is the xmlsource "+xsl_uri); // Factory-Pattern supports different XSLT-Processors TransformerFactory transFact = TransformerFactory.newInstance(); System.out.println("checking"); Transformer trans; System.out.println("checking_1"); try { System.out.println("checking_1"); trans = transFact.newTransformer(xsltSource); System.out.println("checking_2"); trans.transform(xmlSource, new StreamResult(out)); System.out.println("checking_3"); System.out.println("Done here"); } catch (TransformerConfigurationException e) { //System.out.println("After error in xmltransfrom"); System.out.println("Caught here"); e.printStackTrace(); } catch (TransformerException e) { System.out.println("Here I am there"); e.printStackTrace(); } } } The output is as follows http://localhost:8086/SemanticWeb/ Search in doget After getsession the value of s taken by getparameter C++ After ASOURCEFILE This is the title just before xmltransform C++ I am here This is the xmlsource http://localhost:8086/SemanticWeb/Search?xml=1&s=C++ This is the xmlsource http://localhost:8086/SemanticWeb/xsl\data.xsl checking checking_1 checking_1 checking_2 http://localhost:8086/SemanticWeb/ Search in doget After getsession the value of s taken by getparameter C After ASOURCEFILE this is xml 1 Search for Title in search.java This is the title C Search for title in semantic search.java PREFIX kb: SELECT * WHERE {?x kb:Price ?price. ?x kb:Currency ?currency. ?x kb:Title ?title. ?x kb:Count ?count. OPTIONAL {?x kb:Description ?description}.FILTER regex(?title, "(^|\\W)C (\\W|$)")}ORDER BY ?title The above query is due to semanticsearch.java file. Done in SemanticSearch Back in Search.java checking_3 Done here. Can you tell me why getParameter when called twice erases ++ from C?
