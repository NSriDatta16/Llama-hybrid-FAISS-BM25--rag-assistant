[site]: stackoverflow
[post_id]: 2246419
[parent_id]: 2022448
[tags]: 
I've made a separate module to handle all of my specializing between normal Linux, Maemo 4.1, and Maemo 5. It detects what features are available and allows the program to gracefully degrade. For example def _fremantle_hildonize_window(app, window): oldWindow = window newWindow = hildon.StackableWindow() oldWindow.get_child().reparent(newWindow) app.add_window(newWindow) return newWindow def _hildon_hildonize_window(app, window): oldWindow = window newWindow = hildon.Window() oldWindow.get_child().reparent(newWindow) app.add_window(newWindow) return newWindow def _null_hildonize_window(app, window): return window try: hildon.StackableWindow hildonize_window = _fremantle_hildonize_window except AttributeError: try: hildon.Window hildonize_window = _hildon_hildonize_window except AttributeError: hildonize_window = _null_hildonize_window For more, see Dialcentral, Gonert, ejpi, or Quicknote's source code for a file called hildonize.py https://garage.maemo.org/plugins/ggit/browse.php/?p=gc-dialer;a=blob;f=src/hildonize.py ; Another example from The One Ring's GObject Utils (go_utils.py) def _old_timeout_add_seconds(timeout, callback): return gobject.timeout_add(timeout * 1000, callback) def _timeout_add_seconds(timeout, callback): return gobject.timeout_add_seconds(timeout, callback) try: gobject.timeout_add_seconds timeout_add_seconds = _timeout_add_seconds except AttributeError: timeout_add_seconds = _old_timeout_add_seconds
