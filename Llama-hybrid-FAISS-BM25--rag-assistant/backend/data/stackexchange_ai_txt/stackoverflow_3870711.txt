[site]: stackoverflow
[post_id]: 3870711
[parent_id]: 3870649
[tags]: 
The construct 'T()' creates a temporary of type 'T' which is basically not an Lvalue (but an Rvalue). $12.1/11 - "A functional notation type conversion (5.2.3) can be used to create new objects of its type. [ Note: The syntax looks like an explicit call of the constructor. 12 An object created in this way is unnamed. [ Note: 12.2 describes the lifetime of >temporary objects. —end note ] [ Note: explicit constructor calls do not yield lvalues, see 3.10. —end note ] The lifetime of this temporary is the end of the full expression i.e. the ending semicolon after the expression. $12.2/3 - "Temporary objects are destroyed as the last step in evaluating the full-expression (1.9) that (lexically) contains the point where they were created. This is true even if that evaluation ends in throwing an exception. The value computations and side effects of destroying a temporary object are associated only with the full-expression, not with any specific subexpression." $12.2/5- 'The lifetime of a temporary bound to the returned value in a function return statement (6.6.3) is not extended; the temporary is destroyed at the end of the full-expression in the return statement." Therefore your function tries to return a reference to a memory location whose storage duration is already over and the object has been destroyed. Therefore a warning. Note that this situation is not required to be explicitly diagnosed by the Standard and hence a warning.
