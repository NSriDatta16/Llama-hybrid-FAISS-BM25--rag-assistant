[site]: stackoverflow
[post_id]: 2484932
[parent_id]: 2480760
[tags]: 
Although I have not done it myself yet, it should be possible to use OS dependent plugin fragments for that task. I've seen those used for OS dependent SWT code in the Eclipse Delta Pack. 1) For each OS you want to support, define a plugin fragment, named by that OS. 2) The MANIFEST.MF files can contain a filter for the platform, as explained in an answer to another question. Set the Eclipse-PlatformFilter by adding the one of the following lines to the fragment's MANIFEST.MF: Eclipse-PlatformFilter: (osgi.os=win32) Eclipse-PlatformFilter: (osgi.os=macosx) Or use an OSGi filter for org.osgi.framework.os.name (recommended in the answer mentioned above), but I could not find in the 288 pages of spec how that filter would be declared. 3) Each fragment contains in its fragment.xml the menu structure for that OS. The plugin.xml of the original plugin only contains the common configuration, like the commands and handlers. You can add own menu contributions to predefined menus, if you know the menu ID. See the Eclipse Wiki on Menu Contributions and the Eclipse Help for org.eclipse.ui.menus .
