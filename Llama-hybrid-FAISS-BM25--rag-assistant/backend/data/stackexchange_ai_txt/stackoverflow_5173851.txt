[site]: stackoverflow
[post_id]: 5173851
[parent_id]: 5150135
[tags]: 
I'd imagine the best way to do this would be to do something like: var bufferInteger = 0, dragParent = $( container ), dragChildren = {}; (function layerCalculation(){ dragParent.find('.draggable').each(function(index, val){ var child = $(val), childOffset = { top : child.offset().top, left : child.offset().left, width : child.width(), zIndex : child.css('z-index') }; dragChildren[child.attr('id')].top = childOffset.top; dragChildren[child.attr('id')].left = childOffset.left; dragChildren[child.attr('id')].width = childOffset.width; dragChildren[child.attr('id')].zIndex = childOffset.zIndex; }); }()); function detectHover(ui){ var currentlyOver, uiElement = ui.helper[0], underStacked = dragChildren, draggedItem = { id : uiElement.id, offset : { left : uiElement.offsetLeft, top : uiElement.offsetTop } }; underStacked.splice(understacked.indexOf(draggedItem.id), 1); for (var i in underStacked){ if ((underStacked[i].left 9){ bufferInteger = 0; detectHover(ui); ... // do something with return ID here. } } });
