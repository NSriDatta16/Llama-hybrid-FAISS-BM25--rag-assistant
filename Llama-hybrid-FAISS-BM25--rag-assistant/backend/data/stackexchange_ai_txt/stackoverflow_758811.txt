[site]: stackoverflow
[post_id]: 758811
[parent_id]: 
[tags]: 
Question about java garbage collection

I have this class and I'm testing insertions with different data distributions. I'm doing this in my code: ... AVLTree tree = new AVLTree(); //insert the data from the first distribution //get results ... tree = new AVLTree(); //inser the data from the next distribution //get results ... I'm doing this for 3 distributions. Each one should be tested an average of 14 times, and the 2 lowest/highest values removed from to compute the average. This should be done 2000 times, each time for 1000 elements. In other words, it goes 1000, 2000, 3000, ..., 2000000. The problem is, I can only get as far as 100000. When I tried 200000, I ran out of heap space. I increased the available heap space with -Xmx in the command line to 1024m and it didn't even complete the tests with 200000. I tried 2048m and again, it wouldn't work. What I'm thinking is that the garbage collector isn't getting rid of the old trees once I do tree = new AVL Tree(). But why? I thought that the elements from the old trees would no longer be accessible and their memory would be cleaned up.
