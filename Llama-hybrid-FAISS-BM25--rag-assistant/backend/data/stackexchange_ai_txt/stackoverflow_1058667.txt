[site]: stackoverflow
[post_id]: 1058667
[parent_id]: 
[tags]: 
How to get streetaddress property of an organizational unit in windows active directory with LDAP in C#.Net

Each of our users is assigned to a primary organizational unit (OU) based on which global office they are in. So the "Chicago" OU contains all the associates in our Chicago office. Using c# and .net 3.5, my task is to extract all of these users. Unless the users are in a satellite or home office, their street address, city, state, etc. are empty, but the OU contains these details. When in Windows' Active Directory interface, right clicking on the OU and selecting properties gives a place to put all of this information just as on a user. However, when I try to access these properties like I do a user, I get an object reference error, suggesting these attributes do not exist the same way for an OU that they do for a user. How do/can I access these location parameters from an OU object? Here is a sample of the code I am using, showing streetaddress as an example, the statement trying to assign the value of streetaddress from the OU fails, where the assignment from associate succeeds. foreach (SearchResult subOU in results) { ResultPropertyValueCollection subColl = subOU.Properties["distinguishedname"]; string subPath = subColl[0].ToString(); DirectoryEntry subEntry = new DirectoryEntry("LDAP://" + subPath); DirectorySearcher userSearcher = new DirectorySearcher(subEntry); userSearcher.SearchScope = SearchScope.OneLevel; userSearcher.Filter = "(objectClass=user)"; foreach (SearchResult user in userSearcher.FindAll()) { ResultPropertyValueCollection userColl = user.Properties["distinguishedname"]; string userPath = userColl[0].ToString(); DirectoryEntry userEntry = new DirectoryEntry("LDAP://" + userPath); PropertyCollection associateProperties = userEntry.Properties; PropertyCollection ouProperties = subEntry.Properties; string streetAddress = string.Empty; if (associateProperties["streetaddress"].Value == null) { streetAddress = ouProperties["streetaddress"].Value.ToString(); } else { streetAddress = associateProperties["streetaddress"].Value.ToString(); } } }
