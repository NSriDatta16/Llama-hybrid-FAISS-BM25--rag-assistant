[site]: stackoverflow
[post_id]: 1795455
[parent_id]: 1795397
[tags]: 
You are misusing the term "scope". static in C has absolutely nothing to do with scope. Scope is the region where the name of an entity (variable, function, typename etc.) is visible. In C language "file scope" is the largest scope ever. For that reason, there's no point in limiting anything to a single file: there's simply nothing larger to limit. There's no such thing as "global scope" in C. The term "global scope" is sometimes used informally, but in that case it has the same meaning as "file scope". Again, static in C has absolutely nothing to do with scope . static in C affects storage duration of an object and linkage of an identifier. When used with objects (variables) static gives the object static storage duration (i.e. the object exists as long as the program runs). And, when used with identifiers of non-local objects or functions, it gives them internal linkage , meaning that the same identifier refers to the same entity within a single translation unit (where the entity is defined), but not in other translation units.
