[site]: crossvalidated
[post_id]: 598963
[parent_id]: 598945
[tags]: 
If a logistic regression model is being used, there will be no difference at all in performance between modeling Y as a factor or Y as an integer. It's possible that setting Y as a factor will change which class is being predicted (switch from predicting 0s to predicting 1s) so coefficients may be different, but as long as evaluation accounts for this, the performance will be the same. I do know that in some kinds of models (for example, randomForest::randomForest() ) turning Y into a factor tells the model to treat the task as a classification task rather than a regression. Perhaps your professor turned Y into a factor to ensure consistency in evaluation between different models. Treating y as a factor vs numeric variable is a separate issue from treating one of your features/covariates as a factor vs numeric variable. If you have a feature containing just 1s/0s, there will be identical performance regardless of whether you treat that feature as a factor or not. But, if a feature has 1s, 0s, and 2s, the function will create a different feature matrix (and will have different performance) if you treat the feature as a factor because it will create a dummy variables for 1s and 2s prior to running the model.
