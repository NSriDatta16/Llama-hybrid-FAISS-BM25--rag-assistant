[site]: stackoverflow
[post_id]: 2762039
[parent_id]: 2760817
[tags]: 
The issue isn't building / compiling the code, right? It compiles just fine, as you say. It uses classes, directly or indirectly, that are not available in Android. (And, I do stress that even if it compiles, it doesn't mean it will run on Android, as it may need classes at runtime that aren't in Android.) So the issue is getting these classes into your .apk. You can have the Android build inject copies of third-party libraries by adding them to external-libs . However I don't know that it works to just put the JDK's rt.jar file there (which has all java.net classes and everything else too). Your app will have second copies of standard Java libraries classes that will almost surely not be compatible in some way. I strongly suspect it won't work, or if it happens to, will be fragile. Is modifying the library so hard? If there are just a few java.net classes that aren't available, perhaps in a separate question you can solicit ideas about ways to work around not having them. Because actually in my experience Android has all the java.net classes so I'd be curious what's missing.
