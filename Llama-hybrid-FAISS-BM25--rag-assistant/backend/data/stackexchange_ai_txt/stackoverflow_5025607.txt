[site]: stackoverflow
[post_id]: 5025607
[parent_id]: 5025315
[tags]: 
People are answering your question at a very low level. Sometimes it help to think of the problem at a higher level. What you need is a type of state management. The fancy Computer Science term for that is a Finite State Machine. But don't bother looking that up right now. It's fairly dry and confusing at first :) Your character currently has one state - "standing around". You need to add and process the "walking to destination" state. From what I've read for other mousing input, I'm thinking I'll need some kind of loop You need one loop, called the game loop. If you're using XNA, you've already got one. But you're on the right track. Every time through the game loop, you should process the current state, and check for what are called State Transitions. That's when you change something in your world from one state to another state. For example, when you click the mouse, you want the guy to start moving. In your game loop you check to see if a mouse click just happened. If it did, then set up some data (where to move to), and tell him to start walking by setting his state to "walking to destination". Next update, you'll process that state instead. When your character is in the "walking to desintation" state, you need to update their position, based on the amount of time that passed since the last game update. In XNA, this is calculated for you. If you're not using XNA, then you'll have to check yourself. You might be able to use something like the Stopwatch class, and check the Elapsed field. If the character is at the destination, you need to switch them back to the "standing around" state. If you receive another mouse click, it is up to you if you want the "walking to destination" state to pay attention to it or not. If you do pay attention to it, you set up the same sort of data as when you transitioned from the "standing around" state. So, you'll need these variables: A timer, to find out the elapsed time since the last game loop (XNA gives it to you) The current player state (maybe an enum ) The current player position (a vector) The walking speed of the player (a float, probably), measured in units per second (or millisecond) Data for the "walking to destination" state - target position (another vector) Data related to user input (mouse events that occurred since the last update, the position of those clicks, etc) The character specific data will be different for each character in your game, so you want a new copy of it for each. You'll probably want to put it in a class. The rest of it is more global, so you can keep it separate, or make it part of your game, game loop, input classes, etc (however you choose to organize it). I won't cover the vector math for how to actually calculate the partial movement stuff, since other people have covered that. No sense in duplicating those answers. It basically boils down to making a vector between your current position and the target position, and multiplying/dividing it by your walking speed (to chop it up to the distance moved in a single update).
