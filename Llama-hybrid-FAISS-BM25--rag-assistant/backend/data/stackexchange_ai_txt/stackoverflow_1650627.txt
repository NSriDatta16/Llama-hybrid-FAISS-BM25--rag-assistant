[site]: stackoverflow
[post_id]: 1650627
[parent_id]: 
[tags]: 
Designing the storage for a very large game world

I'm starting up game programming again. 10 years ago I was making games in qbasic and I havn't done any game programming since, so I am quite rusty. I have been programming all the time though, I am web developer/DBA/admin now. I have several questions, but I'm going to limit it to one per post. The game I am working on is going to be large, very large world. It is going to be somewhat like URW , but a even larger world and more like an 'RPG'. What I have been trying to decide, is what is the best way layout the map, save it, and access it. I thought up the idea of using sqlite to store the data. I could then even use the sqlite db as the save file for the game, nice and easy. Anyone have any tips about how I should go about this or ideas for other storage methods? Here are the requirements for my game: I need full random access to spot in the game world (the NPC's, monsters, animals will all be active all the time). I'm using Stackless Python 3.1, options are quite limited unless I do a lot of work. Needs to be able to handle a very large world. Concurrency support would be a plus, but I don't think I will need it.
