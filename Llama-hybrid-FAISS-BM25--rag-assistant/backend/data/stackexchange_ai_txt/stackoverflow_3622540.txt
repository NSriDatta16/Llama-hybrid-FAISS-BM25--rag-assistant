[site]: stackoverflow
[post_id]: 3622540
[parent_id]: 
[tags]: 
Groovy: strings with embedded quotes don't execute as expected

This is weird: using groovy strings to hold some command lines for execution, I find that sometimes if there are quote characters inside the string, the execution simply silently fails. WTF? (Updated, see below.) Here's my test program: print " 1: " ; "grep nameserver /etc/resolv.conf".execute().text.eachLine {println it } ; println "" print " 2: " ; "grep 'nameserver' /etc/resolv.conf".execute().text.eachLine {println it } ; println "" print " 3: " ; """grep nameserver /etc/resolv.conf""".execute().text.eachLine {println it } ; println "" print " 4: " ; """grep "nameserver" /etc/resolv.conf""".execute().text.eachLine {println it } ; println "" print " 5: " ; """grep 'nameserver' /etc/resolv.conf""".execute().text.eachLine {println it } ; println "" print " 6: " ; "awk /nameserver/ /etc/resolv.conf".execute().text.eachLine{ println it } ; println "" print " 7: " ; "awk '/nameserver/' /etc/resolv.conf".execute().text.eachLine{ println it } ; println "" print " 8: " ; """awk "/nameserver/" /etc/resolv.conf""".execute().text.eachLine{ println it } ; println "" print " 9: " ; """awk '/nameserver/' /etc/resolv.conf""".execute().text.eachLine{ println it } ; println "" print "10: " ; """awk "/nameserver/{print \$2}" /etc/resolv.conf""".execute().text.eachLine{ println it } ; println "" return Here's the results: $ groovy weird.groovy 1: nameserver 10.3.0.101 nameserver 10.4.1.237 nameserver 10.2.1.34 2: 3: nameserver 10.3.0.101 nameserver 10.4.1.237 nameserver 10.2.1.34 4: 5: 6: nameserver 10.3.0.101 nameserver 10.4.1.237 nameserver 10.2.1.34 7: 8: nameserver 10.3.0.101 nameserver 10.4.1.237 nameserver 10.2.1.34 domain lnx.copansys.com search lnx.copansys.com tst.copansys.com copansys.com 9: 10: Update Here's another example: "bash -c echo Hello".execute().text.eachLine{ println it } "bash -c echo 'Hello'".execute().text.eachLine{ println it } "bash -c echo \'Hello\'".execute().text.eachLine{ println it } Results: groovy> "bash -c echo Hello".execute().text.eachLine{ println it } groovy> "bash -c echo 'Hello'".execute().text.eachLine{ println it } groovy> "bash -c echo \'Hello\'".execute().text.eachLine{ println it } 'Hello!' Observe that embedding a backslash-quoted ' doesn't seem to help.
