[site]: stackoverflow
[post_id]: 2165871
[parent_id]: 2165329
[tags]: 
Simplify your calcDifference to take no parameters: Add these lines to your addRow function: txtItemAmount.className = "txtItemAmount"; // Add a class you can reference later txtItemAmount.addEventListener('keyup',calcDifference,false); // Add the key up handler And change calcDifference() to look at all elements with class "txtItemAmount": function calcDifference() { var txtAdjustmentAmount = parseFloat(document.getElementById('txtAdjustmentAmount').value); // Stores total of txtItemAmount elements var total = 0; var items = document.getElementsByClassName("txtItemAmount"); for(var i=0; i Update: If you want IE support, without having to rewrite or get a third-party getElementsByClassName function ( http://robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/ ), you can do this: You already track your element count in the hidden input txtIndex. You can use this to look through each element from 1-txtIndex. The problem with this is that this input can persist when you refresh the page, meaning your index will not match your page contents. What you should do is either keep a globally defined variable (such as iX) to track this information, or make sure that you reset the txtIndex on page load and use that to get each element. Assuming the latter: Add init call to body element: Add init function that initializes values: function init() { document.getElementById("txtIndex").value=1; // You could also clear out txtAdjustmentAmount and txtItemAmount1, // if you don't want these to persist after reloading the page document.getElementById("txtAdjustmentAmount").value=""; document.getElementById("txtItemAmount1").value=""; } Change calcDifference to use txtIndex and getElementById: function calcDifference() { var txtAdjustmentAmount = parseFloat(document.getElementById('txtAdjustmentAmount').value); // Stores total of txtItemAmount elements var total = 0; // Retrieve index value var iX = document.getElementById("txtIndex").value; for(var i=1; i
