[site]: stackoverflow
[post_id]: 4694024
[parent_id]: 4693792
[tags]: 
It depends on what you mean by "scaling" session storage. If your simply talking about session state performance, your not going to beat the in-process session state provider. Switching to the State Server provider will actually make things slower -- due to the extra overhead of serializing and transferring objects across process boundaries. Where the State Server can help you scale, is that it allows multiple machines in a load balanced web-farm to share a single session state. It is limited by machine memory, however, and if you will have lots of concurrent sessions you may want to use the SQL Session State provider. For the most performance in a web farm, you can also try using AppFabric as was previously suggested. I haven't done it myself but it is explained here. Also, here's a link for using Memcached as a Session State provider . Again, I haven't used it, so I can't offer an opinion on it... EDIT: As @HOCA mentions in the comments, there are 3rd party solutions if cost isn't an issue. One I've heard of (but not used) is ScaleOut SessionServer .
