[site]: stackoverflow
[post_id]: 5260003
[parent_id]: 5259245
[tags]: 
The web is stateless. Both ASP.NET and ASP.NET MVC have mechanisms for creating an application state. Advocates of MVC like that it provides the developer with more control over how state is managed and how requests affect the managed state than Web Forms. Web Forms encapsulates state with ViewState which is not part of MVC. The MVC pattern allows you to control every action (including managing the application state) on a much more granular level. This is probably where you got the idea that MVC is stateless. As a side note, you should favor using the TempDataDictionary over HttpSessionState for storing state-related data, because the default implementation the TempDataProvider is a wrapper of the HttpSessionState ). The pattern is a little different but a good article can be found at http://www.gregshackles.com/2010/07/asp-net-mvc-do-you-know-where-your-tempdata-is/ ASP.NET (and MVC) authentication usually works by leveraging Forms Authentication . It can be configured in your web.config . ASP.NET Authentication Configuration . If your client's browser supports cookies, the default behavior is for your authentication ticket to be stored in a cookie.
