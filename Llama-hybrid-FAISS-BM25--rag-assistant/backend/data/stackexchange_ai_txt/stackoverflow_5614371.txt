[site]: stackoverflow
[post_id]: 5614371
[parent_id]: 5611788
[tags]: 
I've managed to come up with my own more elegant solution that is both less code and will work with nested quotes. This will only parse the quotes, the content within and around the quotes will still need to be converted from bbcode, but there are plenty of resources available for that. function parse_quote($matches) { $bbcode = ''; preg_match_all('/(\w*?)=\'(.*?)\'/msi', $matches[1], $attr_matches); $attributes = array_combine($attr_matches[1], $attr_matches[2]); if(!empty($attributes)) { $attribute_strings = array(); foreach($attributes as $key => $value) { switch($key) { case 'id': $attribute_strings[] = ' Permalink '; break; case 'name': if(isset($quote['attributes']['user_id'])) { $attribute_strings[] = 'By '.$value.' '; } else { $attribute_strings[] = 'By '.$value; } break; case 'timestamp': $attribute_strings[] = 'On '.date('d F Y - H:i A', $value); break; } } { $citation = ' '.implode(' | ', $attribute_strings).' '."\n"; } } else { $citation = ''; } return $citation.' '; } $string = "[quote name='Rob' user_id='1' id='1' timestamp='1294120376'] [quote name='Rob' user_id='1' id='2' timestamp='1302442553'] [quote name='Rob' user_id='1' id='3' timestamp='1302442553'] Test at a comment of a third depth [/quote] Lorem ipsum dolor sit amet [/quote] This is my comment [/quote] [b]Test Comment[/b]"; $new_string = str_replace('[/quote]', ' ', $string); echo preg_replace_callback('/\[quote(.*?)\]/msi','parse_quote', $new_string); This should return the following By Rob | Permalink | On 04 January 2011 - 05:52 AM By Rob | Permalink | On 10 April 2011 - 14:35 PM By Rob | Permalink | On 10 April 2011 - 14:35 PM Test at a comment of a third depth Lorem ipsum dolor sit amet This is my comment Test Comment
