[site]: stackoverflow
[post_id]: 5280787
[parent_id]: 5251627
[tags]: 
So what i ended up doing was overriding bind on the top level form (the one for the User). In this method i check for the existence of the Orgainization and if it exists i attach it to the Member Profile object and then re-embed all the subforms. Ideally i would actually do this in the Member form but since the values are only bound at the top level form and then just cascade through the error schema for validation this seems to be a no go. Complete re-embedding seems to be required to get the object associations correct. Some sample code (less some sanitizing code on the member number before issuing the query): public function linkOrganizationIfExists(array $orgValues) { $defaultOrg = $this->embeddedForms['member_profile']->embeddedForms['organization']->getObject(); $table = $defaultOrg->getTable(); if(isset($orgValues['member_number']) && ($existingOrg = $table->findOneByMemberNumber($orgValues['member_number']))) { $user = $this->getObject(); $profile = $user->getMemberProfile(); $profile->Organization = $existingOrg; // prepare the current values from the db to return $orgValues = array_merge($orgValues, array_intersect_key($existingOrg->toArray(false), $orgValues)); $this->embedRelation('MemberProfile as member_profile', 'MemberProfileRegisttrationForm'); } return $orgValues; } public function bind(array $taintedValues = null, array $taintedFiles = null) { if(isset($taintedValues['member_profile']['organization'])) { $taintedValues['member_profile']['organization'] = $this->linkOrganizationIfExists($taintedValues['member_profile']['organization']); } parent::bind($taintedValues, $taintedFiles); }
