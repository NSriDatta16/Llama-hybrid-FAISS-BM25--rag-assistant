[site]: stackoverflow
[post_id]: 1152359
[parent_id]: 1152228
[tags]: 
Sirakov is right; Maven will download and install the plugins automatically when they are used. You can either run them directly (for one-off jobs), or configure them in your pom.xml - this also allows you to configure then, and set the to run automatically, for example, to generate source code or report on test coverage. A major advantage of this is that you can define a single set of plugin configs in a shared parent pom, and reuse the same configurations across across all your projects, while still being able to override the inherited configuration in each subproject where necessary - this is one of the biggest advantages of using Maven on larger projects. Each plugin has its own configuration parameters, the standard ones are documented at http://maven.apache.org/plugins/ . Another good resource is the O'Reilly Maven book, online at http://www.sonatype.com/books/maven-book/reference/ An example configuration for cobertura: org.apache.maven.plugins maven-pmd-plugin 2.3 ${project.build.directory}/pmd ${project.build.directory} true 100 3 **/Mock.* **/Dummy.* **/*Mock.java **/*Dummy.java true 1.5 pmd_ruleset.xml
