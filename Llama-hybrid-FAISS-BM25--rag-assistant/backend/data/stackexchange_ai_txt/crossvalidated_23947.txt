[site]: crossvalidated
[post_id]: 23947
[parent_id]: 23898
[tags]: 
First, I would advise you to not use squared error but the cross entropy error. Squared error results from the assumption that your labels are subject to Gaussian noise, which will probably not be the case. First, the output of your network should be a softmax: $z_k = \frac{\exp{y_k}}{\sum_i\exp{y_i}}$ This is basically a logistic regression layer on top of the neural network, and gives you a proper probability. You can train that with the cross entropy error function (see here for an explanation )--the derivatives stay the same as for squared error and linear outputs. Regarding the interpretation of the results: this is data set specific. If it is a hard task, that looks good. However, you should look at the acutal number of correct classifications in the end and see if that is good enough for your application. Anyway I think you will get better results if you use cross entropy.
