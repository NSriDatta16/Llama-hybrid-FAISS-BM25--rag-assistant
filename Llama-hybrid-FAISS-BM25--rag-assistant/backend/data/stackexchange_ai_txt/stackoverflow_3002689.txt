[site]: stackoverflow
[post_id]: 3002689
[parent_id]: 3002605
[tags]: 
You say you have an index, the explain says otherwise. However, if you really do, this is how to continue: If you have an index on the column, and MySQL decides not to use it, it may by because: There's another index in the query MySQL deems more appropriate to use, and it can use only one. The solution is usually an index spanning multiple columns if their normal method of retrieval is by value of more then one column. MySQL decides there are to many matching rows, and thinks a tablescan is probably faster. If that isn't the case, sometimes an ANALYZE TABLE helps. In more complex queries, it decides not to use it based on extremely intelligent thought-out voodoo in the query-plan that for some reason just not fits your current requirements. In the case of (2) or (3), you could coax MySQL into using the index by index hint sytax , but if you do, be sure run some tests to determine whether it actually improves performance to use the index as you hint it.
