[site]: stackoverflow
[post_id]: 4063820
[parent_id]: 4063423
[tags]: 
As larsman mentions, ntlk has a variety of different tokenizers that accept various options. Using the default: >>> import nltk >>> words = nltk.wordpunct_tokenize(''' ... broker ... broker' ... broker, ... broker. ... broker/deal ... broker/dealer' ... broker/dealer, ... broker/dealer. ... broker/dealer; ... broker/dealers), ... broker/dealers, ... broker/dealers. ... brokerag ... brokerage, ... broker-deal ... broker-dealer, ... broker-dealers, ... broker-dealers. ... brokered. ... brokers, ... brokers. ... ''') ['broker', 'broker', "'", 'broker', ',', 'broker', '.', 'broker', '/', 'deal', 'broker', '/', 'dealer', "'", 'broker', '/', 'dealer', ',', 'broker', '/', 'dealer', '.', 'broker', '/', 'dealer', ';', 'broker', '/', 'dealers', '),', 'broker', '/', 'dealers', ',', 'broker', '/', 'dealers', '.', 'brokerag', 'brokerage', ',', 'broker', '-', 'deal', 'broker', '-', 'dealer', ',', 'broker', '-', 'dealers', ',', 'broker', '-', 'dealers', '.', 'brokered', '.', 'brokers', ',', 'brokers', '.'] If you want to filter out list items that are punctuation only, you could do something like this: >>> filter_chars = "',.;()-/" >>> def is_only_punctuation(s): ''' returns bool(set(s) is not a subset of set(filter_chars)) ''' return not set(list(i)) >> filter(is_only_punctuation, words) returns >>> ['broker', 'broker', 'broker', 'broker', 'broker', 'deal', 'broker', 'dealer', 'broker', 'dealer', 'broker', 'dealer', 'broker', 'dealer', 'broker', 'dealers', 'broker', 'dealers', 'broker', 'dealers', 'brokerag', 'brokerage', 'broker', 'deal', 'broker', 'dealer', 'broker', 'dealers', 'broker', 'dealers', 'brokered', 'brokers', 'brokers']
