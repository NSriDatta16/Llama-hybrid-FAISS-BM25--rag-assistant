[site]: crossvalidated
[post_id]: 411256
[parent_id]: 
[tags]: 
When to use which classification model?

This is something that continues to give me trouble. Assuming I am working to extract a classification from a dataset and assuming I have the computing resources to do the necessary calculations (in R) is there ever any reason NOT to use a random forest, boosting or bagging (all of which appear to have multiple versions) model? If I'm doing consulting work for someone who doesn't have the computing resources to train the model then I can just save the model as a .rda file and include code to load it into R. According to http://topepo.github.io/caret/train-models-by-tag.html#Accepts_Case_Weights there are 51 different values that can work in the "method" argument that's part of caret::train (not all of which are classifiers), and I have a hard time believing that I'm expected to throw every one of them at every classification problem. What's the guideline? Can anyone point me to a paper or a powerpoint presentation or something? What's the best way to decide which model to use in my "train" statement?
