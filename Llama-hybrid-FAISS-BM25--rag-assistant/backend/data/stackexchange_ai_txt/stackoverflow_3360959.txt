[site]: stackoverflow
[post_id]: 3360959
[parent_id]: 3360925
[tags]: 
I think the question can better be put like this: save in a folder in the web application or close by and have the metadata stored in a database grab the saved images from a database via WCF The second approach would likely be rather slow. Grabbing information over a service, convert it, use an httphandler with the correct mime type to spit out the binary stream to the browser... Most architectures cut down in the middle: save the images close, or in, the UI layer and have the metadata about them stored in the database. Retrieval of that information's mostly just a bunch of strings so easily retrieved. Update for the new question: Since winforms applications/other projects were not in your original question this deviates into something new. In that case you go for some of the following scenarios: Use the WCF tier as a common ground and store the images behind that service. As I said it's going to be an extra to pull the byte arrays over. Store the images in the Web UI tier and have a service (asmx or WCF one) to expose the images to your winforms client. Make a share for the winforms client on the server where the web ui runs, and where the images are. Of course be sure to be respectful to security and possible hacks. It depends on what the most used scenario is. My assumption is that the web ui layer will be mostly used and the the winforms are going to be used for image manipulation? If so there are ASP.NET third party controls available for such manipulation as well so the need for a winforms client would decrease.
