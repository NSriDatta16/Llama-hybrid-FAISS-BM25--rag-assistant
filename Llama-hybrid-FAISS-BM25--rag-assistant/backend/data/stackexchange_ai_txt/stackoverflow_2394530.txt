[site]: stackoverflow
[post_id]: 2394530
[parent_id]: 
[tags]: 
Groovy/Grails validations and hasFieldErrors issue

I have created a custom tag that looks like this: def textField = { attrs -> def field = attrs.name.split('\\.')[-1] log.error("--------- Field is ${field}") if (attrs.bean && attrs.bean.errors.hasFieldErrors(field)) { def className = attrs.remove('class') def classStr = 'errors ' if (className) { classStr += className } attrs.put('class', classStr) attrs.put('value', attrs.bean[field]) attrs.remove('bean') } out I'm calling it in my GSP like this: ... And here is my domain-class class Client { String email String address String city String state String zip String firstName String lastName String phone String workPhone String mobilePhone String birthCountry String citizenshipCountry String emergencyContactName String emergencyPhone String disabilities String experience static constraints = { email(email:true, unique:true, blank:false) address(blank:false) city(blank:false) state(blank:false) zip(blank:false) firstName(blank:false) lastName(blank:false) phone(blank:false) emergencyContactName(blank:false) emergencyPhone(blank:false) workPhone(blank:true, nullable:true) mobilePhone(blank:true, nullable:true) birthCountry(blank:true, nullable:true) citizenshipCountry(blank:true, nullable:true) disabilities(blank:true, nullable:true) experience(blank:true, nullable:true) } static mapping = { disabilities type: 'text' experience type: 'text' } static hasMany = [courses:ClientCourseMap] } The page loads fine except when I actually have a "client" bean. It loads all the way up to the last tag "client.workPhone". Then I get the following exception: 2010-03-06 18:32:35,329 [http-8080-2] ERROR view.GroovyPageView - Error processing GroovyPageView: Error executing tag : org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException: Error executing tag : groovy.lang.MissingPropertyException: No such property: client for class: com.personal.Client at /Users/dean/Projects/PersonalGrails/grails-app/views/registration/index.gsp:98 at /Users/dean/Projects/PersonalGrails/grails-app/views/registration/index.gsp:145 The problem is when hasFieldErrors is called on the bean. It passes in "field" which should be "workPhone". Stepping through a debugger shows that field is exactly "workPhone". However, with further inspection into the field variable, it shows that the internal value of field is "client.workPhone" and offset = 7, count = 9, hash = 0. However, if you call toString(), you get back "workPhone" as you'd expect. I'm wondering of Grails or maybe even Spring is not using this string correctly? It looks like it's trying to use the real value of that string instead of paying attention to the offset/count of that string and getting back what is intended. Does anyone see something I'm doing wrong? Or do you know of a workaround? I can give whatever info is needed, just ask... This is driving me nuts!
