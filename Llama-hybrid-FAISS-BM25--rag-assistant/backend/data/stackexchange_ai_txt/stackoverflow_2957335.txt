[site]: stackoverflow
[post_id]: 2957335
[parent_id]: 2957302
[tags]: 
You can define a variable: char **md5sums; You will then need to modify MDPrint to instead return a malloced null-terminated string with the 32 hex digits. You can basically reuse your existing loop, but with sprintf instead. Then have main add each md5sum (a char*) to md5sums. You will need to use realloc to allocate memory for md5sums because you don't know the number of elements up front. It should be: static char* MDString (mdContext) MD5_CTX *mdContext; { int i; char *digest = malloc(sizeof(char) * 33); if(digest == NULL) { return NULL; } for (i = 0; i digest[i]); } return digest; } Also, you should modify your code by editing your question. And why are you using K&R syntax? EDIT: I fixed some incorrect counts.
