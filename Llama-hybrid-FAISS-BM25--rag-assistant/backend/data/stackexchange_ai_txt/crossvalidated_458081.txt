[site]: crossvalidated
[post_id]: 458081
[parent_id]: 
[tags]: 
ks test for discrete distributions

I have a two samples of data of very different length, think train and test sets for a machine learning model. The data is binary and I'd like to know if the two have a comparable distribution of values. The data is also very imbalanced (~5% of 1s). As per comment a summary of the data: sample 1: 950 0s and 50 1s sample 2: 90 0s and 10 1s So what the resampling / bootstraping is trying to answer, if i resample from sample 1, how probably is a distribution as observed in sample 2. As the KS test can only be applied to continuous distributions, I figured I could bootstrap the data and take their mean (share of 1s) and then compare the distribution of these means with a KS test. Is this a reasonable approach, any literature on how to tackle this? How can I decide how many samples to use and how often to resample? Background is I'd like to implement this in python and automate this test. My current approach: def bootstrap_ks(x1,x2,col): xv1 = pd.DataFrame(np.random.choice(x1, size=[100,1000] )).mean() xv2 = pd.DataFrame(np.random.choice(x2, size=[100,1000] )).mean() xv1.plot.hist(alpha=0.2, bins=50) xv2.plot.hist(alpha=0.2, bins=50) plt.title(col) plt.show() return stats.ks_2samp(xv1,xv2)
