[site]: stackoverflow
[post_id]: 1780720
[parent_id]: 1647631
[tags]: 
Coming to this late (as usual) but scanning the answers to date I thinks something important is missing; I have found in my own projects that it can be very helpful to not have a function for every valid state/event combination. I do like the idea of effectively having a 2D table of states/events. But I like the table elements to be more than a simple function pointer. Instead I try to organize my design so at it's heart it comprises a bunch of simple atomic elements or actions. That way I can list those simple atomic elements at each intersection of my state/event table. The idea is that you don't have to define a mass of N squared (typically very simple) functions. Why have something so error-prone, time consuming, hard to write, hard to read, you name it ? I also include an optional new state, and an optional function pointer for each cell in the table. The function pointer is there for those exceptional cases where you don't want to just fire off a list of atomic actions. You know you are doing it right when you can express a lot of different functionality, just by editing your table, with no new code to write.
