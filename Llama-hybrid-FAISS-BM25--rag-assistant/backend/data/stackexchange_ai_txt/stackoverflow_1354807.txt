[site]: stackoverflow
[post_id]: 1354807
[parent_id]: 1354583
[tags]: 
'Static' doesn't mean 'on the stack'. Objects allocated in the initialisation of class-static variables, or in static code blocks , are statically allocated, in the sense that allocation is done at class-load time (which can be made to happen statically immediately after program startup). You could, in theory, write a java program using only such allocations, and it would be statically allocated , the same as a C program that never called malloc, just had fixed buffers for the stuff it wanted to do. If such a program successfully starts up, that proves there is enough memory available for everything it can do, and so it will never get an out of memory error, fragmentation problem, or GC pause. It will just, if correctly written, return a lot of error messages saying 'I can't do that'.
