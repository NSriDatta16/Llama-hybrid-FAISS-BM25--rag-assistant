[site]: stackoverflow
[post_id]: 1003997
[parent_id]: 1003895
[tags]: 
edit OK having actually read the requirements and thought a bit this is actually quite easy (I think!) The point is that we want two things: the category hierarchy, and a count of products. The hierarchy is done by a recursive CTE, and counting is done outside that: -- The CTE returns the cat hierarchy: -- one row for each ancestor-descendant relationship -- (including the self-relationship for each category) WITH CategoryHierarchy AS ( -- Anchor member: self relationship for each category SELECT CategoryID AS Ancestor, CategoryID AS Descendant FROM Categories UNION ALL -- Recursive member: for each row, select the children SELECT ParentCategory.Ancestor, Children.CategoryID FROM CategoryHierarchy AS ParentCategory INNER JOIN Categories_XREF AS Children ON ParentCategory.Descendant = Children.ParentID ) SELECT CH.Ancestor, COUNT(ProductID) AS ProductsInTree -- outer join to product-categories to include -- all categories, even those with no products directly associated FROM CategoryHierarchy CH LEFT JOIN Products_Categories_XREF PC ON CH.Descendant = PC.CategoryID GROUP BY CH.Ancestor The results are: Ancestor ProductsInTree ----------- -------------- 942 13 943 13 959 9 960 1 961 3 I am indebted to this article by the inestimable Itzik Ben-Gan for getting my thinking kick-started. His book 'Inside MS SQL Server 2005: T-SQL Querying' is highly recommended.
