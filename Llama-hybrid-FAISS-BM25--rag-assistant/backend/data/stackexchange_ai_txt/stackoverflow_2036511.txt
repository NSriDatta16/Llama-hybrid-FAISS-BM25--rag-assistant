[site]: stackoverflow
[post_id]: 2036511
[parent_id]: 479791
[tags]: 
Normally the setter of AppointmentStatusId looks like: (Code in C# but it should be easy to get it) [Column(Storage="_AppointmentStatusId", DbType="Int")] public System.Nullable AppointmentStatusId { get { return this._AppointmentStatusId; } set { if ((this._AppointmentStatusId != value)) { if (this._AppointmentStatus.HasLoadedOrAssignedValue) { throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException(); } this.OnCapabilityIdChanging(value); this.SendPropertyChanging(); this._AppointmentStatusId = value; this.SendPropertyChanged("AppointmentStatusId"); this.OnCapabilityIdChanged(); } } } So, if I were you, I'd add a method SetAppointmentStatusId(int statusId) to the partial file that comes with the designer generated one, and add more whenever needed for other properties. You may even choose to make the setter of the property private (from the designer select the property and press F4 to for the VS properties window to change accessibility). In this method I'd write code identical to the setter except that it does NOT include this part: if (this._AppointmentStatus.HasLoadedOrAssignedValue) { throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException(); }
