[site]: stackoverflow
[post_id]: 2839172
[parent_id]: 
[tags]: 
Why my C++ output executable is so big for such a simple piece of code?

I have a rather simple C++ project, which uses boost::regex library. The output I'm getting is 3.5Mb in size. As I understand I'm statically linking all boost .CPP files, including all functions/methods. Maybe it's possible somehow to instruct my linker to use only necessary elements from boost, not all of them? $ c++ â€”version i686-apple-darwin10-g++-4.2.1 (GCC) 4.2.1 (Apple Inc. build 5659) This is what size says: $ size a.out __TEXT __DATA __OBJC others dec hex 1556480 69632 0 4296504912 4298131024 100304650 I tried strip : $ ls -al ... 3946688 May 21 13:20 a.out $ strip a.out $ ls -al ... 3847248 May 21 13:20 a.out ps. This is how my code is organized (maybe this is the main cause of the problem): // file MyClass.h class MyClass { void f(); }; #include "MyClassImpl.h" // file MyClassImpl.h void MyClass::f() { // implementation... } // file main.cpp #include "MyClass.h" int main(int ac, char** av) { MyClass c; c.f(); } What do you think?
