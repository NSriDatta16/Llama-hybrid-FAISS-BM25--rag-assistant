[site]: stackoverflow
[post_id]: 4848968
[parent_id]: 4848581
[tags]: 
You'd want to implement an asynchronous task. First of all, read this article: http://aspalliance.com/1778 By using asynchronous tasks you'd be able to pause and/or resume a background thread, and let the thread processing the file upload request end, saving slots in IIS thread pool. That pause and resume feature will be achieved by some synchronization logic. For example, you can save somewhere the async task - formerly process - identifier, and prepare some boolean flag stored in a database, file or any storage available for you, and during each iteration in your upload loop, check that it has permission to continue. If it doesn't have that permission, you can use a monitor, mutex or any other threading synchronization approach to wait a "pulse" for continuing the uploading process, or kill it.
