[site]: stackoverflow
[post_id]: 2082065
[parent_id]: 
[tags]: 
How do I set up DirectX 9 so that backface culling is off, z-buffering is on, and gouraud shading works, for triangle meshes without normals data?

I've been having difficulty identifying the correct parameters for the PresentParameters and DirectX device, so that there can be both vertex-level gouraud shading and the use of a z buffer. Some triangle meshes work fine, others have background triangles appearing in front of triangles which are closer-to-camera. An example of this is found here: http://gallery.me.com/robert.perkins/100045/zBufferGone . The input data is a simple list of vertices in facets. The winding order of the vertices in each facet is nondeterministic (comes from various CAD software export functions) and there is no normals data. The PresentParameters are being set up right now as follows. I realize this is C# instead of C++ but I think it's descriptive enough, and the parameters pass through to C++ code. This produces the image in the picture; the behavior is the same on the Reference device: pParams = new PresentParameters() { BackBufferWidth = this.ClientSize.Width, BackBufferHeight = this.ClientSize.Height, AutoDepthStencilFormat = Format.D16, EnableAutoDepthStencil = true, SwapEffect = SwapEffect.Discard, Windowed = true }; _engineDX9 = new EngineDX9(this, SlimDX.Direct3D9.DeviceType.Hardware, SlimDX.Direct3D9.CreateFlags.SoftwareVertexProcessing, pParams); _engineDX9.DefaultCamera.NearPlane = 0; _engineDX9.DefaultCamera.FarPlane = 10; _engineDX9.D3DDevice.SetRenderState(RenderState.Ambient, false); _engineDX9.D3DDevice.SetRenderState(RenderState.ZEnable, ZBufferType.UseZBuffer); _engineDX9.D3DDevice.SetRenderState(RenderState.ZWriteEnable, true); _engineDX9.D3DDevice.SetRenderState(RenderState.ZFunc, Compare.Always); _engineDX9.BackColor = Color.White; _engineDX9.FillMode = FillMode.Solid; _engineDX9.CullMode = Cull.None; _engineDX9.DefaultCamera.AspectRatio = (float)this.Width / this.Height; All of my other setup attempts, even on the reference device, return a COM error code ({"D3DERR_INVALIDCALL: Invalid call (-2005530516)"}). What are the correct setup parameters? EDIT: The C++ class which interfaces with DirectX9 sets defaults like this: PresentParameters::PresentParameters() { BackBufferWidth = 640; BackBufferHeight = 480; BackBufferFormat = Format::X8R8G8B8; BackBufferCount = 1; Multisample = MultisampleType::None; MultisampleQuality = 0; SwapEffect = SlimDX::Direct3D9::SwapEffect::Discard; DeviceWindowHandle = IntPtr::Zero; Windowed = true; EnableAutoDepthStencil = true; AutoDepthStencilFormat = Format::D24X8; PresentFlags = SlimDX::Direct3D9::PresentFlags::None; FullScreenRefreshRateInHertz = 0; PresentationInterval = PresentInterval::Immediate; }
