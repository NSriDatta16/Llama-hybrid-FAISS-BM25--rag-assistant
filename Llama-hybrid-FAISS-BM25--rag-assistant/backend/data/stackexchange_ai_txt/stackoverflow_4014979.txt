[site]: stackoverflow
[post_id]: 4014979
[parent_id]: 4012335
[tags]: 
Here is some sample code. Left some pieces out but it gives you an idea. The function returns the capabilities XML for a WMS webservice. function getcapabilities(p_url varchar2 ,p_version varchar2) return xmltype is pragma autonomous_transaction; req utl_http.req; resp utl_http.resp; c varchar2(255); l_clob clob; begin dbms_lob.createtemporary(lob_loc => l_clob, cache => true, dur => dbms_lob.call); -- ----------------------------------- -- OPEN TEMPORARY LOB FOR READ / WRITE -- ----------------------------------- dbms_lob.open(lob_loc => l_clob, open_mode => dbms_lob.lob_readwrite); utl_http.set_proxy(proxy => , no_proxy_domains => ); /* request that exceptions are raised for error Status Codes */ utl_http.set_response_error_check(enable => true); /* allow testing for exceptions like Utl_Http.Http_Server_Error */ utl_http.set_detailed_excp_support(enable => true); if instr(p_url, '?') > 0 then req := utl_http.begin_request(p_url || '&REQUEST=GetCapabilities&SERVICE=WMS&VERSION=' || p_version); else req := utl_http.begin_request(p_url || '?REQUEST=GetCapabilities&SERVICE=WMS&VERSION=' || p_version); end if; utl_http.set_header(req, 'User-Agent', 'Mozilla/4.0'); resp := utl_http.get_response(req); begin loop utl_http.read_text(r => resp, data => c); /* function that adds a string to a clob */ add_to_clob(l_clob, c); end loop; exception when utl_http.end_of_body then null; when others then raise; end; utl_http.end_response(resp); dbms_lob.close(lob_loc => l_clob); /* this was for some Oracle bug */ execute immediate 'alter session set events =''31156 trace name context forever, level 2'''; commit; return xmltype.createxml(l_clob); end;
