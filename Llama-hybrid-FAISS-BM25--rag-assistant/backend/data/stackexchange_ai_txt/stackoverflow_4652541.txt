[site]: stackoverflow
[post_id]: 4652541
[parent_id]: 4630441
[tags]: 
It appears that you are using two separate linq-to-sql repositories to join against. This won't work. Joins can only work between tables defined in a single repository. However, if you are happy to bring all of the data into memory then it is very easy to make your code work. Try this: var myIBookRepository = new BookRepository(); var myIBok_ForfattareRepository = new Bok_ForfattareRepository(); var allBooks = myIBookRepository.HamtaAllaBocker().ToArray(); var Book_Authors = myIBok_ForfattareRepository.HamtaAllaBok_ForfattareNummer().ToArray(); var q = from booknn in allBooks join Book_Authornn in Book_Authors on booknn.BookID equals Book_Authornn.BookID select new { booknn.title, Book_AuthorID = Book_Authornn.Book_Author }; Note the inclusion of the two .ToArray() calls. I had to fix some of you variable names and I made a bit of a guess on getting the Author ID. Does this work for you? I would suggest only having a single repository and allowing normal joining to occur - loading all objects into memory can be expensive. If you are making custom repositories you make also consider making a custom method that returns the title and author IDs as a defined class rather than as anonymous classes. Makes for better testability.
