[site]: stackoverflow
[post_id]: 203249
[parent_id]: 202718
[tags]: 
In the standard, section 8.3.6 (Default arguments), paragraph 5, they give an example using just this approach. Specifically, it calls out that default arguments are expressions , so a function call applies, albeit with restrictions such as name lookup and type compatibility. In my workplace, we've used signatures like this: void An_object::An_object( const Foo &a, const Bar &b, const Strategem &s = Default_strategem() ); to allow clients to override a behavior in a class constructor. It came in handy for conditional behavior which affected performance of a translator...
