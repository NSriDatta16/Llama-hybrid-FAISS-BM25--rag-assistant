[site]: stackoverflow
[post_id]: 4073522
[parent_id]: 
[tags]: 
Unexpected output (BMP) file

I'll make an edge detection with Sobel operator if I managed to create a double array that keeps the pixel values of 8bit Gray-scale BMP file. After execution of program, it creates an weirdy bitmap file: What could be the missing point? Thanks for help!! Here are the photos #include #include #pragma pack(2) typedef struct tagBITMAPFILEHEADER { unsigned short bfType; unsigned int bfSize; unsigned short int bfReserved1; unsigned short int bfReserved2; unsigned int bfOffBits; } BITMAPFILEHEADER; #pragma pack() typedef struct tagBITMAPINFOHEADER { unsigned int biSize; unsigned int biWidth; unsigned int biHeight; unsigned short biPlanes; unsigned short biBitCount; unsigned int biCompression; unsigned int biSizeImage; unsigned int biXPelsPerMeter; unsigned int biYPelsPerMeter; unsigned int biClrUsed; unsigned int biClrImportant; } BITMAPINFOHEADER; typedef struct pixel { unsigned char intensity; } PIXEL; int main(int argc, char *argv[]) { if(argc != 4) { printf("Usage: %s input.bmp output.bmp output.txt\n", argv[0]); exit(-1); } FILE *filePtr; FILE *bin; FILE *write; BITMAPFILEHEADER bitmapFileHeader; BITMAPINFOHEADER bitmapInfoHeader; int i, j; write = fopen(argv[3], "w"); filePtr = fopen(argv[1],"rb"); bin = fopen(argv[2], "wb"); if (filePtr == NULL) { printf("File could not opened\n"); exit(-1); } fread(&bitmapFileHeader, sizeof(bitmapFileHeader), 1, filePtr); fread(&bitmapInfoHeader, sizeof(bitmapInfoHeader), 1, filePtr); fwrite(&bitmapFileHeader, 1, sizeof(bitmapFileHeader), bin); fwrite(&bitmapInfoHeader, 1, sizeof(bitmapInfoHeader), bin); int offset = sizeof(bitmapFileHeader) + sizeof(bitmapInfoHeader); if (bitmapFileHeader.bfType !=0x4D42) { fclose(filePtr); printf("Not a bmp file\n"); exit(-1); } if(bitmapInfoHeader.biBitCount > 8) { printf("Only for Gray-scale 8 bits per pixel Image\n"); printf("%s is %u bits per pixel Image\n", argv[1], bitmapInfoHeader.biBitCount); exit(-1); } fseek(filePtr, bitmapFileHeader.bfOffBits, SEEK_SET); PIXEL **pixelArray = (PIXEL **)malloc(sizeof(PIXEL*)*bitmapInfoHeader.biWidth); for(i = 0; i
