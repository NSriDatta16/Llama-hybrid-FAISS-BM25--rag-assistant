[site]: stackoverflow
[post_id]: 1297797
[parent_id]: 
[tags]: 
Windows 32-bit virtual memory page mapping issue

I am learning from here about Windows 32-bit virtual memory page mapping, (I am targeting modern Windows versions, like Vista, Win 7, Server 2003/2008 32-bit versions.) http://blogs.msdn.com/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx Two confusions, user space virtual memory space is limited to 2G normally, but physical disk page storage could be much larger than 2G. Since there are more disk pages than virtual memory pages, so in theory more than one disk pages could be mapped to one virtual address page. If user request to access some virtual address, how did memory manager know which disk page should be accessed if more than one disk pages are mapped to one virtual address page? I do not know why there is restrictions like byte[] array must use continuous virtual memory space. I think in theory even if we only allocate 500M virtual space address, we can re-use such virtual space address to continue to map/unmap disk page file to consume as much as we want, even larger than 2G. Any ideas?
