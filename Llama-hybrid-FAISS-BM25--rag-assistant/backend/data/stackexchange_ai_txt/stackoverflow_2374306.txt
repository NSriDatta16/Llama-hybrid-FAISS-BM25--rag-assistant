[site]: stackoverflow
[post_id]: 2374306
[parent_id]: 2371839
[tags]: 
Are you trapping the INotifyPropertyChanged...upon receiving the event you may need to "disconnect" the property grid, re-set it and refresh it...or are you not trapping the 'PropertyChanged' event of the property grid? Am a C# guy here...so this may render useless to you...? // Within your trapping of the INotifyPropertyChanged Event Handler // Set 'SelectedObject' to null propGrid.SelectedObject = null; // propGrid.SelectedObject = this object // propGrid.Refresh(); Here's an example of trapping the Property Changed.... private void propGrid_PropertyValueChanged(object s, PropertyValueChangedEventArgs e) { // Handle the property changed for the 'propGrid' conmponent } Edit: As Jules has pointed out, the need to do this was at design-time, so digging around I found something that might be enlightening on CodeProject ...and here it explains how to leverage the usage of 'Extendee' used for controls...in order to get an insight into the problem. It sounds like you need to make the class an extendee and bind it to the property grid at runtime... Have a look here also on understanding IExtenderProvider here on CodeProject also, that explains how to use a CSS stylesheet and apply it to a windows form... Hope this helps, Best regards, Tom.
