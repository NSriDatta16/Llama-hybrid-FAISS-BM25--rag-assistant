[site]: stackoverflow
[post_id]: 3650317
[parent_id]: 3649539
[tags]: 
Localization is always a huge amount of work, especially if you need to localize already created application. As for static labels of forms, there is an elegant solution which allows you to make 75% of work easily and quickly. Just move labels to resources, not touching your existing English labels. Then, depending on your current thread's Culture, change labels on the form reading them from localized resources. For instance, french resource for YourForm class: YourForm.fr-CA.resx: "name" -> "value" labelCaption\ --> "Légende" labelInputLabel\ --> "Champ de saisie" "Name" is the name of your control object of the form, "value" is a label of the control. 1). Make a base class for all your forms, for instance LocalizationBaseForm 2). Handle OnLoad() event in this class and read the resource. Depends on currently selected culture you will read corresponding localized resource. Canadian French will be located in /fr-Ca/ directory, Spanish in /es-Es/ etc. ResourceManager manager = new ResourceManager(your_ form_type); ResourceSet set = manager.GetResourceSet(manager, ...); 3). Iterate through the list of labels and change labels on the form according the list on the resource. //*pseudocode:* foreach (DictionaryEntry entry in set) { SetControlLabel(entry.Key, entry.Value) } SetControlLabel(...) method looks a control with the given name and change it caption with the given new cation. You can make more complicated things, like localizing columns in grids, making values in resource more complex, for instance: "name" -> "value" gridTable(ColumnKey1)\ --> "Сolonne Une" gridTable(ColumnKey2)\ --> "Сolonne Deux" The same thing with trees, toolbars etc. You can even generate resource automatically, it's all up to you. That approach won't resolve all your problems, but it will help you if you need to localize your already existing application quickly. You still need to localize string parsers, dates etc. Good luck!
