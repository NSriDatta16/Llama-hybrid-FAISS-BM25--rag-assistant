[site]: stackoverflow
[post_id]: 1931482
[parent_id]: 1931440
[tags]: 
The question has been changed to ask about the upcoming .net 4.0 support for POCOs. The answer below is in regard to the existing .net 3.5 support, as was originally asked. For information on .net 4.0 EF POCO support see other answers. No. The current version of the entity framework does not support POCOs. In order to be consumable by EF, entity classes have to: Derive from EntityObject class or implement at least one mandatory IPOCO interface: IEntityWithChangeTracker. If the entity participates in relationships it also has to implement IEntityWithRelationships interface. Implementing those interfaces is not hard, but causes entity objects to have a dependency on EF assembly, which is sometimes not desirable Provide assembly, class and property-level attributes to define mapping from CLR space to model space (we call those O-C mapping attributes) Use Entity-Framework-provided relationship classes: EntityReference, EntityCollection and RelationshipManager instead of CLR collections (List, ICollection) source By far the easiest way to create classes that meet these requirements is to use the EF designer in visual studio to create an EDMX file. Part of this file contains the CSDL which defines the conceptual model of your data, in other words - the objects. The EDMX file also defines the SSDL (the storage/database) and the MSL (The mapping between SSDL and CSDL). It is this CSDL that will be used to generate the classes that will work with the EF. POCO support is coming though in .net 4.0.
