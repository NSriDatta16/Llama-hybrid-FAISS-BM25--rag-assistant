[site]: datascience
[post_id]: 123032
[parent_id]: 
[tags]: 
Aggregate a DataFrame using multiple conditions in groupby

I have a dataframe with many duplicates. I have determined rules for duplicate identification, for example : If street_name AND company_name are equal => duplicates (condition A) If company_name AND municipality are equal => duplicates (condition B) If company_name AND publisher_name are equal => duplicates (condition C) etc. Two records are the same if any of these conditions are met, so : condition_A or condition B or condition C. Input In my dataframe I have represented each condition as a cluster. That means, if two rows meet the condition A, they will have the same cluster in column condition_A_cluster . id condition_A_cluster condition_B_cluster condition_C_cluster field_to_aggregate 1 1 1 1 1€ 2 1 3 3 2€ 3 2 3 5 9€ 4 3 4 6 10€ Desired Output I want to have the following output : id_list aggretated_field (sum) 1,2,3 12€ 4 10€ I imagine doing it in two ways : Directly, with something like : df.groupby(condition_A_cluster or condition_B_cluster or condition_C_cluster).agg(...) Sequentially, by grouping first by condition_A_cluster , then condition_B_cluster and finally by condition_C_cluster . The problem is that the first aggregation will transform condition condition_B_cluster and condition_C_cluster into "list" or clusters which starts to complicate things. Is there any elegant way to do this in python ?
