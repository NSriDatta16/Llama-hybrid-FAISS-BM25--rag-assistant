[site]: stackoverflow
[post_id]: 5300176
[parent_id]: 5300080
[tags]: 
If you're trying to set a global variable , and then use it within a function/method block, you need to use the global keyword on import: Global foo: $foo bar: $bar "; function globalTest() { global $foo; echo " globalTest() foo: $foo bar: $bar "; } globalTest(); function globalBarTest() { global $foo, $bar; echo " globalBarTest() foo: $foo bar: $bar "; } globalBarTest(); ?> In action: http://jfcoder.com/test/globals.php Prints: Global foo: test bar: test globalTest() foo: test bar: globalBarTest() foo: test bar: test I have always gotten in the habit of setting a global variable using $GLOBALS, I never have any issues doing it this way. I would caution, though, that setting globally scoped variables is considered harmful (or at least unnecessary), since they are so easy to accidentally overwrite somewhere else in your code (by you and/or someone else). Your stated approach in the description sounds quite messy; you should be using a database and let Drupal abstract how you organize, set and get the data from the datastore, instead of editing your files and hardcoding some links and data into a PHP file. This is what I'm thinking reading your description, which may not be fair, but I thought I needed to mention it. EDIT In Drupal, you can set global variables in the default/settings.php page using variable_set() , and then use variable_get() to get the variable by name. http://api.drupal.org/api/drupal/sites--default--default.settings.php/6 variable_set('foo','bar'); http://api.drupal.org/api/drupal/includes--theme.inc/function/template_preprocess/6 function yourtemplate_preprocess (&$variables) { $vars['foo'] = variable_get('foo'); } EDIT 2 Note the source for the variable_set() function: EDIT Ok, here is what you can do: /drupal-root/htdocs/sites/settings.php Open the settings.php file and at the bottom, set your PHP variables using the $GLOBALS global variables, as so: $GLOBALS['test1_variable'] = 'test 1 variable'; And then in your template (with the PHP Input Format selected): This is my {$GLOBALS['test1_variable']}. "; ?> Or... This is my short tag . And you should see your variable printed out on the page from the template code. Note the curly braces surrounding the $GLOBALS variable.
