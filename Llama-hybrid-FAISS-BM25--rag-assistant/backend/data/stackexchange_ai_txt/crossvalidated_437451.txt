[site]: crossvalidated
[post_id]: 437451
[parent_id]: 437329
[tags]: 
I do not know the details of the model, but I am quite sure that it includes one or more interactions between elevation.scaled and other predictor(s). There are two aspects of this that I see that can easily cause such a Simpson's Paradox-like issue. The use of cov.reduce = range in the emtrends() call; thus, the frame of reference used for the emtrends results does not match that of the ggeffects results. The annotation Results are averaged over the levels of: elevation.scaled, transect, date, temperature ; thus, there are several predictors in the model that can affect the results. Results from emmeans() and emtrends() depend on a reference grid : see the "basics" vignette for discussion. The cov.reduce specification instructs that two reference levels be used for each numeric predictor -- the minimum and maximum. If any of the predictors are factors (e.g. transect ?), the levels of those factors are used as the reference levels. The reference grid then consists of all combinations of the reference levels. At each grid point, we have an estimate of the elevation.scaled trend; and those trends are averaged over the reference levels of four factors to obtain the results shown in the table; each estimate shown is thus the average of at least $2^4=16$ estimated slopes. If anything interacts with elevation.scaled , those slopes will not all be equal. They can vary wildly depending on how distant are the extrema of the predictors; and so potentially almost anything can happen when they are averaged together. To see the details of the reference grid, just omit the specs argument: trg1 The ggeffects output, on the other hand, isimplicitly based on a reference grid where each numeric predictor is replaced by its average. That is also the default used in emtrends() , but it was overridden by the cov.reduce argument. I suggest trying: trg2 [The at part may be omitted if year is a factor.] If all of the predictors are numeric, the reference grid, trg2 , has only two nodes -- one for each year, and the estimates are the slopes at the average predictor values. If any of the predictors are factors, there will be more nodes, and only the factors will be averaged over in the final results. I am betting that this will yield comparable results to what was obtained with ggeffects . Reproducible illustration Using a built-in dataset... R> foo emtrends(foo, "Catholic", "Fertility", cov.reduce = range) NOTE: Results may be misleading due to involvement in interactions Catholic Fertility.trend SE df lower.CL upper.CL 2.15 0.127 0.370 31 -0.628 0.883 100.00 0.236 0.298 31 -0.371 0.844 Results are averaged over the levels of: Fertility, Agriculture, Education Confidence level used: 0.95 R> emtrends(foo, "Catholic", "Fertility", at = list(Catholic=c(2.15,100))) NOTE: Results may be misleading due to involvement in interactions Catholic Fertility.trend SE df lower.CL upper.CL 2.15 0.2056 0.116 31 -0.0318 0.443 100.00 -0.0137 0.138 31 -0.2949 0.267 Confidence level used: 0.95 Note the two very different results that are explainable only by the choice of reference grid.
