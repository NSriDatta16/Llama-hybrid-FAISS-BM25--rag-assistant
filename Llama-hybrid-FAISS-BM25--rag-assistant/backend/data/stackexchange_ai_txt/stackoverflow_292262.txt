[site]: stackoverflow
[post_id]: 292262
[parent_id]: 292169
[tags]: 
I think you've got it worked out. The temptation to avoid here is to not bother with a package name at all. It's easy to save a few keystrokes because "I'm just writing some test code." But then the code gets good and useful and large, and then you realize you have a solid start for what may be a long-lived library or application. It may not be a library or an application that ever leaves your home network, but the point is, you've not thought ahead. That's the Denmark ghost of computer science -- always think ahead, if only a little bit. The naming convention I use for my hobby code is very much like yours. I have a top-level directory named "futura" (long, boring reasons why that name came about) that all my code hangs off of. I do try and organize my code into package libraries, even if it might be a class or package I never use for another project. I place all applications (that is, anything that has a void main(String[] args) in the class) in the futura.app.* folder. I also try to mimic the standard Java library package names for my own code, although in a couple of cases I broke convention because of my own tastes (i.e. futura.inet for Internet, not merely socket, code, and futura.collections for non-util stuff.) To paraphrase David Mamet: Always be genericizing. Always be genericizing! From the care you used to post the question, I suspect you agree with my last point as well: You don't have to treat hobbyist hacking as an enterprise-level project, but if you bring some of that discipline to the home game, the hobby is all the more rewarding.
