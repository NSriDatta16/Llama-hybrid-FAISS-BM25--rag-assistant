[site]: stackoverflow
[post_id]: 1737503
[parent_id]: 1737413
[tags]: 
I see you have accepted an answer. However, for the task at hand, it would have been more appropriate to use Apache::ParseLog or maybe Apache::LogRegex : Apache::LogRegex - Parse a line from an Apache logfile into a hash It looks to me like you are trying to write a log file analyzer from scratch and this is your way of grouping log file entries by month. If that is the case, please stop re-inventing square wheels. Even if you do not want to use external modules, you can simplify the task by dividing and conquering using split : #!/usr/bin/perl use strict; use warnings; use Carp; use Regex::PreSuf; my @months = qw(jan feb mar apr may jun jul aug sep oct nov dec); my %months = map { $months[$_] => sprintf '%02d', $_ + 1 } 0 .. 11; my $months_re = presuf( @months ); # wrapped for formatting, does not make any difference my $str = q{62.174.188.166 - - [01/Mar/2003:00:00:00 +0100] "GET /puntos/img/ganar.gif HTTP/1.1" 200 1551 "http://www.universia.com/puntos/index.jsp"; "Mozilla/4.0 (compatible; MSIE 5.0; Windows 98; DigExt; Hotbar 2.0)"}; chomp($str); my @parts = split qr{\s\[|\]\s}, $str; if ( $parts[1] =~ m! / ($months_re) / !ix ) { $parts[1] = $1; } $parts[2] =~ s/\s/+/g; print join(' ', @parts), "\n"; Output: 62.174.188.166 - - Mar "GET+/puntos/img/ganar.gif+HTTP/1.1"+200+1551+"http://www .universia.com/puntos/index.jsp";+"Mozilla/4.0+(compatible;+MSIE+5.0;+Windows+98 ;+DigExt;+Hotbar+2.0)"
