[site]: crossvalidated
[post_id]: 211921
[parent_id]: 
[tags]: 
Optimizing multiple objective functions simultaneously

I apologize in advance - I am new to both stackexchange as well as as a lot of statistics/machine learning. This is a question I feel must have some fundamentally obvious answer, but after a lot of searching I have not been able to find one. The problem: I have a 60 x 80 matrix, where each row indicates a subject (n = 60) , and each column indicates a feature of that subject: $$ \begin{matrix} 1 & 0 & 0 ... & 1 \\ 0 & 1 & 1 ... & 0\\ 0 & 1 & 0 ... & 1\\ ... & ... & ... & ... \\ 1 & 1 & 0 ... & 0\\ \end{matrix} $$ I want to find the combination of features that: a) maximizes the number of features b) maximizes the number of subjects who have that exact feature set What that boils down to in optimization terms is finding the 1x80 vector, let's call it F , of 0's and 1's that optimizes two objective functions: a) $$arg_Fmax(\sum_{i=1}^mF_i)$$ b) $$arg_Fmin(\sum_{j=1}^nD_j)$$ where D is the distance between F and the vector for each subject. Now, I have no clear idea where to start, so I cannot even tell y'all things I have tried. I have read a bit about this and it's only confused me with talk of centroids and Pareto optimums, and I can feel myself getting more lost. Am I overcomplicating this? Please also let me know if there is something I can improve in terms of formulating the problem or providing information to you. EDIT: Basically, I want to select the greatest amount of subjects with the greatest number of features in common, where a 1 in each column indicates the presence of that feature and a 0 indicates a lack of that feature. I interpreted that as identifying a feature vector, F, that had a lot of 1's (features) but also matched the feature vectors of a lot of subjects. In my mind, that means finding the feature vector F that a)has the greatest sum of its elements (the most 1's) and b) minimizes the sum of L2 distances between F and each subjects feature vector. Or maybe the cosine difference. I left "distance" vague because I have not decided how to characterize the distance between vectors. As to your last point, if I choose a feature vector F that is all 1's (aka selects for all features) then it will not match any subject's feature correctly as every subject has a unique combination of 1's and 0's. I want to match the greatest number of subjects correctly, while selecting the greatest number of features.
