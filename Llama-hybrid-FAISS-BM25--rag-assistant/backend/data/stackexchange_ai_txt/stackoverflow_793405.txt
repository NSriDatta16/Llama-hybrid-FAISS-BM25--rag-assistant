[site]: stackoverflow
[post_id]: 793405
[parent_id]: 789944
[tags]: 
the fastest method is to use php itself, because php IS a templating language. of course, sometimes that's not an option because of security reasons, and the designer having to learn basic php ( that really hurts a lot ). sometimes, it gets really ugly too, where other, more specialized (and less mighty) templating systems can keep it clean. so if you really have to build your own, there are 3 options top off my mind ... as a beginner i did some templating through custom parsing (strpos, substr and so on). it was very slow, inelegant and error prone. i wouldn't recommend that. regular expression mayhem. if you're not adept at regexps, forget it. but it's probably one of the faster methods. maybe you could path something together with the php tokenizer functions ... the DOM -extension! make your templates xhtml compliant and load them as xml files. whoa, all the parsing is done for you! now you have a nice tree with either custom tags, like name" entities="yes" nl2br="yes" purify="removeemptytags, xss"/> already looks a bit like smarty, imho. you just have to either do some interpreting (echoing the subnodes of the loop-node $x times), or maybe translate it to php and cache it (smarty does this for performance). or, if you prefer comments, something like this (but here you have to do more parsing than using custom tags) name() --> i can't imagine the DOM method to be very fast, but if you really need moar speed, translation to native php code and/or caching of the rendered html would be better ( if speed really is that important, don't write your own code. except if you're carmack or skeet maybe ). good luck.
