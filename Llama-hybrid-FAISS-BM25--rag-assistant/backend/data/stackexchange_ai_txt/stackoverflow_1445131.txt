[site]: stackoverflow
[post_id]: 1445131
[parent_id]: 928652
[tags]: 
You wrote: "Thanks for the answers above here, initially my question was how to reduce the time on general testing, but now, the problem is down to how to write the efficient automate test code." One method that has been proven in multiple empirical studies to work extremely well to maximize testing efficiency is combinatorial testing. In this approach, a tester will identify WHAT KINDS of things should be tested (and input it into a simple tool) and the tool will identify HOW to test the application. Specifically, the tool will generate test cases that specify what combinations of test conditions should be executed in which test script and the order that each test script should be executed in. In the August, 2009 IEEE Computer article I co-wrote with Dr. Rick Kuhn, Dr. Raghu Kacker, and Dr. Jeff Lei , for example, we highlight a 10 project study I led where one group of testers used their standard test design methods and a second group of testers, testing the same application, used a combinatorial test case generator to identify test cases for them. The teams using the combinatorial test case generator found, on average, more than twice as many defects per tester hour. That is strong evidence for efficiency. In addition, the combinatorial testers found 13% more defects overall. That is strong evidence for quality/thoroughness. Those results are not unusual. Additional information about this approach can be found at http://www.combinatorialtesting.com/clear-introductions-1 and our tool overview here . It contains screen shots and and explanation of how of our the tool makes testing more efficient by identifying a subset of tests that maximize coverage. Also free version of our Hexawise test case generator can be found at www.hexawise.com/users/new
