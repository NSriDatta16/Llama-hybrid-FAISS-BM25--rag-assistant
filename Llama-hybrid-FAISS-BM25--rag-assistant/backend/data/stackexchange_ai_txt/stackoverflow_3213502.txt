[site]: stackoverflow
[post_id]: 3213502
[parent_id]: 
[tags]: 
System.Diagnostics.Debug namespace vs Other logging solutions (log4net, MS Enterprise Library, etc.)

I'm currently investigating various logging possibilities for .net projects and I can't decide between System.Diagnostics.Debug/Trace features and third party libraries like log4net, MS Enterprise Library, NLog, etc. At the moment I have found out this: System.Diagnostics is rather difficult to configure and to use since you need to explicitly configure all the listeners, filters, sources, etc. It seems that it also lacks the bulk insertion to the DB (think about writing 100'000 log entries each with its own Insert, horrifying, isn't it?). But by some people it is considered to be 'cool' not to use additional libs for such a "rudimentary" thing as Logging (of course, at some point, it makes sense to reduce the amount of 3rd party libraries your project relies on, but not this time, I suppose) 3rd parties are much more powerful, often quicker, much easier to use, but configuration sometimes can be also painful and often these libs are less reliable (like mysterious sudden stop of logging by EntLib, etc.) what about Common.Logging? is it worth trying (since, as I've heard, it offers plugging-in various logging frameworks and act like an interface between the app and the desired lib)? I would be really grateful if somebody could point me to the right direction or correct (or add something) to my comparison given above! Maybe if you would encourage me to use 3rd parties, you could advise some particular one (taking into account that our applications most probably won't need any fancy stuff like UDP, rolling files, etc.- just plain file, email, DB and eventlog)? Thanks in advance!
