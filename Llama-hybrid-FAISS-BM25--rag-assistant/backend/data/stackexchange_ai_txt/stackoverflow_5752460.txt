[site]: stackoverflow
[post_id]: 5752460
[parent_id]: 5732439
[tags]: 
Well, someone on Freenode's #xml channel helped me write this alternative stylesheet which works better: The part there with the " " may be safely ignored, because I added it later to fix a problem. Regarding the output I needed to process it is a standard XHTML as generated by DocBook/XML which has some / tags with empty &;lt;a id="my_anchor_here /> elements for anchors instead of doing the right thing for , so I'm trying to filter it. Here is a self-contained sample: Open Source, Free Software and Other Beasts (version 3) Open Source, Free Software and Other Beasts (version 3) Shlomi Fish &lt; shlomif@shlomifish.org &gt; Copyright Â© 2004, 2006, 2011 Shlomi Fish This document is copyrighted by Shlomi Fish under the Creative Commons Attribution License (CC-by) version 3.0 (or at your option a greater version). Introduction Many people will hear about Linux in the news, being the cool new operating system that everyone can use free of charge. Those who become interested in it enough or actually start working with it, will learn that it is made out of many independent "open source" components. Now, after enough time (perhaps very soon), they will learn that the term "free software" (where free is free as in "free speech" and not free as in "free beer") can be used as an alternative to the adjective "open source". But what is open source and free software? What distinguishes them from other software that is available to the public at no cost or is distributed as shareware? Note that the terms "free software" and "open source" would be used throughout this article to refer to the same phenomenon. I do not religiously stick to either term. Software Licences and "Proprietary" Software This section deals with the legal details of distributing software, and the so-called licences that dictate what can be done with them. Software out of being a sequence of bits, that can be transcribed to a paper, spoken or otherwise transported is considered speech and so is protected by the Freedom of Speech principle of Liberalism . Thus, writing software and distributing it are a constitutional right in most liberal countries. Nevertheless, a piece of software, as any other text, can be copyrighted. Copyright involves making sure that the software as given to someone else other than its originator or copyright holder will be restricted in use or modification. An originator can outline what he believes to be a proper use of the software in a code licence (which applies to the code) or an "End-User License Agreement" (or EULA which applies to given binaries). Proprietary software, i.e: such whose use, modification or distribution is encumbered, was a relatively new phenomenon if you take a look at the old history of computing. It actually started even before the time when Microsoft, then a very small company wrote Altair Basic, and Bill Gates published the famous (or possibly infamous) "Open Letter to Altair Hobbyists" . In fact, IBM and other companies distributed proprietary software for mainframe systems, a long time before the Personal Computer revolution. The PC revolution, however, made the situation more critical. Soon, computers became faster, more powerful, with larger memory, and more common as time went by. At the moment, there are 100's of millions of Pentiums and other computers out there, and millions of newer computers are sold each year. Yet, the majority of these computers mostly run software that cannot be modified or distributed, at least not effectively or legally. The free software (or open-source) movement started as an anti-thesis to the tendency of vendors to hide the details of their software from the public. The Linux Operating System with its various components (most of which are available to other systems as well, and are not affiliated with the Linux kernel in particular) is the most visible showcase to this phenomena. By installing Linux it is possible to turn an everyday personal computer into a full fledged UNIX-based workstation or server, which is a 100% powerful GNU system. This can cost little if any money, and the various components of the operating system are all freely modifiable and can be re-distributed in their modified form. It is not the only place where free software can be used. It is in fact possible to turn a Windows installation into a Linux-like GNU system as well (see Cygwin for instance) or run many native Microsoft Windows open-source programs on one's Windows installation. Meaning of the terms According to the Free Software Definition free software must fulfill 4 freedoms: The freedom to run the program, for any purpose The freedom to study how the program works, and adapt it to your needs. Access to the source code is a precondition for this. The freedom to redistribute copies so you can help your neighbour The freedom to improve the program, and release your improvements to the public, so that the whole community benefits . Access to the source code is a precondition for this. The Open Source definition is similar, but some licences can qualify as open-source and not as free software. This is usually not an issue, because the majority of open source software out there is free as well. Moreover, lately most of the companies and people who have phrased their own software licences, have tried to also get the Free Software Foundation to approve their licences as free software in their eyes. Despite common belief, selling free/open-source software is perfectly legitimate. In fact, one can charge as much as he pleases for it. Nevertheless, most free software is distributed for free or for very cheaply on the Internet and other mediums. This is due to the fact that its freely distributable nature does not give way much to sale value, so there usually is no point in attempting to mandate a charge for selling it. Another common misconception is that it sometimes cannot be modified or customised for internal use. In fact, all free software (but not all open source software), can. Only when you wish to distribute it (free of charge or commercially), you may have to distribute your changes. (depending on the licence) The use of open source software to process proprietary content or be processed by non-free programs is also, always available. Thus, an open-source C compiler can be used to compile the code of proprietary programs like the Oracle Database Server. History This section is not a definitive overview of the history of the free software movement. It focuses on the issues regarding the usage of the common terms. Early Days, AT&amp;T UNIX, BSD The free software movement (before it was called this way) started organically from individuals who distributed code they wrote under the Public Domain or what would now be considered open source or semi-open source licences. AT&amp;T UNIX that started at 1969 was the first showcase for this movement. Several Bell Labs Engineers led by Ken Thompson developed UNIX for their own use, and out of legal restrictions AT&amp;T faced, decided to distribute it to academic organizations and other organizations free-of-charge with the source included. (that licence did not qualify as open-source but it was pretty close). UNIX eventually sported the C programming languages, which enabled writing code that would run on many platforms easier, and the UNIX sources included a C compiler that was itself written in C. Around the early 70's the only computers capable of running UNIX were main-frames and the so-called "mini-computers" so there initially weren't as many installations as only large organizations could support buying computers to deploy UNIX on. That changed as integrated circuits, and computers became cheaper and more powerful. Very soon, cheap UNIX-based servers and workstations became commonplace and the number of UNIX installations exploded. [ 1 ] Nadav Har'El has prepared a coverage of the BSDs and early AT&amp;T UNIX history . The University of California at Berkeley (a.k.a UCB) forked its own version of AT&amp;T UNIX and started re-writing parts of the code, and incorporating many changes of its own. The parts that the Berkeley developers wrote on their own had originally been licensed UCB and kept as non-FOSS (= "free and open source software") "All Rights Reserved" licence. The BSD system became very popular (perhaps even more than the AT&amp;T one). When Arpanet, the predecessor to the Internet was disbanded due to inadequacy, the Internet converted to running on top of 32-bit UNIX boxes such as the VAX architecture by Digital Equipment Corporation (now part of Hewlett-Packard). This caused a merging of the UNIX culture with the Arpanet enthusiasts who exchanged code on the Arpanet, and UNIX programmers started sharing code for various components and add-ons of UNIX on the Internet.
