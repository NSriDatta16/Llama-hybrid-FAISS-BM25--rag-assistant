[site]: datascience
[post_id]: 76495
[parent_id]: 76464
[tags]: 
In your plot you used PCA to reduce the dimensionality of your data, but you plotted the first 2 dimensions of your centroids. You should also transform the centroids using the PCA transform you fitted on your data. This code should work for you numClusters= 12 kmeans = KMeans(n_clusters=numClusters).fit(X) centroids = kmeans.cluster_centers_ # Predicting the clusters labels = kmeans.predict(X) # Getting the cluster centers C = kmeans.cluster_centers_ #transform n variiables to 2 principal components to plot pca = PCA(n_components=2) pca_fit = pca.fit(X) principalComponents = pca_fit.transform(X) principalDf = pd.DataFrame(data = principalComponents , columns = ['principal component 1', 'principal component 2']) colors =['red','green','blue','cyan','yellow', 'lime','orange','coral','brown','peru','khaki','tan'] centroidColor= [] for item in range(numClusters): centroidColor.append(colors[item]) dataPointColor=[] for row in labels: dataPointColor.append(colors[row]) fig = plt.figure(figsize = (10,10)) ax = fig.add_subplot(1,1,1) ax.set_xlabel('Principal Component 1', fontsize = 15) ax.set_ylabel('Principal Component 2', fontsize = 15) ax.set_title('2 component PCA', fontsize = 20) plt.scatter(principalDf['principal component 1'], principalDf['principal component 2'], c=dataPointColor, s=50, alpha=0.5) C_transformed = pca_fit.transform(C) plt.scatter(C_transformed[:, 0], C_transformed[:, 1], c=centroidColor, s=200, marker=('x')) plt.show()
