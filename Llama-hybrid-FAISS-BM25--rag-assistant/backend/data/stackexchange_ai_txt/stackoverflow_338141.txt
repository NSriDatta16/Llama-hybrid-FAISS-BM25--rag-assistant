[site]: stackoverflow
[post_id]: 338141
[parent_id]: 338067
[tags]: 
This is akin to discussions such as "how many functions should I have in a class?" and "should each enum be defined in its own .cs file?". I would be interested to know how many classes each of your projects has. You can think of your classes, projects and solutions as organisational units. They are there to make your life easier, and to allow you (and your team) to break the overall project into managable conceptual chunks. If VS2008 isn't complaining, and you and your developers have no problem with 50 projects in one solution then I would not worry about it. That said, it does sound like a rather large number - but then we know nothing about the size of your overall codebase so it's hard to comment further.
