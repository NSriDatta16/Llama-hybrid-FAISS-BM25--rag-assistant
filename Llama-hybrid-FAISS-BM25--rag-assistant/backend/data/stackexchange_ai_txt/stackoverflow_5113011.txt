[site]: stackoverflow
[post_id]: 5113011
[parent_id]: 5112964
[tags]: 
I do not believe that answer was against DRY, even though it does not make it easy to see. The author did suggest using an established framework, which most certainly takes care of initialization and common application backend features in a centralized and modular manner. Possibly the author meant "do not produce a homegrown big spaghetti ball of code"; this might be in practice an ill-conceived attempt to building a framework by bunching a boatload of core methods in a monolithic script. If building (at least in a big part) to learn, I find nothing wrong with trying to centralize your core functions, organize them and start producing a fledgling framework in such a way. Doing this in a thoughtful manner will gain you invaluable practical experience and insight into how applications in general can be architected. Otherwise, I will side with the author of that answer: why have your application suffer from possibly wrong design decisions when there are many fantastic frameworks ready for use?
