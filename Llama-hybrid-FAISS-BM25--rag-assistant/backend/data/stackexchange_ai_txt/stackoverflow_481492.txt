[site]: stackoverflow
[post_id]: 481492
[parent_id]: 481385
[tags]: 
Have you thought about making a class for each type of behavior you'd like to attach to an element? That way you could reuse functionality between pages, just in case there was overlap. For example, let's say that on some of the pages you want to a have button that pops up some extra information on the page. Your html could look like this: More info And your JavaScript could look like this: jQuery(".more-info").click(function() { ... }); If you stuck to some kind of convention, you could also add multiple classes to a link and have it do a few different things if you needed (since jQuery will let you stack event handlers on an element). Basically, you're focusing on the behaviors for each type of element you're attaching JavaScript to, rather than picking out specific ids of elements to attach functionality to. I'd also suggest putting all of the JavaScript into one common file or a limited number of common files. The main reason being that, after the first page load, the JavaScript would be cached and won't need to load on each page. Another reason is that it would encourage you do develop common behaviors for buttons that are available throughout the site. In any case, I would discourage attaching the onlick directly in the html (option #1). It's obtrusive and limits the flexibility you have with your JavaScript. Edit: I didn't realize Diodeus had posted a very similar answer (which I agree with).
