[site]: datascience
[post_id]: 64614
[parent_id]: 64608
[tags]: 
Besides stacked cross-validation/TimeSeriesSplit/multi-train-test split as explained by BrunoGL you could use Walk Forward Validation. The idea is to move along the time axis and forecast data for the very next point in time in a similar fashion as you would when applying your model "live" or "online" in a real setting. The amount of past data to be considered for your forecast can be varied (i.e. you can use the full past dataset or just a number of examples). As far as I know there is currently no implementation in SkLearn but it is straightforward: ### Walk Forward Validation with full history starting at starting_point starting_point = 100 for i in range(starting_point, len(X)): X_train = X[0:i] X_test = X[i:i+1] ### apply model here Since you're doing a lot of splits it is computationally expensive tho. In a way could see it as a timeseries leave-one-out validation as your test data is just one data point. A good read on this is How To Backtest Machine Learning Models for Time Series Forecasting .
