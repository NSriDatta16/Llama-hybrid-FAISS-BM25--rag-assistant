[site]: stackoverflow
[post_id]: 5531684
[parent_id]: 5530555
[tags]: 
This is hardly perfect but try putting a Messagebox inside of each of the eventhandlers. That way you can tell when each one is firing and see if one isn't firing. Also you might want to unistall the application often to clear the IsolatedStorage. This is known to create issues if you keep running on the same installation. EDIT: Yeah from what I have run into, the application can hang if you aren't properly saving to isolated storage. It can also happen if you aren't properly loading data from isolated storage. You might want to try each one seperately. Use a messagebox to make sure it saves and loads properly because VisualStudio will exit the current debugging session. UPDATE What you should do is create a global variable called unsavedPrescription. Now when the user selects a prescription assign the global variable "unsaved" the prescription they selected. Note: you should not be assigning properties when the app is deactivating because it is very possible it won't save completely which leads to the app hanging. Instead all you have to do is assign the selected prescription to the global variable and change your code in App.xaml.cs to the following: public unsaved unsavedPrescription {get; set;} private void Application_Deactivated(object sender, DeactivatedEventArgs e) { //Open up IsolatedStorageSettings IsolatedStorageSettings settings = Isolated StorageSettings.ApplicationSettings; //Use a model to save prescription //So create a name/value pair to store the prescription in isolatedstorage //Notice we used the global variable settings["UnsavedPrescription"] = unsavedPrescription; } private void Application_Activated(object sender, ActivatedEventArgs e) { //Now you can easily load the prescription you saved //I'm reassigning the global variable that will contain the savedprescription if(settings.TryGetValue("UnsavedPrescription", out prescription) { unsavedPrescription = prescription; } } This greatly simplifies your code when loading and saving. Also you'll be able to test using the messageboxes like I said earlier, which isn't professional but it works nicely. Also your not running too much stuff when the app is trying to deactivate. THIS WAY WILL WORK AS I TESTED IT. The way you did it above looks like your running to much code while the app is deactivating which is probably why its hanging. Also this explains why when you remove it, everything works.
