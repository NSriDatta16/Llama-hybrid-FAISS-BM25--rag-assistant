[site]: stackoverflow
[post_id]: 3237633
[parent_id]: 3235522
[tags]: 
You should take a look at WCF Data Services, especially in .NET 4. While you'll have to create the data context class or classes to expose your entities along with exposing IQueryable and implementing IUpdatable, you then can take advantage of the supporting framework that WCF Data Services provides along with a standardized protocol (OData) for your data payloads. In .NET 4 and Visual Studio 2010, WCF Data Services are becoming more accepted, and are being pushed by Microsoft as a good data access vehicle for Silverlight applications. I think it's at least worth checking out. There's a lot of information about it on MSDN, although I don't think it's organized very well in places. Here's a link to the section in MSDN on rolling your own WCF Data Service using the built-in reflection provider. (The example only shows data retrieval because it's much simpler than data updates/inserts/deletes, but there's a link in the article on how to implement IUpdatable.) Getting an IQueryable exposed through WCF Data Services should be pretty quick. IUpdatable will take a little more time (since you need to implement Insert/Update/Delete for each entity). But once you get it up and running (which shouldn't take too long), you can then tweak the security settings, add custom service methods, and add additional functionality and/or entities pretty easily. It's a nice framework for what you're describing. I hope this helps.
