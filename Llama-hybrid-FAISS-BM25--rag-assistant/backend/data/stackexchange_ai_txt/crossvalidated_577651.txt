[site]: crossvalidated
[post_id]: 577651
[parent_id]: 
[tags]: 
Variational autoencoder for varying-length matrix-valued data

I have a data set $\mathcal D \subset \mathcal X$ where each observation is itself a mini dataset, each with the same number of columns but differing numbers of rows, so $\mathcal D = \{X_1, \dots, X_n\}$ with $X_i \in \mathbb R^{n_i \times p}$ . I want to be able to sample from a distribution over these matrices so I've decided to train a variational autoencoder, but I'm struggling with how to represent the data. I first tried to define a fixed-dimension representation $\varphi :\mathcal X \to \mathbb R^d$ myself using domain knowledge, and then train the VAE on the $\varphi(X_i)$ , but that's proven to be very hard and I want to try avoiding this. What architecture can I use to handle these directly? I've looked into things like RNNs but one aspect of this is that permuting the rows of the $X_i$ shouldn't change anything so I'm not sure how to encode that symmetry.
