[site]: stackoverflow
[post_id]: 2661465
[parent_id]: 32637
[tags]: 
/cheer for RedWolves from: this.replace(/[A-Za-z]+://[A-Za-z0-9- ]+.[A-Za-z0-9- :%&\?/.=]+/, function(m){... see: /[A-Za-z]+://[A-Za-z0-9- ]+.[A-Za-z0-9- :%&\?/.=]+/ There's the code for the addresses "anyprotocol"://"anysubdomain/domain"."anydomainextension and address", and it's a perfect example for other uses of string manipulation. you can slice and dice at will with .replace and insert proper "a href"s where needed. I used jQuery to change the attributes of these links to "target=_blank" easily in my content-loading logic even though the .link method doesn't let you customize them. I personally love tacking on a custom method to the string object for on the fly string-filtering (the String.prototype.linkify declaration), but I'm not sure how that would play out in a large-scale environment where you'd have to organize 10+ custom linkify-like functions. I think you'd definitely have to do something else with your code structure at that point. Maybe a vet will stumble along here and enlighten us.
