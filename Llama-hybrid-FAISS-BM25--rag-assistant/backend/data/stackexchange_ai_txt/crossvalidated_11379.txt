[site]: crossvalidated
[post_id]: 11379
[parent_id]: 11374
[tags]: 
Here is a toy example for simulating a one-way ANOVA in R. First, I just defined a general function that expect an effect size ( es ), which is simply the ratio MSB/MSW (between/within mean squares), a value for the MSB, the number of groups, which might or not be of equal sizes: sim.exp This function returns the p-value associated to the F-test, as well as the sample means and SDs. We can use it as follows: > sim.exp(verbose=TRUE) Df Sum Sq Mean Sq F value Pr(>F) grp 4 32.71 8.176 0.1875 0.9418 Residuals 18 784.93 43.607 > sim.exp(es=2, verbose=TRUE) Df Sum Sq Mean Sq F value Pr(>F) grp 4 555.66 138.915 33.567 1.653e-09 *** Residuals 24 99.32 4.138 --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 > sim.exp(es=.5, n=30, groups=3, verbose=TRUE) Df Sum Sq Mean Sq F value Pr(>F) grp 2 639.12 319.56 16.498 8.42e-07 *** Residuals 87 1685.13 19.37 --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Then, I created a grid of values for es and msb , that is I want to check whether varying these parameters has an effect on the estimated p-value. my.design Finally, let's use it. First, with a single replicate of each condition: for (i in 1:n.sim) my.design$p[i] As can be seen, when increasing the effect size we are more likely to reject the null (averaged over MSB): > with(my.design, aggregate(p, list(es=es), mean)) es x 1 0.2 1.178042e-01 2 0.4 1.315028e-02 3 0.6 5.765548e-02 4 0.8 5.742882e-02 5 1.0 8.940993e-05 6 1.2 9.199611e-09 7 1.4 9.115640e-06 8 1.6 8.100427e-10 9 1.8 2.656848e-07 10 2.0 3.577391e-05 11 2.2 5.477981e-14 12 2.4 1.219156e-04 The results are shown below, although for clarity I took the log of the p-value. The horizontal dashed line shows the 5% limit for type I risk. Ok, it's somewhat noisy. So, let's try to average p-values for 500 replicates in each conditions: for (i in 1:n.sim) my.design$p[i] and the results are: We can play with es only as follows: k Many other experiments are possible, and probably a better code too.
