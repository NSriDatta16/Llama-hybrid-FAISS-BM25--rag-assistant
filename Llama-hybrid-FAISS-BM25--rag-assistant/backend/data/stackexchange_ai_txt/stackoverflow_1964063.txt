[site]: stackoverflow
[post_id]: 1964063
[parent_id]: 1963926
[tags]: 
The behavior is defined in chapter 10.3, paragraph 2 of the C++ language specification: If a virtual member function vf is declared in a class Base and in a class Derived, derived directly or indirectly from Base, a member function vf with the same name and same parameter list as Base::vf is declared, then Derived::vf is also virtual ( whether or not it is so declared ) and it overrides Base::vf. A italicized the relevant phrase. Thus, if your compiler creates v-tables in the usual sense then all classes will have a v-table since all their f() methods are virtual.
