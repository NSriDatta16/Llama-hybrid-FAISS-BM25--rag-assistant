[site]: stackoverflow
[post_id]: 1383844
[parent_id]: 1383026
[tags]: 
Forget about replication or change data tracking. Those don't replicate schema and they add significant overhead. Neither is designed as a High Availability or Disaster Recoverability solution. They may be used as such, but pale in comparison with dedicated solutions like log shipping, database mirroring or hardware mirroring. Log shipping transfers everything in the database, including schema, as well as users, permissions, indexes, data and so on and so forth. You did not specify when do you transfer the log backups. Doing a differential backup every 15 minutes sounds like overkill. The differential backups are cumulative, they contain every change since the last full backup, so they will increase in size over the course of the day. 15 minutes sounds like a time period for periodic log backups, not differential ones. Log shipping relies on file copy operations from a SQL Agent job. As such it needs to access file shares and that requires authentication. Over distinct domains you'll need either Direct Access or a VPN of some sort. Database Mirroring is also creating an identical copy of the database, but its data loss window is up to seconds as opposed to the log backup interval in log shipping. Database Mirroring keeps a special connection open between the two servers and the principal ships every transaction to the mirror, as it happens, in real-time. Because mirroring endpoints support certificate based authentication it can easily be set up cross domains and does not require a VPN. DBM can be synchronous (every transaction on the principal waits for the mirror to confirm it before commit, aka. high safety mode) or asynchronous (the principal will write ahead of the mirror and commit immediately, aka. high performance mode). If connectivity is lost the principal will start running 'exposed', so you do not loose service, but you expose yourself to data loss. As soon as connectivity is regained the principal will feed the mirror the pending queue of transactions (ie. the part of the LDF file that was not shipped over yet) until the mirror is back up to date. All this is automatic and there are monitoring tools in SSMS that can be set up to send notifications when connectivity is lost, when the principal is running exposed, when the unsent-queue is growing over a pre-set size. Hardware mirroring: you need to talk with a hardware vendor or your data center operators. It costs a fortune. Overall Database Mirroring is by far your best option.
