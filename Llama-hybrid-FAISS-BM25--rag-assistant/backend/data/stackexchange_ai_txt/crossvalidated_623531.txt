[site]: crossvalidated
[post_id]: 623531
[parent_id]: 
[tags]: 
Hierarchial clustering given a list of banking syndicates

I have a list of banking syndicates (groups of banks), and I'm trying to do some hierarchical clustering on it to gather if there is some connection between them (e.g. if lots of syndicates share the same core banking group). Here are a few syndicates as an example, {{"Sumitomo Mitsui Banking Corp/New York", "Mizuho Bank Ltd/NY", "Sumitomo Mitsui Banking Corp/New York", "Sumitomo Mitsui Banking Corp/New York", "Mizuho Bank Ltd/NY", "MUFG Bank Ltd/New York NY", "Sumitomo Mitsui Banking Corp/New York"}, {"BofA Securities", "Deutsche Bank Securities Inc", "Loop Capital Markets LLC", "Morgan Stanley & Co LLC", "Wells Fargo Securities LLC", "Barclays Capital", "BNP Paribas Securities Corp", "Goldman Sachs", "Academy Securities Inc", "Amerivet Securities Inc", "BNY Mellon Capital Markets LLC", "CastleOak Securities"}, {"BMO Capital Markets Corp", "Mizuho Securities USA LLC", "RBC Capital Markets"},...} The syndicates are of different sizes. If I need to try and cluster them, do I need a measure of distance between two syndicates? Or simply between two banks? Notes: Its the syndicates that need to be considered as the points. So the idea is to cluster the syndicates. One way of getting a distance between syndicates is to use a randomly chosen embedding in 2d space of the graph (e.g. electrical embedding ) that underlies the above hypergraph $^{1}$ , and consider a syndicate of order $k$ as a $2k$ -dimensional vector of these coordinates (one pair for each bank). Then I have a way of assigning distances between syndicates based on the Euclidean distance between their corresponding vectors. Then I can use Agglomerate or something similar in Mathematica with the distance function as described. Is this right? When basically, whenever I cluster data that isn't a set of e.g. 2d coordinates, do I need to construct a distance function is this manner, or something similar? $^{1}$ i.e. the syndicates are hyperedges that intersect if they share at least one bank, and the underlying graph, if required, has the banks as nodes, and edges between banks whenever they're in the same syndicate.
