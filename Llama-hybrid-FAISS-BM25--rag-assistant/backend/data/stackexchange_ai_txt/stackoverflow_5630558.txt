[site]: stackoverflow
[post_id]: 5630558
[parent_id]: 5630113
[tags]: 
If you're designing a DSL, then you probably need to take some time thinking about the domain you're trying to map the language to. DSLs are good for removing the repetitive boilerplate you would otherwise have to write for every task, so focus on that. For your quests examples, what common things do you see yourself needing between the quests? Obviously, a lot will depend on how the quests get implemented "behind the scenes" as well. I can imagine a quest looking something like this though: Qwest "Retrieve the Grail" do given_by :pope description "Some hethan dragon took my cup, go get it back!" condition "Slay a dragon" do dragon.is_dead? end condition "Grab the Grail" do player.inventory.contains :grail end reward :phat_loot end Here, the DSL could be used to create a Quest, give it a name, conditions, reward, and assign it to a quest giver. As far as writing the DSL goes, you'll want to learn about metaprogramming in ruby. I know why_the_lucky_stiff has written an article or two about it, and the poignant guide has a chapter on it ( Dwemthyâ€™s Array in chapter 6 ). Personally I always had a hard time understanding the stuff why wrote. I end up buying Metaprogramming Ruby , and I've found it really useful.
