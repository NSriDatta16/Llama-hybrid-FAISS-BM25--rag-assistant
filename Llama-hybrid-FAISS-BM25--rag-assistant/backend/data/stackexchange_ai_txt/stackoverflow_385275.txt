[site]: stackoverflow
[post_id]: 385275
[parent_id]: 384890
[tags]: 
I haven't much experience with the Spring XML you refer, so you should take the following feedback with a pinch of salt. As a second and third caveat: providing a snippet of code will give a flavour of what the language and its semantics are. It is difficult to completely understand some of the choices you have already made (and with good reason), so any feedback here may be completely contradictory or impossible in the light of those choices. language design is as much an art as a science, and so at this stage, any feedback you may get is likely to be quite subjective. A larger, meta-, question: as a DSL are you trying to do configuration of Spring, or as a more general class of frameworks? There: caveat emptor. Now my subjective and incomplete feedback ;) I'm not sure I understand the reason why you have the @ prefix for scope and destroy-method , but not driverClassName . Also the mix of both xml-case and camelCase isn't completely apparent to start with. Is the @ prefix a type modifier, or are these keywords in the language? I'm not completely sure of your intentions about the block header format. You have class name, then a function of that class; is the intention to specify what class your are going to use for a particular function? e.g. sqlMapClient: org.springframework.orm.ibatis.SqlMapClientFactoryBean { # body. } or even: sqlMapClient { @class = org.springframework.orm.ibatis.SqlMapClientFactoryBean; # is there a sensible (perhaps built-in) default if this is missing? } I like the variable substitution ; I presume the values will come from System properties? I like being able to specify string literals (without escaping), especially for the regular expressions you've shown. However, having multi-character quote or quote modifier seems a little alien. I guess you considered the single-quote (shell and Perl use single-quotes for literal strings). On the other hand, I think the triple forward slash for multi-line TEXT is the right approach, but two reminiscent of comments in C-style languages. Python uses a triple " for this purpose. Some shell idioms have a multi-line text convention I would not copy. I very much like the look of properties and config location, using what looks like a URI notion of addressing . If this is a URI, classpath://file.xml may be clearer. I may have the wrong end of the stick here, however. I also very much like the notion of list and map literals you have, though I'm not sure where: this comes into it (I guess a call to a Java constructor) why some types are capitalized, and others are not. Do I take it that there is a default MAP type, which you can be more specific type if you wish to? is Dilbert an unquoted string literal? Finally, I'd point you to another configuration DSL, though perhaps more for sysadmin usage: Puppet . Go well.
