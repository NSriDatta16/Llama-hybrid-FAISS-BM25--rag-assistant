[site]: stackoverflow
[post_id]: 1856876
[parent_id]: 1856761
[tags]: 
It appears to work fine for me, but then I don't know what the contents of your tags are. There's a few oddities in your CSS in any case: I probably wouldn't use display: block , but wrap the tags in a or instead. Changing it to a block like that still won't allow you to nest block-level tags inside it, and it would still need to be inside a block-level tag itself. CSS doesn't change the HTML syntax and semantics. Do you have any block-level tags within your code tags? Why did you set white-space: normal ? That's a little unusual for a code block. How exactly are you formatting your code? Are you adding or tags in there? Why don't you use white-space: pre , or perhaps white-space: pre-wrap ? Your font declaration is broken. There shouldn't be a comma between the 1em and the font names. Browsers would now simply parse that as if 1em is the name of a font family, I think, and then fall back on Courier New , since 1em doesn't exist. I think you meant to say monospace instead of Fixed . Or is Fixed the actual name of a font face? You'd better add the generic monospace anyway. More of a nitpick: you can collapse those 4 margins down to one value too. I'm not sure if any of these are really the cause of your problems. The first two are the most likely candidates. Nothing strange happened on the quick tests I did, but some of your other CSS might be creating the problems in combination with some of these points. Ah, wait a minute... I see now that you're talking about making "some code look a little better on a blog" . The blog software is automatically adding paragraph tags around blocks of text separated by blank lines. Those are responsible for the white. I suppose that's also why you added white-space: normal . The blog software is already adding line breaks and everything automatically (with and tags), so using pre added a whole bunch of extra space. Try using the tags combination like StackOverflow does. Using the tag will probably (hopefully) prevent the blog software from messing with your code. For WordPress, have a look at their article " Writing Code in Your Posts ."
