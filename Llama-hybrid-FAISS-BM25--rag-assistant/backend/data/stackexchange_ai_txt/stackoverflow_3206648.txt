[site]: stackoverflow
[post_id]: 3206648
[parent_id]: 3206397
[tags]: 
Performance is an issue here It always is. When looking at this kind of code, there are two opposing trends that you have to consider: Thanks to indexing, caching, and other optimization techniques, the database server is often best positioned to make these calculation quickly. You seem to understand this. On the other hand: These calculations seldom happen in isolation. You have to take the whole server performance into account, and your database is typically the most loaded server in your data center. It's also the hardest to scale, both from a technical and business perspective. Technical because you have to balance several different components, including disk, RAM, and cpu, and it's not always easy to know where your bottlenecks are. Also, these tend to be "big" machines that not many in your organization will have experience tuning. Finally, they don't often scale out very well. You can't add another database server to share the load as easily as you could an application server. From a business standpoint, all that technical mumbo jumbo adds up to cost. More than that, the database license is itself often several thousands per cpu . Take these two points together, and the best course for performance is typically to use the querying capabilities in the database to pull down just the subset of records that you really need, and maybe do some of the easier pre-processing â€” the low-hanging fruit, if you will. Then finish the heavy lifting on an application server, in parallel if possible.
