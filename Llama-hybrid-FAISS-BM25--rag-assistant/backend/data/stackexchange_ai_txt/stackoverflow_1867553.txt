[site]: stackoverflow
[post_id]: 1867553
[parent_id]: 1820291
[tags]: 
So for anyone else finding this question, here's the story: Yes, Andy is literally correct as to why 7-Zip is failing on the file, but it doesn't help my problem since I can't exactly get people to use MY version of 7-Zip. tyranid however got me the solution. First off, adding a small bytestring to the JPG as he suggests will let 7-Zip open it. However, it's slightly off from a valid JPG fragment, it needs to be FFEF00 07 504B030400 - the length was off by 2 bytes. This lets 7-Zip open it, but not extract files, it fails silently. This is because the entries in the central directory have internal pointers/offsets that point to the entry of the file. Since you put a bunch of stuff before that, you need to correct all those pointers! To have the zip open with Windows built in zip support, you need to, as tyranid says, correct the "offset of start of central directory with respect to the starting disk number". Here is a python script to do the last two, although it's a fragment, not copypasta-ready-to-use #Now we need to read the file and rewrite all the zip headers. Fun! torewrite = open(magicfilename, 'rb') magicdata = torewrite.read() torewrite.close() #Change the Central Repository's Offset offsetOfCentralRepro = magicdata.find('\x50\x4B\x01\x02') #this is the beginning of the central repo start = len(magicdata) - 6 #it so happens, that on my files, the point is stored 2 bytes from the end. so datadatadatdaata OF FS ET !! 00 00 EOF where OFFSET!! is the 4 bytes 00 00 are the last two bytes, then EOF magicdata = magicdata[:start] + pack('I', offsetOfCentralRepro) + magicdata[start+4:] #Now change the individual offsets in the central directory files startOfCentralDirectoryEntry = magicdata.find('\x50\x4B\x01\x02', 0) #find the first central directory entry startOfFileDirectoryEntry = magicdata.find('\x50\x4B\x03\x04', 10) #find the first file entry (we start at 10 because we have to skip past the first fake entry in the jpg) while startOfCentralDirectoryEntry > 0: #Now I move a magic number of bytes past the entry (really! It's 42!) startOfCentralDirectoryEntry = startOfCentralDirectoryEntry + 42 #get the current offset just to output something to the terminal (oldoffset,) = unpack('I', magicdata[startOfCentralDirectoryEntry : startOfCentralDirectoryEntry+4]) print "Old Offset: ", oldoffset, " New Offset: ", startOfFileDirectoryEntry , " at ", startOfCentralDirectoryEntry #now replace it magicdata = magicdata[:startOfCentralDirectoryEntry] + pack('I', startOfFileDirectoryEntry) + magicdata[startOfCentralDirectoryEntry+4:] #now I move to the next central directory entry, and the next file entry startOfCentralDirectoryEntry = magicdata.find('\x50\x4B\x01\x02', startOfCentralDirectoryEntry) startOfFileDirectoryEntry = magicdata.find('\x50\x4B\x03\x04', startOfFileDirectoryEntry+1) #Finally write the rewritten headers' data towrite = open(magicfilename, 'wb') towrite.write(magicdata) towrite.close()
