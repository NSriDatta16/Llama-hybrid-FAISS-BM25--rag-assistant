[site]: stackoverflow
[post_id]: 4796432
[parent_id]: 4796278
[tags]: 
Should I implement "drafts" of content in my application? Only you can answer your question depending on your customer's requirements. What holds the data while it is being edited and how to manage user logins/logouts/session timeouts/navigating from the content being edited? I would recommend sending AJAX requests at regular intervals to a server side script which would associate the draft to the currently logged in user and the post being edited and save it in the datastore. While the data is being edited it is hold inside the client browser (usually inside an HTML element with input fields). When the user submits the data it is no longer considered as draft and you could delete the corresponding entry in the drafts table and persist the final revision. When the user navigates to a page which has the draft functionality implemented you could check into the database whether a draft exists for the content being edited and automatically prefill the form values. One of the drawbacks of this approach is that if the user session expires you will no longer be able to save drafts at regular intervals because you won't be able to associate it to a user. Then again you could use sessions with sliding expirations and because of the AJAX requests sent at regular intervals (smaller than the session timeout) the session won't expire until the user is editing the page. Another approach consists in storing the draft on the client. Here you could consider using either persistent cookies or if the browser supports it HTML5 client storage .
