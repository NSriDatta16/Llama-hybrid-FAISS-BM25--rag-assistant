[site]: crossvalidated
[post_id]: 35105
[parent_id]: 
[tags]: 
Manifold regularization using laplacian graph in SVM

I'm trying implement Manifold Regularization in Support Vector Machines (SVMs) in Matlab. I'm following the instructions in the paper by Belkin et al.(2006), there's the equation in it: $f^{*} = \text{argmin}_{f \in H_k}\sum_{i=1}^{l}V\left(x_i,y_i,f\right)+\gamma_{A}\left\| f \right\|_{A}^{2}+\gamma_{I}\left\| f \right\|_{I}^{2}$ where V is some loss function and $\gamma_A$ is the weight of the norm of the function in the RHKS (or ambient norm), the enforces a smoothness condition on the possible solutions, and $\gamma_I$ is the weight of the norm of the function in the low dimensional manifold (or intrinsic norm), that enforces smoothless along the sampled M. The ambient regularizer makes the problem well-posed, and its presence can be really helpful from a practical point of view when the manifold assumption holds at a lesser degree. It has been shown in Belkin et al. (2006) that $f^*$ admits an expansion in terms of $n$ points of S, $f^*(x)=\sum_{i=1}^{n}\alpha_i^*k(x_i,x)$ The decision function that discriminates between class +1 and -1 is $y(x)=sign(f^*(x))$. The problem here is, I'm trying to train SVM using LIBSVM in MATLAB but I don't want to modify the original code, so I have found the precomputed version of the LIBSVM which instead of taking input data, and output groups as parametes, gets Kernal matrix computed and the output groups and trains the SVM model. I'm trying the feed it with the regularized Kernel matrix (Gram Matrix) and let it do the rest. I tried to find the formula which regularizes the Kernal and came to this: Defining $I$ as the identity matrix with the same dimension as the Kernel Matrix, $K$ $G=\frac{2\gamma_AI + 2\gamma_ILK}{I}$ $Gram = KG$ In which $L$ is the Laplacian Graph Matrix, $K$ is the Kernel Matrix and $I$ is the identity matrix. And $Gram$ is computed using inner multiplication of two matrices $K$ and $G$. Is there anyone who can help me figure out how this is computed?
