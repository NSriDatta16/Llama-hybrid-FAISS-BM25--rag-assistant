[site]: stackoverflow
[post_id]: 1897610
[parent_id]: 1893828
[tags]: 
You're describing a fairly standard table-driven app. I don't have the inclination to download and parse through your zipped source code, and you haven't asked a specific question, but I'll try and help anyway. Basically, with these kinds of apps, each different screen is a separate .xib containing its own UITableView . Since you already have your "root" screen running, you're already familiar with this pattern. Implementing the behaviour for your first option involves detecting when a cell has been tapped, determining which cell was tapped, and then using the navigation controller to pop the next view on the stack while simultaneously clearing the selection (to follow Apple's UI guidelines). Here's the basic pattern: #pragma mark Table Delegate Methods - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath { if ([indexPath row] == 0) { FooViewController* fooViewController = [[FooViewController alloc] initWithNibName:@"FooView" bundle:nil]; [self.navigationController fooViewController animated:YES]; [fooViewController release]; } else if ([indexPath row] == 1) { BarViewController* barViewController = [[BarViewController alloc] initWithNibName:@"BarView" bundle:nil]; [self.navigationController barViewController animated:YES]; [barViewController release]; } [tableView deselectRowAtIndexPath:indexPath animated:YES]; // Conform to Apple human-interface guidelines (Table View Programming Guide for iPhone OS) }
