[site]: crossvalidated
[post_id]: 520600
[parent_id]: 
[tags]: 
Solving for the parameters of a discrete markov state model

I have some observations $y_t \in \mathbb{R}_+, t\in 0 \dots n$ , and I'd like to fit the following model: a vector of initial states $p_0 \in \mathbb{R}^s_+$ , transition probabilities $K \in \mathbb{R}^{s \times s}_+$ , and emission probabilities $b \in [0,1]^s$ , satisfying: $$ \min_{p_0, K, b} \sum_{t=0}^n (y_t - p_0^TK^tb)^2 $$ This is similar to an HMM except that every hidden state contributes to the emission, or a Markov Chain/Markov State Model where the states are hidden by the emission probabilities $b$ . This feels like it should be easier than estimating the parameters of an HMM, but I've looked at MSMBuilder , hmmlearn , and PyEmma , and none of them quite work. The HMM modules can't handle the existence of a distribution over hidden states and the Markov Chain models seem to expect that the states are observed instead of hidden behind emission probabilities.
