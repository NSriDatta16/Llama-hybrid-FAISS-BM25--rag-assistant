[site]: stackoverflow
[post_id]: 1510031
[parent_id]: 
[tags]: 
How do you test the IEnumerable.GetEnumerator() method?

Let's say I for example have this class that generates Fibonacci numbers: public class FibonacciSequence : IEnumerable { public IEnumerator GetEnumerator() { var a = 0UL; var b = 1UL; var c = a + b; while (true) { yield return c; c = a + b; a = b; b = c; } } IEnumerator IEnumerable.GetEnumerator() { return GetEnumerator(); } } I can then write a test that makes sure that the n first numbers in the sequence are correct. [Test] public void GetEnumerator_FirstFifteenNumbers_AreCorrect() { var sequence = new FibonacciSequence().Take(15).ToArray(); CollectionAssert.AreEqual(sequence, new[] {1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610}); } When I check for coverage however, I will see that the non-generic IEnumerable.GetEnumerator() method is untested, and my coverage will be lower than it really needs to be. Fair enough. But how should I test that method? How do you usually deal with this?
