[site]: stackoverflow
[post_id]: 2540369
[parent_id]: 329160
[tags]: 
From experience, designing the database first (based on requirements), can lead to things going very smoothly. This is especially true if your data does not just relate to data entered in the UI, but may include pre-existing data related to or imported for the project. On a mid-size project I may go through 100+ iterations of the DB using an ERD diagramming tool like Erwin or Power SQL. Then, click the forward-engineer button to get the DDL. The domain objects will typically look a lot like your main tables, however they will often have collections where the DB has look-up tables, etc. Also your domain objects may have other objects in them for organizational purposes, etc. Then wire up a DAL either hand-rolled or ORM of your choice. Thing is, none of the tools designed to automate this process seem to do it 100%. In a code utopia, I guess you could just create the DB model and have the perfect domain model created or vice versa, and than get a perfect ORM with a few clicks. In reality, this is a lot harder than it sounds, and subtle issues can arise like performance and flexibility.
