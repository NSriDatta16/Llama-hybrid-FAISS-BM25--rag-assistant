[site]: crossvalidated
[post_id]: 557479
[parent_id]: 555543
[tags]: 
If I understand correctly, you have a sequence of observations $\{(X^t_1,\dots, X^t_p)\}_t$ and you want to compute the matrix $$Corr(t)_{ij}=\sum_{t'=t-n+1}^t (X^{t'}_i-\mu_i^{t})(X^{t'}_j-\mu_j^{t})\left(\sum_{t'=t-n+1}^t (X_i^{t'}-\mu_i^t)^2\sum_{t'=t-n+1}^t (X^{t'}_j-\mu_j^t)^2\right)^{-1/2}$$ where $\mu_i^t=n^{-1}\sum_{t'=t-n+1}^t X^{t'}_i$ is the n-lag mean. Like I mentioned above, you can write this in terms of the lag-n covariance matrix in the usual way, so it is enough to compute the covariance $Cov(t)_{ij}=n^{-1}\sum_{t'=t-n+1}^t (X^{t'}_i-\mu_i^{t})(X^{t'}_j-\mu_j^{t})$ , from which you can read off the correlations. I think the easiest way to do it is to keep track of both the mean vector $\mu^t_i$ as well as the "uncentered covariances" $CovU(t)_{ij}=n^{-1}\sum_{t'=t-n+1}^t X^{t'}_iX^{t'}_j$ . Each of these can be updated in responses to a new observation simply by adding and removing one value at a time. Then once you have updated these values, you can read off the covariance by the formula $Cov(t)_{ij}=CovU(t)_{ij}-\mu^t_i\mu^t_j$ and likewise the correlations by $Corr(t)_{ij}=Cov(t)_{ij}/\sqrt{Cov(t)_{ii}Cov(t)_{jj}}$ . Also, depending on what you ultimately want to do, it may be worth trying an exponentially weighted moving average, rather than a hard cutoff. This has the advantage that you only have to store the previous estimate (rather than the previous estimate, as well as the previous n observations), and the update equation is considerably simpler.
