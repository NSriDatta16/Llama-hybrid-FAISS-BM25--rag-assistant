[site]: stackoverflow
[post_id]: 4027641
[parent_id]: 4027508
[tags]: 
I am not proficient neither with Django nor Python but I suppose the basic logic is similar for all server-side languages. When weighing the pros and cons of either approach things depend on what you want to optimize. If bandwidth is important then obviously using pure JSON in communication reduces latency when compared to transmitting ready-made HTML. However, duplicating the server-side view functionality to Javascript is a tedious and error-prone process. It simply takes a lot of time. I personally feel that in most cases (for small and medium traffic sites) it's perfectly fine to put the HTML fragment together on server side and simply replace the contents of a container (e.g. contents of a div ) inside an AJAX callback function. Of course, replacing the whole page would be silly, hence your Django application needs to support outputting specific regions of the document.
