[site]: crossvalidated
[post_id]: 304317
[parent_id]: 
[tags]: 
Hidden Markov Models as Dynamic Bayesian Networks

I'm working on a project where I'm trying to classify violent events into different latent states (e.g., low, medium, and high). Each series is distributed Poisson and I'm controlling for population growth. Previously, I used a frequentist Hidden Markov Model (HMM) via the depmixs4 package in R, but this does not provide standard errors for the estimated intercept for each latent state. I need some measure of uncertainty in order to proceed. After a bit of research, I learned that HMMs could be considered Dynamic Bayesian Networks (DBNs) and the posterior density will give me the uncertainty that I need. Fine. The problem I'm running into finding the best way to implement the Bayesian network to classify the violent event series into latent categories. From what I've read, most people dabbling in DBNs have more complex data structures and already have some predefined idea of the categories they try to link observations to. My problem seems to be much simpler than that, yet I'm having trouble understanding: a) why I can implement a HMM as a simple DBN b) how I can implement a HMM as a simple DBN I've read Scutari et al.'s (2013) chapter on DBNs, but their discussion does not answer my question. It seems to be a lot of "hand-waving" about HMMs as DBNs and walkthrough on using frequentist VAR models. With that said, can anyone point me in the right direction for my classification problem (preferably in a Bayesian context) for both conceptual and implementation guidance? I'm also considering using a Bayesian particle filter, but I'm still investigating whether that is appropriate for my problem. Thank you for your help.
