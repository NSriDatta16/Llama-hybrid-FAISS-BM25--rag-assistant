[site]: stackoverflow
[post_id]: 2365211
[parent_id]: 2365132
[tags]: 
Something to take into consideration is that Autoincrements are generated one at a time and cannot be solved using a parallel solution. The fight for using UUIDs eventually comes down to what you want to achieve versus what you potentially sacrifice. On performance, briefly : A UUID like the one above is 36 characters long, including dashes. If you store this VARCHAR(36), you're going to decrease compare performance dramatically. This is your primary key, you don't want it to be slow. At its bit level, a UUID is 128 bits, which means it will fit into 16 bytes, note this is not very human readable, but it will keep storage low, and is only 4 times larger than a 32-bit int, or 2 times larger than a 64-bit int. I will use a VARBINARY(16) Theoretically, this can work without a lot of overhead. I recommend reading the following two posts: Brian "Krow" Aker's Idle Thoughts - Myths, GUID vs Autoincrement To UUID or not to UUID ? I reckon between the two, they answer your question.
