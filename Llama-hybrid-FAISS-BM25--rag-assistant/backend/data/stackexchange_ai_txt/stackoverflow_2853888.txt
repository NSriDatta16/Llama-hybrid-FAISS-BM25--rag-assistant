[site]: stackoverflow
[post_id]: 2853888
[parent_id]: 2853725
[tags]: 
FirePHP : FirePHP enables you to log to your Firebug Console using a simple PHP method call. All data is sent via response headers and will not interfere with the content on your page. FirePHP is ideally suited for AJAX development where clean JSON and XML responses are required. Here is a minimalistic implementation I wrote: function FirePHP($message, $label = null, $type = 'LOG') { static $i = 0; if (headers_sent() === false) { $type = (in_array($type, array('LOG', 'INFO', 'WARN', 'ERROR')) === false) ? 'LOG' : $type; if (($_SERVER['HTTP_HOST'] == 'localhost') && (strpos($_SERVER['HTTP_USER_AGENT'], 'FirePHP') !== false)) { $message = json_encode(array(array('Type' => $type, 'Label' => $label), $message)); if ($i == 0) { header('X-Wf-Protocol-1: http://meta.wildfirehq.org/Protocol/JsonStream/0.2'); header('X-Wf-1-Plugin-1: http://meta.firephp.org/Wildfire/Plugin/FirePHP/Library-FirePHPCore/0.3'); header('X-Wf-1-Structure-1: http://meta.firephp.org/Wildfire/Structure/FirePHP/FirebugConsole/0.1'); } header('X-Wf-1-1-1-' . ++$i . ': ' . strlen($message) . '|' . $message . '|'); } } } I wrote it so that it only works on localhost (for security reasons), but you can easily change that by replacing the following code: if (($_SERVER['HTTP_HOST'] == 'localhost') && (strpos($_SERVER['HTTP_USER_AGENT'], 'FirePHP') !== false)) With: if (strpos($_SERVER['HTTP_USER_AGENT'], 'FirePHP') !== false)
