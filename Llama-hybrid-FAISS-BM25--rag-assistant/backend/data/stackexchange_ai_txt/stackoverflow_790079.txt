[site]: stackoverflow
[post_id]: 790079
[parent_id]: 790029
[tags]: 
One issue this ignores is users running input method (editors) -- eg. non-latin text entry. The IME i am familiar with is the Kotoeri Hiragana IM on OSX, but there are numerous others both for japanese (Kotoeri alone has multiple different input modes, and there's at least one other major one called ATOK), in addition to modes for hangul, traditional and simplified chinese, as well as numerous other less well known languages. And these input methods exist on all major platforms (esp. Win, Mac, and Linux). The problem that they introduce from the point of view of code similar to what you're attempting is that the exact physical keypresses does not necessarily correspond to the actual input that the user is entering. For example typing the sequence of characters toukyou under hiragana by default will produce the string とうきょう , note that there is no in the resultant text because enter confirms the composed text. But in addition to this the actual sequence of characters that appears changes as the input is typed: t // t と // to とう // tou とうk // touk とうky // touky とうきょ // toukyo とうきょう // toukyou If memory serves when i implemented this in webkit it was necessary to make the keyCode be 229 on keyDown for all keys typed in an IME (for compat with IE) -- but i cannot recall what the behaviour of keyUp is. It's also worth noting that in some IMEs you won't necessarily receive keydowns, keypress, or keyup. Or you will receive multiple. Or they're all sent together at the end of input. In general this is a very... unclean... portion of the DOM event implementations currently.
