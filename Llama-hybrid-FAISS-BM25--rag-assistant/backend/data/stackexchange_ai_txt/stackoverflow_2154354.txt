[site]: stackoverflow
[post_id]: 2154354
[parent_id]: 2154125
[tags]: 
delete false claim The number of comparisons in the first two is 1/2*n(n-1), excluding those for the outer loops. None of these programs make much sense for real work as they stand, because they don't make use of the information at their disposal. For instance, it is easy to add a check to the inner loop to see if any swaps have been made: if not then the array is sorted, and you can finish, perhaps saving most of the work. In practice, these kinds of consideration can dominate the average case. Postscript Missed the question about Java: I understand that Java's sort is a pretty complex algorithm, which uses a lot of special cases, such as specialised sorting cases for small arrays, and using quicksort to do its heavy lifting.
