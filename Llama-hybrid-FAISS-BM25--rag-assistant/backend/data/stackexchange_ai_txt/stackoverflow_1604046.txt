[site]: stackoverflow
[post_id]: 1604046
[parent_id]: 1603617
[tags]: 
I wrote a jQuery plugin to do this kind of thing that can be easily adapted for your use case. The original plugin is here Here's a revamp for you question (function($) { $.fn.reOrder = function(array) { return this.each(function() { if (array) { for(var i=0; i and use like so var category_sort_order = ['any', 'product', 'download']; $('#input').reOrder(category_sort_order); This happens to get the right order for the products this time as product1 appears before product2 in the original list, but it could be changed easily to sort categories first before putting into the array and appending to the DOM. Also, if using this for a number of elements, it could be improved by appending all elements in the array in one go instead of iterating over the array and appending one at a time. This would probably be a good case for DocumentFragments .
