[site]: stackoverflow
[post_id]: 4775981
[parent_id]: 4775757
[tags]: 
First of all, homegrowing a single (front controller) servlet without adopting an existing one (e.g. Spring's DispatcherServlet , JSF's FacesServlet , Wicket's WicketServlet , etc) is quite a work. But you finally end up with simpler and better reuseable/maintainable business code. There are usually no multiple front controller servlets on an average webapplication. There should be only one. It's hard to tell whether you really need one or not. If you after all have only 3 web forms (and thus 3 servlets) in your webapp and this won't ever change in long term, then it's probably not worth the effort to spend days on homegrowing a MVC framework or diving into learning an existing MVC framework. It's hard to tell where's the border. But if you can be certain that the webapp in question needs expansion and/or enhances in the future, then it's really better to adopt the MVC pattern (i.e. a single front controller servlet) right now than then. At least, if you intend to homegrow, then you can find a lot of useful insights in this answer . But reusing an existing framework will end up to be much better maintainable since there's much more chance to find one who already knows the framework from top to bottom so that s/he don't need to learn another framework before being able to maintain your webapp.
