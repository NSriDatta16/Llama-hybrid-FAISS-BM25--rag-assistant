[site]: stackoverflow
[post_id]: 1264595
[parent_id]: 1264296
[tags]: 
You're on the right track. In your QuizController xib, you can create separate views by dragging them to the xib's main window rather than to the QuizController's main view. Then you can design each view you need according to your question types. When the user taps next or previous, remove the previous view and load the view you need based on your question type using -addSubview on the view controller's main view and keep track of which subview is currently showing. Trying something like this: [currentView removeFromSuperView]; switch(questionType) { case kMultipleChoice: [[self view] addSubview:multipleChoiceView]; currentView = multipleChoiceView; break; case kOpenEnded: [[self view] addSubview:openEndedView]; currentView = openEndedView; break; // etc. } Where multipleChoice view and openEndedView are UIView outlets in your QuizController connected to the views you designed in IB. You may need to mess with the position of your view within the parent view before you add it to get it to display in the right place, but you can do this with calls to -setBounds/-setFrame and/or -setCenter on the UIView.
