[site]: crossvalidated
[post_id]: 541414
[parent_id]: 541404
[tags]: 
This is a time series type problem with high cardinality features (i.e. the id of each machine could be a feature in itself, location, city and country etc. are also pretty high cardinality). That suggests to me that neural network based methods with embeddings for these high cardinality features could be attractive (especially if in production use of the model you would be able to re-train after there's a bit of data for each machine so that the model can learn a good embedding for new machines - that helps to address the "cold start problem"). The time series nature of the problem might suggest something like a LSTM model, but even a standard neural network might work. I would imagine that having local time, flagging typical working hours, flagging public holidays, school vacations, weekend vs. weekday, lagged features that would be available in practice when the model is used (e.g. usage 7 days ago, usage yesterday, usage in last week etc.) etc. as additional features could be helpful, too. Exactly what features are helpful depends of course a bit on what these machines exactly are in what context they are used (and features you cannot get might not be helpful). The other thing to consider is a good validation strategy to figure out how well the model works when tuning hyperparameters would be a good idea, probably a past-vs-future split (or multiple ones to also cover multiple situations for what the last data may have been - that may also give you a hint how far into the future you can predict well and at what point predictions degrade unless you retrain = clue as to re-training frequency).
