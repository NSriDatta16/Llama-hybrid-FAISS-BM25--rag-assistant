[site]: stackoverflow
[post_id]: 1958304
[parent_id]: 1957212
[tags]: 
I'd recommend for application-based testing. Even if the scaffolding can be hard and costly to build, there is a lot to gain here: crash only once process as opposed to one system ability to use standard tool set (debugger, memory checker ...) overcome the hardware availability limitation faster feedback: no installation in device, just compile and test ... As far as naming is concerned, this can be called component testing. The application can either initialize the device driver the same way the target OS does, or use directly the interns of the driver. The former is more expensive but leads to more coverage. Then the linker will tell which functions are missing, stub them, possibly using exploding stubs .
