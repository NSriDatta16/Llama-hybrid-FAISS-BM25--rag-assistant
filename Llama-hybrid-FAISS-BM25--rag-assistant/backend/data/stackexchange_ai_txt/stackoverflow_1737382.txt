[site]: stackoverflow
[post_id]: 1737382
[parent_id]: 1737351
[tags]: 
It's largely a style preference, but also depends on how complex your code is. If you're writing a short, isolated script that will likely not be imported elsewhere, bringing lots of names into your namespace (i.e. Table, Column) isn't a problem and makes the code easier to read. If, on the other hand, you expect your module to be large and imported by other modules or third parties, you want to keep you namespace as clean as possible. Having the Table and MetaData classes in a separate namespace keeps them organized and clearly scoped. That is, if you're using the schema namespace, you can clearly tell that >>> schema.Table refers to the Table in the schema module and not another Table defined elsewhere. Otherwise, the objects are exactly the same. >>> from sqlalchemy import schema >>> from sqlalchemy import Table >>> Table is schema.Table True
