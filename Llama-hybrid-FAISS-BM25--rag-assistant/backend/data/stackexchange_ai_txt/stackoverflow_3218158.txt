[site]: stackoverflow
[post_id]: 3218158
[parent_id]: 3216577
[tags]: 
Here's a cleaned-up, functional version of your code! I tested it myself, though I didn't write unit tests. There were some syntax errors and other miscellaneous problems with the original code, so I took some liberties. I'm assuming that the protocol is framed by using ; as a delimiter, since a ; is sent at the end of every message to the client, though no framing was being done in the original code. from twisted.internet import reactor, protocol, task from twisted.protocols import basic from twisted.python import log import sys class ServerProtocol(basic.LineOnlyReceiver): delimiter = ';' def lineReceived(self, line): if line.startswith('I'): user = dict(uid=line[1:6], x=line[6:9], y=line[9:12]) self.factory.users[user['uid']] = user log.msg(repr(self.factory.users)) self.startUpdateClient() self.sendLine('Beginning - Initialized') elif line.startswith('A'): self.sendLine(line) else: self.transport.loseConnection() def _updateClient(self): if self._running == 0: self._looper.stop() return self._running -= 1 self._test += 1 self.sendLine('Test Queue Data #%d' % (self._test,)) def startUpdateClient(self): self._running, self._test = 20, 0 self._looper = task.LoopingCall(self._updateClient) self._looper.start(1, now=False) class Server(protocol.ServerFactory): protocol = ServerProtocol def __init__(self): self.users = {} if __name__ == '__main__': log.startLogging(sys.stderr) reactor.listenTCP(2000, Server()) reactor.run()
