[site]: stackoverflow
[post_id]: 4869631
[parent_id]: 4869586
[tags]: 
Any set of column(s) can be a clustered index... there is no requirement that I know of which forces you to use a PK constraint in order to build a clustered index. More over I do not understand how a client could REQUIRE a clustered index. It might make them as a default but that's different than require. This is often reported as a "best practice" for SQL Server, but to the client, there's no real distinction between a secondary b-tree index on a column and the clustered index which orders the table's record. How would the client be able to distinguish the underlying storage of the data? One stores the data ordered by the cluster key, the other doesn't. Maybe fluent-nhibernate performs better, or claims to - but it will "work" without any indexes. But I'm not an expert in either so YMMV.
