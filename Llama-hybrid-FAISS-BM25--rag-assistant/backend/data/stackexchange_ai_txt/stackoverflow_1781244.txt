[site]: stackoverflow
[post_id]: 1781244
[parent_id]: 1780372
[tags]: 
UPDATE: Incorporating @ Hogan 's suggestion fully ... and testing it. :) This EXPLAIN s much simpler, and should be a better performer. Again, presuming ANSI_QUOTES behavior: SELECT tq.sym AS sym, (100*(alast.adj_nav - afirst.adj_nav)/afirst.adj_nav) AS quarterly_returns FROM (SELECT symbol_header_id AS sym, -- find first/last traded day ("ftd", "ltd") MIN("date") AS ftd, MAX("date") AS ltd FROM symbol_details WHERE "date" BETWEEN @quarterstart AND @quarterend GROUP BY 1) tq JOIN symbol_details afirst -- JOIN for ADJ_NAV on first traded day ON tq.sym = afirst.symbol_header_id AND tq.ftd = afirst."date" JOIN symbol_details alast -- JOIN for ADJ_NAV on last traded day ON tq.sym = alast.symbol_header_id AND tq.ltd = alast."date" ORIGINAL: Presuming SET SESSION sql_mode = 'ANSI_QUOTES' , try this: SELECT tq.sym AS sym, (100*(adj_end - adj_begin)/adj_begin) AS quarterly_returns FROM -- First, determine first traded days ("ftd") and last traded days -- ("ltd") in this quarter per symbol (SELECT symbol_header_id AS sym, MIN("date") AS ftd, MAX("date") AS ltd FROM symbol_details WHERE "date" BETWEEN @quarterstart AND @quarterend GROUP BY 1) tq JOIN -- Second, determine adjusted NAV for "ftd" per symbol (see WHERE) (SELECT symbol_header_id AS sym, "date" AS adate, adj_nav AS adj_begin FROM symbol_details) afirst ON afirst.sym = tq.sym JOIN -- Finally, determine adjusted NAV for "ltd" per symbol (see WHERE) (SELECT symbol_header_id AS sym, "date" AS adate, adj_nav AS adj_end FROM symbol_details) alast ON alast.sym = tq.sym WHERE afirst.adate = tq.ftd AND alast.adate = tq.ltd;
