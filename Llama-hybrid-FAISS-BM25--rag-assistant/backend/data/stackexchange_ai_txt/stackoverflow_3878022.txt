[site]: stackoverflow
[post_id]: 3878022
[parent_id]: 
[tags]: 
Organizing Long Scripts In Separate Files?

In an attempt to organize my code, I'm trying to split up my (lengthy) main controller class into separate files, but my new files must still have access to the variables and functions of the main controller class. I'm trying to cut and paste code from my controller class into a new class/file, allowing the controller class to call the new class, and allowing the new class to have access to the controller class's properties and function. Assuming I'm not totally bludgeoning appropriate design patterns, below is my unsuccessful attempt at accomplishing this task: package { import flash.display.Sprite; import flash.events.Event; public class Test extends Sprite { public var myString:String; public function Test() { if (stage) init(null); else addEventListener(Event.ADDED_TO_STAGE, init); } private function init(evt:Event):void { if (hasEventListener(Event.ADDED_TO_STAGE)) removeEventListener(Event.ADDED_TO_STAGE, init); /////////////// MOVE COMMENTED CODE TO NEW FILE /////////////////////// // // //Assign The String A Value // myString = "Hello world"; // // //Draw A Blue Square // var sq:Sprite = new Sprite(); // sq.graphics.beginFill(0x0000FF); // sq.graphics.drawRect(10, 10, 100, 100); // sq.graphics.endFill(); // super.addChild(sq); // // //Call Tracer Function // tracer(); // ////////////////////////////////////////////////////////////////////// //Call pasted method in NewFile.as NewFile.myNewFunction(); // new file doesn't have access to the Controller class - doesn't work. how can i write the new file so that it does have access to the properties, functions, stage, etc. of the Controller class, as if its code was never removed and is still in its original place. package { public class NewFile { public static function myNewFuntion():void { //Assign The String A Value myString = "Hello world"; //Draw A Blue Square var sq:Sprite = new Sprite(); sq.graphics.beginFill(0x0000FF); sq.graphics.drawRect(10, 10, 100, 100); sq.graphics.endFill(); super.addChild(sq); //Call Tracer Function tracer(); } } }
