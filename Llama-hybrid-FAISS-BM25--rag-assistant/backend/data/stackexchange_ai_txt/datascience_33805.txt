[site]: datascience
[post_id]: 33805
[parent_id]: 33789
[tags]: 
Perhaps you could frame this as predicting a distribution (I hope I haven't mis-understood your question!). You could try using Markov Chain Monte Carlo (don't be scared by the name!). What this essentially does, it to sample a posterior distribution from your input data and see how likely it was that is is related to your prior distribution (your data). If it thinks the sample fits with your data, it keeps puts it records that sample, otherwise it discards it. It keeps searching like this until some stop-criterion is reached. All the accepted points that were recorded then represent your target distribution, which can be N-dimensional (and so hopefully matches your use-case). Here is a quick video introduction to the topic in general, and here is a deeper video explanation . Here is a more thorough text-based introduction . You can get started doing this with packages like: PyMC3 ( code and docs ) if you use Python. There are interactive examples here, e.g. the PyMC3_tips_and_heuristic notebook too. If you use R, then there is the mcmc package .
