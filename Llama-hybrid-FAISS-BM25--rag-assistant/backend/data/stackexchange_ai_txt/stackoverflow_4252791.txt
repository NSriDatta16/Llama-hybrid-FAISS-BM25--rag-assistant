[site]: stackoverflow
[post_id]: 4252791
[parent_id]: 4252695
[tags]: 
One thing I would suggest is changing this. #define VU_METER_FREQUENCY 1.0/5.0 That says update 5x a second, the issue is that I think apple will hold 0.2s of samples, so you really are getting an average of the sounds, hence the meter is not really following the highs and lows of the sounds but more of a lower average. I think this setting can go as high as 1.0/60 (60hz). As for making the meter smooth, that is a little tricker. You could do something like this. Create an array that holds 7-8 values. every time you get a reading, add it to the array and pop the 7th value of (eg only hold the last seven values. Find the average of the array (sum the array / divide by the number of elements in the array. Display this average. So its a bit like filling up a pipe, and once you stop filling it will take some time for it to empty and needle will slowly fall down. OR you could only allow the needle to fall down only so much every cycle. Lets say the needle swings be 0 (lowest value) and 1 (highest value far right hand side). Lets also say you sample at 20hz (20x times a second). Every time you update the position only allow the needle to rise say 0.1 of a value max and fall only 0.05 of value. you could do something like this and play with the values to get it nice and smooth. if newValue>currentMeterValue currentMeterValue = Min(currentMeterValue + 0.1, newValue); else currentMeterValue = Max(currentMeterValue - 0.05, newValue); OR You simply move the meter at a rate proportionally to the distance between each value (this should smooth it nicely) and actually be close to real meter with a spring pushing against the needle which is powered by an electromagnet. currentMeterValue += (newValue - currentMeterValue)/4.0;
