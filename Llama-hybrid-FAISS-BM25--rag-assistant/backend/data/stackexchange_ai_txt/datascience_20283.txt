[site]: datascience
[post_id]: 20283
[parent_id]: 
[tags]: 
I trained my data and obtained a training score of 0.957. Why can't I get the data to provide a prediction even against the same training data?

I have tried to debug this, but have not made any headway. Any ideas on how to proceed? I believe I am invoking everything correctly. Here is a snippet of the code: if _trainWithModel: print("Training using model") svc = svm.SVC(C=0.001, verbose=10, kernel='rbf', gamma=0.00000001) fittedSvc = svc.fit(trainingData.data, trainingData.target) print("Scoring training results = ", fittedSvc.score(trainingData.data, trainingData.target)) print("Sanity check. Predicting using training data model") temp_predictedTarget = fittedSvc.predict(trainingData.data) realTarget = np.array([trainingData.target]) predictedTarget = np.array([temp_predictedTarget]) print"Prediction results shapes: trainingData.data=", trainingData.data.shape, ", temp_predictedTarget=", temp_predictedTarget.shape, \ ", realTarget=", realTarget.shape, ", predictedTarget=", predictedTarget.shape print"Prediction sanity checks predictData.target sum=", sum(trainingData.target), \ ", temp_predictedTarget sum=", sum(temp_predictedTarget), \ ", predictedTarget sum=", np.sum(predictedTarget), \ ", realTarget sum=", np.sum(realTarget) confusion = confusion_matrix(trainingData.data, temp_predictedTarget) print "Confusion matrix: \n", confusion Here is the key output from this: Training using model [LibSVM].. Warning: using -h 0 may be faster * optimization finished, #iter = 2430 obj = -4.860000, rho = -1.000054 nSV = 4860, nBSV = 4860 Total nSV = 4860 ('Scoring training results = ', 0.95715721363211625) Sanity check. Predicting using training data model Prediction results shapes: trainingData.data= (56719L, 108L) , temp_predictedTarget= (56719L,) , realTarget= (1L, 56719L) , predictedTarget= (1L, 56719L) Prediction sanity checks predictData.target sum= 2430.0 , temp_predictedTarget sum= 0.0 , predictedTarget sum= 0.0 , realTarget sum= 2430.0 Confusion matrix: [[54289 0] [ 2430 0]]
