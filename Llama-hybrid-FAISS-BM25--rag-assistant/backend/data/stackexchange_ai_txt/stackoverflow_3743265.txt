[site]: stackoverflow
[post_id]: 3743265
[parent_id]: 3742449
[tags]: 
To get the first 10: (from x in Titles where x.Instant.Available==true where x.AverageRating>=4.0 orderby x.AverageRating descending select new {x.Name, x.Rating, x.AverageRating, x.ShortSynopsis} ).Take(10) To filter by a single genre (Not what you want...): from g in Genres from t in g.Titles where g.Name == "Horror" where t.Instant.Available==true where t.AverageRating >=4.0 orderby t.AverageRating descending select new {t.Name, t.Rating, t.AverageRating, t.ShortSynopsis} However, you wanted to have multiple genres BUT OData doesn't support Select Many queries which is why contains fails or trying to OR the Genre Name. Below fails because contains returns many... var q1 = from g in Genres from t in g.Titles where g.Name.Contains("Horror") where t.Instant.Available==true where t.AverageRating >=4.0 orderby t.AverageRating descending select new {t.Name, t.Rating, t.AverageRating, t.ShortSynopsis}; To filter by multiple genres I found you can use a Concat or Union query (in LinqPad be sure to change to C# statements not expression): var q1 = from g in Genres from t in g.Titles where g.Name=="Horror" where t.Instant.Available==true where t.AverageRating >=4.0 orderby t.AverageRating descending select new {t.Name, t.Rating, t.AverageRating, t.ShortSynopsis}; var q2 = from g in Genres from t in g.Titles where g.Name=="HBO" where t.Instant.Available==true where t.AverageRating >=4.0 orderby t.AverageRating descending select new {t.Name, t.Rating, t.AverageRating, t.ShortSynopsis}; var concat = q1.ToList().Concat(q2); //var union = q1.Union(q2); By unioning the two queries it will remove duplicates but these are what you want If I understand you correctly in that you want movies that are only in both genres? In that case you will want to use Concat which will return all records. Now you just need to find records that are in the query more than once and you have your results: var results = from c in concat group c by c.Name into grp where grp.Count() > 1 select grp;
