[site]: stackoverflow
[post_id]: 4731545
[parent_id]: 4731510
[tags]: 
I've read some articles and book chapters on object oriented JS about how to simulate namespaces, ... I wouldn't simulate classical OO paradigms in JavaScript. You should stick with what's natural for JavaScript. Don't do classical inheritance. Use prototypal inheritance or no inheritance at all: Composition/decoration look a lot nicer than inheritance in JavaScript. You don't need namespaces. They cause unnecessary indirection and cause enterprisey code clutter. Use a good module pattern that hides your functions and variables inside closures. Try a module loader like RequireJS. You can hide your modules in their own files and closures and let RequireJS do dependency injection magic for you. Organizing JS application files is a very broad topic. You could organize your classes based on separation of concerns by using paradigms like MVC or MVP. In terms of project organization, building your application on Maven (and following its conventions) could be an option. Since your question has been at a very high level, I just wanted to throw in some ideas and keywords that you may want to Google and read up on. Maybe after some research and trials and tribulations, you can come back and ask about more specific problems.
