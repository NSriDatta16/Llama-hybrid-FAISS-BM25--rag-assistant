[site]: stackoverflow
[post_id]: 2020439
[parent_id]: 2019273
[tags]: 
I got the answer This is how I have made the buttons language (locale) dependent within magento commerce I started with the mini-search form on the homepage. The search image button for that form is defined in /app/design/frontend///template/catalogsearch/form.mini.phtml In that file i’ve changed the following line getSkinUrl('images/btn_mini_search.gif') ?>" alt=" __('Search') ?>"/> to getSkinUrl('images/btn_mini_search_'.$this->__('_LOCALE_BUTTON_').'.gif') ?>" alt=" __('Search') ?>"/> Then I added the translation for _LOCALE_BUTTON_ to all the the locale translate.csv files: /app/design/frontend///locale//translate.csv: I.e. Locale en_GB: _LOCALE_BUTTON_,en_GB Locale nl_NL: _LOCALE_BUTTON_,nl_NL For each translation make sure you have the locale suffix button image files available in the /skin/frontend///images/ directory: I.e. btn_mini_search_en_GB.gif btn_mini_search_nl_NL.gif I think you can also make the translation for _LOCALE_BUTTON_ to represent a folder by changing the line mentioned above to: getSkinUrl('images/locale/'.$this->__('_LOCALE_BUTTON_').'/btn_mini_search.gif') ?>" alt=" __('Search') ?>"/> but then you need to save the locale suffix button image files like this: /skin/frontend///images/ locale/en_GB/btn_mini_search.gif and /skin/frontend///images/ locale/nl_NL/btn_mini_search.gif I haven’t tested the last method myself, but I don’t see any reasons why it shouldn’t work. I’ve also been thinking about replacing the _LOCALE_BUTTON_ value with the regular ‘Search’ string (Not recommended!!) The advantage of this method is that you don’t need to add seperate translations to the translate.csv files but then you run the risk that certain translations can be similar for multiple locales (duplicate keys). Besides that it can lead to issues, when non-ascii/utf-8 characters are used in the translations, but that depends on the operating/file system you are using.
