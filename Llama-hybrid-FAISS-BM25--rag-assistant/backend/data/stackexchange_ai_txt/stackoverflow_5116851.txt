[site]: stackoverflow
[post_id]: 5116851
[parent_id]: 5115705
[tags]: 
Because when you use FIXED values with AUTO-PARAMETERIZATION off, then the query plan knows EXACTLY what value it needs to run the query for. So the plan is tuned SPECIFICALLY to those values. However when you use variables, the plan that will be put into the Query Cache is the one containing the parameterized variables - which can be replaced by any variable and will re-use the same plan. Therefore these plans will have to be more robust and generic to handle "best average case". In SQL Server 2008, you can set whether or not simple parameters are automatically parameterized so you get consistently the "best average case" plan - with all its good and bad. Ref: ALTER DATABASE {parameterization_option} ::= Forced Parameterization EDIT - on performance As for performance, the optimizer can get it wrong - in this case it looked at statistics for the exact values and felt that the index is not helpful (may be a tipping point issue) so the plan is for clustered scan instead. It is a fine art as to whether to force a query plan - but clearly using an index is 50% faster for specific hardware specific point in time data distribution specific values given Unless I had a very very good reason, I would not game the Query Optimizer (e.g using index hints) unless I have lots of data to prove it will invariably make it faster.
