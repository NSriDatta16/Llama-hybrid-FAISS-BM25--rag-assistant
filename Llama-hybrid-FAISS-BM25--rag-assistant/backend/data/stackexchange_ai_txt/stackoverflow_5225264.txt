[site]: stackoverflow
[post_id]: 5225264
[parent_id]: 5225168
[tags]: 
The pattern of implementing a public public void Dispose() , protected virtual void Dispose(bool) , and ~ClassName() finalizers is a best practice recommended by Microsoft as a way to neatly organize your cleanup code for both managed and unmanaged resources. Basically, the code that uses your Disposable class should call Dispose() , but if it doesn't, the finalizer ~ClassName() will get called by Garbage Collection, and based on which one of those is used, you set the argument to Dispose(bool) as true or false, and in your Dispose(bool) , you only clean up managed resources if the argument is true. The warning you are getting seems to specifically recommend that you use this practice in your finalize method ~ClassName() .
