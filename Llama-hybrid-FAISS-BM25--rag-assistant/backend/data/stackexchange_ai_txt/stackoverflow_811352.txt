[site]: stackoverflow
[post_id]: 811352
[parent_id]: 807547
[tags]: 
A bulk delete query does not load objects into memory and it bypasses any cascade specified on associations. I would code your delete method as: public int deleteByGuid(final String guid){ Organization org = entityManager.find(Organization.class, guid); entityManager.remove(org); } If you use a Query to do bulk updates, the operation is delegated to the database directly. If you wish to delete child objects, you have to set a DELETE CASCADE trigger at the "database" level. By loading the object and removing it, Hibernate will trigger the cascade at the "object" level. More info available at: http://twasink.net/blog/2005/04/differences-in-behaviour-between-hibernate-delete-queries-and-the-old-way/
