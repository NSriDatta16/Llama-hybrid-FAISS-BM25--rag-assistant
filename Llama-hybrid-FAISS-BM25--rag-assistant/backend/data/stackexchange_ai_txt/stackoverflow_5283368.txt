[site]: stackoverflow
[post_id]: 5283368
[parent_id]: 5281614
[tags]: 
You don't need to use having or a subquery, or even GROUP. You can do this in one query as long as it is assumed that the movie and remake titles are identical. Since they are remakes, I assume the titles will be identical with different years (otherwise, how can you identify a remake? You would need another field). SELECT name , m1.title , m1.year , m2.year as remake FROM Movie m1 JOIN Director d USING (directorcode) JOIN Movie m2 ON ( d.directorcode = m2.directorcode AND m1.title = m2.title AND m1.year The inner joins from Movie to Director and Director to Movie again ensure that you will only get results if the same director is on two movies. Then, the titles are compared (this could also be done in the WHERE clause). For organizational purposes, m1 is chosen to be less than m2 (also possible in the WHERE clause). Otherwise, 'remake' could be the earlier one. One thing to note is that if a director remakes a movie twice, you will get three rows. E.g. if they remake a 2009 movie in 2010 and 2011, you will get a row where year = 2009, remake = 2010, year = 2009, remake = 2011, and year = 2010, remake = 2011. From the context of the question, it seems like a director will only remake a movie once, though. I tested this out and it will not show results for movies that have been remade by a different director or not at all. If two directors remake the same movie twice (that's three remakes, two from a different director) you will get both of those directors. I think this is desirable.
