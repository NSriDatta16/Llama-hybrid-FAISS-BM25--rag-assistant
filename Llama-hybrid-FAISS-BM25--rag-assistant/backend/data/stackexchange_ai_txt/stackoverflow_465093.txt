[site]: stackoverflow
[post_id]: 465093
[parent_id]: 465019
[tags]: 
Sounds pretty complicated. We are using roughly the following process: Everyone in the company can open an issue ticket and assigns it to a department. Every department has a "dispatcher" who checks the incoming tickets for validity and prioritizes them. Depending on the department's practices, developers are assigned tickets for the current development cycle by the dispatcher, or they assign themselves the tickets, highest priority first. When a ticket is solved, it goes back to whoever opened it. This person also performs all activities neccessary afterwards, like informing customers. All tickets are held in a software systems that makes these tasks easy. If you get a ticket, you also get an e-mail notification. This is a lightweight process that encourages developers to take responsibility for their issues. Aside from this, we have several quality assurance measures in place for the process of changing anything in the software, regardless of the source and type of the change requests. This includes especially: All code must be reviewed before it is checked into the source code management system. This includes GUI and database reviews by specialized reviewers if neccessary Code must be tested thoroughly by the developer himself before checking it in. After the monthly build, all changes have to be tested again to prevent problems that occur due to several changes affecting the same code. The monthly build enters a "first customer phase" where it is only rolled out to a few customer systems. If this phase shows no previously undetected errors, the build is declared safe.
