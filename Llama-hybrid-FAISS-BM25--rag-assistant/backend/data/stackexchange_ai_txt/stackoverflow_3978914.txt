[site]: stackoverflow
[post_id]: 3978914
[parent_id]: 3978882
[tags]: 
web.config is generally used for read-only settings, ie. the settings set during deployment of the application by the system administrator. If you want to read and write the settings, the most obvious way is to use the database. By the way, this has an advantage: an application can be hosted on several servers and will still read and write the settings correctly, You can also implement your custom storage for the settings, but it will be probably more difficult to implement and not much faster. To answer your second question, the structure of your database depends on the type of settings you want to store. If you need to store heterogeneous unique entries like this: Mail address of an administrator, Maximum number of entries to display on home page of the website, Text to display on "About us" page, Boolean value indicating whether public comments are enabled or not, then you have to use varchar s or other more or less friendly types as keys to identify the entries (rather than to refer to them by their index). On the other hand, if your purpose is to store the mail addresses of several managers , you should create a Manager table containing their mail addresses, names, datetime of their last connection, etc. You really shouldn't mix both . In theory, you can refer to the entry in settings by component/setting pair. In practice, it makes things harder and creates a bunch of problems: What if, further, you will need, for every manager, to store a boolean value indicating whether she/he wants to receive alerts from you? With your current structure, this will be impossible. Since the same setting can have multiple values, how do you intend to handle the settings which must be unique? For example, there must be only a single value of text to display on "About us" page. What if there are two values stored in database?
