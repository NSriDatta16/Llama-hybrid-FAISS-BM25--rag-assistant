[site]: stackoverflow
[post_id]: 4191969
[parent_id]: 4191680
[tags]: 
These are operator delete overloading and are called when delete is invoked on the object. From 3.7.3.2 (Deallocation functions) : Each deallocation function shall return void and its first parameter shall be void*. A deallocation function can have more than one parameter. If a class T has a member deallocation function named operator delete with exactly one parameter, then that function is a usual (non-placement) deallocation function . If class T does not declare such an operator delete but does declare a member deallocation function named operator delete with exactly two parameters, the second of which has type std::size_t (18.1), then this function is a usual deallocation function. And in 12.5 Free store : When a delete-expression is executed, the selected deallocation function shall be called with the address of the block of storage to be reclaimed as its first argument and (if the two-parameter style is used) the size of the block as its second argument . I'm not sure your second function can ever be called as it is not a 'usual deallocation function'.
