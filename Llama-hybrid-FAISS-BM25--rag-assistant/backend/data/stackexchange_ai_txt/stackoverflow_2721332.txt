[site]: stackoverflow
[post_id]: 2721332
[parent_id]: 2720002
[tags]: 
Okay, so this is disturbingly easy but many of the tutorials on the web that talk about this kind of thing push to do extravagant things that require the control to parse ListItems or such. So this solution is purely so that you can build a control that, for whatever reason, has a placeholder in it that could have anything inside it (kind of like a content area on a Master page). In this instance it happens to be because the Panel containing the placeholder is hidden until appropriate input actions have taken place in another panel. First, you need to add this: [ParseChildren(true,"Content")] [PersistChildren(false)] just above the part of the control which looks like this: public partial class MyControl : System.Web.UI.UserControl then in the control scoped declarations at the head of the control you want to declare thus: private Control _content; [PersistenceMode(PersistenceMode.InnerProperty)] public Control Content { get { return _content; } set { _content = value; } } Finally you need to place the content into the placeholder like this: phContent.Controls.Add((Control)_content); That last line goes into the Page_Init event. For reference "phContent" is the name of the place holder where you want the content to appear, like this: On the front end the resulting implementation looks like this: //...your stuff goes here... Note that I presume that what is inbetween the Content Tags is a root control. This is because I nested another user control in there. I imagine if you put whatever content you want within a panel or placeholder it should be fine.
