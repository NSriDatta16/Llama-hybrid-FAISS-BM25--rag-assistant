[site]: stackoverflow
[post_id]: 5660293
[parent_id]: 5659237
[tags]: 
How about something like this : XAML : CODE-BEHIND : private bool isDragging; private void Rectangle_MouseDown(object sender, System.Windows.Input.MouseButtonEventArgs e) { rec.CaptureMouse(); isDragging = true; } private void Rectangle_MouseMove(object sender, System.Windows.Input.MouseEventArgs e) { if (isDragging) { Point canvPosToWindow = canv.TransformToAncestor(this).Transform(new Point(0, 0)); Rectangle r = sender as Rectangle; var upperlimit = canvPosToWindow.Y + (r.Height / 2); var lowerlimit = canvPosToWindow.Y + canv.ActualHeight - (r.Height / 2); var leftlimit = canvPosToWindow.X + (r.Width / 2); var rightlimit = canvPosToWindow.X + canv.ActualWidth - (r.Width / 2); var absmouseXpos = e.GetPosition(this).X; var absmouseYpos = e.GetPosition(this).Y; if ((absmouseXpos > leftlimit && absmouseXpos upperlimit && absmouseYpos This code could be enhanced, but I think you got the idea ;)
