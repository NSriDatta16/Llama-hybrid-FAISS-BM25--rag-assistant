[site]: datascience
[post_id]: 53276
[parent_id]: 52764
[tags]: 
As you said: My suspicion is that box is too simple of an object, and the neural network has a hard time detecting it because there are too little features to extract from the object. ... and that is exactly the problem with this task. I suggest you to train your Network using a whole lot of image augmentation. If you are using Keras/TensorFlow 2.0, they have built-in functions that do that. I also suggest you to train a first model, then study accurately the images that your Network thinks are boxes but aren't (the false positives). At that point, you select the "correct" cases, together with the false positive cases, and build a subset of the dataset that you have. That sub-dataset can be useful to train the Network to distinguish between actual boxes and objects that look like boxes. Once again: use a massive load of image augmentation. That's my main point, and it's what I would do.
