[site]: stackoverflow
[post_id]: 5078913
[parent_id]: 
[tags]: 
HTML5 Canvas performance - calculating loops/frames per second

I know a few questions have been asked like this one before, such as this: Check FPS in JS? - which did work to some degree, I was able to find out how long each loop took to complete. What I am looking for though is something more readable and controllable. I want to be able to set the refresh rate for the FPS counter to make it slow so it is human readable or as fast as the application can run, so I can use it on some kind of speedometer. Anyway so here is the code I have right now: var lastLoop = new Date().getTime(); function updateStage() { clearCanvas(); updateStageObjects(); drawStageObjects(); var thisLoop = new Date().getTime(); var fps = (thisLoop - lastLoop); $('#details').html(fps); lastLoop = thisLoop; iteration = setTimeout(updateStage, 1); } Am I right to be setting the setTimeout function to a speed of 1 millisecond? I was thinking this will just make it loop as fast as it possibly can. Should I count every 100 frames or so, find out how many milliseconds it took to run 100 frames then make a calculation to find out how many frames it would have done if the milliseconds were 1000? What would this calculation be? To make the result more accurate I am guessing I need to display averages as one frame can vary a significant amount, how should I do this? Any tips are greatly appreciated. Thanks.
