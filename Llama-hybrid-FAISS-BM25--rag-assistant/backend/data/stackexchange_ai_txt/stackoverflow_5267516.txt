[site]: stackoverflow
[post_id]: 5267516
[parent_id]: 5267457
[tags]: 
Are you sure you're not getting bit by the problem mentioned in the final paragraph of the MSDN article you linked to? I can't say that your approach is incorrect, on the contrary. Generally speaking you shouldn't even have to worry about whether or not an object is disposable unless it somehow dictates that it needs to be used in a very specific way (as in with a using(x) { ... } block in C#). A stream for example implements IDisposable and can be used that way, or you can just call Close(), which is ultimately what it does when it's disposed. Most Forms controls are components which by definition implement IDisposable... it would be pretty tiring if you had to keep track of all of them with try/catch blocks. If that warning is showing up because the VB compiler is inserting arithmetic overflow checks on everything then just turn off the checks or ignore the warning.
