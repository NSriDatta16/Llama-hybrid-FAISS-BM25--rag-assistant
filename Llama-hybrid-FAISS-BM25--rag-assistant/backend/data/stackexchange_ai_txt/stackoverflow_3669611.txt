[site]: stackoverflow
[post_id]: 3669611
[parent_id]: 
[tags]: 
Bounding box using OpenCV

I want to get the bounding box of a filled black circle on a white background using opencv BoundingRect. I used the sample code from http://cgi.cse.unsw.edu.au/~cs4411/wiki/index.php?title=OpenCV_Guide#Finding_bounding_boxes_around_regions_of_a_binary_image but failed to get the properties of the bounding box and draw it into the image. Should be a simple problem, I think, but still I fail doing it... Would be nice, if you could write down some sample code. Thanks. The picture I'm using at the moment is an image of 1392x1040 pixels with a big black circle in the middle (diameter around 1000 pixels) and the rest of the image is white. My source code is: #include #include #include #include using namespace std; int main(int argc, char** argv){ IplImage* img_in = cvLoadImage("Schwarzer_Kreis.png",1); IplImage* img_working = cvCreateImage(cvGetSize(img_in), 8, 1); cvCvtColor(img_in, img_working, CV_BGR2GRAY); CvSeq* seq; vector boxes; CvMemStorage* storage = cvCreateMemStorage(0); cvClearMemStorage(storage); cvFindContours(img_working, storage, &seq, sizeof(CvContour), CV_RETR_EXTERNAL, CV_CHAIN_APPROX_NONE, cvPoint(600,200)); CvRect boundbox ; for(; seq; seq = seq->h_next) { boundbox = cvBoundingRect(seq); boxes.push_back(boundbox); } for (int ii=0; ii The output that I geht from the program is: 601 201 1390 1038
