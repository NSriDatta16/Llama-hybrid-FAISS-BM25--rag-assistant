[site]: stackoverflow
[post_id]: 4748872
[parent_id]: 
[tags]: 
Problem setting lattice plot options using rpy2

I'm trying to create a heatmap or color-intensity plot using data from a numpy array, using rpy2 and lattice. I'm using python 2.6.2, R 2.10.1, rpy2 2.1.9, not sure which version of lattice. I've gotten it working perfectly, except that I need to modify the default lattice setting for the color ramp used to plot the levels of the relevant variable (z). Specifically, I want grayscale instead of the magenta-cyan default ramp. Here is code to generate a dummy dataframe and create the grayscale levelplot in vanilla R: library(lattice) x With rpy2, I cannot set the col.regions argument. According to the documentation, rpy2 is supposed to convert any . characters in function arguments to _ . This doesn't appear to be working, however, since using col_regions results in the argument being ignored. Here is the python code that produces the levelplot, but without grayscale: from __future__ import division import rpy2.robjects as ro from rpy2.robjects.packages import importr r = ro.r lattice = importr("lattice") grayvector = r.gray( r.seq(0, 1, 1/100)) x = r.rep(r.seq(1,10), each=10) y = r.rep(r.seq(1,10), 10) z = r.abs(r.rnorm(100)) df = {'x': x, 'y' :y, 'z':z} df = ro.DataFrame(foo) formula = ro.Formula('z ~ x * y') formula.getenvironment()['z'] = df.rx2('z') formula.getenvironment()['y'] = df.rx2('y') formula.getenvironment()['z'] = df.rx2('z') foo = lattice.levelplot(formula, data=df, col_regions = grayvector) print foo Does anyone know how to use lattice function arguments with a . in them in rpy2?
