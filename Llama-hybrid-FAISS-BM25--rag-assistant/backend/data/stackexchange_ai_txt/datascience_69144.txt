[site]: datascience
[post_id]: 69144
[parent_id]: 
[tags]: 
Using Neural Networks on images to predict successful vs unsuccessful trades

The context for the problem is day trading: identifying the moment when one can buy units of a stock and then wait for them to grow in value before selling them at the new price. Currently I have a system already developped to identify such moments, but it yields a high number of false positives. I have previously tried some more classical Statistics to come up with estimates of the error rate depending on factors such as the behavior of Bollinger bands, and whether the tendency changes when analyzed at different time scales, among others. But these have been ad-hoc follow the nose attempts. I am trying to leverage neural networks to see about automating this process. The current approach: for each moment we identify as having potential, create a snapshot of the candlesticks (prices) leading up to the moment, and then see if the moment turned out to be successful or not and use that as label. Feed the images and labels to a convolutional neural network to perform classification in order to weed out false positives. Currently the training data has about 3000 pictures, almost equally split between the successes and failure cases. Problem: The neural network's performance is very poor, about 50% accuracy, and not getting better even after 100's of epochs, even when only evaluated on the training data. Changing optimizers and other parameters (steps per epoch, learning rate) has not helped so far. I am trying to diagnose if this is a badly thought out use of neural networks, a matter of not feeding it the right data or not enough of it, or just a matter of not using the correct parameters for the neural network (and how I can find out which of these it is). Does anyone have any advice on how to proceed?
