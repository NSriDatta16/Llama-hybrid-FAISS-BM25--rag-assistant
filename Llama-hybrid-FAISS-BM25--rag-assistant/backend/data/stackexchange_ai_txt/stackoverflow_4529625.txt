[site]: stackoverflow
[post_id]: 4529625
[parent_id]: 4529379
[tags]: 
It depends upon your needs. If you have to redirect a user after login then you must use header redirect. meta refresh is discouraged due to the reasons mentioned above but still if it is required you can use meta refresh. for example showing an ad on your site and then after certain number of seconds you force a file download or redirect to a new page. here is a small scenario PHP login.php page is displaying a login form, after submit that page posts data to clearn_login_form.php to clean the inputs. clearn_login_form.php redirects to validate.php and then validate.php redirects to admin_area/admin_main.php . All this redirection is done on backend and user will only see login.php and admin_main.php pages, and if user press the browser's back button it will go back to login.php META In meta refresh, redirection is done on browser / client side which is security risk, becouse users will be able to see clear_login_form.php and validate.php in their URLs. also if they hit back buttom from admin_main.php they will arrive at validate.php from where they will again redirected to admin_main.php PHP is secure and fast and will hide some important file names from users, where meta is exposed and users can do CSRF or Session hijacking attacks (if they found any holes) Now you have to use header on the very first lines is a problem for you, to overcome this issue use ob_start() function. but make sure to put exit() right after every header command. Note: ob_start and header() combined is not a good practice and it confuses other programmers who works on your code. It is advised to use header on top most locations, or before any output is sent to browser function redirect($location) { header("location: $location"); exit(); }
