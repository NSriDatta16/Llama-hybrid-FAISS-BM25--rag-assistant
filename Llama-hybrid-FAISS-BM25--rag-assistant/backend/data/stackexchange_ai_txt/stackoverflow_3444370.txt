[site]: stackoverflow
[post_id]: 3444370
[parent_id]: 3438500
[tags]: 
I see a lot of people trying to do this simple task and having trouble with it. So I took the liberty of changing your source code into a program that would display on the screen the grayscale converted video from the webcam. Please use this code for reference. I compiled on my Macbook Pro with: g++ -I/usr/include/opencv -c gray.cpp -o gray.o -m32 -arch i386 g++ gray.o -o gray -L/usr/lib -lcxcore -lcv -lhighgui -lcvaux -lml -ldl -m32 -arch i386 File: gray.cpp #include #include #include #include #include"cv.h" #include"highgui.h" #include"cxtypes.h" #define ERROR -1 #define NO_ERROR 1 int main() { int camera_index = 0; IplImage *color_frame = NULL; int exit_key_press = 0; CvCapture *capture = NULL; capture = cvCaptureFromCAM(camera_index); if (!capture) { printf("!!! ERROR: cvCaptureFromCAM\n"); return -1; } cvNamedWindow("Grayscale video", CV_WINDOW_AUTOSIZE); while (exit_key_press != 'q') { /* Capture a frame */ color_frame = cvQueryFrame(capture); if (color_frame == NULL) { printf("!!! ERROR: cvQueryFrame\n"); break; } else { IplImage* gray_frame = cvCreateImage(cvSize(color_frame->width, color_frame->height), color_frame->depth, 1); if (gray_frame == NULL) { printf("!!! ERROR: cvCreateImage\n"); continue; } cvCvtColor(color_frame, gray_frame, CV_BGR2GRAY); cvShowImage("Grayscale video", gray_frame); cvReleaseImage(&gray_frame); } exit_key_press = cvWaitKey(1); } cvDestroyWindow("Grayscale video"); cvReleaseCapture(&capture); return 0; }
