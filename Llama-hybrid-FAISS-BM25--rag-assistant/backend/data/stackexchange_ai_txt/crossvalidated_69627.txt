[site]: crossvalidated
[post_id]: 69627
[parent_id]: 
[tags]: 
Cluster data into categories; train one classifier per category

Let me first give you a hypothetical example to make things more clear: Let's say your task is to classify art as either professional or amateur work, based on image data. You extracted 100 features from each artwork using image processing. The artworks fall into different genres (like sketch, abstract paintings, portraits, still-life, oil painting, watercolor painting etc.). These genres are responsible for most of the variance in the features. The genres (or even their number) are not known to you a priori . Indeed, there may be different ways to cluster this data into genres/categories (e.g. based on subject, painting technique, colors used). The class distribution (professional, amateur) varies per genre. For instance most amateur works in your dataset could be still-life. So if you would use a linear classifier it would basically just classify everything as still-life or not still-life. Is there a model that is known to work well for a dataset like this? The obvious approach would be to throw a non-linear classifier (like kernel svm, decision forest) at it and hope that it can deal with the problem. However, that may work less well then a model that can make use of this property of your dataset explicitly. Another approach would be to cluster the data first, then train one classifier per cluster. However, that may lead to clusters that are not optimal for classification. So is there a model that is know to work well for problems like this on (bigish) real world datasets? Maybe modeling the problem probabilistically as $$P(\text{professional}) = \frac{P(\text{genre}) \times P(\text{professional}|\text{genre})} { P(\text{class} | \text{professional})}$$ and applying EM, starting from with a random class alignment. Or modeling it as a neural network, that has this structure hardwired and applying backpropagation.
