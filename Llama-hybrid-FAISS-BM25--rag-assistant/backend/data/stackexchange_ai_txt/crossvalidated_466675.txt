[site]: crossvalidated
[post_id]: 466675
[parent_id]: 
[tags]: 
Machine learning for particle scattering data analysis

I have thousands of spectra generated by a physical analysis method (Rutherford-Backscattering spectrometry) each containing about 4000 channels with individual intensities and a sqrt(Intensity) noise. . Each spectrum is a measurement and needs to be analysed. The analysis of a spectrum yields values for about 100 result quantities from which many can also be zero. It is possible to simulate spectra in advance or fit them via forward modelling manually, but this is physically complex and takes too much time for regular work. A complication in the automatic interpretation is that small intensities can be equally important as large intensities, rendering a simple chi^2 minimisation inappropriate. In the example figure the signals around channels 600, 1000 and 1600 are most important, the large peaks around 800 contain only little information. I am new to machine learning, but from my experience with the data i think its the right approach. I know about the basics of machine learning but I never applied the method. I am familiar with python and would like some first advice on where to start and which algorithm would fit to this problem. My basic idea is to generate a training dataset using the existing forward model and insert these together with the results (which are input to the forward model) into a deep learning model. Applying the resulting network to new data should yield the results from arbitrary input spectra. Computing time is not a problem for producing the training data or the network, anything up to supercomputers is possible. The resulting network should be able to run on an office PC for data evaluation. Can anybody help me with this?
