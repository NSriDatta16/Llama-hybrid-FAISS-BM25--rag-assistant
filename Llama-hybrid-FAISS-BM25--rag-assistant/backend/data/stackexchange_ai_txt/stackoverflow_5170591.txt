[site]: stackoverflow
[post_id]: 5170591
[parent_id]: 
[tags]: 
Avoiding exploding indices and entity-group write-rate limits with appengine

I have an application in which there are Course s, Topic s, and Tag s. Each Topic can be in many Course s and have many Tag s. I want to look up every Topic that has a specific Tag x and is in specific Course y. Naively, I give each standard a list of Course ids and Tag ids, so I can select * from Topic where tagIds = x && courseIds = y . I think this query would require an exploding index: with 30 courses and 30 tags we're looking at ~900 index entries, right? At 50 x 20 I'm well over the 5000-entry limit. I could just select * from Topic where tagIds = x , and then use a for loop to go through the result, choosing only Topic s whose courseIds.contain(y) . This returns way more results than I'm interested in and spends a lot of time deserializing those results, but the index stays small. I could select __KEY__ from Topic where tagIds = x AND select __KEY__ from Topic where courseIds = y and find the intersection in my application code. If the sets are small this might not be unreasonable. I could make a sort of join table, TopicTagLookup with a tagId and courseId field. The parent key of these entities would point to the relevant Topic . Then I would need to make one of these TopicTagLookup entities for every combination of courseId x tagId x relevant topic id. This is effectively like creating my own index. It would still explode, but there would be no 5000-entry limit. Now, however, I need to write 5000 entities to the same entity group, which would run up against the entity-group write-rate limit! I could precalculate each query. A TopicTagQueryCache entity would hold a tagId , courseId , and a List . Then the query looks like select * from TopicTagQueryCache where tagId=x && courseId = y , fetching the list of topic ids, and then using a getAllById call on the list. Similar to #3, but I only have one entity per courseId x tagId. There's no need for entity groups, but now I have this potentially huge list to maintain transactionally. Appengine seems great for queries you can precalculate. I just don't quite see a way to precalculate this query efficiently. The question basically boils down to: What's the best way to organize data so that we can do set operations like finding the Topic s in the intersection of a Course and a Tag ?
