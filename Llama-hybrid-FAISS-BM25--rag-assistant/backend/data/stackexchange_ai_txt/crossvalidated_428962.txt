[site]: crossvalidated
[post_id]: 428962
[parent_id]: 337050
[tags]: 
A Nearest Neighbours model is fairly fast to build, because the algorithm uses the triangle inequality. Sadly, Scikit-Learn's ball tree does not support cosine distances, so you will end up with a KDTree, which is less efficient for high-dimensional data. from sklearn.neighbors import NearestNeighbors embeddings = get_embeddings(words) tree = NearestNeighbors( n_neighbors=30, algorithm='ball_tree', metric='cosine') tree.fit(X)
