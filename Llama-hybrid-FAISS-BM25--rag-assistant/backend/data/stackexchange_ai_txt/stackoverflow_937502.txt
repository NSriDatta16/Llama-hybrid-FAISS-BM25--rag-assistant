[site]: stackoverflow
[post_id]: 937502
[parent_id]: 784914
[tags]: 
Basically, you're going to use Azure Table Storage to store the data and Blob storage if you have really large (> 64K) data elements. Table Storage and Blob Storage have REST interfaces, and you should look at the StorageClient sample in the Azure SDK as a way to CRUD the data. You can use these interfaces (Table and Blob) exclusively if you don't plan on exposing a public API. However, lets say you want to be the next Twitter, and you want to expose a REST interface to the public... Even though Azure Table Storage has it's own REST interface, you create a small WCF service in a web role that exposes some specific WCF methods in a more compelling way. You can also publish your data in JSON, which could be more useful to non-Windows data consumers. Here's a page that I found really helpful: Azure Application Part 3: Expose (REST) Web Service And Consume in Silverlight . And if you'd like to see my example, http://www.netalerts.mobi/traffic exposes data that's stored in Azure Table Storage. http://www.netalerts.mobi/traffic/api.aspx describes the REST apis that are public. In my implementation I call Table Storage via REST, manipulate the data, and then serve it up again in the public api.
