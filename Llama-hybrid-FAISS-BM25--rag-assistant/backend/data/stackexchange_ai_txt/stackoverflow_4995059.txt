[site]: stackoverflow
[post_id]: 4995059
[parent_id]: 
[tags]: 
EF 4 CTP 5 saving a many-to-many navigation property

I'm using EF4 CTP5 and am having trouble saving records back to the database. I have Contact and ContactType entities. As the post title states, I have set up a many-to-many navigation property between the tables. The problem is with validating the ContactType values. ModelState.IsValid is false because it's unable to convert the values passed back from the form (a string array of ContactType id's into ContactType objects. POCO's public partial class Contact { public Contact() { this.ContactTypes = new HashSet (); } // Primitive properties public int ContactId { get; set; } public string ContactName { get; set; } // Navigation properties public virtual ICollection ContactTypes { get; set; } } public partial class ContactType { public ContactType() { this.Contacts = new HashSet (); } // Primitive properties public int ContactTypeId { get; set; } public string Name { get; set; } // Navigation properties public virtual ICollection Contacts { get; set; } } Controller // // GET: /Contact/Edit/5 public virtual ActionResult Edit(int id) { Contact contact = context.Contacts.Include(c => c.ContactTypes).Single(x => x.ContactId == id); ViewData["ContactTypesAll"] = GetTypesList(); return View(contact); } // // POST: /Contact/Edit/5 [HttpPost] public virtual ActionResult Edit(Contact contact) { if (ModelState.IsValid) { context.Entry(contact).State = EntityState.Modified; context.SaveChanges(); return RedirectToAction("Index"); } ViewData["ContactTypesAll"] = GetTypesList(); return View(contact); } View @Html.LabelFor(model => model.ContactId) @Html.EditorFor(model => model.ContactId, new { fieldName = "ContactId" }) @Html.ValidationMessageFor(model => model.ContactId) @Html.LabelFor(model => model.OrganizationNameInternal) @Html.EditorFor(model => model.OrganizationNameInternal) @Html.ValidationMessageFor(model => model.OrganizationNameInternal) @Html.LabelFor(model => model.ContactTypes) @Html.ListBoxFor(modelContactType, new MultiSelectList((IEnumerable )ViewData["ContactTypesAll"], "ContactTypeId", "Name", Model.ContactTypes)) @Html.ValidationMessageFor(model => model.ContactTypes) ModelState error ModelState.Values.ElementAt(2).Value {System.Web.Mvc.ValueProviderResult} AttemptedValue: "5" Culture: {en-US} RawValue: {string[1]} ModelState.Values.ElementAt(2).Errors[0] {System.Web.Mvc.ModelError} ErrorMessage: "" Exception: {"The parameter conversion from type 'System.String' to type 'ProjectObjects.ContactType' failed because no type converter can convert between these types."} So it seems pretty clear what the problem is, but I can't seem to find the solution. I have tried to manually convert the ContactType id's into ContactType objects, and adding them to the Contact object passed into the Edit function (called 'contact'): contact.ContactTypes.Clear(); string[] ids = this.HttpContext.Request.Form["ContactTypes"].Split(','); for(int i = 0; i t.ContactTypeId == x); contact.ContactTypes.Add(selectedType); } but the error persists. I've also tried calling context.ChangeTracker.DetectChanges(); but that did not do the trick. I also manually set the ValueProviderResult for the value that will not validate, using ModelState.SetModelValue("ContactTypes", val); Which also did not work. I feel like I'm missing something basic here. Any ideas? Thanks, Steve
