[site]: stackoverflow
[post_id]: 4922266
[parent_id]: 
[tags]: 
Liferay is an open-source portal written in Java and a social platform. It implements JSR-286 and has various proprietary facilities. Liferay Portal was created in 2000 as open source software. Thanks to a decade of ongoing collaboration with its active and mature open source community, Liferay's product development is the result of direct input from users with representation from all industries and organizational roles. Liferay provides a lot of integration points with other softwares like alfresco , opensso , etc. Liferay as a portal server is application-server agnostic, which means that Liferay can be installed on almost any Java application server. Liferay provides more than 60+ preinstalled or built-in portlets (also known as out-of-the-box (OOTB) portlets) and the latest version Liferay 7 provides many more features like: Dynamic data lists Custom web content types Workflows for documents and media Related assets Faceted search Integration with multiple repositories Dynamic site templates Mobile device rules Bootstrap theme Advance Display Templates (ADT) Liferay has a market-place which serves as an "app" store for the Liferay portal. Editions Liferay is distributed in two editions: Liferay Portal Community Edition (Liferay CE) : This is supported by the Community and is free. Liferay Portal Enterprise Edition (Liferay EE) : This is a licensed version of the Portal. More about the editions can be checked out here . Liferay Development It is possible to customize Liferay (OOTB portlets and core) and add new features with the following plugin types using Liferay's Plugins SDK : EXT Plugin (prior to versions 6.x, it was known as the EXT Environment): To customize liferay's core classes and those things which are not customizable by hooks. Portlet Plugin : It helps in creating JSR 168 and JSR 286 compliant portlets. Liferay supports many frameworks to create portlets some of which are JSF with Liferay Faces , Spring MVC, Vaadin, Struts and for simple portlets Liferay provides a MVCPortlet class. Hook Plugin : This is used to modify Liferay's JSPs and other services Theme Plugin : This is used to customize the look and feel of the whole Portal. Layout Plugin : This is used to customize the page's layout and is one of the simplest plugins to develop. Liferay comes pre-bundled with 10 layouts. All the plugins are packaged as .WAR files. All plugins are hot-deployable except the EXT plugin which requires server restart. Liferay also provides Liferay IDE as an eclipse plugin to increase development productivity . Liferay provides a rich API including many utility classes and also provides custom taglibs to ease development of JSPs, like: liferay-ui : It provides UI-related pre-styled structures and functional tools like the search container which handles search pagination. liferay-portlet : It is a wrapper around the tag and provides Liferay-specific portlet functionality. liferay-util liferay-theme liferay-security aui (AlloyUI taglib): A wrapper around Alloy UI to provide consistent UI components across the portal. Liferay uses alloy-ui as the built-in Javascript library, which is a library built upon yui . Liferay also provides the Service-builder , a declarative service and persistence layer code generator. The generated interfaces can also be exposed as web-services. Known Liferay Integrations with third-party softwares Alfresco ( Blog about Alfresco Integration) Beginners' resources Liferay Developer Network : The place to start - with many tutorials Liferay Portal Wiki Additional day to day resources Latest Liferay User Guide Latest Liferay Development Guide Liferay API Docs by version Liferay Marketplace : the place for getting plugins for all your needs Liferay Forums Other Liferay resources Liferay Releases Previous Versions Liferay on Git-hub Alloy UI Demos Liferay in Action (official guide to Liferay development) Liferay Development Style guidelines Liferay Marketplace Liferay Portlets Frequent/Interesting Questions To Go or Not To Go with Liferay? Restrictions/Disadvantages of developing portlets with Liferay Accessing User in Liferay Portlet Testing for custom plugin portlet Accessing logged-in User in a liferay portlet Programmatically get the url of a page in liferay
