[site]: stackoverflow
[post_id]: 5087605
[parent_id]: 
[tags]: 
What's an elegant algorithm for fitting differently sized rectangles into a circle?

I have a bunch of rectangles of variable size which I need to fit together roughly into a circle, presumably with the largest ones at the center. NB. The circle is not of a fixed size - that's just the overall shape I'm after. This is more like how I'd imagine a lazy human packs (once a piece is in place, it stays.) They are already ordered by the maximum of their width and height, largest first. Ideally - and I think this can be guaranteed by the ordering - there would be no gaps at all. The algorithm I'm struggling with is: for each rectangle: if first: place rectangle at origin add all edges to edge list else: for each edge in edge list: if edge is long enough to accomodate rectangle (length This works alright for the first few rectangles, but the edge merging is pretty hairy and my current method of choosing which section of an edge to use (one end or the other) tends to leave lots of gaps. Although I think I'd eventually get this method working fairly satisfactorily, it feels like there's a far more elegant (graph?) algorithm that I'm missing.
