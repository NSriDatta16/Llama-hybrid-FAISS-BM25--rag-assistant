[site]: stackoverflow
[post_id]: 1784435
[parent_id]: 1784219
[tags]: 
I have done something similar. There is a PHP application where the user logs in, the system contact a web service and then the service checks the user's credentials on the Active Directory. When the user is authenticated, his PHP session is stored in the DB. Another web application can read the PHP session from the cookies and uery a web service in the PHP applicaiton, the PHP application check the session in the database and return the user id. In this way I have a SSO using SOA. Do not rely on the user id stored in the browser, is a security error, at least encrypt the id. The best solution would be to put the login form and session storage in the same application, then this application can provide services to other applications. And use HTTPS for the kind of infomation exchange. The cookies can be read only if the belongs to the same domain, for instance: intranet.example.com crm.example.com example.com/erp
