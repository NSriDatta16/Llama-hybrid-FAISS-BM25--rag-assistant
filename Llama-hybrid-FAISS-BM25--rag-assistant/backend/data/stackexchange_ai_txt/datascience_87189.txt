[site]: datascience
[post_id]: 87189
[parent_id]: 
[tags]: 
auto updating text comparison model

I have a need to create a model that compares and groups distinct snippets of text based on keywords. I can extract similar keywords with NLP methods and simply comparing sentence text. I want these similar sentences to arise based on new text a user is entering and I want to give the user the ability to indicate whether or not the chosen sentences are actually similar to their sentence (would limit to 5 or so most similar). The user's rankings would then feed along with the NLP key words into a machine learning model that would continue getting updated each time a new text entry is processed from a user. I have two main questions: I work in an environment which generally uses C# for most projects. Is there a way I could accomplish the above with ML.NET? I've seen a lot of basic supervised binary classification examples, but it seems to me that what I'm attempting to accomplish would be better suited as unsupervised where I am simply feeding in keywords, rankings, and text and trying to establish patterns. If not ML.NET, is there another easy way to reference external models, such as those created in Python in a .NET environment? Breaking down the text classification / comparison seems like it would be best suited to something like a bag of words and performing clustering based on those words, but also seems like it should be focused on only the key words to keep the model smaller/simpler. How would I account for rankings as well in this case? I'm not very familiar with text classification algorithms, so was hoping someone with more experience could point me towards the algorithms that might work best in this scenario?
