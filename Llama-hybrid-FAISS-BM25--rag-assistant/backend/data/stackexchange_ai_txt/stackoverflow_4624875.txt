[site]: stackoverflow
[post_id]: 4624875
[parent_id]: 
[tags]: 
Problems with LINQ WhereClause

Many thanks to leppie: Currently I got Expression > whereClause= null; List mailMergeItems = null; int personType = mailMergeSettings.PersonType.ToInteger(); if (personType > 0) { whereClause = this.MailMergeWhereClause(whereClause, f => f.MemberTypeId == personType); } if (mailMergeSettings.PersonIds != null) { var personIds = mailMergeSettings.PersonIds.ToGuidArray(); if (personIds != null && personIds.Length > 0) { var personList = personIds.ToList(); whereClause = this.MailMergeWhereClause(whereClause, f => personList.Contains(f.UserId)); } } mailMergeItems = this.ObjectContext.vwMailMerges.Where(whereClause).ToList(); private Expression > MailMergeWhereClause(params Expression >[] wheres) { if (wheres.Length == 0) { return x => true; } Expression result; if (wheres[0] == null) { result = wheres[1].Body; return Expression.Lambda >(result, wheres[1].Parameters); } else { result = wheres[0].Body; for (int i = 1; i >(result, wheres[0].Parameters); } } } When it gets to "mailMergeItems =" it drops and gives error: "The parameter 'f' was not bound in the specified LINQ to Entities query expression." I've noticed that when checking only for people, or only for membertypeId, it works properly.. but combined the 2nd gives a error on it's "f=>" I think.
