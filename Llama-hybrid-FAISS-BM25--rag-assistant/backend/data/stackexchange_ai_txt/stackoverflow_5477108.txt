[site]: stackoverflow
[post_id]: 5477108
[parent_id]: 
[tags]: 
Is chaining c# to look like jQuery a good idea?

I'm thinking of using extension methods to chain a c# statement to look like jQuery in teh following: foo foo2 = new foo().Title(foo1.Title) .Name(foo1.Name) .DoSomeStuff() .DoSomeMoreStuff(); Is this a good/bad idea? public class foo { public string Title {get;set;} public string Name {get;set;} public int Age {get;set;} public foo(){} } public static class fooExtension { public static foo Title(this foo source, string title) { source.Title = title; return source; } //and other extensions } Upadate: More explanation as the the "why" I'm considering this. I have 2 things going on: I'm getting data from one object and using it to set the properties of another. I need to perform some action on these properties. So my initial code looked more like foo2.bars = foo1.bars; foo2.RemoveUnderage(); foo2.NotifyPatronsBarsAreFull(); and instead, I thought that it might be more descriptive to write: foo2.bars(foo1.bars).RemoveUnderage().NotifyPatrons(); Initializers are great, but they also bundle the properties all together and I wanted the property set to be close to the actions on which I would be taking on them.
