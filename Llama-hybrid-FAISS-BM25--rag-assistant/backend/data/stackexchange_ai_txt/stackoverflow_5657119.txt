[site]: stackoverflow
[post_id]: 5657119
[parent_id]: 5656960
[tags]: 
This is not an answer to the question, but more a "it will not work this way". The PNG specification section you linked defines the Filter method 0 , and a list of filter types (functions) for this method. This list is fixed: Filter method 0 specifies exactly this set of five filter types and this shall not be extended. This ensures that decoders need not decompress the data to determine whether it contains unsupported filter types: it is sufficient to check the filter method in IHDR. So, you can't simply add your neural network prediction here. What you could do, is to create a new Filter method (method 1, or such - but see Section 4.9 ) which then can include your neural network filter type. But the problem is, that then every software which would want to read the PNGs your software produced would need to support this new filter method, too. So, if you don't want to do this simply for your internal image storage, this is not something useful to do. Where you actually could use your neural network, is for selecting the right filter type (of the five ones given) for each scanline, such that the resulting gzipped data stream is as small (or efficient or ...) as possible.
