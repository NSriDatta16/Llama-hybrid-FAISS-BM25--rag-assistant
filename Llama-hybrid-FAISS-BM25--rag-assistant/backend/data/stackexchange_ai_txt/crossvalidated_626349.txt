[site]: crossvalidated
[post_id]: 626349
[parent_id]: 626309
[tags]: 
There are two problems with your programming. Y has to have length n (as in number of samples), so if it is constant, repeat it. X separates the individual samples by column. You separated them by row. You can fix that by transposing it. As a result, you get numerically 0, i.e. something like 1.11022302e-16 . Here is some example code. Note that i clearly mark my imports, which is best practice for providing examples. import sklearn.feature_selection as sfs import numpy as np #set of feature values, samples separated by columns, thanks to transpose X = np.transpose(np.array([[7., 7., 0., 0., 1., 0., 2., 1., 0.]])) #label, constant across observations Y = np.array([2., 2., 2., 2., 2., 2., 2., 2., 2.]) mi_scores = sfs.mutual_info_classif(X, Y,random_state=0) print("final:", mi_scores) #Example from Chat-GPT for 5 samples and 3 faetures X = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0], [10.0, 11.0, 12.0], [13.0, 14.0, 15.0]]) # Create a sample target vector y with shape (n_samples,) y = np.array([0, 0, 0, 0, 0]) print(sfs.mutual_info_classif(X, y,random_state=0) )
