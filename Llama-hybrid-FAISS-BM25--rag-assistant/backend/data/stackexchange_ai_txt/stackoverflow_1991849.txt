[site]: stackoverflow
[post_id]: 1991849
[parent_id]: 1932545
[tags]: 
My solution: You need a PriorityQueue (which is available in PHP under SplPriorityQueue). The PriorityQueue gives you elements with descending priority (sorted by values, the smallest value has the highest priority). Each member gets an assigned value. This value is an ASCII number with n digits (you could use 8 digits for convenience), filled up with zeroes to n positions. After that you append the name. You also add to each member the available positions So (n=5): M1 value: 99999Albert P1,P2,P3 M2 value: 99999Susi P1,P2 M3 value: 99999Bob P1,P3 This makes it easy to sort members by priority and name. Preparation: A sunny day. You are retrieving the assigned positions and a category for a given day. Each member is loaded on a long list. Each member who is not showing up on work is not loaded, but gets his value decreased by minus two. Bob is not here, so its new value gets 99997Bob. This means that Bob will be selected automatically the next time. All other members get their value decreased by minus one. The positions assigned for a specific Day are mapped (use SplObjectStorage): P1->M1,M2,M3,M4 etc. P2-> etc. The map contains only the positions which must be assigned this day. After the Filter: You must look up the groups and delete any positions on the map which cannot be assigned this day. Your group description is a bit unclear. Assign: You choose the position to assign Get list of members which can fill the position Remove available members from list and put them into the PriorityQueue Assign the position by extract() from PriorityQueue (correct assignment is done automaticially). Each member which is assigned will gets its value increased by one (So the decrease and increase levels out if you are here and working). If you are here and not assigned to a position for whatever reason, you get a small penalty of one. If you not here, you get a penalty of two. After completion, put remaining members on the list again, clear the PQueue and continue with the next assignment. Caveats: You must be careful that there are always enough people for a position.
