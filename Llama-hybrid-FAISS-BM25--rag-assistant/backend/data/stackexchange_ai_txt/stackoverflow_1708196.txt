[site]: stackoverflow
[post_id]: 1708196
[parent_id]: 1707906
[tags]: 
I hate to say it, but this is often the case --even in a business environment. If you really like a particular project, you're just going to have to start digging in and learning it. One way I have gotten started with undocumented libraries is by first creating a class diagram in Visual Studio. If the developers have been careful about their naming conventions, the classes often document themselves and you'll be able to see their interactions. Otherwise, it really comes down to playing around with it. Rather than jump in and try to tackle the source head on, all at once, I would recommend you have something that you can work towards. For example, look through the bug/feature list. Start with something simple and then work your way up. In time, you will become more and more familiar with the code base. I certainly don't encourage people to avoid writing documentation, but I would suggest all developers become comfortable working with code that hasn't been documented.
