[site]: stackoverflow
[post_id]: 96541
[parent_id]: 
[tags]: 
Is there an elegant way to instantiate a variable type with parameters?

This isn't legal: public class MyBaseClass { public MyBaseClass() {} public MyBaseClass(object arg) {} } public void ThisIsANoNo () where T : MyBaseClass { T foo = new T("whoops!"); } In order to do this, you have to do some reflection on the type object for T or you have to use Activator.CreateInstance. Both are pretty nasty. Is there a better way?
