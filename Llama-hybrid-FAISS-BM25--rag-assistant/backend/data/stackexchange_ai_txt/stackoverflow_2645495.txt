[site]: stackoverflow
[post_id]: 2645495
[parent_id]: 2645264
[tags]: 
What about doing this: Handle the TextChanged event and compare each time it changes. It fired for text entry and image drag and drops. private void richTextBox1_TextChanged(object sender, EventArgs e) { if (richTextBox1.Rtf.Length > richTextBox1.MaxLength) { // do something here - I displayed a label for // my example label1.Text = "Text exceeds maximum size"; label1.ForeColor = Color.Red; } else { label1.Text = richTextBox1.Rtf.Length.ToString(); label1.ForeColor = Color.Red; } } This seemed to work, though I didn't spend a lot of time on this, admittedly. I suspect you could truncate the contents if it exceeds the max size. Edit: I thought about this some more and I suspect you could utilize a StringBuilder to store off the contents of the richtextbox each time and if one attempted to exceed that length, restore the data to the previous state. I admit this is a bit hacky but it seems to work. Something like this: StringBuild sb = new StringBuilder(); private void richTextBox1_TextChanged(object sender, EventArgs e) { if (richTextBox1.Rtf.Length > richTextBox1.MaxLength) { richTextBox1.Rtf = sb.ToString(); } else { sb.Insert(0,richTextBox1.Rtf); } } This seems to work pretty well. There might be a more elegant solution.
