[site]: stackoverflow
[post_id]: 3032522
[parent_id]: 2915375
[tags]: 
It's an elegant way of expressing what is a very good principle - "make your code as simple as possible". Be careful not to misinterpret this however - the point is to take away design complexity, not do less typing. Example of good things to take away are: Repetitive code (DRY principle) Unnecessary function parameters Unnecessary integration layers or boilerplate code Features that the customer doesn't need or value Bad things to take away: Comments Decent length, descriptive variable and function names Extra code explicitly used to separate the code base into cleanly defined modules (if you like you can consider this an "essential feature" for future maintainability)
