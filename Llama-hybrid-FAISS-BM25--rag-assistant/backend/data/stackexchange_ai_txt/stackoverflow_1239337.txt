[site]: stackoverflow
[post_id]: 1239337
[parent_id]: 98033
[tags]: 
When you want to customize equality checking, 99% of the time you're interested in defining the keys to compare by, not the comparison itself. This could be an elegant solution (concept from Python's list sort method ). Usage: var foo = new List { "abc", "de", "DE" }; // case-insensitive distinct var distinct = foo.Distinct(new KeyEqualityComparer ( x => x.ToLower() ) ); The KeyEqualityComparer class: public class KeyEqualityComparer : IEqualityComparer { private readonly Func keyExtractor; public KeyEqualityComparer(Func keyExtractor) { this.keyExtractor = keyExtractor; } public bool Equals(T x, T y) { return this.keyExtractor(x).Equals(this.keyExtractor(y)); } public int GetHashCode(T obj) { return this.keyExtractor(obj).GetHashCode(); } }
