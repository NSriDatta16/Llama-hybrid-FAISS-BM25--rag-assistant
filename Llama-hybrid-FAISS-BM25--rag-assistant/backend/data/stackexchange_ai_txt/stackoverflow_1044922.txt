[site]: stackoverflow
[post_id]: 1044922
[parent_id]: 1044899
[tags]: 
I see this as similar to the model of multiple storage engines in an RDBMS accepting a common(-ish) language of SQL, in it's design ... but with the added benefit of integreation into the application language semantics. Of course it is good! I have not used it that much, but it looks sensible and clear when performance and layers of abstraction are not in a position to have a negative impact on the development process (and trust that standards and models wont change wildly). It is just an interface and implementation that may fit your needs , like all interfaces, abstractions, libraries and implementations, does it fit?... it is all the same answers .
