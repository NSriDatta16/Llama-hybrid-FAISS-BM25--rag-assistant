[site]: stackoverflow
[post_id]: 1899210
[parent_id]: 1898767
[tags]: 
I would try to make computed columns part of your SQL tables - if the effort needed to do so is not outrageous. If you have fairly simple calculations, or lookups, or something along those lines - put those in the SQL table directly. This way, they're available even if you need to query the table(s) with T-SQL or another tool accessing your SQL Server database, and they're most likely a whole lot faster (especially if you can make them PERSISTED). If you have more elaborate requirements, if you need extensive string, math, or date manipulation etc., you're probably better off putting those computations into a .NET language. You can either store that as a CLR assembly in SQL Server and still do the columns in SQL Server directly (if a reuse by other teams or projects is likely), or you could put those into your EF model if you're likely to be the only one interested in those computed columns. Hope that sheds a bit of light on your question!
