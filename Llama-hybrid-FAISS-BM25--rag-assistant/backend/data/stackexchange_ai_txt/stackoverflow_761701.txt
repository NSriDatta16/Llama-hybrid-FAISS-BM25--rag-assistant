[site]: stackoverflow
[post_id]: 761701
[parent_id]: 761506
[tags]: 
In MVC, a 'page' is what you get when you put the three together. The model handles the data layer, the view handles the actual HTML the user sees and the controller decides how they interface together to show the desired data. My choice as to use a separate controller or another method to an existing controller hinges on how close the operation is to the other controller(s) that I have. Say I wanted to have a UserAdmin controller, now that would most-likely handle adding a user, deleting a user, changing passwords, etc. If I was adding functionality that dealt with changing a user's account in some way I would most likely put it in there. If I had separated them out into their own controller's I would naturally add another one. Controllers allow you to house similar tasks together so they may leverage what is already in the class, rather than having to recreate what has already been done. A lot of it is how the programmer thinks it should be done. What makes sense to you may not make sense to me, that is the developer's (or the designer's) choice.
