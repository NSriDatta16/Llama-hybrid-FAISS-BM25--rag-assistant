[site]: stackoverflow
[post_id]: 5417691
[parent_id]: 5412959
[tags]: 
I think there's a lot to think about when using Azure for this type of storage - especially thinking about: indexing - Azure only allows you to index and order only on the tuple (account, table name, partition key, row key) - so if you need to search or order your data in multiple ways then generally you need to think about adding multiple entities to multiple tables to represent your single actual entity aggregation - Azure table storage doesn't contain any SQL-like SUM, AVERAGE, etc functions - so if you need to do any of these then you'll need to do them in your own code and to persist the result somewhere (or generate them on the fly each time - but this could be slow and costly for large data sets) performance - depending on your application, there may be lots to consider here. cost - remember that Azure storage charges per transaction - so if you do a lot of queries then it can cost you money (also remember that while Azure storage is scalable, the per second query limits per account aren't that high) There are lots of articles and documents out there on patterns and practices for using Azure table and blob storage - for your situation, using Blobs with one or more table based indicies certainly sounds like one avenue to explore.
