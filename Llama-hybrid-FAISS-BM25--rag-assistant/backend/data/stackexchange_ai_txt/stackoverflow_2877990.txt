[site]: stackoverflow
[post_id]: 2877990
[parent_id]: 2877531
[tags]: 
I've never used it, but Text::Report looks promising if you are making complex reports. Regarding more general matters, your code makes me think you are not running with use strict and use warnings . If not, turn them on. That will provide many clues. Also, you appear to be using subroutines, which is good, but not taking advantage of one of their primary purposes -- namely, to provide well-defined areas for variable scoping. For example, why does $rep need to be a global variable? If a subroutine needs some information, pass it in as an argument. Especially when your program attempts to perform the same task over and over -- such as generating a bunch of reports -- you need to be careful not to allow variables from one iteration retain stale values during subsequent iterations. Exercising some basic discipline in the organization of your program will largely solve such problems. Here is a simple illustration. use strict; use warnings; # Example usage: perl script.pl foo.txt bar.txt main(@ARGV); sub main { my @report_names = @_; for my $rep_name (@report_names) { my @fake_data = map rand(), 1..10; printReport($rep_name, @fake_data); } } sub printReport { my ($rep_name, @data) = @_; open my $fh, ">", $rep_name or die $!; printHeader($fh); printBody($fh, @data); close $fh; } sub printHeader() { my $fh = shift; print $fh "Header\n"; } sub printBody { my ($fh, @data) = @_; print $fh "Body\n"; print $fh $_, "\n" for @data; }
