[site]: stackoverflow
[post_id]: 1797240
[parent_id]: 
[tags]: 
Implementing a File Object (C++)

I've been looking over the Doom 3 SDK code, specifically their File System implementation. The system works (the code I have access to at least) by passing around an 'idFile' object and I've noticed that this class provides read and write methods as well as maintaining a FILE* member. This suggests to me that either the FILE* is 'opened' with read and write access or the file is closed and reopened (with the appropriate access) between calls to Read() and Write(). Does this sound correct or am I over simplifying it? If this isn't the case (which part of me suspects it isn't - due to speed etc.) does anyone have any suggestions as to how they would achieve this elegant interface? Please bare in mind that I am fairly new to both C++ and stdio (which I'm pretty sure iD favours).
