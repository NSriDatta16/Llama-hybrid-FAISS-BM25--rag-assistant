[site]: crossvalidated
[post_id]: 553716
[parent_id]: 545491
[tags]: 
Here's a solution using the R package mcp . Say we simplify your problem as a plateau followed by an abrupt change to a negative slope, followed by a plateau. Let's simulate some data: data = data.frame( x = 1:190, distance = c( rnorm(100, 30, 4), # Plateau rnorm(40, 60 - (1:40)*0.6, 4), # Intercept + negative slope rnorm(50, 30, 4) # P ) ) Now let's try and recover the onset of segment 2! We list the formulas for the segments: model = list( distance ~ 1, # Plateau ~ 1 + x, # Intercept change + slope ~ 0 # Plateau ) Let's fit it. This runs MCMC sampling and this case needs longer-than-usual adaptation: fit = mcp(model, data, adapt = 5000) plot(fit) The gray areas on the x-is are posterior distributions of the change point locations. You're looking for the first. See cp_1 (change point 1) in summary(fit) or fixef(fit) . Refining the model You can expand the model to include more segments, autocorrelation (e.g., an ar(1) term), other formulas, etc. You can also impose restrictions on the parameters. E.g., that Intercept_2 has to be greater than Intercept 1 and that the slope in segment 2 has to be negative ( read more here ): prior = list( Intercept_2 = "dnorm(30, 10) T(Intercept_1, )", x_2 = "dnorm(0, 5) T(, 0)" ) fit_refined = mcp(model, data, prior) This was fit on a single series. The upcoming version of mcp (v0.4) will handle multivariate models, so you can infer a common change point across series.
