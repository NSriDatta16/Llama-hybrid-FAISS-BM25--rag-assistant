[site]: stackoverflow
[post_id]: 2302156
[parent_id]: 2300721
[tags]: 
You only have 32 possible inputs, so my guess is the fastest solution will be a lookup table referencing all 32 outputs from an array. It won't win points for elegance. Warning: air code Function DoIt(ByVal Input As Long) As Long Static lArray() As Long Static bInitialised As Boolean If Not bInitialised Then ReDim Preserve lArray(0 To 31) lArray(0) = 0 lArray(1) = &H80000000 lArray(2) = &HC0000000 ' etc... ' bInitialised = True End If DoIt = lArray(Input) ' for bonus marks raises an error on illegal input ' End Function If you want something more general, VBSpeed has a long-standing open competition for fast VB6 left-shifts . Here's the current winner ShiftLeft04 which uses some horrendous, sorry I mean brilliant, tricks to get inline assembler in VB6. You'll laugh, you'll cry, you'll scream in terror... The current runner-up ShiftLeft06 is about 200 lines of all-native VB6. Takes 1.3 times longer, but still quick.
