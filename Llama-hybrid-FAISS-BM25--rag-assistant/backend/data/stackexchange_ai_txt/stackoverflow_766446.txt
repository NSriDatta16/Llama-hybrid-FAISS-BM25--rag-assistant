[site]: stackoverflow
[post_id]: 766446
[parent_id]: 
[tags]: 
How many EJBs is too many?

I'm currently developing a large piece of software base on JavaEE. We have followed the general guidelines of JavaEE that says that each related set of operations should go into their own EJB. We currently have over 275 different EJB classes (Stateless Session beans). This number is most likely going to grow to at least double that number. I would like to know if the EJB containers are designed to hold that many different kinds of EJBs. I'm interested in knowing if we are going to get some bad performance penalty from having too many such classes, and if some application server level tweaking can help alleviate those hypothetical problems. We are using Glassfish v2 with JavaEE 5 on sun's Java 6, so advice on this particular platform would be most appreciated.
