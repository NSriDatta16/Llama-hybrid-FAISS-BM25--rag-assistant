[site]: crossvalidated
[post_id]: 613765
[parent_id]: 
[tags]: 
Measuring uncertainty in edge weights using Bayesian modeling and brms in R

I'm interested in using Bayesian models to measure uncertainty in edge weights within social networks. Specifically, I have been trying to replicate how this package works but using brms: https://jordanhart.co.uk/bisonR/articles/getting_started.html When I use bisonR, the output generates edge weights that seem to reflect the data... here are the top five dyads in terms of how often they interacted with one another And here are the edge weights that bisonR produces: However, for other periods where I want to quantify networks, I have a lot of zero-inflation, which bisonR doesn't currently handle (at least when I try to use the zero-inflation option). So, I've been trying to understand how bisonR works, so I can do something using different distributions if needed. The bisonR code is: fit_edge When I try to replicate this in brms, I code: brm(duration|trials(trunc(obs_duration)) ~ 1 + (1|actor+receiver), data = b1, family = binomial() Then I extract edge weights by adding together the draws for "actor", "receiver" and the "intercept", and apply "plogis" to their sum. For clarity, here is the for loop I do for this: for (i in 1:nrow(network_list)){ # Extract relevant coefficients from posterior samples actor $actors[i] receiver receivers[i] r_actor $edge actor+expected_weight $receiver+expected_weight$ b_intercept) expected_weight $edge edge,5) edge_weight $median[i] lower[i] However, when I do this, although the top dyad is the same, the rest are less sensible. For example, ROC and CAS never interact with each other but the model, or the way I'm treating the outputs, is generating an edge weight between them. Any clues on where I'm going wrong?
