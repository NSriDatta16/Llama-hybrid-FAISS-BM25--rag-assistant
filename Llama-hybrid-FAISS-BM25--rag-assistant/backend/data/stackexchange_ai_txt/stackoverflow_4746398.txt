[site]: stackoverflow
[post_id]: 4746398
[parent_id]: 4745459
[tags]: 
I would setup mappings for $/TeamProject/Area1/Area2/Solution1/ $/TeamProject/Area1/Area2/Solution2/ $/TeamProject/Area1/Area2/Solution3/ Then in the build definitions enter the three projects to build $/TeamProject/Area1/Area2/Solution1/Solution1.sln $/TeamProject/Area1/Area2/Solution2/Solution2.sln $/TeamProject/Area1/Area2/Solution3/Solution3.sln You can leave the configurations to build as blank, or if you want to do a certain build you can set it to (for example) something like Debug|Mixed Platforms (check your Configuration Manager... for the solutions you are building to see what is valid) Alternatively, you can just map the following (depending on how much you have in this folder, if you have Solutions 4+ that you don't want to trigger builds on, don't do it at this level) $/TeamProject/Area1/Area2 And have one solution which contains the Solution1, Solution2 and Solution3, and build that instead. By default building your Solution1 which is mapped to $/TeamProject/Area1/Area2 On a build agent with a working directory that is going to looks something like: $(SystemDrive)\Builds\$(BuildAgentId)\$(BuildDefinitionPath) You'll end up with it being build under C:\Builds\1\Solution1\Binaries C:\Builds\1\Solution1\Sources C:\Builds\1\Solution1\TestResults Which is why you want to make sure that your OutDir's etc are all correct and not hard coded! If you have a look while building, you'll see the build agent populating the Sources folder, and it should (if configured correctly) put all outputs into the Binaries folder (and then copy them to the Drop Folder configured under Build Defaults in TFS.
