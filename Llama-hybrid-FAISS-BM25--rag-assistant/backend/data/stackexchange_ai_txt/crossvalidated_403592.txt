[site]: crossvalidated
[post_id]: 403592
[parent_id]: 403502
[tags]: 
You can certainly use a CNN to classify a 1D signal. Since you are interested in sleep stage classification see this paper . Its a deep neural network called the DeepSleepNet, and uses a combination of 1D convolutional and LSTM layers to classify EEG signals into sleep stages. Here is the architecture: There are two parts to the network: Representational learning layers: This consists of two convolutional networks in parallel. The main difference between the two networks is the kernel size and max-pooling window size. The left one uses kernel size = $F_s/2$ (where $F_s$ is the sampling rate of the signal) whereas the one the right uses kernel size = $F_s \times 4$ . The intuition behind this is that one network tries to learn "fine" (or high frequency) features, and the other tries to learn "coarse" (or low frequency) features. Sequential learning layers: The embeddings (or learnt features) from the convolutional layers are concatenated and fed into the LSTM layers to learn temporal dependencies between the embeddings. At the end there is a 5-way softmax layer to classify the time series into one-of-five classes corresponding to sleep stages.
