[site]: stackoverflow
[post_id]: 1008456
[parent_id]: 766732
[tags]: 
Here's my best attempt at pointing you in the right directions. Generally speaking: Organize your source code according to the components of your system in the usual way. Make sure that each component can have access control configured independently (e.g. in git, this means separate repositories for each component, as Makis said). Managing access rights is commonly done in conjunction with LDAP these days. Configure your tool to leverage your organization's LDAP directory in the usual way. (for git, this is more commonly done using the existing accounts on the system, which may or may not be backed by LDAP). Use your version control system's built-in access control mechanisms in the usual way to allow each team to read or write to each component as appropriate. If this matrix of permissions becomes too cumbersome to manage manually, build a custom mechanism to control it at a higher level and/or automate large-scale updates. If you don't have a component architecture, centralized user accounts, or access control for your VCS, then give up on this problem until you fix the more important ones.
