[site]: crossvalidated
[post_id]: 465422
[parent_id]: 464730
[tags]: 
I would call your problem a case of a multiple instance learning problem. The wikipedia page gives an emphasis on the fact that the learning process receives a bag on instances and the presence of one of them is the reason to classify the bag as belonging to different classes. Under this view, in your case, each line of the data table is an instance, the whole data tabe is the bag, and the presence of particular lines would be the reason to classify the data table one way or another. But I think it is more useful to think that a subset of the instances is the reason to classify the bag one way or the other. For example, finding a cat/cats in pictures is usefully thought as a multiple instance problem - the pictures are the bags, but one of other pixel is not the reason to classify the image - it is a collection of (adjacent) pixels that indicates whether there is a cat or not in the picture. Before the deep learning approaches to image processing, the traditional solution was convert each image into a vector of both global and local descriptors (sometimes predefined descriptors - sometimes learned descriptors). You mentioned two global sets of descriptors (mean of each column and correlation among the each pair of columns). Local descriptors would aggregate values of "adjacent" instances, but the default semantics of data tables is that the order of lines is not important, and thus there are no adjacent instances. But it may be the case that your data tables have a semantically motivated order, and then local descriptors would be useful. Finally, my experience with multiple instance problems is that the more descriptors the better. You never know which combination of descriptors will be able to distinguish between classes. In your case, if local descriptors are not meaningful, use more global descriptors that capture different aspects of the distribution of values within the columns, not just the mean. Use also other descriptors of the joint distribution of pairs of columns, not only the correlation. And let the classifier decide what to use!!!
