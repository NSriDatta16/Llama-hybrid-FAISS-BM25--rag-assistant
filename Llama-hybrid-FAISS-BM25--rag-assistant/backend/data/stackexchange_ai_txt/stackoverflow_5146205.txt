[site]: stackoverflow
[post_id]: 5146205
[parent_id]: 5146057
[tags]: 
"select" Isnâ€™t Broken. It is rare to find a bug in the OS or the compiler, or even a third-party product or library. The bug is most likely in the application. - from The Pragmatic Programmer It's highly likely due to your problem, not MS. Make it sure that your iterators are not invalidated while you are using them. You could accidentally erase the element which invalidate the iterator. Check this thread: What is the lifetime and validity of C++ iterators? and Good Luck! :) UPDATE: As I mentioned earlier, you are invalidating your iterators by erasing them in the middle of the loop. See my code below to do it properly. std::list ::iterator EraseElements(std::list & sList, std::list ::iterator start) { for (std::list ::iterator itor1 = start; itor1 != sList.end(); ++itor1) { std::list ::iterator itor2(itor1); ++itor2; for ( ; itor2 != sList.end(); ++itor2) { if ((*itor1) == (*itor2)) { return sList.erase(itor1, itor2); } } } return sList.end(); } void main() { // Test list sList; sList.push_back(1); // elements will be erased sList.push_back(2); sList.push_back(3); // sList.push_back(2); sList.push_back(4); sList.push_back(5); // elements will be erased sList.push_back(6); sList.push_back(7); // sList.push_back(6); list ::iterator next = sList.begin(); while (next != sList.end()) { next = EraseElements(sList, next); } // It will print 1 2 4 5 6 for (std::list ::const_iterator itor = sList.begin(); itor != sList.end(); ++itor) { cout
