[site]: crossvalidated
[post_id]: 108136
[parent_id]: 108017
[tags]: 
I recommend you use MLLib from Spark if you have a lot of data. My first point would be that it's not possible to have a single scorer, rather one scorer per Job Spec. So the task is to classify a CV X with respect to a Job Spec Y. Having personally had to sift through 100s of CVs for several positions over the years I too have thought quite a bit about what kind of feature extraction to use. Note that all the following is highly focused to tech and data science type positions. Parsing the Job Spec: Extract the occurrence of various keywords/skills/techs mentioned in the Job Spec Rank the keywords according to whether they occur under "required", "desirable", etc, and then further ranks them based on their order in the Job Spec Parsing the CV: Chop CV into units - 1 unit is either a qualification, or a previous industry role. Perform similar feature extraction as we did on the Job Spec, perform this on the 'skills section' of the CV, and again for each unit. Use the time-series analysis to rank how much a candidate has actually used the skills. Score industry experience much more highly than qualifications (this is quite a tech specific assumption) Use pre existing tools to grade the quality of the grammar and spelling (bad grammar IME usually indicates bad English or communication skills, which usually indicates they can't function in a team) Grades at uni, if not stated, assume a 2:1 or lower - if you get a 1st, you write it down. Similarly with masters degress (if they don't say they got a distinction, then they didn't). Other meta analysis like length of description of a unit with respect to length of time at the place of employment. If a CV is overly long, then this indicates an inability to be concise nor communicate well. Short CVs usually mean the person is better at communicating. Time series analysis to detect job hopping (so unreliability), but this will vary massively from area to area. In tech it's not uncommon to reward job hopping as it will indicate a wide range of skills and a high level of curiosity. You can then feed all these features into a model, most of which will be categorical. If your lucky, you might have access to a database of previous CVs and Job Specs, and data indicating which CV was successful. In which case you have your training set. Use the training set to teach the model the predictive power of each of the features.
