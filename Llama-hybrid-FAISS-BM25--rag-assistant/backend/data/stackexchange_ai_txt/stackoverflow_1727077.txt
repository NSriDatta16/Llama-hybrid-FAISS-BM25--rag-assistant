[site]: stackoverflow
[post_id]: 1727077
[parent_id]: 
[tags]: 
Generating a drop down list of timezones with PHP

Most sites need some way to show the dates on the site in the users preferred timezone. Below are two lists that I found and then one method using the built in PHP DateTime class in PHP 5. I need help knowing which of these would be the best to attempt to use when trying to get the UTC offset from the user on register. One: [UTC - 12] Baker Island Time [UTC - 11] Niue Time, Samoa Standard Time [UTC - 10] Hawaii-Aleutian Standard Time, Cook Island Time [UTC - 9:30] Marquesas Islands Time [UTC - 9] Alaska Standard Time, Gambier Island Time [UTC - 8] Pacific Standard Time [UTC - 7] Mountain Standard Time [UTC - 6] Central Standard Time [UTC - 5] Eastern Standard Time [UTC - 4:30] Venezuelan Standard Time [UTC - 4] Atlantic Standard Time [UTC - 3:30] Newfoundland Standard Time [UTC - 3] Amazon Standard Time, Central Greenland Time [UTC - 2] Fernando de Noronha Time, South Georgia &amp; the South Sandwich Islands Time [UTC - 1] Azores Standard Time, Cape Verde Time, Eastern Greenland Time [UTC] Western European Time, Greenwich Mean Time [UTC + 1] Central European Time, West African Time [UTC + 2] Eastern European Time, Central African Time [UTC + 3] Moscow Standard Time, Eastern African Time [UTC + 3:30] Iran Standard Time [UTC + 4] Gulf Standard Time, Samara Standard Time [UTC + 4:30] Afghanistan Time [UTC + 5] Pakistan Standard Time, Yekaterinburg Standard Time [UTC + 5:30] Indian Standard Time, Sri Lanka Time [UTC + 5:45] Nepal Time [UTC + 6] Bangladesh Time, Bhutan Time, Novosibirsk Standard Time [UTC + 6:30] Cocos Islands Time, Myanmar Time [UTC + 7] Indochina Time, Krasnoyarsk Standard Time [UTC + 8] Chinese Standard Time, Australian Western Standard Time, Irkutsk Standard Time [UTC + 8:45] Southeastern Western Australia Standard Time [UTC + 9] Japan Standard Time, Korea Standard Time, Chita Standard Time [UTC + 9:30] Australian Central Standard Time [UTC + 10] Australian Eastern Standard Time, Vladivostok Standard Time [UTC + 10:30] Lord Howe Standard Time [UTC + 11] Solomon Island Time, Magadan Standard Time [UTC + 11:30] Norfolk Island Time [UTC + 12] New Zealand Time, Fiji Time, Kamchatka Standard Time [UTC + 12:45] Chatham Islands Time [UTC + 13] Tonga Time, Phoenix Islands Time [UTC + 14] Line Island Time Or using PHP friendly values: (GMT-11:00) Midway Island, Samoa (GMT-10:00) Hawaii-Aleutian (GMT-10:00) Hawaii (GMT-09:30) Marquesas Islands (GMT-09:00) Gambier Islands (GMT-09:00) Alaska (GMT-08:00) Tijuana, Baja California (GMT-08:00) Pitcairn Islands (GMT-08:00) Pacific Time (US & Canada) (GMT-07:00) Mountain Time (US & Canada) (GMT-07:00) Chihuahua, La Paz, Mazatlan (GMT-07:00) Arizona (GMT-06:00) Saskatchewan, Central America (GMT-06:00) Guadalajara, Mexico City, Monterrey (GMT-06:00) Easter Island (GMT-06:00) Central Time (US & Canada) (GMT-05:00) Eastern Time (US & Canada) (GMT-05:00) Cuba (GMT-05:00) Bogota, Lima, Quito, Rio Branco (GMT-04:30) Caracas (GMT-04:00) Santiago (GMT-04:00) La Paz (GMT-04:00) Faukland Islands (GMT-04:00) Brazil (GMT-04:00) Atlantic Time (Goose Bay) (GMT-04:00) Atlantic Time (Canada) (GMT-03:30) Newfoundland (GMT-03:00) UTC-3 (GMT-03:00) Montevideo (GMT-03:00) Miquelon, St. Pierre (GMT-03:00) Greenland (GMT-03:00) Buenos Aires (GMT-03:00) Brasilia (GMT-02:00) Mid-Atlantic (GMT-01:00) Cape Verde Is. (GMT-01:00) Azores (GMT) Greenwich Mean Time : Belfast (GMT) Greenwich Mean Time : Dublin (GMT) Greenwich Mean Time : Lisbon (GMT) Greenwich Mean Time : London (GMT) Monrovia, Reykjavik (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague (GMT+01:00) Brussels, Copenhagen, Madrid, Paris (GMT+01:00) West Central Africa (GMT+01:00) Windhoek (GMT+02:00) Beirut (GMT+02:00) Cairo (GMT+02:00) Gaza (GMT+02:00) Harare, Pretoria (GMT+02:00) Jerusalem (GMT+02:00) Minsk (GMT+02:00) Syria (GMT+03:00) Moscow, St. Petersburg, Volgograd (GMT+03:00) Nairobi (GMT+03:30) Tehran (GMT+04:00) Abu Dhabi, Muscat (GMT+04:00) Yerevan (GMT+04:30) Kabul (GMT+05:00) Ekaterinburg (GMT+05:00) Tashkent (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi (GMT+05:45) Kathmandu (GMT+06:00) Astana, Dhaka (GMT+06:00) Novosibirsk (GMT+06:30) Yangon (Rangoon) (GMT+07:00) Bangkok, Hanoi, Jakarta (GMT+07:00) Krasnoyarsk (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi (GMT+08:00) Irkutsk, Ulaan Bataar (GMT+08:00) Perth (GMT+08:45) Eucla (GMT+09:00) Osaka, Sapporo, Tokyo (GMT+09:00) Seoul (GMT+09:00) Yakutsk (GMT+09:30) Adelaide (GMT+09:30) Darwin (GMT+10:00) Brisbane (GMT+10:00) Hobart (GMT+10:00) Vladivostok (GMT+10:30) Lord Howe Island (GMT+11:00) Solomon Is., New Caledonia (GMT+11:00) Magadan (GMT+11:30) Norfolk Island (GMT+12:00) Anadyr, Kamchatka (GMT+12:00) Auckland, Wellington (GMT+12:00) Fiji, Kamchatka, Marshall Is. (GMT+12:45) Chatham Islands (GMT+13:00) Nuku'alofa (GMT+14:00) Kiritimati Or just using PHP itself: $timezones = DateTimeZone::listAbbreviations(); $cities = array(); foreach( $timezones as $key => $zones ) { foreach( $zones as $id => $zone ) { /** * Only get timezones explicitely not part of "Others". * @see http://www.php.net/manual/en/timezones.others.php */ if ( preg_match( '/^(America|Antartica|Arctic|Asia|Atlantic|Europe|Indian|Pacific)\//', $zone['timezone_id'] ) && $zone['timezone_id']) { $cities[$zone['timezone_id']][] = $key; } } } // For each city, have a comma separated list of all possible timezones for that city. foreach( $cities as $key => $value ) $cities[$key] = join( ', ', $value); // Only keep one city (the first and also most important) for each set of possibilities. $cities = array_unique( $cities ); // Sort by area/city name. ksort( $cities ); It seems like the last one would be the safest as it would grow with the PHP release being used. You could also flip that array around when needed to tie timezones to city names.
