[site]: stackoverflow
[post_id]: 1489010
[parent_id]: 1480023
[tags]: 
JavaScript - 265 Characters Update IV - Odds are this will be the last round of updates, managed to save a couple more characters by switching to a do-while loop and rewriting the movement equation. Update III - Thanks to the suggestion by strager in regards to removing Math.abs() and putting the variables in the global name space, that coupled with some rearranging of the variable assignments got the code down to 282 characters. Update II - Some more updates to the code to remove the use of != -1 as well as some better use of variables for longer operations. Update - When through and made some changes by creating a reference to the indexOf function (thanks LiraNuna!) and removing parenthesis that were not needed. This is my first time doing a code golf so I'm not sure how much better this could be, any feed back is appreciated. Fully minimized version: a;b;c;d;e;function f(g){a=function(a){return g.indexOf(a)};b=a("\n")+1;a=g[c=e=a("v")>0?e:e=a("^")>0?e:e=a(" 0?e:a(">")];d=a==" "?1:a=="^"?-b:b;do{e=d==-1|d==1;a=g[c+=d=a=="\\"?e?b*d:d>0?1:-1:a=="/"?e?-b*d:d>0?1:-1:d];e=a=="x"}while(a!="#"^e);return e} Original version with comments: character; length; loc; movement; temp; function checkMaze(maze) { // Use a shorter indexOf function character = function(string) { return maze.indexOf(string); } // Get the length of the maze length = character("\n") + 1; // Get the location of the laser in the string character = maze[loc = temp = character("v") > 0 ? temp : temp = character("^") > 0 ? temp : temp = character(" 0 ? temp : character(">")]; // Get the intial direction that we should travel movement = character == " " ? 1 : character == "^" ? -length : length; // Move along until we reach the end do { // Get the current character temp = movement == -1 | movement == 1; character = maze[loc += movement = character == "\\" ? temp ? length * movement : movement > 0 ? 1 : -1 : character == "/" ? temp ? -length * movement : movement > 0 ? 1 : -1 : movement]; // Have we hit a target? temp = character == "x"; // Have we hit a wall? } while (character != "#" ^ temp); // temp will be false if we hit the target return temp; } Web page to test with: Code Golf - Lasers a;b;c;d;e;function f(g){a=function(a){return g.indexOf(a)};b=a("\n")+1;a=g[c=e=a("v")>0?e:e=a("^")>0?e:e=a(" 0?e:a(">")];d=a==" "?1:a=="^"?-b:b;do{e=d==-1|d==1;a=g[c+=d=a=="\\"?e?b*d:d>0?1:-1:a=="/"?e?-b*d:d>0?1:-1:d];e=a=="x"}while(a!="#"^e);return e} Maze
