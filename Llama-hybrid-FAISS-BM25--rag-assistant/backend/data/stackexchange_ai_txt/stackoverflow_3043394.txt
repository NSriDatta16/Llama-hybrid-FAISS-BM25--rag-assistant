[site]: stackoverflow
[post_id]: 3043394
[parent_id]: 
[tags]: 
Python TCP Server, writing to clients?

I have a tcp server which uses the select call to multiplex reading from clients. I have a client class (MClient) which manages the decoding of incoming data packets while(1) rlist, wlist, xlist = select( input_sockets, output_sockets, [] , 1) for insock in rlist: #any clients???? if insock is server_socket: new_socket, addr = server_socket.accept() input_sockets.append(new_socket) clients[insock.fileno()] = MClient(new_socket, addr, client_id) #dict of clients else: data = insock.recv(512) if data: clients[insock.fileno()].ProcessPacket(data) else: input_sockets.remove(insock) del clients[insock.fileno()] #handle writing to sockets for outsock in wlist: ....not done yet #do some other stuff not associated with the socket I am confused as to how to handle sending data back to the client, i.e how to write to the list 'output_sockets'. I am thinking of setting a flag in my MClient object which indicates that I have data to send back to the client. I would then in my server loop check each of the clients to see if this flag was set, and then poulate the output_list with the corresponding socket. When the socket is available for write, I would then call the appropriate clients write function. This scheme does not seem very elegant, I would like to handle the writing in the main server loop. How would I accomplish this? Thanks
