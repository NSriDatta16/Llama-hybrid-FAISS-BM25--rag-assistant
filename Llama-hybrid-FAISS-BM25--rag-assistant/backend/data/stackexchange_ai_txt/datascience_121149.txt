[site]: datascience
[post_id]: 121149
[parent_id]: 
[tags]: 
Machine learning algorithm that predicts text based output based on the input

I have tried creating an algorithm that predicts outputs based on the inputs, like so: input,output a1,b2 b3,c4 d8,e9 As you can see these values increase by 1 each time. This is my code: import pandas as pd from sklearn.feature_extraction.text import CountVectorizer from sklearn.linear_model import LogisticRegression # Load the data df = pd.read_csv('hash.csv') # Split the data into training and test sets train_data = df.sample(frac=0.8, random_state=1) test_data = df.drop(train_data.index) # Vectorize the hashed passwords vectorizer = CountVectorizer(analyzer='char') train_X = vectorizer.fit_transform(train_data['input']) test_X = vectorizer.transform(test_data['input']) # Train a logistic regression model model = LogisticRegression() model.fit(train_X, train_data['output']) # Evaluate the model on the test set score = model.score(test_X, test_data['output']) print('Accuracy: {:.2f}%'.format(score * 100)) The CSV file contains 84 lines of examples but it has an accuracy of 0.00% Does that mean that I need more examples or is there something wrong with the code?
