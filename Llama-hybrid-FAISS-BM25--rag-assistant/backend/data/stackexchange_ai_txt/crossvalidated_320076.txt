[site]: crossvalidated
[post_id]: 320076
[parent_id]: 319938
[tags]: 
If we assume the constraints are linear, i.e., sums and differences of the $X_{ij}$ for the "active" rows, we can solve this using off-the-shelf mixed integer programming solvers. The R package lpsolve wraps around the freeware lpsolve solver and can solve problems like this, although there are plenty of others. The problem can be formulated as a binary integer programming problem with linear constraints. Define $y_i \in {0,1}$ where $y_i = 1$ if row $i$ is selected and 0 otherwise. Since our objective is to choose the largest possible subset of the rows, the objective function is: $$\max_y \sum_{i=1}^N y_i$$ I'll construct the constraints for the first two examples given above. In the case of the first example, the average of $P_1$ is required to be less than $C_1$; I'll rewrite this as $\leq$, although in practice this might require a slight redefinition of $C_1$ itself, perhaps by subtracting a tiny number from it. This would be formulated as: $$\sum_{i=1}^Ny_iX_{i1} \leq NC_1$$ In the case of the second, the average of $P_2$ is required to be greater than $C_2$. Substituting $\geq$ for $>$ leads to: $$\sum_{i=1}^Ny_iX_{i2} \geq NC_2$$ The reason we can't, in general, use strict inequalities, is that if we have any continuous variables in our formulation, the problem will often reduce to something like "find the largest number $ Now, if the constraint on, for concreteness, $P_1$ is that the average of $P_1$ for the selected rows $\leq C_1$, you'll need a different formulation: $$\sum_{i=1}^Ny_i(X_{i1}-C_1) \leq 0$$ You can derive this by noting that the constraint as stated implies that the sum of $P_1$ for the selected rows $\leq$ the number of selected rows times $C_1$, and going from there. If the constraints are nonlinear, however, you'll need more advanced solution techniques than many freeware solvers can provide. The problem would still be formulated as a binary integer programming problem, but you'd need a solver that can handle nonlinear constraints.
