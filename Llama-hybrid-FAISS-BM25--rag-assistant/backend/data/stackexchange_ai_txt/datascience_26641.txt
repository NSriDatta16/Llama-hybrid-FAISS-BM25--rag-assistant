[site]: datascience
[post_id]: 26641
[parent_id]: 
[tags]: 
Text Localization using Convolutional NN

I am new on Tensorflow. I am trying to build a neural network that is able to recognize letters and words from documents. I have divided the task into 3 phases as what is mentioned in ICDAR2017 : Text Localization Cropped Word Recognition End-to-End Recognition I am having some problems in the 1st phase which is Text Localization. I used an architecture that is called EAST . Architecture stages: Fully Convolutional Network NMS merging stage This is the model I started with. It works fine but I am facing some problems in detecting some characters and letters as in: Model layers: def model(images, weight_decay=1e-5, is_training=True): ''' define the model, we use slim's implemention of resnet ''' images = mean_image_subtraction(images) with slim.arg_scope(resnet_v1.resnet_arg_scope(weight_decay=weight_decay)): logits, end_points = resnet_v1.resnet_v1_50(images, is_training=is_training, scope='resnet_v1_50') with tf.variable_scope('feature_fusion', values=[end_points.values]): batch_norm_params = { 'decay': 0.997, 'epsilon': 1e-5, 'scale': True, 'is_training': is_training } with slim.arg_scope([slim.conv2d], activation_fn=tf.nn.relu, normalizer_fn=slim.batch_norm, normalizer_params=batch_norm_params, weights_regularizer=slim.l2_regularizer(weight_decay)): f = [end_points['pool5'], end_points['pool4'], end_points['pool3'], end_points['pool2']] for i in range(4): print('Shape of f_{} {}'.format(i, f[i].shape)) g = [None, None, None, None] h = [None, None, None, None] num_outputs = [None, 128, 64, 32] for i in range(4): if i == 0: h[i] = f[i] else: c1_1 = slim.conv2d(tf.concat([g[i-1], f[i]], axis=-1), num_outputs[i], 1) h[i] = slim.conv2d(c1_1, num_outputs[i], 3) if i I have been advised to use Pyramid Networks , I don't know who to integrate this Pyramid Networks with the EAST model in Tensorflow and it is worth it or not. I would like also to know my options to increase the Text Localization accuracy in the table based data
