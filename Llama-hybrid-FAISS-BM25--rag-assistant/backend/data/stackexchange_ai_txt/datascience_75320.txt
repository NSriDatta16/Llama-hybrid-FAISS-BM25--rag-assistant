[site]: datascience
[post_id]: 75320
[parent_id]: 
[tags]: 
Predicting parameters of simple configured trajectories using RNN

What I'd like to do: predict orbital elements given an input observation sequence in 2D, that is $$input = X = [position_{t_{0}}, position_{t_{1}},\ ..., position_{T}]$$ $$output = y = parameters\ of\ observed\ orbit$$ Positions are (x, y) coordinates and the parameters are a handful of values that describe an ellipse in a 2D plane. What I've done so far: I used a very, very basic LSTM-stack model with Keras that I trained with $([X_{o_{i}}^{1},X_{o_{i}}^{2},\ ...], y_{o_{i}})$ pairs where $o_{i}$ are the 2D orbits. $[X_{o_{i}}^{1},X_{o_{i}}^{2},\ ...]$ is just a couple dozens of simulated observations of $o_{i}$ . I assumed it is a regression problem so I replicated some time series prediction models I found on the internet: those usually take a two or three dimensional vector as input sequence and give a 1D value prediction of the next step. I also Googled configured trajectory LSTM or shape parameter prediction RNN . The Issue: Results are bad, my ellipses do not have the expected shape. I have absolutely no idea if this is the RNN I should be using and if it is, what layers I should or shouldn't add. I couldn't find relevant literature on the internet and pages that tackled configured trajectories were talking about predicting the next position of a car, while in my case I'm trying to compute an estimation of the whole trajectory. What I'm looking for: Really anything related to determining geometrical parameters based on sequential observation or relevant literature about how to design models that use LSTM for this kind of problems. Any advice from LSTM-RNN-savvy people or orbital-element-estimation-specialists would be greatly appreciated.
