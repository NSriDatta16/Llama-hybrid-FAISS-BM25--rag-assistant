[site]: stackoverflow
[post_id]: 4247640
[parent_id]: 4247111
[tags]: 
There are two algorithms called "Fibonacci search". The article you linked is about a numerical algorithm for finding the maximum or minimum of certain functions. It is the optimal algorithm for this problem. This problem is just different enough from the binary search problem that it should be obvious for any given case which is appropriate. The other kind of Fibonacci search does attack the same problem as binary search. Binary search is essentially always better. Knuth writes that Fibonacci search "is preferable on some computers, because it involves only addition and subtraction, not division by 2." But almost all computers use binary arithmetic, in which division by 2 is simpler than addition and subtraction. (The Wikipedia article currently claims that Fibonacci search could have better locality of reference, a claim Knuth does not make. It could , perhaps, but this is misleading. The tests done by a Fibonacci search are closer together precisely to the extent that they are less helpful in narrowing down the range; on average this would result in more reads from more parts of the table, not fewer. If the records are actually stored on tape, so that seek times dominate, then Fibonacci search might beat binary searchâ€”but in that case both algorithms are far from optimal.)
