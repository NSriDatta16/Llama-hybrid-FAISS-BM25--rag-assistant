[site]: crossvalidated
[post_id]: 435536
[parent_id]: 
[tags]: 
Using CausalImpact to estimate uplift attributed to a promotion for logged-in users

I'm working for an online travel agency, and we've been exploring the use of the causalImpact algorithm for the following problem: Hotel owners that sell room-nights on our platform have the option to create promotions, or deals, that can be restricted to a particular audience or to a range of dates. The most common deal are those that grant a discount (typically 10%) to logged-in users. We’re interested in estimating how much extra revenue such a deal brings to a hotel owner. I’ve applied the method described in the paper by measuring the daily sales of a hotel for one year prior and one year posterior to loading the deal (taking care to select only hotels that had no deal loaded during the prior year, and whose deal remained active for at least one year). I take as controls the hotels in the same market (loosely defined as a relatively small geographical area). The results, for a randomly chosen hotel, look like this: I do the same for all treated hotels (about 4000 of them), each of which has about 100-1000 control hotels in their market. Plotting the absolute effect against the total production prior to loading the deal, I obtain the following scatterplot: In spite of the high noise for each hotel, a regression line through the data has a statistically significant slope of about 5%: on average, a hotel increases its yearly production by about 5% by loading a deal. But we have several questions, and I'd be grateful if someone could help answer these. Apologies for posing several questions at once: Overall, do you think our approach is sound? We’re a bit concerned by the wide confidence intervals obtained for most hotels; do you have any advice on how this could be reduced? We were thinking of using weekly instead of daily production data, which would a) reduce any seasonal (weekly) effects, and b) help each sample be more normally distributed, but I’m not sure this would help with the accuracy Does the algorithm make any assumptions regarding the distribution of each time-series sample? (The daily sales by a hotel are certainly not normally distributed, although the weekly sales might be) We have a relatively large number of controls, can that be a problem for the algorithm? The algorithm has been ported to Python but it would appear it doesn’t work anymore (I believe it is due to a bug in statsmodels, one of the dependencies of that ported package). Are the R and Python versions equivalent? Running the algorithm on our portfolio takes about 3 seconds per hotel, and several hours on all hotels (even when exploiting all 12 cores on my computer); do you have any suggestions on how to improve the performance of the algorithm? I’m aware that one key assumption of the algorithm is that the intervention should not affect the control units; but there’s strong interest on our side to attempt to measure this effect. Someone has floated the idea of running the algorithm on each of the control hotels in turn, and see if the intervention (on the treated hotel) has any negative effect on them. To the best of your knowledge, would that approach make sense? And finally: the causalImpact algorithm measures the effect due to a given intervention, but we work with purely observational data (it’s the hotel owners who choose to load the deals). So although we find an average boost of 5% to the production of the treated hotels, I’m not sure we’re entitled to claim that on average, any hotel that loads a deal will enjoy the same benefit. Other factors (confounders) could also explain the benefit, and explain why some hotels choose to load a deal when they did. Do you have any thoughts or ideas on that?
