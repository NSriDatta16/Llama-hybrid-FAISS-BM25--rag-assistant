[site]: stackoverflow
[post_id]: 1368921
[parent_id]: 1368594
[tags]: 
It depends. A few years ago, I was technical lead on a year long project to create a "builder" website that allowed clients to configure and deploy their own interactive websites. Being a very marketing-oriented company, we had a large number of skilled Flash developers in addition to the Perl developers who did the more down-and-dirty programming work. The tool in which a client would intially configured and deploy his website (selecting there, color, etc) was in Flash/Flex and I think that was the right choice. It would have been very difficult to have such a rich, compelling experience using Ajax and the interactions it had with our Perl/Java backend were fairly limited to asset retrieval, a JSON-based HTTP requests, and at the end emitting an XML-based configurational file for the site. That said, we used existing Flash developers to do the work and in many cases we were stretching them beyond their comfort zones as the app had a lot of complexity that was atypical (at least at the time) for Flash applications. This had a large number of ramifications in terms of schedule and the quality of the code that was produced. Once a user's site was deployed, users could log into a "databank" which allowed them to view and download demographic data, along with various reports/charts, etc. Initially we wrote this in JSP/Ajax etc but was ultimately migrated to a Flash/Flex based framework. In this case, I think the move was a poor choice. It did give it a much slicker look, but it ended up being much more heavyweight and troublesome to maintain. I think a lot of what we achieved by moving it over could have been done with things like jQuery. Most of the drawbacks you've mentioned above I think are very valid concerns that did prove out on our project. The Flash/Flex based databank did take a fair bit longer to download, it tended to be more difficult to maintain, and I don't know that the pizzazz it added ended up really being "worth it". One mistake I made was that I largely delegated the Flash work to Flash programmers, with insufficient oversight on my part. Those who tend to have skills in Flash tend not to have as rigorous a CS background (not saying this is always the case) and so lacked the same kinds of estimation skills and logically thought process required for things requiring more complex coding and parsing logic. The best thing I did was push to have one of the Perl developers learn Flex and add him to the Flash team, which introduced a bit more rigor into what that team was doing (including lookings at thigns like FlexUnit, etc).
