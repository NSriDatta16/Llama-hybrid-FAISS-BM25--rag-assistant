[site]: stackoverflow
[post_id]: 605511
[parent_id]: 602735
[tags]: 
Yes all the books show threaded structures and invokes etc. Which is perfectly correct etc, but it can be a pain to code, and often hard to organise so you can make decent tests for it A UI only needs to be refreshed so many times a second, so performance is never an issue, and polling will work fine I like to use a object graph that is being continuously updated by a pool of background threads. They check for actual changes in data values and when they notice an actual change they update a version counter on the root of the object graph (or on each main item whatever makes more sense) and updates the values Then your foreground process can have a timer (same as UI thread by default) to fire once a second or so and check the version counter, and if it changes, locks it (to stop partial updates) and then refreshes the display This simple technique totally isolates the UI thread from the background threads
