[site]: stackoverflow
[post_id]: 1067078
[parent_id]: 1066234
[tags]: 
Python: 115 characters Like the OP, I'm not including the declaration of the data, but I am counting whitespace. D = [(1,11,5), (2,6,7), (3,13,9), (12,7,16), (14,3,25), (19,18,22), (23,13,29), (24,4,28)] P=[max([0]+[h for s,h,e in D if s Note that I am using the link provided by the OP as the exact definition of the problem. For instance, I cheat a bit by assuming there is not building coordinate over 5000, and that all coordinates are positive integers. The original post is not tightly constrained enough for this to be fun, in my opinion. edit : thanks to John Pirie for the tip about collapsing the list construction into the printing for loop. How'd I miss that?! edit : I changed range(1+max(zip(*D)[2])) to range(5001) after deciding the use the exact definition given in the original problem. The first version would handle buildings of arbitrary positive integers (assuming it all fit into memory). edit : Realized I was overcomplicating things. Check my revisions. BTW - I have a hunch there's a much more elegant, and possibly shorter, way to do this. Somebody beat me!
