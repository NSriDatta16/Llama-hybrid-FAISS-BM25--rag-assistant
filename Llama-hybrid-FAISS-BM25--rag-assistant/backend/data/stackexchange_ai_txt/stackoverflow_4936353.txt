[site]: stackoverflow
[post_id]: 4936353
[parent_id]: 4862290
[tags]: 
The solution is two-part, first using the aggregation functions of django ORM, the second using python-dateutil . from dateutil.relativedelta import relativedelta A_MONTH = relativedelta(months=1) month = ItemPrice.objects \ .filter(date__gte = date - A_MONTH) \ .filter(date__lt = date) \ .aggregate(month_average = Avg('price')) month equals: {'month_average': 40} It's worth noticing that you can change the key of the month dictionary by changing the .aggregate() param. dateutil 's relativedelta can handle days, weeks, years and lots more. An excellent package, I'll be re-writing my home-grown hax.
