[site]: stackoverflow
[post_id]: 3134681
[parent_id]: 
[tags]: 
return statements when doing Extract Method

Let's say you have a very long method, like this: int monster() { int rc = 0; // some statements ... if (dragonSlayer.on_vacation()) { cout and I'm working on skeletonizing the code. I want to extract the dragon slaying part to int handleDragon() { if (dragonSlayer.on_vacation()) { cout and replace the code in monster() with a call to handleDragon(). But there is a problem. There is a return statement in the middle of that part. If I keep the part where the return code of handleDragon() is handled, it will keep the litter in the big method. Besides using exceptions, is there an elegant and safe way to refactor this piece of code out of the monster method? How should these types of situations be handled?
