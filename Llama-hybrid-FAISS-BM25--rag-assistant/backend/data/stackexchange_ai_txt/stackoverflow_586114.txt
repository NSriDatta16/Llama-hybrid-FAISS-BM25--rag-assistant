[site]: stackoverflow
[post_id]: 586114
[parent_id]: 584721
[tags]: 
I would tend to stick with 5. /searches/{search-id|search-name} 6. /searches/group/{groupname}/{search-name} 7. /searches/user/{username}/{search-name} The backup problem can be solved by creating a new resource that contains links to Bob's info throughout the system e.g. GET /AccountData/Bob My experience is that you will drive yourself nuts if you try and create a single hierarchy that meets all of your usage scenarios. You just can't do it. That's why Wikis work so well, they use links instead of hierarchy to provide access to the information. I would suggest you focus more on what links will be returned in the representations. e.g. GET /Groups/{GroupName} AGroup With this approach, you care much less about what the URL structure looks like. As Roy states here A REST API must not define fixed resource names or hierarchies (an obvious coupling of client and server) I realize this may seem like an extreme position, considering how everyone on SO seem fixated on what your urls need to look like to have a RESTful API, but the more you think about it, the more sense it makes. P.S. Please don't get hung up on my choice of HTML as a media type for the representations, I'm just drawing attention to the fact that you don't always need to use a custom XML vocabulary.
