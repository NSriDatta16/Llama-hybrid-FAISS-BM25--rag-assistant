[site]: stackoverflow
[post_id]: 4003385
[parent_id]: 
[tags]: 
Reorder function arguments in Lisp

I'm interested in an operator, "swap-arg", that takes as input 1) a function f of n variables, and 2) index k, and then returns a the same function except with the first and kth input variables swapped. eg (in mathematical notation): (swap-arg(f,2))(x,y,z,w) = f(z,y,x,w) Now my first idea is to implement this using rotatef as follows, (defun swap-args (f k) (lambda (L) (f (rotatef (nth k L) (car L))))) However, this seems inelegant since it uses rotatef on the input. Also, it's O(n), and could be O(n^2) in practice if applied repeatedly to reindex everything. This seems like a common problem people would have already considered, but I haven't been able to find anything. What's a good way to swap inputs like this? Is there a standard method people use?
