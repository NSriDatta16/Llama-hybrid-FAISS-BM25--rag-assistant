[site]: stackoverflow
[post_id]: 4570383
[parent_id]: 4568498
[tags]: 
It's ok to just output link yourself, commandLink is out of the question (it does a postback using javascript, it's not what you want); Parameter are all in the param implicit object. You can insert them by a @ManagedProperty annotation, like this: @ManagedProperty("#{param.ref}") String ref // .. getters, setters (obligatory!) You can also use (if you are on JSF 2) the f:viewParam tag (a nice description http://blogs.oracle.com/rlubke/entry/jsf_2_0_bookmarability_view ), you get the bonus of validation and conversion. The way I understand it, your setup is rather complicated. Using a handwritten custom component for a menu is a huge overkill (at least judging from the provided description), a composite component would probably do. JSF has no special way of making ajax calls between views or embedding views one into another, so - unless you use iframes - your only choice would be to include all the possible pieces of content into a single view, wrapped in panels, and render them as required: ... content 2 ... and so on. Careful, this would be heavy on resources. You could also write your own ajax solution in javascript. This would require all the pieces of content to be fully independent views, with their own forms. Also, all their postbacks would have to go through ajax, so the main page does not get reloaded.
