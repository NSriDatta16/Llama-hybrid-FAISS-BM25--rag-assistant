[site]: stackoverflow
[post_id]: 4271790
[parent_id]: 4265781
[tags]: 
Robert thanks for the advice. I have taken out the autorelease and appreciate should normally be used in the ViewDidLoad and can confirm works perfectly when used there to start the activity animation. The issue i have is: i can use the example code in the relevant view controller to start the animation UIActivityIndicatorView *aiv = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhite]; UIBarButtonItem *activityButtonItem = [[UIBarButtonItem alloc] initWithCustomView:aiv]; [aiv startAnimating]; [aiv release]; [self.navigationItem setRightBarButtonItem:activityButtonItem animated:YES]; [activityButtonItem release]; but i have a singleton object for IAP which is called from various view controllers within my app and i need to be able to stop the activity animation - think need to just set the rightBarButton = nil but struggling to work out how the singleton object can tell the corresponding view controller to stop the animation. I thought about trying to use something like: [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector (IAP_complete:) name: IAP_completeNotification object:nil]; but haven't figured out the complete process start to finish. Appreciate any help you can offer on; viewController setting the rightBarItem and starting the animation (done) setting up NSNotificationCenter to listen for IAP completed (if this is the best way to achieve) setting up the singleton object NSNotificationCenter to broadcast the IAP is complete To expand on this I am using the MKStoreKit 3 by Mugunth Kumar @ http://blog.mugunthkumar.com/coding/introducing-mkstorekit- â€“-version-3/ I have modified this to suit my needs but simply put; In my VC i use the following to initiate the in app purchase //display activity indicator UIActivityIndicatorView *aiv = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhite]; UIBarButtonItem *activityButtonItem = [[UIBarButtonItem alloc] initWithCustomView:aiv]; [aiv startAnimating]; [aiv release]; [self.navigationItem setRightBarButtonItem:activityButtonItem animated:YES]; [activityButtonItem release]; //begin in app purchase [[MKStoreManager sharedManager] buyFeature:appID]; Once this is complete i need to tell the VC that this is complete. in the file MKStoreManager.m -(void) provideContent: (NSString*) productIdentifier forReceipt:(NSData*) receiptData i unlock or download content here but need to stop the activity indicator also which is where i am missing the plot. Thanks, Mike
