[site]: stackoverflow
[post_id]: 3691056
[parent_id]: 3688912
[tags]: 
In my original problem I had no dependency Property. So I created one. public partial class MyButton : Button { //... public string MyStorage { get { return (string)GetValue(MyStorageProperty); } set { SetValue(MyStorageProperty, value); } } public static DependecyProperty MyStorageProperty = DependencyProperty.Register("MyStorage", typeof(string), typeof(MyButton), new UIPropertyMetadata(OnMyStorageChanged)); public static void OnMyStorageChanged(DependecyObject d, DependencyPropertyChangedEventArgs e) { var myButton = d as MyButton; if (myButton == null) return; myButton.OnMyStorageChanged(d,e); } public void OnMyStorageChanged(object sender, DependencyPropertyChangedEventArgs e) { // ... } } And now I can set the Binding in XAML This solved my problem. But Iâ€™m still curious how to do this binding without XAML.
