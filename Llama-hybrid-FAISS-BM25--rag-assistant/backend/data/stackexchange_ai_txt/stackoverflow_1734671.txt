[site]: stackoverflow
[post_id]: 1734671
[parent_id]: 1734654
[tags]: 
This link has some reasons. I think the underlying philosophy is that the marker interface (i.e. no methods) genuinely conveys information to the developer and to the compiler/JVM. Edit: I began to write a comment in response to the first comment, but decided to edit the answer. The link lists 3 reasons why you may not want an object to be serializable: (a) may not make sense to serialize state (b) additional contract/versioning overhead (c) privacy concerns. There is no way for the compiler to know these issues in advance. One might ask "why isn't Serialization a default, and there is a way to opt-out?". The answer here is probably that (1) it is weird to express in the language (2) it is more dangerous. For an example of (2), if you don't know about the privacy issue (c), then you might expose sensitive information with no explicit indication of doing so.
