[site]: stackoverflow
[post_id]: 2611675
[parent_id]: 2611550
[tags]: 
A simple line sweep algorithm is what you're looking for. Essentially: Sort all of the starting and ending points of your pricing activities into an array of "events". Stepping through this array essentially gets you each pricing "event" as it happens (the beginning or ending of any pricing period). Scanning through this array in order lets you maintain a list of which acivities are in effect at any particular date. So, given any date range, you can: Start at the beginning of the array, with an empty "current activities set". Look at each element in the array; if it's a start point, you add that activity to your current set; if it's an ending point, you drop that activity from the set. Continue the sweep until you reach your desired date range. As you're passing through your "output range", you can generate your valid price based on whatever activities are in the set; recalculating prices at every event step. When you've scanned past the end of your desired range, you're done. This way you don't need to maintain a potentially n! sized set of activity intersections, and you can generate your valid price list with a single O(n*a) pass ( a being the average number of activities in the current set; close enough to linear if that's small / constant).
