[site]: stackoverflow
[post_id]: 3782051
[parent_id]: 3781245
[tags]: 
Here's an extension method that you can use for any control. It uses Rx and is based on the A Brief Introduction to the Reactive Extensions for .NET, Rx post and sample by Wes Dyer. public static class FormExtensions { public static void EnableDragging(this Control c) { // Long way, but strongly typed. var downs = from down in Observable.FromEvent ( eh => new MouseEventHandler(eh), eh => c.MouseDown += eh, eh => c.MouseDown -= eh) select new { down.EventArgs.X, down.EventArgs.Y }; // Short way. var moves = from move in Observable.FromEvent (c, "MouseMove") select new { move.EventArgs.X, move.EventArgs.Y }; var ups = Observable.FromEvent (c, "MouseUp"); var drags = from down in downs from move in moves.TakeUntil(ups) select new Point { X = move.X - down.X, Y = move.Y - down.Y }; drags.Subscribe(drag => c.SetBounds(c.Location.X + drag.X, c.Location.Y + drag.Y, 0, 0, BoundsSpecified.Location)); } } Usage: Button button1 = new Button(); button1.EnableDragging();
