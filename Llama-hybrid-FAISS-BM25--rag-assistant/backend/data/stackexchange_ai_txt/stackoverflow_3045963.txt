[site]: stackoverflow
[post_id]: 3045963
[parent_id]: 3045602
[tags]: 
There are situations when you can't really avoid explicit casts. Especially when interacting with C libraries or badly designed C++ libraries (like the COM library sharptooth used as examples). In general, the use of explicit casts IS a red herring. It does not necessarily means bad code, but it does attract attention to a potential dangerous use. However you should not throw the 4 casts in the same bag: static_cast and dynamic_cast are frequently used for up-casting (from Base to Derived) or for navigating between related types. Their occurrence in the code is pretty normal (indeed it's difficult to write a Visitor Pattern without either). On the other hand, the use of const_cast and reinterpret_cast is much more dangerous. using const_cast to try and modify a read-only object is undefined behavior (thanks to James McNellis for correction) reinterpret_cast is normally only used to deal with raw memory (allocators) They have their use, of course, but should not be encountered in normal code. For dealing with external or C APIs they might be necessary though. At least that's my opinion.
