[site]: stackoverflow
[post_id]: 4102833
[parent_id]: 4102815
[tags]: 
You can find the n largest elements (and their positions) in a two-dimensional array as efficiently as you can in a one-dimensional array. There are a variety of selection algorithms that run in linear time. Quickselect has linear average time complexity but, like Quicksort, can be quadratic in the worst case. The median-of-medians algorithm has both expected and worst case linear time complexity. Of course, if the elements are sorted, then this is trivial: go to the end of the array and select the required number of elements from there. This may take a little logic depending on how the array is sorted in two dimensions, but it's not difficult.
