[site]: stackoverflow
[post_id]: 3969750
[parent_id]: 
[tags]: 
How to prevent a ModelBinder error in a mandatory fields of a list?

I've got this object created from EntityFramework from my database. [EdmEntityTypeAttribute(NamespaceName="ContactCoreModel", Name="TargetLang")] [Serializable()] [DataContractAttribute(IsReference=true)] public partial class TargetLang : EntityObject { #region Factory Method /// /// Create a new TargetLang object. /// /// Initial value of the idTarget property. /// Initial value of the idLang property. /// Initial value of the name property. public static TargetLang CreateLinguaTarget(global::System.Int32 idTarget, global::System.Int32 idLang, global::System.String name) { TargetLang targetLang = new TargetLang(); targetLang.idTarget = idTarget; targetLang.idLang = idLang; targetLang.name = name; return targetLang; } #endregion [...] /// /// No Metadata Documentation available. /// [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)] [DataMemberAttribute()] public global::System.String name { get { return _nome; } set { OnnomeChanging(value); ReportPropertyChanging("name"); _nome = StructuralObject.SetValidValue(value, false); ReportPropertyChanged("name"); OnnomeChanged(); } } } In my Create View I'll do something like Data for language lt.idLang.Equals(lang.id)) ?? new TargetLang(); %> And in my Controllers [HttpPost] public ActionResult Create(IList targetLangs) { if (ModelState.IsValid) { _repTargetsLangs.Add(targetLangs); _repTargetsLangs.Save(); return RedirectToAction("Index"); } return View(target); } The problem is that ModelState is always invalid, because you can submit only a name for all the languages - you haven't to translate the target in all languages -, but the name is mandatory for db, so the model Binder raises an error. My question is: where I have to operate, to correct this error? At the Model binder level? In the Controller before the ModelState.IsValis call? And how? I'm sure this case has happened to many, but I can't find an elegant, scalable solution. Thanks.
