[site]: stackoverflow
[post_id]: 4401583
[parent_id]: 
[tags]: 
Collections of Objects OOP

I'm interested in a general concept, how would you organize your code ( what classes would you use) in the following context. You have to deal with articles/nodes or content. The name doesn't matter the concept is the same. Each object has 10-20 attributes. The problem starts when I need to work with this objects. In order to keep the code clean I try to move most of the operations in one or more classes. The first method was to use a generic class called NodeManger. As you can imagine the methods stared pilling up so the only way to solve this was to start refactoring the code into several smaller classes with special purpose like NodeStorage, NodeConverter, NodeViewer, NodeBuilder and so on. The operations you have to do on this collections seem few at the begging but in time they become bigger and bigger - you have to store the nodes in different databases ( CMS ) , each of them has a different naming structure - you have to extract the information from different tables - you can get via API different inputs that with different names for the attributes but in the end it's the same object - you have to select subsets, extract, filter, delete and so on. So the questions are : Am I on the right track ? What would be an abstract structure you would devise in order to cope with these problems and be open to new operations that might appear ?
