[site]: stackoverflow
[post_id]: 4179379
[parent_id]: 
[tags]: 
Spring & Hibernate: no session bound to the thread

Trying to get Spring's transaction management to work but it's not going as I hoped. I get an exception when requesting anything that requires my database: DEBUG: org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session DEBUG: org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session DEBUG: org.hibernate.impl.SessionImpl - opened session at timestamp: 12897642913 DEBUG: org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session DEBUG: org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session 14-nov-2010 20:51:31 org.apache.catalina.core.StandardWrapperValve invoke SEVERE: Servlet.service() for servlet mvc-dispatcher threw exception org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here I already moved my properties to my Spring context to see if that went any better but no. My Configuration: be/howest/kidscalcula/model/Foto.hbm.xml be/howest/kidscalcula/model/Kindleerplanonderdeel.hbm.xml be/howest/kidscalcula/model/Klas.hbm.xml be/howest/kidscalcula/model/Leerkracht.hbm.xml be/howest/kidscalcula/model/Leerling.hbm.xml be/howest/kidscalcula/model/Leerplan.hbm.xml be/howest/kidscalcula/model/LeerplanOefenreeks.hbm.xml be/howest/kidscalcula/model/Leerplanonderdeel.hbm.xml be/howest/kidscalcula/model/Niveau.hbm.xml be/howest/kidscalcula/model/Oefenreeks.hbm.xml be/howest/kidscalcula/model/Overgangsregel.hbm.xml be/howest/kidscalcula/model/Rapport.hbm.xml be/howest/kidscalcula/model/RapportLeerplanonderdeel.hbm.xml be/howest/kidscalcula/model/Schooljaar.hbm.xml be/howest/kidscalcula/model/Subonderdeel.hbm.xml org.hibernate.dialect.MySQLDialect update 3 true true true false I just inject my org.hibernate.SessionFactory into my DAO, and use @Transactional annotations on my methods or on my class. @Repository public class LeerlingDAOimpl implements LeerlingDAO { @Autowired public LeerlingDAOimpl(SessionFactory sessionFactory) { this.sessionFactory = sessionFactory; } Does anyone have an idea what I forgot, misconfigured? The basic idea is that with this configuration normally, a session is opened whenever a transactional method is being called in my service layer. This would also allow me to load lazy collections in that same transactional method. But for some reason it doesn't even find the thread.
