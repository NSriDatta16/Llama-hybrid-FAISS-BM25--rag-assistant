[site]: stackoverflow
[post_id]: 747394
[parent_id]: 
[tags]: 
How should one defend against an off-line brute force password attack?

I was wondering if it was a common practice to salt and hash a password like E(padding || hash(salt || password)) where || is concatenation and E uses RSA for example. I'm primarily asking this question for transport of a password database (not online storage where the server would have the private key to decrypt the encrypted password at all times). I know that a cryptographic hash should be irreversible, but an off-line brute force attack on weak passwords would easily reveal a password. To eventually decrypt a record in this database, the server will know the length of padding and simply take away padding to reveal hash(salt || password). This is not a typical problem, but I couldn't find a reference as to someone having to properly transport a password database and defend against an offline attack.
