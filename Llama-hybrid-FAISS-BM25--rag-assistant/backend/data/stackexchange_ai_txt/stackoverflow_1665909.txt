[site]: stackoverflow
[post_id]: 1665909
[parent_id]: 1665798
[tags]: 
Most likely you are using detached objects, i.e. object that have been loaded in a different session than the one created by your OpenSessionInViewFilter . This might happen when you store objects in the session and access them from a subsequent request. Is this possible? Edit: I'd discourage keeping the User object in the session. Instead, only keep the id and fetch the User object from DB each time it's needed. Hence, instead of your current approach, you should use something like this User getUserFromSession(HttpSession session) { Integer userId = (Integer) session.getAttribute("currentUser"); return userId != null ? getObjectById(User.class, userId) : null; } Note that fetching an object by id is insanely fast, especially if you've configured Hibernate's second level cache to store User object - so forget about any performance considerations. The main advantage though is that you don't have to deal with detached objects anymore. Detached objects are evil and nobody likes them! ;) And as @skaffman mentioned, go back to the default OpenSessionInViewFilter as your implementation obviously won't solve your problem.
