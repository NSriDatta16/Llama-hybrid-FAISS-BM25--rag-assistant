[site]: crossvalidated
[post_id]: 187958
[parent_id]: 186341
[tags]: 
In the Netflix Challenge (Oct 2006 - Sep 2009) a very large ensemble (107 separate submodels) won the $1M grand prize in the end, but it is instructive to note that the first simple (non ensembled) algorithms to beat the Netflix Cinematch benchmark were based on a generalized (sparse matrix) SVD. This first milestone of beating Cinematch was achieved a mere 6 days after the competition begun by a team called WXYZConsulting. SVD (Singular Value Decomposition) is a matrix factorization algorithm where you start with a 2d [user, movie] matrix with a rating (1 to 5 stars) in each [u, m] position (*), and break it into 3 matrices where the middle matrix is a square-matrix of latent interactions between users and movies. You can make the square matrix rank smaller or larger to include more or less such latent factor interactions respectively. There are several free software implementations of fast/efficient sparse SVD. For example redsvd, or vowpal-wabbit so before you write your own, you may want to try them. (*) Most of these entries are zero, since most users haven't rated most movies. i.e. the matrix is very sparse. References: How the Netflix prize was won Netflix prize, Wikipedia entry TheBellKor solution to the Netflix Prize: By Robert Bell, Yehuda Koren, & Chris Volinsky RedSVD: randomized Singular Value Decomposition vowpal wabbit: matrix factorization example
