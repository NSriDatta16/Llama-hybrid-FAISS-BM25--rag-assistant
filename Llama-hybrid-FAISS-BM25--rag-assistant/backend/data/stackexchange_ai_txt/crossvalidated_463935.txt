[site]: crossvalidated
[post_id]: 463935
[parent_id]: 
[tags]: 
Best practices: how to feed a set of long time series to a convolutional net for time series prediction

Let us assume we run N experiments. During the experiments we collect measurements. In these measurements we have features and labels. We want to predict the label Y(t) given a series of past features X(t-1),X(t-2),...,X(t-T) . I want to use Convolutional Neural Network for that. Here is what I thought to do to prepare the dataset for the CNN. Our dataset is made of the data we collected for each experiment. Each experiement data is stored in a matrix where one dimension is equal to the features number and the other the time length. I divided each of the timeseries in time length/N parts by selecting N time points: then I can treat this chuncks of data coming from different experiments as my "images": Then I feed (in batch) some images to the CNN. Since I know that the features are not correlated between each other I use a filter wich a row dimension of 1: Is this making sense to you?
