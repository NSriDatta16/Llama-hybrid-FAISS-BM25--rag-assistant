[site]: stackoverflow
[post_id]: 4523809
[parent_id]: 4523433
[tags]: 
Thanks @scaney. I found a solution here . I modified that code to add my own coloring highlights (for development only of course!) and now I can see things like 'parameters' in yellow in the console and I'm very pleased now! In case someone is interested, here is the code I put at the end of environment.rb . Here is my current (dirty) implementation. Will probably fix this up later (maybe make a gem, but for now this serves me fine) WARNING DIRTY CODE FOLLOWS! Use at your own risk! module ActiveSupport class BufferedLogger #define the ANSI escape codes for normal and bright colors $my_my_ansi_colors = { :normal => "\x1B[0m", :black => "\x1B[30m", :red => "\x1B[31m", #red :green => "\x1B[32m", :yellow => "\x1B[33m", :blue => "\x1B[34m", :magenta => "\x1B[35m", :cyan => "\x1B[36m", :white => "\x1B[37m", :bred => "\x1B[1m\x1B[31m", #bright red :bgreen => "\x1B[1m\x1B[32m", :byellow => "\x1B[1m\x1B[33m", :bblue => "\x1B[1m\x1B[34m", :bmagenta => "\x1B[1m\x1B[35m", :bcyan => "\x1B[1m\x1B[36m", :bwhite => "\x1B[1m\x1B[37m", } #take a string and using the keys in the hash, replace the keys in the #string but surround the keys with ANSI color codes #No idea how to retain the case of the key!(TODO someday) def my_highlight msgx,hash return msgx if msgx.blank? return msgx if hash.empty? hash.each_pair do |k,v| if not k.nil? msgx.gsub! Regexp.new(k, Regexp::IGNORECASE), $my_my_ansi_colors[:normal]+$my_my_ansi_colors[v]+k.upcase+$my_my_ansi_colors[:normal] end end msgx end def add(severity, message = nil, progname = nil, &block) return if @level > severity message = (message || (block && block.call) || progname).to_s #INSERT BEGINS if not $myownglobalnumbercounter.nil? $myownglobalnumbercounter += 1 else $myownglobalnumbercounter = 1 end level = { 0 => "DEBUG", 1 => "INFO", 2 => "WARN", 3 => "ERROR", 4 => "FATAL" }[severity] || "U" message = "\x1B[0m[%d %s] : %s" % [$myownglobalnumbercounter,level,message] message = my_highlight message, { "debug" => :white, "error" => :bred, "info" => :bwhite, "warning" => :byellow, "warn" => :byellow , "parameters" => :byellow, "#" => :bgreen, "ms " => :bmagenta, "GET " => :bmagenta, "PUT " => :bmagenta, "POST " => :bmagenta, "DELETE " => :bmagenta } #INSERT ENDS message = "#{message}\n" unless message[-1] == ?\n buffer
