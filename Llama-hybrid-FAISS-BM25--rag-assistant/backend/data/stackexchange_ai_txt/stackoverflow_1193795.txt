[site]: stackoverflow
[post_id]: 1193795
[parent_id]: 1189411
[tags]: 
The trick was to add the parameter types/names... I haven't found the UTL_DBWS.add_parameter method documented anywhere, but I should of guessed it's existence since you have to do the same in a java implementation. Anyway here is what I added string_type_qname := SYS.UTL_DBWS.to_qname('http://www.w3.org/2001/XMLSchema', 'string'); long_type_qname := SYS.UTL_DBWS.to_qname('http://www.w3.org/2001/XMLSchema', 'long'); SYS.UTL_DBWS.add_parameter(l_call, 'args0', long_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.add_parameter(l_call, 'args1', long_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.add_parameter(l_call, 'args2', string_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.add_parameter(l_call, 'args3', string_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.add_parameter(l_call, 'args4', string_type_qname, 'ParameterMode.IN'); So the whole thing now is: CREATE OR REPLACE FUNCTION wsproxy_send_request return varchar2 as l_service SYS.UTL_DBWS.service; l_call SYS.UTL_DBWS.call; l_result ANYDATA; l_wsdl_url VARCHAR2(32767); l_namespace VARCHAR2(32767); l_service_qname SYS.UTL_DBWS.qname; l_port_qname SYS.UTL_DBWS.qname; l_operation_qname SYS.UTL_DBWS.qname; l_input_params SYS.UTL_DBWS.ANYDATA_LIST; boolean_type_qname SYS.UTL_DBWS.QNAME; string_type_qname SYS.UTL_DBWS.QNAME; long_type_qname SYS.UTL_DBWS.QNAME; begin l_wsdl_url := 'http:// >/axis2/services/ >?wsdl'; l_namespace := 'http:// >'; l_service_qname := SYS.UTL_DBWS.to_qname(l_namespace, ' >'); l_port_qname := SYS.UTL_DBWS.to_qname(l_namespace, ' >'); l_operation_qname := SYS.UTL_DBWS.to_qname(l_namespace, 'send'); l_service := SYS.UTL_DBWS.create_service (URIFACTORY.getURI(l_wsdl_url), l_service_qname); l_call := SYS.UTL_DBWS.create_call (l_service, l_port_qname, l_operation_qname); boolean_type_qname := SYS.UTL_DBWS.to_qname('http://www.w3.org/2001/XMLSchema', 'boolean'); string_type_qname := SYS.UTL_DBWS.to_qname('http://www.w3.org/2001/XMLSchema', 'string'); long_type_qname := SYS.UTL_DBWS.to_qname('http://www.w3.org/2001/XMLSchema', 'long'); SYS.UTL_DBWS.add_parameter(l_call, 'args0', long_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.add_parameter(l_call, 'args1', long_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.add_parameter(l_call, 'args2', string_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.add_parameter(l_call, 'args3', string_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.add_parameter(l_call, 'args4', string_type_qname, 'ParameterMode.IN'); SYS.UTL_DBWS.SET_PROPERTY(l_call, 'SOAPACTION_USE', 'TRUE'); SYS.UTL_DBWS.SET_PROPERTY(l_call, 'SOAPACTION_URI', ''); SYS.UTL_DBWS.SET_PROPERTY(l_call, 'ENCODINGSTYLE_URI', ''); SYS.UTL_DBWS.SET_PROPERTY(l_call, 'OPERATION_STYLE', 'rpc'); l_input_params(0) := ANYDATA.ConvertNumber(1); l_input_params(1) := ANYDATA.ConvertNumber(24387236726); l_input_params(2) := ANYDATA.ConvertVarchar2('CTE'); l_input_params(3) := ANYDATA.ConvertVarchar2('STORE_RECORD_LOCATOR'); l_input_params(4) := ANYDATA.ConvertVarchar2('a'); sys.utl_dbws.set_return_type(l_call, boolean_type_qname); l_result := SYS.UTL_DBWS.invoke(l_call, l_input_params); SYS.UTL_DBWS.release_call (l_call); SYS.UTL_DBWS.release_service(l_service); RETURN ANYDATA.AccessVarchar2(l_result); END; / I finally saw this after paying closer attention to the guide posted in the oracle forums http://forums.oracle.com/forums/thread.jspa?threadID=633268&tstart=0 I'm getting null for my response now, but the parameter issue has been solved.
