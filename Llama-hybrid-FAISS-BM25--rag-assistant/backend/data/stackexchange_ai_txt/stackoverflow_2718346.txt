[site]: stackoverflow
[post_id]: 2718346
[parent_id]: 2718172
[tags]: 
Dojo's dojo.declare is great for this kind of thing since it Create a constructor using a compact notation for inheritance and prototype extension. It's also really convenient if even for just removing this kind of boiler plate: var project = window.project || {}; project.arm = project.arm || {}; If you just want that feature, then you could use dojo.setObject , but of course, writing something to do the same is trivial. dojo.setObject("project.arm.object" (function() { var privateVar = "Private contents."; function privateMethod() { alert(privateVar); } return { method: privateMethod }; }())); I recently used dojo.declare / dojo.setObject for a large JavaScript project (86 files, 7K+ lines (not counting comments and blank lines)), and it was a breeze to keep everything organized and manageable, especially when you have an inclusion mechanism like dojo.require and dojo.provide .
