[site]: stackoverflow
[post_id]: 339875
[parent_id]: 
[tags]: 
What is the perfect Regex for doing wiki formatting (.Net)?

H guys, I've got this wiki formatting algorithm which I am using at Stacked to create HTML out of "wiki syntax" and I am not really sure if the current one I am using is good enough, optimal or contains bugs since I am not really a "Regex Guru". Here is what I am currently using; // Body is wiki content... string tmp = Body.Replace("&", "&amp;").Replace(" ", "&gt;"); // Sanitizing carriage returns... tmp = tmp.Replace("\\r\\n", "\\n"); // Replacing dummy links... tmp = Regex.Replace( " " + tmp, "(? \\s+)(? http://|https://)(? \\S+)", "${spaceChar} ${link} ", RegexOptions.Compiled).Trim(); // Replacing wiki links tmp = Regex.Replace(tmp, "(? \\[{1})(? http://|https://)(? \\S+)\\s+(? [^\\]]+)(? [\\]]{1})", " ${content} ", RegexOptions.Compiled); // Replacing bolds tmp = Regex.Replace(tmp, "(? \\*{1})(? .+?)(? \\*{1})", " ${content} ", RegexOptions.Compiled); // Replacing italics tmp = Regex.Replace(tmp, "(? _{1})(? .+?)(? _{1})", " ${content} ", RegexOptions.Compiled); // Replacing lists tmp = Regex.Replace(tmp, "(? \\*{1}[ ]{1})(? .+)(? [^*])", " ${content} ", RegexOptions.Compiled); tmp = Regex.Replace(tmp, "(? \\ {1}.+\\ )", " ${content} ", RegexOptions.Compiled); // Quoting tmp = Regex.Replace(tmp, "(? ^&gt;.+$)", " ${content} ", RegexOptions.Compiled | RegexOptions.Multiline).Replace(" \n ", "\n"); // Paragraphs tmp = Regex.Replace(tmp, "(? )\\n{2}", "${content} ", RegexOptions.Compiled); // Breaks tmp = Regex.Replace(tmp, "(? )\\n{1}", "${content} ", RegexOptions.Compiled); // Code tmp = Regex.Replace(tmp, "(? \\[code\\])(? [^$]+)(? \\[/code\\])", " ${content} ", RegexOptions.Compiled); // Now hopefully tmp will contain perfect HTML For those who thinks it's difficult to see the code here, you can also check it out here ... Here is the complete "wiki syntax"; Syntax here: Link; [http://x.com text] *bold* (asterisk on both sides) _italic_ (underscores on both sides) * Listitem 1 * Listitem 2 * Listitem 3 (the above is asterixes but so.com also creates lists from it) 2 x Carriage Return is opening a new paragraph 1 x Carriage Return is break (br) [code] if( YouDoThis ) YouCanWriteCode(); [/code] > quote (less then operator) If there are some "Regex gurus" who would like to review this Regex logic I'd appreciate it a lot :)
