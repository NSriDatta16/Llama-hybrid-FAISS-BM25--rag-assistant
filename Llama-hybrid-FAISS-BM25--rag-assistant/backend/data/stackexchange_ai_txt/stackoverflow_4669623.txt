[site]: stackoverflow
[post_id]: 4669623
[parent_id]: 1921981
[tags]: 
The method getContent() of javax.Part returns the content as a Java object. The type of the returned object is of course dependent on the content itself. For example, the object returned for "text/plain" content is usually a String object. The object returned for a "multipart" content is always a Multipart subclass. See http://download.oracle.com/javaee/6/api/javax/mail/Part.html#getContent%28%29 If a Message (which is a Part ) contains attachments, the getContent method will return a Multipart object. In addition you can know the MIME type of the part with getContentType . The information that is missing from the documentation is that this MultiPart object returned by getContent is just an empty representation of the Message's structure. The content of each Part of the Multipart will only be fetched from the server when you specifically ask for it. For example, to parse a multipart Message you would do: if( p.isMimeType("multipart/*") ) { Multipart mp = (Multipart)p.getContent(); // the content was not fetched from the server // parse each Part for (int i = 0; i Something else to consider is that for optimal performance you should get the body structure information from the server in batch for the collection of messages you want to parse (see http://download.oracle.com/javaee/6/api/javax/mail/FetchProfile.Item.html#CONTENT_INFO ). If not, each Multipart mp = (Multipart)p.getContent(); will result in a request to the server to fetch the body structure. If the FetchProfile approach is used, the body structure for the collection of messages will be fetched with only one request. You can see the requests to the server in the log if you activate debug mode on the session: session.setDebug(true); This said, to get size and filenames of attachments just use Part.getSize() and Part.getFileName() , respectively.
