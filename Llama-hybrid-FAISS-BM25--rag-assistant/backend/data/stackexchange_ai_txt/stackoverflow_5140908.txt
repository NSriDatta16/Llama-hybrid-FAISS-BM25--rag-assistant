[site]: stackoverflow
[post_id]: 5140908
[parent_id]: 5140716
[tags]: 
IMHO converting Unicode back to ASCII for some dubious storage or technical benefit isn't a good idea in the 21st century, especially since email is being changed to support Unicode in headers and bodies. http://en.wikipedia.org/wiki/Unicode_and_e-mail If the reason why you want to convert Hern√°n to Hernan is for searching, you should look at using an Accent Insensitive (AI) collation on your database, or coerce it to do so - see this SO post . One thing you might need to double check however is that your strings aren't getting preencoded before storage in your database (assuming that your DB column is set to accept unicode - i.e. NVARCHAR etc), the character '@' should be stored as '@' (0040 in UTF 16) and not as '\u0040'. EDIT: The "\uNNNN" encoding in a string might originate from Java or Python. You might be able to trace the email string data up your architecture to find the source of this encoding and change it to something more easy to decode in C# such as UTF-8. How do I treat an ASCII string as unicode and unescape the escaped characters in it in python?
