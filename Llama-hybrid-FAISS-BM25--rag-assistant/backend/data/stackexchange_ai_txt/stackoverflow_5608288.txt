[site]: stackoverflow
[post_id]: 5608288
[parent_id]: 5608073
[tags]: 
Is the DVM an interpreter or a compiler? There's a tool called dx that converts your java bytecode to a dex file. So, you compile with java to create a java bytecode (a class file) and a dx tool converts these bytecodes to a .dex file (executable). Why did google have to come up with the DVM when there is already the JVM? Dalvik is optimised to run on mobile devices or devices with low memory requirement. Dalvik VM takes less space to run compared to the JVM. One important factor is LICENSE . If Google had to go to J2ME, the application had to be licensed, etc and Google wanted to avoid being licensed. Also a quote from @leo's - Is Dalvik the better J2ME? : As J2ME is not really a strong framework, you have a single programming language, but it's up to the vendor which functionality he likes to integrate, every single phone is different. That makes porting J2ME to a real pain. 3) Can the JVM not be used in mobile platforms? If not why not? At the present moment, no as it requires resources (that's available on PC) to run. Also, it's a stack machine, so it uses "instructions to load data on the stack and manipulate that data, and, thus, require more instructions than register machines to implement the same high level code" ( source ). We can expect future mobile/portable devices to be able to have the processing power, storage capability and security features to run the JVM, but for now, Dalvik is king! :-) Hope this helps.
