[site]: stackoverflow
[post_id]: 3539224
[parent_id]: 3539144
[tags]: 
For your first issue, I believe you have to do it the other way around. That is, have a MouseMove handler to check if the left mouse button is down then to do what you need. You should preview the left mouse button to track if and where it was clicked in the first place. Look for drag and drop tutorials and see how they initiate the drags for inspiration. For your second issue, you can use PointToScreen() along with Mouse.GetPosition() to get the current position relative to the screen. Then use this to compare against the actual screen bounds with the SystemParameters.PrimaryScreenWidth and SystemParameters.PrimaryScreenHeight properties. var pos = this.PointToScreen(Mouse.GetPosition(this)); //position relative to screen if (pos.X == 0) //on the left //... else if (pos.X == SystemParameters.PrimaryScreenWidth-1) //on the right (goes from 0 to (width-1)) //...
