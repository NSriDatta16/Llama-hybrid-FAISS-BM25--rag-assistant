[site]: stackoverflow
[post_id]: 4923323
[parent_id]: 
[tags]: 
How to find the average of certain records T-SQL

I have a table variable that I am dumping data into: DECLARE @TmpTbl_SKUs AS TABLE ( Vendor VARCHAR (255), Number VARCHAR(4), SKU VARCHAR(20), PurchaseOrderDate DATETIME, LastReceivedDate DATETIME, DaysDifference INT ) Some records don't have a purchase order date or last received date, so the days difference is null as well. I have done a lot of inner joins on itself, but data seems to take too long, or comes out incorrect most of the time. Is it possible to get the average per SKU days difference? how would I check if there is only 1 record of that SKU? I need the data, if there is only 1 record, then I have to find it at a champvendor level the average. Here is the structure: Vendor has many Numbers and Numbers has many SKUs Any help would be great, I can't seem to crack this one, nor can I find anything related to this online. Thanks in advance. Here is some sample data: Vendor Number SKU PurchaseOrderDate LastReceivedDate DaysDifference OTHER PMDD 1111 OP1111 2009-08-21 00:00:00.000 2009-09-02 00:00:00.000 12 OTHER PMDD 1111 OP1112 2009-12-09 00:00:00.000 2009-12-17 00:00:00.000 8 MANTOR 3333 MA1111 2006-02-15 00:00:00.000 2006-02-23 00:00:00.000 8 MANTOR 3333 MA1112 2006-02-15 00:00:00.000 2006-02-23 00:00:00.000 8 I'm sorry I may have written this wrong. If there is only 1 SKU for a record, then I want to return the DaysDifference (if it's not null), if it has more than 1 record and they are not null, then return the average days difference. If it is all nulls, then at a vendor level check for the average of the skus that are not null, otherwise it should just return 7. This is what I have tried: SELECT t1.SKU, ISNULL ( AVG(t1.DaysDifference), ( SELECT ISNULL(AVG(t2.DaysDifference), 7) FROM @TmpTbl_SKUs t2 WHERE t2.SKU=t1.SKU GROUP BY t2.ChampVendor, t2.VendorNumber, t2.SKU ) ) FROM @TmpTbl_SKUs t1 GROUP BY t1.SKU Keep playing with this. I somewhat have what I got, but just don't understand how I would check if it has multiple records, and how to check at a vendor level.
