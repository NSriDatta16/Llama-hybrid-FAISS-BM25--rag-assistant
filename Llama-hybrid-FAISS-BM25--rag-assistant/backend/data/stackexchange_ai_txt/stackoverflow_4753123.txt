[site]: stackoverflow
[post_id]: 4753123
[parent_id]: 4753055
[tags]: 
Perlin noise is completely controlled by the different variables you set, i.e. amplitude, frequency and persistance. The amount of octaves has a little change, but not much. In code that I have written in the past I have just played around with the order of magnitude of the frequency and persistance until I have gotten what I needed. I can try to find my old source if needed. PerlinNoise.h #pragma once class PerlinNoise { public: // Constructor PerlinNoise(); PerlinNoise(double _persistence, double _frequency, double _amplitude, int _octaves, int _randomseed); // Get Height double GetHeight(double x, double y) const; // Get double Persistence() const { return persistence; } double Frequency() const { return frequency; } double Amplitude() const { return amplitude; } int Octaves() const { return octaves; } int RandomSeed() const { return randomseed; } // Set void Set(double _persistence, double _frequency, double _amplitude, int _octaves, int _randomseed); void SetPersistence(double _persistence) { persistence = _persistence; } void SetFrequency( double _frequency) { frequency = _frequency; } void SetAmplitude( double _amplitude) { amplitude = _amplitude; } void SetOctaves( int _octaves) { octaves = _octaves; } void SetRandomSeed( int _randomseed) { randomseed = _randomseed; } private: double Total(double i, double j) const; double GetValue(double x, double y) const; double Interpolate(double x, double y, double a) const; double Noise(int x, int y) const; double persistence, frequency, amplitude; int octaves, randomseed; }; PerlinNoise.cpp #include "PerlinNoise.h" PerlinNoise::PerlinNoise() { persistence = 0; frequency = 0; amplitude = 0; octaves = 0; randomseed = 0; } PerlinNoise::PerlinNoise(double _persistence, double _frequency, double _amplitude, int _octaves, int _randomseed) { persistence = _persistence; frequency = _frequency; amplitude = _amplitude; octaves = _octaves; randomseed = 2 + _randomseed * _randomseed; } void PerlinNoise::Set(double _persistence, double _frequency, double _amplitude, int _octaves, int _randomseed) { persistence = _persistence; frequency = _frequency; amplitude = _amplitude; octaves = _octaves; randomseed = 2 + _randomseed * _randomseed; } double PerlinNoise::GetHeight(double x, double y) const { return amplitude * Total(x, y); } double PerlinNoise::Total(double i, double j) const { //properties of one octave (changing each loop) double t = 0.0f; double _amplitude = 1; double freq = frequency; for(int k = 0; k
