[site]: stackoverflow
[post_id]: 1175263
[parent_id]: 1172826
[tags]: 
This is a great question! I've actually wanted to be able to do this kind of thing in a programmatic way, but in the past I've had nothing but trouble coming up with it. However, have matured a bit in my .NET skills over the years, I thought I would take a shot at writing a solution that could be executed as a Console app. This can be implemented either as a scheduled task on the windows server or sql server (using the Sql Server agent). I don't see why this couldn't be automated from the Sql Server without the following code, but I really had fun with this, so I just have to put it out there. The table in both Sql and Access is a list of dogs, with an ID, a name, a breed, and a color. Generic stuff. This actually works on my desktop between a local instance of Sql Server and Access (2007, but I don't know why it wouldn't work with 97). Please feel free to critique. BTW, has the following: using System.Data; using System.Data.OleDb; using System.Data.SqlClient; Here: static void Main(string[] args) { SqlConnectionStringBuilder cstrbuilder = new SqlConnectionStringBuilder(); cstrbuilder.DataSource = "localhost"; cstrbuilder.UserID = "frogmorton"; cstrbuilder.Password = "lillypad99"; cstrbuilder.InitialCatalog = "Dogs"; SqlConnection sconn = new SqlConnection(cstrbuilder.ToString()); sconn.Open(); SqlCommand scmd = new SqlCommand("select * from Dogs", sconn); SqlDataReader reader = scmd.ExecuteReader(); if (reader.HasRows) { OleDbConnectionStringBuilder sb = new OleDbConnectionStringBuilder(); sb.Provider = "Microsoft.Jet.OLEDB.4.0"; sb.PersistSecurityInfo = false; sb.DataSource = @"C:\A\StackOverflog\DogBase.mdb"; OleDbConnection conn = new OleDbConnection(sb.ToString()); conn.Open(); OleDbCommand cmd = new OleDbCommand("Delete from Dogs", conn); cmd.CommandType = CommandType.Text; cmd.ExecuteNonQuery(); conn.Close(); OleDbConnection conn2 = new OleDbConnection(sb.ToString()); conn2.Open(); OleDbCommand icmd = new OleDbCommand("Insert into dogs (DogID, DogName, Breed, Color) values ({0}, '{1}', '{2}', '{3}');", conn2); icmd.CommandType = CommandType.Text; while (reader.Read()) { string insertCommandString = String.Format("Insert into dogs (DogID, DogName, Breed, Color) values ({0}, '{1}', '{2}', '{3}');" , reader.GetInt32(0) , reader.GetString(1) , reader.GetString(2) , reader.GetString(3) ); icmd.CommandText = insertCommandString; icmd.ExecuteNonQuery(); } conn2.Close(); } sconn.Close(); }
