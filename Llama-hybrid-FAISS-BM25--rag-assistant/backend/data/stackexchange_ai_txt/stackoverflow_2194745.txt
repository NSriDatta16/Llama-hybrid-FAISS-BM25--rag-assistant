[site]: stackoverflow
[post_id]: 2194745
[parent_id]: 
[tags]: 
Rails: Refactoring, views, helpers: how does it all go together?

Warning: Noob here. I know this is a trivial subject but I'm having a lot of difficulty in figuring out how exactly I can simplify my views by moving parts of them into helpers. For example, I've always read that conditionals in your views are prime candidates for extraction into helpers, but I couldn't really find examples of this, and my attempts to achieve this failed. For example, suppose I have: #index.html.erb beast.id ) %> beast.id ) %> It annoys me a little to have this in my view, but how exactly could I move this to a helper instead? And further simplify it, if possible. (I've read somewhere that conditionals are bad but it's just beyond me how you could program anything without them.) Another example: I need to id my body tags with the format controller_action . The best I've got so far is this: #index.html.erb "> …and… #application_helper.rb def controller_action @id = @controller.controller_name + "_" + @controller.action_name end I'm no expert, but that's still ugly even to me. To make things more complicated, Ryan Singer said something I liked : to treat ERB like an image tag, using helpers to "reveal intention". Then in the next breath saying that you should have no HTML in helpers for that is the way to hell. WTF? How are both things compatible? If it's come to the point where you can just declare behaviors in the view, surely there should be a lot of HTML to be rendered behind the scenes? I can't grasp it. So, that's basically it. I'd appreciate if anyone could share some thoughts on this, or point me to some good in depth reading on the subject – which I've found to have a really weak coverage on the web. I've already googled it to exhaustion but who knows.
