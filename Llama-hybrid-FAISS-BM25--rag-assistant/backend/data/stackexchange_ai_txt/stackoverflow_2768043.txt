[site]: stackoverflow
[post_id]: 2768043
[parent_id]: 
[tags]: 
Need help with a Linq XML conditional grouping query

I have the following xml fragment: Years In Practice Internet Usage Sales Reps Seen / Week Prescription Volume Patient Load Total &#60; 11 years 11-20 years 21-30 years Light 1-5 hrs Medium 6-10 hrs Heavy &#62;10 hrs 0 1-2 3-5 &#62;5 1-100 101-150 &#62;150 1-100 101-200 &#62;200 (A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) I would like to group all the 'BANNER_TEXT' in the second sequence using the first sequence 'BANNER_TEXT' as the key (only include elements where string is not null or empty). The span_col attribute in the first 'BANNER_TEXT' sequence indicates which elements by position in the 2nd sequence are related. An example: 'Years in Practice' would be the first key and the attribute SPAN_COL=3 for that element indicates it would contain ' Total would be skipped). I've been able to come up with this: IEnumerable groupCats = child.Descendants("BANNER_TEXTS").ElementAt(0).Descendants("BANNER_TEXT"); var totals = from s in groupCats let span = int.Parse(s.Attribute("SPAN_COL").Value) group s by s.Value into grouped select new { GroupCategory = grouped.Key, Categories = child.Descendants("BANNER_TEXTS").ElementAt(1).Descendants("BANNER_TEXT").Skip(1).Take(1) }; I want to skip by the sum of the spans so far, and take by the span. I can't get the 'span' variable into the query as it is now.
