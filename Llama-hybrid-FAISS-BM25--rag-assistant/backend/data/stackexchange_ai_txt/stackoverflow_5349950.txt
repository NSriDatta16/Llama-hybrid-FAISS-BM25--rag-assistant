[site]: stackoverflow
[post_id]: 5349950
[parent_id]: 5348562
[tags]: 
There are good reasons for writing tests first: You make sure that your test actually fails. If you write your implementation first, and then the test, the test will pass, but you will not know whether it really works. There could be an error in the test! If you write the test first, you can run it and make sure that it fails. If you only write code that is necessary to pass the tests you have, you will get a very high code coverage. If you write tests first, including all the mocks and fakes needed, you get a better understanding of the requirements. When mocking a certain API, you may find that there is some extra information you need to make an API-call or something like that. Motivation. If you have code already written, it is too easy to just go Naaah, I don't need to test all of it . Wrong. If you go the other way around, this is still possible, but it the inhibition threshold is higher. All in all, it can feel hard, but the reward is well worth it.
