[site]: stackoverflow
[post_id]: 859230
[parent_id]: 856693
[tags]: 
About your CRC like algorithm interest... It appears that you are looking for an algorithm that will run through a random list of less than 64K 16-bit numbers and generate a new 16-bit number not already in the list; preferably doing this in a single pass through the given list. If the sequence in which IDs are freed has no relation to the sequence in which they are allocated (like i feel is your case), there is nothing you can do with generation or allocation of the IDs to get your algorithm. The best bet then seems to be 5 from your list. If you are adventurous... and, if you can re-number your IDs (that is change an allocated ID to another unallocated ID), you could run a 'defrag' kind of iteration once in a while to move all allocated IDs to lower values and find the highest free ID number for the next allocation. It would help to remember the total number of allocations and frees done since the last such 'defrag' run. Allocate incrementing sequentially starting from 0. This way you need to remember just 3 unsigned short integers in memory. And yes, take a slightly costly re-allocation iteration once in a while based on their values.
