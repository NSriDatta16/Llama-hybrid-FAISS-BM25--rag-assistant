[site]: stackoverflow
[post_id]: 2397595
[parent_id]: 2396750
[tags]: 
The answer (as Tyler McHenry pointed out) was circular inclusion! After sorting out my includes I ended up with a compiled code like this (even without std:: infront of list: #pragma once #include #include "D:\Programmering\haffes\hge181\include\hge.h" #include "D:\Programmering\haffes\hge181\include\hgevector.h" using namespace std; using namespace std; class MyPolygon { public: MyPolygon(void); ~MyPolygon(void); void addVertice(hgeVector v); void renderPolygon(); void setHotSpot(hgeVector v); void translate(hgeVector v); private: list vertices; hgeVector hotSpot; bool hotSpotUndef; }; Thanks a bunch for all the fast and good answers!
