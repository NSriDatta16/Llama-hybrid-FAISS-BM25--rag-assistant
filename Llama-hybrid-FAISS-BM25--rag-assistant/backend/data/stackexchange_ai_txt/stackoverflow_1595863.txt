[site]: stackoverflow
[post_id]: 1595863
[parent_id]: 1595848
[tags]: 
Try ssh-add , you need ssh-agent to be running and holding your private key (Ok, responding to the updated question, you first run ssh-keygen to generate a public and private key as Jefromi explained . You put the public key on the server. You should use a passphrase, if you don't you have the equivalent of a plain-text password in your private key. But when you do, then you need as a practical matter ssh-agent as explained below.) You want to be running ssh-agent in the background as you log in. Once you log in, the idea is to run ssh-add once and only once, in order to give the agent your passphrase, to decode your key. The agent then just sits in memory with your key unlocked and loaded, ready to use every time you ssh somewhere. All ssh-family commands 1 will then consult the agent and automatically be able to use your private key. On OSX (err, macOS ), GNOME and KDE systems, ssh-agent is usually launched automatically for you. I will go through the details in case, like me, you also have a Cygwin or other windows environment where this most certainly is not done for you. Start here: man ssh-agent . There are various ways to automatically run the agent. As the man page explains, you can run it so that it is a parent of all your login session's other processes. That way, the environment variables it provides will automatically be in all your shells. When you (later) invoke ssh-add or ssh both will have access to the agent because they all have the environment variables with magic socket pathnames or whatever. Alternatively, you can run the agent as an ordinary child, save the environment settings in a file, and source that file in every shell when it starts. My OSX and Ubuntu systems automatically do the agent launch setup, so all I have to do is run ssh-add once. Try running ssh-add and see if it works, if so, then you just need to do that once per reboot. My Cygwin system needed it done manually, so I did this in my .profile and I have .bashrc source .profile : . .agent > /dev/null ps -p $SSH_AGENT_PID | grep ssh-agent > /dev/null || { ssh-agent > .agent . .agent > /dev/null } The .agent file is created automatically by the script; it contains the environment variables definitions and exports. The above tries to source the .agent file, and then tries to ps(1) the agent. If it doesn't work it starts an agent and creates a new agent file. You can also just run ssh-add and if it fails start an agent. 1. And even local and remote sudo with the right pam extension.
