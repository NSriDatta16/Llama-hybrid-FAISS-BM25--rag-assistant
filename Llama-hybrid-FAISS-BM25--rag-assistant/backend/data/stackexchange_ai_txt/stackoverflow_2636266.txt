[site]: stackoverflow
[post_id]: 2636266
[parent_id]: 2636130
[tags]: 
I would reckon that the best pattern would be to only expose the user details through the web application, so at that point its a case of restricting the data exposed to each user. This will allow you to build in the required security inside the application. Alternatively if you are allowing direct database access then you will need to create a login/user (depends on database used) for each organization or user and then restrict the access of these login/user entities to parameterized stored procedures rather than the base tables. This will push security back onto the database, which is riskier but still do-able. As to meta changes to support the organization column, parameterizing the stored procedures will be fairly trivial: select @organizationId = organizationId from User where User.id = @currentUserId select * from User where organizationId = @organizationId (depending on the sql flavour you will need to enclose some entities eg ``User , [User] etc)
