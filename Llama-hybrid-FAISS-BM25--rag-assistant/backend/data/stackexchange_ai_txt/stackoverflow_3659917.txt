[site]: stackoverflow
[post_id]: 3659917
[parent_id]: 
[tags]: 
Generators for regular classes in scalacheck

In scalacheck's user guide there is "Generating Case Classes" paragraph. I modified example from it to use regular classes instead of case classes: import org.scalacheck._ import Gen._ import Arbitrary._ sealed abstract class Tree object Leaf extends Tree class Node(left:Tree, rigth:Tree, v:Int) extends Tree object Main { val genLeaf = value(Leaf) val genNode = for{ v It seems everything working but I'm afraid of using this approach in production code before I ask here: is there any pitfalls?
