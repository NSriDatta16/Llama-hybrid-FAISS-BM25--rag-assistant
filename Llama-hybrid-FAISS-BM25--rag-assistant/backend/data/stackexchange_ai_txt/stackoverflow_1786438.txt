[site]: stackoverflow
[post_id]: 1786438
[parent_id]: 
[tags]: 
Qt library event loop problems

I'm writing a DLL that is used as a plugin by another application and would like to leverage Qt's abilities. I have all of the classes set up, compiling and running, but no signals are being emitted. So it seems as though there's no QEventLoop. Attempt 1: I modified my main class to subclass QThread instead of QObject, and in the run() create a QEventLoop, connect all signals/slots, and exec the thread. But it fails saying that you can't have a QEventLoop without a QApplication. Attempt 2: I modified the main class (still subclassing the QThraed) to instead instantiate a QCoreApplication, connect all signals/slots, then exec the application. Warns that the QApplication was not created in the main() thread, and still won't emit signals. I'm not really sure what to do here. I obviously cannot create a QCoreApplication in the application that will use my plugin, and I cannot emit signals without one. I have included a simple (and horribly written) test application which should illustrate my problem: Any help would be appreciated! main.cpp: #include #include "ThreadThing.h" using namespace std; int main(int argc, char *argv[]) { cout ThreadThing.h: #ifndef THREADTHING_H #define THREADTHING_H #include class ThreadThing : public QThread { Q_OBJECT public: ThreadThing(); virtual void run(); void testStart(); void testEnd(); public slots: void testSlot(); signals: void testSignal(); }; #endif//THREADTHING_H ThreadThing.cpp: #include "ThreadThing.h" #include #include using namespace std; ThreadThing::ThreadThing() { cout start(); cout exec(); cout quit(); cout Output: Main: 1 Constructor: 1 Constructor: 2 Main: 2 TestStart: 1 TestStart: 2 Main: 3 TestEnd: 1 TestEnd: 1 Main: 4 Run: 1 Run: 2 WARNING: QApplication was not created in the main() thread. Run: 3 Run: 4
