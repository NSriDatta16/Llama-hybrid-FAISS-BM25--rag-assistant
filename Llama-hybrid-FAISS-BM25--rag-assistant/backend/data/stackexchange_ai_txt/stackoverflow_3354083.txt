[site]: stackoverflow
[post_id]: 3354083
[parent_id]: 3328452
[tags]: 
I think you jumped the gun with writing a board that sets a color and gets a color. What drove a board? What requires a board to store colors? The board is a repository for colors? The board has too much implementation details. IOWs, the color is a property of another object. Do you really care that the board stores colors or does it store this domain object that has a color property. What if later you have too store the past history of the board positions. Are you going then to use two boards, one a color board and then a history board. You really need to abstract the storage mechanism away from actually relying on specific types of color (purple, blue, green, etc...). The problem with starting off with an understanding of the problem domain is that it will pigeon hole your design. And it will not be so robust. For me I would have started at a question: What domain object is color a property of? Then my tests would have generated this domain object. For all I know The domain object may or may not exist in a board. Hope this helps you.
