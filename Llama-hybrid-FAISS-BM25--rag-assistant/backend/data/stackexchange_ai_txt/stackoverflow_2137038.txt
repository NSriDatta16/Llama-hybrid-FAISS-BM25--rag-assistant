[site]: stackoverflow
[post_id]: 2137038
[parent_id]: 2136941
[tags]: 
k-Nearest Neighbor is probably the most commonly implemented algorithm for real-time web-based recommender systems. In NumPy/SciPy you have several choices [note: answer updated in dec 12 to reflect updates in sklearn library]: nearest neighbors module in scikit-learn (aka sklearn ); this is a sophisticated kNN implementation that includes neighbor weighting and voting as well as a very efficient storage/retrieval component ( ball tree ); scipy.spatial . I have used this for several projects, though it's unlikely i would use it for my next one given sklearn is now available, which is a more up-to-date implementation of kNN. Still, the spatial module has a kd-tree class ( kd-tree rather than standard numpy array is used by this module to store the data, which along w/ Voronoi tesselation , is the most common specialized data structure to store very large data sets for kNN); in addition, it has methods for several distance metrics (aside from Euclidean distance).
