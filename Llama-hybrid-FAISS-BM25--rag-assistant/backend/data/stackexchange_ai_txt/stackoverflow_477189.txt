[site]: stackoverflow
[post_id]: 477189
[parent_id]: 473610
[tags]: 
Wow! I have to say, I am blown away. You so far exceeded my expectations for an answer that I feel guilty that I can ONLY up vote you once and mark as excepted. I had HOPED for so guidance towards which path was best and some formatting. Well Happy Birthday to me! The Format() and FreeFile() were especially new useful info. Also, just to show that I was trying, my attempt is below. I was quite close as I was just working out the formatting details but I believe I shall rework it with your input as it seems the more elegant approach. As a final note. I found this place thru Jeff Atwood's blog and I was truly excited by the idea. As a new, inexperienced developer in a solo shop I had always wished there was someplace I could turn for mentorship. Books and articles get you to a point but nothing equals the advice of someone who's done it or been there. So far StackOverflow has delivered. For reference, I posted this exact same question on another very popular Code Forum and have yet to receive a single response in any way. Now for my attempt: The Module Code Sub StateANSIIExport() Dim Sizes As Variant Dim arr As Variant Dim aRow As Long, aCol As Long Dim rowLimit As Integer, colLimit As Integer Dim SpacesPerCell As Integer Dim fso As Object Dim ts As Object Dim TheLine As String Dim TestStr As String arr = ActiveSheet.UsedRange rowLimit = UBound(arr, 1) 'colLimit = UBound(arr, 2) colLimit = 8 SpacesPerCell = 20 'Set export text "column" width here Set fso = CreateObject("Scripting.FileSystemObject") Set ts = fso.CreateTextFile(GetDesktopPath() & "EXCELTEXT.txt", True) ' Loop thru the rows For aRow = 1 To rowLimit TheLine = Space(colLimit * SpacesPerCell) ' your fixed-width output ' Loop thru the columns For aCol = 1 To colLimit Select Case aCol Case 1 ' Employer UI Account # Mid(TheLine, aCol * SpacesPerCell - SpacesPerCell + 1, SpacesPerCell) = "6979430002" Case 2 ' Reporting Period (QYY) Mid(TheLine, aCol * SpacesPerCell - SpacesPerCell + 1, SpacesPerCell) = "109" Case 3 ' SSN Mid(TheLine, aCol * SpacesPerCell - SpacesPerCell + 1, SpacesPerCell) = Cells(aRow, "A") Case 4 ' Last Name Mid(TheLine, aCol * SpacesPerCell - SpacesPerCell + 1, SpacesPerCell) = Cells(aRow, "B") Case 5 ' First Name Mid(TheLine, aCol * SpacesPerCell - SpacesPerCell + 1, SpacesPerCell) = Cells(aRow, "C") Case 6 ' Employee Quartly Gross Wages Mid(TheLine, aCol * SpacesPerCell - SpacesPerCell + 1, SpacesPerCell) = Cells(aRow, "D") Case 7 ' Record Code Mid(TheLine, aCol * SpacesPerCell - SpacesPerCell + 1, SpacesPerCell) = "01" Case 8 ' BLANK Mid(TheLine, aCol * SpacesPerCell - SpacesPerCell + 1, SpacesPerCell) = " " End Select Next aCol ' Write the line to the file ts.WriteLine TheLine Next aRow ts.Close Set ts = Nothing Set fso = Nothing MsgBox "Done" End Sub Sub MacroToRunTwo() Dim S As String S = "Hello World From Two:" & vbCrLf & _ "This Add-In File Name: " & ThisWorkbook.FullName MsgBox S End Sub Function GetDesktopPath() As String 'Return the current user's desktop path GetDesktopPath = "C:\Users\patrick\Desktop\" 'GetDesktopPath = Environ("HOMEDRIVE") & Environ("HOMEPATH") & "\Desktop\" End Function And The WorkBook Code: Private Const C_TAG = "Refracted Solutions" ' C_TAG should be a string unique to this add-in. Private Const C_TOOLS_MENU_ID As Long = 30007& Private Sub Workbook_Open() ''''''''''''''''''''''''''''''''''''''''''''''' ' Workbook_Open ' Create a submenu on the Tools menu. The ' submenu has two controls on it. ''''''''''''''''''''''''''''''''''''''''''''''' Dim ToolsMenu As Office.CommandBarControl Dim ToolsMenuItem As Office.CommandBarControl Dim ToolsMenuControl As Office.CommandBarControl ''''''''''''''''''''''''''''''''''''''''''''''' ' First delete any of our controls that ' may not have been properly deleted previously. ''''''''''''''''''''''''''''''''''''''''''''''' DeleteControls '''''''''''''''''''''''''''''''''''''''''''''' ' Get a reference to the Tools menu. '''''''''''''''''''''''''''''''''''''''''''''' Set ToolsMenu = Application.CommandBars.FindControl(ID:=C_TOOLS_MENU_ID) If ToolsMenu Is Nothing Then MsgBox "Unable to access Tools menu.", vbOKOnly Exit Sub End If '''''''''''''''''''''''''''''''''''''''''''''' ' Create a item on the Tools menu. '''''''''''''''''''''''''''''''''''''''''''''' Set ToolsMenuItem = ToolsMenu.Controls.Add(Type:=msoControlPopup, temporary:=True) If ToolsMenuItem Is Nothing Then MsgBox "Unable to add item to the Tools menu.", vbOKOnly Exit Sub End If With ToolsMenuItem .Caption = "&WWCares" .BeginGroup = True .Tag = C_TAG End With '''''''''''''''''''''''''''''''''''''''''''''' ' Create the first control on the new item ' in the Tools menu. '''''''''''''''''''''''''''''''''''''''''''''' Set ToolsMenuControl = ToolsMenuItem.Controls.Add(Type:=msoControlButton, temporary:=True) If ToolsMenuControl Is Nothing Then MsgBox "Unable to add item to Tools menu item.", vbOKOnly Exit Sub End If With ToolsMenuControl '''''''''''''''''''''''''''''''''''' ' Set the display caption and the ' procedure to run when clicked. '''''''''''''''''''''''''''''''''''' .Caption = "State ANSII E&xport" .OnAction = "'" & ThisWorkbook.Name & "'!StateANSIIExport" .Tag = C_TAG End With '''''''''''''''''''''''''''''''''''''''''''''' ' Create the second control on the new item ' in the Tools menu. '''''''''''''''''''''''''''''''''''''''''''''' 'Set ToolsMenuControl = ToolsMenuItem.Controls.Add(Type:=msoControlButton, temporary:=True) 'If ToolsMenuControl Is Nothing Then ' MsgBox "Unable to add item to Tools menu item.", vbOKOnly ' Exit Sub 'End If 'With ToolsMenuControl '''''''''''''''''''''''''''''''''''' ' Set the display caption and the ' procedure to run when clicked. '''''''''''''''''''''''''''''''''''' ' .Caption = "Click Me &Two" ' .OnAction = "'" & ThisWorkbook.Name & "'!MacroToRunTwo" ' .Tag = C_TAG 'End With End Sub Private Sub Workbook_BeforeClose(Cancel As Boolean) '''''''''''''''''''''''''''''''''''''''''''''''''''' ' Workbook_BeforeClose ' Before closing the add-in, clean up our controls. '''''''''''''''''''''''''''''''''''''''''''''''''''' DeleteControls End Sub Private Sub DeleteControls() '''''''''''''''''''''''''''''''''''' ' Delete controls whose Tag is ' equal to C_TAG. '''''''''''''''''''''''''''''''''''' Dim Ctrl As Office.CommandBarControl On Error Resume Next Set Ctrl = Application.CommandBars.FindControl(Tag:=C_TAG) Do Until Ctrl Is Nothing Ctrl.Delete Set Ctrl = Application.CommandBars.FindControl(Tag:=C_TAG) Loop End Sub
