[site]: stackoverflow
[post_id]: 609313
[parent_id]: 609262
[tags]: 
If you create a Composite with the style SWT.EMBEDDED style, then under SWT/GTK+ Composite.embeddedHandle will be an X window ID you can use for parenting an XEMBED child. Composite embed = new Composite(shell, SWT.EMBEDDED); System.out.println ("X window ID: " + embed.embeddedHandle); int hwndChild = OS.GetWindow ( c.handle, OS.GW_CHILD); This supports embedding using the XEMBED protocol. This is similar to the JNI code used to get the window ID from its handle GtkWidget *widget = (GtkWidget *) handle; GdkWindow *window = widget->window; xwinid = GDK_WINDOW_XWINDOW(window); Example of code here . Example of class using OS: org.eclipse.swt.widgets.Tree , org.eclipse.swt.widgets.CoolItem , OS I can find is indeed org.eclipse.swt.internal.win32.OS , not gtk, and it is not a perfect solution because you would access an internal package, but that can give you an idea where to look. In your case, org.eclipse.swt.internal.gtk.OS is the right class, and you should look in Tree or CoolItem sources how they are using the GetWindow function. Some other function need to be called in GTK, like may be gtk_container_get_children(int container); It is said in an answer to the message I was referring at the beginning If you need the X window, there's no way to do this from the public SWT API (even going through internals), and furthermore even if there was a way I don't think you could guarantee it for all controls. I'm not sure if this works but the closest you could get might be to: make Control.fixedHandle public Use OS.GTK_WIDGET_WINDOW (control.fixedHandle) to get a GdkWindow Use OS.gdk_x11_drawable_get_xid (gdkWindow) to translate that to an X window I guess the other way might be to take Control.handle , and then call GTK_WIDGET_WINDOW() on it, or if that's null keep calling it on its parents until you find one with a GdkWindow , and then translate that to an X window. The difficulty here is that SWT talks to GTK+, which talks to GDK, which then talks to X. So, there's three layers between you and the X window.
