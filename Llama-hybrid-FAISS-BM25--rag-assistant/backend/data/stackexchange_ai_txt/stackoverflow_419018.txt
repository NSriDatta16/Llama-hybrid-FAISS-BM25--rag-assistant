[site]: stackoverflow
[post_id]: 419018
[parent_id]: 418983
[tags]: 
I would say that you need to encapsulate the process into a 'Matcher' class in which your methods capture statistics as they progress. public class Matcher { private int totalFileCount; private int matchedCount; private DateTime start; private int lineCount; private DateTime stop; public IEnumerable Match() { return GetMatchedFiles(); System.Console.WriteLine(string.Format( "Found {0} matches in {1} matching files." + " {2} total files scanned in {3}.", lineCount, matchedCount, totalFileCount, (stop-start).ToString()); } private IEnumerable GetMatchedFiles(string pattern) { foreach(File file in SomeFileRetrievalMethod()) { totalFileCount++; if (MatchPattern(pattern,file.FileName)) { matchedCount++; yield return file; } } } } I'll stop there since I'm supposed to be coding work stuff, but the general idea is there. The entire point of 'pure' functional program is to not have side effects, and this type of statics calculation is a side effect.
