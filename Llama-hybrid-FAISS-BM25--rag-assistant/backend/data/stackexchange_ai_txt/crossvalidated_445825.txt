[site]: crossvalidated
[post_id]: 445825
[parent_id]: 445818
[tags]: 
You can calculate this recursively, using a (backwards) dynamic programming-like iteration. Let us construct a state variable $s \in \{0, \dots, 10\}$ . $s$ represents the current value of the sum, except for state $10$ , which represents any sum $>=10$ . You start in state $s=0$ . If you are in state $10$ , obviously you are done, and the expected number of remaining transitions to reach state $10$ is zero. If you are in state $9$ , you have a probability $0.9$ of transitioning to state $10$ and $0.1$ of remaining in state $9$ . Using well-known results, this means your expected time-to- $10$ is $1.111\dots$ draws. If you are in state $8$ , using a similar logic as above, your expected time to transition to some higher state in $1.111\dots$ draws. When you do, you will wind up in state $9$ with probability $1/9$ and state $10$ with probability $8/9$ . Taking the appropriate weighted average of the time-to- $10$ of states $9$ and $10$ gives an expected time-to- $10$ of state $8$ equal to $1.111\dots + 1.111\dots/9 = 1.234568$ . If you are in state $7$ , using the same logic as above, ... In each state, you have an expected time-to-transition to some higher state of $1.111$ draws, and when you do, you just take the transition probability-weighted average of the time-to- $10$ of the higher states to derive the time-to- $10$ of the current state. This recursion can be easily implemented; I've chosen to do so in C++ using Rcpp, as the indexes in C/C++ start at $0$ but in R start at $1$ , requiring some minor mental agility to correct for given that your state space starts with $0$ : > source_code + using namespace Rcpp; + + // [[Rcpp::export]] + NumericVector e_draws() + { + NumericVector s(10); + s[9] = 10.0/9.0; + for (int i = 8; i >= 0; --i) { + s[i] = 10.0/9.0; + for (int j = i+1; j > sourceCpp(code=source_code) > > e_draws() [1] 2.867972 2.581175 2.323057 2.090752 1.881676 1.693509 1.524158 1.371742 1.234568 1.111111 ... and the answer is the first element of the vector, $2.867972$ .
