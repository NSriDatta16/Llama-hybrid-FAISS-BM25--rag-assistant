[site]: stackoverflow
[post_id]: 1352400
[parent_id]: 1352378
[tags]: 
The .Name() function in the OrganizationBuilder has a signature to return OrganizationBuilder type - no matter on which derived object it is called from. That is why you see it returning OrganizationBuilder. If you would have override Name() function in your contract builder and set the name to something else, you will notice that the Name() function is acting on your runtime object. Now if you want to know how to make Name() return the builder that you want, you should follow the same technique as you used for ID() method. EDIT/UPDATE: Well, now I don't understand the actual error you are facing - with the new updates. Can you share the exact error you are facing? On a side note: I feel this design is totally convoluted. I wouldn't give this to my consumers just to support a nice pattern of a builder method returning the appropriate builder object. I'd stick to much simpler approach.
