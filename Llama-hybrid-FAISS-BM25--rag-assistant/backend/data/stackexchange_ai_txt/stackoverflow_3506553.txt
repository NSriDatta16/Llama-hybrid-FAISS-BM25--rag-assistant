[site]: stackoverflow
[post_id]: 3506553
[parent_id]: 3506324
[tags]: 
I don't agree with your understanding of Decoupling. Decoupling is not just about which objects create other objects, it's also about which objects know about the behaviour of other objects and (crucially) what needs to change in (your example) Document if Word changes. However, also I really don't understand what your mean by these two phrases: I only have one object for Word and one for Document. I don't create a new object for every new document or word. I store a list of the entire documents in Document, and a list pf the entire words in Word Start from Document. What can objects of this class do? You seem to be saying that class Document { private List allDocuments; } If class Document contains a List, what's it a List of? I think you need: class Shelf { private List allDocuments; } class Document{ private List wordInOneDocument; } class Word { private String wordContents; } Now a Shelf could offer methods such as getRecentDocumets() findDocumentsContaining(String text) and Document could contain getWordCount() and insertParagraph(List, START); and so on. To have a better discussion we need to see a bit more of what you had in mind, a bit more about behaviour. I do agree with your general thought that there is Something other than Document and Word out there. Something that can reasonably invoke methods such as createDocument() and insertParagraph()
