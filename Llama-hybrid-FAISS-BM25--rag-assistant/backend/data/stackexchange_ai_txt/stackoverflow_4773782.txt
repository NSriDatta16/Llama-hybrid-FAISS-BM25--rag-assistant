[site]: stackoverflow
[post_id]: 4773782
[parent_id]: 4772348
[tags]: 
Whether or not you have a problem with the python server, you should check with a proxy sniffer, like Charles , Fiddler or even FireBug . The result looks fine, although I'm not sure if the newline character %0A you see in the trace(wikiload2.toString) is causing problems with the loadVars parsing. Try to remove that first. I'm not sure this is the fix, but you say you're new to AS2 so let me go a bit further with your code for future reference. I'm assuming there's a reason you have to be in AS2 and can't work with AS3. However, even with AS2 I'd urge you to look into object oriented programming. Once you do, it will become much easier to structure your code, work with 3rd party frameworks and keep a level of maintainability in your projects. In frameworks for example, there's one called ASAPFramework . It has a very easy object called LoadVarsXML, that will let you load the result of your load as an XML object. Better to debug than the loadVars structure both in python and in flash. Another advice; In AS2, the scope of a method call can be another one than the scope of the method declaration. In other words, variables that are defined in the same object as the method, can be inaccessible when you pass that method along for execution in event callbacks like onLoad. One way to work around this is by storing every value globally, like you do with prefixing _root. This however, makes your code hard to read, hard to understand and as you've noticed, hard to debug. *The use of _root is in general, a big no-no* . If you keep expanding your example script above, you'll eventually find yourself in a code spaghetti that no-one you ask to help will be able to understand. The way around this is by starting to use classes instead of frame scripts, but even if you want to stick to those, you can already clean things up a bit by wrapping your callback methods with Delegate.create(scope, method). Here's how your code would look like making use of the Delegate.create method. I also took the liberty of rewriting your wikiLoad1 and 2 variables to wikiLoader and wikiResults. This makes it a bit clearer what their tasks are. _root.buttonBkg.onPress = Delegate.create(this, handleButtonPress); function handleButtonPress():Void { var wikiResult:LoadVars = new LoadVars(); wikiResult.onLoad = Delegate.create(this, handleWikiLoad); var wikiLoader:LoadVars = new LoadVars(); wikiLoader.wikiname = wikiterm; wikiLoader.sendAndLoad("http://myURL.script.py",wikiResult,"POST"); trace("?wikiname=" + wikiLoader.wikiname); trace("did the sendAndLoad"); } function handleWikiLoad(success:Boolean):Void { trace("entered wikiLoader.onLoad function"); if (success) { _root.createTextField("wikidisplay",_root.getNextHighestDepth(),0,150,550,380); _root.wikidisplay.html = true; _root.wikidisplay.htmlText = wikiResult.displayhtml; trace("wikiResult.displayhtml is" + wikiResult.displayhtml); trace(wikiResult.toString()); trace("success route"); } else { _root.createTextField("wikidisplay",_root.getNextHighestDepth(),0,150,550,380); _root.wikidisplay.text = "Error connecting to server."; trace("error route"); } } I think this looks much cleaner and is therefore easier to understand. As said, try to remove the newline character in python, and if you can, check out the LoadVarsXML from ASAP. It will seriously simplify life in AS2.
