[site]: stackoverflow
[post_id]: 3235128
[parent_id]: 
[tags]: 
Tcl Anonymous Functions

A Purely theoretical question on Tcl. Following this question I was thinking on what would be the best way to implement anonymous functions in Tcl. The end result should be allowing a developer to pass a full proc as an argument to anohter proc: do_something $data {proc {} {input} { puts $input; }}; which would be similar to javascript's do_something(data, function (input) { alert(input); }); now, naturally this will not work OOTB. I was thinking on something of this sort: proc do_something {data anon_function} { anon_run $anon_function $data } proc anon_run {proc args} { set rand proc_[clock clicks]; set script [lreplace $proc 1 1 $rand]; uplevel 1 $script; uplevel 1 [concat $rand $args]; uplevel 1 rename $rand {}; //delete the created proc } This works. But I was hoping to get suggestions for a better pattern then this, as it's not very elegant and not really using cool Tcl features. Mostly I'd like to get rid of manually calling anon_run .
