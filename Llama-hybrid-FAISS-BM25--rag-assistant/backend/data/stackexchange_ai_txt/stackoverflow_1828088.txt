[site]: stackoverflow
[post_id]: 1828088
[parent_id]: 1827760
[tags]: 
You don't have to worry about the key business at least to change the date format here. The copyright property in the book object is automatically changed using the key-business in the EditingViewController. So you only have to change the place where that property is displayed. In DetailViewController.m, change this method: - (NSDateFormatter *)dateFormatter { if (dateFormatter == nil) { dateFormatter = [[NSDateFormatter alloc] init]; [dateFormatter setDateStyle:NSDateFormatterMediumStyle]; //REMOVE [dateFormatter setTimeStyle:NSDateFormatterNoStyle]; //REMOVE } return dateFormatter; } To this: - (NSDateFormatter *)dateFormatter { if (dateFormatter == nil) { dateFormatter = [[NSDateFormatter alloc] init]; [dateFormatter setDateFormat:@"EEEE MMMM d"]; //NEW LINE } return dateFormatter; } Edit: Forgot to mention that the actual display is done in cellForRowAtIndexPath in the same file. But that display code uses a class-level variable dateFormatter so we just modify its initialization. Edit #2: You modified the sample code to group the rows by the book copyright date. To modify the date format in the section heading there is probably a more elegant way to do it but here is a crude solution. Modify titleForHeaderInSection in RootViewController.m to this: - (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section { NSString *rawDateStr = [[[fetchedResultsController sections] objectAtIndex:section] name]; //convert default date string to NSDate... NSDateFormatter *formatter = [[[NSDateFormatter alloc] init] autorelease]; [formatter setDateFormat:@"yyyy-MM-dd HH:mm:ss ZZ"]; NSDate *date = [formatter dateFromString:rawDateStr]; //convert NSDate to format we want... [formatter setDateFormat:@"EEEE MMMM d"]; NSString *formattedDateStr = [formatter stringFromDate:date]; return formattedDateStr; } The change above assumes you will only do sections by date. If not, you'll need to check whether the current grouping is by date otherwise it will try to convert author's name or title to a date and crash. You may also want to add a check for null/invalid date. Edit #3: The copyright field is NSDate which contains both date and time. To group by date only, when the copyright field is edited, set the time part to 00 as follows (in save method in EditingViewController.m): // Pass current value to the edited object, then pop. if (editingDate) { NSDate *pickedDateTime = datePicker.date; NSDateFormatter *formatter = [[[NSDateFormatter alloc] init] autorelease]; [formatter setDateFormat:@"yyyy-MM-dd 00:00:00 -0000"]; NSString *pickedDateStr = [formatter stringFromDate:pickedDateTime]; pickedDateTime = [formatter dateFromString:pickedDateStr]; [editedObject setValue:pickedDateTime forKey:editedFieldKey]; } HOWEVER, since the sample data provided in the example from Apple already includes time in the copyright field, editing or adding one book will not put it in the same group as another group with the same date because the other book still has the time portion in it. If you edit both books and save, it will clear the time in both and they will show in the same group. A better solution would be to somehow tell the SortDescriptor to only look at the date portion of copyright only instead of the copyright as-is but I'm not sure how to do this yet.
