[site]: stackoverflow
[post_id]: 818981
[parent_id]: 
[tags]: 
In qt, how do I implement a widget that stays consistent with variables in the code

Here's a sample of a SpinBox that writes its changes to underlying variables. The main problem that I'm having is valueChanged is called when the widget is constructed. Is there a more elegant way to do this? I think it's weird that I connected a widget to itself, but valueChanged isn't virtual. class ValueWriterInt: public QSpinBox { Q_OBJECT public: ValueWriterInt(vector const& value): myValue(value) { QObject::connect(this, SIGNAL(valueChanged(int)), this, SLOT(valueChanged(int))); } ~ValueWriterInt() {} private slots: void valueChanged(int new_value) { for (auto it = myValue.begin(); it != myValue.end(); ++it) **it = new_value; } private: vector myValue; };
