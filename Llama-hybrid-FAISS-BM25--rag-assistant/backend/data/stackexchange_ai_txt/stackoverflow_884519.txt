[site]: stackoverflow
[post_id]: 884519
[parent_id]: 
[tags]: 
Cleaning up a simple foreach with linq

The following method is pretty simple, I'm trying to determine a line-item rate by matching up another property of the line-item with a lookup from a parent object. There's a few things I don't like about it and am looking for elegant solutions to either make the method smaller, more efficient, or both. It works in it's current state and it's not like it's noticeably inefficient or anything. This isn't mission critical or anything, more of a curiosity. private decimal CalculateLaborTotal() { decimal result = 0; foreach (ExtraWorkOrderLaborItem laborItem in Labor) { var rates = (from x in Project.ContractRates where x.ProjectRole.Name == laborItem.ProjectRole.Name select x).ToList(); if (rates != null && rates.Count() > 0) { result += laborItem.Hours * rates[0].Rate; } } return result; } I like the idea of using List .ForEach() , but I was having some trouble keeping it succinct enough to still be easy to read/maintain. Any thoughts?
