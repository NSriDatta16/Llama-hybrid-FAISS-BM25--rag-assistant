[site]: crossvalidated
[post_id]: 408340
[parent_id]: 210960
[tags]: 
You already outlined the most straightforward approach: put all the lagged values in the same row (observation). For instance, if you data set has columns: (x, y), and you think that in addition to contemporaneous values the past two values of column x can be useful, you create a new data set with columns (x(t),z(t),x(t-1),x(t-2)). As you mentioned the problem is that there's a lot of repeated values in this data set, and it inflates the storage requirements. However, many machine learning frameworks are built on tabular data, where each row has all the columns of the observation. So, the economical solution is through writing your own data streams. The machine learning frameworks usually provide you with API that allows you to create the tabular datasets on the fly. They may have different names, but the idea's the same: from API point of view there's a function that returns a row in data set with all required columns. In reality, this is a function that you wrote, which collects all lagged values x(t-k) on the fly from the underlying data set.
