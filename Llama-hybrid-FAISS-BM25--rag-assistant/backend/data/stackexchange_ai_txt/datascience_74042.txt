[site]: datascience
[post_id]: 74042
[parent_id]: 74023
[tags]: 
I think your problem is not so much calculating the average, as it is to create a subset within a radius. Once you have that subset, calculating the average is trivial. You find an example of subsetting on radius here: https://stackoverflow.com/questions/59060532/calculate-coordinates-inside-radius-at-each-time-point Note however that that example works with a 2d circle, which isn't exactly what you are looking for because Earth is a globe. In order to adjust for it, you'll need the great circle distance (or Haversine distance). Why? Look here: https://en.wikipedia.org/wiki/Haversine_formula You'll find a python implementation of that concept here: https://stackoverflow.com/questions/52889566/calculate-euclidean-distance-for-latitude-and-longitude-pandas-dataframe-pytho 1. Load the data into a dataframe import pandas as pd import xarray as xr data = xr.open_dataset('file') df = data.to_dataframe()
