[site]: stackoverflow
[post_id]: 5273973
[parent_id]: 5273923
[tags]: 
Use HTTPS and just send the API key in the request. It's that simple. If you use HTTP then you are going to reinvent the wheel. Update: Here is an update after reading the comments, because in the question you didn't explain that you want to give the API keys to visitors of the website (in which case you would be screwed no matter what you do). The comment by juanpaco explains what to do (and what I originally assumed that you're doing anyway) but I'll try to explained it in a little bit more detail. The most important thing is that you don't use the API key in the web form. The API key is only used in the communication between your customers servers and your API server. Here is a simplified explanation: You give your customer a key and some software/module/library to install on his server. When a visitor visits your customer's website he sees some HTML generated by your module that does not include any API key and can communicate only with your customer's server (with HTTPS if there is any sensitive information or user accounts involved at all). Your module on the customer's server gets the request from the visitor. Your module connects to your server using the API key (with HTTPS). Your API server responds to the customer's server. The customer's server responds to the visitor. Your API key is never sent in the cleartext and never given to website visitor . This is the only reasonable way to use API keys and after I first read your questions I assumed that you are concerned about the safety of sending your API keys between your servers and the servers of your customers. If your customers were to give their keys to every visitor of their websites then those visitors would always be able to know them, no matter how hard you would try to make it. Giving visitors API keys and making them possible to use but impossible to read would be impossible. Not hard - impossible . No matter what protocols, encryption or anything you use. (Thanks to juanpaco for bringing this old answer to my attention.)
