[site]: stackoverflow
[post_id]: 4103323
[parent_id]: 4101924
[tags]: 
The cost of immutability in Scala Here is a version that is nearly as fast than the Java one. ;) object QuickSortS { def sort(xs: Array[Int]): Array[Int] = { val res = new Array[Int](xs.size) xs.copyToArray(res) (new QuickSortJ).sort(res) res } } This version makes a copy of the array, sorts it in place using the Java version and returns the copy. Scala does not force you to use immutable structure internally. So the benefit of Scala is that you can leverage mutability and immutability as you see fit. The disadvantage is that if you do that wrong you don't really get the benefits of immutability.
