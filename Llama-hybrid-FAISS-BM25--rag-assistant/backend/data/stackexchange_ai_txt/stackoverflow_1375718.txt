[site]: stackoverflow
[post_id]: 1375718
[parent_id]: 
[tags]: 
Java Generics: casting to ? (or a way to use an arbitrary Foo )

So, I have some code that looks approximately like (truncated for brevity - ignore things like the public member variables): public class GenericThingy { private T mValue; public final T[] mCandidates; public GenericThingy(T[] pCandidates, T pInitValue) { mCandidates = pCandidates; mValue = pInitValue; } public void setValue(T pNewValue) { mValue = pNewValue; } } public class GenericThingyWidget { private final GenericThingy mThingy; private final JComboBox mBox; public GenericThingyWidget (GenericThingy pThingy) { mThingy = pThingy; mBox = new JComboBox(pThingy.mCandidates); //do stuff here that makes the box show up } //this gets called by an external event public void applySelectedValue () { mThingy.setValue(mBox.getSelectedItem()); } } } My problem is that the mThingy.setValue(mBox.getSelectedItem()); call generates the following error: The method setValue(capture#4-of ?) in the type Generics.GenericThingy is not applicable for the arguments (Object) I can get around this by removing the from the declaration of mThingy and pThingy in GenericThingyWidget - which gives me a "GenericThingy is a raw type. References to GenericThingy should be parameterized" warning. I also tried replacing the setValue call with mThingy.setValue(mThingy.mCandidates[mBox.getSelectedIndex()]); which I genuinely expected to work, but that produced a very similar error: The method setValue(capture#4-of ?) in the type Generics.GenericThingy is not applicable for the arguments (capture#5-of ?) Is there any way to do this without generating "raw type" warnings ("unchecked cast" warnings I'm OK with) and without making GenericThingyWidget into a generic type? I'd think I could cast the return of mBox.getSelectedItem() to something, but I can't figure out what that would be. As a bonus question, why does the replacement call to mThingy.setValue not work?
