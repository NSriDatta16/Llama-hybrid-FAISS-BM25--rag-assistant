[site]: stackoverflow
[post_id]: 3197668
[parent_id]: 3162179
[tags]: 
I think I've come to an answer although it is not exactly as I'd hoped. Removing the machine learning context, my question boiled down to whether knowing C^{1/2} would help in the calculation of Q^{-1/2}. I'll go into more detail below but to cut the chase, the answer is yes, but only with respect to stability and not computation (can't prove this to be the case currently, but fairly certain). For why the answer is yes wrt to stability we look at the definition Q from the original question has been rearranged as follows. Q = C - B* A^{-1} B = (C^{1/2} + B*A^{-*/2})(C^{1/2} - B*A^{-*/2})* By knowing C^{1/2} before hand, we can calculate Q without having to invert A directly. Direct inversion is not numerically stable. Sadly, although I have done a fair amount of research on the subject, it does not appear that $C^{1/2}$ helps wrt computation in the exact calculation of Q^{-1/2}. The best approach appears to be to calculate Q using C^{1/2} as above and then use Cholesky to decompose Q to Q^{1/2} and then forward substitution to calculate Q^{-1/2}. Further Research One area I did not look into in much detail was whether it was possible to use C^{1/2} to approximate Q^{-1/2}. Something along the lines of an iterative method using C^{1/2} as a starting point. I do not know of any such iterative approximation process, but I'll keep searching. I may even start a new question with that as the focus. I'll update you all if I have any major breakthroughs.
