[site]: crossvalidated
[post_id]: 147869
[parent_id]: 
[tags]: 
How to stack a convolutional autoencoder?

I am trying to figure out as to how to stack a convolutional autoencoder (CAE)? Consider a convolutional autoencoder (CAE) (using MNIST data, 28x28 input dimensions): 28x28(input) -- convolve with 5 filters, each filter 5x5 --> 5 @ 28 x 28 maps -- maxPooling --> 5 @ 14 x 14 (Hidden layer, H) -- reverse-maxPool --> 5 @ 28 x 28 -- convolve with 5 filters, each filter 5x5 --> 28x28 (output) I have trained such a CAE, I ran training for over 1000 iterations and error appears to reducing as the iterations progress. At the end, I checked if input == output and it was. Now, If I have to stack the CAE, I need to feed the "hidden layer" maps of current stack as "input" to next stack. Is my understanding right? If (1) is true. My next stack expects one map as input however there are 5-maps in my current stack's hidden layer. How do I collapse/calculate one map from 5-hidden maps ? Right now, I am doing this, I = max_across_all_maps(hidde layer maps) Something like a "high pass filter" to collapse all hidden-layer maps to one map. Is that a valid thing to do?
