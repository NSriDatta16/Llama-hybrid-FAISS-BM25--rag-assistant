[site]: stackoverflow
[post_id]: 3851483
[parent_id]: 
[tags]: 
What are the weaknesses and shortcomings of arrays?

I would like to know what are the weaknesses of the arrays. I think that it is very helpful to know in order to determine whether the arrays are the best way to store the data in particular situation, or to predict the time of execution. Edit 1: Clarification, by arrays as I understand them: Not finite , but fixed size storage , that is used as sequential data containers , that are mutable . 1 or more indexes are used to reference a specific data container. Data contained must be of same type , if the type is primitive . Data contained must be of same data type or descendant of the type, if type is object (this is polymorphism ), this kind of type conversion is narrower to wider also called covariant conversion. All arrays in Java are 1 dimensional arrays . Swapping elements or finding element with its indexes is fast operation Adding/Removing elements is slow operation, as array is recreated Element types are enforced at runtime, this is called arrays are reified . Java array methods are in java.util.Arrays and thy do not even contain basic array manipulation methods like union and intersection . Its sad, that guava-libraries is not part of standard Java. Object array is filled with references to storage locations where the data actually is. Array of arrays is called 2 dimensional array . 2d arrays first array is filled with references to other arrays. Other arrays are not stored sequentially. Other arrays can vary in element size, this is called ragged - and jagged arrays . Java arrays have row-major order . Array dimension is typically limited to 255 , but it varies from implementation. Exceptions and important notes. In case of managed memory environment, the absolute locations of data elements can be sequential , but most likely are not. Arrays used directly can't be threadsafe , immutable or have transactional integrity and because of this, there is no direct way to go parallel . If you need to find if specific data is contained in sorted array you can use binary search , that is not much slower then hashset.contains what I assume uses VMMemoryManager.getIdentityHashCode , that is basically just old school modulation calculus and where collisions can happen . Java generics is just compiler magic , but if you want to use Java generic with arrays, then you can't use primitive types . In Java 6, Collections.sort() works like - dump data in array and ... - at that point difference is x2 times in memory. Garbage collector really does not like arrays, and thy usually end up in old generation , and wont be freed any soon. It's a bad idea to enter big data elements in arrays, but i can't remember why. In my opinion arrays are one of very best ways to store data, just not directly. At times, my head seems to be like a garbage bin, where knowledge is malformed. This is one reason why I asked this question - to confirm what i know.
