[site]: stackoverflow
[post_id]: 3901011
[parent_id]: 3900756
[tags]: 
The "right" way in Magento might actually be closer to this: getVar1(); ?>"> getVar2(); ?> Having less code can be a good thing, but only when you understand the tradeoffs. For the sake of saving two lines (or no lines if you use the above technique), you are actually losing some flexibility. The reason that Magento relies so heavily on magic get* and set* methods is that they can be overridden in a class in a transparent way. Let's say, for argument's sake, that down the road someone overrides your class and decides that var1 should be calculated on the fly, rather than set statically (this may not happen to you often, but Varien needed to take this into account for core classes). If you set variables manually and use them as such, this would likely require you to change several references in code. However, by using magic get* methods, calculations for attributes are much simpler: public function getVar1() { $value = $this->_getData('var1'); // perform calculations here return $value; } This formulation doesn't even block the set* equivalent of the call, nor does it require any updates to code relying on this method. So, use the magic methods when you can, as they are more idiomatic to the framework and will allow you and others the maximal possible flexibility when working with your code additions. Hope that helps! Thanks, Joe
