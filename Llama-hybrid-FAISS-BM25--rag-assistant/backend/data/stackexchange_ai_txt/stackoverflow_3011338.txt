[site]: stackoverflow
[post_id]: 3011338
[parent_id]: 3010110
[tags]: 
I'll take a shot. There is probably a more elegant way, or some efficiencies, but... Turn your XML into an ArrayCollection of objects { category: "red", other_data: "doesn't matter" } . . . From there... var categoryGroup:GroupingCollection=new GroupingCollection(); categoryGroup.source=ac; // you're ArrayCollection var grouping:Grouping=new Grouping(); var groupingField:GroupingField=new GroupingField("category"); grouping.fields=[groupingField]; categoryGroup.grouping=grouping; categoryGroup.refresh(); var categoryAC:ArrayCollection=categoryGroup.getRoot() as ArrayCollection; chart.dataProvider=categoryAC; Other than that, you'll have to do some magic on the chart... You're chart function handlers public function myDataFunction(series:Series, item:Object, fieldName:String):Object { return (item.children.length); } public function myLabelFunction(data:Object, field:String, index:Number, percentValue:Number):String { return data.GroupLabel; } That may be a bit too heavy, but it will do the trick and is somewhat extensible to other scenarios.
