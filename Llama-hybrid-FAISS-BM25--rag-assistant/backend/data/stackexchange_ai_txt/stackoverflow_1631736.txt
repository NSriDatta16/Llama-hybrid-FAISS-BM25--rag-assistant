[site]: stackoverflow
[post_id]: 1631736
[parent_id]: 1629938
[tags]: 
Upcasts (towards pointer-to-base) don't require an explicit cast in C++. On the other hand, boost::any_cast will only succeed when casting to the exact same type as was originally stored. (IIRC it uses typeid to check that you are trying to access the correct type, and typeid comparisons are only true for exact matches.) Hence: A* aa = boost::any_cast (any); However, it is somewhat unclear why you should be using boost::any for polymorphic types. In particular, it is not a smart pointer and will not delete the pointed-at object. More common is to store pointers to polymorphic object in a smart pointer, e.g boost::shared_ptr
