[site]: stackoverflow
[post_id]: 4403562
[parent_id]: 3882387
[tags]: 
There are a couple of things you should do: Make sure you have one bundle (the "management agent" as it is often called in the spec) that starts first on framework (re)starts by giving it a lower start level than all your other bundles. Also make sure you tell the system to start with a start level equal to that of the management agent. That way this bundle will be able to update all other bundles in the framework before they actually get started. Only after the management agent is done updating will it refresh all packages and go to the next start level, effectively starting all other bundles. To update the management agent, the best way is to temporarily install a second bundle that actually performs the update. Spawning threads within the management agent is not the best solution, as those threads should not keep running once the bundle is stopped and not complying with that might give you problems that are hard to solve. That second bundle will actually update and maybe even rollback if the update fails. An example of a management agent that can update itself can be found as part of the Apache ACE. It has an agent that will, from code, install a second bundle to update itself from a remote location. Some pointers to relevant parts of that project: http://svn.apache.org/viewvc/ace/trunk/org.apache.ace.agent/src/org/apache/ace/agent/impl/AgentUpdateHandlerImpl.java?view=markup for the code that installs the temporary bundle http://svn.apache.org/viewvc/ace/trunk/org.apache.ace.agent/src/org/apache/ace/agent/updater/Activator.java?view=markup for the activator of the temporary bundle http://svn.apache.org/viewvc/ace/trunk/org.apache.ace.agent/ for the bnd project of the agent itself
