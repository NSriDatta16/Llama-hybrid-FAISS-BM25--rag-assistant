[site]: crossvalidated
[post_id]: 43122
[parent_id]: 8225
[tags]: 
Here is an example with the function aggregates() I did myself some time ago: # simulates data set.seed(666) ( dat dat group level y 1 1 A 10.8 2 1 B 12.0 3 1 C 9.6 4 1 A 12.0 5 1 B 7.8 6 1 C 10.8 7 2 A 8.7 8 2 B 9.2 9 2 C 8.2 10 2 A 10.0 11 2 B 12.2 12 2 C 8.2 13 3 A 10.9 14 3 B 8.3 15 3 C 10.1 16 3 A 9.9 17 3 B 10.9 18 3 C 10.3 # aggregates() function aggregates It gives the following result: > ag group level mean sd 1 1 A 11 1 2 2 A 9 1 3 3 A 10 1 4 1 B 10 3 5 2 B 11 2 6 3 B 10 2 7 1 C 10 1 8 2 C 8 0 9 3 C 10 0 Maybe you can get the same result starting from the R function split(): > with(dat, sapply( split(y, group:level), FUNS ) ) 1:A 1:B 1:C 2:A 2:B 2:C 3:A 3:B 3:C mean 11 10 10 9 11 8 10 10 10 sd 1 3 1 1 2 0 1 2 0 Let me come back to the output of the aggregates function. You can transform it in a beautiful table using reshape() , xtabs() and ftable() : rag This gives: > ft mean sd group level 1 A 11 1 B 10 3 C 10 1 2 A 9 1 B 11 2 C 8 0 3 A 10 1 B 10 2 C 10 0 Beautiful, isn't it? You can export this table to a pdf with the textplot() function of the gplots package. See here for others' solutions.
