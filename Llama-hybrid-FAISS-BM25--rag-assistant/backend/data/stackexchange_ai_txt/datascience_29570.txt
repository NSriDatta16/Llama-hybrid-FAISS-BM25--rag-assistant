[site]: datascience
[post_id]: 29570
[parent_id]: 
[tags]: 
Neural network accuracy for simple classification

I am trying to develop a NN for a very simple classification model with keras/tensorflow: Ex: input: "Do" => class output: "Dog" input: "Ca" => class output: "Cat" input: "Mo" => class output: "Mouse" I train the model with many "Do", "Ca", etc. (as dictionary), indexing the input to categorical arrays ( [0,1,0] for example is "Cat", [1,0,0] is "Dog", [0,0,1] is "Mouse" in case of three classes). I know that for this type of problem every other traditional classification algorithm should be used, and not DL, but I'm doing it with a purpose (I need to merge it with an image classifier). My question is: since the classification is easy ("Do" is always "Dog", "Ca" is always "Cat") a Decision tree would have an accuracy of 100% always. Why do Neural Networks need tons of data and epochs to get an acceptable accuracy? With 10 classes, it takes 10 epochs and 8 thousand entries in order to get an accuracy higher than 90%. I'm using sparse categorical crossentropy as loss, and SGD as the optimizer. (2 Dense layer, relu - softmax). Also, I am a bit lost on how to choose the number of neurons, I guess trial and error is the way.
