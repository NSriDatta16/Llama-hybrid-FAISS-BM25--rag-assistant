[site]: stackoverflow
[post_id]: 2913651
[parent_id]: 2913180
[tags]: 
Performing basic disk I/O operations requires very, very little CPU time (leastways on any box I've run Perfmon on). If you're hitting 100% CPU, then your archiving process is probably CPU-intensive. Are you performing some complex query, embedded function call, or doing something else that would require more than just reading/writing hard drive bytes? (Perhaps your database files are on compressed hard drives? Or some other similar "background" process is interfering?) One possible way (emphasis on possible because it totally depends on your environment) to spread the load across CPUs is to have several tasks running concurrently. This could be done by breaking the workload up. For a generic archive and making some broad assumptions, it might look like this: First step, identify the scope of data to be archived. Say, selected rows and related data from a master table hosting an identity column, where the data to be archived ranges from Id 10000 to 20000 Break this into chunks. Want to use four CPUs? Try four chunks, 10000-12500, 12501-15000, 15001-17500, 17501-20000. Log these in a "to be done" table. Configure four SQL Agent jobs to fire off at, say, 3:00AM, 3:01, 3:02, and 3:03. When each job fires, it gets the next "to be done" set of data, and processes it. You could prepare as many chunks of data as you want. You could have as many jobs as you want. A job could keep processing chunks until there were no more in the list. Note that if you have two or more processes reading data from the same drives and writing it to the same drives, you will eventually become disk-bound. But you can get improved performance, or at least I've seen it on some systems... if a task takes X time to move Y MBytes, two tasks can take less than 2X time to move 2Y MB of data, and this is even more likely to hold if there's a lot of CPU work to be done between the read and the write. But test it on your system to be sure. To check for disk I/O, use Perfmon (Performance Monitor, System Monitor, "Performance", or whatever they're calling it these days) with the "average disk queue size" counters. If those consistantly exceed 2 or 3, then you're disk bound. (It is, of course, more complex than that, but this will give you a strong start on that problem.)
