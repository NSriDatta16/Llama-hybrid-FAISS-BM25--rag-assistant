[site]: stackoverflow
[post_id]: 3274772
[parent_id]: 3274648
[tags]: 
Another way of implementing this is to write a scalar UDF in the database that implements this functionality. Then drag that UDF onto the LINQ-to-SQL designer, which will give you access to your UDF via the data-context. Then you can use things like: where _context.MyContains(documents.Title, breakedQuery, KeywordParts.Title, part); and which will call the UDF after translation (i.e. WHERE dbo.MyContains(...) )
