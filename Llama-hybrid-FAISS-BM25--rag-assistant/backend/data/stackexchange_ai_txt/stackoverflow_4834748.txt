[site]: stackoverflow
[post_id]: 4834748
[parent_id]: 4834683
[tags]: 
While you could easily (and lazily) use the global keyword to make it work, it is a highly discouraged practice ( search Stack Overflow to find out why ). Instead, you should have your function accept an array as argument and return a modified array as result: $test = array("a","b"); function myTest(array $test) { $test[0] = "c"; } $test = myTest($test); print_r($test); Would render: Array ( [0] => c [1] => b ) Alternatively, you can accept the array as reference and work on it directly (without having to return and re-assign): $test = array("a","b"); function myTest(array &$test) { $test[0] = "c"; } myTest($test); print_r($test); The output would be the same in both examples.
