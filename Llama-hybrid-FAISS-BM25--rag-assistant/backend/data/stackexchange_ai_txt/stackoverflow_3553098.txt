[site]: stackoverflow
[post_id]: 3553098
[parent_id]: 3553080
[tags]: 
Though I don't have a copy handy to check, I'd guess Lipmann means if you have something like: myclass X; ...the X object will be initialized with the default ctor, regardless of whether the object is global (outside any function), local to a function, or local to some other scope within a function (e.g., in a for loop). Contrast this with a built-in type line int , which has rather more complex rules: a global int (one defined outside any function) or one defined inside a function, but with static storage class, will be initialized to zero, but an int defined with automatic storage (defined inside a function, without specifying static ) is "default initialized", which (in this case) means it's not initialized to a predictable value.
