[site]: stackoverflow
[post_id]: 1596346
[parent_id]: 
[tags]: 
What is the most elegant way of shell sorting (comb / diminishing increment sorting) in C#?

Is there a better way to shell sort using C#? // array of integers to hold values private int[] a = new int[100]; // number of elements in array private int count; // Shell Sort Algorithm public void sortArray() { int i, j, increment, temp; increment = 3; while( increment > 0 ) { for( i=0; i = increment) && (a[j-increment] > temp) ) { a[j] = a[j - increment]; j = j - increment; } a[j] = temp; } if( increment/2 != 0 ) { increment = increment/2; } else if( increment == 1 ) { increment = 0; } else { increment = 1; } } } By the way, I'm wondering because I have some different examples of 'elegant' sorts in different languages (like bubble sorting in C# and F# ), and I'm comparing them. In real life, I'd probably use the following most of the time in C#: Array.Sort( object[] ) I don't care if these are 'academic' and non-pragmatic patterns. You can down-mod me into oblivion if you want :) KA
