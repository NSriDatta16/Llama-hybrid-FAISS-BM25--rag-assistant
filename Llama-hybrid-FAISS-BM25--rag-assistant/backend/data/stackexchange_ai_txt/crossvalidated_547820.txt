[site]: crossvalidated
[post_id]: 547820
[parent_id]: 399459
[tags]: 
The biggest mistake that people make with time series forecasting problems is look-ahead bias . To avoid this bias, it's vital to make explicit a) the date at which we make predictions and b) the date for which we make predictions. Our model should be capable of incorporating all information available at (or before) the date at which we make predictions. So you want to make predictions for $T$ which occurs at 4 year intervals. But when do you want to make the predictions? Do you make a prediction each time a new value of $U$ or $V$ comes in? So, in 2000 you make a 4 year ahead prediction, in 2001 you make a 3 year ahead prediction and so on? Or do you just want to make predictions every 4 years? In which case your problem is about how to bake the historical values of $U$ and $V$ in to your features. Or maybe you don't want to forecast the future at all and instead want to try and generate a same time 'nowcast' of $T$ . I suspect from your phrasing that you are looking at option 2. In this case we can engineer features from $U$ and $V$ that include some history. As a few examples: Exponentially weighted moving average Rolling Average Rolling Z-score Rolling Standard Deviation Min/Max values from window The python package tsfresh has good documentation on feature engineering transforms.
