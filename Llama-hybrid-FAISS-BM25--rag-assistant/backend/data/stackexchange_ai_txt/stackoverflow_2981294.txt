[site]: stackoverflow
[post_id]: 2981294
[parent_id]: 2979984
[tags]: 
Lookup is not good for this - with caching and everything, it's just not able to lookup on it's previously set values. You might be better off passing it to a SQL Command task and having a stored proc do an insert or expire/insert depending on what it finds. You could also stream them to a table and do it in a batch. To address your flow and the model it's trying to populate: To start with, it's always awkward when the order of rows in the input causes behavioral differences - i.e. NK = A, Val = 1 then NK = A, Val = 2 gives different behavior than NK = A, Val = 2 then NK = A, Val = 1. One has to wonder if this is the correct dimensional design. Remember that all dimensional attributes are assigned to dimensional tables based on a pragmatic choice. Ultimately dimensions can be arranged into tables at will - so a different design might make more sense. If things are changing within a single load, that may indicate you need to break up that load to match the grain (not attempting to load 2 days data at one time). I notice that there is an Effective Date and an End Date in your dimension. Right now this sounds a lot like a property of the dimension behavior (where your 01 and 02 codes are changing on a NK) and not of the facts that this dimension is going to be attached to. This might indicate that it needs to be tracked in a separate factless fact table, say (SK, EffectiveDate, EndDate) - or that it's just not important, because all you care about is a NK, 01, 02 combination attached to a fact, in which case, your natural key is really all of NK, 01, 02. I recommend going back to your fact table and the incoming feed and the expected usage and looking at it more closely and see if this maybe need to be a separate factless fact table tracking these dimension changes. Also, if you could post more details, that might help, and I'll see what Kimball's materials have to say about it when I see more of a business case.
