[site]: stackoverflow
[post_id]: 1581711
[parent_id]: 1581473
[tags]: 
I've used a few main build systems in the last few years Ant, with or without an IDE, for Java on Windows, Linux, OS X as the IDE uses a script, it's a non-question Visual Studio for C++ on Windows for CI, you can call the IDE executable to build and run in batch mode GNU make for C or C++ on Linux, Windows and Solaris ( and IIRC Java early on ) already a scripted build, usually used with a lighter weight text editor (SciTE) you have to do dependencies yourself, but that encourages you to not create spaghetti systems Earlier in my career, I used JBuilder and Symantec VisualCafe, Turbo C++, Turbo Pascal, each of which had their own build system. Their IDE specific build processes are now extinct. I'v been on a few long running projects which had to change their builds as IDEs were replaced; using an independent build script means you don't have to ( the exception is Visual Studio, which has always been pretty good at backwards compatibility ). In the languages I use, modern IDEs which either give a scripted build option or a use a script based tool. I move C and Java between platforms, so tend to use portable build tools for those.
