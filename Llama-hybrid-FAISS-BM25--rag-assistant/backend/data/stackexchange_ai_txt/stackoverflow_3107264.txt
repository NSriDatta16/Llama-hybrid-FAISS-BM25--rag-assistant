[site]: stackoverflow
[post_id]: 3107264
[parent_id]: 3107231
[tags]: 
You're encountering a classic binding-time problem, and @Mike's solution is the classic one. A good alternative is to write a higher order function: def makecall(kwargs): def callit(): return a_function(**kwargs) return callit and use commands.append(makecall(kwargs)) in your loop. Both solutions work on the same principle (by forcing early binding through passage of an argument -- a plain argument in my case, a default value for a named argument in @Mike's); the choice is just a matter of style or elegance (me, while I tolerate lambda in super-simple cases, as long as the subtlest complication intervenes I vastly prefer good old def ;-).
