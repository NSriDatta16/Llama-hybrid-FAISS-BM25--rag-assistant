[site]: stackoverflow
[post_id]: 1502503
[parent_id]: 1475520
[tags]: 
I usually manage to hit 93.. 100% with my coverage but I don't aim for 100% anymore. I used to do that and while it's doable, it's not worth the effort beyond a certain point because testing blindly obvious usually isn't needed. Good example of this could be the true evaluation branch of the following code snipped public void method(boolean someBoolean) { if (someBoolean) { return; } else { /* do lots of stuff */ } } However what's important to achieve is to as close to 100% coverage on functional parts of the class as possible since those are the dangerous waters of your application, the misty bog of creeping bugs and undefined behaviour and of course the money-making flea circus.
