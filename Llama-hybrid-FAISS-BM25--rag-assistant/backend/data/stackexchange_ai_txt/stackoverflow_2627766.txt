[site]: stackoverflow
[post_id]: 2627766
[parent_id]: 2627662
[tags]: 
I don't know if having a guideline for short lambda's and delegates is really useful. However, have a guideline for having short functions. The methods I write are on average 6 or 7 lines long. Functions should hardly ever be 20 lines long. You should create the most readable code and if you follow Robert Martin's or Steve McConnell's advice, they tell you to keep functions short and also keep the inner part of loops as short of possible, favorably just a single method call. So you shouldn't write a for loop as follows: for (int i = 0; i but simply with a single method call inside the loop: for (int i = 0; i With this in mind, while I in general agree with Jon Skeetâ€™s answer, I don't see any reason why you shouldn't want his example to be written as: Parallel.For(0, 100, i => { WellDescribedPartOfHeavyCalculation(i); }); or Parallel.For(0, 100, i => WellDescribedPartOfHeavyCalculation(i)); or even: Parallel.For(0, 100, WellDescribedPartOfHeavyCalculation); Always go for the most readable code, and many times this means: short anonymous methods, and short lambda's, but most of all short -but well described- methods.
