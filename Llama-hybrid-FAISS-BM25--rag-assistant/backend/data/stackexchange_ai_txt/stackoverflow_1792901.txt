[site]: stackoverflow
[post_id]: 1792901
[parent_id]: 1792656
[tags]: 
You are intermixing an implementation concern with a logical data architecture concern. You should decide whether or not to allow nulls in a field purely based on whether it accurately models the data you expect to store in the database. Part of the confusion, as a few others have pointed out, is that null and empty strings are not just two ways of storing the same information. Null means either there is no value or the value is unkown. Empty string means there is a value and it is an empty string. Let me demonstrate with an example. Say for example you have a middle name field and need to differentiate between situations where the middle name hasn't been populated and when the person doesn't have a middle name. Use the empty string to indicate that there is no middle name and null to indicate it hasn't been entered. In almost all cases where a null makes sense in terms of the data it they should be handled in the application code, not the database under the assumption that the DB needs to differentiate between two different states. The Short Version: Don't pick null vs empty string based on performance/storage concerns in the DB, pick the one that best models the information you are trying to store.
