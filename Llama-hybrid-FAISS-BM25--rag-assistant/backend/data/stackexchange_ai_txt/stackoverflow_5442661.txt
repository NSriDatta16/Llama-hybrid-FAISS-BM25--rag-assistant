[site]: stackoverflow
[post_id]: 5442661
[parent_id]: 
[tags]: 
Efficiently gathering information about the inner workings of a new PHP project. Tools? Techniques? Scripts?

I am soon to join a PHP project that has been developed over the course of several years. It's going to be huge, sparsely documented, many files, piles of code, no consitent quality level is to be expected. How would you go about gathering as much information as possible about what is going on? Autoloading is not be expected, at least not extensively, so inclued might do a good job revealing the interdependencies. Having phpDocumentor digest the project files might give an idea about which classes/methods/functions are present. Maybe phpCallGraph for method/function relations. Profiling some generic use cases with XDebug to gain an idea about the hierarchies and concepts. Inspecting important log-files ... checking out warnings, deprecated usages, errors. phpinfo() . Maybe extracting all comments and process them into a html-file. Didn't cover Unit-Tests, Databases, .... What would you do? What are your experiences with mentioned tools to get the most out of them? You can assume any condition necessary. What statistical information could be useful to extract? Has somebody experience with those tools? EDIT from "PHP Tools for quality check" : PHP Mess Detector Copy/Paste Detector (CPD) for PHP code by Seb. Bermann EDIT 2 from Bryan Waters' answer: phploc - phploc is a tool for quickly measuring the size of a PHP project. Inspecting Apache logs and Google Analytics data to find out about the top requested URLs and then analyze what happens using XDebug profiling and a tool like KCachegrind . See his answer for concrete techniques. Setting up a deployment / build / CI cycle for PHP projects - suggested by Pekka EDIT 3 Just found this PDF of a talk by Gabriele Santini - "Statistical analysis of the code - Listen to your PHP code". This is like a gold mine.
