[site]: crossvalidated
[post_id]: 58119
[parent_id]: 58101
[tags]: 
I think you're doing this correctly. The predictions show the deterministic component of the model, as intended. As a loose analogy, if you add a trend line to a simple scatter plot (abline(lm(...) , e.g.), you wouldn't expect the trend line to wobble around. Similarly, the forecast represents the best guess at the future temperatures. Were you perhaps interested in a stochastic simulation, or bounding the forecast estimates with confidence intervals? Or maybe there is another seasonal component in the observed time series that is missing from your forecast? I'll elaborate on these three possibilities below. For the confidence intervals, look at forecast$se . Multiply that by the appropriate critical value, e.g., qnorm(0.975) , and plot using lines(), and you can add some confidence bands. If you want a stochastic simulation, I would simulate the time series manually using the equation from the model that you fitted. Basically, simulate that prediction 1 time step at a time in a for() loop, and each time step add a Wiener noise term. For an AR(1) process with a coefficient of 1.00, this could amount to overlaying Brownian motion ( diffinv(rnorm(40)) ). Your model has more terms, so it's not so simple. Try something akin to X[i] , where Sigma is the s.d. of the noise that you want to add, B1 is the AR(1) coefficient, and X is the response variable. Adjust as necessary to include your seasonal and MA terms, etc. You could choose Sigma based on the residual variance of your fitted time series model. Perhaps what "looks wrong" to you is absence of a seasonality term with a multi-year period. For example, the effect of the North Atlantic Oscillation on temperature. You could try adding the NAO Index as a covariate to the model. To directly answer your questions: Do you need to add a white noise term? No. If it's noise you want to add, do a stochastic simulation, which would allow the noise to propagate naturally (a shock at time t-1 will have an effect at time t b/c X[t] is correlated with X[t-1]; also, the MA term means that the shocks/errors are correlated b/c Epsilon[t] is correlated with Epsilon[t-1]). Is you method correct? Given the structure of your model, your forecast seems reasonable. If the forecast is lacking some deterministic pattern, try accounting for things like NAO. If you desire an explicit graphical representation of uncertainty (due to lack of additional terms, or other process/ observation errors), I would suggest communicating that the model upon which your forecast is based has some residual variance --- put s.e.'s or CI's on the forecast. My hunch is that you're mostly interested in doing a stochastic simulation. That would be the way to add randomness.
