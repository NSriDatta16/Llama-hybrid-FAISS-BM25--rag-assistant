[site]: stackoverflow
[post_id]: 3216348
[parent_id]: 3214414
[tags]: 
In the constructor of your Custom Cell Renderer, you need to add an event listener to the protected loader instance and handle the IOError. Here's an example: package { import fl.controls.listClasses.ICellRenderer; import fl.controls.listClasses.ImageCell; import fl.controls.TileList; import fl.data.DataProvider; import fl.managers.StyleManager; import flash.events.EventDispatcher; import flash.events.*; import fl.containers.UILoader; public class CustomImageCell extends ImageCell implements ICellRenderer { public function CustomImageCell() { super(); //do other stuff here loader.scaleContent = false; loader.addEventListener(IOErrorEvent.IO_ERROR, handleErrorEvent, false, 0, true); useHandCursor = true; } override protected function drawLayout():void { var imagePadding:Number = getStyleValue("imagePadding") as Number; loader.move(11, 5); var w:Number = width-(imagePadding*2); var h:Number = height-imagePadding*2; if (loader.width != w && loader.height != h) { loader.setSize(w,h); } loader.drawNow(); // Force validation! } override protected function handleErrorEvent(event:IOErrorEvent):void { trace('ioError: ' + event); //dispatchEvent(event); } } } here is a simple test I did to see what happens when the data provider gets updated: import fl.controls.*; import fl.data.DataProvider; import fl.controls.listClasses.CellRenderer; stage.scaleMode = StageScaleMode.NO_SCALE; stage.align = StageAlign.TOP_LEFT; var tileList:TileList = new TileList (); tileList.move(220,40); tileList.setSize(215, 400); tileList.columnWidth = 215; tileList.rowHeight = 86; tileList.direction = ScrollBarDirection.VERTICAL; tileList.setStyle("cellRenderer", CustomImageCell); addChild(tileList); tileList.dataProvider = getRandomDP(10); setTimeout(resetDP,3000); function resetDP():void { tileList.dataProvider = getRandomDP(10); } function getRandomDP(size:int):DataProvider { var result:DataProvider = new DataProvider(); for(var i:int = 0; i HTH
