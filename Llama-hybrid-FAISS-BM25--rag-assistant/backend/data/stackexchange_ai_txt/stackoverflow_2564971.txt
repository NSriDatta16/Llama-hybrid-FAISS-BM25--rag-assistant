[site]: stackoverflow
[post_id]: 2564971
[parent_id]: 2564952
[tags]: 
You need to change: void talk() To: virtual void talk() If you want the function to be polymorphic. Also, you need to instantiate your objects as in: Animal* a = new Animal; Dog* d = new Dog; Don't forget to free them before you return: delete a; a = 0; delete d; d = 0; In practice, you will want to use a boost::shared_ptr or std::auto_ptr as in: std::auto_ptr a(new Animal); std::auto_ptr b(new Dog); The above will save you the need to call delete. Alternatively, you can use automatic storage: Animal a; Dog d; With the above, you would use a.talk() and d.talk() instead of a->talk() and d->talk() .
