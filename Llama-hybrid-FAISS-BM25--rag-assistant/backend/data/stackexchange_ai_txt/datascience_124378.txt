[site]: datascience
[post_id]: 124378
[parent_id]: 
[tags]: 
classification using simple relationships between time series data

I am looking to predict which courses are taught by which university professors at my school. More specifically, for each semester and professor I want to know the probability breakdown of which classes that they are likely to teach. I have a small dataset and a limited amount of features, but the patterns are fairly predictable: Most courses consist of an overlap of simple patterns where the professors for a class changes in a cyclic fashion. E.g. for a class, the cycle of professors may be (A,B) -> (B,C) -> (C,A) -> ... . Professors also typically have a simple cycle, e.g. a -> b -> a -> c -> a -> b for the courses {a,b,c} they teach. Another example might be that some professors only teach in the fall, etc. The features are very basic, only: year semester (fall or spring) I am looking at 'brute forcing' it with CATBoost - as I am not sure which direction to go in here. If for the past two years, a professor has taught course X every semester, I would like my model to predict that instead of if they taught a different class for 10 years before teaching course X. Which ML Model would be the best way to predict this information - and prefer more recent results?
