[site]: stackoverflow
[post_id]: 5419343
[parent_id]: 5419089
[tags]: 
the reason the results vary is because there are other things going on at the same time, such as windows or linux based tasks, other processes, you will never get an exact result, you best of running the code over a 100 iterations and then devide the result to find the average time take, and use that as your figure/ Also it would be beneficial for you to create a class that can handle this for you, this way you can use it all the time without having to write the code every time: try something like this (untested): class CodeBench { private $benches = array(); public function __construct(){} public function begin($name) { if(!isset($this->benches[$name])) { $this->benches[$name] = array(); } $this->benches[$name]['start'] = array( 'microtime' => microtime(true) /* Other information*/ ); } public function end($name) { if(!isset($this->benches[$name])) { throw new Exception("You must first declare a benchmark for " . $name); } $this->benches[$name]['end'] = array( 'microtime' => microtime() /* Other information*/ ); } public function calculate($name) { if(!isset($this->benches[$name])) { throw new Exception("You must first declare a benchmark for " . $name); } if(!isset($this->benches[$name]['end'])) { throw new Exception("You must first call an end call for " . $name); } return ($this->benches[$name]['end'] - $this->benches[$name]['start']) . 'ms' } } And then use like so: $CB = new CodeBench(); $CB->start("bench_1"); //Do work: $CB->end("bench_1"); $CB->start("bench_2"); //Do work: $CB->end("bench_2"); echo "First benchmark had taken: " . $CB->calculate("bench_1"); echo "Second benchmark had taken: " . $CB->calculate("bench_2");
