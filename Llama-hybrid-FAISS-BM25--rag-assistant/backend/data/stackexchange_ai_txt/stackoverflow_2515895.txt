[site]: stackoverflow
[post_id]: 2515895
[parent_id]: 2515580
[tags]: 
Keep array of images url and current image index. Put a BitmapField on screen. Add menu items for Next/Prev. On Next load Bitmap from incremented index url, set it to BitmapField and invalidate screen. On Prev do the same with decremented index. you can use button as well (maybe in storm) but menu is obligatory load images in separate threads (especially if they are stored in web) you can implement caching (in app memory or by saving images on device storage) some text field may be helpful (file name, type, size, dimentions etc) UPDATE For this purpose you can use ScrollChangeListener try this code: class Scr extends MainScreen implements ScrollChangeListener { static int mRowNumber = 0; public Scr() { getMainManager().setScrollListener(this); //preload some images on the start for (int i = 0; i PS the problem with this approach is you will be able to catch scroll event only if there are enough images on screen. Consider using Screen.navigationMovement(int, int, int, int) then. And don't forget to test it with trackwheel and touchscreen. Btw my opinion is that it would be better to load all images at once using some thread queue (so images will be loaded asynchronously without locking ui)
