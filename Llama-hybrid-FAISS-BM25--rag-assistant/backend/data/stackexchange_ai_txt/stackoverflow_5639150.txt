[site]: stackoverflow
[post_id]: 5639150
[parent_id]: 5632542
[tags]: 
You need DAO/Repository to get all cronExpression from your storage. I create in memory DAO @Repository public class JobEntityDao { public List findAll() { List list = new ArrayList (); JobEntity job1 = new JobEntity("0 0 12 * * ?"); JobEntity job2 = new JobEntity("0 15 10 ? * *"); JobEntity job3 = new JobEntity("0 15 10 * * ?"); list.add(job1); list.add(job2); list.add(job3); return list; } } And Component to create quartz scheduler based on your cronExpression. I call it QuartzExecutor @Service public class QuartzExecutor { private JobEntityDao jobEntityDao; @Autowired public QuartzExecutor(JobEntityDao jobEntityDao) throws ParseException, SchedulerException { this.jobEntityDao = jobEntityDao; init(); } @SuppressWarnings({ "rawtypes", "unchecked" }) private void init() throws ParseException, SchedulerException { List jobEntities = jobEntityDao.findAll(); for (JobEntity jobEntity : jobEntities) { System.out.println(jobEntity.cronExpression); RunMeTask task = new RunMeTask(); //specify your sceduler task details JobDetail job = new JobDetail(); job.setName("runMeJob"); job.setJobClass(RunMeJob.class); Map dataMap = job.getJobDataMap(); dataMap.put("runMeTask", task); //configure the scheduler time CronTrigger trigger = new CronTrigger(); trigger.setName("runMeJobTesting"); trigger.setCronExpression(jobEntity.cronExpression); //schedule it Scheduler scheduler = new StdSchedulerFactory().getScheduler(); scheduler.start(); scheduler.scheduleJob(job, trigger); } } } you can get RunMeJob and RunMeTask code from http://www.mkyong.com/java/quartz-scheduler-example/ . I Know the class design is not good, but my concern is try to solve your problem. Is this what you are looking for ?
