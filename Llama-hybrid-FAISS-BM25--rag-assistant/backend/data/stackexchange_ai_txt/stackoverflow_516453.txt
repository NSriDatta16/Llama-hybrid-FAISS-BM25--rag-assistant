[site]: stackoverflow
[post_id]: 516453
[parent_id]: 
[tags]: 
Best practices in internationalizing text with lots of markup?

I'm working on a web project that will (hopefully) be available in several languages one day (I say "hopefully" because while we only have an English language site planned today, other products of my company are multilingual and I am hoping we are successful enough to need that too). I understand that the best practice (I'm using Java, Spring MVC, and Velocity here) is to put all text that the user will see in external files, and refer to them in the UI files by name, such as: #in messages_en.properties: welcome.header = Welcome to AppName! #in the markup #springMessage("welcome.header") But, having never had to go through this process on a project myself before, I'm curious what the best way to deal with this is when you have some segments of the UI that are heavy on markup, such as: We are excited to announce that Company1 has been acquired by Division X , a fast-growing division of Company 2 , Inc. (Nasdaq: BLAH ), based in... One option I can think of would be to store this "low-level" of markup in messages.properties itself for the message - but this seems like the worst possible option. Other options that I can think of are: Store each non-markup inner fragment in messages.properties, such as acquisitionAnnounce1 , acquisitionAnnounce2 , acquisitionAnnounce3 . This seems very tedious though. Break this message into more reusable components, such as Company1.name , Company2.name , Company2.ticker , etc., as each of these is likely reused in many other messages. This would probably account for 80% of the words in this particular message. Are there any best practices for dealing with internationalizing text that is heavy with markup such as this? Do you just have to bite down and bear the pain of breaking up every piece of text? What is the best solution from any projects you've personally dealt with?
