[site]: stackoverflow
[post_id]: 3867954
[parent_id]: 3867769
[tags]: 
Beans are supposed for data storage. We are talking about Pojo Beans. If collections are not enough to handle data model the app works with, class is created that fits the needs. BEAN should be considered just an object for temporary state preservation having setters and getters that might have light additional functionality. There is nothing wrong when your application operates with a lot of beans, if you adhere to paradigms like inheritance and polymorphism. Pojo Beans also captures data model (domain model) of your application if it runs on a database ... database tables and beans corresponds to each other. That's how ORM works (persisting the state of a bean in time and the other way around). Even without ORM, Domain Access Objects layer operates well on a domain model compound of many beans. They are also the best way for view presentation. Mixing them with collections. Implementing comparators. The term "bean" started to be used in Spring framework for instance, where it is just a class that is part of application context / Spring container not a getter/setter JavaBean at all.
