[site]: datascience
[post_id]: 48518
[parent_id]: 
[tags]: 
A data frame is a tabular data structure. Usually, it contains data where rows are observations and columns are variables of various types. While data frame or dataframe is the term used for this concept in several languages (R, Apache Spark, deedle, Maple, the pandas library in Python and the DataFrames library in Julia), table is the term used in MATLAB and SQL. The sections below correspond to each language that uses this term and are aimed at the level of an audience only familiar with the given language. data.frame in R Data frames (object class data.frame ) are one of the basic tabular data structures in the R language, alongside matrices. Unlike matrices, each column can be a different data type. In terms of implementation, a data frame is a list of equal-length column vectors. Type ?data.frame for help constructing a data frame. An example: data.frame( x = letters[1:5], y = 1:5, z = (1:5) > 3 ) # x y z # 1 a 1 FALSE # 2 b 2 FALSE # 3 c 3 FALSE # 4 d 4 TRUE # 5 e 5 TRUE Related functions include is.data.frame , which tests whether an object is a data.frame ; and as.data.frame , which coerces many other data structures to data.frame (through S3 dispatch, see ?S3 ). base r data.frame s have been extended or modified to create new data structures by several R packages, including data.table and tibble . For further reading, see the paragraph on Data frames in the CRAN manual Intro to R DataFrame in Python's pandas library The pandas library in Python is the canonical tabular data framework on the SciPy stack, and the DataFrame is its two-dimensional data object. It is basically a rectangular array like a 2D numpy ndarray, but with associated indices on each axis which can be used for alignment. As in R, from an implementation perspective, columns are somewhat prioritized over rows: the DataFrame resembles a dictionary with column names as keys and Series (pandas' one-dimensional data structure) as values. After importing numpy and pandas under the usual aliases ( import numpy as np , import pandas as pd ), we can construct a DataFrame in several ways, such as passing a dictionary of column names and values: >>> pd.DataFrame({"x": list("abcde"), "y": range(1,6), "z": np.arange(1,6) > 3}) x y z 0 a 1 False 1 b 2 False 2 c 3 False 3 d 4 True 4 e 5 True DataFrame in Apache Spark A Spark DataFrame is a distributed collection of data organized into named columns. It is conceptually equivalent to a table in a relational database or a data frame in R/Python, but with richer optimizations under the hood. DataFrames can be constructed from a wide array of sources such as: structured data files, tables in Hive, external databases, or existing RDDs. ( source ) DataFrame in Maple A DataFrame is one of the basic data structures in Maple. Data frames are a list of variables, known as DataSeries, which are displayed in a rectangular grid. Every column (variable) in a DataFrame has the same length, however, each variable can have a different type, such as integer, float, string, name, boolean, etc. When printed, Data frames resemble matrices in that they are viewed as a rectangular grid, but a key difference is that the first row corresponds to the column (variable) names, and the first column corresponds to the row (individual) names. These row and columns are treated as header meta-information and are not a part of the data. Moreover, the data stored in a DataFrame can be accessed using these header names, as well as by the standard numbered index. For more details, see the Guide to DataFrames in the online Maple Programming Help.
