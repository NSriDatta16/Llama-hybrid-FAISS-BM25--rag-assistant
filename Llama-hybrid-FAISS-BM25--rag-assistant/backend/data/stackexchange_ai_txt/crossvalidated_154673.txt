[site]: crossvalidated
[post_id]: 154673
[parent_id]: 
[tags]: 
Which standard deviation to use for p-value of regression coefficients?

Matlab generates regression coefficients for vector time series models ("vgxvarx"). For a given regression coefficient, the p-value is just the area under the t-distribution beyond |t| > (t-statistic), which is easy to do, as per this answer on Matlab Central . The expression is pValue = 2 * tcdf(-abs(t), dfe). I have two questions about the conversion from t to p. The first has to do with the fact that the standard errors are described as maximum likelihood and not corrected to reflect the degrees of freedom. From Wikipedia , it seems that I would need to modify t by a factor sqrt(df/n), where n is the number of observations and df is n less the number of estimated parameters. Can anyone chime in with how advisable this is? My gut says that it boils down to whether I want an estimate of dispersion that is maximum-likelihood or reduced-bias. So I fear that there is probably no right answer, and I'm hoping that someone can dispel that fear. The second question has to do with the factor of 2 in the above expression for pValue. I think I want the factor of 2 because I'm interested in the area under the t-distribution for both regimes t |t-statistic|. The author of the post weaves in an explanation of 2 standard errors, but I suspect that this is unrelated to seeking the p-value for a specific t-statistic, especially since the value of |t| for 5% significance can depart nontrivially from 2.0 for small sample size. Is this correct? The above has also been posted to usenet groups matlab and stat . The data to explore this problem is linked to from this tutorial . The data file is located eggs.txt . Here is the code that I used to explore the model: clear variables fnameDiary = [mfilename '.out.txt']; if logical(exist(fnameDiary,'file')) diary off delete(fnameDiary) end % if diary(fnameDiary) % Also turns on diary if0mean=true % Subtracts out the mean ifminBias=false % std err normalizes by df rather than n, % where n=number of observations and df is n less the % number of parameters estimated (from vgxdisp) nMaxLag=3 %#ok clf tbChicEgg = readtable( 'eggs.txt', 'Delimiter', '\t' ); seriesNames={'chic','egg'}; varChicEgg = vgxset( 'Series', seriesNames, 'n',2 ); estVarChicEgg(nMaxLag).var = vgxset; chicEgg = table2array(tbChicEgg(:,seriesNames)); if if0mean chicEgg = bsxfun( @minus, chicEgg, mean(chicEgg) ); end chicEgg0 = chicEgg(1:nMaxLag,:); chicEgg = chicEgg(1+nMaxLag:end,:); yrs = table2array(tbChicEgg(1+nMaxLag:end,'year')); subplot(1+nMaxLag,1,1); plotyy( yrs,chicEgg(:,1) , yrs,chicEgg(:,2) ); for maxLag = 1:nMaxLag [est.spec est.stdErr est.LLF est.W] = vgxvarx( ... vgxset( varChicEgg, 'nAR',maxLag ), ... chicEgg, NaN, chicEgg0, ... 'StdErrType', 'all' ... ); fprintf('-------------------------\nmaxLag=%g\n',maxLag); estVarChicEgg(maxLag).var = est %#ok subplot(1+nMaxLag,1,1+maxLag) plotyy(yrs,est.W(:,1),yrs,est.W(:,2)) vgxdisp(est.spec,est.stdErr,'DoFAdj',ifminBias); end %-------------------------------------------------- diary off % error('Stopping before return.'); return
