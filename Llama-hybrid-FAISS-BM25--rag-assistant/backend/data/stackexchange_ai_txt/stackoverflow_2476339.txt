[site]: stackoverflow
[post_id]: 2476339
[parent_id]: 2476254
[tags]: 
Some food for thought I noticed you use id in your tag & image table and tablename_id in your tag_map table. Each his own offcourse, but I found it to be much easier if an id is named the same everywhere. I would rename the id's in tag & image to tag_id & image_id respectively. It seems your id's are character strings. I've taken the liberty to use integers in the examples. The following example uses SQL Server. It should not be to hard to adjust the SQL Statement to MySQL. Test data DECLARE @tag TABLE (id INTEGER, tag VARCHAR(32)) DECLARE @image TABLE (id INTEGER, image VARCHAR(32)) DECLARE @tag_map TABLE (image_id INTEGER, tag_id INTEGER) INSERT INTO @tag SELECT 185, 'Bear' UNION ALL SELECT 186, 'Canada' INSERT INTO @image SELECT 1, 'image1' UNION ALL SELECT 2, 'image2' INSERT INTO @tag_map SELECT 1, 185 UNION ALL SELECT 2, 185 UNION ALL SELECT 2, 186 SQL Statement SELECT t.tag , t.id , cnt = (SELECT COUNT(*) FROM @tag_map WHERE tag_id = t.id) FROM @tag_map m INNER JOIN @tag t ON t.id = m.tag_id INNER JOIN ( SELECT m.image_id FROM @tag_map m WHERE m.tag_id = 185 ) i ON i.image_id = m.image_id WHERE t.id <> 185
