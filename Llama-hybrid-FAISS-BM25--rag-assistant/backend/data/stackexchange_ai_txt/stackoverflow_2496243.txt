[site]: stackoverflow
[post_id]: 2496243
[parent_id]: 2496138
[tags]: 
Hmm, this is in part a matter of personal style, but in my opinion your approach will lead to fragile projects. In particular the concept of having a common include file means that every module now has a dependency on an amorphous blob of includes, whether they need them all or not. This can lead to very hard to debug compilation or even application errors. While it is more to type up front, in the long run it is much more maintainable to have every module include just those files it actually needs. Similar, it is more maintainable to declare the identifiers in an include explicitely marked 'extern', and write out the definitions in the implementation files. Also I would not wrap up standard functions like 'strcmp()' just because you don't like the return type, as it leads you to get used to using a dialect of C which nobody else will understand.
