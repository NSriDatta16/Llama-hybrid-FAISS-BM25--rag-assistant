[site]: stackoverflow
[post_id]: 5507445
[parent_id]: 5507364
[tags]: 
First set up an IBAction to get called when the user clicks the button. - (IBAction)buttonClicked:(id)sender { } In Interface Builder, control-drag from the NSButton object you want to fire that action to the method implementation. Now, to create a second window, you'll probably want to create a SecondWindowController class to manage it. Declare an IBOutlet to the NSWindow and hook it up in Interface Builder, just like you did for the IBAction (by control-dragging to the IBOutlet declaration). In the initializer, load the nib file that contains the window you're presenting. - (id)init { if (self = [super init]) { [NSBundle loadNibNamed:@"DubBouncerConversionProgressWindow" owner:self]; } return self; } Then, define a method to present the window by calling orderFront: on it. - (void)displayWindow { if (![progressWindow isVisible]) { [progressWindow setIsVisible:YES]; [progressWindow orderFront:nil]; } } Now, when the user clicks the button you can call -displayWindow on an instance of SecondViewController. - (IBAction)buttonClicked:(id)sender { [mySecondViewController displayWindow]; } Here's a full picture of what's going on: FirstViewController.h @interface FirstViewController : NSObject { SecondViewController *mySecondViewController; } - (IBAction)buttonClicked:(id)sender; @end FirstViewController.m @implementation FirstViewController - (IBAction)buttonClicked:(id)sender { if (!mySecondViewController) { // If the second view controller doesn't exist yet, make it! mySecondViewController = [[MySecondViewController alloc] init]; } [mySecondViewController displayWindow]; } @end SecondViewController.h @interface SecondViewController : NSObject { IBOutlet NSWindow *progressWindow; } - (void)displayWindow; @end SecondViewController.m @implementation SecondViewController - (id)init { if (self = [super init]) { [NSBundle loadNibNamed:@"DubBouncerConversionProgressWindow" owner:self]; } return self; } - (void)displayWindow { if (![progressWindow isVisible]) { [progressWindow setIsVisible:YES]; [progressWindow orderFront:nil]; } } @end
