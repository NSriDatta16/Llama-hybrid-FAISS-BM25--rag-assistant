[site]: datascience
[post_id]: 122717
[parent_id]: 
[tags]: 
Retraining a TFlite Model for Fall Detection on Smartphone Accelerometer Data

I have developed a CNN model for Fall Detection using Keras and converted it to a TFlite(TensorFlow Lite) model for integration into an Android app. The app allows users to collect samples, which can be utilized for retraining the model to personalize and improve its performance. I am seeking guidance on the appropriate approach for retraining. The current model sometimes misclassifies running and jumping into fall. I was thinking to fine-tune it from new samples collected by the users of the app. I want to know what's the correct approach to solve this problem. How many new samples are sufficient for retraining? What should be the frequency of model updates? How should I handle the number of epochs and learning rate? The original training dataset comprised around 1000 fall samples and 8000 "not-fall" samples. I conducted an experiment with 20 fall and 20 not-fall samples, training the baseline model for 20 epochs. However, no improvement was observed in the performance of the updated model. I aim to enhance my model's capability to accurately differentiate between Running/Jumping activities and Fall events. Please provide suggestions.
