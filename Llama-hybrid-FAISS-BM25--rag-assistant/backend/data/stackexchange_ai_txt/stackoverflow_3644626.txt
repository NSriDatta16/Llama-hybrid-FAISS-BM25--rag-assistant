[site]: stackoverflow
[post_id]: 3644626
[parent_id]: 3610949
[tags]: 
As stated you can't set the mouse position with Javascript. Since you asked about implementing this on mousedown , however, I assume the user is dragging something around on screen. So you could have the element they are dragging show this behavior. You need two elements to act as regions, one where the target can be freely dragged and another to define the size of the boundary. I'd do it with jQuery to shorten up the code but basically you'd have something like this. (Untested code) HTML: CSS: .borderLand {position: relative; width: 110px; height: 110px;} .freeZone {position: relative; top: 10px; left:10px; height: 100px; width: 100px;} JS: I can't write the full code off the top of my head but the algorithm would be something like onmousedown{ check for click location if it's over the draggable (watch for bubbling) begin dragging, set dragging flag } onmouseup{ clear dragging flag if it's set } borderland onmouseover{ if dragging, stop the movement of the draggable (watch for bubbling here too) } borderland onmouseout{ start dragging again (if they move back in or out it doesn't matter, you want to drag) } Sorry if you need more detail, but doing this in plain JS would be a little lengthy and I'm not sure how much help you need.
