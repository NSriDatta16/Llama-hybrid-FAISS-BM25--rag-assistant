[site]: stackoverflow
[post_id]: 3826623
[parent_id]: 3736111
[tags]: 
The guys are right... If it's not too late, try this: Open your “[your database].xcdatamodel” file. Then (assume you are using Xcode), go to your main menu. Select Design > Data Model > Add Model Version. This creates a new file, in our case, “[your database] 2.xcdatamodel": Now go to Design > Data Model > Set Current Version. Doing this tells Xcode that this is the database schema that you'll be using. Now make whatever database schema changes you want. Now's probably a good time to make any code changes where your database schema change has been directly effected. Now compile your program. This time it should load. I encountered the same trouble. This is the first time I've actually read the IPhone Development Docs. I had to really pay attention. Now I'm all set. I actually chose lightweight migration. This code was hijacked straight from one (or several) of Apple's example programs (which often has bugs, just so you'll know... :-/ ) - (NSPersistentStoreCoordinator *)persistentStoreCoordinator { if (persistentStoreCoordinator != nil) { return persistentStoreCoordinator; } NSURL *storeUrl = [NSURL fileURLWithPath: [[self applicationDocumentsDirectory] stringByAppendingPathComponent:DATABASENAME]]; NSError *error; persistentStoreCoordinator = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel: [self managedObjectModel]]; // Allow inferred migration from the original version of the application. NSDictionary *options = [NSDictionary dictionaryWithObjectsAndKeys: [NSNumber numberWithBool:YES], NSMigratePersistentStoresAutomaticallyOption, [NSNumber numberWithBool:YES], NSInferMappingModelAutomaticallyOption, nil]; //ATTENTION: YOU WERE CRASHING HERE... if (![persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeUrl options:options error:&error]) { // Handle the error. NSLog(@"WTF??? FAILED to create automatic lightweight migration. Error[%@]", error); }
