[site]: stackoverflow
[post_id]: 3621325
[parent_id]: 3319950
[tags]: 
What you're actually doing when formatting your way is transforming your XML (a DOM Node) using a so called "identity" transformation (that's what you get from an empty Transformer()). What source type you specify (DOMSource or StreamSource) does not really matter as XSLT needs your XML in memory anyway (which means you end up building DOM anyway). It's just not possible to apply XSLT to the XML data streaming through as your XPath (in general) can wander whichever way it wants on the source tree. With SAX input you can't reach what you haven't looked at, and then what you've looked at you don't retain in memory or you become DOM. You already have your XML in memory as a DOM Node. Identity transformation is one way to get the output stream out of it and there's not much you can do about how much memory it will consume (maybe try different transformer implementations?). I am also not sure what parser implementation you have underneath, but you can look if it has something like this - http://xerces.apache.org/xerces-j/apiDocs/org/apache/xml/serialize/XMLSerializer.html . This guy will simply travel down the elements tree and print them out. It should have no memory overhead as what it does is pretty brutal. And if you had a SAX input it would print it out the same way (that is without building an in-memory presentation ready for XSLT transformation). The only caveat of going this way is that it's a specific API, not part of JAXP.
