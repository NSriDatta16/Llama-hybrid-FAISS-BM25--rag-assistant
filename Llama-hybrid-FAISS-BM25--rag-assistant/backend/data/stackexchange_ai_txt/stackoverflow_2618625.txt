[site]: stackoverflow
[post_id]: 2618625
[parent_id]: 
[tags]: 
error: expected constructor, destructor, or type conversion before '(' token

include/TestBullet.h:12: error: expected constructor, destructor, or type conver sion before '(' token I hate C++ error messages... lol ^^ Basically, I'm following what was written in this post to try to create a factory class for bullets so they can be instantiated from a string, which will be parsed from an xml file, because I don't want to have a function with a switch for all of the classes because that looks ugly. Here is my TestBullet.h: #pragma once #include "Bullet.h" #include "BulletFactory.h" class TestBullet : public Bullet { public: void init(BulletData& bulletData); void update(); }; REGISTER_BULLET(TestBullet); And my BulletFactory.h: #pragma once #include #include #include "Bullet.h" #define REGISTER_BULLET(NAME) BulletFactory::reg (#NAME) #define REGISTER_BULLET_ALT(NAME, CLASS) BulletFactory::reg (NAME) template Bullet * create() { return new T; } struct BulletFactory { typedef std::map bulletMapType; static bulletMapType map; static Bullet * createInstance(char* s) { std::string str(s); bulletMapType::iterator it = map.find(str); if(it == map.end()) return 0; return it->second(); } template static void reg(std::string& s) { map.insert(std::make_pair(s, &create )); } }; Thanks in advance. And unrelated to the error, but is there a way to let Bullet include BulletFactory without creating tons of errors (because of circular inclusion)? This way I would be able to remove #include "BulletFactory.h" from the top of all of the bullet subclasses.
