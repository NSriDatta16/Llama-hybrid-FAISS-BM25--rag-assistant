[site]: datascience
[post_id]: 97226
[parent_id]: 96871
[tags]: 
The biggest challenge is probably how to measure the performance of your model. binary classification you can use Accuracy or AUC for example - but in multi-class it would be harder. Measuring error in Recommendation systems is tricky in general. Different from typical classification problems. Predicting an absolutely amazing item to be shitty has a different cost/value than presenting a shitty item as diamond to users. Specially if your items are hierarchically connected. For example you have the following objects, A: toilet paper , B: kitchen paper , C: beer . If the model predict A to be B as bad as predicting A to be C ? So one has to make a cost-function of X where i and j are the items and the value of x_ij is what is the score of predicting i to be j . 1.5) Interpretable models: It is more complicated to investigate which feature helps to identify which class in a multi-class setup. However this is not the case for binary classification. imbalanced data: you have to make sure the model is 'fair' and has seen enough. In both type of modeling. This is probably more severe in multi-class. You would have to make tons of figures and table to explain where your model sucks and for example in what scenarios it recognizes A to be B or C. In other words you would deal with a nxn matrix of error. This is not a headache in binary classification as you can imagine. There is subtle differences in two approaches you have put their link. DNN works with user queries which is not necessarily structured. This can take into account even the time for example which they also mention it. For example, if you feel users are spending time on your page you can recommend them sth. Perhaps they are searching for a specific information which is different from the classic Netflix recommender system (user-item matrix). As boring as this may sound - part of the decision should come from business. Whether to contact users and 'recommend them something' to avoid churn perhaps has a different value than 'up selling'. the features to model each can also be very different. In the first scenario for example one should use the how long the user has been with the platform however this feature most likely is irrelevant when it comes to up selling. recommendation system is an active field. There is an annual conference called RecSys https://recsys.acm.org/ where companies/universities present their latest work. There has been tons of different methods out there and there is no one solution ! After 16 years of research Netflix has improved the recommendation system recall only 4%. So be prepared for a narrow range of performance improvement. UPDATE One way to decide whether to go with binary classification or multi-class is leveraging PCA (or any other dimension reduction method) and color the points with respect to the class. So if you go with binary, you would end up with a two color plot and if you go multiple class regression you would have multiple colors. Visually you can inspect in which set up you get a better separation.
