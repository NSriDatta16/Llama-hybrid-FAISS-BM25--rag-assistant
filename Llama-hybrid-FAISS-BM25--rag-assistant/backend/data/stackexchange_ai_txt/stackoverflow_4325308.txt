[site]: stackoverflow
[post_id]: 4325308
[parent_id]: 4325216
[tags]: 
find . | grep -v "excluded files criteria" | xargs rm This will list all files in current directory, then list all those that don't match your criteria (beware of it matching directory names) and then remove them. Update : based on your edit, if you really want to delete everything from current directory except files you listed, this can be used: mkdir /tmp_backup && mv textfile.txt backup.tar.gz script.php database.sql info.txt /tmp_backup/ && rm -r && mv /tmp_backup/* . && rmdir /tmp_backup It will create a backup directory /tmp_backup (you've got root privileges, right?), move files you listed to that directory, delete recursively everything in current directory (you know that you're in the right directory, do you?), move back to current directory everything from /tmp_backup and finally, delete /tmp_backup . I choose the backup directory to be in root, because if you're trying to delete everything recursively from root, your system will have big problems. Surely there are more elegant ways to do this, but this one is pretty straightforward.
