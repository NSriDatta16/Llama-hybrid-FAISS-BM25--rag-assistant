[site]: stackoverflow
[post_id]: 1193053
[parent_id]: 1192718
[tags]: 
In XSLT 1.0, your best bet is to use a two-step approach. tokenize the input from comma-delimited into separate elements group on the separate elements Step #1 tokenizes the input: produces: USA Australia Canada USA Australia Australia Belgium Croatia Step #2 applies Muenchian grouping to the intermediary result: &#9; &#10; produces the wanted result (formatting is left as an exercise for the reader): Australia 3 USA 2 Belgium 1 Canada 1 Croatia 1 The process can be done in a single transformation, with the help of the node-set() extension function. However, you would lose the ability to use an XSL key, which might result in slower performance for large inputs. YMMV. The necessary modification of step #1 would be (using the MSXSL extensions, other vendors differ in the namespace declaration, which reduces portability of this approach): s as a result-tree-fragment --> &#9; &#10; With this approach, a separate step #2 becomes unnecessary. The result is the same as above. For small inputs, the difference in performance will not be noticeable.
