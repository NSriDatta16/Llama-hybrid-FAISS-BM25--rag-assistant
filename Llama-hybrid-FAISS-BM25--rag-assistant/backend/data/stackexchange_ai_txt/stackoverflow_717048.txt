[site]: stackoverflow
[post_id]: 717048
[parent_id]: 717003
[tags]: 
If you have a saw and you need to pound in a nail, don't use the saw. Get a hammer. (folk saying) In other words, if you want a data store, use a data-base, not a markup language. PHP has good support for various database systems via PDO ; for small data sets, you can use SQLite, which doesn't need a server (it is stored in a normal file). Later, should you need to switch to a full-featured database, it is quite simple. To answer your questions: Viable solution - no, definitely not. XML has its purposes, but simulating a database is not one, not even for a small data set. With XML, you're shuffling strings around, all the time. That might be just bearable on read, but is a real nightmare on write (slow to parse,large memory footprint, etc.). While you could subvert XML to work as a data store, it is simply the wrong tool for the job. No (everything will take forever, if you don't run out of memory before that). No, for many reasons (locking, re-writing the whole XML-string/file, not to mention memory again). 5a. SQLite was designed with very small and simple databases in mind - simple, no server dependencies (the db is contained in one file). As @Robert Gould points out in a comment , it doesn't scale for larger applications, but then 5b. for a medium to large data store, consider a relational database (and it is usually easier to switch databases than to switch from XML to a database).
