[site]: stackoverflow
[post_id]: 762609
[parent_id]: 549316
[tags]: 
In theory XML would be quick good because of validation and what not. In practice you can't client side validate against a DTD or schema reasonable (or in most cases at all). Try it you'll see. XML also suffers from its verbosity and consumption client-side. Unless you plan on using XSLT or something and directly consuming the received packet you have to chop the data up with the DOM like made. Finally XML cannot reasonable looked at until it is complete (client-side at least) so you cannot do partial inspection. Though to be fair JSON will have challenges there as well depending on how it is structured. Given the environment of consumption (JavaScript mostly) JSON has the obvious leg up. There is a massive discussion of this choice plus other things like YAML, CSV, base64 encoded data, HTML fragments, etc. in Chapter 4 of Ajax: The Complete Reference ( http://ajaxref.com ) which is just on data types. Examples prove disprove ease of handling particularly in the lesser known cases. If I had to pick one JSON would be it but frankly for some uses of Ajax small HTML fragments (since it is slap and go) is the way to do it.
