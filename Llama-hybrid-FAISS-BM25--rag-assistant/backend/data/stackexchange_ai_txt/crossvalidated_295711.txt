[site]: crossvalidated
[post_id]: 295711
[parent_id]: 
[tags]: 
Is there a way to handle associative arrays in machine learning without casting to a fixed index?

I have a (very large) data set that I'd like to set up a categorization algorithm for. The data has the following form: x: Associative array of data in the form [{key: String, r: Number}] y: ID code (String) -> **Intended output code** z: score from experimental testing (Number) I'd really like to be able to pump all of this data into a model that allows me to input a new x with any set of [{key, r}] and return a y value that maximizes the z from experimental testing. The issue I'm running into is that it's difficult to handle the format of x since it seems that most tech like tensorflow or Keras works best with direct matrix multiplication. Short of creating an indexed array with a fixed position for each key, and fitting all of my data into that format, is there any way I can handle these sorts of associations indirectly? Edit for Clarity: I have inputs of the form: topics:[ [{ key: String, r: Number, subtopics:[{ key: String, r: Number, subtopics:[{...}] }]] and I'd like each topic to only be compared against matching keys from the potential output classes. I believe I'm correct in that it should be possible to generate an output class that can match partially in this way, but I just can't wrap my head around how to structure the math. Thoughts and prayers also appreciated ;)
