[site]: stackoverflow
[post_id]: 3908941
[parent_id]: 3497699
[tags]: 
I wrote a simple library to allow developers to use LINQ on CSV files. Here is my blog post about it: http://procbits.com/2010/10/11/using-linq-with-csv-files/ In your case, you would have to change your header string to look like this: Plant,Material,DensityLbft3,StorageLocation And then you could parse the file like this: var linqCSV = new CsvToXml("csvfile", true); linqCsv.TextQualifier = null; linqCsv.ColumnTypes.Add("Plant", typeof(string)); linqCsv.ColumnTypes.Add("Material", typeof(int)); linqCsv.ColumnTypes.Add("DensityLbft3", typeof(double)); linqCsv.ColumnTypes.Add("StorageLocation", typeof(int)); linqCsv.Convert(); You could then use LINQ like this: var items = from item in linqCsv.DynamicRecords where item.Plant == "Fred" && item.DensityLbft3 >= 62.6 orderby item.StorageLocation select item; Hope that helps or works for you.
