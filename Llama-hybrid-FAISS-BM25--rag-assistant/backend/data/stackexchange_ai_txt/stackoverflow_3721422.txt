[site]: stackoverflow
[post_id]: 3721422
[parent_id]: 
[tags]: 
Looking for a good 64 bit hash for file paths in UTF16

I have a Unicode / UTF-16 encoded path . the path delimiters is U+005C '\'. The paths are null-terminated root relative windows file system paths, e.g. "\windows\system32\drivers\myDriver32.sys" I want to hash this path into a 64-bit unsigned integer. It does not need to be "cryptographically sound" . The hashes should be case insensitive , but able to handle non-ascii letters. Obviously, the hash also should scatter well. There are some ideas that I had though of: A) Using the windows file identifier as a "hash". In my case i do want the hash to change if the file gets moved, so this is not an option. B) Just use a regular sting hash: hash += prime * hash + codepoint for the whole string. I do have the feeling that the fact that the path consists of "segements" (folder names and the final file name) can be leveraged. To sum up the needs: 1) 64bit hash 2) good distribution / few collisions for file system paths. 3) efficient 4) does not need to be secure 5) case insensitive
