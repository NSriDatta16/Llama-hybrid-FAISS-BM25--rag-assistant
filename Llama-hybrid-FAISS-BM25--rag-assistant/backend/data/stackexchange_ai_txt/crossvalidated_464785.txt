[site]: crossvalidated
[post_id]: 464785
[parent_id]: 458219
[tags]: 
There is probably nothing wrong with your code, but it's hard to tell as it is not complete and reproducible. Age has a much smaller influence on the price than area: For the largest house, the price, if it were new, would be around 170,000. If it were 50 years old, the price would still be around 150,000. You can see it better if you use a diverging color map: This image was generated by the following code: import numpy as np import matplotlib.pyplot as plt c = 20595. area = 39.28 age = -402.5 step = 50 x_range = 3800 y_range = 50 dy, dx = y_range/step, x_range/step x, y = np.mgrid[slice(0, x_range + dx, dx), slice(0, y_range + dy, dy)] z = c + x*area + y*age z = z[:-1, :-1] z_min, z_max = 0, np.abs(z).max() fig, ax = plt.subplots() qm = ax.pcolormesh(x, y, z, cmap='RdBu', vmin=z_min, vmax=z_max) ax.set_title('Prices') fig.colorbar(qm, ax=ax) plt.show() Answer: As long as your predictor terms are all linear, the boundary is bound to be "boring". If you want an "interesting" boundary, you need to introduce non-linearities, like z = 1e5*(np.sin(2*x/x_range) + np.cos(2*y/y_range)+1)**2 z = z[:-1, :-1] z_min, z_max = 0, np.abs(z).max() fig, ax = plt.subplots() qm = ax.pcolormesh(x, y, z, cmap='RdBu', vmin=z_min, vmax=z_max) ax.set_title('Prices') fig.colorbar(qm, ax=ax) plt.show() The image you quote in your question likely depicts the prediction by a non-linear model, perhaps random forest or neural network.
