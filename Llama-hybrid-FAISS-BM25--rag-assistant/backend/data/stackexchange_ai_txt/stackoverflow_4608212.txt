[site]: stackoverflow
[post_id]: 4608212
[parent_id]: 4606394
[tags]: 
Sproutcore is a javascript application framework. It is fully MVC with a rich key-value observing/binding infrastructure that reduces the amount of plumbing code you need to write, if you use it correctly. It supports most of your requirements: "Solid component architecture (including lifecycle events)" -- every view has a bunch of lifecycle events. "Extensible" -- Sproutcore supports mixins, and has its own 'convert prototypal inheritance' to classical inheritance stuff so you feel like you are creating classes in JS. "Layout managers" -- You lay out your own views, where they are, how big they are. There are SplitViews which you can resize, and nest, but this might be one area where SC does not meet your requirements (although you can easily implement view resizing via observing) "Browser agnostic" -- it is pretty browser agnostic, like any other JS framework will be. "Support for data binding" -- very extensive binding infrastructure. If you bind a view field to a model field, it will update when the model is changed. "Support for complex Skinning" -- skinned via css like any other web app if you don't like the default theme. "Unit testing" -- SC comes with a qunit test harness in place. When you use the SC command line tool to create a class (be it an M, a V, or a C) the tool creates a test stub for you. 'HTML5' -- sort of a nebulous concept to start. SC definitely supports generating an html5 app manifest in the build tools. There are frameworks available for writing to browser local storage. I think more html5 capabilities will come online in the near future. The NPR app on chrome app store and this sudoku app are both SC apps.
