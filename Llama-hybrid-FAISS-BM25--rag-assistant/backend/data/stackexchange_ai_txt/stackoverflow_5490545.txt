[site]: stackoverflow
[post_id]: 5490545
[parent_id]: 5488617
[tags]: 
PHP is a very different beast than Ruby. PHP does not get even close to being as object oriented as Ruby is, and is a pretty big brain bender at first. That said, I think that a solid programmer with a good grasp of generic syntax should be able to fairly easily learn the new type of syntax. $a = new A(); isn't that much different than a = A.new As far as Cake goes, vs Rails, that's another whole monster. Development with rails is fast. Very fast. But when you're converting a whole application on the fly, you'll need someone that can really break down its components, getting in to the nuts and bolts, quickly. So you can put together a skeleton for everyone to 'fill in'. At least, that's probably how I would approach it (though usually I would wait for a 'scheduled' re-write of an application to move to a completely new language). Having some very experienced RoR developers on the team (at least during the interim) would probably significantly speed up the process, and get your team working as fast as possible. It may cost you a bit more to get up to speed, but it would greatly enhance productivity. And while I can't speak to the experience that duddle (different answer) has had, I know from experience that once you start writing in Ruby and get the gist of Rails, getting stuff implemented takes a lot less time than in PHP (YMMV). Though some of the ways that things are done in Rails flies in the face of conventional development practices (ActiveRecords, for instance, completely change the way that most people interact with databases). Finally, the RoR community is massive compared to just about any other framework based community. Which is pretty slick in and of itself, and lets you really leverage a lot of different bits and pieces that just don't exist in the PHP community. Hope this helps!
