[site]: stackoverflow
[post_id]: 4881978
[parent_id]: 4881784
[tags]: 
As support for other answers, this code: "Test".upcase.reverse.next.swapcase ...is almost exactly the same as... a = "Test" b = a.upcase c = b.reverse d = c.next e = d.swapcase ....except that my code above has extra variables left over pointing to the intermediary results, whereas the original leaves no extra references around. If we do this with your code: x = MyClass.new # x is an instance of MyClass y = x.a # y is 1, the last expression in the a method z = y.b # Error: Fixnums have no method named 'b' Using Ruby 1.9's tap method, we can even make this more explicit: irb> "Test".upcase.tap{|o| p o}.reverse.tap{|o| p o}.next.tap{|o| p o}.swapcase #=> "TEST" #=> "TSET" #=> "TSEU" => "tseu" irb> class MyClass irb> def a irb> @b = 1 irb> end irb> def b irb> @b += 2 irb> end irb> end => nil irb(main):011:0> x = MyClass.new => # irb> x.a.tap{|o| p o}.b.tap{|o| p o}.c #=> 1 NoMethodError: undefined method `b' for 1:Fixnum from (irb):12 from /usr/local/bin/irb:12:in ` '
