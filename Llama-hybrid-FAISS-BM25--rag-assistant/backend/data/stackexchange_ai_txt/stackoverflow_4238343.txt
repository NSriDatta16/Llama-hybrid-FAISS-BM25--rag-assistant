[site]: stackoverflow
[post_id]: 4238343
[parent_id]: 4237047
[tags]: 
In your case for 3 DropDownChoices you will need 3 models and all of them need to represent lists which provide choices. You need nested maps to simulate their relationships and later for retrieval, e.g: Map >> cars; //fill data IModel > makeChoices = new AbstractReadOnlyModel >() { @Override public List getObject() { Set keys = cars.keySet(); List list = new ArrayList (keys); return list; } }; IModel > modelChoices = new AbstractReadOnlyModel >() { @Override public List getObject() { Map > models = cars.get(selectedMake); if (models == null) { return Collections.emptyList(); } else { List list = new ArrayList (models.keySet()); return list; } } }; IModel > yearChoices = new AbstractReadOnlyModel >() { @Override public List getObject() { Map > models = cars.get(selectedMake); if (models == null) { return Collections.emptyList(); } else { return models.get(selectedModel); } } };
