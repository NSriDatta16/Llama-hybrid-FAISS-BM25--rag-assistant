[site]: stackoverflow
[post_id]: 4032287
[parent_id]: 3690835
[tags]: 
You can do that, but modifying the domain model to get around a limitation of NHibernate is painful to the soul. It's possible to query value collections with HQL, but ICriteria is really handy for constructing queries with logic. The only way I know how to query value collections using ICriteria is with custom SQL. This is painful also, and ties your code to your database (!), but to me it's the lesser of the three evils. My rationale is that ICriteria will eventually allow this sort of query and the pain can be refactored out later. The trick is to use a subquery in the custom SQL so that a join to the collection table is possible. Using a table alias that won't step on NHibernate aliases is also a good idea (in this case custom_sql_t_v). And note the {alias} and ? placeholders which NHibernate will swap out. Here's an example based on the assumption your Tweet class is mapped something like this... Here's the modified query using T-SQL (i.e. Microsoft SQL Server)... IList tweets = Session.CreateCriteria () .SetProjection(Projections.ProjectionList() .Add(Projections.Id(), "Id") .Add(Projections.Property("UserName"), "UserName") .Add(Projections.Property("Message"), "Message") .Add(Projections.Conditional( Expression.Sql( "EXISTS (SELECT 1 FROM [Tweet_Votes] custom_sql_t_v WHERE custom_sql_t_v.[Tweet] = {alias}.[Id] AND custom_sql_t_v.[Vote] = ?)", userId, NHibernateUtil.Int64), Projections.Constant(true), Projections.Constant(false)), "DidVote")) .SetResultTransformer(Transformers.AliasToBean ()) .List (); The final SQL generated by NHibernate (I used NHibernate 2.1.2.4000) looks like this... exec sp_executesql N'SELECT this_.Id as y0_, this_.UserName as y1_, this_.Message as y2_, (case when EXISTS (SELECT 1 FROM [Tweet_Votes] custom_sql_t_v WHERE custom_sql_t_v.[Tweet] = this_.[Id] AND custom_sql_t_v.[Vote] = @p0) then @p1 else @p2 end) as y3_ FROM Tweet this_',N'@p0 bigint,@p1 char(1),@p2 char(1)',@p0=123,@p1='Y',@p2='N' The upside of all this is that doing a LIKE against a string collection is possible -- something that I don't think can be done with HQL.
