[site]: stackoverflow
[post_id]: 3744654
[parent_id]: 3744597
[tags]: 
Thank you for your help. With your help I can solve my problem. The solution is like this, //FirstWindow.h #pragma once using namespace System; using namespace System::Windows; using namespace System::Windows::Controls; ref class Functor; ref class FirstWindow : Window { Canvas^ maincanvas; Button^ addbutton1; Button^ addbutton2; Functor^ pFunctor; public: FirstWindow(void); void InitControls(void); void MyFunction( int x, int y ); }; //FirstWindow.cpp #include "FirstWindow.h" #include "Functor.h" FirstWindow::FirstWindow(void) { Title = "First Avalon App"; Width = 400; Height = 400; ResizeMode = System::Windows::ResizeMode::NoResize; InitControls(); } void FirstWindow::InitControls(void) { addbutton1 = gcnew Button(); addbutton1->Width = 80; addbutton1->Height = 25; addbutton1->Content = "Add"; pFunctor = gcnew Functor(this, 10, 20); addbutton1->Click += gcnew RoutedEventHandler( pFunctor, &Functor::Handler); Canvas::SetTop(addbutton1, 45); Canvas::SetLeft(addbutton1, 200); pFunctor = gcnew Functor(this, 100, 200); addbutton2 = gcnew Button(); addbutton2->Width = 80; addbutton2->Height = 25; addbutton2->Content = "Add"; addbutton2->Click += gcnew RoutedEventHandler(pFunctor, &Functor::Handler); Canvas::SetTop(addbutton2, 85); Canvas::SetLeft(addbutton2, 200); maincanvas = gcnew Canvas(); maincanvas->Children->Add(addbutton1); maincanvas->Children->Add(addbutton2); Content = maincanvas; } void FirstWindow::MyFunction( int x, int y ) { MessageBox::Show("This function is call by Button Click with values " + x.ToString() + " , " + y.ToString() ); } //Functor.h #pragma once using namespace System; using namespace System::Windows; using namespace System::Windows::Controls; ref class FirstWindow; private ref class Functor { public: Functor(FirstWindow^ pFirstWindow, int pFirstArg, int pSecArg); // This is what we will use as the handler method void Handler(Object ^ sender, RoutedEventArgs ^ e); private: int m_pFirstArg; int m_pSecArg; FirstWindow^ m_pFirstWindow; }; //Functor.cpp #include "Functor.h" #include "FirstWindow.h" Functor::Functor(FirstWindow^ pFirstWindow, int pFirstArg, int pSecArg) : m_pFirstWindow( pFirstWindow ), m_pFirstArg(pFirstArg), m_pSecArg( pSecArg ) { } void Functor::Handler(Object ^ sender, RoutedEventArgs ^ e) { if ( m_pFirstWindow ) m_pFirstWindow->MyFunction(m_pFirstArg, m_pSecArg ); } Now when we click on button one, then the application call the function "MyFunction" with value 10,20 and when we click on button 2 then the same function "MyFunction" with value 100,200. Thank you for your help. Sabeesh
