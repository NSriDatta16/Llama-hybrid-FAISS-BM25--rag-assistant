[site]: stackoverflow
[post_id]: 1093675
[parent_id]: 1093595
[tags]: 
I don't view this as an either/or proposition. Different kinds of validation are more appropriate in different areas. Typically I handle content validation in my data layer -- field lengths, null/not null, formats, values, etc. -- and relational validation -- foreign keys, uniqueness, etc. -- in the database. Generally, I would say take the pragmatic approach and do the validation where it makes the most sense and/or is easily accomplished. Note that I will also do as much validation client-side as is easily possible. In a web app, I'd prefer to not get a post back unless I'm reasonably certain that it contains valid data -- for the user's sake. This doesn't remove the need to do validation on the server, but it can make for a better user experience since the user doesn't have to wait for a request cycle to learn that they missed a field.
