[site]: stackoverflow
[post_id]: 3564888
[parent_id]: 2325091
[tags]: 
People discussing about MVVM have made it appear too theoretical and flex has really different architecture all together that makes MVVM little complicated for people coming from flex. Let me give you very simple example, In Flex, mostly we create one MXML for UI Component, and we have our bindable model and we mostly write our code in the events of UI Component as well as non UI Components. For example, WebService, HttpService etc, they are not UI component but they still can be inside the MXML and they can be accessed easily within the MXML code. So basically you can have, Model + View + Controller in one MXML file organized very easily. In Silverlight, in XAML, you can only have UI elements as children of page/user control you are modifying. There are limitations, XAML lets you put your non UI element only in resources, and typed variable of the resource you have added is not easily accessible within the code behind of XAML, you have to call find resource to access the code. To make things easier, MVVM forces you to define different files. You have one file, that is your model itself, for example Customer.cs You have another file, that is your ViewModel, which basically is combination of Model + Commands. And you write your Controller code in Command's Executed event. You have another file, that is your View, view basically binds to all properties of ViewModel which are either Model or Commands.
