[site]: stackoverflow
[post_id]: 5433991
[parent_id]: 
[tags]: 
Eclipse webtools project (WTP) and its performance / quality

Our company is using eclipse since several years now (we are using WTP since release 0.7) I am currently evaluating eclipse 3.6.2 with WTP 3.2.3 which should replace eclipse 3.4.2 with WTP 3.0.4 as being our main IDE. And I have to say that once again I am quite disappointed in concerns of performance: WTP 3.2.3 seems to be much slower than 3.0.4. In fact I am really wondering why WTP gets slower with each release. One of our applications (dynamic web project) contain about 4000 java classes and 700 jsps/jsp fragments . We only need basic WTP functionality for developing jsps, xmls and xsd. We don't need high sophistic features like Dali (should JPA tools really covered by a webtools project ?), Libra or a visual xml editor in the first place. Another interesting point is that WTP seems to slow down the whole IDE . SWT is non-reponsive for some fraction of seconds, cpu usage is very high (especially after a built took place - if you look at the system jobs, several jsp/javascript indexers are doing work for some minutes, even if all WTP build validators have been disabled), opening new files are slower, navigating through the project etc. This can be especially seen on older machines which do contains only a single core cpu. The worst thing is that I've got the feeling that the WTP dev team does not care much about performance (e.g. have a look at the http://wiki.eclipse.org/WTP_Performance_Tests page - last update took place in 2008). Bug reports and Newsgroup posts regarding to performance of basic features (e.g. jsp editing/validating) are often ignored or closed after some time, some examples: here , here , and here . Quo vadis, WTP? Please don't get me wrong: I don't want to blame WTP. In fact I believe that WTP is a good open-source project developed by a talented team. But obviously the project has a problem with its quality assurance , especially in terms of performance which affects usability and user acceptance. I just want to point out that the team should focus on the things which are essential to most of the users in the first place and afterwards work on implementing super-duper-features. My Questions What are your experiences with WTP, especially the most recent releases? Can you confirm or disprove my observations? Are there better alternatives? Did you switch from or to WTP and why? Do you have some best practices to speed it up, especially for upper-mid-sized like ours? UPDATE I'd like to make an update on this question to reflect the current answers and to sum up the current results: Many users complain about more or less on the same issues so I see those issues as confirmed. BTW, this question is also mentioned on a news post on theserverside.com with additional comments. The responsible WTP project lead, nitind, made a notable post on the current situation of WTP, which I like to cite: "The simple fact is that we don't spend much time on performance tests because we lack resources for doing that." "Of course we'd like to be proactive about it rather than reactive, but we tend to allocate our time to functional problems first." So this question turns a little bit into some kind of an open letter from the community to the WTP team: Dear WTP team, it's obvious that WTP is suffering from major quality/performance issues which you try to play down or to ignore. Please invest some time to improve the current situation at the cost of new features and do everything what's required to solve the current problems. E.g. revive the performance team, do some regression tests between previous releases or ask the community for (precise defined) help. I am sure that they are enough people willing and able to help here. If you like, do some kind of poll to get a feeling what should be the most important scopes of future's WTP releases. Please, please, listen to your community.
