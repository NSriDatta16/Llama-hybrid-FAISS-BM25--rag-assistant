[site]: stackoverflow
[post_id]: 2740552
[parent_id]: 43500
[tags]: 
.NET Lacks any powerful tools for comparing collections. I've developed a simple solution you can find at the link below: http://robertbouillon.com/2010/04/29/comparing-collections-in-net/ This will perform an equality comparison regardless of order: var list1 = new[] { "Bill", "Bob", "Sally" }; var list2 = new[] { "Bob", "Bill", "Sally" }; bool isequal = list1.Compare(list2).IsSame; This will check to see if items were added / removed: var list1 = new[] { "Billy", "Bob" }; var list2 = new[] { "Bob", "Sally" }; var diff = list1.Compare(list2); var onlyinlist1 = diff.Removed; //Billy var onlyinlist2 = diff.Added; //Sally var inbothlists = diff.Equal; //Bob This will see what items in the dictionary changed: var original = new Dictionary () { { 1, "a" }, { 2, "b" } }; var changed = new Dictionary () { { 1, "aaa" }, { 2, "b" } }; var diff = original.Compare(changed, (x, y) => x.Value == y.Value, (x, y) => x.Value == y.Value); foreach (var item in diff.Different) Console.Write("{0} changed to {1}", item.Key.Value, item.Value.Value); //Will output: a changed to aaa
