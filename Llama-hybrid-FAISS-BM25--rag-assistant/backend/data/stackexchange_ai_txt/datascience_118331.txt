[site]: datascience
[post_id]: 118331
[parent_id]: 118322
[tags]: 
Here is an excellent resource for handling missing values: Missing Data? How to handle missing values in Python In my experience, you should forecast the values for the specific time series scenario. Say that you have a time series $(x_1,x_2,\ldots,x_n,NA,NA,\ldots,NA,x_m,x_{m+1},\ldots)$ where $x_i \in \mathbb{R}$ are observed (real number) values and $NA$ are "not available" ones (i.e., missing). For simplicity and without loss of generality, assume that you have a forecasting model $f$ able to take $n$ -length long time series to predict the next value, namely, $f : \mathbb{R}^n \to \mathbb R$ . Now, you can use $f$ to predict the $(n+1)$ th value, that is, $f(x_1,x_2,\ldots,x_n) = \hat x_{n+1}$ . You can repeat the process as $f(x_2,x_3,\ldots,x_n,\hat x_{n+1}) = \hat x_{n+2}$ , and so on, until you get $\hat x_{m-1}$ (which is before $x_m$ ). The approach is not flawless because each (predicted) $\hat x$ contains an amount of error, which will eventually diverge. Nevertheless, it is a widespread methodology in time series analysis. If the technique appeals to you, try darts for time series forecasting (and anomaly detection), which is open-sourced and in Python.
