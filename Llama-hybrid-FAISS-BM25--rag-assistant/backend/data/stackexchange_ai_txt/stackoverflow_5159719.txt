[site]: stackoverflow
[post_id]: 5159719
[parent_id]: 
[tags]: 
How to elegantly disable/enable all jQuery UI buttons?

I currently have several action buttons in different pages, and each button performs some AJAX call when clicked. In another word, I have code like this all over the places:- $("#searchButton") .button() .click(function() { ... $.get(url, { data: ...}, function(data) { ... }); ... }); After doing some testing, it seems like some AJAX calls take at least more than a few seconds to process before the callback function is being called. My plan is to disable the button when the AJAX call is made and enable it back when the AJAX call is completed. This is to prevent user from clicking the button too many times when the request is being processed. One solution I found is to utilize the unbind() and bind() functions. After modifying my code, it looks like this now:- var searchButtonClickHandler = function() { ... $.get(url, { data: ...}, function(data) { ... }); ... }; $("#searchButton") .button() .ajaxStart(function() { $(this).button("disable").unbind("click"); }) .ajaxStop(function() { $(this).button("enable").bind("click", searchButtonClickHandler); }) .click(searchButtonClickHandler); This code works fine. Basically, it removes the click handler when the AJAX call is made and addes the click handler back when the AJAX call is completed. My question is... is it possible to generalize the button disabling/enabling so that I don't have to implement ajaxStart() and ajaxStop on all UI buttons? Ideally, I would like to use my earlier code snippet to register only the click event handler on the button, and then enable/disable all buttons using the .ui-button selector, something like this... $(".ui-button") .ajaxStart(function() { $(this).button("disable").unbind("click"); }) .ajaxStop(function() { // not sure how to bind the handler here $(this).button("enable").bind("click", ?? ); }); ... but, this doesn't work and I run into trouble in binding the click handler here. The more I think about it, it almost seems like I need to create a button builder function to do this, for example:- var createButton = function(selectorName, clickHandler) { $(selectorName) .button() .ajaxStart(function() { $(this).button("disable").unbind("click"); }) .ajaxStop(function() { $(this).button("enable").bind("click", clickHandler); }) .click(clickHandler); }; // create button like this createButton("#searchButton", function() { ... $.get(url, { data: ...}, function(data) { ... }); ... }); ... but this approach will only disable/enable the selected button, and I want to apply that to all UI buttons. Do anyone has a better approach in disabling/enabling all the buttons in the page? Thanks.
