[site]: stackoverflow
[post_id]: 2387193
[parent_id]: 2373782
[tags]: 
I finally found a method that works: embedding the image in the email itself. I found the solution here . I'll include the critical stuff here, just in case. There are three key components to the email: the plain text version, the html version and the image, all consructed as AlternateViews: string imagePath = @"C:\Work\images\clickhere.jpg"; AlternateView imageView = new AlternateView(imagePath, MediaTypeNames.Image.Jpeg); imageView.ContentId = "uniqueId"; imageView.TransferEncoding = TransferEncoding.Base64; : //loop to generate the url and send the emails containing AlternateView plainTextView = AlternateView.CreateAlternateViewFromString( BuildPlainTextMessage(url), null, "text/plain"); AlternateView htmlView = AlternateView.CreateAlternateViewFromString( BuildHtmlMessage(url), null, "text/html"); //set up MailAddress objects called to and from : MailMessage mail = new MailMessage(from, to); mail.Subject = "ACTION REQUIRED: Do this by then or else"; mail.AlternateViews.Add(plainTextView); mail.AlternateViews.Add(htmlView); mail.AlternateViews.Add(imageView); //send mail using SmtpClient as normal : //endloop BuildHtmlMessage(string) and BuildPlainTextMessage(string) just return strings containing the messages. BuildHtmlMessage includes this to display the image in a link to 'url': sb.AppendLine(" "); sb.AppendFormat(" ", url); sb.Append(" "); sb.Append(" "); sb.AppendLine(" "); Hope this is of use to someone else, sometime.
