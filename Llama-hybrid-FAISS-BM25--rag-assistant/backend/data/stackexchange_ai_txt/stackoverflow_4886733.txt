[site]: stackoverflow
[post_id]: 4886733
[parent_id]: 
[tags]: 
Defining own uniforms over re-using built-in OpenGL variables in GLSL. Why?

I am writing a 3D graphics engine. I've heard that it is bad to use too much uniform variables in your shader program because it can cause slowdown. On the other side, some say that re-using some built-in variables like gl_TextureMatrix is kind of bad practice. How should I organize creating my shader programs ? Should I write plenty of uniforms for each mechanism or can I rely on those built-in variables ? For example, should I use built-in gl_LightSource or define own uniform array with light source informations, so I can have more lights on my scene? I also know about deferred rendering techniques but I want to do basic multiple lights first. Or maybe, which built-in variables are 'OK' to reuse? What are (dis)advantages of each of these practices?
