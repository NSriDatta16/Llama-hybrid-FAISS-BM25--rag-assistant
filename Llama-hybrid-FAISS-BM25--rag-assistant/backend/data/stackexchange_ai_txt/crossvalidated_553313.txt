[site]: crossvalidated
[post_id]: 553313
[parent_id]: 553289
[tags]: 
First, you can refactor your R code to be (IMHO) a little more legible, also using pbapply::pbreplicate() to get a nice progress bar : n_sims Growing the flips vector in each step makes this code very slow. It would be much faster to grow it in large batches - but that would be at the expense of legibility. As it is, this code runs its 100,000 replicates in about ten minutes, which we can use to google around a bit for an abstract solution. Second, there indeed is an abstract solution. The details are a bit complicated, and I unfortunately don't have the time to write them all up right now, but I'll give the gist. Specifically, we can model your sequence of unfair coin flips as a Markov chain , where each state corresponds to the last three flips, and where we stop after hitting HTH. Thus, we have a single absorbing state and seven transient states , and if we use $p$ to denote the probability of next getting a Head, we get a state transition matrix as follows: (Apologies for pasting a picture; I don't know how to get the annotations to work in MathJaX. LaTeX code below.) This is already in canonical form , with the single absorbing state at the bottom and the right. We can partition the matrix into a block matrix $T$ for the transient states and the row and column corresponding to the absorbing state: $$\begin{pmatrix} T & T_0 \\ 0^t & 1 \end{pmatrix}.$$ The initial states are all equally probable - this is our initial distribution $\tau$ . The distribution of the number of steps necessary to reach the absorbing state is the discrete phase-type distribution , which depends on the initial state $\tau$ and the submatrix $T$ . You can take a look at Dayar (2005) on how to calculate the expectation of this distribution (also see Expected number of steps between states in a Markov Chain , where I got the pointer to this paper), but note that (1) you already start after three steps, so you would need to add $3$ to the expectation, and (2) Dayar (2005) assumes that the probability of starting in the absorbing state is zero, and in your case, it isn't, it's already $p^2(1-p)$ , so you need to correct for that. LaTeX code for the matrix, kudos to Bernard : \documentclass{article} \usepackage{mathtools} \usepackage{blkarray, bigstrut} \begin{document} \[ \setlength{\bigstrutjot}{4pt} \begin{blockarray}{r@{\enspace\vrule}rcccccccc} \phantom{HHH}& & HHT & HHH & THT & THH & TTT & TTH & HTT & HTH \\ \BAhline \begin{block}{r@{\enspace\vrule}r(cccccccc)} HHT & & 0 & 0 & 0 & 0 & 0 & 0 & 1-p & p \bigstrut[t]\\ HHH & & 1-p & p & 0 & 0 & 0 & 0 & 0 & 0 \\ THT & & 0 & 0 & 0 & 0 & 0 & 0 & 1-p & p \\ THH & & 1-p & p & 0 & 0 & 0 & 0 & 0 & 0 \\ TTT & & 0 & 0 & 0 & 0 & 1-p & p & 0 & 0 \\ TTH & & 0 & 0 & 1-p & p & 0 & 0 & 0 & 0 \\ HTT & & 0 & 0 & 0 & 0 & 1-p & p & 0 & 0 \\ HTH & & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1\bigstrut[b]\\ \end{block} \end{blockarray} \] \end{document}
