[site]: stackoverflow
[post_id]: 476992
[parent_id]: 476942
[tags]: 
The final result: public interface IFoo { event EventHandler FooValueChanged; void RaiseFooValueChanged(IFooView sender, FooEventArgs e); } [TypeDescriptionProvider(typeof(FooBaseImplementor))] public abstract class FooBase : Control, IFoo { protected event EventHandler backEndStorage; public abstract event EventHandler FooValueChanged; public void RaiseFooValueChanged(IFooView sender, FooEventArgs e) { if (backEndStorage != null) backEndStorage(sender, e); } } public class FooDerived : FooBase { public override event EventHandler FooValueChanged { add { backEndStorage += value; } remove { backEndStorage -= value; } } }
