[site]: stackoverflow
[post_id]: 2849932
[parent_id]: 2849551
[tags]: 
You are right - this is, on balance, not a very useful feature of revision control systems! Yes, companies like an audit trail, but this is provided by the revision control system's log command; yes, it means that the log is available if the revision control system is not - but in that case, Fixed bug 1234 probably isn't very meaningful :-) And, as you allude to, in order to tie the changes down to specific lines, you still need the help of the revision control system. You are also correct that changing the file as it is being committed can give rise to issues - I once saw an issue where a colleague carefully ensured that his code compiled, then committed it, only to be flamed because the files he'd committed didn't compile. It turned out that the comment was something like Clean up /tmp/*.txt , and the C compiler was treating the /* as a comment-start character (and complaining because it was already inside a comment). Another issue with logs in files is that they only make sense for linear working - once you're developing with multiple branches (in the way that distributed source tools like git/mercurial/bazaar encourage) having the log in the source file itself only serves to create merge conflicts almost all of the time. For this reason, modern tools tend not to implement this functionality. Indeed subversion doesn't - its keyword substitution deliberately doesn't allow inclusion of log history.
