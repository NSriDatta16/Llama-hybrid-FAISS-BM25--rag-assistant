[site]: crossvalidated
[post_id]: 585942
[parent_id]: 
[tags]: 
R and Time Series Analysis; Suggestions for forecasting a series with a shock

I believe that the reprex below is self-explanatory. I would like to extend a monthly time series by forecasting the next 3 data points. The series is rather volatile and it spikes during the last couple of years. By naked eye, its monthly returns fluctuate around a constant value. I am learning the ropes of time series analysis and I need something quick to implement and reasonable (possibly in R). If it was within the tidymodels framework (see comments in the reprex), it would be ideal, but it is not crucial. Many thanks! library(tidyverse) df # A tibble: 558 × 2 #> t y1 #> #> 1 1976-01-01 50 #> 2 1976-02-01 50.1 #> 3 1976-03-01 50.3 #> 4 1976-04-01 50.8 #> 5 1976-05-01 50.9 #> 6 1976-06-01 51.2 #> 7 1976-07-01 51.4 #> 8 1976-08-01 51.5 #> 9 1976-09-01 51.6 #> 10 1976-10-01 51.6 #> # … with 548 more rows ## ## the series y1 undergoes a shock in recent years. The goal is to be able to extend (forecast) the series by 3 months at least. plot(df $t, df$ y1) ## ###the time series exhibits some long range correlations acf(df$y1) ### look at the monthly returns calculate_return mutate(r1=calculate_return(y1)) plot(df $t, df$ r1) ##it makes sense to see the return time series as a time series whose volatility fluctuates around a constant value. ##Given that I am not interested in forecasting the volatility, but the future values of y1, which approach would you suggest? ### Forecasting the returns r1 would also be OK, because from them I can easily derive y1. ### Would it be possible to use some GARCH model to predict the returns instead of the volatility? ##If possible, I would like a solution relying on the tidymodels paradigm ## (https://www.tidymodels.org/) and perhaps its extension for time series ## analysis (https://business-science.github.io/modeltime/index.html), ## or for GARCH models ## (https://albertoalmuinha.github.io/garchmodels/index.html), ## but what I need the most is a statistical insight and a bit of code. Created on 2022-08-18 by the reprex package (v2.0.1)
