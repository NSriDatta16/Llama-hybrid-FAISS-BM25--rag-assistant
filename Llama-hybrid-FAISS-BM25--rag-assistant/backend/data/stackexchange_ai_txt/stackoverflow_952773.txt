[site]: stackoverflow
[post_id]: 952773
[parent_id]: 952614
[tags]: 
For a utility class, check out java.util.Scanner . There are a number of options in there as to how you might go about solving your problem. I have a few comments on your questions. Debuggers don't handle them (regular expressions) well Whether a regex works or not depends on whats in your data. There are some nice plugins you can use to help you build a regex, like QuickREx for Eclipse, does a debugger actually help you write the right parser for your data? They interrupt the flow of someone reading source code. I guess it depends on how comfortable you are with them. Personally, I'd rather read a reasonable regex than 50 more lines of string parsing code, but maybe that's a personal thing. Overtime regex's grow organically and become monsters. I guess they might, but that's probably a problem with the code they live in becoming unfocussed. If the complexity of the source data is increasing, you probably need to keep an eye on whether you need a more expressive solution (maybe a parser generator like ANTLR) They are deeply non intuitive. They're a pattern matching language. I would say they're pretty intuitive in that context. How could I improve the readability of the above code? Not sure, apart from use a regex. Is there a better way to do this? A Util class that solves this problem elegantly. Mentioned above, java.util.Scanner. Where do you draw the line between using a regEx and coding something simpilar to what I've written above? Personally I use regex for anything reasonably simple. How do you increase the readability/maintainability of regExes? Think carefully before extending,take extra care to comment up the code and the regex in detail so that it's clear what you're doing.
