[site]: datascience
[post_id]: 64623
[parent_id]: 
[tags]: 
inconsistency occurred when using cross_val_score in python

import pandas as pd from sklearn.datasets import load_iris from sklearn.svm import SVC #import data iris = load_iris() X = pd.DataFrame(iris.data, columns=iris.feature_names) y = iris.target #split data from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, shuffle=False) #modeling using SVM model = SVC(kernel='linear', C = 1) model.fit(X_train, y_train) model.score(X_test, y_test) # here I get score: 0.8666666 # Now I use cross_validation with cv = 5, from sklearn.model_selection import cross_val_score model = SVC(kernel='linear', C = 1) scores = cross_val_score(model, X, y, cv = 5, scoring = "accuracy") scores #here I got array([0.96666667, 1. , 0.96666667, 0.96666667, 1. ]) None of the numbers in the above arrays equal to 0.866666, I wonder why the inconsistency happens(since "cv = 5" matches the condition "test_size = 0.2").
