[site]: crossvalidated
[post_id]: 468767
[parent_id]: 467359
[tags]: 
I am aware of two typical strategies for outputting a "graph-wide" prediction. Augment every graph with a special "root" node, and add an edge between the root and every other vertex of the graph. Use this as your "chosen" vertex. Have every node output a prediction (typically logits, but could do direct probabilities as well), and average across all nodes in the graph. I've not seen anyone try the "random node" approach but it sounds like a more stochastic form of (2). I don't quite understand your question about backpropagation, as the algorithm doesn't require that the computation graph be fixed.
