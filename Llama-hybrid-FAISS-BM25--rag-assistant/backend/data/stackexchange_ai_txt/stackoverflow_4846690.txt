[site]: stackoverflow
[post_id]: 4846690
[parent_id]: 4845737
[tags]: 
The first thing I'd try is a naive fixed-step lookahead algorithm, where at each step, I'd analyse all the possible n steps ahead and I'd choose the one that leads to the highest overall score. Play around with different values of n on the same series of pseudorandom packs and see how (if at all) scores improve by increasing it. If this brings reasonable success, the next step is to assign points to certain positions that you can use during the evaluation process. (For example, the distance of 'downcard' aces from the top of their pile can be substracted.) The next step could be an adaptive search, where you look ahead a fixed number of steps first, then expand only the promising leaves of the move tree even further. (Pruning, basically.) And so on, there's a lot you can try and it sounds like great fun, so enjoy it. But if all else fails, organise a coding competition. :)
