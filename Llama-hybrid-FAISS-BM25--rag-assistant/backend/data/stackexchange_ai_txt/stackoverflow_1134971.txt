[site]: stackoverflow
[post_id]: 1134971
[parent_id]: 761028
[tags]: 
I have exactly this problem. My span elements disappear. Whereas if i used div i can see them. But of course I don't want div elements, because it causes a line break. Damn it! Damn java. Edit! STOP THE PRESS!! Found the answer. At least, an answer which fixes it for me. I was still able to determine that I had my span element. I will describe what I am doing, an d provide the code to how i did it. I want to know what element the caret is in. So, this code exists within the caretUpdate function, which provides me with the caret position each time it moves. @Override public void caretUpdate(CaretEvent e) { System.out.println("caret event: " + e.toString()); Object source = e.getSource(); if (source instanceof JEditorPane) { JEditorPane jep = (JEditorPane)source; Document doc = jep.getDocument(); if (doc instanceof HTMLDocument) { HTMLDocument hdoc = (HTMLDocument)doc; int pos = e.getDot(); Element elem = hdoc.getCharacterElement(pos); AttributeSet a = elem.getAttributes(); AttributeSet spanAttributeSet = (AttributeSet)a.getAttribute(HTML.Tag.SPAN); // if spanAttributeSet is not null, then we properly found ' a span '. // now we need to discover if it is one of OUR spans if (spanAttributeSet!=null) { Object type = spanAttributeSet.getAttribute(HTML.Attribute.TYPE); if (type !=null && type.equals("dragObject")) { // for our logging, we get the ref, which holds the source // of our value later System.out.println("the value is: " + spanAttributeSet.getAttribute("ref")); } } } } } Edit!!! Scratch that... This almost works... except the idiots at Sun decided the key was going to be of type HTML.Attribute. Not only that, that the constructor for the HTML.Attribute is private, and it just so happens that the attribute type that I wanted doesn't exist within their privileged set of attributes. Bastards! So, all is not lost... I can still get it via the enumerator.. but it is a little more difficult than it needed to be. LAST EDIT! Ok, I get it now. If the attribute is of a known type, it is stored in the AttributeSet as an instance of HTML.Attribute("type"). Otherwise, it is stored in the AttributeSet with a 'String' as the key. Stupid. But i've got there.
