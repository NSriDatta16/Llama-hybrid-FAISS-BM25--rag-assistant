[site]: stackoverflow
[post_id]: 4243201
[parent_id]: 4243138
[tags]: 
For what you want you dont need a query from both tables. Just using userFriend will give you the data. You'll need the user table for names only. SELECT DISTINCT userID FROM userFriend WHERE friendUserID = ? this will give you all users that have that specific friend that you need. Optionally you can add a INNER JOIN to see what are the names: SELECT DISTINCT f.userID, u.name FROM userFriend f INNER JOIN users u ON u.userID = f.userID WHERE friendUserID = ? UPDATE A comment about your structure. You don't need the userFriendID. The combination of userID and friend ID can be your key. UPDATE of the query SELECT * FROM users u LEFT JOIN userFriend f on u.userID = f.userID WHERE f.friendUserID = ? This will return you all users that have the friend X. The left join is not important in this query. This specific condition is making it irrelevant. To get exactly what you want you need to execute this. SELECT * FROM users u LEFT JOIN ( SELECT DISTINCT * FROM userFriend f WHERE friendID = 4 ) x ON u.id = x.userId It can be done using a subquery, but I dont think is the most logical way of organizing your tables.
