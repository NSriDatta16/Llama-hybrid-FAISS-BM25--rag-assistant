[site]: stackoverflow
[post_id]: 2147670
[parent_id]: 
[tags]: 
Transmitting data with RS422 in .NET

I'm trying to make a simple application to test the RS422 communications with another computer. Using the RS232 interfaces this program is working smoothly, but with the RS422 is not working, as there is one computer that can't send. To complex the scenario a little bit more, I can communicate through RS422 using a HyperTerminal. Here is the code: public partial class MainForm : Form { private SerialPort m_port; public MainForm() { InitializeComponent(); m_list.Items.AddRange(SerialPort.GetPortNames()); m_port = new SerialPort(); m_port.BaudRate = 9600; m_port.DataBits = 8; m_port.Parity = Parity.None; m_port.StopBits = StopBits.One; m_port.Handshake = Handshake.None; m_port.Encoding = new ASCIIEncoding(); m_port.ReceivedBytesThreshold = 1; m_port.DataReceived += DataReceivedEvent; } ~MainForm() { if (m_port != null) m_port.Close(); } private void openClick(object sender, EventArgs e) { m_port.Close(); m_port.PortName = (string)m_list.SelectedItem; try { m_port.Open(); m_buttonSend.Enabled = true; } catch (UnauthorizedAccessException ex) { MessageBox.Show(ex.Message); } } private void ButtonSendClick(object sender, EventArgs e) { m_port.WriteLine(m_testBox.Text); } private void DataReceivedEvent(object sender, SerialDataReceivedEventArgs args) { Invoke(new EventHandler(DoUpdate)); } private void DoUpdate(object s, EventArgs e) { m_receivedText.Text += m_port.ReadLine(); } } Any help or experience with this technology is appreciated. Thanks! EDIT There is a lot of differences between the trace with Portmon of Hyperterminal and the .NET component. There is one of the lines that got my attention as it reefers to the wait mask of the port interruption IOCTL_SERIAL_SET_WAIT_MASK . With HyperTerminal: IOCTL_SERIAL_SET_WAIT_MASK Serial0 SUCCESS Mask: RLSD ERR With the .NET SerialPort component IOCTL_SERIAL_SET_WAIT_MASK Serial0 SUCCESS Mask: RXCHAR RXFLAG CTS DSR RLSD BRK ERR RING Anybody knows how to change the mask from the component? This is getting deep...
