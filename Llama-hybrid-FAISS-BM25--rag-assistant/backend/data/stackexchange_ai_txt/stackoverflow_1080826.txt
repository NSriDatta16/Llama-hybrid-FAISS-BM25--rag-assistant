[site]: stackoverflow
[post_id]: 1080826
[parent_id]: 1080759
[tags]: 
You might want to take a look at this: linky And here is a snippet that caught my attention: VB6 COM objects are STA objects, that means they must run on an STA thread. You did create two instances of the object from two MTA threads, but the object itself will run on a single (COM (OLE) created) STA thread, and access from the two MTA threads will be marshaled and synchronized. So what you should do is, initialize the threads as STA so that each objects runs on his own STA thread without marshaling and you will be fine. Anyway, VB style COM objects are always STA. Now in order to prevent apartment marshaling and thread switching you need to create instances in STA initialized apartments. Note also that when you set the [MTAThread] attribute on Main, you effectively initialize the main thread as MTA, when you create instances of STA objects from MTA threads COM will create a separate (unmanaged) thread and initialize it as STA (this is called the default STA), all calls to STA objects from MTA threads will be marshaled (and incur thread switches), in some cases Idispatch calls will fail due to IP marshaling failures. So the advise is use STA (and therefore VB6) objects from compatible apartments only.
