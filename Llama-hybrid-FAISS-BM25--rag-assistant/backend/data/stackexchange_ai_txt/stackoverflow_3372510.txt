[site]: stackoverflow
[post_id]: 3372510
[parent_id]: 3372139
[tags]: 
I wouldn't suggest making this decision based on perceived advantages in regards to fragmentation. Instead make the decision based on your class design. If the sub-objects don't play any part in the public interface of the containing object you can pimpl them, thus reducing the publicly visible interface of the outer object and likely compile time as well. Then you can privately define the implementation of the sub-objects hidden in an implementation with no public visibility. Alternately if your design benefits from the convenience of automatic management if directly contained objects use that approach. After making this decision based on design considerations, if you still have concerns about fragmentation the proper way to solve that problem is to take control of the allocation yourself using a custom allocator rather than relying on any particular behavior of the built in allocator used by new .
