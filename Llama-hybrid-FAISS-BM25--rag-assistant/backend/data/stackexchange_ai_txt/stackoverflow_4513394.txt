[site]: stackoverflow
[post_id]: 4513394
[parent_id]: 4505642
[tags]: 
I struggled with this for all the same reasons, and eventually came up with a solution. I need to show a bunch of these inside a ListBox for my Septic's Companion app . Right now my solution only deals with bold or italic (as that's all I cared about) but it would be easy to modify it to deal with more. First, into my ViewModel I wrote a routine to return a TextBlock given an HTML string. private TextBlock MakeFormattedTextBlock(string shtml) { TextBlock tb = new TextBlock(); Run temprun = new Run(); int bold = 0; int italic = 0; do { if ((shtml.StartsWith(" ")) | (shtml.StartsWith(" ")) | (shtml.StartsWith(" ")) | (shtml.StartsWith(" "))) { bold += (shtml.StartsWith(" ") ? 1 : 0); italic += (shtml.StartsWith(" ") ? 1 : 0); bold -= (shtml.StartsWith(" ") ? 1 : 0); italic -= (shtml.StartsWith(" ") ? 1 : 0); shtml = shtml.Remove(0,shtml.IndexOf('>') + 1); if (temprun.Text != null) tb.Inlines.Add(temprun); temprun = new Run(); temprun.FontWeight = ((bold > 0) ? FontWeights.Bold : FontWeights.Normal); temprun.FontStyle = ((italic > 0) ? FontStyles.Italic : FontStyles.Normal); } else // just a piece of plain text { int nextformatthing = shtml.IndexOf(' 0); // Flush the last buffer if (temprun.Text != null) tb.Inlines.Add(temprun); return tb; } Then I just needed a way to build this into my XAML. This may not be the very best solution, but I first made another routine to return a StackPanel containing that TextBlock with the text I wanted. public StackPanel WordBlock { get { StackPanel sp = new StackPanel(); TextBlock tbWord = MakeFormattedTextBlock(" " + Word + " : " + Desc); sp.Children.Add(tbWord); return sp; } } To bind this to a visible control, I then made a DataTemplate for my ListBox which simply read the entire StackPanel out of my view model. As I say, there may be parts of this that aren't done as elegantly as they might be, but this did what I wanted. Hope it works for you!
