[site]: stackoverflow
[post_id]: 5401715
[parent_id]: 
[tags]: 
classify with mvnpdf MATLAB

I am classifying data xtrain matrix with 2 features and 2000 rows as training, so the dimension is 2 , μ is a 2 element vector and Σ is the covariancxe matrix 2x2: xtrain = 0.3630 1.6632 -0.0098 1.8526 -0.0424 1.6840 -0.1565 2.1187 0.5720 -2.7282 -0.7808 1.1357 0.5212 -0.6858 0.1038 1.4735 ... mu = 0.3486 0.8327 sigma = 1.1163 0.0452 0.0452 1.5669 I am doing something like: mu = mean(xtrain) sigma = cov(xtrain) % 1/y^2 = (2 pi)^p |\Sigma| exp { (x-\mu)' inv(\Sigma) (x-\mu) } p = mvnpdf (xtrain, mu, sigma); then compute: pdfgauss =... The question is How to test the results of the classifier with a xtest matrix ? I was reading this and it says: To classify data using Bayesian classifier we already know `Prior(w)` and need to compute `p(x/w)`. When `p` is multidimensioanl Gaussian, we can use Matlab internal function "`mvnpdf`". Example) mvnpdf(X,Mean,Cov) X data we want to classify Mean Cov To classify data compute pdfgauss and multiply by Prior(w) for each class and choose a class which shows maximum value To use these functions pdfgauss uses something to compute distances dist = mahalan(X,Mean(:,i),Cov(:,:,i)); How do I finish this classification? pdfgauss.m function y = pdfgauss(X, arg1, arg2 ) % PDFGAUSS Evaluates multivariate Gaussian distribution. % % Synopsis: % y = pdfgauss(X, Mean, Cov) % y = pdfgauss(X, model ) % % Description: % y = pdfgauss(X, Mean, Cov) evaluates a multi-variate Gaussian % probability density function(s) for given input column vectors in X. % Mean [dim x ncomp] and Cov [dim x dim x ncomp] describe a set of % ncomp Gaussian distributions to be evaluted such that % % y(i,j) = exp(-0.5(mahalan(X(:,j),Mean(:,i),Cov(:,:,i) )))/norm_const % % where i=1:ncomp and j=1:size(X,2). If the Gaussians are % uni-variate then the covariaves can be given as a vector % Cov = [Cov_1, Cov_2, ..., Cov_comp]. % % y = pdfgauss( X, model ) takes Gaussian parameters from structure % fields model.Mean and model.Cov. % % Input: % X [dim x num_data] Input matrix of column vectors. % Mean [dim x ncomp] Means of Gaussians. % Cov [dim x dim x ncomp] Covarince matrices. % % Output: % y [ncomp x num_data] Values of probability density function. % % Example: % % Univariate case % x = linspace(-5,5,100); % y = pdfgauss(x,0,1); % figure; plot(x,y) % % Multivariate case % [Ax,Ay] = meshgrid(linspace(-5,5,100), linspace(-5,5,100)); % y = pdfgauss([Ax(:)';Ay(:)'],[0;0],[1 0.5; 0.5 1]); % figure; surf( Ax, Ay, reshape(y,100,100)); shading interp; % % See also % GSAMP, PDFGMM. % % About: Statistical Pattern Recognition Toolbox % (C) 1999-2003, Written by Vojtech Franc and Vaclav Hlavac % Czech Technical University Prague % Faculty of Electrical Engineering % Center for Machine Perception % Modifications: % 28-apr-2004, VF % process input arguments if nargin
