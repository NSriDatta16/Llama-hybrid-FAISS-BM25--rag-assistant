[site]: stackoverflow
[post_id]: 3034809
[parent_id]: 2984914
[tags]: 
You're almost there. Add a ~ and place the parentheses differently, and that's it: ( A quick explanation/illustration: s =: 1 2 3 3 3 4 1 1 1 f =: 2&(~:/\) , 1: f s 1 1 0 0 1 1 0 0 1 g =: Now that final (f s) g s , sometimes referred to as a "left hook", can be written (g~ f) s (the adverb ~ is called "passive" in J, the Haskell counterpart would be flip ). Alternatively you could also tacitly write this as the fork (f g ]) s . Chapter 9 of "Learning J" discusses this topic extensively, if you want to find out more. Update : I previously used a grouping-based ( , but your original cut-based approach is more elegant (and shorter) than this. As this is really about the left hook, I updated to use your approach directly.
