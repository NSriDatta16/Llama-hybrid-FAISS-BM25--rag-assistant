[site]: stackoverflow
[post_id]: 4902805
[parent_id]: 4902101
[tags]: 
You can't change a class, you can only extend it. Couple years ago I was working on a project where the interface was done in Flash and compiled in the flex compiler. I had different ui components that consisted of different classes. But needed to treat them the same for the logic I was putting in. That meant all the classes had to have the same base class, which had to by my own base class. so a Button and a List both had to extend a customUIClass. Which as far as I know you cannot do (please let me know if you're reading this and know of a way) my solution was to create a wrapper. As applied to your issue would go something like this make a "superclass" called Lizard(or animal,organism etc) that extends a MovieClip( or casaMovieClip). Lizard would have a variable private var _view:MovieClip and a init constructor 'init($type:MovieClip)` (not the actual constructor) where _view=$type and you add view addChild(_view); then you would create your actions like this function walk():void{ _view.gotoAndPlay("WALK"); } last thing would be to create the Gecko class, which would extend the Lizard, and would have this as constructor function Gecko(){ init(new flaGecko()); } then if you still need to override any functions you can do that or you could just create var gecko:Lizard = new Lizard(new flaGecko()); but then you would need the init() to be the constructor. for further reading do look up the Decorator Design Pattern. I've found the AS3 design patterns book to be quite helpful.
