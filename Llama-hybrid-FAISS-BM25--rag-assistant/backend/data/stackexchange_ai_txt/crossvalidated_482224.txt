[site]: crossvalidated
[post_id]: 482224
[parent_id]: 
[tags]: 
Is this use of emmeans an appropriate way to calculate a 95% confidence interval for a parameter?

I generated data using the model $y_{i j} = \alpha_i + \beta_i x_{i j} + \epsilon_{i j}, i = 1, \ldots, 48, j = 1, \ldots, 16$ , $\alpha_i \sim \text{N}(0, \sigma_{\alpha}^2)$ , $\beta_i \sim \text{N}(\mu_{\beta}, \sigma_{\beta}^2)$ , $\epsilon_{i j} \sim \text{N}(0, \sigma_{\epsilon}^2)$ ; I let $\sigma_{\alpha} = 1, \mu_{\beta} = 4, \sigma_{\beta} = 0.5, \text{ and } \sigma_{\epsilon} = 1$ . I fit a random coefficient model to the data using the lme4 package. Below is my code for generating the data and fitting the model: library(emmeans) library(lme4) library(tidyverse) make_dataset % bind_rows(.id = "group") %>% mutate(group = as_factor(group)) } set.seed(1) dataset I want to calculate a 95% confidence interval for $\mu_{\beta}$ . I know that I can use confint() in lme4 to do this in several different ways. However, I figured out a way to calculate an interval using the emmeans package and am wondering whether it's a genuine 95% confidence interval. Below is the code that computes the interval: mod %>% ref_grid(at = list(x = 0:1)) %>% emmeans("x") %>% pairs(reverse = TRUE) %>% confint() # contrast estimate SE df lower.CL upper.CL # 1 - 0 3.98 0.0772 47 3.82 4.14 # # Degrees-of-freedom method: kenward-roger # Confidence level used: 0.95 From what I understand, this essentially averages the group-level predictions at $x = 0$ , averages the group-level predictions at $x = 1$ , and then constructs an interval estimate of the difference between the two averages. This is like computing the slope of the line $y = m x + b$ by setting $x = 0$ to get $b$ , setting $x = 1$ to get $m + b$ , and then subtracting to get $m + b - b = m$ . Is this a valid approach to calculating a 95% confidence interval for $\mu_{\beta}$ ?
