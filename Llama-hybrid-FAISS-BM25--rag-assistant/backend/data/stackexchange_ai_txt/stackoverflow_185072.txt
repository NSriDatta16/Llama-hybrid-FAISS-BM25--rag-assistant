[site]: stackoverflow
[post_id]: 185072
[parent_id]: 
[tags]: 
Learning LINQ: QuickSort

I took the plunge this afternoon and began studying LINQ, so far just mucking around with LINQ on collections. One of the first things I tried was to implement QSort. Now -- ignoring the fact that I could just use an ORDERBY and that this is a very silly qsort implementation -- what I came up with was this: public class lqsort { public static List QSLinq(List _items) { if (_items.Count _less = (from _item in _items where _item _same = (from _item in _items where _item == _pivot select _item).ToList(); List _greater = (from _item in _items where _item > _pivot select _item).ToList(); return (QSLinq(_less).Concat(_same.Concat(QSLinq(_greater)))).ToList(); } } The only thing that really bugs me is all of the casting involved. Are there any LINQ tricks I might use? Or am I just using LINQ for things it wasn't intended for?
