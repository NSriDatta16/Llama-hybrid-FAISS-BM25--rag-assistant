[site]: stackoverflow
[post_id]: 3215583
[parent_id]: 1207223
[tags]: 
Greg's suggestions, didn't work for me but helped to point the right direction to get plcrashreporter logs (reporter version 103) to symbolize again with sdk 4.0. BTW: this is an issue you will definitly have with reports created on newer devices (armv7) because symbolicate assumes reports version 103 are armv6. So this is what i did ... 1) make a copy from the newest symbolicatecrash script (sdk 4.0) for the changes you make. Note: depending on the editor u use you might have to set the executable bit after editing. chmod 755 symbolicatecrash 2) issue: finding symbols -- NO MATCH this is because the default is set to armv6. Resolution: in sub parse_images set the default architecture my $default_arch = 'armv7'; 3) issue: "Use of uninitialized value $bundle ..." Resolution: (hack: removing some restrictions that don't seem to work on 103 reports) replace: $app = $bundlename if (!defined $app && defined $image{plus} && length $image{plus}); by: $app = $bundlename if (!defined $app); 4) issue: "can't understand output from otool" Resolution: Greg's fix for sub matchesUUID . replace: } else { die "Can't understand the output from otool ($TEST_uuid)"; } by: } else { if ($arch eq "armv7") { return matchesUUID($path, $uuid, "armv6"); } else { die "Can't understand the output from otool ($TEST_uuid)"; } } 5) issue: "atos can not find symbols" here Gregs script changes didn't work, it seems that in rindex( got lost in the code highlighting. the "atos cannot load symbols" wasn't beeing passed into the script - so the check wouldn't work the in rindex( check reads the first line ... so one frame gets lost in case it was successfull. As a "hack" i simply faked a frame with adreass 1 ... which is "used" during the atos check. So this is what i changed in sub symbolize_frames : replace: my $cmd = "$atos -arch $arch -o '$escapedSymbol' @{[ keys %$frames ]} | "; by: my $cmd = "$atos -arch $arch -o '$escapedSymbol' 1 @{[ keys %$frames ]} 2>&1 | "; replace: open my($ph),$cmd or die $!; by: open my($ph),$cmd or die $!; if (rindex( , "atos cannot load symbols") != -1 && $arch eq "armv7") { my $arch = "armv6"; my $cmd = "$atos -arch $arch -o '$escapedSymbol' @{[ keys %$frames ]} 2>&1 | "; print STDERR "Running $cmd\n" if $opt{v}; open $ph,$cmd or die $!; } Note: with this changes the script runs fine for me - the "fixes" are probably not very elegant but i'm not fluent in perl :) ...
