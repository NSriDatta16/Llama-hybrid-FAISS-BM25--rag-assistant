[site]: stackoverflow
[post_id]: 1719303
[parent_id]: 1719267
[tags]: 
While I agree that every little leak adds up, I don't agree that it's always the best business decision to fix it. What if you have a stateless legacy system and no coders who understand it? Now you are using it in a situation that has to scale... and it's 100X cheaper to spawn a new instance and swap them out before memory goes overboard. Or let's say you have a batch processing system that runs 24x7 but for which there is no real user. If it's cheaper to monitor memory and tell the system to restart itself periodically, why hunt down the leak? I think you should try real hard but be pragmatic about the business ramifications of the decision.
