[site]: stackoverflow
[post_id]: 335905
[parent_id]: 334846
[tags]: 
"I've tried overriding the updateDisplayList() method of the mx:Canvas component but that seems to only update the drawing after the dragging. I would like for the line to follow the mx:Panel as it is being dragged." You can listen to MoveEvent.MOVE events in the Panels and have the handler call for the redrawing of the lines, and then have the Panels dispatch these events while they are being dragged by listening for MouseEvent.MOUSE_MOVE events in the stage and dispatching the MOVE event in the handler (attach this handler to the stage in the Panel's MouseEvent.MOUSE_DOWN event handler, along with a handler for MouseEvent.MOUSE_UP (attached to the stage as well) -- then remove both of these event listeners from the stage in the MOUSE_UP handler.) Here's an example (this would be in the Panel subclass:) private function attachListeners():void { this.addEventListener(MouseEvent.MOUSE_DOWN, selfMouseDownHandler, false,0,true); this.addEventListener(MoveEvent.MOVE, selfMoveHandler, false,0,true); } private function selfMoveHandler(event:MoveEvent):void { redrawConnectedLinks(); } private function selfMouseDownHandler(event:MouseEvent):void { stage.addEventListener(MouseEvent.MOUSE_UP, stageMouseUpHandler, false,0,true); stage.addEventListener(MouseEvent.MOUSE_MOVE, stageMouseMoveHandler, false,0,true); } private function stageMouseUpHandler(event:MouseEvent):void { stage.removeEventListener(MouseEvent.MOUSE_UP, stageMouseUpHandler, false); stage.removeEventListener(MouseEvent.MOUSE_MOVE, stageMouseMoveHandler, false); } private function stageMouseMoveHandler(event:MouseEvent):void { dispatchEvent(new MoveEvent(MoveEvent.MOVE)); }
