[site]: stackoverflow
[post_id]: 4074134
[parent_id]: 
[tags]: 
Help with ASP.NET MVC HtmlHelper API Design

I am working on a runtime composite resource library for ASP.NET WebForms/MVC. I support both standard ASP.NET WebForms via WebControls and have also recently added support for ASP MVC Html Helpers. One feature that I currently support with the WebForms WebControls is the concept of "Partial" resource definitions where a resource can be combined over the Master/View pages etc. When implementing the MVC equivalent, I am not sure what the best practise is? I am currently leaning towards a design something like: Master Page Which will create a "context" wrapper around the head ContentPlaceholder. View Page So any view pages can extend the partial resource definition as seen above. The questions I have: 1) Unlike all my other HtmlHelpers, these extensions do not immediately write out the HTML fragment but rather wait until the context is disposed. Should these extensions be off the ViewContext instead (or some other object)? 2) I personally think the concept of a "using" makes sense to wrap a block of code rather than separate BeginCompositeResourcePartContext/EndCompositeResourcePartContext calls, would you agree? If no, what is better about separate method calls? Any feedback on the above would be greatly appreciated. If more detail is required, please let me know. Edit To clarify... the block inside the head of the Master page and the subsequent reference in side a view page will be combined together in to a single resource. So when the context of CompositeResourcePartContext is disposed, all SIX files are combined in to only ONE css file and written out as a single link TAG (or script, css sprite etc)
