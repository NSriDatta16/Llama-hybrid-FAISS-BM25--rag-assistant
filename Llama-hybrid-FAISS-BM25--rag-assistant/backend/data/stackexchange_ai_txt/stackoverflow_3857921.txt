[site]: stackoverflow
[post_id]: 3857921
[parent_id]: 3857723
[tags]: 
trick is finding the root folder. Generally, developers use the following: project root -- src -- bin at least, what's what Eclipse does by default. There are other ways it can be organized as Maven uses the following: project root -- src -- -- main -- -- -- java etc... More info on how Maven standardizes here: That said, finding out how the source is organized shouldn't be too hard. Open up one of the .java files and look for the line at the top that starts with "package ". Should be something like this: package com.somecompany.client.utils Note, that's just an example, it won't be that exactly although it should start with "package". The value after package represents the path that the file should be in relative to the root of the source folder. source folder/com/somecompany/client/utils So, if you follow the default way that Eclipse organizes things, it should look look like this: project root -- src -- -- com -- -- -- somecompany -- -- -- -- client ... etc SO, as other people have mentioned, you'll import from existing filesystem, point to the folder at the project root. You may need to configure it to point to "src" folder as a source folder. You may also need to import those .jar files into your project as well. Good luck
