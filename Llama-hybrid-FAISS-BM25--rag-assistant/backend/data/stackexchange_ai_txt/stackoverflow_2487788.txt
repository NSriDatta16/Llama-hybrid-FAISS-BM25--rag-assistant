[site]: stackoverflow
[post_id]: 2487788
[parent_id]: 568012
[tags]: 
As I have no doubt that Nir's answer will work spending a little time implementing it, I was able to do what I wanted a little bit more elegant with this code: Private Sub myWindow_LocationChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.LocationChanged Dim primaryBounds As System.Drawing.Rectangle = Windows.Forms.Screen.PrimaryScreen.Bounds Dim windowBounds As System.Drawing.Rectangle = New System.Drawing.Rectangle(CInt(Me.Left), CInt(Me.Top), CInt(Me.Width), CInt(Me.Height)) If (windowBounds.Left primaryBounds.Right) Then windowBounds = New System.Drawing.Rectangle(primaryBounds.Right - windowBounds.Width, windowBounds.Top, windowBounds.Width, windowBounds.Height) End If If (windowBounds.Top primaryBounds.Bottom) Then windowBounds = New System.Drawing.Rectangle(windowBounds.Left, primaryBounds.Bottom - windowBounds.Height, windowBounds.Width, windowBounds.Height) End If Me.Left = windowBounds.Left Me.Top = windowBounds.Top End Sub This made the window being dragged stay within the primary screen (whole window), but you could easily change the bounds to whatever values you needed.
