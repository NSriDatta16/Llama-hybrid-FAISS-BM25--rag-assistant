[site]: datascience
[post_id]: 8060
[parent_id]: 8038
[tags]: 
It's useful to do this with a Pipeline : import numpy as np from sklearn import linear_model, pipeline, feature_extraction X = np.array([[-1, -1], [-2, -1], [1, 1], [2, 1]]) Y = np.array(['C++', 'C#', 'java','python']) clf = pipeline.make_pipeline( feature_extraction.text.TfidfTransformer(use_idf=True), linear_model.SGDClassifier()) clf.fit(X, Y) print(clf.predict([[1.7, 0.7]]))
