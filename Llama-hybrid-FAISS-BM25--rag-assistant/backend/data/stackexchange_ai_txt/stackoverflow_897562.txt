[site]: stackoverflow
[post_id]: 897562
[parent_id]: 897528
[tags]: 
Like any piece of truly open software, forking the kernel is as simple as branching from the version control repository and beginning work on your own version. Also like any piece of truly open software, if you're going to fork it, it's best to have a solid reason for forking in place. And if you're eventually planning to merge back, then you're really not forking, but instead, you're branching and then asking for it to be merged. Just remember to replace regularly in that instance. For the main point, though, it's going to be difficult... the Linux kernel is a very large and complex piece of software. You will be stuck with GPLv2 unless you remove all GPLv2 code that you cannot get permission to update to GPLv3, as well, so licensing would have to remain the same. But if you want to make substantial modifications to the Linux kernel because you think you can do it better, there is absolutely nobody stopping you. Add new drivers, modify the way graphics works, remove old APIs, do whatever you want. Once you've something to prove, people will start to pay attention, especially if you do it better than it's currently done. And you might wind up with the ultimate good result: Your work gets merged back into the mainline eventually.
