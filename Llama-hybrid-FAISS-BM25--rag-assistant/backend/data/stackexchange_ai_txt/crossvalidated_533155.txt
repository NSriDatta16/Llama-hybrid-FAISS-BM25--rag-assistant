[site]: crossvalidated
[post_id]: 533155
[parent_id]: 
[tags]: 
Regression Performance Measures: Alternatives to MSE

Preface I am dealing with five Regression models (Ordinary Least square, Least Absolute regression, Huber Regression, MM Estimator, and Ridge Regression). I try to check which model is more robust to outliers and multicollinearity simultaneously. For this reason, I created a simulation in R software with different scenarios of outliers and multicollinearity. I used cross-validation to split my data into training and test samples. My question as follows: I used MSE, and MAE to check which model provides good results in terms of robustness and dealing with multicollinearity. However, I found that always Ordinary Least square gives the best result with MSE measure and Least Absolute regression with MAE measure. I think this is due to the similarity of optimization of Ordinary Least square with MSE, and Least Absolute regression with MAE. It means that I really need an alternative unbiased universal measure to check the performance of these five regression models. Which Measure do you suggest to solve this problem? Clarification What I did is simply generating data from a normal distribution, then I introduce some artificial outliers and multicollinearity to this data. I split the data into training and test samples using cross-validation. I built the five models on training data and then check performance measures on testing data. We repeated this 1000 times and takes the average. OLS has the best results with MSE which is very strange because it supposes to be the worse when outliers and multicollinearity presents. The same for Least Absolute regression with MAE measure. R-code rm(list=ls()) library(MASS) library(glmnet) ### Calling the important functions ### # Mean Square meausre: MSE# mse=function(x){ mmm=rep(0,ncol(x)) for (i in 1:ncol(x)){ mmm[i]=mean((x[,i])^2) } return(mmm) } # Mean Absloute Deviation measure: MAD# mad=function(x){ mmm=rep(0,ncol(x)) for (i in 1:ncol(x)){ mmm[i]=mean(abs(x[,i])) } return(mmm) } # mean of the results ## mee=function(x){ mmm=rep(0,ncol(x)) for (i in 1:ncol(x)){ mmm[i]=mean((x[,i])) } return(mmm) } umar
