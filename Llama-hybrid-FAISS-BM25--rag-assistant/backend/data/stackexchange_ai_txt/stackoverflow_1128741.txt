[site]: stackoverflow
[post_id]: 1128741
[parent_id]: 1128398
[tags]: 
Life is hard for IDEs. They have to mediate between a filesystem world , where the compiler, with its source files live, and the UI world , where programmers work. In the old times that formed the contemporary coding culture, everybody, compilers and people, used to live all togheter in the filesystem. So today we still have a tendency to think we want to control where sources and resources reside on the disk. That is good, because we may need to know exactly what compilers eat. Anyway if you think your IDE just as a the frontend of a funny database system of source code and if you really have full confidence about its capabilities and features (which is seldom the case), you may get to the conclusion that if you just don't care about the filesystem you may have a better life, as a programmer (and as a human being). You're right wondering, because Xcode is not very good nor friendly about filesystem code organization and people that is (correctly) picky on that will learn how to move files on their right folder on disk, and on their right Xcode group. That, if you use the "Create folder references for any added folders", have a 1:1 relation. But you will see many people, and many project examples from Apple itsef, that use a simple flat filesystem tree with everything in the same folder. My advice is that you at least group public headers and resources in different folders, something Ã  la Java/Maven, but there is no universal convention.
