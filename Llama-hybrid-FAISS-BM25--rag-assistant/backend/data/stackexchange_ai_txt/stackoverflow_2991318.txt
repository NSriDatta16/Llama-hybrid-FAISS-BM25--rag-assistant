[site]: stackoverflow
[post_id]: 2991318
[parent_id]: 2991271
[tags]: 
Normalize the table, drop the column following_list , create a table following : user_id following_id Which leads to the easy-peasy query (untested, you get the point): SELECT b.user_id, COUNT(c.following) FROM following a JOIN following b -- get followings of ON b.following_id = a.following_id AND b.user_id = a.following_id JOIN following c -- get all (other) followings of again, match with followings of b ON b.following_id = c.following_id AND c.user_id = a.user_id WHERE a.user_id = GROUP BY b.user_id ORDER BY COUNT(b.following) DESC Performance may very well very based on indexes & size of dataset, maybe add a 'similarity' column which is updated at regular intervals or changes just for fast data retrieval.
