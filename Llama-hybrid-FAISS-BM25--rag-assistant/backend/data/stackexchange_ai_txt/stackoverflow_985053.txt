[site]: stackoverflow
[post_id]: 985053
[parent_id]: 981830
[tags]: 
The C# optimizer can't really do too much given the short-circuiting rules for logical expression evaluation. So applying DeMorgan's Law won't do much unless it allows you to see other useful refactorings (and of course it can help make your code clearer). But there are cases where you can make substantial performance improvements with other kinds of expression optimization. For instance these conditions should be swapped if ( costly_boolean_function() && cheap_often_false_boolean_function() ) SQL query optimizers do this as a matter of course, since SQL doesn't have short-circuiting. A query optimizer will aggressively rearrange conjunctive WHERE clause predicates (of the form c1 AND c2 AND ... cn ) to put the least expensive conditions first, since they may evaluate to false and obviate the need to evaluate the more expensive ones.
