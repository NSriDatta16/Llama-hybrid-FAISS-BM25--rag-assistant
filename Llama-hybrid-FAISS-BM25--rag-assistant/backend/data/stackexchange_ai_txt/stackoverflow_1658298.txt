[site]: stackoverflow
[post_id]: 1658298
[parent_id]: 
[tags]: 
Random-access data object in J2ME

I'm planning to develop a small J2ME utility for viewing local public transport schedules using a mobile phone. The data part for those is mostly a big bunch of numbers representing the times when the buses arrive or leave. What I'm trying to figure out is what is the best way to store that data. The representation needs to be considerably small (because of persistent storage limitations of a mobile phone) fit into a single file (for the ease of updating the schedule database afterwards over HTTP) fit into a constant number of files, i.e. ( routes.dat , times.dat , ..., agencies.dat ), and not ( schedule_111.dat , schedule_112.dat , ...) have a random access ability (unserializing the whole data object into memory would be just too much for a mobile phone :)) if there's some library for accessing that data format, a Java implementation should be present In other words, if you had to squeeze a big part of GTFS -like data into a mobile device, how would you do that? Google Protocol Buffers seemed like a good candidate for defining data but it didn't have random access. What would you suggest?
