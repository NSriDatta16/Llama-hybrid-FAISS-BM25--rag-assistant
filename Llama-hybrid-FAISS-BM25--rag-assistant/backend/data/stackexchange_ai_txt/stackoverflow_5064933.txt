[site]: stackoverflow
[post_id]: 5064933
[parent_id]: 
[tags]: 
Designing long lists in C++

I am trying to design a dynamic list which can have entries upto 10000. Each list element is composed of a string and a integer. I have to request this list from the middleware component, populate the data obtained and trigger GUI for display. The GUI has advanced scrolling options such as drag, swipe, page up/down, line by line scroll etc. Thus my list should be fairly quick in terms of response to requests. Now the middleware component only supports list requests upto a maximum of 24 list elements. I guess that fetching the entire list in a loop (say in a worker thread) and maintaining a backup would be a waste of resources and not so efficient. But this has the advantage that I can show any set of elements GUI requires me to show. OR I can try to cache a certain set of elements. But then again I doubt it will be acceptable performance wise when GUI requests elements not in cache. Can anyone please give me any suggestions/useful tips on how to design such lists? What are the factors I should bear in mind? How should I strike a balance between optimum resource consumption and good performance to the end user?
