[site]: stackoverflow
[post_id]: 4917102
[parent_id]: 4916168
[tags]: 
To give your sprite the feel of gravity, you should add velocity and acceleration to your Sprite class. Then, create an Update method for the Sprite, and have acceleration be added to your velocity every update, and velocity added to position every update. Position should not be based on the amount of elapsed air time. You can set the acceleration to a constant gravitational value, and then add to the velocity of the Sprite whenever you jump. This will create a flowing parabolic jump that looks nice. If you want to include timing, you can pass the GameTime into the Sprite's Update method, and use it as a modifier on the velocity. Here is an example Update method: void Update(GameTime gt) { int updateTime = gt.ElapsedGameTime.TotalMilliseconds - oldgt.ElapsedGameTime.TotalMilliseconds; float timeScalar = updateTime / AVG_FRAME_TIME; this.velocity += this.acceleration * timeScalar; this.position += this.velocity; oldgt = gt; } If you use timing, this method is a little complicated. You have to keep track of how much time the update took, then divide it by the average amount of time an update or frame should take to get the amount you should adjust your velocity by. Without timing, the method is very simple: void Update() { this.velocity += this.acceleration; this.position += this.velocity; } I would suggest using the simpler method until you understand exactly how timing works and why you need to implement it.
