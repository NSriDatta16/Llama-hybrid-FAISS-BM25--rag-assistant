[site]: stackoverflow
[post_id]: 2451590
[parent_id]: 1038252
[tags]: 
This is not going to win any golfing awards but it does keep quoted phrases together and takes into account stop words (and leverages CPAN modules Lingua::StopWords and Text::ParseWords ). In addition, I use to_S from Lingua::EN::Inflect::Number to count only the singular forms of words. You might also want to look at Lingua::CollinsParser . #!/usr/bin/perl use strict; use warnings; use Lingua::EN::Inflect::Number qw( to_S ); use Lingua::StopWords qw( getStopWords ); use Text::ParseWords; my $stop = getStopWords('en'); my %words; while ( my $line = <> ) { chomp $line; next unless $line =~ /\S/; next unless my @words = parse_line(' ', 1, $line); ++ $words{to_S $_} for grep { length and not $stop->{$_} } map { s!^[[:punct:]]+!!; s![[:punct:]]+\z!!; lc } @words; } print "=== only words appearing 4 or more times ===\n"; print "$_ : $words{$_}\n" for sort { $words{$b} $words{$a} } grep { $words{$_} > 3 } keys %words; print "=== only words that are 12 characters or longer ===\n"; print "$_ : $words{$_}\n" for sort { $words{$b} $words{$a} } grep { 11 Output: === only words appearing 4 or more times === statement : 11 function : 7 expression : 6 may : 5 code : 4 variable : 4 operator : 4 declaration : 4 c : 4 type : 4 === only words that are 12 characters or longer === reinitialization : 2 control-flow : 1 sequence point : 1 optimization : 1 curly brackets : 1 text-line-based : 1 non-structured : 1 column-based : 1 initialization : 1
