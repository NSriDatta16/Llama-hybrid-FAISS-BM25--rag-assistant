[site]: datascience
[post_id]: 87842
[parent_id]: 87837
[tags]: 
In case by 'summarize' you mean in fact 'classify', e.g. 'bad', 'good', etc, then an LSTM/GRU will do the job, just input the whole (truncated probably) sequence, and take the last state: out, _ = lstm(embedding) out_state = out[:,-1,:] Here embedding is whatever word embedding you are using, out is the whole output of LSTM, and batch_first=True (in pytorch), so you take the last state as the input in the fully connected layer. If you need to make predictions about parts of the text, just add a loop and truncate sentences rather than the whole text.
