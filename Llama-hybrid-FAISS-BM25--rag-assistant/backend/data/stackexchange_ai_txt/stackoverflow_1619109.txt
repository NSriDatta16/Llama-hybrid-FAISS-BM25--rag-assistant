[site]: stackoverflow
[post_id]: 1619109
[parent_id]: 1618728
[tags]: 
There isn't a supported way to do this. Looking at the code, it seems that it automatically sets ModelAdmin.list_display_links to the first element if you don't set it to anything. So the easiest way might be to override the __init__ method in your ModelAdmin subclass to unset that attribute on initialization: class HitAdmin(admin.ModelAdmin): list_display = ('user','ip','user_agent','hitcount') search_fields = ('ip','user_agent') date_hierarchy = 'created' def __init__(self, *args, **kwargs): super(HitAdmin, self).__init__(*args, **kwargs) self.list_display_links = [] This appears to work, after a very cursory test. I can't guarantee that it won't break anything elsewhere, or that it won't be broken by future changes to Django, though. Edit after comment : No need to patch the source, this would work: def __init__(self, *args, **kwargs): if self.list_display_links: unset_list_display = True else: unset_list_display = False super(HitAdmin, self).__init__(*args, **kwargs) if unset_list_display: self.list_display_links = [] But I highly doubt any patch would be accepted into Django, since this breaks something that the code explicitly does at the moment.
