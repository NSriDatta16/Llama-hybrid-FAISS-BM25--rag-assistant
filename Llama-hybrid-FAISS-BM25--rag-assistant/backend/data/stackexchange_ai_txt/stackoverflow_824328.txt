[site]: stackoverflow
[post_id]: 824328
[parent_id]: 824274
[tags]: 
what you've described is basically a hidden markov model, http://en.wikipedia.org/wiki/Hidden_Markov_model you have a set of input symbols (your original text and ambiguous punctuation), and a set of output symbols (original text and more fine-grained punctuation) but no good way of really observing the connection between the two in a programmatic way. you could write some rules to cover some of the edge cases, but that will basically never work for the multiple quotes situation. in this case you can't really use a regex for the same reason, but with an hmm, and a bunch of training text you could probably mmake some pretty good guesses. sorry that's probably not very helpful if you're trying to get something ready for deployment, but the input has greater ambiguity than the output, so your only option is to consider the context, and that basically means either a very lengthy set of rules, or some kind of machine learning approach. interesting question though - it would be neat to see what kind of performance you could get. maybe someone's already written a paper on it?
