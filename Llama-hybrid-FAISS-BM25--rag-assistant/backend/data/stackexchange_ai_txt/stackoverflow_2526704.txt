[site]: stackoverflow
[post_id]: 2526704
[parent_id]: 2503774
[tags]: 
This solution works, not best for unit testing public object BindModel( ControllerContext controllerContext, ModelBindingContext bindingContext) { TestIBE.Models.IBERequest _IBERequest; HttpContextBase _httpContext; Dictionary _requestData; _httpContext = controllerContext.HttpContext; _requestData = this.CreateRequestData(_httpContext.Request); _IBERequest = new TestIBE.Models.IBERequest( _httpContext.Session.SessionID, _httpContext.Request.UserHostAddress, _httpContext.Request.UserAgent, _httpContext.Request.Url, _requestData); return _IBERequest; } private Dictionary CreateRequestData( HttpRequestBase subject) { Dictionary _result; _result = new Dictionary (); subject.Form.AllKeys.ForEach(key => _result.Add(key, subject.Form[key])); subject.QueryString.AllKeys.ForEach(key => { if (!_result.ContainsKey(key)) { _result.Add(key, subject.QueryString[key]); } }); return _result; } public class IBEController : Controller { public ActionResult Landing( [ModelBinder(typeof(TestIBE.Helpers.Binders.IBEModelBinder))] TestIBE.Models.IBERequest IBERequest) { // TODO return View(); } }
