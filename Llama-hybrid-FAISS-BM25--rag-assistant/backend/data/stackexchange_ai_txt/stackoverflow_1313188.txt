[site]: stackoverflow
[post_id]: 1313188
[parent_id]: 1313157
[tags]: 
If you look into the CImg header, you'll see that that code is, in fact, a macro that thunks down into: #define cimg_forXY(img,x,y) cimg_forY(img,y) cimg_forX(img,x) #define cimg_forX(img,x) for (int x=0; x Which means that you will have the following loops: for (int z=0; z So, now, what you probably want to do is reference either the x, y, and z coordinates, or better, the pointer into the data as you step through, like cimg_library::CImg image; //assign, etc float* ptr = image->ptr(); cimg_forXYZ(S, x, y, z){ *ptr = *ptr + 10; ++ptr; } I encourage you to read the CImg header; it's quite elegant. You'll get a lot of functionality 'for free'.
