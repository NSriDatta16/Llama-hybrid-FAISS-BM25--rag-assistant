[site]: stackoverflow
[post_id]: 1072520
[parent_id]: 930753
[tags]: 
You can modify WSDL by using SoapExtensionReflector class. From Kirk Evans Blog : The SoapExtensionReflector is called when your type is being reflected over to provide the WSDL definition for your service. You can leverage this type to intercept the reflection call and modify the WSDL output. The following example removes the first method out of 2 web service methods: [WebService(Namespace = "http://tempuri.org/")] [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)] [System.ComponentModel.ToolboxItem(false)] public class Service1 : System.Web.Services.WebService { [WebMethod] public string HelloWorld() { return "Hello World"; } [WebMethod] public int Multiply(int a, int b) { return a * b; } } Create a class inherited from SoapExtensionReflector: namespace TestWebservice { public class MyReflector : SoapExtensionReflector { public override void ReflectMethod() { //no-op } public override void ReflectDescription() { ServiceDescription description = ReflectionContext.ServiceDescription; if (description.PortTypes[0].Operations.Count == 2) description.PortTypes[0].Operations.RemoveAt(0); if (description.Messages.Count == 4) { description.Messages.RemoveAt(0); description.Messages.RemoveAt(0); } foreach (Binding binding in description.Bindings) { if (binding.Operations.Count == 2) binding.Operations.RemoveAt(0); } if (description.Types.Schemas[0].Items.Count == 4) { description.Types.Schemas[0].Items.RemoveAt(0); description.Types.Schemas[0].Items.RemoveAt(0); } } } } Add this to configuration/system.web section in web.config: This should give you a starting point to dynamically removing methods from WSDL document. You would also need to throw NotImplementedException from web method if it is disabled. Finally, you need to disable web service documentation produced by invoking .asmx endpoint without ?WSDL parameter. Set href attribute of wsdlHelpGenerator element to some URL. You can use DefaultWsdlHelpGenerator.aspx as a starting point for your own documentation handler. See question on web service documentation in XML Files, August 2002 .
