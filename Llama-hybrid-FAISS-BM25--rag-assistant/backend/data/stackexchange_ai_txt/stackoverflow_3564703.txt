[site]: stackoverflow
[post_id]: 3564703
[parent_id]: 3564663
[tags]: 
Java does not recognize the notion of a subpackage 1 . As far as Java is concerned packages a and a.b and a.b.c are unrelated. They are just names. So, if you want to access a.b.SomeClass from a.b.c.SomeOtherClass , you must either use a fully qualified class name, or add an import to SomeOtherClass 1 - From Java 9 onwards you can use modules to implement abstraction boundaries that are larger than a single package. This doesn't address this question which is about package-private access, but it could be viewed as an alternative to package-private . As for your example that doesn't compile, I think we need a proper MCVE to understand that. My guess is that you have gotten the file organization for your source tree wrong ... It is also possible that the problem is that the visibility of the class you are trying to import is wrong (package private), but that wouldn't cause the compiler to say that the package doesn't exist, like you said it does.
