[site]: crossvalidated
[post_id]: 494577
[parent_id]: 
[tags]: 
Using Bayesian methods for experimental design

I'm trying to determine parameters for a function. After a given number of (computational) experiments the retrieved data is used for doing a fitting and the parameters are then obtained. (Oversimplifying: Find the coefficients of a regression model) The Bayesian methods would be quite useful for determining where in the domain a sampling should be performed. In the Bayesian Optimization, a acquisition/utility function such as Probability of Improvement or Expected Improvement is defined in order to guide the sampling towards the maximum/minimum. For my application though, finding an optimum is not the goal, instead I just want to explore the domain in a comprehensive way making sure that the shape of this high-dimensional surface I'm trying to fit is appropriately captured. If my grasp on Bayesian Optimization is correct that could be achieved defining a different utility function that rather than guiding towards the optimum, would actually explore the domain. Searching for utility functions, I've come across the Kullbackâ€“Leibler divergence and the Shannon information as possible alternatives, although the literature I found so far seems to be quite general and far from a clear implementation form. Could these function be an adequate solution for the problem at hand? If so, are there and literature/bibliography breaking down the concrete implementation aspects of these functions, with at least one example? My current implementation is using Expected Improvement as an acquisition function, and I'm playing with the parameter which regulates the exploitation/exploration trade-off to have a searching guided by a better fitting instead of finding a maximum/minimum, although it just seems to be a hack. Long story short : A set of regression parameters $\theta$ shall be determined for the target function $f:\mathbf{R^n} \rightarrow \mathbf{R}$ . The sampling in the n-dimensional domain should be guided towards a fitting rather than finding an optimum. How the acquisition/utility function could be adapted in order to accomplish that?
