[site]: stackoverflow
[post_id]: 1318029
[parent_id]: 536888
[tags]: 
As well as TrueView, there's also Naked Objects for .NET . This supports client/server mode and a web viewer (based on a Java equivalent viewer) is currently being ported. As for which properties/actions are available for a given user/role, this is done dynamically in Naked Objects. There are three sorts of business rules preconditions that are supported: 1. is the member visible? 2. is the member usable? 3. is the change to the member (new property value or action parameter) valid? Or, more pithily: can you see it? can you use it? can you do it? The Naked Objects programming model lets these rules be specified both declaratively and imperatively. Even if you end up wrapping your domain model in your own UI layer, I recommend you take a look at NO. Cheers Dan Haywood author: "Domain Driven Design using Naked Objects", pragprog.com
