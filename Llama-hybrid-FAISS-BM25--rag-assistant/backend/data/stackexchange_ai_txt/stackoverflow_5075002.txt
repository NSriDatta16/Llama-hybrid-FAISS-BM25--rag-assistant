[site]: stackoverflow
[post_id]: 5075002
[parent_id]: 5074033
[tags]: 
Each leg of the trip has a net effect on fuel, adding from storage and using to make the trip. All you need to do is loop through once, keeping track of your fuel level when you arrive at each point, even if it is negative. Keep track of the lowest fuel level and which point it occurred on. If you start at that point, you will be able to make it around from there without running out of fuel. This assumes that you start with an empty tank and only get gas from the place you are starting, also that you can always take all the gas, you won't ever get full and have to leave gas behind. Let's say you have 5 points, P1 to P5: Point Fuel Distance to next point P1 5 8 P2 3 4 P3 12 7 P4 1 4 P5 7 5 If you choose P1, then load up on 5 fuel, travelling to P2 leaves you with -3 fuel. Going on you get these numbers: Point Fuel Balance (before refueling) P1 0 P2 -3 P3 -4 P4 1 P5 -2 P1 0 So if you start at the lowest value, P3, you can make it back around (fuel 0 to start, 5 at P4, 2 at P5, 4 at P1, 1 at P2, 0 back at P3) float [] storedFuel = { 1, 1, 1, 1, 1, 1 }; float [] distance = { 1, 1, 1, 1, 1, 1 }; int n = 6; int FindMinimumPosition() { float fuel = 1; int position = 0; float minimumFuel = 1; int minimumPosition = 0; while (position
