[site]: stackoverflow
[post_id]: 466320
[parent_id]: 466081
[tags]: 
Consider at what scale are the business requirements changing: if small-scale requirements change frequently, i.e. people change their minds about what they want, but what they need to do has not really changed, then adopt Agile practices and keep your iterations very short (as short as 1-feature iterations, if necessary to actually get to complete something!) if larger-scale requirements change often, i.e. what infrastructure is needed to run the business, this may be a reflection of changing management whims (what i think of as the "last salesman syndrome" - whatever the last salesman was selling is suddenly The Way Of The Future). If you're involve in these decisions, try to reduce technical issues to the fundamentals (communication, storage, computation, interaction, access, ...) and don't get distracted by product-level bells and whistles. Remember that nothing is likely to be a 100% fit, but the cost of changing your mind too often may outweigh the benefit of changing platforms or architectures. If you've not involved in these decisions, there's not much you can do about it except learn quickly and gently encourage deeper commitment when you can ;-) if the natur of the business changes often, i.e. new lines of business are needed every few weeks, old lines consolidated, et al, and you are involved in discussions at this level, you can try to anticipate the future changes by probing deeper into the company plans. If you're not involve at this level, try to be flexible and invaluable until you find a job with a more stable company ;-)
