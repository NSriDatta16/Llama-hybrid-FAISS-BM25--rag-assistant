[site]: crossvalidated
[post_id]: 629453
[parent_id]: 
[tags]: 
Classification in the context of a time series

I would like to exchange with you about how to best do this. Let me try to clearly describe the situation in the most non-verbose way I can! (Stack: Python, Darts (from unit8), pandas, numpy) I have a building temperature time series, I perform regression on it. Using Darts it is pretty easy to use covariates (both categorical and continuous, both past and future). The target (output) of the regression is the Zone (indoors) temperature. I have access to the HVAC operating modes in the past. I want these operating modes in the future. Therefore I need to perform some sort of classification. The goal is to predict the HVAC operating modes in the future. I have calendar data (historical and future), I have weather data (historical and future through a forecast if needed), I have historical HVAC air outlet temperature, I have historical zone (indoor) temperature. My current thoughts are if I even should treat this as a timeseries problem at all. Why should i keep a time index if there are correlations that enable me to predict the modes I want without using autocorrelations? What do you think? Problems when considering keeping a timeseries structure: Class imbalance - if i respect the training data is a time series, and if my training data is all in the winter months and I'm predicting Spring, i won't have examples of the modes I need. So I assume I'd have to use a lot more data than I used for the regression of the Zone temperature, maybe years of data; Softmax Regression seemed very slow and not even converging some times. I need a much faster model. It also occurred to me to try not considering ML for this task at all. Maybe the HVAC modes can be a function of the temperature on the air outlet of the HVAC unit. Unfortunately I have no direct access to the HVAC unit power, only its outlet temperature. Any tips?
