[site]: stackoverflow
[post_id]: 5419782
[parent_id]: 5416987
[tags]: 
I assume there is a phase in the app's execution that takes too long - i.e. it makes you wait. I assume what you really want is to see what you could change to make it faster. A technique that works is random-pausing . You run the app under the debugger, and in the part of its execution that makes you wait, pause it, and examine the call stack. Do this a few times. Here are some ways your program could be spending more time than necessary. I/O that you didn't know about and didn't really need. Allocating and releasing objects very frequently. Runaway notifications on data structures. others too numerous to mention... No matter what it is, when it is happening, an examination of the call stack will show it. Once you know what it is, you can find a better way to do it, or maybe not do it at all. If the program is taking 5 seconds when it could take 1 second, then the probability you will see the problem on each pause is 4/5. In fact, any function call you see on more than one stack sample, if you could avoid doing it, will give you a significant speedup. AND, nearly every possible bottleneck can be found this way. Don't think about function timings or how many times they are called. Look for lines of code that show up often on the stack, that you don't need. Example Added: If you take 5 samples of the stack, and there's a line of code appearing on 2 of them, then it is responsible for about 2/5 = 40% of the time, give or take . You don't know the precise percent, and you don't need to know. (Technically, on average it is (2+1)/(5+2) = 3/7 = 43%. Not bad, and you know exactly where it is.)
