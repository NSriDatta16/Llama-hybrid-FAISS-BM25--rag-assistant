[site]: stackoverflow
[post_id]: 4370684
[parent_id]: 4369021
[tags]: 
ASP.NET MVC. I wrote classic ASP for 10+ years, including full implementations of ActiveRecord-style business objects and domain entities. I started out in VBScript but switched to JScript around 2003 and never looked back. I worked on every release of ASP.NET from the pre-1.0 beta, and absolutely hated the code-behind event-driven model - ViewState, OnClick handlers, just felt like completely the wrong way to work with a stateless protocol like HTTP and a markup language like HTML. ASP.NET MVC was an absolute revelation; the first framework that felt like I was actually using the knowledge of requests, responses, headers and markup that I'd gained writing classic ASP. I'm now developing a handful of ASP.NET MVC apps as well as maintaining our legacy JScript/ASP codebase, and I genuinely think it's the cleanest migration path from legacy ASP to something modern, testable, object-oriented and elegant. The request, response, server, etc. objects are still there, and do (roughly!) the same things they did in classic ASP, but once you start to learn about ViewModels and controller attributes you'll quickly start writing much, much cleaner, more elegant code.
