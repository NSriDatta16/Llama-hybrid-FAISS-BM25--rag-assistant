[site]: stackoverflow
[post_id]: 569940
[parent_id]: 
[tags]: 
What's the best way to communicate between view controllers?

Being new to objective-c, cocoa, and iPhone dev in general, I have a strong desire to get the most out of the language and the frameworks. One of the resources I'm using is Stanford's CS193P class notes that they have left on the web. It includes lecture notes, assignments and sample code, and since the course was given by Apple dev's, I definitely consider it to be "from the horse's mouth". Class Website: http://www.stanford.edu/class/cs193p/cgi-bin/index.php Lecture 08 is related to an assignment to build a UINavigationController based app that has multiple UIViewControllers pushed onto the UINavigationController stack. That's how the UINavigationController works. That's logical. However, there are some stern warnings in the slide about communicating between your UIViewControllers. I'm going to quote from this serious of slides: http://cs193p.stanford.edu/downloads/08-NavigationTabBarControllers.pdf Page 16/51: How Not To Share Data Global Variables or singletons This includes your application delegate Direct dependencies make your code less reusable And more difficult to debug & test Ok. I'm down with that. Don't blindly toss all your methods that will be used for communicating between the viewcontroller into your app delegate and reference the viewcontroller instances in the app delegate methods. Fair 'nuff. A bit further on, we get this slide telling us what we should do. Page 18/51: Best Practices for Data Flow Figure out exactly what needs to be communicated Define input parameters for your view controller For communicating back up the hierarchy, use loose coupling Define a generic interface for observers (like delegation) This slide is then followed by what appears to be a place holder slide where the lecturer then apparently demonstrates the best practices using an example with the UIImagePickerController. I wish the videos were available! :( Ok, so... I'm afraid my objc-fu is not so strong. I'm also a bit confused by the final line in the above quote. I've been doing my fair share of googling about this and I found what appears to be a decent article talking about the various methods of Observing/Notification techniques: http://cocoawithlove.com/2008/06/five-approaches-to-listening-observing.html Method #5 even indicates delegates as an method! Except.... objects can only set one delegate at a time. So when I have multiple viewcontroller communication, what am I to do? Ok, that's the set up gang. I know I can easily do my communication methods in the app delegate by reference's the multiple viewcontroller instances in my appdelegate but I want to do this sort of thing the right way. Please help me "do the right thing" by answering the following questions: When I am trying to push a new viewcontroller on the UINavigationController stack, who should be doing this push. Which class/file in my code is the correct place? When I want to affect some piece of data (value of an iVar) in one of my UIViewControllers when I am in a different UIViewController, what is the "right" way to do this? Give that we can only have one delegate set at a time in an object, what would the implementation look like for when the lecturer says "Define a generic interface for observers (like delegation)" . A pseudocode example would be awfully helpful here if possible.
