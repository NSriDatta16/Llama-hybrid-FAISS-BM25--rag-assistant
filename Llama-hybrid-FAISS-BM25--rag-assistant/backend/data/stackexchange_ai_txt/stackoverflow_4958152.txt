[site]: stackoverflow
[post_id]: 4958152
[parent_id]: 4956442
[tags]: 
This is essentially two questions rolled in to one: How to calculate percentage based on task flow How to present the calculation The first depends on how your program is constructed, and is probably easiest answered by thinking about the problem within the context of your program flow. The second can be done in a myriad of ways, of which the simplest have been explained by others already, namely: Using \r to jump to the beginning of the line Using \b x number of times to move the cursor back I've used a third way which hasn't yet been mentioned, and that is to save and restore the cursor position. This allows you to arbitrarily move the cursor around. \e[s stores the current cursor position \e[u restores the cursor to that position Here's an example: #include #include int main(int argc, const char *argv[]) { int i; int tasks = 25; printf("Progress:\e[s"); for(i = 0; i Note that we don't care where the beginning of the line is: we only reprint the actual percentage . You'll notice that the cursor position is now visible right before the percentage, but you can arbitrarily move it anywhere you like. This solution assumes that your terminal is capable of understanding these ANSI commands, which can differ from terminal to terminal. Although I think the aforementioned approach is relatively "safe", have a look at terminfo / ncurses for more on that. Changelog: Rewrote the last paragraph Replaced my initial bash example with a C example
