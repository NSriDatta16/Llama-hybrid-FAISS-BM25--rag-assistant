[site]: stackoverflow
[post_id]: 539961
[parent_id]: 539877
[tags]: 
There are several possible approaches. presuming your class is X: Only use the public interface of X. You will have extensive setup problems and may need a coverage tool to make sure that your code is covered, but there are no special tricks involved. Use the "#define private public" or similar trick to link against a version of X.o that is exposed to everyone. Add a public "static X::unitTest()" method. This means that your code will ship linked to your testing framework. (However, one company I worked with used this for remote diagnostics of the software.) Add "class TestX" as a friend of X. TestX is not shipped in you production dll/exe. It is only defined in your test program, but it has access to X's internals. Others...
