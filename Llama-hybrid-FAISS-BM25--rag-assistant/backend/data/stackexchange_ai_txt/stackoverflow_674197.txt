[site]: stackoverflow
[post_id]: 674197
[parent_id]: 674041
[tags]: 
Some modified code from my project, which has a similar requirement. We have our own historical timezone format so we can't use standard libraries. public class MyProjectTimeZoneFactory { private static Map timeZoneDb; /** * Set up our timezone id mappings; call this from any constructor * or static method that needs it. */ private static void init() { if(null == TimeZoneDb) { timeZoneDb = new HashMap(); // Maybe a TreeMap would be more appropriate timeZoneDb.put(" ","GMT+00"); timeZoneDb.put("EAD ","GMT+10"); timeZoneDb.put("JST ","GMT+9"); // etc. } } public static TimeZone getTimeZone(String id) throws CommandFormatException { init(); TimeZone tz; if(timeZoneDb.containsKey(id)) { tz = TimeZone.getTimeZone((String)timeZoneDb.get(id)); } else { throw new CommandFormatException("Invalid Timezone value"); } return tz; } } You could argue that it would be better to have the map in configuration rather than code - perhaps in a properties file. That may be true - but do remember the Pragmatic Programmers' rule 'Your not going to need it'.
