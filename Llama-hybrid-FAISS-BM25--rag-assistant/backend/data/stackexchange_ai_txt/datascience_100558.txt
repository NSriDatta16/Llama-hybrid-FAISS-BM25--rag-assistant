[site]: datascience
[post_id]: 100558
[parent_id]: 100529
[tags]: 
This seems to be an issue with Catboost , at least there is a (now closed) issue on GitHub . Probably open a new issue to let the developers know about this. I tuned Catboost using bayes_opt from BayesianOptimization in the past (using bayesian optimization as the package name says). Find the main part of the code below and a full example here . def cbfunc(border_count,l2_leaf_reg, depth, learning_rate): params = { 'eval_metric':'MAE', # using MAE here, could also be RMSE or MSE 'early_stopping_rounds': esrounds, 'num_boost_round': brounds, 'use_best_model': True, 'task_type': "GPU" } params['border_count'] = round(border_count,0) params['l2_leaf_reg'] = l2_leaf_reg params['depth'] = round(depth,0) params['learning_rate'] = learning_rate # Cross validation cv_results = cb.cv(cb.Pool(xtrain, ytrain, cat_features=cat_features), params=params,fold_count=3,inverted=False,partition_random_seed=5,shuffle=True, logging_level='Silent') # bayes_opt MAXIMISES: In order to minimise MAE, I use 1/MAE as target value return 1/cv_results['test-MAE-mean'].min() pbounds = { 'border_count': (1,255), # int. 1-255 'l2_leaf_reg': (0,20), # any positive value 'depth': (1,16), # int. up to 16 'learning_rate': (0.01,0.2), } optimizer = BayesianOptimization( f=cbfunc, pbounds=pbounds, verbose=2, # verbose = 1 prints only when a maximum is observed, verbose = 0 is silent random_state=5 ) optimizer.maximize( init_points=2, n_iter=500, )
