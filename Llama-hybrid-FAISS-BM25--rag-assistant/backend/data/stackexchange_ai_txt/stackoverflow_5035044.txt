[site]: stackoverflow
[post_id]: 5035044
[parent_id]: 2270271
[tags]: 
I'm using the following generic method for a retry scenario. I especially want to draw attention to the PreserveStackTrace method which helps to preserve the full call stack trace, because (as I learned the hard way) neither throw or throw ex yields the complete call stack trace information. public static void RetryBeforeThrow (Action action, int retries, int timeout) where T : Exception { int tries = 1; do { try { action(); return; } catch (T ex) { if (retries /// Sets a flag on an so that all the stack trace information is preserved /// when the exception is re-thrown. /// /// This is useful because "throw" removes information, such as the original stack frame. /// public static void PreserveStackTrace(Exception ex) { MethodInfo preserveStackTrace = typeof(Exception).GetMethod("InternalPreserveStackTrace", BindingFlags.Instance | BindingFlags.NonPublic); preserveStackTrace.Invoke(ex, null); }
