[site]: datascience
[post_id]: 126875
[parent_id]: 
[tags]: 
Cluster size distribution

In unsupervized matrix clustering (i.e., no images, no graphs), has anyone ever noticed an issue with clustering algorithms where often the clusters are extremely imbalanced, to the point of the outlier set (datapoints which weren't assigned a cluster), or one of the clusters, sometimes occupying 30-50% of the dataset? This is pervasive across multiple algorithms, yet I found very little discussion anywhere of how to address it and make sure clusters are balanced. Has anyone ever dealt with it before? Do you know of any method meant to address this? Maybe there are algorithms where this doesn't show up? My experience is mostly with Umap+HDBSCAN applied on text embeddings, so maybe there are other setups where this is less of an issue. My approach to this is simply reclustering the outliers until we end up with a small enough set. I do that with many hyparam choices and then pick the models which result in clusters/outliers in sizes not exceeding 10% of the data. I then sort them by standard deviation and choose the one which seems most reasonable (*I dont know how to define this formally yet). Lastly, I merge clusters according to a similarity threshold that leads to the best silhouette score. This step is important to make sure that the reclustering process doesn't create smaller versions of the same clusters found earlier. This process seems to work pretty well, but still I'd like to know if there are other solutions out there.
