[site]: stackoverflow
[post_id]: 2030339
[parent_id]: 2028993
[tags]: 
No problem. Handle the DragOver routed event at the ScrollViewer level. Get the position. If it is near the top of the ScrollViewer bounds, scroll up. If it is near the bottom of the ScrollViewer bounds, scroll down. The scrolling itself is done by calling scrollViewer.LineUp() or scrollViewer.LineDown() . The DragOver events come frequently, so save the value of DateTime.Now in a field each time you call LineUp() or LineDown() . Before calling them again, check DateTime.Now and if not enough time has elapsed, don't call LineUp() or LineDown() . For better control over scrolling speed you can use scrollViewer.ScrollToVerticalOffset(scrollViewer.ContentVerticalOffset + delta) instead of scrollViewer.LineUp() and scrollViewer.LineDown() . You can provide a better user experience if you allow faster scrolling when nearer to the top or bottom of the scroll viewer. This can be done by dividing the scroll area into zones, or calculating the speed from the mouse position. In this case, speed changes can be done by calling LineUp()/LineDown() multiple times when closer to the edge, or by increasing the delta value if you are using ScrollToVerticalOffset . You probably should not modify the timing (DateTime.Now comparison) for this purpose, because it will be unreliable.
