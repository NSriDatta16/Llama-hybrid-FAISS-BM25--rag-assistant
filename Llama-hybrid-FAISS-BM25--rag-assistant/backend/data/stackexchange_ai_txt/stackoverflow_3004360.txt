[site]: stackoverflow
[post_id]: 3004360
[parent_id]: 2996236
[tags]: 
This code uses a System.Threading.Timer. It will look at the millisecond-offset the trigger is called. If the error is outside the accepted range, it will re-adjust the timer and it will correct the interval by averaging the error per tick. class Program { const int MAX_ERROR_IN_MILLISECONDS = 20; const int ONE_SECOND = 1000; const int HALF_SECOND = ONE_SECOND / 2; private static System.Threading.Timer timer; static void Main(string[] args) { timer = new System.Threading.Timer(Tick); timer.Change(ONE_SECOND - DateTime.Now.Millisecond, ONE_SECOND); Console.ReadLine(); } private static int ticksSynced = 0; private static int currInterval = ONE_SECOND; private static void Tick(object s) { var ms = DateTime.UtcNow.Millisecond; var diff = ms > HALF_SECOND ? ms - ONE_SECOND : ms; if (Math.Abs(diff) As you can see, you cannot trigger exactly on the second change in Windows. You can try to get close.
