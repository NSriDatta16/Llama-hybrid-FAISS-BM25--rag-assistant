[site]: stackoverflow
[post_id]: 4414120
[parent_id]: 
[tags]: 
Asp.net MVC 2 Areas. Only one will work

This is my goal: I need to two (or more) "Areas" for my MVC web app. They would be accessed like so: /* Home */ http://example.com/ http://example.com/about http://example.com/faq http://example.com/contact /* Admin */ http://example.com/admin http://example.com/admin/login http://example.com/admin/account http://example.com/admin/ect I would like to organize the project like the following: MyExampleMVC2AreasProject/ Areas/ Admin/ Controllers/ Models/ Views/ Home/ Shared/ Site.Master Web.Config AdminAreaRegistration.cs Web/ Controllers/ Models/ Views/ Home/ Shared/ Site.Master Web.Config WebAreaRegistration.cs Global.asax Web.Config So, in Global.asax I have: public static void RegisterRoutes(RouteCollection routes) { routes.IgnoreRoute("{resource}.axd/{*pathInfo}"); routes.MapRoute( "Default", // Route name "{action}/{id}", // URL with parameters new { controller = "Home", action = "Index", id = UrlParameter.Optional } // Parameter defaults ); } protected void Application_Start() { AreaRegistration.RegisterAllAreas(); RegisterRoutes(RouteTable.Routes); } Here is WebAreaRegistration.cs using System.Web.Mvc; namespace MyExampleMVC2AreasProject.Areas.Web { public class WebAreaRegistration : AreaRegistration { public override string AreaName { get { return "Web"; } } public override void RegisterArea(AreaRegistrationContext context) { context.MapRoute( "WebDefault", "{action}/{id}", new { controller = "Home", action = "Index", id = UrlParameter.Optional } ); } } } 'AdminAreadRegistration.cs' is set up the same but the url param is Admin/{action}/{id} . With the setup above the Web "Area" works great (example.com/about, example.com/contact, etc). What do I need to do to get the Admin "Area" hooked up with the routes the way I want them? I just get 404 ed now. I've tried every combination of routes, routes w/namespaces, URL Parameters, parameter defaults, etc, I could think of. I have a feeling I'm missing something pretty basic.
