[site]: crossvalidated
[post_id]: 176237
[parent_id]: 
[tags]: 
Understanding simple weighted average

The basic question is: Why is the weighted average of the column that is the "weight" different than it's mean? I'll use an example below. It makes sense to me why To_Weight looks significantly different when you use the Weighted column. But intuitively I can't seem to make sense of why the Weighted Average of the thing we're using as a weight changes so different from it's average? In [68]: d = {1: {'Weighted': 1200, 'To_Weight': 20}, 2: {'Weighted': 1500, 'To_Weight': 10}, 3:{'Weighted': 12000, 'To_Weight': 10}, 4: {'Weighted': 12000, 'To_Weight': 5}} In [69]: df = pd.DataFrame.from_dict(d,orient='index') In [70]: df Out[70]: Weighted To_Weight 1 1200 20 2 1500 10 3 12000 10 4 12000 5 In [71]: df.Weighted.mean() Out[71]: 6675.0 In [72]: df.To_Weight.mean() Out[72]: 11.25 In [73]: df['WA_TO'] = df['To_Weight'] * df['Weighted'] / df['Weighted'].sum() In [75]: df['WA_TO'].sum() Out[75]: 8.202247191011237 In [76]: df['WA_Weighted'] = df['Weighted'] * df['Weighted'] / df['Weighted'].sum() In [77]: df['WA_Weighted'].sum() Out[77]: 10924.719101123595
