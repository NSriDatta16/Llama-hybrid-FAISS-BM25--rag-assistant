[site]: stackoverflow
[post_id]: 3517880
[parent_id]: 3517795
[tags]: 
I'm pretty sure that the answer here is a rather emphatic "No" . By your definition, resize() should allocate new storage and initialize with the default constructor if I am reading this correctly. Then you would manipulate the objects by indexing into the collection and manipulating the reference instead of "inserting" into the collection. Otherwise, you need the copy constructor and assignment operator. All of the containers in the Standard Library have this requirement. You might want to look into using something like boost::ptr_vector . Since you are inserting pointers, you don't have to worry about copying. This would require that you dynamically allocate all of your objects though.
