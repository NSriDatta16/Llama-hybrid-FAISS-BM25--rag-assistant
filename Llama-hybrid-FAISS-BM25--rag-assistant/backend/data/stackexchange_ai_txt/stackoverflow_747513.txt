[site]: stackoverflow
[post_id]: 747513
[parent_id]: 747310
[tags]: 
A few years ago I made the move from VS to an emacs/make type environment and I have never looked back. The idea is to use a makefile to handle the project management side of an IDE and I use emacs+gdb for editing and debugging. It will take you a while to get used to emacs but if you stick at it it's well worth the effort. Once you've started emacs, press "Ctrl+H" followed by "t" and this will bring you to the tutorial page. After you've mastered the basics, you can debug a program in a similar way to any IDE/debugger interface. I must admit that even after all this time, I still use a set of VS key mappings that I setup when I first moved to emacs! (global-set-key [f7] 'compile) ;; Run the compile command (global-set-key [f4] 'next-error) ;; The next compile error (global-set-key [S-f4] 'previous-error) ;; The previous compile error (global-set-key [f5] 'gdb) ;; Start the debugger The following sets the "VS" key mappings to the different GDB commands which you might use: (add-hook 'gud-mode-hook '(lambda () (define-key (current-local-map) [f10] 'gud-next) (define-key (current-local-map) [f11] 'gud-step) (define-key (current-local-map) [\S-f11] 'gud-finish) (define-key (current-local-map) [f5] 'gud-cont) )) With the above keymappings, I press 'f5' which prompts me to run gdb (and to this command I add the binary I wish to debug). Once gdb is loaded, you press 'f5' to continue, 'f10' to step-over, 'f11' to step-into and 'shirt+f11' to step-out. Finally, every time you start 'gdb', it will read a file called '.gdbinit' in your home directory. A different StackOverflow question had this answer which brought stl-views to my attention. stl-views is a set of helper functions for gdb that show you the contents of the different types of STL containers. The instructions for how to use it can be found at the top of the link.
