[site]: stackoverflow
[post_id]: 3867844
[parent_id]: 3860381
[tags]: 
The following works. I worked with the data as you had it defined. It could be easier to work with if the values for the wedges were themselves in an array. That said, it was interesting teasing out the data from the object. def creates a local variable. I chose to use that for values and total rather than normalize as it then made it easier to add lables later on. There's possibly a more elegant way of doing this, but you should be able to see one approach without looping. var myData = [{dept:"Accounting",sal:90000,equ:10000,trvl:267,extra:5000}, {dept:"Sales",sal:20000,equ:10000,trvl:3049,extra:7000}, {dept:"Consulting",sal:90000,equ:58000,trvl:983,extra:17000}]; var vis = new pv.Panel() .width(200) .height(200) .data(myData); vis.add(pv.Wedge) .def("values", function(d) pv.entries(d).filter(function(e) !isNaN(e.value))) .def("total", function(d) pv.sum(this.values(), function(e) e.value)) .data(function(d) this.values()) .left(100) .bottom(100) .outerRadius(90) .angle(function(d) (d.value / this.total()) * 2 * Math.PI ) .anchor("center").add(pv.Label) .text(function(d) d.key); vis.add(pv.Label) .bottom(0) .left(50) .textAlign("center") .text(function(d) d.dept); vis.render();
