[site]: stackoverflow
[post_id]: 749485
[parent_id]: 724096
[tags]: 
From what I understand you need a file system and not a memory allocation system. At first, in embedded systems dynamic memory allocation in a disk is a contradictory term. A disk, either a hard disk or a flash device, used for persistent storage is much different than memory. It is not only the way you access it, but the fact that disk storage isn't 100% reliable. When writing to a disk you need to have an algorithm for avoiding bad sectors. Have you thought of this or can you consider your disk fault free? A file system will deal both with space allocation and bad sectors issues. FAT is usually used in embedded devices. Although FAT's fragmentation performance is rather poor, this hasn't prevented it from being used in many embedded devices. Most flash based devices actually use FAT. Anyway, I suggest to start with what you have now: your operation system (if you use any) and the driver for your disk. Investigate if a suitable solution is already supported from these. Also keep in mind that embedded devices are more difficult to debug - if you set to implement your own algorithms expect longer development times.
