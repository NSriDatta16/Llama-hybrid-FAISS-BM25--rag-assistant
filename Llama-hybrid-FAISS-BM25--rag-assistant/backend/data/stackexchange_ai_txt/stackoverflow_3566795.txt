[site]: stackoverflow
[post_id]: 3566795
[parent_id]: 3566599
[tags]: 
At the API level, for the reason you mentioned: you're independent of the underlying storage mechanism of your application. A good guideline is Persistence Ignorance: make your business logic as little aware of the storage mechanism as possible . This implies that business logic shouldn't be located in your storage layer either. So stored procedures or stored JavaScript functions shouldn't contain business logic. Some advantages of this: You can swap the underlying database with minimal effort and without having to re-implement your business logic in the new database. All of your business logic is contained inside your application layer, making the code base easier to understand and debug. The only functions you should store in MongoDB are 'utility' functions; functions that simplify common operations, such as string operations, but are not tied to your business logic in any way.
