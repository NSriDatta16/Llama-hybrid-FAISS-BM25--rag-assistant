[site]: stackoverflow
[post_id]: 1118701
[parent_id]: 1100241
[tags]: 
Generally speaking there is no difference in the performance of simple subqueries vs joins - it is a common misconception that subqueries are much slower (because SQL server has to loop through the inner query), however generally speaking this is simply untrue! During the compilation process SQL server produces an execution tree, and often in these trees subqueries are equivalent to joins. Its worth noting that your two queries are not logically the same and produced different results for me, the second query should actually read something along the lines of: (this still isnt identical, but its closer) SELECT t.PKey, t.Billable, c.LastName, m.Description, lt.TaskName, t.StartTime, t.EndTime, t.SavedTime FROM dbo.TopicLog AS t LEFT OUTER JOIN Contact.dbo.Contacts as c on c.Pkey = t.Contacts_PKey LEFT OUTER JOIN Common.dbo.LMain as m on m.PKey = t.DType LEFT OUTER JOIN Common.dbo.LTask as lt on lt.PKey = t.TaskType WHERE t.StartTime > '7/9/09' ORDER BY t.StartTime In my testing the subquery produced an execution plan with a drastically lower number of reads (15 as opposed to 1000), however slightly higher cpu - on average the execution times were roughly equivalent. Its worth noting however that this wont always be the case (particularly when evaluating functions inside a subquery), and sometimes you may run into problems due to a subquery. Generally speaking however its best to worry about such cases only when you run into performance problems.
