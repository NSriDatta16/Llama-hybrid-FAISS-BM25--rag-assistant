[site]: stackoverflow
[post_id]: 2498636
[parent_id]: 2498580
[tags]: 
There are 2 distinct cases: System A permanently generates data faster than can be processed by B System A produces data in batches; averaged over e.g. a day it is less than B can handle The second case can be solved by queueing (JMS), the first case is more difficult. If you can scale up the hardware on B sufficiently, than that would be the way to go. You could optimize the slowest part of B (optimize the code), but you'd have to do all kinds of testing again. You could check if you can work with multiple B's (load balancing), but the application should support that (multiple instances updating the same data in the DB is not good:). It all depends on the specific load distribution and the architecture of the apps.
