[site]: stackoverflow
[post_id]: 2639168
[parent_id]: 2639085
[tags]: 
You should use ArgumentException since the problem is the Guid argument "tool" passed doesn't meet any of the supported types for this method. The error message should state as such. It seems to me, though, that the reason this bugs you and is difficult to tell, is the awkward nature of the case. This method seems to be working sort of like a factory but for specific types that might implement this interface. Shouldn't Hammer implement its own GetTool and always return an ITool of type Hammer? Otherwise you get what you have here which is an attempt to anticipate what all types might come through. That seems destined for trouble should types change or new ones be added. Then the onus is on the original method to support the new type, instead of the new type supporting this common interface method. Isn't that the goal of "pluggable" classes, which is what interfaces sort of encourage?
