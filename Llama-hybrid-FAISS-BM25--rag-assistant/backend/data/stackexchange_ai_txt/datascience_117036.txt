[site]: datascience
[post_id]: 117036
[parent_id]: 
[tags]: 
I get 100% on my test set using random forest. What is wrong?

I am getting 100% accuracy on my test set when trained using random forest. Is there something wrong with my model? Code: import pandas as pd import numpy as np from sklearn.model_selection import train_test_split from sklearn.neighbors import KNeighborsClassifier from sklearn.ensemble import RandomForestClassifier from sklearn.metrics import accuracy_score from sklearn import preprocessing from sklearn.metrics import classification_report, confusion_matrix from sklearn.preprocessing import OneHotEncoder from sklearn.compose import ColumnTransformer from sklearn.pipeline import Pipeline from sklearn.preprocessing import StandardScaler ds = pd.read_csv('census-income.test(no unk.).csv') df = pd.read_csv('census-income.data(no unk.).csv') X = df y = df['income'] X_T = ds y_T = ds['income'] categorical_preprocessor = Pipeline(steps=[ ("onehot", OneHotEncoder(handle_unknown="ignore")) ]) preprocessor = ColumnTransformer([ ("categorical", categorical_preprocessor, ['workclass','education','martial-status','occupation','relationship','race','sex', 'native-country','income']), ],remainder='passthrough') pipe = Pipeline(steps=[ ("preprocessor", preprocessor), ("classifier", RandomForestClassifier(n_estimators=128, max_depth=7)) ]) X_train = X X_test = X_T y_train = y y_test = y_T pipe.fit(X_train, y_train) y_pred = pipe.predict(X_test) print(classification_report(y_test, y_pred, digits=4)) print(confusion_matrix(y_test, y_pred)) Confusion matrix [[11360 0] [ 0 3700]] Training data Test data
