[site]: crossvalidated
[post_id]: 253983
[parent_id]: 253472
[tags]: 
You can represent all 26 letters (assuming you're dealing with the English alphabet) and 10 digits with a binary code. This is not an issue, IMO. IF I understood correctly, you want to map an \mathbb{R}^7 input vector to an \mathbb{R}^36 output vector (probably using a softmax output layer). I believe you'd be better off by following the standard convention in the machine learning / neural network / deep learning communities: treat this problem as a image recognition problem, that is, feed the network with a (L x W) vector of pixel intensities (assuming a L x W sized image, in pixels) and training a NN (convolutional networks seem to be rather well suited for this) with a softmax output layer ("softmax" is a fancy name for multinomial logit). In the following link you can find a lengthier explanation: https://www.tensorflow.org/tutorials/mnist/beginners/ The MNIST problem is the "Hello, world!" of deep learning and there are tons of examples/implementations on the web.
