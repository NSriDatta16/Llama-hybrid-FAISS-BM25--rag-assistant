[site]: stackoverflow
[post_id]: 5447845
[parent_id]: 5447535
[tags]: 
There is no way a single function can return void as well as returning a type. This is because void is not part of any inheritance chain, it is a top level concept meaning something very specific; it doesn't return anything. Don't get confused between null and void , undefined and void , NaN and void . They are different concepts. The answer to your question is simply that it can't, nor should it be done. When you hit a problem like this, it's good practice to step back and ask 'why' do you need to do this. I would highly encourage that you mark this question as closed, and instead posted a higher level problem. For example, How would I structure a class that has a variable xxx that does this and that and will be eventually set to a number when the user clicks. But if the user never clicks, it will be unset.... ecetera ecetera.... If you are 100% convinced you should do something like you're asking, you could 'fake' it by function f():* { var xxx:Number = 999; if(xxx) { return xxx; } else { return undefined; } } var xx:* = f(); trace(xx); But remember, from that point onwards you will need to check everytime xx is used to see if it undefined . Otherwise it will lead to errors.
