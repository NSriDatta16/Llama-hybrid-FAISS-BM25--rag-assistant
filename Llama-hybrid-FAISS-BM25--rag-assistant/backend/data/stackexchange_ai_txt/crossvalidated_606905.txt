[site]: crossvalidated
[post_id]: 606905
[parent_id]: 606865
[tags]: 
First off, I would not put ARIMA at the top of my list. On the one hand, as you write, you need data to fit an ARIMA model. On the other hand, ARIMA allows for non-integer and negative values, which does not make a lot of sense in your situation, but this is usually not a major problem. On the third hand, I see little reason for bed occupancy to exhibit autoregressive or moving average behavior, so an automatic ARIMA model selection algorithm is likely to get hung up on noise. (Then again, if your hospital is overworked, then people may not get good enough care, so high occupancy today may be associated with high occupancy tomorrow. Or conversely, if your beds are full, your staff may have an incentive to "encourage" patients to be discharged, so high occupancy today may be associated with low occupancy tomorrow. You could take a look once you have data, but I would not expect the signal to be strong. ARIMA is not very good at forecasting, see here and here .) Instead, I would simply simulate. Ask your domain experts about how many new stroke patients they expect each day, and what variability this figure might have. Also, ask the same question about how long any given new patient might stay. You will probably need to translate your experts' opinions into some sort of probability distributions, like Poissons or Negbins. You might already have data on at least some of these pieces of information; I find it hard to believe a hospital does not have records about past patients, their indications and their length of stay. If so, you can draw from these empirical distributions. Then simulate: draw a random number of new patients coming in today, and for each patient, draw how long they will stay. Fill your virtual beds, tracking how long each bed occupant still has to stay. Increment the date, discharge some patients, take new ones in, rinse and repeat. Do this over 100 days, multiple times, plot time courses or calculate summary statistics like averages and quantiles. This should not be hard in any programming environment, like Python or R. The advantage is that you can immediately perform a sensitivity analysis, e.g., on what happens if the length of stay has more or less variability than your experts expected.
