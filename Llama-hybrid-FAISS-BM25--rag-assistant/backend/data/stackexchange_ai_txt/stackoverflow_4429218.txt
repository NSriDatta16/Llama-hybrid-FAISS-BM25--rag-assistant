[site]: stackoverflow
[post_id]: 4429218
[parent_id]: 4424020
[tags]: 
For your situation, it seems that it is more important part to implement the interface than the data storage. To store the data, you can use a database table or tags. Each record in the database (or tag) should have the following properties: Year Season Undergradure or Graduate Subject: CM, EM, QM, SM, Mathematical Methods, and Miscellaneous Problem number (is it neccesary?) Question Answer Search and return all Electricity & Magnetism problems. Directly query the database and you will get an array, then display some or all questions. Create a random qualifying exam â€” meaning a new 20 question test randomly picking 2 Undergrad mechanics problems, 2 Undergrade E&M problems, etc. from past qualifying exams (over some restricted date range). To generate a random exam, you should first outline the number of questions for each category and the years it drawn from. For example, if you want 2 UG EM question. Query the database for all UG EM questions and then perform a random shuffling on the question array. Finally, select the first two of them and display this question to student. Continue with the other categories and you will get a complete random exam paper. Have the option to hide or display the solutions on results. It is your job to determine whether you want the students to see answer. It should be controlled by only one variable.
