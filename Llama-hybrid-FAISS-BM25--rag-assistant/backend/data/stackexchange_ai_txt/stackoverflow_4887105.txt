[site]: stackoverflow
[post_id]: 4887105
[parent_id]: 4886904
[tags]: 
You can subclass ArrayList and trigger an action (call a callback for example) after some of it's methods were invoked. Then replace the original ArrayList in your Android class with your implementation. P.S. Example: public class MyArrayList extends ArrayList { @Override public boolean add(E object) { // Do some action here return super.add(object); }; @Override public void add(int index, E object) { super.add(index, object); // Do some action here }; @Override public E remove(int index) { // Do some action here return super.remove(index); } // etc... } Since it subclasses ArrayList you won't get any errors in your code, and everything that worked before, will work without any changes. With a little creativity the class can be made more elegant and efficient, but the general idea is there. Edit: Yep. Sorry, was a little hasty with those returns. Fixed, and thanks Petar
