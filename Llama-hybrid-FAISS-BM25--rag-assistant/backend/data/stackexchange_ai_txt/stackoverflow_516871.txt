[site]: stackoverflow
[post_id]: 516871
[parent_id]: 516249
[tags]: 
One thing to consider is your application's posture. Is it a sovereign app, where the user would be expected to devote their entire attention to it for a while? I recently redesigned a page in our web app which allows the user to perform translations into other languages. In this case, the user was going to be "diving in" to this part of the application for a while, so I stripped out the usual navigational elements which would be a distraction to allow more real estate for the task at hand. In this case, the user base was limited to people inside my company, who I knew all had widescreen monitors, so it was easy to make the decision to go wide. In general, I'd say that one should still design for non-widescreen monitors, but in cases where there is a significant advantage, make the design capable of taking advantage of the additional space. I've seen some pages that were laid out for regular screens, but used JavaScript to detect whether the page was wider and rearrange some page elements if it was. That way, the default configuration was always usable, but users with wide screens and JavaScript would get a better use of their space.
