[site]: stackoverflow
[post_id]: 1536501
[parent_id]: 1531945
[tags]: 
Jon Skeets 'adequate' nails it, with the additional provision that for a library you don't know yet what's adequate, so it's better to err on the safe side. It is one of the many stakes you must not get wrong, but the quality of your app is largely determined by the weakest link. Performance is definitely always important in a certain sense - maybe not the one you mean: namely in all phases of development. In Big O notation, what's inside the parantheses is largely decided by design - both components isolation and data storage. Choice of algorithm will usually only best/worst case behavior (unless you start with decidedly substandard algorithms). Code optimizations will mostly affect the constant factor - which shouldn't be neglected, either. But that's true for all aspects of code: in any stage, you have a good chance to fail any aspect - stability, maintainability, compatibility etc. Performance needs to be balanced, so that no aspect is left behind.
