[site]: crossvalidated
[post_id]: 511696
[parent_id]: 511685
[tags]: 
Without seeing your code, it is hard to spell out the difference in results. But it sure is possible to get the same results in either package, as - as you correctly point out - all three commands ultimately just run OLS regressions. It is with different degrees of ease, though, reflecting the purpose of the packages. lm is, of course, for all sorts of regressions, while the other two explicitly have time series regressions in mind, and vars even multivariate ones. Here is an example. library(dynlm) library(vars) x $x[c(7,1,3,5,2,4,6),1], coef(VAR(cbind(x,y), p = 3, type = "const"))$ y[c(7,1,3,5,2,4,6),1]), c(coef(lm(x[4:100]~x[3:99]+x[2:98]+x[1:97]+y[3:99]+y[2:98]+y[1:97])), coef(lm(y[4:100]~x[3:99]+x[2:98]+x[1:97]+y[3:99]+y[2:98]+y[1:97]))), check.attributes=F) dynlm(x ~ L(x, 1:3) + L(y, 1:3)) dynlm(y ~ L(x, 1:3) + L(y, 1:3)) VAR(cbind(x,y), p = 3, type = "const") lm(x[4:100]~x[3:99]+x[2:98]+x[1:97]+y[3:99]+y[2:98]+y[1:97]) lm(y[4:100]~x[3:99]+x[2:98]+x[1:97]+y[3:99]+y[2:98]+y[1:97]) Output: > dynlm(x ~ L(x, 1:3) + L(y, 1:3)) Time series regression with "ts" data: Start = 4, End = 100 Call: dynlm(formula = x ~ L(x, 1:3) + L(y, 1:3)) Coefficients: (Intercept) L(x, 1:3)1 L(x, 1:3)2 L(x, 1:3)3 L(y, 1:3)1 L(y, 1:3)2 L(y, 1:3)3 -0.14797 -0.13608 0.04310 -0.14119 0.03736 -0.20556 -0.07980 > dynlm(y ~ L(x, 1:3) + L(y, 1:3)) Time series regression with "ts" data: Start = 4, End = 100 Call: dynlm(formula = y ~ L(x, 1:3) + L(y, 1:3)) Coefficients: (Intercept) L(x, 1:3)1 L(x, 1:3)2 L(x, 1:3)3 L(y, 1:3)1 L(y, 1:3)2 L(y, 1:3)3 0.001093 0.008268 0.101429 -0.122984 0.039118 0.060185 -0.194614 > VAR(cbind(x,y), p = 3, type = "const") VAR Estimation Results: ======================= Estimated coefficients for equation x: ====================================== Call: x = x.l1 + y.l1 + x.l2 + y.l2 + x.l3 + y.l3 + const x.l1 y.l1 x.l2 y.l2 x.l3 y.l3 const -0.13608446 0.03735653 0.04310129 -0.20555950 -0.14119156 -0.07980048 -0.14797419 Estimated coefficients for equation y: ====================================== Call: y = x.l1 + y.l1 + x.l2 + y.l2 + x.l3 + y.l3 + const x.l1 y.l1 x.l2 y.l2 x.l3 y.l3 const 0.008267836 0.039117666 0.101428691 0.060184617 -0.122984226 -0.194613595 0.001093310 > lm(x[4:100]~x[3:99]+x[2:98]+x[1:97]+y[3:99]+y[2:98]+y[1:97]) Call: lm(formula = x[4:100] ~ x[3:99] + x[2:98] + x[1:97] + y[3:99] + y[2:98] + y[1:97]) Coefficients: (Intercept) x[3:99] x[2:98] x[1:97] y[3:99] y[2:98] y[1:97] -0.14797 -0.13608 0.04310 -0.14119 0.03736 -0.20556 -0.07980 > lm(y[4:100]~x[3:99]+x[2:98]+x[1:97]+y[3:99]+y[2:98]+y[1:97]) Call: lm(formula = y[4:100] ~ x[3:99] + x[2:98] + x[1:97] + y[3:99] + y[2:98] + y[1:97]) Coefficients: (Intercept) x[3:99] x[2:98] x[1:97] y[3:99] y[2:98] y[1:97] 0.001093 0.008268 0.101429 -0.122984 0.039118 0.060185 -0.194614
