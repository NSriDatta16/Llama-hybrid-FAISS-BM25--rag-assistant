[site]: crossvalidated
[post_id]: 24248
[parent_id]: 24242
[tags]: 
You can check your "contrasts" are the default by options() and looking for: $contrasts unordered ordered "contr.treatment" "contr.poly" If your unordered contrasts are set as contr.treatment (as they should be unless you've changed them), then the first level of each of your factors will be set as a baseline. You will only be given estimates for the coefficients in front of the dummy variables created for other levels of the factor. In effect, those coefficients will be "how different on average is the response variable at this level of the factor, compared to the baseline level of the factor, having controlled for everything else in the model". I am guessing from your output there is a an h0 and f0 which are the baseline levels for h and f (unless you have a non-default option for contrasts, in which case there are several possibilities; try ?contr.treatment for some help). It's similar with the interaction. If my previous paragraph is correct, the estimate given for a will really be the slope for a when h=h0 . The estimates given in the summary that apply to the interactions are how much that slope changes for different levels of h . So in your example where h=h1 and f=f2, try: log(c) = 1.791294(log(d)) + (0.037362 - 0.085658) (a) + 0.870735 + 0.816825 -0.679695 Oh, and you can use predict() to do a lot of useful things too... if you actually want to predict something (rather than write out the equation for a report). Try ?predict.lm to see what predict() does to an object created by lm .
