[site]: stackoverflow
[post_id]: 1549331
[parent_id]: 1549321
[tags]: 
As noted by Richie, typeof will return 'object', not the name of the function. You should use the 'constructor' property . Use 'instanceof' operator. Also, I have used two 'if statements' (instead of one, like you did) to throw different error message based on the particular error. This may mean a little more code, but when the code breaks, you know exactly what went wrong. Working demo â†’ Code: function Roof(type, material) { this.getType = function() { return type; } this.getMaterial = function() { return material; } } function Garage(numberOfCars) { this.getNumberOfCars = function() { return numberOfCars; } } function House(roof, garage) { if (roof instanceof Roof) { throw new Error('Argument roof is not of type Roof'); } if(garage instanceof Garage) { throw new Error('Argument garage must be of type Garage.'); } this.getRoof = function() { return roof; } this.getGarage = function() { return garage; } } myRoof = new Roof("cross gabled", "wood"); myGarage = new Garage(3); myHouse = new House(myRoof, myGarage); alert(myHouse.getRoof().getType());
