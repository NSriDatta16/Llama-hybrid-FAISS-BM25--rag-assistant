[site]: stackoverflow
[post_id]: 5528587
[parent_id]: 
[tags]: 
is Functor used for defining properties of mapping and how to define a mapping's properties in Haskell?

I am confused about using Functor is Functor used for defining properties of mapping and how to write a mapping's properties in Haskell? if so, can haskell be used to generate function or other things after definition written Malformed head of type or class declaration: flow x y import Control.Applicative class flow x y where { f :: x y -> x; } // this line i do not know whether is enforced to write // how to write this map instance flow Int Int where flow t flow(s, p) = flow(t+s, p) flow 0 p = p if there are more runnable example rather than the definition of the haskell, it would be better when i replace properties in example found in google, usually can not run, or fragments when use example about mapping, for example A -> B, there are data A data B defined first, but do not know why use data as a type defined, when i read category theory, there are arrows and objects both are Hom, Functor is from Hom to Hom, does it mean data represent Hom? When compare with software Singular, i become more confusing. Hom is a operation of kontraHom and Kohom and take two matrix. Do Hom have different meaning in Haskell and Singular
