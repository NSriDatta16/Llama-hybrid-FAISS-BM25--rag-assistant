[site]: stackoverflow
[post_id]: 5463245
[parent_id]: 5462918
[tags]: 
If you do go down the route of managing this yourself, bear in mind that all references across the AppDomain will be via proxy references and not actually pointing to the instance. All of your marshalled instances must also derive from MarshalByRefObject in order for the proxies to be generated. One option you could use is to organize your Game so that almost the entire game is in one AppDomain, with the main AppDomain being a relatively shallow hosting shell. This minimizes the number of cross-AppDomain calls you make while the game is actually running, which will tend to be slow. To re-load add-ons, you would then: Serialize your game state using something like DataContractSerializer that can maintain references. Unload entire Game AppDomain Load new Game AppDomain Deserialize your game state, which will now resolve to the newly loaded types when reconstructing them.
