[site]: stackoverflow
[post_id]: 250761
[parent_id]: 250717
[tags]: 
grep -A 5 FAILED log.txt | \ # Get FAILED and dst and other lines egrep '(FAILED|dst=)' | \ # Just the FAILED/dst lines egrep -o "err:[0-9]*|dst=[0-9]*" | \ # Just the err: and dst= phrases cut -d':' -f 2 | \ # Strip "err:" from err: lines cut -d '=' -f 2 | \ # Strip "dst=" from dst= lines xargs -n 2 # Combine pairs of numbers 023 447872123456 024 447872987654 As with all shell "one"-liners, there is almost certainly a more elegant way to do this. However, I find the iterative approach very successful for getting what I want: start with too much information (your grep), then narrow down the lines I want (with grep), then snip out the parts of each line that I want (with cut). While using the linux toolbox takes more lines, you only have to know the basics of a few commands to do just about anything you want. An alternative is to use awk, python, or other scripting languages, which require more specialized programming knowledge but will take less screen space.
