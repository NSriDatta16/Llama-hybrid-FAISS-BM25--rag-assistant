[site]: stackoverflow
[post_id]: 4250845
[parent_id]: 4250556
[tags]: 
metatables are functions that are called under certain conditions. Take the metatable index "__newindex" (two underscores), when you assign a function to this, that function will be called when ever you add a new index to a table, like; table['wut'] = 'lol'; this is an example of a custom metatable using '__newindex'. ATable = {} setmetatable(ATable, {__newindex = function(t,k,v) print("Attention! Index \"" .. k .. "\" now contains the value \'" .. v .. "\' in " .. tostring(t)); end}); ATable["Hey"]="Dog"; the output: Attention! Index "Hey" now contains the value 'Dog' in table: 0022B000 metatables can also be used to describe how Tables should interact with other Tables, and different values. This is a list of all the possible metatable indexes you can use * __index(object, key) -- Index access "table[key]". * __newindex(object, key, value) -- Index assignment "table[key] = value". * __call(object, arg) -- called when Lua calls the object. arg is the argument passed. * __len(object) -- The # length of operator. * __concat(object1, object2) -- The .. concatination operator. * __eq(object1, object2) -- The == equal to operator. * __lt(object1, object2) -- The I hope this clears things up, if you need a few more examples, click here .
