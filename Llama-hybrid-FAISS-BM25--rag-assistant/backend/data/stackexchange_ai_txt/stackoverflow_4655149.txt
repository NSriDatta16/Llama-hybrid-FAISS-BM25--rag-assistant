[site]: stackoverflow
[post_id]: 4655149
[parent_id]: 
[tags]: 
elegant way to create&pass multi-dimensional array in c++?

first question: for known dimensions, we don't need new/malloc for the creation const int row = 3; const int col = 2; int tst_matrix[row][col] ={{1,2},{3,4},{5,6}} however, there is no easy to pass this two-dimensional array to another function, right? because int matrix_process(int in_matrix[][]) is illegal, you have to specify all the dimensions except the first one. if I need to change the content of in_matrix, how could I easily pass tst_matrix to the function matrix_process? second question: what's the standard way to create 2-dimensional array in c++ with new? I dont wanna use std::vector etc.. here. here is what I come up with, is it the best way? int **tst_arr = new int*[5]; int i=0, j=0; for (i=0;i In addition, if I pass tst_array to another function, like: int change_row_col( int **a) { ..................... //check which element is 0 for (i=0; i In addition, if I use ( (a+i)+j), the result is not what I want. Here is the complete testing code I had: #include using namespace std; //Input Matrix--a: Array[M][N] int change_row_col( int **a) { int i,j; int* row = new int[5]; int* col = new int[5]; //initialization for(i=0;i
