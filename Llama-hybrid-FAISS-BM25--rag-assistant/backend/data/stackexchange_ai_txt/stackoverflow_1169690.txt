[site]: stackoverflow
[post_id]: 1169690
[parent_id]: 1169608
[tags]: 
No, that string, as it is, doesn't need any escaping :). var=' ' echo "$var" | grep -v "$var" # prints nothing echo "$var" | sed "s#$var#complete match#" # prints "complete match" If you need to use generic string with any number of any special chars, then you'll need to escape it in reverse order of what it would be unescaped in. In case of sed it is once for bash and once for sed's regexp. Bash can be bypassed by var="$(cat file_with_search_string)" For sed you'll need to escape backslash first, and then sed border character (# in above example) and all regexp controls -- ^$[].*+? and so on. var="${var//\\/\\\\}" var="${var//#/\\#}" var="${var//[/\\[}" # ... # I'm sure this can somehow be converted into tr script grep -rl $1 . | xargs sed -i .backup "s#$var#here be dragons#g"
