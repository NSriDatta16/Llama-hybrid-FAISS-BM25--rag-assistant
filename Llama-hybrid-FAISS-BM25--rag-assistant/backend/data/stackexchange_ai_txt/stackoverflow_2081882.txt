[site]: stackoverflow
[post_id]: 2081882
[parent_id]: 2081862
[tags]: 
Practically speaking, TOKEN: (UNICODE)+ is completely useless. Since everything is a token character, if you try to use such a rule to match a Java program, say, it will simply match the whole program and return it to you as one big token. You really do need to break your characters down into different groups if you want to split your input apart into meaningful fragments. It might help you to take a look at how the "pros" have done it. Here is a BNF grammar for Java , and here is BNF for an identifier , which shows how they took to the trouble to group out identifier ::= "a..z,$,_" { "a..z,$,_,0..9,unicode character over 00C0" }
