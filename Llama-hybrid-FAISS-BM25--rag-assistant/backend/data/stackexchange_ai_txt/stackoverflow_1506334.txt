[site]: stackoverflow
[post_id]: 1506334
[parent_id]: 1500565
[tags]: 
I ended up using the PropSheetProc callback to capture the property sheet's window handle, then hook up a subclass window procedure, like this: // This is not officially defined, but the whole world uses it. #define ID_APPLY_NOW 0x3021 WNDPROC origWinProc; LRESULT CALLBACK MyWinProc(HWND hwndDlg, UINT msg, WPARAM wParam, LPARAM lParam) { // Call the original window procedure. LRESULT retVal = CallWindowProc(origWinProc, hwndDlg, msg, wParam, lParam); // Now, and only now, do our own stuff. switch (msg) { case WM_COMMAND: switch (LOWORD(wParam)) { case IDOK: case ID_APPLY_NOW: applyConfig(); saveConfig(); break; } break; } // Return the original winproc's result. return retVal; } int CALLBACK myPropSheetProc(HWND hwndDlg, UINT msg, LPARAM lParam) { switch (msg) { case PSCB_INITIALIZED: // Override the property sheet's window procedure with our own. origWinProc = (WNDPROC)SetWindowLongPtr(hwndDlg, GWLP_WNDPROC, (LONG_PTR)&MyWinProc); break; } return 0; } (Yes, I use switch statements even if there is only one case to consider. I'm strange like that.)
