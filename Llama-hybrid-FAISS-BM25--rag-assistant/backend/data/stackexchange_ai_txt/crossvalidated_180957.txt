[site]: crossvalidated
[post_id]: 180957
[parent_id]: 180458
[tags]: 
I propose bellow an easy way to get predictions given your data. Is there a better way to record data that will make it easier to apply prediction modeling algorithms? Yes but the way you record it is good enough to get some predictions very straightforwardly using ML. You could always do better: record precise date and time, record your negative observations (i.e. when you see no birds), have more precise locations, record the species and the number of birds, record video for deep learning of individual birds recognition... My thinking so far is that I can use a kMeans algorithm to cluster results and then I have a dataset that represents similar conditions to those I am trying to predict and then I simply take averages of the location (relative in the garden), corner (was the bird in the corner) and tree (was the bird in a tree) to predict where I might see the next bird. It's a good idea but it is not as straightforward as the solution I propose below. Your solution involve unsupervised learning and statistical data modeling. Mine is only using supervised learning. I'm just after some pointers or any feedback you can give that I can take forward and try to apply some more advanced techniques, I guess specifically what algorithms do you think would be well suited to this problem? As a first approach, I propose to use classification . Each row of your table will now be called a training example . Temperature, Wind speed and season are the features of your training examples. The tree columns: location, corner and tree will be combined to give the label of your training examples. It's mean one label will be: north/yes/yes, and another one will be: north/yes/no. If you use only north and south (and not east and west) it makes 8 different labels. You could add a ninth label for cases where you see no birds at all. You are now ready to give the training examples to your favorite ML model. It will ask you to give separately the features and the labels. For your case I would recommend the use of decision trees based approaches (like Random Forest or boosted trees) because they are robust and simple to understand and interpret. The ML algorithm will learn a model that predicts the label given the features. So next time you want to see a bird, you give the current temperature, wind speed and season to the ML model. It will output a probability for each label. The sum of the probabilities will be one and you can interpret the probability for one label as the probability to see a bird in this specific location. Something like: I have 80% chance to see a bird in north/yes/no, 20% in north/yes/yes and 0 in the other locations. Cheers and beware of bias and probability misinterpretation!
