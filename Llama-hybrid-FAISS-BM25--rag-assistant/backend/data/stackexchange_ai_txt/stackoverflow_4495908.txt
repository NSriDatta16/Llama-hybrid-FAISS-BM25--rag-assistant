[site]: stackoverflow
[post_id]: 4495908
[parent_id]: 4495856
[tags]: 
Hmm, I actual think this is more of a problem with project management. I think linking in code from another project like this sounds really fragile. I.e. if project A is the original project and project B links in some of it's code, changes to project A may break project B without project B having any ability to restrict or control the influence of those changes. I'd consider compiling the first project as a static library or framework and giving it a version number. Then the second project can import the library. Overrides should not be handled by effectively manipulating the class path. I've seen that done in Java and it's always an absolute last resort to work around bad code. Instead you should be making use of Objective C's abilities - inheritance, categories, etc to add or extend the functionality. If you have versioned the first project (i.e. /v0.0.1/headers) then project B can keep using v0.0.1 of A until you are read to upgrade to v0.0.2. Then you can re-import A's static library, update a build path or whatever to point B at the new version you want to code against. In summary, I would not recommend your technique of project management at all and suggest strongly that you rethink it.
