[site]: stackoverflow
[post_id]: 256629
[parent_id]: 
[tags]: 
Constructing a simple interpreter

I’m starting a project where I need to implement a light-weight interpreter. The interpreter is used to execute simple scientific algorithms. The programming language that this interpreter will use should be simple, since it is targeting non- software developers (for example, mathematicians.) The interpreter should support basic programming languages features: Real numbers, variables, multi-dimensional arrays Binary (+, -, *, /, %) and Boolean (==, !=, , =) operations Loops (for, while), Conditional expressions (if) Functions MathWorks MatLab is a good example of where I’m heading, just much simpler. The interpreter will be used as an environment to demonstrate algorithms; simple algorithms such as finding the average of a dataset/array, or slightly more complicated algorithms such as Gaussian elimination or RSA . Best/Most practical resource I found on the subject is Ron Ayoub’s entry on Code Project ( Parsing Algebraic Expressions Using the Interpreter Pattern ) - a perfect example of a minified version of my problem. The Purple Dragon Book seems to be too much, anything more practical? The interpreter will be implemented as a .NET library, using C#. However, resources for any platform are welcome, since the design-architecture part of this problem is the most challenging. Any practical resources? (please avoid “this is not trivial” or “why re-invent the wheel” responses)
