[site]: stackoverflow
[post_id]: 1066539
[parent_id]: 1066456
[tags]: 
The first thing I can think of, that doesn't require any bigger modifications to what you described is to just to wrap the ItemsSource collections in a CollectionViewSource in your XAML where they are being assigned. And then the filtering logic: public partial class Window1 : Window { public Window1() { InitializeComponent(); Names = new List (); Names.Add("Robert"); Names.Add("Mike"); Names.Add("steve"); Names.Add("Jeff"); Names.Add("bob"); Names.Add("Dani"); this.DataContext = this; } public List Names { get; set; } private void OnFilterClick(object sender, RoutedEventArgs e) { uiListView.Items.Filter = x => x.ToString()[0] == x.ToString().ToUpper()[0]; } }
