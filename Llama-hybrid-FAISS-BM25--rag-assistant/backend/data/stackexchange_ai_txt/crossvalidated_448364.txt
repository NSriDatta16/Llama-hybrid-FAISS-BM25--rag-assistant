[site]: crossvalidated
[post_id]: 448364
[parent_id]: 
[tags]: 
Calclulation of epoch length in UCB2

I am trying to understand the UCB2 algorithm presented in [1]. In step 2 of the algorithm, it says : Play machine j exactly $\tau(r_j+1) - \tau(r_j)$ times, where $\tau(r_j) = \lceil (1+\alpha)^{r_j}\rceil$ for $0 So, letâ€™s say for example $\alpha = 0.001$ (which is the value used in their simulations). If $r_j=0$ , meaning we played machine $j$ during $0$ epochs, then we have to play it exactly once. Then, if $r_j=3$ for example, i.e. machine $j$ has been played during 3 epochs in the past, according to the formula in step 2, we have to play it 0 times. As a result, I don't see how we can get an epoch length that grows as we play machine $j$ more. I tried to look for more straightforward explanations of how UCB2 works in other papers, but they all use the same original explanation. So, any clarification of how the epoch length is determined would be much appreciated. [1] Auer, Peter, Nicolo Cesa-Bianchi, and Paul Fischer. "Finite-time analysis of the multiarmed bandit problem." Machine learning 47.2-3 (2002): 235-256.
