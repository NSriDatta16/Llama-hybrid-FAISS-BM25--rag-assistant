[site]: stackoverflow
[post_id]: 2980622
[parent_id]: 2979968
[tags]: 
As mentioned by @user353852, your current dependency contains only the Java EE 6 APIs and does not contain any method bodies. So you can't run code against it. To run your code outside a container, you need to get a "concrete" dependency (from GlassFish repository): glassfish-repository http://download.java.net/maven/glassfish ... org.glassfish javax.servlet 3.0 test ... Note that such dependencies shouldn't be declared with a compile scope, you don't want to bundle it (it should be provided or maybe test , but not compile or runtime ). I wonder does the provider of the javaee implementation important? Generally I use Apache servers, so it will be great to have the same javaee implementation as it is on the server. In theory, no. But in practice, I would recommend to use the implementation JARs from the server you are going to use (or from the Java EE Reference Implementation). Since you are using Java EE 6, this actually means JARS from GlassFish v3 in both cases . The second question is much more vital. javax.servlet is only one part of javaee-api implementation, where can I find the others. Now I need "javax/validation/Validation". For the Bean Validation API, you'll need the following (Hibernate Validator being the RI): jboss JBoss repository http://repository.jboss.org/maven2 ... javax.validation validation-api 1.0.0.GA provided org.hibernate hibernate-validator 4.0.2.GA runtime ... How can I determine which artifact implements each aspect of javaee. Maybe there is some kind of a "map" somewhere? Nothing official but this nice answer from BalusC will help.
