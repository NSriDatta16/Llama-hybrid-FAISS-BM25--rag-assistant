[site]: datascience
[post_id]: 45991
[parent_id]: 
[tags]: 
How do I send the results of a convolutional layer and non-deep-learning features into a dense layer in Keras?

I understand that I can set up a convolutional network for 1-dimensional sequence/time series. model = Sequential() model.add(Conv1D()) model.add(GlobalMaxPooling1D()) model.add(Dense()) Let's say I'd like to use "regular" (non-deep-learning) features too in my model, how should I best combine the two at a dense layer? Concretely, let's assume that, for each row of my dataset, there are 1k points in the time series, along with 100 "regular" features. To generalize my question, let's say there are now two kinds of time series plus regular features for each row in my dataset. If I would like to have a separate convolutional block for each time series, how do I combine all three?
