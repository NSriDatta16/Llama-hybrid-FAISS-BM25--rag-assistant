[site]: stackoverflow
[post_id]: 4275933
[parent_id]: 4275897
[tags]: 
A Bean obtains all the benefits of Java's "write-once, run-anywhere" paradigm. The properties, events, and methods of a Bean that are exposed to an application builder tool can be controlled. A Bean may be designed to operate correctly in different locales, which makes it useful in global markets. Auxiliary software can be provided to help a person configure a Bean. This software is only needed when the design-time parameters for that component are being set. It does not need to be included in the run-time environment. The configuration settings of a Bean can be saved in persistent storage and restored at a later time. A Bean may register to receive events from other objects and can generate events that are sent to other objects. Advantages of Bean The use of scriptlets (those things) is indeed highly discouraged since the birth of taglibs (like JSTL ) and EL ( Expression Language , those ${} things) over a decade ago. The major disadvantages of scriptlets are: Reusability: you can't reuse scriptlets. Replaceability: you can't make scriptlets abstract. OO-ability: you can't make use of inheritance/composition. Debuggability: if scriptlet throws an exception halfway, all you get is a blank page. Testability: scriptlets are not unit-testable. Maintainability: per saldo more time is needed to maintain mingled/cluttered/duplicated code logic. Check Whole...BalusC's answer here
