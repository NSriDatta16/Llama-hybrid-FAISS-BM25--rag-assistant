[site]: crossvalidated
[post_id]: 613410
[parent_id]: 
[tags]: 
Bayesian meta-analysis: Why and how to weight individual study's contribution to overall effect?

I'm interested in performing a Bayesian meta-analysis, specifically, using a random-effects hierarchical model (as described here ). Briefly, in this model we assume that the $k$ th study's reported (observed) effect size $\hat{\theta}_k$ is an estimate of that study's true effect size $\theta_k$ . Further, all $\theta_k$ are considered samples from a higher-level distribution that describes the true overall effect size. The mean of this higher-level distribution $\mu$ is what we're most interested in. So, we have: $$\hat{\theta}_k \sim N(\theta_k, \sigma^2_k)$$ $$\theta_k \sim N(\mu, \tau^2)$$ In the section of the tutorial describing how to fit the model, the authors write: "Furthermore, we cannot simply use the effect size of each study...as is. We also have to give studies with higher precision (i.e. sample size) a greater weight." I'm confused by this because I thought the observed standard error $\sigma_k$ we use in the likelihood already weights each individual study's contribution to the estimate of the overall effect $\mu$ (i.e., the smaller $\sigma_k$ , the more study $k$ will contribute to the estimate of $\mu$ ). That is, don't we get that for "free" using Bayes' theorem? Next, if you can explain why I should take an extra step to weight each study by its precision, can you also explain the mechanics of how you do that? I'm using Python and PyMC rather than R, so it will be extra appreciated if the explanation does NOT involve R-brms syntax. Note: Below is what I have within the PyMC model definition, where theta_obs and sigma_obs denote each study's reported effect size and standard error (i.e., $\hat{\theta}_k$ and $\sigma_k$ from the equations above): # Hyper-priors mu_theta = pm.Normal("mu_theta", mu=0, sigma=1) tau = pm.Exponential("tau", lam=1) # Priors theta = pm.Normal("theta", mu=mu_theta, sigma=tau, shape=n_studies) # Likelihood theta_hat = pm.Normal('theta_hat', mu=theta, sigma=sigma_obs, observed=theta_obs) The estimated parameters seem reasonable, so I think I'm on the right track, but appreciate any feedback regarding weighting each study.
