[site]: datascience
[post_id]: 124167
[parent_id]: 124158
[tags]: 
So for starters, PyTorch has a Linear layer which is documented here: https://pytorch.org/docs/stable/generated/torch.nn.Linear.html You can use it by instantiating in your init : class Model(nn.Module): def __init__(self, in_features, out_features): super().__init__() self.linear = nn.Linear(in_features, out_features) def forward(self, x): y_pred = self.linear(x) return y_pred I believe the error you're seeing is because you're not instantiating a PyTorch layer anywhere but your Linear class inherits from nn.Module, so it's looking for PyTorch layers when you call forward() on it. Note that you can create a network without using the existing Linear() layer from PyTorch, in which case you just remove the nn.Module from your class. The second thing is that as you suspect, you'd want to Flatten your data on input (or more typically use a CNN on images). Flatten is documented here: https://pytorch.org/docs/stable/generated/torch.nn.Flatten.html#flatten .
