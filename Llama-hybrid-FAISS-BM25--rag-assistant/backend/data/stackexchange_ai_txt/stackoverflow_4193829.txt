[site]: stackoverflow
[post_id]: 4193829
[parent_id]: 
[tags]: 
Java - Design Pattern, Session Management for Web Service Client

I am writing a client library for a web service using CXF. The service uses a mutable key to manage sessions and, optionally, allows a session to be kept alive. I have built a client Client and I want to provide the ability for uses of the library to choose their type of session management i.e. either a manager which just manages keys but does not attempt to keep alive and a manager which manages keys and keeps the session alive. I had thought of having a SessionManager field in the Client class (with a SimpleSessionManager class and a KeepAliveSessionManager class) but, in order to keep the session alive, the KeepAliveSessionManger would have to call a method of the Client class. That would mean that the Client class has a reference to the SessionManager class and the SessionManager class would have a reference to the Client class - which is obviously an inelegant design. Can you suggest a design pattern (or altnernate implementation) that would let me implement these features in a 'better' way? Cheers, Pete
