[site]: stackoverflow
[post_id]: 4686152
[parent_id]: 
[tags]: 
MySql UPDATE optimization?

Let's assume that I have a table with two columns A and B. There is an index on column A but not on column B. I want to issue several million queries like: UPDATE t1 SET b=b1 WHERE a=a1; UPDATE t1 SET b=b2 WHERE a=a2; .... There are anywhere from 1 to 100,000 rows corresponding to each unique value of a . On average it's around 100. For each update statement on average 60% of the rows will not be changed because for these rows b already has the desired value. For 30% of the updates none of the matching rows will be changed. Does it make sense to use statements like these? UPDATE t1 SET b=b1 WHERE a=a1 AND b<>b1; Will it speedup the process by eliminating unneeded writebacks to disk or is Mysql 5 smart enough to recognize that nothing is being changed and there is no need to write back to disk?
