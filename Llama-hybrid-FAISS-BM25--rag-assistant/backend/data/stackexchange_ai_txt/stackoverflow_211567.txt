[site]: stackoverflow
[post_id]: 211567
[parent_id]: 
[tags]: 
Enum and property naming conflicts

When using a class that has an enum property, one usually gets a naming conflict between the property name and the enum type. Example: enum Day{ Monday, Tuesday, ... } class MyDateClass { private Day day; public Day Day{ get{ return day; } } } Since only flags enums should have plural names, naming the enum "Days" is not the way to go for a non-flag enum. In the above example you could use some variation like "WeekDay" for either the enum or the property. But in the general case there are no good variations like that so you end up using properties like "FooMode" or "BarKind" for an object with enum properties of Foo and Bar type. Not so elegant. How do you usually name enums and properties in this scenario? Thanks for the quick responses. Another question: why is it not recommended to nest public enums, and how do you resolve the naming issues if you want to nest public enums? class Vehicle { enum Kind{ Car, Bike } public Kind Kind{ get{ return ... } } } class Meal { enum Kind{ Dessert, MainCourse } public Kind Kind{ get{ return ... } } } In the scenario above, given that Meal and Vehicle share the same namespace, I can't move "Kind" outside either of the classes without renaming it MealKind and VehicleKind respectively. I like the look of myVehicle.Kind = Vehicle.Kind.Car But that is not what the guidlines recommend. What would be the best practice here? Never to use nested public enums and instead name them VehicleKind etc.?
