[site]: stackoverflow
[post_id]: 2646523
[parent_id]: 2646498
[tags]: 
In the end you will need a great way to deal with repetitious coding tasks such as enum converters. You can use a code generator such as MyGeneration or CodeSmith among many others or perhaps an ORM mapper like nHibernate to handle everything for you. As for the structure... with hundreds of enums I would first consider trying to organize the data into a single table that might look something like this: (pseudo sql) MyEnumTable( EnumType as int, EnumId as int PK, EnumValue as int ) that would allow you to store your enum info in a single table. EnumType could also be a foreign key to a table that defines the different enums. Your biz objects would be linked to this table via EnumId. The enum type is there only for organization and filtering in the UI. Utilizing all of this of course depends on your code structure and problem domain. Btw, in this scenario you would want to set a clustered index on EnumType rather than leaving the default cluster idx that is created on the PKey.
