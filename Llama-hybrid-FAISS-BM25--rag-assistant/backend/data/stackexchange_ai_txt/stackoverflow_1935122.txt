[site]: stackoverflow
[post_id]: 1935122
[parent_id]: 1929571
[tags]: 
Maybe I'm missing something! You can use event bubbling instead. But the FormView control does not have an event to handle the child controls' events. So, we've some changes. [System.Web.UI.ToolboxData(" ")] public class FormView : System.Web.UI.WebControls.FormView { private static readonly object _itemClickEvent = new object(); [System.ComponentModel.Category("Action")] public event EventHandler ItemClick { add { base.Events.AddHandler(_itemClickEvent, value); } remove { base.Events.RemoveHandler(_itemClickEvent, value); } } protected virtual void OnItemClick(System.Web.UI.WebControls.FormViewCommandEventArgs e) { EventHandler handler = base.Events[_itemClickEvent] as EventHandler ; if (handler != null) handler(this, e); } protected override bool OnBubbleEvent(object source, EventArgs e) { this.OnItemClick((System.Web.UI.WebControls.FormViewCommandEventArgs)e); return base.OnBubbleEvent(source, e); } } The above code snippet demonstrated, how we can add an ItemClick event to the FormView control to handle the child controls' events. Now, you should map or drag the new FormView control instead.
