[site]: stackoverflow
[post_id]: 4287678
[parent_id]: 
[tags]: 
How can I make $_SESSIONs more secure?

It seems that the most popular school of thought is to randomly generate session IDs, to regenerate the session ID when the user logs in and to periodically regenerate the session ID for existing users while they're logged in, just for extra security. I'm using an alternate solution, but I'm not a seasoned PHP pro and I'm concerned there's a glaring security hole (or two... or more) that I might be missing. If you could have a look at the following and tell me how it might be compromised, I'd appreciate it. The script creates a session ID that's tied to the user's machine and remains the same throughout. I was thinking of including the current date in the hash, but our night shift workers would then get logged out at midnight. Not that I'd be around to hear their complaining ;) I do realise that using IP address opens it up to abuse if two users with the same OS and browser are sitting in a coffee shop, using the free WiFi, but this is for an internal MIS, so each user will have their own static IP address. If they decide later to make it accessible from the web I'm in trouble! But that wasn't part of the spec :) // Set the session ID $session_hash = md5( $_SERVER['HTTP_USER_AGENT'] . $_SERVER['REMOTE_HOST'] . $_SERVER['REMOTE_ADDR'] ); // Compare against session ID received from user if ( session_id() != $session_hash ) { session_destroy(); unset ( $_SESSION ); session_id( $session_hash ); session_start(); } else { // Attempt to load user details from database if $_SESSION['user_ID'] is set. } All constructive comments welcomed and appreciated!
