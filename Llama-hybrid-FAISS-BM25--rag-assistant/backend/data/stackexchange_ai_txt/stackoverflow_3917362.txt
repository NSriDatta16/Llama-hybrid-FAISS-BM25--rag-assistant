[site]: stackoverflow
[post_id]: 3917362
[parent_id]: 3909838
[tags]: 
I invested more time and have hacked my way through to one possible solution. It still has its problems, but I'm at least getting most of the functionality I need. The trick is to create multiple sortable elements and to nest them. So my document structure becomes: ... ... .... ... ... Then, you instantiate 2 different sortables - one to sort the smaller 1-column elements among themselves and the other to sort the 1-column "macro" elements. Note that there are 3 macro elements on this page: The first macro element is "fixed" and has two columns for smaller sortables The second macro element is "mobile," meaning it will also be a sortable The third macro element is "fixed" and has two columns for smaller sortables The code to make this all work together is remarkably simple: $('.column').sortable({ forcePlaceholderSize: true, connectWith: '.column', handle: '.section-handle', cursor: 'move', opacity: 0.7 }); $('#wrapper').sortable({ forcePlaceholderSize: true, handle: '.section-handle', cursor: 'move', opacity: 0.7 }); This connects the various .column elements so that the 1-column elements can be interchanged anywhere on the page. The second code block turns the entire #wrapper element into its own sortable, which allows you to reposition the large, 2-column element on the page as well. Since I'm explicitly declaring the drag handle (a div with the section-handle class attached to each sortable element), you don't need a cancel property on your sortable() call ... the "fixed" macro elements don't have the drag handle to begin with, so they can't be manually repositioned. However, you can drag the "mobile" macro element ( item-2 ) to anywhere else on the page without any problem. The only issue I'm still facing (and it's more a personal frustration than anything else) is that the two sortables ( #wrapper and .column ) aren't aware of one another. So if you have the following layout: ------------------- | item 1 | | | item 2 | | item 3 | item 5 | | item 4 | | ------------------- And items 3, 4, and 5 are in the same sortable container, then you can't drag item 2 in between items 3 and 4. When dragging item 2, the page is aware of 3 sortable elements - the block containing item 1, the block you're dragging (item 2), and the block containing items 3, 4, and 5. So while from a usability perspective you should be able to place item 2 below items 3 and 5 ... the method I've outlined above doesn't allow you to do that. So for now it works, but there's definitely massive room for improvement here.
