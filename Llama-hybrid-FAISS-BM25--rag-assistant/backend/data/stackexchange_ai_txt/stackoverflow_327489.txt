[site]: stackoverflow
[post_id]: 327489
[parent_id]: 318789
[tags]: 
Having to write 'or die' everywhere drives me nuts. My preferred way to open a file looks like this: use autodie; open(my $image_fh, ' While that's very little typing, there are a lot of important things to note which are going on: We're using the autodie pragma, which means that all of Perl's built-ins will throw an exception if something goes wrong. It eliminates the need for writing or die ... in your code, it produces friendly, human-readable error messages, and has lexical scope. It's available from the CPAN. We're using the three-argument version of open. It means that even if we have a funny filename containing characters such as , > or | , Perl will still do the right thing. In my Perl Security tutorial at OSCON I showed a number of ways to get 2-argument open to misbehave. The notes for this tutorial are available for free download from Perl Training Australia . We're using a scalar file handle. This means that we're not going to be coincidently closing someone else's file handle of the same name, which can happen if we use package file handles. It also means strict can spot typos, and that our file handle will be cleaned up automatically if it goes out of scope. We're using a meaningful file handle. In this case it looks like we're going to write to an image. The file handle ends with _fh . If we see us using it like a regular scalar, then we know that it's probably a mistake.
