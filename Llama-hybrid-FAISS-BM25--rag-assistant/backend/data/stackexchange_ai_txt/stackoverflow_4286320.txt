[site]: stackoverflow
[post_id]: 4286320
[parent_id]: 
[tags]: 
RSpec mock or stub super in a model

How do I test this tiny part of the module, with super? (superclass is action_dispatch-3.0.1 testing/integration...) The module is included within spec/requests to intercept post : module ApiDoc def post(path, parameters = nil, headers = nil) super document_request("post", path, parameters, headers) if ENV['API_DOC'] == "true" end ... end I don't want it to run the ActionDispatch::Integration-whatever, but I don't know how to mock or stub super to unit test it. The module is only used within specs, and will have 100% test coverage, which proves those kinds of metrics as useless. I need to unit test it. An example, if needed, this is how I use the module ApiDoc require 'spec_helper' describe "Products API" do include ApiDoc ############## {:name => "Test Name 1", :description => "Some data for testing"}} end it "can be done with JSON" do valid_json = @hash.to_json ############### the following 'post' is overriden by ApiDoc post("/products.json",valid_json, {"CONTENT_TYPE" => "application/json", "HTTP_AUTHORIZATION" => ActionController::HttpAuthentication::Basic.encode_credentials("user", "secret")}) response.should be_success end end end
