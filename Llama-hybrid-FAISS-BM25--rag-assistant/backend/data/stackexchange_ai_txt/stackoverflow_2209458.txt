[site]: stackoverflow
[post_id]: 2209458
[parent_id]: 2209150
[tags]: 
If you want a balanced red-black tree , you can find one in C5 : using Bag = C5.TreeBag >; using Comparer = C5.DelegateComparer >; ... var bag = new Bag(new Comparer( (pair1, pair2) => pair1.Value == pair2.Value ? pair1.Key.CompareTo(pair2.Key) : // inverted because you need the highest entries pair2.Value.CompareTo(pair1.Value))); ... var topN = bag.Take(N).ToList(); Retrieval (and every other operation) has O(log n) complexity.
