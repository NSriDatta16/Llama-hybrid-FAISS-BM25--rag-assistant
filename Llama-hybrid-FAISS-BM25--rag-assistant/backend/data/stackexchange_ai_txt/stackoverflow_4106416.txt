[site]: stackoverflow
[post_id]: 4106416
[parent_id]: 4105799
[tags]: 
I've tried Context.deleteFile(String name), passing in the same name argument from above, but that returns false, indicating the file wasn't actually deleted. That's because the file is not in that directory. The background here is that I'm allowing my users to save copies of their "current" preferences so that they can restore previously saved settings. How are you making the copy? From the standpoint of supported APIs, you are best served by making the real SharedPreferences be the current active settings, and do your backups and restores to your own file format in your own directory. If you are disinclined to go in that direction, the file will be an XML file in the ../shared_prefs directory relative to getFilesDir() , so you can construct an appropriate File object and delete it that way. However, bear in mind that Android could conceivably change this location later, or even change the storage model, and so you may run into compatibility problems in the future.
