[site]: stackoverflow
[post_id]: 1361498
[parent_id]: 1359703
[tags]: 
If you are working with unformatted input, you should probably read directly in binary form. Usually you would use some compiler specific directive to create data structures with no padding and then just read/write from a file. // Gcc #pragma pack(1) // option 1: pragmas struct frame { std::uint32_t header; std::uint16_t data[8]; } __attribute((packed)); // option 2: packed attribute #pragma pack(0) bool operator==( data const & lhs, data const & rhs ) { bool result = lhs.header == rhs.header; for ( int i = 0; i (&data), sizeof(data) ); out.close(); std::ifstream in( "data.bin", ifstream::binary ); frame readed; in.read( reinterpret_cast (&readed), sizeof(readed) ); in.close(); std::cout The compiler directive to disable padding for VS might be different (I believe the pragma directive works both in gcc and VS, but I have always used the attribute).
