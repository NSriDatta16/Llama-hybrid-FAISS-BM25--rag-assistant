[site]: stackoverflow
[post_id]: 4189957
[parent_id]: 4120043
[tags]: 
I was considering doing something similar to this with music for detecting duplicate songs and auto-organize funcationality. For your application, I wouldn't recommend using any shell programs through Java. Exception handling becomes difficult, and your application becomes bound by the shell interface and implementation (i.e. windows versions or installations affect your application behavior). I would use a database with a few tables: Files, Tags, and an association table. The Files table would list the physical location of each file, the filename, and a unique identifier. This way, you can maintain information about each file without having to modify it for every tag association. The Tags table would list each tag, and any metadata you want to store for each tag. A third table, maybe 'FileTags' would store the assocation between tags and files. When adding tags to the stack, you would add a statement to the WHERE clause, and the list of files with all of the tags would be returned. This structure would also allow open your codebase up to other designs, such as include/exclude (autocomplete with X buttons), or possibly search. If implemented in Java, your app would be platform independent, and would allow a very large number of tags and files. You can then use the system default application for opening the media file, and the user can make the selection in their native OS.
