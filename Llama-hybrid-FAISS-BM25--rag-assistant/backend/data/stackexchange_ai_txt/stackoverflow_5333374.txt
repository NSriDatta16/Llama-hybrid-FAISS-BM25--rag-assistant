[site]: stackoverflow
[post_id]: 5333374
[parent_id]: 
[tags]: 
Why am I getting these 'already defined' linker errors?

I am a beginner at C++ but I have some experience using Java. I am getting some errors that I don't understand. I attached a pic of the error console and the code below it. Error 1 error LNK2005: "public: __thiscall VectorDouble::VectorDouble(void)" (??0VectorDouble@@QAE@XZ) already defined in Main.obj C:\Users\carrea\Code\Visual Studio\COMP201\Lab8_VectorDoubleClass\VectorDouble.obj Lab8_VectorDoubleClass Error 2 error LNK2005: "public: __thiscall VectorDouble::VectorDouble(int)" (??0VectorDouble@@QAE@H@Z) already defined in Main.obj C:\Users\carrea\Code\Visual Studio\COMP201\Lab8_VectorDoubleClass\VectorDouble.obj Lab8_VectorDoubleClass .... 10 more errors like these and Error 13 error LNK1169: one or more multiply defined symbols found C:\Users\carrea\Code\Visual Studio\COMP201\Lab8_VectorDoubleClass\Debug\Lab8_VectorDoubleClass.exe 1 1 Lab8_VectorDoubleClass Main.cpp #include "VectorDouble.cpp" using namespace std; void printVD(const VectorDouble& v); int main() { VectorDouble p; p.push_back(1); p.push_back(4); p.push_back(3); VectorDouble v(p); printVD(v); printVD(p); } void printVD(const VectorDouble& v) { int n = v.size(); for(int i = 0; i VectorDouble.h #pragma once #include #include #include #include #include #include #include using namespace std; class VectorDouble { public: VectorDouble(void); ~VectorDouble(void); VectorDouble(int intSize); // Copy constructor VectorDouble(const VectorDouble& vd); // = override void operator =(const VectorDouble& RIGHT_SIDE); private: double *dArray; int count, max_count; public: // returns number of occupied cells int size(void) const; // Returns total number of cells int capacity(void) const; // Adds an element to array void push_back(double num); // Resizes the array to be double the original max_count void resize(void); // Returns element at specified index double getElementAt(int i) const; // Requests that the capacity of the allocated storage space for the elements of the vector container be at least enough to hold n elements void reserve(int n); private: // Sets every element to 0 void clear(void); }; VectorDouble.cpp #pragma once #include "VectorDouble.h" using namespace std; VectorDouble::VectorDouble(void) { max_count = 100; count = 0; dArray = new double[max_count]; clear(); } VectorDouble::VectorDouble(int intSize) { max_count = intSize; dArray = new double[max_count]; clear(); } VectorDouble::~VectorDouble(void) { cout count max_count) { resize(); } while(i Any help would be much appreciated...
