[site]: stackoverflow
[post_id]: 475369
[parent_id]: 475350
[tags]: 
The halting problem does not act on languages. Rather, it acts on machines (i.e., programs): it asks whether a given program halts on a given input. Perhaps you meant to ask whether it can be solved for other models of computation (like regular expressions, which you mention, but also like push-down automata ). Halting can, in general, be detected in models with finite resources (like regular expressions or, equivalently, finite automata, which have a fixed number of states and no external storage). This is easily accomplished by enumerating all possible configurations and checking whether the machine enters the same configuration twice (indicating an infinite loop); with finite resources, we can put an upper bound on the amount of time before we must see a repeated configuration if the machine does not halt. Usually, models with infinite resources (unbounded TMs and PDAs, for instance), cannot be halt-checked, but it would be best to investigate the models and their open problems individually. (Sorry for all the Wikipedia links, but it actually is a very good resource for this kind of question.)
