[site]: stackoverflow
[post_id]: 2631982
[parent_id]: 2631951
[tags]: 
Yes , there should be a slight overhead connected to looking up columns by name instead of by index. I wouldn't worry about it, unless you keep looking up that same column in a loop, like in your code example. Because then the slight overhead might accumulate to a measurable overhead, depending on the table's number of rows. The fastest way to access a particular column's value of some row is to lookup using the DataColumn object itself . For example: Dim dt As DataTable = ... Dim idColumn As DataColumn = dt.Columns("ID") Dim nameColumn As DataColumn = dt.Columns("Name") Dim descriptionColumn As DataColumn = dt.Columns("Description") For Each r As DataRow In dt.Rows ' NB: lookup through a DataColumn object, not through a name, nor an index: ' Dim id = r(idColumn) Dim name = r(nameColumn) Dim description = r(descriptionColumn) ... Next One last piece of advice: I would strongly advise you against using numerical indices! It makes your code more fragile, and also more difficult to understand and maintain: As soon as the logical order of a column changes, you need to adapt your code accordingly, possibly in several places (and you might easily oversee one of them, leading to bugs). If you instead use column names or DataColumn objects themselves for the lookup, you can change your columns' order without having to change the remaining code.
