[site]: stackoverflow
[post_id]: 5177158
[parent_id]: 4940173
[tags]: 
Although I have little practical experience I did undertake a research spike into java BPM options recently. I narrowed it down to 3: jBPM Drools Roll your own The Drools community seems more active, tools are better, the rules engine was very sophisticated (as this was the base of drools) but surrounding business process were well integrated. However jBPM was more focused around business processes and slick as well. They are both managed by JBoss Further comparisons between Drools and JBPM can be found here: Drools v jBPM If you have a confident development team and the requirements aren't too complex it is always worth considering rolling your own. BPMs can lead to anaemic domain models (as described in this post Rules Engine pros and cons about rules engines ) as you try adopt your domain models to fit into such systems, also well built systems customised for your business are always going to be more effective. As far as your criteria goes: Open-Source and OEM friendly license - Drools uses a liberal 'ASL/BSD/MIT-esque license', community is active. jBPM uses apache, eclipse and MIT licenses Production Installations . I understand drools is used by many insurance companies and credit checkers, not sure a jBPM Commercial Support available for both Open Standards Support - BPMN - Both implement BPMN and due to the nature of the open source projects are very standards orientated. Dynamic Creation/Assembly of the Workflow based on input. Both, although is generally easily implemented manually. Eembeddable - both offer entire systems but are modulated so this should suite embedding into existing systems.
