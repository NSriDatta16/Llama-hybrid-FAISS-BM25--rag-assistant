[site]: crossvalidated
[post_id]: 72140
[parent_id]: 64314
[tags]: 
Here is an idea. Suppose your words/phrases are arranged in columns, and for every timestamp you have a row of phrase-counts: Gas prices Fertilizer Lady Gaga 10:00:05 97 105 23 10:10:23 89 80 65 ... By considering a single column at a time, you can compute a mean & standard deviation, and thereby through your Grubbs measure get your outliers. Keep in mind that you will have to use a moving average and moving standard deviation, to keep current with new trends. Now imagine this table looks like a grid of colored tiles. Outliers are colored red, and the others are green. Make sure the rows are evenly spaced - your input data is not likely to be so clean, so you will need to do this yourself. Maybe one grid-row for every 10 minutes? You will need to figure out how to color missing rows - maybe make a square red if and only if the squares above and below are red. Now when an event comes in, say at a time $T$, choose a "history window" leading up to that time. You will have to experiment and decide how long that windows is, but basically that will give you an "image" of red and green squares which correspond to that event. Now you can train an SVM to attach that image to that event.
