[site]: stackoverflow
[post_id]: 5055365
[parent_id]: 5054247
[tags]: 
While you have an answer, your overall app architecture could use a bit of refinement. Notably, it is generally quite fragile to have some massive amount of persistent logic associated with an arbitrary singleton's instantiation. It introduces all kinds of weird ordering dependencies or other mechanisms via which a seemingly minor change can cause your code to break. A far less fragile pattern is to associate reconstruction of state with known points in an application's lifespan. I.e. if the state is required for the app to work, load the state in applcationDidFinishLaunching: . If the state is only required by a subsystem, load it when the subsystem is loaded. Doing so reduces complexity and, by implication, reduces the maintenance costs of your code. Any indeterminism you can eliminate is a future bug removed.
