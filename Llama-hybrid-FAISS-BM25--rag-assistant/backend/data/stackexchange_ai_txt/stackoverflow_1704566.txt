[site]: stackoverflow
[post_id]: 1704566
[parent_id]: 1695535
[tags]: 
thanks for your response it really helped get things clear in my head. I tried to model my requirements based on your advice, so here is my first pass at the model. I am putting it up here for 2 reason; I'm sure if I asked the question, others will have the same question so this may help or be a starting point for them. I am open to feedback and any advice on how maybe I could model this better to ensure that it is both 'flexible' and 'accurate' public class Parties { Person Person {get; set;} Organization Organisation {get; set;} public Parties(Person person, Organization organisation) { Person = person; Organisation = organisation; } } public interface Person {} public interface Organization {} public class Business : Organization {} public class Contact: Person { public string FirstName{get; set;} public string LastName {get; set;} List roles = new List (); public Contact() {} public Contact(Clients client) : this() { roles.Add(client); } public Contact(Employees employee) : this() { roles.Add(employee); } } public interface Role {} public interface Clients: Role{} public class BronzeClient: Clients{ public DateTime lastClass {get; set;} } public class SilverClient : Clients { public DateTime lastClass {get; set;} } public class GoldClient : Clients { public DateTime lastClass {get; set;} } public interface Employees : Role {} public class Employee: Employees{ public string EmployeeID{ get; set;} } public class SeniorManager : Employees { public string EmployeeID {get; set;} }
