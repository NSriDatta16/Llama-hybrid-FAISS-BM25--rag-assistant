[site]: stackoverflow
[post_id]: 1068461
[parent_id]: 1068410
[tags]: 
I would create a dedicated object for storing this information. What you're creating is a manager object, rather than a simple collection. I wouldn't make it derive from a Map or other well-known collection class, since the semantics of how you store this info may change in the future. Instead implement a class which ties together a customer and its connection, and inside that class use the appropriate collection class (that you're at liberty to change later without affecting the interface and the rest of your code) Your customer/connection manager class is more than a simple container. It can store meta-data (e.g. when was this relationship established). It can perform searches on connections given customer info (if you require). It can handle duplicates how you require, rather than how the underlying collection class handles them etc. etc. You can easily slot in debugging/logging/performance monitoring to easily understand what's going on.
