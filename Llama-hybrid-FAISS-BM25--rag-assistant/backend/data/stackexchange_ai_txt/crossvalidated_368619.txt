[site]: crossvalidated
[post_id]: 368619
[parent_id]: 
[tags]: 
Is a SVM (+Boost) faster than a NN to train with similar accuracy?

I might possibly misunderstand something here. So please do tell me if I do. At the moment, I am doing some research regarding the use of machine learning to detect a certain object. Currently I am trying to figure what is better to use in my situation: a (Convolutional) Neural Network or Support Vector Machine (possibly boosted). I know there is also the possibility of Haar Cascade (using Adaboost). But I am just generally more interested in SVM and NN. Hypothetically speaking: If I have about 400 images of a grey scale with the same resolution from an object which I like to detect with different lighting conditions, rotations and distance (but same resolution). Would training a SVM instead of a (possibly pre-trained) NN be more accurate and/or faster? I know it really depends on the data-set, but I am trying to figure out if there is any way of telling before actually testing/implementing one of these methods. All the answers that I have found up to this point all state: It depends, but what does it depend on? Is it possible to, in layman's terms, to explain what could influence the choice regarding this situation? Also, I wouldn't say that I am stupid, but I am not educated on a Uni level. So, although I wouldn't mind trying to read a research report on this topic, I highly doubt that I will understand most of whats normally written, especially when it comes to mathematical explanations. I am planning to use already existing libraries such as TensorFlow, Caffe or just OpenCV/LibSVM (I know OpenCV uses an implementation derived from LibSVM) for this situation, based on what I could find on the internet. I am however a complete beginner regarding Machine Learning.
