[site]: stackoverflow
[post_id]: 679526
[parent_id]: 679520
[tags]: 
why you need extend vector in this way? use standard with your functors. e.g. std::min_element , std::max_element int max_a = std::max_element ( v.begin(), v.end(), boost::bind( std::less (), bind( &Item::a, _1 ), bind( &Item::a, _2 ) ) )->a; std::accumulate - for calculate avarage const double avg_c = std::accumulate( v.begin(), v.end(), double( 0 ), boost::bind( Item::c, _1 ) ) / v.size(); // ofcourse check size before divide your ItemList::SpecialB() could be rewrited as: int accumulate_func( int start_from, int result, const Item& item ) { if ( item.SpecialB() BTW: if you don't need access to members, you don't need inheritance.
