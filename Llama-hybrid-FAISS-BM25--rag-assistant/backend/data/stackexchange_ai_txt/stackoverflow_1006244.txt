[site]: stackoverflow
[post_id]: 1006244
[parent_id]: 1006189
[tags]: 
Assuming you already have a relatively comprehensive test suite, there are tools for the python part. The C part is much more problematic, depending on tools availability. For python unit tests For C code, it is difficult on many platforms because gprof, the Gnu code profiler cannot handle code built with -fPIC. So you have to build every extension statically in this case, which is not supported by many extensions (see my blog post for numpy , for example). On windows, there may be better code coverage tools for compiled code, but that may require you to recompile the extensions with MS compilers. As for the "right" code coverage, I think a good balance it to avoid writing complicated unit tests as much as possible. If a unit test is more complicated than the thing it tests, then it is a probably not a good test, or a broken test.
