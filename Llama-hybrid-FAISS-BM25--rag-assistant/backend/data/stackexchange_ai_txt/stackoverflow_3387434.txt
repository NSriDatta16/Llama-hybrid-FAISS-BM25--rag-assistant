[site]: stackoverflow
[post_id]: 3387434
[parent_id]: 542471
[tags]: 
The stack indicates that the MemoryStream used to store the report execution result cannot increase (double) it's size. This is usually caused by address space fragmentation, which commonly cannot be solved by adding hardware. Microsoft ReportViewer is limited in the amount of data it can process because it is designed to store the intermediate report execution result in a MemoryStream that unfortunately needs a quadratically growing amount of contiguous free address space, which in a usual .NET application (2GB address space) is no bigger than 256MB, and often much smaller than that. In this stream, for instance, all field values, aggregated values, expressions and images are stored, so the size depends directly on the size of the data sets added to the report. To analyze the address space and objects of a .NET application, it is best to debug with WinDBG (Debugging Tools for Windows) and the SOS extensions. Valuable commands to analyze address fragmentation are: !address -summary lm !EEHeap -gc !DumpHeap -stat In this particular case, it may be possible to reduce the amount of data by pre-aggregating values already in the data source and not in the Matrix. Further tips are given by the Knowledge Base article "You may receive the 'System.OutOfMemoryException' error message when you use SQL Server Reporting Services" [1]. [1]: http://support.microsoft.com/kb/909678 "System.OutOfMemoryException" error message when you use SQL Server Reporting Services
