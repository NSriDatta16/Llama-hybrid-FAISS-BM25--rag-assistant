[site]: stackoverflow
[post_id]: 2465788
[parent_id]: 2464844
[tags]: 
I know I am cheating by introducing a different routing library, since I haven't used Routes , but here's how this is done with Werkzeug 's routing package. It lets you specify that a given fragment of the path is an integer. You can also implement a more specialized "converter" by inheriting werkzeug.routing.BaseConverter , if you wanted to parse something more interesting (e.g. a UUID). Perhaps, Routes has a similar mechanism in place for specialized path-fragment-parsing needs. import unittest from werkzeug.routing import Map, Rule class RoutingWithInts(unittest.TestCase): m = Map([Rule('/data/ ', endpoint='data_getter')]) def test_without_leading_zeros(self): urls = self.m.bind('localhost') endpoint, urlvars = urls.match('/data/31415') self.assertEquals({'record_locator': 31415}, urlvars) def test_with_leading_zeros(self): urls = self.m.bind('localhost') endpoint, urlvars = urls.match('/data/000031415') self.assertEquals({'record_locator': 31415}, urlvars) unittest.main()
