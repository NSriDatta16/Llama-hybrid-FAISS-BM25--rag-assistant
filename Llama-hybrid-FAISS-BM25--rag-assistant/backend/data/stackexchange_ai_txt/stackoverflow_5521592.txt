[site]: stackoverflow
[post_id]: 5521592
[parent_id]: 5521309
[tags]: 
To establish the bindings described in the awakeFromNib comments: TableArray is an NSArrayController. At the far left of the Interface Builder document, you'll see an outline view showing all of the objects contained in your nib. When this nib is loaded at runtime, all of the objects will be unarchived and instantiated. In the screenshot you provided, you'll see the NSArrayController named "TableArray" is already there. If you needed to create another one for some reason, you'd drag an NSArrayController from the object library (lower right) into your Interface Builder document. Select the "Last Name" table column in Interface Builder. You can do this by pressing the disclosure triangles in the outline view until you see "Table Column - Last Name" or by selecting it directly in the main canvas area of IB. The inspectors (on the right side of the Xcode window) will now reflect details about the last name column, since it's the currently selected object. Select the bindings inspector. You can hover over the icons at the top of the inspector until you find the one labeled "Show the Bindings Inspector" -- it's the second one from the right. The bindings inspector presents you with a list of all the exposed bindings for the selected NSTableColumn. You'll see "Value" is one such binding - and that's the binding we want to establish according to MyWindowController.m. Twiddle the disclosure triangle next to "Value" to reveal all the binding details. You can now specify the controller through which you'd like to establish the binding and controller/model key paths to use. Go ahead and check the "Bind" checkbox and select "TableArray" from the "Bind to:" popup button. Then, specify "arrangedObjects" as the controller key and "firstname" as the model key path. You'll notice entering "firstname" caused Xcode to put up a gray warning icon with the tooltip "Xcode cannot resolve the entered keypath." Xcode will try to resolve the keypath you've entered. So if you were binding through an NSArrayController that contained objects of the class Person, and the class Person defined a property called "address", "arrangedObjects.address" would resolve appropriately and Xcode would validate your keypath as correct. But in this example, the array controller is managing NSDictionary objects, and there's no way for Xcode to know what key/value pairs you're storing in those dictionaries. You, the developer, should know that the dictionaries being stored in the NSArrayController do indeed contain a "firstname"/value pair, so you can ignore the warning. Repeat for the other bindings listed at the top of MyWindowController.m. The referencing bindings section of the connections inspector shows you all the bindings that have already been established through the selected controller. So if you select the TableArray and navigate to the connections inspector, you'll now see "arrangedObjects.firstName" -> Value, Table Column - First Name. This is showing you the binding you just established above. Before diving into a more advanced topic like Cocoa Bindings, it might be worthwhile to get comfortable working with Interface Builder. Use it to create IBOutlet and IBAction connections, both natively within IB and between IB and source code. Get used to using the inspectors to modify attributes of the UI objects, etc. Once you're comfortable with the general workflow of IB, tackling bindings will be easier. Here's a guide to help.
