[site]: stackoverflow
[post_id]: 2864387
[parent_id]: 2864366
[tags]: 
In Python, one file is called a module . A module can consist of multiple classes or functions. As Python is not an OO language only, it does not make sense do have a rule that says, one file should only contain one class. One file (module) should contain classes / functions that belong together, i.e. provide similar functionality or depend on each other. Of course you should not exaggerate this. Readability really suffers if your module consist of too much classes or functions. Then it is probably time to regroup the functionality into different modules and create packages . For naming conventions, you might want to read PEP 8 but in short: Class Names Almost without exception, class names use the CapWords convention. Classes for internal use have a leading underscore in addition. and Package and Module Names Modules should have short, all-lowercase names. Underscores can be used in the module name if it improves readability. Python packages should also have short, all-lowercase names, although the use of underscores is discouraged. Since module names are mapped to file names, and some file systems are case insensitive and truncate long names, it is important that module names be chosen to be fairly short -- this won't be a problem on Unix, but it may be a problem when the code is transported to older Mac or Windows versions, or DOS. To instantiate an object, you have to import the class in your file. E.g >>> from mymodule import MyClass >>> obj = MyClass() or >>> import mymodule >>> obj = mymodule.MyClass() or >>> from mypackage.mymodule import MyClass >>> obj = MyClass() You are asking essential basic stuff, so I recommend to read the tutorial .
