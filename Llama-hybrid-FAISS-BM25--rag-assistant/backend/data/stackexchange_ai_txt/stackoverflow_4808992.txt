[site]: stackoverflow
[post_id]: 4808992
[parent_id]: 4804490
[tags]: 
Just set the default value to faded and use the trigger to bring it up to full opacity. You have done some other styling but here is an example based on the default style: 1,20 2,40 3,30 Edit: If you want to change all the other data points except the data point the mouse is over, that is a bit harder and can't be done simply by restyling the controls. But you can create your own series control that has that capability. Here is a chart with an unstyled column series class called MouseNotOverColumnSeries with a new MouseNotOverOpacity property: 1,20 2,40 3,30 Here is the MouseNotOverColumnSeries class: public class MouseNotOverColumnSeries : ColumnSeries { public double MouseNotOverOpacity { get; set; } protected override void OnDataPointsChanged(IList newDataPoints, IList oldDataPoints) { base.OnDataPointsChanged(newDataPoints, oldDataPoints); foreach (var dataPoint in oldDataPoints) { dataPoint.MouseEnter -= new MouseEventHandler(dataPoint_MouseEnter); dataPoint.MouseLeave -= new MouseEventHandler(dataPoint_MouseLeave); } foreach (var dataPoint in newDataPoints) { dataPoint.MouseEnter += new MouseEventHandler(dataPoint_MouseEnter); dataPoint.MouseLeave += new MouseEventHandler(dataPoint_MouseLeave); } } void dataPoint_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e) { foreach (var dataPoint in ActiveDataPoints) if (e.OriginalSource != dataPoint) dataPoint.Opacity = MouseNotOverOpacity; } void dataPoint_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e) { foreach (var dataPoint in ActiveDataPoints) dataPoint.Opacity = 1; } } We just pay attention to when the data points change and register mouse enter/leave handlers that manipulate the opacity of all the other data points that the mouse is not over. This could be expanded to support storyboards, etc.
