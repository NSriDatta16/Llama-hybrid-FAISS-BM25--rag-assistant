[site]: stackoverflow
[post_id]: 5342842
[parent_id]: 5342413
[tags]: 
I'm not sure this is exactly what you are looking for, but... For embedded programming, we sometimes store values as signed 0.15 fixed point with an associated scale factor. You can think of it as storing all values as fractions between -1..1 and keeping track of a multiplier along with the units. So for example to represent 5 amps in a variable scaled to 10A, you would do: int16 I = 16384; //.5@10A = 5A When you do math, you just keep track of the scale along with the units. int16 R = 3277 //.1@2ohm = .2ohm int16 V = ((int32)I*R)>>15; //@10A*@2Ohm = @20V //result = 1638 => 1638/32768= .05@20V = 1V It takes a lot of attention to detail to work with this system, but on a system with a slow or no floating point processor, it is a way to maintain arbitrary precision and super fast operations.
