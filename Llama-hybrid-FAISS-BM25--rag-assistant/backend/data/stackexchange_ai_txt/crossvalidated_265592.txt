[site]: crossvalidated
[post_id]: 265592
[parent_id]: 259889
[tags]: 
I don't know what constitutes layman's terms, but SD is a classifier. Given a training set which consists of vectors of numbers and a classification, it learns to recognize patterns in the vectors and then can classify new vectors that it has never seen before. For example, if you give it a bunch of skull measurement data that look like this: [ 45, 23, 66, 3, 17 ] -> male [ 52, 12, 56, 4, 10 ] -> female [ 43, 18, 70, 5, 11 ] -> male And then you give it a new vector of measurements that looks like this: [ 50, 12, 60, 4, 11 ] SD will tell you if it thinks those new measurements belong to a male skull or a female skull. Of course, you need a lot more training data than just three vectors. But that's generally how it works. You can classify anything with SD: hand-written digits, weather forecasts, whatever. As long as you can specify the data in terms of a vector and classification, you're good to go. Neural networks do the same general thing and are much more famous than SD. SD has advantages over neural nets, though. It tends to be a bit more accurate and also is "over-training resistant". If neural networks train on their data for too long, they can learn to be too specific in their classification. SD does not have this weakness. SD is also based on a much more solid mathematical foundation than neural nets. Hope this helps.
