[site]: crossvalidated
[post_id]: 315149
[parent_id]: 
[tags]: 
Impute mean based on cluster

I have a binary classification task with high class imbalance - the mean y is 0.014. Data consists of 100,000 rows and 40 columns. If I select rows where no column is NA I only get 10,000 rows back i.e. there are many NAs. I know how to impute mean in python: imp = Imputer(missing_values='NaN', strategy='mean', axis=0) #column wise imp.fit(X) X = imp.transform(X) I want to first group observations clusters (e.g. via PCA or another method), then impute the mean based on clusters . Question: Is it (i) statistically sensible and (ii) possible in python? I think I might use the following methods: logistic regression KNN Neural networks
