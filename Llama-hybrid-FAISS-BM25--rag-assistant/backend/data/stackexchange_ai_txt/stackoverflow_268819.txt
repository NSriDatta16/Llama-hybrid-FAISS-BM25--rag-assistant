[site]: stackoverflow
[post_id]: 268819
[parent_id]: 266373
[tags]: 
If we take the question "Why isn't it better known?" then the answer is going to be subjective. Presumably the reason why it is not better known is because profiling provides a long term solution rather than a current problem solution. It isn't effective for multi-threaded applications and isn't effective for applications like games which spend a significant portion of its time rendering. Furthermore, in single threaded applications if you have a method that you expect to consume the most run time, and you want to reduce the run-time of all other methods then it is going to be harder to determine which secondary methods to focus your efforts upon first. Your process for profiling is an acceptable method that can and does work, but profiling provides you with more information and has the benefit of showing you more detailed performance improvements and regressions. If you have well instrumented code then you can examine more than just the how long a particular method; you can see all the methods. With profiling: You can then rerun your scenario after each change to determine the degree of performance improvement/regression. You can profile the code on different hardware configurations to determine if your production hardware is going to be sufficient. You can profile the code under load and stress testing scenarios to determine how the volume of information impacts performance You can make it easier for junior developers to visualise the impacts of their changes to your code because they can re-profile the code in six months time while you're off at the beach or the pub, or both. Beach-pub, ftw. Profiling is given more weight because enterprise code should always have some degree of profiling because of the benefits it gives to the organisation of an extended period of time. The more important the code the more profiling and testing you do. Your approach is valid and is another item is the toolbox of the developer. It just gets outweighed by profiling.
