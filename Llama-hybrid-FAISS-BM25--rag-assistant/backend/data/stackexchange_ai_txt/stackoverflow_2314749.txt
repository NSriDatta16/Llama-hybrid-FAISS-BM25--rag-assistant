[site]: stackoverflow
[post_id]: 2314749
[parent_id]: 2314066
[tags]: 
It's a contrived way to emulate a GOTO as these two are practically identical: // NOTE: This is discouraged! do { if (someCondition) break; // some code be here } while (false); // more code be here and: // NOTE: This is discouraged, too! if (someCondition) goto marker; // some code be here marker: // more code be here On the other hand, both of these should really be done with if s: if (!someCondition) { // some code be here } // more code be here Although the nesting can get a bit ugly if you just turn a long string of forward- GOTO s into nested if s. The real answer is proper refactoring, though, not imitating archaic language constructs. If you were desperately trying to transliterate an algorithm with GOTO s in it, you could probably do it with this idiom. It's certainly non-standard and a good indicator that you're not adhering closely to the expected idioms of the language, though. I'm not aware of any C-like language where do/while is an idiomatic solution for anything, actually. You could probably refactor the whole mess into something more sensible to make it more idiomatic and much more readable.
