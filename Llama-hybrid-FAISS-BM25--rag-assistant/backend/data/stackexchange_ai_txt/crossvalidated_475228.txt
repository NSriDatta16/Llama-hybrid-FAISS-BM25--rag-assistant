[site]: crossvalidated
[post_id]: 475228
[parent_id]: 393317
[tags]: 
This isn't what's typically meant by "count data" in statistics. When statisticians talk about count data, they are referring to non-negative whole numbers that have no upper limit ( $[0, \infty)$ ). Your data are bounded counts (counts out of a finite total). They are binomial data. These would typically be modeled with logistic regression (or probit, etc.), not "count regression", which typically implies Poisson or negative binomial regression. The next issue is that you have repeated measures, which means the data are not independent. The proposed model treats the data as independent—that will lead to incorrect standard errors, p-values, etc. There are several ways to model data like these. The most common would probably be to use a GLMM to model scores as a function of time: library(lme4) # we'll need this package y = c(pre, post) time = rep(0:1, each = 25) id = rep(1:25, times=2) # we need an indicator for the participants model = glmer(cbind(y, 15-y)~time+(1|id), family=binomial) # this fits the GLMM summary(model, correlation=FALSE) # Generalized linear mixed model fit by maximum likelihood (Laplace # Approximation) [glmerMod] # Family: binomial ( logit ) # Formula: cbind(y, 15 - y) ~ time + (1 | id) # # AIC BIC logLik deviance df.resid # 209.4 215.2 -101.7 203.4 47 # # Scaled residuals: # Min 1Q Median 3Q Max # -2.2694 -0.5616 0.1626 0.3804 1.6842 # # Random effects: # Groups Name Variance Std.Dev. # id (Intercept) 0.07019 0.2649 # Number of obs: 50, groups: id, 25 # # Fixed effects: # Estimate Std. Error z value Pr(>|z|) # (Intercept) 0.1138 0.1170 0.973 0.3307 # time 0.3211 0.1492 2.152 0.0314 * # --- # Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
