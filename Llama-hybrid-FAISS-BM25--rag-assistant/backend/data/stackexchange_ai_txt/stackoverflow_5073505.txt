[site]: stackoverflow
[post_id]: 5073505
[parent_id]: 5073328
[tags]: 
If your enum space is dense, that is, not a lot of unused values, you could use the toString() and valueOf() methods. Name your values with a common string prefix, then attach the prefix before using valueOf() and strip it after using toString(). This has the disadvantage that you would have to convert to a numeric value if that's how it's stored in your database. Alternatively, you could add common methods for conversion and assign your database value to a specific enum value. Both these techniques have the advantage of leveraging the design of enum classes. There is a lot of good, mind-bending information about enums (and Java, in general) at http://mindprod.com/jgloss/enum.html . Though, there's nothing wrong with your way if it does the job you want.
