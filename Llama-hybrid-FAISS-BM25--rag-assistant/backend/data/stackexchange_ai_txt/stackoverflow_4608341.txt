[site]: stackoverflow
[post_id]: 4608341
[parent_id]: 4607625
[tags]: 
Normalization is not about replacing strings with numbers or "sharing" strings just because they have the same letters. I don't know their design, but the following scenario is perfectly normalized even though it uses strings as identifiers. create table post_statuses( status varchar(20) not null ,primary key(status) ); insert into post_statuses values('publish'); insert into post_statuses values('inherit'); insert into post_statuses values('pending'); create table posts( post_id ... status varchar(20) not null ,primary key(post_id) ,foreign key(status) references post_statuses(status) ); The main benefit of using natural keys over surrogate keys is that it reduces the number of joins needed and also the likelyhood that entire classes of queries can be answered from index only. The main drawbacks are increased storage and the possibility of having a hell if we need to change the values.
