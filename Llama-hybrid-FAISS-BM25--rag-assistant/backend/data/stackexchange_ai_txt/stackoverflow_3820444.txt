[site]: stackoverflow
[post_id]: 3820444
[parent_id]: 
[tags]: 
Having one method wait until a specific event has finished

I have a problem that I have found many similar problems related to multi threading, but noone linked to me specific problem. I have a method that does something, but when the method has been called, I don't want it to return untill a button is clicked. So basically, at the end of the method, I would like it to stay put and wait for the Button_Click event to finish, and then the event should in some way "tell" the method to continue. Currently I have done this by adding a loop at the end of the method like this: while(someVariable){ Thread.Sleep(10); Application.DoEvents(); } Then the Button_Click event set someVariable to be false, and then the loop stops. Of course, this looks very "iffy", and having this loop run every 10 milliseconds seems like a gigantic waste. Are there any way of doing this properly? Since the method in question runs on the same thread as the rest of the application, it's also important that halting the method does not block the tread for other activities. The reason I need this is because when the method is called from somewhere else, this method will draw up some components (including two buttons). Then the user clicks one of them, and then the method will return a different value depending on which button was clicked, and the program calling it can't continue untill it knows which button was clicked. So my program will look like this. .... if( someMethod() == ButtonA ){ //do the proper action if button 1 is clicked }else{ //do the proper action if button 2 is clicked } I hope this was not to confusing.
