[site]: stackoverflow
[post_id]: 4551755
[parent_id]: 4546201
[tags]: 
This problem isn't really android specific. I mean if you know how to serialize your data either via java.io.Serializable or you have a custom persistence format, you just need to know where to store it. You can grab a file on the local device via FileOutputStream stream = null; try{ stream = mContext.openFileOutput("name.data", Context.MODE_PRIVATE); ObjectOutputStream dout = new ObjectOutputStream(stream); dout.writeObject(myArrayList); dout.flush(); stream.getFD().sync(); } catch(IOException e) { //Do something intelligent } finally { stream.close(); } You will have to use openFileInput() later to read the data back. Or you can grab External Storage. This is similar however you have to guarantee that it even exists. Like is the external storage connected and even able to be written to. Since you are writing a data structure here and usually external storage is world readable I don't think this is a good idea for your intended purposes (just from what you have put so far). If your data is structured and is going to be queried many times and it might be rather big to always load up then consider using the sql lite tools that are part of the OS. However I am assuming you don't need this either as a simple list is just that, a linear structures which you could probably seek through in a file (assuming it is less than 1MB of data :)
