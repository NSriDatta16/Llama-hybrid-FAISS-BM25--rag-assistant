[site]: stackoverflow
[post_id]: 5351038
[parent_id]: 5350970
[tags]: 
You ask: Does the following code work only by luck? Well, yes, you are relying on implementation specific details. In fact the correct way to write it is perfectly natural and simple: type TDoubleArray = array of Double; TDoubleMatrix = array of TDoubleArray; procedure SwapRows(M: TDoubleMatrix; Row1, Row2: Integer); var Temp: TDoubleArray; begin Temp := M[Row1]; M[Row1] := M[Row2]; M[Row2] := Temp; end; You need to declare an intermediate type for the row, TDoubleArray, so that you can perform the assignment to Temp in the swap routine. A 2D constant size array array [1..M] of array [1..N] of TMyType is a contiguous block of memory. A 2D dynamically size array as you have is not. Indeed it can even be ragged in the sense that the rows have different numbers of columns. So you can have, say, a triangular matrix.
