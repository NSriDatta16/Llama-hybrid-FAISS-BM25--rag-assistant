[site]: stackoverflow
[post_id]: 4440720
[parent_id]: 4439024
[tags]: 
The resource file format for dialogs is ancient. The only thing in its favor is the dialog unit abstraction that means that dialogs automatically scale to take account of the users preferred font face and display dpi settings. Other than that, there is no support in the dialog format for anchors. Microsoft have sadly not released a new UI building toolkit however for native development so for Native Win32 apps you are stuck creating / positioning your controls at runtime manually for any task that dialog resources cannot cater for. WPF is clearly superior, but requires .NET I don't see the point of disallowing res hacking one way or another. What do you gain by preventing it? If your own layout skills are so bad that people will want to re-layout their dialogs "illegally" then... well wtf is all I can say. To Summarize: It IS pointless to try and protect dialog layouts. What can you possibly hope to achieve by limiting something people would only resort to if your own layouts were #@%^ anyway. You WILL however probably want to create the controls at runtime anyway as the dialog resource format lacks modern features like anchors. Allthough it is a good idea to continue the practice of designing forms in units based on font metrics rather than pixels. If you want a pre-build "form" layout system with anchors, Win32 cannot help you. The QT framework if you want a cross platform c++ solution, or switching to .NET's WPF are both powerful alternatives that may allow you to leverage your existing non UI code.
