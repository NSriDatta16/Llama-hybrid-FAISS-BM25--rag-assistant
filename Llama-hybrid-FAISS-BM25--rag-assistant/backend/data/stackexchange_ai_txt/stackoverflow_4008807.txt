[site]: stackoverflow
[post_id]: 4008807
[parent_id]: 4008473
[tags]: 
As already mentioned by Jouni, Constant memory is not possible, but this count-min sketch sounds like the bomb! (although I have not heard of it before). But what I think you might have asked for is the possibility to store this in one array and only update each frequency. This can be done in haskell with Mutable arrays. Here is an example: main = do gen >= print Running the program with +RTS -s , and input 1000000 we get the output 787,874,256 bytes allocated in the heap 364,536 bytes copied during GC 5,984 bytes maximum residency (1 sample(s)) 17,928 bytes maximum slop 1 MB total memory in use (0 MB lost due to fragmentation) ... Total time 0.29s ( 0.30s elapsed) ... %GC time 0.3% (2.1% elapsed)
