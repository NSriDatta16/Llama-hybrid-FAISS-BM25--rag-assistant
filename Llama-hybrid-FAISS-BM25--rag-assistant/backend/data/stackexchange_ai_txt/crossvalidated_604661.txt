[site]: crossvalidated
[post_id]: 604661
[parent_id]: 
[tags]: 
GAM structure when many random effect levels

I have a larg-ish dataset , ~ 57,000 observations. The dataset is an organisation-level dataset that describes organisational metrics through time. There is a single outcome of interest, cat.norm.cit.impact , which can only be a positive numeric value (or 0), and four main predictor variables: org.name : the name of the individual organisation; factor variable with ~2,500 unique levels org.type : classification of the organisations' type; factor variable with 4 unique levels region : the geographic region where the organisation is located; factor variable with 8 unique levels year : year when cat.norm.cit.impact was measured; numeric variable The primary interest of the analysis is to investigate how cat.norm.cit.impact changes through time by org.type . However, I also expect that cat.norm.cit.impact will change through time according to region . The complicating factor is the random effect structure; org.name has ~2,500 unique levels and so fitting random intercepts, s(org.name, bs = 're') , and slopes, s(org.name, year, bs = 're') , is computationally very demanding . In an attempt to reduce computation costs (see Q3 in answer), and remove the need for fitting separate random intercepts and slopes, I tried fitting a random smooth for each level of org.name , s(org.name, year, bs = 'fs') , but I run into memory errors. I have now settled on the below model ctrl Question: Would such a model structure be an appropriate compromise given the key question of interest (effect of org.type through time/ year ) and given the many levels of random effects? I appreciate that accounting for clustering and the hierarchy in the dataset is important and necessary, but it is partly a side issue to the key question of interest, hence settling for the inclusion of only a random intercept for each level of org.name and no random slope. While this model seemed reasonable in my head, its fit was average. All the smooths seem ok based on gam.check() , i.e. no p-value I appreciate that bam() and gam() have largely been designed to fit smooths and not necessarily to fit complex random effect structures. Update: The primary interest here is fitting non-linear responses, hence the original choice to use a GAM. However, given that the GAM appeared to be struggling with the many levels of the random effects I decided to try fitting an approximately similar model using glmer() in lme4 which supposedly better handles random effects. Even with relatively basic and non-complex natural splines (df = 3) I encounter issues with model complexity when including random intercepts and slopes. A model with only random intercepts and slopes, and no other predictors, also encounters a similar problem. glmer((cat.norm.cit.impact + 0.001) ~ + org.type + + region + + ns(year, 3):org.type + + ns(year, 3):region + + (1 | org.name) + + (0 + year | org.name), + data = dat, + family = Gamma(link = "log"), nAGQ = 0)
