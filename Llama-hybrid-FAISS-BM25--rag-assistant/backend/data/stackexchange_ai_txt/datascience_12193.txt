[site]: datascience
[post_id]: 12193
[parent_id]: 12128
[tags]: 
There should be a distinction between the terms of neural networks and deep neural networks . I found this link: https://www.quora.com/How-does-deep-learning-work-and-how-is-it-different-from-normal-neural-networks-applied-with-SVM . Unfortunately, there is no general rule and probably will never be one that says that you should use a certain type of network "a priori". It depends on the task you are trying to solve, but you already knew that. I suppose you are wondering what are the meanings of the additional hidden layers, how to figure out how many of them should be there and how large they should be. Also, how the additional parameter affects this network and how to think through your model when something doesn't work right. Again, it depends. There are lots of types of networks that are good for additional problems. For example, LSTMs are good when working with series of data. If you want to tune your LSTM to work well, you should go INTO it and figure out how EXACTLY does it work. I highly recommend this playground site for neural networks: http://playground.tensorflow.org I also suggest https://www.tensorflow.org/versions/r0.9/how_tos/graph_viz/index.html to inspect your code's architecture. Additionally, try to explore the TensorFlow documentation. In the end, I advise you to read. Read more. ( http://karpathy.github.io/ )
