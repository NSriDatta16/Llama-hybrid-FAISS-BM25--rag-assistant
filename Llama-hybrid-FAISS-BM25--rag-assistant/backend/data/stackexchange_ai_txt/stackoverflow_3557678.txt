[site]: stackoverflow
[post_id]: 3557678
[parent_id]: 417108
[tags]: 
In the initial version of the UUID (Universally Unique Identifier) specification, each of the data elements had a semantic meaning: { time_low } – { time_mid } – { time_high_and_version } – { clock_seq_and_reserved clock_seq_low } – { node_id } These elements were designed to provide temporal (time bits), and spatial (host bits) uniqueness. Version History As the the mathematical probability of collisions in a keyspace of 2^1024 random bits was found to be astronomically improbable, subsequent versions of the UUID spec have phased out the time and host data for security and privacy reasons. The only elements that retain any meaning are the version bits and the reserved bits. Version 3 UUIDs are derived from an MD5 hash of a URI or other Distinguished Name. Version 4 is generated with random data and is, currently, the most common implementation you'll see in the wild. Version 5 is derived from a SHA1 hash. Storage formats Since the hyphens are specified for the ASCII formatting of UUIDs in the RFC, even though the individual sections no longer retain their original meaning, they are still required if you need interoperability. UUIDs are also sometimes stored as a base64 or ascii85 encoded string to save space for transmission over transports that are not binary-safe, and adherence to the RFC is not required. Ascii: 3F2504E0-4F89-11D3-9A0C-0305E82C3301 Base64: 7QDBkvCA1+B9K/U0vrQx1A Ascii85: 5:$Hj:Pf\4RLB9%kU\Lj References: RFC4122 (see page 3 specifically for the ABNF description of the UUID format) Wikipedia GUID UUID
