[site]: stackoverflow
[post_id]: 734211
[parent_id]: 734151
[tags]: 
You want to encapsulate data in such a way that each table only contains information directly related to what it needs to deal with. Create linking tables to provide relationships between different sets of data (in this case, users and objects). I would create the following tables: User - the user's base information: login, password, user ID, whatever you need. Object - the object to rate: its name/ID and attributes. Feature - a table describing a type of feature, with some sort of feature name/ID. This may start with your three main types, but you could always expand/modify this. You can also customize which features each object will have available for rating. ObjectFeature - a linking table for object and feature. Contains the primary key of each table, creating a many-to-many relationship between the two. UserRating - another linking table of sorts, between the ObjectFeature and the User. Contains the primary keys of these two tables, as well as the rating assigned. From a relational standpoint, this is a better way of organizing the data than what you presented. Through its design it makes clear how each set of data is connected and makes expandability (e.g. adding additional features to rate, having different objects have different features to rate) much cleaner.
