[site]: crossvalidated
[post_id]: 321887
[parent_id]: 
[tags]: 
Approximating a function of a cloud of (x,y) points

My objective is to approximate an (unknown) non-linear function whose: input is an unordered collection of an arbitrary number of (x,y) coordinates (imagine a cloud of, say, between 1 and 1000 points in two-dimensional space) output is one number I have example inputs and corresponding outputs produced by a numerical model that is very expensive to run. (Hence the motivation to approximate the function, rather than calculating it exactly every time.) Details of the model: a Computational Fluid Dynamics simulation, where the input points represent (identical) obstacles, of which there can be an arbitrary number, and output is the resulting time-averaged velocity deficit at the origin. The origin (output point) is upstream of the obstacles, so the function is fairly smooth. My thought was to design a neural network that could be trained to approximate this function. But I can't figure out what kind of neural network, if any, would be suitable for the job. Feed-forward networks require a fixed number of inputs (whereas I have an arbitrary number of (x,y) points) Recurrent neural networks can handle arbitrary-length inputs, but inherently attach significance to the order of these inputs and will give different outputs for different orders (whereas the "order" of the points in my input collection isn't defined and therefore shouldn't influence the output) What would be a suitable high-level neural network design? Or are neural networks just not the right tool for the job?
