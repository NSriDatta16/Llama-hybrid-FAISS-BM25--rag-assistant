[site]: stackoverflow
[post_id]: 4861315
[parent_id]: 4851541
[tags]: 
Ok I found a way to do this. I bound the ItemDragCompleted event of the ListBoxDragDropTarget , and did the following: private void dropTarget1_ItemDragCompleted(object sender, ItemDragEventArgs e) { var tmp = (e.DragSource as ListBox).ItemsSource.Cast ().ToList(); SelectionCollection selectionCollection = e.Data as SelectionCollection; if (selectionCollection != null) { MyClass cw = selectionCollection[0].Item as MyClass; int idx = tmp.IndexOf(cw); if (idx == tmp.Count - 1) { tmp.Remove(cw); tmp.Insert(tmp.Count - 1, cw); MyListBox.ItemsSource = new ObservableCollection (tmp); } } } As the DragSource represents the Listbox, with the new "arrangement" of items, I can therefore check if the item is now located at the end, and move it in this case. The only problem left is that it causes a flicker on the screen, due to the item being dropped and then moved. I'm still open to any other (best) suggestion.
