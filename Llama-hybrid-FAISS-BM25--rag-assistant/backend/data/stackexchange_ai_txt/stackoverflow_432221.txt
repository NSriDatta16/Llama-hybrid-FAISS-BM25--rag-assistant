[site]: stackoverflow
[post_id]: 432221
[parent_id]: 432174
[tags]: 
A hack that's going to work with pretty much every possible browser is to use open classes like this: ; This is not all that elegant to the purists, but it's universally supported, standard-compliant, and very easy to manipulate. It really seems like the best possible method. If you serialize , modify , copy your tags, or do pretty much anything else, data will stay attached, copied etc. The only problem is that you cannot store non-serializable objects that way , and there might be limits if you put something really huge there. A second way is to use fake attributes like: This is more elegant, but breaks standard, and I'm not 100% sure about support. Many browsers support it fully, I think IE6 supports JS access for it but not CSS selectors (which doesn't really matter here), maybe some browsers will be completely confused, you need to check it. Doing funny things like serializing and deserializing would be even more dangerous. Using ids to pure JS hash mostly works, except when you try to copy your tags. If you have tag , copy it via standard JS methods, and then try to modify data attached to just one copy, the other copy will be modified. It's not a problem if you don't copy tag s, or use read only data. If you copy tag s and they're modified you'll need to handle that manually.
