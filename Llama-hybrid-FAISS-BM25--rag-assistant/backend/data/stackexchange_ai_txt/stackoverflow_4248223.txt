[site]: stackoverflow
[post_id]: 4248223
[parent_id]: 
[tags]: 
Java generics of generics of

I have a generic class which represents a fragment of text. That fragment of text may have any of a number of different modes (different types of highlighting). Those modes are represented by an Enum. The Enum could be different for each project but it must implement an interface which provides a method to combine 2 of them (could be highlighted and bolded). So i have an interface: public interface TextFragmentMode > { /** * Will combine the supplied mode with the current mode and return the * result. * * @param mode The mode to combine with. * @return The combined mode. */ public E combine( E mode ); } Then my TextFragment is a container for both a String of text, and a mode. But when I try to declare the class: public class TextFragment >> { StringBuilder text; E mode; ... I get the following error: Syntax error on token "extends", , expected Which, according to eclipse syntax highlighting, is referring to the E extends Enum portion of the code. Does anyone know what I am doing wrong? I must be missing something about Generics... --------------------- edit ------------------- I'm finally taking the time to read Effective Java by Josh Bloch (second edition), and it turns out he goes over this use case as Item 34: Emulate extensible enums with interfaces . As much as I would like to say great mind think alike... That would be WAY too presumtuous!
