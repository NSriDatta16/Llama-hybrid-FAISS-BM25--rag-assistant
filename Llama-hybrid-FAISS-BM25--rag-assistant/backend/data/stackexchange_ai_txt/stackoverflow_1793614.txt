[site]: stackoverflow
[post_id]: 1793614
[parent_id]: 309206
[tags]: 
I think the right answer to questions like this is almost always "historical reasons, mostly". Generics could just as well have been called "schemes" or "classes" or "type families" or "genera" or "type functions" or "statics" or "Greek types" or any of a million other things. Long ago someone decided to use the word "generic", and it stuck. "Generic" in the Java sense dates back at least to the mid-1970s. The U.S. Department of Defense was honing a requirements document for its new programming language (what would become ADA). An early draft ( "Woodenman" , August 1975) says: Compile time parameters are needed in extensible languages to permit specification of generic procedures and data structures such as stacks, and queues without repeating the definition for each element type. This is the only use of "generic" in the document. It's not clear to me how it was intended. But by July 1977 ( "Tinman" ) there was a whole paragraph on generics, and the term had clearly come to mean something specific: 12D. GENERIC DEFINITIONS It shall be possible to define functions, procedures, and types with parameters that are instantiated during translation at each call. Such parameters may be any defined identifier (including those for variables, functions, or types), an expression, or a statement. These parameters, like all other parameters, shall be evaluated in the context of the call. By June 1978 ( "Steelman" ) it was established jargon; there were other uses of the term "generic" in other sections of the document, clearly referring to this feature. In the finished language, generic was a reserved word. The earliest plausibly related use of "generic" I found in academia was in Robin Milner's "A theory of type polymorphism in programming" (1978) (and he feels compelled to explain what he means by "generic", so it can't have been in common use in academia at that time): So this is the generic type of map , that is, to any occurrence of map within the scope of this declaration must be assigned some substitution instance of this type. "Generic type variable" became CS jargon.
