[site]: stackoverflow
[post_id]: 5692609
[parent_id]: 5692411
[tags]: 
Don't panic. Everyone has to start somewhere and it can be very frustrating when you're only just learning the ropes. In answering this question, we need to look not only at your JavaScript, but at the HTML as well. You don't have a submit input type; instead opting for a regular button. That wouldn't necessarily be a problem, except nowhere in your JavaScript are you actually submitting your form. That means every time someone clicks the "Send" button, it will fire the validate_form() function you've defined but do nothing further with it. Let's make a couple of changes: Replace your button with a submit input: Next, add the following code to your form tag so that we define an action to take when the user tries to submit your form: onsubmit="validate_form(this)" So your whole form tag now looks like this: Notice I removed an extra "form" from that element. Ok, next we want to handle what happens when the form is ready to be validated. function validate_form(form) { // ...we can step through each item by name and validate its value. var username = checkUsernameForLength(form["username"].value); var email = checkaddress(form["country"].value); // ...and so on. return (username && email && {my other return values}); } Each method you call (e.g. CheckUsernameForLength) should return either true or false, depending on whether the input is valid or not. Our last return is probably a little inelegant, but is a verbose example of a way to aggregate our returned values and see if there are any "failed" values in there. If all your methods returned true, that last return will evaluate to true. Otherwise (obviously) it will return false. The submission of the form will depend on whatever value is returned from your validate_form() function.
