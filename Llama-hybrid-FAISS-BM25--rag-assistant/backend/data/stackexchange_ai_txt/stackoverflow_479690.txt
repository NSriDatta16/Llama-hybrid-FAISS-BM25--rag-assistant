[site]: stackoverflow
[post_id]: 479690
[parent_id]: 25137
[tags]: 
I've done some research on that subject during my time at the university, expanding the State Exploring Assembly Model Checker . We used a virtual machine to walk each and every possible path/state of the program, using A* and some heuristic, depending on the kind of error (deadlock, I/O errors, ...) It was inspired by Java Pathfinder and it worked with C++ code. (Everything GCC could compile) But in our experiences this kind of technology will not be used in business applications soon, because of GUI related problems, the work necessary for creating an initial test environment and the enormous hardware requirements. (You need lots of RAM and disc space, because of the gigantic state space)
