[site]: stackoverflow
[post_id]: 1587833
[parent_id]: 
[tags]: 
How does the Entity Framework and the LINQExtender project differ?

I have used LINQ-to-SQL in WPF and ASP.NET MVC projects in the following way: create database drag tables into the designer use generated classes with LINQ Now I have a project where the data sources are a mix of web services, a database, and XML files. From what I understand of Entity Framework , I can create similar classes as I can in LINQ-to-SQL but they would wrap my other sources as well (web services, XML files, etc.) However, I don't see how this would work with the convenient drag-and-drop visual designer since it wouldn't know which methods to call on my services to save the data, etc. So I also found LINQExtender which enables you to create data providers which can be consumed by LINQ. In a sense, this is the same thing that the Entity Framework does yet it seems that it would be a way to create classes which could be used by the Entity Framework. Are tools like LINQExtender and Entity Framework competing solutions to create data providers / ORM layer, or are they tools you would use together?
