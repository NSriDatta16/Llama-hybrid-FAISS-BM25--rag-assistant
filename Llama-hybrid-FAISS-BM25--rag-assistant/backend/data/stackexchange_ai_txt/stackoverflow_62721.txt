[site]: stackoverflow
[post_id]: 62721
[parent_id]: 62625
[tags]: 
Ideally, you would have done your unit tests as you were writing the class. This is how you're meant to do it when using Test Driven Development. You add the tests as you implement each function point, making sure that you cover the edge-cases with test too. Writing the tests afterwards is much more painful, but doable. Here's what I'd do in your position: Write a basic set of tests that test the core function. Get NCover and run it on your tests. Your test coverage will probably be around 50% at this point. Keep adding tests that cover your edge-cases until you get coverage of around 80%-90% This should give you a nice working set of unit tests that will act as a good buffer against regressions. The only problem with this approach is that code has to be designed to be testable in this fashion. If you made any coupling mistakes early on, you won't be able to get high coverage very easily. This is why it is really important to write the tests before you write the code. It forces you to write code that is loosely coupled.
