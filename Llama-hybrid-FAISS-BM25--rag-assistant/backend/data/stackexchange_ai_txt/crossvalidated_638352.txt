[site]: crossvalidated
[post_id]: 638352
[parent_id]: 
[tags]: 
Sampling from large Bayesian network of particular form

I want to know whether there is an efficient way of sampling from this special kind of Bayesian networks of the following form (like thousands or millions of variables in principle). Here is a picture of a simple example: All variables are discrete, networks always have a fixed height (just four in this case), and they just consist of these "bowtie" like pieces, with every graph clique containing a CPT, (like $P(q(2)|2_1,1^2)$ or $P(q(2)|2^1,2^2)$ for the top bowtie) describing conditional probabilities. The network is read from left to right. Most-left nodes are all independent, and their probabilities are known $P(2_1), P(1_2), P(1_3), P(3_4)$ . I need to sample from the joint distribution of the most right nodes $P(4^1,5^2,6^3,7^4)$ . So in principle, I would go from left to right updating joint probability from $P(2_1, 1_2, 1_3, 3_4)$ to $P(2_1, 1^2, 1^3, 3_4)$ , then $P(2^1, 1^2, 1_3, 3_4)$ then $P(2^1, 2^2, 3_3, 3^4)$ etc. using Bayes rule around $q(1)$ , $q(2)$ , $q(3), \dots$ and so on. But for a large height, it would be infeasible to even store, let alone update these giant joint probabilities. I'm wondering how I would go about this problem, even as a small example first. What tool can encode it and solve it most easily, at least approximately (like PyMC or Pyro, maybe)?
