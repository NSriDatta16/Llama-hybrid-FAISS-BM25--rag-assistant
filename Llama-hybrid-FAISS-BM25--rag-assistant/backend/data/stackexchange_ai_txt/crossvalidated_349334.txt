[site]: crossvalidated
[post_id]: 349334
[parent_id]: 349328
[tags]: 
Feature engineering requires domain knowledge. The important general principle is to control for overfitting - if the number of features you are considering is large compared to the dataset then this is a real risk. There is an alternative to designing features, which is to design a Mercer kernel. That is a function that measures the similarity between two data points (in your case, two transactions). Then you can use a kernel-based learning method, for example a Support Vector Classifier. This is equivalent to learning in a large feature space by Mercer's Theorem, but you don't have to design the features.
