[site]: stackoverflow
[post_id]: 2946035
[parent_id]: 2837441
[tags]: 
After more work on this query, I ended up with enormous performance improvements over the original concept. The most important improvement was to create indices in both the Daily and Quarterly tables - in Daily I created indices on (datasource, date_posted) and (date_posted, datasource) USING BTREE and on (datasource) USING HASH, and in Quarterly I did the same thing. This is overkill but it made sure I had an option that the query engine could use. That reduced the query time to less than 1% of what it had been. (!!) Then, I learned that given my particular circumstances I could use MAX() instead of ORDER BY and LIMIT so I use a call to MAX() to get the appropriate unique_ID. That reduced the query time by about 20%. Finally, I learned that with the InnoDB storage engine I could segment the chunk of the Daily table that I was updating with any one query, which allowed me to multi-thread the queries with a little elbow-grease and scripting. The parallel processing worked well and every thread reduced the query time linearly. So, the basic query that is performing literally 1000 times better than my own first attempt is: UPDATE Daily SET qtr_ID = ( SELECT MAX(unique_ID) FROM Quarterly WHERE Daily.datasource = Quarterly.datasource AND Daily.date_posted > Quarterly.dateposted ) WHERE unique_ID > ScriptVarLowerBound AND unique_ID
