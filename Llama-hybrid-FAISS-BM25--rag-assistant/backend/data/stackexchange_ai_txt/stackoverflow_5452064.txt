[site]: stackoverflow
[post_id]: 5452064
[parent_id]: 5451193
[tags]: 
A pragmatic and easy understandable solution is: regex = %r!"(https?://[-.\w]+\.\w{2,6})"! Some notes: With %r we can choose the start and end delimiter. In this case I used exclamation mark, since I want to use slash unescaped in the regex. The optional quantifier (i.e. '?') binds only to the preceding expression, in this case 's'. There's no need to put the 's' in a character class [s]? . It's the same as s? . Inside the character class [-.\w] we don't need to escape dash and dot in order to make them match dot and dash literally. Dash should be first, however, to not mean range. \w matches [A-Za-z0-9_] in Ruby. It's not exactly the full definition of URL characters, but combined with dash and dot it may be enough for our needs. Top domains are between 2 and 6 characters long, e.g. '.se' and '.travel' I'm not sure what you mean by I want to exclude some terminators but this regex matches only the wanted one in your example. We want to use the first capture group, e.g. like this: if input =~ %r!"(https?://[-.\w]+.\w{2,6})"! match = $~[1] else match = "" end
