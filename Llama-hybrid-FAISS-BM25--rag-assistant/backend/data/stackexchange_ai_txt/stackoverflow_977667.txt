[site]: stackoverflow
[post_id]: 977667
[parent_id]: 977544
[tags]: 
If your flags are represented as a defined enum, you can simply cast it to one of the integral types that enums support (int, long, etc). You can then deserialize the enum from its value representation using: // define a Flags enumeration... [Flags] enum MyEnum { First = 1, Second = 2, Third = 4, }; MyEnum originalValue = MyEnum.First | MyEnum.Second; int storedValue = (int)originalValue; // value serialized into storage somewhere... // later on ... // deserialized however you need... int restoredValue = ReadValueFromDataStore(); // convert back into a typesafe enum... MyEnum recoveredValue = Enum.Parse( typeof(MyEnum), restoredValue );
