[site]: stackoverflow
[post_id]: 4928687
[parent_id]: 4928446
[tags]: 
Some things Ehcache can give you, that you would have to manage yourself with a HashMap. An eviction policy. If your data never grows, then no need to worry. But if you want to prevent a memory leak eventually breaking your app, then you need an eviction policy. With ehcache, you can configure the time to live, and time to idle of elements in your cache. Clustered caching with Terracotta. If you have more than one tomcat for failover / scalability, then you can link Ehcache up to a Terracotta cluster, so that all instances can see the same data if needed. Transparent disk overflow - be this on the tomcat server, or the terracotta cluster. When data doesn't fit into heap. Off heap storage. New technologies such as BigMemory mean you have access to a much larger in-memory cache without GC overheads. Concurrency. Ehcache can use a ConcurrentDistributedMap to give the optimal performance in a clustered configuration. This is just the tip of the iceberg.
