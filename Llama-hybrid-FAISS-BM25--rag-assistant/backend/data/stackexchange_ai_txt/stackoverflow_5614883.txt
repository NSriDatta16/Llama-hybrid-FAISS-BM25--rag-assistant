[site]: stackoverflow
[post_id]: 5614883
[parent_id]: 5608333
[tags]: 
First, the information you get from Range objects are about as useful as you can get: for each of the start and end boundaries of the Range you get a DOM node and an offset within that node (a character offset inside a text or comment node or a child node offset otherwise), which completely describes the boundary. What you mean by "absolute start and end points" I imagine is two character offsets within the whole editable element, but that is a slippery concept: it seems simple, but is tricky to pin down. For example, how many characters does a paragraph break count for? A ? An element with display: block ? Elements such as elements that contain text but are not visible to the user? Elements hidden via display: none ? Elements outside the normal document flow, such as those positioned via position: absolute ? Multiple consecutive whitespace characters that are rendered as a single visible character by the browser? Having said all that, I have recently had a go at writing code to do this, and yes, it does involve DOM manipulation (although not that horrendous). It's extremely rudimentary and doesn't deal satisfactorily with any of the above issues, partly because I knocked it up quite quickly for a question on SO, and partly because in general I don't think it's possible to deal nicely in general with all those issues. The following answer provides functions for saving and restoring the selection as character indices within an editable element: replace innerHTML in contenteditable div
