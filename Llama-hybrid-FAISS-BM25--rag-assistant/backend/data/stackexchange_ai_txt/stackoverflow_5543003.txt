[site]: stackoverflow
[post_id]: 5543003
[parent_id]: 
[tags]: 
How to upcast and use child specific methods

I have the following problem: //class XmlObject is part of org.apache.xmlbeans public class DepartmentType extends XmlObject; // getName method is defined in this class public class OrganizatiopnType extends XmlObject; // getName method is defined in this class XmlObject department = null; if (a == 1) department = (DepartmentType) order.getDepartment(); // returns DepartmentType else department = (OrganizationType) order.getOrganization(); // returns OrganizationType department.getName(); // throws cannot find symbol // ... and do some other complex stuff using methods which are defined in both classes ... What is the cleanest way to call the getName() method? UPDATE 1: Cybernate, your approach seems the most logical, if you have control over the DepartmentType & OrganizationType . Unfortunately, these objects are generated from XML schema by xmlbeans. In my case, I could redesign the schema, so that both types have common base. But what if I wouldn't have the control over the schema. How could I implement the basic idea?
