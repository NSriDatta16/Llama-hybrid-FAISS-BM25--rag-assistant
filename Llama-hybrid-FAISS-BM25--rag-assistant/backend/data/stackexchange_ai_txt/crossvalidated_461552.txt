[site]: crossvalidated
[post_id]: 461552
[parent_id]: 
[tags]: 
Bayesian error (Toeplitz approximation of a correlation matrix dimension mismatch with class number)

I like to solve the question of part 1 of this question form Introduction to Statistical Pattern Recognition, 2nd Edition which is: Repeat Problem 7 for a two-dimensional random field of nxn. The verti- cal and horizontal correlation matrices are the same and specified by (4.126). and the question 7 is : Two stationary normal distributions are characterized by ... where R is given in (4.126). (a) Compute the Bayes error for n = 10, A = 2, o2 = 1, and p = 0.5 . (b) Using the same numbers as in (a), compute the error when ... are used to design the classifier and ... are used to test the classifier. and 4.126 equation is: SO i tried to write some matlab codes based of this codes like this: n=10;delta=2; m0=zeros(1,n);m1=delta*ones(1,n); m=[m0;m1]; S1=1*eye(2); %S=zeros(n,n); %S(0.5,:)=S1;S(:,0.5)=S1; roa=0.5 r = [1 roa^1 roa^2 roa^3 roa^4 roa^5 roa^6 roa^7 roa^7 roa^8 roa^9]; S=toeplitz(r) P=[0.5,0.5]'; N=500; randn('seed',0) [X,y]=generate_gauss_classes(m,S,P,N); %The data set X 1 is generated similarly: randn('seed',100); [X1,y1]=generate_gauss_classes(m,S,P,N); %where randn is initialized using seed = 100. %Step 1. To compute the ML estimates of the mean values and covariance matrix (common to all three %classes), use Gaussian_ML_estimate by typing class1_data=X(:,find(y==1)); [m1_hat, S1_hat]=Gaussian_ML_estimate(class1_data); class2_data=X(:,find(y==2)); [m2_hat, S2_hat]=Gaussian_ML_estimate(class2_data); class3_data=X(:,find(y==3)); [m3_hat, S3_hat]=Gaussian_ML_estimate(class3_data); S_hat=(1/3)*(S1_hat+S2_hat+S3_hat); m_hat=[m1_hat m2_hat m3_hat]; %For the Bayesian classifier, use function bayes_classifier and provide as input the matrices m, %S, P, which were used for the data set generation. In other words, use the true values of m, S, and P %and not their estimated values. Type z_bayesian=bayes_classifier(m,S,P,X1); %To compute the error probability for each classifier, compare the vector y 1 of the true class labels %of the vectors of X 1 with vectors z_euclidean, z_mahalanobis, and z_bayesian, respectively. For %each comparison, examine the vector elements in pairs and count the number of matches (i.e., correct %classifications); divide by the length of y 1 . Type err_bayesian = (1-length(find(y1==z_bayesian))/length(y1)); to solve it similar to this sample : and so i don't understand how it could have n=8 and which made 8x8 covariance matrix like this: which means i must have 8 class but the question said i have 2 class, so what part i of the question i don't understand? Thanks.
