[site]: crossvalidated
[post_id]: 70226
[parent_id]: 70134
[tags]: 
There are many options you could pursue, I can suggest a few. First, if you already have a training set, and assuming the training set is large enough, you could learn a distance metric instead of using PCA weights-based interpretation. See Mahalanobis Distance as an example of distance metric learning. The main idea is that you intend to use a weighted Euclidean metric: $$ D(x_1,x_2)=\sqrt{(x_1-x_2)^TC(x_1-x_2)} $$ $$ C=diag(w_1...w_n) $$ The Mahalanobis distance is similarly defined, although it takes into account the cross correlation covariance between the variables (some of your features may be correlated) $$ D_M(x_1,x_2)=\sqrt{(x_1-x_2)^TC(x_1-x_2)} $$ where C is the covariance matrix. Another option is instead of using PCA, which is an unsupervised method, use a supervised method, such as Class Augumented-PCA . Generally speaking, you could use any interpretable machine learning classification algorithm (gives you the weights) and use K-NN with the weights.
