[site]: crossvalidated
[post_id]: 286440
[parent_id]: 
[tags]: 
Decompose a time series data into deterministic trend and stochastic trend

Given the comments below, I reformed my questions with more background information and simulation/examples. My question also includes the validity of the method in theory. Please correct me if any statement is not accurate. Background: 1) For our client (policy makers), it is often interesting for them to check whether there is a linear trend in the time series data, especially after a new policy is applied. 2) One characteristic of such data is that it is often with very short time period (around 10 years). 3) Another characteristic of the data is that the observation is not census but estimation from samples (biology and field ecology study, not possible to collect census data). This leads to observation errors involved in the data, sometimes can be very large (looks like outlier). Motivation: I have been puzzled for some time about how to handle the above three questions. I would like to try as much I can using ARIMA. To solve 1), providing a statistical test for a linear trend. Method: Theoretically, if the data is stationary after ARIMA(p,d,q) process and it contains a drift, the data can be written as $y_{t}=u\times t + y_{t}^{'}$ and $y_{t}^{'}$ follows a ARIMA process with order(p,d,q). In an example of order (1,1,0), $y_{t}^{'}-y_{t-1}^{'}=\phi(y_{t}^{'}-y_{t-1}^{'})+\epsilon_{t}$. I am thinking to decompose the observed data into a deterministic trend $u\times t $ , a stochastic trend $y_{t}-u\times t -\epsilon_{t}=y_{t}^{'}-\epsilon_{t}$ and error $\epsilon_{t}$. Do you think these two components can be called in these terms? The parameters of the two trends can be estimated using Arima function. here is the code on a simulated data to demonstrate how I work through it: set.seed(123) n This is extra bit of code I used to test whether the parameters I inputed gives stationary data of ts.sim1 after (1,1,0) process. dat .05)/1000*100 Next: ## 3. make some plots adf.test(ts.sim2, alternative = "stationary") Acf(ts.sim2, main='') Pacf(ts.sim2, main='') ## 4. auto-select best model in terms of AIC, and check residual pattern fit Note that the auto.arima selection do not necessarily gives the true model, in this case, it suggests that the best model is (2,1,0) with drift rather than (1,1,0). The residual plots (below) for (1,1,0) with drift shows independent random residuals with equal variance The ARIMA (1,1,0) with drift model output the following: Series: ts.sim2 ARIMA(1,1,0) with drift Coefficients: ar1 drift -0.9126 0.0298 s.e. 0.0533 0.0192 sigma^2 estimated as 0.1355: log likelihood=-41.41 AIC=88.83 AICc=89.08 BIC=96.61 Training set error measures: ME RMSE MAE MPE MAPE MASE ACF1 Training set -0.009091779 0.3625225 0.2671725 -3.364276 12.46496 0.5205074 -0.0499297 I can then test for the statistical significance of the linear slope ## 6. test for linear slope drift_index Finally, plot the fitted deterministic and stochastic trend: drift_index I tried to plot the prediction intervals (conditional to each component) in gray band in the figure, but I am not sure I did the correct calculation in the code. Additionally, I tried a simulation to see whether this decomposition process is unbiased (codes below). Seems that I need a very long observed time-series (n=1000) to obtain an unbiased estimate of the parameters. ##----simulate N times N My question is: 1) are the terminologies deterministic vs. stochastic trend being correctly used here? 2) Theoretically, is this a valid process to detect linear trend and also allow auto-correlated observation/error? Is there any other method to handle this under ARIMA? 3) In my last simulation, I noticed that an unbiased decomposition only works when the time-series is very long, which is the opposite in my data (around 10 years). I guess this is the general problem of ARIMA method.
