[site]: stackoverflow
[post_id]: 4575597
[parent_id]: 4572612
[tags]: 
When I hit my "row" (part of the custom table markup) template, I would set some variable or pass some parameter, that for each template applied afterwards, would know it was in a "row" and do something special based on this information. I know I can't add parameters to apply-templates. I may be able to add a row "mode" but I can't make changes to each template and have one copy with the mod parameter and one without. To begin with, parameters can be passed to templates that are selected for processing by an instruction. Do read about . However, passing such a parameter isn't usually needed . Here is an example: If a template matches a specific (current) node and it must act in a special way depending whether this node is within a table row, then it is a matter of a simple check: parent::tr selects the parent node only if it is a tr . ancestor::tr selects all ancestor tr nodes . In case the first or the second XPath expressions above selects a non-empty node-set, then (respectively), the parent of the current node is a tr , or the current node is within some tr . So, you may use an to test this . Here is how a complete solution may look like : when this transformation is applied on the following XML document : 1 1 the wanted, correct result is produced : 1 1 Very often conditional instructions can be completely eliminated by specifying specific templates with predicates in the match pattern . If you provide the necessary relevant information, people might be able to publish an elegant solution.
