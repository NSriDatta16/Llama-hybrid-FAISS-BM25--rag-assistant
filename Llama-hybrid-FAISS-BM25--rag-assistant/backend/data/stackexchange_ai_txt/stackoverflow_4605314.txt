[site]: stackoverflow
[post_id]: 4605314
[parent_id]: 
[tags]: 
Use Active Directory to store data

I'm wondering if it's a sane idea to use Active Directory to store entities related to an application, when not all entity types are the traditional AD-entities such as organizational unit, user, group, etc. At the moment, I have a database schema consisting of things such as customers and users. Each customer can have their own departments. Each department can have a set of users. Each user can have a name, authentication details, etc. A colleague reminded me that Active Directory already has infrastructure to support this kind of hierarchies, so rebuilding this from scratch may not be optimal. Now, my problem is that I will need much more entities than just customers, users and so on. I will have to store statistics, documents, contacts (which aren't users in the sysetm) and other information as well. To pick a number out of thin air, there may be 10-20 additional entity types which does not already exist in Active Directory. These entity types will be 'linked' to customers, users, and so on. The users in this system is not users in my local network but will be accessing my software over the internet. I have only a very vague understanding of Active Directory, but as I understand it I would have to extend the AD schema to store my own entities. I would have to add properties to "Organizational unit" such as "document list". An alternative method could be to rely on the organizational units, users and groups in AD and have a separate MSSQL database to store the remaining data. My MSSQL database would then have to link entities such as 'contact' to a specific OU or user using it's unique identifier or whatever it's called. Any thoughts on this? Is it wise to store complex types in AD rather than in a MSSQL database? (The entities are most likely few enough to make performance a non-issue in either case)
