[site]: stackoverflow
[post_id]: 3508855
[parent_id]: 824331
[tags]: 
I maintain a mature Open Source alternative to WCF in ServiceStack , a modern, code-first, model-driven, WCF replacement web services framework encouraging code and remote best-practices for creating terse, DRY, high-perfomance, scalable REST web services . It includes .NET's fastest JSON Serializer and has automatic support JSON, JSONP, CORS headers as well as form-urlencoded/multipart-formdata. The Online Demos are a good start to look at since they all use Ajax. In addition, there's no XML config, or code-gen and your 'write-once' C# web service provides all JSON, XML, SOAP, JSV, CSV, HTML endpoints enabled out-of-the-box, automatically with hooks to plug in your own Content Types if needed. It also includes generic sync/async service clients providing a fast, typed, client/server communication gateway end-to-end. This is the complete example of all the code needed to create a simple web service, that is automatically without any config, registered and made available on all the web data formats on pre-defined and custom REST-ful routes : public class Hello { public string Name { get; set; } } public class HelloResponse { public string Result { get; set; } } public class HelloService : IService { public object Execute(Hello request) { return new HelloResponse { Result = "Hello, " + request.Name }; } } Above service can be called (without any build-steps/code-gen) in C# with the line below: var client = new JsonServiceClient(baseUrl); var response = client.Send (new Hello { Name = "World!" }); Console.WriteLine(response.Result); // => Hello, World And in jQuery with: $.getJSON('hello/World!', function(r){ alert(r.Result); });
