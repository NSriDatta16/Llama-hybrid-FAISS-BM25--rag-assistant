[site]: stackoverflow
[post_id]: 3380963
[parent_id]: 3380932
[tags]: 
Can you control the input as it is going into the array? If so, just do something like this: int addToArray(const char * toadd, char * strarray[], int strcount) { const int toaddlen = strlen(toadd); // Add new string to end. // Remember to add one for the \0 terminator. strarray[strcount] = malloc(sizeof(char) * (toaddlen + 1)); strncpy(strarray[strcount], toadd, toaddlen + 1); // Search for a duplicate. // Note that we are cutting the new array short by one. for(int i = 0; i You can always use the above function looping over the elements of an existing array, building a new array without duplicates. PS: If you are doing this type of operation a lot, you should move away from an array as your storage structure, and used a linked list instead. They are much more efficient for removing elements from a location other than the end.
