[site]: stackoverflow
[post_id]: 2950600
[parent_id]: 2617970
[tags]: 
This is another way to do it, and it's especially handy if you use the daemon mode in Emacs 23+. While using daemon mode, one is sometimes using a graphical client and some other times a terminal client. The "snippet" below tries to figure out what client you are using, and then switches to the appropriate theme (from color-theme-choices). Found it on emacswiki. (require 'color-theme) (eval-after-load "color-theme" (color-theme-initialize)) ;; http://www.emacswiki.org/emacs/ColorTheme#toc10 ;; select theme - first list element is for windowing system, second is for console/terminal (setq color-theme-choices '(color-theme-tangotango color-theme-standard)) (funcall (lambda (cols) (let ((color-theme-is-global nil)) (eval (append '(if (window-system)) (mapcar (lambda (x) (cons x nil)) cols))))) color-theme-choices) (require 'cl) (fset 'test-win-sys (funcall (lambda (cols) (lexical-let ((cols cols)) (lambda (frame) (let ((color-theme-is-global nil)) (select-frame frame) (eval (append '(if (window-system frame)) (mapcar (lambda (x) (cons x nil)) cols))))))) color-theme-choices )) (add-hook 'after-make-frame-functions 'test-win-sys)
