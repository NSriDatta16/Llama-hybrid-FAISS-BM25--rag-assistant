[site]: crossvalidated
[post_id]: 184437
[parent_id]: 114350
[tags]: 
For anyone who might be curious about the same thing, clmm can fit GRM with slope 1... but I don't think clmm can allow different slopes for different items. Here's the code. library(ltm) # For data Science library(ordinal) # Science to Long format head(ltm::Science) Sci So the results are identical, one thing to give heed to is that mixed model allows free random effect variance, but IRT model assumes variance of theta = 1. > coef(Sci.mirt) $Comfort a1 d1 d2 d3 c par 1 3.642 1.642 -0.888 0 $Environment a1 d1 d2 d3 c par 1 3.642 1.642 -0.888 -0.292 ... $GroupPars MEAN_1 COV_11 par 0 0.679 > Sci.clmm Cumulative Link Mixed Model fitted with the Gauss-Hermite quadrature approximation with 31 quadrature points formula: resp ~ item + (1 | id) data: Sci.long link threshold nobs logLik AIC niter max.grad logit flexible 2744 -3072.83 6165.66 1119(3) 1.04e-03 Random effects: Groups Name Variance Std.Dev. id (Intercept) 0.6788 0.8239 Number of groups: id 392 Coefficients: itemEnvironment itemWork itemFuture itemTechnology itemIndustry itemBenefit -0.2922 -0.9476 -0.2901 -0.2036 0.4632 -0.6788 Thresholds: strongly disagree|disagree disagree|agree agree|strongly agree -3.6419 -1.6420 0.8886 > Sci.clmm2 Cumulative Link Mixed Model fitted with the Gauss-Hermite quadrature approximation with 31 quadrature points Call: clmm2(location = resp ~ item, random = factor(id), data = Sci.long, link = "logistic", control = clmm2.control(method = "nlminb", trace = 1, maxIter = 1000, gradTol = 1e-05, maxLineIter = 1000), nAGQ = -31, threshold = "flexible") Random effects: Var Std.Dev factor(id) 0.6788056 0.8238966 Location coefficients: itemEnvironment itemWork itemFuture itemTechnology itemIndustry itemBenefit -0.2922101 -0.9476163 -0.2901400 -0.2035440 0.4631815 -0.6788248 No Scale coefficients Threshold coefficients: strongly disagree|disagree disagree|agree agree|strongly agree -3.6419330 -1.6420389 0.8885574 log-likelihood: -3072.828 AIC: 6165.656 And one way to use glmer to fit GRM is mention as "An approximate ML estimation method for CLMs" in https://cran.r-project.org/web/packages/ordinal/vignettes/clm_intro.pdf
