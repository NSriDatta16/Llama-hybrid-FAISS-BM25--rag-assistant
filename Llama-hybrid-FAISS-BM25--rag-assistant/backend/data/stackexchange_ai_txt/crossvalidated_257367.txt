[site]: crossvalidated
[post_id]: 257367
[parent_id]: 256091
[tags]: 
Take a look at Savitzky-Golay filters . They work by sliding a window across the time series. A local polynomial model is fit to the signal in each window using least squares. Evaluating the model at the center of each window gives a smoothed version of the signal. It's also possible to differentiate the model to obtain smoothed derivatives, second derivatives, etc. If you want second derivatives, you'd have to use at least a local quadratic model, of course. You could think of a simple moving average as a 0th order Savitzky-Golay filter. Using at least a local linear model, there are no edge effects. It's possible to use these filters with non-uniformly spaced samples. When the samples are uniformly spaced, computation is very efficent--both smoothing and differentiation can be performed by convolving the signal with particular FIR filter coefficients. But, to avoid edge effects in this case, it's necessary to iterate through points at the edges of the signal. Savitzky-Golay filters are a popular tool, so it should be easy to find an implementation in your language of choice.
