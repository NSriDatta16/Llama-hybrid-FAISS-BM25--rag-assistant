[site]: crossvalidated
[post_id]: 255362
[parent_id]: 254107
[tags]: 
This is quite common in many optimization papers and it has to do with generality. The authors usually write the algorithms in this manner to show that they technically work for any function f. However, in practice, they are only useful for very specific functions where these sub-problems can be efficiently solved. For example, and now I'm talking about the second algorithm only, whenever you see a proximal operator (which as you noted its another optimization problem that can be indeed very hard to solve) is usually implicit that it has a closed form solution in order for the algorithm to be efficient. This is so for many functions of interest in machine learning such as the l1-norm, group norms, and so on. In those cases you would replace the sub-problems for the explicit formula of the proximal operator, and there is no need for an algorithm to solve that problem. As to why they are writen in this manner just note that if you were to come up with another function and wanted to apply that algorithm you would check, first, if the proximal has a closed form solution or can be computed efficiently. In that case you just plug in the formula into the algorithm and you are good to go. As mentioned before, this guarantees that the algorithm is general enough that can be applied to future function that may come up after the algorithm is first published, together with their proximal expressions of efficient algorithms to compute them. Finally, as an example, take the classic FISTA algorithm original paper. They derive the algorithm for two very specific functions, the squared loss and the l1-norm. However, they note that it can be applied no any functions as long as they meet some pre-requisites, one of them being that the proximal of the regularized can be computed efficiently. This is not a theoretical requirement but a practical one. This compartimentalization not only makes the algorithm general but also easier to analyze: as long as there exists algorithms for the sub-problems that have this properties, then the proposed algorithm will have this convergence rate or whatever.
