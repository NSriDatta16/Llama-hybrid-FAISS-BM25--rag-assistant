[site]: datascience
[post_id]: 51478
[parent_id]: 51456
[tags]: 
A quick answer is since you have time series data, LSTM is generally appropriate if you would like to model/exploit time dependencies between values in each series. LSTMs are now combined with CNNs for even better performance. You can refer to this Q&A for that: What is the best method for classification of time series data?Should I use LSTM or any other method . The only problem is that it appears that you have an extremely small dataset, which normally leads to overfitting with neural networks given the number of parameters they need to compute. And there is actually a lower bound on the number of training samples needed for LSTM (see: Number of parameters in an LSTM model ). Perhaps you can find pre-trained RNNs/LSTMs trained on similar data that you can use. In general, any classification algorithm (especially those that perform well on time series data) can (and probably should) be tried. With SVM, I hope you've tried different kernels. There is at least this one paper that discusses the relative merits of different SVM kernels for time series analysis: http://www-ai.cs.uni-dortmund.de/EVENTS/FGML2001/FGML2001-Paper-Rueping.pdf . If you have not already done so, I also recommend that you research feature extraction strategies for time series data (and particularly, EEG data) that have worked for others. There is at least one Q&A on this topic on the Cross Validated site: https://stats.stackexchange.com/questions/66027/time-series-classification-very-poor-results .
