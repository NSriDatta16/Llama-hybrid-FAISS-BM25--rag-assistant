[site]: stackoverflow
[post_id]: 5477910
[parent_id]: 5477449
[tags]: 
I do something similar and have no trouble with inaccuracy. I suspect it's the way you are placing your crosshairs. I define mine in the main.xml using a Unicode character and pin it to the view centre using this snippet: The centerInParent attribute guarantees that both the crosshairs and the mapview are using the same centre. The u25ce make a pretty good indicator for me. There are other ones that you might find better. Update Well I update my app's info bar once per second with a handler. I added this test method to be called in the handler protected void backAndForth(MapView mv){ GeoPoint centreGpt = mv.getMapCenter(); int inLon = centreGpt.getLongitudeE6(); int inLat = centreGpt.getLatitudeE6(); Point p = new Point(); mv.getProjection().toPixels(centreGpt, p); GeoPoint backGpt = mv.getProjection().fromPixels(p.x, p.y); int outLat = backGpt.getLatitudeE6(); int outLon = backGpt.getLongitudeE6(); String res = "In lat " + inLat + " In lon " + inLon + " Out lat " + outLat + " Out lon " + outLon; Log.d("POS_TAG", res); } The in and out coordinates match perfectly no matter how I pan and zoom. using the reverse geocoder, jumping from Chicago to London to Berlin, I get output from the test method: In lat 41878113 In lon -87629798 Out lat 41878113 Out lon -87629798 In lat 41878113 In lon -87629798 Out lat 41878113 Out lon -87629798 In lat 51500152 In lon -126236 Out lat 51500152 Out lon -126236 In lat 51500152 In lon -126236 Out lat 51500152 Out lon -126236 In lat 51500152 In lon -126236 Out lat 51500152 Out lon -126236 In lat 52523405 In lon 13411399 Out lat 52523405 Out lon 13411399 In lat 52523405 In lon 13411399 Out lat 52523405 Out lon 13411399 In lat 52523405 In lon 13411399 Out lat 52523405 Out lon 13411399 I'm afraid you've got me stumped Update I changed my application to display 6 places of decimals from its normal 5 and chose an intersection of car park bays in a supermarket near me in London. I did as you suggested and took screen shots at maximum zoom from my emulator at the start and after I'd panned and zoomed and panned back to the original place as close as I could without looking at the displayed Lat/Lon as I did it. These are typical results Start End 1 microdegree is only about 11 centimetres for change in latitude and about 6cm for change in longitude at this latitude, so I reckon this is pretty much within my ability to pan accurately. Google maps themselves seem to have bigger inherent display errors. For example, the UK's mapping agency (The Ordnance Survey) maintains a number of triangulation points around the country. These are fixed by satellite reference on the WGS84 datum to within sub millimetric accuracy. They are normally quarter inch copper studs set into concrete. One which we can correlate with a Google map view is at Ham trig point There's sketch of its location at: Sketch and a photo on this site (The bolt is under the dog's front right paw): Trig point photo If you look at a screen shot of my app geo fixing to that location You can see that Google has the spot as a good 6 feet beyond the edge of the jetty and would be in the water at high tide. In conclusion, I think that any errors I see in terms of repeatability are swamped by those inherent in Google's interpretation of a coordinate. This is probably to be expected as I know they use a simple spherical projection of the Earth's surface, rather than the more accurate ellipsoidal one on which GPS systems are based.
