[site]: crossvalidated
[post_id]: 376652
[parent_id]: 
[tags]: 
Is there a filter function that performs similar to moving average but does not loose data?

I need to smooth a time series using a low pass filter. A simple moving average is working fine for me, however, using a moving average causes an inevitable loss of data a the beginning of the smoothed time series. To see what I mean, have a look at this example set.seed(100) plot(TTR::runMean(sin(1:100/100) + runif(100), 3), type="l") TTR::runMean(sin(1:100/100) + runif(100), 3)[1:10] ## Output # [1] NA NA 0.4583155 0.4508682 0.3289342 0.4766606 0.6867775 0.8261158 0.7778408 0.5023258 Having chosen a window equal to 3, the first two points in the output are NA. This is not acceptable in my analisys, that is, I would like to have a "smoothed" value also for those two data points. Is there a function or low pass filter that works similarly to a simple moving average and that does not "loose" data after smoothing? Ideally, the filter should: Work in a simple way such as the moving average (i.e. no crazy 80th order polynomial interpolation) and well behaved, much like Stineman interpolation (which is only for interpolating though!). Does not loose data: if I give as input a vector of $n$ non-NA datapoints, I'd like to obtain a smoothed output vector of $n$ non-NA datapoints.
