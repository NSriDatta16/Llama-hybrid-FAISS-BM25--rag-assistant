[site]: stackoverflow
[post_id]: 3361160
[parent_id]: 3360996
[tags]: 
Basically all charset problems stem from the fact that they're being mixed and/or misinterpreted. A string (text) is a sequence of bytes in a specific order. The string is encoded using some specific charset, that in itself is neither right nor wrong nor anything else. The problem is when you try to read the string, the sequence of bytes, assuming the wrong charset. Bytes encoded using, for example, KS X 1001 just don't make sense when you read them assuming they're UTF-8, that's where the question marks come from. The site you're getting the text from sends it to you in some specific character set, let's assume KS X 1001. Let's assume your own site uses UTF-8. Embedding a stream of bytes representing KS X 1001 encoded text in the middle of UTF-8 encoded text and telling the browser to interpret the whole site as UTF-8 leads to the KS X 1001 encoded text not making sense to the UTF-8 parser. UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU KSKSKSKSKSKSKSKSKSKSKSKSKSKSKSKSKSKSKSKS UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU will be rendered as Hey, this is UTF-8 encoded text, awesome! ???????I?have?no?idea?what?this?is??????? Hey, this is UTF-8 encoded text, awesome! To solve this problem, convert the fetched text into UTF-8 (or whatever encoding you're using on your site). Look at the Content-Type header of that other site, it should tell you what encoding the site is in. If it doesn't, take a guess.
