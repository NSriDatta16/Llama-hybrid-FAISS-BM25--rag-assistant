[site]: stackoverflow
[post_id]: 395479
[parent_id]: 395388
[tags]: 
Are the developers and QA engineers incapable of creating the views themselves? If so, some education (of the developers and QA engineers) is in order. At work, we create our own working views. This is the script I use. By default, I request it to create a view such as bug129201 and it creates a view with my username and the host as part of the name: bug129201.jleffler.black (where black is my main machine). The view storage comes from the current directory unless I specify an alternative location (which I almost always do): newview -p /work5/atria bug129201 The script takes a '-x' option to avoid the extended name; in that case, it creates a view (or views) with precisely the command-line tag. Also, by convention, ' ct ' is not the antique Unix 'call terminal' program but an alias for ' cleartool ' (or, in my case, a shell script that executes the cleartool program). I can then set the config spec to whatever I need at the time. I also dispose of views quite quickly, to ensure that they don't accumulate unwanted debris. #!/bin/ksh # # @(#)$Id: newview.sh,v 1.8 2008/03/14 23:56:28 jleffler Exp $ # # Create a new view usage(){ echo "`basename $0 .sh`: [-x] [-p path] view-tag" >&2; exit 1 } umask 002 xflag=yes path=`pwd` while getopts xp: option "$@" do case "$option" in p) path="$OPTARG";; x) xflag=no;; *) usage;; esac done ((x=OPTIND-1)) shift $x [ $# -eq 0 ] && usage umask 0 if [ $xflag = yes ] then extn=$LOGNAME.`uname -n` fi for view in $* do if [ $xflag = yes ] then # Check whether user added the extension already and forgot to # use -x option. case $view in *.$extn) : OK;; *) view=$view.$extn;; esac fi ct mkview -tag $view $path/$view.vws done
