[site]: crossvalidated
[post_id]: 312915
[parent_id]: 
[tags]: 
Decision Tree in R: rpart on categorical variables

Introduction: I would like to build a classifier which distinguishes between buyers and non-buyers based on user behavior. This data is highly imbalanced (0.009% for positive class), and I'm currently trying the rpart() from library(rpart) to build such a classifier ( I'm also considering Random Forests, please make a comment if I should use it ) Dataset You can use the following code to load the dataframe: df.train This is just a sample dataset, I have more dimensions and rows. Other dimensions are categorical with 50+ levels. Here's the overview of the dataset... Instantly, I notice that the result column is just an integer. This should infact be a factor, and I am using method="class" in the rpart() for this reason. Method Here is my tree where I created a loss matrix, so that False Negatives are given a higher cost: lossmatrix Should I use as.factor() on my factor variables? Or does rpart() automatically fix them? It seems that R already knows which are factors by the picture above. Next, I plotted the prediction tree: pred.tree Checked the accuracy using: accuracy.meas(df.test$result, pred.tree[,1]) This gave me precision: 0.009, recall: 1.000, F: 0.009 , which looks like I'm predicting 1 to all situations... I'm also not sure which class does rpart() take as the positive class, because it could be that the algorithm is predicting 0 all the time (due to imbalance) which gives me good recall (since it correctly finds 'positive' classes) and bad precision, because I always predict 0. Additionaly, in the guide I've followed accuracy.meas(df.test$result, pred.tree[,1]) is substituted by accuracy.meas(df.test$result, pred.tree[,2]) and if I exclude the method="class" from rpart() none of the above work, and I need to simply have accuracy.meas(df.test$result, pred.tree) , so I'm not sure about the indexes. Lastly, I tried undersampling, oversampling, using ROSE() without lossmatrix, all without any improvement. ROC area is consistently over 0.95 for all variations, F score doesn't pass 0.1 EDIT UNDERSTAMPLING: #under sampling data_balanced_under
