[site]: datascience
[post_id]: 19365
[parent_id]: 
[tags]: 
Predict sinus with keras feed forward neural network

I have a very simple feed forward neural network with keras that should learn a sinus. Why is the predictive power so bad and what is generally the best way to pinpoint issues with a network? In the code below, I have one input neuron, 10 in the hidden layer, and one output. I would expect the network to perform much more accurately. import numpy as np from keras.layers import Dense, Activation from keras.models import Sequential x = np.arange(100) y = np.sin(x) model = Sequential([ Dense(10, input_shape=(1,)), Activation('sigmoid'), Dense(1), Activation('sigmoid') ]) model.compile(loss='mean_squared_error', optimizer='SGD', metrics=['accuracy']) model.fit(x, y, epochs=10, batch_size=1) scores = model.evaluate(x, y, verbose=0) print("Baseline Error: %.2f%%" % (100-scores[1]*100)) print(model.predict(np.array([.5]))) Output: 1/100 [..............................] - ETA: 0s - loss: 1.2016 - acc: 0.0000e+00 79/100 [======================>.......] - ETA: 0s - loss: 0.4665 - acc: 0.0127 100/100 [==============================] - 0s - loss: 0.5044 - acc: 0.0100 Baseline Error: 99.00% [[ 0.35267803]]
