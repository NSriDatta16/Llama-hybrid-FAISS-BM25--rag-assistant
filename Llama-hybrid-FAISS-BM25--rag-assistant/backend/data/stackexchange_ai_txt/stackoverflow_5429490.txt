[site]: stackoverflow
[post_id]: 5429490
[parent_id]: 5391438
[tags]: 
There is no perfect solution to this, but one that works most of the time is to force an open/close of the OLEFormat.Object . It doesn't matter if you are rehydrating the embedded Excel worksheet from outside of Word (i.e. manipulating the Open XML format) or doing it through the object model. What it involves is opening the embedded Excel spreadsheet from within Word and then closing that object for the image to be changed to the current values in the embedded spreadsheet and the new image to be created. It depends just a bit if you are doing this on many Word documents or just one. In the former case, a global template (such as normal.dot or a custom one you create and put in the STARTUP folder) or in the later case, just run code behind of one document. Both have a different way to getting things to run, but essentially you will be hooking the Document_Open event and from there checking if the current document has OLE Embedded objects and if so, opening and closing them. Without going into the hook, like I said, the code isn't pretty. Basically because it uses SendKeys . Most of the time, this will work. Some of the time, it won't. That is the nature of SendKeys and other programs receiving the focus without consent (such as an instant messenger program). If Word has the focus (which means you can't open the VBE and press F5 ), this code should do the trick: Sub UpdateEmbeddedXLSX() Dim workbook As InlineShape For Each workbook In ActiveDocument.InlineShapes With workbook If .Type = wdInlineShapeEmbeddedOLEObject Then ''# Excel.Sheet.12 for Excel 2007 If .OLEFormat.ClassType = "Excel.Sheet.12" Then ''# Open Object as spreadsheet .OLEFormat.DoVerb wdOLEVerbPrimary ''# If you want, you can also do any updates here like .OLEFormat.Object.ActiveSheet.Cells(2, 2).Value = ".1" ''# Nasty - but it works - SendKeys SendKeys "{ESC}", True End If End If End With Next End Sub At the very least, you could put this code in your normal.dot and assign it to the QAT to be run as a macro. Note that the code doesn't get around Excel opening, the values changing and then closing - that is part and parcel of using embedded objects. Using linking instead of embedding would be a much smoother way to do all of this, but I realize it's not always an option.
