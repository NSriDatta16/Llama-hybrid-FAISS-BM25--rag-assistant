[site]: stackoverflow
[post_id]: 1711241
[parent_id]: 1705358
[tags]: 
Most likely you would need to determine some sort of a "window", like maybe the last 10 samples. You would normalize your signal into an array of 10 "doubles" normalized between -1 and 1. This would form the "input" into your neural network. So you would have 10 input neurons. Then you have to decide what you want the output to be. Maybe you have 100 different classifications that you may want to classify the signals into. If this is the case you would have 100 different output neurons that would each be trained to produce a higher output than the other output neurons when they recognize a specific signal. Between the input and output layers neural networks usually have one or more hidden layers. These just provide additional capability to the neural network. For Java neural network programming, you might try the Encog project . There is also a DotNet version of Encog as well.
