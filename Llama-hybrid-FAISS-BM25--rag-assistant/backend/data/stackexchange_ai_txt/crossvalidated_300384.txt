[site]: crossvalidated
[post_id]: 300384
[parent_id]: 300350
[tags]: 
It is surprisingly hard to formalize what is meant by 'algorithm'; Wikipedia has a nice summary here . Some definitions require an algorithm to provably produce correct output every single time (or with some bounded guarantee). In that sense, the applications of machine learning are usually heuristic. There is no way to prove that a customer will definitely buy the items your recommender system suggests, or that the presence/absence of certain keywords distinguishes spam from valid email. Thus, a function like bool is_spam(std::string email_text, Model &mdl) is a heuristic. On the other hand, the...procedure implemented in that function, or the ones that finds the support vectors of your SVM, updates the weights of your deep network, collates n-grams, etc. are often algorithms. You can prove, for example, that stochastic gradient descent will stop at a local minimum (e.g., like this ). The heuristic part comes from using that local minimum to solve a practical problem. Some classification "systems" also have heuristic pieces. For example, the training data might be smoothed or segmented in some way that happens to work well for typical inputs, but isn't provably optimal.
