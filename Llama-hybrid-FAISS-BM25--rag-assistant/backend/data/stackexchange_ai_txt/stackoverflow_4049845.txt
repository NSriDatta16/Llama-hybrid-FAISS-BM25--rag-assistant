[site]: stackoverflow
[post_id]: 4049845
[parent_id]: 
[tags]: 
What do I miss in understanding the clustered index?

In absence of any index the table rows are accessed through IAM ((Index Allocation Map). Can I directly access a row programmatically using IAM? Does absence of index mean that the only way to read specific row is full table scan reading all table? Why IAM cannot be engaged for more specific direct access? "If the table is a heap (in other words, it has no clustered index), the bookmark is a row identifier (RID), which is an actual row locator in the form File#:Page#:Slot#" [1a] There was no further definition of slot. Well, other sources tell that Slot# is really row number. Correct? or some further juxtaposing with IAM needed to determine specific row? Now, introduction of clustered index means that no data can be directly accessed but only through eventually clustered index lookup or traversing clustered leaf nodes sequentially. Do I understand correctly that introduction of clustered indexes is beneficial only for selecting continuous adjacent (ranges of) rows and only through clustered index keys? Which else benefits are in clustering a table? Do I understand correctly that clustered index introduction worsen the performance benefits of non-clustered indexes engagement for non-exact match queries? No direct access, sequential access cannot be parallelized, non-clustered indexes are increased by clustered index keys, etc., correct? Well, I see that clustering a table makes sense for quite specific and well understood contexts while creation of primary keys always default in clustering a table. Why is it? What do I miss in clustered indexes understanding? [1] Inside Microsoft® SQL Server™ 2005: The Storage Engine By Kalen Delaney - (Solid Quality Learning) ............................................... Publisher: Microsoft Press Pub Date: October 11, 2006 Print ISBN-10: 0-7356-2105-5 Print ISBN-13: 978-0-7356-2105-3 Pages: 464 [1a] p.250 Section Index organization from Chapter 7. Index Internals and Management Here is helpful online copypaste from it http://sqlserverindexeorgnization.blogspot.com/ though without any credits to source Related questions: No direct access to data row in clustered table - why? Why/when/how is whole clustered index scan chosen rather than full table scan? Reasons not to have a clustered index in SQL Server 2005 Update: @PerformanceDBA, "please, forget the doco you reference and start again" Starting me again on the basis of what? Any references, any advices. techniques how to start again? **"A Clustered Index is always better" Can you answer my question Why/when/how is whole clustered index scan chosen rather than full table scan? The doubt is what is the meaning of Full Clustered Index Scan. Does not it read more than Full Table Scan? ""If there is an IAM, then there is an Index" So, there is no IAM if there is no index at all? There is IAM if there is CI? How am I supposed to verify/study it? if all docs write the opposite: - there is IAM on non-indexed table - there is no IAM if there is clustered index.
