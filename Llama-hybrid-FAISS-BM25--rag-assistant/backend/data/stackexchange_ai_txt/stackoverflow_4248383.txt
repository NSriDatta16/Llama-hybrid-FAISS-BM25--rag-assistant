[site]: stackoverflow
[post_id]: 4248383
[parent_id]: 4248213
[tags]: 
A singleton and a module represent only one instance, for all the application lifetime. This instance is kept instantiated, even when it's not needed. The borg pattern is about shared state. Each client class will create a new instance of the borg, but that instance will be disposed when it's not needed anymore - it is a much more elegant approach. Beyond that, it is much easier to subclass or mock a borg.
