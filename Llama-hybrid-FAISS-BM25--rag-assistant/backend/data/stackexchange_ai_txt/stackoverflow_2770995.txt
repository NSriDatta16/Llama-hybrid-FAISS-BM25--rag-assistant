[site]: stackoverflow
[post_id]: 2770995
[parent_id]: 2770911
[tags]: 
The idea of parallel sections is to give the compiler a hint that the various (inner) sections can be performed in parallel, for example: #pragma omp parallel sections { #pragma omp section { /* Executes in thread 1 */ } #pragma omp section { /* Executes in thread 2 */ } #pragma omp section { /* Executes in thread 3 */ } /* ... */ } This is a hint to the compiler and not guaranteed to happen, though it should. Your output is kind of what is expected; it says that there are #sections being executed in thread id 1, and in thread 2. The output order is non-deterministic as you don't know what thread will run first.
