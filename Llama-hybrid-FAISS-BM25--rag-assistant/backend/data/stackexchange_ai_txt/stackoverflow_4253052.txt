[site]: stackoverflow
[post_id]: 4253052
[parent_id]: 4252937
[tags]: 
Well, I would start by defining what you want your program to do, which you've already done: The goal here is to read a text file from the command line and list the words in the story lexicographically. You're main function does this almost . Basically, what you need is a loop to tie it together: public static void main(String [] arg) { // print out your initial information first (i.e. your column headers) // ... List sortedList = new List(); String word = nextWord(); // now, the question is... what is the end condition of the loop? // probably that there aren't any more words, so word in this case // will be null while (word != null) { sortedList.insert(word); word = nextWord(); } // now, your list takes care of the sorting, so let's just print the list sortedList.printWords(); } I think that's all there is to it. Normally, I don't like to post solutions to homework questions, but in this case, since you already had all of the code and you just needed a little nudge to drive you in the right direction, I think it's fine. There are a few things I noticed that are incorrect with your Your list constructor has a 'void' return type - there should be no return type on constructors: public List() //make an empty list { first = null; numWords = 0; } The 'else' statement in this method is unneeded: public static String nextWord() { if ( keyboard.hasNext() == false ) return null; else { String start = keyboard.next().toLowerCase() ; String organized = ""; for (int i =0; i So, this should be: public static String nextWord() { if ( keyboard.hasNext() == false ) return null; String start = keyboard.next().toLowerCase() ; String organized = ""; for (int i =0; i If you want to use a BufferedReader, it's pretty easy. Just set it up in your main method: if (arg.length > 0) { // open our file and read everything into a string buffer BufferedReader bRead = null; try { bRead = new BufferedReader(new FileReader(arg[0])); } catch(FileNotFoundException e) { // TODO Auto-generated catch block e.printStackTrace(); System.exit(0); } setupScanner(bRead); } Then, create a new method that sets up the scanner object: public static void setupScanner(BufferedReader rdr) { keyboard = new Scanner(rdr); } And then just pass it in on the command line (i.e. java ten2 [filename])
