[site]: stackoverflow
[post_id]: 340328
[parent_id]: 214092
[tags]: 
Here's an example: if you're writing code that populates a database you may want to check if a particular method has added data to the database. Setting up a copy of the database for testing has the problem that if you assume there are no records before the call to the tested method and one record after, then you need to roll back the database to a previous state, thus adding to the overhead for running the test. If you assume there is only one more record than before, it may clash with a second tester (or even a second test in the same code) connecting to the same database, thus causing dependencies and making the tests fragile. The mock allows you to keep the tests independent of each other and easy to set up. This is just one example - I'm sure others can supply more. I agree 100% with the other contributors on this topic, especially with the recommendation for the Martin Fowler article.
