[site]: stackoverflow
[post_id]: 5608698
[parent_id]: 5608683
[tags]: 
you have kind of a vague question here, but I can try to help you get closer to the answer. Imagine two sides of the puzzle: When the page loads, the two (or more) DIVs are drawn on the screen. If you want them to draw in a specific order, you need to keep track of that in the database. So be sure your db has a field called something like display_order , and then display the DIVs in that order. (You can usually just add ORDER BY display_order to the SQL, so they are retrieved in the order you want, and then draw the DIVs right out in a loop.) When someone drags and drops a DIV, you use AJAX/JSON/etc to tell your PHP script the new order. In this case, when that happens, rather than draw the word 'dropped' in the DIV, you should instead immediately update the display_order fields in the database. This way you are remembering each DIV's position. Does that help/make sense? UPDATED: thinking more about your question, here is the pseudo code: in "display.php": Fetch the contents for each DIV from the database, with ORDER BY display_order on the rows. Draw them on the screen, looping through each database row. Also in this HTML, use the jQuery script you already have to call another PHP script (dragged.php) when a row is dragged. in "dragged.php": This script is called when a row is dragged on the screen. Currently it puts the word "dropped" in the DIV that is dragged. That's not helpful, so remove that. Instead, you now know (from the variables passed to you) that a specific DIV needs to be in a specific place. So grab a list of the DIVs from the database, then change the order of them (by altering the display_order column) based on the new position(s) you know. Save that back to the database, so when display.php is called again next time, it draws the DIVs in the order you want. Hope this helps explain further. If you are still struggling, I respectfully suggest you try to write the code, and post a more specific question about the part that you're stuck on. This will help you get a good answer quickly. (You may also want to Google this one a lot; I'm sure there are code samples out there showing how to do all this.)
