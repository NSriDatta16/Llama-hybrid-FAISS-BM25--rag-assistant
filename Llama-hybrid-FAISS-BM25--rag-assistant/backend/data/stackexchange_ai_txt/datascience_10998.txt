[site]: datascience
[post_id]: 10998
[parent_id]: 
[tags]: 
What are the strategies for feature engineering in a hierarchical/relational structured data?

I have a feature set with each feature having its own feature-set, and they are laid out in a SQL database with foreign key relationships. The target is defined on the top level feature-set and is a binary Win/Loss variable. Target; feature -> sub-features->sub-features; feature -> sub-features; All the classification algorithms expect a flat feature file as an input. What are the methods for flattening out such a structured dataset, while preserving the cross feature dependence on the sub-feature set for other features? How would you decide which sub-features to select? Currently I'm aggregating total Wins/Attempts and regressing (PCR) the individual sub features to see which ones have an influence over the final target, what would be a more generalized way of selecting these? And then combining these into a flattened feature? I would also appreciate if someone can identify the correct machine learning jargon for this exercise.
