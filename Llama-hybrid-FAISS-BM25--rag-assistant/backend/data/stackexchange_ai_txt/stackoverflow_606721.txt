[site]: stackoverflow
[post_id]: 606721
[parent_id]: 606566
[tags]: 
I think the problem is that you and your testing manager are speaking of two different things. Assembly versions are great for assemblies, but your test manager is speaking of a higher-level version, a "system version", if you will. At least that's my read of your post. What you have to do in such situations is map all of your different component assemblies into a system version. You say something along the lines of "Version 1.5 of the system is composed of Foo.Bar.dll v1.4.6 and Baz.Qux.dll v2.6.7 and (etc.)". Hell, in a distributed system, you may want different versions for each of your services, which may in and of themselves, be composed of different versions of .dlls. You might say, for example: "Version 1.5 of the system is composed of the Foo service v1.3, which is composed of Foo.dll v1.9.3 and Bar.dll v1.6.9, and the Bar service v1.9, which is composed of Baz.dll v1.8.2 and Qux.dll v1.5.2 and (etc.)". Doing stuff like this is typically the job of the software architect and/or build manager in your organization. There are a number of tools that you can use to handle this issue that have nothing to do with your language of choice. My personal favorite is currently Jira , which, in addition to bug tracking, has great product versioning and roadmapping support.
