[site]: stackoverflow
[post_id]: 5122937
[parent_id]: 5122864
[tags]: 
LINQ really shines when working element by element, so I would suspect any approach using LINQ is not really going to be elegant (because whether or not to stream a particular value depends on values farther along in the sequence). I would do what you're doing, but slightly different. Rather than using Enumerable.First , I would store the current state as a value of enum State { Good, Bad, Unknown }; Set the initial state to Unknown. Buffer the values until you know the state. If the state indicates that the first set of values was in a Good state, output those buffered values, and then proceed as you describe. The prevents a possibly O(n) walk to find the initial state, and it prevents walking the sequence twice.
