[site]: stackoverflow
[post_id]: 3292760
[parent_id]: 
[tags]: 
Javascript HTTP GET html/text returning null/empty?

I am trying to get the html of a website using this code: function catchData(req) { console.debug("i got a reply!"); var returnXML = req.responseXML; console.debug(returnXML); if (!returnXML) { console.debug("html is bad"); return; } if (speed != currentSpeed) moveToNewSpeed(speed); currentSpeed = speed; var error = returnXML.getElementsByTagName('message')[0].firstChild; if (error) { document.getElementById('errorMessage').innerHTML = error.nodeValue; document.getElementById('errorMessage').style.visibility = 'visible'; } else document.getElementById('errorMessage').style.visibility = 'hidden'; } function sendRequest(url,callback,postData) { console.debug(url); console.debug(postData); var req = createXMLHTTPObject(); if (!req) return; var method = (postData) ? "POST" : "GET"; console.debug(method); req.open(method,url,true); console.debug("request Opened"); req.setRequestHeader('User-Agent','XMLHTTP/1.0'); req.setRequestHeader('User-Agent','XMLHTTP/1.0'); if (postData) { req.setRequestHeader('Content-type','application/x-www-form-urlencoded'); console.debug("set post data"); } req.onreadystatechange = function () { if (req.readyState != 4) { console.debug("bad ready state"); return; } console.debug(req); console.debug("responseText:"); console.debug(req.responseText); callback(req); console.debug("callback finished"); } if (req.readyState == 4) return; req.send(postData); } var XMLHttpFactories = [ function () {return new XMLHttpRequest()}, function () {return new ActiveXObject("Msxml2.XMLHTTP")}, function () {return new ActiveXObject("Msxml3.XMLHTTP")}, function () {return new ActiveXObject("Microsoft.XMLHTTP")} ]; function createXMLHTTPObject() { var xmlhttp = false; for (var i=0;i When I do a wireshark grab I see the server returning the html, but req.responseText is just an empty string. Anyone know whats up?
