[site]: stackoverflow
[post_id]: 320888
[parent_id]: 207976
[tags]: 
I suggest a mix of using X-macros are the best solution and the following template functions: To borrow off marcinkoziukmyopenidcom and extended enum Colours { # define X(a) a, # include "colours.def" # undef X ColoursCount }; char const* const colours_str[] = { # define X(a) #a, # include "colours.def" # undef X 0 }; template T str2enum( const char* ); template const char* enum2str( T ); #define STR2ENUM(TYPE,ARRAY) \ template <> \ TYPE str2enum ( const char* str ) \ { \ for( int i = 0; i \ const char* enum2str ( TYPE v ) \ { \ return ARRAY[v]; \ } #define ENUMANDSTR(TYPE,ARRAY)\ STR2ENUM(TYPE,ARRAY) \ ENUM2STR(TYPE,ARRAY) ENUMANDSTR(Colours,colours_str) colour.def X(Red) X(Green) X(Blue) X(Cyan) X(Yellow) X(Magenta)
