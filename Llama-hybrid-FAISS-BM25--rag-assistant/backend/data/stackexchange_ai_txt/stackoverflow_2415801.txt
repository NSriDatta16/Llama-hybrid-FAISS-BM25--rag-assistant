[site]: stackoverflow
[post_id]: 2415801
[parent_id]: 
[tags]: 
Suppress-catch or throw exceptions which can never occur?

Say I have the following line in a method: String encodedString = URLEncoder.encode(foo, "utf-8"); this method throws an UnsupportedEncodingException . Which is better: /** @throws UnsupportedEncodingException umm...never */ public void myMethod() throws UnsupportedEncodingException { ... String encodedString = URLEncoder.encode(foo, "utf-8"); ... } (forcing the caller to catch this himself) Or: public void myMethod() { try { ... String encodedString = URLEncoder.encode(foo, "utf-8"); ... catch(UnsupportedEncodingException e) { Logger.log("cosmic ray detected!"); } } Or is there a more elegant way of handling exceptions which can't really ever occur?
