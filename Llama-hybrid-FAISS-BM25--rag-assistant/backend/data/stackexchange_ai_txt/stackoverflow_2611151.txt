[site]: stackoverflow
[post_id]: 2611151
[parent_id]: 2567766
[tags]: 
The most important thing you have to do is to attract users. Without users, you won't get any contributions and developers helping you out. Because developers are users first, and then they decide to extend/fix something they use and might become contributors. So to get users, you should consider describe what your framework does in one or two sentences at the top of your project page mention how your framework can be used and for what, what situations it is most useful for add a lot of examples on how to use it mention whether your framework is stable, beta or alpha. That's important because user need to know that before they start using it also mention whether you want to keep improving it and keep working on it - most users don't want to use a framework that's abandoned (also keep in mind that a lot of users check your commits to see whether you really are working on it - if your last commit to the repository was months ago then you're not really working on it, so cheating isn't possible) If you got all this, and people start submitting patches, you can use a patch tool to apply those to your source. Depending on your version control system, you can either use the GNU patch, a diff/patch tool that comes with your version control or maybe even a GUI tool that helps you with this. SVN doesn't have a patch tool (yet), but 'svn diff' will create a patchfile which you can then apply with the GNU patch tool, or in case you're using TortoiseSVN, right-drag the patchfile to your working copy and have TortoiseMerge apply it for you. And on how to best deal with the community: answer questions in time, don't wait more than two or three days to answer questions try to be nice, even with upset and angry people. Only if they keep bothering tell them to (still in a nice way if possible) go elsewhere always keep discussions about the project on a mailing list. You don't want to repeat the same discussions over and over again - if you have a mailing list, just point users to the archives before the discussion starts all over again And you should watch the talk " How Open Source Projects Survive Poisonous People (And You Can Too) " - it's really good and tells you a lot on how to deal not just with 'poisonous people' but also how to deal with all people involved in your project.
