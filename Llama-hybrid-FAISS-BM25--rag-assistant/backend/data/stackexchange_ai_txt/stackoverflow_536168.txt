[site]: stackoverflow
[post_id]: 536168
[parent_id]: 
[tags]: 
Why won't my OpenGL draw anything?

I'm working on porting my open source particle engine test from SDL to SDL + OpenGL. I've managed to get it compiling, and running, but the screen stays black no matter what I do. main.cpp: #include "glengine.h" int WINAPI WinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow ) { //Create a glengine instance ultragl::glengine *gle = new ultragl::glengine(); if(gle->init()) gle->run(); else std::cout glengine.h: //we need to include window first because GLee needs to be included before GL.h #include "window.h" #include // Math Library Header File #include #include using namespace std; namespace ultragl { class glengine { protected: window m_Window; /// x = x; this->y = y; this->z = z; } }; struct particle { public : double angle; double speed; Vertex v; int r; int g; int b; int a; particle(double angle, double speed, Vertex v, int r, int g, int b, int a) { this->angle = angle; this->speed = speed; this->v = v; this->r = r; this->g = g; this->b = b; this->a = a; } particle() { } }; particle p[500]; float particlesize; public: glengine(); ~glengine(); virtual void run(); virtual bool init(); void glengine::test2(int num); void glengine::update(); }; }; window.h: #include #include #include "GLee/GLee.h" #include #include #include using namespace std; namespace ultragl { class window { private: int w_height; int w_width; int w_bpp; bool w_fullscreen; string w_title; public: window(); ~window(); bool createWindow(int width, int height, int bpp, bool fullscreen, const string& title); void setSize(int width, int height); int getHeight(); int getWidth(); }; }; glengine.cpp (the main one to look at): #include "glengine.h" namespace ultragl{ glengine::glengine() { piover180 = 0.0174532925f; } glengine::~glengine() { } void glengine::resize(int x, int y) { std::cout And finally window.cpp: #include "window.h" namespace ultragl { window::window(): w_width(0), w_height(0), w_bpp(0), w_fullscreen(false) { } window::~window() { SDL_Quit(); } bool window::createWindow(int width, int height, int bpp, bool fullscreen, const string& title) { if( SDL_Init( SDL_INIT_VIDEO ) != 0 ) return false; w_height = height; w_width = width; w_title = title; w_fullscreen = fullscreen; w_bpp = bpp; //Set lowest possiable values. SDL_GL_SetAttribute(SDL_GL_RED_SIZE, 5); SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5); SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5); SDL_GL_SetAttribute(SDL_GL_ALPHA_SIZE, 5); SDL_GL_SetAttribute(SDL_GL_DEPTH_SIZE, 16); SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); //Set title. SDL_WM_SetCaption(title.c_str(), title.c_str()); // Flags tell SDL about the type of window we are creating. int flags = SDL_OPENGL; if(fullscreen == true) flags |= SDL_FULLSCREEN; // Create window SDL_Surface * screen = SDL_SetVideoMode( width, height, bpp, flags ); if(screen == 0) return false; //SDL doesn't trigger off a ResizeEvent at startup, but as we need this for OpenGL, we do this ourself SDL_Event resizeEvent; resizeEvent.type = SDL_VIDEORESIZE; resizeEvent.resize.w = width; resizeEvent.resize.h = height; SDL_PushEvent(&resizeEvent); return true; } void window::setSize(int width, int height) { w_height = height; w_width = width; } int window::getHeight() { return w_height; } int window::getWidth() { return w_width; } }; Anyway, I really need to finish this, but I've already tried everything I could think of. I tested the glengine file many different ways to where it looked like this at one point: #include "glengine.h" #include "SOIL/SOIL.h" #include "SOIL/stb_image_aug.h" #include "SOIL/image_helper.h" #include "SOIL/image_DXT.h" namespace ultragl{ glengine::glengine() { piover180 = 0.0174532925f; } glengine::~glengine() { } void glengine::resize(int x, int y) { std::cout It still didn't work. I'm really at my wits end on this one.
