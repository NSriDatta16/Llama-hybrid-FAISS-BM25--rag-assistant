[site]: stackoverflow
[post_id]: 4810289
[parent_id]: 
[tags]: 
Best architecture for an iOS application that makes many network requests?

I'm in the process of rethinking my approach to the request architecture of a large app I'm developing. I'm currently using ASIHTTPRequest to actually make requests, but since I need many different types of requests as a result of many different actions taken in different view controllers, I'm trying to work out the best system of organizing these requests. I'm currently building singleton "requesters" that are retained by the app delegate and sit around listening for NSNotifications that signal a request needs to be made; they make the request, listen for the response, and send out a new NSNotification with the response data. This solves most of my problems, but doesn't elegantly handle failed requests or simultaneous requests to the same singleton requester. Anyone have any success devising a clear, OO architecture for making many different types of requests in an iOS app?
