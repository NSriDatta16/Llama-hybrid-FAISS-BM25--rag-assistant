[site]: stackoverflow
[post_id]: 1094301
[parent_id]: 1094215
[tags]: 
This question is one of pragmatism, I'm afraid; that is to say, it depends. If you have a LOT of pixels, only a few of which are black then counting them might be the highest cost. If you're using C++, which your tags suggest you are, I would strongly suggest using STL, somthing like std::vector. The implementation of vector, if I remember correctly, uses a pragmatic approach to allocation. There are a few heuristics for allocation strategies, an informative one is this: class SampleVector { int N,used,*data; public: SampleVector() {N=1;used=0;data=malloc(N);} void push_back(int i) { if (used>=N) { // handle reallocation N*=2; data=realloc(data,N); } data[used++]=i; } }; In this case, you DOUBLE the amount of memory allocated every time you realloc. This means that reallocations progressively halve in frequency. Your STL implementation will have been well-tuned, so if you can use that, do!
