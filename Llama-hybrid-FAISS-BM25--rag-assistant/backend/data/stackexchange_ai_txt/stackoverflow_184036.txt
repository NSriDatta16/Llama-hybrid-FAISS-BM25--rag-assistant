[site]: stackoverflow
[post_id]: 184036
[parent_id]: 183882
[tags]: 
In my undergrad compilers class, we first wrote a recursive-descent (top-down) parser for a Pascal-like language from scratch: Lexical Analyzer, parser, everything. About midway through the semester, we flipped to parser/scanner generators like lex/yacc or flex/bison. We built a compiler that would take our Pascal subset and compile it down to assembly for a stack machine we were given (the stack machine is uber simple, but the principles are still the same). If you're interested in compilers, I cannot recommend highly enough the Dragon Book . It's intended to be used for a 1 semester undergrad course, and the second half as a graduate-level course, and covers every bit of theory and optimization you could ever wish for. Even Joel likes it . =) Cheers
