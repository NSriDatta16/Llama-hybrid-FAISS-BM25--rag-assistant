[site]: stackoverflow
[post_id]: 1910006
[parent_id]: 1909953
[tags]: 
The original idea is still there, although there are layers of obfuscation on top of it for local symbols, small references, shared libraries, and such. But everything is still based on the original simple model and so it is worth knowing. The idea is that there are three segments. .text This has program code. .data This has initialized data. .bss This has uninitialized data. Bss is special: .bss objects don't take any space in the object file, and by grouping all the symbols that are not specifically intialized together, they can be easily zeroed out at once. Static has a couple of meanings. In one sense it is just a symbol attribute that tells the linker whether it is local to an object module or can be globally linked with other symbols of the same name. It is also used to specify storage duration , to distinguish objects within a function from automatic (stack allocated) objects. So a static variable can be in either data or bss depending on whether it is initialized or not, as can a global.
