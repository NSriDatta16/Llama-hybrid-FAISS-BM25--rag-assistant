[site]: stackoverflow
[post_id]: 3843942
[parent_id]: 3843932
[tags]: 
How about: data.replace(/ on\w+="[^"]*"/g, ''); Edit from the comments: This is intended to be run on your markup as a one time thing. If you're trying to remove events dynamically during the execution of the page, that's a slightly different story. A javascript library like jQuery makes it extremely easy, though: $('*').unbind(); Edit: Restricting this to only within tags is a lot harder. I'm not confident it can be done with a single regex expression. However, this should get you by if no one can come up with one: var matched; do { matched = false; data = data.replace(/( ]+)( on\w+="[^"]*")+/g, function(match, goodPart) { matched = true; return goodPart; }); } while(matched); Edit: I surrender at writing a single regex for this. There must be some way to check the context of a match without actually capturing the beginning of the tag in your match, but my RegEx-fu is not strong enough. This is the most elegant solution I'm going to come up with: data = data.replace(/ ]+/g, function(match) { return match.replace(/ on\w+="[^"]*"/g, ''); });
