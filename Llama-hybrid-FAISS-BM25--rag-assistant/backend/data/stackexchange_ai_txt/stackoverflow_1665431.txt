[site]: stackoverflow
[post_id]: 1665431
[parent_id]: 1665330
[tags]: 
While I do agree that a good solution for administrivia style sites such a the one you are describing is easily handled by Dynamic Data as @Robert Harvey has suggested this is not quite a direct answer to your question. I think you really can't go wrong with using the ASP.NET MVC framework with some DDD concepts tossed in. This of course may be over architecting a small problem however let me suggest why I like it so much. With ASP.NET MVC you don't have any heavy obstacles to worry about ...just nice pure HTML. Form there following a good domain driven design you can quickly get some layers running. Plug in LINQ to SQL and you are off and running. With the MVC framework you can also easily make just about everything test driven which will help to keep the site maintainable over time. I have written a whole series on DotNetSlackers regarding architectural concerns in ASP.NET MVC from a simple app all the way back to a complex distributed SOA style application. I have one more article (covering the SOA portion) to go to complete the series but there are many other articles in this mini-series that you could get started with. Take a look at the " Three Tiers to MVC " section on this TOC of the bigger series If this really is an admin site that you are creating though...do take a look at the Dynamic Data option. Very powerful!
