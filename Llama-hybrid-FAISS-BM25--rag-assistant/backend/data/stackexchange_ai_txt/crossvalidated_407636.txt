[site]: crossvalidated
[post_id]: 407636
[parent_id]: 214359
[tags]: 
There are a few issues with what you're doing that you must consider, though there's a good chance that RMSE is fine for your purposes. 1) Neural networks have gotten popular in applications like speech and image recognition because they give exceptionally tight accuracy. In exchange for accuracy, neural nets sacrifice the easy interpretation of linear regression where you get p-valuesfor the parameters and can determine which are significantly different from zero and driving the process. library(MASS) X |t|) (Intercept) -0.07249 0.06935 -1.045 0.2972 X1 1.03197 0.06773 15.235 As I rigged it, X1, X2, and X5 are revealed to drive Y, and X4 has a slight influence. Nothing would prevent a model developer from finding p-values for the parameters of a neural network (e.g. bootstrap or maybe there's an established way to calculate p-values without resampling and retraining), but even if you get them, the interpretation is opaque. Sure, a parameter may be significant, but when it's some nonlinear combination of the input variables, the interpretation is not so obvious to me. For that reason, neural networks would not be the best choice when your goal is interpretation and inference about why an input is found to have a certain output. Linear regression tends to be the tool of choice. 2) RMSE might not quite measure what you want. It gives equal penalties to missing high and missing low. In a business setting, those probably are not equally bad types of errors. A metric giving an especially harsh penalty for missing high (or low) may be more appropriate, though I would interpret it as "RMSE-ish". As Kodiologist mentioned, the appropriate data for calculating any kind of metric would be on out-of-sample data, perhaps some kind of cross validation. Particularly with a neural network, the parameters can start to memorize the training data and essentially play connect the dots, so your in-sample performance is not a reliable measure of how your network has modeled the process that generates your response variable. Edit: I'm saying "accuracy" because I'm in classification mode. I mean something more like R-squared for a regression.
