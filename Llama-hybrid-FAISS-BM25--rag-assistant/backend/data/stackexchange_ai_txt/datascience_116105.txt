[site]: datascience
[post_id]: 116105
[parent_id]: 116090
[tags]: 
Applying time series for IoTs could be quite complex because you have to deal with model constraints (in general, it can't process too many data), business constraints (what to do you want to predict and with which accuracy), and device constraints (sensors could have different calibrations and the components are not 100% identical). So the first step would be to define a time range between 50 and 200 steps with a clear time limit for a starting and an ending, ideally, that corresponds to a cycle. I recommend starting with simple business objectives because you have already a lot of complexity due to the model and devices. It also applies to devices: starting studying one device could be more efficient to understand the main behaviors and add more devices progressively. Then you have to choose the right model. Random Forest is quite universal and could take into account several variables. https://pyts.readthedocs.io/en/latest/generated/pyts.classification.TimeSeriesForest.html LSTMs are great to learn patterns, but they are quite sensitive to noise. You may have to know your devices very well to smooth their signal correctly. https://www.analyticsvidhya.com/blog/2019/01/introduction-time-series-classification/ https://www.kaggle.com/code/meaninglesslives/simple-neural-net-for-time-series-classification Sktime could be interesting: https://www.sktime.org/en/v0.9.0/examples/02_classification_univariate.html Note that if the classification rules apply to any IoT, it is not a multi-variate case, but rather a pattern recognition applicable to any similar device. However, be aware that the devices should be comparable enough to make good classification (= data normalization and maybe noise reduction).
