[site]: crossvalidated
[post_id]: 432568
[parent_id]: 
[tags]: 
Why is logistic regression using glm giving non-intuitive results?

I am using the NHANES data to fit a logistic regression model with diagnosis of osteoporosis as the dependent variable and independent variables being vitamin D levels, serum calcium levels, age and gender. It is quite clear that women are much more at risk to have osteoporosis both from a medical point of view as well as what is being in the data. Same is the case with age. As you get older, your risk for osteoporosis increases. I use NHANES data to build a basic logistic regression model and I find that the coefficient estimates for both age and gender (women) are both negative which means that they have a rather inverse relationship with the risk for osteoporosis - and this doesn't make sense. Fully reproducible code: library(tidyverse) library(RNHANES) library(ggplot2) library(pROC) d07 = nhanes_load_data("DEMO_E", "2007-2008") %>% select(SEQN, cycle, RIAGENDR, RIDAGEYR) %>% transmute(SEQN=SEQN, wave=cycle, RIAGENDR, RIDAGEYR) %>% left_join(nhanes_load_data("VID_E", "2007-2008"), by="SEQN") %>% select(SEQN, wave, RIAGENDR, RIDAGEYR, LBXVIDMS) %>% transmute(SEQN, wave, RIAGENDR, RIDAGEYR, vitD=LBXVIDMS) %>% left_join(nhanes_load_data("BIOPRO_E", "2007-2008"), by="SEQN") %>% select(SEQN, wave, RIAGENDR, RIDAGEYR, vitD, LBXSCA) %>% transmute(SEQN, wave, RIAGENDR, RIDAGEYR, vitD, Calcium = LBXSCA) %>% left_join(nhanes_load_data("OSQ_E", "2007-2008"), by="SEQN") %>% select(SEQN, wave, RIAGENDR, RIDAGEYR, vitD, Calcium, OSQ060) %>% transmute(SEQN, wave, RIAGENDR, RIDAGEYR, vitD, Calcium, Osteop = OSQ060) d09 = nhanes_load_data("DEMO_F", "2009-2010") %>% select(SEQN, cycle, RIAGENDR, RIDAGEYR) %>% transmute(SEQN=SEQN, wave=cycle, RIAGENDR, RIDAGEYR) %>% left_join(nhanes_load_data("VID_F", "2009-2010"), by="SEQN") %>% select(SEQN, wave, RIAGENDR, RIDAGEYR, LBXVIDMS) %>% transmute(SEQN, wave, RIAGENDR, RIDAGEYR, vitD=LBXVIDMS) %>% left_join(nhanes_load_data("BIOPRO_F", "2009-2010"), by="SEQN") %>% select(SEQN, wave, RIAGENDR, RIDAGEYR, vitD, LBXSCA) %>% transmute(SEQN, wave, RIAGENDR, RIDAGEYR, vitD, Calcium = LBXSCA) %>% left_join(nhanes_load_data("OSQ_F", "2009-2010"), by="SEQN") %>% select(SEQN, wave, RIAGENDR, RIDAGEYR, vitD, Calcium, OSQ060) %>% transmute(SEQN, wave, RIAGENDR, RIDAGEYR, vitD, Calcium, Osteop = OSQ060) dat = bind_rows(d07, d09) %>% as.data.frame() dat1 = dat %>% mutate( vitD_group = case_when( vitD = 20 & vitD =30 ~ "1Normal")) dat2 = dat1 %>% filter(!is.na(vitD_group), !is.na(Calcium), !is.na(Osteop), Osteop!=9) %>% mutate(Gender = recode_factor(RIAGENDR, `1` = "Men", `2` = "Women"), Osteop = recode_factor(Osteop, `1` = 1, `2` = 0)) #ggplot(dat2, aes(log(RIDAGEYR), fill = Osteop)) + geom_density(alpha = 0.2) #ggplot(dat2, aes(Calcium, fill = Osteop)) + geom_density(alpha = 0.2) #ggplot(dat2, aes(vitD, fill = Osteop)) + geom_density(alpha = 0.2) fit This is the summary of the fit: > summary(fit) Call: glm(formula = Osteop ~ vitD_group + Calcium + Gender + RIDAGEYR, family = "binomial", data = dat2) Deviance Residuals: Min 1Q Median 3Q Max -3.4442 0.1019 0.1917 0.3392 1.0126 Coefficients: Estimate Std. Error z value Pr(>|z|) (Intercept) 7.538635 1.049564 7.183 6.84e-13 *** vitD_group2Insufficiency 0.498426 0.208786 2.387 0.017 * vitD_group3Deficiency 0.348931 0.333813 1.045 0.296 Calcium 0.084913 0.110822 0.766 0.444 GenderWomen -2.073578 0.121172 -17.113 Exploratory analysis of Gender and Osteoporosis: > table(dat2 $Osteop, dat2$ Gender) Men Women 1 86 547 0 4899 4712 A 2-sample t-test of Age and Osteoporosis: > t.test(RIDAGEYR~Osteop, dat2) Welch Two Sample t-test data: RIDAGEYR by Osteop t = 34.091, df = 811.51, p-value It's quite clear from the two exploratory analysis that older people and women are at more risk for osteoporosis. However, the multivariate logistic regression model says otherwise.
