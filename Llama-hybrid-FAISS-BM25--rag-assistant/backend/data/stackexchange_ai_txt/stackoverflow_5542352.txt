[site]: stackoverflow
[post_id]: 5542352
[parent_id]: 
[tags]: 
Qt : Efficiently handle QGraphicsItems that have "lots of pixmaps"? (RTS)

I'm currently building up a small Real Time Strategy 2D engine. And I wonder how to handle the many everchanging sprites that will eventually cluter my screen . FYI, I am not aiming at anything AAA level, I'm just trying to implement some machine learning methods. Thus, I've picked Warcraft II abandonware ISOs, took shamelessly some graphics, and I've tumbled on the first issues. http://img263.imageshack.us/img263/1480/footman.png As you can see above, even the simple footman of Warcraft II has got around 50 sprites for its animation. Which is a lot. And it will change sprites very often. (The black line was just checking if my alpha channel was right) Thus, the final question : How do I implement efficiently a QGraphicsObject that keeps on changing? How do I efficiently implement a QGraphicsItem that repeatedly changes its appearance? Do I simply overload the paint() method of QGraphicsPixmapItem and keep on changing the Pixmap used on screen? Will it cause some "stuttering"? I've heard that sometimes, it is wise/possible to create one all the pixmaps, hide them all, and duplicate them when needed. (Copy is less expensive than other operations) Is there any other intelligent idea? Thanks for any input! (tutorial for RTS engines, complexity stuff, etc...)
