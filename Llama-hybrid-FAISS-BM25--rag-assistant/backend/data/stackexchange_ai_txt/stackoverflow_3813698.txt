[site]: stackoverflow
[post_id]: 3813698
[parent_id]: 3810459
[tags]: 
Here's a possible refactoring using Arel / Rails 3 / REE 2010-02 class AddressBook Here are the SQLs generated: ree-1.8.7-2010.02 > AddressBook.search("something") AddressBook Load (0.1ms) SELECT "address_books".* FROM "address_books" WHERE ((((("address_books"."organization_name" LIKE 'something%' OR "address_books"."business_name" LIKE 'something%') OR "address_books"."federal_tax_id" LIKE 'something%') OR "address_books"."city" LIKE 'something%') OR "address_books"."zip" LIKE 'something%')) => [] ree-1.8.7-2010.02 > AddressBook.search("1-2-3-4-5") AddressBook Load (0.2ms) SELECT "address_books".* FROM "address_books" WHERE ((((("address_books"."organization_name" LIKE '%1%' OR "address_books"."business_name" LIKE '%2%') OR "address_books"."federal_tax_id" LIKE '%3%') OR "address_books"."city" LIKE '%4%') OR "address_books"."zip" LIKE '%5%')) => [] Obviously, depending on your needs and how you want to search, you can update this. The main point is that with Arel you can just keep chaining clauses to the relation until the point where it's actually queried. This is a lot cleaner than building up a conditions string or array, I think.
