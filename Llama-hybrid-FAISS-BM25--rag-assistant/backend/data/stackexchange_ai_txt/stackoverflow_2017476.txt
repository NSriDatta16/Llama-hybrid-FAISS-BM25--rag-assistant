[site]: stackoverflow
[post_id]: 2017476
[parent_id]: 2016412
[tags]: 
Carej, My main reason is to make it easier to read, understand and maintain similar to the way sections of code in a very long method can be extrapolated away into sub methods. As in: public void vend() { /* 10 lines of code about accepting money */ /* 10 lines of code about calculating change */ /* 10 lines of code about vending soda */ } Becomes public void vend() { acceptMoney(); calculateChange(); vendSoda(); } With each of the sub methods having the chunks of code as in: public void acceptMoney() { /* 10 lines of code about accepting money */ } Another reason is because of exactly what you mention, if I am able to elegantly break it into smaller parts, those parts have a chance of being reused and subsequent build files become easier to create. Just modify the value of a few properties, and I can use some sections in may different applications. It would just make sense that there is an accepted way to pull targets and properties into separate files all used by one build file. Does anyone know of such a way?
