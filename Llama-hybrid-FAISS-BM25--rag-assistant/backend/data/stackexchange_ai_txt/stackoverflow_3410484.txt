[site]: stackoverflow
[post_id]: 3410484
[parent_id]: 3410266
[tags]: 
To create a new social network on the scale you are probably thinking about is a huge, huge undertaking. It would generally not be an 'introduction to web development' exercise, it would be a 'masterclass in collaborative, experienced web development' exercise - to implement it correctly, anyway. It seems that to jump ahead and think about languages is missing out a few very significant steps that are required for software design - especially given the number of valid options for languages and platforms. It would be better to start by thinking about some system design: users, use cases, perhaps a range of entity / ERM design; some point after that you might consider backend storage. Thinking about user load, user experience, extensibility and the feature set you could start to weigh up languages and platforms. That said whenever I have an idea I think is cool I'll usually just do rapid prototyping cycles; but for something as huge as a social networking site it will become increasingly difficult to refactor, especially if it's just you on the team. Obviously I'm reeling off all this to try to suggest there's a lot of thinking to be done. My actual advice would be - grab a load of paper, sketch out as much as possible, starting at a high level (say, the different screens users will interact with) - solve problems (eg sketch out states of objects) on paper, and start small / aim low to begin with. Better to have a simple messaging system with text and photos (to be honest, to get that polished finished and working well, that's a feat in itself) that works than a haphazard broken buggy extended profile system with messaging, photo galleries, 'wall' system, groups and so on. There is plenty of tasty technology out there, eg RoR, but with a project as deep as that there will still be a lot of research and head-scratching moments. So having some level of overall project scope will help keep things on track and managable, as will any amount of planning prior to getting coding. Just some food for thought.!
