[site]: stackoverflow
[post_id]: 5117175
[parent_id]: 5117132
[tags]: 
Because it's specified by Java Language Specification. JLS 5.1.7 Boxing Conversion : If the value p being boxed is true , false , a byte , or a char in the range \u0000 to \u007f , or an int or short number between -128 and 127 (inclusive), then let r 1 and r 2 be the results of any two boxing conversions of p . It is always the case that r 1 == r 2 . Ideally, boxing a given primitive value p , would always yield an identical reference. In practice, this may not be feasible using existing implementation techniques. The rules above are a pragmatic compromise. The final clause above requires that certain common values always be boxed into indistinguishable objects. The implementation may cache these, lazily or eagerly. For other values, this formulation disallows any assumptions about the identity of the boxed values on the programmer's part. This would allow (but not require) sharing of some or all of these references. This ensures that in most common cases, the behavior will be the desired one, without imposing an undue performance penalty, especially on small devices. Less memory-limited implementations might, for example, cache all char and short values, as well as int and long values in the range of -32K to +32K.
