[site]: stackoverflow
[post_id]: 2523460
[parent_id]: 2523165
[tags]: 
I think Joel is correct with if (keyValueIt->find(d) != keyValueIt->end()) However I wanted to encourage you use some typedefs to try and simplify your code. Using typedefs can help when diagnosing problems like this (and if you're lucky your compiler will give you more meaningful error messages as a result. For instance: typedef std::map KeyValueMap; typedef std::list ConfigurationList; typedef std::map ConfigurationMap; bool isConfigLv2(std::string,std::string); bool ConfigManager::isConfigLv2(std::string s,std::string d) { if(!isConfigLv1(s)) return false; ConfigurationMap::iterator it; ConfigurationList* keyValue; ConfigurationList::iterator keyValueIt; // begin() ; keyValueIt != keyValue->end() ; keyValueIt++ ) if(!((*keyValueIt).second.find(d)==(*keyValueIt).second.end())) return true; return false; } Simplifying the types makes it more obvious to me that keyValueIt is probably being misued (i.e. it's actually a list iterator, and not a KeyValueMap iterator and so the '.second' access is erroneous.)
