[site]: crossvalidated
[post_id]: 452896
[parent_id]: 136362
[tags]: 
Itâ€™s not an integer arrival time. Calls may arrive at any millisecond or nanosecond. Where f is random between zero and one -ln(f) is the time until the next arrival if the average arrival time is 1.0 per unit of time . If a is the average arrival time the next arrival is -ln(f)/a. (If the arrival rate doubles, the average arrival time is cut in half.) Say you want simulated 5-minute intervals. Sum the -ln(-f)/a values until the sum>= 5 minutes while counting the number of iterations. Subtract 5 minutes from the sum and resume summing -ln(-f)/a counting iterations again as needed. My thinking was radioactive decay. But the math works for any Poisson process. import math import random avgCountsPerHour = 1000.0 avgCountsPerMinute = avgCountsPerHour/60 print(avgCountsPerMinute*5) #average in 5 minutes sum=0.5 # average value after sum-=5 tbl = [] for dummy in range(0,26): #25 results count=0 while (sum 83.33333333333334 [67, 78, 85, 86, 70, 83, 88, 99, 88, 82, 76, 67, 84, 72, 72, 101, 87, 77, 100, 78, 90, 77, 78, 81, 89, 87]
