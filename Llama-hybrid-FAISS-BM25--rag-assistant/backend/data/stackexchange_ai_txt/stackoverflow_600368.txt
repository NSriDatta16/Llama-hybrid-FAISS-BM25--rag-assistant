[site]: stackoverflow
[post_id]: 600368
[parent_id]: 599369
[tags]: 
A little background information: As said, if you want to have a dynamic collection of things, use a List . Internally, a List uses an array for storage too. That array has a fixed size just like any other array. Once an array is declared as having a size, it doesn't change. When you add an item to a List , it's added to the array. Initially, the List starts out with an array that I believe has a length of 16. When you try to add the 17th item to the List , what happens is that a new array is allocated, that's (I think) twice the size of the old one, so 32 items. Then the content of the old array is copied into the new array. So while a List may appear dynamic to the outside observer, internally it has to comply to the rules as well. And as you might have guessed, the copying and allocation of the arrays isn't free so one should aim to have as few of those as possible and to do that you can specify (in the constructor of List ) an initial size of the array, which in a perfect scenario is just big enough to hold everything you want. However, this is micro-optimization and it's unlikely it will ever matter to you, but it's always nice to know what you're actually doing.
