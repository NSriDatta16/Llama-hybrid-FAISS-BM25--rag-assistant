[site]: stackoverflow
[post_id]: 189823
[parent_id]: 189791
[tags]: 
You're making a good start - recognizing that you don't have it all figured out. None of us do. Make sure you understand the domain - that will eliminate some errors right off the bat. Know what you are solving, and then go about trying to develop the solution. Have an approach to development. I use a test-first approach, but it isn't the only way. That provides me with a built-in checker that I'm still on course. I utilize my peers to bounce ideas off of, I've used pair programming before and found value in that. If you develop a system to minimize the 'dumb' mistakes, you'll find they'll go away. Maybe a checklist would work. The Personal Software Process encourages that approach. Try it and see if it works. I like to whiteboard my thoughts before I commit them to code. I like my peers to show me why I'm not right in my thinking first. If they can't, I'm reasonably certain I've eliminated some possible hurdles. A LOT of this will come from experience, essentially from time doing what you do and learning from your mistakes!
