[site]: stackoverflow
[post_id]: 5606094
[parent_id]: 5606075
[tags]: 
Your XPath query is off - you are currently using name as a literal and not its value, also you need single quotes around it - so replace this XmlNodeList saveItems = save.SelectNodes("Storage/Save[@Name = name]"); with: XmlNodeList saveItems = save.SelectNodes(string.Format("storage/Save[@Name = '{0}']", name)); Edit: also needed lowercase storage in Xpath query - fixed This sample code works for me - this should help you find where your other problems are: System.IO.StreamReader sr = new System.IO.StreamReader(@"test.xml"); System.Xml.XmlTextReader xr = new System.Xml.XmlTextReader(sr); System.Xml.XmlDocument save = new System.Xml.XmlDocument(); save.Load(xr); string name = "Hellcode"; XmlNodeList saveItems = save.SelectNodes(string.Format("storage/Save[@Name = '{0}']", name)); XmlNode seconds = saveItems.Item(0).SelectSingleNode("Seconds"); int sec = Int32.Parse(seconds.InnerText); Also I would suggest you replace your SelectNodes() with SelectSingleNode() : XmlNode saveItem = save.SelectSingleNode(string.Format("storage/Save[@Name = '{0}']", name)); XmlNode seconds = saveItem.SelectSingleNode("Seconds"); Edit: As suggested an alternative fro XML parsing is Linq to XML - this is pretty much the standard now, don't use anything else if you don't have to. This makes this sample much shorter: XDocument doc = XDocument.Load("test.xml"); var saveItem = doc.Descendants("Save") .Where(x => (string)x.Attribute("Name") == name) .Single(); int sec = Convert.ToInt32(saveItem.Element("Seconds").Value);
