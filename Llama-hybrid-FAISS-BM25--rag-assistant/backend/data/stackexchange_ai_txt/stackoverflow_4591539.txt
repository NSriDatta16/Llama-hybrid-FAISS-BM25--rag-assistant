[site]: stackoverflow
[post_id]: 4591539
[parent_id]: 
[tags]: 
Initializing own plugins

I've written a few jquery plugins for my client. I want to write a function which would initialize each plugin which have been loaded. Example: Here I've loaded plugin1 and plugin2. Plugin1 should be attached to all links with class name 'ajax' and plugin2 to all divs with class name 'test2': $('document').ready(function(){ $('a.ajax').plugin1(); $('div.test2').plugin2(); } I know that I can use jQuery().pluginName to check if a plugin exists. But I want to have a leaner way. Can all loaded plugins register a initialize function in an array or something like that which I in document.ready can iterate through and invoke? like: //in plugin1.js myCustomPlugins['plugin1'] = function() { $('a.ajax').plugin1(); }; // and in the initializer script: myCustomPlugins.each(function() { this(); }; Guess it all boiled down to three questions: How do I use a jquery "global" array? How do I iterate through that array to invoke registered methods Are there a better approach? Update to answer the comment a) Because I'm building a new framework for my client based on ASP.Net MVC3 and all their developers are used to the drag/drop functionality in WebForms. I want to make the transition as smooth as possible since they have no knowlegde of jquery. Them only having to include a jquery script to get new functionality is a big plus. Using a separate initializer script also makes it possible to disable this functionality when they have better jquery knowledge. b) I use Ajax to update some div s by returning HTML. The HTML need to be processed by all plugins to add the plugin functionality, or all updated parts will fail to work as described above. Why does it matter WHY I want to do this? :) It's not something that is very complicated.
