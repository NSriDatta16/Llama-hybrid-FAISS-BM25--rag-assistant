[site]: stackoverflow
[post_id]: 3315385
[parent_id]: 3291474
[tags]: 
This answer may help you if you don't technically need to build from source, and if you're just getting started with a fresh Cassandra install rather than upgrading an existing one. I had the same problem when building from source. To get around it, I used a development build from the "Latest Builds (Hudson)" http://cassandra.apache.org/download/ link here. The next problem you'll encounter is that no keyspaces will be set up on a fresh install. To get around that problem you can use the last release 0.6.3. That solution didn't work for me, because I wanted to use Pycassa which needs 0.7. So what I had to do was the following steps: Fire up a JMX console. Personally I'm not located with the server running Cassandra, so I needed to use ssh tunnels, like this: jconsole -J-DsocksProxyHost=localhost -J-DsocksProxyPort=1080 Then used this funky looking url to connect: service:jmx:rmi:///jndi/rmi://my.hostname.com:8080/jmxrmi Then on the left side expand org.apache.cassandra.service expand Storage Service expand Operations select loadSchemaFromYAML at the top right, click the loadSchemaFromYAML button to invoke it. You can use the same steps to add new keyspaces during development, once you figure out what you want your schema to look like. But the above steps only work if you have no data. So you would have to remove all your data using rm /var/lib/cassandra/* after taking down the server. (Of course, there are other steps you can take that are more complicated to migrate data without destroying it.) I realize you didn't ask about creating keyspaces, but on a trunk version of cassandra, if your'e just getting started, that's the very next problem you'll have. I just spent a day solving it, and am hoping it helps.
