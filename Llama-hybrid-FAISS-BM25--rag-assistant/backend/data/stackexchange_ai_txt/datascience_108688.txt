[site]: datascience
[post_id]: 108688
[parent_id]: 
[tags]: 
How to generate test set with no data-leakage using multiple columns

I am developing a fraud detection algorithm. Among other things, my dataset contains the phone number, email address and a few other fields that should uniquely identify a user (let's call them "unique fields"). In order to prevent data leakage between my training and test set I want to be sure that my test set contains only users that are completely new, meaning that they should not have any user whose unique fields matches any unique field of any user of the training set. And I am having trouble building this test set. Basically I am looking for a way to generate a unique ID based on the values of several columns, meaning that 2 rows should have the same unique ID if any of their unique fields matches. Do you have any solution in mind ? The answer could be in SQL or Pandas or any other python library, I can adapt. The only solution I can think of is to start from a basic train_test_split and iteratively remove from the test set any row that have matching fields with the training set, but it's cumbersome and less elegant than the generation of a unique ID.
