[site]: crossvalidated
[post_id]: 351582
[parent_id]: 
[tags]: 
How to find the prediction error with CV

I have this dilemma with CV. I will try to take an example and explain it as best as possible. I'm doing it for lasso regression. I want to find the best coefficient $\beta$ values and the best $\lambda$ value and the prediction error (where I have the dilemma) I have a dataset 20x10. To do 5-Fold CV, I split the data into 5 splits: 16 rows of my data are for training and 4 rows for testing. Over a sequence of e.g. 3 lambda values, $\lambda=1,2,3$. Starting with $\lambda=1$ First I fit the model on the training data, and get a value of $\beta^{train}$. I use this $\beta^{train}$ on the test set $X^{test} \beta^{train}-y^{test}$ and I get the MSE, e.g. $MSE_1$. I repeat this for all 5 folds and $\lambda=1$ and get 5 $MSE$s, so: $MSE_1$,$MSE_2$,$MSE_3$,$MSE_4$,$MSE_5$. I average them and I get the $CV_1$-error for $\lambda=1$. I repeat the same process for the remaining $\lambda$ values. I get for each $\lambda$ value 3 CV-errors: $CV_1$, $CV_2$, $CV_3$. I check for which $\lambda$ value I get the smallest $CV$, say for $lambda=3$. So I found now the best lambda. Since the CV error is not the prediction error, how to I measure the prediction error? Do I have to split the data in 2 parts training and testing and train the model with $\lambda=3$ and I get again a $\beta^{train}$. After that in the test part I find the $MSE=\frac{1}{n}\sum X^{test} \beta^{train}-y^{test}$ using the $\beta^{train}$ and this is then my prediction error? Is this correct?
