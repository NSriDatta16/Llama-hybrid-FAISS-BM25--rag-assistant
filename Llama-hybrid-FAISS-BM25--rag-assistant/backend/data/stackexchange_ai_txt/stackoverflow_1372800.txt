[site]: stackoverflow
[post_id]: 1372800
[parent_id]: 1372682
[tags]: 
Please remember that the original C++ (C with classes) was a hack on C. Its goal was good - enable better organization of C programs by bringing in ideas from the OOP world. The objective was good but the way it was done - bad. C++, over the time, has grown in by piling feature upon feature on its tiny C base, which was designed for simplicity. What will happen if you construct a 100 storey building on a foundation meant for a 2 storey house? That is the disaster happened to C++. It culminated with the confusion around "concepts", which is now out of the new standard . Many of these new features were added to workaround the core C++'s inherent weaknesses. I think a statically typed language cannot be a good vehicle for OOP, at least if you go by Alan Kay's definition of that paradigm. When I use C++ I try to stick to the basic features like namespaces, standard template libraries and exceptions. I will create a C++ class only if an hierarchy of types makes absolute sense in the current context. I just ignore the rest of the 'advanced', complicated stuff.
