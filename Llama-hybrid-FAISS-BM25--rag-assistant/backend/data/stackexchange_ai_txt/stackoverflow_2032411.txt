[site]: stackoverflow
[post_id]: 2032411
[parent_id]: 
[tags]: 
Is there a way to fill a collection using a LINQ expression?

One of the great things about LINQ is that allows you to get information that's related to a collection without having to manually write code to iterate through the collection. Is there a way to use LINQ to populate a collection, thus avoiding the need to write a loop? For example, let's say I have the following code which works with a range of numbers from one to ten: public static void LinqTest() { List intList = new List (); for (int i = 1; i x % 2 == 1).Sum(); double intAverage = intList.Average(); Console.WriteLine("Sum is {0}\tSum of Odds is {1}\tAverage is {2}", intSum, intSumOdds, intAverage); } LINQ is already replacing the for loops that would be required to retrieve information about the data. I'm curious as if LINQ could be used to replace the for loop that populates data. Is there a way to use LINQ to replace the following two lines of code? for (int i = 1; i
