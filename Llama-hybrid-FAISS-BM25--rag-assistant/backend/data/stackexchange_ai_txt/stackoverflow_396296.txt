[site]: stackoverflow
[post_id]: 396296
[parent_id]: 
[tags]: 
Recursive lambda expression to find the path(s) through a directed graph?

I need to find a path or paths down a complicated graph structure. The graph is built using something similar to this: class Node { public string Value { get; set;} public List Nodes { get; set;} public Node() { Nodes = new List (); } } What makes this complicated is that the nodes can reference back to an earlier node. For example, A -> C -> E -> A What I need to do is get a list of stacks which represent paths through the Nodes until I get to a Node with a specific value. Since its possible there can be some very large paths available we can have a maximum Nodes to try. List > paths = FindPaths(string ValueToFind, int MaxNumberNodes); Does anyone have a way to build this (or something similar)? I've done recursion in the past but I'm having a total brain fart thinking about this for some reason. My question specified a lambda expression but using a lambda is not necessarily required. I'd be grateful for any solution. Side note: I lifted the class from aku's excellent answer for this recursion question . While his elegant solution shown below traverses the tree structure it doesn't seem to allow enough flexibility to do what I need (for example, dismiss paths that are circular and track paths that are successful). Action traverse = null; traverse = (n) => { Console.WriteLine(n.Value); n.Nodes.ForEach(traverse);}; traverse(root); // where root is the tree structure Edit : Based on input from the comments and answers below I found an excellent solution over in CodeProject. It uses the A* path finding algorithm. Here is the link.
