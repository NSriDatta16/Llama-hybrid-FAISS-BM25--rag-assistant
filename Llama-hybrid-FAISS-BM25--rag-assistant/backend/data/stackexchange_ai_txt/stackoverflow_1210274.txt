[site]: stackoverflow
[post_id]: 1210274
[parent_id]: 1210024
[tags]: 
I dream of the day when all the different stages of development are part of a single team, instead of having team "conveniently" broken by job description. This organizational view tends to lean processes heavily towards the dreadful waterfall (god I hate this process!). But to answer your question, I think the team should not exceed 10ish people with a few more gravitating around it without being full time part of it (training, marketing, clients, implementation, support). In all 80% - 20% devs vs management/QA should tend towards good productivity. If your architects can also dig in the code a bit all the better. Frequent design reviews with the whole team should also allow everyone to have good oversight over the whole project and not just their pile of bananas. Here is an example of team break down that had worked really good for me : 2 Sr devs that have a good grasp on architecture 4 Jr devs that can handle the grunt work 1 code ninja that can do some technological exploration (while also participating in the whole) 1 project manager, team lead, interface to the outside world to bring in the 2 pizzas 1 noisy QA guy to poke around the application, write acceptance tests etc. The noisy part was for the WTF/day metric. The quieter he was the better we did our job and the less ibuprofen we consumed. Around this gravitated some clients on whom we did frequent usability testing. ha the good old days !!!
