[site]: crossvalidated
[post_id]: 574585
[parent_id]: 
[tags]: 
How to address faulty randomization in RCBD design?

I have a client who wants me to analyze data from a randomized complete block design study. A large agricultural field was divided up into 16 plots and each row of plots was set up as a block containing four treatments. However, the design was implemented incorrectly. Instead of randomizing the location of each treatment within each block, the locations are always the same. So there is the potential that there will be a confounding of the treatment effect with some unknown variable(s) that vary from west to east as you move across the field. To make matters more complicated, the experiment was conducted twice in two consecutive years. The location of the plots in year 1 and year 2 are close to each other but not exactly in the same place. The treatments were laid out in contiguous strips in both years, but the ordering of the columns changed between the two years. Here is an illustration of the layout. I was struggling with the best way to address this issue. If we fit a random intercept to each block, that would account for random variation in the north-south direction but not the east-west direction. We cannot fit a random intercept to row and column, because column is completely confounded with treatment within each year. So I was just curious what is the best way to deal with this. Would it be legitimate to still fit the model in this way, but provide some sort of caveat that the blocks (rows) have the same orientation of treatments within each one? (lme4 syntax) y ~ trt + (1|year) + (1|row:year) We cannot do y ~ trt + (1|year) + (1|row:year) + (1|column:year) because it results in a singular fit, the column:year intercepts cannot be estimated. I thought of sidestepping the issue by estimating the model with Bayesian methods so that we can avoid the singular fit problem, but that still does not really address the pseudoreplication problem. Is there any way around this issue?
