[site]: stackoverflow
[post_id]: 3076102
[parent_id]: 3071602
[tags]: 
Check the docs, specifically: http://docs.python.org/library/multiprocessing.html#module-multiprocessing.pool There really are a lot of examples there that should get you on your way. For instance, I could come up with: #!/usr/bin/env python2.6 import time import multiprocessing class Model: name = "" def __init__(self,name): self.name = name def run_experiment(id, model): print "Experiment %d is starting" % id for _ in range(0,60): print "Hey %s from experiment %d" % (model.name, id) time.sleep(1) print "Experiment %d is done" % id return "Result for %d" % id if __name__ == "__main__": model = Model("statictistical model") experiments = ((i, model) for i in range(0, 5)) pool = multiprocessing.Pool(3) results = [pool.apply_async(run_experiment, experiment) for experiment in experiments] for result in results: r = result.get() # do something with r # or nothing, i suppose... Do also pay attention to what the docs say about using the multiprocessing module: Functionality within this package requires that the __main__ method be importable by the children. This is covered in Programming guidelines however it is worth pointing out here. This means that some examples, such as the multiprocessing.Pool examples will not work in the interactive interpreter
