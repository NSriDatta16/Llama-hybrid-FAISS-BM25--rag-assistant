[site]: stackoverflow
[post_id]: 1737955
[parent_id]: 
[tags]: 
C++ Data Structure for storing 3 dimensions of floats

I've implemented a 3D strange attractor explorer which gives float XYZ outputs in the range 0-100, I now want to implement a colouring function for it based upon the displacement between two successive outputs. I'm not sure of the data structure to use to store the colour values for each point, using a 3D array I'm limited to rounding to the nearest int which gives a very coarse colour scheme. I'm vaguely aware of octtrees, are they suitable in this siutation? EDIT: A little more explanation: to generate the points i'm repeatedly running this: (a,b,c,d are random floats in the range -3 to 3) x = x2; y = y2; z = z2; x2 = sin(a * y) - z * cos(b * x); y2 = z2 * sin(c * x) - cos(d * y); z2 = sin(x); parr[i][0]=x; parr[i][1]=y; parr[i][2]=z; which generates new positions for each axis each run, to colour the render I need to take the distance between two successive results, if I just do this with a distance calculation between each run then the colours fade back and forth in equilibrium so I need to take running average for each point and store it, using a 3dimenrsionl array is too coarse a colouring and I'm looking for advice on how to store the values at much smaller increments.
