[site]: stackoverflow
[post_id]: 1652559
[parent_id]: 1652506
[tags]: 
"Am I right assuming we are better off using plain tables when running an ORM?" Yes. The RDBMS should be focused on persistent storage, and nothing more. If you do this, you will find that you can -- easily -- build an access layer in your OO language. All the "front-end" developers must use the access layer and cannot break the database. "object-oriented stored procedures?" Oracle has some OO-like features of PL/SQL. Don't waste any time on it. Focus on a clean separation between the persistence (in the RDBMS) and the application processing (not in the RDBMS). Many, many people will send you hate mail saying things like "the vendor put all those features in there, that means you should use them" and "what's wrong with stored procedures?" and "a good DBA is better than a room full of front-end developers" etc. etc. I don't know why folks claim stored procedures are "better", yet many system eventually reaches the wall where the stored procedures and triggers got so burdensome that it had to be rewritten. I've never seen anyone complain that they had too much application software outside the database. Continue to follow your thoughts here -- use ORM -- avoid stored procedures.
