[site]: stackoverflow
[post_id]: 2450425
[parent_id]: 1632909
[tags]: 
You need to set the background brush on the scatterview to a color, i.e. transparent for it even to grab drop events. you also need to use SurfaceDragDrop. SurfaceDragDrop.AddDropHandler(scatterView1, OnCursorDrop); AddHandler(ScatterViewItem.ScatterManipulationStartedEvent, new ScatterManipulationStartedEventHandler(OnManipulationStarted)); private void OnManipulationStarted(object sender, RoutedEventArgs args) { ScatterViewItem svi = args.OriginalSource as ScatterViewItem; if (svi != null)// && DragDropScatterView.GetAllowDrag(svi)) { svi.BeginDragDrop(svi.DataContext); } } private void OnCursorDrop(object sender, SurfaceDragDropEventArgs args) { SurfaceDragCursor droppingCursor = args.Cursor; // Add dropping Item that was from another drag source. if (!scatterView1.Items.Contains(droppingCursor.Data)){ scatterView1.Items.Add(droppingCursor.Data); var svi = scatterView1.ItemContainerGenerator.ContainerFromItem(droppingCursor.Data) as ScatterViewItem; if (svi != null){ svi.Center = droppingCursor.GetPosition(scatterView1); svi.Orientation = droppingCursor.GetOrientation(scatterView1); svi.Height = droppingCursor.Visual.ActualHeight; svi.Width = droppingCursor.Visual.ActualWidth; svi.SetRelativeZIndex(RelativeScatterViewZIndex.Topmost); } } } This is all basicly from an example in the sdk, I don't remember which one of them it is sadly. Cheers, Stian Farstad
