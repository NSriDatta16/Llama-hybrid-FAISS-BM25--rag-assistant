[site]: stackoverflow
[post_id]: 2624416
[parent_id]: 2623912
[tags]: 
Are you trying to understand how to build a compiler or are you trying to learn what a Win32 executable looks like internally? If the former then reading a book on how to create a compiler will be way more efficient than trying to reverse engineer source code. Compilers are unlike anything you've ever seen and it really helps to have an author walk you through the principles and common techniques and tools used. It's also worth pointing out that compilers are built in stages and it's only towards the end of the implementation do you need to have any knowledge of the CPU and operating system that you are targeting. If you are new to compiler construction then you have plenty to learn about before you'll get to that stage. However if you want to understand the format of Win32 executables then you need to understand x86 (or x64) assembly code and the Portable Execution (PE) file format (which is used by Windows for executables). For an introduction to x86 assembly code I'd recommend Dr Paul Carter's excellent "PC Assembly Language" free eBook http://www.drpaulcarter.com/pcasm/ and for PE I'd start here http://msdn.microsoft.com/en-us/magazine/cc301805.aspx and http://msdn.microsoft.com/en-us/magazine/cc301808.aspx
