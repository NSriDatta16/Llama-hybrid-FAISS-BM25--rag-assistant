[site]: stackoverflow
[post_id]: 2176704
[parent_id]: 2176598
[tags]: 
The kind of search you seem to be after is not really the sweet spot for RDBMSs such as MySQL. And specifying the allowable search formats is not generally good for usability, unless it's a rather specific domain. Keeping it very generic, the query to search three fields for "Persons Name Fake Street" could be something like this: SELECT * FROM Users WHERE (FirstName LIKE "%Persons%" OR LastName LIKE "%Persons%" OR Address LIKE "%Persons%") AND (FirstName LIKE "%Name%" OR LastName LIKE "%Name%" OR Address LIKE "%Name%") AND (FirstName LIKE "%Fake%" OR LastName LIKE "%Fake%" OR Address LIKE "%Fake%") AND (FirstName LIKE "%Street%" OR LastName LIKE "%Street%" OR Address LIKE "%Street%") This should find any member who has details matching those given. But isn't very elegant and will only get worse with longer queries and more fields. It's also incredibly inefficient and will struggle quickly as the table gets longer - it's unable to use indexes. It also doesn't help you get the "best" matches at the top (if there are numerous results) A better solution might be to use MySQLs Full Text indexing by creating a separate table that can be searched using the full text index to find the relevant Users. I don't know much about this solution. Another option may be to use an external indexing tool such as Lucene. While it adds more complexity, it allows extra functionality such as weighting of fields. So name could be seen as more important than address for example. This can also order the results in order of relevance. The correct solution depends on your requirements (as always) but those are some ideas that might be worth investigating.
