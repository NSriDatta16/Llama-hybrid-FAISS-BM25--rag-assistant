[site]: stackoverflow
[post_id]: 3728993
[parent_id]: 3726017
[tags]: 
I'm using some server code for SPGridView styling. It is not very elegant solution, but it works perfectly. If you don't have much time to find the better solution, you can use this code in your user control or aspx page, where the SPGridView control is placed: protected override void CreateChildControls() { // ... spGridView.RowStyle.CssClass = "spgridview-td"; spGridView.AlternatingRowStyle.CssClass = "spgridview-td-alternating"; this.Controls.Add(spGridView); // ... } Of course, you can use aspx markup instead of generating controls. For example: Next thing is attach styling to header: protected override void Render(HtmlTextWriter writer) { // ... spGridView.DataBind(); if (spGridView.HeaderRow != null) foreach (TableCell cell in spGridView.HeaderRow.Cells) cell.CssClass = "spgridview-th"; // ... } So, your css will be: .spgridview-th { background-color:#e60004; color: Blue!important; background-image:none; } .spgridview-td { border-bottom-style: solid ; border-bottom-width: 1px ; border-bottom-color: #e60004 ; } .spgridview-td-alternating { } Hope, this helps!
