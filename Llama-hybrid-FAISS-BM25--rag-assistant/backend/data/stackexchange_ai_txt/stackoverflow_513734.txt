[site]: stackoverflow
[post_id]: 513734
[parent_id]: 409076
[tags]: 
Having run into something similar in the past I created a function that would return the directory object, either newly created or existing (sorry it's in VBScript): Function GetOU(objParentOU, strOUName) On error resume next Set GetOU = Nothing objParentOU.Filter = Array("organizationalUnit") Dim OU : Set OU = Nothing For Each OU in objParentOU if lcase(OU.Name) = lcase("ou=" & strOUName) then wscript.echo "Connected to existing OU: " & OU.Name set GetOU = GetObject(OU.adsPath) exit function end if Next Set OU = Nothing ' If script made it to here then the OU must not already exist Set GetOU = objParentOU.Create("organizationalUnit", "ou=" & strOUName) GetOU.SetInfo if err then wscript.echo err.description err.clear else wscript.echo "Created new OU: " & strOUName end if end function Using this I can build my chain without regard for the OU existing or not. First set the base path and then add on top of that: Set objDomain = GetObject(LDAP_CONNECTION_STRING) Set parentOU = GetOU(objDomain, "parentOU") Set childOU = GetOU(parentOU, "childOU") Set subchildOU = GetOU(childOU, "subchildOU") As the code works down the set commands the OU's are either created new or bound-to if they already exist.
