[site]: stackoverflow
[post_id]: 4128762
[parent_id]: 
[tags]: 
Linq to SQL error - Member Access not legal. What is causing this?

I'm trying to use Linq To Sql and have hit a problem when attempting to execute the following query in my web application: var query = from t in teamsTable where t.SeasonTeams.All(x => x.SeasonID != 4) select t; return query.ToList(); At this point, i receive the following error: Member access 'Int32 SeasonID' of 'DomainModel.Entities.SeasonTeam' not legal on type 'System.Collections.Generic.IList`1[DomainModel.Entities.SeasonTeam]. Using LINQPad, the exact same query works. I've included the classes with Linq Mappings below. I'd really appreciate some help both solving the problem and explaining what is causing it. [Table(Name = "Teams")] public class Team { [Column(IsPrimaryKey = true, IsDbGenerated = true, AutoSync = AutoSync.OnInsert)] public int TeamID { get; set; } [Column] public string Name { get; set; } [Association(OtherKey = "TeamID")] private EntitySet _players = new EntitySet (); public IList TeamPlayers { get { return _players.ToList(); } } [Association(OtherKey = "HomeTeamID")] private EntitySet _homeFixtures = new EntitySet (); public IList HomeFixtures { get { return _homeFixtures.ToList(); } } [Association(OtherKey = "AwayTeamID")] private EntitySet _awayFixtures = new EntitySet (); public IList AwayFixtures { get { return _awayFixtures.ToList(); } } [Association(OtherKey="TeamID")] private EntitySet _seasonteams = new EntitySet (); public IList SeasonTeams { get { return _seasonteams.ToList(); } } } [Table(Name = "Seasons")] public class Season { [Column(IsPrimaryKey = true, IsDbGenerated = true, AutoSync = AutoSync.OnInsert)] public int SeasonID { get; set; } [Column] public DateTime StartDate { get; set; } [Column] public DateTime EndDate { get; set; } [Column] public int LeagueID { get; set; } [System.Data.Linq.Mapping.Association(OtherKey = "SeasonID")] private EntitySet _fixtures = new EntitySet (); public IList Fixtures { get { return _fixtures.ToList().AsReadOnly(); } } [System.Data.Linq.Mapping.Association(OtherKey = "SeasonID")] private EntitySet _seasonteams = new EntitySet (); public IList SeasonTeams { get { return _seasonteams.ToList().AsReadOnly(); } } internal EntityRef _league; [System.Data.Linq.Mapping.Association(ThisKey = "LeagueID", Storage = "_league")] public League League { get { return _league.Entity; } internal set { _league.Entity = value; LeagueID = value.LeagueID; } } } [Table(Name="SeasonTeams")] public class SeasonTeam { [Column(IsDbGenerated = true, IsPrimaryKey = true, AutoSync = AutoSync.OnInsert)] public int SeasonTeamID { get; set; } [Column] public int TeamID { get; set; } [Column] public int SeasonID { get; set; } internal EntityRef _team; [Association(ThisKey = "TeamID", Storage = "_team")] public Team Team { get { return _team.Entity; } set { _team.Entity = value; TeamID = value.TeamID; } } internal EntityRef _season; [Association(ThisKey = "SeasonID", Storage = "_season")] public Season Season { get { return _season.Entity; } set { _season.Entity = value; SeasonID = value.SeasonID; } } }
