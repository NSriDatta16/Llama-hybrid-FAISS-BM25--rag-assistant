[site]: stackoverflow
[post_id]: 5220465
[parent_id]: 
[tags]: 
Is it possible to have a WCF service host not bound to any specific service type?

This post is somewhat connected to my previous post . In short, I am trying to build a reverse polling http binding where the host polls its clients for requests. I am using the code from http://archive.msdn.microsoft.com/duplexhttp as my reference. Now, in this binding the host is actually a client and the clients are actually servers. Which means, a client using this reverse polling http binding must end up with a hidden Service Host providing the channel pump facility. Now, the usual pattern of using the ServiceHost type demands the presence of the actual WCF service implementation. In my case, the ServiceHost is open at the client - it does not have the service implementation and rightfully so. I am wondering what is the best way to solve this problem? Ideally, this service host needs no service. The polling host sends Message instances, which are not mapped to any service contract. These Messages are requested and replied to by dedicated channels - HttpPollingRequestChannel and HttpPollingReplyChannel respectively. But I need the service host for the channel pump facility it implements. Edit 1 I guess more background information is necessary to clarify the picture. Our system consists of clients, the server and agents. Clients talk to the server, the latter communicates their requests to the agents, which communicate the results back to the server. All the channels are straightforward HTTP - simple and clear. However, there is a demand to be able to deploy agents behind firewall with no ability to open inbound ports on it. This means, that the Server --> Agent communication is no longer possible. As I see it, I have two choices: Redesign the Server --> Agent protocol to make it use polling. Implement low level binding, which would use polling internally. What choice would you make? Although, the second choice is harder to implement this is a one time effort. But it has numerous benefits. Is it possible? I think yes, because polling duplex http binding already exists both for Silverlight and for .NET - see the link in the beginning to this post. Edit 2 I wish to stress again, that I do not want duplex . In duplex communication, the callback is executed in the context of the request, meaning Agent sends request and the Server performs the callback. My case is different. Agent sends nothing. The server decides out of the blue to communicate with the Agent. There is no active request on behalf of Agent. So, the existing duplex binding is not good for me, but I am trying to learn from it how to implement the polling. The overall picture is this: Agent constantly polls the Server If Server wants to send a message to the Agent, that message waits for the next polling request and rides to the Agent on top of the polling request reply. The polling requests are not part of any interface, they are implemented in a low level binding infrastructure.
