[site]: crossvalidated
[post_id]: 70023
[parent_id]: 69627
[tags]: 
What you have described here is in fact the case with every classification problem. You can always find some subsets of the data, that are simplier to classify then the original problem. There are dozens off approaches here, as it was previously mentioned - it is in fact a general case. If you are looking for something that actually incorporates this kind of structure in the "meaningful" way (easy to understand) you could give Hierarchical Classifier with Overlapping Classes (HCOC) a try: http://dl.acm.org/citation.cfm?id=1244576 . This model tries to build the tree like decision tree and alternates between classifing step and clustering your data. On the other hand, if you know exactly what kinds of pictures you can expect (which forms some statistically different classes) then you should simply build a classifiers (rule based, or learned) to classify your data into these classes $cl(x)=c_i$ and then train independent classifiers $cl_{c_i}(x)=output$, and then use the pipeline $cl_{cl(x)}(x)$ as a main model. If you choose to do so, you could build a good classifier, but if your data is actually big then you seem to fall into the on-going for many many years discussion of "isn't it better to include experts knowledge instead of learning everything?" and moden machine learning is closer to answer no , it is not.It is better to use better models on the whole data, without human processing, feature engineering and pre-clustering, because statistical models are simply better then we are . This is somehow the core concept of deep learning , which shows great results with little (or none) preprocessing. To sum up: HCOC model does something closely related to your idea The "naive" approach can be done, yet it is rather suited for the small datasets, where expert knowledge (which you propose to implement) can overcome risks of overfitting and/or biasing For big data, it would be more reasonable to look for better model, then better preprocessing - like deep learning
