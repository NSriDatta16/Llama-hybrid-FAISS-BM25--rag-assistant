[site]: datascience
[post_id]: 51468
[parent_id]: 
[tags]: 
Why can't my neural network learn how to predict the squares of natural numbers?

I want my neural network to learn to predict the square $n+1$ number having $n$ number. I am considering a regression problem. That's what I'm doing: from keras.preprocessing import sequence from keras.models import Sequential from keras.layers import Dense, Embedding, Dropout import numpy as np x = np.array([[int(i)] for i in range(1001)]) y = np.array([x*x for x in range(1001)]) model = Sequential() model.add(Dense(100, activation = 'relu', input_dim = 1)) model.add(Dense(50, activation = 'relu')) model.add(Dense(10, activation = 'relu')) model.add(Dense(1)) model.compile(loss='mse',optimizer='adam', metrics=['mae']) model.fit(x,y,epochs= 2500) pred = model.predict([1001]) print(pred) However, as a result, I get [[ 1000166.8125]] instead 1002001 . Update: x = np.array([[int(i)] for i in range(80001)]) y = np.array([x*x for x in range(80001)]) print(x) print(y) model = Sequential() model.add(Dense(20, activation = 'relu', input_dim = 1)) model.add(Dense(20, activation = 'relu')) model.add(Dense(1)) adam = optimizers.Adam(lr=0.0002,beta_1=0.9, beta_2=0.999, epsilon=None, decay=0.0, amsgrad=False,) model.compile(loss='mse',optimizer=adam, metrics=['mae']) model.fit(x,y,epochs= 3000) pred = model.predict([80001]) print(pred) model.save_weights("test.h5") model_json = model.to_json() json_file = open("test.json", "w") json_file.write(model_json) json_file.close() result: [[ 4.81360333e+09]]
