[site]: stackoverflow
[post_id]: 3607265
[parent_id]: 213527
[tags]: 
I recently came across this problem and just want to share my thoughts. "Memory efficient" as I interpreted it is the ability to search a long string of size M given only N amount of available memory, M > N. This is alternative to an efficient use of memory per character available in the string to search. And I feel may be more relevant to the original poster's embedded environment (that may have a large storage). Regardless of which algorithm you use to do the comparison (the more efficient the better of course), I would choose to use a circular buffer (which should be greater than the string you're search for, at least 2X perhaps?) and continuously load the stream of characters to the buffer while the search algorithm advances. The search algorithm must be able to know how to wrap around the circular buffer (or add a level of indirection to hide the circular buffer from the search algorithm).
