[site]: crossvalidated
[post_id]: 360296
[parent_id]: 360283
[tags]: 
I will answer your questions in reverse order: 2) Your approach is correct. This is called recursive forecasting: Generate a forecast for one step ahead $\hat{y}_{t+1} = f(y_t)$, then use that to generate a forecast for two steps ahead $\hat{y}_{t+2} = f(\hat{y}_{t+1})$, etc...until you have $\hat{y}_{T}$ for your desired $T$ steps ahead. This approach is used by most statistical forecasting models such as ARIMA and Exponential Smoothing. We could say that it is the standard approach. Another possibility is direct forecasting - where your build a model for forecasting $\hat{y}_T$ directly. This is called direct forecasting, and although theoretically it shows promise, I haven't seen it widely used except sometimes when using neural networks for forecasting. See here for details. 1) You could do that, and it should work (depends on your data obviously), but you would get a similar result using Holt-Winters, STL or Seasonal ARIMA. I suspect you are not applying ARIMA correctly if you think that your data is seasonal but your are still getting bad results. In response to @Ben's comment that The auto-regression is at a fixed lag, but I don't agree that this leads to a seasonal part with fixed frequency and phase angle. (I should have said: it is the phase angle that gets thrown off here.) Run a seasonal ARIMA for a long time and you will see that random error eventually pushes the seasonal fluctuation out-of-sync with what it was at the start of the series. As I understand it, you cannot mimic a periodic regression with seasonal ARIMA for this reason. This is not correct. The seasonality is structurally built into a Seasonal ARIMA model (in the same way that it is in a Holt-Winters or Seasonal BSTS model), so it can't deviate from the frequency, even after long term forecasts. Below is an example of an ARIMA model of a monthly seasonal series where a long term forecast maintains a fixed seasonality even with a very, very long forecast horizon (216 steps ahead) - generate using the R Forecast package auto.arima() function:
