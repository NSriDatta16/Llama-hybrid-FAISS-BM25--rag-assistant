[site]: crossvalidated
[post_id]: 224994
[parent_id]: 224989
[tags]: 
Is this a machine learning dataset? What is it about? Be very careful about over-fitting . There can be a huge difference between fitting well a model and obtaining good forecasts. Again see more about it here . Now, answering your question, first, you need to find the values for x you are interested on. The theory behind your model can guide you on this. You could select equally spaced values, or follow a pattern observed in your x data. Again, this depends on your interest. Second, you need to predict values of y from these x . There are a few techniques. On the one hand, if you just want point forecasts, just plug the x-axis values you want to predict into the model, and you will get the point forecast. Alternatively, you can do bootstrapping to get a distribution of forecasts. In Matlab these techniques are already integrated with Machine Learning and related toolbox. Notice that they do not come with the standard Matlab. You might consider using R instead. It's free and there are plenty of toolbox to do bootstrapping available. Finally, I want to stress again the problem of over-fitting. The way around this is applying cross-validation techniques. The idea is that you partition your data in such a way that the data from where you estimate the model is different from the data where you test the model. This method allows you to run out-of-sample prediction, which is regarded as the crux test for the capacity of the model to predict. In-sample prediction is a weak test for the model. In the end, cross-validation allows you to find the optimal point between fit and prediction accuracy. Just as before, cross-validation techniques are also integrated with Machine Learning and related toolbox in Matlab. Here again an alternative is to use R.
