[site]: stackoverflow
[post_id]: 3509104
[parent_id]: 738795
[tags]: 
Etny showed an elegant trick using a double negative ! Otherwise to validate hex numbers, I'd have to do something like (Mac LIKE '[a-f0-9][a-f0-9][a-f0-9]'..12 times) since I'm validating a MAC address and annoyingly, you cant specify repetition like \d{12} in regex. Plus I needed it to have a fixed size, so here is my adaptation: CREATE TABLE #HexTest ( Mac varchar(12) CONSTRAINT CK_Mac_12Hex_Only --names make error msgs useful! CHECK (Mac NOT LIKE '%[^a-f0-9]%' AND LEN(Mac) = 12) ) INSERT INTO #HexTest values('5ca1ab1eD00d') -- good INSERT INTO #HexTest values('DeadDa7aba5e') -- good INSERT INTO #HexTest values('Dad`sDebac1e') -- bad chars INSERT INTO #HexTest values('Ca5cadab1e') -- too short INSERT INTO #HexTest values('Deba7ab1eDeal') -- too long, fails for size DROP TABLE #HexTest I was trying to do something like this: CHECK (len(CONVERT(binary(6), Mac, 2)) = 6) (which works in Oracle with hextoraw ), but it throws an error for invalid values here. So it didn't work. I wish there was a function that tries to parse and just returns null when there is an error. Maybe something like Parse vs. TryParse or maybe if IsNumeric worked for Hex...
