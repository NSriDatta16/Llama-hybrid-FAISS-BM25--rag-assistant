[site]: stackoverflow
[post_id]: 2224748
[parent_id]: 2224158
[tags]: 
To test a CGI program from the command line, you fake the environment that the server creates for the program. CGI.pm has a special offline mode, but often I find it easier not to use because of the extra setup I need to do for everything else my programs typically expect. Depending on the implementation of your script, this involves setting many environment variables, which you can do from a wrapper script that pretends to be the server: #!/bin/bash export HTTP_COOKIE=... export HTTP_HOST=test.example.com export HTTP_REFERER=... export HTTP_USER_AGENT=... export PATH_INFO= export QUERY_STRING=$(cat query_string); export REQUEST_METHOD=GET perl program.cgi If you're doing this for a POST request, the environment is slightly different and you need to supply the POST data on standard input: #!/bin/bash export CONTENT_LENGTH=$(perl -e "print -s q/post_data/"); export HTTP_COOKIE=... export HTTP_HOST=test.example.com export HTTP_REFERER=... export HTTP_USER_AGENT=... export PATH_INFO=... export QUERY_STRING=$(cat query_string); export REQUEST_METHOD=POST perl program.cgi You can make this as fancy as you need and each time you want to test the program, you change up the data in the query_string or post_data files. If you don't want to do this in a shell script, it's just as easy to make a wrapper Perl script.
