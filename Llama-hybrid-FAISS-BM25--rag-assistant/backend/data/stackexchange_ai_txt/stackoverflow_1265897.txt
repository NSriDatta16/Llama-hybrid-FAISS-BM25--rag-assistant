[site]: stackoverflow
[post_id]: 1265897
[parent_id]: 1263886
[tags]: 
Well, let me be the one to tell you - simply do it. Concentrate on whatever requirements you have now but do not try to address all possible future features, imaginary requirement changes and the various courses of development. There is a great article written by Joel: Don't Let Architecture Astronauts Scare You . Analyze whatever requirements you have, whatever features your software needs, look at your previous experience with similar projects and go for it. A great architecture is never born right out of the first brain storming session. You start with one approach, adjust your course as the weather changes, have code review sessions that will yield ideas to improve the architecture, refactor some bad code pieces into good and reusable components, then finally your garage will be transforming into a castle. Follow the KISS principle and avoid premature optimization. Do you have a consistent project design you often use? Of course. An individual or a team develops his own style, the techniques to solve typical problems, reusable components which altogether will form your tool set. Why would your throw them away each time your start a new project? are you n-tier from the start? I try to be. It serves the goals of consistency, clean structure and the separation of concerns. or do you evaluate as each project comes in That as well. There may be a different way to address the problem and solve it in the most efficient manner.
