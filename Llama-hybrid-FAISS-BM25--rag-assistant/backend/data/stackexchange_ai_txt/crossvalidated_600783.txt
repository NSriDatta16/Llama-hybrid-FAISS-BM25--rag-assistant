[site]: crossvalidated
[post_id]: 600783
[parent_id]: 
[tags]: 
Test statistics for significant change points from First Derivative of GAM smooth?

I'm using gratia_0.7.3 Edits with changes from Gavin Simpson's comments. Clarification: I am interested in knowing during which years CPUE changes significantly. I am running these models for 3 species in 3 rivers. I have 3 sets of models the first is changes in angler catch rate, the second is change in fisheries size relative abundance, and the third is changes in age-0 relative abundance. Data here is simulated based on angler catch rate (CPUE) of one species in one river. The second and third set of models use electrofishing survey data. Based on Comments 1 and 2 I refit models with differing distributions and selected the Tweedie distribution with response CPUE in the model formula. A few questions from comments and other posts I've read... Assumption: Estimation of the first derivative is unbiased I'm not sure how to check/ensure this? To include uncertainty due to smoothing parameter being estimated set unconditional = TRUE . Where should I use unconditional = TRUE in predict() , derivatives() , or both? First , I need create new_data for the years 2001 to 2021. Below n = 200 rows are generated using seq_min_max() from gratia for years 2001 to 2021. library(mgcv) library(gratia) library(dplyr) library(magrittr) library(ggplot2) new_data Second , I generate a prediction matrix from my current model for new_dat . I am using type="link (as suggested comment 3). I'm going to try including unconditional = TRUE to include uncertainty due to smooth parameter estimation. Question: meant for predict() , derivatives() , or both? pred_mat Third , I use derivatives() from gratia to get the first order derivative with simultaneous ( $95\%$ ) confidence intervals from my gam() model fit ( tw_fit ) for the smooth term s(year) over the study period (2001 to 2021 in new_data ). Arguments type = "central" type of finite difference used. using central derivative so I am not extrapolating too much beyond the start/end of the time series (as suggested comment 4). n = 200 evaluating the derivative at 200 points suggested in comment 4. eps = 1 to get derivative over an entire year (suggested comment 4) unconditional = TRUE ( I hope I'm not compounding this by using it in both pred() and derivatives() ? ) fd_tw_fit eval & lower eval incr[!want | miss] $fit, d = fd_tw_fit$ derivative, upper = fd_tw_fit $upper, lower = fd_tw_fit$ lower, eval = 0) incr % fd_tw_fit[.,] decr % fd_tw_fit[.,] Plotting the derivative and simultaneous confidence intervals. draw(fd_tw_fit, alpha = 0.2) + theme(axis.text.x = element_text(angle = -45)) + scale_x_continuous(breaks = seq(2001, 2021, 1), labels = seq(2001, 2021, 1)) + labs(title = "Simultaneous CI first derivative tw() GAM") + geom_hline(yintercept = 0) Plotting GAM fit on response scale Transforming predicted data to the response scale with exp() (comment 3). # Calculate upper and lower confidence Intervals upper_2se $fit) + (pred_mat$ se.fit*2) lwr_2se $fit) - (pred_mat$ se.fit*2) # Transform to Response scale upper_2se $fit) new_data %<>% dplyr::mutate(pred = pred_fit, lwr_2se = lwr_2se, upr_2se = upper_2se, change_point = ifelse(new_data$ year %in% incr $data, "incr", ifelse(new_data$ year %in% decr$data, "decr", "NS") ) %>% factor()) raw_dat % select(year, CPUE) %>% dplyr::mutate(change_point = "NS" %>% factor()) create ggplot Response scale with Change Points ggplot(data = new_data, aes(x = year, y = pred, color = change_point))+ geom_path(aes(group = 1), size = 1.25) + scale_color_manual(values = c("NS" = "black", "incr" = "blue", "decr" = "red")) + geom_ribbon(aes(ymin = lwr_2se, ymax = upr_2se), colour = "grey", alpha = 0.2, linetype = "blank") + geom_point(data = raw_dat, aes(x = year, y = CPUE, color = change_point), size = 1.5, alpha = 0.2, colour = "black") New simulated data sim_dat
