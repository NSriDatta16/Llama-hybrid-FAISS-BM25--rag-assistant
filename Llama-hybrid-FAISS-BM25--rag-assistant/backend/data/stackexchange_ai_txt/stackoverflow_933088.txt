[site]: stackoverflow
[post_id]: 933088
[parent_id]: 
[tags]: 
Clipping FFT Matrix

Audio processing is pretty new for me. And currently using Python Numpy for processing wave files. After calculating FFT matrix I am getting noisy power values for non-existent frequencies. I am interested in visualizing the data and accuracy is not a high priority. Is there a safe way to calculate the clipping value to remove these values, or should I use all FFT matrices for each sample set to come up with an average number ? regards Edit: from numpy import * import wave import pymedia.audio.sound as sound import time, struct from pylab import ion, plot, draw, show fp = wave.open("500-200f.wav", "rb") sample_rate = fp.getframerate() total_num_samps = fp.getnframes() fft_length = 2048. num_fft = (total_num_samps / fft_length ) - 2 temp = zeros((num_fft,fft_length), float) for i in range(num_fft): tempb = fp.readframes(fft_length); data = struct.unpack("%dH"%(fft_length), tempb) temp[i,:] = array(data, short) pts = fft_length/2+1 data = (abs(fft.rfft(temp, fft_length)) / (pts))[:pts] x_axis = arange(pts)*sample_rate*.5/pts spec_range = pts plot(x_axis, data[0]) show() Here is the plot in non-logarithmic scale, for synthetic wave file containing 500hz(fading out) + 200hz sine wave created using Goldwave.
