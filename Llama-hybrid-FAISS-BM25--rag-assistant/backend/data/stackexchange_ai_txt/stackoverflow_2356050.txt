[site]: stackoverflow
[post_id]: 2356050
[parent_id]: 
[tags]: 
Weird Javascript Bug (jQuery) in simple Testpage

I'm in the process of writing a Mediawiki extension. I'm actually at a very very early stage ;). You can find the code here (okay, i can only submit one link, so imagine a github url) /eugenkiss/discussion-extension I've got a weird jQuery problem that I just can't resolve even by utilising firebug and trying to debug my code. I've uploaded the current code and an example here: http://jsfiddle.net/NMpU5/ Try to open a discussion and click on at least two "reply"-links. Then click the cancel button of the first form that appeared. I don't know why, but when you click the cancel button another form is closed instead of the desired one. You can also vary this. For instance, open two forms and close the last openend one. At first it seems to work. But when you try to close the other form (by clicking cancel) it does not disappear. However, the event is triggered as shown by firebug. Sometimes, when I click another reply anchor after that, there will be opened as much forms as I clicked the seemingly not working cancel button of the other form. Well, for my desired extension I could of course limit the existence of opened forms to one - why else would you need two or more opened? But I just want to find the damn bug since I already invested a lot of time in finding it! It's a precious bug for me, you know ;) BTW, I'm using jQuery 1.4.2 javascript $(document).ready(function() { // Hide the discussion bodys per default $(".discussion").addClass("closed") .children(".discussion-body").hide(); // Register two custom events for the individual discussion divs // "open" & "close" in order to make the discussion bodys // collapsable and be able to toggle the events by clicking // the "discussion-header-button" anchor $(".discussion") .bind("open", function(e) { if(!$(this).hasClass("opened")) { $(this).children(".discussion-body").slideDown(); $(this).find(".discussion-header-button").html("[-]"); $(this).addClass("opened"); $(this).removeClass("closed"); } }) .bind("close", function(e) { if(!$(this).hasClass("closed")) { $(this).children(".discussion-body").slideUp(); $(this).find(".discussion-header-button").html("[+]"); $(this).addClass("closed"); $(this).removeClass("opened"); } }) .find(".discussion-header-button").click(function(){ relatedDiscussion = $(this).parents(".discussion"); if(relatedDiscussion.hasClass("closed")) { relatedDiscussion.trigger("open"); } else if(relatedDiscussion.hasClass("opened")) { relatedDiscussion.trigger("close"); } }); // Register custom "showForm" & "destroyForm" events on posts // in order to make the "Reply" button work // TODO: Maybe add "preview" & "submit" $(".discussion-body .post") .bind({ showForm: function(){ post = $(this); postBody = post.find(".post-body").first(); postHeader = post.find(".post-header").first(); postBody.append(postCommentFormHtml); replyLink = postHeader.find(".reply"); replyLink.unbind(); form = postBody.find(".post-comment-form"); form.slideDown(); // create actions for the form buttons form.find(".cancel").click(function(){ post.triggerHandler("destroyForm"); }); form.find(".preview").click(function(){ // Hier muss mit Ajax und der Datenbank gespielt // werden um ein preview erstellen zu können }); form.find(".submit").click(function(){ // Hier muss mit Ajax und der Datenbank gespielt // werden um den Post abschicken zu können }); }, destroyForm: function(){ post = $(this); postBody = post.find(".post-body").first(); postHeader = post.find(".post-header").first(); replyLink = postHeader.find(".reply"); replyLink.click(replyAction); form = postBody.find(".post-comment-form"); form.slideUp(function(){ $(this).remove(); }); } }); //$(".discussion-post-comment").click(createPostCommentForm); $(".discussion .reply").click(replyAction); function replyAction(event){ // Note: It is important to use triggerHandler instead of trigger // otherwise the "showForm" event of all parents is triggered // recursively (bubbling) and this is not desired event.preventDefault(); relatedPost = $(this).parents(".post").first(); relatedPost.triggerHandler("showForm"); } }); postCommentFormHtml = "\ \ \ \ \ \ \ \ \ ";​ Html [+] Diskussion: 3 Kommentar(e) Post Comment Eugen 2010-02-25 12:32:30 Reply Edit Delete Ich denke das sollte anders sein! Markus 2010-02-25 12:32:31 Reply Edit Delete Ich denke nicht Jan 2010-03-25 12:32:30 Reply Edit Delete Mal was ganz anderes: Denkt ihr das selbe was ich denke? Edit: I want to add that changing the id's to classes didn't help. Plus, if that helps you: I discovered (using Firebug) that the "post" (and therefore "postbody") variable (in the "destroyForm" event) is actually pointing at the wrong post and therefore the wrong form is deleted. But it is beyond me why the post variable is pointing at the wrong post in the first place Edit2: changed alls ids to classes http://jsfiddle.net/NMpU5/1/
