[site]: crossvalidated
[post_id]: 623042
[parent_id]: 623041
[tags]: 
They are completely different and unrelated things. MLPRegressor is a neural network model used for a regression problem. There are one or more target variables to predict. The "multi" in the name regards multiple layers of the network used for making the predictions. MultiOutputRegressor is a Python class used to fit a number of models of the class given by the estimator argument, with a separate model per each target variable. This is just a handy way to train multiple models. I am curious about the reason for the observed difference in performance when using MLPRegressor alone versus when using it with MultiOutputRegressor. In the first case, you have a single model that predicts $k$ targets, in the second case, you have $k$ different models each predicting a different target. Obviously, they are not the same. Depending on a particular scenario, each approach may have pros and cons.
