[site]: stackoverflow
[post_id]: 5446089
[parent_id]: 5445133
[tags]: 
Daniel, scanning the exe files to detect if imports some dll which is used to internet access is not reliable, because exist many methods to access the internet without import directly a dll. for example you can use the LoadLibrary function which load a dll dynamically or a COM object like the WinHttpRequest Object using late binding. for example you can create a project like this {$APPTYPE CONSOLE} uses ActiveX, ComObj, SysUtils; Procedure HttpGetText(const Url:string); var objHTTP : OleVariant; begin objHTTP:=CreateOleObject('WinHttp.WinHttpRequest.5.1'); objHTTP.Open('GET', Url, False); objHTTP.Send(); Writeln(objHTTP.ResponseText); end; begin try CoInitialize(nil); try HttpGetText('https://stackoverflow.com/questions/5445133/has-exe-internet-access-block-it'); Readln; finally CoUninitialize; end; except on E:Exception do begin Writeln(E.Classname, ':', E.Message); Readln; end; end; end. Now using a tool to check the dll dependency you will see a small list like this oleaut32.dll advapi32.dll user32.dll kernel32.dll ole32.dll none of these dll are used to access internet directly. I think which instead of detect the internet access you can monitor the TCP and UDP connections of any application using a function like GetExtendedTcpTable (check delphi samples here and here ) from here you determine the port and server which the application is accessing and inform to the user. or annother way using something more advanced like Winpcap parsing the network packets captured.
