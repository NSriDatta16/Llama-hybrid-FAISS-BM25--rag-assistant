[site]: datascience
[post_id]: 62296
[parent_id]: 
[tags]: 
Low ROC AUC with good Information Value

I'm trying to build my first application scorecard with Logistic Regression and getting low ROC AUC score (about 0.7). Dataset is about 25'000 rows with 10% of event-rate. My steps: Filling missing and rare values. WOE binning. Calculating Information Value and deleting low IV ( Remaining variables IV values 0.107, 0.112, 0.116, 0.164, 0.191, 0.265, 0.288, 0.321, 0.386, 0.388, 0.457) Removing highly-correlated variables with 0.9 cut-off. (One var with lower IV was deleted) Training model: param_grid = {'penalty': ['l2'], 'C': 10.0 ** arange(-5, 6)} estimator = LogisticRegression() search = GridSearchCV(estimator, param_grid) s_train = search.fit(X_train,y_train) s_train.best_score_ Getting Accuracy = 0.87 estimator = s_train.best_estimator_ estimator.coef_ pairs = list(zip(X.columns, estimator.coef_[0])) pairs = sorted(pairs, key = lambda p: abs(p[1])) pairs = pd.DataFrame(pairs) pairs = pairs.rename(columns={0: 'VAR', 1 : "Coef_LR"}) coefs = pairs.sort_values(by = 'VAR') intercept = estimator.intercept_ search.best_score_,coefs, intercept Getting coefs (0.00215, 0.00257, 0.00281, 0.00318, 0.00399, 0.00553, 0.006, 0.00757, 0.0084, 0.01051) and -0.03119 Intercept ROC AUC and Gini: y_pred_proba = estimator.predict_proba(X_test)[:,1] fpr, tpr, _ = roc_curve(y_test, y_pred_proba) auc = roc_auc_score(y_test, y_pred_proba) gini = (auc-0.5)/0.5 print(('AUC = {}').format(round(auc,3))) print(('Gini = {}').format(round(gini,3))) The results is always about 'ROC AUC'= 0.7. I'm trying to get at least 0.8. What should I pay attention to?
