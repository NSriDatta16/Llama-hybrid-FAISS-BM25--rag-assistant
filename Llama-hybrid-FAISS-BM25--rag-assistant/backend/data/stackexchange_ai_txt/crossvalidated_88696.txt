[site]: crossvalidated
[post_id]: 88696
[parent_id]: 
[tags]: 
Discrepancy between log likelihood Harrell's C Index and brier score for the evaluation of a Cox regression

I am evaluating a dataset of ~400 subjects and 10 covariates trying to fit a Cox ph model for predicting survival in AML patients. To evaluate the models I am using a bootstrapping procedure of 50 iterations (sampling with replacement). Models are built on the training set and tested on the test set. For each model I calculate Harrell's C-Index (using rcorr.cens from the Hmisc package) and the Brier score (using the peperr package). I then average the results over the 50 iterations. I get an average C Index of 0.70 and a Brier score of 0.08. My problem: When I check the p values of the likelihood ratio test / Wald test of each individual model they are non-significant. Of note, this is a subset analysis. When I build models using other covariates in the dataset I get similar CIndex/Brier scores as well as highly significant likelihood ratio test/Wald tests. Questions: What could be the reason for the discrepancy between the evaluation on the testset (CIndex and Brier) and the evaluation on the training set (Likelihood ratio/Wald) Some covariates are found to be significant in the Cox models (though the model itself is not). Is there any meaning for these covariate considering I can merge these results across 50 iterations ? p.s. - I am aware that I am using the LASSO regularization (glmnet) for feature selection which is prone to overstating my covariates. This is a limitation of my analysis which I am attempting to minimize by the bootstrapping procedure. Regardless, I would like to figure out what is the reason for the discrepancy in my results. I am attaching my code. Unfortunately the data are PHI and cannot be shared. library("survival") library ("glmnet") library ("c060") library ("peperr") library ("Hmisc") ##----------------------------------------------------------------------------------- ## Accessory Functions ##----------------------------------------------------------------------------------- ## ## This function takes a predictor matrix and a Surv obj and uses the glmnet lasso ## regularization method to select the most predictive features and create a coxph ## object predict_matrix is the 'dataset' reformated to replace categorical variables ## to binary with dummy dataset2predictmatrix 0 selectedBeta list with glmnet.cv glmnet.obj selectecVar reformat_dataSet list(glmnet.cv=glmnet.cv, glmnet.obj=glmnet.obj, glmnet.cox=glmnet.cox, nonzero.coef=nonzero.coef, selectedVar=selectedVar, reformat_dataSet=reformat_dataSet # , glmnet.cox.meaningful=glmnet.cox.meaningful, selectedVarCox=selectedVarCox ) } ## This function takes as input a surv_obj (testdate Surv object) and a testdata prediction matrix. Calculates a Brier score ## for either a cox model or a glmnet. Returns an ipec object which is the Brier score (requires peperr and c060) brier_calc glmnet.obj->glmnet.cox train_results_list
