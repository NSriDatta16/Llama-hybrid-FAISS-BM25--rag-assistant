[site]: stackoverflow
[post_id]: 1785622
[parent_id]: 1785572
[tags]: 
You use preprocessor directives when you need to do something outside of the scope of the actual application. For instance, you'll see preprocessing done to include or not include code based on the architecture the executable is being built for. For example: #ifdef _WIN32 // _WIN32 is defined by Windows 32 compilers #include #else #include #endif Preprocessor directives are also used to guard includes so that classes/functions etc. are not defined more than once. #ifndef MY_CLASS_6C1147A1_BE88_46d8_A713_64973C9A2DB7_H_ #define MY_CLASS_6C1147A1_BE88_46d8_A713_64973C9A2DB7_H_ class MyClass { .... }; #endif Another use is for embedding versioning inside of code and libraries. In the Makefile you have something along the lines of: -D MY_APP_VERSION=4.5.1 While in the code you have cout
