[site]: stackoverflow
[post_id]: 1001822
[parent_id]: 1001714
[tags]: 
You can use Ant to set up, compile, WAR , and deploy your solution. You can then execute one click in Eclipse to run that Ant target. Here are examples of each of the steps: Preconditions We'll assume that you have your code organized like: ${basedir}/src : Java files, properties, XML config files ${basedir}/web : Your JSP files ${basedir}/web/lib : Any JARs required at runtime ${basedir}/web/META-INF : Your manifest ${basedir}/web/WEB-INF : Your web.xml files Set up Define a setup task that creates the distribution directory and copies any artifacts that need to be WARred directly: Copying web into dist Compile Build your Java files into classes and copy over any non-Java artifacts that reside under src but need to be available at runtime (e.g. properties, XML files, etc.): Build WAR Create the WAR itself: Deploy Finally, you can set up a task to deploy the WAR directly into your Tomcat deploy location: Click and go! Once all this is set up, simply launching the default target from Eclipse will compile, WAR, and deploy your solution. The advantage of this approach is that it will work outside Eclipse as well as within Eclipse and can be used to easily share your deployment strategy (e.g. via source control) with other developers who are also working on your project.
