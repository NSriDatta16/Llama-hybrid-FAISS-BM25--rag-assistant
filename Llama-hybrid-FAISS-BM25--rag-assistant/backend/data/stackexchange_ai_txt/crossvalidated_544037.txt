[site]: crossvalidated
[post_id]: 544037
[parent_id]: 544027
[tags]: 
The 'effect size' in such a computation depends on $\sum (\mu_i - \mu_\cdot)^2,$ where $\mu_\cdot$ is the average of $\mu_i,$ but some power and sample size procedures use the size of $|\mu_i-\mu_j|$ you want to be sure to detect. Also, traditional ANOVAs require $\sigma_i^2$ to be the same. Various software programs for power and sample size make somewhat different simplifying assumptions, and this accounts for some of the differences among their results. R program to compute power of one-factor ANOVA given means, standard deviations, and numbers of replications at each of 3 levels. I like to do some preliminary (or backup) simulations with specified group means and variances, possibly comparing traditional ANOVA with an implementation of Welch-ANOVA, such as R's oneway.test , which doesn't assume equal variances. Then I know exactly what the inputs are. For one choice of parameters similar to the ones you suggest, it seems that about 70 replications per level are required for power about 80%. (A run with 26 replications per level gave power about 37%.) set.seed(2020) m = 10^5; pv=numeric(m) n = 70 for(i in 1:m) { x1 = rnorm(n, 10.5, 1.3) x2 = rnorm(n, 11, 2) x3 = rnorm(n, 11.5, 2.5) x = c(x1,x2,x3) gp = as.factor(rep(1:3, each=n)) pv[i] = oneway.test(x~gp)$p.val } mean(pv Then when I start to use various 'power and sample size' procedures, I will have a reality check on the results I get from their various assumptions and simplifications. (Or from any misunderstanding I may have how to use them.) Notes: (1) My program uses the R procedure oneway.test . At each iteration R does all the formatting for a printed display of results, of which I use only the P-value. An advantage is that I know I'm getting the power directly from oneway.test , not from something I programmed, hoping for equivalence. A disadvantage is longer running time. (If one is doing rough exploration, it is quicker to use $10^4$ iterations for the simulation.) (2) I used a for-loop instead of one of several more highly recommended replication structures in R. I find that the for-loop is easier for people unfamiliar with R to understand.
