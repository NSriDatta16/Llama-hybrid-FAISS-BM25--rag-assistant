[site]: stackoverflow
[post_id]: 547290
[parent_id]: 
[tags]: 
Is the "empty base optimization" in GCC configurable?

Consider these types: struct A {}; struct B : A { int i; }; sizeof(A) > 0 as required by the standard. sizeof(B) should be 4 due to the empty base optimization. Yet on GCC 4.1.1 it's 5 (I'm using a pack of 1 in this area). And inconsistently - some of my files are getting it, some are not. Can't be sure what the differences are yet, we have a large prjoect. On the other three compilers I'm using (by Microsoft and Freescale), I don't have this problem. The empty base optimization is optional apparently, according to this article . Is there a compiler option or pragma to tune this in GCC 4.1.1? I can work around the issue but I would like to understand what's going on first. I Googled for a while and can't seem to find anything.
