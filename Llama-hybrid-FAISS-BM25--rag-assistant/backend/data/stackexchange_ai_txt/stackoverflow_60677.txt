[site]: stackoverflow
[post_id]: 60677
[parent_id]: 60653
[tags]: 
Variables declared with static/global scope are always initialized under VC++ at least. Under some circumstances there can actually be a difference in behaviour between: int x = 0; int main() { ... } and int x; int main() { ... } If you are using shared data segments then VC++ at least uses the presence of an explicit initialization along with a #pragma data_seg to determine whether a particular variable should go in the shared data segment or the private data segment for a process. For added fun consider what happens if you have a static C++ object with constructor/destructor declared in a shared data segment. The constructor/destructor is called every time the exe/dll attaches to the data segment which is almost certainly not what you want. More details in this KB article
