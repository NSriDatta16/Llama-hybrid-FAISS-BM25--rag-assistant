[site]: stackoverflow
[post_id]: 1924224
[parent_id]: 1924135
[tags]: 
Instead of abstracting your SQL in the code, it's better to use a database's build in functionality: stores procedures (SP) or some databases only use DB functions. It's not sound to abstract DB work into the code, because you're making the assumption that the table structure will never change (a major mistake on an application that gets constant changes and improvements). By creating SPs you make a SQL call like: $query = "EmployeeAdd('joe','smith','1970-12-22')"; Now your code has the benefit of being abstracted (and even somewhat non database specific) plus you can change your table structure on a whim and not have to change a single line of code. Of course keep in mind to follow this design mindset you need to create an EmployeeGet() and an EmployeeUpdate() functions and it's normal to have multiple versions of these, such as: EmployeeGetByID() EmployeesGetByJobID() Pay special notice to the syntax, as it's important you go by Data + Action + How becuase after you write these functions for your entire database, if you were to call them GetEmployeeByID() then you'll have dozens of SPs listed, all the Gets together, which makes for poor organization.
