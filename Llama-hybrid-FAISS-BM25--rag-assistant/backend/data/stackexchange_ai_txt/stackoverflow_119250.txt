[site]: stackoverflow
[post_id]: 119250
[parent_id]: 119107
[tags]: 
(0..50).to_a.sort{ rand() - 0.5 }[0..x] (0..50).to_a can be replaced with any array. 0 is "minvalue", 50 is "max value" x is "how many values i want out" of course, its impossible for x to be permitted to be greater than max-min :) In expansion of how this works (0..5).to_a ==> [0,1,2,3,4,5] [0,1,2,3,4,5].sort{ -1 } ==> [0, 1, 2, 4, 3, 5] # constant [0,1,2,3,4,5].sort{ 1 } ==> [5, 3, 0, 4, 2, 1] # constant [0,1,2,3,4,5].sort{ rand() - 0.5 } ==> [1, 5, 0, 3, 4, 2 ] # random [1, 5, 0, 3, 4, 2 ][ 0..2 ] ==> [1, 5, 0 ] Footnotes: It is worth mentioning that at the time this question was originally answered, September 2008, that Array#shuffle was either not available or not already known to me, hence the approximation in Array#sort And there's a barrage of suggested edits to this as a result. So: .sort{ rand() - 0.5 } Can be better, and shorter expressed on modern ruby implementations using .shuffle Additionally, [0..x] Can be more obviously written with Array#take as: .take(x) Thus, the easiest way to produce a sequence of random numbers on a modern ruby is: (0..50).to_a.shuffle.take(x)
