[site]: stackoverflow
[post_id]: 3150225
[parent_id]: 3144129
[tags]: 
i don't quite understand why you have formed the inner join; you are already querying the ORDER table, so you can refer to the current row in it. Perhaps the following would do? SELECT SUM(price+shipping_price) AS total_sales, COUNT(id) AS total_orders, AVG(price+shipping_price) AS order_total_average, (SELECT SUM(quantity) FROM `order_product` WHERE `order`.id = order_product.order_id) AS total_units, SUM(price+shipping_price)/'.$dateDifference['total']['days'].' AS daily_average FROM `order` WHERE created >= '.$startTimestamp.' AND created getId().' Edit: good point, I'd overlooked that. I'd suggest adding a subquery to find the returned total and subtracting that in the total_units calculation, perhaps along the following lines... SELECT SUM(price+shipping_price) AS total_sales, COUNT(id) AS total_orders, AVG(price+shipping_price) AS order_total_average, ((SELECT SUM(quantity) FROM `order_product` WHERE `order`.id = order_product.order_id) - (SELECT SUM (quantity) FROM order_return, order_return_product WHERE order_return.order_id = order.order_id AND order_return.id = order_return_products.return_id)) AS total_units, SUM(price+shipping_price)/'.$dateDifference['total']['days'].' AS daily_average FROM `order` WHERE created >= '.$startTimestamp.' AND created getId().'
