[site]: stackoverflow
[post_id]: 3720580
[parent_id]: 3720517
[tags]: 
Eclipse is committed to Git, as Alblue put it last year : At this point, the future of Eclipse and DVCS lies with eGit, whether it's good or not. It is quite likely that the Eclipse 3.6 series will have eGit support by default; and it's based on the same JGit library that NetBeans will use for the NetBeans implementation, so at least it's likely to be kept up to date. There was a long debate about the merits of different DVCSs on Eclipse bug 257706 and the net result was for Git as the future DVCS for Eclipse, rather than other DVCSs. You will find a first tutorial in this EclipseCon2010 presentation . And a more detailed page in the Eclipse wiki . You can see both Mercurial and Git in action in Eclipse in those Ekke's pages . vs. Ekke's conclusion at the time (March 2010) was a nice summary of where the two DVCS tools stand with Eclipse: Perhaps you ask: why Mercurial ? Didn’t you know that sooner or later Eclipse projects will use EGit / JGit ? Yes – I know and I’ll of course use EGit to access Eclipse Projects. But I was looking for a solution working now and resolving the needs of our workflows. Working with DVCS you get much freedom how to organize and use your repositiories where you can easy push / pull around between all of them. This won’t be always easy to solve – but the tool you’re using should be. I really appreciate the hard work from EGit / JGit team be done last months and there’s much to do until release of Helios. Thanks for fixing bugs and I’ll support you with testing and reporting issues. Maybe in some months the world looks different – there are some ways to convert hg to git http://hg-git.github.com/ or fast-export. I’ll try these converter – projects after EclipseCon to provide redView’s and red-open’s sources also as Git Repositories.
