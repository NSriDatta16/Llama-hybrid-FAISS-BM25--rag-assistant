[site]: stackoverflow
[post_id]: 139639
[parent_id]: 
[tags]: 
.NET Architectural issue: 2 Web Services, how do I change which one is used at run time?

I am working with Reporting Services and Sharepoint, I have an application that leverages reporting services however a client would like our application integrated into sharepoint. Currently we are tightly coupled to the ReportService.asmx webservice which exposes various methods for performing operations. Reporting Services has something called "Sharepoint Integration mode" when enabled the report server works differently and Sharepoint is used to manage the reports. Sharepoint adds a new web service called ReportService2006.asmx which is almost exactly the same. Now our application uses a web reference to the ReportService and uses various objects exposed by the service. ReportService2006 has exactly the same objects but they are obviously in a different namespace e.g I have 2 web references - 1 to each service so there is an object MyApplication.ReportService.CatalogItem and another MyApplication.ReportService2006.CatalogItem. I've tried to use dependency injection to absract the Service out of our application coupled with a factory pattern to determine which implementation of my interface to instantiate. Heres my interface. I've simplified it to include only the calls I need for this application. using System; using NetworkUserEncrypt.ReportService; namespace MyApplication.Service { public interface IReportingService { CatalogItem CreateDataSource(string DataSource, string Parent, bool Overwrite, DataSourceDefinition Definition, Property[] Properties); void DeleteItem(string Item); DataSourceDefinition GetDataSourceContents(string DataSource); byte[] GetReportDefinition(string Report); CatalogItem[] ListChildren(string Item); } } So I have 2 implementations of this each instantiating a different web service e.g: namespace MyApp.Service.Implementation { class ReportingServiceImpl : IReportingService { ReportingService _service = null; public ReportingServiceImpl() { ReportingService _service = new ReportingService(); } /* SNIP */ } } and namespace MyApp.Service.Implementation { class ReportingService2006Impl : IReportingService { ReportingService2006 _service = null; public ReportingService2006Impl() { ReportingService2006 _service = new ReportingService2006(); } /* SNIP */ } } So the plan is I can inject these into my ServiceWrapper at run time. However - if you'll notice the interface is tied to the ReportService and some of the methods return objects that are from the web reference e.g. CatalogItem. Thus my project won't build because my implementation for ReportService2006 is referencing the CatalogItem from a different namespace. Any ideas? Am I going totally the wrong direction with this?
