[site]: crossvalidated
[post_id]: 496174
[parent_id]: 495560
[tags]: 
It occurs to me that you can sort of have your cake and eat it too, by playing tricks with offsets. Suppose that your multivariate response (reflecting compositions) is in the matrix data$Y , and there are additional factors treat and block in play, and we don't care about block . We can do something like this: library(emmeans) logmean In making emm.clr , we set offset = 0 which ignores the offsets, effectively creating the CLR-transformed predictions. These antics do not require the compositions package because we've done that part manually. Data example I tried this with a re-framing of the WhiteCells dataset in compositions , creating a 60-row dataset with factors for method and sample in the above roles. Everything comes out sensibly: > confint(emm, type="r") method comp response SE df lower.CL upper.CL i G 0.6124 0.009054 29 0.5942 0.6312 m G 0.5629 0.008322 29 0.5461 0.5802 i L 0.1838 0.002782 29 0.1782 0.1896 m L 0.2054 0.003109 29 0.1992 0.2119 i M 0.0444 0.000402 29 0.0435 0.0452 m M 0.0432 0.000391 29 0.0424 0.0440 Results are averaged over the levels of: sample Confidence level used: 0.95 Intervals are back-transformed from the log scale > confint(emm.clr, type="r") method comp response SE df lower.CL upper.CL i G 3.583 0.05297 29 3.476 3.693 m G 3.293 0.04869 29 3.195 3.394 i L 1.076 0.01628 29 1.043 1.109 m L 1.202 0.01819 29 1.165 1.240 i M 0.260 0.00235 29 0.255 0.264 m M 0.253 0.00229 29 0.248 0.257 Results are averaged over the levels of: sample Confidence level used: 0.95 Intervals are back-transformed from the log scale > pairs(emm.clr, type = "response", by = "method") method = i: contrast ratio SE df t.ratio p.value G / L 3.33 0.0950 29 42.196 ### Might as well average over method: > emm.clrc = emmeans(emm.clr, "comp") > pairs(emm.clrc, type = "r") contrast ratio SE df t.ratio p.value G / L 3.02 0.0609 29 54.831 ### Check on G/M = G/L * L/M: > 3.02*4.44 [1] 13.4088 So we have about 3 times as much G as L, and about 4.4 times as much L as M
