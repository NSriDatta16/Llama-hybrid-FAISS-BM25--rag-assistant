[site]: stackoverflow
[post_id]: 1341261
[parent_id]: 1341243
[tags]: 
This is an apples and oranges comparison. System.Runtime.InteropServices.Marshal.WriteInt32(Abort, 1) is equivalent to this in C++: Foo::Bar::Baz::Func(a, b); In other words, namespaces fold up into zero cost by the compiler. To get something that is equivalent, you might have something like this: public class Foo { public Person Agent { get; } } Foo f = getFooFromWhereEver(); f.Agent.Name.ToString().ToLower(); In this case, imagine that Person has a property called Name which is a string. In this case, the chain of dots does four method invocations, at least one of which is virtual, but more likely than not all of these are invariant so calling them multiple times is redundant. I say 'more likely...' because that depends on the implementation of Agent and Person.
