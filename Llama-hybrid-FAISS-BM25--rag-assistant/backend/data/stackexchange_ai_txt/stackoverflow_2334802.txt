[site]: stackoverflow
[post_id]: 2334802
[parent_id]: 2321698
[tags]: 
RI, It's hard to be sure about the cause of the performance problems without seeing the SQL. When an Oracle query was performing well before, and suddenly starts performing badly, it is usually related to one of two issues: A) Statistics are out of date. This is the easiest and quickest thing to check, even if you have a housekeeping batch process that's supposed to take care of it ... always double-check. B) Data volume / data pattern change. In your case, running a distributed query across multiple databases makes it 10x harder for Oracle to manage performance between them. Is it possible to put these tables in one database, perhaps separate schema owners in one database? Hints are notoriously fragile, as Oracle is under no obligations to follow the hint. When the data volume or pattern changes some more, Oracle may just ignore the hint and do what it thinks is best (ie. worst ;-). If you cannot put these tables all in one database, then I recommend you look to break your query up into two statements: INSERT on sub-SELECT to copy external data to a global temporary table in your current database. SELECT from the global temporary table to join with your other table. You will have complete control over performance of step 1 above without resorting to hints. This approach typically scales well, providing you take time to do the performance tuning. I've seen this approach solve many complex performance problems. The overhead for Oracle to create a whole new table, or insert a heap of records, is much smaller than most people expect. Defining a global temporary table further reduces that overhead. Matthew
