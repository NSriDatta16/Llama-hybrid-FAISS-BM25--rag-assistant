[site]: stackoverflow
[post_id]: 2635173
[parent_id]: 2621822
[tags]: 
Note also that Control.EndInvoke is one of the few Managed EndInvokes in the Framework (so you can see the code in Reflector). They probably ought to have a non-managed helper that throws with the original stack in place. In fact, I think it is the only managed EndInvoke , but there are other managed End* routines with an IAsyncResult parameter. I've not checked all of them, but it seems all of those I have reviewed just throw the exception, or effectively use Stephen Cleary's solution of diverting to use .NET 4's GetWaiter.GetResult , which does have some managed and unmanaged shenanigans to try to get the stack restored for exceptions.
