[site]: stackoverflow
[post_id]: 5372881
[parent_id]: 5367870
[tags]: 
it appears the most common approach is to simply add the bitmap as a child of a sprite container and rotate the sprite container rather than the bitmap itself. var myCircle:Shape = new Shape(); myCircle.graphics.beginFill(0xFF0000, 1.0); myCircle.graphics.drawCircie(0, 0, 100); myCircle.graphics.endFill(); var matrix:Matrix = new Matrix(); matrix.tx = myCircle.width / 2; matrix.ty = myCircle.height / 2; var myCircleBitmapData:BitmapData = new BitmapData(myCircle.width, myCircle.height, true, 0x00FFFFFF); myCircleBitmapData.draw(myCircle, matrix); var myCircleBitmap:Bitmap = new Bitmap(myCircleBitmapData, PixelSnapping.AUTO, true); myCircleBitmap.x -= matrix.tx; myCircleBitmap.y -= matrix.ty; var circleContainer:Sprite = new Sprite(); circleContainer.addChild(myCircleBitmap); alternatively, for those using Flash Professional IDE, there is the option to employ fl.motion.MatrixTransformer.rotateAroundInternalPoint instead of using a container sprite.
