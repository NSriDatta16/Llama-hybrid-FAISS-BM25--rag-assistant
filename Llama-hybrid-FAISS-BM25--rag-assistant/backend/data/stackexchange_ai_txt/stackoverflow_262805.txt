[site]: stackoverflow
[post_id]: 262805
[parent_id]: 
[tags]: 
Parsing Unix/iPhone/Mac OS X version of PE headers

This is a little convoluted, but lets try: I'm integrating LUA scripting into my game engine, and I've done this in the past on win32 in an elegant way. On win32 all I did was to mark all of the functions I wanted to expose to LUA as export functions. Then, to integrate them into LUA, I'd parse the PE header of the executable, unmangle the names, parse the parameters and such, then register them with my LUA runtime. This allowed me to avoid manually registering every function individually just to expose them to LUA. Now, flash forward to today where I'm working on the iPhone. I've looked through some Unix stuff and I've gotten very close to taking a similar approach, however I'm not sure it will actually work. I'm not entirely familiar with Unix, but here is what I have so far on iPhone: Step 1: Query for the executable path through objective-C and get the path of my app Step 2: Use dlopen to get a handle to my app using: `dlopen(path, RTLD_NOW)` Step 3: Use `dlsym( libraryHandle, objectName )` to attempt to get the address of a known symbol. The above steps won't actually get me to where I want to be, but even that doesn't work. Does anyone have any experience doing this type of thing on Unix? Are there any headers or functions I can google to put me on the right track? Thanks;)
