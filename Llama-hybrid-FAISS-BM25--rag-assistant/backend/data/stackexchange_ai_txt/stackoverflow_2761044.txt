[site]: stackoverflow
[post_id]: 2761044
[parent_id]: 2742316
[tags]: 
This is what I ended up doing - embedding the SQL subquery check in this way: const string subquery = "{alias}.OutputTsDefId in " +"( select OwnerKey " + " from NamedAttributes na " + " where na.Name = ? and na.Value = ? and OwnerType='OTD')"; criteria.Add( Expression.Sql( subquery, new object[] { attributeFilter.Name, attributeFilter.Value }, new IType[] { NHibernateUtil.String, NHibernateUtil.String })); This isn't ideal - I don't really like to tunnel past NHibernate in this way. But, it gets the job done, which counts for a lot. I'm still interested in finding a pure NHibernate solution, if there is one.
