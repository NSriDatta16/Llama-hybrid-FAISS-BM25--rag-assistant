[site]: stackoverflow
[post_id]: 2501777
[parent_id]: 2501642
[tags]: 
The only way for Linq to SQL to "automatically" know whether or not the column has a value is to actually ask the database for it. You can extend the partial class with fields/properties, but that's not going to eliminate the lookup. One of the things you could do is created a computed column (assuming SQL 2005+ here, otherwise you'll have to try to adapt this to your DBMS). If your table looks like this, for example: CREATE TABLE Foo ( FooID int NOT NULL IDENTITY(1, 1) PRIMARY KEY, FooName varchar(50) NOT NULL, FooImage varbinary(max) NULL ) You would add the computed column this way: ALTER TABLE Foo ADD FooHasImage AS CASE WHEN FooImage IS NULL THEN 0 ELSE 1 END Then you can add the FooHasImage column to your Linq to SQL entity, don't delay load it, and check that property instead of explicitly checking the FooImage property. Also, I feel obligated to point out that storing images in a database this way is sub-optimal. It may be necessary, I don't know much about your environment, but if you're using SQL Server 2008 then consider using FILESTREAM instead, as it will use the file system for cheap "offline" BLOB storage instead of stuffing the entire thing in the database.
