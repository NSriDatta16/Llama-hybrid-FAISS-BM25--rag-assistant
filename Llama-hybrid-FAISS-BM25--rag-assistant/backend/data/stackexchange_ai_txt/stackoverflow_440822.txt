[site]: stackoverflow
[post_id]: 440822
[parent_id]: 428376
[tags]: 
Good discussion here. Some clarifications: Telerik does use jQuery internally (and will be increasingly now that MS supports it) to enhance the client-side features (and reduce client-side code) for many controls jQuery is a client-side library that is great for JavaScript development. If you need to address accessibility, though, you are up a creek with jQuery UI implementations because they depend on JavaScript for all functionality. Telerik's unique advantage is that you can render both client-side and server-side, meaning you can support clients that do not have JavaScript enabled. For many Telerik controls, you can either A) eliminate extra code on the page by disabling features (due to internal load-as-needed script logic), or B) significantly reduce the impact of client-side code by using provide script combiners and compressors. Being a long time web developer, though, I always encourage people to use the right tool for the job. If you don't need the powerful capabilities of the RadControls, or the accesiblitity support, or the extensive documentation (to help the guy that will inherit your app), don't use them for your site. If all you need is basic UI, jQuery may be just fine. What I tend to find, though, is that when a developer can offer advanced features to users (what we sometimes think of as "bloat") for doing no extra work, users are much more impressed with the end product and find it much easier to use. And above all, remember in most cases you generate value for your company/customers by building applications - not UI components. So unless there is good reason to re-invent the wheel, you're usually best served by using something that's already been built and tested to solve the problem you're facing. Hope that helps. -Todd
