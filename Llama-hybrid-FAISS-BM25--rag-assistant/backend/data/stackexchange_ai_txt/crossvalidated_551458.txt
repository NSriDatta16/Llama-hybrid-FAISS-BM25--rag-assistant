[site]: crossvalidated
[post_id]: 551458
[parent_id]: 202916
[tags]: 
I wrote something in R for my own use, based on the quote from Sherman and Cessie (1997) in StatsStudent's answer. It implements bootstrap replicates on clustered data with clusters of different sizes. It makes sure that clusters sampled more than once (due to replacement) are treated as distinct clusters within bootstrap samples (especially important in estimations involving fixed-effects along the cluster dimension). Finally, note that this approach allows to compute the one-way cluster bootstrap standard error of any statistic computed via a custom, user-provided function. In this respect, it is more flexible than sandwich::vcovBS or sandwich::vcovCL which accept only some fitted model objects as input. EDIT (improvement) The Sherman and Cessie (1997) approach that draws clusters from pools of same-size clusters is incorrect I think. More precisely, the same-size-cluster pools are systematically smaller than the full pool of clusters. Therefore, this approach produces standard errors biased towards zero. The most extreme case being when every cluster is of different size (e.g. clustering on year level and no cross-section has the same size). In this case, the same cluster gets sampled for every size, all bootstrap replicates are thus identical and the standard error is exactly zero. I leave my old code implementing this approach at the end of my answer. The better solution is to draw in the full pool of clusters such that the replicate data set has, on average, the same size as the original data set. library(boot) library(sandwich) data("PetersenCL", package = "sandwich") # construct an unbalanced panel with different numbers of firms every year. datalist Test that it computes the same standard error as sandwich::vcovBS and compare with the asymptotic solution of sandwich::vcovCL set.seed(1234) sdw_bs OLDER, FLAWED APPROACH library(boot) library(sandwich) ## Make some necessary objects # unbalanced panel data data("PetersenCL", package = "sandwich") data With this clustering structure, the result is close to the asymptotic solution (available for unbalanced data, but only for lm or glm objects): sdw_cl But it does not replicate the result from vcovBS, even for balanced data: ## compare with sandwich::vcovBS, on balanced panel data set.seed(1234) custom_bs
