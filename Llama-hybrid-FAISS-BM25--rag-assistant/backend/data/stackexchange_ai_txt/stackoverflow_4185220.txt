[site]: stackoverflow
[post_id]: 4185220
[parent_id]: 4184395
[tags]: 
You should add -MemberType ScriptProperty and use -Value and -SecondValue : # Make an object with the script property MyProperty $variable = New-Object PSObject # “internal” value holder $variable | Add-Member -MemberType NoteProperty _MyProperty -Value 42 # get/set methods $get = { Write-Host "Getting..." $this._MyProperty } $set = { Write-Host "Setting..." $this._MyProperty = $args[0] } # the script property $variable | Add-Member -MemberType ScriptProperty MyProperty -Value $get -SecondValue $set Test: Write-Host "Original value: $($variable.MyProperty)" $variable.MyProperty = 123 Write-Host "After assignment: $($variable.MyProperty)" It prints: Getting... Original value: 42 Setting... Getting... After assignment: 123 Unfortunately I do not know how to make “protected/private” internal value holders like the note property _MyProperty in our example (or whether it is possible at all). UPDATE : Apparently it’s the answer to what more or less the title asks. But the question is in fact about parameterized property, not just get/set methods implemented via script blocks. My attempt to use this type of property ( ParameterizedProperty ) with Add-Member has failed, perhaps it is not yet supported.
