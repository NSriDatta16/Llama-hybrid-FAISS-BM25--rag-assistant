[site]: stackoverflow
[post_id]: 2069989
[parent_id]: 2064320
[tags]: 
Pekka's answer is great, but one thing that should be added is that Rails is moving heavily in the direction of being Javascript framework agnostic. Although when Rails first came out, its AJAX integration was innovative, the Javascript landscape has changed dramatically since then, and the Rails integration doesn't really live up to best practices anymore. As such, the Prototype integration should not be considered a major factor today on Rails 2.3, and it will be even less of a factor in Rails 3.0 which will likely be released within the next few months. I recently read an interesting article describing some of the most significant changes to Rails' Javascript integration in years. My current project has thousands of lines of legacy Prototype code, but we've recently started using jQuery because its benefits were too great to pass up. My impressions: Prototype is a mature framework that does a very good job shoring up browser differences and providing very well-rounded functionality. Unfortunately it is a bit heavy-handed with its changes to the default Javascript environment, and it's not seeing rapid development and doesn't have a significant plugin ecosystem. jQuery is a newer framework that was able to leverage some of the lessons of the early javascript frameworks like Prototype to create something more modular, less obtrusive, and significantly more powerful and concise. I still love Prototype, but jQuery's DOM manipulation and plugin ecosystem is just too good to ignore anymore. If I was starting a greenfield project I'd have to go with jQuery because that seems to be where the innovation is happening (at least between those two choices).
