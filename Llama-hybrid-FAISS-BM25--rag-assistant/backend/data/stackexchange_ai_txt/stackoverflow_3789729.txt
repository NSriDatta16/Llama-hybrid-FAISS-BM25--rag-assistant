[site]: stackoverflow
[post_id]: 3789729
[parent_id]: 3789678
[tags]: 
If you mean can you have std::set > myIdealContainer; then the answer is yes, provided you are able to meaningfully wrap the vector in something that makes it sortable (so set can order its members). Watch out for copying inefficiency though. If you mean can I instantiate set with vector as the storage for a custom allocator, then I don't know how you would do that (or why you would want to). If you mean can you treat a vector the same way you would a set, then the answer is no. if your dataset is small and matching the container member is cheap, use vector, preserve ordering on inserts and scan linearly for matches using std::find. If dataset is large and/or matching is expensive, use set.
