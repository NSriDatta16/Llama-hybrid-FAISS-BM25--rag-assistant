[site]: stackoverflow
[post_id]: 1809593
[parent_id]: 1809093
[tags]: 
I've seen a technique by Eric Burke that is roughly like the following. It is an elegant use of static imports. The code reads very nicely. To get the idea, here is the Contract class. It is minimal here, but can be easily filled out as needed. package net.codetojoy; public class Contract { public static void isNotNull(Object obj) { if (obj == null) throw new IllegalArgumentException("illegal null"); } public static void isNotEmpty(String s) { if (s.isEmpty()) throw new IllegalArgumentException("illegal empty string"); } } And here is an example usage. The foo() method illustrates the static imports: package net.codetojoy; import static net.codetojoy.Contract.*; public class Example { public void foo(String str) { isNotNull(str); isNotEmpty(str); System.out.println("this is the string: " + str); } public static void main(String[] args) { Example ex = new Example(); ex.foo(""); } } Note: when experimenting, note that there may be a bug around doing this in the default package. I've certainly lost brain cells trying it.
