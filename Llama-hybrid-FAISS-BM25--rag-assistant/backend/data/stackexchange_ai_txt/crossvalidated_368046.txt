[site]: crossvalidated
[post_id]: 368046
[parent_id]: 
[tags]: 
Which algorithms for mixed type datasets (binary classification)?

I am new to machine learning and I am trying to implement a model for a binary classification problem (output class 0 or class 1), and wondering which algorithms I should consider, since my dataset is mixed, having categorical data and numeric (continuous) data. My data set is about 10k rows. And at this step I am pre-processing the data. I have four categorical features (first feature 4 categories, second feature 7 categories, third feature 11 categories, fourth feature 3 categories), and one continuous feature, which is the date & time (most important feature, which I will further transform as cited here Best practice for encoding datetime in machine learning ). I encoded the 4 categorical (text) features, to numeric ones (for ex. '1' for 1st category, '2' for 2nd, '3' for 3rd, etc..), but from the research I've done, the algorithm could understand that the data is then ordered, i.e. 1 is less and 2, 2 is less than 3, etc., so I thought about encoding the four categorical features with OneHotEncoding. So my first question is: Wouldn't that be a lot of features? 4+7+11+3=25 dummy variables (features)? What would be a better encoding, if any? Second, and main question, which algorithms would handle this kind of data best? (From my readings, tree based algorithms are the best to handle this kind of mixed data, is it right?) I thought about trying decision trees, Random Forests, and Deep Neural Networks. What do you think? Third and last question, how good are deep neural networks for this kind of data and this kind of problems?
