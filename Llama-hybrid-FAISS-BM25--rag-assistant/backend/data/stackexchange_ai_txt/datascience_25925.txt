[site]: datascience
[post_id]: 25925
[parent_id]: 
[tags]: 
ANN on Pattern Recognition

I have been trying to apply a simple neural network using keras to predict a sequence of numbers and the rule is if the input integer is odd it should be 4 and if its even it should be 2. Yet the neural network gets stuck at a 60% accuracy rate. Anyone know a solution to this? from keras.models import Sequential from keras.layers import Dense from keras.layers import Dropout from keras.layers.normalization import BatchNormalization from sklearn.model_selection import cross_val_score from keras.wrappers.scikit_learn import KerasClassifier import numpy as np def gen(x): if (x%2==0): return 2; else: return 4; a = [] for i in range(1,100001): a.append([i,gen(i)]) a = np.array(a) x = a[:,0:1] y = a[:,1:2] def MakeClassifier(): network_classifier = Sequential() network_classifier.add(Dense(units=2,kernel_initializer="uniform",activation="relu",input_dim=1)) #Hidden Layer1 taking into account number of inputs(independant variables(x) network_classifier.add(BatchNormalization()) network_classifier.add(Dense(units=1,kernel_initializer="uniform",activation="sigmoid"))#OutPutLayer network_classifier.compile(optimizer="adam",loss="binary_crossentropy",metrics=["accuracy"])#If multicategorical then categorical_crossentropy return network_classifier classifier = KerasClassifier(build_fn= MakeClassifier , batch_size = 10 , epochs = 1000) classifier.fit(x,y,epochs=100,batch_size=1000) print(classifier.predict([[6],[7]])) #Should Predict 2 and 4
