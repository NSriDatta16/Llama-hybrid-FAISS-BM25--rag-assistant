[site]: crossvalidated
[post_id]: 440857
[parent_id]: 
[tags]: 
Anomaly detection using reconstruction error (compositional data)

I have compositional data (nonnegative and sum to 1) in a data matrix with 150 samples (rows) and 4096 features (columns). The data is made up of 144 normal samples and 6 known anomalies, which I'm using to validate my algorithm. My go to so far has been to look at the reconstruction error using the first 5 principal components of the data matrix. I apply this to the centered log-ratio transform of the data. I set my anomaly threshold to then capture the top 10% of samples with the largest reconstruction error. The final 6 samples in the bar plot are the true anomalies. The green horizontal line is the anomaly detection threshold, and the red bars are those samples with a reconstruction error which exceeds this threshold. Here are the two 2D PCA plots from the first 5 principal components which most clearly show the separation between the normal data and the known anomalies. In the principal component plots, the red dots are the true anomalies, and the green circles indicate those data points which were classified by the algorithm as being anomalies. As you can immediately see, direct visualization using the first few principal components actually does a fairly poor job of showing which data points will be poorly reconstructed. Is there another way to visualize the data as a scatter plot which better shows which data points will have large reconstruction error? Second, I'm aware that PCA reconstruction error anomaly detection can be considered as just a simple (linear) type of autoencoder reconstruction error algorithm. However after looking at the above PCA plots, the fact that the first few principal components do a decent job of separating out the anomalies from the normal data makes me think that using autoenconders would be overkill and that they would not lead to improved performance. I'm also aware more generally of other approaches which use general clustering algorithms such as KNN, DBSCAN, mixture models, etc. The PCA plots looked like they'd be amenable to something like DBSCAN. If I cheat a little bit by overfitting the two parameters for DBSCAN eps and minPts , it actually performs fairly well on the first 3 principal components (see the plot below). Maybe I should try some sort of ensemble method combining reconstruction error and DBSCAN? Anyways I'm open to any thoughts anyone has on how best to perform anomaly detection on this type of data. In case anyone wants it, here is the raw data: https://gofile.io/?c=ZmU3Nv
