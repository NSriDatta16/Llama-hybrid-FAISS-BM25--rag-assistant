[site]: stackoverflow
[post_id]: 5268595
[parent_id]: 
[tags]: 
iPhone rotating view in navigationViewController mode

hours ago I post a question on organizing portrait and landscape mode in iPhone and now I think I know how to do it using willRotateToInterfaceOrientation:duration. The first screen is 'Map View' with one button that leads to 'Setting View'. The Map View does not support rotate but for the Setting View I made separate view for portrait and landscape and they swap accordingly when rotated. , , As you can see when Setting button pressed SettingView is added on the view stack as usual. So basically I use three view controllers; Setting, SettingLandscape and SettingPortrait. I still found problem in rotating view in iPhone when I use navigationViewController. Segmented control is not working. it crashes without error message. It used to working fine without rotation.- when I'm not using multiple view for rotation-. rotateViewController.m This is root view controller. - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation { return YES; } -(IBAction) buttonPressed{ Setting *settingViewController = [[Setting alloc] initWithNibName:@"Setting" bundle:[NSBundle mainBundle]]; UINavigationController *navController1 = [[UINavigationController alloc] initWithRootViewController: settingViewController]; [self.navigationController presentModalViewController:navController1 animated:YES]; [settingViewController release]; [navController1 release]; } Setting.m This view controller does nothing but swap views when rotate and shows appropriate view between portrait and landscape. In Setting.m, I swap view as follow; - (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration { if (toInterfaceOrientation==UIInterfaceOrientationLandscapeRight) { NSLog(@"to Right"); SettingLandscape *setting_landscape = [[SettingLandscape alloc] initWithNibName:@"SettingLandscape" bundle:[NSBundle mainBundle]]; self.view = setting_landscape.view; [setting_landscape release]; } if (toInterfaceOrientation==UIInterfaceOrientationLandscapeLeft) { NSLog(@"to Left"); SettingLandscape *setting_landscape = [[SettingLandscape alloc] initWithNibName:@"SettingLandscape" bundle:[NSBundle mainBundle]]; self.view = setting_landscape.view; [setting_landscape release]; } if (toInterfaceOrientation==UIInterfaceOrientationPortrait) { NSLog(@"to Portrait"); SettingPortrait *settingportrait = [[SettingPortrait alloc] initWithNibName:@"SettingPortrait" bundle:[NSBundle mainBundle]]; self.view = settingportrait.view; [settingportrait release]; } if (toInterfaceOrientation==UIInterfaceOrientationPortraitUpsideDown) { NSLog(@"to PortraitUpsideDown"); SettingPortrait *settingportrait = [[SettingPortrait alloc] initWithNibName:@"SettingPortrait" bundle:[NSBundle mainBundle]]; self.view = settingportrait.view; [settingportrait release]; } } In viewWillAppear, Setting view controller also has ; self.title = @"Shell "; self.navigationController.navigationBarHidden = NO; self.navigationItem.leftBarButtonItem = [[[UIBarButtonItem alloc] initWithTitle:@"Done" style:UIBarButtonItemStylePlain target:self action:@selector(Done)] autorelease]; and Done is - (void) Done{ [self dismissModalViewControllerAnimated:YES]; } SettingLandscape.m This view stacked on when the view is rotated. This view controller has it's navigation bar. - (void)viewWillAppear:(BOOL)animated { [super viewWillAppear:animated]; self.title = @"Setting Landscape"; } - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation { return YES; } in viewDidLoad; - (void)viewDidLoad { [super viewDidLoad]; NSLog(@"landscape:viewDidLoad"); //self.title = @"SettingLandscape";//not working!! //self.navigationItem.leftBarButtonItem = [[[UIBarButtonItem alloc] initWithTitle:@"Done1" style:UIBarButtonItemStylePlain target:self action:@selector(Done)] autorelease]; NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults]; stringflag4MapType = [[NSString alloc] initWithString:@"blah"]; stringflag4MapType = [defaults stringForKey:@"flag4MapType"]; if (![stringflag4MapType isEqualToString:@"Hybrid"] && ![stringflag4MapType isEqualToString:@"Standard"] && ![stringflag4MapType isEqualToString:@"Satellite"]) { segmentedControl4MapType.selectedSegmentIndex = 0; }else if ([self.stringflag4MapType isEqualToString:@"Standard"]) { segmentedControl4MapType.selectedSegmentIndex = 0; }else if ([self.stringflag4MapType isEqualToString:@"Satellite"]) { segmentedControl4MapType.selectedSegmentIndex = 1; }else if ([self.stringflag4MapType isEqualToString:@"Hybrid"]) { segmentedControl4MapType.selectedSegmentIndex = 2; } and following call does not get invoked. strange. doesn't matter rotation works anyway. - (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration { if (toInterfaceOrientation==UIInterfaceOrientationPortrait) { NSLog(@"to Portrait");// does not print out. SettingPortrait *settingportrait = [[SettingPortrait alloc] initWithNibName:@"SettingPortrait" bundle:[NSBundle mainBundle]]; self.view = settingportrait.view; [settingportrait release]; } if (toInterfaceOrientation==UIInterfaceOrientationPortraitUpsideDown) { NSLog(@"to PortraitUpsideDown"); SettingPortrait *settingportrait = [[SettingPortrait alloc] initWithNibName:@"SettingPortrait" bundle:[NSBundle mainBundle]]; self.view = settingportrait.view; [settingportrait release]; } } ok now, as you can see from those snap shots there are two navigation bar and each has its bar button, Done and Item. The Done button came from Setting and the Item button from SettingPortrait or SettingLandscape. All button's selector is same, that leads back to map view. The button Done works fine, but the button Item crashes. I need a button on navigation bar after rotation that acts like back button . I guess once I did 'self.view = settingportrait.view;' the problem starts. The reason why I need the Item button work is that the segmented control started crashing once I add code to support rotation. If I found reason how to make the Item button-that is inside rotation view- work I think I can make the segmented control work as well. You can download the whole code at https://github.com/downloads/bicbac/rotation-test/rotate-1.zip
