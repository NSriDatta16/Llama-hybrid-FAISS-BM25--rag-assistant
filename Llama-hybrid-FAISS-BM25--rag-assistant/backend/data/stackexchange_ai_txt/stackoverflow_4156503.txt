[site]: stackoverflow
[post_id]: 4156503
[parent_id]: 4156392
[tags]: 
foo not in A.keys() will, in Python 2, create a new list with the keys and then perform linear search on it. This is guaranteed to be slower (although I mainly object to it because there are alternatives that are faster and more elegant/idiomatic). A[foo] = x and if foo not in A: A[foo] = x are different if A[foo] already exists but is not x . But since your "know" A[foo] will be x , it doesn't matter semantically . Anyway, both will be fine performance-wise (hard to tell without benchmarking, although intuitively I'd say the if takes much more time than copying a pointer). So the answer is clear anyway: Choose the one that is much shorter code-wise and just as clear (the first one).
