[site]: stackoverflow
[post_id]: 3281830
[parent_id]: 3281636
[tags]: 
System.Web.Security.FormsAuthentication uses cookies: FormsAuthentication.SetAuthCookie(userName, rememberMe); No session is used there. Of course, if you want more than a username and isAuthenticated, you'll need some other way to store that state. Your only real alternatives are cookies or the URL, neither one of which are generally acceptable for other reasons. Session is not evil, especially given your options to host session data on a shared server or on a SQL Server instance. Session can certainly be abused and your scalability will suffer, but I would not eschew session completely unless there were other overriding concerns. If you must toss out session entirely, you will have to either recreate state on each call, an expensive proposition generally, or you will have to create your own state storage mechanism which brings us back to standard ASP.NET session storage alternatives.
