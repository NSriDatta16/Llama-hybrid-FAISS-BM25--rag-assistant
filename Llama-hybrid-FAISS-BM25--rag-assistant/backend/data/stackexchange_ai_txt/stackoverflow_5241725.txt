[site]: stackoverflow
[post_id]: 5241725
[parent_id]: 
[tags]: 
Suggested DB Schema for a Lunchtime Reimbursement Application

I am designing a web-based smartphone app with jqTouch. The idea is to be able to: Track who owes whom lunch Track debt over time Transfer debt from one person to another This sounds convoluted, but it will solve a real-world problem for my lunch buddies who often pay for each other and wind up reimbursing through Paypal later. For those who don't, they often trade debt... for instance: Jason buys lunch for David David buys lunch for Roslyn Phillip buys lunch for Roslyn So - David owes Jason, Roslyn owes David and Phillip. As a debt settlement, David commutes his debt to Jason and Roslyn buys him lunch as repayment for David and now they're even. The only person left standing is me, and that's pretty much par for the course :) The real question is... How can I express this in terms of a relational db? I can track line-item expenditures and users as such: purchases ========= purch_id user_id amount location users ======= user_id name Do I handle the rest as business logic? How do I track the debt commute? If I wanted to get meaningful reporting out of this, such as expenditures over time, and the average time it takes for a given person to repay -- I would need a more complex schema! Any thoughts/criticism is welcome! This is a fun mental exercise and is in no way considered a serious project. Update Considering the lack of interest in the question as posed - I'm posting up a bounty! Some questions that will need to be addressed to award the bounty are as follows: How to track running totals without having to sum a potentially lengthy transaction table How to keep track of meta-data for transactions without over normalization (e.g. the 'commuted' debt feature described above
