[site]: stackoverflow
[post_id]: 4477740
[parent_id]: 4477664
[tags]: 
You could fire a thread to execute a function, but the caller would probably still want to wait for the result. Threading is by definition useful for processes that can be done in an isolated form. Not just any call is suitable to be threaded. If you define such a process, it will probably be just fine to execute multiple threads at once. I wouldn't see any use of having one separate thread that is just calling functions from a queue. It could have some use in a reporting tool for example. To minimize database load, you could choose to execute only one or a small number of reports at a time. After a report is done, a thread could pick up a new report from a queue. To implement something like this, I would build (and actually have built) a connection pool and a tread pool. If you'd like to build something like this too, I'd encourage you to search for mutexes (atoms/critical sections) and semaphores.
