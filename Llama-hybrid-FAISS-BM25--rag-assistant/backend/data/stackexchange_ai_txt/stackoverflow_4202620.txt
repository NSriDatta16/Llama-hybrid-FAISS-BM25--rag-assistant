[site]: stackoverflow
[post_id]: 4202620
[parent_id]: 
[tags]: 
Handling UI events with mGLSurfaceView

Manual is pretty vague even for regular views, and doesn't even mention mGLSurfaceView in the UI events overview page. For starters, all the examples will not work because they rely on the Id for the view (e.g. Button button = (Button)findViewById(R.id.corky); ). I'm having a bad time trying to send UI events back and forth. I used the shotgun solution and attached every input event from the mGLSurfaceView to the Activity... But i'm craving for something better. So, anyone brave enough to conjure a simple example with an Activity, a mGLSurfaceView, and the activity onTouch event saying where was the click relative to the size of the screen? (e.g. w=50%, h=50% for a perfect click on the center of the screen) public class GlClick extends Activity implements OnTouchListener { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mGLSurfaceView = new GLSurfaceView(this); mGLSurfaceView.setRenderer(new GlRenderer()); setContentView(mGLSurfaceView); mGLSurfaceView.setOnTouchListener(this); } public boolean onTouch(View v, MotionEvent event) { Log.d(TAG, "example output: click was on 234x211 for a 800x600 screen.") } } class GlRenderer implements Renderer { // here be lots of messy beginner GL code ... // ... you'd have wished for dragons. public void onSurfaceChanged(GL10 gl, int w, int h) { screenWidth = w; screenHeight = h; //TODO: send that to the activity } }
