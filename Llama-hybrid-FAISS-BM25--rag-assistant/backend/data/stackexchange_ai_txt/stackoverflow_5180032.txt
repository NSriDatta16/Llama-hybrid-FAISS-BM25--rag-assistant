[site]: stackoverflow
[post_id]: 5180032
[parent_id]: 5179879
[tags]: 
That you're postulating a lookup map from bucket id to a list of unique ids representing individual structs implies you have no interest in finding the structs using those unique ids. If that's true, then it seems your problem would be how to get the proper number of elements in each bucket... you can do that by incrementing a bucket counter across the buckets - wrapping from last to first when necessary - and assigning successive structures into the associated bucket. Still, I suspect you've probably not expressed your real needs accurately, and may need to find structures using those unique ids? If that's true, then a crucial question is whether you just need a statistically equally likely chance of any given struct ending up associated with any given bucket (such that the structs-per-bucket approximates and averages #structs/#buckets but there will be fluctuation), or do you need it exact. In the former case, a hash map sounds appropriate. Otherwise, I can't think of a particularly good solution. Perhaps worth mentioning that you can have pointers to values and move the pointers around to achieve some load balancing while avoid moving the actual objects.
