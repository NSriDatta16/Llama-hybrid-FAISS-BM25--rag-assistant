[site]: datascience
[post_id]: 97471
[parent_id]: 97465
[tags]: 
First of all, here is the answer to your question: YES You have a beginning of CNN (Convolutional Neural Network) in your code. Just don't forget to add activation functions (usually ReLU) after convolutional layers. Another unconventional thing is you use 2 outputs for your binary classification, which is not the way to go, we would rather use 1 output that goes through sigmoid function and gives 1 if it is a cat and 0 if it is a dog (or reverse). And we apply BCE loss to train the network. I would use transfer learning (use of pretrained architecture) for your task, VGG or ResNet are architectures that work well on classification tasks. We usually fine tune these pre-trained model to get the best results on classification tasks. Here is a Kaggle that may help you understand how to do it with Pytorch. Hope this helps.
