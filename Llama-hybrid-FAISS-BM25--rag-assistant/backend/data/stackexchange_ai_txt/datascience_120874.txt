[site]: datascience
[post_id]: 120874
[parent_id]: 418
[tags]: 
I recently started trying to solve a similar problem, using both categorical and acoustic/time series features for classification. Here are a few suggested approaches in order of difficulty. Some of them overlap with previous answers, as some previous answers were really good. Similar to what others have suggested, convert the text/categorical/non-numerical values into numerical values. Then simply append the newly transformed features with the original numerical features. This has it's obvious benefits in that it is super easy to implement; however, it is severely flawed in that it combines completely different features together. This can be particularly bad if the original numerical features are long sequences of values, at which point the categorical features will be deprioritized by the most classifiers. Use dimensionality reduction techniques (Principle Component Analysis, Clustering approaches like Gaussian Mixture Models; Kmeans; etc., Linear Discriminant Analysis, etc) on the numerical features and then append with the text features that you have transformed into numerical features. The dimensionality reduction may help to prevent the problem with the first approach by ensuring the numerical features don't overpower the text features. Train separate models on the text features and numerical features. One (or several) on the text features, and another (or others) on the numerical features. Use whatever models you want, as long as they generate probability scores. Then you can use an ensemble technique to combine the predicted probabilities. This approach is flexible and you may find that, depending on the nature of the text data and/or the numerical data, it may be useful to have several different models for either. Or not. Who knows! Like the other answers have said, with little information on the nature of the data, these approaches must be left vague. Use a mixed data clustering approach. This paper is a bit advanced, but if you can this off, you may get some really good results. Deep learning approaches that allow for multiple input modalities. Here is a paper that used fusion neural networks.
