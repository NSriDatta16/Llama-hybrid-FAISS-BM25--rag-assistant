[site]: stackoverflow
[post_id]: 3531411
[parent_id]: 3530143
[tags]: 
You don't post the full JavaScript code, so I write some remarks how you jqGrid can be optimized based on existing information. You should better avoid the usage of afterInsertRow and do the same work in gridComplete or loadComplete . Then you can add gridview: true parameter in the definition of jqGrid and the grid will be constructed quickly (read jqgrid, firefox and css- text-decoration problem for more details). Your current action in afterInsertRow can be easy replaced by jQuery('.jqgrow',jQuery('#tblVariables')).addClass('jstree-draggable'); in loadComplete or gridComplete . You construct the value of Groups column based on the contain of hidden HiddenGroups column. The data which you send from the server as the contain of Groups column seems be overwritten. You can construct the same contain of Groups column with respect of custom formatter of the Groups . Then probably you can remove unneeded HiddenGroups column at all. Look at jqGrid: Editable column that always shows a select for an example of custom formatter and at Add multiple input elements in a custom edit type field as example of custom editing . Probably defining of custom unformater will be also interesting for you. It's a little the matter of taste, but the usage of formatter:'checkbox' for the column HiddenVar seems me appropriate. Moreover one can see that you send "True" or "False" strings from the server as the value for the column. Sending of 1 and 0 follows to the same results, but reduce the size of the data which are sent. You can reduce the size of your javascript if you remove some default values (like jsonReader ) or deprecated values like imgpath (see http://www.trirand.com/jqgridwiki/doku.php?id=wiki:upgrade_from_3.4.x_to_3.5 ) and remove default values from colModel (like editable: false ). Description of some other general optimization ways for jqGrid you can find in what is the best way to optimize my json on an asp.net-mvc site . UPDATED : Probably you don't really need to insert select elements in Groups . Instead of that you can do this only if the row is selected or is in editing mode. Removing of construction of the select elements from the whole Groups can improve performance of your grid and simplify the code. You can use editoptions with value as a function or use other possibilities of editoptions . Binding of onchange event to the select can be then replaced to dataEvents with type: 'change' .
