[site]: stackoverflow
[post_id]: 4249007
[parent_id]: 4248050
[tags]: 
Taken from my answer to a different question : One thing to keep in mind about DVCS is that it's not actually about the distributed-ness of it, it's about the branching and merging. DVCS makes branching and merging much easier, to the point that each developer/designer/front-ender basically has their own private branch -- their local repo. That way, they can work in parallel without stepping on each other's toes. That means they can be checking in code every few hours instead of waiting days until they have everything done to check it in. If you're in any sort of organization (company, project team, etc.), you'll still want a central repository, so you have a canonical version of the code. Very few teams use a fully distributed workflow without a central server, because as you increase the number of people on your team, your connections increase to N 2 , whereas it stays N with a central server.
