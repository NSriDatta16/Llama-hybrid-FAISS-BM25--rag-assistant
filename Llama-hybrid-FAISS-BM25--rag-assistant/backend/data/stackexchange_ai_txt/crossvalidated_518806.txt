[site]: crossvalidated
[post_id]: 518806
[parent_id]: 
[tags]: 
LSTM Time Series Forecasting

I am working with Bitcoin block data and attempting to forecast target hashrate ~one month in advance. I have condensed the raw block-by-block data into daily data and calculating metrics like average block time, fastest and slowest N blocks / transaction fees / etc... per day, and then further condensed that into a smaller timeseries that averages the values per epoch (i.e. ~14 days) so we have roughly only 230 datapoints, where the first epoch begins at the end of 2012 and each datapoint is ~14 days apart. I am attempting to implement an LSTM model to forecast using this guide: https://machinelearningmastery.com/multivariate-time-series-forecasting-lstms-keras/ using 4 timestep lag (~2 months). I am a complete newbie to ML, and wanted to ask for opinions on whether it sounds like I'm heading in the right direction, or if this is a problem I will likely make no progress on. If this is a viable problem to try solving, then what suggestions / corrections do you have to my methodology? I am aware the guide does not forecast - it only uses $t-1..t-N$ to predict $t$ , and was going to attempt further forecasts after achieving something decent for $t$ . I would also like to ask- if I am forecasting only the target hashrate, is there a need to include other variable shifted timesteps $t...t+N$ in the data sets, i.e. will leaving things like transaction fees in the forecast steps matter? I currently have every variable except target hashrate removed for the forecast sequence. Any help would be greatly appreciated! Let me know if you need more details or clarification.
