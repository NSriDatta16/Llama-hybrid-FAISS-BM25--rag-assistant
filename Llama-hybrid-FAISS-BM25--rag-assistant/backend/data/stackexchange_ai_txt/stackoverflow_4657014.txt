[site]: stackoverflow
[post_id]: 4657014
[parent_id]: 4656955
[tags]: 
To achieve what you'd like to obtain, you could call (after X seconds, using setTimeout()) a function that checks if the ajax response has been loaded. For example: var responseLoaded = false; function checkIt(){ if(!responseLoaded) window.location = "%http://alternative-page%"; } setTimeout(checkIt,10000) //after 10 seconds responseLoaded could be a global variable that can be set to true at the end of the ajax response. Or, alternatively, you could check if some DOM element or JS var is present (i.e. created by AJAX call) at that time (when the function has been called through setTimeout) Then, You could use Date.getTime() To obtain the current timestamp. You can compare the timestamp at the beginning with the one at the end of the ajax response to see the total time it takes. (just if you want to check the average ajax loading time)
