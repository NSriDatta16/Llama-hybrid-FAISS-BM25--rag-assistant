[site]: crossvalidated
[post_id]: 184097
[parent_id]: 181572
[tags]: 
You need to represent your data as a dictionary. For example: measurements = [ {'city': 'Dubai', 'temperature': 33.}, {'city': 'London', 'temperature': 12.}, {'city': 'San Fransisco', 'temperature': 18.} ] Vectorize the categorical columns (encode categorical feature as K binary features). You can use OneHotEncoder , DictVectorizer or FeatureHasher . The latter is more memory efficient. For example, the above dictionary will be transformed to a sparse array: from sklearn.feature_extraction import DictVectorizer vec = DictVectorizer() vec.fit_transform(measurements).toarray() array([[ 1., 0., 0., 33.], [ 0., 1., 0., 12.], [ 0., 0., 1., 18.]]) Finally, save the sparse matrix as a SVMlight data format by sklearn's function dump_svmlight_file EDIT: To get the feature names: feature_names = vec.get_feature_names() print "Feature_names: " + str(feature_names)
