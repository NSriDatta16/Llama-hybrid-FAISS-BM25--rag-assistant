[site]: crossvalidated
[post_id]: 225340
[parent_id]: 
[tags]: 
Is MCMC really better than raw MC to Sample a region?

I have implemented the Markov Chain Monte Carlo (MCMC) with the Metropolis-Hastings sample selection criteria. Basically, as I understand it and as I have implemented it is: n = number of accepted samples current_x = 0.5 while i Using n=20 and sampling a N(0,1) CDF, I get this picture, which looks fine, with an acceptance rate of 51% (I know I should be sampling millions to get an accurate Monte Carlo, but for the sake of the example let's use n=20) I would like to ask the following: Is my understanding of the MCMC implementation correct? In the sampling I have rejected 49% of actual function evaluations. Those rejected evaluations could have provided me a bigger insight of the objective function. Is that so? Is MCMC better than MC for "mapping" a very complicated black box function, given that I would reject many costly function evaluations? I hope my questions are clear enough. EDIT In my conceptual code I call CDF to a function that given a probability x it returns the value of a "real life" variable in "real life" units. For instance, if my CDF was to represent the electric consumption of a house over the year, I would call CDF_house(x=0.1) and it would return 0.4 kWh . I construct the CDF by sorting the real life measurements and linking the resulting array ( P(x) ) with another array of equal number of elements ranging from 0 to 1 ( x ). I build an interpolation function with the two arrays and I call it CDF, but probably it is an inverse CDF as I have been told in the answers below.
