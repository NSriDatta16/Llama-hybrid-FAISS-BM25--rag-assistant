[site]: stackoverflow
[post_id]: 2981675
[parent_id]: 2981539
[tags]: 
Some suggestions: 1. Use std::string instead of 'char *`. This relieves you of many headaches such as memory allocation and resizing. (Input and output is also simpler.) If the argument to a function will be modified, pass by reference (don't use pointers). C++ provides references which allow a variable to be modified without the mess of pointers. References don't need to be checked for NULL and very seldom do they point to something illegal or missing. Example: void intialize(std::string& name, int& age) { name.clear(); age = 0; return; } Start using classes, structures and objects. Let the objects handle input, output and comparison: struct Person { std::string name; // Every person has a name. unsigned int age; // An "age" cannot be negative, so it is declared as unsigned. Person() // Default constructor : age(0) // Use initialization list for initializations. { ; } // String will initialize itself, so not listed here. void Print(void) // Prints the members using std::cout. { cout To print a person: Person me; me.name = "Albert Einstein"; me.age = 53; me.Print(); Encapsulating the Print functionality inside the struct helps to simplify the program. No need for all those C-style functions.
