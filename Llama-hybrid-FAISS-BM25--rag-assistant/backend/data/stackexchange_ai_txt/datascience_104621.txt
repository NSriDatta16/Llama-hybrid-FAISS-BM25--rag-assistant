[site]: datascience
[post_id]: 104621
[parent_id]: 104620
[tags]: 
Regarding feature encoding As the error says, strings are not accepted. You need to transform item in a way that can be digested by xgboost (essentially some numerical representation). There seems to be a method to transform to categorical when generating the DMatrix ( see the docs , never tried it). However, my first idea would be to "one hot" encode item using sklearn.preprocessing.OneHotEncoder . Another method would be to use pandas.get_dummies . Update: Regarding the general model setup Your model is not well described in the question. My understanding is that your model looks like: $$rating (user,item,...),$$ so you aim at predicting the rating for a given user and item etc. Each user and each item can be thought of as having an own "identity" (happy, grumpy person; quality product, cheap product etc.). This is called a " fixed effect " in econometrics. The canonical approach is to add one dummy (one-hot) for each user, item. In linear models, this introduces a "level shift" (additional intercept term). So a "cheap" product would get a lower rating on average. Or a grumpy person would generally give a lower score (lower intercept) for a given product compared to other people. In tree based models the effect is less clear. However, provided that there is quite a large literature using "fixed effects", I suppose this is a good starting point. You need to distinguish the sources of ratings as good as possible and individual product/user aspects are important and can easily be represented by a "dummy". One open question is how to deal with "out of sample" users. I might think that there are no out of sample items, but I guess that there are out of sample users. If true, you would need to "approximate" the user's identity by socio-economic variables (age, gender, education, preferences, etc.).
