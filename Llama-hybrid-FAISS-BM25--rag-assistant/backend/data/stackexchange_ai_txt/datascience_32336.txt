[site]: datascience
[post_id]: 32336
[parent_id]: 
[tags]: 
Pandas: Calculating the best seller to incorporate number of houses sold

I have been analysing seller data and trying to get insights. I have written a groupby statement to get the average price of selling for every seller for seller,seller_df in g: df=df.append({'Seller':seller,'AveragePrice':seller_df.Price.mean() }, ignore_index=True) print(seller) df.sort_values(by='AveragePrice',ascending=False,inplace=True) plt.figure(figsize=(15,30)) sns.barplot(data=df.dropna()[:100],y='Seller',x='AveragePrice') The bar plot is only for the top 100 sellers and shows who has the max average selling price. I believe this method is inaccurate as I also should consider the amount of properties that he has sold in order to get the best seller. For e.g.: if A sold 20 houses with average 5 and B sold 200 with average 5, B should be the winner.So I have two questions: How can I incorporate this in my code? Can I optimise the code snippet? I am a newbie and any help is appreciated. Please refer to this link for my Kaggle notebook. It does not contain the code posted here as I am doing the analysis locally but you can have a look at the data. Dataset
