[site]: stackoverflow
[post_id]: 3770050
[parent_id]: 3769980
[tags]: 
Behavior switches are not as easy to get right as subclasses, in general, so I'd tend to favor the subclassing. I wouldn't worry about the lack of future subclassing. Probably the best way to do it would be to have a Server base class with Secure and Insecure subclasses (or whatever you want to call them). Remember the Liskov principle: the TCPSecure should be a drop-in replacement for TCPServer, in that it will do everything TCPServer will do from a programming point of view. It doesn't need to do it the same way, and it can in fact block certain user behavior, but the code calling it shouldn't need to know, and calling functions should not get unexpected results. Another issue is that security is not just a quick add-on. It requires attention to the whole system. I'd think that this favors subclassing, in that it puts the secure behavior all in one place. If you go with the behavior switch, I'd suggest having every feature document what it does differently with it set to secure or insecure.
