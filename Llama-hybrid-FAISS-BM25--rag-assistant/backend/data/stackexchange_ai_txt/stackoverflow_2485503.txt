[site]: stackoverflow
[post_id]: 2485503
[parent_id]: 
[tags]: 
Embedding cg shaders in C++ GPGPU library

I'm writing a GPGPU Fluid simulation, which runs using C++/OpenGL/Cg. At the moment, the library requires that the user specify a path to the shaders, which is will then read it from. I'm finding it extremely annoying to have to specify that in my own projects and testing, so I want to make the shader contents linked in with the rest. Ideally, my .cg files would still be browsable seperately, but a post-build step or pre-processor directive would include it in the source when required. To make things slightly more annoying, I have a "utils" shader file, which contains functions that are shared among things (like converting 3d texture coords to the 2d atlas equivalent). I'd like a solution that's cross platform if possible, but it's not so big a deal, as it is currently windows-only. My searches have only really turned up objcopy for linux, but using that for windows is less than ideal. If it helps, the project is available at http://code.google.com/p/fluidic
