[site]: stackoverflow
[post_id]: 1737864
[parent_id]: 1737514
[tags]: 
Just like everyone else here, I'll chime in with "Use my favorite framework, because it's what I use...." I would start with small goals for a web interface. Get something simple up and running that to make sure you understand how things work. Write an app that responds to the following url and returns something. http://localhost:8000/my_links Once you understand the little bit of machinery it takes to make that possible, what is handed to you as far as information about the request, and what you need to produce to return to the caller, it should be come clear how to fill in the blanks to get from your existing application to data thrown at the web browser. Learn WSGI for no other reason than most of the libraries that will help you build a web application utilize this to some degree. One of the links from the above page that I found extremely beneficial in understanding how all this works. was Ian Bickings article " A Do-it Yourself Framework " Once you get a grasp of that stuff, you may find that dealing with WSGI at such a low level is maybe a little too cumbersome. That's when you'll probably want something like WebOb which is just one of several ways people have come up with for abstracting away the low level details of the request/response cycle into some convenient objects. In a sense encompassing the HTTP protocol without trying to make it make sense to someone who doesn't want to know what HTTP is. Depending on the complexity of your application you may decide that handling a request, looking at the path and dispatching off to one of many functions is a drag you'd rather not deal with. This is where everyone's favorite framework starts to be beneficial. And I would suspect that you would know enough by this point to better assess the frameworks that are out there and determine which fits your needs and goals. Lots prefer django, maybe you will too. Others prefer Turbogears, and or Pylons, maybe bfg, maybe grok, maybe zope, maybe plone. But no one here knows what you want your application to do.
