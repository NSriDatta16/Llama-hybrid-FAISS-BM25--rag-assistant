[site]: crossvalidated
[post_id]: 450022
[parent_id]: 449999
[tags]: 
While this is not a direct answer to your question, here are the reasons why NOT to use ML methods for prediction of time-series data. (1) In order to prepare a time series for an ML-based method the time series (size N) has to be packed repeatedly in blocks (size n) with one observation used as a response. This produces about n times larger dataset, looses n leading points as responses, and doesn't provide any new information. (2) ML-methods are almost invariably based on some use of cross-validation that cares not for the time ordering, which means that future datapoints would go in training partitions and past data points in the testing partitions. (3) Incorporating covariates only exacerbates the problem of enlarging the data and losing the information at the same time. (4) Using ML tree-based methods for regression would impair the predictions since these methods can't predict beyond observed data ranges. (5) Uncertainty quantification difficult Thus, I'd stay away from ML when working with time series data. This does not apply to structured serial data, for example in NPL or the like. However, the methods and goals there are different from (classical) time series problems and there are well established application focused solutions not based on generic or vanilla methods as found in ML libraries (Python or R alike). Some aspects of this issue, of ML use for TS prediction, have already been addressed here: Times series analysis vs. machine learning?
