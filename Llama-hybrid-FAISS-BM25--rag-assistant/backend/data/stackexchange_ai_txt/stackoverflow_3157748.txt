[site]: stackoverflow
[post_id]: 3157748
[parent_id]: 
[tags]: 
How to make a project "repository/team" ready

I have been working solo on a project for some time, and now, new developers are likely to join the project for various reasons. I, of course, use a version control software but I am afraid importing my project into Eclipse and making it run might prove a little difficult for new comers, and I want to make it as clean as possible. When I first took over the project, it took me almost two days to have the project built and run it, I documented every step and fixed the most obvious errors, but not all, and I want the project to run as it is when imported. The project is a mix of java projects for the backend, a j2ee project for the server and a flex project for the client. The IDE is going to be Eclipse The version control software is Perforce Here are some of the specific problems I have right now, should I fix them, and how ? Eclipse environment variables are used for libs, all the libs are in a folder in the j2ee project but are used by all the java projects (they have to be set in each IDE the project is imported into) Runtime JRE is specified in .classpath for each project, so each projects property must be edited when trying to build the project in another environment Apache server is specified in j2ee project property To avoid exporting the jars of all the java projects into the j2ee project each time I modify the code, there are linked folders in the j2ee projects, linked to each java project bin folders For (4) I will probably have to use maven, but is it possible to fix problem (1) (2) and (3) without using maven ? The alternative is to have a one page set up instruction document Also do you have any other general or specific advices as to how organize this whole mess. Thank you
