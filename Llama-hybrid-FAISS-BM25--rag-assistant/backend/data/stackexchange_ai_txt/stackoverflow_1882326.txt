[site]: stackoverflow
[post_id]: 1882326
[parent_id]: 1880995
[tags]: 
If you can, CPAN. (ha! It rhymes ... what a crime. Oops, did it again! When will this end... :p) It's essentially the way to install modules for your system. It automatically detects dependencies, downloads, installs, and tests them all for you, and backs out if ever a build or test fails. It's a fantastic and reliable way of installing modules. This works great if you're using essentially any Perl distribution besides ActiveState's distribution, including Strawberry Perl. Generally, this is done with cpan Module::Name or, in an interactive mode, $ cpan cpan > install Module::Name If you're using ActiveState Perl, then you probably want to use ActiveState's PPM (Perl Package Manager). It's similar to CPAN, except everything comes prebuilt for ActiveState Perl. ActiveState has a document on how to use their Perl Package Manager on their website, including a graphical example. If the easy options fail, you are not out of luck. There's some more complex, but manual methods you can do to still install the module. Most modules that you can download will have within them a bit of metadata in a .yaml file; this will help you figure out whether or not you have all your dependencies. CPAN and PPM automatically resolve and install all your dependencies, but doing it manually will not, leaving that task up to you. Assuming you have all your dependencies, and you need to install it manually, look for one of two files: Makefile.PL or Build.PL. If you have a Makefile.PL, cd to the directory you extraced the module within a command prompt, and type: perl Makefile.PL make make test make install You will need a 'make' program on your system. If it's ActiveState Perl, you may need to install the module manually (see a paragraph or two down.) If it happens to have a Build.PL, then you need to do a slightly different set of steps: perl Build.PL Build Build test Build install (Of course, you may want to consider not installing if make/Build test fails, but that's up to you.) As a final alternative, if your module has no xs files (ie, code that needs to be compiled on install), and all dependencies are met, you can simply move the files in the lib folder to your perl installation's site\lib folder. If you're interested in just using it for one project, you can add a PERL5LIB environmental variable, pointing to a new, custom library directory (eg, /my/project/lib ) and then before running your tool, make sure the environment is set up. As a followup, see PerlFaq8 - How do I install a module from CPAN . Also, see PerlFaq8 - How do I keep my own module/library directory? .
