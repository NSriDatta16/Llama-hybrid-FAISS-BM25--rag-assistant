[site]: stackoverflow
[post_id]: 1173822
[parent_id]: 1173780
[tags]: 
The heart of any language is the linker and compiler, the compiler which converts source code into intermediary, very close to machine code, code. From this point, linkers are used to attach it to other binaries such as libraries, etc. After the binaries are linked to all logical pieces, they become an executable file in machine code (or translatable intermediary code as it is with .NET/Java). The most translating from "human" english happens in the compiler, and there are great articles on how this is done... but to most of this it is in the realm of the supernatural, as the organizational skills required to write a working compiler are immense. You can see the surface level sorts of translations and get a closer look at how compilers work by looking at language definitions (Bjarne Stroustrup's "The C++ Programming Language", Microsoft Press's "The C# Programming Language"), where both the appendixes and peppered throughout are lexical pieces, or rules which the compiler will use to translate your words into machine code in a very logical way. I highly recommend reading the language definition of your favorite programming language if you wish to understand more, also the wikipedia article on compilers will give you a broader understanding.
