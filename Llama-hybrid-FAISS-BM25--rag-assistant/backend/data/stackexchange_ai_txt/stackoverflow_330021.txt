[site]: stackoverflow
[post_id]: 330021
[parent_id]: 239863
[tags]: 
My understanding (or rationale) is that units should follow a hierarchy of abstraction and scope similar to the hierarchical decomposition of your code. A method is a small and often atomic (conceptually) operation at a low level of abstraction, so it should be tested A class is a mid-level concept that offers services and states and should therefore be tested. A whole module (especially if its components are hidden) is a high-level concept with a limited interface, so it should be tested, etc. Since many bugs arise from the interactions between multiple methods and classes, I do not see how unit testing only individual methods can achieve coverage, until you already have methods that make use of every important combination, but that would indicate that you didn't test enough before writing client code.
