[site]: stackoverflow
[post_id]: 3217507
[parent_id]: 3217329
[tags]: 
@Staffan and others have given sterling advice, so I am not going to offer a solution - just suggest an approach. There are many possible solutions and I would say a major decision is whether or not you want a GUI. If not, you can probably go with C. With a GUI, go with Java (which you dion't want to), or use NetBEans as your IDE with Qt for the widgets. But whatever you do, I think the most important is to detect potential pronlems as early as possible. If you use C, you can use Splint or other static code analysis tools they will warn of portability issues. Similarly, turnning your compiler warning levels to max should help. Set up a continuous integration system like Hudson to build everything regularly and make sure that you have lots of autometd unit tests (using CppUnit or similar) and use the same test on each platform, with the tests targetting portability issues. Perhaps consider Posix or using only Ansi C or some other standards compliant language. How you go about setting up CI depends on how many potential targets you have. Maybe you need to run each on a sepearte PC or in a sparate VM. If you chose C or C++ you might be happy with using GCC under Cygwin in Windows and the C/C++ compiler of your choice (need advice on a good free one?) See also: http://www.hookatooka.com/wpc/ and, of course, http://www.google.com/search?hl=en&rls=com.microsoft%3Aen-sg&q=portable+code
