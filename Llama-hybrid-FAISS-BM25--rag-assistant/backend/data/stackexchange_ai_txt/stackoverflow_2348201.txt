[site]: stackoverflow
[post_id]: 2348201
[parent_id]: 2348045
[tags]: 
When you call virtual functions during construction of some class C (i.e. while the constructor of C is active), the virtual mechanism works , but it works in restricted mode. The resolution of the virtual calls in the class hierarchy is limited by the class that is currently being constructed ( C ). This means that the virtual calls will resolve as if the class C is the "final" class in the hierarchy, as if it has no descendants. The same is true for destructors. In your example, you are calling a virtual function from constructor of class GUIWindow . As long as the constructor of GUIWindow is active, its virtual mechanism will work as if there are no other classes derived from GUIWindow . This mechanism will completely ignore the existence of GUIListbox class. This is why the resolution of virtual call "stops" at GUIWindow and calls GUIWindow::SetupCallbacks , as if GUIListbox::SetupCallbacks doesn't exist. You can read about in in C++ FAQ http://www.parashift.com/c++-faq-lite/strange-inheritance.html#faq-23.5
