[site]: stackoverflow
[post_id]: 4185346
[parent_id]: 4181120
[tags]: 
Well, I found one way to do it, although I don't find it super elegant. Edit: Actually, the solution below doesn't work properly. It actually causes no entries to be added to the list, regardless of them being an empty element or fully formed with data. Maybe I've done it wrong, so any comments are welcome. I created an adapter to handle the conversion and informed JAXB using an annotation: class Course { @XmlElement (name = "book") @XmlJavaTypeAdapter(BookListAdapter.class) List requiredBooks = new ArrayList (); and then defined my adapter: static class BookListAdapter extends XmlAdapter > { public Book[] marshal(List aBookList) { if (aBookList!= null) { return aBookList.toArray(new Book[aBookList.size()]); } return null; } public List unmarshal(Book[] aBookArray) { List bookList = new ArrayList (); if (aBookArray != null) { for (Book book : aBookArray) { if (StringUtils.isNotEmpty(book.getTitle())) { bookList.add(book); } } } return bookList; } } It works as I want it to, but, as I said earlier, I'm not convinced of its elegance. Edit: As described above, this doesn't work but probably due to some error on my part.
