[site]: stackoverflow
[post_id]: 2870502
[parent_id]: 2864624
[tags]: 
In addition to Albert's suggestion, you might want to make this work within the query itself, so that it's "bootstrappable." To do that, you'd have to write function that returns the value chosen in the combo box on the form. It would be something like this: Public Function ReturnMyCriterion() As Variant DoCmd.OpenForm "dlgGetCriterion", , , , , acDialog With Forms!dlgGetCriterion If .Tag <> "Cancel" Then ReturnMyCriterion = Nz(!cmbMyCombo, "*") End If Else ReturnMyCriterion = "*" End With Close acForm, "dlgGetCriterion" End Function (when opening a form with the acDialog switch, the code pauses as long as the form is open or visible; to get the value out of the combo box, you have to set the form's .Visible property to False. You could do this in the AfterUpdate event of the combo box, or in the OK button. You'd also want a Cancel button that set's the form's .Tag property to "Cancel" and then sets the form's .Visible property to False; this is all relatively a standard approach to working with dialog forms in Access). You'd then make the criterion in your query be: Like ReturnMyCriterion() That is, assuming you want to return all records if no value is chosen in the combo box.
