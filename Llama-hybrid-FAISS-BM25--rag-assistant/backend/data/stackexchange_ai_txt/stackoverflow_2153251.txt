[site]: stackoverflow
[post_id]: 2153251
[parent_id]: 2153216
[tags]: 
The answer, sadly, is (1). JNDI does not dictate a mechanism for how the object is stored on the tree, or how it is delivered to clients. It's just an API to use for performing the operations. If both applications are in the same JVM, as they are here, then Weblogic is very likely just handing the object directly to the client application. There is no stub, and "remote side". Since the types implemented by that object are not visible to the client application (remember, a type identity is defined by the class name, and also the classloader it was loaded from). You might think this is a weird thing to happen, but bear in mind that applications talking amongst themselves like this is not the norm in JavaEE development - the apps are supposed to be isolated from one another, sharing only system-level resources.
