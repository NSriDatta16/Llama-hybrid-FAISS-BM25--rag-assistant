[site]: stackoverflow
[post_id]: 4698057
[parent_id]: 4698037
[tags]: 
Your understanding is correct, but incomplete. Yes, Interface Builder instantiates classes and serializes them into the NIB. However, those objects are not automatically available to your code. For each IB object you want to access through Xcode, you need to declare an IBOutlet variable. Example: IBOutlet NSWindow* mainWindow; // A Reference to your main window Put this code in the header file of a custom object that you instantiate through Interface Builder (drag a generic Object to your class list, then in the Identity tab of the inspector, set the custom object to be an instance of your class). Then, right-click on your custom object in Interface Builder. You should see an entry for your IBOutlet in the window that pops up. Drag from the little circle next to it to (in this example) your main window. You now have a reference to the IB object in Xcode. It is through making these connections (with IBOutlets for references and IBActions for methods) that you define much of the behavior of your application.
