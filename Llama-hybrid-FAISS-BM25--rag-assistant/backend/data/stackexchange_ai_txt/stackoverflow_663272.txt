[site]: stackoverflow
[post_id]: 663272
[parent_id]: 663197
[tags]: 
There are two things to take into account when looking at Code Coverage. Code coverage is a battle of diminishing returns: beyond a certain point each additional percentage yields less value. Some code (like core libraries) should be 100% covered whereas UI code/interaction can be very difficult to cover. Code coverage is a metric that can be deceiving: 100% code coverage does not equate to a fully tested application. Take for example this snippet: if (a == 2) { do_A_Stuff(); } if (b == 3) { do_B_Stuff(); } Run a test where a = 2 and a second test where b = 3. That's 100% code coverage. But what happens when with a test where a = 2 & b = 3? These are "Variable Relationships" and can lead to overconfidence in coverage metrics.
