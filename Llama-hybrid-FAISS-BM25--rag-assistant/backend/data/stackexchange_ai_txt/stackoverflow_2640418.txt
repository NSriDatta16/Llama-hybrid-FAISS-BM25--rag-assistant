[site]: stackoverflow
[post_id]: 2640418
[parent_id]: 
[tags]: 
ASP.NET Session Expiration

I have an ASP.NET web application that, for whatever reason, when it is deployed on any IIS server, will behave like the pages are cached and it simply never posts back to the server. For example, navigate to the login page, enter credentials, click the login button, and it's back to the login page you go, with the form fields cleared. The information is not getting submitted back to the server. The postback is not executing. It seems the browser is simply restoring the original page from cache. I found this article that says I need to put something in the ASP.NET session state in order for the session to remain valid. When a user connects to an ASP.NET application, a unique session ID will be affiliated with the user. If nothing is put in the session however, no cookie will be sent to the browser. This means that the user will get a new session ID the next time a new url is open or the page is refreshed. If something is put on the session (HttpContext.Current.Session["Hello] = "hello") however, ASP.NET will issue a cookie called ASP.NET_SessionId. This cookie contains the user's session ID and the cookie will expire at the end of the session (when you close your browser). I will try what that article recommends, as I had not been storing anything in the session. I have also added expiration headers to the page: Response.Cache.SetExpires(DateTime.UtcNow.AddMinutes(-1)) Response.Cache.SetCacheability(HttpCacheability.NoCache) Response.Cache.SetNoStore() and put some meta tags in the html: Any other ideas as to what the cause of this behaviour may be?
