[site]: stackoverflow
[post_id]: 2532602
[parent_id]: 2529242
[tags]: 
It is hard to make suggestions in the context of this method alone, because the result value is a single string containing the full content of the received data... sooner or later however this method gathers the data, it needs to be turned into a single array of characters. It may be worth asking the question whether the caller of this method really needs the whole response at a time in memory; could the caller process the data a line at a time so that only one line needs to be in memory at a time? (If so, maybe an IEnumerable implemented with yield statements would work much better without significantly changing the implementation of the method) With regards to memory allocation, keep in mind that not all memory allocations are created equal in .NET; allocations over about 85kb in size get treated differently and when allocated/released frequently can cause memory fragmentation; see: http://msdn.microsoft.com/en-us/magazine/cc534993.aspx If fragmentation is your main problem and you only ever process a single document at a time, then creating a single shared buffer and keeping it allocated can help you out a bit there, but check whether this is your problem before assuming it... fixing something that isn't broken is a waste of time.
