[site]: stackoverflow
[post_id]: 4544200
[parent_id]: 4544165
[tags]: 
Regular expressions would be a way: var re = /^-?\d\d*$/ alert(re.test(strNumber)); // leading or trailing spaces are also invalid here Complete example with updates: http://rgagnon.com/jsdetails/js-0063.html function validateInteger( strValue ) { /************************************************ DESCRIPTION: Validates that a string contains only valid integer number. PARAMETERS: strValue - String to be tested for validity RETURNS: True if valid, otherwise false. **************************************************/ var objRegExp = /(^-?\d\d*$)/; //check for integer characters return objRegExp.test(strValue); } Updated to handle whitespace - which possibly is not allowed in the validation but here it is anyway: Possible to continue to use the code from the link I gave (leftTrim/rightTrim) but here I reuse trim from .trim() in JavaScript not working in IE function ignoreLeadingAndtrailingWhitespace( strValue ) { return strValue.length>0?validateInteger( strValue.trim() ):false; } if(typeof String.prototype.trim !== 'function') { String.prototype.trim = function() { return this.replace(/^\s+|\s+$/g, ''); } } function validateInteger( strValue ) { /************************************************ DESCRIPTION: Validates that a string contains only valid integer number. PARAMETERS: strValue - String to be tested for validity RETURNS: True if valid, otherwise false. **************************************************/ var objRegExp = /(^-?\d\d*$)/; //check for integer characters return objRegExp.test(strValue); }
