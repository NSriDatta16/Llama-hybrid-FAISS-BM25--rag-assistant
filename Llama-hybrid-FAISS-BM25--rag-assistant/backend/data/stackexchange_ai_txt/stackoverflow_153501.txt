[site]: stackoverflow
[post_id]: 153501
[parent_id]: 153394
[tags]: 
Think about how these tasks would be done if there was no computer, and model your system that way. Simple example... Client fills out a form to request a widget, hands it to an employee, the employee verifies the client's identity, processes the form, obtains a widget, gives the widget and a record of the transaction to the client and keeps a record of the transaction somewhere for the company. Does the client store their data? No, the employee does. What role is the employee taking when he's storing the client data? Client Records Keeper. Does the form verify that it was filled out correctly? No, the employee does. What role is the employee taking when he's doing that? Form Processor. Who gives the client the widget? The employee acting as a Widget Distributor And so on... To push this into a Java EE implementation... The Servlet is acting on behalf of the Client, filling out the form (pulling data from the HTTP request and making the appropriate Java object) and passing it to the appropriate employee (EJB), who then does with the form what needs to be done. While processing the request, the EJB might need to pass it along to another EJB that specializes in different tasks, part of which would include accessing/putting information from/to storage (your data layer). The only thing that shouldn't map directly to the analogy should be the specifics on how your objects communicate with each other, and how your data layer communicates with your storage.
