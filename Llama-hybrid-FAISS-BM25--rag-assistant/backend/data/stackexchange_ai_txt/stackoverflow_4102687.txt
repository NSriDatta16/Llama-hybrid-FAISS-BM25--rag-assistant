[site]: stackoverflow
[post_id]: 4102687
[parent_id]: 4092985
[tags]: 
Solved it. Pretty much cheated on it. I basically read the XML document with an XDocument, get the reader with XDocument.CreateReader() and pass the reader to the DataContractSerializer. That did the trick, I know it's not very elegant, but it's a solution. Hopefully I'll come up with a better solution in the future. For now, here's the code: private bool Load() { if (!_isLoaded) { using (IsolatedStorageFile file = IsolatedStorageFile.GetUserStoreForApplication()) { if (file.FileExists(_fileName)) { string text = string.Empty; try { using (IsolatedStorageFileStream stream = new IsolatedStorageFileStream(_fileName, FileMode.Open, file)) { if (stream.Length > 0) { XDocument document = GetXDocument(stream); DataContractSerializer serializer = new DataContractSerializer(typeof(ClubManager)); ClubManager temp = serializer.ReadObject(document.CreateReader()) as ClubManager; stream.Close(); } } _isLoaded = true; } catch (Exception ex) { MessageBox.Show("There was an error loading your favorite clubs. " + ex.Message); } } } } return _isLoaded; } private XDocument GetXDocument(IsolatedStorageFileStream stream) { // read the file to find errors string documentText = ReadBytes(stream); return XDocument.Parse(documentText); } private static string ReadBytes(IsolatedStorageFileStream stream) { byte[] buffer = new byte[stream.Length]; stream.Read(buffer, 0, buffer.Length); string normal = string.Empty; string hex = BitConverter.ToString(buffer).Replace("-", ""); while (hex.Length > 0) { // Use ToChar() to convert each ASCII value (two hex digits) to the actual character normal += System.Convert.ToChar(System.Convert.ToUInt32(hex.Substring(0, 2), 16)).ToString(); // Remove from the hex object the converted value hex = hex.Substring(2, hex.Length - 2); } return normal; } Thanks!
