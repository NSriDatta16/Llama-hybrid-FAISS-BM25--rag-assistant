[site]: crossvalidated
[post_id]: 538488
[parent_id]: 
[tags]: 
How to update probabality of one option with result of multiple options

I am working with API that provides only a limited number of results 400 to be exact but I want to gather all of these results. I can filter results by: Predefined price ranges (e.g ['10\$-100\$', '100\$-500\$']) Categories - it is possible to specify multiple categories at once (e.g 'cookies' or 'cakes') Currently, my approach looks something like that: categories = ['cookies','cakes','meat','vegatables'] for price in price_range: query(price,categories) def query(price_range, categories): result = request(price_range, categories) if len(request) > 400: half = len(categories) // 2 return [*query(price_range, categories[0:half]),*query(price_range, categories[half:0])) return result My algorithm currently is quite naive, because it could split categories from a query for 'nice cake' into cookies or cakes or cupcakes and meat and vegetables . That would execute like that: Query meat and vegetables -> 50 results Query cookies or cakes or cupcakes -> 600 results so we split Query cookies -> 100 results Query cakes or cupcakes -> 300 results So the better split would be cookies or meat or cupcakes and cakes or vegetables I've got an idea to track the distribution of the result to make more intelligent splits. But I ran into the problem of how to update the probability of cakes or cupcakes separately only knowing the data provided by the example above. My idea I assume that I track the number of things in the category seen and start with one seen in every category. cookies = 10, cakes = 15, meat = 3, vegetables = 2 cakes = cakes + (number of cakes or cupcakes) * (cakes / (cakes + cookies)) cookies = cookies + (number of cakes or cookies) * (cookies / (cakes + cookies)) meat = meat + (number of meat and vegetables) * (meat / (meat + vegetables)) vegetables = vegetables + (number of meat and vegetables) * (vegetables / (meat + vegetables)) Is there any way to improve on this? Thanks for the answers in advance have a great day :)
