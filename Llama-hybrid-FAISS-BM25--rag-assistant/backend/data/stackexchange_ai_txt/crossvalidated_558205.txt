[site]: crossvalidated
[post_id]: 558205
[parent_id]: 
[tags]: 
Pytorch - Conv1d followed by a Linear layer

I have a task where I want to take an input containing some sequential data, feed them to a Conv1D + FC network and output a probability for each element in the temporal dimension of the input. Essentially, Input: (batch_size, num_channels, num_timesteps) Output: (batch_size, num_timesteps) My issue is that I have a ragged tensor, and thus I'm struggling to understand how I should do the transition between the convolutional and the fully connected layers. conv_layer = nn.Conv1d(in_channels=num_channels, out_channels=32, kernel_size=3, padding="same") linear_layer = nn.Linear(what_should_be_here?, 20) linear_layer = nn.Linear(20, 1) I thought I could reshape my input array into having 32 channels before passing to the linear layer ( x.view(batch_size, -1, 32) ) but this ended up making the model not learn anything. I understand I can replace the linear layers with a Conv1d layer with a kernel size of 1 but however I'm curious of what am I getting wrong here Thanks a lot
