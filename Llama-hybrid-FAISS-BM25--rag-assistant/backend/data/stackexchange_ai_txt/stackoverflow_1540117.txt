[site]: stackoverflow
[post_id]: 1540117
[parent_id]: 1540070
[tags]: 
This is a little more elegant to my mind: private abstract class Piece {} private class King : Piece { } private class Imitator : Piece { } private void main(object sender, EventArgs e) { Piece x; x = CreateNewPiece(new King()); x = CreateNewPiece(new Imitator()); } private T CreateNewPiece (T piece) where T : Piece, new() { return new T(); } It relies on the new() generic constraint to instantiate a type variable.
