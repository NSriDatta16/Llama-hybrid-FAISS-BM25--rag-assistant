[site]: stackoverflow
[post_id]: 3294457
[parent_id]: 
[tags]: 
How do I control the definition, presentation, validation and storage of HTML form fields from one place?

I want to be able to define everything about a form field in one place, as opposed to having some info in the DB, some in HTML, some in JavaScript, some in ASP... Why do I have to worry about possibly changing things in four separate places (or more) when I want to change something about one field? I.e., I don't want to: declare the field in the DB and duplicate some of that info in HTML somewhere and duplicate some more info in some JavaScript somewhere and duplicate some more info in some ASP somewhere Since I'm a developer, I'm ideally looking for a methodology, not a tool or S/W package. (I think!) Currently , I'm doing this by putting all control information into SQL's extended property "Description" text area. E.g., a required phone number field would have the following SQL declaration: [home_phone] [varchar](15) NOT NULL and I put the following "controls" in the Description extended property: ["Home Phone"][phone_text][user_edit][required][allow_na][form_field_size_equals_size][default=""][group="home_address"][rollover="enter only: numbers, dash, parenthesis, space"][explanation="enter n/a if you don't have a home phone"] With my current system, the following HTML is dynamically generated for the Home Phone field: Home Phone * enter n/a if you don't have a home phone which looks like this (in IE 7): Client-side JavaScript validation is controlled by the **FORM_control**... parameters, which on error produces explanations and field highlighting. (Unfortunately, custom parameters in HTML elements isn't exactly standards compliant.) My primary problem is that this method using the Description field has always been cumbersome to use and maintain. The Description property can only be 255 chars, so I have lots of abbreviations. As the system has expanded, the number of controls has also greatly expanded past the original dozen or so. And my code for interpreting all these controls and their abbreviations is just not pretty or efficient. And as I said, custom parameters in HTML elements don't work in FireFox. Things I'm currently controlling (and want to continue to control) include: Field description (e.g. "Home Phone Number") DB table name (e.g., "home_address") DB field name (e.g., "home_phone") DB field type/size DB allow null Grouping (e.g., this particular field is part of all "Home" fields) Required/optional Read-only (for system supplied data) Size (presented form field size) Type (e.g., text, numeric, alpha, select, zipcode, phone, street address, name, date, etc) Accepted input (non-blank; numeric only; no spaces; phone number; reg exp; etc) Extended explanation (e.g., for phone # "enter n/a if you don't have a home phone") Roll-over explanation (e.g., for phone # "enter only: numbers, dash, parenthesis, space") Rows (for select lists -- 1 = drop-down) Rows/Columns (for textareas) Error message text Error indication (how to show which field contains an error, e.g., red background) Etc... And to be clear, I'm all for separation of logic and design elements. I do have a separate CSS file which is manually maintained (not part of the generation process). My server environment is classic (non-.Net) ASP and SQL 2008. I'm pretty good with HTML, CSS, JavaScript, and ASP and I'm comfortable with SQL. What I imagine that I want is some sort of JSON, XML, etc that is the single source used to generate everything, e.g.: a SQL script that actually creates the SQL tables the HTML (with CSS classes and JavaScript client-side validation/function calls) the ASP (server-side validation) My current method that does this is dynamic (not compiled) and pretty slow, so I'm probably looking for some sort of "compiler" that generates this stuff once. And I really only have classic ASP, JavaScript or SQL as the available languages for this "compiler". And while I think I could create this system myself, I'm hoping that other, better developers have already come up with something similar. Assume this should scale to at least scores of fields. (FYI, my current form has way too many fields on one page, but I'm solving that issue separately.) Thanks for any help!
