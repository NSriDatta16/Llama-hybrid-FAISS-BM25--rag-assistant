[site]: stackoverflow
[post_id]: 3234649
[parent_id]: 3231688
[tags]: 
Ahh, xml returned from GetListItems is almos the same as SPListItemCollection.Xml. I have an extension method that converts this XML into datatable. You can just try to use ConvertZRowToRegularXml method on your returned XML - and you would get back an XML that DataTable understands. Credits for the solution goes to Vincent Rothwell. public static class SPListItemCollectionExtensions { public static readonly string xsltFromZRowToXml = " " + " " + " " + " " + " &lt;rows&gt; " + " " + " &lt;/rows&gt; " + " " + " " + " &lt;row&gt; " + " " + " &lt;/row&gt; " + " " + " " + " &lt; " + " " + " &gt; " + " " + " &lt;/ " + " " + " &gt; " + " " + " "; public static DataTable GetFullDataTable(this SPListItemCollection itemCollection) { DataSet ds = new DataSet(); string xmlData = ConvertZRowToRegularXml(itemCollection.Xml); if (string.IsNullOrEmpty(xmlData)) return null; using (System.IO.StringReader sr = new System.IO.StringReader(xmlData)) { ds.ReadXml(sr, XmlReadMode.Auto); if (ds.Tables.Count == 0) return null; return ds.Tables[0]; } } static string ConvertZRowToRegularXml(string zRowData) { XslCompiledTransform transform = new XslCompiledTransform(); XmlDocument tidyXsl = new XmlDocument(); try { //Transformer tidyXsl.LoadXml(Balticovo.SharePoint.Extensions. SPListItemCollectionExtensions.xsltFromZRowToXml); transform.Load(tidyXsl); //output (result) writers using (System.IO.StringWriter sw = new System.IO.StringWriter()) { using (XmlTextWriter tw = new XmlTextWriter(sw)) { //Source (input) readers using (System.IO.StringReader srZRow = new System.IO.StringReader(zRowData)) { using (XmlTextReader xtrZRow = new XmlTextReader(srZRow)) { //Transform transform.Transform(xtrZRow, null, tw); return sw.ToString(); } } } } } catch { return null; } } }
