[site]: stackoverflow
[post_id]: 960944
[parent_id]: 960927
[tags]: 
Paul Haahr has interesting suggestions , such as: Don't subclass concrete classes (read the original, I don't want to copy and paste everything;-). Paul's writing about Java, but I found at least this part of his advice is applicable to most any OO design task (though pragmatically I still occasionally deviate from it in coding , it's alive and well in my design ;-), even when I'm going to implement it in C++, Python, or whatever. If, after reading Paul's reasoning, you find yourself agreeing with him, you're going to be using a lot more abstract classes in the future (to allow subclassing;-).
