[site]: datascience
[post_id]: 102980
[parent_id]: 
[tags]: 
Correct approach to scale (min-max scaler) both input and output signal data for unsupervised learning?

I am working on a denoising autoencoder problem with noisy and clean signals. Before I pass the signals to my model I want to apply min-max normalization and am unsure of the correct way to apply this. The model will see the noisy signal as the input and the output/reference signal as the clean signal (denoising autoencoders are a type of unsupervised learning where concepts of features and labels perhaps don't apply in the original sense). The current way I am applying scaling is by fitting and transforming the noisy and clean signals separately before fitting into the model - is this the correct strategy? from sklearn.preprocessing import MinMaxScaler scaler_noisy = MinMaxScaler() scaler_clean = MinMaxScaler() X_noisy_train = scaler_noisy.fit_transform(X_noisy_train) X_clean_train = scaler_clean.fit_transform(X_clean_train)
