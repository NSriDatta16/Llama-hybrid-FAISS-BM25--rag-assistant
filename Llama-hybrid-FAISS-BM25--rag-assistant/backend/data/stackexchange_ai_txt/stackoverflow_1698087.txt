[site]: stackoverflow
[post_id]: 1698087
[parent_id]: 1698071
[tags]: 
I found unit tests to be the most efficient, effective and powerful tool. So, before making any change, make sure your application has a minimum LOC so that you won't break any existing feature working on. You should care about unit tests (of course I'm talking about unit/functional/integrational tests) because: they ensure you won't break any existing feature they describe the code so that you won't need tons of comments everywhere to understand why that code fragment acts in that way having test you'll spent less time debugging and more time coding When you have tests, you can start refactoring your app. Here's a list of some tools I usually work with: Rack::Bug New Relic You might want to view some of the wonderful Gregg's videos about Scaling Rails to get more powerful tools. Also, don't forget to immediately start tracking how your application is performing and whether it is raising exceptions. You can use one of the following tools Hoptoad Exceptional If you need to fix some bug, don't forget to reproduce the issue with a test first, then fix the bug.
