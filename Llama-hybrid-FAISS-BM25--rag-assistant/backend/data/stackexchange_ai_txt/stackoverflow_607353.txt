[site]: stackoverflow
[post_id]: 607353
[parent_id]: 607230
[tags]: 
If you have a chance, have a look at the book by Robert C. Martin: Agile Principles, Patterns, and Practices in C# (This is the new version specifically targeted to .Net) There is a chapter dedicated to component design that (probably) answers your question. In summary, and after reading that book, I always recommend separating components by these criteria: Assemblies are units or reuse : If there are classes that have to be used together, they go in the same assembly. Assemblies are units of change : If there are classes that do not have to change for the same reason, they probably should not be in the same assembly. Assemblies are units of deployment : If there are classes that have to be physically deployed in the same place, they probably should go in the same assembly. Of course these are just heuristics and not recipes. You eventually need to decide how much of each one of those three design heuristics you need based on the architectural goals of your application (specifically the architectural goals for deployment and evolution/modification).
