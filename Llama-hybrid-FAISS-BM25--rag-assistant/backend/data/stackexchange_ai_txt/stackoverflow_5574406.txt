[site]: stackoverflow
[post_id]: 5574406
[parent_id]: 2562329
[tags]: 
We had similar problem in our company. We checked all the available open-source solutions and none of them was really perfect. So we developed and just open-sourced a solution for it. I still do not say an "ultimate" one but certainly much better than either athena or the python reporter or any after-test analysis. You can find it here: http://code.google.com/p/the-missing-android-xml-junit-test-runner/ It provides: separate XML file per each package involved XML files are generated on the device (need to be adb pull'ed after test) timing of the tests is fully supported we have full stack trace reported in failure/error case Instead of analysing java source code (as in athena) or analysing the output (the python script), we extended android instrumentation runner. So we get all the benefits of using standard command line options for test selection, coverage enabling etc. - all described here: http://developer.android.com/guide/developing/testing/testing_otheride.html#RunTestsCommand . We were able to successfully run the code using standard test rules with coverage analysed by emma, all nicely reported in Jenkins.
