[site]: stackoverflow
[post_id]: 2796593
[parent_id]: 2796579
[tags]: 
If you return stringPtr , you will be returning a pointer to a local variable ( string ). So no, you can't do that. Why are you trying to do this? That might allow us to make better suggestions. Update: Okay, now I see what you're trying to do. You're doing it wrong: value = &string; If value is meant as an output parameter, the above line cannot work because you're assigning to a local variable . Don't let the extra level of indirection confuse you. If you were writing a function that had an output parameter of type T , you'd write it as: void foo(T* value) { *value = GetT(); } Now replace T with const char* : ... *value = string; ... And now you're not involving any temporary, local variables. Of course, that's how the code was originally written (and that part of it was correct), so that doesn't really help you. To address your intent, you should: Make config_setting_lookup_string do assert(value != NULL) . Audit the callers of the function and fix them to stop passing garbage. They should be doing: const char* foo; config_setting_lookup_string(..., &foo); and NOT: const char** foo; config_setting_lookup_string(..., foo);
