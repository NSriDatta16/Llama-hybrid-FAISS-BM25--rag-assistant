[site]: stackoverflow
[post_id]: 2261670
[parent_id]: 2228222
[tags]: 
If I understand you correctly, you have two separate problems: 1) The checks in each layer just return a boolean indicating enabled / disabled, and don't return the reason. You would have to change that such that each check also returns the reason; e.g. you could return a tuple (enabled, reason) , where access is the boolean that you have now, and reason a description of the reason why it is disabled (e.g. as a string). Depending on the environment you are working in, changing the return type of all access checks may not be feasible; if you want to avoid this, you could report the reason "out of band", e.g. stash it into a global (or rather thread-local) variable, a la errno in UNIX or GetLastError in Windows. That's not that elegant, and will certainly be frowned upon by many, of course :-( Alternatively, you could change your checks to throw exceptions (with a descriptive message) instead of returning a boolean. Again, this will be frowned upon in many environments... 2) Your business layer adds entries to the object's access control lists. When you later check the access, you know which entry denied the access, but you don't know anymore, why this entry has been added. Th solve this, you could add a reason field to the ACEs. When the business layer adds an ACE, it sets the reason to a description of the reason why the access was denied. The access control check then reads the reason from here and passes it up to the GUI layer as described above.
