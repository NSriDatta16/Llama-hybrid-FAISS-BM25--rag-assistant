[site]: datascience
[post_id]: 122154
[parent_id]: 
[tags]: 
Machine Learning Geographical Data with NaNs

I have some features (physical properties related to geographical etc. of the Earth), I have a target that I'd like to predict. Sometimes this target is covered with clouds so I cannot see its actual value. Therefore at a single timestep I see a 2D target (latitude by longitude), sometimes there are NaN values corresponding to clouds (mostly, but not entirely). If I discard data over the whole area when there is any cloud I will be losing a lot of data, and also cherry-picking only sunny days. Sometimes the satellite fails and there are NaN values for the whole day. These issues are essentially only for the target - the features are essentially 'full data'. I would like to have an MLP, LSTM or whatever other NN (say) that is capable of dealing with these NaN values. I do not know if the process I am trying to predict is sensitive to geographical location, so it could be the case that I can use one NN for all locations for this single target, or whether I would need e.g. if it is a 10x10 grid, to have 10x10 activation functions at the output layer. Either way I am unsure how to deal with this as backpropagation of NaNs at 'random' times and locations in the target data seems to be something that can't be calculated/done. I assume this is not an uncommon problem, but can't find much on it. Does anyone know how to deal with NaNs in this situation?
