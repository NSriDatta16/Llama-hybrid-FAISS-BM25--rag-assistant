[site]: stackoverflow
[post_id]: 2903603
[parent_id]: 2896240
[tags]: 
Sorry, this won't be much help. But I am wondering: why would anybody document the implementing classes but not the interface? The interface documents the contract, that should usually be enough, and an implementing class can of course brag how well it implements the contract or state why it breaks it, but in 90% of the cases an {@inheritDoc} tag is enough for an implementation method, while the interface should define the method semantics. One of the reasons to do it that way is the one you are just encountering: people who develop code against interfaces (and I hope we all are) need these interfaces to be documented. If I need to look up the functionality of the implementing classes, why bother with interfaces at all? Of course there are exceptions where implementing methods should be documented (see above), and of course the implementing classes and constructors should always be documented, but an API with undocumented interfaces is in my opinion a bad API.
