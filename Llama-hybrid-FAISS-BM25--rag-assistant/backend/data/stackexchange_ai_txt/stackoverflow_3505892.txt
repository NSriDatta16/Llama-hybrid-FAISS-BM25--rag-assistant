[site]: stackoverflow
[post_id]: 3505892
[parent_id]: 3419595
[tags]: 
What I ended up doing was rather lame (I think). My goal was to take the contents of my Mercurial repository and overwrite my SVN working copy with them (so I can commit them to SVN later). I don't really care about the detailed history of the changes from Mercurial - the commit will be "rolled up" in the SVN repo. Non-working approach, A1: delete SVN working copy contents and then copy over the Mercurial working copy. Will not work because ... the .svn folders get destroyed. Working approach, A2: Use the find command to delete everything but the .svn folders from the SVN working copy. Then just copy the Mercurial working copy over. SVN will detect the changes and allow me to commit. Problems with approach A2: 1. It's manual. 2. If any directories are empty, Mercurial won't be tracking those, but they will be in the SVN repository (I haven't had this problem, but it could happen). 3. Lose Mercurial history on the SVN side. There's not much you can do about this since the SVN metadata is not as rich as Mercurial's. 4. Only good when one developer is committing in the SVN repo. If multiple devs are committing, then you will have to synchronize with all of their changes, including syncing those changes with all clones. Advantages with approach A2: 1) It's easy. In the svn working copy root, run this command: # delete all files in an SVN working copy, except those # in the .svn folders; directories are not deleted find . -path "*.svn" -prune -o -type f -exec rm -v {} + Use the file manager to drag the Mercurial working copy contents into the SVN working copy (you can use a script for this). Use TortoiseSVN to commit (you can verify all the changes easily that way). With that said, I'll accept the previous answer as it's probably The Right Way to do it.
