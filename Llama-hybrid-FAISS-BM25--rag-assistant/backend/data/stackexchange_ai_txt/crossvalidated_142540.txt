[site]: crossvalidated
[post_id]: 142540
[parent_id]: 142478
[tags]: 
Goodness of fit cannot be meaningfully computed for PCA. The principal function is doing something strange here. Function principal() is part of the psych package that implements factor analysis, and is designed to implement PCA in a manner mimicking factor analysis. In factor analysis, goodness of fit can be meaningfully computed as follows. Given a $p\times p$ covariance matrix $\mathbf S$, factor analysis fits a $p\times k$ matrix of loadings $\mathbf W$ where $k$ is the number of factors and a diagonal $p\times p$ matrix of uniquenesses $\boldsymbol \Psi$ such that $$\mathbf S \approx \mathbf C = \mathbf W \mathbf W^\top + \boldsymbol \Psi.$$ There are different methods of "factor extraction", differing in how exactly the distance between $\mathbf C$ ans $\mathbf S$ is measured. Maximum likelihood method finds loadings and uniquenesses maximizing log-likelihood of the observed data. The log-likelihood of the data is given by $$L_k=-\frac{n}{2}\left[p\ln(2\pi) + \ln|\mathbf C| + \mathrm{tr}(\mathbf C^{-1}\mathbf S)\right],$$ where $n$ is the number of data points (observations). Given two models with different number of factors $k_1$ and $k_2$, they can be compared via a likelihood ratio test that tells us that $$2(L_{k_1} - L_{k_2}) \sim \chi^2_{\mathrm{df}_1-\mathrm{df}_2}.$$ In particular, a model with $k$ factors can be compared to the "full" model with $k=p$ and $\mathbf C=\mathbf S$. In PCA, there is no $\boldsymbol \Psi$ and so $\mathbf C_\mathrm{PCA}=\mathbf W\mathbf W^\top$. This makes $\mathbf C$ low-rank, with zero determinant, and non-invertible. Consequently, in PCA likelihood cannot be computed and likelihood ratio is undefined (ultimately because PCA is not a probabilistic model). What exactly principal() is doing to "compute" it, is impossible to understand from its manual page . Having looked into its source code I saw that all the goodness of fit computations are done by the factor.stats() function, which again has an unclear manual page . The source code of factor.stats() reveals that after computing model covariance matrix $\mathbf C = \mathbf W\mathbf W^\top$, the algorithm makes its diagonal equal to the diagonal of $\mathbf S$ (making it full rank). This is the correct computation in factor analysis because there the diagonals of $\mathbf C$ and $\mathbf S$ always coincide (due to the matrix of uniquenesses), but makes no sense in PCA. The resulting goodness of fit computation is essentially a factor analysis computation, but with PCA loadings. This is weird. I am not sure how this could be justified. My advice would be to ignore it and to use some other approach instead. (Having said that, I guess that a very low $p$-value still does indicate that the number of components is "not sufficient": after all, such "diagonal-adjusted" $\widetilde{\mathbf C}$ is closer to $\mathbf S$ than the original $\mathbf C$, so if $\widetilde{\mathbf C}$ does not provide a sufficient fit, then $\mathbf C$ does not either.)
