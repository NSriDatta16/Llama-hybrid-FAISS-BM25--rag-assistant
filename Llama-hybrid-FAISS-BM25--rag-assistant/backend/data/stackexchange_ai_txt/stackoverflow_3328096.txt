[site]: stackoverflow
[post_id]: 3328096
[parent_id]: 3328045
[tags]: 
OK, I got this working and, in retrospect, it was pretty easy. I just didn't know which menus to use for getting VS to hook everything up, and which order to do them in. Looking at the Designer.cs for my form was actually the most helpful thing I did. I noticed was that the ReportViewer has a default BindingSource pointed at the first table. Originally, I was hung up on trying to give the BindingSource a DataSet instead of a DataTable, but then I decided to try making a second BindingSource instead. Maybe there's a better way, but here's basically what I ended up doing: With the RDLC in the designer, clicked the Report menu then Data Sources. On the Report Data Sources dialog, chose the additional DataTable from the drop-down and clicked Add to Report. (I also renamed the new data source to just be the name of the additional data table; VS had created some gigantic long name based on the full namesspace.) OK to close the dialog. On the designer for the form that contains my ReportViewer control, clicked the ReportViewer's smart tag (the little arrow in the top right corner of the control) and then selected Rebind Data Sources. This made a second BindingSource appear at the bottom of the Designer surface. Clicked the ReportViewer's smart tag again and this time chose "Choose Data Sources" to confirm that the ReportViewer now had two data sources, each bound to one of BindingSource instances now on the form. Revised the my form's OnLoad code to load rows into the second DataTable. Went back to the RDLC file, added a new table and set the detail cells to fields in the second DataTable -- and it worked! Hopefully this will save someone else a couple hours someday.
