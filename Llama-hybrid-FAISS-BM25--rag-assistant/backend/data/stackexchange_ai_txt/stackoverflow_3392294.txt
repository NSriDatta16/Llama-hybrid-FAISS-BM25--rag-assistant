[site]: stackoverflow
[post_id]: 3392294
[parent_id]: 3383254
[tags]: 
There are probably some subtle details of the problem that you are trying to address, that escape my attention, but if I were you, I would try to keep the presentation layer separated from the rest . The first question is: why do you need the years to be nodes? Are years going to contain some kind of information per se or will them just be a collection of events? From your question, I understand it is the latter, so I would rule out having years as nodes. If I got you correctly, the year when the event has happened is the only additional information that you want to store in the DB , while decades are just a way of grouping nodes according to that information, by using some kind of logic (in this case the integer part of year/10). You can achieve this in two ways, IMO. By means of a hierarchic taxonomy . By creating a node type called "event" that has a field "year" in it, and then by organising all the rest with views. The first option is straightforward [maybe is even what you were describing as option #2]. You do not necessarily lose flexibility as you can present automatically created information at the template level (for example a picture named like the year or the decade to be put in the page) or link human generated one to a given page with views [For example you could have nodes of type "year description" that you tag with the same taxonomy you use for "events", so that when you filter with the taxonomy term (1945) you will get a list of nodes "events" and one node "year description" in your result, and the template / views will take care of using different node types in different way] The second option is less straightforward but leave you more flesxibility. You have to directly code your own "node_event module" rather than using CCK, describing your fields to views too there. You then would use Views UI just to assemble your pages [nodes by decades, decade menu, filters...]). I am quite sure that you can also achieve a similar functionality to option #2 by using CCK + Views UI (so, without having to code), but for that kind of help maybe SO isn't the best place to ask, and you should probably ask on some Drupal-related forum instead. HTH!
