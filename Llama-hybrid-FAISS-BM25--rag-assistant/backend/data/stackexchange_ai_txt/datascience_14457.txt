[site]: datascience
[post_id]: 14457
[parent_id]: 
[tags]: 
Regression in Predicting Tenancy Lengths

I'm currently working on a project involving the prediction of tenancy lengths. I've so far managed to get to a point where I've processed the data and pruned my Random Forest model (via sklearn in Python) to the following accuracy levels (in days): Train MAE: 131 Train R^2: 0.906 Test MAE: 259 (using cross-validation) Test R^2: 0.651 While the model is decent for the industry, there's more performance to squeeze out of it. It currently overestimates results and has poor accuracy on the test data imo. I'd like to further develop a Neural Network approach, as my initial implementation of an MLP Regressor seems promising: Train MAE: 301 Train R^2: 0.582 Test MAE: 338 (using cross-validation) Test R^2: 0.522 My question is how can I improve my results for the prediction (using Python) other than using GridSearch to play around with the MLPRegression function in sklearn? Are there any other models that could be useful in this situation? (I have tried also decision trees, gradient boosting) In case it is relevant, my dataset contains ~5000 entries since 2008 onwards of individual tenancies, containing: tenancy dates, rent, repair costs, property information and replacements, client information, etc., currently at 41 variables.
