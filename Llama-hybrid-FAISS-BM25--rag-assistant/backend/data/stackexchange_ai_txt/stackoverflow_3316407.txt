[site]: stackoverflow
[post_id]: 3316407
[parent_id]: 
[tags]: 
Benefits and uses of a functional programming language

Possible Duplicate: Why functional languages? I began programming with C/C++, VB, and eventually Python - all imperative languages. I took a course about programming languages and learned my first functional language - OCaml. It was terrible. Syntax and other horrors aside, OCaml took my imperative thought process and threw it out the window. It was frustrating. I insisted that everything that could be done functionally could also be done imperatively. I thought of functional programming as imperative programming without a limb (side effects). In response to my frustration, the only benefit my professor could come up with was an FPL's ability to parallelize side-effect-free functions. Anyways, enough talk. What are some advantages that FPLs offer above IPLs? Is there anything that can easily be done in an FPL that cannot easily be done in an IPL? Are there any real-world examples of FPLs in use, or do they mostly serve as academic exercises? (When I say real-world, I mean a project that heavily relies on the functional aspect of the language and doesn't cram an FPL into a scenario where it doesn't belong). Thanks, Advait
