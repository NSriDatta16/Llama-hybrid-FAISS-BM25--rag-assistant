[site]: crossvalidated
[post_id]: 15299
[parent_id]: 
[tags]: 
Combining errors in a histogram (binned data)

I'm processing some data that requires binning before it goes through a regression algorithm. The script is in Python and uses the Numpy histogram function, but the code should be self explanatory. For reference, histogram outputs either an array containing the integer number of points in each bin, or you can weight by the value of the points in the bin (e.g. a sum). The y errors are standard devs. So the data is binned like: #Number of items in each bin (binned, dump) = np.histogram(x,bins) #Binned data, weighted by value of each point (xbinned, dump) = np.histogram(x,bins, weight=x) #etc for y and y error ... The errors on the y values (this assumes no x errors) are weighted by the variance so the errors are added in quadrature: (varbinned, dump) = np.histogram(x,bins,weight=error**2) To finish off the function returns an averaged array of points, e.g. xbinned = xbinned/binned What I'm not sure about is how to handle the errors. The result should be square rooted (to convert back from the summed variances), but how is the number of bins factored into the answer? Is it as straightforward as doing: errorbinned = np.sqrt(varbinned/binned) Thanks!
