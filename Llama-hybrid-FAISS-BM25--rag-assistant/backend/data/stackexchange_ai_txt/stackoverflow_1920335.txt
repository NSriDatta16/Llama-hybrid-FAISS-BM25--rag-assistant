[site]: stackoverflow
[post_id]: 1920335
[parent_id]: 1920105
[tags]: 
The Perl DBI (DataBase Interface) does not make provision for passing an already-open database handle to the driver - the interface assumes that (DBI plus the relevant DataBase Driver or DBD::XyzDBMS module) will establish the connection. Therefore, at best, you are going to be writing the code to extend DBI to allow for this, and also extending the relevant DBD to support it, which is an altogether non-trivial exercise. So, why do you think this is a good idea - what is the security benefit of doing things this way rather than just letting DBI handle the connection too? Embedding the passwords in the application is the wrong way to go from so many points of view it is hard to know where to begin: Changing the password means recompiling and rereleasing the programs, so it will never happen. Everyone uses the same user name and password to connect to the database or web service, so you have no idea who is doing the connecting. The passwords will be discoverable in the object files - it is an odds-on bet that if an attacker is really concerned, they'll be able to find them. Etcetera. 'Security through obscurity' is not secure at all! But that is what you are proposing to use. Please get yourself some advice on how to write secure software from those who know. Or read some of the many excellent books on the subject.
