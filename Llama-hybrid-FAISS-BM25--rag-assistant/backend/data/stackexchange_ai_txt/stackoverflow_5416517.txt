[site]: stackoverflow
[post_id]: 5416517
[parent_id]: 
[tags]: 
How to structure and organize nested classes

New to OOP, eager to learn good habits. I want to make a vectorMap class. A vectorMap will have a few properties and contain a number of polyLine objects, which in turn will each will have a few properties and consist of a number of xyPoint objects. The user will mostly interact with vectorMap objects, but may occasionally want to use polyLine and xyPoint objects outside the context of vectorMap . Does this mean I should create three separate public classes? Would this mean three separate class modules in VBA, and in Java, three separate .java files? My procedural gut tells me that it would be untidy to have three separate source code files for three small and simple classes with only a few lines of code each. I'm used to source code files containing packages with many functions. At this rate, a VBA project will contain tens of class modules. But maybe that's just the way it's done in OOP... The above will be implemented in VBA and Java, so any examples in either/both of these are most welcome.
