[site]: stackoverflow
[post_id]: 2967975
[parent_id]: 2967799
[tags]: 
If you want a specific lookup strategy (such as the "startswith 3 chars" outlined above), you could probably get a quick win by creating a specific lookup dictionary based around that idea. q = {"fork":1, "form":2, "fold":3, "fame":4} from collections import defaultdict q1 = defaultdict(dict) for k,v in q.items(): q1[k[:3]][k]=v This would let you do a .startswith type lookup over a much smaller set def getChoices(frag): d = q1.get(frag[:3]) if d is None: return [] return [ k for k in d.keys() if k.startswith(frag) ] Hopefully that should be a lot quicker than processing the whole 400,000 keys.
