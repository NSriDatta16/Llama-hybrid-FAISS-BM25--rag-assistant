[site]: stackoverflow
[post_id]: 1543590
[parent_id]: 1543551
[tags]: 
Okay, first thing is that you need to normalize your tables. Google "database normalization" and you'll come up with plenty of reading. The PERSONS table, in particular, needs attention. Second thing is that when you're creating foreign key references, 99.999% of the time you want to reference an ID (numeric) value. I.e., [DOGS].[owner] should be a reference to [PERSONS].[id]. Edit: Adding an example schema (forgive the loose syntax). I'm assuming each dog has only a single owner. This is one way to implement Person history. All columns are not-null. Persons Table: int Id varchar(30) name ... PersonHistory Table: int Id int PersonId (foreign key to Persons.Id) int Version (auto-increment) varchar(30) name ... Dogs Table: int Id int OwnerId (foreign key to Persons.Id) varchar(30) name ... The latest version of the data would be stored in the Persons table directly, with older data stored in the PersonHistory table.
