[site]: stackoverflow
[post_id]: 1133360
[parent_id]: 1133289
[tags]: 
Suppose we have a function f(x, y) where x might be e.g. FunctionOfTwoFunctionsOfInteger or it might be FunctionOfInteger. suppose we pass in f(g(u, 2), g(1, z)) Now with unification, u is bound to 1, and z is bound to 2, so the first argument is a FunctionOfTwoFunctionsOfInteger. So, we have to infer that the type of x and y are both FunctionOfTwoFunctionsOfInteger I'm not too familiar with C#, but with lambda expressions (or equivalently delegates or whatever) this should probably be possible. For an example of where type inferencing is very useful in improving the speed of theorem proving, take a look at "Schubert's Steamroller" http://www.rpi.edu/~brings/PAI/schub.steam/node1.html There's an issue of the Journal of Automated Reasoning devoted to solutions and formulations to this problem, most of which involve typed inferencing in theorem proving systems: http://www.springerlink.com/content/k1425x112w6671g0/
