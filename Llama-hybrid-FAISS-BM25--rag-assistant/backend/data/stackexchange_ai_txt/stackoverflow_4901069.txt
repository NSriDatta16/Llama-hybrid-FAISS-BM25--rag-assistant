[site]: stackoverflow
[post_id]: 4901069
[parent_id]: 
[tags]: 
Two-way querying in Django without circular reference

Let's say you have two models: Post and Category . Each Post has a category_id . Getting a post's category is straightforward: post.category . What if you want to get all the posts for a certain category? I suppose you would do def posts(self): return Post.filter(category__pk=self.id) But what if the Post model and Category model are in separate files? Because Post and Category now require each other, you would end up with a circular reference. Maybe you say the solution is to put Post and Category into the same file. But what if your app has 50 different models, many of them quite large, all in separate files? Should you combine Post and Category into one file and leave all the others separate? Should you combine all 50 models into one gigantic file? I'm hoping to find one of two things: An answer to this problem that doesn't involve combining files A good, logical reason for grouping models into the same file with one another. All my models are related to some extent, so where do you draw the line as far as grouping goes? If you draw the line with foreign keys, all my models would end up in the same file.
