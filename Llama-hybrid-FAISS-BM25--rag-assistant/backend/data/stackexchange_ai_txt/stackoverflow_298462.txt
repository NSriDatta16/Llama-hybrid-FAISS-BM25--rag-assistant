[site]: stackoverflow
[post_id]: 298462
[parent_id]: 152053
[tags]: 
OK, having digested this information, and also answers to this question about project references, I'm currently working with this configuration, which seems to 'work for me': One big solution, containing the application project and all the dependency assembly projects I've kept all project references, with some extra tweaking of manual dependencies (right click on project) for some dynamically instantiated assemblies. I've got three Solution folders (_Working, Synchronised and Xternal) - given that my source control isn't integrated with VS ( sob ), this allows me to quickly drag and drop projects between _Working and Synchronised so I don't lose track of changes. The XTernal folder is for assemblies that 'belong' to colleagues. I've created myself a 'WorkingSetOnly' configuration (last option in Debug/Release drop-down), which allows me to limit the projects which are rebuilt on F5/F6. As far as disk is concerned, I have all my projects folders in just one of a few folders (so just one level of categorisation above projects) All projects build (dll, pdb & xml ) to the same output folder, and have the same folder as a reference path. (And all references are set to Don't copy) - this leaves me the choice of dropping a project from my solution and easily switching to file reference (I've got a macro for that). At the same level as my 'Projects' folder, I have a 'Solutions' folder, where I maintain individual solutions for some assemblies - together with Test code (for example) and documentation/design etc specific to the assembly. This configuration seems to be working ok for me at the moment, but the big test will be trying to sell it to my colleagues, and seeing if it will fly as a team setup. Currently unresolved drawbacks: I still have a problem with the individual assembly solutions, as I don't always want to include all the dependent projects. This creates a conflict with the 'master' solution. I've worked around this with (again) a macro which converts broken project references to file references, and restores file references to project references if the project is added back. There's unfortunately no way (that I've found so far) of linking Build Configuration to Solution Folders - it would be useful to be able to say 'build everything in this folder' - as it stands, I have to update this by hand (painful, and easy to forget). (You can right click on a Solution Folder to build, but that doesn't handle the F5 scenario) There is a (minor) bug in the Solution folder implementation which means that when you re-open a solution, the projects are shown in the order they were added, and not in alphabetical order. (I've opened a bug with MS , apparently now corrected, but I guess for VS2010) I had to uninstall the CodeRushXPress add-in, because it was choking on all that code, but this was before having modified the build config, so I'm going to give it another try. Summary - things I didn't know before asking this question which have proved useful: Use of solution folders to organise solutions without messing with disk Creation of build configurations to exclude some projects Being able to manually define dependencies between projects, even if they are using file references This is my most popular question, so I hope this answer helps readers. I'm still very interested in further feedback from other users.
