[site]: stackoverflow
[post_id]: 3557321
[parent_id]: 
[tags]: 
How to show data in a web page from DB?

For the last three days I have been trying to develop a web based CRUD application which does all the CRUD operations. Given the complexity of the code, I decided to show the data first then I can move on to further CRUD operations. For this application I posted several questions in here. From the Answers I came this far. Here is my full source code. It's not showing any errors. But I'm not able to get the output. I have two class in my server side code. For me, its looks like good. But it needs something more to come alive. This is a great forum, please tell me, how can I overcome this. 1) EmpApp.java Just consider the getAllEmployee() method, omit the rest. package test; import java.sql.Connection; import java.sql.DriverManager; import java.sql.ResultSet; import java.sql.SQLException; import java.sql.Statement; import java.util.Collection; import java.util.HashSet; import java.util.Set; import com.mysql.jdbc.PreparedStatement; public abstract class EmpApp implements Set { public Set empobj = new HashSet (); private Set persons = new HashSet (); public boolean add(Employee employee) { return persons.add(employee); } public EmpApp(){ } public Set getAllEmp() { return empobj; } public void addEmployee(Employee employee) throws SQLException, ClassNotFoundException { int tempID = employee.getId(); String tname = employee.getName(); int tage = employee.getAge(); String tdept = employee.getDept(); PreparedStatement pstmt; Class.forName("com.mysql.jdbc.Driver"); String url ="jdbc:mysql://localhost:3306/general"; Connection con = DriverManager.getConnection(url,"root", "1234"); System.out.println("URL: " + url); System.out.println("Connection: " + con); pstmt = (PreparedStatement) con.prepareStatement("INSERT INTO PERSON SET ID=?, NAME=?, AGE=?, DEPT=?"); pstmt.setInt(1, tempID); pstmt.setString(2, tname); pstmt.setInt(3, tempID); pstmt.setString(4, tdept); pstmt.executeUpdate(); } public void updateEmployee(Employee employee) throws SQLException, ClassNotFoundException { int tempID = employee.getId(); String tname = employee.getName(); int tage = employee.getAge(); String tdept = employee.getDept(); PreparedStatement pstmt; Class.forName("com.mysql.jdbc.Driver"); String url ="jdbc:mysql://localhost:3306/general"; Connection con = DriverManager.getConnection(url,"root", "1234"); System.out.println("URL: " + url); System.out.println("Connection: " + con); pstmt = (PreparedStatement) con.createStatement(); pstmt = (PreparedStatement) con.prepareStatement("UPDATE PERSON SET NAME=?, AGE=?, DEPT=? WHERE ID=?"); pstmt.setInt(2, tage); pstmt.setString(1, tname); pstmt.setString(3, tdept); pstmt.setInt(4, tempID); pstmt.executeUpdate(); } public void deleteEmployee(Employee employee) throws ClassNotFoundException, SQLException { int eid = employee.getId(); PreparedStatement pstmt; Class.forName("com.mysql.jdbc.Driver"); String url ="jdbc:mysql://localhost:3306/general"; Connection con = DriverManager.getConnection(url,"root", "1234"); System.out.println("URL: " + url); System.out.println("Connection: " + con); pstmt = (PreparedStatement) con.createStatement(); pstmt = (PreparedStatement) con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY); pstmt.executeUpdate("DELETE FROM PERSON WHERE ID="+eid); } @SuppressWarnings("unchecked") private Set getAllEmployee() throws ClassNotFoundException, SQLException { Employee employee = new Employee(); Statement stmt; ResultSet rs; Class.forName("com.mysql.jdbc.Driver"); String url ="jdbc:mysql://localhost:3306/general"; Connection con = DriverManager.getConnection(url,"root", "1234"); System.out.println("URL: " + url); System.out.println("Connection: " + con); stmt = con.createStatement(); stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY); rs = stmt.executeQuery("SELECT * " + "from person ORDER BY ID"); while(rs.next()) { String name = rs.getString(2); employee.setName(name); int id = rs.getInt(1); employee.setId(id); String dept = rs.getString(4); employee.setDept(dept); int age = rs.getInt(3); employee.setAge(age); empobj.addAll((Collection ) employee); } return empobj; } } 2) Employee.java package test; public class Employee { private Set employee = new HashSet (); public Employee() { // TODO Auto-generated constructor stub } private String name; private String dept; private int age; private int id; public int getId(){ return id; } public void setId(int id){ this.id = id; } public String getName(){ return name; } public void setName(String name){ this.name = Security.escapeHtml(name);; } public int getAge(){ return age; } public void setAge(int age){ this.age = age; } public String getDept(){ return dept; } public void setDept(String dept){ this.dept = Security.escapeHtml(dept); } public boolean equals(Object obj){ if (obj == null) { return false; } if (obj == this) { return true; } if (!this.getClass().equals(obj.getClass())) { return false; } Employee that = (Employee) obj; if (this.id != that.id) { return false; } return true; } public String toString(){ return "Employee[id=" + id + ",name=" + name + "]"; } } The index.html code: Employee Data function init() { showTable(); } var empCache = { }; var viewed = -1; function showTable() { EmpApp.getAllEmployee(function(empobj) { dwr.util.removeAllRows("EmpRow", { filter:function(tr) { return (tr.id != "pattern"); }}); var employee, eid; for (var i = 0; i Employee ID NAME AGE DEPT Name Name Age Dept Of course its Asynchronous web application. I am using DWR here. The dwr.xml file And the Final web.xml LastDisplay dwr-invoker uk.ltd.getahead.dwr.DWRServlet debug true dwr-invoker /dwr/* index.html index.htm index.jsp default.html default.htm default.jsp
