[site]: stackoverflow
[post_id]: 5758893
[parent_id]: 5747796
[tags]: 
Ok finally got this working. Maximus and OcuS, thanks for all your help. I was a big help. Also got lots of info and examples from these two websites: http://android-journey.blogspot.com/2009/12/android-selectors.html http://blog.maxaller.name/2010/05/attaching-a-sticky-headerfooter-to-an-android-listview/ Here is a working example. Hope it helps out anyone else who is trying to do the same thing. The files to do it: myList.java The main activity. Extends ListActivity and includes a custom adapter which is used to populate the list. drawable/xml_listitem_shape.xml This controls the Pressed, Selected and Normal states of the list items using gradient 'shapes' instead of images. The gradients allow for faster rendering, and are not specific to the device, so it gets you away from the multiple-image mess (hdpi, mdp, ldpi...) layout/main.xml Contains the layout for the Header, Footer and Listview objects. Does not use any selector files, but declares android:id/list as an ID for the listview object, which is required. Android will complain about not finding this ID if you do not do it. layout/menu_item.xml Contains only a TextView object for use by the dynAdap class (no layout needed). This file declares the xml_listitem_shape selector file as it's background, which defines how the listitem will appear in it's various states. values/colors.xml Color definitions used throughout the application. You can hard code your colors, but this file keeps things much cleaner. myList.java package com.test.listview; import android.app.ListActivity; import android.content.Context; import android.os.Bundle; import android.view.LayoutInflater; import android.view.View; import android.view.View.OnClickListener; import android.view.ViewGroup; import android.widget.AdapterView; import android.widget.AdapterView.OnItemClickListener; import android.widget.ArrayAdapter; import android.widget.Button; import android.widget.ListView; import android.widget.TextView; import android.widget.Toast; public class myList extends ListActivity { public final String TAG = "** myList **"; String[] mNames = new String[] { "Linux", "Plan9", "Eclipse", "Java","Ubuntu", "Next", "Android", "Xoom", "Pascal", "Assembly", "C++", "Perl", "Bash", "Korn", "Int3", "CS:IP" }; public void onCreate(Bundle icicle) { super.onCreate(icicle); setContentView (R.layout.main); Button b1 = (Button) findViewById (R.id.button1); Button b2 = (Button) findViewById (R.id.button2); Button b3 = (Button) findViewById (R.id.button3); Button b4 = (Button) findViewById (R.id.button4); ListView listView = getListView(); setListAdapter (new dynAdap (this, android.R.layout.simple_list_item_1, mNames)); listView.setOnItemClickListener (oicl); b1.setOnClickListener (ocl); b2.setOnClickListener (ocl); b3.setOnClickListener (ocl); b4.setOnClickListener (ocl); } /* * listener for buttons */ OnClickListener ocl = new OnClickListener() { @Override public void onClick (View v) { String b = new String (""); switch (v.getId ()) { case R.id.button1: b = "button1"; break; case R.id.button2: b = "button2"; break; case R.id.button3: b = "button3"; break; case R.id.button4: b = "button4"; break; } Toast.makeText (myList.this, b, Toast.LENGTH_SHORT).show(); } }; /* * listener for listview clicks - pop up toast to show what was selected */ OnItemClickListener oicl = new OnItemClickListener() { @Override public void onItemClick (AdapterView parent, View view, int index, long id) { Toast.makeText (myList.this, mNames[index], Toast.LENGTH_SHORT).show(); } }; /* * This is a custom list adapter to set the color and text content of each list item */ public class dynAdap extends ArrayAdapter { String [] list; public dynAdap (Context context, int textViewResourceId, String [] objects) { super (context, textViewResourceId, objects); list = objects; } @Override public View getView (int position, View convertView, ViewGroup parent) { LayoutInflater inflater = getLayoutInflater (); // return the view associated with the TextView in the menu_item.xml file View row = inflater.inflate (R.layout.menu_item, parent, false); TextView tv1 = (TextView) row.findViewById (R.id.tv_item); tv1.setText (list[position]); return row; } } } xml_listitem_shape.xml main.xml menu_item.xml colors.xml #00000000 #000000 #660000 #b70101 #f7f5e8 #c8c5bb #6e6a5b #f6f900 #ff9000 #00ff00 #085c00 #ccaf00 #0077ff #000077 #00ffff #007777
