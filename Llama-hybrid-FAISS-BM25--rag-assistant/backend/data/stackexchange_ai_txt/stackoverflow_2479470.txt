[site]: stackoverflow
[post_id]: 2479470
[parent_id]: 2479238
[tags]: 
I did this for a treeview a couple years ago; can't remember exactly how, but consider using the MouseMove event of the DataGridView. While the drag is occurring, your MouseMove handler should: get the relative coordinates of the mouse (the MouseEventArgs contains the coordinates, but I think they're screen coordinates, so you can use DataGridView.PointToClient() to convert them to relative) determine which row is at that X position (is there a method for this? If not, you can calculate it by adding up the row + row header heights, but remember that the grid may have been scrolled) highlight that row or darken its border. One way you may be able to darken one border is by changing the DataGridViewRow.DividerHeight property. when the mouse moves outside that row, restore it to how it previously looked. If you wanted to do something custom with the appearance of the row under the mouse (instead of just using the available properties), you can use the DataGridView.RowPostPaint event. If you implement a handler for this event which is only used when a row is being dragged over another row, you can repaint the top or bottom border of the row with a bolder brush. MSDN example here.
