[site]: stackoverflow
[post_id]: 4315315
[parent_id]: 4277982
[tags]: 
IE is closer to the specification, in that in responding to a 302 for a POST the user agent should send a POST (though it should not do so without user confirmation). On the other hand, FF and Chrome are deliberately wrong, in copying ways in which user agents were frequently wrong some considerable time ago (the problem started in the early days of HTTP). For this reason, 307 was introduced in HTTP/1.1 to be clearer that the same HTTP method should be used (i.e. in this case, it should be a POST) while 303 has always meant that one should use GET. Therefore, instead of doing Response.Redirect which results in a 302 - that different user agents will handle in different ways, send a 303. The following code does so (and includes a valid entity body just to be within the letter of the spec). There is an overload so you can call it with either a Uri or a string: private void SeeOther(Uri uri) { if(!uri.IsAbsoluteUri) uri = new Uri(Request.Url, uri); Response.StatusCode = 303; Response.AddHeader("Location", uri.AbsoluteUri); Response.ContentType = "text/uri-list"; Response.Write(uri.AbsoluteUri); Context.ApplicationInstance.CompleteRequest(); } private void SeeOther(string relUri) { SeeOther(new Uri(Request.Url, relUri)); }
