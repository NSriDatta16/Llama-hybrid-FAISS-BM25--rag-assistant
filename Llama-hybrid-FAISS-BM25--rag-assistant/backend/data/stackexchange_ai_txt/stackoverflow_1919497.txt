[site]: stackoverflow
[post_id]: 1919497
[parent_id]: 1916218
[tags]: 
This one is very similar to Roberto Bonvallet's solution, except in ruby. chars = %w[interspecies interstelar interstate].map {|w| w.split('') } chars[0].zip(*chars[1..-1]).map { |c| c.uniq }.take_while { |c| c.size == 1 }.join The first line replaces each word with an array of chars. Next, I use zip to create this data structure: [["i", "i", "i"], ["n", "n", "n"], ["t", "t", "t"], ... map and uniq reduce this to [["i"],["n"],["t"], ... take_while pulls the chars off the array until it finds one where the size isn't one (meaning not all chars were the same). Finally, I join them back together.
