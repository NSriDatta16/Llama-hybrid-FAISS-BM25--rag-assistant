[site]: crossvalidated
[post_id]: 562712
[parent_id]: 
[tags]: 
Identify Stock Outages Using Only Sales Data

I have a dataset of sales data for a retailer for a number of SKUs. I'm trying to use this data to identify when a particular SKU was out of stock. I do not have purchase order data (the retailers purchases from their supplier) or inventory data which would make the problem of identifying stock outages trivial. My assumptions are that the sales per day follow a poisson distribution (in an ideal world this should be the sales per day when there is always stock available, the algorithm proposed below tries to account for this issue). I'm thinking about using the following simple algorithm to accomplish the task of identifying stock outages. Estimate lambda using the sample mean for number of units sold per day for each sku (including days with 0 sales) Identify all the cases when there were 0 units sold for a particular sku for a particular day and note how many days in a row this occurred. Given our lambda value that we calculated we can calculate the probability of seeing zero sales for a particular SKU for a certain number of days in a row. For example if lambda was 5 and we saw 4 days with no sales we could say the probability of seeing no sales for 4 days in a row given lambda is Pr(X=0|lambda=5)^4 If this probability is below some threshold that I will set, say 0.001, I will deem these zeros to be days when we were out of stock Remove these zeros and recalculate lambda (because lambda should be the average number of sales per day when there is stock available, these zeros due to stock outages shouldn't be included) Go back to step 3 until the algorithm converges (there are no more zero days to be removed Does this seem like a reasonable approach? I have looked online and don't see much on this topic. Any insight on the proposed algorithm or information about alternative approaches would be greatly appreciated. Thanks!
