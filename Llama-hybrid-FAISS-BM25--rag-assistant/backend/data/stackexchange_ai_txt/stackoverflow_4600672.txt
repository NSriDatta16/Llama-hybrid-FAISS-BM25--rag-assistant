[site]: stackoverflow
[post_id]: 4600672
[parent_id]: 
[tags]: 
DocumentListener slows down Document.setCharacterAttributes method?

this is my first question in this site, though is not the first time I enter to clear my doubts, awesome webpage. :) I'm writing a java program that highlights code in a JTextPane and I'm changing the way highlights are done. I'm using a JTabbedPane to let the user edit more than one file at the same time and I used to perform document highlights using a Timer, now I've built a highlight queue that runs in a separate thread and implemented a DocumentListener that queues the documents as changes take place. But I have a really big problem, if I add the document via DocumentListener, the Highlight process takes a really long time while if I add it in the main class by getting the document directly from the JTextPane, it takes just a few milliseconds. I've performed multiple benchmarks in my code and found out that what takes so much time to be performed when the document is added from the DocumentListener is the method Document.setCharacterAttributes(). Here is the method that adds documents via DocumentListener: // eventType: 0 - insertUpdate / 1- removeUpdate private void queueChange(javax.swing.event.DocumentEvent e, int eventType){ StyledDocument doc = (StyledDocument) e.getDocument(); int changeLength = e.getLength(); int changeOffset = e.getOffset(); int length = doc.getLength(); String title = (String) doc.getProperty("title"); String text; try { text = doc.getText(0, length); if (changeLength != 1) { Element element = doc.getDefaultRootElement(); int startLn = element.getElement(element.getElementIndex(changeOffset)).getStartOffset(); int endLn = element.getElement(element.getElementIndex(changeOffset + changeLength)).getEndOffset() - 1; Engine.addDocument(doc, startLn, endLn, title, text); } else { if(eventType == 1){ changeOffset = changeOffset - changeLength; } int startLn = text.lastIndexOf("\n", changeOffset) + 1; int endLn = text.indexOf("\n", changeOffset); if (endLn If I add a document with 2k lines with this method, it takes ~1900 ms to highlight the whole document, while if I add the document to the highlight queue by using a caret listening method it takes ~500 ms. Here's a part of the caret listening method that is used to highlight whole documents when they're loaded: if (loadFile == true) { isKey = false; doc = edit[currentTab].Editor.getStyledDocument(); try { Highlight.addDocument(doc, 0, doc.getLength(), Scripts.getTitleAt(currentTab), doc.getText(0, doc.getLength())); } catch (BadLocationException ex) { ex.printStackTrace(); } loadFile = false; } Note: the Highlight/Engine.addDocument() method has five parameters: (StyledDocument doc,int start, int end, String tabTitle, String docText). Start and end both indicate the region where highlighting is needed. I will appreciate any help related to this problem cause I've been trying to solve it for a few days and I can't find anything similar on the Internet. :( Btw, does anyone know the actual difference between Document.setCharacterAttributes and Document.setParagraphAttributes? :P
