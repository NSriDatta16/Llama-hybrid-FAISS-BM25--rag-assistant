[site]: stackoverflow
[post_id]: 4216474
[parent_id]: 4214114
[tags]: 
I have a (simple) O(n^2 log n) solution which takes into account the fact that i, j and k refer to indices, not integers. A simple first pass allow us to build an array A of 100 values: values -> list of indices, we keep the list sorted for later use. O(n log n) For each pair i,j such that i = j. O(n^2 log n) I could not find any way to leverage sorting / counting algorithm because they annihilate the index requirement.
