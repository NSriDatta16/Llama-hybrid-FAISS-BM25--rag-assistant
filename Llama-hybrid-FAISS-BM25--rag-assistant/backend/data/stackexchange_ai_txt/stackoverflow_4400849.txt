[site]: stackoverflow
[post_id]: 4400849
[parent_id]: 4400727
[tags]: 
I'm not deeply familiar with memcached, so take what I have to say with a grain of salt :-) Memcached is a separate process or set of processes that store a key-value store in-memory so they can be easily accessed later . In a sense, they provide another global scope that can be shared by different aspects of your program, enabling a value to be calculated once, and used in many distinct and separate areas of your program. In another sense, they provide a fast , forgetful database that can be used to store transient data. The data is not stored permanently , but in general it will be stored beyond the life of a particular request (it is possible for Memcached to never store your data, so every read will be a miss, but that's generally an indication that you do not have it set up correctly for your use case). The data going into cache does not have to be hashed or encrypted (but both things can happen to the data, depending on the caching mechanism.) Serializing data actually has nothing to do with either concept -- instead, it is the process of changing data from one format (generally one suited for in-memory storage) to another one (generally suitable for storage in a persistent medium.) Another term for this process is marshalling and unmarshalling.
