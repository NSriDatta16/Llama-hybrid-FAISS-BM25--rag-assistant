[site]: stackoverflow
[post_id]: 1828082
[parent_id]: 1827993
[tags]: 
Give scores to each of the execution paths depending on how close is the outcome to an optimal, "desired" state or result. Make your algorithm choose its future execution paths depending on the average score of the former decisions, giving a larger probability of outcome to the decision with the highest score. This way, it will appear as if your algorithm is not only learning, but also exploring randomly other possibilities, but with a lower probability than doing what seems to be the best. Of course, you could make this adaptive, by taking into account not only the score of each decision path but also its rate of growth or shrinkage. If a decision starts being good, but then after a number of iterations, it gets lower and lower scores, it should be avoided more often in favor of another decision who's score has a growing trend.
