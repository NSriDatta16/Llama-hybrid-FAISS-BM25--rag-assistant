[site]: stackoverflow
[post_id]: 50142
[parent_id]: 
[tags]: 
Symmetric key storage

My company is going to be storing sensitive data for our customers, and will be encrypting data using one of the managed .NET encryption algorithm classes. Most of the work is done, but we haven't figured out how/where to store the key. I've done some light searching and reading, and it seems like a hardware solution might be the most secure. Does anyone have any recommendations on a key storage solution or method? Thanks for your replies, everyone. spoulson, the issue is actually both the "scopes" that you mentioned. I suppose I should have been clearer. The data itself, as well as the logic that encrypts it and decrypts it is abstracted away into an ASP.NET profile provider. This profile provider allows both encrypted profile properties as well as plain text ones. The encrypted property values are stored in exactly the same way the plain text ones are - with the obvious exception that they've been encrypted. That said, the key will need to be able to be summoned for one of three reasons: The authorized web application, running on an authorized server, needs to encrypt data. Same as #1, but for decrypting the data. Authorized members of our business team need to view the encrypted data. The way I'm imagining it is that nobody would ever actually know the key - there would be a piece of software controlling the actual encrypting and decrypting of data. That said, the key still needs to come from somewhere . Full disclosure - if you couldn't already tell, I've never done anything like this before, so if I'm completely off base in my perception of how this should work, by all means, let me know.
