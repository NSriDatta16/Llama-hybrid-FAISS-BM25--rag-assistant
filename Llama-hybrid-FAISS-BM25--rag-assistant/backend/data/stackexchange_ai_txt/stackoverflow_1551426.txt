[site]: stackoverflow
[post_id]: 1551426
[parent_id]: 1551333
[tags]: 
I would use boost::circular_buffer . You will get the cache benefits having a fixed memory area and no unexpected memory allocations. In order to achieve maximum efficiency, the circular_buffer stores its elements in a contiguous region of memory, which then enables: Use of fixed memory and no implicit or unexpected memory allocation. Fast constant-time insertion and removal of elements from the front and back. Fast constant-time random access of elements. Suitability for real-time and performance critical applications. Possible applications of the circular_buffer include: Storage of the most recently received samples, overwriting the oldest as new samples arrive. As an underlying container for a bounded buffer (see the Bounded Buffer Example). A kind of cache storing a specified number of last inserted elements. Efficient fixed capacity FIFO (First In, First Out) or LIFO (Last In, First Out) queue which removes the oldest (inserted as first) elements when full.
