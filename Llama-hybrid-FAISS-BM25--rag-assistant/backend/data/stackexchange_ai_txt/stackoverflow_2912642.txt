[site]: stackoverflow
[post_id]: 2912642
[parent_id]: 2912611
[tags]: 
A string primary key is a bad idea, so changing it to an INT will help performance. most databases uses the primary key index for lookups and comparisons, choose a brief primary keyâ€”one column, if possible. You use primary key columns for joins (combining data from two or more tables based on common values in join columns), for query retrieval, and for grouping or sorting a query result set. The briefer the index entries are, the faster the database can perform the lookups and comparisons. Not to mention, if the name of the product changes, how can you handle that? update all rows that contain the product name as a Foreign Key? I couldn't have said it any better, so check out this answer: Should I design a table with a primary key of varchar or int , quote from that answer: Using a VARCHAR(10) or (20) just uses up too much space - 10 or 20 bytes instead of 4, and what a lot of folks don't know - the clustering key value will be repeated on every single index entry on every single non-clustered index on the table, so potentially, you're wasting a lot of space (not just on disk - that's cheap - but also in SQL Server's main memory). Also, since it's variable (might be 4, might be 20 chars) it's harder to SQL server to properly maintain a good index structure
