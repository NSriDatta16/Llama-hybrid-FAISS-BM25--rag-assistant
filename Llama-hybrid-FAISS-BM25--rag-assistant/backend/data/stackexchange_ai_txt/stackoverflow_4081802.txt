[site]: stackoverflow
[post_id]: 4081802
[parent_id]: 4075367
[tags]: 
You can't change the change set inside of SubmitChanges and you can't call SubmitChanges in the overridden methods of the partial classes. I suspect you are doing this, but I don't completely follow your code fragments. EDIT I don't understand how the lifetime of the DataContext is being managed. In the first part of the question you say I'm creating a separate instance of the DataContext each time I call the service but in the second part you say I tried creating a new instance of the DataContext each time I did a SubmitChanges(), but that resulted in me not having a Connection object The next thing I don't understand is how your altered method that calls SubmitChanges only once works, since it discards any changes to the data made after it's first call it must either be not logging all of your data or any call after the first call to submit changes is not needed. The instance methods of the Datacontext are not thread safe, you can't put it in a global variable at application start up (are you doing that?); you usually want a new Datacontext for each HTTP request, which you can do using an Inversion of Control framework or just in code, new up the dataconext at the beginning of the request and call submit changes at the end. Another technique is to use several DataContexts, create the datacontext, make the changes, call submit chnages, discard the DataContext, it's very lightweight. You don't often need to call submit changes more than once, the only time I have done this is to control the execution order of the SQL statements. It would be good if you could construct a minimal example and post the whole code.
