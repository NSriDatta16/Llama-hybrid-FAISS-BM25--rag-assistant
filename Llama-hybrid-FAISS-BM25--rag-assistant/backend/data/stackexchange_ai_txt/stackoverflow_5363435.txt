[site]: stackoverflow
[post_id]: 5363435
[parent_id]: 5362727
[tags]: 
Redis and Memcached are in-memory data store. The main difference is that Memcached is not persistent (the content is flushed when the server is restarted) while Redis is. Additionally, Redis provides support for several data structures, such as Sets. The most common use cases for in-memory data store is caching. Memcached has been the favourite choice for several years. Redis can solve almost all Memcached tasks with the propert configurations. Because Memcached is not persistent, it can't trusted to store persistent data. This is the reason why its best usage is as cache store. Redis is, after all, a database. It means caching is just one of its applications. Generally speaking, Redis is a very good choice whenever you need to have a very fast-data store. The user cases include logging, queue systems, indexes. A few examples: Resque is a Redis-backed Ruby library for creating background jobs Hoptoad changed the infrastructure in order to use Redis as fast-storage to store User data. Data is then post-processed to MySQL.
