[site]: stackoverflow
[post_id]: 3146111
[parent_id]: 3142710
[tags]: 
If the choice was there, my first preference will be classes/other selectors. However, there are situations where inline styles are the only way to go. In other situations, just a CSS class by itself requires too much work, and other types of CSS selectors make more sense there. Suppose you had to zebra stripe a given list or table. Instead of applying a particular class to each alternate element or row, you could simply use selectors to do the job. That will keep the code simple, but it won't be using CSS classes. To illustrate the three ways : Using only class .alternate { background-color: #CCC; } first second third fourth Using class + structural selectors .striped :nth-child(2n) { background-color: #CCC; } first second third fourth Using inline styles first second third fourth The second way looks the most portable and encapsulated to me. To add or remove stripes from any given container element, simply add or remove the striped class. However, there are cases where inline styles not only make sense, but are the only way to go. When the set of possible values is huge, it will be stupid to try to make classes in advance for each possible state. For example, a UI that allows the user to dynamically place certain items anywhere on the screen by dragging. The item will have to be positioned absolutely or relatively with actual coordinates such as: .. Surely, we could use classes for each possible position the div can take, but that's not recommended. And one can easily see why: .pos_20_49 { top: 20px; left: 49px; } .pos_20_50 { top: 20px; left: 50px; } // keep going for a million such classes if the container size is 1000x1000 px ..
