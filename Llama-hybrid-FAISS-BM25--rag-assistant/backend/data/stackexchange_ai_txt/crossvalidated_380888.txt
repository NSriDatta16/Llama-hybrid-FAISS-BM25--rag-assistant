[site]: crossvalidated
[post_id]: 380888
[parent_id]: 379795
[tags]: 
Since no one has answered your question, I'll share my two cents, but I'm not too familiar with the methods used to solve inverse problems. I don't think that this can be done the way you've described because $f^{-1}$ isn't actually a function (it fails the vertical line test ). However, you might be able to fit a neural network to the inverse of each monotonic segment of the function $f$ , if you know in advance where $f$ is monotonic. Alternatively, you could treat $f^{-1}$ as a parameterised curve and fit it. What I mean by this is, fit a neural network to each coordinate of the curve $f^{-1}$ (in your example, the coordinates are $x$ and $y$ ). If this isn't clear, imagine a circle with radius $1$ centred at $(x, y) = (0, 0)$ . This isn't a function either, but the circle can be described by a set of two equations: $$x = \cos(\theta)$$ $$y = \sin(\theta)$$ ... for $\theta \in (0, 2\pi)$ . The neural networks that you fit would replace the job of $\sin$ and $\cos$ in the example above. For an input, you'd have to use a pseudo-input (like $\theta$ ) but if you don't have it, you could treat it as an unknown as well, and place some kind of a prior on it (e.g. a gaussian process prior).
