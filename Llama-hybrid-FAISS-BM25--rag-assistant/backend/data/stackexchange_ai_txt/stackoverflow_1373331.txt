[site]: stackoverflow
[post_id]: 1373331
[parent_id]: 1339166
[tags]: 
You can bypass Visual Studio processing this key by means of the excellent free utility AutoHotkey . It can help with all sorts of automation needs, but in particular Overriding or Disabling Hotkeys of course, see the list of Hotkeys (Mouse, Joystick and Keyboard Shortcuts) too. Your scenario requires Context-sensitive Hotkeys ; the necessary parameters to discriminate target applications via Window class and/or title can be determined via the included Window Spy utility. While I'm working on a laptop right now, which doesn't feature a Browser Home key, I just tested the following script fragment successfully with another keyboard shortcut: #IfWinActive ahk_class wndclass_desked_gsk ; Visual Studio browser home key hook Browser_Home::Run firefox.exe http://example.com #IfWinActive ; Subsequent mappings/hotkeys in effect for all windows again now I usually start one keyboard shortcut related script (incidentally called Windowskey.ahk ) automatically via my user Start Menu\Programs\Startup folder, and launch other scripts from there via a hotkey as needed ;)
