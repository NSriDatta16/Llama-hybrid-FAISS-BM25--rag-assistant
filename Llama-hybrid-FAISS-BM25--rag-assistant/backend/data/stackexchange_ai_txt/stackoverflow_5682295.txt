[site]: stackoverflow
[post_id]: 5682295
[parent_id]: 5514143
[tags]: 
Well I only have a partial answer, but it still might help you a bit. From what I gather, you'd like to be able to type or paste some code into the tinyMCE text area (and not the raw html code of the editor field), and then apply some styles to that block afterwards, so it will be prettified. (As a sidenote, I think anyone who qualifies adding a code block to a richt text editor field, should be able to press the "raw html" button, paste his code, and wrap it into a or tag. Especially if you add a bit of instruction on what to do, just above or below the editor area. And then you'd be home free. And everyone does it this way.) Nonetheless, going back to the original problem. If you enter lines of codes into the tinyMCE textarea, upon each enter pressed you'll get your line wrapped into a tag. So if you type: if (this_is_the_best_line_ever == true) { ... } and press enter, you'll get if (this_is_the_best_line_ever == true) { ... } So, using your example, you would never actually see this codeline1 codeline2 codeline3 but rather this codeline1 codeline2 codeline3 The problem with the latter, that it is not valid HTML, never was, never will be, and tinyMCE rightfully will not produce that code. Reason being and are inline elements, and being block level element, hence and can not contain any s. We're getting to the answer (even if it's only half an answer), so don't give up. Best approach would be to use wrappers around your code block. This is legal, tinyMCE will happily do it for you, see below (note the wrapper attribute!): style_formats : [ {title : 'Codigo fuente', block : 'div', classes : 'prettyprint', wrapper: 1} ] We could start celebrating right now, but your chosen plugin, the code prettifier, only processes and tags from your html, so unfortunately these wrapped code blocks would not be pretty, oh so pretty... You could a) hack into the prettify plugin and force it to swallow div tags having certain classes or b) force tinyMCE to forget about these wrappers. For now, going with the second option, you can initialize tinyMCE with the following parameters: forced_root_block : false, force_br_newlines : true, force_p_newlines : false and with that you'll have your lines separated with tags instead of wrapped in tags. This is highly discouraged by the authors of tinyMCE for various reasons (refer to the FAQ ), but it is still a valid option. Now you can trick tinyMCE to wrap the whole content into a block, with the following configuration (which is a bit of hack in itself, but works, ahemm mostly): style_formats : [ {title : 'Codigo fuente', block : 'code', classes : 'prettyprint', wrapper: 1} ] Your only problem that applying this style will strip the existing tags from within your text selection. That's right, you'll have all your selected code compressed into one line. And I tried many ways to keep these tiny little miserable tags, but could not pursuade tinyMCE to do so. This is where I gave up, hence the "half answer". Good luck!
