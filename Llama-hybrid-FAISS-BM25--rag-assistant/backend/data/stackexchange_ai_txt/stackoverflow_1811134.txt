[site]: stackoverflow
[post_id]: 1811134
[parent_id]: 1802978
[tags]: 
I'm not sure I follow your question - do you mean you have created a class with attributes that correspond to fields in a Form? And that the Form uses getter and setter methods of the class to work with those attributes? That should be more space efficient than using a java.util.Hashtable instance. The advantage of a hash table is that you can dynamically change the set of values stored. Disadvantage is that the populated hash instance will probably use more memory than your fixed set of attributes accessed via getter and setter methods. Getter/setters should be quicker too - no hashing of the key object is needed - a method is associated with only one stored value. Also, you'll just be doing a value assignment compared to whatever storage managment the Hashtable will have to do.
