[site]: datascience
[post_id]: 11559
[parent_id]: 11540
[tags]: 
The established procedure is called symbolic aggregate approximation or SAX in which you first first do piecewise aggregate approximation (PAA), namely send non-overlapping mean (boxcar) windows of width $w$ over the data, and then transform the obtained values into symbols by equal-frequency-splitting the resulting data distribution into $k$ letters of the alphabet. How to determine appropriate $w$ and $k$? They are a tradeoff between dimensionality reduction and information loss. One way to adapt $w$ is to look at window' data points variance; if the variance is too large, reduce the window size, and vice versa. Another information-theoretic is MDL as explained in this question . Since you only have 12 values in a series, the windowing step may not be necessary. Alternatively, you could try reshaping the data into three series: $$Dd_1^{(c_1)}\dots{}d_{12}^{(c_1)}Dd_1^{(c_2)}\dots{}d_{12}^{(c_2)}D\dots$$ $$Uu_1^{(c_1)}\dots{}u_{12}^{(c_1)}Uu_1^{(c_2)}\dots{}u_{12}^{(c_2)}U\dots$$ $$Bb_1^{(c_1)}\dots{}b_{12}^{(c_1)}Bb_1^{(c_2)}\dots{}b_{12}^{(c_2)}B\dots$$ where D, U, and B are string literals (used as start markers) and $d_m^{(c_i)}$, $u_m^{(c_i)}$, and $b_m^{(c_i)}$ are the values of download, upload and billed, for customer $c_i$ in month $m$. Then you could use one of the frequent subsequence mining algorithms on those three sequences (separately) to find any prevaling patterns.
