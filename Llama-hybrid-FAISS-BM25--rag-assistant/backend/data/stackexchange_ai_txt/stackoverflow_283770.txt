[site]: stackoverflow
[post_id]: 283770
[parent_id]: 283544
[tags]: 
Basically, this could be viewed as a question about config files vs. annotation. If you experienced an amelioration in productivity boost when putting some data as annotations, that means they were not "configuration" material in the first place. The difference between the two: annotation: everything is in one place and the configuration information is associated directly with the Java component. Many types of refactorings of the source code are transparent to annotations for this reason -- the annotations will always apply to the component they're attached to, even when that component is moved or renamed. For other refactorings that require new or modified annotations, everything is in the same location, assuring that the annotations are visible to the developer and increasing the likelihood that they'll remember to make the necessary changes. Configuration files can provide an organized view of a web of relationships that span different components of an application. Because they're separate from the actual source code, they don't interfere with the readability of the Java source code. What you experienced is the disparition of the need to maintain config files in parallel with the source code of an application, with no obvious connection between the two. BUT: annotations have their drawbacks: source code can become cluttered with all sorts of annotations that are irrelevant to the actual program logic, interfering with the readability of the code. And that while annotations are ideal for metadata that relates to a particular component, they're not well suited to metadata with cross-component application.
