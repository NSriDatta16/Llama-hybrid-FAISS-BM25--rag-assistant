[site]: stackoverflow
[post_id]: 3138189
[parent_id]: 3136654
[tags]: 
Dot sourcing will accomplish your goal. However, this is an ambiguous design and conflicts with the PowerShell CmdLet Development Guidelines. Granted you are authoring a script and not a Cmdlet but it appears you're trying to follow PowerShell conventions given the script file name you have chosen. Using the verb Get implies that you are retrieving a resource. So if you have a script called Get-Cluster.ps1 then it should retrieve one or more Cluster instances. Consider the following instead: $clusters = .\Get-Cluster.ps1 -NonCompliantOnly This will still enable you to set a variable in your current scope without all the magic and ambiguity of dot sourcing. I'm not trying to be preachy but the PowerShell team has done a good job creating creating consistency and I think there is a lot of value in attempting to perpetuate that when we extend PowerShell with our own scripts/modules/cmdlets. If you're dead set on setting a new or existing variable in the current scope using dot sourcing then I'd encourage you to find a new verb. See Approved Cmdlet Verbs on Microsoft Docs for more info.
