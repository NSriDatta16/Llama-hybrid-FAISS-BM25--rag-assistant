[site]: stackoverflow
[post_id]: 2156979
[parent_id]: 2143624
[tags]: 
I try to create new project again. So here is JNISample2.java file public class JNISample2 { static { System.loadLibrary("JNISample2Dll"); } public native void displayHelloWorld(); public static void main(String[] args) { System.out.println("from java Hello"); JNISample2 JNIsample2; JNIsample2 = new JNISample2(); JNIsample2.displayHelloWorld(); } } And here .h file that's generated by the javah -classpath . JNISample2 /* DO NOT EDIT THIS FILE - it is machine generated */ #include /* Header for class JNISample2 */ #ifndef _Included_JNISample2 #define _Included_JNISample2 #ifdef __cplusplus extern "C" { #endif /* * Class: JNISample2 * Method: displayHelloWorld * Signature: ()V */ JNIEXPORT void JNICALL Java_JNISample2_displayHelloWorld (JNIEnv *, jobject); #ifdef __cplusplus } #endif #endif Here is my .h file dll that I create VS2005 with MFC app. // JNISample2Dll.h : main header file for the JNISample2Dll DLL // #pragma once #ifndef __AFXWIN_H__ #error "include 'stdafx.h' before including this file for PCH" #endif #include "resource.h" // main symbols #include "JNISample2.h" // CJNISample2DllApp // See JNISample2Dll.cpp for the implementation of this class // class CJNISample2DllApp : public CWinApp { public: CJNISample2DllApp(); // Overrides public: virtual BOOL InitInstance(); DECLARE_MESSAGE_MAP() }; JNIEXPORT void JNICALL Java_JNISample2_displayHelloWorld(JNIEnv *, jobject); And here is my .cpp file // JNISample2Dll.cpp : Defines the initialization routines for the DLL. // #include "stdafx.h" #include "JNISample2Dll.h" #ifdef _DEBUG #define new DEBUG_NEW #endif // //TODO: If this DLL is dynamically linked against the MFC DLLs, // any functions exported from this DLL which call into // MFC must have the AFX_MANAGE_STATE macro added at the // very beginning of the function. // // For example: // // extern "C" BOOL PASCAL EXPORT ExportedFunction() // { // AFX_MANAGE_STATE(AfxGetStaticModuleState()); // // normal function body here // } // // It is very important that this macro appear in each // function, prior to any calls into MFC. This means that // it must appear as the first statement within the // function, even before any object variable declarations // as their constructors may generate calls into the MFC // DLL. // // Please see MFC Technical Notes 33 and 58 for additional // details. // // CJNISample2DllApp BEGIN_MESSAGE_MAP(CJNISample2DllApp, CWinApp) END_MESSAGE_MAP() // CJNISample2DllApp construction CJNISample2DllApp::CJNISample2DllApp() { // TODO: add construction code here, // Place all significant initialization in InitInstance } // The one and only CJNISample2DllApp object CJNISample2DllApp theApp; // CJNISample2DllApp initialization BOOL CJNISample2DllApp::InitInstance() { CWinApp::InitInstance(); return TRUE; } JNIEXPORT void JNICALL Java_JNISample2_displayHelloWorld(JNIEnv *, jobject) { MessageBox(NULL, TEXT("In JNISample2Dll"), TEXT("DLL"), 1); } After I use command prompt to run: java JNISample2, it display the string "from java Hello", but how come it does not display messagebox that I put inside the .cpp DLL file?
