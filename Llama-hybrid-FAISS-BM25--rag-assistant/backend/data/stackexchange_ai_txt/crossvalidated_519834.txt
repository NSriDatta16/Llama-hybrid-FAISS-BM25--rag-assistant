[site]: crossvalidated
[post_id]: 519834
[parent_id]: 
[tags]: 
Model averaging a GLM function with equal weights

Background Let me first say that I read this post and that I looked at the BMS vignette . I used the package sure ( CRAN , R journal ), to calculate surrogate residuals of a polr with resids (see data below).* The problem is that these surrogate residuals require sampling from a continuous distribution; consequently, the result will be different with every call to resids (they don't converge from bootstrapping the residuals). If you run my example code, you will see that the result will be different every time you rerun it. I thought I could temporarily circumvent this issue, by using some form of averaging (for example Bayesian Model Averaging), until I find the solution for my overarching issue . The goal would be to provide the reader a range for the variable of interest (because my regression output changes every time, it would be kind of weird to just report one output). Question So what I want to do is simple. I want to more or less run the regression 10 times (or one hundred times), and combine or average the outcomes. I thought I could use Bayesian Model Averaging for this. However, from the example they give I have not really been able to figure out what to do. Essentially I just want to run exactly the same regression 10-100 times and take the average of all the values. To repeat: The point is that, because the residual is different every time I run the glm, the outcome of the coefficient of interest is different. For that reason I would like to report and average of running this regression 10-100 times I am aware (now) that this is perhaps a bit of a shoe horn approach. Nevertheless, until I find another solution, this the best way I can think of to report my output. I will obviously mention that this is not the most sound way to do it (I have already made a new post describing my overarching issue) DATA library(sure) # for residual function and sample data sets library(MASS) # for polr function df1 $z1 x df1 $x x $y df1$ z2 $x df1$ y .*The package is based on this paper , in the Journal of the American Statistical Association. EDIT (an attempt at averaging three models): I tried to do the following: library(MuMIn) # https://cran.r-project.org/web/packages/MuMIn/MuMIn.pdf df1$residuals Is that the correct way to do it? It worked when I used lm instead of glm but now all output is NA . Model-averaged coefficients: (87 not defined because of singularities in all component models) With lm instead of glm df1$residuals |z|) (Intercept) 0.3939836 0.0188525 0.0188639 20.886 |z|) (Intercept) 0.3939836 0.0188525 0.0188639 20.886
