[site]: stackoverflow
[post_id]: 3228
[parent_id]: 3213
[tags]: 
I use this code.It is VB code but you can easily translate it to C#. It works Function NumberToText(ByVal n As Integer) As String Select Case n Case 0 Return "" Case 1 To 19 Dim arr() As String = {"One","Two","Three","Four","Five","Six","Seven", _ "Eight","Nine","Ten","Eleven","Twelve","Thirteen","Fourteen", _ "Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"} Return arr(n-1) & " " Case 20 to 99 Dim arr() as String = {"Twenty","Thirty","Forty","Fifty","Sixty","Seventy","Eighty","Ninety"} Return arr(n\10 -2) & " " & NumberToText(n Mod 10) Case 100 to 199 Return "One Hundred " & NumberToText(n Mod 100) Case 200 to 999 Return NumberToText(n\100) & "Hundreds " & NumberToText(n mod 100) Case 1000 to 1999 Return "One Thousand " & NumberToText(n Mod 1000) Case 2000 to 999999 Return NumberToText(n\1000) & "Thousands " & NumberToText(n Mod 1000) Case 1000000 to 1999999 Return "One Million " & NumberToText(n Mod 1000000) Case 1000000 to 999999999 Return NumberToText(n\1000000) & "Millions " & NumberToText(n Mod 1000000) Case 1000000000 to 1999999999 Return "One Billion " & NumberTotext(n Mod 1000000000) Case Else Return NumberToText(n\1000000000) & "Billion " _ & NumberToText(n mod 1000000000) End Select End Function Here is the code in c# public static string AmountInWords(double amount) { var n = (int)amount; if (n == 0) return ""; else if (n > 0 && n = 20 && n = 100 && n = 200 && n = 1000 && n = 2000 && n = 1000000 && n = 1000000 && n = 1000000000 && n
