[site]: stackoverflow
[post_id]: 2399052
[parent_id]: 2398897
[tags]: 
I´ve implemented the MVC pattern in C#. Don´t know very much about theory, or how it should be, or shouldn´t be. I just think that the pattern is the base idea, and then, you can use this idea in many different ways, depending on your own needs. I´ll tell you about my implementation, and hope it helps you. **The Model** Your description is pretty clear, so don´t have much more to said. Here is where I define my bussiness objects. I take advantage of this layer to include objects validation rules. **The Controller** In addition to handle the user actions and update the view, I have a Unit Of Work for each controller . I check that the objects in the view pass the validations (defined in the model layer) before commit changes in the Unit Of Work. In my case, one controller can manage many models, and I like to have only one view in each controller. Like a suggestion, I´d like to use my Framework with diferent UI, so I have an abstract implementation of Controller, and then I have specific controller implementations for different interfaces (WebForms, WinForms, ...). **The Views** In your case, we could call them, simply, the forms, the UI, ... I like to organize my desktop applications as if they were web applications, using tabs . One tab represents one controller, and so on, one view, and one or more models. In conclussion, and in my case : n models - 1 controller 1 controller - 1 view -- n models - 1 view
