[site]: stackoverflow
[post_id]: 1307565
[parent_id]: 1272526
[tags]: 
You cannot export the Web.UI Grid directly using RenderControl into a text writer. Instead, you should convert its data into another form (such as the ASP DataGrid) and export that instead. The reason behind this is that the Web.UI Grid's structure is build dynamically on the client -- it's passed from server to client as a bunch of XML and array data, which is converted into the tables and divs that you see in the window. As a result you'll want to perform the export on the Grid's datasource, and then analyze the client templates to replicate what they would change when built dynamically on the client. The following is a short example of how to export the CA grid it into excel: public void ExportDataSetToExcel() { object theColl = gridEmployee.DataSource; //just set this as your grid's datasource. GridView excelGrid = new GridView(); excelGrid.DataSource = theColl; excelGrid.ID = "Export"; excelGrid.DataBind(); excelGrid.AutoGenerateColumns = true; Response.Clear(); Response.Buffer = true; Response.ContentType = "application/vnd.ms-excel"; Response.AddHeader("content-disposition", "attachment;filename=RegainExport.xls"); Response.Charset = ""; Response.Cache.SetCacheability(HttpCacheability.NoCache); System.IO.StringWriter stringWrite = new System.IO.StringWriter(); System.Web.UI.HtmlTextWriter htmlWrite = new HtmlTextWriter(stringWrite); excelGrid.RenderControl(htmlWrite); Response.Write(stringWrite.ToString()); Response.End(); } So before binding the datasource of the GridView you will want to perform the ClientTemplate replication.
