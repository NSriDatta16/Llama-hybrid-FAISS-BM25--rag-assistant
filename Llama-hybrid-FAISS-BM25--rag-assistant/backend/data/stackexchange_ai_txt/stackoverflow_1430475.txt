[site]: stackoverflow
[post_id]: 1430475
[parent_id]: 
[tags]: 
Code Golf - Word Scrambler

Please answer with the shortest possible source code for a program that converts an arbitrary plaintext to its corresponding ciphertext, following the sample input and output I have given below. Bonus points* for the least CPU time or the least amount of memory used. Example 1: Plaintext: The quick brown fox jumps over the lazy dog. Supercalifragilisticexpialidocious! Ciphertext: eTh kiquc nobrw xfo smjup rvoe eth yalz .odg !uioiapeislgriarpSueclfaiitcxildcos Example 2: Plaintext: 123 1234 12345 123456 1234567 12345678 123456789 Ciphertext: 312 4213 53124 642135 7531246 86421357 975312468 Rules: Punctuation is defined to be included with the word it is closest to. The center of a word is defined to be ceiling((strlen(word)+1)/2). Whitespace is ignored (or collapsed). Odd words move to the right first. Even words move to the left first. You can think of it as reading every other character backwards (starting from the end of the word), followed by the remaining characters forwards. Corporation => XoXpXrXtXoX => niaorCoprto. Thank you to those who pointed out the inconsistency in my description. This has lead many of you down the wrong path, which I apologize for. Rule #4 should clear things up. *Bonus points will only be awarded if Jeff Atwood decides to do so. Since I haven't checked with him, the chances are slim. Sorry.
