[site]: stackoverflow
[post_id]: 4648333
[parent_id]: 
[tags]: 
Programming against Azure / CDN

We're in the process of moving an on premise application to the Azure cloud. Internal corporate users routinely upload full size images via an admin interface to our website (these will now be sent to Azure blob storage). The site is responsible for creating the correct images sizes when they are requested. So what happens right now (on premise environment) is this: 1) User uploads full size file. 2) When a smaller version is requested through GetImage HTTP handler (i.e. http://www.site.com/GetImage.aspx?imageid=15&height=100&width=100 ) the handler checks to see if we have previously created a version of that image in that size. If so, it writes it directly to the Response stream. If not, it takes a second to resize it, save it to the "/iamges/cache" directory and writes the resized image to the Response stream. 3) Next time that file is requested in that size it returns the previously created image. So I want to implement the same type of mechanism using Azure and Blob storage, but I have a couple of concerns: 1) I can't simply check to see if a blob exists. I have to download the blob first, then call FetchAttributes to see if it throws an exception. However, doing this actually downloads the image. So doesn't this double the number of requests for images (one to see if it exists and another to display to the user)? 2) Let's say the image does not exist in the size I need it (i.e. the blob /images/cache/image_15_100_100.jpg does not exist -- id #15, 100x100 pixels). So I've hit a request to the CDN once to see if it exists. Now I have to download possibly a 5-10 MB full size image (as opposed to reading it off our on-premise file system which is fast), load that 5-10 MB image in memory, resize it and re-upload it to the CDN. This seems time consuming, especially when I could have 10-15 of these images on a single request. I know Azure is relatively new, but is there anything close to a "best practice" for this type of interaction with blob storage? Is there another approach that I could consider? This just seems a lot of overhead for image resizing so I figure I must be missing something or overlooking another solution.
