[site]: stackoverflow
[post_id]: 4964010
[parent_id]: 4925286
[tags]: 
Ok, here is the answer: Turns out I had to extend the nested static class so line 39... Public static class ColorPanel {} becomes Public static class ColorPanel extends Panel {} Below is the entire listing of my code.... package ui.panels; import interfaces.Resettable; import java.awt.Choice; import java.awt.Color; import java.awt.Component; import java.awt.GridLayout; import java.awt.Panel; import java.awt.event.ItemEvent; import java.awt.event.ItemListener; import shapes.Shape; import model.Model; public class MainPanel extends Panel implements Resettable{ ActionPanel actionPanel; ControlsPanel controlsPanel; private ColorPanel colorPanel; public MainPanel(Model model) { actionPanel = new ActionPanel(model); controlsPanel = new ControlsPanel(model); colorPanel = new ColorPanel(); setLayout(new GridLayout(2,1)); add(controlsPanel); add(actionPanel); add(colorPanel); } public void resetComponents() { controlsPanel.resetComponents(); actionPanel.resetComponents(); } // Homework starts here. // static nested class ColorPanel which creates a panel (and listeners) for two Color choice boxes public static class ColorPanel extends Panel{ public final static String BLACK = "Black"; public final static String BLUE = "Blue"; public final static String GREEN = "Green"; public final static String RED = "Red"; public final static String YELLOW = "Yellow"; public final static String Magenta = "Magenta"; private static String[] color_selections = {"Black","Blue","Green","Red","Yellow","Magenta"}; String msg = ""; // now an if thing that goes if selected color equals "black" then set colorVariable to color.black private String selectedColor; private Shape currentColor; Model model; Choice lineColor; Choice fillColor; public Shape createShapecolor() { if(selectedColor == BLUE){ Color currentColor = Color.blue; } return currentColor; } // now create list panel public ColorPanel(){ lineColor = new Choice(); fillColor = new Choice(); for (String msg : color_selections) { lineColor.add(msg); fillColor.add(msg); } lineColor.addItemListener(new ItemListener() { public void itemStateChanged(ItemEvent e) { //reset line color here when item is selected createShapecolor(); //how to take returned currentColor value and assign it to objects line color? repaint(); } }); fillColor.addItemListener(new ItemListener() { public void itemStateChanged(ItemEvent e) { //overload fill color here when item is selected repaint(); } }); this.add(lineColor);//this line is driving me nuts. //this.add(fillColor); } } }
