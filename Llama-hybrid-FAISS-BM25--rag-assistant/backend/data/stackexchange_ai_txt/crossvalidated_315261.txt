[site]: crossvalidated
[post_id]: 315261
[parent_id]: 
[tags]: 
Account previous features for classification with neural networks

My data for online testing looks like this: \begin{array} {|r|r|r|r|r} \hline &feature~1 &feature2 &feature~3 &label(Yes~or~No)\\ \hline three~steps~before &4 &3 &42 &not~known \\ \hline two~steps~before &45 &12 &0 &not~known \\ \hline one~steps~before &78 &56 &43 &not~known \\ \hline now &1 &2 &3 & I~want~to~know\\ \hline \end{array} In my application I have features from all previous measurements but I do not know the labels corresponding to them. My goal is to predict at any time the response label (Yes or No) if I know the features 1, 2 and 3 at this moment and I know all features for all measurements from before. I need to consider the previous measurements because I want to account the change of the features over time as an input variable. But because of a not sufficient expert knowledge of the domain I do not want to calculate these features manually. I tried two approaches: The first one was a simple DNN where I used features from the last three measurements as input parameters. The result wasn't good. The next disadvantage of this method is that I most decide how far back I want to look. In my test data for offline training I have labels. I built a LSTM network with Keras. I provided three measurements with the correct label as an input. At the end my model have learned that label from one step before is the best predictor and just outputed this value as prediction for "now". Is it a good alternative to provide only the features from before without correct labels into LSTM? Is it possible to solve this problem with a neural network (I do not want to calculate the time dependent features manually)? How can I improve my architecture?
