[site]: stackoverflow
[post_id]: 4570523
[parent_id]: 4569837
[tags]: 
Here's one way. It uses the "Quirky Update" approach to filling in the gaps. This relies on an undocumented behaviour so you may prefer to use a cursor for this. DECLARE @SourceData TABLE([Time] TIME, Device INT, value FLOAT) INSERT INTO @SourceData SELECT '0:00',1,2 UNION ALL SELECT '0:01',2,3 UNION ALL SELECT '0:03',3,5 UNION ALL SELECT '0:03',1,3 UNION ALL SELECT '0:13',2,5 UNION ALL SELECT '0:22',1,7 UNION ALL SELECT '0:34',3,5 UNION ALL SELECT '0:35',2,6 UNION ALL SELECT '0:37',1,5 CREATE TABLE #tmpResults ( [Time] Time primary key, [1] FLOAT, [2] FLOAT, [3] FLOAT ) INSERT INTO #tmpResults SELECT [Time],[1],[2],[3] FROM @SourceData PIVOT ( MAX(value) FOR Device IN ([1],[2],[3])) AS pvt ORDER BY [Time]; DECLARE @1 FLOAT, @2 FLOAT, @3 FLOAT UPDATE #tmpResults SET @1 = [1] = ISNULL([1],@1), @2 = [2] = ISNULL([2],@2), @3 = [3] = ISNULL([3],@3) SELECT [Time], (SELECT AVG(device) FROM (SELECT [1] AS device UNION ALL SELECT [2] UNION ALL SELECT [3]) t) AS [Average value] FROM #tmpResults DROP TABLE #tmpResults
