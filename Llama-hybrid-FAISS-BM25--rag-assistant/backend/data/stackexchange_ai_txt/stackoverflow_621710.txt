[site]: stackoverflow
[post_id]: 621710
[parent_id]: 612062
[tags]: 
what distinguishes Java from AS3? Not a lot. Both generate bytecode that gets passed around, then compiled to machine code on the target platform through a JIT. While AS3 is commonly described as belonging to the EcmaScript family, it has 2 co-existing object models under the hood. One is the traditional prototypical approach, while the other is a much more java-like approach, with packages, classes and interfaces, subclassing, abstract and final methods, etc. Similarly, AS3 can be used without any explicit typing (just like javascript), or it can be used with strong typing, like Java. Unlike AS2, any type information given is encoded in the compiled bytecodes, and verified at runtime. Note that the default compiler settings encourage developers to go toward the java-like flavor, but it's nothing that can't be fixed with a few options. Essentially, ActionScript evolved from a toy language (See Flash 4 and below) to an javascript-like language (Flash 5 and 6), to an ecmascript language pretending to be something else (Flash 7 and 8) to something that has now more in common with Java and C# than with its own older incarnations (Flash 9 and 10) To go back briefly to the original question, I can think of two language features that almost every scripting language has, that AS3 lacks: The ability to run a script from source directly. AS3 requires an explicit compilation step. The ability to evaluate a string at runtime as a code fragment. Don't look for an "eval" statement in AS3, it just doesn't exist.
