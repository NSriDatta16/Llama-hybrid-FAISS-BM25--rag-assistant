[site]: stackoverflow
[post_id]: 5084642
[parent_id]: 
[tags]: 
Time interval calculation in time series using SQL

I have a MySQL table like this CREATE TABLE IF NOT EXISTS `vals` ( `DT` datetime NOT NULL, `value` INT(11) NOT NULL, PRIMARY KEY (`DT`) ); the DT is unique date with time data sample: INSERT INTO `vals` (`DT`,`value`) VALUES ('2011-02-05 06:05:00', 300), ('2011-02-05 11:05:00', 250), ('2011-02-05 14:35:00', 145), ('2011-02-05 16:45:00', 100), ('2011-02-05 18:50:00', 125), ('2011-02-05 19:25:00', 100), ('2011-02-05 21:10:00', 125), ('2011-02-06 00:30:00', 150); I need to get something like this: start|end|value NULL,'2011-02-05 06:05:00',300 '2011-02-05 06:05:00','2011-02-05 11:05:00',250 '2011-02-05 11:05:00','2011-02-05 14:35:00',145 '2011-02-05 14:35:00','2011-02-05 16:45:00',100 '2011-02-05 16:45:00','2011-02-05 18:50:00',125 '2011-02-05 18:50:00','2011-02-05 19:25:00',100 '2011-02-05 19:25:00','2011-02-05 21:10:00',125 '2011-02-05 21:10:00','2011-02-06 00:30:00',150 '2011-02-06 00:30:00',NULL,NULL I tried the following query: SELECT T1.DT AS `start`,T2.DT AS `stop`, T2.value AS value FROM ( SELECT DT FROM vals ) T1 LEFT JOIN ( SELECT DT,value FROM vals ) T2 ON T2.DT > T1.DT ORDER BY T1.DT ASC but it returns to many rows (29 instead of 9) in result and I cold not find any way to limit this using SQL. Is it Possible in MySQL?
