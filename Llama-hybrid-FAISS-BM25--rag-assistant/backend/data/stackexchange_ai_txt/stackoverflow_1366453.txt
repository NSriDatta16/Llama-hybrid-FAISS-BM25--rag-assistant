[site]: stackoverflow
[post_id]: 1366453
[parent_id]: 1365943
[tags]: 
I have worked for companies which take unit testing/integration testing too far and those that do too little so I like to think I have a good balance between the two. I would recommend TDD - Test Driven Development. This ensures you have good coverage but it also keeps focusing your attention on the right place and problem. So the first thing you do for every piece of new development is write a unit test - even if you don't have a single class to test. Think about what you are testing. Now run the test. Why wouldn't it compile? Because you need classA. Create the class and run the test. Why doesn't it compile? Because it doesn't have methodA. Write method one and run unit test again. Why does the test fail? Because methodA isn't implemented. Implement methodA and run test. Why does it fail? Because methodA doesn't return the correct expected value...etc You continue like this writing unit tests as you develop and then eventually the test will pass and the piece of functionality will be complete.
