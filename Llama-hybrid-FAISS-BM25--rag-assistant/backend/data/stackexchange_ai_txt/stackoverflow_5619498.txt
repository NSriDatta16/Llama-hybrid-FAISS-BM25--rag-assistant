[site]: stackoverflow
[post_id]: 5619498
[parent_id]: 5619226
[tags]: 
I think you seriously messed up what should be an attribute of the class and what should not. Think of it this way: your phonebook class has a dictionary in it, hence a dictionary should be an attribute. The name and phone of the person you're adding should be parameters to adddata , not instance vars of the class. How about this change: class phonebook: def __init__ (self): self.allphones = {} # Empty dictionary def adddata(self, pername, perphone): self.allphones[pername] = perphone # test code book = phonebook() book.adddata('joe', 121212) book.adddata('bob', 129459) print book.allphones For me this prints: {'bob': 129459, 'joe': 121212} Update: regarding your question update - not sure what you're trying to attain? Persistence of the dict across invocations of the script? Note that you only ask for one name and phone and add them to the phonebook. When you run the program again, it's all new and clean once again, so of course there's no information kept from the previous invocation. If you need persistent storage, consider using pickle , or shelve or even a database of some kind (for example the sqlite3 module provides built-in SQLite DB access)
