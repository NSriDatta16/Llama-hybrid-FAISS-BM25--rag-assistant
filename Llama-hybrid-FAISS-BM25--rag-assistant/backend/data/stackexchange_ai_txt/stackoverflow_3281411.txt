[site]: stackoverflow
[post_id]: 3281411
[parent_id]: 2055396
[tags]: 
We have half a dozen Grails applications in production now, and while Grails is different from java frameworks and requires some learning time, it has paid off because we have used Agile techniques. Details: We use IntelliJ. It's not very expensive and is has paid back in a few weeks for us. Automated testing, Continuous Integration and refactoring are a must, as for for all dynamic language code. If you already practice TDD or at least have a decent test code coverage, then it doesn't add any extra work. Hibernate comes by default with Grails, but you can use other persistence frameworks. There are 5 persistence plugins other available today Logging was clearly not a concern in Graeme Rochers' mind, but it has steadily improved. I haven't faced an issue where an error was not logged, though (you have to make sure you catch exceptions correctly in your code) Debugging was clearly not on the radar (but this has not improved). We don't rely on debugging anyway. This said, as with all new technologies, I recommend making prototypes, code reviews, pair programming, and maybe use some consulting as well.
