[site]: stackoverflow
[post_id]: 3906735
[parent_id]: 3906290
[tags]: 
Yes, separate all database interfacing code out. This is a recommended practice. It aids reuse, readability and also decouples your application logic from handling the storage backend. Also, there is usually no performance penalty in doing so. A theoretical advantage is that you could transition to a different database methodology if all your functionality is abstracted away. In practice it's hard to transition off a SQL backend, but at least your API would allow it. Two notes of concern: you can never move out all database queries. There are often performance or parameter constraints, where it makes sense to retain SQL queries mixed within your application code. But try to move out as much as you deem sensible. Second: try to retire mysql_query. It's not only simpler but also more secure to use PDO (which also exists emulated for PHP4). As example your first function could be simplified to: function getProfileUpdates($user_id) { global $db; $s = $db->prepare("SELECT m . * , u.picture, u.username FROM notes m, user u WHERE m.user_id = u.user_id AND u.user_id = ? ORDER BY m.dt DESC LIMIT 10"); $s->execute($user_id) return $s->fetch(); } Where $user_id was added as parameter, and in the SQL replaced by a ? placeholder.
