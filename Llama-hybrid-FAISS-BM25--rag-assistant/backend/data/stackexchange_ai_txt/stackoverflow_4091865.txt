[site]: stackoverflow
[post_id]: 4091865
[parent_id]: 4090273
[tags]: 
For debugging purposes, you can try creating a function that takes arguments for all the struct members, something like: /* Assumes g_curr_td is a global variable. */ void FillStruct( BYTE hour, BYTE minute, BYTE second, BYTE dom, BYTE month, BYTE year ) { g_curr_td.year = year; g_curr_td.month = month; g_curr_td.dom = dom; g_curr_td.hour = hour; g_curr_td.minute = minute; g_curr_td.second = second; } Using a function like this should make the assembly code the same whether you're using values from the buffer or constant expressions. If it still crashes, it's probably something with your buffer, even though you do seem to have checked all the angles I could think of dealing with the buffer. You can call this function as FillStruct( g_rx_buffer[3], g_rx_buffer[4], g_rx_buffer[5], g_rx_buffer[6], g_rx_buffer[7], g_rx_buffer[8] ) , and if that crashes, call it as FillStruct( a, b, c, d, e, f ) , where a, b, c, d, e, and f are either the original arguments or new constant arguments. Try replacing the arguments one at a time and see if it's just one particular field that's failing, or if it's any field that fails. EDIT: Also, exactly what is your typedef or #define for the BYTE type, what compiler and OS are you using, and are you using any pragmas, e.g. to pack the structure to byte alignment?
