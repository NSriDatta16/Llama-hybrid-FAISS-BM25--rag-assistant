[site]: stackoverflow
[post_id]: 4551268
[parent_id]: 4550459
[tags]: 
string convertFromEBCDICtoASCII(string inputEBCDICString, ...) You started off on the wrong foot. There is no way that you can read an file that contains EBCDIC into a string. A .NET text file reader is going to assume the text in the file is encoded in some way. Like StreamReader, it will use utf-8 by default. That cannot work properly on a EBCDIC file, it will mis-interpret some of the characters and turn them into Unicode codepoints that are >= 256. Which will then blow up your array indexing code. You have to change the input argument to byte[]. Read the file with FileStream or File.ReadAllBytes(). The next problem is that your table isn't valid for .NET strings, they are encoded in utf-16. For example, 128 isn't an ASCII code and doesn't encode a valid Unicode code point. Not sure what code page was used to construct the table, code page 1252 perhaps. After replacing the byte, you'd then next have to use Encoding.GetString() to convert that code page to Unicode. To slay this dragon another way, note that the Encoding class already supports EBCDIC code pages. Review the docs of the Encoding.GetEncodings() method. You'll have to know the IBM code page. You can pass the proper encoding to the StreamReader(String, Encoding) constructor and won't have to write any of this code.
