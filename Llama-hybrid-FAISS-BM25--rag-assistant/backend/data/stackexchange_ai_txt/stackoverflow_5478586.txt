[site]: stackoverflow
[post_id]: 5478586
[parent_id]: 5478519
[tags]: 
I've done this in Scala. The Dr Dobbs article was extremely useful to me. Sample image: Here's my basic algorithm: def createMosaic(targetImage:BufferedImage, index:PhotoIndexer.PhotoIndex, opacity:Float, targetWidth:Int, targetHeight:Int, numRows:Int, numColumns:Int, callback:PhotoMosaicCallback): ImageGrid = { var indexCopy = index // Map from the buffered image to that image's average color var colorMap:Map[BufferedImage,Color] = index.values.map(data => (data.thumbnail, data.avgColor)).toMap // We look at rectangular regions of the target image, calculate their average // colors, and then pick images that match those colors. val sampleWidth = targetImage.getWidth / numColumns val sampleHeight = targetImage.getHeight / numRows // Used to report the progress of the process var counter = 1 val numSubImages = numRows * numColumns val imageGrid:ImageGrid = Array.fill(numRows, numColumns)(Nil) // for each patch in the image for (row My full sourcecode is available on github
