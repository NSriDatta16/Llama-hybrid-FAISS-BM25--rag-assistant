[site]: stackoverflow
[post_id]: 3092542
[parent_id]: 3092475
[tags]: 
For implementing mix-ins via templates, you need the template implementing the abstract function to derive from the abstract base class. So you may fix your code by changing it the following way: // ... template class AverageHelper : public TriviaList{ // ... class IndexableList : public AverageHelper { In general, if you want to provide more than one mix-in, you may either use a virtual inheritance in order not multiplying the instances of the base classes, or to use chain inheritance as in the following sample: class Abstract { public: virtual void foo() = 0; virtual void bar() = 0; }; template class FooImpl : Base { public: void foo() { /* default foo implementation */ } }; template class BarImpl : Base { public: void bar() { /* default bar implementation */ } }; class Derived : public BarImpl > { // You have both foo() and bar() implementations available };
