[site]: stackoverflow
[post_id]: 2084173
[parent_id]: 2084094
[tags]: 
You have char *array[size]; That makes array an array of pointers. Specifically, array is an array of size pointers. Each element in the array ( array[0] to array[size-1] ) is of type char * . I think it would help if you understood how array works: +-------+-------+-------+-------+ | [0] | [1] | [2] | [3] | +-------+-------+-------+-------+ | | | | | | | | | | | | v v v v Each of the boxes above represents a pointer, and the arrows are where they are pointing to. The storage for them is not yet assigned to, so they are just "out there", pointing nowhere useful. You can either create memory for them ( malloc() etc., in C, new[] in C++), or you can point them to some existing location. You say: ...put some strings in it. If I assign something again to them, they don't replace the previous contents but they keep on appending on the previous contents. How do I correctly clear/reset all of its contents? It is not clear how you are putting "strings in it". Do you mean you are storing strings in array[0] .. array[size-1] ? How? Are you assigning literal strings to them? Something like: array[0] = "String"; If you are doing that, then, you can reassign to the pointers and the strings wouldn't append. In other words, if later in your program you do: array[0] = "Another string"; you are reassigning the pointer array[0] to point to "Another string" , and thus you're not appending. So, in short, we need to see more code, and you may need to understand pointers and arrays better. Edit : Based upon your edit, the pointers myMainArr[i] (for i=0 to i=3 ), do get reassigned to the corresponding elements from myArrOne or myArrOne (not a typo!), depending upon the contents of action . So, if you printed them (for example, printf("%s\n", myMainArr[0]); ), you shouldn't see any strings being appended. Also, myMainArr is local to your function function , so it gets destroyed when your function returns. (Incidentally, your choice of the names array for an array and function for a function make it harder to be unambiguous when answering the question!) If you are having a problem, please post a complete , minimal , compilable code that shows the problem.
