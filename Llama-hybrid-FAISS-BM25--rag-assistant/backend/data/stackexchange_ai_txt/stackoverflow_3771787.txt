[site]: stackoverflow
[post_id]: 3771787
[parent_id]: 3771424
[tags]: 
Much smaller code: with open('in', "rtU") as f: lines = [l for l in f if l.strip()] names = '\t'.join(lines[0].split()) numbers = [[i.strip() for i in line.split()] for line in lines[1:]] person_data = zip(*numbers) person_data = [tuple(int(i) for i in t if i!="NA") for t in person_data] averages = map(lambda x: str(float(sum(x))/len(x)), person_data) with open('out', 'w') as f: f.write(names) f.write('\n') f.write('\t'.join(averages)) I have tested this after John Machin left his comment. In response to his comments: This was a bug that existed because I misread the problem. It has been fixed I have tried to make that line a little more readable now, but to be honest, I don't understand why you called it obfuscatory in the first place You have pointed out a logic error in my code. I guess I really shouldn't have been doing this in the middle of class... for this I apologize I agree that readlines() was redundant. I didn't have a proper python interpreter to cross check this, so I left it in as a safety Hope this is better.
