[site]: stackoverflow
[post_id]: 918770
[parent_id]: 918711
[tags]: 
Sure thing. think of an event as the notification that occurs when something completes in the system that your code didn’t directly call. In C# it's really easy to get code to run when an event "fires" For example when a user presses a button an event will be raised or when a background network operation completes. In C# you use the += semantics to attach to the event that will be “signaled” when the event fires. I made you a simple C# winforms program – in it I added a button using the Visual Studio “Designer” (I just dragged a button from the Toolbox to the Window). You’ll see the line “button1.Click” – in this case I want to do something when the “Click” event is raised. using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Windows.Forms; namespace events { public partial class Form1 : Form { public Form1() { InitializeComponent(); button1.Click += new EventHandler(button1_Click); } void button1_Click(object sender, EventArgs e) { MessageBox.Show("Hi!"); } } } You’ll also see other kinds of events in practice for example: Network operation has completed ( WebClient.DownloadFileCompleted ) User Interfaces (resizing windows for example) Timers (set off the timer in 10 minutes)
