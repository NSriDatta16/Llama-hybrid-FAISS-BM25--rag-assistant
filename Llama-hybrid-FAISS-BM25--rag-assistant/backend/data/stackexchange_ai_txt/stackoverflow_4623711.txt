[site]: stackoverflow
[post_id]: 4623711
[parent_id]: 
[tags]: 
Mercurial Branches vs. Compilation Flags: One Codebase -- Multiple Products

Say I'm creating a set of products that share much of their code but not all of it (For example: an application with multiple front ends: command line, Windows/MAC/Linux GUI, mobile (minimal) GUI, web GUI etc.) Furthermore, lets say that the shared code cannot be easily split off and 'librarified'. Im considering using mercurial named branches for the different products (e.g. branches: CLI,Windows,MAC,Linux,Mobile,Web) or compilation flags in code (e.g. #if (FRONT_END == CLI) #elif (FRONT_END == WEB) ... ). im not satisfied with either approaches. here are my grievances: named branches: if i change a piece of shared code, i need to merge it with all branches. is there an hg command to do this (semi-)automatically? it is not easy/quick to see how a particular feature implemented across all branches (visualize the differences in one area of the code) compilation flags: code clutter no implicit branch revision history. must do so manually (commit with a message indicating which products are affected) can you suggest: ways to mitigate my qualms? a different point of view elegant ways to combine the 2 approaches thanx
