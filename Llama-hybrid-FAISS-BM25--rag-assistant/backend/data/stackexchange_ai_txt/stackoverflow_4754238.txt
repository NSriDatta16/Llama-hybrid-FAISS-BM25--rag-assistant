[site]: stackoverflow
[post_id]: 4754238
[parent_id]: 4753008
[tags]: 
But how could one index cause a Key Lookup operation to take so much longer than another Key Lookup? It all depends on the current statistics of the expected Key Lengths. The Query Optimizer (QO) works by looking at statistics on the indexes. The index on fieldb could have an average cardinality of 100, whereas the index on the other fields an average cardinality of 10000 (100 times more specific). So it gives you a relative indication, based on an averaged plan. To see specifics, always turn on statistics*, but that really only gives you the actual execution time of specific values. In some ways the QO can be more accurate over the long term if the access variables are random. Consider a case of these two queries SELECT * FROM table WHERE Field2 = 40; SELECT * FROM table WHERE Field2 = 42; Let's say hypothetically 42 is a special code that is used in 80% of all records. 40 is a unique code used in only 1 record. You cannot expect the QO to show different estimated rows for each? Yet if you ran the queries, unless parameterization/plan-caching is involved it is likely the 2nd one will use the clustered index to scan the table instead of performing an 80% (expensive) bookmark lookup. * to turn on statistics reporting set statistics io on set statistics time on
