[site]: stackoverflow
[post_id]: 4294061
[parent_id]: 
[tags]: 
AS3 Socket/Server MMO Communication

I'm working on a flash MMO with a c# server. I have a simple messaging protocol for the sockets. When a client joins he sends out this: "%|clientId|need" And positions are updated like this: "$|clientId|xPosition|yPosition" For some reason this isn't working. I store all the avatars in an array, the avatar class simply extends movieclip. This should add all clients into the room but it isn't working. Any ideas? Edit: The error is probably in the client-side code above, I think it's with how I store the Avatars in an array. Here is my code: id.text = String(Math.random()); import flash.net.Socket; import flash.events.MouseEvent; import flash.utils.Timer; import flash.events.TimerEvent; import flash.utils.Dictionary; var avatars:Array = new Array(); var _socket:Socket = new Socket(); _socket.addEventListener(ProgressEvent.SOCKET_DATA,socketData); _socket.addEventListener(Event.CONNECT,socketConnected); _socket.addEventListener(IOErrorEvent.IO_ERROR,socketError); _socket.connect("192.168.1.4",8000); function sendText(msg:String):void { if (_socket.connected) { _socket.writeUTFBytes(msg); _socket.flush(); } else { } } function socketConnected(e:Event):void { chat.appendText("Connected. \n"); sendText("%|" + id.text + "|need"); //chat.scrollV = chat.maxScrollV; } function socketError(e:IOErrorEvent):void { chat.appendText("SYSTEM MSG:"+e.text+"\n"); //chat.scrollV = chat.maxScrollV; } function socketData(e:ProgressEvent):void { var str:String = e.currentTarget.readUTFBytes(e.currentTarget.bytesAvailable); trace(str); //var xml:XML = new XML(str); chat.appendText(str + "\n"); //[pos]|50|334 if(str.search("$")){ var positionArray = str.split("|"); avatars[str[1]].x = str[2]; avatars[str[1]].x = str[3]; } if(str.search("%")){ var miniArray = str.split("|"); avatars[miniArray[1]] = new Avatar(); addChild(avatars[miniArray[1]]); dump.text = miniArray[1]; } } me.addEventListener(MouseEvent.MOUSE_DOWN, drag); me.addEventListener(MouseEvent.MOUSE_UP, sDrag); var timing:Boolean = false; var t:Timer = new Timer(1); t.addEventListener(TimerEvent.TIMER, tick); function tick(e:TimerEvent){ if(timing){ sendText('$|'+id.text+'|'+me.x+'|'+me.y); } else{ } } t.start(); function drag(e:MouseEvent){ me.startDrag(); timing = true; } function sDrag(e:MouseEvent){ me.stopDrag(); timing = false; }
