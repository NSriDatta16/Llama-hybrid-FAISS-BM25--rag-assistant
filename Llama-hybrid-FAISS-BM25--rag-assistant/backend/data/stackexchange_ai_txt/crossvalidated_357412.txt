[site]: crossvalidated
[post_id]: 357412
[parent_id]: 355694
[tags]: 
It's hard to say what solution will work better without knowing nature of the data, but I can suggest you to try these two options: If values in the output are not related you can just reshape your output to a vector that has 45 values and build a regular neural network that takes vectors with two values as an input and outputs 45 variables If values are somehow related, like pixels in the image, than you can apply a few transformations to the input and scale it to maybe 9 variables, reshape it to the shape like 9x1 or 3x3 and apply a few convolutional operations with some extra padding in order to upscale your output to the shape 15x3 . It's essentially the same thing as decoder in the convolutional autoencoder. You can check this type of autoencoder here: https://github.com/itdxer/neupy/blob/master/examples/autoencoder/stacked_conv_autoencoders.py#L52-L62
