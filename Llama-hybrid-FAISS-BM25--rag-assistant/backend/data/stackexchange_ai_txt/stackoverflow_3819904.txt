[site]: stackoverflow
[post_id]: 3819904
[parent_id]: 3819459
[tags]: 
You can easily refactor this to make it much more readable. The key concept to grasp is that you can refer to named functions in callbacks as well as anonymous ones. So, for instance: function clickHandler() { alert("Link clicked"); } $('a').click(clickHandler); My preference is always to give the functions names according to what they do (e.g. loadImage , rather than the event that you intend to trigger them (e.g. clickLink . This makes your code clearer and makes later changes much easier. In this case, I would structure my code like this: $(document).ready(function(){ $('a.edit').click(loadFormStart); function loadFormStart() { // get form $.ajax({ success: loadFormEnd }); } function loadFormEnd(data) { // add form & handler $('new_form').submit(handleFormStart); } function handleFormStart() { // submit form $.ajax({ success: handleFormEnd }); } function handleFormEnd(data) { // receive form data //display message } }); I'd also advise you to read Code Organization on jqfundamentals which gives a similar approach to this using an object literal.
