[site]: stackoverflow
[post_id]: 1719664
[parent_id]: 
[tags]: 
Duplex WCF + Static Collection of COM objects

I am trying to build a WCF service that exposes the functionality of a particular COM object that I do not have the original source for. I am using duplex binding so that each client has their own instance as there are events tied to each particular instance which are delivered through a callback (IAgent). It appears there is a deadlock or something because after the first action, my service blocks at my second action's lock. I have tried implementing these custom STA attribute and operation behaviors ( http://devlicio.us/blogs/scott_seely/archive/2009/07/17/calling-an-sta-com-object-from-a-wcf-operation.aspx ) but my OperationContext.Current is always null. Any advice is much appreciated. Service Collection: private static Dictionary agents = new Dictionary (); First action: public void Login(LoginRequest request) { IAgent agent = OperationContext.Current.GetCallbackChannel (); lock (agents) { if (agents.ContainsKey(agent)) throw new FaultException("You are already logged in."); else { ICOMClass startup = new ICOMClass(); string server = ConfigurationManager.AppSettings["Server"]; int port = Convert.ToInt32(ConfigurationManager.AppSettings["Port"]); bool success = startup.Logon(server, port, request.Username, request.Password); if (!success) throw new FaultException (new COMFault { ErrorText = "Could not log in." }); COMAgent comAgent = new COMAgent { Connection = startup }; comAgent.SomeEvent += new EventHandler (comAgent_COMEvent); agents.Add(agent, comAgent); } } } Second Action: public void Logoff() { IAgent agent = OperationContext.Current.GetCallbackChannel (); lock (agents) { COMAgent comAgent = agents[agent]; try { bool success = comAgent.Connection.Logoff(); if (!success) throw new FaultException (new COMFault { ErrorText = "Could not log off." }); agents.Remove(agent); } catch (Exception exc) { throw new FaultException(exc.Message); } } }
