[site]: stackoverflow
[post_id]: 2491599
[parent_id]: 2490707
[tags]: 
Do yourself a favour and use a standard library for hashing your passwords. Because security tends to be a lot more complicated and with more invisible screw up possibilities than most programmers could tackle alone, using a standard library is almost always easiest and most secure (if not the only) available option. The standard library : Take a look at: Portable PHP password hashing framework : phpass and make sure you use the CRYPT_BLOWFISH algorithm if at all possible. example of code using phpass (v0.2): require('PasswordHash.php'); $pwdHasher = new PasswordHash(8, FALSE); // $hash is what you would store in your database $hash = $pwdHasher->HashPassword( $password ); // $hash would be the $hashed stored in your database for this user $checked = $pwdHasher->CheckPassword($password, $hash); if ($checked) { echo 'password correct'; } else { echo 'wrong credentials'; } PHPass has been implemented in some quite well known projects: phpBB3 WordPress 2.5+ as well as bbPress the Drupal 7 release, (module available for Drupal 5 & 6) others The good thing is that you do not need to worry about the details, those details have been programmed by people with experience and reviewed by many folks on the internet. Whatever you do if you go for the ' I'll do it myself, thank you ' approach, do not use MD5 anymore . It is a nice hashing algorithm, but utterly broken for security purposes . Currently, using crypt , with CRYPT_BLOWFISH is the best practice. CRYPT_BLOWFISH in PHP is an implementation of the Bcrypt hash. Bcrypt is based on the Blowfish block cipher, making use of it's expensive key setup to slow the algorithm down. For more information on password storage schemes, you could also read Jeff `s blog post about it: You're Probably Storing Passwords Incorrectly
