[site]: crossvalidated
[post_id]: 315001
[parent_id]: 314994
[tags]: 
auto.arima() decides on whether or not to use seasonality based on the OCSB test. ets() uses information criteria to test for seasonality or non, as detailed in Hyndman et al., Forecasting with Exponential Smoothing: The State Space Approach . Incidentally, you are right that ETS(M,N,N) is nonseasonal: it has multiplicative errors, no trend and no seasonality. Given that the two methods use two different approaches to detect seasonality, it's not surprising that the results will differ, unless seasonality is blatantly obvious. And in your case, seasonality is not obvious at all. Compare your data to an obviously seasonal time series: foo One very useful way to detect seasonality is the so-called seasonplot. Here is a seasonplot of your data against the AirPassengers dataset: library(forecast) blackBodyRadiationColors It appears obvious to me that there is essentially no seasonal pattern to your data at all. In addition, as jbowman notes , it doesn't really look very stationary, and the large smoothing parameter ets() estimates ($\alpha=0.94$) looks uncomfortably close to a random walk, too. So it may be an idea to first take differences, then potentially look for seasonality. (Incidentally, I use black body radiation colors because the Rainbow Color Map (is) (Still) Considered Harmful .)
