[site]: stackoverflow
[post_id]: 4784916
[parent_id]: 
[tags]: 
Tips for designing a serialization file format that will permit easy merging

Say I'm building a UML modeling tool. There's some hierarchical organization to the data, and model elements need to be able to refer to others. I need some way to save model files to disk. If multiple people might be working on the files simultaneously, the time will come to merge these model files. Also, it would be nice to compare two revisions in source control and see what has changed. This seems like it would be a common problem across many domains For this to work well using existing difference and merge tools, the file format should be text, separated onto multiple lines. What are some existing serialization formats that do a good job (or poor job) addressing such problems? Or, if designing a custom file format, what are some tips / guidelines / pitfalls? Bonus question: Any additional guidance if I want to eventually split the model up into multiple files, each separately source controlled?
