[site]: stackoverflow
[post_id]: 3719181
[parent_id]: 3719107
[tags]: 
I'd create a wrapper class around the Settings class then pass that wrapper around. Then you can mock away your settings class with ease. The only other thing I can come up with is the slightly more light-weight and easier to mock option of making your settings file implement an interface which reflects all your settings. It's not really much different for the caller, but you'll have less plumbing to do when adding new settings. Neither is fantastic, and it is a pain to have to do it for auto-generated code, but it seems that's what we're stuck with as far as I can tell if you really want to remove the dependency on the settings file. E.g. for a settings file containing a string Application setting and an int User setting: internal sealed partial class Settings : IMySettings { /* * here be auto-generate code (and dragons!) */ } internal interface IMySettings { string ApplicationSetting { get; } string UserSetting { get; set; } }
