[site]: stackoverflow
[post_id]: 3490999
[parent_id]: 3490738
[tags]: 
Leveraging sum() should get better performance when adding more than a few dicts >>> dict1 = [{'a':2, 'b':3},{'a':3, 'b':4}] >>> from operator import itemgetter >>> {k:sum(map(itemgetter(k), dict1)) for k in dict1[0]} # Python2.7+ {'a': 5, 'b': 7} >>> dict((k,sum(map(itemgetter(k), dict1))) for k in dict1[0]) # Python2.6 {'a': 5, 'b': 7} adding Stephan's suggestion >>> {k: sum(d[k] for d in dict1) for k in dict1[0]} # Python2.7+ {'a': 5, 'b': 7} >>> dict((k, sum(d[k] for d in dict1)) for k in dict1[0]) # Python2.6 {'a': 5, 'b': 7} I think Stephan's version of the Python2.7 code reads really nicely
