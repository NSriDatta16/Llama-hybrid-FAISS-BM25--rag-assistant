[site]: stackoverflow
[post_id]: 525732
[parent_id]: 525711
[tags]: 
Java generics are very different to C# generics. And yes, there are places where that means it can be more elegant - usually in terms of wildcarding and variance. On the other hand, wildcarding is generally poorly understood (and I very definitely include myself in that camp) and the whole business of type erasure means that in general I far prefer .NET generics. A rather different place where Java "wins" IMO is its enum support. C# enums are basically named numbers - Java is much more object oriented. A similar effect can be mostly achieved in C# using nested classes, but more framework support (an equivalent to EnumSet ) and switch support would be welcome. I also like the ability to restrict visibility to a package (namespace) in Java - although this is the only side of Java's access rules that I prefer to C#. Having used both Java and C# pretty extensively for a number of years, my own feeling is that on the language level C# is far, far ahead of Java. Really, good cross-platform support and a large existing codebase are the only two significant advantages Java has over C# and .NET at this point.
