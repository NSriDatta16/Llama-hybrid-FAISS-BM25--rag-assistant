[site]: stackoverflow
[post_id]: 5226662
[parent_id]: 5226279
[tags]: 
The easiest way to deal with this problem is to buy software that can detect db schema by comparing two databases changes and generate a change script that can update your target database. I am using Visual Studio Ultimate 2010 for that, but there's also cheaper software that can do the same. This works for me 99% of the time (the only instance where this did not work properly for me is when I renamed a table column). If you don't have such a piece of software, it is crucial to generate your SQL change scripts by hand. Whenever you do a change to the database schema, keep track of the SQL you used for that changed and add it to one big file of db schema changes for the next version of your software. It's a bit tedious at the beginning, but you'll get used to it pretty quickly. Then when you are ready to deploy the software, proceed as follows: Take the website offline Make a backup of your current production database. Make a backup of your current production website. Upload your new code to the server Run the DB changes script you previously created (either by hand or with the software mentioned above) Take the website back online and see if it works. If it doesn't and you can't easily fix the problem, revert to the previous website and db version until you have fixed the bug. All of these steps can be easily automated using batch files and the SQL server agent or SQLCMD. Generally you should deploy to a staging server first, then test your website very thoroughly and only then move on to the production server. This way you avoid longer downtimes on your production server and minimize the risk of losing any vital data.
