[site]: crossvalidated
[post_id]: 92412
[parent_id]: 
[tags]: 
Clear steps to calculate coherence between two time series

I originally posted this on stackoverflow.com and then deleted it and moved it here My question is similar to Similarity of two discrete fourier tranforms (specifically the selected answer). I've also gleaned some helpful information from this R help thread . I'm stuck on the actual implementation of this process, however. I have two Fourier series; my ultimate goal is to calculate a sum of weighted coherence. (In actuality I have millions of series corresponding to pixels, but, let's just call it two for now). TS1 From the above links I see that I need to calculate coherence of the cross-spectrum at each frequency, and weight the frequencies that have higher power spectral density. I know I can extract spectral density from spectrum(data.frame(TS1, TS2))$spec I know I can extract coherence using: spectrum(data.frame(TS1, TS2))$coh I can see that the value of coherence extracted is always equal to 1. It seems the "solution" to this is to lag the time series somehow. I'm not sure how to 1) calculate optimal lag, especially because I'd like it to be comparable across all the coherence calculations, and 2) how to specify lag in the spectrum(). spec.pgram takes "spans", but those seem to have more to do with smoothing than offsetting. I tried a maximum ccf function defined here , but in many cases (not in the example set I've provided, you'll have to trust me) the "optimal lag" returned is 0, which makes sense because the ccf is 1, but isn't actually what I'm looking for. Should I be using acf() or ccf() to manually calculate coherence? What steps (R functions would be really helpful) do I need to perform to get from where I am to having a single weighted coherence value?
