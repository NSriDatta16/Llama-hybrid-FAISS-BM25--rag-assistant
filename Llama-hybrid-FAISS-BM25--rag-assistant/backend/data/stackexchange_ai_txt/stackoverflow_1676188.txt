[site]: stackoverflow
[post_id]: 1676188
[parent_id]: 
[tags]: 
Collecting form data and removing or hiding a form field using JQuery

I'm currently working on a problem that basically involves processing all data in a form, saving it, and replacing the entire form with a text link. My primary goal is to convert a form, with some data using the POST method, and a submit button, into a standard text link that can then take the saved/serialized data and POST it to the server as if it were the original form; and when JS is disabled, the standard form and submit button is presented, i.e. a graceful degradation. I'm currently using jQuery, I know it's possible to process form data by serializing it, but I'm not sure how to go about removing or hiding (whichever one is possible) a form completely so it doesn't interfere with the layout of surrounding HTML element. In summary: -Is it possible to remove or hide an entire form field with jQuery? -When jQuery serializes form data, where is it saved to? -Can that saved data be referenced by a text link (i.e. Submit " ) somehow and POSTed as if it were a standard form? Thank you. UPDATE : Ok, I implemented Franz's code in a separate JS file I call from my test.html page. The content of the JS file is as follows: $(document).ready(function() { //Store form data before removing var tempStorage = $('.postLink').serialize(); // Remove form: $('.postLink').remove(); //Assign onClick event to anchor tag $('.submit').click(function(){ $.ajax({ //aspx page url:"doSomethingImportant/10", //Using POST method type: "POST", //The data object data: tempStorage, //No caching cache: false, //Alert on success success: function(html) { alert('great'); } }); }); }); The only difference here is I'm using the class attribute as an identifier for the forms I want removed as opposed to id. Again, this is what I'm tasked with, not by choice. For some reason, however, it doesn't make it to the alert message, i.e. it doesn't work. Below is the snippet of html I'm having the script act on: h1.intro {color:blue;} p.important {color:green;} h2.outro {color:DarkGreen;} Form Remover demo Hello World!! How's it going?? my First Link Submit Link my Second Link my Third Link That's nice, gotta go. UPDATE 11/10/09: Ok, I've found an alternate way of going about this problem by hiding the form and adding an anchor tag immediately after the form. I then attach a click operation to the anchor that acts on the submit button in the hidden form. My problem now is that this only works with one form defined in the DOM, I want to come up with a generalization of this function so that it works with several forms. How can I traverse each form and replace it with its own unique link? Code for my current script: /** * Hide forms on page load. * Call submit button within a form from a link */ $(document).ready(function() { //Hide form: $('.postLink').hide(); //Append a anchor tag after each form that is replaced $('.postLink').after(" Submit Link "); //Submit button in hidden form $('.submitLink').click(function(){ $('#myForm').find('input#submitThis').click(); return false; }); });
