[site]: stackoverflow
[post_id]: 2000372
[parent_id]: 2000284
[tags]: 
The problem with contract last is that there is a tight coupling between your code and the WSDLs you produce. It means that you are limited by the impedance mismatch between Java and what an XSD supports. The major issue we've faced is around versioning. If you want to support two parallel versions, how do you do that with contract-last? We found a cunning way to do it with XStream and separate wars but the solution is too large for this margin. CXF works pretty well. We haven't hit any major problems but it's a big project and the variations of what you can do with it are also pretty big. That depends on the consumers of your API. I'd advocate REST if at all possible because it's simpler, doesn't rely on incompatible SOAP libraries and scales better but some B2B organisations I've worked with prefer SOAP. The argument can be made that there is more tooling for creating SOAP clients automatically vs. REST. That said, most large organisations (Google, Amazon etc.) prefer REST for a reason.
