[site]: crossvalidated
[post_id]: 407384
[parent_id]: 407262
[tags]: 
I suggest you spend some time with this paper on the large sample properties of Latin hypercube sampling: https://www.tandfonline.com/doi/abs/10.1080/00401706.1987.10488205 The purpose of a Latin hypercube sample is that it is more efficient than a simple random sample in that it fills the design space parameters on the margins with as few samples as possible and enables lower variance estimates of calculated values than SRS with an equivalent sample size. It is often used in experiments with high cost in time or resources. As for a stopping rule, a simulation could give you an idea of the variance in your estimated quantity for a given sample size. I don't typically think of that as a stopping rule because the sample is drawn all at once. I'm not sure, but your example seemed like either a bootstrap or a MCMC experiment with thinning. Latin hypercube samples are not normally used for either of those situations. (Update 5/12/2019) You can get a conservative estimate of the variance in your estimated quantity by assuming a simple random sample. Here is some R code to show an example: > # true parameters > beta0 beta1 beta2 > # draw an LHS with 10 and 1000 samples, 10000 times > # also draw a SRS with 10 and 1000 samples, 10000 times > require(lhs) > set.seed(1901) > means1 means2 means3 means4 for (i in 1:10000) + { + X1 > # the true mean > beta0 + beta1*(3+0)/2 + beta2*exp(0.5+0.1*0.1/2) [1] 13.12794 > > # LHS with size 10 > mean(means1) [1] 13.12702 > var(means1) [1] 0.008842109 > # LHS with size 1000 > mean(means2) [1] 13.12794 > var(means2) [1] 9.082875e-08 > # SRS with Size 10 > mean(means3) [1] 13.13348 > var(means3) [1] 0.7113017 > # SRS with size 1000 > mean(means4) [1] 13.12949 > var(means4) [1] 0.007145957 > > # the ratio of the variance of the SRS experiments is as expected > var(means3) / var(means4) [1] 99.53903 > 1000 / 10 [1] 100 > > # the ratio of the variance of the LHS experiements is better the SRS > # but the SRS ratio can be a conservative estimate of the variance for > # a new sample size > var(means1) / var(means2) [1] 97349.23
