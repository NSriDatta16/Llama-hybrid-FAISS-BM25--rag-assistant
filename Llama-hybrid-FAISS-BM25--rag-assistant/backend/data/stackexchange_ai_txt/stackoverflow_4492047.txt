[site]: stackoverflow
[post_id]: 4492047
[parent_id]: 4491952
[tags]: 
The 'Should' convention is aligned with the behaviour driven development style of testing. I personally really prefer to write tests in this style, as it encourages you to write tests that read as specifications , and are more aligned with the behaviour of the class or system that you are testing. Where possible, I sometimes go one step further and give the test class even more context using it's name: class ANewlyCreatedAccount { shouldHaveAZeroBalance() {} shouldCalculateItsOwnInterest() {} } By naming your classes and thinking about them in this specification style, this can give you a lot of guidance on which tests to write , and in which order you should write the tests and make them green. Yes, 'should' vs 'test' is just a prefix and it's important to be consistent, but this question is also about the style and mindset of how you test your code and choose which tests to write. BDD has a ton of value, so I suggest reading further and give this a try.
