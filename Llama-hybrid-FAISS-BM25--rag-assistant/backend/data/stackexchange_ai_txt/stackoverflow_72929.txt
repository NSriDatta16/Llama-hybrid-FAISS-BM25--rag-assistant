[site]: stackoverflow
[post_id]: 72929
[parent_id]: 72667
[tags]: 
No, I don't think that you have to use a state machine for this workflow. But, I propose to change the Suspend activity because: The SuspendActivity activity temporarily stops the execution of the current workflow. Typically, you use the SuspendActivity activity to reflect an error condition that requires attention by an administrator. When a workflow instance is suspended, an error is logged. You can specify a message string to accompany the error to help the administrator diagnose the problem with the SuspendActivity Error property. A suspended workflow instance can still receive messages that are queued up until the workflow is restarted. All the state information for the workflow instance is saved and is reinstated when the instance is resumed (using Resume). Source: MSDN The typical way for adding a human task in a workflow (either sequence or state machine) is to define an External Data Exchange interface and use a HandleExternalEvent activity (and possibly a CallExternalMethod activity). For more details, please see the following articles: Building State Machines with Windows Workflow Foundation Simple Human Workflow with Windows Workflow Foundation
