[site]: stackoverflow
[post_id]: 5724071
[parent_id]: 5691632
[tags]: 
So, we desire to move our character - we'll call him 'loco' - based on the accelerometer's x and y data. Now, if we do want the magnitude of the tilt to affect the rate of loco's travel, we can simply factor the accelerometer x or y value directly into our algorithm for his movement. For example: (psuedocode) // we'll call our accelerometer value for x 'tiltX' // tiltX is .5; // assume that accelerometer updated the latest x value to .5 // unitOfMovement = 1; // some arbitraty increment you choose for a unit of movement loco.x += unitOfMovement * tiltValueX; This will cause loco to move that number of pixels for each game cycle (or whatever cycle you are driving the updates for movement by) and that here is 1 pixel multiplied by the accelerometer value. So if the character normally moves 1 pixel right at full tiltX (1.0), then if tiltX comes in from the accelerometer at .5, loco will move half that. When the value of tiltX increases, so too will the movement of Loco. Another consideration is whether you want the movement tied directly to the rate of accelerometer events? Probably not, so you can use an array to just hold the last ten x values (same concept for y values too) sent by the accelerometer and use the latest average of the array (sum of x values / number of elements in array) at each game loop. That way, the sensitivity will feel more appropriate than driving the movement by whatever the update rate of the accelerometer may be.
