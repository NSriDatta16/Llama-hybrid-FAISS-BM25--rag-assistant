[site]: stackoverflow
[post_id]: 4141730
[parent_id]: 4141666
[tags]: 
A string literal is an array of characters* (with static storage), which contains all the characters in the literal along with a terminator. The size of an array is the size of the element multiplied by the number of elements in the array. The literal "" is an array that consists of one char with the value 0 . The type is char[1] , and sizeof(char) is always one; therefore sizeof(char[1]) is always one. In C, NULL is implementation-defined, and is often ((void*)0) . The size of a void* , on your particular implementation , is 4. It may be a different number depending on the platform you run on. NULL may also expand to an integer of some type of the value 0, and you'd get the size of that instead. *A literal is not a pointer, arrays are not pointers, pointers do not play a role in this part of the question.
