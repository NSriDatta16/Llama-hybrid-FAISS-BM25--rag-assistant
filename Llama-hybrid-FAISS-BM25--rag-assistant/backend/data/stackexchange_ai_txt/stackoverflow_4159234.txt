[site]: stackoverflow
[post_id]: 4159234
[parent_id]: 4085879
[tags]: 
It always again feels a bit strange, answering to my own questions, but for the sake of sharing what I got with others I'm going to post the "solution" here. I'll try to make it short: Impersonating in the IAuthorizationPolicy.Evaluate(...) is not possible. (S4U2Self may work, didn't test that since I didn't have that option) As I already mentioned, impersonating the caller within the webservice operation worked by placing the [OperationBehavior(Impersonation = ImpersonationOption.Required)] . So calling my custom webservice for retrieving the principal as the first statement in my service operation would always work. I didn't like that approach however. As an alternative I tried to find the latest possible point in the call chain of a WCF service operation where the impersonation finally worked. This is where I found the OperationInvoker . The following diagram illustrates the sequence of dispatchings that are done before the call arrives at the actual operation (taken from here ): Parameter Inspection was too early, impersonation didn't yet work, but it luckily worked in the Operation Invoker. So by writing a custom operation invoker and wrapping everything into a custom operation behavior attribute I was able to elegantly solve the problem. More info on an according blog post I wrote .
