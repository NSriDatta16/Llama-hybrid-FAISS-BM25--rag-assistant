[site]: stackoverflow
[post_id]: 720273
[parent_id]: 
[tags]: 
What is the best way to decompress a gzip'ed server response in Python 3?

I had expected this to work: >>> import urllib.request as r >>> import zlib >>> r.urlopen( r.Request("http://google.com/search?q=foo", headers={"User-Agent": "Mozilla/5.0 (X11; U; Linux i686) Gecko/20071127 Firefox/2.0.0.11", "Accept-Encoding": "gzip"}) ).read() b'af0\r\n\x1f\x8b\x08...(long binary string)' >>> zlib.decompress(_) Traceback (most recent call last): File " ", line 1, in zlib.decompress(x) zlib.error: Error -3 while decompressing data: incorrect header check But it doesn't. Dive Into Python uses StringIO in this example, but that seems to be missing from Python 3. What's the right way of doing it?
