[site]: stackoverflow
[post_id]: 2922877
[parent_id]: 2922691
[tags]: 
I don't know how iPhone OS works, so this is basically just guessing, but in systems where no garbage collector compacts the heap memory, it will be fragmented over time. Having a lot of memory free does not mean that a lot of contiguous memory is free. For example, if you always need 4MB of memory for some processing, and you have this allocation pattern: Allocate 4MB Allocate 1KB Free 4MB Allocate 1KB (You don't free the 1KB blocks because it's the computation result, or whatever) You may end up with only 3,999K of free contiguous memory - so next time you allocate 4MB, it will be located after the gap, even though it almost fits. This means you can run out of memory even though almost the entire memory (or rather, addressing space) is free. Granted, modern systems shouldn't suffer from this problem, but they may, especially if the application is never shut down and does not have a compacting garbage collector. Note that some systems have a low-fragmentation heap especially for situations like this (re-allocating and freeing blocks of the same size), but you usually need to explicitly request it.
