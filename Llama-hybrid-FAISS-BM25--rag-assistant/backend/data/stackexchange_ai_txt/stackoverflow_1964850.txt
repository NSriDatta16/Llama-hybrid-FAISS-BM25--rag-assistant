[site]: stackoverflow
[post_id]: 1964850
[parent_id]: 1964811
[tags]: 
Use: SELECT t.id, t.variety, (SELECT COUNT(*) FROM TABLE WHERE id It's not an ideal manner of doing this, because the query for the num value will execute for every row returned. A better idea would be to create a NUMBERS table, with a single column containing a number starting at one that increments to an outrageously large number, and then join & reference the NUMBERS table in a manner similar to the variable example that follows. MySQL Ranking, or Lack Thereof You can define a variable in order to get psuedo row number functionality, because MySQL doesn't have any ranking functions: SELECT t.id, t.variety, @rownum := @rownum + 1 AS num FROM TABLE t, (SELECT @rownum := 0) r The SELECT @rownum := 0 defines the variable, and sets it to zero. The r is a subquery/table alias, because you'll get an error in MySQL if you don't define an alias for a subquery, even if you don't use it. Can't Use A Variable in a MySQL View If you do, you'll get the 1351 error, because you can't use a variable in a view due to design . The bug/feature behavior is documented here .
