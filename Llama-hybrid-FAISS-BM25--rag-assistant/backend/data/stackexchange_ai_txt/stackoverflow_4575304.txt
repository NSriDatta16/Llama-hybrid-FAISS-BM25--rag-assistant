[site]: stackoverflow
[post_id]: 4575304
[parent_id]: 4574978
[tags]: 
I've answered a similar question here , with some modifications it could do what you want: Javascript: $(function() { $('.drag').draggable({ revert: "invalid", scope: "items" }); $('#droppable').droppable({ scope: "items", // if you want to disable the dragging after drop un-comment this /* drop: function(e, ui) { $(ui.draggable).draggable({"disabled":true}); } */ }); $('#droppable2').droppable(); $(':button').click(function() { var $box = $(' Drag me '); $('#cont').append($box); $box.draggable({ revert: "invalid", scope: "items" }); }); }); HTML: Add box Drop here Out of scope! Drag me Drag me Example Link EDIT: Okay, here's an update: Javascript: $(function() { var dragOptions = { revert: "invalid", scope: "items", helper: "clone" } $('.drag').draggable(dragOptions); $('.droppable').droppable({ scope: "items", drop: function(e, ui) { var $drop = $(this); $(ui.draggable).draggable({ "disabled": true }).appendTo($drop); } }); $('#droppable2').droppable(); $(':button').click(function() { var $box = $(' Drag me '); $('#cont').append($box); $box.draggable(dragOptions); }); }); HTML: Add box Drop here: Drop here: Out of scope! Drag me Drag me Example Link 2
