[site]: stackoverflow
[post_id]: 917634
[parent_id]: 917219
[tags]: 
I'd suggest writing a tokenizer and parser; this will give you more flexibility. The tokenizer basically does a simple text-wise breakdown of the sourcecode and puts it into more usable data structure; the parser figures out what to do with it, often leveraging recursion. Terms to google: tokenizer, parser, compiler design, grammars Math expression evaluator: http://www.codeproject.com/KB/vb/math_expression_evaluator.aspx (you might be able to take an example like this and hack it apart into what you want) More info about parsing: http://www.codeproject.com/KB/recipes/TinyPG.aspx You won't have to go nearly as far as those articles go, but, you're going to want to study a bit on this one first.
