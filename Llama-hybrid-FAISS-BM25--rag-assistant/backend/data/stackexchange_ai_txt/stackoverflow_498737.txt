[site]: stackoverflow
[post_id]: 498737
[parent_id]: 473874
[tags]: 
These aren't all necessarily directly linked, but you probably ought to check each one out in case it is related. I suspect that this is caching related: once you've done your first query you then apply select and then it goes fast. In the middle you have to bounce the server to get rid of the caches if you want to performance test it correctly. If you do this test and it suddenly performs better, then try pinning the table into the cache. See below around clob storage inline, since that will probably be related. I had issues around clob performance in Oracle 10g a year or so back. We got around most of them once we got our awesome dba to help. It took about 2 months to get the performance up to an adequate speed. Which version of Oracle are you using? In Oracle 10g (early versions) there were massive issues with clob performance. In fact it was actually faster in some cases to just use two tables, and a varchar column (concatenate the varchars together and you have your clob). We upgraded to a later version, and it was much better Also where is your data being stored? There's also an option to store the clob in the table itself. Depending how big your data is you might find this helps performance. If you've got your data stored on a SAN then it's worth also looking at the cache size on the SAN and also the block sizes. Oracle + SAN can be a bit funny when the caching sizes are incorrect. Another workaround: If you're finding persistence is slow or even access is slow and you're not CPU bound, zip the data and store it in a blob. We saw a big performance benefit here too. If you're seeing performance issues (memory related?) in whatever is processing the clobs, we found that we would recreate the objects as new strings. The drivers were pre-creating 32K sized Strings even if the data was smaller. I did wonder whether the system tables might be fragmented? Are there lots of tables/schemas? What about synonyms? Also, when you store clobs, don't they get stored into one massive file in Oracle? If I remember correctly you have to be careful about fragmentation; the storage doesn't get released for reuse. Perhaps you could put a .NET web service in front of your db? That might be one option if you can't solve the performance issues.
