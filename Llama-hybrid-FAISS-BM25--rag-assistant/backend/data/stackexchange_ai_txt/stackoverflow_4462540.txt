[site]: stackoverflow
[post_id]: 4462540
[parent_id]: 4460040
[tags]: 
Within the text element there are nearly 100 sections, and as with all editorial teams, they change their mind on the preferred order on an occasional, but regular, basis. Maybe twice per year. . . . . . . But it seems very slow and cumbersome and I feel that I should be using keys to speed it up Sorting the document each time when it is presented for editing is the wrong approach . The best solution is to sort it and save it sorted only 2 times per year when the 'stdhdg.xml' document is changed. If the change in 'stdhdg.xml' cannot be organizationally synched well, you can have a repeating (say daily) job that runs the following transformation: when the main content XML document is (note the top element now has a hash attribute) is: 12345 London GB United Kingdom some blurb some blurb LGW LHR some blurb some blurb some blurb some blurb and the stdhdg.xml file is : 10 30 20 40 60 50 then the transformation above produces a newly-sorted main content that has the latest hash : 12345 London GB United Kingdom some blurb some blurb some blurb LGW LHR some blurb some blurb some blurb Do Note : The top element of the main content document has now a hash attribute, whose value is the concatenation of the sort keys residing in the stdhdg.xml document. The format of the stdhdg.xml file is also slightly changed so that the concatenation of the keys ca be easily produced as the string value of the document. The daily-run transformation is the identity transformation if the hash saved in the main content is the same as the sort-keys-concatenation in stdhdg.xml. If the old hash and does not match the sort-keys in stdhdg.xml, then it is updated to the new hash and the sections are re-sorted.
