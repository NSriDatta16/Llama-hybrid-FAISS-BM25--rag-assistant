[site]: crossvalidated
[post_id]: 594677
[parent_id]: 
[tags]: 
Reporting standard error on gain using Bayesian A/B testing

I am building a bayesian A/B testing code in python to compare conversion rates between two samples which I will call $A$ and $B$ . My aim is to produce a mean conversion rate, in percentage, for $A$ and a mean conversion rate, in percentage, for $B$ then report a gain of $A$ over $B$ with an error on the gain. The code is pretty straightforward and this is not a coding question but I will poste it anyway: from scipy.stats import beta # class for bayesian AB testing class BayesABTest: # get beta distribution function from total players and those who came back def getBetaDistribution(self, total, cameBack): a = cameBack + 1 b = total- cameBack + 1 return beta(a, b) # calculate gain between two samples for active and passive players def getGain(self, totalA, cameBackA, totalB, cameBackB): beta1 = self.getBetaDistribution(totalA, cameBackA) beta2 = self.getBetaDistribution(totalB, cameBackB) gain = (beta1.mean() - beta2.mean())*100 return gain, beta1, beta2 Now the gain in percentage is pretty simple to compute as the difference between the means of the two beta distributions. The error, however, is a bit less obvious to me. In a usual setting, I would compute the two standard errors on the means of each sample, add them, then take the square root like so: $$ SE_{diff} = \sqrt{\frac{s_1^2}{n_1} + \frac{s_2^2}{n_2}} $$ But since I transformed my means into distributions, I am not sure how this works. So my question are: How can I compute the standard error on a beta distribution? Can I simply report the error as the square root of the sum of the two standard deviations of the beta distributions squared like so : $error = \sqrt{s_1^2 + s_2^2}$ Thanks for the help!
