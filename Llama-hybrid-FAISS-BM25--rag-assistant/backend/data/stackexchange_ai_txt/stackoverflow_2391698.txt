[site]: stackoverflow
[post_id]: 2391698
[parent_id]: 2390470
[tags]: 
It sounds like you're not having issues with the table view as much as the construction of the hierarchy around the table. Instructions for creating the hierarchy would be as follows. I think you've diverged at around step 9: Start with new copy of the default iPhone "View" template Throw away the view controller class. Open the MainWindow.xib and delete the view controller there too. Find the controllers in the Interface Builder library palette (they're the yellow spheres at the top of the "Cocoa Touch" library in "Objects" mode whose icons contain other objects). Drag the tab view controller into your MainWindow.xib file at the top level. Expand the tab view (triangle next to its name in the list view of the xib) Drag a navigation controller into your expanded tab view (if this works, it should appear as one of the tabs along with the two view controllers that are there by default) Expand the navigation controller Drag a view controller (not a table view controller) into the navigation controller. It should appear as the content of the navigation controller. Select the view controller (single click). Press Command-4 (or select "Identity Inspector" from the "Tools" menu). In the "Class Identity" popup menu, select EasyCustomTableController (this assumes that the current xib file is part of an Xcode project and this Xcode project already has EasyCustomTableController added to it). Add a UIImageView to the view controller's view (this is your background image) Add a UITableView to the view controller's view (this is your table). Add this view so it is after (and hence on top of) your image view. There should be a tableView outlet on the view controller. Connect this to the table view. Connect the app delegate's viewController to the tab bar controller (back in Xcode you can optionally change the type of this property to UITabViewController) Should work. The trick is that UITableViewController can't be used if you want the view to contain more than just a table. For this reason, you must use UIViewController and recreate the functionality that the UITableViewController adds. See here for how this is done: http://cocoawithlove.com/2009/03/recreating-uitableviewcontroller-to.html
