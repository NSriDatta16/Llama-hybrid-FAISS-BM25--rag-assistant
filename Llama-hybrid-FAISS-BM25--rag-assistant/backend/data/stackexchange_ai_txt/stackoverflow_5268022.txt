[site]: stackoverflow
[post_id]: 5268022
[parent_id]: 5267919
[tags]: 
Zend provides the Zend_Auth class for performing user authentication. Here's how I wrote my controller: public function indexAction () { $this->view->vars['form'] = new Form_User_Login(); if ($this->request->isPost()) { $login = $this->request->getPost('userLogin',''); $password = $this->request->getPost('userPassword',''); if ($this->view->vars['form']->isValid(array('userLogin' => $login,'userPassword' => $password))) { $authAdapter = new Zend_Auth_Adapter_DbTable( Zend_Db_Table::getDefaultAdapter(), 'user', 'login', 'password' ); $authAdapter->setIdentity($login)->setCredential(md5($password)); $auth = Zend_Auth::getInstance(); $result = $auth->authenticate($authAdapter); if ($result->isValid()) { $auth->getStorage()->write($authAdapter->getResultRowObject(null,'password')); $this->flash->addMessage(array('success' => $this->view->translate('Hello, %1$s',$auth->getIdentity()->login))); $userModel = new Model_User(); $userModel->update(array('last_access' => new Zend_Db_Expr('CURRENT_TIMESTAMP')),"login = '$login'"); $this->_redirect(); } else { switch ($result->getCode()) { case Zend_Auth_Result::FAILURE_IDENTITY_NOT_FOUND: $this->view->vars['messages'][] = array('error' => $this->view->translate('User name not found.')); break; case Zend_Auth_Result::FAILURE_CREDENTIAL_INVALID: $this->view->vars['messages'][] = array('error' => $this->view->translate('Invalid password.')); break; default: $this->view->vars['messages'][] = array('error' => $this->view->translate('Failed to log in.')); break; } } } } }
