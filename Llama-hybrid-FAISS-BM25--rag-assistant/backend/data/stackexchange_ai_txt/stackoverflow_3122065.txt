[site]: stackoverflow
[post_id]: 3122065
[parent_id]: 3121393
[tags]: 
I think I have it figured out. Robert P was right, but he only got half of the answer: Readonly and readonly do different things though they should do the same thing, the fact that they don't is a bug. I'll try to explain what is going on. Readonly has two implementations for scalars: one ( Readonly::XS ) that is based on the SvREADONLY flag and one (Readonly::Scalar) based on ties that emulates the SvREADONLY flag. readonly also has two implementations, one in Perl (which does self assignment and checks if it throws an exception or not), and one in XS (again based on the SvREADONLY flag). There are 4 possible combinations, and unfortunately the one that is most common (pure perl Readonly and XS readonly) is the only one that doesn't work as advertised. Here's the crux: sub Readonly::Readonly actually doesn't use Readonly::XS at all, only sub Readonly::Scalar does. This is probably a bug . readonly correctly reports that the variable is not a readonly variable: its readonlyness is faked by a tie. It's Readonly that's at fault here IMO, it should do the right thing when it can and document when it can't. Right now it's doing neither of those.
