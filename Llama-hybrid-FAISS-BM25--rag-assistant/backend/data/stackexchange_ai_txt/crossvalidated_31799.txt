[site]: crossvalidated
[post_id]: 31799
[parent_id]: 31764
[tags]: 
One approach is to identify strata from the bottom up (or top down), "peeling away" the data for each stratum as one proceeds. Given the nature of geological data--strata are almost never perfectly horizontal, they vary in thickness, and so on--it seems best to use a robust non-parametric method to fit the elevations locally. Lowess will do this pretty well. As an example, I generated 20 layers of 100 points at uniformly random distances among the layers and a uniform underlying slope of -1:100, applying some normally distributed variation to their elevations. I then eliminated 60 of those points at random (an average of three per layer). (The close spacings in the 5-6 range of elevations will confound any standard clustering procedure I know of: this is intended to be a challenging dataset.) After using Lowess to smooth each layer, any high outliers were removed and put back into the remaining dataset for future processing. This is not ideal: instead, this step should be provisional. After processing the next layer, such outliers ought to be re-examined to assess which of the two layers it more properly belongs to: the current one, the next one, or (possibly) an even higher one. (Outliers were identified using a simple robust technique that sets an upper "fence" based on the median and an upper percentile of the Lowess residuals, akin to how an upper fence is established for a boxplot.) Colors reflect the classifications of the data. Lines show the Lowess smooth of each set of classified points. The number of groups ("clusters") was automatically determined by the algorithm, which stops when it runs out of points. A close look shows a few misclassifications due to this non-ideal approach. Even so, the contacts themselves (shown by the Lowess lines) are robust to these mis-classifications; one could post-process the results to correct almost all the errors. The algorithm appears to have done a remarkably good job with closely adjacent contacts (look around heights 5-6, for example). In particular, the smooths never cross (even though there is nothing to prevent this), which is essential for geological meaningfulness. Because Lowess works in multiple dimensions, the same algorithm would work for spatially extensive data (instead of data along a cross-section as shown here). The use of Lowess is not essential: any strong, robust, local smoother should work well. Indeed, I would have preferred iteratively reweighted least squares, but a good implementation was not ready at hand for making this illustration.
