[site]: stackoverflow
[post_id]: 2388493
[parent_id]: 2347935
[tags]: 
Each 32bit process has a 2GB address space (unless you ask the user to add /3GB in boot options), so if you can accept some performance drop-off, you can start a new process to get 2GB more in address space - well, a little less than that. The new process would be still fragmented with all the CLR dlls plus all the Win32 DLLs they use, so you can get rid of all address space fragmentation caused by CLR dlls by writing the new process in a native language e.g. C++. You can even move some of your calculation to the new process so you get more address space in your main app and less chatty with your main process. You can communicate between your processes using any of the interprocess communication methods . You can find many IPC samples in the All-In-One Code Framework .
