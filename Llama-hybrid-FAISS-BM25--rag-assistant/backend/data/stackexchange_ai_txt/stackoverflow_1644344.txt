[site]: stackoverflow
[post_id]: 1644344
[parent_id]: 1644146
[tags]: 
Your situation is a perfect case for a domain specific language. A DSL would allow you to specify an allowable grammar for your "formula language" and then provide feedback to the user as well as calculate the result. Antlr is a very good tool for this. It is a parser/lexar generator. Basically you specify the grammar in Antlr's own description DSL, and it generates robust lexers and parsers for you in your language of choice. For example, if your language allows simple calculations this is how it would be specified in antlr's language (from antlr's wiki): grammar SimpleCalc; options { language=CSharp2; } tokens { PLUS = '+' ; MINUS = '-' ; MULT = '*' ; DIV = '/' ; } @members { public static void Main(string[] args) { SimpleCalcLexer lex = new SimpleCalcLexer(new ANTLRFileStream(args[0])); CommonTokenStream tokens = new CommonTokenStream(lex); SimpleCalcParser parser = new SimpleCalcParser(tokens); try { parser.expr(); } catch (RecognitionException e) { Console.Error.WriteLine(e.StackTrace); } } } /*------------------------------------------------------------------ * PARSER RULES *------------------------------------------------------------------*/ expr : term ( ( PLUS | MINUS ) term )* ; term : factor ( ( MULT | DIV ) factor )* ; factor : NUMBER ; /*------------------------------------------------------------------ * LEXER RULES *------------------------------------------------------------------*/ NUMBER : (DIGIT)+ ; WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; } ; fragment DIGIT : '0'..'9' ; You can find out more about DSLs in general here .
