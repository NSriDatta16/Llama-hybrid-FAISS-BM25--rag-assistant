[site]: stackoverflow
[post_id]: 4383029
[parent_id]: 4383005
[tags]: 
I would say this is a bug in Resharper. The HashSet type is constructed to handle null values. This is evident by examining the code in reflector. In particular the InternalGetHashCode method which has an explicit check for null and provides a default hash code of 0. The one case where this could potentially turn up a problem is for custom IEqualityComparer instances passed to the HashSet which do not account for null values. I'd say this is fairly rare though as null checks are part of the standard equality pattern for reference types in .Net. Note: To be clear, I'm certainly not encouraging people to add null to their collection. I would in fact encourage the opposite. Just pointing out that for whatever reason HashSet seems to explicitly allow for this scenario.
