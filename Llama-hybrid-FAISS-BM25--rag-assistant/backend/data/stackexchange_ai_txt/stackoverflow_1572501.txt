[site]: stackoverflow
[post_id]: 1572501
[parent_id]: 1568890
[tags]: 
I have worked with drag-and-drop with several of the List-based components in Flex, but have not experienced any issues with CPU capacity overload or application freezes. I would suggest running a profile in Flex Builder to see what's using up all that CPU and/or memory, and working to resolve that. As for drag-and-drop, I've always leaned towards creating my own drag-and-drop functionality, so that I can do what I want with the data, and create my own proxy image. Here's how I start the drag in a Tree component: override protected function mouseDownHandler(event:MouseEvent):void { var eventPoint:Point = new Point(event.localX, event.localY); var eventPointGlobal:Point = super.localToGlobal(eventPoint); mouseDownPoint = super.globalToLocal(eventPointGlobal); super.mouseDownHandler(event); } // MouseMove Handler for manually initiating Drag functionality override protected function mouseMoveHandler(event:MouseEvent):void { super.mouseMoveHandler(event); if (!event.buttonDown || DragManager.isDragging) return; /* Create a point relative to this component from the mouse cursor location. */ var eventPoint:Point = new Point(event.stageX, event.stageY); var dragPoint:Point = super.globalToLocal(eventPoint); if (!mouseDownPoint) return; if (Math.abs(mouseDownPoint.x - dragPoint.x) 1) { labelText = numItems.toString() + " items"; } else { var firstItem:Object = items[0]; labelText = firstItem[labelField]; } textField.text = labelText; } } }
