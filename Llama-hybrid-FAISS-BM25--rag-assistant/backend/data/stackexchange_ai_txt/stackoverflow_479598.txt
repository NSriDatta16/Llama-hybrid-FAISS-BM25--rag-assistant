[site]: stackoverflow
[post_id]: 479598
[parent_id]: 479558
[tags]: 
The Equinox launcher uses JNI to start the Java VM in the same process as the launcher. Using JNI also allows us to use SWT widgets in the splash screen. Actually, you can still have a script, since the launcher executable, eclipse.exe, has been broken into 2 pieces since 3.3M5: the executable, and a shared library (eg: eclipse_1006.dll). The executable lives in the root of the eclipse install. The shared library is in a platform specific fragment, org.eclise.equinox.launcher.[config] , in the plugins directory. Moving the majority of the launcher code into a shared library that lives in a fragment means that that portion of the launch code can now be updated from an update site. Also, when starting from java, the shared library can be loaded via JNI in order to display the splash screen. As explained here, you can start Eclipse 3.3 without the native launcher , java -jar plugins/org.eclipse.equinox.launcher_1.0.0.v20070319.jar Note that the name of the jar-file is now version dependent causing naive scripts, that invoke the jar using the exact filename, to break once the jar-file gets updated. Instead you may want to look for a file matching org.eclipse.equinox_*.jar . Thankfully the Eclipse-wiki contains appropriate scripting templates that are useful in this case. If you want to avoid modifying existing scripts, you can also search for the Equinox Launcher plug-in, copy it into the Eclipse main directory and rename the copy into startup.jar.
