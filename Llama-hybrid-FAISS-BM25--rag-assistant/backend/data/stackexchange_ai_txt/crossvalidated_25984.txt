[site]: crossvalidated
[post_id]: 25984
[parent_id]: 25903
[tags]: 
OLD (PRE-EDIT) ANSWER: If you think you'll learn statistics by programming everything yourself, I'd say you're in for a long slog full of debugging and not statistical learning. Plus, you'll need a language like R to check your answers anyhow. I think user765195 has a point in terms of R being harder to debug than many other languages, which is important, but "worst"? I don't think so. EDIT: So if I can summarize your EDIT: given that you already do statistics, and given that you really want to use Ruby to do it instead of an actual statistical program (R, gretl, SAS, etc), how can you make your life easier. Is that right? I can't give a Ruby answer, but I think the general question should also be addressed. Especially since you're pointing back to other instantiations of the same question: "I'd like to use Python/perl/java/Clojure/C/whatever to do statistics". I think the answer will always be: "why use a generalized, primitive (statistics-wise) tool to do a job that a specialized tool does much better?" And I can see six basic replies: I simply don't want to learn another language, and since I'm well-versed in Python/Ruby/Excel/Java, I insist on using that language. The statistics I want to do have to fit into a larger project (such as a web-based tool) and the tools used by this project don't play nice with outside tools, so I have to use Python/Ruby/Java. (Or it might be a matter of deploying an application and it's not possible to try to deploy arbitrary executables.) I would use a specialized tool, but the ones I have access to (say R, which is free) are too slow or cannot handle the huge datasets/real-time requirements for my project. My employer/client insists I use general-purpose language Python/Ruby/Excel/Java. I have no choice, and am looking for the least painful way to follow this requirement. By "statistics" I mean very simple stuff like finding means/medians, variances, etc. Why pull in a specialized package that can calculate mixed-effect models via MCMC when all I want to do is calculate what points are outside of 1-sigma away from the mean? I am doing something very specialize, and for which even statistical packages like R have no packages/libraries/functions. It's not only cutting-edge, but requires super-high performance, and I need to do it from scratch. (Or perhaps use libraries I've developed already in language X.) In my opinion, reply 1 isn't a good one, reply 2 might be legitimate, but may have workarounds you're not aware of, reply 3 is more likely to be legitimate but also may have workarounds, and for the other three replies, hopefully you'll get a better answer than mine.
