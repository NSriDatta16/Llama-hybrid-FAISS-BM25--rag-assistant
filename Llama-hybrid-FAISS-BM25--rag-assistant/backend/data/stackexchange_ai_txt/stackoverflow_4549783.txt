[site]: stackoverflow
[post_id]: 4549783
[parent_id]: 1403921
[tags]: 
I disagree with Jesper's comment : "In my opinion, this is a really ugly and bad way to return more than one result". In .NET there is a interesting construct that utilize the output parameters: bool IDictionary.TryGet(key, out value); I find it very usefull and elegant. And it is the most convenient way to aks if an item is in collection and return it at the same time. With it you may write: object obj; if (myList.TryGet(theKey, out obj)) { ... work with the obj; } I constantly scold my developers if I see old-style code like: if (myList.Contains(theKey)) { obj = myList.Get(theKey); } You see, it cuts the performance in half. In Java there is no way to differentiate null value of an existing item from non-existance of an item in a Map in one call. Sometimes this is necessary.
