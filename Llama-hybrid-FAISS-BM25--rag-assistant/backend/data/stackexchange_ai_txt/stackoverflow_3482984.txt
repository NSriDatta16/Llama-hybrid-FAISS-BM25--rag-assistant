[site]: stackoverflow
[post_id]: 3482984
[parent_id]: 3482953
[tags]: 
A List is an abstraction for a homogeneous list of elements whose type is E . There are some restrictions (e.g. no primitives), but conceptually the type E can be defined to be whatever you want. Suppose there's an abstraction of Pair . Then a List > is still a list of some E , but now that E is a Pair . So it's still a "one-column" list, but each element in the list is a "pair", so it's sort of a "two-column" list. Note that you don't always need a generic Pair . Any type E that properly encapsulates all the information can be used in a List . And by the way, you can have a List > too. See also Wikipedia/Encapsulation Related questions What is the equivalent of the C++ Pair in Java? List of Lists of Lists Returning values analogy Often people ask "How can I return two values in Java?". The answer is analogous. You return one value, a new type which encapsulates both information. So instead of: // attempt to return two values // DOES NOT COMPILE return "James Bond"; return "007"; You do: return new SecretAgent("James Bond", "007"); Related questions Using a java method to return multiple values?
