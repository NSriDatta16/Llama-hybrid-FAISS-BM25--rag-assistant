[site]: stackoverflow
[post_id]: 4815426
[parent_id]: 
[tags]: 
Selecting from database with offsets

db->get_where('ao', array('banned' => '0'), 28, 0); break; case 2: $query = $this->db->get_where('ao', array('banned' => '0'), 56, 29); break; case 3: $query = $this->db->get_where('ao', array('banned' => '0'), 84, 57); break; case 4: $query = $this->db->get_where('ao', array('banned' => '0'), 112, 85); break; case 5: $query = $this->db->get_where('ao', array('banned' => '0'), 140, 113); break; case 6: $query = $this->db->get_where('ao', array('banned' => '0'), 168, 141); break; case 7: $query = $this->db->get_where('ao', array('banned' => '0'), 196, 169); break; case 8: $query = $this->db->get_where('ao', array('banned' => '0'), 224, 197); break; case 9: $query = $this->db->get_where('ao', array('banned' => '0'), 252, 225); break; case 10: $query = $this->db->get_where('ao', array('banned' => '0'), 280, 253); break; case 11: $query = $this->db->get_where('ao', array('banned' => '0'), 308, 281); break; case 12: $query = $this->db->get_where('ao', array('banned' => '0'), 336, 309); break; case 13: $query = $this->db->get_where('ao', array('banned' => '0'), 364, 337); break; case 14: $query = $this->db->get_where('ao', array('banned' => '0'), 392, 365); break; case 15: $query = $this->db->get_where('ao', array('banned' => '0'), 420, 393); break; default: $query = $this->db->get_where('ao', array('banned' => '0'), 28, 0); } ?> This is what i'm currently doing.. Is there a better way to do this? Each case is a page and i'm calling that from page/$num How would I get the 28 NEWEST entries from the same thing i'm trying to achieve above? Update from Robert Pitt $page = 2; //page 2 $limit = 30; //per page $offset = ($page - 1 * $offset); //30 Then you query your database like so: SELECT * FROM table LIMIT $offset,$limit
