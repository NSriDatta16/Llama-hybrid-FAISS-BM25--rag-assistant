[site]: stackoverflow
[post_id]: 2241320
[parent_id]: 2241166
[tags]: 
The most common drawback of object oriented programming in the context of high performance graphics (games etc.) is the memory bottleneck. OOP often (but not necessarily) leads to writing functions that operate on single elements and leveraging the standard library to generalize these to arrays. It might be preferable to operate on arrays in the first place, for example cull against all six frustum planes instead of calling the single plane culling routine six times. Check out the following resources for more details: Pitfalls of OOP The Latency Elephant Data-Oriented Design (Or Why You Might Be Shooting Yourself in The Foot With OOP) Memory Optimization C++ Programming is Bullshit Note that using C++ does not imply strict object oriented programming, you can use it for many paradigms. So if you code your engine in C++, you can still leverage all existing OOP style libraries such as Qt, while using any paradigm you like for the core. Although all of this is also possible in C, C++ might be a bit more comfortable.
