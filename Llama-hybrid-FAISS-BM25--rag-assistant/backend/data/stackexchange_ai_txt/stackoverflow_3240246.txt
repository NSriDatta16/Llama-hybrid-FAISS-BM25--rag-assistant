[site]: stackoverflow
[post_id]: 3240246
[parent_id]: 
[tags]: 
Signed session cookies. A good idea?

In an effort to increase performance, I was thinking of trying to eliminate a plain 'session cookie', but encrypt all the information in the cookie itself. A very simple example: userid= 12345 time=now() signature = hmac('SHA1',userid + ":" + time, secret); cookie = userid + ':' + time + ':' + signature; The time would be used for a maximum expirytime, so cookies won't live on forever. Now for the big question: is this a bad idea? Am I better off using AES256 instead? In my case the data is not confidential, but it must not be changed under any circumstances. EDIT After some good critique and comments, I'd like to add this: The 'secret' would be unique per-user and unpredictable (random string + user id ?) The cookie will expire automatically (this is done based on the time value + a certain amount of seconds). If a user changes their password, (or perhaps even logs out?) the secret should change. A last note: I'm trying come up with solutions to decrease database load. This is only one of the solutions I'm investigating, but it's kind of my favourite. The main reason is that I don't have to look into other storage mechanism better suited for this kind of data (memcache, nosql) and it makes the web application a bit more 'stateless'. 10 years later edit JWT is now a thing.
