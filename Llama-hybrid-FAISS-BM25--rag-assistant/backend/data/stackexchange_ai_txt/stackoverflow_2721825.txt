[site]: stackoverflow
[post_id]: 2721825
[parent_id]: 2721648
[tags]: 
Though your question has already been answered reasonably well, I think it's worth mentioning another point about your code. Right now, you have the following declarations: class frag { public: frag myfunc (frag oper1, frag oper2); frag myfunc2 (frag oper1, frag oper2); ... and you have the following functions: frag myfunc (frag oper1, frag oper2) { return oper1 + -oper2; } frag myfunc2 (frag oper1, frag oper2) { return oper1 + oper2; } I'd guess that you intended these two functions to implement the member functions you declared in frag -- but they don't. Instead, you have two member functions that are declared by never defined, and these two are global functions that happen to have similar names. For them to be the member functions you declared, you need to change the declaration to something like: frag frag::myfunc(frag oper1, frag oper2) { return oper1 + -oper2; } frag frag::myfunc2(frag oper1, frag oper2) { return oper1 + oper2; } On the other hand, these don't really make any sense that way either -- in particular, as member functions, they'll normally be invoked as something like: a.myfunc(b,c); They're both really written like global functions though -- as member functions, they'd normally take only one parameter, and use this as the first parameter: frag frag::myfunc1(frag oper) { return *this + -oper; } frag frag::myfunc2(frag oper) { return *this + oper; } Of course, this may just be an accidental side effect from trying to reduce the original code to a minimum necessary for posting. If so, please feel free to disregard this whole "answer"....
