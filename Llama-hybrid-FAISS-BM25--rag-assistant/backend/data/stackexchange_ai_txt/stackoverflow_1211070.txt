[site]: stackoverflow
[post_id]: 1211070
[parent_id]: 1206490
[tags]: 
Solved it. Apart from the fact that I need to learn more about object creation, instances and destruction in Perl... Only creating the SOAP::Lite object once and keeping it around as long as I need to make calls to that webservice, does the trick. Before I created a SOAP::Lite object for every call. Everybody thanks for thinking with me. my $client; sub MakeTheCall { if (! defined $client) { # Create the soap client my $client = SOAP::Lite->new; # Get raw SOAP xml output $client->outputxml(1); # Set connection parameters $client->uri($namespace); # set the url in the proxy member. The keep_alive parameter is needed if user authentication # is used, it is passed on to the user agent class to set up an authenticated HTTP session $client->proxy($url, keep_alive => 1); # Set the user credentials $client->transport->credentials("$host:$port", '' , $user , $password); } # rest of the code here }
