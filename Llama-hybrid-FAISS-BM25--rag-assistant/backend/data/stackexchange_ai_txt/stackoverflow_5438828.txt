[site]: stackoverflow
[post_id]: 5438828
[parent_id]: 5437414
[tags]: 
The global command should be a CompositeCommand or similar approach ( CompositeCommand is from Prism). This will allow multiple children to register with the command. public static CompositeCommand SaveCommand = new CompositeCommand(); The command can then be accessed across the ViewModels or where applicable like so... SaveCommand = new DelegateCommand (Save, CanExecuteSave); GlobalCommands.SaveCommand.RegisterCommand(SaveCommand); You can then leverage the IActiveAware interface to define which Window is the active Window and act on the command accordingly. There is also an MSDN posting on creating globally available commands . Don't forget to unregister the command to avoid a memory leak.
