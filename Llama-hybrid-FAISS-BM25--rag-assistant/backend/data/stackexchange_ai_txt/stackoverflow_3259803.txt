[site]: stackoverflow
[post_id]: 3259803
[parent_id]: 3259734
[tags]: 
Should the file be "human-readable"? If not, use dump , dput , or save . If so, convert your list into a data.frame. Edit: You can convert your list into a matrix if each list element is equal length by doing matrix(unlist(list.name), nrow=length(list.name[[1]])) or something like that (or with plyr ). Why aren't you doing your SVM analysis in R (e.g. with kernlab)? Edit 2: Ok, I looked at your data, and it isn't easy to convert into a matrix because the list elements aren't equal length: > is.list(tdm) [1] TRUE > str(tdm) List of 7 $ i : int [1:1475] 15 29 151 152 173 205 215 216 227 228 ... $ j : int [1:1475] 1 1 1 1 1 1 1 1 1 1 ... $ v : Named num [1:1475] 3.32 4.32 2.32 2 2.32 ... ..- attr(*, "names")= chr [1:1475] "1.50" "16.00" "barrel," "barrel." ... $ nrow : int 985 $ ncol : int 20 $ dimnames :List of 2 ..$ Terms: chr [1:985] "(bpd)" "(bpd)." "(gcc)" "(it) appears to be nearing a crossroads with regard to\nderegulation, both as it pertains to investments and imports," ... ..$ Docs : chr [1:20] "127" "144" "191" "194" ... $ Weighting: chr [1:2] "term frequency - inverse document frequency" "tf-idf" - attr(*, "class")= chr [1:2] "TermDocumentMatrix" "simple_triplet_matrix" In order to convert this to a matrix, you will need to either take elements of this list (e.g. i, j) or else do some other manipulation. Edit 3: Just to conclude my commentary here: these objects are intended to be used with the inspect function (see the package vignette ). As discussed, in order to use a function like write.table , you will need to convert your list into a matrix, which requires some manipulation of that list such that you have several vectors of equal length. Looking at the structure of these tm objects: this will be very difficult to do, and I suggest you work with the helper functions that are included with that package.
