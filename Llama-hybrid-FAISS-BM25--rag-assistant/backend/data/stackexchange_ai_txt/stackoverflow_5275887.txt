[site]: stackoverflow
[post_id]: 5275887
[parent_id]: 
[tags]: 
Deploy files on a network share from a client machine using an installation package?

We have a large application that has been developed over 15 years and in installed in 200+ client locations. The application currently consists of an Access database and a bunch of executable and report files located on a network share. A Setup.EXE file is run on each client machine (dlls are installed on the client) and then the client machines run the executables directly from the network share. During our upgrade procedure the new executable and report files are copied to the network share and that way each client gets the update immediately. Our current installation program is very old and, among other things, it doesn't handle x64 so we are in the process of moving to a new deployment tool. At the same time we are migrating client Access databases to SQL Server. I am having difficulty finding a deployment tool to do what we require. Specifically we need the install/upgrade file to do the following: It must be able to be run from a client machine on a network and copy the new executable and report files to the network share. That share could be a Linux box or a dumb storage device. Accept a password before running the installation Allow the user to select the network share as the location to copy the executables It must NOT add anything to the client machine from where the package is run (Add/Remove Programs, registry, etc.) Connect to a SQL Server database and run a script The install/upgrade must be contained in a single, standalone .msi or .exe file. (no dependencies on dlls or frameworks other than those that come with Windows XP) The file must be able to be run in one simple step. It is the end user that runs the upgrade without our support and without involvement from IT. It looks like the closest thing to what I need is WiX but the problem there is that whenever the .msi file is run from a client, the client machine thinks that a program is being installed so it allows the client machine to uninstall the product, which is not acceptable. If the product were written today it would certainly be architected differently but it currently is what it is and we canâ€™t change that. Any help here would be greatly appreciated!
