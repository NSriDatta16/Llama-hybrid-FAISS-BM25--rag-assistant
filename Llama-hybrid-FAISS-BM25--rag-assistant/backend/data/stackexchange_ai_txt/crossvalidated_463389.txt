[site]: crossvalidated
[post_id]: 463389
[parent_id]: 
[tags]: 
Calculating significant drop from grouped time series data

I have a time series dataset of number of visits to a particular website of a group of users so it looks something like this (Note the number of time pts per user will vary depending on when they visit and when they first visited -- e.g. user 1 may have been visiting the site on sporadic days between 2018 and 2020 where as user2 may have been visiting everyday between 2019 and 2020) The data is stored in a Pandas (Python) data frame timestamp (%Y-%M-%D) | userid (hashed) | freq I want to find the list of users who started to show a significant drop off in usage in recent time (recent time as in over the course of the available data for that user). I've been thinking of calculating a Exponential Moving Average to obtain the general trend line per user and calculating a rolling variance and doing some sort of comparison like value is 3 standard deviations below the mean or something. Am I on the right track or is there a better way of isolating out the cluster of users with significant usage drop. Relevant code (if this helps): ewm_vals = df.groupby("userid_hashed", as_index=False).apply(lambda x: x["freq"].ewm(span=20).mean()) df['count_ema'] = ewm_vals.reset_index(level=0, drop=True)
