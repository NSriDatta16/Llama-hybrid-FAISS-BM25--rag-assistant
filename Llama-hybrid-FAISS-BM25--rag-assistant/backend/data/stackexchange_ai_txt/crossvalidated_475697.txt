[site]: crossvalidated
[post_id]: 475697
[parent_id]: 475316
[tags]: 
Take a look at this link: https://en.wikipedia.org/wiki/Learning_to_rank Learning to Rank (LTR) is a class of techniques that apply supervised machine learning (ML) to solve ranking problems. The training data for a LTR model consists of a list of items and a “ground truth” score for each of those items. There are many machine learning algorithms used for ranking tasks; for example, many of them are used by search engines to rank results of a query. For search engine ranking, this translates to a list of results for a query and a relevance rating for each of those results with respect to the query. The most famous ranking algorithms are RankNet, LambdaRank and LambdaMART : in all three techniques, ranking is transformed into a pairwise classification or regression problem. That means you look at pairs of items at a time, come up with the optimal ordering for that pair of items, and then use it to come up with the final ranking for all the results. Even XG-Boost can achieve ranking tasks but literature is full of algorithms to this purpose. In general, there are three kind of approaches, pointwise, pairwise and listwise . In your case , the most suitable approach seems to be the pairwise one. In this approach, the learning-to-rank problem is approximated by a classification problem, learning a binary classifier that can tell which document is better in a given pair of documents. The goal is to minimize the average number of inversions in ranking.
