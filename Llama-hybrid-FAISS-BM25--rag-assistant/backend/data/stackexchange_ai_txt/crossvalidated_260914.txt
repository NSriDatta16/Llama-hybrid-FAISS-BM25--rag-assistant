[site]: crossvalidated
[post_id]: 260914
[parent_id]: 
[tags]: 
Moving Probability of Occurrences based on Success Rate

I want to implement a microservice that calculates the Success Rate of each Participant. This success rate is then used for evaluating their Probability of Occurrence, for instance, a Participant with higher success rate is more likely to get a task, and vice versa for the one with lowest success rate. After a certain amount of time, the Probability of Occurrence will be re-evaluated based on Success Rates, and the process continues recursively. What I have found so far: For calculating Success Rates, I am thinking of using Exponentially Weighted Moving Average In my scenario, the smoothing factor should be high (around 0.80-0.93). What I am looking for: A reliable approach for the calculation of Success Rates with slower decay A reliable approach for evaluating the Probability of Occurrence and how tasks should be routed to each Participant. Please suggest me some good approaches that I can look into. Edit : For more clarity, I'll try to explain this with an example: Suppose there are 5 agents working in a call center. Now a call is received. The success rate of each agent for handling the calls and solving the query successfully is calculated. And then the call is routed to the best available choice in the pool. But, I don't want a single agent to handle all the calls. The calls should be routed to every agent, but the probability of routing the call to a certain agent should be based on his success rate calculated from the history. All agents will also be given a chance to improve their ranking iteratively after a certain amount of time.
