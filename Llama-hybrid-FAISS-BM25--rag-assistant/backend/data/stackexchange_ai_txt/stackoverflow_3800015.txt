[site]: stackoverflow
[post_id]: 3800015
[parent_id]: 3764976
[tags]: 
It depends: What degree of uniqueness do you want? Is there any non-volatile storage? How soon do you need an answer? If you have flash/NVRAM/disk, read your random seed, increment it, and write it back. The seed can be a simple counter if you don't require uniqueness between devices/reflashing/NVRAM battery running out. If you want uniqueness, then once you've gathered "enough" entropy, rewrite the seed. (Obviously you might want to do something else if you're using flash and your flash controller doesn't have wear-levelling, or implement your own wear-levelling.) If you don't, then collect entropy from all the sources you can, and only generate the UUID after you have enough entropy . Zvi Gutterman (2006) notes that OpenWRT's only source of entropy is network access, which is easily observed. Using ADC output seems sensible, with some simple guidelines: Use all the bits (or at least more bits than your entropy estimate), but increase your entropy estimate conservatively. ADC output has zero entropy when clipped (and possibly low entopy when nearly clipped). Measure the amount of noise on the input. I suspect you'll get at least one bit per sample. Then hash your bits and generate a version 4 UUID.
