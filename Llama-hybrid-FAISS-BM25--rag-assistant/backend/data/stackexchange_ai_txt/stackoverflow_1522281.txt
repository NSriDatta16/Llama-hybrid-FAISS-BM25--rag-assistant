[site]: stackoverflow
[post_id]: 1522281
[parent_id]: 1521959
[tags]: 
Here is how I write tests in BDD specification style: http://github.com/orfjackal/tdd-tetris-tutorial What is needed, is the ability to have multiple test fixtures in one class. Then it's possible to organize the tests so, that each fixture is the "Given/When" part and each test method is the "Then" part. JUnit does not support it, so I wrote a simple test runner for it: @RunWith(NestedJUnit4.class) public class WerewolfTest extends Assert { public class Given_the_moon_is_full { @Before public void When_you_walk_in_the_woods() { ... } @Test public void Then_you_can_hear_werewolves_howling() { ... } @Test public void Then_you_wish_you_had_a_silver_bullet() { ... } } public class Given_the_moon_is_not_full { @Before public void When_you_walk_in_the_woods() { ... } @Test public void Then_you_do_not_hear_any_werewolves() { ... } @Test public void Then_you_are_not_afraid() { ... } } }
