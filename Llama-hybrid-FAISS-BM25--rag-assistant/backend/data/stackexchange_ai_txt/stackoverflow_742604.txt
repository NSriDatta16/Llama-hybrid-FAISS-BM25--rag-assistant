[site]: stackoverflow
[post_id]: 742604
[parent_id]: 739983
[tags]: 
The Dragon Book has a small section about what you can't use Regular Expressions for: They can't detect repetition of a string, meaning you can't match constructs like 'wcw', where w is the same succesion of symbols You can only detect a fixed number of repetition or an unspecified number of repetitions, which is to say you can't use an already parsed token to determine the number of repetitions, something like: 'n s1 s2 ... sn' "Regular Expressions can't be used to describe balanced or nested constructs, [like] the set of strings of all balanced parentheses" For 1 and 2, there's a simple explanation, you can't capture a substring so you can match it later. If you would, than you would be using a parser. Just think of how you would be using regular expressions for those cases, and you will intuitively come to the conclusion you can't. :) For 3, it's the same as the problem in K&R for parsing string literals. You can't just say a string literal is between the first ' " ' and the second ' " ', but what happens when there's an escaped quote(\")? As for the relation to Russel's paradox, I think you're hunch is right, because the problem is regex's limited introspection capabilities. The book has references to the proofs. If you want to, I can look them up for you.
