[site]: stackoverflow
[post_id]: 3345173
[parent_id]: 2930669
[tags]: 
If sheer number of tables has become the database performance bottleneck, I'd have to agree with Rimian. You can define your own content types programmatically, and then develop your own content type model by leveraging the Node API. API documentation and an example of doing just that are here: http://api.drupal.org/api/drupal/developer--examples--node_example--node_example.module/6 The code flow is basically: Make Drupal recognize your content type Define the fields it needs to take using the Forms API Define how each of the Node API's functions should behave (view, load, save, etc.). This allows you control over how things are stored, yet still gives you (and all contributed modules) ability to leverage the hook system for Node API calls. Obvious drawbacks are missing out on all of the features/modules that directly depend on CCK for their functionality. But at >1k tables (which suggests a gargantuan number of content types and fields), it sounds like you're at that level of custom work already.
