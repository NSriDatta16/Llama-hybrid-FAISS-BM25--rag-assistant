[site]: stackoverflow
[post_id]: 2382648
[parent_id]: 
[tags]: 
Aggregating Facts in the CLIPS Expert System to Find a Maximum

I'm trying to clarify my understanding of semantics in the Clips expert system, so I'm trying to write some simple rules to aggregate a list of facts to find the fact with the highest slot value. The metaphor I'm using is that of a simple agent trying to decide whether it should eat or sleep. Facts describing the agent's states are expanded into potential actions, and then a rule tries to find the final action with the highest utility. This is my code: (clear) (deftemplate state (slot name) (slot level (type NUMBER)) ) (deftemplate action (slot name) (slot utility (type NUMBER)) (slot final (type INTEGER) (default 0)) ) (defrule eat-when-hungry "" (state (name hungry) (level ?level)) => (assert (action (name eat) (utility ?level))) ) (defrule sleep-when-sleepy "" (state (name sleepy) (level ?level)) => (assert (action (name sleep) (utility ?level))) ) (defrule find-final-action "" ?current_final (modify ?current_final (name ?other_action) (utility ? other_utility)) ) (assert (action (name none) (utility 0.0) (final 1))) (assert (state (name hungry) (level 0.5))) (assert (state (name sleepy) (level 0.1))) (run) (facts) After running this, I would expect the final action to be: (action (name eat) (utility 0.5) (final 1)) However, Clips evaluates it to: (action (name none) (utility 0.0) (final 1)) indicating the find-final-action rule never activates. Why is this? How would you iterate over a group of facts and find the one with the min/max slot value?
