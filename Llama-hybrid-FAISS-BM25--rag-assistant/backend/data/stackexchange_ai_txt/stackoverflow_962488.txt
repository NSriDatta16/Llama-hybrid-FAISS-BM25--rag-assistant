[site]: stackoverflow
[post_id]: 962488
[parent_id]: 
[tags]: 
Private beta test communication and infrastructure

So your commercial app is in the middle stages of development.. enough that it's usable but still needs refinement, extension, bugfixing. It's far from shippable, but it's stable and complete enough that your developers and in-house testers/users feel it's time for more feedback from real users. So you go to a wider but still closed beta-test, likely selected from existing users/customers who want to contribute and give feedback. A previous SO question showed that the best way to use beta testers is to make sure there's good two-way communication. We want to enable that communication! (source: ifac.cnr.it ) So the problem is to find the best ways to organize and allow communication between the developers and the beta-testers-at-large, and between the beta testers themselves? In the past, here we've always just set up a simple email mailing list, adding the secret testers to the list and letting them all post by emailing a centralized address, which is shared among everyone on the list. It's crude and old-school, but we've done it this way for fifteen years and it works all right, especially for our external group of about 10 testers. But there must be other methods, and perhaps it's best to explore them. What beta-test infrastructure have you set up for your own projects? The goals and requirements are vague, but some points which might be useful to consider Secrecy, you don't want non-invited users to find or eavesdrop Communication, let users talk about questions, documentation, share projects, help each other File sharing, how to distribute the beta software, as well as let users upload their own examples/problem/demo examples Bug reporting, should the communication system be tied to your bug tracker? Scaling, can it handle 5 testers, 20 testers, etc Privacy levels, can it handle a super-hardcore level of maybe only inhouse users who get a new build a day, a private beta of invited outside users, a public beta of anyone who wants to join.. Noise filtration, if discussion gets too offtopic or chatty it may diffuse the focus of the beta There are some obvious options for designing this kind of beta support infrastructure that could even be combined. A (private) mailing list A vBulletin like forum with private sections A bugtracker like FogBugz (giving testers licenses so they can explore and annotate) A wiki for collaborative documentation/discussion It's also useful to look at SourceForge, which is for Open Source apps where there is no need for secrecy, invitations, or classes, but there is a forum and bugtracker associated with each project. It may also be interesting to even consider upcoming platforms/paradigms like Google Wave. My question: what system have you used to organize your beta testers inhouse/external, and which one gives the best payoff in terms of enhancing the development process without being to hard or annoying to manage some overly complex system? I'm posting this as a community wiki because it's clear there will be no one single best answer.
