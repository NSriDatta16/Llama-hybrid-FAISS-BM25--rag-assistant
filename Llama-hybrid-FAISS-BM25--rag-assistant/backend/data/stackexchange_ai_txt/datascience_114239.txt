[site]: datascience
[post_id]: 114239
[parent_id]: 114234
[tags]: 
sklearn doesn't yet really provide a good way to remove rows in pipelines. SLEP001 proposes it . imblearn has some ways to make this work, but it's semantically specific to resampling data. If you don't need to modify the target (if you'll only use this transformer on X , and not in a pipeline with a supervised model), you can make this work. One more caveat: you probably won't want to throw away outliers in production, so consider how you'll rework this transformer after training. The point is that you should wait to remove the rows with OUTLIER entries until after you've joined the datetime features back on. (One alternative is to try to pass the information about which rows were removed to the datetime processor, but that would then require a custom alternative to FunctionUnion or ColumnTransformer .) Unfortunately, despite all of your custom transformers returning dataframes, the ways to recombine them ( ColumnTransformer and FeatureUnion ) won't preserve that yet (but see pandas-out PR and some linked issues/PRs). Until that's remedied, your best bet might be to modify your transformers to accept an __init__ parameter columns on which to operate, removing the FeatureSelector step. outlier_prune = Pipeline([ ('iqr_filter', IQRFilter(columns=num_cols)), ('remove_outliers', RemoveIQROutliers()), ]) # important: the output of this is a frame numerical_pipeline = Pipeline([ ('imputer', SimpleImputer(strategy='median')), ('std_scaler', StandardScaler()) ]) preproc_pipeline = ColumnTransformer([ ('numerical_pipeline', numerical_pipeline, num_cols), ('date_eng', ExtractDay(), date_cols), ]) full_pipeline = Pipeline([ ('outliers', outlier_prune), ('preproc', preproc_pipeline), ])
