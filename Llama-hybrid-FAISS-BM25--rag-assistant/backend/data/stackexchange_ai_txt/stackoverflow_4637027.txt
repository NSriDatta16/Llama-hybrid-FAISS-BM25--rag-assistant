[site]: stackoverflow
[post_id]: 4637027
[parent_id]: 4636377
[tags]: 
There are two retains in your code, serving different purposes. It is best to keep them separate. Retain #1 The first retain is implied by aSubview = [[NSView alloc] initWithFrame(0.0, 0.0, 100.0, 100.0); . Since aSubview is an instance variable and you seemingly want to keep aSubview around as a valid reference to the view after the initializer has run, it makes sense that the implied retain would be balanced by a release in dealloc . Retain #2 When added to the view hierarchy, your view instance will be retained by whatever view it is a subview of. That it is self in this case is irrelevant. As long as the view is a part of the view hierarchy, that retain will be in effect. When it is removed, it will be released. The two are orthogonal realizations of object lifespan. Keeping them separate makes your code less fragile. For example, if in some future version you were to occasionally remove the view from the view hierarchy with a desire to stick it back later -- the ultimate show/hide, if you will -- then retain #1 above will keep it around. Similarly, if you were to someday want to forget about the current view, but replace it with a different one, you could simply do: [aSubview release]; aSubview = [[.... alloc] ... init ... ]; And, in this case, retain #2 above will keep the old view alive in the view hierarchy.
