[site]: stackoverflow
[post_id]: 2147239
[parent_id]: 2146211
[tags]: 
As ACP said , the Editions feature would work well for this if you have the latest and greatest version of Oracle. In any case, the other linked answer shows the way to go - have all PL/SQL maintained in version control and keep all DDL changes as patches, which are also entered into version control. A few practicalities that might affect your case. If you have a relatively unified database structure and rapidly changing PL/SQL packages then an option is to have one schema holding the tables and the main branch of PL/SQL packages, and give every developer a separate schema for their branch of PL/SQL packages. All tables in the main schema are synonymed over to each developer's schema. So, you have multiple PL/SQL versions running against a single data store. As developer branches come together these are checked into the main branch and compiled into the main application schema. I find it easier to have all pl/sql packages in each development schema, not just the ones currently in development, but you can make it work either way. Clearly you still need at least 2 databases so your production environment is safe from all these shenanigans. Another option if this just doesn't work for you is to give each developer their own database in which to tinker. You said that size is a prohibitive factor here, but you could use the features in Data Pump to restrict the number of rows that are transferred from the main database to each developer database. For example: To only export 5% of the rows... $ expdp sample=5 To only export 5% of a specific table... $ expdp sample=mybigtable:5 In this way each developer can work with the same database structure but you don't have the same storage issues. Hope this helps.
