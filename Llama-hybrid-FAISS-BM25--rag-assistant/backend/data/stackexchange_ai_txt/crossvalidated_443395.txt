[site]: crossvalidated
[post_id]: 443395
[parent_id]: 443365
[tags]: 
It looks to me as though you are attempting to conduct the data augmentation manually - i.e. make changes to each image and then work from there. Without seeing results, I cannot say whether your method of doing so will yield high accuracy on your test set. However, from my own experience - a good way of conducting data augmentation is by using the ImageDataGenerator to create modified images and thus increase the size of the training set. Fran√ßois Chollet, the creator of Keras, explains how this can be implemented in the Deep Learning with Python text - I would recommend this as a source in understanding data augmentation further. If it helps, here is an example of how an image classifier was built with Keras to distinguish between images of cars and planes. Essentially, the analysis used 100 images for each class as training and validation (with 15 images across both classes used as the test set). Data augmentation is used for the purposes of increasing the sample size for the two classes, which subsequently resulted in strong predictive performance across the test set. You could check whether implementing data augmentation in this manner vs. your method ultimately yields better results.
