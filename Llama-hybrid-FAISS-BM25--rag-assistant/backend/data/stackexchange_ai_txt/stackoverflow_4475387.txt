[site]: stackoverflow
[post_id]: 4475387
[parent_id]: 4474926
[tags]: 
I often use something like that: var expected = new int[] { /* expected values */ }; var actual = Science.Mathematics.NumberTheoryFunctions.Divisors(n); Assert.IsTrue(expected.SequenceEquals(actual)); The drawback is that the assertion default error message isn't very descriptive: Expected: True But was: False Instead, you can use CollectionAssert.AreEquivalent , which gives a more detailed error message, but it's not ideal either... If you use a Linq query, the message can look like that: Expected: equivalent to But was: d__0`1[System.Int32]> (at least with NUnit 2.4.8, perhaps I should upgrade to a newer version...)
