[site]: datascience
[post_id]: 30740
[parent_id]: 
[tags]: 
Is it possible to use NEAT networks for solving video games?

Sorry to start such an unspecific question, but I am slightly lost in the big topic. My tutor proposed to chose neural networks for my final project, and we started by building a CNN for detecting hand written digits in python. My own idea was to build another neural network that can play video games of ascending difficulty, for example pong -> snake -> megaman [with tools for extracting in game data] or driving in GTA San Andreas similar to what Sentdex did. (For GTA, I would try something different to Sentdex as I would train the neural network by reinforcement learning in artificial conditions, starting with staying in a straight lane and then moving on to curves, traffic etc.) I made my own version of snake, which I could use for additional input and seems like a realistic minimal goal. But now, I am not so sure which approach I should take for this. I took a look at Sethblings MarI/O and read the NEAT paper. Then, I read the book "Machine Learning in Python" explaining a lot of concepts, and realised that neural networks and especially GA's are only a small part of possible algorithms. Also, I am not sure how much Sethblings network actually thinks and how much it just randomly adapted to the level. Do you think that the following idea is realistic?: "I build my own neural network in python based on NEAT, then test it on video games / tasks of increasing difficulty and try to tune parameters for performance" I could also imagine comparing NEAT to an implementation of Alexnet for the same tasks. The whole goal is not to create the perfect NEAT but instead just make one and see how far it takes me. I have a lot of time and motivation at hand, but I don't want to exceed the boundaries of a high school final and my own possibilities. Feedback welcome and thank you in advance
