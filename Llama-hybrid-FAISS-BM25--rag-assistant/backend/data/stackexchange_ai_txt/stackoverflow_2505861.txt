[site]: stackoverflow
[post_id]: 2505861
[parent_id]: 2500843
[tags]: 
Since there is already references on the repository pattern, you may elaborate on to Domain Driven Design (as mentioned by Szymon). If you do, you will want a Service Layer which in turn talks to the rich model underneath it. Here is the pseudo code On the Payment Controller: var paymentDetails = mapFromViewModel(rec) PaymentService.Pay(paymentDetails) On the Payment Service void Pay (PaymentDetails paymentDetails) { // leverage on rich model behavior here if (User.IsHaveEnoughMoney) { Cashier.Pay( ... ) } // more ... }
