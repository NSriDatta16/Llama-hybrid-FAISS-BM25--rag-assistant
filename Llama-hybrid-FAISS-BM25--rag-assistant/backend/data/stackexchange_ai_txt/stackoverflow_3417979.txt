[site]: stackoverflow
[post_id]: 3417979
[parent_id]: 
[tags]: 
Upcasting instance and Invoking a function on base class in C++

class PureVirtual { public: virtual PureVirtual& Foo () = 0; virtual ~PureVirtual () {} }; class SemiVirtual : public PureVirtual { public: PureVirtual& Foo () { printf ("foo worked."); return *this; } virtual ~SemiVirtual () {} }; class NonVirtual : public SemiVirtual { public: NonVirtual& Bar () { printf ("bar worked."); return *this; } }; TEST (Virtualism, Tests) { PureVirtual& pv = NonVirtual ().Bar().Foo (); pv.Foo crashes because pv instance has been disposed. How can i prevent this situation, and invoke the foo function without using pointers but by reference?
