[site]: stackoverflow
[post_id]: 4802936
[parent_id]: 
[tags]: 
F# Linq To SQL commiting changes doesn't do anything

I've got following class defined in F#, with mapping attributes for Linq to SQL: [ ] type public Expense(datetime : Nullable , value, category, comment) = let mutable id = 0 let mutable datetime = if datetime.HasValue then datetime.Value else DateTime.Now let mutable value = value let mutable category = category let mutable comment = comment [ ] member x.ExpenseID with get() = id and set v = id ] member x.DateTime with get() = datetime and set v = datetime ] member x.Value with get() = value and set v = value ] member x.Category with get() = category and set v = category ] member x.Comment with get() = comment and set v = comment Then I want to insert new object of that type, using following code (fragment): member private x.expenses = (new DataContext(connString)).GetTable () member x.Add (expense : Expense) = x.expenses.InsertOnSubmit(expense) x.expenses.Context.SubmitChanges() Calling SubmitChanges() doesn't do anything, nor any exception is thrown. So I tried to check, if there is something with it being an F# object, and I've declared other class in C#, with exactly same mappings. Then I was able to insert new record. Now I'm wondering, what's the difference? Did some Reflector investigation, the only difference are attributes [CompilerGenerated] on C# auto getters/setters, and [Serializable] and CompilationMapping(SourceConstructFlags.ObjectType)] on F# class...could it be one of those? Reflector disassemblies: http://pastebin.com/qTRfVcmm // EDIT By doing some debugging against .NET framework code, I've noticed that internal list of tracked objects of the DataContext instance is not consistent between InsertOnSubmit and SubmitChanges call. At the beginning of the SubmitChanges call, this list is empty. That led me to thinking, those two references are not targeting same DataContext instance, and VS debugger confirmed that. Still, no idea why.
