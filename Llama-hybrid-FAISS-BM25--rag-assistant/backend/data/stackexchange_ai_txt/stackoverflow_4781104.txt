[site]: stackoverflow
[post_id]: 4781104
[parent_id]: 4780910
[tags]: 
In a typical fashion, your key event is not intercepted by the correct Swing component. You have to understand that the first component below the cursor will receive the keyboard event. Were you to select a button with your keyboard, it would be this JButton that would receive the key event. To make sure you get all those events, you don't have to register on components, but rather by using a KeyboardFocusManager , which will receive key events wherever they occur. Your code then require the following elements KeyEventDispatcher myKeyEventDispatcher = new DefaultFocusManager(); KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(myKeyEventDispatcher); myKeyEventDispatcher will then receive calls to dispatchKeyEvent whenever a key is pressed, wherever it is in UI. This way, you can make sure your code is correctly called. The alternative method of registering key listener would require you to use a HierarchyListener in order for your key listener to be added:removed to each and every swing component that appear to be added/removed as a child of your root component. This is not only cumbersome to write, but also really hard to debug and understand. This is why I prefer the more brute-force, but although quite elegant way of adding application global key listener to a specific keyboard focus manager.
