[site]: stackoverflow
[post_id]: 2717726
[parent_id]: 2717671
[tags]: 
class Foo { int a[]; // OK in C, invalid in C++. Does not work with inheritance. }; // Idea is that structure is "extended" indefinitely by an array. // May work on your compiler as an extra feature. int a[]; // error in C and C++: storage size of 'a' isn't known void bar() { int a[]; // error in C and C++: storage size of 'a' isn't known } extern int a[]; // OK: storage size may be declared later. int a[5]; // declaration of size before use. An array type with unspecified size is incomplete. 8.3.4/1: If the constant expression is omitted, the type of the identifier of D is “derived-declarator-type-list array of unknown bound of T”, an incomplete object type. It must be completed in order to participate in a definition, ie the definition of a must contain a size specification or initialization with an array of specified size.
