[site]: crossvalidated
[post_id]: 493463
[parent_id]: 
[tags]: 
How to compute the left singular eigenvector matrix (U) from the output of prcomp() for PCA in R?

I am examining the output of the prcomp() function in R for PCA in light of the singular value decomposition equation: $X = U \cdot \Sigma \cdot V^{T}$ , where: $X$ : is the standardized original data matrix $\Sigma$ : is the eigenvalues matrix given by the output of prcomp() as $sdev but squared root $V$ : is the right singular eigenvector matrix (wrongly called loadings) in the output of prcomp() as $rotation $U$ : is the left singular eigenvector is NOT given by the output of prcomp() , unlike svd() as $u , however prcomp() provides the raw component scores matrix ( $U\cdot \Sigma$ ) as $x which is practically useful for plotting purposes. Now suppose I want to compute the $U$ matrix from the output of the prcomp() function using the mtcars built-in dataset. To achieve this mathematically, both sides of the equation need to be multiplied by $\Sigma^{-1} \cdot V$ this will result in identity matrices for both $V$ and $\Sigma$ on the right side leaving us with: $U = X \cdot \Sigma^{-1} \cdot {V}$ Note: I used svd() function for the sake of validating the results My trial in R # the svd() method A $sdev) %*% (solve(diag(prcomp.pca$ sdev))) # identity matrix for Sigma prcomp.pca $rotation %*% t(prcomp.pca$ rotation) # identity matrix for V # now compute the U matrix from prcomp() output per the equation above for U prcomp.pca $u sdev))) %*% t(prcomp.pca $rotation) prcomp.pca$ u round(svd.pca $u, 3) == round(prcomp.pca$ u, 3) # FALSE, what am I missing? So the computed $U$ matrix eventually didn't match the $U$ matrix of the svd() function, what am I missing here to obtain the $U$ matrix from the output of prcomp() ?
