[site]: stackoverflow
[post_id]: 404859
[parent_id]: 403583
[tags]: 
"I know how package level protection in java works ... and no-one seem to be using it." What are they using? Are they making all their classes public? The Principle of Burden takes two forms. The strong form states that the burden of transforming a collection of entities is a function of the number of entities transformed. The weak form states that the maximum potential burden of transforming a collection of entities is a function of the maximum potential number of entities transformed. The International Organisation for Standardization defines encapsulation as the property that the information contained in an object is accessible only through interactions at the interfaces supported by the object. At a higher level of abstraction, program units, too, may be encapsulated within subsystems, whereby the information contained in the subsystem is accessible only through public program units contained within the subsystem. The burden of creating or modifying any software system is a function of the number of program units created or modified. Program units that depend on a particular, modified program unit have a higher probability of being impacted than program units that do not depend on the modified program unit. The maximum potential burden an modified program unit can impose is the impacting of all program units that depend on it. Reducing the dependencies on an modified program unit therefore reduces the probability that its update will impact other program units and so reduces the maximum potential burden that that program unit can impose. Reducing the maximum potential number of dependencies between all program units in a system therefore reduces the probability that an impact to a particular program unit will cause updates to other program units, and thus reduces the maximum potential burden of all updates. Encapsulation theory shows how to use encapsulation to reduce the maximum potential number of dependencies between all program units. Encapsulation theory therefore shows how to use encapsulation to mitigate the weak form of the Principle of Burden. In Java, making a class package private is one of the key mechanisms for reducing the maximum potential number of dependencies in a system and so reducing the maximum possible burden of any software modification to that system. Yet you mention that this is not used in the code you read. That sounds ... odd.
