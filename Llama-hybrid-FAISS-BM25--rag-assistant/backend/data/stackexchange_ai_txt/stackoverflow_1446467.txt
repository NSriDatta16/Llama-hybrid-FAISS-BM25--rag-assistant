[site]: stackoverflow
[post_id]: 1446467
[parent_id]: 1446332
[tags]: 
No, I don't think the benefits outweigh the costs. The costs are obvious (and covered well by existing answers) so I'll address the so-called benefits. If you want a "cleaner" source tree, there are plenty of other features that don't involve destroying information. Most source control systems can place items in a deleted state that's hidden from standard UIs (unless you turn on special options); enforce Read permissions on a per-item basis; move the items to a predefined area of the tree (eg someplace called "Old Stuff"); or all of the above. To my knowledge, every SCC system that's powerful enough to support custom view specs also allows administrators to audit and overwrite these settings. Source code simply isn't that big. Especially after you consider compression + delta storage. Only in a few niche applications where large binary files are involved might I consider permanent removal. (E.g., game development studios go thru a TON of high-resolution artwork and video.) Even so, my retention policy would not be so brash as the one you describe. I'd keep snapshots at predefined intervals instead. Say: all revisions for 2 weeks, then daily for the previous 2 weeks, weekly for a few months prior to that, then monthly back to the beginning. Bottom line, developer time is really frackin' expensive. A few minutes of CC administration + a few extra hard drives in the SAN don't even compare.
