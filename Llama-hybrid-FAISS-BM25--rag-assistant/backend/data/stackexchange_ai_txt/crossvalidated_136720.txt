[site]: crossvalidated
[post_id]: 136720
[parent_id]: 109300
[tags]: 
The problem is that RBF kernel embeds points into an infinite dimensional space . So, even if you would be able to "approximate" this embedding with finite number of features, it'd be extremely (exponentially) large. Indeed, RBF kernel captures all possible feature combinations (because it's like a combination of many polynomial kernels, and a polynomial kernel of degree d captures relations of combinations of d features, like if you had features of the form $f_{k_1} \times \dots \times f_{k_d}$, see the derivation via the link above). That means if you have n features, you'll have to augment your data with $n (n-1) / 2$ features, corresponding to all possible pairs, $n(n-1)(n-2)/3$ â€” for all triples, and, in general, $n \choose k$ (binomial coefficient, choose k features from n ) for combinations of $k$ features. This gives you $$ \sum_{k=2}^n {n \choose k} = 2^n - n -1 $$
