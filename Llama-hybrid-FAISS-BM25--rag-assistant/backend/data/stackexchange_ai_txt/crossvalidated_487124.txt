[site]: crossvalidated
[post_id]: 487124
[parent_id]: 486984
[tags]: 
Okay, it's really looking like there's no way to avoid dummy variables, as suggested by whuber. Since silence is a different dimension than pitch, there isn't a way to get around adding another dimension to account for it. There's a lot of weird tricks you can try, but that extra dimension has to happen somewhere. As for the other side of the question, if google sends anyone working on music in machine learning here, the keyword that helped my searches was "tonnetz". https://arxiv.org/pdf/1709.00375.pdf And I'll hopefully save you a lot of heartache trying to break down the traditional tonnetz that you'll see, where rightward motion represents going up a major fifth and going up and to the right represents a major third: That whole thing simplifies down to pitch = 3x + y I'll probably post a more in-depth explanation, but for now, just look at this grid 2 5 8 11 1 4 7 10 0 3 6 9 until you see how it's the same as the tonnetz. You can still draw all the same lines between everything, but now we can just give our algorithms a vector (x, y) that satisfies the equation pitch = 3x + y Since it's not possible to invert this process without choosing a subset with no duplicates, I figure we can use x = integer(pitch / 3) y = pitch % 3 I'm sure this can be extended to other kinds of tonnetz, but this concludes my contribution for now.
