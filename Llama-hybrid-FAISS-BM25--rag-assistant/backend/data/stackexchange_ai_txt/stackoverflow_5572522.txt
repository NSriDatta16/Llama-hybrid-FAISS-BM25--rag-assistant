[site]: stackoverflow
[post_id]: 5572522
[parent_id]: 5571747
[tags]: 
While there are methods for getting special folder paths in Windows Script Host — WshShell.SpecialFolders and Shell.NameSpace — they return paths for the current user only. Getting other users' special folder paths is a bit tricky. The proper way to do this is to use the Windows API SHGetKnownFolderPath function (or SHGetFolderPath on Windows versions prior to Vista). But the problem is, Windows Script Host doesn't support calling WinAPI functions, so to make use of these functions in your script you'll have to expose them via a custom-written COM component. Another possible but undocumented solution is to read the special folder paths from that user's registry hive, specifically, the HKEY_USERS\ \Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders key. The paths in the User Shell Folders key are typically specified using the %USERPROFILE% environment variable; so to get fully-qualified paths you'll have to substitute this variable with the ProfileImagePath value from the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\ key. Also, the HKEY_USERS\ key is only available when the corresponding user is currently logged on. For a general solution, you would have to load the user's hive ( \ntuser.dat ) into a temporary registry key (say, HKEY_USERS\Temp ) and read values from this key instead. Below is sample JScript code that demonstrates how your task can be accomplished. On Windows 7 and Vista, you may need to run the script as Administrator depending on your UAC settings. NOTE : This method is discouraged, as Raymond Chen explains in his article The long and sad story of the Shell Folders key . There's no guarantee it will keep working in future versions of Windows. var strUser = "foo"; var strDomain = "bar"; // If the account is local, domain name = computer name: // var strDomain = getComputerName(); var strSID = getSID(strUser, strDomain); var strProfilePath = getProfilePath(strSID); // Load the user's registry hive into the HKEY_USERS\Temp key var strTempKey = "Temp"; loadHKUHive(strTempKey, strProfilePath + "\\ntuser.dat"); // Get unexpanded path, e.g. %USERPROFILE%\AppData\Roaming //var strAppData = getAppData(strSID); var strAppData = getAppData(strTempKey); WScript.Echo(strAppData); // Expand the previous value to a fully-qualified path, e.g. C:\Users\foo\AppData\Roaming strAppData = strAppData.replace(/%USERPROFILE%/i, strProfilePath); WScript.Echo(strAppData); // Unload the user's registry hive unloadHKUHive(strTempKey); function getComputerName() { var oShell = new ActiveXObject("WScript.Shell"); return oShell.ExpandEnvironmentStrings("%COMPUTERNAME%"); } function getSID(strUser, strDomain) { var oAccount = GetObject("winmgmts:root/cimv2:Win32_UserAccount.Name='" + strUser + "',Domain='" + strDomain + "'"); return oAccount.SID; } function getProfilePath(strSID) { var oShell = new ActiveXObject("WScript.Shell"); var strValue = oShell.RegRead("HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\" + strSID + "\\ProfileImagePath"); return strValue; } function getAppData(strSID) { var oShell = new ActiveXObject("WScript.Shell"); var strValue = oShell.RegRead("HKEY_USERS\\" + strSID + "\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\AppData"); return strValue; } function loadHKUHive(strKeyName, strHiveFile) { var oShell = new ActiveXObject("WScript.Shell"); oShell.Run("reg load HKU\\" + strKeyName + " " + strHiveFile, 0, true); } function unloadHKUHive(strKeyName) { var oShell = new ActiveXObject("WScript.Shell"); oShell.Run("reg unload HKU\\" + strKeyName, 0, true); }
