[site]: stackoverflow
[post_id]: 4428963
[parent_id]: 4428691
[tags]: 
Just to add some more information. In a Delphi project, code is organised into units. Each unit is a file with a name and a .pas extention. The unit has the following form: unit Name; interface uses // The definition of these units can be used both in the // interface as in the implementation section. unit1, unit2; // Public interface, visible to other units that use this unit. implementation uses // The definition of these units can be used only in the // implementation section. unit3, unit4; // Private implementation, not visible outside. initialization // code to initialize the unit, run only once finalization // code to cleanup the unit, run only once end. A unit can use anything defined in the unit as long as it is defined before it is be√Øng used. Sometimes this leads to confusing situations if names are identical: unit1; interface type TTest = Integer; // ... unit2; interface type TTest = Boolean; // ... unit3; interface uses unit1, unit2; var a: TTest; // Which TTest? // ... You can solve this by either knowing the evaluation order, or use a unit prefix: unit3; interface uses unit1, unit2; var a: unit1.TTest; // TTest from unit1 b: unit2.TTest; // TTest from unit2 // ... In your case, you need to use the unit in which Form2 is defined. If the timer is needed by both forms, you can also use a datamodule (just like a form, you can drag nonvisible components to it but they won't be visible). Both forms then can use the datamodule. Edit You try to use: procedure Slide(Form: TForm; Show: Boolean); And TForm has no Timer1. You can do the following: procedure Slide(Form: TForm2; Show: Boolean); If TForm2 is the form containing the Timer.
