[site]: crossvalidated
[post_id]: 255048
[parent_id]: 
[tags]: 
Why are some entries omitted in the eigenvectors output of princomp function in R?

I'm trying to manually produce the PCA used in this webpage , hence: Price now the example uses pca which I'm currenty not trying to argue but just follow: R this results with the following PCA formulae: PC1 PC2 PC3 PC4 Price -0.5229138 0.00807487 0.8483525 -0.08242604 Software -0.1771390 0.97675554 -0.1198660 -0.01423081 Aesthetics 0.5965260 0.13369503 0.2950727 -0.73431229 Brand 0.5825287 0.16735905 0.4229212 0.67363855 but for some reason which I can't fully understand, princomp is omitting three components from the PC formulae: Comp.1 Comp.2 Comp.3 Comp.4 Price -0.523 0.848 Software -0.177 0.977 -0.120 Aesthetics 0.597 0.134 0.295 -0.734 Brand 0.583 0.167 0.423 0.674 I can somehow accept the omission of Price for PC2 as it's smaller than 0.01, but what about Price and Software for PC4 ? The same applies for princomp for Covariance- mine is: > eigen(cov(data))$vectors [,1] [,2] [,3] [,4] [1,] -0.5957661 -0.3786184 0.7064672 -0.05113761 [2,] -0.1085472 -0.8342628 -0.5401678 -0.02101742 [3,] 0.6053008 -0.2675111 0.3179391 -0.67894297 [4,] 0.5166152 -0.2984819 0.3286908 0.73210631 princomp 's: Comp.1 Comp.2 Comp.3 Comp.4 Price -0.596 -0.379 0.706 Software -0.109 -0.834 -0.540 Aesthetics 0.605 -0.268 0.318 -0.679 Brand 0.517 -0.298 0.329 0.732 when I've compared my cov-based PCA to prcomp it fit, so I suppose this one went okay, but if I need to use R instead of C (if for example X columns are on different scales) then using princomp raises a few doubts. Any suggestions?
