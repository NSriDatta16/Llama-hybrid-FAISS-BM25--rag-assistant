[site]: stackoverflow
[post_id]: 3470176
[parent_id]: 3467825
[tags]: 
It may not be the most elegant solution, but here is what I ended up with. I linked a copy of the script details to a grouped by version of the same thing. SELECT fcname FYName, fdstart PeriodStart, fdend PeriodEnd, fnnumber PeriodNo, GLRAGG.AGGFYName, GLRAGG.QuarterSize, GLRAGG.PeriodCount, GLRAGG.Quarterific, GLRAGG.SemesterSize, GLRAGG.Semesterific FROM M2MData01.dbo.glrule GLR INNER JOIN (SELECT fcname AGGFYName, min(fdstart) YearStart, MAX(fdend) YearEnd, MAX(fnnumber) PeriodCount, (Max(fnnumber) / 4) QuarterSize, CASE WHEN Max(fnnumber) % 4 = 0 THEN 'Yes' ELSE 'No' END AS Quarterific, (Max(fnnumber) / 2) SemesterSize, CASE WHEN Max(fnnumber) % 2 = 0 THEN 'Yes' ELSE 'No' END AS Semesterific FROM M2MData01.dbo.glrule GROUP BY fcname) GLRAGG ON GLR.FCNAME = GLRAGG.AGGFYNAME This isn't a big deal because that table only has 12 rows for each year, in this case only 132 total rows. That produces every fiscal period with the total number of periods in each Fiscal Year and whether it can be evenly divisible by 4 and 2. It then uses the "Quarterific" value to determine whether to do so in the update statement and I can get by wtihout using variables. It may not be the best way, but it works and is performant given the small data set.
