[site]: stackoverflow
[post_id]: 459243
[parent_id]: 459214
[tags]: 
You are missing the point of Apple's toolset, IMO. VisualStudio may have a good toolset, but Apple's toolset is good enough (and pretty awesome, IMO) to have enabled 15K apps with over 500,000,000 downloads. I'd say that bodes pretty well for the future. The killer app for the iPhone is the AppStore. It is the sole way to get apps on the phone and is outside of the carrier control system. Try getting an app on a Verizon phone, for example, and you will soon find out what control means to a wireless carrier. Discovery is web-based, so you can send someone a link to an app and when they load it, it goes to the page where they can install the app. Simple and elegant. Objective-C's language quirks is a red herring. Any competent developer will come up to speed in a matter of weeks. Cocoa is an incredible framework. Also, don't underestimate the power of controlling the hardware spec. Apple's control over the hardware spec is a boon for developers, since they can count on things not getting complex and fragmented, since it is not in Apple's interest to ship phones that don't comply to the iPhone SDK spec as completely as possible. When an OEM makes hardware to Windows Mobile spec, there are always "interpretations" of the spec which means the developer is left holding the bag between phone a and phone b and why doesn't my app run the same on both? That's a big if often overlooked point in mobile. If there isn't one owner of the hardware spec, it easily become "write once, debug everywhere."
