[site]: stackoverflow
[post_id]: 4200453
[parent_id]: 
[tags]: 
What is a structured way to build a MySQL query?

I consider myself fairly competent in understanding and manipulating C-ish languages; it's not a problem for me to come up with an algorithm and implement it in any C-ish language. I have tremendous difficulty writing SQL (in my specific case, MySQL) queries. For very simple queries, it isn't a problem, but for complex queries, I become frustrated not knowing where to start. Reading the MySQL documentation is difficult, mainly because the syntax description and explanation isn't organized very well. For example, the SELECT documentation is all over the map: it starts out with what looks like psuedo-BNF, but then (since the text for aggregate descriptions aren't clickable... like select_expr ) it quickly devolves into this frustrating exercise of trying to piece the syntax together yourself by having a number of browser windows open. Enough whining. I'd like to know how people, step by step, begin constructing a complex MySQL query. Here is a specific example. I have three tables below. I want to SELECT a set of rows with the following characteristics: From the userInfo and userProgram tables, I want to select the userName , isApproved , and modifiedTimestamp fields and UNION them into one set. From this set I want to ORDER by modifiedTimestamp taking the MAX(modifiedTimestamp) for every user (i.e. there should be only one row with a unique userName and the timestamp associated with that username should be as high as possible). From the user table, I want to match the firstName and lastName that is associated with the userName so that it looks something like this: +-----------+----------+----------+-------------------+ | firstName | lastName | userName | modifiedTimestamp | +-----------+----------+----------+-------------------+ | JJ | Prof | jjprofUs | 1289914725 | | User | 2 | user2 | 1289914722 | | User | 1 | user1 | 1289914716 | | User | 3 | user3 | 1289914713 | | User | 4 | user4 | 1289914712 | | User | 5 | user5 | 1289914711 | +-----------+----------+----------+-------------------+ The closest I've got is a query that looks like this: (SELECT firstName, lastName, user.userName, modifiedTimestamp FROM user, userInfo WHERE user.userName=userInfo.userName) UNION (SELECT firstName, lastName, user.userName, modifiedTimestamp FROM user, userProgram WHERE user.userName=userProgram.userName) ORDER BY modifiedTimestamp DESC; I feel like I'm pretty close but I don't know where to go from here or even if I'm thinking about this in the right way. > user +--------------------+--------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------------------+--------------+------+-----+---------+-------+ | userName | char(8) | NO | PRI | NULL | | | firstName | varchar(255) | NO | | NULL | | | lastName | varchar(255) | NO | | NULL | | | email | varchar(255) | NO | UNI | NULL | | | avatar | varchar(255) | YES | | '' | | | password | varchar(255) | NO | | NULL | | | passwordHint | text | YES | | NULL | | | access | int(11) | NO | | 1 | | | lastLoginTimestamp | int(11) | NO | | -1 | | | isActive | tinyint(4) | NO | | 1 | | +--------------------+--------------+------+-----+---------+-------+ > userInfo +-------------------+------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +-------------------+------------+------+-----+---------+-------+ | userName | char(8) | NO | MUL | NULL | | | isApproved | tinyint(4) | NO | | 0 | | | modifiedTimestamp | int(11) | NO | | NULL | | | field | char(255) | YES | | NULL | | | value | text | YES | | NULL | | +-------------------+------------+------+-----+---------+-------+ > userProgram +-------------------+--------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +-------------------+--------------+------+-----+---------+-------+ | userName | char(8) | NO | PRI | NULL | | | isApproved | tinyint(4) | NO | PRI | 0 | | | modifiedTimestamp | int(11) | NO | | NULL | | | name | varchar(255) | YES | | NULL | | | address1 | varchar(255) | YES | | NULL | | | address2 | varchar(255) | YES | | NULL | | | city | varchar(50) | YES | | NULL | | | state | char(2) | YES | MUL | NULL | | | zip | char(10) | YES | | NULL | | | phone | varchar(25) | YES | | NULL | | | fax | varchar(25) | YES | | NULL | | | ehsChildren | int(11) | YES | | NULL | | | hsChildren | int(11) | YES | | NULL | | | siteCount | int(11) | YES | | NULL | | | staffCount | int(11) | YES | | NULL | | | grantee | varchar(255) | YES | | NULL | | | programType | varchar(255) | YES | | NULL | | | additional | text | YES | | NULL | | +-------------------+--------------+------+-----+---------+-------+
