[site]: stackoverflow
[post_id]: 2755952
[parent_id]: 2755787
[tags]: 
You can use the HTTP HEAD method to check the modification date on the server and see if you really need to fetch new data. Every time the application launches, and at intervals while it is running, query the server to see if the data has changed. This assumes the data is cached on the server and not dynamically generated at every request or dependent on which client makes the request. Thus you need to store the data and date for each item. SharedPreferences should suffice if the data is a string of moderate length and there is less that a few kilobytes total. If there is a known upper bound on the length of the data then use a database, otherwise you could use plain files. SharedPreferences writes an xml file every time you commit. You can create a Thread with a long sleep interval to do the periodic checks, or create a Handler and use postDelayed or similar to spawn a checking thread. Check items as often as your maximum for stale data. If you check every 10 minutes, you allow up to 10 minute old data, with an average of half that. Checking at launch will make things appear up to date in most cases anyway. If all the items expire at once, then you only need to check the date of one item to know they should all be refreshed. If not, you could try to use conditional GET instead of checking the HEAD of each item.
