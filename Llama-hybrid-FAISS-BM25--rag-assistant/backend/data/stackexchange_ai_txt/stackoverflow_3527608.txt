[site]: stackoverflow
[post_id]: 3527608
[parent_id]: 
[tags]: 
Is this an acceptable practice of managing views in a WPF application using Prism?

I am writing an WPF MVVM application using Prism. A couple days ago I asked about best practices for managing different views and didn't get a whole lot of feedback. Sense then I have come up with a system that seems to work, but I want to make sure I wont get bit down the road. I followed the tutorials at http://development-guides.silverbaylabs.org/ to get my shell setup and am confident that my modules are being registered well. However, nowhere in those tutorials was an example of a view being replaced with a different view within a given region. This in general, seems to be fairly hard to find a good example of. So, today I rolled my own solution to the problem. Essentially the module has a controller that keeps track of the current view, then when the user wants to switch views, it calls the Regions.Remove command and then the add command to replace it with the current view. It seems like there must be a more elegant solution to just switch between different registered views, but I haven't found it. All the different possible views for a module are registered with the Unity container when the module is initialized. The controller and the view switching function follows: namespace HazardModule { public class HazardController : IHazardController { private object CurrentView; public IRegionManager RegionManager { get; set; } private IUnityContainer _container; public HazardController(IUnityContainer container) { _container = container; } /// /// Switches the MainRegion view to a different view /// /// The class of the view to switch to public void SiwthToView () { if (CurrentView != null) { RegionManager.Regions["MainRegion"].Remove(CurrentView); } CurrentView = _container.Resolve (); RegionManager.Regions["MainRegion"].Add(CurrentView); } } } Any feedback or other better solutions would be appreciated.
