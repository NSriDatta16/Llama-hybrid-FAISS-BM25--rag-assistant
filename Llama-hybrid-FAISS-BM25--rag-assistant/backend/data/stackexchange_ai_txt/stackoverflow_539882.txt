[site]: stackoverflow
[post_id]: 539882
[parent_id]: 539694
[tags]: 
Facility with a programming language is not enough. What is required is facility with a programming language in the context of a partiular suite of libraries on a particular platform C++ on winapi on Windows 32bit C++ on KDE on Linux C++ on Symbian on a Nokia S60 phone C# on MS .NET on Windows C# on Mono on Linux Within such a context, the measures of competence using the target language on the target platform are as follows: The ability to express common patterns succinctly and robustly. The ability to debug common but subtle bugs like race conditions. It would be possible to develope a suite of benchmark exercises for a programmer. One might also, once significant samples were available, determine the bell curve for ability. Preparing these things would take literally years and they would rapidly be obsoleted. This (and general tightness) is why organisations don't bother. It would also be necessary to grade people in both "tool maker" and "tool user" modes. Tool makers are very different people with a much higher level of competence but they are often unsuited to monkey work, for which you really want a tool user.
