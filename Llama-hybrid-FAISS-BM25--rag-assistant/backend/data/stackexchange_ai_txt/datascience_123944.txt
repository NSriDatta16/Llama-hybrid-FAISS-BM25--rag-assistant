[site]: datascience
[post_id]: 123944
[parent_id]: 123907
[tags]: 
We can build a Prediction Intervals (PIs) once we have a set of predictions. Method 1: RMSFE (Root Mean Squared Forecasting Error) RMSFE is similar to RMSE. The only difference is that RMSFE has to be calculated on residual terms from predictions over unseen data (ie. Validation-set or Test-set). Method 2: BCVR (Bootstrapping Cross-Validation Residuals) which is a theoretical method proposed by Brendan Artley in his online article : Time Series Forecasting: Prediction Intervals Estimate the range of a future observation with confidence Note: BCVR method is a theoretical proposal, it's not official yet. Please double-check if you wanna use it in scientific publications. I have not found an official paper for that. At the moment, there is a pre-print paper under the title of "Bootstrapping the Cross-Validation Estimate" from Bryan Cai et. al All I am familiar with are methods based on residuals of past timestamps (e.g., RMSFE). Is it possible to somehow incorporate those into future timestamps? Yes, this can be achieved using the Recursive multi-step forecasting strategy depicted in the following: You can deploy skforecast package and use it with the classes ForecasterAutoreg & ForecasterAutoregCustom based on the docs Also, you can set regressor = lightgbm.LGBMRegressor() from lightgbm docs if you wish. I achieved these results using RMSE ; you can change and use the abovementioned methods. You can extend it: for RMSFE by: RMSFE = np.sqrt(sum([x**2 for x in residuals]) / len(residuals)) band_size = 1.96*RMSFE for BCVR, check the proposed author's implementation You can reproduce what I achieved it using this example ; otherwise, let me know.
