[site]: stackoverflow
[post_id]: 5541946
[parent_id]: 
[tags]: 
CFLAGS, CCFLAGS, CXXFLAGS - what exactly do these variables control?

I am using GNU make to compile my C++ code, and I would like to understand how to make my compilations customizable. I read in different places that CFLAGS , CCFLAGS and CXXFLAGS are used for this purpose. So how should i use them? If I have additional command-line arguments to the compiler, should I append them to CFLAGS or prepend them? Is there a common practice? Why the three different variables? I suppose the C compiler should get CFLAGS and CCFLAGS , while the C++ compiler should get CFLAGS and CXXFLAGS —did I get it right? Is the human user supposed to set these variables at all? Do any automatic tools ( automake , autoconf , etc) set them? The Linux system that I am supposed to use doesn't define any of these variables—is this typical? Currently my Makefile looks like this, and I feel it's a bit dirty: ifdef code_coverage GCOV_FLAG := -fprofile-arcs -ftest-coverage else GCOV_FLAG := endif WFLAGS := -Wall INC_FLAGS := -Istuff -Imore_stuff -Ietc CCFLAGSINT := -O3 $(WFLAGS) $(INC_FLAGS) $(CCFLAGS) ... (somewhere in the makefile, the command-line for compilation looks like this) $(CC) $(CCFLAGSINT) -c $ I am pretty sure there are no bugs here; the Makefile works very well. But is there anything that goes against conventions (like CCFLAGSINT —should I just overwrite CCFLAGS instead? Or CXXFLAGS ? FUD!) Sorry for so many questions; you will obviously not answer them all, but I hope the answers will help me understand the general idea behind these settings.
