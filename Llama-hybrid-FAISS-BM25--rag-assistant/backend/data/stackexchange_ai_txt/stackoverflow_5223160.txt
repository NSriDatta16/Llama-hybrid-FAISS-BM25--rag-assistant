[site]: stackoverflow
[post_id]: 5223160
[parent_id]: 5220432
[tags]: 
A FULLTEXT index can include multiple columns, but those columns have to be in the same table. So you will not be able to cover those 3 columns from 2 tables in a single index. You will need at least 2 indexes to accomplish that. Also, FULLTEXT indexes only work with the MyISAM storage engine, so if you are using a transactional engine like InnoDB this will not work. You should read the manual to learn about other features and limitations of fulltext indexes (including boolean mode, stopwords, etc.): http://dev.mysql.com/doc/refman/5.1/en/fulltext-search.html Assuming you are using MyISAM, you can create 1 fulltext index on (p.title,p.content) and another fulltext index on (w.content), then query the two indexes separately and use UNION ALL to combine the results. The resulting query will be something like this, but you'll need to tweak it to meet your specific requirements: select page_sid, page_title, sum(score) as total_score from ( SELECT p.sid as page_sid,p.title as page_title,NULL as widget_sid, MATCH(p.title, p.content) AGAINST("'.$keyword.'") AS score FROM page p WHERE MATCH(p.title, p.content) AGAINST("'.$keyword.'") UNION SELECT p.sid as page_sid,p.title as page_title,w.sid as widget_sid, MATCH(w.content) AGAINST("'.$keyword.'") AS score FROM page p inner join widget_to_page wtp on p.sid = wtp.page_sid inner join widget w on w.sid = wtp.widget_sid WHERE MATCH(w.content) AGAINST("'.$keyword.'") ) as sub_query group by page_sid ORDER BY total_score DESC
