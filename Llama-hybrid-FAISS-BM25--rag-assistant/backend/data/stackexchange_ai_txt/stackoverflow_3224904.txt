[site]: stackoverflow
[post_id]: 3224904
[parent_id]: 
[tags]: 
How to organize controller in moderately large Rails application?

I'm working on an application with quite a few related models and would like to hear some opinions on how best to organize the controllers. Here are some options I have been considering: 1) Namespace the controllers. So, for example, have a controllers/admin directory and a controllers/public directory. This seems appealing for organization but also sorta contrived since a single resource could often have actions which might sensibly belong in different directories (e.g. the show action is public whereas the create action is admin). So this would mean breaking up some of my resources into two separate controllers - one public, one admin. Seems bad. 2) Create nested resources. I've only occasionally used nested resources so it's not always clear to me when it's best to nest resources versus simply passing the data you need through the params explicitly. Does anyone has some suggestions/examples of how best to use nested resources? When is it a good idea? When is it an overkill? 3) Just leave the default scaffolded controllers alone. Create new collection/member actions where needed and use before filters to set permissions within each controller. This seems most appealing since it keeps things simple upfront. But I'm sorta nervous about things getting messy down the line as some of the controllers might start to bloat with several new actions. If anyone with experience designing large applications could offer some guidance here, it'd greatly appreciated.
