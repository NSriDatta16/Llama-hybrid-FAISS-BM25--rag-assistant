[site]: stackoverflow
[post_id]: 456032
[parent_id]: 455580
[tags]: 
For cross-language projects, I found out that strings containing RFC 3339 dates are the best way to go. An RFC 3339 date looks like this: 1985-04-12T23:20:50.52Z I think most of the format is obvious. The only somewhat unusual thing may be the "Z" at the end. It stands for GMT/UTC. You could also add a timezone offset like +02:00 for CEST (Germany in summer). I personally prefer to keep everything in UTC until it is displayed. For displaying, comparisons and storage you can leave it in string format across all languages. If you need the date for calculations easy to convert it back to a native date object in most language. So generate the JSON like this: json.dump(datetime.now().strftime('%Y-%m-%dT%H:%M:%SZ')) Unfortunately, JavaScript's Date constructor doesn't accept RFC 3339 strings, but there are many parsers available on the Internet. huTools.hujson tries to handle the most common encoding issues you might come across in Python code including date/datetime objects while handling time zones correctly.
