[site]: stackoverflow
[post_id]: 4330288
[parent_id]: 
[tags]: 
ARB Fragment If/Else

I have a problem and I can't seem to wrap my head around it, so I was hoping someon here might be able to help me out. I'm writing a compiler for miniGLSL, and so far so good. I'm at the point where I need to output to an ARB fragment program, but the problem is, the ARB I have to target doesn't support branching. (A full list of supported instructions can be found here http://petewarden.com/notes/archives/2005/05/fragment_progra_2.html ). In order to simulate if/else, I've been making use of the CMP program as follows (assuming 0 or greater = true, otherwise, false. // represents comments as # causes bad formatting on here): if (a into ARB fragment: TEMP cond1, cond2, cond3, tempvar1, tempvar2, tempvar3, tempvar4, a, b, c, d, e, f, g; //TOP IF //condition a This is about where I get before i realize my code is going to start getting really ugly. Each level of if/else is going to introduce continually stacking compares, and additionally, the last else requires me to re-evaluate cond2, or use another register. I know I'm probably doing something wrong here, but I'm not sure what. I've tried using counters, tried adding the result of previous stages of if/else block, anding, oring, etc. but I can't find a good solution to how to convert if/else blocks into ARB fragment assembly that doesn't really on increasingly large stacks of CMP statements. Does any one have an idea how to make this simpler so my compiler can output this programmatically? I'm not worried to much about optimization at this point, I just want to get it to work. Thanks
