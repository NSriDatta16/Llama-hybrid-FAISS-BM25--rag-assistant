[site]: stackoverflow
[post_id]: 1644803
[parent_id]: 1644325
[tags]: 
Instead of the StringBuilder, you might try using an IntPtr and the Marshal class. SO, it would look like this: [DllImport("dmphnx32.dll")] public static extern int PhxQueryDataAttributes(int handle, IntPtr lTableName, IntPtr lColumnName, ref short lIteration, ref short type, ref short maxLen, ref short endorsement, IntPtr endorsementId); Calling code would be: public int PhxQueryDataAttributes(int handle, ref string lTableName, ref string lColumnName, ref short lIteration, ref short type, ref short maxLen, ref short endorsement, ref string endorsementId) { var sbTableName = Marshal.AllocHGlobal(1024);//Change these to the max length possible for each string. var sbColName = Marshal.AllocHGlobal(1024); var sbEndId = = Marshal.AllocHGlobal(1024); var ret = RatingProxy.PhxQueryDataAttributes(handle, sbTableName, sbColName, ref lIteration, ref type, ref maxLen, ref endorsement, sbEndId); lTableName = Marshal.PtrToStringAnsi(sbTableName); lColumnName = Marshal.PtrToStringAnsi(sbColName); endorsementId = Marshal.PtrToStringAnsi(sbEndId); return ret; } This way you can specify the correct encoding (which you cannot do with a string builder, which assumes it is a UTF type encoding). Experiment a little, and see which of the Marshal.PtrToString... ones work, though ANSI should work, since that is what most C++ libraries use.
