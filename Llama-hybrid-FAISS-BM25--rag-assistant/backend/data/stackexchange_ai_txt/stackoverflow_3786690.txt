[site]: stackoverflow
[post_id]: 3786690
[parent_id]: 
[tags]: 
How do I set a code object as the DataSource for a ComboBox, using XAML?

I've started a new job this week and am trying to get my head around this WPF stuff. I've gotten to a point where I'm trying to add a ComboBox to a UserControl, and to populate it from a collection which exists in code. I've been getting along pretty much on monkey-see-monkey-do coding for the most part; copying and adapting existing code in order to get the next stage working, but this DataSource stuff has me stumped. I've been through a whole bunch of articles on MSDN this morning and am no closer to understanding than I was when I started. Let me go through a few of the things that are messing with me, and hopefully you guys will be able to point me in the right direction: 1) None of the [UserControlName].vb files contains any code. All of the code for the UserControls is stored in [UserControlName]Model.vb files, and then code of the following sort is used: I have no idea why this is done. Ideas? 1.5) (using bullet points means I can't use <> brackets or code blocks later on. What the hell, markdown?) Anyway... 2) I'm pretty sure I only want a Static Source for the moment, as the items in the ComboBox aren't going to change during execution, at this time. Problem is, all the articles I can find about this are gigantic, complex things about creating XML readers, and populating DataGridViews and sorting data, and on and on and on. I just want to declare that I'm using a frealing List! A List I've already created in code. So, yeah, I basically need to use a Public Property ComboBoxLines As List(Of String) from a class which isn't the same class as the UserControl itself as the DataSource for a ComboBox. Any ideas?
