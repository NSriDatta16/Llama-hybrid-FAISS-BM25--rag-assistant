[site]: crossvalidated
[post_id]: 113748
[parent_id]: 
[tags]: 
Classification tips for a begginer

I'm doing a graduation work that involves applying Classification algorithms in a dataset of matches from Dota 2 (a popular MOBA game). Here's an explanation of the problem: Dota 2 matches are played by two teams of 5 members in a 5x5 manner. Each player can choose from a pool of 106 playable characters that are called "Heroes". Each hero can only be picked once in a match (there is never two same heroes in a match). The deal is that the hero picking have a major influence on the match outcome, since certains heroes have synergies with others, at the same time that some heroes are direct counters for others heroes. What I'm trying to do is predict the game outcome based on the heroes picked for each team. Right now I'm using .csv files exported from my database containing 11 nominal atributes, the one that represents the winner team is the class, and the other ten are the hero picks. I tried several algorithms and the one that got the highest accuracy was Naive Bayes, with ~ 72%. Next was K-NN with around 65% correct classifications. I've got about 100.000 matches in my database. Is there any way to improve this? I'm really new to Machine-Learning/KDD. I'm using Weka for the mining. Here's an example of how I'm organizing my data in the .csv. winner,r1,r2,r3,r4,r5,d1,d2,d3,d4,d5 0,40,48,13,37,51,47,102,30,41,69 R means Radiant and D means Dire , which are the names of the teams used in the game. Thanks in advance and sorry for the "Engrish"!
