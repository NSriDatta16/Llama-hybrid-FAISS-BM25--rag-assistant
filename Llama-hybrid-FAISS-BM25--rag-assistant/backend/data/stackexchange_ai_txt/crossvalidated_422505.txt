[site]: crossvalidated
[post_id]: 422505
[parent_id]: 422461
[tags]: 
I actually used Reinforcement Learning to build poker AI's for my thesis; http://doras.dcu.ie/16765/ . The most interesting aspect of building a poker AI is how to include previous actions; there is a lot of room for creativity. I used belief vectors from a Hidden Markov Model but I'm not sure that's the best way. I like your idea of including the last action of each player (I would include my own last action as well); that might be the simplest way of including previous actions. If that works you could include the last two actions etc.. To cope with multiple opponents, I added together vectors for each opponent. Again, there is a lot of room for creativity. Note: when decent players play most versions of poker, most hands get down to two player very quickly; usually pre-flop or flop. My main recommendation would be to get to a system that takes legal actions in all situations as quickly as possible. And then experiment with the elements that most interest you. Have fun!
