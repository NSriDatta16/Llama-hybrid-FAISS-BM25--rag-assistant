[site]: stackoverflow
[post_id]: 3972976
[parent_id]: 
[tags]: 
Writing a custom Flume decorator, but getting errors. What am I missing?

I'm writing a custom decorator plugin for Cloudera's distributed log aggregation system, Flume. My Java code is below: package multiplex; import java.io.IOException; import java.util.ArrayList; import java.util.List; import com.cloudera.flume.conf.Context; import com.cloudera.flume.conf.SinkFactory.SinkDecoBuilder; import com.cloudera.flume.core.Event; import com.cloudera.flume.core.EventImpl; import com.cloudera.flume.core.EventSink; import com.cloudera.flume.core.EventSinkDecorator; import com.cloudera.util.Pair; import com.google.common.base.Preconditions; public class JsonMultiplexDecorator extends EventSinkDecorator { private final String serverName; private final String logType; public JsonMultiplexDecorator(S s, String serverName, String logType) { super(s); this.serverName = serverName; this.logType = logType; } @Override public void append(Event e) throws IOException { String body = new String(e.getBody()).replaceAll("\"", "\\\""); String json = "{ \"server\": \"" + this.serverName + "\"," + "\"log_type\": \"" + this.logType + "\", " + "\"body\": \"" + body + "\" }"; EventImpl e2 = new EventImpl(json.getBytes(), e.getTimestamp(), e.getPriority(), e.getNanos(), e.getHost(), e.getAttrs()); super.append(e2); } public static SinkDecoBuilder builder() { return new SinkDecoBuilder() { @Override public EventSinkDecorator build(Context context, String... argv) { Preconditions.checkArgument(argv.length == 2, "usage: multiplexDecorator(serverName, logType)"); return new JsonMultiplexDecorator (null, argv[0], argv[1]); } }; } public static List > getDecoratorBuilders() { List > builders = new ArrayList >(); builders.add(new Pair ("jsonMultiplexDecorator", builder())); return builders; } } This compiles fine into a JAR file with ant, I can load it into Flume at runtime and successfully configure nodes to use it. However, when an event actually comes through on a node that has this plugin loaded, I get errors in my log like this: 2010-10-19 21:03:15,176 [logicalNode xxxxx] ERROR connector.DirectDriver: Driving src/sink failed! LazyOpenSource | LazyOpenDecorator because null java.lang.UnsupportedOperationException at java.util.Collections$UnmodifiableMap.put(Collections.java:1285) at com.cloudera.flume.core.EventBaseImpl.set(EventBaseImpl.java:65) at com.cloudera.flume.handlers.rolling.RollSink.append(RollSink.java:164) at com.cloudera.flume.agent.diskfailover.DiskFailoverDeco.append(DiskFailoverDeco.java:93) at com.cloudera.flume.core.BackOffFailOverSink.append(BackOffFailOverSink.java:144) at com.cloudera.flume.agent.AgentSink.append(AgentSink.java:109) at com.cloudera.flume.core.EventSinkDecorator.append(EventSinkDecorator.java:58) at multiplex.JsonMultiplexDecorator.append(JsonMultiplexDecorator.java:56) at com.cloudera.flume.core.EventSinkDecorator.append(EventSinkDecorator.java:58) at com.cloudera.flume.handlers.debug.LazyOpenDecorator.append(LazyOpenDecorator.java:69) at com.cloudera.flume.core.connector.DirectDriver$PumperThread.run(DirectDriver.java:92) (The [logicalNode xxxxx] is a placeholder for an EC2 internal DNS name). I don't have a lot of Java experience so I'm not sure if I'm doing something wrong here or if this is a Flume bug. I should mention that I wrote this using the HelloWorld plugin examples from the Flume source, and also drawing from some of the built-in Flume decorators.
