[site]: stackoverflow
[post_id]: 5002119
[parent_id]: 5002046
[tags]: 
IMO, the article incorporates some assumptions about the underlying architecture. As C++ has only some minimalistic requirements on the architecture, no guarantees for example about atomicity can be given in the standard. For example a byte has to be at least 8 bits, but you could have an architecture where a byte is 9 bits, but an int 16... theoretically. So when the compiler is specific for x86 architecutre, the specific features can be used. NB: structs are usually aligned by default to a native word boundary. you can disable that by #pragma statements, so your padding fills are not required
