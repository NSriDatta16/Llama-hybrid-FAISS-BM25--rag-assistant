[site]: crossvalidated
[post_id]: 621982
[parent_id]: 
[tags]: 
How to improve the expressibility of a cGAN

I am training a cGAN on the problem of reconstructing a density matrix. My inputs to the network are matrices and expectation values. That is, I have a set $(A,x)$ where A are measurement operators, essentially a set of 256x256 matrices, and x are numbers which corresponds to expectation values for each A. Well, I have a cGAN which works very good when the entries are 16x16 matrices but the results are very poor for these 256x256 matrices. I am not sure on how to improve the network for this second case (I am using the same code). I have changed: the learning rate the number of layers of the generator the number of layers of the discriminator the decay rate and decay steps of the optimizer the number of neurons in the input layer and in the first hiden layer of the generator But nothing seems to change! I mean, nothing . It is not getting better and it is not getting worse. It starts with Fidelity (a metric I am using for comparing the similarity between the target and the output) of 0.002 and generator loss of 0.69; when I change any of the above mentioned numbers in items 1 to 5, the Fidelity and generator loss do not change! . What is worse is that the Fidelity, which is better as close as it gets to 1, is droping...... and the generator loss which starts with 0.69 ends with 0.69... it does not change during the whole training. The same goes for the discriminator loss. I really Don't know what to do. I can provide codes if it is needed. Since it is a lot of code I don't want to drop a lot of information but in the case it is needed I can give you. I just want to know how to improve the expressiveness of the network when the inputs are matrices and the desired output is a matrix as close as it can be to a target matrix.
