[site]: stackoverflow
[post_id]: 1781405
[parent_id]: 1781144
[tags]: 
This isn't the greatest solution but it's something... The test server can run git remote show origin to see which branch is currently active on your laptop. E.g., $ git remote show origin * remote origin Fetch URL: blade:/var/scratch/code Push URL: blade:/var/scratch/code HEAD branch: foo Remote branches: foo tracked bar tracked qux tracked So, the origin repository is currently on the foo branch. I haven't seen a low level command that will give you that directly so you may have to parse it out from this (perhaps someone will have a better way). Example, $ b=$(git remote show origin | grep "HEAD branch" | awk -F: '{print $2}') $ echo $b foo Now, since origin/foo will act similar to origin/HEAD (no local branch) and your CruiseControl doesn't like that you should probably just create a local branch on the testing machine and simply hard-reset it to the latest location: $ b=$(git remote show origin | grep "HEAD branch" | awk -F: '{print $2}') $ git reset --hard origin/$b Note, this is slightly fragile since HEAD me not always be what you think it is. For example, during a rebase HEAD will be moving backward and forward. If your testing server checks HEAD on your laptop during a rebase it could get some invalid or undesired location.
