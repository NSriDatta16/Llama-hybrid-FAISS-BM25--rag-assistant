[site]: stackoverflow
[post_id]: 87036
[parent_id]: 86308
[tags]: 
Here are some ideas to get design more simpler: read some programming books and articles, and then apply them in your work and write code read lots of code (good and bad) written by other people (like Open Source projects) and learn to see what works and what does not build safety nets (unit tests) to enable experimentations with your code use version control to enable rollback, if those experimentations take wrong turn TDD (test driven development) and BDD (behaviour driven development) change your attitude, ask how you can make it so, that "it simply works" (convention over configuration could help there; or ask how Apple would do it) practice (like jazz players -- jam with code, try Code Kata ) write same code multiple times, with different languages and after some time has passed learn new languages with new concepts (if you use static language, learn dynamic one; if you use procedural language, learn functional one; ...) [one language per year is about right] ask someone to review you code and actively ask how you can make your code simpler and more elegant ( and then make it ) get years under your belt by doing above things (time helps active mind)
