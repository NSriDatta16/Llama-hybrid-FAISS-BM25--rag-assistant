[site]: stackoverflow
[post_id]: 5438849
[parent_id]: 
[tags]: 
Storing data from database in static property

I have got an ASP.Net website, where the data is brought in from ISeries. The data connection to ISeries is quite slow and the speed is quite important for this website. Because of the slow speed of data retrieval from ISeries, I want to make as less database connections as possible. So, I was thinking about storing tables from the database which rarely changes as static properties in my website. Whenevera user logs in I submit a thread which refreshes the data in the static property. Is this approach correct? If not, what are the problems with this approach and what are the possible alternatives? Example:- For list of ports, I submit the below thread when user logs on:- // Get Ports list Thread threadPorts = new Thread(delegate() { Ports.getPortList(); }); threadPorts.Start(); Session["threadPorts"] = threadPorts; In class Ports, there are 2 methods - one for populating the static property PortList, and the other checks if the thread is alive and waits for the thread to complete and retrieve the list of ports, once it is complete. The second method is the one which I use in my application whenever I need the list of ports (populating a dropdown, etc). public static void getPortList() { DataTable dt = new DataTable(); DB2Connection conn = new DB2Connection(ConfigurationManager.ConnectionStrings["db2IBM"].ConnectionString); conn.Open(); string query = query to get ports from ISeries; DB2Command cmd = new DB2Command(query, conn); cmd.CommandType = CommandType.Text; DB2DataAdapter adp = new DB2DataAdapter(cmd); adp.Fill(dt); cmd.Dispose(); conn.Close(); List list = new List (); foreach (DataRow row in dt.Rows) { list.Add(new Port(row[0].ToString(), row[1].ToString(), row[2].ToString(), row[3].ToString())); } StaticProp.PortList = list; } public static List getPortListfromSession() { List portList = new List (); if (System.Web.HttpContext.Current.Session["threadPorts"] != null) { Thread t = (Thread)System.Web.HttpContext.Current.Session["threadPorts"]; if (t != null) { if (t.IsAlive) { t.Join(); } } } if (System.Web.HttpContext.Current.Session["threadPorts"] != null) System.Web.HttpContext.Current.Session.Remove("threadPorts"); portList = StaticProp.PortList; return portList; }
