[site]: stackoverflow
[post_id]: 908050
[parent_id]: 
[tags]: 
Optimizing Lookups: Dictionary key lookups vs. Array index lookups

I'm writing a 7 card poker hand evaluator as one of my pet projects. While trying to optimize its speed (I like the challenge), I was shocked to find that the performance of Dictionary key lookups was quite slow compared to array index lookups. For example, I ran this sample code that enumerates over all 52 choose 7 = 133,784,560 possible 7 card hands: var intDict = new Dictionary (); var intList = new List (); for (int i = 0; i which outputs: time for dictionary lookups: 2532 ms time for array index lookups: 313 ms Is this type of behavior expected (performance decrease by a factor of 8)? IIRC, a Dictionary has, on average, O(1) lookups, while an array has worst-case O(1) lookups, so I do expect the array lookups to be faster, but not by this much! I am currently storing poker hand rankings in a Dictionary. I suppose if this is as fast as the dictionary lookups can be, I have to rethink my approach and use arrays instead, although indexing the rankings will get a little tricky and I'll probably have to ask another question about it.
