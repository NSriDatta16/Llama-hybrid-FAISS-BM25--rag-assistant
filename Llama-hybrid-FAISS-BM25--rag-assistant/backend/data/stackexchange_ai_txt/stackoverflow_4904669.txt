[site]: stackoverflow
[post_id]: 4904669
[parent_id]: 4904636
[tags]: 
You need this: if(source.images[i]!=NULL) { images[i]=new Image; *images[i]=*source.images[i]; xcoords[i]=source.xcoords[i]; ycoords[i]=source.ycoords[i]; } else { images[i] = NULL; } and that will solve your immediate problem. But really, you're going about this the wrong way. As @Gman said, you should be using the copy-and-swap idiom . The reason to use the idiom is exception safety. If something throws an exception in the middle of that operator = (and there is plenty that can since it's doing so much) you will be leaving the object in an undefined state, and that's very bad. The copy and swap idiom lets you write an exception safe copy-constructor (which is still a little tricky) and then leverage it to build an assignment operator. As an added bonus, you get a working copy constructor and a swap function. The copy constructor is very handy for stuffing things in STL containers and passing or returning things by value. And the swap function is is pretty darned useful for users of your class, especially ones who would like to implement their own exception safe copy constructors and assignment operators.
