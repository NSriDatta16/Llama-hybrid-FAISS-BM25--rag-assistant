[site]: stackoverflow
[post_id]: 433299
[parent_id]: 433281
[tags]: 
The easiest way around this would be to simply use a BindingList like so: private List mAllianceList = new List (); private BindingList bindingList; private void FillAllianceList() { // Add alliance name to member alliance list foreach (Village alliance in alliances) { mAllianceList.Add(alliance.AllianceName); } bindingList = new BindingList (mAllianceList); // Bind alliance combobox to alliance list this.cboAlliances.DataSource = bindingList; } Then, from here on out, just deal with the binding list to add and remove items from there. That will remove it both from the List and from the ComboBox. EDIT: To answer your question regarding sorting, I guess the easiest (but possibly "hacky" way to do it would be something like this: mAllianceList.Sort(); bindingList = new BindingList (mAllianceList); this.cboAlliances.DataSource = bindingList; So basically, after you sort, you create a new binding list and reset the data source. Maybe there's a more elegant way to go about this, however this should work.
