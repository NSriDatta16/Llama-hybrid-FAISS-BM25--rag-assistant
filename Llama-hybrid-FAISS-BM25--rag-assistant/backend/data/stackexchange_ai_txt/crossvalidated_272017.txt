[site]: crossvalidated
[post_id]: 272017
[parent_id]: 
[tags]: 
Hypothesis testing using the non-parametric bootstrap

Context I'm creating a function in R that performs a hypothesis testing using the non-parametric bootstrap. I've been following equations by my professor and though I've written some of the function, I don't understand it nor can I confirm that it does what I intend it to do. #' Tests a hypothesis using the nonparametic bootstrap #' #' @param x the vector containing a sample (not a dataframe) #' @param a the quantity to test #' @param statistic the statistic function to use e.g. mean, median. this function must take in a vector and return a single number #' @param type the type of test. either `'left'`, `'right'`, or `'two-tailed'` test % length, replace = TRUE) %>% statistic) # not equal if (type == 'two-tail') { p_value = (a + abs(a - b)))) / gens } # greater than else if (type == 'right') { p_value = b)) / gens } # less than else { p_value a along with the type is the null hypothesis. e.g. mtcars %>% filter(cyl == 8) %>% `$`(mpg) %>% test(a = 16, statistic = mean, type = 'left') # [1] 0.505 is testing whether 8 cylinder cars have mpg on average less than 16. The return of the function is the p-value . Questions Is this function even doing what I intend it to? Am I calculating the p_value correctly for each case? How does this work (if it does)? I see that I am shifting the values of x to create a new vector can calculating the p_value from that but I don't understand why that works if it does. Thank you!
