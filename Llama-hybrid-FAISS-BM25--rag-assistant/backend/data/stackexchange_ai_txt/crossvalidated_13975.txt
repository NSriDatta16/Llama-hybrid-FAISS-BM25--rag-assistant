[site]: crossvalidated
[post_id]: 13975
[parent_id]: 13966
[tags]: 
I think looking at what the letters of PMML stand for provides some insight into this. PMML is Predictive Model Markup Language . From PMML in Action , p. 5 PMML is an XML-based language... which provides a way for applications to define statistical and data mining models and to share models between PMML-compliant applications. Emphasis added by me to the word "model," and notice the lack of the word data here. Data storage is a separate issue. This means that in the case of support vector machines, the PMML needs to define the support vectors, kernel function, and whatnot, but the storage of the data is a separate responsiblity. Even if the support vectors are just weighted sets of examples, in general, they're not going to be the entire raw data set. PMML separates the responsibility of modeling from application. The consumer gets to be agnostic about the model building process—no matter how simple or complicated it may be—and only has to worry about how to read the PMML and apply it. Exceptions where PMML Stores Data Two exceptions where raw data can be stored in PMML are time series models and model verification . Raw data can be stored in time series models , because these models tend to be defined from (at least a portion of) the original data from which the model was built. For example, with a moving average model, at least the first few time steps after deployment will need some of the previous data points in order to proceed. Raw data is also stored in the Model Verification element. This allows the consumer of the PMML to check a model implementation against tests provided by the PMML producer.
