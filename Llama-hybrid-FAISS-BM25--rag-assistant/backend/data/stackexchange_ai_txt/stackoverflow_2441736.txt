[site]: stackoverflow
[post_id]: 2441736
[parent_id]: 1428075
[tags]: 
I've resolved with this four class: 1) public class XMLOutputStream extends ByteArrayOutputStream { private DataOutputStream outchannel; public XMLOutputStream(OutputStream outchannel) { super(); this.outchannel = new DataOutputStream(outchannel); } public void send() throws IOException { byte[] data = toByteArray(); outchannel.writeInt(data.length); outchannel.write(data); reset(); } } 2) public class XMLSender { public static void send(Document tosend, OutputStream channel) throws TransformerConfigurationException, IOException { XMLOutputStream out = new XMLOutputStream(channel); StreamResult sr = new StreamResult(out); DOMSource ds = new DOMSource(tosend); Transformer tf = TransformerFactory.newInstance().newTransformer(); try { tf.transform(ds, sr); } catch (TransformerException ex) { Logger.getLogger(XMLSender.class.getName()).log(Level.SEVERE, null, ex); } out.send(); } } 3) public class XMLInputStream extends ByteArrayInputStream { private DataInputStream inchannel; public XMLInputStream(InputStream inchannel) { super(new byte[2]); this.inchannel = new DataInputStream(inchannel); } public void recive() throws IOException { int i = inchannel.readInt(); byte[] data = new byte[i]; inchannel.read(data, 0, i); this.buf = data; this.count = i; this.mark = 0; this.pos = 0; } } 4) public class XMLReceiver { public static Document receive(InputStream channel) throws ParserConfigurationException, TransformerConfigurationException, IOException, SAXException { DocumentBuilderFactory docBuilderFact = DocumentBuilderFactory.newInstance(); DocumentBuilder docBuilder = docBuilderFact.newDocumentBuilder(); Document request = null; XMLInputStream xmlin = new XMLInputStream(channel); xmlin.recive(); request = docBuilder.parse(xmlin); return request; } }
