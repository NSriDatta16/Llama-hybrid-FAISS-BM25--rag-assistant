[site]: stackoverflow
[post_id]: 2586018
[parent_id]: 
[tags]: 
Linq.Where-to-SQL on a text field comparing to a list of values

Customer.text is a field in an T-SQL DB (that I do not control and thus may not alter) of type "text". I'd like to do something like this: List compare = new List (); compare.Add("one"); compare.Add("two"); var q = from t in customer where t.text.Contains( compare.First()) select t; this will work. But now I'd like to do something like: (!NOT WORKING!) var q = from t in customer where compare.Contains( t.text ) select t; How can I achieve this? Is it even possible? EDIT: The problem is obviously not exactly clear: A text column in SQL cannot be queried using "=" but only with LIKE. Thus the compare.Contains( t.text ) will result in an error, as it is converted into a query using "=". What I did not tell - I thought it is irrelevant - is, that I use LINQ-to-ORM (LLBLGen in this case). What I tried instead: var q = from t in customer where compare.Any( x => t.text.Contains(x) ) select t; Now this did not work also. Currently I'm not at work, but the exception was something with a ConstantExpression not being convertable into a SetExpression. I hope this gave some clarification. EDIT2: Joseph pointed this out to me: PredicateBuilder . It creates an Expression on a given ObjectType. Now my problem is, that my type is an anonymous type out of multiple joins. Is there an easy or elegant way to handle this?
