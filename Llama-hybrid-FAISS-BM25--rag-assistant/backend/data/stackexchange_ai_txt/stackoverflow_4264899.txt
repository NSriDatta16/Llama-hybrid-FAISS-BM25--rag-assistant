[site]: stackoverflow
[post_id]: 4264899
[parent_id]: 3922985
[tags]: 
I had this problem too - i couldn't remove the element from the drop event, but i could do it form the sortables's stop event (which is fired last of all) . so here is a fixed version of the original snippet at the top. i've added start and stop events to the sortable, and a deleteMe flag which is passed around: deleteMe = false; // make the source item draggable j('.tools .person').draggable({ revert: "invalid", helper: "clone", start: function(event, ui) { deleteMe = false; } }); // the target drag n'drop area j('.dnd').droppable({ accept: ".tools > .person", revert: "invalid", activeClass: "active", drop: function( event, ui ) { //copy from source and make it replaceable by another one var obj = ui.draggable.clone().droppable({ hoverClass: "active", accept: ".tools .person" }); // in case of replace if( j(".dnd > .person.active").size() ) j(".dnd > .person.active").replaceWith( obj ); else // in case of new or limit reached if( (j(".dnd > .person.active").size() == 0) && (j(".dnd > .person").size() .person", hoverClass: "active", drop: function( event, ui ) { deleteMe = true; } }); // makes drag n'drop is sortable j(".dnd").sortable({ placeholder: 'empty' , stop: function(event, ui) { if (deleteMe) {ui.item.remove()} } }); //helpers j(".dnd").disableSelection();
