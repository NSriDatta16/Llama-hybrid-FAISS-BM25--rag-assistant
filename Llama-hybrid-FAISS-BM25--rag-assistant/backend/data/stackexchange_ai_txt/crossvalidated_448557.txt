[site]: crossvalidated
[post_id]: 448557
[parent_id]: 396505
[tags]: 
I think most of your questions are answered when you more rigorously specify your problem. So let's back up and define the basics... First, we need to define our target. It sounds like it's inactive , where inactive might be defined as "marked 'inactive' by the project owner", or "no activity in a year", or "no followers", or "0 contributors", or some combination of the above or something else entirely. Let's assume for now that inactive means that activity has been 0 for 12 months. ( activity may itself be an aggregation of underlying variables, of course, but let's treat it as a single time series variable.) Once we've firmed this up, you're correct that you don't need a model if you have the information you need about a project to see if it meets this definition or not. So if you decide that inactive means "no activity in the last year" and you have a projects activities for the last 12 months sitting in front of you, you don't need a model. (You might still want software to calculate this across many projects for you, but you don't need a model.) So now you need to define a decision and a decision point: the purpose for a model. At some point in time, you will have some information about a project, but not your target information ( activity and hence inactive ). Your model cannot use any information beyond what you expect to have at the decision point to make its prediction. In supervised training , you will have this information and the target, of course, but not at predict/score (i.e. decision ) time. So what is the decision point and what is the decision? Do you want to say, "For a project that is at least 12 months old, given the number of commits in the first 3 months, the current number of contributors, the current number of followers, and the number of forks over the last year, what is the probability that the project will be inactive a year from now?" You don't know what the activity will be for the next year so you need a model to predict. (Let's assume that activity is more than forks.) Or you could say, "For a project that is at least 12 months old, given the number of commits in the first 3 months, the current number of contributors, and the current number of followers -- but not knowing anything about the activity for the last 12 months -- what is the probability that the project is actually currently inactive ?" In this case, you're not talking about the future, so you could conceivably have activity information for the last 12 months but a model is only needed if you in general will not have that information at decision time. (Maybe activity stats are only updated at the end of the year, or maybe projects can hide activity but not the other variables.) Say you adopt the "no activity for the previous 12 months" definition of inactive and the first statement of your problem -- the one in the future -- as your goal. If you have, say, five years of commits, contributors, followers, forks, and overall activity (your target) you can easily write a program that chunks this information up per week and creates your target based on the previous 12 months. It will be trivial to calculate your target for the first four years, though you won't be able to calculate it for the last year. (Even hand-labeling can't do this, based on your definition of inactive . A human could guess that a project that's had no _activity` in 11 months will almost surely not have any for the next month, but that is itself a prediction.) CAN you hand-label data? Yes, if you have the information and expertise to do so. Can you use semi-supervised learning? Yes, but it's tricky and may make things worse. Do you have to address that in your current problem? It doesn't look like it.
