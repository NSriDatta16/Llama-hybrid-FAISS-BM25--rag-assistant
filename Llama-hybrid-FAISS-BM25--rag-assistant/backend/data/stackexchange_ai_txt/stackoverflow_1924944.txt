[site]: stackoverflow
[post_id]: 1924944
[parent_id]: 1924732
[tags]: 
As you noticed, in Rails 2.1 a new kind of eager/pre-loading was introduced which uses multiple queries with id IN (...) . This method is usually faster, especially when there are multiple associations being pre-loaded. You can use this functionality manually with find_by_sql by using the preload_associations class method inherited from ActiveRecord (not recommended). For example: class Person def self.find_a_special_group people = find_by_sql("...") preload_associations(people, [:jobs, :addresses]) return people end end The preload_associations method is protected, so you must call it from within the class, and it takes (1) an array of objects, (2) an array, hash, or symbol of associations (same format as find 's :include option), and (3) an options hash. See the documentation for the ActiveRecord::AssociationPreload::ClassMethods module for more details. However, having said all of that, this technique is certainly undesirable as the Rails documentation discourages programmers from using preload_associations directly. Are you sure you have to use find_by_sql ? Are you sure you know all of the options find takes? ( :select , :from , :joins , :group , :having , etc) I'm not saying you don't need find_by_sql , but it might be worth a few minutes to make sure.
