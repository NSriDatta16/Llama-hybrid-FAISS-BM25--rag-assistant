[site]: stackoverflow
[post_id]: 247531
[parent_id]: 244601
[tags]: 
I finally came up with a super-elegant way to do this in about 5 lines of code, based on the fact that the simple YAML looks a lot like Markdown . We're starting off with this: --- all: foo: 1025 bar: baz: 37628 quux: a: 179 b: 7 Use regexps (in this case, in Perl) to remove the starting --- , and put hyphens before the key on each line: $data =~ s/^---\n//s; $data =~ s/^(\s*)(\S.*)$/$1- $2/gm; Voila, Markdown: - all: - foo: 1025 - bar: - baz: 37628 - quux: - a: 179 - b: 7 Now, just run it through a Markdown processor: use Text::Markdown qw( markdown ); print markdown($data); And you get an HTML list -- clean, semantic, backwards-compatible: all: foo: 1025 bar: baz: 37628 quux: a: 179 b: 7 YUI Treeview can enhance existing lists, so we wrap it all up: all: foo: 1025 bar: baz: 37628 quux: a: 179 b: 7 var treeInit = function() { var tree = new YAHOO.widget.TreeView("markup"); tree.render(); }; YAHOO.util.Event.onDOMReady(treeInit); So this all works out to about 5 lines of code (turn YAML into Markdown, turn Markdown into an HTML list, and place that HTML list inside a template HTML file. The generated HTML's progressively-enhanced / degradable, since it's fully viewable on non-JavaScript browsers as a plain old list.
