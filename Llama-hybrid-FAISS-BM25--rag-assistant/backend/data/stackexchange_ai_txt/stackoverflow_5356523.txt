[site]: stackoverflow
[post_id]: 5356523
[parent_id]: 
[tags]: 
Use Maven to build complex Flex project

I'm currently looking into replacing our very proprietary build environment with Maven. The current solution is an inhouse development for the central build, and for easier local development I compile inside the Eclipse/Flex IDE and have an ANT script which copies everything together to my local Apache directory (i.e. my ant file does not do the full build and also relies on having all projects locally available). We're using Eclipse 3.6.1 (Helios) with Flash Builder Plugin (i.e. Flex4), targetting Flex SDK 3.5 (FlashPlayer 10.0) with quite some projects both .swc library projects and .swf modules to be loaded at runtime including resources for each. We also use external linking / runtime shared libraries (with one big sharedlibraries.swf having everything inside, i.e. no need to have the .swc files in the deployment). I've installed Maven 3.0.2, using Sonatypes flexmojos-maven-plugin 3.7.1 (as it seems more active than the one from Servebox). I've manually created pom files for each Eclipse project, to make sure that everything works and also the Eclipse-Maven integration seems to lack Flex support. I've defined appropriate compiler and dependency parameters so that all individual projects compile correctly - i.e. the resulting .swf files do produce a working version of our application. I've also read the " Maven by Example " book from Sonatype and looked at their " Maven: The Complete Reference ", while doing lots of googling in parallel. What I'm struggling with is the final assembly of my project, as well as with additional artifacts (stylesheets). I don't fully understand "the Maven way" and also suspect that Maven is tailored heavily for Java, thus leaving me a bit in the wild with my Flex projects. Basic structure of my projects: external libraries: I've added those with install:install-file to my repository, no issue here own library projects: they each produce one .swc artifact which can be consumed in other projects, with Maven dependency handling working correctly, no issue here own swf module projects: our application loads swf files at runtime which in turn have some additional resources they need (stylesheet.swf files, localized strings as individual .xlf files, config files, etc). It's those I'm struggling with. Layout of my swf projects: bin-debug/ used by IDE builds, not used / ignored by Maven build src/ the Flex sources (.as and .mxml files) target/ Maven target directory WebContent/ a directory with suplementary files which needs to be copied to the destination artifact (directory or zip file) verbatim, alongside the .swf artifact styles/ Flex .css files which needs to be compiled into .swf stylesheet files, those are additional artifacts (one for each .css, for different themes) to the main project swf and the WebContent/ content I'm using a flat hierarchy to work in Eclipse, i.e. my master pom file is placed in a folder which is a sibling to all projects folders. Example: project_swf/src/... project_swf/WebContent/assets/labels.xlf project_swf/WebContent/config/config.xml project_swf/pom.xml lib_swc/src/... lib_swc/pom.xml master_build/pom.xml master_build/swf-assembly.xml I've managed to create a 'master build' building all my swc and swf projects using this master pom : 4.0.0 Dragon Master Build This project can be used to build and package the client application de.zefiro.maven.example local_dev_mvn external de.zefiro.maven.example full_build 1.0-SNAPSHOT pom src/ org.sonatype.flexmojos flexmojos-maven-plugin 3.7.1 true com.adobe.flex compiler 3.5.0.12683 pom 10.0.0 false false en_US true true true true true ZEFIRO::META_INFO "buildno=${zefiro.plugin.buildno}" com.adobe.flex.framework flex-framework 3.5.0.12683 pom com.adobe.flex.framework playerglobal com.adobe.flex.framework playerglobal 3.5.0.12683 10 swc [... some more dependencies needed by all projects ...] ../lib_swc ../project_swf [... calls all my projects ...] I can then compile my swc library projects with this simple POM: 4.0.0 de.zefiro.maven.example full_build 1.0-SNAPSHOT ../master_build Sample library project lib_swc swc ${group-id} some_other_library ${project.version} swc And my swf projects with this POM: 4.0.0 de.zefiro.maven.example full_build 1.0-SNAPSHOT ../master_build Sample SWF module project_swf swf SampleProjectModule1 org.sonatype.flexmojos flexmojos-maven-plugin 3.7.1 project_swf_master_file.as maven-assembly-plugin ../master_build/swf-assembly.xml WebContent-packaging package single ${group-id} project_swc ${project.version} ${zefiro.swf.scope} swc [...] It is my understanding that each POM file generates one target file (specified with the packaging tag) and that when using the Flex mojo this needs to be of format swf or swc. I seem to be unable to specifiy multiple targets here and also struggled to get my resource files included (Flex copy-resources copies the html wrapper which I don't need (for each project), the normal resource tag copies the resources, but don't packages them). What is now my current working version is to specify an own assembly descriptor which bundles my target .swf file together with the WebContent/ folder into a zip file. Maven has support for jar/war/bin files, but those seem to expect certain conditions to be true, which don't apply for my Flex projects (e.g. I don't have a web.xml) swf-assembly.xml: WebContent zip false ${project.build.directory} / *.swf FCPContent / Now I've got the target directory with both the .swf file alone and a zip file containing my .swf file together with my WebContent/ resources. It's also placed in the Nexus repository upon calling 'mvn install', so this looks like a good step forward. Though I'm happy to do it completely different if that's better, as my final goal is to have a single directory (or zip/war file containing it) with some static files in it (our html wrapper and loader swf + configuration.xml), and for each of our swf projects (modules we load at runtime) a directory containing the .swf files and the WebContent/ resources - i.e. the contents of the zip files I'm now able to create for each project. index.html loader.swf config.xml project_swf/SampleProjectModule1.swf project_swf/assets/labels.xlf project_swf/config/config.xml project2_swf/module2.swf project2_swf/cool_colors_stylesheet.swf So my question would be: how do define such a Maven master project which creates the final assembly in this format? If there's no other way, a working ANT file might be acceptable, though I've read that it Maven urges us to stay away from those hacks :) I also need to compile stylesheet files which are then additional artifacts for the swf projects. I'll post a separate question for this.
