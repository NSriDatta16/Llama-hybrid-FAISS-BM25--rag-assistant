[site]: stackoverflow
[post_id]: 3811978
[parent_id]: 3811728
[tags]: 
This is a followup to @Ronald Wildenberg's answer: I'm not sure whether all javac implementations implement tail recursion. It is not something that is required by the specification. The short answer is that they don't support it. The longer answer is that tail recursion optimization is a tricky problem in Java because of the JVM design. Read this blog entry by John Rose @ Oracle where he talks about this problem. The main thrust of the blog entry is a proposal for a bytecode extension to support "hard" tail calls. But the last paragraph hints as why implementing "soft" (i.e. transparent) tail calls is hard. Tail call optimization interferes with the JVM's ability to capture a stack trace, and that has "implications" for the Java security architecture. This Sun Bug Database Entry gives more details on the problem. Read the comments as well. It seems that the way to implement tail recursion on the current JVM is to implement it in the compiler front-end. Apparently Scala does this.
