[site]: stackoverflow
[post_id]: 3724649
[parent_id]: 3724584
[tags]: 
There are pretty much possibilities I think, but the most common methods are storing as plain text in files like .csv, .ini, .xml. With little tricks you can protect these files, so that no one can load the files directly. an INI-File example: ; [config1] var1 = 'value1'; var2 = 'value2'; ... [config2] ... The ; is considered a comment in ini files. So when you read in the file with an ini-parser, this line will be ignored. If someone accesses the file directly via url the die() -function will be executed. This works only, if the INI-file wears a file-extension like .php so that the server knows that this should be executed and not diplayed as plain text. Possible disadvantage of most file-base-config-storages are problems with some utf8-characters. Zend_Config is a component of the Zend-Framework, which provides possibilities for several storage-adapters with an easy to use api.
