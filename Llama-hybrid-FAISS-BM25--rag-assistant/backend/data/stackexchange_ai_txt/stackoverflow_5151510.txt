[site]: stackoverflow
[post_id]: 5151510
[parent_id]: 
[tags]: 
How to optimize this query in SQL Server, as it is consuming more time to execute

SELECT A.RegTimePartnerID AS OrganiationID, P.PartnerName AS OrganiationName, PUIDCount AS IndividualsTrained_count, EventCount AS TrainingActivities_count, SalesCount AS Salestraining_Count, TechCount AS Technicaltraining_count, CASE WHEN OnDemandCount = 0 THEN 100 ELSE (Onlinecount*100/OnDemandCount) END AS LivevsOndemand FROM dbo.Partner P INNER JOIN (SELECT RegTimePartnerID, COUNT(distinct UniqueID) AS PUIDCount FROM dbo.DenormTrainingActivity(NOLOCK) GROUP BY RegTimePartnerID) A ON P.PartnerID = A.RegTimePartnerID AND P.PartnerID <> 0 INNER JOIN (SELECT RegTimePartnerID, COUNT(distinct EventID) AS EventCount FROM dbo.DenormTrainingActivity(NOLOCK) GROUP BY RegTimePartnerID) B ON A.RegTimePartnerID = B.RegTimePartnerID INNER JOIN (SELECT RegTimePartnerID, COUNT(distinct EventID) AS SalesCount FROM dbo.DenormTrainingActivity(NOLOCK) WHERE CourseTypeid = 10 GROUP BY RegTimePartnerID) C ON A.RegTimePartnerID = C.RegTimePartnerID INNER JOIN (SELECT RegTimePartnerID, COUNT(distinct EventID) As TechCount FROM dbo.DenormTrainingActivity(NOLOCK) WHERE CourseTypeid = 20 GROUP BY RegTimePartnerID) D ON A.RegTimePartnerID = D.RegTimePartnerID INNER JOIN (SELECT RegTimePartnerID ,COUNT(distinct EventID) AS Onlinecount FROM dbo.DenormTrainingActivity(NOLOCK) WHERE EventCategory IN ('Live-ILT', 'Live-Online') GROUP BY RegTimePartnerID) E ON A.RegTimePartnerID = E.RegTimePartnerID INNER JOIN (SELECT RegTimePartnerID, COUNT(distinct EventID) AS OnDemandCount FROM dbo.DenormTrainingActivity(NOLOCK) WHERE EventCategory NOT IN ('Live-ILT', 'Live-Online') GROUP BY RegTimePartnerID) F ON A.RegTimePartnerID = F.RegTimePartnerID
