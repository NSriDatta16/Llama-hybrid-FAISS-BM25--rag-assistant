[site]: stackoverflow
[post_id]: 4846251
[parent_id]: 4845932
[tags]: 
try is fast enough, except (if it happens) may not be. If the average length of those lists is going to be 1.1, use the check-first method. If it's going to be in the thousands, use try/except. If you are really worried, benchmark the alternatives. Ensure that you are benchmarking the best alternatives. d.has_key(k) is a slow old has_been; you don't need the attribute lookup and the function call. Use k in d instead. Also use else to save a wasted append on the first trip: Instead of: if not somedict.has_key(key): somedict[key] = [] somedict[key].append(value) do this: if key in somedict: somedict[key].append(value) else: somedict[key] = [value]
