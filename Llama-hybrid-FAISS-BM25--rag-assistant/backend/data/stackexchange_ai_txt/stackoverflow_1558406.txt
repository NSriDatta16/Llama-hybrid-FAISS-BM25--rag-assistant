[site]: stackoverflow
[post_id]: 1558406
[parent_id]: 
[tags]: 
How to organize Django project with abstract models

I have a few models: 'Article, Video, BlogPost, News, Commodity'. Each are in their own application. They all are basically the same models with a few extra fields on each. But each share about 15 fields. I'm using an abstract base class . I'm trying to figure out how I should do organization for this. My current setup is like this: apps/ abstract_models.py abstract_templatetags.py abstract_forms.py articles/ models.py ... videos/ models.py ... blogs/ ... While I know this isnt a good way, I'm just not sure where to put all the information that is shared. I've been doing like this, then per app just subclassing the Form or the Model and making the local modifications. Since they are just a small amount of changes vs the whole picture I think that abstract class is the way to go, but I may be wrong. They share so much structure, but for obvious reasons I would like to keep them separate apps. But I would like to clean it up a bit. Any thoughts would be greatly appreciated.
