[site]: stackoverflow
[post_id]: 1252199
[parent_id]: 
[tags]: 
Can I use XamlReader.Load or InitializeFromXaml from a WPF Window, for the Window definition?

I want to produce some library code that will be included into WPF applications. The library may pop up a Window, depending on circumstances. I can define the Window in XAML, but I'd like to treat the XAML as a template. At runtime, at the time the Window is being created so that it can be displayed, I want to replace certain tags in the Xaml template with runtime-defined values. What I want to do is something like this: public partial class DynamicXamlWindow : Window { Button btnUpdate = null; public DynamicXamlWindow() { string s = XamlTemplate; // replace some things in the XamlTemplate here Window root = System.Windows.Markup.XamlReader.Load(...); Object _root = this.InitializeFromXaml(new StringReader(s).ReadToEnd()); //?? btnUpdate = // ??? //InitializeComponent(); } The XamlTemplate string looks like this: private string XamlTemplate = @" ... I've seen examples where a button or a section is defined in XAML and loaded dynamically. But this is not a button or section. The XamlTemplate provides the XAML for the actual Window. Is this possible either with InitializeFromXaml or XamlReader.Load ? If so, how? Can I then retrieve the controls defined in the XAML, for example btnUpdate in the code fragment above. How?
