[site]: stackoverflow
[post_id]: 5049783
[parent_id]: 5038863
[tags]: 
The compiler is not required to inline code (even if explicitly marked inline ), and optimisers vary in sophistication and strategy. So this is really a question for your compiler vendor (consulting the documentation may also help). If the function is particularly large, the compiler may have made the decision that the avoidance of a function call overhead was insignificant in the overall scheme. Your compiler may have a _force_inline keyword or similar, which would be regarded and a directive rather than a suggestion (as inline typically is on most compilers). One possible argument for not in-lining, is to maintain deterministic performance under maintenance. If a later second reference caused it to no longer be in-lined, your code execution speed may change in ways that would be detrimental to your application's performance requirements, while remaining in-lined might significantly impact code size. [edit] Reading the documentation , on your compiler the directive #pragma inline=forced is required immediately before the function definition, otherwise in-lining is dependent upon the optimisers heuristics. Even when forced, in-lining will not occur at low or no optimisation.
