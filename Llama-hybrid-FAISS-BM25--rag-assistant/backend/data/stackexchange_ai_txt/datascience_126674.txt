[site]: datascience
[post_id]: 126674
[parent_id]: 126672
[tags]: 
without methods of time-series decomposition (ie. Seasonal-Trend decomposition ) and Visual inspection of plots: Autocorrelation Function (ACF) or Partial Autocorrelation Function (PACF) . (Large) spikes at specific lags could indicate seasonality . from statsmodels.tsa.stattools import acf, pacf 2. Another statistical method is the Ljung-Box test . The Ljung-Box test is a test for the null hypothesis ( $H_0$ ) that the residuals of a time series are independently distributed. If the test indicates a lack of independence, it suggests that there might be some structure or seasonality in the residuals. from statsmodels.stats.diagnostic import acorr_ljungbox Please note that these methods are not 100% proof, and the choice of method depends on the characteristics of your time series data. Visual inspection of plots and domain knowledge should still be considered to validate and interpret the results. Full-code to reproduce: import numpy as np import pandas as pd import matplotlib.pyplot as plt from statsmodels.tsa.stattools import acf, pacf from statsmodels.stats.diagnostic import acorr_ljungbox # Generate a seasonal time series np.random.seed(42) timesteps = 100 seasonal_period = 10 time = np.arange(timesteps) seasonal_component = np.sin(2 * np.pi * time / seasonal_period) noise = np.random.normal(scale=0.2, size=timesteps) time_series = seasonal_component + noise # Plot the generated time series with added seasonality plt.figure(figsize=(10, 4)) plt.plot(time, time_series, label='Generated Time Series with Seasonality') plt.plot(time, seasonal_component, label='Seasonality Component', linestyle='--', color='red', alpha=0.7) plt.title('Generated Time Series with Seasonality') plt.xlabel('Time') plt.ylabel('Value') plt.legend() plt.show() # ACF and PACF analysis lag_acf = acf(time_series, nlags=20) lag_pacf = pacf(time_series, nlags=20) # Ljung-Box test lb_test_stat, lb_p_value = acorr_ljungbox(time_series, lags=20) # Chosen significance level significance_level = 0.05 # Plot ACF and PACF plt.figure(figsize=(12, 6)) # ACF plot plt.subplot(121) plt.stem(lag_acf) plt.axhline(y=0, linestyle='--', color='gray') plt.title('Autocorrelation Function (ACF)') # PACF plot plt.subplot(122) plt.stem(lag_pacf) plt.axhline(y=0, linestyle='--', color='gray') plt.title('Partial Autocorrelation Function (PACF)') plt.show() # Print Ljung-Box test results print("Ljung-Box Test Statistic:", lb_test_stat[0]) print("P-value:", lb_p_value[0]) print("Chosen Significance Level:", significance_level) ```
