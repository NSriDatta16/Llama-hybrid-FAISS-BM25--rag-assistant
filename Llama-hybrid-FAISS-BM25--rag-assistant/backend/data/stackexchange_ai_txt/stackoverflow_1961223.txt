[site]: stackoverflow
[post_id]: 1961223
[parent_id]: 1961191
[tags]: 
Ok, if all that AWS stuff isn't going to work, here are a couple of thoughts. As far as (3), if you put binary data into a database, the same data is going to come out. What makes it a jpeg is the format of the data, not what the database thinks it is. What makes the client (web browser) think its a jpeg is when you set the Content-type header to image/jpeg . You could also set it to something else (not recommended) like text and that's how the browser would try to interpret it. For on-disk storage, I like CouchDB for its simplicity, but HDFS would certainly work. Here's a link to a post about serving image content from CouchDB: http://japhr.blogspot.com/2009/04/render-couchdb-images-via-sinatra.html Edit: here's a link to a useful discussion about caching images in memcached vs serving them from disk under linux/apache.
