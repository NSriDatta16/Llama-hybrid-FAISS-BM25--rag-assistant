[site]: crossvalidated
[post_id]: 363625
[parent_id]: 363401
[tags]: 
Why are you using polynomial fitting ? That is not a standard approach, and even if you were to use it, fitting a 1st order polynomial doesn't makes sense because it amounts to a linear regression against time. You should probably be looking at standard forecasting techniques such as ARIMA or Exponential Smoothing. If you have your heart set on fitting polynomials, than you should use STL() or Facebook Prophet, instead of trying to fit them manually. In response to the comment about why fitting polynomials doesn't make sense: Naively fitting polynomials to time series data doesn't work because a polynomial can be fit to the seasonal patterns and cycles in the training data but won't extrapolate well (or at all) to the data outside of the training set. A trivial example: Imagine we have a seasonal sales pattern which looks more or less like a sine wave. You could reasonably approximate it with a suitably chosen polynomial function - but that function would diverge completely outside of the time frame that it was fitted to (See attached picture - I drew it by hand as I don't have my laptop to plot it properly using R). Methods like Facebook Prophet and STL() do perform curve fitting (and STL uses polynomials) but they do it in an "informed" way that preserves the structure of the series, as opposed to a direct polynomial or curve fitting exercise.
