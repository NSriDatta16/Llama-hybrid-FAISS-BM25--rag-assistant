[site]: stackoverflow
[post_id]: 2980955
[parent_id]: 2980848
[tags]: 
Ok - so here is an attempt to answer my own question: Thanks again Mark for the console code. That led me to this: You should use the String.new() method to create a plain string from the crypted one for external storage: I think this is kinda strange and a little dangerous, namely that when a string is encrypted, the default behaviour is to include the password in the string. Loading development environment (Rails 2.3.8) >> secret = '123' => "123" >> require 'encrypted_strings' => [] >> crypted = secret.encrypt(:symmetric, :password => "password") => "R5RVA511Nzw=\n" >> crypted.instance_variables => ["@cipher"] >> crypted.instance_variable_get("@cipher") => # // note that this .to_s only passes back the crypted, since crypted _is_ a string. >> someString = crypted.to_s => "R5RVA511Nzw=\n" >> someString.instance_variables => ["@cipher"] >> crypted.instance_variable_get("@cipher") => # >> plainString = String.new(crypted) => "R5RVA511Nzw=\n" >> plainString.instance_variables => [] >> crypted.class => String >> plainString.decrypt ArgumentError: Cipher cannot be inferred: must specify it as an argument from /Library/Ruby/Gems/1.8/gems/encrypted_strings-0.3.3/lib/encrypted_strings/extensions/string.rb:98:in `decrypt' from (irb):14 >> plainString.decrypt(:symmetric, :password => "password") => "123"
