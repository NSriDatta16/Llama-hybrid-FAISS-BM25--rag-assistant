[site]: stackoverflow
[post_id]: 4695352
[parent_id]: 4695274
[tags]: 
A queue is often used to save a group of data in an organized structure so that it is easily accessed immediately when needed since its a FIFO (First in first out). However; when filling information into that queue when that queue is FULL the rest of the information is lost. To combat this the circular queue is used, which overwrites the other elements so that recent data is NOT lost. An example of this like you mentioned would be the queue of resources of a computer. Because a computer does not have infinite resources a queue has to be used in order to allocate resources to those that need it. For instance a process would request some resources and it would be thrown into the queue and be given a priority level, based on this information the OS would then make a decision how much resources it needs and how much time it will be given. In order to allow multiple processes to make use of this, any process that has processing that needs to be done will put in a request in that queue. A linked list has many applications that its not really possible to simplify it into one one. For instance, you could link accounts (objects) through the queue of the nodes of a element in the linked list. In a linked list, a node has a previous and a next node. Which effectively links all the elements together so that they can be traversed. Depending on the style of the linked list, which allows forward traversal, backward traversal, or both directions. One thing to note is that a linked list can be dynamic in terms of size since all that needs to be done to add a new note is just attach it to the end of the list. However; in terms of performance the speed of that would be O(N) which means that the performance is heavily dependent on the size of the list. I hope this helps.
