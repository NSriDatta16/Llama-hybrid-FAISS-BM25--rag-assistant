[site]: stackoverflow
[post_id]: 3346700
[parent_id]: 3346594
[tags]: 
Yikes. One options is to simply use a Map or similar property holder. Another option: use a series of nested classes, to add organization (e.g. Order.Person.ContactInfo.Address.ZipCode, rather then just Order.ZipCode). I'm not at all sure I like this one, as it means additional complexity, but without it, finding the particular getter/setter you want (say via autocompletion in an IDE) becomes a nightmare. Yet another option: if you do create a single class with many properties, consider using the "expression builder" pattern, in which each "setter" returns the object itself, enabling you to chain setters together: myObject.setPropertyA("Foo").setPropertyB("Bar").setPropertyC("Baz")... which can create a quicker and more fluent interface then myObject.setPropertyA("Foo"); myObject.setPropertyB("Bar"); myObject.setPropertyC("Baz"); ...
