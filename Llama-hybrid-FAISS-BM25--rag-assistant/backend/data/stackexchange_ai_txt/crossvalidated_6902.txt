[site]: crossvalidated
[post_id]: 6902
[parent_id]: 1595
[tags]: 
I haven't seen the scikit-learn explicitly mentioned in the answers above. It's a Python package for machine learning in Python. It's fairly young but growing extremely rapidly (disclaimer: I am a scikit-learn developer). It's goals are to provide standard machine learning algorithmic tools in a unified interface with a focus on speed, and usability. As far as I know, you cannot find anything similar in Matlab. It's strong points are: A detailed documentation , with many examples High quality standard supervised learning (regression/classification) tools. Specifically: very versatile SVM (based on libsvm, but with integration of external patches, and a lot of work on the Python binding) penalized linear models ( Lasso , sparse logistic regression ...) with efficient implementations. The ability to perform model selection by cross-validation using multiple CPUs Unsupervised learning to explore the data or do a first dimensionality reduction, that can easily be chained to supervised learning. Open source, BSD licensed. If you are not in a purely academic environment (I am in what would be a national lab in the state) this matters a lot as Matlab costs are then very high, and you might be thinking of deriving products from your work. Matlab is a great tool, but in my own work, scipy+scikit-learn is starting to give me an edge on Matlab because Python does a better job with memory due to its view mechanism (and I have big data), and because the scikit-learn enables me to very easily compare different approaches.
