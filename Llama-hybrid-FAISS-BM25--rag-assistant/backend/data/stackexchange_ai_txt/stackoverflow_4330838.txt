[site]: stackoverflow
[post_id]: 4330838
[parent_id]: 4330565
[tags]: 
Well, I can only offer you a dumb suggestion at this point - begin a query in a separate thread that will go through the entire database and create your 8000-row cursor. In your UI thread, create a cursor where you set the limit to 100 or so, and use that for your adapter. If the user scrolls to the bottom of your list, you could add a row with a ProgressBar or indicate otherwise that there's more to come. Once your second thread is done, replace the adapter. Alternatively, you could have an array adapter or something similar, do a bunch of queries in the second thread with 100 rows each, and add them to your array adapter as they come in. That would also make it easier to add a dummy row at the bottom that tells users to hold their horses. One note - I would assume it's safe to read from the database from two threads at the same time, but be careful when it comes to writing. My app had a wonderful bug where it trashed the database when I had database operations in a separate thread until I added proper locking (which you can also enable in the database). EDIT: Of course, AsyncQueryHandler, I knew there was something like that, but I couldn't remember the name. More elegant than a separate thread, of course. Btw - how are you storing the database? Is it just a regular database file in your internal storage?
