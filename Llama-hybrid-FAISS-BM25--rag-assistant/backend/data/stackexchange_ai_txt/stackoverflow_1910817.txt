[site]: stackoverflow
[post_id]: 1910817
[parent_id]: 1909087
[tags]: 
Back should reverse the navigation done by a link, and nothing else. The user ties Back and links with navigation so going from linking to Backing is natural for them, as long as all links look like links to the user. Specifically, the only good solution I see is for Back to take the user back an entire page in the browser. In other words, treat Back like it’s Close or Cancel (or just clicking on another window) in a thick-client app. This is consistent with my first paragraph, because users generally expect links to navigate an entire page. Therefore, Back should too. You can’t have Back reverse every little input in a rich app because that will be very tedious when what the user wants to do is look at a page they were just on. Worse, it would imply the user has to undo all their work setting up a current page (maybe even entering input into text boxes and combo boxes) in order to see a previously seen page. You can’t have Back revert some arbitrarily large change within a page (e.g., a tab selection) because that change is, well, arbitrary. The users won’t be able to predict when to use Back. They’ll be afraid to because it might revert much more than they wanted. What web apps need is not a redefinition of Back or History, but an entirely independent Undo function, complete with its own Undo buffer, in order to deal with user input within a page. I’ve all the gory details at http://www.zuschlogin.com/?p=41
