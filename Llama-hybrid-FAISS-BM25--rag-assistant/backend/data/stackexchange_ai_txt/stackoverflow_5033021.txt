[site]: stackoverflow
[post_id]: 5033021
[parent_id]: 3348022
[tags]: 
Lots of comments here, nobody has much understanding of MarkLogic Server XML Databases, and how powerful XML can be as a storage format when multiple types of indexes are applied (element, value, attribute, xml structure, xml node order, word, phrase indexes) MarkLogic can store/index billions of XML documents and allow sub-second searching across all of them, complex SUM COUNT MIN MAX operations, etc. I've used relational XML files with C#.NET LINQ-to-XML to achieve what the original poster wants to achieve. (No MarkLogic at this point, just plain XML files and C# LINQ code that joins them together to achieve whatever type of search I'm looking for) You may have an XML file for contacts: You may also want to join this to another XML file for companies: Here is some sample C#.NET LINQ-to-XML syntax to achieve doing a LEFT OUTER JOIN between these two files: using System.Xml.Linq.XDocument XDocument xDocContacts = XDocument.Load("contacts.xml"); XDocument xDocCompanies = XDocument.Load("companies.xml"); var results = from ct in xDocContacts.Root.Element("contacts").Elements("contact") join cp in xDocCompanies.Root.Element("companies").Elements("company") on ct.Attribute("companyid").Value.ToString() equals cp.Attribute("id").Value.ToString() into joined select joined.DefaultIfEmpty(); foreach (var item in joinedResults) { } I've used this with XML files of 90MB joining with smaller XML files of 4-5MB, and can perform complex searches with multiple WHERE conditions in the 2-3 sec range.
