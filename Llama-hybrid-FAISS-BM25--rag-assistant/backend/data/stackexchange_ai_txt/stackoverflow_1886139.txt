[site]: stackoverflow
[post_id]: 1886139
[parent_id]: 1856411
[tags]: 
Okay, what about this: -In your custom UIView subclass, add a pointer to your UIWebView -Add an ivar to the UIView subclass, BOOL hasMoved; -In the UIView subclass, override the touch methods like this: -(void) touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { hasMoved = NO; [webView touchesBegan:touches withEvent:event]; } -(void) touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event { hasMoved = YES; [webView touchesMoved:touches withEvent:event]; } -(void) touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event { if(!hasMoved) [self hideToolbar]; [webView touchesEnded:touches withEvent:event]; } And then put the custom view on top of the web view. Seems too simple, and it probably is -- some magic may be required to handle multiple touches correctly, and you may need to use a NSTimer in the touchesBegan: method to as delay to handle double tap situations, but I think the general idea is sound...perhaps?
