[site]: stackoverflow
[post_id]: 3450577
[parent_id]: 3450352
[tags]: 
As Robert H mentions in the comments, you may get better mileage out of String.Replace() than you do with Regex. What I would do, though, with regex (if you really need it) is split them into three different statements so that you're calling Regex.Replace(yourString, [patern for A=], "page/"); Regex.Replace(yourString, [patern for B=], "/"); Regex.Replace(yourString, [patern for C=], "true"); If you want to be really clear on what you're doing, call Regex.Match() for each pattern first to verify the pattern exists in your input. Then, if it's missing, you can just skip that replace. Thus, this should work for you: Note: no error checking done, use "as-is" at own risk string input = "A=xxx&B=yyy&C=1"; string input2 = "A=xxx&B=yyy"; if(Regex.Match(input, "A=").Success) input = Regex.Replace(input, "A=", "page/"); if(Regex.Match(input,@"\&B=").Success) input = Regex.Replace(input, @"\&B=", "/"); if(Regex.Match(input,@"\&C=1").Success) input = Regex.Replace(input, @"\&C=1", "/true"); if(Regex.Match(input2, "A=").Success) input2 = Regex.Replace(input2, "A=", "page/"); if(Regex.Match(input2,@"\&B=").Success) input2 = Regex.Replace(input2, @"\&B=", "/"); if(Regex.Match(input2,@"\&C=1").Success) input2 = Regex.Replace(input2, @"\&C=1", "/true"); Console.WriteLine(input); //Output = page/xxx/yyy/true Console.WriteLine(input2); //Output = page/xxx/yyy
