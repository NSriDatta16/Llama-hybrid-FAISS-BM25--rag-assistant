[site]: stackoverflow
[post_id]: 4109190
[parent_id]: 4109106
[tags]: 
David, The Entity Framework has the ability to use inheritance. This is good overview of inheritance in the Entity Framework . You can use POCO with EF to create your own interfaces to provide access to the data. The situation you are describing isn't really multiple inheritance, as you have one base table/entity and to derived tables/entities. To model this in EF, you create a base entity, then create each child entity. At this point, you can map child entity propreties of each type to the correct table. With that said, your insert/update/delete logic is going to get very complex. The Entity Framework might run into issues with a complex model. The question that I would have is, why are you doing this? If it is to share common data between types, I would recommend creating Views on the server that join the parent table with the child tables. It will be much faster, and you can handle CUD (create/update/delete) operations with an instead of trigger which will make for easier SQL, as there is a clear split between data access and data storage. Does this make sense? Erick
