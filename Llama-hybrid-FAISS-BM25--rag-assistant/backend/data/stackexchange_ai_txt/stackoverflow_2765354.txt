[site]: stackoverflow
[post_id]: 2765354
[parent_id]: 3021
[tags]: 
hey, sorry if my opinion agrees with someone, I'm just trying to explain recursion in plain english. suppose you have three managers - Jack, John and Morgan. Jack manages 2 programmers, John - 3, and Morgan - 5. you are going to give every manager 300$ and want to know what would it cost. The answer is obvious - but what if 2 of Morgan-s employees are also managers? HERE comes the recursion. you start from the top of the hierarchy. the summery cost is 0$. you start with Jack, Then check if he has any managers as employees. if you find any of them are, check if they have any managers as employees and so on. Add 300$ to the summery cost every time you find a manager. when you are finished with Jack, go to John, his employees and then to Morgan. You'll never know, how much cycles will you go before getting an answer, though you know how many managers you have and how many Budget can you spend. Recursion is a tree, with branches and leaves, called parents and children respectively. When you use a recursion algorithm, you more or less consciously are building a tree from the data.
