[site]: stackoverflow
[post_id]: 4430707
[parent_id]: 
[tags]: 
Trying to select script tags from a jQuery ajax get response

I'm on page A. A link is clicked, and I'm loading in the DOM via jQuery get from page B. Inside page B's DOM are multiple dynamically-generated script tags with the class "dataScript" along with a bunch of other script tags that I don't want anything to do with. The only thing I want from that DOM are the .dataScript tags, which I then want to insert into a div with an ID of "scriptOutput" into the DOM of page A. This won't work if the element with the class of "dataScript" is a script tag. Only if it's some other tag, such as a "div" tag. Here's an example of what I'm trying to do: Page A: Page A jQuery(function() { $("#ajaxJsLink").click(function() { $.get("pageB.html", function(data) { var scriptElements = $(data).find(".dataScript").contents(); console.log(scriptElements); $(scriptElements).each(function(index) { $("#scriptOutput").append($(this).html()); }); }); return false; }); $("#ajaxDivsLink").click(function() { $.get("pageB.html", function(data) { var scriptElements = $(data).find(".dataDiv").contents(); console.log(scriptElements); $(scriptElements).each(function(index) { $("#divOutput").append($(this).html()); }); }); return false; }); }); This is page A. Get JavaScript from Page B. Get Divs from Page B. Script Output Div Output Page B: Page B This is page B. function someFunction() { alert("I am"); } function anotherFunction() { alert("Javascript"); } function someFunction() { alert("I am"); } function anotherFunction() { alert("Html"); } I've tried appending .contents(), .html(), and .text() for the .dataScript content, but nothing seems to work. Thanks for your consideration in looking at/answering my questions. I appreciate your help! UPDATE: In case anyone else is trying to do this, here is the less-than-elegant but fully-functional solution I ended up with: Output javascript as regular text (no script tags) inside one div (with an ID and set to display:none) on Page B. Then on Page A, do the following inside the callback function of the get request: var docHead = document.getElementsByTagName("head")[0]; //head of Page A var newScript = document.createElement("script"); newScript.setAttribute("type","text/javascript"); newScript.innerHTML = jQuery(data).find("#divWithPlainTextJs").text(); //insert plain text JS into script element docHead.appendChild(newScript); //append script element to head of Page A jQuery("#divWithPlainTextJs").remove(); //remove the plain text div and JS from the DOM Thanks to Emmett for reminding me of the document.createElement method.
