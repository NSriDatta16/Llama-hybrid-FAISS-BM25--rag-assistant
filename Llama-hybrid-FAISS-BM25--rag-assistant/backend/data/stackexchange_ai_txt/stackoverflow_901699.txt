[site]: stackoverflow
[post_id]: 901699
[parent_id]: 901677
[tags]: 
Unfortunately, that depends on your purpose. If you plan to use the images for purposes of style, your best bet is to use sprites. http://www.alistapart.com/articles/sprites2 However, if you plan to use the images in tags, then you'll want to pre-load them with function preload(sources) { var images = []; for (i = 0, length = sources.length; i (modified source taken from What is the best way to preload multiple images in JavaScript? ) using new Image() does not involve the expense of using DOM methods but a new request for the image specified will be added to the queue. As the image is, at this point, not actually added to the page, there is no re-rendering involved. I would recommend, however, adding this to the end of your page (as all of your scripts should be, when possible) to prevent it from holding up more critical elements. Edit: Edited to reflect comment quite correctly pointing out that separate Image objects are required to work properly. Thanks, and my bad for not checking it more closely. Edit2: edited to make the reusability more obvious Edit 3 (3 years later): Due to changes in how browsers handle non-visible images (display:none or, as in this answer, never appended to the document) a new approach to pre-loading is preferred. You can use an Ajax request to force early retrieval of images. Using jQuery, for example: jQuery.get(source); Or in the context of our previous example, you could do: function preload(sources) { jQuery.each(sources, function(i,source) { jQuery.get(source); }); } Note that this doesn't apply to the case of sprites which are fine as-is. This is just for things like photo galleries or sliders/carousels with images where the images aren't loading because they are not visible initially. Also note that this method does not work for IE (ajax is normally not used to retrieve image data).
