[site]: stackoverflow
[post_id]: 2153439
[parent_id]: 
[tags]: 
java.util.concurrent : calculating primes

I'm new to the package java.util.concurrent . I've created the following program testing if a number is a prime using a multi and a monothreaded strategy. import java.util.concurrent.ExecutorService; import java.util.concurrent.Executors; public class IsPrime implements Runnable { private static final long UPPER_BOUND=100000; long value;//the number observed private IsPrime(long value) { this.value=value; } /** returns wether value is a prime number (simple and stupid method ) */ private boolean isAPrimeNumber() { if(value==1 || value==2) return true; if(value%2L==0) return false; for(long i=3;i >> "+n2); } } for the method loopMT , is it the correct way to use the classes of the package java.util.concurrent ? Is there another, (safer, more elegant) way to write this program ? Can I use System.out in a multithreaded environement ? Many thanks for your suggestions Pierre
