[site]: stackoverflow
[post_id]: 433379
[parent_id]: 
[tags]: 
Capistrano remote authentication problem

I'm trying to deploy to a slicehost slice using this config/deploy/production.rb file. I'm clueless & haven't used capistrano before now. Here are the steps I followed. Sorry but I'm completely new to capistrano. It keeps asking for my password (have set up passwordless SSH), and throwing this error: (SocketError: getaddrinfo: Name or service not known) connection failed for: ---------.com (Net::SSH::AuthenticationFailed: -----) First, it's a 'bort' app http://github.com/fudgestudios/bort/tree/master Second, I used the ubuntu-machine gem, detailed here: http://suitmymind.github.com/ubuntu-machine/#screencast config/deploy/production.rb ############################################################# # Application ############################################################# set :application, "---------------" set :deploy_to, "/var/www/#{application}" ############################################################# # Settings ############################################################# default_run_options[:pty] = true ssh_options[:forward_agent] = true set :use_sudo, true set :scm_verbose, true set :rails_env, "production" ############################################################# # Servers ############################################################# set :user, "----------" set :domain, "--------------------------" server domain, :app, :web role :db, domain, :primary => true ############################################################# # Git ############################################################# set :scm, :git set :branch, "master" set :scm_user, '---------' set :scm_passphrase, "----------" set :repository, "git@github.com:--------/----------.git" set :deploy_via, :remote_cache ############################################################# # Passenger ############################################################# namespace :deploy do desc "Create the database yaml file" task :after_update_code do db_config = :app, :except => { :no_release => true } do run "touch #{current_path}/tmp/restart.txt" end [:start, :stop].each do |t| desc "#{t} task is a no-op with mod_rails" task t, :roles => :app do ; end end end
