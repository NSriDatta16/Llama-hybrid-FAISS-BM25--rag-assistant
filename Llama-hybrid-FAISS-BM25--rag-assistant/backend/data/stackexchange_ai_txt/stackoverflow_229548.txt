[site]: stackoverflow
[post_id]: 229548
[parent_id]: 229472
[tags]: 
Test-Driven-Development - Almost there. Domain-Driven-Design - No Model-Driven-Design/Architecture - No Do you test? - Yes Unit Testing - Yes Integration Testing - Yes Acceptance Testing - No Code Reviews - No Innovative/New Technologies (Spring, Hibernate, Wicket, JSF, WS, REST, ...) - ASP.NET MVC? NHibernate? Yes Agile - Just started Pair Programming - No UML - Nothing formal Domain-specific languages - No Requirement Specification (How?) - Yes. Capturing story requirements. Continous Integration - Yes. TeamCity Code-Coverage Tools - Yes. NCover Aenemic Domain Model - No Communication (Wiki, Mail, IM, Mailinglists, other documents) - IM, Email Effort estimates - 1,2,4,8 Team size - 4 Meetings - Daily stand up Code metrics - No Static code analysis - No Bug tracking - Existing custom job My department is a work in progress. Over the past few months, I've made an effort in enforcing continuous improvement. Some stuff has been down right difficult to talk about. However, when looking back, they have improved.
