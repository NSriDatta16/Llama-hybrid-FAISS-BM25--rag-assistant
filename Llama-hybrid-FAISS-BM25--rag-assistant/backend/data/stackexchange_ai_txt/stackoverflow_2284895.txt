[site]: stackoverflow
[post_id]: 2284895
[parent_id]: 2284160
[tags]: 
There are three that I'm familiar with: flixel flixel is a game framework that uses bitmap graphics. It largely sidesteps the Flash display objects so you don't need Adobe's Flash authoring tool to make games. It comes with some basic physics built-in: velocity, acceleration, and collision detection. Most of the games made with flixel have a retro, 8- or 16-bit feel since it's hard to do vector graphics. This is the framework I've heard the most about, and seen used the most. It has a fairly active community and a lot of documentation. Most of the Flash entries for the recent Ludum Dare competition were in flixel. I think out-of-the-box it's the fastest start. PushButtonEngine PushButtonEngine is a component-based game framework. Basically, instead of objects inheriting behavior and properties from their base classes, they contain components that provide the desired behavior. Unlike flixel, PBE doesn't have built-in collision handling. You need to use Box2D for that, which strikes me as overkill for simple games. PBE hasn't reached version 1.0 yet, and they're still re-organizing the codebase. This is a problem because tutorials for it rarely mention which revision of the framework they target. When I tried it out, I couldn't get any of the Box2D tutorials to work with the most recent revision. I would probably have had better luck with the last stable revision. I should note that PBE is complete enough to make games with, but you may have some problems finding good tutorials and documentation. Flashpunk Flashpunk is a new framework similar to flixel. The main difference is the way features are organized. Flashpunk is set up similar to GameMaker, so if you're familiar with GameMaker, it will be a much easier transition. I haven't tried Flashpunk myself; it's on my to-do list. Physics Engines These are used to add (more) realistic physics to your game. You can integrate them with the frameworks above, although it can be tricky. PushButtonEngine comes with a component for Box2D integration. FisixEngine , mentioned by Todd Moses. I haven't used this. Box2DFlashAS3 . This has seen a lot of use, but usually not together with the frameworks I've mentioned. My main issue with it is that it's a port of an originally C-based physics framework, so the way things are organized is not very Flash-like. ActionScript Physics Engine (APE) . I found this better-organized than Box2D, though not as feature-rich. Still kind-of in development. (Edit: Expanded with a section on physics engines)
