[site]: stackoverflow
[post_id]: 5174589
[parent_id]: 1477468
[tags]: 
@Kragen, Short answer: If you are doing queries with ten tables, get used to it . You need to learn all about query hints, and a lot more tricks besides. Long answer: SQL server generally generates excellent query plans for up to about three to five tables only. Once you go beyond that in my experience you are basically going to have to write the query plan yourself, using all the index and join hints. (In addition, Scalar functions seem to get estimated at Cost=Zero, which is just mad.) The reason is it is just too damn complicated after that. The query optimiser has to decide what to do algorithmically , and there are too many possible combinations for even the brightest geniuses on the SQL Server team to create an algorithm which works truly universally. They say the optimiser is smarter than you. That may be true. But you have one advantage. That advantage is if it doesn't work, you can throw it out and try again! By about the sixth attempt you should have something acceptable, even for a ten-table join, if you know the data. The query optimiser cannot do that, it has to come up with some sort of plan instantly, and it gets no second chances. My favourite trick is to force the order of the where clause by converting it to a case statement. Instead of: WHERE predicate1 AND predicate2 AND.... Use this: WHERE case when not predicate1 then 0 when not predicate2 then 0 when not .... then 0 else 1 end = 1 Order your predicates cheapest to most expensive, and you get an outcome which is logically the same but which SQL server doesn't get to mess around with - it has to do them in the order you say.
