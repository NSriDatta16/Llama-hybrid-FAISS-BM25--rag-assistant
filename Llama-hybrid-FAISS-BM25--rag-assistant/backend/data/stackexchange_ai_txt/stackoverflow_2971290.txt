[site]: stackoverflow
[post_id]: 2971290
[parent_id]: 2644782
[tags]: 
I too had this issue and somewhat gave up. However, I mentioned my dilemma to a friend, who encouraged me to look into the child VC's logic and I recalled a handy trick that I've used to pass data between parent/child view controllers. In your flipside view controller, create a "rootViewController" property. In your parent view controller, when you initialize the flipside view controller, you set (where "self" is the rootVC): flipsideController.rootViewController = self; You then use this for your flipside VC's shouldAutorotateToInterfaceOrientation method: - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation { return interfaceOrientation == self.rootViewController.interfaceOrientation; } Viola! The flipside view no longer rotates underneath the partially curled up parent view!
