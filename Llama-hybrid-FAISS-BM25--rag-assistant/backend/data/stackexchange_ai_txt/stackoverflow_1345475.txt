[site]: stackoverflow
[post_id]: 1345475
[parent_id]: 1345290
[tags]: 
I'm also reluctant to give out the answer, but I'll give you some hints. Suppose the rows you're interested in are like this: col1 col2 active red 14 y red 15 y Then you want the color such that some row has 14 & y, and some other row has 15 & y. And of course the color on both rows must be equal to each other. The answer is related to this principle: Any SQL expression references only one row at a time. You can use a JOIN to combine one row with another row, and the result is one new row that has twice as many columns and exists ephemerally as the query is being executed (i.e. it's not stored anywhere). Since it's now one row, you can use write SQL expressions to compare columns that exist on separate rows in the source table. Another concept that is important for using joins: table aliases . Does that give you enough to go on? Okay, yes I was reluctant because the question was tagged homework. But it isn't any more. Here's what I mean: SELECT DISTINCT col1 FROM mytable t1 JOIN mytable t2 ON (t1.col1 = t2.col1) -- i.e. they are both red WHERE t1.col2 = 14 AND t1.active = 'y' AND t2.col2 = 15 AND t2.active = 'y'; Once you do the join, you have columns from both tables on the same row (at least in the result set being formed, not in storage). So you can write an expression referencing columns from both rows of the base table.
