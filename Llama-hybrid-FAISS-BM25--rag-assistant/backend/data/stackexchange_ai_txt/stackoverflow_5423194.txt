[site]: stackoverflow
[post_id]: 5423194
[parent_id]: 
[tags]: 
UITableView as a tableHeaderView for another UITableView

I get stuck on the following: I want to use a single cell of a UITableView as a header view for another UITableView. The second table view is in turn an object that has been inherited from a different UITableView class, since it shares it's functionality completely. The only difference in fact is that the second UITableView has a header view (which should be the single celled UITableView). The interface for the UITableView with the header looks like: #import #import "ScheduleDetailsController.h" @interface TodayDetailsViewController : ScheduleDetailsController { UITableView *headerView; } @property (nonatomic, retain) UITableView *headerView; @end And the implementation like: #import "TodayDetailsViewController.h" @implementation TodayDetailsViewController @synthesize headerView; - (void)loadView { [super loadView]; self.headerView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, 320, 44)]; self.headerView.backgroundColor = [UIColor clearColor]; self.headerView.opaque = NO; self.headerView.delegate = self; self.headerView.dataSource = self; // This is a UITableView defined as a property in the parent class self.scheduleDetailsTable.tableHeaderView = self.headerView; } ... #pragma mark - #pragma mark Table View Data Source Methods - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView { if (tableView == self.scheduleDetailsTable.tableHeaderView) return 1; else return [self.scheduleDetailsTable numberOfSections]; } - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section { if (tableView == self.scheduleDetailsTable.tableHeaderView) return 1; else return [self.scheduleDetailsTable numberOfRowsInSection:section]; } - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath { if (tableView == self.scheduleDetailsTable.tableHeaderView) { ... return cell; } else return [self.scheduleDetailsTable cellForRowAtIndexPath:indexPath]; } @end I get no errors when I compile and run this, but then I also don't see anything, i.e. the view stays empty. I have also tried it with replacing the header view by a UIView and then everything works like expected (i.e. the table view in the parent class is implemented correctly). I'm probably just missing something obvious, but I just can't figure it out at the moment. If someone could spot the error or could give some advice I would be very thankful.
