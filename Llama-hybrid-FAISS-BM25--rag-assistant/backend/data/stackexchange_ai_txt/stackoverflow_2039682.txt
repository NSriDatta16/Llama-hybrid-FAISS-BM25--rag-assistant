[site]: stackoverflow
[post_id]: 2039682
[parent_id]: 1014068
[tags]: 
Implementing a WPF treeview uses lots of XAML, so this answer contains just fragments of code. My goal was to click a selected treeview item in a left pane and refresh items in a right pane (like Windows Explorer). To make selecting a selected treeview item work, I implemented two events in the following XAML example in my ViewModel: OnItemSelected using event TreeViewItem.Selected MouseLeftButtonUp using event TreeViewItem.MouseLeftButtonUp When my MouseLeftButtonUp event fires I make sure to indicate I handled the event using: args.Handled = true; Here is the XAML Here are the event handlers private void OnItemSelected(object sender, RoutedEventArgs e) { // do something... } // additional info: cannot detect mouse down events; preview mouse events also work private void MouseLeftButtonUp(object sender, MouseButtonEventArgs args) { TreeViewItem tvi = sender as TreeViewItem; if (tvi != null) { // process folder items MyViewModel fvm = tvi.Header as MyViewModel; if (fvm != null) { // only process selected treeview items if (fvm.IsSelected) { fvm.IsSelected = true; // prevent bubbling once we find the selected tree view item args.Handled = true; } } }
