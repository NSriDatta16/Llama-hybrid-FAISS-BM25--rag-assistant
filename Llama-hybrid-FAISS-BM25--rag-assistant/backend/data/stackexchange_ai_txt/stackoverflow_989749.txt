[site]: stackoverflow
[post_id]: 989749
[parent_id]: 989551
[tags]: 
There is no strict requirement in SOAP that you need to use a framework like CXF to handle the server or client SOAP endpoints. We just ran into client thread deadlocks when using an Axis 1.4-based SOAP client to talk to an Axis 1.1-based server, and fixed them by ditching Axis and making the requests in hand-written code. We had to lie to the Axis server by telling it we still had an Axis client, but felt no remorse! ;-) Similarly, you should be able to bypass CXF and generate SOAP responses in your own handwritten java code. Then you can use a Map to cache your marshalled (unparsed, serialized) XML strings and eliminate this hotspot. Strongly agree with Olaf on REST: if you fully leverage HTTP, then all this caching happens for free in all the intermediate caches between your server and your clients. That's certainly something to consider for new services. Update: CXF has the notion of customizable interceptor chains . One type of outbound interceptor is for the MARSHAL phase, so it sounds like you could add this cache there without having to ditch CXF. Perhaps a CXF expert can verify that for us?
