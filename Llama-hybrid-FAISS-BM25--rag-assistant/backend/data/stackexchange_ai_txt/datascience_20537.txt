[site]: datascience
[post_id]: 20537
[parent_id]: 20511
[tags]: 
TL;DR: Represent words as word vectors. Then add extra dimensions to the word vectors. In these extra dimensions, include POS, NER, etc. features in a numeric form. Longer Version: Say you have a word2vec/Glove model with each word represented by a 100 dimensional vector. Additionally, you have features like POS, NER, etc. for each word. Instead of representing each word with just 100 dimensions, represent it with 100 + n dimensions and fill these n slots with the nlp features. This will give the vectors an additional meaning which you have defined manually. Suggestions You could benefit from using other models like Doc2Vec/Sent2Vec which can represent a whole sentence as vector. With these vectors you could query similarity of sentences. So say you've trained it on your data, just query : model.most_similar_cosmul(SENT_42) where SENT_42 represents "to whom i need to contact after i resign ?", you will get a list of sentences similar to it. I suggest you use gensim's doc2vec model in python.
