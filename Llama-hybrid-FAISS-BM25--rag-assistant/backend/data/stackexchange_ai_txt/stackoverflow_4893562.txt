[site]: stackoverflow
[post_id]: 4893562
[parent_id]: 
[tags]: 
Transforming HTML with XQuery

I'm wanting to take the HTML generated by a QTextEdit editor and transform it to something a little more friendly for use in an actual web page. Unfortunately, the HTML generator that is part of the QTextEdit api is not public and cannot be modified. I'd rather not have to create a WYSIWYG html editor when I have most of what I need built in. In a short discussion on the qt-interest mailing list, someone mentioned using XQuery via the QtXmlPatterns module. For an example of the ugly HTML the editor outputs, it uses for bold text, for bold and underline text, etc. Here's a sample: plain text plain text bold text plain text italics text plain text underline text plain text bold underline text plain text bold text bold underline text What I'd like to transform this into is something along the lines of this: plain text plain text bold text plain text italics text plain text underline text plain text bold text bold underline text I've gotten around 90% of the way to where I need to be. I can correctly transform the first 4 where each style member has only one of the italics, bold, or underline attributes. I'm having trouble when the span style has multiple attributes. For instance, if the span style has both font-weight:600 and text-decoration: underline . Here's my XQuery code that I have thus far: declare function local:process_span_data($node as node()) { for $n in $node return ( for $attr in $n/@style return ( if(contains($attr, 'font-weight:600')) then ( {data($n)} ) else if(contains($attr, 'text-decoration: underline')) then ( {data($n)} ) else if (contains($attr, 'font-style:italic')) then ( {data($n)} ) else ( data($n) ) ) ) }; declare function local:process_p_data($data as node()+) { for $d in $data return ( if ($d instance of text()) then $d else local:process_span_data($d) ) }; let $doc := doc('myfile.html') for $body in $doc/html/body return { for $p in $body/p return ( if (contains($p/@style, '-qt-paragraph-type:empty;')) then ( ) else ( if (count($p/*) = 0) then ( {data($p)} ) else ( {for $data in $p/node() return local:process_p_data($data)} ) ) ) } Which gives ALMOST the correct result: plain text plain text bold text plain text italics text plain text underline text plain text bold underline text plain text bold text bold underline text Can anyone point me in the right direction of achieving my desired output? Thanks in advance from an XQuery n00b!
