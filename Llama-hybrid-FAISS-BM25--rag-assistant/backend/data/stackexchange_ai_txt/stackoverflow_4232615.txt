[site]: stackoverflow
[post_id]: 4232615
[parent_id]: 
[tags]: 
standalone web page design issues

I have a few questions that are related to this same topic, so I thought it would be nice to ask them in a single thread. I have perused over some other related topic but haven't been able to find quite the answer I'm looking for. In general, most of these seem to be related to security issues. My questions are as follows: I want to access a file, preferable with an XMLHttpRequest object as it is an xml file I wanted to use. I am using chrome and when I attempt to access the file, I get this as a result in my javascript console: XMLHttpRequest cannot load file:///home/lazarus/Desktop/sites/parserdata.xml. Cross origin requests are only supported for HTTP. xmlreqtest.html:11Uncaught Error: NETWORK_ERR: XMLHttpRequest Exception 101 I've looked over a few other answers that are related to this exception and most of them specify something to do with either changing the domain, making a proxy, or changing security settings, but none of them have worked as of yet. I wanted to make web sites that can be stored on a person's computer without having to be hosted and be able to access files for data storage, so hosting them in this case is not an option. Preferably I'd like to find a way to bypass the security settings. Similarly to the last issue, I wanted to find a way that once I make changes to a web page, I could store data about the page on the client's computer. Serverside scripts give this option, but I haven't been able to find anything for javascript to do it. In either of these issues, jquery would be sufficient as well, if it would solve the problem. In general I would like to try to find ways to make web pages operate as standalone applications on a person's computer, integrating everything from GUIs to graphics and all that fun stuff. I would eventually like to integrate things like SMIL and SVG into web pages and something like XUL that will work on any browser, not just mozilla-based ones. That stuff can wait for later, this stuff will have to be taken care of first because it's the most essential to the whole process.
