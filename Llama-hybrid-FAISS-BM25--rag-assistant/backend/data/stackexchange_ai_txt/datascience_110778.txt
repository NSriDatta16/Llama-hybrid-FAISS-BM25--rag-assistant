[site]: datascience
[post_id]: 110778
[parent_id]: 110650
[tags]: 
I think you are confused - the reason why Word2Vec is regarded as 'neural' is not due to its loss function, but that it uses neural network to estimate the word embedding ( $\vec{u}$ and $\vec{v}$ ) (see section 2 of the original paper ). For example, I can have a ML problem with a loss function $L$ to minimize (on some data $X$ and target $y$ ). If I use a simple linear model to do the job, it is linear; or I would call it 'neural model' if I use (say) a CNN. Does not matter whether the loss $L$ is linear or else.
