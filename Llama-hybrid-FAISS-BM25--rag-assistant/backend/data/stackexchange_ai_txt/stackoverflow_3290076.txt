[site]: stackoverflow
[post_id]: 3290076
[parent_id]: 
[tags]: 
NHibernate Criteria select items by the group by and sum of itemid within another table

public class SearchText { public virtual int Id { get; set; } public virtual string Text { get; set; } } public class SearchTextLog { public virtual int Id { get; set; } public virtual SearchText SearchText { get; set; } public virtual User User { get; set; } public virtual int SearchCount { get; set; } public virtual DateTime LastSearchDate { get; set; } } I am trying to select the top 5 SearchText items based on the sum of their count within the SearchTextLog. Currently I have only been able to resolve this by first performing a query to get the top 5 items, and then using the result within a second query. I was wondering if someone could show me the light and teach me how I could integrate these two seperate queries into a single unit. Here is what I have currently: var topSearchCriteria = Session.CreateCriteria(typeof (SearchTextLog)) .SetProjection(Projections.ProjectionList() .Add(Projections.GroupProperty("SearchText.Id")) .Add(Projections.Alias(Projections.Sum("SearchCount"), "SearchCount"))) .AddOrder(Order.Desc("SearchCount")) .SetMaxResults(topSearchLimit) .List (); return Session.CreateCriteria () .Add(Restrictions.In("Id", topSearchCriteria.ToArray())) .List (); Edit: Oh no, I just realised my current solution will lose the important order by of the results. So I will definitely have to incorporate the queries. :-/ Edit: I tried a bidirectional mapping too to allow the following statement, however, I can't get it to return SearchText items. It simply complains that the SearchText properties aren't in a grouping. return Session.CreateCriteria () .CreateAlias("SearchTextLogs", "stl") .AddOrder(Order.Desc(Projections.Sum("stl.SearchCount"))) .SetMaxResults(topSearchLimit) .SetResultTransformer(Transformers.AliasToEntityMap) .List (); Excuse my ignorance, but Nhibernate is completely new to me, and requires a completely different way of thinking.
