[site]: stackoverflow
[post_id]: 5211268
[parent_id]: 5211127
[tags]: 
1. PHP is a little confusing when dealing with old session data. The following php.ini directives play a role when determining what session data to delete: session.gc_probability session.gc_divisor session.gc_maxlifetime These three directives control the probability, that when issuing a session_start(), PHP will look for, and clean the old sessions. You can check the exact meaning of these directives here: http://www.php.net/manual/en/session.configuration.php Also, PHP packages in most distros register a cronjob, that clean the session directory, for example on my ubuntu box, the job runs every 30 minutes, and looks for files that are older that a number of seconds specified in /usr/lib/php5/maxlifetime. Short : you don't really have to worry about this. 2. You don't have to regenerate the session id on every page load, it is enough to regenerate it at login. (or when the privileges associated with the session id change). Storing user information in the session is not a bad practice. However, in this case, I would only store the userid, and pull the user information out based on it, on page load. Imagine the following scenario: User A logs in. User B logs in. User B deletes User A from the system. User A is still logged in, because has the (now deleted) user data in his session. Comparing the IP with the IP that made the previous request is okay, just keep in mind that there can be valid reasons for the IP to change, for example if someone is browsing the site with TOR, so give an option to the user to skip this check. (you can also check the browser's user_agent)
