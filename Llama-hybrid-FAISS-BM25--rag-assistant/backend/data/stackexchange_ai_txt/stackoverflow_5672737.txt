[site]: stackoverflow
[post_id]: 5672737
[parent_id]: 5672167
[tags]: 
Alternatively, you can decide not to have to learn AJAX, or deal with external Comet libraries, and use something like NOLOH which takes care of all these plumbing issues for you allowing you to focus on your application. For example, I took the liberty to create an actual NOLOH application based on your mockup design, which automatically uses AJAX for the content, and uses NOLOH's built in Comet support for the chat. Click here for functioning example: http://www.noloh.com/Demos/StackOverflow1 As you can see from the very basic code (all of the code) posted below, and on github here , you simply lay out your objects, and tell them what you would like to do. NOLOH takes care of the rest, and handles all cross browser issues, client-server issues, and most other things you can imagine. NOTE: This is only one of many ways to approach it, I could've used different layout types, more concise syntax, class variables instead of locals and external CSS, but I felt a simple approach would make things clearer. Also, sorry for using the unwieldy Yahoo URL as it was the most readily available. require_once('/NOLOH/NOLOH.php'); class StackOverflowExample extends WebPage { function __construct() { parent::WebPage('StackOverflow 5672167'); $nav = new Panel(0, 0, 600, 30); $chat = new Panel(0, $nav->Bottom, 200, 500); $content = new MarkupRegion('', $chat->Right, $chat->Top, 400, 350); $rooms = new Panel($content->Left, $content->Bottom, 400, 150); $footer = new Panel(0, $chat->Bottom, 600, 50); $chat->BackColor = Color::LightGreen; $content->BackColor = Color::Yellow; $rooms->BackColor = Color::Orange; $footer->BackColor = Color::Gray; $this->Controls->AddRange($nav, $chat, $content, $rooms, $footer); $sections = array('HOME', 'ABOUT', 'CONTACT', 'LOGIN'); foreach($sections as $section) $nav->Controls->Add(new Link(null, $section, 0, 5)) ->Click = new ServerEvent($this, 'LoadSection', $content, $section); $nav->Controls->AllCSSMarginRight = '5px'; $nav->Controls->AllLayout = Layout::Relative; $nav->CSSTextAlign = 'right'; //Comet (Listener), Bind to Yahoo Flickr API through YQL $this->Controls->Add($listener = new Listener( 'http://query.yahooapis.com/v1/public/yql?q=select%20source%20from%20flickr.photos.sizes%20WHERE%20photo_id%20in%20(select%20id%20from%20flickr.photos.recent)%20and%20label%3D%22Thumbnail%22', new ServerEvent($this, 'LoadImage', $chat))); //Default Section $this->LoadSection($content, URL::GetToken('section', 'HOME')); } function LoadSection($contentPanel, $section) { $section = strtolower($section); if(file_exists($file = 'Content/' . $section)) { $contentPanel->Text = file_get_contents($file); URL::SetToken('section', $section); } } function LoadImage($chat) { foreach(simplexml_load_string(Listener::$Data)->results->size as $photo) { $url = $photo['source']; $chat->Controls->Add($image = new Image((string)$url, rand(0, $chat->Width), rand(0, 200), 100, 100)); Animate::Top($image, $chat->Height - $image->Height, 3000); Animate::Opacity($image, Animate::Oblivion, 3000); } } } Alternatively, you can use the NOLOH NavHandler Nodule, so that your content is bookmarkable without you having to worry about implementing the very basic NOLOH Token functions , which I took the liberty to add here (URL::GetToken), so that the app is bookmarkable. You're free to sign-up for a free NOLOH sandbox, and copy the code into your sandbox and play around with it. One way would be to change the MarkupRegion to an EditRegion so you have automatic edit-in-place capabilities. Disclaimer: I'm a co-founder of NOLOH
