[site]: crossvalidated
[post_id]: 23298
[parent_id]: 23295
[tags]: 
Here is some quick and dirty code for carrying out multiple t-tests over a fake dataset. There may be more elegant way of doing this, but that should let you started with R in a simple way. This solution assumes that the 20 samples are independent. # Simulate some data dfrm I only reported variable names and associated p-values (with and without correction for multiple tests), but you can add extra information in the for loop (e.g., $t$ value, dof, etc.). Please note that R uses Welch's t-test as the default. See help(t.test) to use classical Student t-test instead. Sample results look like > res X1 X2 p padj 1 V1 V4 0.000000000 0.0000000 2 V1 V5 0.000000000 0.0000000 3 V1 V7 0.000000000 0.0000000 4 V2 V4 0.000000000 0.0000000 5 V2 V5 0.000000000 0.0000000 6 V2 V7 0.000000000 0.0000000 7 V3 V4 0.000000000 0.0000000 8 V3 V5 0.000000000 0.0000000 9 V3 V6 0.009132565 0.5296888 10 V3 V7 0.000000000 0.0000000 11 V3 V9 0.014075639 0.8163871 If all variables are numerical, and data were collected on the same sample, you need a paired t-test ( paired=TRUE ) but why not using simple correlation tests directly? (Simply replace t.test() with cor.test() in the testing loop.)
