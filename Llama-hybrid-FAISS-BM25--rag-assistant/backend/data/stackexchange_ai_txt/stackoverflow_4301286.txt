[site]: stackoverflow
[post_id]: 4301286
[parent_id]: 4301056
[tags]: 
I'd say the code you supplied, looks fine to me. I would implement the possibility to cancel the whole thread instead of looping with while(true). Use a boolean instead and make the boolean accessible for other threads. If you need help on that, come back at me. I think the problem lies with the code we do NOT see here. I'm partially interested in the code fragments surrounding the .start() call on your thread. What happens after that? cheers EDIT: public class Main { /** * @param args the command line arguments */ public static void main(String[] args) { final JDialog dia = new JDialog(); JButton btn = new JButton("Foo"); btn.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent ae) { dia.setVisible(false); Runnable t = new Runnable() { public void run() { System.out.println("foo"); } }; t.run(); } }); dia.getContentPane().add(btn); dia.setSize(500, 400); dia.setVisible(true); } } This works perfectly for me - sorry but I can't reproduce the error like you stated in the comments. Consider giving more code please :) EDIT #2: Don't set any variables from within your thread directly. Instead make use of the observer-listener pattern. When there is a new message incoming, have the thread fire a propertyChangeEvent instead. http://download.oracle.com/javase/1.4.2/docs/api/java/beans/PropertyChangeListener.html Maybe you should try and implement something more trivial .. go for a quick and easy chat first. http://www.ashishmyles.com/tutorials/tcpchat/index.html When you have that down, think about your project ahead. Maybe reading on multithreading with swing might help? http://java.sun.com/developer/technicalArticles/Threads/swing/
