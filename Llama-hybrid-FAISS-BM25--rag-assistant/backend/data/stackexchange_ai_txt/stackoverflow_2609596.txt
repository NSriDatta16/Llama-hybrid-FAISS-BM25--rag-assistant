[site]: stackoverflow
[post_id]: 2609596
[parent_id]: 2609542
[tags]: 
There are 3 main components which you should be aware: important features - you should know what is more critical. Ask yourself ""How screwed would I (or my customer) be if there's a bug in this component/code snippet?". Your customer could probably help you on determining these kind of priorities. Things that deal directly with money tend to follow in this case frequently used features - The most common use cases should be as bug-free as possible. Nobody cares if there's a bug in a part of the system no one uses most complex features - The developers usually have a good idea of which parts of the code are more likely to contain bugs. You should give special attention to those. If you have this info, then it probably won't be hard choosing how to distribute your testing resources.
