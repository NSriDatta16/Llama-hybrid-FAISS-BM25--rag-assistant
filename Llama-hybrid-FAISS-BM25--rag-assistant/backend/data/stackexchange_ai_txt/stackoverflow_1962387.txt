[site]: stackoverflow
[post_id]: 1962387
[parent_id]: 1962358
[tags]: 
I think the good way is not to think in term of tests number per function but is to think in term of code coverage : Function coverage - Has each function (or subroutine) in the program been called? Statement coverage - Has each node in the program been executed? Branch coverage - Has every edge in the program been executed? Decision coverage - Has each control structure (such as an IF statement) evaluated both to true and false? Condition coverage - Has each boolean sub-expression evaluated both to true and false? This does not necessarily imply decision coverage. Condition/decision coverage - Both decision and condition coverage should be satisfied. EDIT : I reread what I wrote and I found it kind of "scary" ... that remind me a good thought I heard some weeks a go about code coverage : Code coverage is like stock market investment ! you need to invest enough time to have a good coverage but not too much to not waste your time and blow up your project !
