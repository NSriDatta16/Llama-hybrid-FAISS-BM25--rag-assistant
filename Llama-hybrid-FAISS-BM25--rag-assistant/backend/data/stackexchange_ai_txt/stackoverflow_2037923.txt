[site]: stackoverflow
[post_id]: 2037923
[parent_id]: 2037908
[tags]: 
Anyway you like. You could store it as references to other files on-top of a filesystem for each node, or write a filesystem driver that uses block references. Providing: Your nodes contain references to locations that persist You can know when writing a node what locations to write You can do it any way you wish. Filesystems are trees that use a disk-based inode system. You could always use a single file with a header and use byte-offsets stored as unsigned ints or values that map onto ints. inside the file to denote the start of some node ... then have an end-of-record at the end of each node. You could also use XML files with references to other locations or a single file and XPath/XPointers . ... But this would mean serializing your values into characters if they are just binary blobs (eww) Your value could be a path of a binary chunk just written to a file such as: /path/to/mappable.bin Check out anything from XML encapsulation through to filesystems written in C for a whole gamut of tree implementations. This XML solution might be bloated , but is simple enough if you don't need speed. Just an example of a high-level approach. Tree storage is an age-old problem, with solutions at all levels. Trees is trees.
