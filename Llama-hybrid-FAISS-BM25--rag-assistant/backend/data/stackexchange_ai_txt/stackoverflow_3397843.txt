[site]: stackoverflow
[post_id]: 3397843
[parent_id]: 
[tags]: 
How to determine lazy-loaded properties at runtime on a linq table?

I am iterating over the properties of various mapped tables in my code and need to know whether or not each property is lazy loaded. I have found that the instance variable used for storage, denoted by the Storage attribute on the property, will be of type System.Data.Linq.Link . Is there a way that I can leverage these two facts at runtime to solve this problem? Code: public void LazyLoad(Type tableType) { foreach (var prop in tableType.GetGenericArguments()[0].GetProperties()) { if (/* IS LAZY LOADED */) { //real work here... Console.WriteLine(prop.Name); } } } The mappings look like this: public partial class Address { private System.Data.Linq.Link _City; [Column(Storage="_City", DbType="...")] public string City { get { /* ... */ } set { /* ... */ } } }
