[site]: stackoverflow
[post_id]: 2381525
[parent_id]: 
[tags]: 
Algorithm: Split a string into N parts using whitespaces so all parts have nearly the same length

I am looking for a algorithm that takes a string and splits it into a certain number of parts. These parts shall contain complete words (so whitespaces are used to split the string) and the parts shall be of nearly the same length, or contain the longest possible parts. I know it is not that hard to code a function that can do what I want but I wonder whether there is a well-proven and fast algorithm for that purpose? edit: To clarify my question I'll describe you the problem I am trying to solve. I generate images with a fixed width. Into these images I write user names using GD and Freetype in PHP. Since I have a fixed width I want to split the names into 2 or 3 lines if they don't fit into one. In order to fill as much space as possible I want to split the names in a way that each line contains as much words as possible. With this I mean that in one line should be as much words as neccessary in order to keep each line's length near to an average line length of the whole text block. So if there are one long word and two short words the two short words should stand on one line if it makes all lines about equal long. (Then I compute the text block width using 1, 2 or 3 lines and if it fits into my image I render it. Just if there are 3 lines and it won't fit I decrease the font size until everything is fine.) Example: This is a long text should be display something like that: This is a long text or: This is a long text but not: This is a long text and also not: This is a long text Hope I could explain clearer what I am looking for.
