[site]: stackoverflow
[post_id]: 1157086
[parent_id]: 1157070
[tags]: 
I ran across this while working on an SQLite project a few months back and found it enlightening. I think it might be what you're looking for. ... Fastest universal way to insert data using standard ADO.NET constructs Now that the slow stuff is out of the way, lets talk about some hardcore bulk loading. Aside from SqlBulkCopy and specialized constructs involving ISAM or custom bulk insert classes from other providers, there is simply no beating the raw power of ExecuteNonQuery() on a parameterized INSERT statement. I will demonstrate: internal static void FastInsertMany(DbConnection cnn) { using (DbTransaction dbTrans = cnn.BeginTransaction()) { using (DbCommand cmd = cnn.CreateCommand()) { cmd.CommandText = "INSERT INTO TestCase(MyValue) VALUES(?)"; DbParameter Field1 = cmd.CreateParameter(); cmd.Parameters.Add(Field1); for (int n = 0; n
