[site]: stackoverflow
[post_id]: 4708428
[parent_id]: 4707008
[tags]: 
Here is my implementation of this. It actually chops a sentence not a paragraph but anyway you should get an idea. {% splitarticle some_data word_count %} {{ pre_part }} {% if post_part %} {{ post_part }} {% endif %} And it will return two variables And the code. You should put in /templatetags/ from django import template from django.utils.encoding import force_unicode def split_by_sentence(text, word_count): words = force_unicode(text).strip().split(' ') word_count = int(word_count) if len(words)>word_count: cnt = word_count for word in words[word_count:]: cnt+=1 if '.' in word or '?' in word or '!' in word: break if cnt>=len(words): cnt = word_count pre = ' '.join(words[:cnt]) post = ' '.join(words[cnt:]) return pre, post else: return text, None register = template.Library() @register.tag def splitarticle(parser, token): try: tag, data, word_count = token.split_contents() except ValueError: raise template.TemplateSyntaxError('splitarticle parsing error') return SplitArticleNode(data, word_count) class SplitArticleNode(template.Node): def __init__(self, data, word_count): self.data = template.Variable(data) self.word_count = word_count def render(self, context): data = self.data.resolve(context) context['pre_part'], context['post_part'] = split_by_sentence(data, self.word_count) return ''
