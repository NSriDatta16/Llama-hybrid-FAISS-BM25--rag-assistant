[site]: stackoverflow
[post_id]: 3161225
[parent_id]: 3160528
[tags]: 
A simple method is to render the values as input controls (as opposed to, say, or bare elements) - the browser sends input values back to the server when the user posts. For example: Symbol: /> Quote: /> The client sends every input value named "Symbol" in an array (and likewise the input values named "Quote"), which you can access in your code-behind like this: protected void lbtnExportStocks_Click(object sender, EventArgs e) { // They come out as comma-delimited strings string[] symbols = Request.Form["Symbol"].Split(','); string[] quotes = Request.Form["Quote"].Split(','); // ... continue exporting stocks to Excel } Of course, at the bottom, this technique is basically writing whatever the client sends you to an Excel file, so you might want to secure or limit the input in some way. That might involve authenticating users and/or throttling the amount of data your method will export. If this is a serious concern in your environment or you can't afford to give it much attention, consider serializing the original data in the user's session instead. Similarly, if you're intentionally transmitting a large amount of data, you should consider using other approaches for performance reasons. You might use session instead, or or transmit a small key that you can use to reconstruct the data used to build the repeater (for example, if the repeater was bound to the results of a query that doesn't change given its inputs, you can just serialize the input(s) between calls).
