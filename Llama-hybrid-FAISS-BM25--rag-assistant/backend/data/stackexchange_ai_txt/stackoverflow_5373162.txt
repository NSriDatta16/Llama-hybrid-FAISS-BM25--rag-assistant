[site]: stackoverflow
[post_id]: 5373162
[parent_id]: 5370594
[tags]: 
Using a flowlayoutpanel control as the container, and then create a usercontrol that is the listitem, you are half way there. The usercontrol can have whatever look you want and will act as an listitem in the flowlayoutpanel. Then we have the drag & drop. Following this code (Orginally from this example: http://www.codeproject.com/KB/static/DragDropFlowLayoutPanel.aspx ) you'll add drag and drop of items in your flowlayoutpanel: First create a new windform-solution, then create a usercontrol with only a label in, we use it as an example of your special listitem-control. Name the control MyListItem. Paste this code in the usercontrol to make it drag and droppable: Public Class MyListItem Public Property AllowDrag() As Boolean Get Return m_AllowDrag End Get Set(ByVal value As Boolean) m_AllowDrag = value End Set End Property Private m_AllowDrag As Boolean Private _isDragging As Boolean = False Private _DDradius As Integer = 40 Private _mX As Integer = 0 Private _mY As Integer = 0 Public Sub New() InitializeComponent() Margin = New Padding(0) AllowDrag = True End Sub Protected Overrides Sub OnGotFocus(ByVal e As EventArgs) Me.BackColor = Color.Navy End Sub Protected Overrides Sub OnLostFocus(ByVal e As EventArgs) Me.BackColor = Color.Transparent End Sub Protected Overrides Sub OnClick(ByVal e As EventArgs) Me.Focus() End Sub Protected Overrides Sub OnMouseDown(ByVal e As MouseEventArgs) Me.Focus() _mX = e.X _mY = e.Y Me._isDragging = False End Sub Protected Overrides Sub OnMouseMove(ByVal e As MouseEventArgs) If Not _isDragging Then If e.Button = MouseButtons.Left AndAlso _DDradius > 0 AndAlso Me.AllowDrag Then Dim num1 As Integer = _mX - e.X Dim num2 As Integer = _mY - e.Y If ((num1 * num1) + (num2 * num2)) > _DDradius Then DoDragDrop(Me, DragDropEffects.All) _isDragging = True Return End If End If End If End Sub Protected Overrides Sub OnMouseUp(ByVal e As MouseEventArgs) _isDragging = False End Sub End Class Then place a flowlayoutpanel (flowlayoutpanel1) onto the main form in the app. Add this code to the form, it will fill the flowlayoutpanel with listitems you can drag and drop: Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load FlowLayoutPanel1.AllowDrop = True For p As Integer = 0 To 50 Dim listitem As New MyListItem With {.Height = 50, .BorderStyle = BorderStyle.FixedSingle} listitem.Label1.Text = "Item:" & p.ToString FlowLayoutPanel1.Controls.Add(listitem) Next AddHandler FlowLayoutPanel1.DragEnter, AddressOf flowLayoutPanel_DragEnter AddHandler FlowLayoutPanel1.DragDrop, AddressOf flowLayoutPanel1_DragDrop End Sub Sub flowLayoutPanel_DragEnter(ByVal sender As Object, ByVal e As DragEventArgs) e.Effect = DragDropEffects.All End Sub Private Sub flowLayoutPanel1_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Dim data As MyListItem = CType(e.Data.GetData(GetType(MyListItem)), MyListItem) Dim _destination As FlowLayoutPanel = CType(sender, FlowLayoutPanel) Dim _source As FlowLayoutPanel = CType(data.Parent, FlowLayoutPanel) If sender.Equals(data.Parent) Then Dim p As Point = _destination.PointToClient(New Point(e.X, e.Y)) Dim item = _destination.GetChildAtPoint(p) Dim index As Integer = _destination.Controls.GetChildIndex(item, False) _destination.Controls.SetChildIndex(data, index) _destination.Invalidate() End If End Sub Now you can start the program and test. You now have a "listview" that can have customized controls in it and lets you drag and drop items to change the items order. Credit goes to P.Sandgren, for the drag and drop of items in the flowlayout panel: http://www.codeproject.com/KB/static/DragDropFlowLayoutPanel.aspx
