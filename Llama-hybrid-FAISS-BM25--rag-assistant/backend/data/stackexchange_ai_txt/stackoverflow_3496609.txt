[site]: stackoverflow
[post_id]: 3496609
[parent_id]: 3484232
[tags]: 
EDIT in June, 2022 With 12 years behind us, the original answer is terribly bad PowerShell became a DLR language (sort-of) in 2012 IronRuby was basically abandonware by then PowerShell was open-sourced in 2016 PowerShell was cross-platform in 2018 on .NET Core IronPython 3 was ported to .NET Core in 2020 The Microsoft-run PowerShell open source project has multiple orders of magnitude more community involvement and popularity than the IronLanguages ever did... While it is still not designed as an embedded scripting language, PowerShell definitely has the capability to be used as such. While it never worked with the DLR hosting model, it definitely has a working hosting model now. With the new licensing, PowerShell is completely redistributable. With expanded OS support (and even compatibility with ARM), there's really no reason not to choose PowerShell. ORIGINAL ANSWER from 2010: I'm not convinced PowerShell has "being a scripting language for applications" anywhere in it's long-term goals. It's first a shell, second an integration & automation engine, and third a shell scripting language ... since it's not redistributable at all, I'm not sure where embedded scripting fits in. It's certainly very easy to host PowerShell -- assuming that it's pre-installed on your target PCs-- so it's a very viable option, but I think that in general it's just as easy to do it with IronRuby or IronPython. I doubt the DLR itself is going away, so I think using a DLR language is still a good choice for this: you'd be set up to accept other DLR languages with much less effort, and the DLR and languages are redistributable. Also, the work to host PowerShell only gets you PowerShell -- whereas you can leverage the same work to get IronPython and IronRuby working. Who knows, since PowerShell is a dynamic language, maybe it will be ported to the DLR with proper dynamics support in a future version ... but it's unlikely to ever be redistributable, because Microsoft doesn't consider it a dev tool, but rather a core part of the OS. Bottom line: using the DLR is much more portable -- and not just to XP but even to Mono (and thus to Linux, OS X, iOS, Android, etc... and even to the web or Windows Phone via Silverlight).
