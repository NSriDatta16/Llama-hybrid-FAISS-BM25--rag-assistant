[site]: stackoverflow
[post_id]: 1741182
[parent_id]: 1740277
[tags]: 
Problem 1. The salt configuration is stored in config/auth.php . Find that file in modules/auth/config , then in your app/config folder (as you might have already known, Kohana uses cascading file system mechanism). The default file, which you are encouraged to customize into app/config/ folder, looks like below: 'ORM', 'hash_method' => 'sha1', 'salt_pattern' => '1, 3, 5, 9, 14, 15, 20, 21, 28, 30', 'lifetime' => 1209600, 'session_key' => 'auth_user', 'users' => array ( // 'admin' => 'b3154acf3a344170077d11bdb5fff31532f679a1919e716a02', ), ); Problem 2. In my opinion, the password hashing mechanism used by Auth, which is SHA1 with salt insertion, is quite secure provided you keep your salts, i.e. your auth.php file, secure. Problem 3. Auth built-in hashing mechanism uses SHA1, which is relatively more crack-proof than MD5, so I would say don't do the MD5 way, no matter how complicated your scheme might look. A security expert Thomas Ptacek in his blog wrote: No, really. Use someone else’s password system. Don’t build your own. Most of the industry’s worst security problems (like the famously bad LANMAN hash) happened because smart developers approached security code the same way they did the rest of their code. Problem 4. Yup I'm using Kohana to build my small company website and some of our clients' website and so far I don't find any problem with the Auth module, although I can't say much since I haven't really used it for real security-concerned website. But in general, I'd say Kohana is an excellent framework especially with the cascading filesystem mechanism.
