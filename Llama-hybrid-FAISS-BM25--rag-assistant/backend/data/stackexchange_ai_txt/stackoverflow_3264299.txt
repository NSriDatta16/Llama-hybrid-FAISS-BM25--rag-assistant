[site]: stackoverflow
[post_id]: 3264299
[parent_id]: 
[tags]: 
Why do I need std::get_temporary_buffer?

For what purpose I should use std::get_temporary_buffer ? Standard says the following: Obtains a pointer to storage sufficient to store up to n adjacent T objects. I thought that the buffer will be allocated on the stack, but that is not true. According to the C++ Standard this buffer is actually not temporary. What advantages does this function have over the global function ::operator new , which doesn't construct the objects either. Am I right that the following statements are equivalent? int* x; x = std::get_temporary_buffer ( 10 ).first; x = static_cast ( ::operator new( 10*sizeof(int) ) ); Does this function only exist for syntax sugar? Why is there temporary in its name? One use case was suggested in the Dr. Dobb's Journal, July 01, 1996 for implementing algorithms: If no buffer can be allocated, or if it is smaller than requested, the algorithm still works correctly, It merely slows down.
