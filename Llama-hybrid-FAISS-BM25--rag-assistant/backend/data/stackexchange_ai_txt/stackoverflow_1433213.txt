[site]: stackoverflow
[post_id]: 1433213
[parent_id]: 1432612
[tags]: 
Why do you want to post manually constructed XML as such to a WCF service? Typically, what you want to do is create a DataContract - a set of objects that get passed around. The benefit being: you don't have to deal with handling all the XML serialization and deserialization. What happens here is that the message that goes from client to server is already an XML message - into which you stick another XML fragment. This is just calling for trouble..... What's the original data you have? Do you have a "Book" type? If so - why not using: [ServiceContract(Namespace = "http://www.mydomain.com/testing")] public interface IMyBookService { [OperationContract] [WebInvoke(UriTemplate = "data", Method = "POST" ,BodyStyle = WebMessageBodyStyle.Bare,RequestFormat = WebMessageFormat.Xml, ResponseFormat = WebMessageFormat.Xml)] Stream postdata(Book myBook); } or [ServiceContract(Namespace = "http://www.mydomain.com/testing")] public interface IMyBookService { [OperationContract] [WebInvoke(UriTemplate = "data", Method = "POST" ,BodyStyle = WebMessageBodyStyle.Bare,RequestFormat = WebMessageFormat.Xml, ResponseFormat = WebMessageFormat.Xml)] Stream postdata(List myBookList); } Wouldn't that be a lot easier? WCF is designed to take care of all these things - why do everything manually by hand, if you can let WCF handle all the nitty-gritty details?? Marc
