[site]: stackoverflow
[post_id]: 4604619
[parent_id]: 4604567
[tags]: 
You could use Linq to Sql or Entity Framework to autogenerate your classes as well as Data Access functionality. You can drag and drop your database tables into the DBML (L2S) or EDMX (EF) from within Visual Studio and it will build your classes with members mapped one-to-one to columns, as well as any relationships you have defined. To create Linq to Sql Classes or ADO.NET Entity Data Model follow these steps: right-click in Visual Studio on one of your Projects Add = > New Item Select Linq to Sql Classes or ADO.NET Entity Data Model This will create a blank design view for creating and customizing your classes. User Server Explorer to open a connection to your database Drag and Drop tables onto the DBML or EDMX canvas and Save when finished. For instance: table User becomes class User If table User has column FirstName it becomes property FirstName If table User has a relationship with table Contact it will generate IList Contacts on your User class. This will let you write code like user.Contacts.Where(c => c.ContactId == 7000) from within the generated DataContext If you need a more customized way to map your tables you can use SQLMetal which will also generate your classes but allow you to make changes. For instance, converting int properties to enums . NHibernate is also a good option and has come a long way.
