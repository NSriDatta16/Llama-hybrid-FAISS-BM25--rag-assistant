[site]: stackoverflow
[post_id]: 285038
[parent_id]: 285005
[tags]: 
It's unlikely that you'll be able to write a sort algorithm in Perl that will perform better than Perl's builtin sort function: @numbers = sort {$a $b} @numbers; You can experiment with the sort pragma to see if a particular algorithm is better: use sort '_quicksort'; use sort '_mergesort'; Since your cutpoints will vary depending on the data distribution, I think you need to sort the entire list first then loop over it to do the cutting. my $prev = shift @numbers; # already sorted my @group = [$prev]; my $i = 0; foreach my $n (@numbers) { $i++ if ($n - $prev > 65535); push @{$group[$i]}, $n; $prev = $n; }
