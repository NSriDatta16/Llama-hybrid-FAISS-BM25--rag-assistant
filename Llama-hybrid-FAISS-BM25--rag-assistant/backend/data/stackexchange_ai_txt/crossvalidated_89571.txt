[site]: crossvalidated
[post_id]: 89571
[parent_id]: 
[tags]: 
Supervised or unsupervised learning problem

I'm working on a pattern recognition problem. I have been using supervised learning (neural network and svm with one class classification) but I think I'm doing it in a wrong way. For simplifying, the problem I'm going to describe below is just an example. In order to determine the pattern (called pattern X), I have the following training data (4 features to determine pattern X): 0,1,2,3,X 1,0,4,7,X 0,0,6,5,X 1,1,8,9,X And this is my testing data: 0,1,3,5,X ? As you can see, the first two numbers only accept binary numbers, the third number only accepts even numbers and the fourth number only accepts odd numbers. With neural network: I think this problem is not suitable for neural network because I only have true values. And the neural network should be trained by both true and false value. Or should it be other way around ? With svm one classification: Currently I'm using libsvm library and got accuracy at 0%, I don't know should this be problem from training data or not... So should I change to unsupervised learning in order to find the pattern in the given training data?
