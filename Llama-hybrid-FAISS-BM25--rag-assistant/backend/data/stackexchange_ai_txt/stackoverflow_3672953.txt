[site]: stackoverflow
[post_id]: 3672953
[parent_id]: 3664692
[tags]: 
There's nothing really special about the LLVM IR. It's a standard DAG with variable arity. Decompiling LLVM IR is a lot like decompiling machine language. You might be able to leverage some frontend optimizations such as constant folding, but that sounds pretty minor compared to the whole task. My only experience with LLVM was writing a binary translator for a class project, from a toy CISC to a custom RISC. I'd say, since it's the closest thing to a standard IR (well, GCC GIMPLE is a close second), see if it fits with your algorithms and style and evaluate it as one alternative. Note that GCC also started out prioritizing portability above all, and has also accomplished a lot.
