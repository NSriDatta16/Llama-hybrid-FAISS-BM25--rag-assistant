[site]: datascience
[post_id]: 97717
[parent_id]: 
[tags]: 
What is the best way to train a model?

I am trying to train my model for sports predictions. The data frame is as a below given example: datetime country league home_team away_team home_odds draw_odds away_odds home_score away_score --- ------------------- --------- ---------------------------- ------------------- ------------------- ----------- ----------- ----------- ------------ ------------ 0 2020-02-22 14:00:00 Albania First Division Dinamo Tirana Beselidhja Lezha 4.66 3.74 1.59 2 0 1 2020-02-16 14:00:00 Albania First Division Beselidhja Lezha Burreli 1.82 3 4.42 2 1 2 2020-02-08 14:00:00 Albania First Division Terbuni Koplik 1.41 4.2 5.85 2 1 3 2020-01-26 13:00:00 Albania First Division Dinamo Tirana Egnatia Rrogozhine 2.51 2.98 2.64 0 0 4 2020-01-25 13:00:00 Albania First Division Elbasani Oriku 2.36 3.2 2.66 2 0 What would be the best way to train the model for predictions? The training data is a database of all the soccer competitions and teams. Should I be training the model with the competitions in the testing data (filter out all of the rest and keep the competition that the team has played before or is playing) and then predict? or Keep the training data as is and predict? Because a team has data outside the competitions as well. Example: Chelsea has played in the FA Cup, Champions League, Premier League and other competitions. I want to predict a Chelsea's match for the Champions League. Should I be taking training data for Chelsea for all the competitions or should I filter training data for Chelsea for just the Champions league? What could be defined as 'noise' in such a model? What is the most useful approach data science wise?
