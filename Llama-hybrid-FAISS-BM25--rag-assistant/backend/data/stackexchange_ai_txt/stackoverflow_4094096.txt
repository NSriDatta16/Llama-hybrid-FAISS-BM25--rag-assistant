[site]: stackoverflow
[post_id]: 4094096
[parent_id]: 1153017
[tags]: 
Not sure if you are still interested in this, but I believe you can get this working by actually putting the 'sum' keyword in your sqlProjection. Your query would then look like: objCriteria = objSession.createCriteria(ItemVO.class, "IT") .setProjection(Projections.projectionList() .add(Projections.property("IT.name"), "itemName") .add(Projections.sqlProjection("sum(QTY * cost)", new Float[] {"TotalCost"}, ( new Type[] {Hibernate.Float})))) .setResultTransformer(Transformers.aliasToBean(ConsumableDTO.class)); This should result in returning an Object[] for each item that matches, with the name in the first array element, and the computed 'totalCost' in the second.
