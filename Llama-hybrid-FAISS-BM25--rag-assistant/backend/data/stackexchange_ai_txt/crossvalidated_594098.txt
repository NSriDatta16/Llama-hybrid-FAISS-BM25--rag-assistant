[site]: crossvalidated
[post_id]: 594098
[parent_id]: 593242
[tags]: 
Yes, XGBoost handles categorical features nowadays (from ver. 1.5.x onwards). The functionality is currenty experimental but as it stands XGBoost handles categorical features the same way that LightGBM does; in short, the categories are binned and then sorted according to the training objective at each split. Effectively that is a one-dimensional clustering and allows us to find the optimal split of this "binned" variable fast and efficiently. A worked example can be found under the Categorical Data tutorial in the XGBoost homepage. As final comment: when using categorical features with relatively low cardinality (e.g. very high cardinality features (1000+) like textual descriptions, embedding the categories in a low-dimensional numeric space might be simpler and easier to work with.
