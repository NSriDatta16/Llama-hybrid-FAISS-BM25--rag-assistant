[site]: stackoverflow
[post_id]: 965363
[parent_id]: 
[tags]: 
Linux Wireless Network Testbed

I am writing a linux testbed for wireless sensor networks. The core objective is to test data transfer between any two nodes. The network runs using tree topology. One node in the network is the "Driver". This node is connected using serial port to a linux PC. What I am trying to write is the software on this linux PC that will drive data transfer in the network. The "Driver" node, taking commands from the software running on linux PC, will send out data request message to a Sender node. The Sender node will parse the data request message and commence data transfer to the "Driver". Multiple such Senders can exist. All data transfers is from the Senders to the "Driver" node. The "Driver" node passes all the data it receives to the linux application. The linux application keeps track of how many packets have been received from the different Senders. Following are the requirements. Any node in the network can be the driver (destination) and any node can be the Sender. There can be multiple Senders at any give time, sending data to the "Driver" node. The data received from serial port and sent by serial port by the linux application are logged to a file. The linux application should be able to read data request messages from a file and send them out at specified times. A GUI for this linux application. All the code with be in C, so the GUI choice will have to place nice with C. One final twist: the data from Sender to "Driver" is fragmented data. On the Sender side fragmentation is handled in the device itself. On the "Driver" side fragmentation will be handled in the linux application. So the linux application will have to keep track of the fragmentation window and send fragment ack for each of the data transfer going on with the multiple senders, and keep track of the number of packets received so far from each Sender. So in the linux application, is the way to go having multiple threads - one thread for each Sender? Will multiple threads play nice with one serial port for sending and receiving simultaneously? Advise on any requirement will be appreciated. The basic idea is to test data transfer, especially data gathering(several nodes sending data to one node) . If a different approach than outlined above is suggested I am more than welcome to hear them too. Thanks a bunch James
