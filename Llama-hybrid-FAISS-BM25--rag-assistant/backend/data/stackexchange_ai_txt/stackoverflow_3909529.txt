[site]: stackoverflow
[post_id]: 3909529
[parent_id]: 
[tags]: 
The expression is not supported error when accessing Azure Tables

I'm trying to get some records from the Azure Table Storage while using paging with the continuation token. I have the following code: public Stories SelectStory(DateTime start, DateTime end, string searchGuid) { long startTicks = DateTime.MaxValue.Ticks - start.ToUniversalTime().Ticks; long endTicks = DateTime.MaxValue.Ticks - end.ToUniversalTime().Ticks; var stories = _ServiceContext.CreateQuery ("Story").Where(s => Convert.ToInt64(s.RowKey.Substring(0, s.PartitionKey.IndexOf("_"))) > startTicks && Convert.ToInt64(s.RowKey.Substring(0, s.PartitionKey.IndexOf("_"))) ; var results = query.Execute(); var response = results as QueryOperationResponse; Stories temp = new Stories(); if(response.Headers.ContainsKey("x-ms-continuation-NextRowKey")) { temp.NextPartitionKey = response.Headers["x-ms-continuation-NextPartitionKey"]; if (response.Headers.ContainsKey("x-ms-continuation-NextRowKey")) { temp.NextRowKey = response.Headers["x-ms-continuation-NextRowKey"]; } } temp.List = results.ToList(); return temp; } But I'm getting the following error: The expression (((ToInt64([10007].RowKey.Substring(0, [10007].PartitionKey.IndexOf("_"))) > 2521167043199999999) And (ToInt64([10007].RowKey.Substring(0, [10007].PartitionKey.IndexOf("_"))) I'm not sure why the expression is not allowed. Does anyone have any ideas how I can change it to get it to work? Thanks! Edit: the new code (no errors but no data gets selected - even though i know it exists): public Stories SelectStory(DateTime start, DateTime end, string searchGuid) { long startTicks = DateTime.MaxValue.Ticks - start.ToUniversalTime().Ticks; long endTicks = DateTime.MaxValue.Ticks - end.ToUniversalTime().Ticks; var strStart = string.Format("{0:10}_{1}", DateTime.MaxValue.Ticks - startTicks, "00000000-0000-0000-0000-000000000000"); var strEnd = string.Format("{0:10}_{1}", DateTime.MaxValue.Ticks - endTicks, "00000000-0000-0000-0000-000000000000"); var stories = _ServiceContext.CreateQuery ("Story").Where( s => s.RowKey.CompareTo(strStart) 0 //s.RowKey.CompareTo(startTicks.ToString() + "_") > 0 //&& s.RowKey.CompareTo(endTicks.ToString() + "_00000000-0000-0000-0000-000000000000") > 0 && s.PartitionKey == ("story_" + searchGuid) ).Take(50); var query = stories as DataServiceQuery ; var results = query.Execute(); var response = results as QueryOperationResponse; Stories temp = new Stories(); if(response.Headers.ContainsKey("x-ms-continuation-NextRowKey")) { temp.NextPartitionKey = response.Headers["x-ms-continuation-NextPartitionKey"]; if (response.Headers.ContainsKey("x-ms-continuation-NextRowKey")) { temp.NextRowKey = response.Headers["x-ms-continuation-NextRowKey"]; } } temp.List = results.ToList(); return temp; }
