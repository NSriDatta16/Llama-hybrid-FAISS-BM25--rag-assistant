[site]: stackoverflow
[post_id]: 2440535
[parent_id]: 2440491
[tags]: 
That should work fine provided you have enough space in the output buffer (at least 26 bytes) to take the largest string you'll create: char output[26]; sprintf(output, "now: %d-%d-%d %d:%d:%d\n", tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec); You need: 5 for "now: " . 4 for the year (for at least the next 79 centuries). 2 each for the other five numerics. 5 for the separators ( "-- ::" ). 1 for the newline. 1 for the terminating null character. You may also want to consider changing the format string to "now: %04d-%02d-%02d %02d:%02d:%02d" so that the datetimes will line up if you're outputting them, to avoid something like: 2009-12-31 23:59:58 blah blah blah 2010-1-1 0:0:7 yada yada yada when 2009-12-31 23:59:58 blah blah blah 2010-01-01 00:00:07 yada yada yada looks so much better. You'll notice I've left the "\n" off the end - since this is the sort of code you see a lot in logging, you'd want the datetime to be in a format you could easily append to, something like: fprintf (logFile, "%s Cannot write to '%s', error = %d\n", output, fileSpec, errno); If I've misunderstood what you're using this for, feel free to ignore the last few paragraphs.
