[site]: crossvalidated
[post_id]: 588627
[parent_id]: 
[tags]: 
What's the difference between statsmodels' RLM and robustbase's glmrob?

The Python package statsmodels comes with robust models of linear regression ( RLM , https://www.statsmodels.org/stable/rlm.html ). And the R package robustbase provides robust GLMs ( glmrob , https://www.rdocumentation.org/packages/robustbase/versions/0.95-0/topics/glmrob ). My question is: When reducing to the default parameters, and choosing family="gaussian" (with identity as the link function) as well as method="Mqle" in glmrob , what is the difference to the statsmodels approach RLM with the default HuberT norm? Also: Is there a set of parameters so that the two implementations will do the same thing? I noticed that the two functions produce different results, and found it quite hard to dig into the source code myself because I'm not very familiar with robust statistical methods in general. Intuitively, I would have assumed that the robust GLM agrees with RLM when the link function is the identity and the distribution is "gaussian" , but that doesn't seem to be the case. Even though this question sounds like a pure software question, I think it isn't because you could also frame it like this: Does the model proposed in Cantoni & Ronchetti 2001 ( https://www.tandfonline.com/doi/abs/10.1198/016214501753209004 ) agree with the classical robust Huber estimator when assuming normal distributions and the identity as the link function? If not, where exactly is the difference, and which modifications are necessary to obtain the same estimator?
