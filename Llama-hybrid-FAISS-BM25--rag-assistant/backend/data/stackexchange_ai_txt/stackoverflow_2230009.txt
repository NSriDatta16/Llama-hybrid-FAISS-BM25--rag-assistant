[site]: stackoverflow
[post_id]: 2230009
[parent_id]: 2229965
[tags]: 
Well the obvious answer: std::vector vec; DerivedType d; vec.push_back(&d); But probably not what you intended. d and vec better die at the same time; if vec outlives d you've got a bad pointer. I think what you really want is something like Boost pointer containers : boost::ptr_vector vec; vec.push_back(new DerivedType()); So you don't have to worry about leaks. The pointer containers were made specifically for the task of easing use and storage of polymorphic objects.
