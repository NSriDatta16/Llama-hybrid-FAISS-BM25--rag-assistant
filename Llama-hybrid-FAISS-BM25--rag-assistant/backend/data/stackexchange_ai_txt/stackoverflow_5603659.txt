[site]: stackoverflow
[post_id]: 5603659
[parent_id]: 5603612
[tags]: 
Yes. Create a class that extends android.app.Application , then in the Manifest put this class as the name of your application ...activities etc here... Now, that class that you created is your application. Its lifespan is all the way as long as the application is running, it holds the activities stack and you can add some custom fields to hold your values. To get the Application instance from an Activity , hit this.getApplication() . Edit regarding fields values being reset (in response to the commend by @hackbod): Using static fields on singletons is the other way to hold global values, but I find the proposed one more elegant. As of the case you mention with resetting values, that can also happen in other contexts (like incoming phone call, orientation change), which raises the need to sanitize (or check for existence, call it whatever you like) values before using them. Always!
