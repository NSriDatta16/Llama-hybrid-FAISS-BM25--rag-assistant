[site]: crossvalidated
[post_id]: 386214
[parent_id]: 
[tags]: 
Classifying XOR grid with simple NN, but with more points on the grid

I am getting started with very simple Neural Networks/Multilayer Perceptrons. I successfully classified the XOR problem, but I wanted to explore so I created a grid such as . I used Tensorflow code and NN model from this article . Network Details: 2 inputs, 1 hidden layer with 2 neurons, and 1 output layer with 1 neuron. Sigmoid activation function is used. The cost function is the "average over all the training examples" according to the link: [ y * log(y_hat) - (1 - y) * log( 1-y_hat ) ]. Gradient Descent with learning rate of 0.01 is used to train the algorithm. Weights initialized from uniform distribution between -1 and 1, biases initialized to 0. I successfully trained the algorithm on the grid: Then, I held out 1 point but was unable to converge the algorithm: Next, I held out the 2 corner points and was able to converge the algorithm this time: Questions: (1) Why is the classifier not working very well in the 15-point case? It seems to be satisfied with classifying that corner and disregards the 2 points in the middle. (2) Is there a technique I can use to sort of "nudge it" towards the right solution? Different initialization?
