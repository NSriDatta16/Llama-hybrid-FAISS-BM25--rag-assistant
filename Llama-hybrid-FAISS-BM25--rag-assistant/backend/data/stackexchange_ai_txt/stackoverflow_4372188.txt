[site]: stackoverflow
[post_id]: 4372188
[parent_id]: 4372137
[tags]: 
Looks like a standard solution, except for the retrieval in the background thread. It will be thread safe as long as all other bits of the code that use the cache also take out a lock on the same cache reference before modifying it. From your code, other threads will still be able to read from the cache (or write to it if they don't take out a lock(). The code will only block at the point a lock() statement is encountered. Does the return "local value" make sense? Would you not need to retrieve the item in that function anyway in the case of a cache miss?
