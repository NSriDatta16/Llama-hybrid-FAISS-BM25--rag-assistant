[site]: stackoverflow
[post_id]: 5661979
[parent_id]: 5661480
[tags]: 
As Nemoden's answer, you should use InnoDB, not MyISAM. The FOREIGN KEY relationship can (and should in MYSQL) be added like this: CREATE TABLE phone ( email varchar(100) NOT NULL , phone varchar(20) DEFAULT NULL , FOREIGN KEY fk_mailing (email) --- the "fk_mailing" name is optional REFERENCES mailing (email) ) ENGINE=InnoDB DEFAULT CHARSET = utf8 ; --- or other charset you prefer From the tutorial you use: I'm using MySQL, and I wanted to comment on a snag I ran into while I was following the tutorial in this page. Maybe other newbies can benefit from this. As far as I can tell: a) MySQL supports different "storage engines" for tables. This is presumably a good thing. However, not all engines support referencial constraints. b) For a MySQL table to support a "references" constraint, it must be of type InnoDB. In my installation (on SuSE Linux, right out of a standard RPM binary package), this is not the default. So you have to either change the server configuration to make this the default, or specify "ENGINE = InnoDB" after the closing parenthesis in the table definition. c) Even for InnoDB, the syntax described by Phil above does not work, though it is not rejected, merely ignored . According to the manual, this is effectively just a comment to the developer that this column is supposed to reference another column, even if the constraint is not enforced by mysql. d) So, the only way to make this kind of constraint work is to: 1. make the table InnoDB and 2. use the "FOREIGN KEY (email) REFERENCES mailing_list(email)" format as a separate entry inside the table definition. [MySQL won't even give a warning! Not even a reminder that such reference clauses are merely "comments". It will just happily ignore them and allow any old value in that row. Ugh.] -- Antonio Ramirez, March 19, 2007
