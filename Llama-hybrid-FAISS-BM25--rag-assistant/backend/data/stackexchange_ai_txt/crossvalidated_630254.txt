[site]: crossvalidated
[post_id]: 630254
[parent_id]: 
[tags]: 
Multiple regressions with each factor level as contrast coding

I've determined there is a difference in factor levels on a dependent variable. I'd now like to determine which level differs from other levels. I know I can use contrast coding, specifically deviation coding (described here ) to compare each level against the grand mean. However, problems are: Comparison of one level is against mean of means of remaining levels, ignoring group size differences Contrasts are for j-1 groups, rather than all levels. I know this can be modified with additional coding specifications or computing estimated marginal means, such as by using emmeans. Contrast comparisons use Wald-based t-statistics, whereas maximum likelihood-based methods may be more desirable in some cases. To address above, I propose to dummy code each factor level as the contrast group, run a regression with this full model, and compare this model against a null model, with that group effect removed, using a likelihood ratio test. library(tidyverse) # Sample data, 4 groups of average different height dat % # Pivot to long format pivot_longer(everything(), names_to = "group", values_to = "height") %>% mutate(group = as_factor(group)) First, establish there is a difference amongst groups: # Test for overall effect of group lm_full_mod Then I iterate through data, coding each level as the contrast group and compare dependent variable against remaining control group data. # Iteratively dummy code each factor level as a contrast group to compare dependent variable of contrast group with remaining data dat %>% reframe(unique(group)) %>% pull() %>% # Get each factor level map_dfr( .x = ., .f = ~{ # Dummy code as contrast group or control dat %>% mutate( contrast_group = ifelse(group == .x, "contrast", "control") ) %>% # Optional step- can add contrast group data back as a control group to truly get group mean # bind_rows(., dat %>% filter(group == .x) %>% mutate(contrast_group = "control")) %>% {. -> tmp # tmp data for models lm_contrast_mod_full % broom::tidy() %>% slice(2) %>% add_column(height = as.character(.x), .before = 1) # Identify factor } } ) This produces: height term X.Df LogLik df statistic p.value 1 a_shortest_group height ~ 1 2 -14894. -1 60.1 8.95e-15 2 b_short_group height ~ 1 2 -14894. -1 6.96 8.32e- 3 3 c_medium_group height ~ 1 2 -14894. -1 4.76 2.92e- 2 4 d_tall_group height ~ 1 2 -14894. -1 67.5 2.10e-16 This gives results very similar to emmeans marginal means approach (p-value similar to hundredth): emmeans::emmeans(lm_full_mod, specs = eff ~ group)$contrasts contrast estimate SE df t.ratio p.value a_shortest_group effect -2.119 0.271 3996 -7.822 My questions are: Is this a known technique? Name? References? Is this technique sound? Any foreseeable problems? Are there any reasons why typical contrast coding, marginal means estimation (emmeans) is superior? Thanks!
