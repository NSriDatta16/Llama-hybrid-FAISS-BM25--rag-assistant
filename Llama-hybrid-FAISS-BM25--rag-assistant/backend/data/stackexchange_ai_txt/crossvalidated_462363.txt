[site]: crossvalidated
[post_id]: 462363
[parent_id]: 
[tags]: 
Creating a dataframe includes my cross validation scores

I'm kinda beginner and stuck at some basic part of my work. I want to create a pandas dataframe showing my CV scores and std's per model. I managed to get the results I want but I feel like I did it the wrong way. from sklearn.model_selection import train_test_split, KFold, cross_val_score from sklearn.linear_model import LinearRegression, Ridge from sklearn.metrics import r2_score, mean_squared_error from sklearn.ensemble import GradientBoostingRegressor, RandomForestRegressor, BaggingRegressor import xgboost as xgb import lightgbm as lgb mods = [LinearRegression(),Ridge(),GradientBoostingRegressor(), RandomForestRegressor(),BaggingRegressor(), xgb.XGBRegressor(), lgb.LGBMRegressor()] scores = [] stds = [] for mod in mods: score = rmsle_cv(mod) scores.append(score.mean()) stds.append(score.std()) This is the part I'm not sure about, It's working but whenever I want to add a new model I need to edit lists twice, I wonder if there is a better way to do this(I don't wanna have another list includes model names: models = ['LinearRegression','Ridge','GradientBoostingRegressor', 'RandomForestRegressor','BaggingRegressor', 'XGBRegressor', 'LGBMRegressor'] model_df = pd.DataFrame({ 'Model': models, 'Score': scores, 'Std': stds}) print(model_df.sort_values(by='Score', ascending=True).reset_index(drop=True))
