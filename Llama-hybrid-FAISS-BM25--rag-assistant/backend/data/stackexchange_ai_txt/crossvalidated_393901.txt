[site]: crossvalidated
[post_id]: 393901
[parent_id]: 
[tags]: 
Singular fit with simplest random structure in lmer (lme4), is a Bayesian approach the only option?

I'm running a mixed model with the lmer function from the lme4 package in R and ran into some issues with singular fits. I get the warning message 'singular fit' , which is specified as 'convergence code 0; 1 optimizer warnings; 0 lme4 warnings' in summary(model) . Just as background information, I recently re-installed my computer (MacOS) and I can't remember that I had the same issue before. Thus, something might have changed, which could explain that the issue emerged (see also this thread here , where somebody only got the message after some unknown changes, possibly updates). Based on this thread here , I first thought that the random effect structure might be too complex for my dataset and simplified the model. However, I still got the same warning after building a model only including the random intercept for subject and nothing else: lmer(y ~ 1 + (1|Subject)) Therefore, I tried to reconstruct my dataset by only using the means and standard deviations from all subjects, and then simulate new data based on these values. My idea was to test whether the issue arises in similar datasets, and I also wanted to have a dataset that is easier to share here. Running the same model as above on some of these new (partly random) datasets, I still have the same issue with the singular fit. However, I don't get it all the time (see below). Therefore, I wanted to ask if anybody could give me a good explanation for this phenomenon. Reproducible Example: First, I defined a function to get n normally distributed, random values per subject, based on the mean and sd provided for each subject. get_subject_df Here, I create lists with means and sds for all subjects based on real data subject_means I ran the model y ~ 1 + (1|Subject) several times using different values for set.seed() and singular fit issues arises with some but not all models. (E.g. when the value for set.seed() is 2, 4, 8, there is an issue but not with 1, 3, 5, ....). Here's a model with the issue (note that the sd for the random intercept for ID is 0.) set.seed(2) df_1 Models where values for all subjects have the same standard deviation (here 2) don't seem to have that problem (I tried all values between 1 and 1000 in set.seed() , and never had an issue with singular fit). set.seed(1) df_2 Edit: I went through the links provided by Ben Bolker in the comments and also through the other sources that were linked within these threads. If I understand it correctly, there are the following (potential) options to deal with such singular models (as summarized here ): Simplify the random structure. Not possible in my case as I already used the simplest random effect structure that is possible and an intercept-only model. Fit the random effect as fixed effect. However, it seems that this suggestion applies to scenarios where the number of random-effect levels is very low ( Use a Bayesian approach. Thus, my open questions is whether my only option is to use a Bayesian approach?
