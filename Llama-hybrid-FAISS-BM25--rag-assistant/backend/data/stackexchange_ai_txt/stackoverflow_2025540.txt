[site]: stackoverflow
[post_id]: 2025540
[parent_id]: 1357485
[tags]: 
If you are working from Steven Sanderson's book, Pro ASP.Net MVC Framework, then you'll need to make a change to the WindsorControllerFactory class to work with the interface exposed by the DefaultControllerFactory. This class was updated in the MVC 2 Preview 2. Who knows what the final release will hold. Change: protected override IController GetControllerInstance(Type controllerType) To: protected override IController GetControllerInstance(RequestContext requestContext, Type controllerType) I've also found it necessary to ensure that the MVC 2 Preview 2 framework hasn't passed in a non-controller class (it was unexpectedly passing in favicon.ico as the controllerType). So the updated GetControllerInstance method looks like this: protected override IController GetControllerInstance(RequestContext requestContext, Type controllerType) { //Debug.Print("Controller: {0}, Action: {1}", requestContext.RouteData.Values["Controller"], requestContext.RouteData.Values["Action"]); if (controllerType == null) { //Debug.Print("Is IController: {0}", (controllerType is IController)); //Debug.Print("Is null: {0}", (controllerType == null)); return null; } else { return (IController)container.Resolve(controllerType); } } I left the Debug code in there in case you're interested in seeing why you're getting a "Value cannot be null" error in the WindsorControllerFactory. After making this change, Windsor began working for me. Hopefully, this will help. Cheers, Jason
