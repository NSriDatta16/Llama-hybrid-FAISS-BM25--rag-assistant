[site]: stackoverflow
[post_id]: 495789
[parent_id]: 495666
[tags]: 
It's been a while since I've messed with Drag/Drop so I figured I'll write a quick sample. Basically, I have a form, with a listbox on the left, and a treeview on the right. Then I put a button on top. When the button is clicked, it just puts the date of the next ten days into the list box. It also populates the TreeView with 2 parents nodes and two child nodes. Then, you just have to handle all the subsequent drag/drop events to make it work. public partial class Form1 : Form { public Form1() { InitializeComponent(); this.treeView1.AllowDrop = true; this.listBox1.AllowDrop = true; this.listBox1.MouseDown += new MouseEventHandler(listBox1_MouseDown); this.listBox1.DragOver += new DragEventHandler(listBox1_DragOver); this.treeView1.DragEnter += new DragEventHandler(treeView1_DragEnter); this.treeView1.DragDrop += new DragEventHandler(treeView1_DragDrop); } private void button1_Click(object sender, EventArgs e) { this.PopulateListBox(); this.PopulateTreeView(); } private void PopulateListBox() { for (int i = 0; i 0) { nodeToDropIn = nodeToDropIn.Parent; } object data = e.Data.GetData(typeof(DateTime)); if (data == null) { return; } nodeToDropIn.Nodes.Add(data.ToString()); this.listBox1.Items.Remove(data); } private void listBox1_DragOver(object sender, DragEventArgs e) { e.Effect = DragDropEffects.Move; } private void treeView1_DragEnter(object sender, DragEventArgs e) { e.Effect = DragDropEffects.Move; } private void listBox1_MouseDown(object sender, MouseEventArgs e) { this.listBox1.DoDragDrop(this.listBox1.SelectedItem, DragDropEffects.Move); } }
