[site]: stackoverflow
[post_id]: 2712780
[parent_id]: 2711413
[tags]: 
Unsigned_4 is a "modular type" taking the values 0, 1, .. 14, 15, and wrapping round. U : Unsigned_4; begin U := Unsigned_4'Last; -- 15 U := U + 1; -- 0 You only need 4 bits to implement the type, so it's OK to specify that as its Size (I think this may be simply a confirming spec, since the compiler clearly knows that already; if you were hoping to fit it into 3 bits and said for Unsigned_4'Size use 3; the compiler would tell you that you were wrong). Most compilers will want to store values of the type in at least a byte, for efficient access. The minimum size comes into its own when you use the type in a packed record (pragma Pack).
