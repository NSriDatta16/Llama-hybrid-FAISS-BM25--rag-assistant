[site]: stackoverflow
[post_id]: 520085
[parent_id]: 519925
[tags]: 
I know who I'm communicating with, so I don't really have to worry about endianness. But I like to stay away from compiler specific commands anyway. So how about this: const int kHeaderSizeInBytes = 6; struct Header { unsigned short bodyLength; unsigned short msgID; unsigned short protocolVersion; unsigned short convertUnsignedShort(char inputArray[sizeof(unsigned short)]) {return (((unsigned char) (inputArray[0])) msgBuffer; Header header; for(int x = 0; x Gets rid of the pragma, but it isn't as general purpose as I'd like. Every time you add a field to the header you have to modify the
