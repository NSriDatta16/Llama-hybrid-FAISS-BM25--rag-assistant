[site]: stackoverflow
[post_id]: 3420549
[parent_id]: 3420312
[tags]: 
GoF design patterns are about using proven patterns to solve common problems with elegant, maintainable code. They don't target performance. If you want patterns for performance, you may need to look at system architecture patterns, algorithms, data structures, etc. What does your app do? If your application is in C++, and is written sensibly, the chances are your code will run blindingly fast on modern hardware, until it has to wait for I/O. The exception would be something like real time image analysis that is very processor intensive. If performance is an issue, do you really mean I/O performance? (disk, DB, network etc.) There are 'patterns' that allow your application to perform even while frequently waiting for I/O (asynchronous callbacks etc.) If you are dealing with an uneven load, whereby the peak load may be much higher than average load, a commonly employed architecture pattern is to de-couple system components with message queues.
