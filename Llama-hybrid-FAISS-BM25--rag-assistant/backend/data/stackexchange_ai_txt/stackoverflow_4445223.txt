[site]: stackoverflow
[post_id]: 4445223
[parent_id]: 4434576
[tags]: 
I don't know the final answer, but I think that the changes that were described as coming "Real Soon Now" in Raffi's blog post of May 2010 , have not actually been made, for whatever reason. So in fact, using OAuth, you do have to post separately to TwitPic and to Twitter. It's not hard to do this in Twitter, though. Just do a POST on the statuses/update.xml URL. private void Tweet(string message) { var twitterUpdateUrlBase = "http://api.twitter.com/1/statuses/update.xml?status="; var url = twitterUpdateUrlBase + UrlEncode(message); var authzHeader = oauth.GenerateAuthzHeader(url, "POST"); var request = (HttpWebRequest)WebRequest.Create(url); request.Method = "POST"; request.PreAuthenticate = true; request.AllowWriteStreamBuffering = true; request.Headers.Add("Authorization", authzHeader); using (var response = (HttpWebResponse)request.GetResponse()) { if (response.StatusCode != HttpStatusCode.OK) MessageBox.Show("There's been a problem trying to tweet:" + Environment.NewLine + response.StatusDescription + Environment.NewLine + Environment.NewLine + "You will have to tweet manually." + Environment.NewLine); } } There are two tricky parts to that code: First is the UrlEncode() call. OAuth specifies that the urlencoding must use uppercase letters. The built-in .NET routine uses lowercase. So be sure to upcase. The second tricky part is is getting the OAuth Authorization Header. If you use an OAuth library package it should be pretty simple. For those who want a simple one, you can get one here: OAuth.cs . (Get the OAuthManager downloaD)
