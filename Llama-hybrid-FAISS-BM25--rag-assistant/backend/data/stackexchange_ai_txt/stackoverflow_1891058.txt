[site]: stackoverflow
[post_id]: 1891058
[parent_id]: 
[tags]: 
How to store info about the authenticated user in WCF?

I have a WCF service where I use a customUserNamePasswordValidatorType (specified in the behaviors\serviceBehaviors\serviceCredentials\userNameAuthentication section of the web.config file). My custom UserNamePasswordValidator works that way: public bool Authenticate(string userName, string password) { If ( IsUserValid(username, password) ) { UserInfo currentUser = CreateUserInfo(username); // // Here I'd like to store the currentUser object somewhere so that // it can be used during the service method execution // return true; } return false; } During the service call execution, I need to access the info of the authenticated user. For instance I would like to be able to implement: public class MyService : IService { public string Service1() { // // Here I'd like to retrieve the currentUser object and use it // return "Hello" + currentUser.Name; } } My question is how and where should I store the information during the authentication process so that it can be accessed during the call execution process? That storage should only last as long as the "session" is valid. By the way, I don't use (and don't want to use) secure sessions and/or reliable sessions. So I have both establishSecuritytContext and reliableSessions turned off. I'm thinking of enabling ASP.NET Compatibility Mode to store the user info in the HttpContext.Current.Session but I have the feeling it's not how it should be done.
