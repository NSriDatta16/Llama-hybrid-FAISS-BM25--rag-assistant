[site]: stackoverflow
[post_id]: 4333083
[parent_id]: 4327366
[tags]: 
I would say, I follow the below algorithm to a forest changes changes why I am referring to forst because in normal gui based scenarios there can be number to trees. i don't know whether this is applicable to your scenario or not but for mine it is valid. There can be scenarios 1- Child Added to Parent ( By Drag & Drop) 2- Parent added to child (By Drag & Drop) 3- one tree moved to another tree. (By merging root nodes) (this may not be applicable in your scenario) for implementational point of view, I were using C# as my language. My Approach to the problem 1- Create a in memory structure which represents tree 2- When user moves the node change the parent id ( Check has to be made that it is not results in a cycle) 3- Re-Create the tree so that in memory representation will always be updated. 4- take in memory representation and save. so in my implementation point no 3 is crucial as I always hold the latest tree in my memory.
