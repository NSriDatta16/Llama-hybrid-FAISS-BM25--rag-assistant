[site]: stackoverflow
[post_id]: 1201926
[parent_id]: 
[tags]: 
ASP.NET MVC - EntityFramework and Binding to a List

I am currently using the EntityFramework to bind my ASP.NET MVC project to a MySQL database and one of my entities, Product, has an Images property containing a collection of ProductImages. I have built a form to allow the user to modify a given Product and this form includes fields for editing all of the images associated to that Product as well. After reading Phil Haack's and Dan Miser's posts on the matter I have a decent idea of what needs to happen, but I can't seem to make it work for some reason... Here is my Product form: " %> p.Order)) { %> And here is the definition for ProductImageForm: " %> " alt="" /> Description: Order: And finally my ProductsController actions: public ActionResult Edit(int id) { var product = productsRepository.GetProduct(id); if (product == null) return View("NotFound", new MasterViewModel()); // else return View(ContentViewModel.Create(product)); } [AcceptVerbs(HttpVerbs.Post), ValidateInput(false)] public ActionResult Edit(int id, FormCollection formCollection) { var product = productsRepository.GetProduct(id); if (formCollection["btnSave"] != null) { if (TryUpdateModel(product) && TryUpdateModel(product.Images, "images")) { productsRepository.Save(); return RedirectToAction("Details", new { id = product.ID }); } return View(ContentViewModel.Create(product)); } // else return RedirectToAction("Details", new { id = product.ID }); } The HTML output for a single ProductImageForm looks like this: Description: Order: I have tried all sorts of methods of reorganizing my form including taking the Image collection out of the Product form and placing it in its own (which I really don't want to do), but nothing is working. Is there something blatatently wrong with my approach here?
