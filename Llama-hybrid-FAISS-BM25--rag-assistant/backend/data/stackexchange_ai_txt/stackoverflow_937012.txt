[site]: stackoverflow
[post_id]: 937012
[parent_id]: 880746
[tags]: 
EDIT #2: Note that this answer is no longer correct. See @doanduyhai's answer below. EDIT: Please note that this is for Spring 2.5 and may, but does not necessarily ensure that the same is for Spring 3.x. Double check the docs! This is along the lines of what @Gandalf said. Form controllers model a form request lifespan, from initial viewing of the form through form submission. After the form is submitted, the form controller's job is done, and it will remove the command object from the session. So, to keep the command object in the session between form workflows you will need to manage the session manually. After a clean POST, the object is removed from session. In short, I believe the setComplete() method is just good practice but is not necessarily required. EDIT : I just looked in my Spring book to confirm this. I'll quote it: When @SessionAttribute is not used, a new command object will be created on each request, even when rendering the form again due to binding errors. If this annotation is enabled, the command object will be stored in the session for subsequent uses, until the form completes successfully. Then this command object will be cleared from the session. This is usually used when the command object is a persistent object that needs to be identical across different requests for tracking changes. Essentially that's what I was saying above. It stores it in the session until you either A) call setComplete() or B) the controller successfully completes a POST.
