[site]: stackoverflow
[post_id]: 3038847
[parent_id]: 3009670
[tags]: 
Automatically floating two columns next to eachother is not currently possible only with CSS/HTML. Two ways to achieve this: Method 1: When there's no continous text, just lots of non-related paragraphs: Float all paragraphs to the left, give them half the width of the containing element and if possible set a fixed height. This is paragraph 1. Lorem ipsum ... This is paragraph 2. Lorem ipsum ... This is paragraph 3. Lorem ipsum ... This is paragraph 4. Lorem ipsum ... This is paragraph 5. Lorem ipsum ... This is paragraph 6. Lorem ipsum ... #container { width: 600px; } #container p { float: left; width: 300px; /* possibly also height: 300px; */ } You can also insert clearer-divs between paragraphs to avoid having to use a fixed height. If you want two columns, add a clearer-div between two-and-two paragraphs. This will align the top of the two next paragraphs, making it look more tidy. Example: This is paragraph 1. Lorem ipsum ... This is paragraph 2. Lorem ipsum ... This is paragraph 3. Lorem ipsum ... This is paragraph 4. Lorem ipsum ... This is paragraph 5. Lorem ipsum ... This is paragraph 6. Lorem ipsum ... /* in addition to the above CSS */ .clear { clear: both; height: 0; } Method 2: When the text is continous More advanced, but it can be done. This is paragraph 1. Lorem ipsum ... This is paragraph 2. Lorem ipsum ... This is paragraph 3. Lorem ipsum ... This is paragraph 4. Lorem ipsum ... This is paragraph 5. Lorem ipsum ... This is paragraph 6. Lorem ipsum ... .contentColumn { width: 300px; float: left; } #container { width: 600px; } When it comes to the ease of use: none of these are really easy for a non-technical client. You might attempt to explain to him/her how to do this properly, and tell him/her why. Learning very basic HTML is not a bad idea anyways, if the client is going to be updating the web pages via a WYSIWYG-editor in the future. Or you could try to implement some Javascript-solution that counts the total number of paragraphs, splits them in two and creates columns. This will also degrade gracefully for those who have JavaScript disabled. A third option is to have all this splitting-into-columns-action happen serverside if this is an option. (Method 3: CSS3 Multi-column Layout Module) You might read about the CSS3 way of doing it , but it's not really practical for a production website. Not yet, at least.
