[site]: stackoverflow
[post_id]: 4463974
[parent_id]: 
[tags]: 
URL security - what is considered a secure unguessable URL?

I was just thinking about the URLs of my current web project. The user can access different resources, like images using a web site. The URLs look something like this http://localhost:2143/p/AyuducjPnfnjZGfnNdpAIumehLiWaYQKbZLMeACUqgsYJfsqarTnDMRbwkIxWuDd Now, I really need high performance, and one way could be to omit the extra round trip to the database for authentication and just rely on the URL to be unguessable. Google does this with Picasa Web Albums , you can make an album private or unlisted. This secures the album but not the photo itself. Take this photo of Skagen (Denmark); http://lh4.ggpht.com/_Um1gIFfF614/TQpVMvN3hPI/AAAAAAAANRs/GY5DxrDPHUE/s800/IMG_4074.JPG , it's actually in a private album, but you can all see it. So what is your take on this? Is a 64 character long random string "secure" enough? Are there other approaches? Let's say I choose to do authentication for each request to the resources. The users have logged in to the site on somedomain.com, where they access their, let's say photo albums. A cookie is dropped to maintain their authentication. Now the actual photos are served through some form of CDN or storage service on a completely different URL. How would you maintain authentication across multiple domains? Let's say the content of two albums could be delivered from to different servers.
