[site]: stackoverflow
[post_id]: 2032046
[parent_id]: 2032009
[tags]: 
You can add your own event listener document.onmousewheel = myScrollFunction Scrolling can be done by window.scrollBy(x, y) Where x is the horizontal scrolling offset and y the vertical scrolling offset. So you might just call this function in your event listener. You may have to stop bubbling with event.stopPropagation and prevent browser default behaviour with event.preventDefault so that the original scrolling behaviour doesn't get applied anymore. Edit: I was curious about this so I implemented something :-) function onScroll(event) { // delta is +120 when scrolling up, -120 when scrolling down var delta = event.detail ? event.detail * (-120) : event.wheelDelta // set own scrolling offset, take inverted sign from delta (scroll down should scroll right, // not left and vice versa var scrollOffset = 10 * (delta / -120); // Scroll it window.scrollBy(scrollOffset, 0); // Not sure if the following two are necessary, you may have to evaluate this event.preventDefault; event.stopPropagation; } // The not so funny part... fin the right event for every browser var mousewheelevt=(/Firefox/i.test(navigator.userAgent)) ? "DOMMouseScroll" : "mousewheel"; if (document.attachEvent) document.attachEvent("on"+mousewheelevt, onScroll); else if (document.addEventListener) document.addEventListener(mousewheelevt, onScroll, false); This works in Firefox 3.5 and Opera 10, however not in IE8. But that would be your part now... ;-)
