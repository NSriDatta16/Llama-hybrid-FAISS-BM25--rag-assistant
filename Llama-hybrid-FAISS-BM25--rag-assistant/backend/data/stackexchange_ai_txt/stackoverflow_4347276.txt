[site]: stackoverflow
[post_id]: 4347276
[parent_id]: 
[tags]: 
Forced Downcasting in Java

I want to force a downcast on a object what can't be down casted and was wondering what the right approach would be. The use case is that I have a list of rules that are checked and what will generate a list of failed rule. A failed rule is a subclass of a rule. But downcasting like FailedRule failedRule = (FailedRule) rule; will fail because the rule object is not an instanceof FailedRule To work around this I instantiate a clone; FailedRule failedRule = new FailedRule (rule); and my FailedRule class looks like this public class FailedRule extends Rule{ /* *force a down cast from Rule to FailedRule through cloning */ public FailedRule (Rule upcast){ super.setRuleCode( upcast.getRuleCode()); super.setType(upcast.getType()); .. Is there a easier way to do this? To answer myself, the design is flawed, the code should be: public class FailedRule{ private Rule rule; .. public setRule(Rule rule){ ..
