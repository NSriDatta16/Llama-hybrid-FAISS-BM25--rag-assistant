[site]: stackoverflow
[post_id]: 4923866
[parent_id]: 
[tags]: 
PHP multiple image file upload and storage to folder and database

I am building a site that will show night revelers a listing of night club establishments and events happening in a big city. I'm trying to build a back-end page where an administrator can be able to add clubs and input information such as establishment name, location, relative pricing etc and of course some images of the club. Each club will have to have at least one image, the main image. There can be an additional 5 but these are optional, ie. database fields can be null. I have a form that looks like this: Establishment Main Photo TextField: name = "establishment_image" Establishment Photo 1 TextField: name = "establishment_image" Establishment Photo 2 TextField: name = "establishment_image" Establishment Photo 3 TextField: name = "establishment_image" Establishment Photo 4 TextField: name = "establishment_image" Establishment Photo 5 TextField: name = "establishment_image" Its kinda like the yahoo mail attach file form. As you can see the textfields have the same textfield name for now. I need to know what kind of changes I need to make on my submit form to be able to: for instance; Put a main pic and leave other textfields blank, Put a main pic, pic 1 and 2 and leave other textfields blank, Put a main pic, pic 1, 2 and 3 and leave other textfields blank etc. My establishment_submit.php looks like this: $ratio2_large) { $large_w=$new_large_w; $large_h=$old_y/$ratio1_large; }else { $large_h=$new_large_h; $large_w=$old_x/$ratio2_large; } // we create a new image with the new dimensions $dst_large_img=ImageCreateTrueColor($large_w,$large_h); // resize the big image to the newly created one imagecopyresampled($dst_large_img,$src_img,0,0,0,0,$large_w,$large_h,$old_x,$old_y); // output the created image to the file. Now we will have the image into the file named by $filename if(!strcmp("png",$ext)) imagepng($dst_large_img,$filename); else imagejpeg($dst_large_img,$filename); if (!strcmp("gif",$ext)) imagegif($$dst_large_img,$filename); //destroys source and destination images. imagedestroy($dst_large_img); imagedestroy($src_img); } function make_thumb($img_name,$filename,$new_w,$new_h) { //get image extension. $ext=getExtension($img_name); //creates the new image using the appropriate function from gd library if(!strcmp("jpg",$ext) || !strcmp("jpeg",$ext)) $src_img=imagecreatefromjpeg($img_name); if(!strcmp("png",$ext)) $src_img=imagecreatefrompng($img_name); if(!strcmp("gif",$ext)) $src_img=imagecreatefromgif($img_name); //gets the dimmensions of the image $old_x=imageSX($src_img); $old_y=imageSY($src_img); // next we will calculate the new dimensions for the thumbnail image // the next steps will be taken: // 1. calculate the ratio by dividing the old dimensions with the new ones // 2. if the ratio for the width is higher, the width will remain the one define in WIDTH variable // and the height will be calculated so the image ratio will not change // 3. otherwise we will use the height ratio for the image // as a result, only one of the dimensions will be from the fixed ones $ratio1=$old_x/$new_w; $ratio2=$old_y/$new_h; if($ratio1>$ratio2) { $thumb_w=$new_w; $thumb_h=$old_y/$ratio1; }else { $thumb_h=$new_h; $thumb_w=$old_x/$ratio2; } // we create a new image with the new dimensions $dst_img=ImageCreateTrueColor($thumb_w,$thumb_h); // resize the big image to the newly created one imagecopyresampled($dst_img,$src_img,0,0,0,0,$thumb_w,$thumb_h,$old_x,$old_y); // output the created image to the file. Now we will have the thumbnail into the file named by $filename if(!strcmp("png",$ext)) imagepng($dst_img,$filename); else imagejpeg($dst_img,$filename); if (!strcmp("gif",$ext)) imagegif($dst_img,$filename); //destroys source and destination images. imagedestroy($dst_img); imagedestroy($src_img); } // This function reads the extension of the file. // It is used to determine if the file is an image by checking the extension. function getExtension($str) { $i = strrpos($str,"."); if (!$i) { return ""; } $l = strlen($str) - $i; $ext = substr($str,$i+1,$l); return $ext; } // This variable is used as a flag. The value is initialized with 0 (meaning no error found) //and it will be changed to 1 if an errro occures. If the error occures the file will not be uploaded. $errors=0; // if it is not empty for($i=0;$i MAX_SIZE*1024) { $warning = ("Images have exceeded the size limit of 10MB"); header("location:establishment_add.php?warning=$warning"); $errors=1; exit(); } $rand= rand(0, 100000); //we will give an unique name, for example a random number $image_name=$rand.'.'.$extension; //the new name will be containing the full path where the image will be stored (images folder) $consname="C:/wamp/www/NNL/Administrator/Establishment_Images/".$image_name; //change the image/ section to where you would like the original image to be stored $consname2="C:/wamp/www/NNL/Administrator/Establishment_Images/Thumbs/".$image_name; //change the image/thumb to where you would like to store the new created thumbnail of the image $copied = copy($_FILES['establishment_image']['tmp_name'][$i], $consname); $copied = copy($_FILES['establishment_image']['tmp_name'][$i], $consname2); //localhost calling of images $img_large="../Establishment_Images/".$image_name; //change the image/ section to where you would like the original image to be stored $img_thumb="../Establishment_Images/Thumbs/".$image_name; //we verify if the image has been uploaded, and print error instead if (!$copied) { $warning = ("Unable to upload image file"); header("location:establishment_add.php?warning=$warning"); $errors=1; exit(); }else{ // the new large image will be placed in Images/ folder $imagelarge_name=$consname ; // call the function that will create the thumbnail. The function will get as parameters // the image name, the thumbnail name and the width and height desired for the thumbnail $imagelarge=make_largeimage($consname,$imagelarge_name,LARGE_WIDTH,LARGE_HEIGHT); // the new thumbnail image will be placed in Images/Thumbs/ folder $thumb_name=$consname2 ; // call the function that will create the thumbnail. The function will get as parameters // the image name, the thumbnail name and the width and height desired for the thumbnail $thumb=make_thumb($consname,$thumb_name,WIDTH,HEIGHT); } } } ?> This worked fine for single image uploads but doesnt work now. I know I need to make changes from the line; for($i=0;$i How do I make this form be able to upload multiple images. I will appreciate any help.
