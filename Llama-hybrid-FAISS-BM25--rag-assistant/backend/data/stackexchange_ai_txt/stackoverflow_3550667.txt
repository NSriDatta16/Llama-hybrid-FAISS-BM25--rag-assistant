[site]: stackoverflow
[post_id]: 3550667
[parent_id]: 3548880
[tags]: 
Your "hack" doesn't make sense. You are converting a Windows-1250 HTML file into UTF-8 and then prepending . This won't work. The DOM extension, for HTML files: Takes the charset specified in a meta http-equiv for "content-type". Otherwise assumes ISO-8859-1 I suggest you instead convert from Windows-1250 into ISO-8859-1 and prepend nothing. EDIT The suggestion is not very good because Windows-1250 has characters that are not in ISO-8859-1. Since you're dealing with fragments without meta elements for content-type, you can add your own to force interpretation as UTF-8: ĄĽź ‰ ‡ … á (some exist on win-1250, but not LATIN1 or even win-1252) XML; $htmlInterm = iconv("UTF-8", "Windows-1250", $html); //convert /* Append meta header to force UTF-8 interpretation and convert into UTF-8 */ $htmlInterm = " " . iconv("Windows-1250", "UTF-8", $htmlInterm); /* Omit libxml warnings */ libxml_use_internal_errors(true); /* Build DOM */ $d = new domdocument; $d->loadHTML($htmlInterm); var_dump($d->getElementsByTagName("body")->item(0)->textContent); //correct UTF-8 gives: string(79) "ĄĽź ‰ ‡ … á (some exist on win-1250, but not LATIN1 or even win-1252)"
