[site]: stackoverflow
[post_id]: 173662
[parent_id]: 173616
[tags]: 
This a great question and raises some concerns that I have about managing large set of unit tests for long running, large projects. My strategy is to have one unit test project for each project in your solution that is business or framework related. Unit tests are poorly suited to testing the UI aspects of a project and I generally leave this to scipted testing. The project is built using a continous integration (CI) server that is fired every time a developer commits a chunk of work. The CI server also runs all of the unit test as well generating unit test coverage statistics. The CI environment uses MSBuild to build the solution. Over time it is worth assessing whether all of your unit tests are necessary. A lot of the regression testing effort will shift to scripted testing and the overhead of maintaining unit tests can be costly. Ideally I would like all unit tests to be maintained over the life of the project but the maintenance overhead can sometimes be prohibitive. As a rule of thumb unit tests are maintained for business rules and the solution framework but not for UI, reporting or workflow. Obviously this will depend on the particulars of your project.
