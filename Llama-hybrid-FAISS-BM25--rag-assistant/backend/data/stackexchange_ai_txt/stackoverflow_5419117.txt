[site]: stackoverflow
[post_id]: 5419117
[parent_id]: 5418318
[tags]: 
The most common root cause of "java.lang.OutOfMemoryError: PermGen space" exceptions is storage leaks triggered by repeatedly hot-loading changes into a web container. Have you been hot-loading changes into your web container from NetBeans? Does the problem "go away" if you restart the web container? If the answer to both questions is "yes" then the chances are that this is your problem. There are three solutions: Don't hot-load. Or at least do full restarts of your web container more often. Increase the limit on the permgen heap using -XX:MaxPermSize=... Track down and fix whatever is actually causing the storage leaks. There is an insidious leak syndrome that occurs with hot-loading. Retaining a reference to one object instance created with the old version of some hot-loaded class will leak all classes loaded by the classes classloader, and all of their statics. According to @Daniel, Hibernate generates a lot of proxy classes, and that would use permgen space, and could warrant increasing the permgen heap size. I'd expect this to stabilize; i.e. an application that has "warmed up" would not generate any more proxy classes. However, it could be that hot-loading is causing the warmup to happen repeatedly, and the proxy classes are leaking as above.
