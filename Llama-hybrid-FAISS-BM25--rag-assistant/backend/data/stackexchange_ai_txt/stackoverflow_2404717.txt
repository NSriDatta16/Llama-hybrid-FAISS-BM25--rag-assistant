[site]: stackoverflow
[post_id]: 2404717
[parent_id]: 2402888
[tags]: 
ramdisk.sys is a driver that you can get from Microsoft as a driver demo but it apparently isn't guaranteed to work on Windows 7, so good luck with that. You can find other ramdisk implementations, but then you have to install them which means modifying your drive (ie, Step 1: install a sketchy driver). So this begs the question of what you're trying to do, really. If your goal is to create a sandbox for some executables so that they can't write to the local drive(s), this doesn't sound like the right approach. If the goal is to make a small suite of executables readily available so they run quickly, again, this doesn't seem like the right approach - Windows caches executables ANYWAY, so they second launch is faster. If the goal is to make a small, easy to clean up area for executables to run in, the windows temp directory is supposed to be the place for that. If you're trying to make a system like norton utilities or ghost that give unfettered access to the hard drive without leaving a trace, I question whether or not .NET is the right way to go for that since .NET is going to be hitting your HD hard and heavy anyway. If your goal is to create a virus or a trojan horse that hides its payload in a ram drive, I question your motives. What are you really trying to do? Another option instead of a ramdisk is Dokan , which is a user-mode file system driver. Making an in-memory drive from that is straight forward - I did a quick .NET app that made TWAIN scanners appear as drives as a demo, but I found that dokan, at the time I was using it, made my machine fragile: any misstep while I was working with it meant a trip to reboot land. And again, it requires the installation of a driver. Hopefully this has gotten better.
