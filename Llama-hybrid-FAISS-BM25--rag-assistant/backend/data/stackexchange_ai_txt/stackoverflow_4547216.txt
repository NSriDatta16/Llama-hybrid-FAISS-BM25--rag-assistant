[site]: stackoverflow
[post_id]: 4547216
[parent_id]: 4547032
[tags]: 
No it is not possible using any C# classes - they all operate at too high of a level, that its at the TCP/IP level (Even sockets are too high of a level). The Windows TCP/IP stack uses the routing table and interface metrics to determine which interface to send the packets out. You can see which interface Windows TCP/IP stack has determined has the best route (which is the one it will use to send the packet on) by calling GetBestInterfaceEx() . At a former employer we tried to do something similar, separating traffic onto different NIC's, by binding a socket to the IP address of the card we wanted to send the traffic on. However Windows would send the traffic out the NIC it saw had the best route (a NIC with a different IP address than the source). That took a bit of head scratching before we figured out what was going on. So short of doing something (perhaps) with raw sockets or libpcap (which would be ridicules, you would have to build your own TCP/IP and HTTP handlers) you cannot do that on Windows.
