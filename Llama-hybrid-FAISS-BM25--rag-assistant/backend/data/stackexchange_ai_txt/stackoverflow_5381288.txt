[site]: stackoverflow
[post_id]: 5381288
[parent_id]: 5381270
[tags]: 
The implementation is free to pad structs - there may be unused bytes in between a and b . It is guaranteed that the first member isn't offset from the beginning of the struct though. Typically you manage such layout with a compiler-specific pragma, e.g: #pragma pack(push) #pragma pack(1) struct TwoInt32s { int32_t a; int32_t b; }; #pragma pack(pop)
