[site]: stackoverflow
[post_id]: 790703
[parent_id]: 
[tags]: 
Tricks to refactor a piece of code with many branches (if/then/else)

I'm having a hard time trying to refactor some pieces of code with many branches. There are many if/then/else blocks, some of them are nested. Are there any tricks that can be used to refactor the code without wasting a lot of time trying to understand every minor aspect of the functionality first? For now I'm basically using boolean algebra (De Morgan's laws). I'm trying to modify the conditions in if statements so I could pop up small code snippets outside if/then/else blocks. This helps somehow, but the code still remains branched. I know at some point I will eventually have to break the biggies into smaller class methods, but this is complicated because the code contains calls to many other class methods and has a lot of local-scope variables, so I will have to deal with passing many arguments to new methods. I wonder If I could use some other tricks to improve the code quality before I start breaking it into distinct smaller pieces (class methods).
