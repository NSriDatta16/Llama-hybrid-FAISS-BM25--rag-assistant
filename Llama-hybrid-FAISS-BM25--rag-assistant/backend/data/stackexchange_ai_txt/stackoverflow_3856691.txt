[site]: stackoverflow
[post_id]: 3856691
[parent_id]: 3856601
[tags]: 
you need to use 2 collections - in your code you are filtering down a list ... really you need the collection of filtered lists - not a collection of a list that has been filtered multiple times. one as a repository for matches and the other witin your loop var userCollection = new Collection (); var users = UserRepository.ALL() foreach (var part in new [] { 'Ha', 'Ho', 'He' }) { string part1 = part; // "Copy" since we're coding lazily var matches = users.Where(x => x.LastName.StartsWith(part1) || x.FirstName.StartsWith(part1)); foreach (var i in matches) { userCollection.Add(i); } } I am not claiming this is the most elegant solution - just simply trying to point at why your logic is failing. you can probably do something with Contains var results= from i in collection where idList.Contains(i.Id) select i; just cant see how off the top of my head
