[site]: crossvalidated
[post_id]: 643452
[parent_id]: 361619
[tags]: 
In case anyone comes across this and needs a solution, the { marginaleffects } package makes this a breeze: library(mgcv) #> Loading required package: nlme #> This is mgcv 1.8-42. For overview type 'help("mgcv-package")'. library(dplyr) #> Warning: package 'dplyr' was built under R version 4.3.2 #> #> Attaching package: 'dplyr' #> The following object is masked from 'package:nlme': #> #> collapse #> The following objects are masked from 'package:stats': #> #> filter, lag #> The following objects are masked from 'package:base': #> #> intersect, setdiff, setequal, union library(marginaleffects) library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.3.3 theme_set(theme_bw()) # Origingal (un-nested) example DF # 1st derivative (slope, again on link scale) plot_slopes(GAM, variables = 'YEAR', by = 'YEAR', type = 'link') + geom_hline(yintercept = 0, linetype = 'dashed') # Where is the 1st derivative not "statistically different from zero"? # (use a finer sequence of years for more accurate estimates of slopes) hypotheses(slopes(GAM, newdata = datagrid(YEAR = seq(from = 1950, to = 2000, by = 0.25)), variables = 'YEAR', by = 'YEAR', type = 'link')) %>% dplyr::filter(p.value > 0.05) #> #> Term Contrast YEAR Estimate Std. Error z Pr(>|z|) S 2.5 % 97.5 % #> YEAR mean(dY/dX) 1972 0.033529 0.0239 1.4032 0.161 2.6 -0.0133 0.0804 #> YEAR mean(dY/dX) 1972 -0.014843 0.0239 -0.6215 0.534 0.9 -0.0617 0.0320 #> YEAR mean(dY/dX) 1996 0.000772 0.0234 0.0329 0.974 0.0 -0.0452 0.0467 #> #> Columns: rowid, term, contrast, YEAR, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted_lo, predicted_hi, predicted #> Type: link # Nested example DF_NEW $AVERAGE AVERAGE * -1.5 DF_NEW $YEAR SITE # 1st derivatives (slopes, again on link scale) plot_slopes(GAM2, variables = 'YEAR', by = c('YEAR', 'SITE'), type = 'link') + geom_hline(yintercept = 0, linetype = 'dashed') # Where are 1st derivatives "statistically different from zero"? # (use a finer sequence of years for more accurate estimates of slopes) hypotheses(slopes(GAM2, newdata = datagrid(YEAR = seq(from = 1950, to = 2000, by = 0.25)), variables = 'YEAR', by = c('YEAR', 'SITE'), type = 'link')) %>% dplyr::filter(p.value #> Term Contrast YEAR SITE Estimate Std. Error z Pr(>|z|) S 2.5 % #> YEAR mean(dY/dX) 1982 A -0.649 0.329 -1.97 0.0484 4.4 -1.29 #> YEAR mean(dY/dX) 1983 A -0.658 0.329 -2.00 0.0454 4.5 -1.30 #> YEAR mean(dY/dX) 1983 A -0.666 0.329 -2.03 0.0428 4.5 -1.31 #> YEAR mean(dY/dX) 1983 A -0.675 0.329 -2.05 0.0406 4.6 -1.32 #> YEAR mean(dY/dX) 1984 A -0.683 0.330 -2.07 0.0387 4.7 -1.33 #> 97.5 % #> -0.00469 #> -0.01354 #> -0.02164 #> -0.02888 #> -0.03534 #> --- 21 rows omitted. See ?print.marginaleffects --- #> YEAR mean(dY/dX) 1989 A -0.778 0.377 -2.06 0.0390 4.7 -1.52 #> YEAR mean(dY/dX) 1989 A -0.779 0.381 -2.05 0.0407 4.6 -1.52 #> YEAR mean(dY/dX) 1990 A -0.780 0.385 -2.03 0.0427 4.6 -1.53 #> YEAR mean(dY/dX) 1990 A -0.781 0.389 -2.01 0.0449 4.5 -1.54 #> YEAR mean(dY/dX) 1990 A -0.781 0.394 -1.98 0.0475 4.4 -1.55 #> 97.5 % #> -0.03918 #> -0.03302 #> -0.02583 #> -0.01770 #> -0.00863 #> Columns: rowid, term, contrast, YEAR, SITE, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted_lo, predicted_hi, predicted #> Type: link You can read more about how these functions work in the highly-detailed marginaleffects docs
