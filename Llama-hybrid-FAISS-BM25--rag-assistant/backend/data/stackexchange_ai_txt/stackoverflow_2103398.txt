[site]: stackoverflow
[post_id]: 2103398
[parent_id]: 2101961
[tags]: 
In the April, 2009 issue of Python Magazine, I wrote an article on embedding a State DSL within Python, using pyparsing and imputil. This code would allow you to write the module trafficLight.pystate: # trafficLight.pystate # define state machine statemachine TrafficLight: Red -> Green Green -> Yellow Yellow -> Red # define some class level constants Red.carsCanGo = False Yellow.carsCanGo = True Green.carsCanGo = True Red.delay = wait(20) Yellow.delay = wait(3) Green.delay = wait(15) and the DSL compiler would create all the necessary TrafficLight, Red, Yellow, and Green classes, and the proper state transition methods. Code could call these classes using something like this: import statemachine import trafficLight tl = trafficLight.Red() for i in range(6): print tl, "GO" if tl.carsCanGo else "STOP" tl.delay() tl = tl.next_state() (Unfortunately, imputil has been dropped in Python 3.)
