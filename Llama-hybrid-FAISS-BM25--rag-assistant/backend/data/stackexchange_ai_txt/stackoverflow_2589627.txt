[site]: stackoverflow
[post_id]: 2589627
[parent_id]: 2589542
[tags]: 
I haven't debugged this sucker but am throwing it our there as a manual solution for lack of finding a Resolve method in the .NET Framework outside of Control. This did work on a "~/whatever" for me. /// /// Try to resolve a web path to the current website, including the special "~/" app path. /// This method be used outside the context of a Control (aka Page). /// /// The path to try to resolve. /// The stringified resolved url (upon success). /// true if resolution was successful in which case the out param contains a valid url, otherwise false /// /// If a valid URL is given the same will be returned as a successful resolution. /// /// static public bool TryResolveUrl(string strWebpath, out string strResultUrl) { Uri uriMade = null; Uri baseRequestUri = new Uri(HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority)); // Resolve "~" to app root; // and create http://currentRequest.com/webroot/formerlyTildeStuff if (strWebpath.StartsWith("~")) { string strWebrootRelativePath = string.Format("{0}{1}", HttpContext.Current.Request.ApplicationPath, strWebpath.Substring(1)); if (Uri.TryCreate(baseRequestUri, strWebrootRelativePath, out uriMade)) { strResultUrl = uriMade.ToString(); return true; } } // or, maybe turn given "/stuff" into http://currentRequest.com/stuff if (Uri.TryCreate(baseRequestUri, strWebpath, out uriMade)) { strResultUrl = uriMade.ToString(); return true; } // or, maybe leave given valid "http://something.com/whatever" as itself if (Uri.TryCreate(strWebpath, UriKind.RelativeOrAbsolute, out uriMade)) { strResultUrl = uriMade.ToString(); return true; } // otherwise, fail elegantly by returning given path unaltered. strResultUrl = strWebpath; return false; }
