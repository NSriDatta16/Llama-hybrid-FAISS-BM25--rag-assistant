[site]: stackoverflow
[post_id]: 3862451
[parent_id]: 3861911
[tags]: 
You can have make tell someone else to print the commands as they are executed, which is much the same thing: make SHELL='/bin/sh -x' ...your make arguments... However this won't work quite so well if your makefile contains shell script fragments as recipes, rather than sequences of separate simple commands, as you'll see the individual shell commands as they are encountered instead of the whole fragments as they are invoked. Alternatively, you could actually take advantage of the free-software nature of GNU Make and hack up your own version that ignores the @ signs. Grepping the GNU Make source code for COMMANDS_SILENT will soon show you that it suffices to add 1 || to the ?: condition in the arguments to the message() call in start_job_command() in job.c . Job done!
