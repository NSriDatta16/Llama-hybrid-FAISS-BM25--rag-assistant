[site]: stackoverflow
[post_id]: 4323568
[parent_id]: 4323519
[tags]: 
It's horses for courses. The first method is less efficient as it typically requires two malloc() s and free() s for each list element, and an additional pointer indirection to access them - and of course storage space for the pointer. But, it allows different list elements to have different size payloads, which is potentially more awkward with the second approach. For the second approach I would reorder the struct so the list element is at the start - this does then give some flexibility with different payload sizes. struct person { struct list_element list_entry; unsigned int age; char name[20]; // now could be variable length. };
