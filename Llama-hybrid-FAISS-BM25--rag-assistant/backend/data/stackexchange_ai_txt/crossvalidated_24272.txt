[site]: crossvalidated
[post_id]: 24272
[parent_id]: 
[tags]: 
Creating tree splits in Hough forest

I am working on my thesis and working machine learning. The overall problem is Detecting and Recognition of Road Inventory. For my research part I am looking into decision trees, especially Hough forests. There are some areas where I need more information and if anyone else have worked with this I might save some time and get more time to do new scientific research. So here are a few questions related to the area, that I would like to discuss. (I will reference this question in my thesis if anyone bring up some scientific research). Based on Hough Forests for object detection, tracking and action recognition by Gall, Juergen et al. and other related articles using random forests (forests of decisions trees) most of what I have come across have described and used training splits based on checking if the difference of two features (etc. the x-gradient of the p and q pixel position) in a image patch are lower then a split value tau. Then the best split are found where the information gain is largest, (i.e. splitting the data into the two most distinctive subgroups). A few years earlier then these articles, from what I get it all origin from the work of Breiman. The implementation is available in OpenCV. Have there been any work in the two methods, the OpenCV implementation and the outlined idea in Gall et al. The overall difference is the way the split are done. Gall et al compare two features at p and q, OpenCV select one feature and find the best split for it. Is one of the methods to prefer? The hole scale part of Gall et al. work. From what I get, all positive objects are scaled such longest spatial dimension to a unit size around 100 pixel. I get the reason for doing it, but when taking into fact that the test image are not scaled at all, will this not mean they are trying to match an image patch of size X with dictionary image patches of another size. Cant this be done in a better way? Might create follow up questions as my work continues, but I would like to discuss these thins, as I find them interesting for my project and I am sure there are people out there who worked tons of hours in similar topics.
