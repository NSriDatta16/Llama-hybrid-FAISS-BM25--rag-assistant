[site]: crossvalidated
[post_id]: 470161
[parent_id]: 470152
[tags]: 
Consider the following paragraph from Data Science for Business by Foster Provost and Tom Fawcett. In some cases just demonstrating that a model generates some (nonzero) profit, or a positive return on investment, will be informative by itself. Nevertheless, another fundamental notion in data science is: it is important to consider carefully what would be a reasonable baseline against which to compare model performance. This is important for the data science team in order to understand whether they indeed are improving performance, and is equally important for demonstrating to stakeholders that mining the data has added value. A baseline classifier is meant to be a simple, reasonable classifier which you can use as a baseline for evaluating more complex classifiers. An example of a baseline classifier is to always predict the most predominant class. If 70% of animals in your training set are dogs, you can predict "dog" every time and have 70% accuracy. This is called the majority classifier and any model you build should at least be better than it. Another example is a decision tree with only one split (also called a decision stump). The ideal baseline classifier depends on the situation and domain knowledge. Consider the following excerpt from The Signal and the Noise , reproduced in Data Science for Business , which gives an example of using domain knowledge of weather forecasting to select two appropriate baseline models. There are two basic tests that any weather forecast must pass to demonstrate its merit: It must do better than what meteorologists call persistence: the assumption that the weather will be the same tomorrow (and the next day) as it was today. It must also beat climatology, the long-term historical average of conditions on a particular date in a particular area. So, to answer your questions directly: Pick a baseline classifier based on your knowledge of the domain, or else choose some sort of simple classifier which you know will give an okay result. Yes, the baseline classifier is used for comparing/interpreting the performance of your other models. If you choose a baseline model with hyperparameters then you should tune them, but in general, your baseline model should not be chosen from a large set of models in order to maximize performance and you should know that it will give a reasonable result before implementing it.
