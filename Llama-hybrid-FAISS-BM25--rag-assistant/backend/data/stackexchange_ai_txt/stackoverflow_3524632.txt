[site]: stackoverflow
[post_id]: 3524632
[parent_id]: 3523328
[tags]: 
For the most part, staying inside of the framework (as opposed to hacking the DB) is your best bet from a headache perspective. If you can, create a module that handles the interaction and consume that at will (it's unclear from your post where this data will end up or whether you're writing to the database, etc). The exception to using the framework comes when performance is key, such as when you have thousands or tens of thousands of records to pull. In that case, grabbing from (and writing to) the database is sometimes the only feasible option. Hope that helps! Thanks, Joe Ignoring the other features (such as comments, favorites, etc. look up Alan Storm's tutorials on saving data in the database for those), keeping videos as products can be accomplished using attributes themselves, in which case all the data can stay in Magento (saved in admin, displayed on frontend). That way, the catalog object will mediate with the database for you, saving you lots of pain. Either way, there don't appear to be any scaling problems here at the moment, so using the framework (Product objects for the main info, create your own objects for favorites and such) should be a good way to accomplish this. Actually, I'm getting a little turned around here. What purpose does Magento serve in this scenario? Unless the videos are related to products, there's no reason to tag them to products. It's possible to create regular data models in Magento to wrap database calls, and if there is no interaction between videos and products, creating one of those models should do the trick more cleanly.
