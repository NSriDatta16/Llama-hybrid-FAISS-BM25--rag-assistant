[site]: crossvalidated
[post_id]: 518217
[parent_id]: 518187
[tags]: 
I am not familiar with the matlab counterpart (have not used it for some time), but I assume you are looking for the eigenvalues and eigenvectors of the covariance matrix from scikit-learn. Since you already have the pca object and have fitted it to the data R, the values you are looking for are retrievable as object attributes: For the loadings and eigenvalues: loadings = pca.components_ # each row of the returned loading is tail (x, y) of the loading vector tsquares = pca.explained_variance_ This should return the same results as what you have by doing eigendecomposition on your covariance. The slight difference is that the scikit-learn pca counterpart would have already sorted both the squared and loadings by descending order of the singular value, whereas your np.linalg.eig would not have been sorted. Hope this helps
