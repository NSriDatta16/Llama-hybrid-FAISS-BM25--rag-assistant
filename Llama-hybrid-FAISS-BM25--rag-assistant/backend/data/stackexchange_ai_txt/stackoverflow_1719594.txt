[site]: stackoverflow
[post_id]: 1719594
[parent_id]: 
[tags]: 
Iteratively compute the Cartesian product of an arbitrary number of sets

I want to compute the cartesian product of an arbitrary number of nonempty sets in Java. I've wrote that iterative code... public static List > cartesianProduct(List > list) { List > iterators = new ArrayList >(list.size()); List elements = new ArrayList (list.size()); List > toRet = new ArrayList >(); for (int i = 0; i = 0;) { toRet.add(Sets.newHashSet(elements)); for (j = iterators.size()-1; j >= 0 && !iterators.get(j).hasNext(); j--) { iterators.set(j, list.get(j).iterator()); elements.set(j, iterators.get(j).next()); } elements.set(Math.abs(j), iterators.get(Math.abs(j)).next()); } return toRet; } ...but I found it rather inelegant. Someone has a better, still iterative solution? A solution that uses some wonderful functional-like approach? Otherwise... suggestion about how to improve it? Errors?
