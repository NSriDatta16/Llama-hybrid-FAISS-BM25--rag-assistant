[site]: stackoverflow
[post_id]: 605344
[parent_id]: 604273
[tags]: 
I second Craig's suggestion - option 4. You can always use the GUID column, populated by the middle-tier, as your PRIMARY KEY (that's a LOGICAL construct). To avoid massive index (thus: table) fragmentation, use some other key (ideally an INT IDENTITY column) as the CLUSTERING KEY - that's a physical database construct, which CAN be separated from the primary key. By default, the primary key is the clustering key - but that doesn't have to be that way. In fact, I improved performance and drastically lowered fragmentation by doing just that on a database I "inherited" - add a INT IDENTITY column and put the clustering key on that small, ever-increasing, never-changing INT - works like a charm! Marc
