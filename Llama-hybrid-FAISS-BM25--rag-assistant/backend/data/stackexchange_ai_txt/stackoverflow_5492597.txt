[site]: stackoverflow
[post_id]: 5492597
[parent_id]: 5492482
[tags]: 
You'll need to set up an MKMapViewDelegate , and implement - (MKAnnotationView *)mapView:(MKMapView *)theMapView viewForAnnotation:(id )annotation Here's sample code, stolen from the MapCallouts sample code provided on Apple's developer site. I've modified it to focus on the important details. You can see below that the key is to set the image on an annotation view, and return that annotation view from this method. - (MKAnnotationView *)mapView:(MKMapView *)theMapView viewForAnnotation:(id )annotation { static NSString *SFAnnotationIdentifier = @"SFAnnotationIdentifier"; MKPinAnnotationView *pinView = (MKPinAnnotationView *)[mapView dequeueReusableAnnotationViewWithIdentifier:SFAnnotationIdentifier]; if (!pinView) { MKAnnotationView *annotationView = [[[MKAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:SFAnnotationIdentifier] autorelease]; UIImage *flagImage = [UIImage imageNamed:@"flag.png"]; // You may need to resize the image here. annotationView.image = flagImage; return annotationView; } else { pinView.annotation = annotation; } return pinView; } We use dequeueReusableAnnotationViewWithIdentifier to grab an already created view to make reuse of our annotation views. If one isn't returned we create a new one. This prevents us from creating hundreds of MKAnnotationViews if only a few are ever in sight at the same time.
