[site]: stackoverflow
[post_id]: 5614862
[parent_id]: 5614217
[tags]: 
Where exactly is the program breaking? Have you tried using OllyDbg to step through the assembly instructions to see if you are at least starting execution of the buffer or failing before then? If you're not executing even the first instruction in the buffer, then likely the stack page (or data section in this case since you supply it as a string literal) has been marked non-executable and you'll have to use another technique. There might be a way to tell Windows to make the stack page executable (or data section in this case) for testing/learning purposes (I know ELF binaries have an executable stack flag and Linux provides the execstack utility to edit the flag). If it's breaking after several instructions from your buffer, then it's likely because the instructions in your buffer are trying to (indirectly) call an absolute address ( 0xff 0x15 0x40 0x62 0x40 x00 => call dword ptr ds:[406240] ) and in W7, address space layout randomization (ASLR) may be enabled (I'm not sure if the VS2010 linker sets the IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE bit in the PE header by default). Edit Based on the additional info you've added to the question, it would appear that the issue of a non-executable stack, mentioned in my first paragraph is the culprit. However, even if you get around that the second issue may still be an issue as you have no clue what will be at 0x00406240 if ASLR is enabled.
