[site]: stackoverflow
[post_id]: 5129347
[parent_id]: 5112181
[tags]: 
Here is what I would do - First, the image link for each email address should be unique. Something like pixel-.jpg. The should somehow encode the users email address. Track the user-agent that's sent as part of the http server. If you get the referrer header and can parse it, great. If not, the user-agent can help. If user-agent indicates a browser, figure out the email client from the email address. For example, if the email is abc@gmail.com, you know its web gmail. Google and other companies also provide hosted email. So, if user agent indicates a browser, and the email address is abc@mydomain.com, there is still a chance the email client is gmail. To find out more, you can look up the MX records for mydomain.com. If the MX record has google or googlemail in it, you know you are dealing with gmail. Same approach can be used for other email hosting companies. If it is a desktop based client like outlook or thunderbird, the user agent will usually indicate this. Generally, email clients automatically block external images, so this approach will only work if the user allows image loading for your email address. A usual trick is to have the token in an image, as well as on all links in the email. Then add a line "If you cannot view this message properly, click here". If the image is allowed, great. Otherwise the user won't be able to read your message, and will likely click the link. Either way, you get the user-agent and the hash-token. .. But if the user doesn't allow images and doesn't click the link, there is no way to track if the user actually read the email. Final Tip : Use the WURFL library to decode the user agent. Its the best library out there.
