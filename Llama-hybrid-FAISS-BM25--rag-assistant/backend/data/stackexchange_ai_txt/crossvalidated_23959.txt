[site]: crossvalidated
[post_id]: 23959
[parent_id]: 23955
[tags]: 
I believe what you are looking for is something like the Dirichlet Process [DP] which is a distribution on distributions. It is not an easy concept to understand, but the base measure you will use is the discrete distribution of cluster sizes you started with. The parameter $\alpha$ controls how 'close' to the original distribution your new one is. Since a sample from a DP is a probability distribution (in your case, a discrete one), you can multiply it by $N$ to get cluster sizes. The result won't be integers, but just rounding the numbers should not affect what you're trying to do in a meaningful way. Edit: Somehow, I am more familiar with the Dirichlet Process than the Dirichlet Distribution , which is what you are actually looking for. The DP is an infinite dimensional generalization of the DD. To be more algorithmically precise, consult the subsection talking about random number generation . Your parameters are going to be based on the cluster sizes that you want the random clusterings to look like $\{n_j\}_{j=0}^k$. In other words: $$\alpha = (\alpha_1,...,\alpha_k) = (\frac{\beta n_1}{N},...,\frac{\beta n_k}{N})$$ where $\beta$ is called a concentration parameter and it controls how close to the original distribution of cluster sizes the Dirichlet distribution will be on average. Higher values of $beta$ will mean that the resulting DD will give closer and closer values to the EXACT distribution of sample sizes you started with. So, the algorithm would be: (if you have access to a function that can generate Dirichlet Distribution samples, ignore steps 1 and 2.) Draw independent samples from $y_j = Gamma(\alpha_j,1)$ for each $j = 1..k$. Compute $x_j = y_j/\sum^k_{j=1}y_j$ for each $j$. Then you have the sample $Dirichlet(\alpha_1,...,\alpha_k) = (x_1,...,x_k)$. Multiply by the sample by $N$ to get the approximate new cluster sizes. $N(x_1,...,x_k)$. Round the result to the nearest natural number. (make sure that the new cluster sizes add to $N$ due the rounding.) Fill the new clusters of a random permutation of elements. The advantage that this has over the previously discussed option of just permuting the elements is that the cluster size distribution isn't always the same. You can allow for as much or a little variation from the original cluster sizes by controlling the concentration parameter $\beta$. In simulation this will likely result in a more robust calculation.
