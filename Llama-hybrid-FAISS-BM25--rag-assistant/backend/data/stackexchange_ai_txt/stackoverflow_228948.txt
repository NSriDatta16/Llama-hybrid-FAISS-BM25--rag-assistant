[site]: stackoverflow
[post_id]: 228948
[parent_id]: 225150
[tags]: 
Some other notes: InnoDB does not reallocate free space on the filesystem after you drop a table/database or delete a record, this can be solved by "dumping and importing" or setting innodb_file_per_table=1 in my.cnf. Adding/removing indexes on a large InnoDB table can be quite painfull, because it locks the current table, creates a temporary one with your altered indexes and inserts data - row by row. There is a plugin from Innobase , but it works only for MySQL 5.1 InnoDB is also MUCH MORE memory intense, I suggest you to have as large innodb_buffer_pool_size variable as your server memory allows (70-80% should be a safe bet). If your server is UNIX/Linux, consider reducing sysctl variable vm.swappiness to 0 and use innodb_flush_method=O_DIRECT to avoid double buffering. Always test if you hit swap when toggling those values.You can always read more at Percona blog , which is great. Also, you can run mysqlbackup with --single-transaction --skip-lock-tables and have no table locks while the backup is commencing. In any case, InnoDB is great, do not let some pitfalls discourage you.
