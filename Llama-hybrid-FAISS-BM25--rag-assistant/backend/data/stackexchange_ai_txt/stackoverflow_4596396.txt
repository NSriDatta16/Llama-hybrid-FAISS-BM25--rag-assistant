[site]: stackoverflow
[post_id]: 4596396
[parent_id]: 4596196
[tags]: 
This is not the most elegant solution, but works as you expect: private String removeParameter(String string, final String parameterName) { List list = newArrayList(string.split("&")); Collection filtered = Collections2.filter(list, new Predicate () { public boolean apply(String s) { return !s.startsWith(parameterName + "="); } }); return Joiner.on("&").join(filtered); } UPDATE To handle multiple parameters: @Test public void removesMultipleParametersFromQuery() throws Exception { String result = removeParameters("foo=fooValue&zee=lalal&bar=barValue&phleem=phleemValue", "foo", "bar"); assertThat(result, is("zee=lalal&phleem=phleemValue")); } private String removeParameters(String query, final String...parameterNames) { List list = newArrayList(query.split("&")); return Joiner.on("&").join(filter(list, startsWithAnyOf(parameterNames))); } private Predicate startsWithAnyOf(final String[] parameterNames) { return new Predicate () { public boolean apply(String s) { return !Iterables.any(newArrayList(parameterNames), isPrefixOf(s)); } }; } private Predicate isPrefixOf(final String string){ return new Predicate () { public boolean apply(String candidate) { return string.startsWith(candidate); } }; }
