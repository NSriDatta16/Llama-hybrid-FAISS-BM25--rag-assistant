[site]: stackoverflow
[post_id]: 1157359
[parent_id]: 1157333
[tags]: 
Your question is a little vague, as I don't know what tools you are using. I'll give examples in PHP. You'll want to set the Cache-Control header to specify the max age that the file can be cached. The value is specified in seconds. e.g. You would set this header before sending the XAP file to the user. 86400 seconds = 1 day. Another alternative is to use different filenames for each version of the file. You can do this one of two ways. Embedding a version # in the file name: some_file_1_1.xap some_file_1_2.xap Or, my preference is to append the version number to the filename as a query string: some_file.xap?20090719 some_file.xap?20090720 You would reference these files with the appropriate "version" number in your HTML, and when the version # changes, the browser considers this a change in filename and will force redownloading. You can use whatever you want for the "version" string - options may include: revision #, last modified datestring, etc. If you decide to go with changing the filename on every revision, then I'd suggest using "far future" caching. Ensuring the file is cached for an insanely long time will decrease the load on your server. You can do this as shown above with PHP, and here's a few examples to do it with mod_expires in Apache 2.0. ExpiresActive on ExpiresByType application/x-silverlight-app “access plus 5 years” FileETag none
