[site]: stackoverflow
[post_id]: 5644172
[parent_id]: 5632082
[tags]: 
Having too much fun with this! I've taken a few liberties, like assuming a sort order, and changing your query criteria to a date range instead of declaring a month. To start with, I changed the data set from date ranges to dates of changes and quantity of changes (positive values on installation date, negative values on removal date). SELECT type, installed as date_of_change, length change_of_length FROM pipes WHERE (installed BETWEEN :date_start AND :date_end) OR ((installed = :date_start)) UNION ALL SELECT type, isnull (removed, dateadd (day, 1, :date_end)), (length * -1) FROM pipes WHERE (installed BETWEEN :date_start AND :date_end) OR ((installed = :date_start)) ORDER BY type, date_of_change And, yes, those colons in front of the arguments (I've switched you to start and end dates... easier for me and now you can do six month reports) means I'm leveraging a DataWindow. (I'm betting someone can create a pure SQL approach with the above concept change, but I'm going with what I know.) Load the SQL into a DataWindow (I used freeform), and optionally set a client-side sort by type and date_of_change (belt and suspenders). The data set includes null Removed dates as a change the day after the end of your query range, so create a filter to exclude those nulls: date_of_change Create a group based on type, and put type into the group header. In the detail band (where all subsequent controls are going), create a compute called date_from with the following expression: if (date_of_change Create a compute called date_to with the following expression: if (type = type[1] and getrow() Create a compute called installed_length with the following expression: cumulativesum ( change_of_length FOR GROUP 1) Select all the controls in your detail band and give them a Visible expression of: if (date_of_change = date_of_change [1] and type = type[1], 0, 1) which will make them invisible if the next row has the same date_of_change and type; you only want the last row to show with the sum of all of today's activities. Drag the detail band to height of zero, and make the detail band autosize height. That will give you a version of what you're after. FWIW, I tried to make the report sort on date (not clear if that's what you wanted, or sorted first on type), but it breaks the CumulativeSum() functionality. Maybe someone else can figure it out. Good luck, Terry. P.S. If SO lets me put this much in, here's the export of my prototype. It may or may not be useful to you. release 11.5; datawindow(units=0 timer_interval=0 color=1073741824 brushmode=0 transparency=0 gradient.angle=0 gradient.color=8421504 gradient.focus=0 gradient.repetition.count=0 gradient.repetition.length=100 gradient.repetition.mode=0 gradient.scale=100 gradient.spread=100 gradient.transparency=0 picture.blur=0 picture.clip.bottom=0 picture.clip.left=0 picture.clip.right=0 picture.clip.top=0 picture.mode=0 picture.scale.x=100 picture.scale.y=100 picture.transparency=0 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.background=no print.preview.background=no print.preview.outline=yes hidegrayline=no showbackcoloronxp=no picture.file="" ) header(height=72 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" ) summary(height=0 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" ) footer(height=0 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" ) detail(height=0 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" height.autosize=yes ) table(column=(type=char(4) updatewhereclause=yes name=type dbname="pipes.type" ) column=(type=datetime updatewhereclause=yes name=date_of_change dbname="pipes.date_of_change" ) column=(type=long updatewhereclause=yes name=change_of_length dbname="pipes.change_of_length" ) retrieve="SELECT type, installed as date_of_change, length change_of_length from pipes where (installed BETWEEN :date_start AND :date_end) OR ((installed = :date_start)) union all select type, isnull (removed, dateadd (day, 1, :date_end)), (length * -1) from pipes where (installed BETWEEN :date_start AND :date_end) OR ((installed = :date_start)) order by date_of_change, type" filter=" date_of_change
