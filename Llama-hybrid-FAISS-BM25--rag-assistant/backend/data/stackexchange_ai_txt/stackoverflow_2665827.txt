[site]: stackoverflow
[post_id]: 2665827
[parent_id]: 2665751
[tags]: 
Layering a web application is a bit tricky. A lot of operations just pass through the business layer, so you tend to feel that it's pretty useless. One of the main purposes of layering is to keep the user interface isolated from the data storage. In theory you should be able to change the data storage solution without having to make any changes to the user interface. In my experience this very rarely happens, but just having the abstraction gives you other advantages, like keeping details from the data storage from showing up in the user interface design. Typically three layers are used: user interface business logic data access Data classes / entities are not a layer of their own, but part of the interface between layers. Typically they are exposed by the business layer to be used by the user interface.
