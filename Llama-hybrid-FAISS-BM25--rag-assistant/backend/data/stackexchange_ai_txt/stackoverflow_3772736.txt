[site]: stackoverflow
[post_id]: 3772736
[parent_id]: 
[tags]: 
Handling of Multitouch

So all I'm trying to do is draw circles around two points that are being touched, and as the fingers drag along on the screen, have these circles follow each finger. However, I'm getting some weird behavior that I can't figure out. So when I place two fingers on the screen I get my circles no problem. When I drag around with the two fingers everything works like I want it. However, if I lift the first finger, everything stops redrawing, and the second finger that is still on the screen stops being tracked. If I place the first finger back on, everything behaves good again. I figure I must be handling the two fingers poorly. Can anyone see what I'm doing wrong? Also, if I have two fingers on the screen, and I lift and touch the second finger, everything behaves well. It's only in the case where I have two fingers and I lift the first one do I see a problem. @Override public boolean onTouchEvent(MotionEvent event) { /* * Log this touch event */ String names[] = { "DOWN" , "UP" , "MOVE" , "CANCEL" , "OUTSIDE" , "POINTER_DOWN" , "POINTER_UP" , "7?" , "8?" , "9?" }; StringBuilder sb = new StringBuilder(); int action = event.getAction(); int actionCode = action & MotionEvent.ACTION_MASK; sb.append("OnTouchEvent ACTION_" ).append(names[actionCode]); if (actionCode == MotionEvent.ACTION_POINTER_DOWN || actionCode == MotionEvent.ACTION_POINTER_UP) { sb.append("(pid " ).append( action >> MotionEvent.ACTION_POINTER_ID_SHIFT); sb.append(")" ); } sb.append("[" ); for (int i = 0; i > MotionEvent.ACTION_POINTER_ID_SHIFT){ p0Down = true; } if (1 == action >> MotionEvent.ACTION_POINTER_ID_SHIFT){ p1Down = true; } } else if (actionCode == MotionEvent.ACTION_POINTER_UP){ if (0 == action >> MotionEvent.ACTION_POINTER_ID_SHIFT){ p0Down = false; } if (1 == action >> MotionEvent.ACTION_POINTER_ID_SHIFT){ p1Down = false; } } if(actionCode == MotionEvent.ACTION_DOWN){ if (0 == action >> MotionEvent.ACTION_POINTER_ID_SHIFT){ p0Down = true; } if (1 == action >> MotionEvent.ACTION_POINTER_ID_SHIFT){ p1Down = true; } } else if (actionCode == MotionEvent.ACTION_UP){ if (0 == action >> MotionEvent.ACTION_POINTER_ID_SHIFT){ p0Down = false; } if (1 == action >> MotionEvent.ACTION_POINTER_ID_SHIFT){ p1Down = false; } } int pointCt = event.getPointerCount(); for(int i = 0; i
