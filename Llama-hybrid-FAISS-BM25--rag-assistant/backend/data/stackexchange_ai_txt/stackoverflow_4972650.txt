[site]: stackoverflow
[post_id]: 4972650
[parent_id]: 
[tags]: 
Null Pointer on View

Recently in an attempt to integrate a phone with a wireless sensor network i have adapted a class to work as an activity as well as a listener class which reads from a serial port and plots some readings on to a simple canvas based View. I tried initially to construct a threaded canvas using the more normal message handlers and thread that updates and invalidates however the class that stores the readings that i need to plot was also working off a thread which listens to the USB port. I couldn't get it working at the time and i decided that i probably didn't need to constantly update the canvas given that i only need to update it with new readings. So the activity class is as follows. public class Oscilloscope extends Activity implements MessageListener Graph graph; boolean guard=false; MoteIF mote; Data data; String comm; static String writeLog; public Vector arrayvals = new Vector (); public Oscilloscope(String comm, String writelog) { this.comm = comm; this.writeLog = writelog; } public Oscilloscope() { } public void onCreate(Bundle b) { super.onCreate(b); graph = new Graph(this); this.setContentView(graph); if(guard==false) { create("dummy:1",null).run(); } } synchronized public void messageReceived(int dest_addr, Message msg) { if (msg instanceof OscilloscopeMsg) { OscilloscopeMsg omsg = (OscilloscopeMsg)msg; periodUpdate(omsg.get_version(), omsg.get_interval()); data.update(omsg.get_id(), omsg.get_count(), omsg.get_readings()); List temp1 = Arrays.asList(omsg.get_readings()); Vector temp= new Vector (temp1); this.arrayvals = temp; Paint p = new Paint(); p.setColor(Color.BLUE); this.graph.update(); this.graph.invalidate(); } } public Oscilloscope create(String a, String b) { guard = true; Oscilloscope os = new Oscilloscope(a,b); os.guard = true; return os; } Not sure why it is i cant get the code brackets working properly there, i apologise. There are other methods in the class but the class itself acts as it should minus the view part, paying particular attention to the messagereceived method where the readings are read in as array of ints. My problem is that once the onDraw method has been called once and then messagereceived is called afterwards the graph object seems to be null which obviously throws a null pointer when i try to call update. I could be not seeing something really obvious. The graph code is really simple as below: public class Graph extends View Paint paint= new Paint(); public float x; public float y; Vector coVec = new Vector (); public Graph(Context context) { super(context); } public void onDraw(Canvas canvas) { Log.v("Line 28 Graph.java","Y: "+y+"X: "+x); canvas.drawCircle(x, y, 2, paint); Log.v(this.toString(),"onDraw in the graph"); } public void update() { Log.v("Line 31 of Graph.java",""); x+=100; y+=100; paint.setColor(Color.GREEN); } } Any help appreciated. Thanks. 02-11 19:03:00.933: DEBUG/AndroidRuntime(301): >>>>>>>>>>>>>> AndroidRuntime START
