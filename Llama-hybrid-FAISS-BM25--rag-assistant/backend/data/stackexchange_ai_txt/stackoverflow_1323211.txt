[site]: stackoverflow
[post_id]: 1323211
[parent_id]: 1323086
[tags]: 
Look to the doc how to retreive a queue from the manager (paragraph 17.6.2.7) than with a pool (paragraph 17.6.2.9) of workers launch 7 jobs passing the queue to each one. in alternative you can think something like a producer/consumer problem: from multiprocessing.managers import BaseManager import random class Producer(): def __init__(self): BaseManager.register('queue') self.m = BaseManager(address=('hostname', 50000), authkey='jgsjgfdjs') self.m.connect() self.cm_queue = self.m.queue() while 1: time.sleep(random.randint(1,3)) self.cm_queue.put( ) from multiprocessing.managers import BaseManager import time import random class Consumer(): def __init__(self): BaseManager.register('queue') self.m = BaseManager(address=('host', 50000), authkey='jgsjgfdjs') self.m.connect() self.queue = self.m.queue() while 1: from multiprocessing.managers import BaseManager, Queue class Manager(): def __init__(self): self.queue = QueueQueu() BaseManager.register('st_queue', callable=lambda:self.queue) self.m = BaseManager(address=('host', 50000), authkey='jgsjgfdjs') self.s = self.m.get_server() self.s.serve_forever()
