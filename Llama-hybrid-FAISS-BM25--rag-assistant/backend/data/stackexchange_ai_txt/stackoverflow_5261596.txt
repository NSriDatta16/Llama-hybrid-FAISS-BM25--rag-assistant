[site]: stackoverflow
[post_id]: 5261596
[parent_id]: 5221576
[tags]: 
Ok, got a solution working in python. import mmap from struct import * def main(): filename = raw_input("Input file name: ") f = open(filename, "r+b") offList, compList = getOffsets(f) for i in range(len(offList)): print "offset: ", offList[i], "\t Compression: ", compList[i] print "ran right" stripLabelAndMacro(f, offList, 3) offList, compList = getOffsets(f) for i in range(len(offList)): print "offset: ", offList[i], "\t Compression: ", compList[i] f.close() #test stripping end crap def getOffsets(f): fmap = mmap.mmap(f.fileno(),0) offsets = [] compressions = [] #get TIFF version ver = int(unpack('H', fmap[2:4])[0]) if ver == 42: #get first IDF offset = long(unpack('L', fmap[4:8])[0]) while (offset != 0): offsets.append(offset) #get number of tags in this IDF tags = int(unpack('H', fmap[offset:offset+2])[0]) i = 0 while (i Tested it, seems to work fine. the stripLabel method is specifically meant to remove the second to last page/directory and shift the last one up, but it should in theory work for any directory other than the last, and it could be easily modified to remove the last too. It requires at least the amount of free ram as the file size you are working on, but it runs fast and file size isn't an issue with most TIFF's. It isn't the most elegant approach, if some one has another please post.
