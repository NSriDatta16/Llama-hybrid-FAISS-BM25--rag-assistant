[site]: stackoverflow
[post_id]: 4236669
[parent_id]: 4236650
[tags]: 
Unlike a Panel control for example, a UserControl does not act as a container control once it is placed on another form. There is full design-time support while you are designing the UserControl itself, but its default behavior does not allow it to act as a constitutent control after it has been placed on another form. This is why you are unable to add other controls to it by dragging them from the toolbox. In order to add this type of behavior to a UserControl , you need to add the DesignerAttribute to the definition of your custom UserControl class. For example: using System.ComponentModel; using System.ComponentModel.Design; [Designer("System.Windows.Forms.Design.ParentControlDesigner, System.Design", typeof(IDesigner))] public class MyUserControl : System.Windows.Forms.UserControl { //...your code here } (See the relevant MSDN article for further reading.) If you want to implement full designer support for nested controls inside your UserControl , this is slightly more difficult. For a more comprehensive discussion, see this article on CodeProject.
