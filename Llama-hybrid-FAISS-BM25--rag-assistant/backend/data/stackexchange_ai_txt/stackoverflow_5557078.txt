[site]: stackoverflow
[post_id]: 5557078
[parent_id]: 5556773
[tags]: 
You didn't exactly misunderstand how they work, but a pointer-to- member -function (PTMF) is different from a pointer-to- free -function. Since member functions need the this pointer, you need to invoke those PTMF on an object, like this (also, it's cleaner to use typedef s for function pointer): // this is all in the GroceryListDisplay class (public) typedef void (GroceryListDisplay::*NotifyFunc)(std::string); // ^^^^^^^^^^^^^^^^^^^^ --- need class of the function void repopulateFromModel(GroceryStorage* gs) { this->gs = gs; /* Delete every list entry that was loaded into GUI */ this->clearList(); /* Import grocery list from the Model */ NotifyFunc itemAdder = &GroceryListDisplay::addItemToList; // ^^^^^^^^^^^^^^^^^^^^^ --- need class of the function this->gs->sendGroceryItemsToGUI(itemAdder, this); // send object to invoke the function on --- ^^^^ } // this is all in the GroceryStorage class (public) void sendGroceryItemsToGUI(GroceryListDisplay::NotifyFunc itemAdder, GroceryListDisplay* display) { // need the object to invoke the PTMF on --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ /* Sends all stored items to the GUI */ for (int i = 0; i groceryItems.size(); ++i) (display->*itemAdder)(this->groceryItems[i]); // ^^^^^^^^^^^^^^^^^^^^^ --- need to invoke the PTMF on an object (parenthesis are important) } Then, see my answer linked in the comment on your question for further info on PTMFs.
