[site]: stackoverflow
[post_id]: 2461408
[parent_id]: 1632909
[tags]: 
This is certainly doable. I cooked up an example that allows you to drag items from a librarybar located within a scatterview and drop items on the scatterview where they appear as new scatterviewitems. I'm not sure where you went wrong, but in order for drag/drop to work, the following has to happen: The drop target must have AllowDrop set to true The drop target must be visible to hit testing (usually accomplished by setting a background other than null - i use Transparent) The drop target must handle the Drop event and do something clever with the data Here's my XAML: Button And in code, we handle the Drop event private void scatterView_Drop(object sender, SurfaceDragDropEventArgs e) { Console.WriteLine("Got drop: " + e.Cursor.Data); var newItem = new ScatterViewItem(); // Rely on .ToString() on the data. A real app would do something more clever newItem.Content = e.Cursor.Data; // Place the new item at the drop location newItem.Center = e.Cursor.GetPosition(scatterView); // Add it to the scatterview scatterView.Items.Add(newItem); } Obviously, the code above doesn't handle dragging items back to the librarybar. I leave that as an exercise to the reader ;-) The following MSDN guide is something I definitely think you should read: http://msdn.microsoft.com/en-us/library/ee804812.aspx
