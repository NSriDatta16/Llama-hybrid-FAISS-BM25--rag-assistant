[site]: stackoverflow
[post_id]: 4281014
[parent_id]: 4280988
[tags]: 
That’s horrible. Don’t do it, please. Write idiomatic C++, not some macro-riddled monstrosity. In general, it’s extremely bad practice to define such macros, except in very specific cases (such as the BOOST_FOREACH macro). That said, and , or and not are actually already valid aliases for && , || and ! in C++! It’s just that Visual Studio only knows them if you first include the standard header . Other compilers don’t need this. Types are something else. Using typedef to create type aliases depending on context makes sense if it augments the expressiveness of the code. Then it’s encouraged. However, even better would be to create own types instead of aliases. For example, I can’t imagine it ever being beneficial to create an alias for std::string – why not just use std::string directly? (An exception are of course generic data structures and algorithms.)
