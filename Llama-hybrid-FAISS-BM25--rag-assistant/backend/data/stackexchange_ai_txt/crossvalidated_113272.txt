[site]: crossvalidated
[post_id]: 113272
[parent_id]: 113043
[tags]: 
Instead of trying to implement the SIN link into glm in R I decided to try to write the likelihood function for the logit link and solve with optim. Then I repeated that approach simply substituting in the SIN link. Below is the R code for both. Both give the correct point estimate to three decimal places. The logit link did a better job. I was expecting better performance from the SIN link than what I observed. Perhaps I made an error somewhere. The code for the logit link is modified from that found here: Calculate coefficients in a logistic regression with R I will update my answer if I learn more. my.data EDIT - August 26, 2014 I forgot that when only estimating one parameter it is better to use method='Brent' . When I do that I obtain better point estimates. Both links now return a point estimate matching the expected value: It might be okay to use lower = 0, upper = 1 with optimSin.b . optimLogit.b = optim(vBeta0, logLikelihoodLogit, mX = mX, vY = vY, method='Brent', lower = -20, upper = 20) optimLogit.b (1/(1+exp(-(optimLogit.b$par)))) # [1] 0.8 optimSin.b = optim(vBeta0, logLikelihoodSin, mX = mX, vY = vY, method='Brent', lower = -20, upper = 20) optimSin.b (sin(optimSin.b$par) + 1) / 2 # [1] 0.8
