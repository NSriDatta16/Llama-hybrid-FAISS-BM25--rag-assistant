[site]: stackoverflow
[post_id]: 2862818
[parent_id]: 2851650
[tags]: 
The solution you have so far is very inefficient. You might have more luck using an object to keep track of the tags so far, like so: var tags = {}; // This will memoize the tags we already have function tagSearch(text) { var $match; if (tags.hasOwnProperty(text)) { $match = tags[text]; // use the one we stored earlier } else { $match = $([ ' ', text, ' 0 ' ].join('')).appendTo($('#all_tags ul')); tags[text] = $match; // hold onto this for next time } var $countSpan = $match.find('span.num-active'); var count = parseInt($countSpan.text(), 10) + 1; $countSpan.text(count); } I am not sure what your eventual goal is with this code. Depending on what you want to do with it, there are probably much more elegant ways to write this code that would allow you to avoid having to stash onclicks on elements themselves, but I stuck to the way you were already writing it for now. I did test this code, and it appears to be working, given my understanding of your requirements.
