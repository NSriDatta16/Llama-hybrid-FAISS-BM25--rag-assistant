[site]: stackoverflow
[post_id]: 718349
[parent_id]: 718329
[tags]: 
This sounds like basic normalization to me. Contact is a parent entity, and has a number of attributes that make up one-to-many relationships. Novice designers sometimes store these in the same table, and you get columns like phone1, phone2, phone3, email1, email2, etc. Normalization allows for efficient storage of information, and provides a structure whereby you can get back to the multiple attribute record (the view in the question). So I would expect to see a contact table(with a primary key of contactId), and a phone table(with a foreign key of contactId) and an email table(with a foreign key of contactId). If you are not familiar with normalization, primary keys and foreign keys I recommend you pick up a book like Database Design for Mere Mortals .
