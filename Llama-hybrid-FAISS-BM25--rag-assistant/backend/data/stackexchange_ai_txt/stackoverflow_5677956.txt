[site]: stackoverflow
[post_id]: 5677956
[parent_id]: 5671845
[tags]: 
Restlet can be seen as a JAXRS implementation. A simple tutorial is provided at address: http://wiki.restlet.org/docs_1.1/13-restlet/28-restlet/57-restlet.html You need to put following jar files in your classpath. These jar files can be found in the restlet distribution (version 2.0.5 for example): javax.ws.rs.jar org.restlet.ext.jaxrs.jar org.restlet.jar As you can see in the tutorial, you implement your JAXRS resource and application. There are then two different ways to launch the whole web application: Using the built-in Restlet server Using a JavaEE Web container In order to integrate JAXB support, you first need to understand how representation support of Restlet works. Content of REST requests / responses are contained in representation. Different formats are supported and this is open and extensible. This representation support can be used with converter entities and the converter service. The converter entity is responsible to convert an element to another one. For example, if you pass a Java instance and you want to transform it as XML to send back in the REST response. The converter service is responsible to handle this conversion in a smart way basing on media type and supporting content negociation (content type defined in Accept and Content-Type headers). Converters are automatically registered when present in classpath. For JAXB, let's put the following jar in your classpath: activation.jar jaxb-api.jar jsr173_1.0_api.jar So let's take an example: You send a REST request on your Restlet JAXRS application. You specify the Accept header with value application/xml because you expect an XML content for the response content. In your resource, the corresponding JAXRS method for the request and the required content type returns an object. Restlet will automatically check if there is a registered converter to handle conversion between Java object to XML. If you added the Restlet JAXB extension, it will use it if the Java object is annotated with JAXB annotations. The JAXB converter will use the converter to generate the XML output using JAXB. The response is sent back to the client. Otherwise, what kind of security do you want to implement? User / password based? Hope it's clear and it will be helpful! Thierry
