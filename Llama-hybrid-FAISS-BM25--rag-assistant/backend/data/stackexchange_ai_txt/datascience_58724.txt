[site]: datascience
[post_id]: 58724
[parent_id]: 58708
[tags]: 
I would start with dealing with data: it seems from your code that you only have a min-max scaler which seems light. I will say this: you cannot expect to just throw data at a neural network and expect good performance, you have to do some work on your data (that is the most important part and the hardest I think because there is no universal answer). You can start by looking at the distribution of your data: try to get everything look like a bell shape (if not, maybe apply cox-box transformations) if your distribution is very irregular you can try to bucketize - then apply a one hot encoding features engineering: maybe your data can be represented another way feature selection: maybe all of your features are not really useful for prediction I would try a few different approaches and compare performance improvement. This is just a start I would advise to look at Kaggle examples to get ideas of how dealing with data. I don't think there is a short answer to this question: but you are already off to a good start! Then after (and only after) you have worked with your data, you can work more on your model (hyperparameter optimisation as suggested by Lana)
