[site]: crossvalidated
[post_id]: 497504
[parent_id]: 175302
[tags]: 
Before answering the question, I quote from ( Artificial Intelligence: A Modern Approach ): In unsupervised learning the agent learns pattern in the input even though no explicit feedback is supplied. The most common unsupervised learning task is clustering . ... In supervised learning the agent observe some example input output pairs and learns functions that maps from input to output. In unsupervised learning , you provide a function and you aim at minimizing or maximizing that function. However, in supervised learning , you do not know the function , and you hope by providing some examples, the learning algorithm will figure out the function that maps the inputs to the desired outputs with least error. You cannot optimize autoencoders without a feedback from an example. Once you provide the same input in order to correct the performance, you supervise it. This is why. If you're still unconvinced, try to train it without providing the input to the loss function. How are you going to correct the parameters? Sometimes, autoencoders are not used to reconstruct the exact input, but rather with modified version. For example you can provide a set of brain images as inputs, and for the output you provide the same images with tumors highlightedas. In this case, you train the autoencoders to not only reconstruct the input, but also to find these anomalies.
