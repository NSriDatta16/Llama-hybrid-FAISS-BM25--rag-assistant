[site]: stackoverflow
[post_id]: 4698757
[parent_id]: 4663366
[tags]: 
Evaluation First an Audit, then the specific answers. This is not a Data Model. This is not a Database. It is a bucket of fish, with each fish drawn as a rectangle, and where the fins of one fish are caught in the the gills of another, there is a line. There are masses of duplication, as well as masses of missing elements. It is completely unworthy of using as an example to learn anything about database design from. There is no Normalisation at all; the files are very incomplete (see Mike's answer, there are a hundred more problem like that). The other_details and eg.s crack me up. Each element needs to be identified and stored: StreetNo, ApartmentNo, StreetName, StreetType , etc. not line_1_number_street , which is a group. Customer and Staff should be normalised into a Person table, with all the elements identified. And yes, if Customer can be either a Person or an Organisation, then a supertype-subtype structure is required to support that correctly. So what this really is, the technically accurate terms, is a bunch of flat files, with descriptions for groups of fields. Light years distant from a database or a relational one. Not ready for evaluation or inspection, let alone building something with. In a Relational Data Model, that would be approximately 35 normalised tables, with no duplicated columns. Barry has (wait for it) over 500 "schemas" on the web. The moment you try to use a second "schema", you will find that (a) they are completely different in terms of use and purpose (b) there is no commonality between them (c) let's say there was a customer file in both; they would be different forms of customer files. He needs to Normalise the entire single "schema" first, then present the single normlaised data model in 500 sections or subject areas. I have written to him about it. No response. It is important to note also, that he has used some unrecognisable diagramming convention. The problem with these nice interesting pictures is that they convey some things but they do not convey the important things about a database or a design. It is no surprise that a learner is confused; it is not clear to experienced database professionals. There is a reason why there is a standard for modelling Relational databases, and for the notation in Data Models: they convey all the details and subtleties of the design. There is a lot that Barry has not read about yet: naming conventions; relations; cardinality; etc, too many to list. The web is full of rubbish, anyone can "publish". There are millions of good- and bad-looking "designs" out there, that are not worth looking at. Or worse, if you look, you will learn completely incorrect methods of "design". In terms of learning about databases and database design, you are best advised to find someone qualified, with demonstrated capability, and learn from them. Answer He is using composite keys without spelling it out. The PK for client_addresses is client_id , address_id, date_address_from) . That is not a bad key, evidently he expects to record addresses forever. The notion of keeping addresses in a separate file is a good one, but he has not provided any of the fields required to store normalised addresses , so the "schema" will end up with complete duplication of addresses ; in which case, he could remove addresses, and put the lines back in the client and staff files, along with their other_details , and remove three files that serve absolutely no purpose other than occupying disk space. You are thinking about Associative Tables, which resolve the many-to-many relations in Databases. Yes, there, the columns are only the PKs of the two parent tables. These are not Associative Tables or files; they contain data fields. It is not the PK, it is the third element of the PK. The notion of a person being registered at more than one address in a single day is not reasonable; just count the one address they slept the most at. Others have answered that. Do not expect to identify any evidence of databases or design or Normalisation in this diagram.
