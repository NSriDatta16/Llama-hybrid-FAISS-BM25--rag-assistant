[site]: stackoverflow
[post_id]: 423311
[parent_id]: 423135
[tags]: 
To piggyback on Borzio's idea, as you approach the twentieth piece, there is a 1 in 3 chance that you will have to re-generate the random number and try again. With 20 pieces, you're probably still safe, but were you to have, say, 40 pieces, there would be better than a 1 in 2 chance and you might be stuck waiting a while. Construct the board array, all empty. Copy a reference to each board square to a list ( emptySquareList ). Loop for each piece you want to add: Generate a random number between 0 and emptySquareList.Length-1 . Put the piece in that square Remove the square from the emptySquareList . This way, you're always maintaining a list of empty squares, and choosing from them. Note that an array of indexes into your board array works just as well and might be faster ( Enumerable.Range(0,64) ). I encourage you to experiment with the random-and-check algorithm, as well as this one; see which one's more efficient.
