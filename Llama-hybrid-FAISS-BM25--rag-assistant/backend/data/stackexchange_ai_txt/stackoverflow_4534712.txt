[site]: stackoverflow
[post_id]: 4534712
[parent_id]: 
[tags]: 
Producer/Consumer pattern the Java way

I have to resolve a problem close to parsing a huge file like, 3 GB or higher. Well, the file is structured how a pseudo xml file like: ... others doc... ....... In an recent post :"http://stackoverflow.com/questions/4355107/parsing-a-big-big-not-well-formed-file-with-java", I have encountered an interesting solution to my problem.. So I have thought to implement my application parser like multithread: After collect in a strinbUilder the text context with a tag until , I return the Stringbuilder. After return the Stringbuilder, I extract the text content of html page throught CSS rules. I obtain that with an html parser, JSOUP http://jsoup.org/ . After extracted the content of html page, I must to save that content on a file. So.. Put my attention to the step 1) and 2), I think to separate the sequencial pattern with a multithread way like: After Reading a chunk of the file (line by line until obtain from .. to ), I append the line to an Stringbuilder. For an StringBuilder I create a thread that support a code to 2.1 Parse the html and extract the text content. 2.2 Save the text content in a file. So I have a doubt.. How many Threads I must to create ?? Is possible that I must create a thread for all Stringbuilder created?? It don't bring to memory problem?? How can I do to obtain the exact number of thread that had worked well?? How Can I know how many threads have finished ?? I have to wait that all threads have finished to terminate my work?? For my doubts...the point 1, I don't know how really resolve it. For point 2, I think that i could implement threads like inner class of the class that parsing a file, and so i can have a static counter incremented by all threads that have finished. For the point 3, I think that is similar point 2, but I don't know how to do wait my application.... Someone could me suggest somthing to resolve my doubts?? thanks :)
