[site]: crossvalidated
[post_id]: 390534
[parent_id]: 251888
[tags]: 
GLMs like logistic regression have a lot in common with linear regression (mostly because linear regression is a GLM). Let me walk you through an example of checking if a quadratic term is needed in a logistic regression in R. Let's simulate some data first. library(tidyverse) expit = function(x) 1/(1+exp(-x)) betas = c(0.8,1.2,5.8) # Big quadratic term x = rnorm(1000) # Sample covariate X = model.matrix(~ poly(x, 2)) lin.pred = expit(X%*%betas) y = map_dbl(lin.pred, ~ rbinom(1, 100, prob = .x)) # Outcome is successes out of 100 ns = rep(100, length(y)) y = cbind(y, ns-y) Now, let's fit a model with no quadratic term. model = glm(y ~ x, family = binomial()) We don't check the residuals of the outcome to determine in a quadratic term is needed. We check the deviance residuals instead. ypred = predict(model) res = residuals(model, type = 'deviance') plot(ypred, res) Looks wonky! Clearly there is a non-linearity in the deviance residuals. Let's add a quadratic term and see what happens That looks a little better. A good way to check is with a likelihood ratio test. Let's compute one between the quadratic and linear model. model = glm(y ~ x, family = binomial()) model.q = glm(y ~ poly(x, 2), family = binomial()) anova(model, model.q, test = 'LRT') Analysis of Deviance Table Model 1: y ~ x Model 2: y ~ poly(x, 2) Resid. Df Resid. Dev Df Deviance Pr(>Chi) 1 998 1634.4 2 997 1007.4 1 626.96 The test reports that the resulting reduction in deviance by adding the quadratic term is more than we would expect to see if the coefficient for the quadratic term were in truth 0. This leads me to believe that a quadratic term truly is needed in the model. Here is a summary of the model chosen Call: glm(formula = y ~ poly(x, 2), family = binomial()) Deviance Residuals: Min 1Q Median 3Q Max -3.4285 -0.6592 -0.0217 0.6656 3.3250 Coefficients: Estimate Std. Error z value Pr(>|z|) (Intercept) 0.801547 0.006876 116.569 As you can see, we have estimated the coefficients fairly well.
