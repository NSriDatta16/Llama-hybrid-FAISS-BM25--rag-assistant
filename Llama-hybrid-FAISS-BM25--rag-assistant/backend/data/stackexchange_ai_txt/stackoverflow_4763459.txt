[site]: stackoverflow
[post_id]: 4763459
[parent_id]: 
[tags]: 
Sending out SMS messages from my Android phone in Java, how can I do them one at a time?

Sending out SMS messages from my Android phone in Java, how can I do them one at a time? I made this application to send out a number of SMS messages from my phone, but how do I change it to send one at a time? I am trying to make this send a SMS message and wait for the reply code to get back before sending the next one: import android.telephony.gsm.SmsManager; import android.app.Activity; import android.app.PendingIntent; import android.content.Intent; import android.os.Bundle; import android.telephony.gsm.SmsManager; import android.view.View; import android.widget.Button; import android.widget.EditText; import android.widget.Toast; import android.util.Log; import android.widget.Button; import java.io.*; import android.util.LogPrinter; import java.io.*; import android.app.Activity; import android.app.PendingIntent; import android.content.BroadcastReceiver; import android.content.Context; import android.content.Intent; import android.content.IntentFilter; import android.widget.TextView; import android.os.*; import android.app.Activity; import android.os.Bundle; import android.view.View; import android.view.View.OnClickListener; import android.widget.Button; import android.widget.Toast; import java.io.*; import android.app.Activity; import android.os.Bundle; import android.view.View; import android.view.View.OnClickListener; import android.widget.Button; import android.widget.Toast; public class JSSMS extends Activity { public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); Button button = (Button) findViewById(R.id.Button01); button.setOnClickListener(new OnClickListener() { public void onClick(View v) { Toast.makeText(JSSMS.this, "Starting SMS", Toast.LENGTH_LONG) .show(); String message = "Hello This Is John, Please save my new number"; String number; try { BufferedReader buffreader = new BufferedReader( new FileReader(Environment .getExternalStorageDirectory().toString() + "/numbers.txt")); int i = 0; while ((number = buffreader.readLine()) != null) { Toast.makeText(JSSMS.this, "Sending text to:" + number, Toast.LENGTH_SHORT).show(); sendSMS(number, message); } buffreader.close(); } catch (java.io.FileNotFoundException e) { Toast.makeText(JSSMS.this, e.toString(), Toast.LENGTH_SHORT) .show(); } catch (Exception e) { Toast.makeText(JSSMS.this, e.toString(), Toast.LENGTH_SHORT) .show(); } Toast.makeText(JSSMS.this, "DONE!!", Toast.LENGTH_LONG).show(); } }); } // ---Sends an SMS message to another device.--- private void sendSMS(String phoneNumber, String message) { String SENT = "SMS_SENT"; String DELIVERED = "SMS_DELIVERED"; PendingIntent sentPI = PendingIntent.getBroadcast(this, 0, new Intent( SENT), 0); PendingIntent deliveredPI = PendingIntent.getBroadcast(this, 0, new Intent(DELIVERED), 0); // ---When the SMS has been sent--- registerReceiver(new BroadcastReceiver() { @Override public void onReceive(Context arg0, Intent arg1) { switch (getResultCode()) { case Activity.RESULT_OK: Toast.makeText(getBaseContext(), "SMS sent", Toast.LENGTH_SHORT).show(); break; case SmsManager.RESULT_ERROR_GENERIC_FAILURE: Toast.makeText(getBaseContext(), "Generic failure", Toast.LENGTH_SHORT).show(); break; case SmsManager.RESULT_ERROR_NO_SERVICE: Toast.makeText(getBaseContext(), "No service", Toast.LENGTH_SHORT).show(); break; case SmsManager.RESULT_ERROR_NULL_PDU: Toast.makeText(getBaseContext(), "Null PDU", Toast.LENGTH_SHORT).show(); break; case SmsManager.RESULT_ERROR_RADIO_OFF: Toast.makeText(getBaseContext(), "Radio off", Toast.LENGTH_SHORT).show(); break; } } }, new IntentFilter(SENT)); // ---When the SMS has been delivered--- registerReceiver(new BroadcastReceiver() { @Override public void onReceive(Context arg0, Intent arg1) { switch (getResultCode()) { case Activity.RESULT_OK: Toast.makeText(getBaseContext(), "SMS delivered", Toast.LENGTH_SHORT).show(); break; case Activity.RESULT_CANCELED: Toast.makeText(getBaseContext(), "SMS not delivered", Toast.LENGTH_SHORT).show(); break; } } }, new IntentFilter(DELIVERED)); SmsManager sms = SmsManager.getDefault(); sms.sendTextMessage(phoneNumber, null, message, sentPI, deliveredPI); } }
