[site]: stackoverflow
[post_id]: 5392868
[parent_id]: 5387725
[tags]: 
This looks very much like a version control system. Your 'paragraphs' are 'files', and 'documents' are 'commits'. The good news is that you don't have to fully reinvent the wheel. The bad news is that the thing is effectively a tree, and RDBMSes are not very good at handling of trees. Every initial version of a paragraph is a root of a version tree (same for documents). You need a way to check if this paragraph is an ancestor of that paragraph, or vice versa, or they are unrelated. You can either directly traverse a bunch of child-parent links (Oracle is good at it), or use prefixes and like queries, or use ranges and between queries, depending on the way you choose to represent the tree. Assuming that you don't track millions of changes, either technique should be efficient. (See: the book , a refresher ) I failed to understand how do you track documents' versions. If you need to detect precedence based on paragraph versions, this is a bit tricky in corner cases (e.g. a new version of document reverts one paragraph to a previous version and simultaneously updates another paragraph). If you are allowed to just mark the fact that 'this document is based on that document', this is far easier; you need just one tree for documents versions, not many trees for paragraph versions.
