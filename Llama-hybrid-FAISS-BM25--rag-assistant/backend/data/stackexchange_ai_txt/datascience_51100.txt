[site]: datascience
[post_id]: 51100
[parent_id]: 
[tags]: 
Keras: How to connect a CNN model with a decision tree

I want to train a model to predict one's emotion from the physical signals. I have a physical signal and using it as input feature; ecg(Electrocardiography) I want to use the CNN architecture to extract features from the data, and then use these extracted features to feed a classical "Decision Tree Classifier" . Below, you can see my CNN aproach without the decision tree; model = Sequential() model.add(Conv1D(15,60,padding='valid', activation='relu',input_shape=(18000,1), strides = 1, kernel_regularizer=regularizers.l1_l2(l1=0.1, l2=0.1))) model.add(MaxPooling1D(2,data_format='channels_last')) model.add(Dropout(0.6)) model.add(BatchNormalization()) model.add(Conv1D(30, 60, padding='valid', activation='relu',kernel_regularizer = regularizers.l1_l2(l1=0.1, l2=0.1), strides=1)) model.add(MaxPooling1D(4,data_format='channels_last')) model.add(Dropout(0.6)) model.add(BatchNormalization()) model.add(Flatten()) model.add(Dense(3, activation = 'softmax')) I want to edit this code so that, in the output layer there will be working decision tree instead of model.add(Dense(3, activation = 'softmax')) . I have tried to save the outputs of the last convolutional layer like this; output = model.layers[-6].output And when I printed out the output variable, result was this; THE OUTPUT: Tensor("conv1d_56/Relu:0", shape=(?, 8971, 30), dtype=float32) I guess, the output variable holds the extracted features. Now, how can I feed my decision tree classifier model with this data which is stored in the output variable? Here is the decision tree from scikit learn; from sklearn.tree import DecisionTreeClassifier dtc = DecisionTreeClassifier(criterion = 'entropy') dtc.fit() How should I feed the fit() method? Thanks in advance.
