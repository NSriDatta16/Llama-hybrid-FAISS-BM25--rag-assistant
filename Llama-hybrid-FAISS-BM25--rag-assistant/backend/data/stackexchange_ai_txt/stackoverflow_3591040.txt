[site]: stackoverflow
[post_id]: 3591040
[parent_id]: 652432
[tags]: 
The tool NDepend offers many features to compare compiled .NET assemblies. First from the NDepend Start Page click: Compare 2 versions of a code base . This will let you provide older and newer versions of your assemblies. Then after NDepend has analyzed both older and newer assemblies, you can use the panel Search by Change . It is dedicated to browse assemblies code diff. Notice that: If source code is available, just right click an element and click Diff Source . In the NDepend options you can plug to NDepend any code diff tool (Visual Studio, Beyond Compare...) If you don't have the source code and just only the raw assemblies, there is the option Compare older and newer version disassembled with ILSpy . ILSpy v7.0 and upper versions are supported . This menu works on assembly, namespace, type and method level and you can choose to decompile to C# or IL. Notice also in the screenshot that a CQLinq code query is generated to browse the diff. from m in Application.Methods where m.CodeWasChanged() select new { m, m.NbLinesOfCode } Many others default diff queries and rules are proposed by default, that will let you browse .NET code diff in a smart way. Types that used to be 100% covered but not anymore API Breaking Changes: Methods Avoid making complex methods even more complex Avoid decreasing code coverage by tests of types From now, all types added or refactored should respect basic quality principles Avoid transforming an immutable type into a mutable one Heuristic to find types moved from one namespace or assembly to another Disclaimer: I am one of the developer of the tool .
