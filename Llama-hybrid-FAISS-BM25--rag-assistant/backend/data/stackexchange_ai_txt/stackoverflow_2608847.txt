[site]: stackoverflow
[post_id]: 2608847
[parent_id]: 2600345
[tags]: 
This is a classic state machine. By setting up a machine it can make the code easier to understand and maintain, though it may add to the total lines . I won't get into the specifics of your code. By determining what state the user is operating in, you can programmatically change the differing values in an understandable specific state fashion . (Pseudo code below) enum FormStates { Initial_View Working_View Edit_View Shutdown_View }; { // Somewhere in code switch (theCurrentState) { case Initial_View : Control1.Enabled = true; Control2.Enabled = true; theCurrentState = Working_View; break; case Working_View if (string.empty(Contro1.Text) == false) { Control2.Enabled = false; Speachcontrol.Focus(); theCurrentState = Edit_view; } else // Control 2 is operational { Control1.Enabled = false; SliderControl.Focus(); } case Edit_View: ... break; break; } By organizing the code in logical steps, it makes it easier to add more states without jeopardizing an huge if/else.
