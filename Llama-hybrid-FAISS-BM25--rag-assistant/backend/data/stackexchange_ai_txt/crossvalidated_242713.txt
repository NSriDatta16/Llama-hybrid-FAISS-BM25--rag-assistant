[site]: crossvalidated
[post_id]: 242713
[parent_id]: 242656
[tags]: 
When using Random Forests (or any other ensemble method), you can use one of the following (or both) approaches: Adapt the prior probabilities Use this option if some classes are under- or overrepresented in your training set. Most training algorithms can handle this. Adapt the missclassification cost If classes are adequately represented in the training data but you want to treat them asymmetrically, use the cost parameter $C$. Given you have a two class problem: $$C = \left[ \begin{matrix} 0 & c_{0,1} \\ c_{1,0} & 0 \end{matrix}\right] $$ where $c_{i,j} > 1$ is the cost of missclassifying class $i$ as $j$. Note, that the penalty on the diagonal is 0, because it means that the classification was correct, i.e. $i = j$. Adapt the Training Algorithm You can emply the RUSBoost Algorithm by Seiffert et al. , which can handle imbalanced data pretty well. Further Reading Matlab has a great section on this. You can find it here.
