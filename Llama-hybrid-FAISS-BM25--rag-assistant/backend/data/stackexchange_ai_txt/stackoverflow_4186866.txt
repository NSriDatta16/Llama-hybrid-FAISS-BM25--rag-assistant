[site]: stackoverflow
[post_id]: 4186866
[parent_id]: 
[tags]: 
Debugging ASP.Net shared pool techniques

I work for a hosting company, providing ASP.Net 3.5 hosting. Honestly, we usually provide quite good uptime and velocity. However, we are having problems with one of our shared pools. As usual, we try to maximize the number of webs that can run into one pool. Lately we are suffering continuous hangs. The process doesn't crash, but starts to show OutOfMemoryExceptions or stops processing requests. We think this is responsability of one of the applications (it would be great to know which one). I have some memory dumps that I have processed with WinDbg. I've run f.e: !dumpheap -stat This method provide global memory usage of objects. Nothing remarkable... Also I've checked: ~*e!clrstack I see various non managed threads. In those who are managed appears stacks like: [HelperMethodFrame_1OBJ: 0f30e320] System.Threading.WaitHandle.WaitMultiple(System.Threading.WaitHandle... 0f30e3ec 7928b3ff System.Threading.WaitHandle.WaitAny(System.Threading... 0f30e40c 7a55fc89 System.Net.TimerThread.ThreadProc()... 0f30e45c 792d6e46 System.Threading.ThreadHelper.ThreadStart_Context(System... 0f30e468 792f5781 System.Threading.ExecutionContext.runTryCode(System... At least, I haven't seen exception throwing or similar (in that moment). I've also had access to two scripts written by Tess Ferrandez for calculating the number of sessions and size. Also here not promising results. Anything peculiar or remarkable (24000 bytes as average). I would like to know what kind of strategies are you usually using facing this kind of problems. Have you ever used Microsoft Support? Thanks a lot!
