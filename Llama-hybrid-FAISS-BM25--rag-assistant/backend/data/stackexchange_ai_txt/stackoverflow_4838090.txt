[site]: stackoverflow
[post_id]: 4838090
[parent_id]: 4828621
[tags]: 
So I have found a different solution to handle this behavior. I've started, with this stackoverflow answer Click and drag selection box in WPF In the mouseMove, after modifying the selectionBox size, I select the items that are in the selectionBox region. I do it this way : //Select all visible items in select region. Rect selectRect = new Rect(Canvas.GetLeft(selectionBox), Canvas.GetTop(selectionBox), (Canvas.GetLeft(selectionBox) + selectionBox.Width), (Canvas.GetTop(selectionBox) + selectionBox.Height)); RectangleGeometry rr = new RectangleGeometry(selectRect); foreach (CustomElement elt in mainList.Items) { ListViewItem item = mainList.ItemContainerGenerator.ContainerFromItem(elt) as ListViewItem; Rect r = LayoutInformation.GetLayoutSlot(item); if (r.IntersectsWith(selectRect)) item.IsSelected = true; else item.IsSelected = false; } I've found that LayoutInformation can gives you the Rect that represent your object, so I can check if it intersect with the selectionBox Rect.
