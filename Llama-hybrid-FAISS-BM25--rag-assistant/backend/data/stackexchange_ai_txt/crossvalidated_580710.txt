[site]: crossvalidated
[post_id]: 580710
[parent_id]: 
[tags]: 
Doubt about level of confidence

I run 100 simulations with CI at 99% and different seeds. For each simulation I created a report that contains different performance indexes (means) with their CI. However, I noticed that one index over 5 simulations didn't contain the expected mean . Maybe I'm wrong but when I choose 99% confidence level does it mean that 1 simulation over 100 doesn't contain expected mean ? Edit I can't upload all source code because is too long in fact I realized a discrete-event simulator . So I can upload a simple code to show my doubt. In essence for every simulation (100 altogether) this code samples an exponential distribution (or another it is not important) with mean 2 until precision (half-width CI/average) is 3% or below. For this part of algorithm I adapted code from chapter 8 of Leemis-Park . Then it increments an accumulator if CI is out from expected mean. import umontreal.ssj.probdist.StudentDist; import umontreal.ssj.randvar.ExponentialGen; import umontreal.ssj.randvar.RandomVariateGen; import umontreal.ssj.rng.MRG32k3a; import java.util.concurrent.ThreadLocalRandom; public class Estimate { public static void main(String[] args) { long outlier = 0; for (int simulation = 0; simulation (.03 * currentAvg) * Math.sqrt(numObs)); double t = StudentDist.inverseF(numObs - 1, .5 * (level + 1)); double ci = t * Math.sqrt((currentSumVariance / (numObs - 1)) / numObs); System.out.println(currentAvg + " Â± " + ci); System.out.println("Precision (accuracy) = " + (ci / currentAvg * 100) + "%"); System.out.println("numObs = " + numObs); System.out.println("expected mean = " + randVar.getDistribution().getMean()); System.out.println("==========="); if (!(currentAvg - ci Another thing I used a library for RNG and random variate SSJ by Pierre L'Ecuyer .
