[site]: stackoverflow
[post_id]: 5475404
[parent_id]: 
[tags]: 
iAd -- cannot click banner

I am creating a universal-app template. This template will need to support optional iAds, and optionally all orientations. I coded up a solution only to find a bizarre bug. in certain situations I was unable to click on the banner I then recoded another revision, tidied everything, and gutted out most of the code to reveal a minimal test case failure. https://github.com/p-i-/iAdUniversalTemplate/commit/2c829d268a9452e1a054802e7ccb9cde5de17853 In this new code, only 3 views: window, uberview (the view controller's view), and the ad-banner So, the banner displays properly once it has been served, autorotation works fine... I have logged the frame and bounds for each, and everything is as it should be. But it is not responding to tap (well, click because I am in the simulator) What could possibly be wrong? I'm starting to suspect that in cutting the XIB out of the project and implementing the window and view controller from code, I have missed something out or wired something up back to front. Juicy code chunks: AppDelegate.m - (BOOL) application: (UIApplication *) application didFinishLaunchingWithOptions: (NSDictionary *) launchOptions { NSLog(@"--> ___PROJECTNAME___AppDelegate:didFinishLaunchingWithOptions..."); // FIXED: now entry in info.plist hides SB BEFORE launch [[UIApplication sharedApplication] setStatusBarHidden: (SHOW_SB ? NO : YES)]; CGRect appFrame = [UIScreen mainScreen].applicationFrame; // windowRect must start at 0, 0 // if (SHOW_SB == YES), appFrame will be '{{0, 20}, {320, 460}}' CGRect windowRect = CGRectMake(0, 0, appFrame.size.width, appFrame.size.height); self.window = [[[UIWindow alloc] initWithFrame: windowRect] autorelease]; self.viewController = [ [ [ ___PROJECTNAME___ViewController alloc ] init ] autorelease ]; [self.window setRootViewController: viewController]; // triggers loadView [self.window makeKeyAndVisible]; return YES; } iAdVC.m - (void) loadView { self.uberView = [[[UIView alloc] initWithFrame: [UIScreen mainScreen].applicationFrame] autorelease]; self.uberView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight; self.uberView.autoresizesSubviews = YES; self.uberView.clipsToBounds = YES; //UIWindow * w = self.view.window; //w.clipsToBounds = YES; [self setView: uberView]; showingBanner = NO; adBannerView = nil; if (IADS_ENABLED) { NSString * P = ADBannerContentSizeIdentifierPortrait; NSString * L = ADBannerContentSizeIdentifierLandscape; self.adBannerView = [[[ADBannerView alloc] initWithFrame:CGRectZero] autorelease]; self.adBannerView.delegate = self; self.adBannerView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleTopMargin; self.adBannerView.requiredContentSizeIdentifiers = [NSSet setWithObjects: P, L, nil]; self.adBannerView.currentContentSizeIdentifier = UIInterfaceOrientationIsPortrait( self.interfaceOrientation ) ? P : L ; [uberView addSubview: adBannerView]; } UIWindow * w = [[UIApplication sharedApplication] keyWindow]; w.userInteractionEnabled = YES; self.uberView.userInteractionEnabled = YES; self.adBannerView.userInteractionEnabled = YES; w.clipsToBounds = YES; self.uberView.clipsToBounds = YES; self.adBannerView.clipsToBounds = YES; w.opaque = YES; self.uberView.opaque = YES; self.adBannerView.opaque = YES; } // - - - - - - - - - - - - - - - - - - - - - - - - - - #pragma mark Autorotate - (BOOL) shouldAutorotateToInterfaceOrientation: (UIInterfaceOrientation) interfaceOrientation { return YES; } // - - - - - - - - - - - - - - - - - - - - - - - - - - - (void) willRotateToInterfaceOrientation: (UIInterfaceOrientation) newOrientation duration: (NSTimeInterval) duration { bool isLandscape = UIInterfaceOrientationIsLandscape(newOrientation); self.adBannerView.currentContentSizeIdentifier = isLandscape ? ADBannerContentSizeIdentifierLandscape : ADBannerContentSizeIdentifierPortrait ; } #pragma mark Banner // - - - - - - - - - - - - - - - - - - - - - - - - - - - (void) bannerViewDidLoadAd: (ADBannerView *) banner { if (! showingBanner) { showingBanner = YES; // ... (optionally animate in) } } // - - - - - - - - - - - - - - - - - - - - - - - - - - - (void) bannerView: (ADBannerView *) banner didFailToReceiveAdWithError: (NSError *) error { NSLog(@"FAIL"); if (showingBanner) { showingBanner = NO; // ... (optionally animate out) } } // - - - - - - - - - - - - - - - - - - - - - - - - - - -(BOOL) bannerViewActionShouldBegin: (ADBannerView *) banner willLeaveApplication: (BOOL) willLeave { return YES; // doesnt get hit } // = = = = = = = = = = = = = = = = = = = = = = = = = =
