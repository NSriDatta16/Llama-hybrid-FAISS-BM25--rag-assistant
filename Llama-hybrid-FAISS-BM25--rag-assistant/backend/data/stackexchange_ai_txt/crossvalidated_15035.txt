[site]: crossvalidated
[post_id]: 15035
[parent_id]: 15011
[tags]: 
Here's another computational approach (the solution is adapted from a forum post by Enrico Schumann). According to Wolfgang (see comments), this is computationally identical to the solution proposed by ttnphns. In contrast to caracal's solution it does not produce a sample with the exact correlation of $\rho$, but two vectors whose population correlation is equal to $\rho$. Following function can compute a bivariate sample distribution drawn from a population with a given $\rho$. It either computes two random variables, or it takes one existing variable (passed as parameter x ) and creates a second variable with the desired correlation: # returns a data frame of two variables which correlate with a population correlation of rho # If desired, one of both variables can be fixed to an existing variable by specifying x getBiCop The function can also use non-normal marginal distributions by adjusting parameter mar.fun . Note, however, that fixing one variable only seems to work with a normally distributed variable x ! (which might relate to Macro's comment). Also note that the "small correction factor" from the original post was removed as it seems to bias the resulting correlations, at least in the case of Gaussian distributions and Pearson correlations (also see comments).
