[site]: stackoverflow
[post_id]: 2361849
[parent_id]: 2356821
[tags]: 
[Overly complicated answer involving string evals elided.] overload keeps an idea of what overloads are in effect in a magic place. Sometimes, especially with dynamically-generated classes, it fails to notice a change. You can force it to pay attention by blessing a fresh object into the class. You can immediately discard the object; the blessing event is what matters. You don't even have to store the object anywhere. The following works for me: use Scalar::Util qw(blessed); my $o = Test::MockObject::Extends->new('MyClass') ->mock(name => sub { "Bah!" }) ; bless {} => blessed $o; print "$o\n";
