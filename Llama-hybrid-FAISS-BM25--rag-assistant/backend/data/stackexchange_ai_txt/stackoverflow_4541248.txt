[site]: stackoverflow
[post_id]: 4541248
[parent_id]: 4540894
[tags]: 
It took me a while to figure this out since I'm relatively new to Cocoa. The appropriate documentation is here: http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CoreData/Articles/cdBindings.html If the "automatically prepares content" flag (see, for example, setAutomaticallyPreparesContent:) is set for a controller, the controller's initial content is fetched from its managed object context using the controller's current fetch predicate. It is important to note that the controller's fetch is executed as a delayed operation performed after its managed object context is set (by nib loading)â€”this therefore happens after awakeFromNib and windowControllerDidLoadNib:. This can create a problem if you want to perform an operation with the contents of an object controller in either of these methods, since the controller's content is nil. You can work around this by executing the fetch "manually" with fetchWithRequest:merge:error:. You pass nil as the fetch request argument to use the default request, as illustrated in the following code fragment. I added an IBOutlet to my NSArrayController within the app delegate and connected it in Interface Builder. I then added the following to the method applicationDidFinishLoading: based on the documentation in the aforementioned link: -(void)applicationDidFinishLaunching:(NSNotification *) aNotification { NSError *error = nil; BOOL ok = [myArrayController fetchWithRequest:nil merge:NO error:&error]; if (ok) { [myCustomViewController redrawMyCustomView]; } } Now, when I launch the application, the data populates the table and the view automatically is redrawn with the selected data.
