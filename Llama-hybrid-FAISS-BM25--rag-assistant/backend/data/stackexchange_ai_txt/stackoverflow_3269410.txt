[site]: stackoverflow
[post_id]: 3269410
[parent_id]: 
[tags]: 
UML and Algorithms

I am a bit confused about where to describe the algorithm I might use in some part of an application. Let's say I want to create a Use Case that describes how the User inputs a set of values and my application returns the average of those values (of course this is a dead-easy case, but its easier to explain it this way). 1. The User tells the System he wants to calculate the average of a set of numbers. 2. The System asks the User for a number. 3. The User tells the System a number. Repeat steps 2-3 until the User tells the System there are no more numbers left. 4. The System returns the average of all those numbers. Now, where should I state the algorithm behind calculating the average of the numbers? What if instead of calculating the average of numbers, I had to change the configuration of a game, go to the next level, add users to a database given a set of conditions, etc? I feel like I need to in some way formalize the knowledge I have of the domain, otherwise I might either forget it or even worse, assume I know things that only by writing down would I understand I don't. In other thread, topic, someone talked about business rules. From what I've read they seem to be put as small notes on class diagrams. Maybe I'm wrong? If that's what they are, I find they too cumbersome to use for more complex algorithms. Thanks
