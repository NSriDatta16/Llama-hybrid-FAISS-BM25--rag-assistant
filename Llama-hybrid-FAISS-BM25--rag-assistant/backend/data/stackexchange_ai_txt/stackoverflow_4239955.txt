[site]: stackoverflow
[post_id]: 4239955
[parent_id]: 4239834
[tags]: 
If you do not specify a storage class (that is, the extern or static keywords), then by default global variables have external linkage. From the C99 standard: ยง6.2.2 Linkages of identifiers 3) If the declaration of a file scope identifier for an object or a function contains the storage-class specifier static , the identifier has internal linkage. 5) If the declaration of an identifier for a function has no storage-class specifier, its linkage is determined exactly as if it were declared with the storage-class specifier extern . If the declaration of an identifier for an object has file scope and no storage-class specifier, its linkage is external. So even if you don't specify the extern keyword, globals can still be accessed by other source files (so-called translation units ), because they can still have an extern declaration for the same variable. If you use the static keyword to specify internal linkage, then even in the presence of an extern declaration for the same variable name in another source file, it will refer to a different variable.
