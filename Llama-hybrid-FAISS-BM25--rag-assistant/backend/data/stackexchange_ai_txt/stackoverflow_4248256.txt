[site]: stackoverflow
[post_id]: 4248256
[parent_id]: 4248089
[tags]: 
This type of problem is exactly what BizTalk was built to solve. You might investigate either bringing it in or mimic'ing its behavior. In a nutshell it works by doing the following: 1. message comes in from the requestor. 2. it saves the message to a database. 3. it processes the message by routing it to the appropriate destinations. (has capability to transform the message along the way). 4. it saves the message state again. 4. when the destination responds, it saves the result and forwards it to the requestor. Basically, instead of a singleton, Biztalk maintains state by leveraging a database backend to store exactly where the message is. Consider it like a state machine. In the event biztalk get's rebooted or looses connectivity somewhere, it can easily get back to exactly where it was in the message pipeline. Any thread can therefore handle any of the changes to message state; which makes it pretty robust. The above is a very simplified version of what Biztalk does. Also, there are other messaging systems that have similar behavior. You might want to do some research before diving in to build your own solution. Personally, I think Biztalk is rather expensive. But my experience has been that it is rock solid and costs a lot less than having a developer (or a team) try and mimic it's functionality.
