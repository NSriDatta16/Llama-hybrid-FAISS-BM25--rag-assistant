[site]: stackoverflow
[post_id]: 4005110
[parent_id]: 2681646
[tags]: 
I know this post is old now, but I'm working on another project and have just had the displeasure of setting up another cross-project reference for an embedded framework that must be built from a separate project before building this project. I came up with a much more elegant fix (and probably the "correct" fix) this time, basically because what I did last time wasn't working (Xcode kept complaining that it couldn't find the framework's main header file). The solution. I've just tested it on a number of projects from scratch just to be sure... Add the other (dependency) project to your main project by doing "Project -> Add to project" Double click on your target that requires products from the other project. In the general tab, add the required products as direct dependencies (top panel). Close this settings panel. Drag the product from the cross-project reference into the Link Binary with Libraries build phase of your target. Add a new "Copy Files" build phase, selecting "Products" as the destination directory (!!!). Rename this build phase to "Copy Cross-Project Products". Drag your cross-project product(s) into this new build phase and make sure that it's the first build phase in your target. Add one final "Copy Files" build phase to your target, selecting "Frameworks" as the destination. Drag your cross-project product(s) into this new build phase. While it looks long-winded, most of it is pretty normal and exactly what you'd do if the dependency target was in the same project. The crucial first build phase however needs to copy the built products from the other project into the current project's build directory. Obviously Xcode is smart enough to get the other project to perform the build, but not smart enough to think to look there when it starts compiling your sources that depend on it.
