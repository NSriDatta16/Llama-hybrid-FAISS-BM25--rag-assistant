[site]: stackoverflow
[post_id]: 2926837
[parent_id]: 2926763
[tags]: 
Some major database systems do not allow a unique index to contain multiple NULLs: unique applies to NULLs as well as non-NULLs. There are ways around this on the database level (e.g., triggers, or a computed column; see link text ). You could address this on an application level and put in a validation that checks for uniqueness if the product_id is not null. validate :enforce_unique_product_id def enforce_unique_product_id if (!self.product_id.nil? && PaymentAgreement.exists?(:conditions=>['product_id = ?', self.product_id])) errors.add_to_base('There is already an agreement with product id " + self.product_id) end end (Update: As pointed out by zed_0xff, MySql allows multiple NULLs in a UNIQUE index in the most commonly used storage engines.)
