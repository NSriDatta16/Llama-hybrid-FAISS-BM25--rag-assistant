[site]: stackoverflow
[post_id]: 1567171
[parent_id]: 1567064
[tags]: 
Here's one solution: Some sample text Basically the magic here is overflow: hidden , which changes the CSS visual formatting model. Take a look at CSS layout fundamentals, part 5: floats : Fixing adjacent boxes Let’s look at the red paragraph border problem first. The reason the paragraph border appears behind the image is because floats don’t reposition block boxes that are adjacent to them. In this example, the floated image is only pushing the line boxes inside the paragraph across. So the text is pushed to the right, but the actual paragraph box still stretches across the full width of the container. The fix for this issue comes from a very well-hidden paragraph in the floats section of the CSS 2.1 specification: The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with ‘overflow’ other than ‘visible’) must not overlap any floats in the same block formatting context as the element itself. So to prevent our paragraph block from overlapping the floated content, the solution is to create a “new block formatting context”, in CSS specification author terminology. Sounds tricky, eh? Fortunately, it isn’t that hard. New block formatting contexts are created by any block which meets these criteria: is floated is absolutely positioned has a display property value of one of more unusual flavours (inline-block, table-cell, etc.) has its overflow property set to something other than visible. The last option is the one that is easiest to do in most cases: setting overflow: auto on our paragraph will create a new “block formatting context”, and render the paragraph border in the right place.
