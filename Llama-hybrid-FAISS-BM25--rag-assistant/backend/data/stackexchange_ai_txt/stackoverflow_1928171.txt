[site]: stackoverflow
[post_id]: 1928171
[parent_id]: 1452084
[tags]: 
The most important thing is to remember that .NET is not a programming language. COBOL is a programming language. If you want to get COBOL programmers productively producing .NET applications, then ask them to review and evaluate VB.NET and IronPython by prototyping some small applications in these languages. Once they have tried VB.NET and IronPython, let them choose which language to use going forward and organize some training in the chosen language. Whatever you do, do not let them use C# until they have demonstrated that they can handle VB.NET or IronPython. If you have a spectrum of computer languages with C++, Java and C# at the complex, techy, punctuation marks end of the spectrum, then COBOL is at the other end being straightforward, business-oriented, and plain text. Both VB.NET and IronPython are closer to the COBOL end of the spectrum. If I was running the shop, I would skip the eval and begin by selling them on using IronPython because I think it is a better choice in the long run, and Python skills can be leveraged on Linux/UNIX projects or Java projects, as well as in .NET. The important thing is to get these guys writing and debugging some actual code that runs on .NET so that they get the feel of it, and can figure out some reasonable ways to handle things that they are familiar with like MOVE CORRESPONDING and level 88s.
