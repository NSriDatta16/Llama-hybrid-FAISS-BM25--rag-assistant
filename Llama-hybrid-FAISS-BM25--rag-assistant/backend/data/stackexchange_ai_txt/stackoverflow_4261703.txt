[site]: stackoverflow
[post_id]: 4261703
[parent_id]: 4261393
[tags]: 
AFAIK there is no built in function for this. However, if you convert all dates to seconds since some random start date, I think you can calculate the time of the fault as (in pseudo code): max(0; b1 - f1) - max(0; b2 - f2) where b1, f1, b2 and f2 are given in the code below where I have put the SQL to calculate the above expression (untested): DECLARE @startDate DATETIME SET @startDate = '2010-01-01' -- Some date that must be smaller than all fault dates and break dates DECLARE @breakStartDate DATETIME DECLARE @breakEndDate DATETIME DECLARE @faultStartDate DATETIME DECLARE @faultEndDate DATETIME DECLARE @b1 INT DECLARE @b2 INT DECLARE @f1 INT DECLARE @f2 INT -- Set values for break and fault dates here SET @breakStartDate = .... SET @breakEndDate = .... SET @faultStartDate = .... SET @faultEndDate = .... SET @b1 = DATEDIFF(SECOND, @startDate, @breakStartDate) SET @b2 = DATEDIFF(SECOND, @startDate, @breakEndDate) SET @f1 = DATEDIFF(SECOND, @startDate, @faultStartDate) SET @f2 = DATEDIFF(SECOND, @startDate, @faultEndDate) DECLARE @time INT SET @time = CASE WHEN @b1 - @f1 I think it is more elegant and less error prone but it's a matter of taste. It may be harder to read.
