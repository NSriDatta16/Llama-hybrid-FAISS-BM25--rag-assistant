[site]: stackoverflow
[post_id]: 2294940
[parent_id]: 2294473
[tags]: 
Here's what Fabien Potencier of the Symfony framework has to say about templating engines : Why do people still think PHP is a templating engine? Sure enough, PHP started its life as a template language, but it did not evolve like one in the recent years. If you think PHP is still a template language, can you give me just one recent change in the PHP language which enhanced PHP as a template language? I cannot think of one. He also describes the features that he looks for in a templating language: Concision Template oriented syntax Reusability Security Sandbox mode As well as some of the features that make his favorite templating language Twig stand out: Native template inheritance (templates are compiled as classes); Solid automatic auto-escaping (with no associated runtime overhead as everything is done during compilation); Very secure sandbox mode (white-list the tags, filters, and methods that can be used in templates); Great extensibility: you override everything, even the core features, by bundling your own tags and filters as an extension; but you can also manipulate the AST (Abstract Syntax Tree) before compilation. By leveraging this possibilities, you can even create your own DSL (Domain Specific Language), targeted at your application. In the comments of the article, he says that, "It will probably be part of Symfony 2. But I first need some community feedback." Read the full article to get his whole argument in favor of templating systems.
