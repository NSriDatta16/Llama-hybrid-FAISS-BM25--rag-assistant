[site]: stackoverflow
[post_id]: 4707476
[parent_id]: 4707430
[tags]: 
Extract from the Java Language Specification : Every method declaration in the body of an interface is implicitly abstract, so its body is always represented by a semicolon, not a block. Every method declaration in the body of an interface is implicitly public. For compatibility with older versions of the Java platform, it is permitted but discouraged, as a matter of style, to redundantly specify the abstract modifier for methods declared in interfaces. The book must be wrong or at least have made a confusing claim. Edit: The only thing I can think of is that you can implement an interface and keep the method abstract to add Javadoc to it. interface Foo { void bar(); } abstract class FooImpl implements Foo { /** * I want to put documentation here without implementing the method. */ abstract void bar(); } But this has no effect on the behaviour of the code.
