[site]: stackoverflow
[post_id]: 1020323
[parent_id]: 1020312
[tags]: 
The key thing to remember is that design patterns are just a tool to help you understand the abstract concepts. Once you have that understanding, restricting yourself specifically to a "recipe" from a book is pointless and hurts your ability to write the code most appropriate for your purpose. That said, reading books like GoF will present you with more ways to think about problems so that when the time comes to implement something on your own, you'll have a wider set of perspectives to approach the problem from. In your case, if using singleton makes sense in every case, then go right ahead. If it "sort of" fits and you have to implement it in some clunky way, then you need to come up with a new solution. Forcing a pattern that isn't perfect is somewhat like hammering a square peg in a round hole. Given that you say "this approach has been effective and proven very practical to our circumstances," I think you're doing fine. Here are some good books: Gang of Four Book - the classic book for design patterns Head First Design Patterns - I've heard this recommended by a few people as an alternative
