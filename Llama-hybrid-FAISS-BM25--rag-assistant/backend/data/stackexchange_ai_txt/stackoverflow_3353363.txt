[site]: stackoverflow
[post_id]: 3353363
[parent_id]: 3329804
[tags]: 
The problem is that the result set is collection of Anonymous type as you supposed and the grid doesn't know how to treat it. What you have to do is to use RowInserting and RowUpdating events of the grid. Here is an example of how I use DevExpress grid with NHibernate: protected void gridAgentGroups_RowInserting(object sender, DevExpress.Web.Data.ASPxDataInsertingEventArgs e) { ASPxGridView currentGrid = sender as ASPxGridView; var currentAgentGroup = new AgentGroup(); if (e.NewValues.Contains("Name")) { var newValue = (string)e.NewValues["Name"]; currentAgentGroup.Name = newValue; } if (e.NewValues.Contains("PhysicalAddress")) { var newValue = (string)e.NewValues["PhysicalAddress"]; currentAgentGroup.PhysicalAddress = newValue; } AgentGroupsDataAccess.SaveAgentGroup(currentAgentGroup); e.Cancel = true; currentGrid.CancelEdit(); currentGrid.DataBind(); } protected void gridAgentGroups_RowUpdating(object sender, DevExpress.Web.Data.ASPxDataUpdatingEventArgs e) { ASPxGridView currentGrid = sender as ASPxGridView; int currentAgentGroupId = (int)((AgentGroup)currentGrid.GetRow(currentGrid.EditingRowVisibleIndex)).Id; var currentAgentGroup = AgentGroups.Where(ag => ag.Id == currentAgentGroupId).FirstOrDefault(); if (e.NewValues.Contains("Name")) { var newValue = (string)e.NewValues["Name"]; currentAgentGroup.Name = newValue; } if (e.NewValues.Contains("PhysicalAddress")) { var newValue = (string)e.NewValues["PhysicalAddress"]; currentAgentGroup.PhysicalAddress = newValue; } AgentGroupsDataAccess.SaveAgentGroup(currentAgentGroup); e.Cancel = true; currentGrid.CancelEdit(); currentGrid.DataBind(); } I hope this will help.
