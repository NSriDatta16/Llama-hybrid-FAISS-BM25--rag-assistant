[site]: stackoverflow
[post_id]: 5149207
[parent_id]: 
[tags]: 
Permanently Enabled Scrollbars Possible?

I am having a problem trying to come up with a way to keep ScrollBars/ScrollViewers permanently enabled. I am working on a Data Entry application where certain users might only have "read" rights. This needs to disabled all controls so they are not able to make any changes. When a control is disabled the user cannot view all information in scrollable controls (Infragistics XamDataGrid , DevExpress GridControl , TextBox es with Wrap, ListBox , etc). I was hoping I could "outsmart" Microsoft, and implement a Trigger to set IsEnabled to true when it was set to false, but of course, it didn't work (for a variety of reasons, I'm sure). I've been focusing strictly on a textbox for now, to try to disabled the contents, but keep the ScrollViewer enabled and have had no luck. I was hoping there might be a solution, I.E. Overriding the IsEnabled dependency property of the ScrollViewer to always return true, or provide some sort of Style that does not allow for the ScrollViewer to become disabled. I know a TextBox has an IsReadOnly property, but this is of no use for many of the other controls I need to resolve this issue for. Is there any way I can go about solving this, in a fairly simple manner (simple as in that I can make a style that's applied everywhere, without changing the 200+ code files). Thanks EDIT: Here is the code I'm using in a sample project to try to resolve this issue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras faucibus hendrerit lorem, auctor vehicula sem molestie nec. Quisque non massa quam. Nullam tempor blandit tempor. Integer in molestie ipsum. Donec augue mi, auctor vitae scelerisque a, vehicula ac ipsum. Etiam posuere vulputate augue quis convallis. Nullam aliquet purus nec lacus fermentum hendrerit egestas purus tincidunt. Suspendisse quis lacinia libero. Quisque facilisis turpis at augue dignissim aliquam ultrices sem porta. Etiam sagittis arcu id nibh ultrices dictum. Nulla non lectus luctus est malesuada luctus. Praesent sed lobortis nisi. Morbi et porttitor massa. Sed pellentesque, nisl eu imperdiet varius, ligula augue cursus nisl, eu egestas metus velit non elit. Phasellus elementum hendrerit risus, eu tincidunt ante gravida vel.
