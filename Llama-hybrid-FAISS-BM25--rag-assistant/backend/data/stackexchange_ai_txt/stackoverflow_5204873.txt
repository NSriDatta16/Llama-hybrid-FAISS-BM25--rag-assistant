[site]: stackoverflow
[post_id]: 5204873
[parent_id]: 5204830
[tags]: 
While $_SERVER['PHP_SELF'] will contain the currently executing script, there is no way to determine from an included file which specific script caused the include. This means that if a.php includes b.php , which includes c.php , c.php will have no way of knowing that b.php was the includer. The best you can get is that a.php is the currently executing script. Edit: Yup, my above answer is technically wrong -- you can use debug_backtrace to find the caller, even without functions, up until PHP 5.4, which removes this functionality . a.php: b.php: c.php: Output: ABCArray ( [0] => Array ( [file] => /tmp/b.php [line] => 3 [function] => include ) [1] => Array ( [file] => /tmp/a.php [line] => 3 [args] => Array ( [0] => /tmp/b.php ) [function] => include ) ) So while this works, you probably shouldn't use it. debug_backtrace can be a noticeable performance drag when used excessively.
