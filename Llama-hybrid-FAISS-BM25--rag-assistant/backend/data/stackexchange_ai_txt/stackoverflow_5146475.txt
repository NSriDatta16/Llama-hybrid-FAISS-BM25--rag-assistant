[site]: stackoverflow
[post_id]: 5146475
[parent_id]: 5070055
[tags]: 
You can also just have login_next traverse to a Controller Python Script (you'll fine other similar ones in the /plone_login area of the core Plone product that end with the extension '.cpy') that you write that sends the email (perhaps notifyMangersUponLogin ) rather than it's default of traversing to login_success. Then, have your CPT script traverse to login_success to continue the sript/page MVC flow that Plone ships with, if that's what you want. To leverage Controller Page Templates (.cpt files)/Scripts (.cpy files), it's key to not only copy the custom version of login_next.cpy to your custom product's skin path, but also the login.cpy.metadata file that specifies the success/failure actions of the MVC page/script logic flow. With Plone 4.0.2, you'll find the Plone login-related scripts/templates under a path such as: /buildout-cache/eggs/plone-4.0.2-py2.6.egg/Products/CMFPlone/skins/plone_login relative to your buildout structure.
