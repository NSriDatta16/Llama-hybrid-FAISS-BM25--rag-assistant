[site]: stackoverflow
[post_id]: 5705722
[parent_id]: 5705428
[tags]: 
In my experience, this is a very common situation - making you production code do things right makes it harder to test Other examples include hiding implementation details behind interfaces, never reaching ORM entities to outward callers, making certain functionality available over web service calls only...and generally to have an API you would expect in production restricts the testings quite often. And yes, its a pain to get your coverage back after a substantial refactoring. Sometimes this results in reversing the overall progress when the features that are so hard to test are not tested properly. So I generally agree to Fortega, except the very last sentence. Don't let your tests rot. They'll come back when you want it least.
