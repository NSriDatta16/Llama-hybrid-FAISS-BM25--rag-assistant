[site]: stackoverflow
[post_id]: 3779403
[parent_id]: 3774740
[tags]: 
Here's a slightly different approach, and my reasoning. Reason: I'm imagining a list on a webpage with a textbox that allows you to type a substring of your desired selection to filter down to that item. As such, my assumption is that your users will ONLY ever type a substring. These aren't power users who will be regex matching for their desired track. By just using select and include? you can limit that regex power, as people suggested, without the added complexity. Regex is a bit like using a machine gun to kill a fly in this example. Code: #I renamed the array, since it was a list of songs, not artists songs.select {|s| s.upcase.include?(query.upcase)} You could leave the upcase off if you want the query to be case sensitive
