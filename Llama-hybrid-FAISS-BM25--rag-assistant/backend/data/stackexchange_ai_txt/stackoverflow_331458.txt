[site]: stackoverflow
[post_id]: 331458
[parent_id]: 32333
[tags]: 
Raganwald has a recent post about this. In the end, he builds the following: class Module def anonymous_module(&block) self.send :include, Module.new(&block) end end class Acronym anonymous_module do fu = lambda { 'fu' } bar = lambda { 'bar' } define_method :fubar do fu.call + bar.call end end end That exposes fubar as a public method on Acronym s, but keeps the internal guts ( fu and bar ) private and hides helper module from outside view.
