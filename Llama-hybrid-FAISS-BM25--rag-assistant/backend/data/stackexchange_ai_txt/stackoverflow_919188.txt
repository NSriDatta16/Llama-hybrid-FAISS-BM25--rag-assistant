[site]: stackoverflow
[post_id]: 919188
[parent_id]: 876188
[tags]: 
The file system is your database, so use it. Come up with a "unique name" for your file. Doesn't matter what the file name is, as long as it is unique across the space. The file name has nothing to do with the tags. Hash the file name to a "storage" directory. If you aren't going have a bazillion files ( For each tag on the file, either store an "empty" file of the same name in a "tag" directory or, simply have a "tag file" that lists the files in that tag. Again, if you expect to have zillions of files in a specific tag, hash the files in to buckets. To add a tag to a file, simply add the file reference to the proper tag dir. To delete the tag, same thing. To delete a file, simply remove the file from the main store. When you iterate the tag references, you can check for the file at that point and delete the entries lazily. You're probably going to be hitting the file for anything interesting anyway. If you want to store actual meta data for the file, then create a mirror "meta data" directory. When you add a file, you place it in the file store directory, and a matching meta data file in a "meta data store" directory, using the same scheme. Deleting a file by deleting the original and it's meta data. Just simple file operations, no file system shenanigans (beyond hashing directory buckets), no links, attributes, what have you. This gives you "unlimited" tags per file, you can manage it from the command line or file explorer with the only tool required being the Mark I Eyeball. You also get permanent references to the actual file (since it name never changes). Darkest part is that you'll need to "scan the tag cloud" to find out what tags a file has. If you choose to go with a metadata file, you can maintain the tag list in that (that will complicate your tagging/untagging operations, but not horribly).
