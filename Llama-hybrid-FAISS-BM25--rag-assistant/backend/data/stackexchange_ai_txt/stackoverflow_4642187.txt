[site]: stackoverflow
[post_id]: 4642187
[parent_id]: 4641817
[tags]: 
You can use findContours to do that, see the opencv manual and a Tutorial to find connected components . Edit: Code from the tutorial (via Archive.org) #include #include #include int main(int argc, char *argv[]) { IplImage *img, *cc_color; /*IplImage is an image in OpenCV*/ CvMemStorage *mem; CvSeq *contours, *ptr; img = cvLoadImage(argv[1], 0); /* loads the image from the command line */ cc_color = cvCreateImage(cvGetSize(img), IPL_DEPTH_8U, 3); cvThreshold(img, img, 150, 255, CV_THRESH_BINARY); mem = cvCreateMemStorage(0); cvFindContours(img, mem, &contours, sizeof(CvContour), CV_RETR_CCOMP, CV_CHAIN_APPROX_SIMPLE, cvPoint(0,0)); for (ptr = contours; ptr != NULL; ptr = ptr->h_next) { CvScalar color = CV_RGB( rand()&255, rand()&255, rand()&255 ); cvDrawContours(cc_color, ptr, color, CV_RGB(0,0,0), -1, CV_FILLED, 8, cvPoint(0,0)); } cvSaveImage("result.png", cc_color); cvReleaseImage(&img); cvReleaseImage(&cc_color); return 0; }
