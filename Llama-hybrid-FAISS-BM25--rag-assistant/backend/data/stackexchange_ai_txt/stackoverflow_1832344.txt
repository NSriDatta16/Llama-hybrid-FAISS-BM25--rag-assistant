[site]: stackoverflow
[post_id]: 1832344
[parent_id]: 1827993
[tags]: 
I don't think there's "a" better way than what you're doing, because the problem description is quite vague, and whether it's actually an artificial intelligence problem or a simulation problem is not clear. For the decision part, it's usually fine to have a simple heuristic system (based on your intuitive understanding of the behaviour being modelled) that is a sequence of conditional statements with possibly some random factors to vary it up a bit. You could have a weighted average system that picks several options, ranks them according to perceived quality, then picks an option at random while being biased towards the better values. (This is called roulette wheel selection or fitness proportionate selection in genetic algorithm circles but is very useful outside of GAs too.) For the simulation part you typically want to model the process and then introduce the randomness to model the more subtle parts of the process. This means defining clearly your inputs (backhand power, ball direction, ...) and your outputs (ball travel vector?), and considering how they relate to each other. This means you get given some outputs of known values, and then you can modify them with your random number generator. Things get more complicated if you're trying to model a human's choice rather than just a physical simulation, since that often takes precedence over all the other inputs. A simplified example I might start with would be that the player AI picks where they want to hit the ball to. I calculate the ball's intended direction as a vector that would send the ball exactly where planned. The system then calculates a difficulty score from 0% to 100% based on the ball direction, speed, player's ability, etc. I generate an 'inaccuracy' modifier that is a random number between 0% and the difficulty%, meaning a perfectly easy shot will be completely accurate, whereas a half-difficult shot will vary between being 0% and 50% accurate. Then I calculate a random normalised unit-length 3D vector, scale that by the inaccuracy value, and add it to the intended direction. This means more difficult shots will tend to fly further off target.
