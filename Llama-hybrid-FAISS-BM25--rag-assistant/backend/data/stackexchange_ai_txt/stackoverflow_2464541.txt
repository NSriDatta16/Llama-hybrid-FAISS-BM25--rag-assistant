[site]: stackoverflow
[post_id]: 2464541
[parent_id]: 162042
[tags]: 
Monostate (described in Robert C. Martin's Agile Software Development) is an alternative to singleton. In this pattern the class's data are all static but the getters/setters are non-static. For example: public class MonoStateExample { private static int x; public int getX() { return x; } public void setX(int xVal) { x = xVal; } } public class MonoDriver { public static void main(String args[]) { MonoStateExample m1 = new MonoStateExample(); m1.setX(10); MonoStateExample m2 = new MonoStateExample(); if(m1.getX() == m2.getX()) { //singleton behavior } } } Monostate has similar behavior to singleton but does so in a way where the programmer is not necessarily aware of the fact that a singleton is being used.
