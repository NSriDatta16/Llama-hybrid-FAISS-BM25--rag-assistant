[site]: stackoverflow
[post_id]: 5470985
[parent_id]: 
[tags]: 
dynamic dictionary to JSON problem

I'm currently working on a project using javascript and python with Jquery Datatables plugin and Django. My problem is that I am trying to create a dictionary in Python which I then wish to perform a json.dumps(dictionary) in order to send it across to the JQuery. The conversion is performed and I can using a debugger see the data in the JQuery/Javascript code however it does not populate my table the reason being that the JSON is malformed. This I believe is due to the way the Dictionary in python code is created. I know I'm doing something wrong at this step. All the examples I've seen show a hard coded dictionary I need to create my dictionary dynamically. Here is the code I'm using in python. If anyone knows what I'm doing wrong please let me know this is driving me insane. This is the latest permutation of the dictionary code:- dictionary = {} array = [] status = 'OFF' for item in self.scanResults: if item[6]: status = 'ON' else: status = 'OFF' array.append( {'MAC_ADDRESS':item['mac_addr'], 'IP_ADDRESS':item['ip_addr'], 'NAME':item['name'], 'OS':item['os'], 'OS_VERSION':item['os_version'], 'WORKGROUP':'--', 'STATUS':status }) dictionary = dict({'aaData': array}) The JSON on the JQuery side should be in this format:- {"aaData": [[..,..,..,..,],[..,..,..,..]]} Cheers for any help you can provide Chris EDIT: Additional information. Sorry for not including it earlier. I'm encoding it the following way :- return HttpResponse(simplejson.dumps(response_dict), mimetype='application/javascript') The screen dump of results is:- {"aaData": [{"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.2", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:10:e3:42:16:35", "OS": "Linux", "NAME": "Machine_One"}, {"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.3", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:19:a3:41:16:31", "OS": "Linux", "NAME": "Machine_Two"}, {"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.4", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:19:b3:43:16:32", "OS": "Linux", "NAME": "Machine_Three"}, {"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.5", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:19:c3:44:16:33", "OS": "Linux", "NAME": "Machine_Four"}, {"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.6", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:19:d3:45:16:34", "OS": "Linux", "NAME": "Machine_Five"}, {"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.7", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:19:e3:46:16:37", "OS": "Linux", "NAME": "Machine_Six"}, {"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.8", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:19:f3:47:16:38", "OS": "Linux", "NAME": "Machine_Seven"}, {"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.9", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:19:g3:48:16:38", "OS": "Linux", "NAME": "Machine_Eight"}, {"STATUS": "ON", "WORKGROUP": "--", "IP_ADDRESS": "192.168.0.10", "OS_VERSION": "8.04", "MAC_ADDRESS": "00:19:h3:49:16:41", "OS": "Linux", "NAME": "Machine_Nine"}]} The actual epected results would be :- {"aaData":[["ON","--","192.168.0.6", "8.04", "00:19:d3:45:16:34", "Linux", "Machine_Five"], ["ON","--","192.168.0.6", "8.04", "00:19:d3:45:16:34", "Linux", "Machine_Five"]]} Just to give you an idea. I'm using jQuery DataTables plugin for this. I beleive the problem is malformed dictionary ie: my fault. I'm new to python and have tried numerous permutations of dictionaries and have discovered 10+ ways not to do it I just need a hint to that elusive right way. Cheers again Chris SOLVED: I've solved the issue by passing back from the server an array of arrays (list of lists) if you prefer and parsing them on the client side due to the fixed size of the lists this is not causing a performance issue. I shall look more closely at this at a later date and post up a better fix or more elegant solution.
