[site]: stackoverflow
[post_id]: 4559581
[parent_id]: 4558447
[tags]: 
Store the city pairs only once in the table. Store the data in alpha order with the first alpha city in the first column using a stored procedure to sort the data prior to insertion. Create a unique index on the two city columns. Create a retrieval stored procedure which will sort the supplied cities first then query the table. Here is some quick work using SQL Server 2K8 Express. CREATE TABLE [dbo].[Distance]( [D_Id] [int] IDENTITY(1,1) NOT NULL, [D_City1] [nchar](10) NOT NULL, [D_City2] [nchar](10) NOT NULL, [D_Distance] [int] NOT NULL ) ON [PRIMARY] GO Insert Distance Values ('a','b',30) ,('b','c',40) ,('c','z',40) ,('d','z',40) ,('e','z',40) select * from Distance where D_City1 = 'a' and D_City2 = 'b' Drop procedure Get_Distance ; GO Create procedure Get_Distance @1City nvarchar(10) , @2City nvarchar(10) AS Declare @1AlphaCity nvarchar(10), @2AlphaCity nvarchar(10) Select @1City, @2City, @1AlphaCity, @2AlphaCity set @1AlphaCity = @1City Set @2AlphaCity = @2City If @1AlphaCity > @2AlphaCity BEGIN Set @1AlphaCity = @2City Set @2AlphaCity = @1City END Select @1City, @2City, @1AlphaCity, @2AlphaCity GO EXEC dbo.Get_Distance 'C', 'B'
