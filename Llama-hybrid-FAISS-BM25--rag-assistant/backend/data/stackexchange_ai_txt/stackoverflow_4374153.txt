[site]: stackoverflow
[post_id]: 4374153
[parent_id]: 4373927
[tags]: 
First, parse the text with an HTML parser, with something like DOMDocument::loadHTML . Note that poor HTML can be hard to parse, and depending on the parser, you might get slightly different output in the browser after running such a function. PHP's DOMDocument isn't very flexible in that regard. You may have better luck by parsing with other tools. But if you are working with valid HTML (and you should try to, if it's within your control), none of that is a concern. After parsing the text, you need to look at the text nodes for links and replace them. Using a regular expression is the simplest way. Here's a sample script that does just that: '.$matches[$i][0].' ', $matches[$i][1], strlen($matches[$i][0])); } return $text; } $dom = new DOMDocument(); $dom->loadHTML(' stackoverflow.com test '); $xpath = new DOMXpath($dom); foreach ($xpath->query('//text()') as $text) { $frag = $dom->createDocumentFragment(); $frag->appendXML(linkify($text->nodeValue)); $text->parentNode->replaceChild($frag, $text); } echo $dom->saveHTML(); ?> I did not come up with that regular expression, and I cannot vouch for its accuracy. I also did not test the script, except for this above case. However, this should be more than enough to get you going. Output: stackoverflow.com test Note that saveHTML() adds the surrounding tags. If that's a problem, you can strip them out with substr() .
