[site]: stackoverflow
[post_id]: 1475951
[parent_id]: 1433368
[tags]: 
I still don't have a great answer for this. I tried serializing some instances of my EF classes to XML using the DataContractSerializer: DataContractSerializer serializer = new DataContractSerializer(typeof(Room)); using (SlideLincEntities ctx = new SlideLincEntities()) { Room roomWithMostSessions = ctx.Room .OrderByDescending(r => r.Sessions.Count) .FirstOrDefault(); string fileName = ConfigurationSettings.AppSettings["outputFile"]; Console.WriteLine("Writing data to file '{0}'", fileName); File.Delete(fileName); using (Stream fileStream = File.Open(fileName, FileMode.OpenOrCreate)) { serializer.WriteObject(fileStream, roomWithMostSessions); } } Unfortunately, Blend can't read the generated XML: the DataContractSerializer uses XML ref notation, which apparently confuses Blend's simplistic XML deserializer. I also tried generating sample data by hand (uggh) using XAML's object notation: This was better, but for some reason, Blend wouldn't bind to any collections within the objects: I don't know why, because of course XAML databinding errors get swallowed silently. (Have I mentioned how much I hate XAML databinding?) I eventually went with defining small amounts of data straight within the XAML form proper: So that's my current approach. Not very elegant. Open to other ideas.
