[site]: crossvalidated
[post_id]: 492303
[parent_id]: 
[tags]: 
R Stan: Rejecting initial value error only with real data, not with simulated data

I am trying to fit a non-linear function to a dataset using Stan and R. I tested my model with a simulated dataset. It works nicely. However, as soon as I use real data that is formatted exactly the same as the simulated data, I get the error: Rejecting initial value. Gradient evaluated at the initial value is not finite. How can this be? This is my stan file: data { int N; real p1[N]; real p2[N]; real W1[N]; real W2[N]; real U[N]; } parameters { real r; real s; real tau; } transformed parameters { real pred[N]; for (i in 1:N) { pred[i] = exp(-s*(-log(p1[i]))^r) * W1[i] + exp(-s*(-log(p2[i]))^r) * W2[i]; } } model { // priors r ~ gamma(1, 1); s ~ gamma(1, 1); tau ~ gamma(1, 1); // model U ~ normal(pred, tau); } This is the relevant R code: df = data.frame(p1 = as.vector(df $p1), p2 = as.vector(df$ p2), W1 = rep(-5, nrow(df)), W2 = rep(-1, nrow(df)), U = as.vector(df$U)) #----RStan---- stan.data = c(as.list(df), N = nrow(df)) fit = stan("kortenkamp.stan", data=stan.data) These are summaries of the simulated and the real dataset: Simulated: id case p1 p2 W1 W2 r s error Min. : 1.0 Min. :1.0 Min. :0.00329 Min. :0.6037 Min. :-1 Min. :-5 Min. :0.08291 Min. :0.4841 Min. :0.2602 1st Qu.:13.0 1st Qu.:1.0 1st Qu.:0.06381 1st Qu.:0.6536 1st Qu.:-1 1st Qu.:-5 1st Qu.:0.08961 1st Qu.:0.6450 1st Qu.:0.4497 Median :25.5 Median :1.5 Median :0.10819 Median :0.7011 Median :-1 Median :-5 Median :0.09930 Median :0.7253 Median :0.5179 Mean :25.5 Mean :1.5 Mean :0.10703 Mean :0.6980 Mean :-1 Mean :-5 Mean :0.10021 Mean :0.7198 Mean :0.5094 3rd Qu.:38.0 3rd Qu.:2.0 3rd Qu.:0.15757 3rd Qu.:0.7460 3rd Qu.:-1 3rd Qu.:-5 3rd Qu.:0.10913 3rd Qu.:0.7849 3rd Qu.:0.5626 Max. :50.0 Max. :2.0 Max. :0.19998 Max. :0.7998 Max. :-1 Max. :-5 Max. :0.12677 Max. :0.9536 Max. :0.8519 U Min. :-4.757 1st Qu.:-3.540 Median :-3.126 Mean :-3.070 3rd Qu.:-2.617 Max. :-1.223 Real: p1 p2 W1 W2 U Min. :0.0000 Min. :0.0000 Min. :-5 Min. :-1 Min. :1.000 1st Qu.:0.2150 1st Qu.:0.7300 1st Qu.:-5 1st Qu.:-1 1st Qu.:3.000 Median :0.4000 Median :0.8550 Median :-5 Median :-1 Median :4.000 Mean :0.4222 Mean :0.8133 Mean :-5 Mean :-1 Mean :4.178 3rd Qu.:0.6000 3rd Qu.:0.9500 3rd Qu.:-5 3rd Qu.:-1 3rd Qu.:6.000 Max. :1.0000 Max. :1.0000 Max. :-5 Max. :-1 Max. :9.000 The data is simulated like this: pr = function(p, r, s){ return(exp(-s*(-log(p))^r)) } n = 100 df_sim = data.frame(id = rep(1:50, 2), case = c(rep(1, 50), rep(2, 50)), p1 = sample(seq(0, 0.2, 0.00001), n), p2 = sample(seq(0.6, 0.8, 0.00001), n), W1 = -1, W2 = -5, r = rep(rnorm(n/2, 0.1, 0.01), 2), s = rep(rnorm(n/2, 0.7, 0.1), 2), error = rnorm(n, 0.5, 0.1)) df_sim $U1 = df_sim$ p1 * df_sim $W1 df_sim$ U2 = df_sim $p2 * df_sim$ W2 df_sim $Y = pr(df_sim$ p1, df_sim $r, df_sim$ s) * df_sim $W1 + pr(df_sim$ p2, df_sim $r, df_sim$ s) * df_sim $W2 + rnorm(n, 0, df_sim$ error) stan.data = list( N = nrow(df_sim), p1 = df_sim $p1, p2 = df_sim$ p2, W1 = df_sim $W1, W2 = df_sim$ W2, U = df_sim$Y) A snippet of the real data: p1 p2 W1 W2 U 0.4 0.9 -5 -1 2 0.2 0.95 -5 -1 2 0.4 0.8 -5 -1 2 0.9 0.41 -5 -1 3 0.6 0.84 -5 -1 7 0.2 0.75 -5 -1 6 0.5 1 -5 -1 4 I am completely new to Bayesian approaches, so any help is appreciated.
