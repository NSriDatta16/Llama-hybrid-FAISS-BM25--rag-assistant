[site]: stackoverflow
[post_id]: 4236000
[parent_id]: 4235204
[tags]: 
I have written several large web-apps with the presentation layer based on Ext Js (all of them use ASP.Net server-side). My first app was written as traditional HTML and enhanced with Ext Js on the client. The theory here was that some end-users may take advantage of the option to execute without JavaScript. In reality, this never happened. Granted, this was not an Amazon.com-style website. The next couple of apps pretty much abandoned HTML. We had some concerns about embracing a "non-standard" presentation layer. But, it's so simple to design an Ext layout. We found that non-programmers could look at an Ext layout (it's just a JavaScript object) and understand most everything. It's also easy to load new JavaScript files dynamically; so we could grow the apps naturally. Currently, we have a handful of traditional ASP.Net pages (for login, fatal errors, etc), and a controller layer in C#. Only one ASP.Net page is needed for the conduit from JS to C#. The rest of the presentation layer is done in Ext Js. We actually leveraged this design to create an off-line app of one of our apps. To do this, we only had to replace the handful of ASP.Net pages (we could reuse 100% of the Ext Js code and 100% of the C# code). We talked about generating forms using meta-data, but decided against it. We decided that maintaining the meta-data and various generators could become a larger job than just writing code by hand.
