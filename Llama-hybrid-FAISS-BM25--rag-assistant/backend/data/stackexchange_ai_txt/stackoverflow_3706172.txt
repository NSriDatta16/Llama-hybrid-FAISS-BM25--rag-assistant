[site]: stackoverflow
[post_id]: 3706172
[parent_id]: 
[tags]: 
Haskell Parsec and Unordered Properties

I am trying to use Parsec to parse something like this: property :: CharParser SomeObject property = do name parameters value return SomeObjectInstance { fill in records here } I am implementing the iCalendar spec and on every like there is a name:parameters:value triplet, very much like the way that XML has a name:attributes:content triplet. Infact you could very easily convert an iCalendar into XML format (thought I can't really see the advantages). My point is that the parameters do not have to come in any order at all and each paramater may have a different type. One parameter may be a string while the other is the numeric id of another element. They may share no similarity yet, in the end, I want to place them correctly in the right record fields for whatever 'SomeObjectInstance' that I wanted the parser to return. How do I go about doing this sort of thing (or can you point me to an example of where somebody had to parse data like this)? Thankyou, I know that my question is probably a little confused but that reflects my level of understanding of what I need to do. Edit : I was trying to avoid giving the expected output (because it is large, not because it is hidden) but here is an example of an input file (from wikipedia): BEGIN:VCALENDAR VERSION:2.0 PRODID:-//hacksw/handcal//NONSGML v1.0//EN BEGIN:VEVENT UID:uid1@example.com DTSTAMP:19970714T170000Z ORGANIZER;CN=John Doe:MAILTO:john.doe@example.com DTSTART:19970714T170000Z DTEND:19970715T035959Z SUMMARY:Bastille Day Party END:VEVENT END:VCALENDAR As you can see it contains one VEvent inside a VCalendar, I have made data structures that represent them here . I am trying to write a parser that parses that type of file into my data structures and I am stuck on the bit where I need to handle properties coming in any order with any type; date, time, int, string, uid, ect. I hope that makes more sense without repeating the entire iCalendar spec.
