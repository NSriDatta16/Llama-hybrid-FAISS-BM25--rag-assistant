[site]: stackoverflow
[post_id]: 422372
[parent_id]: 132544
[tags]: 
Any configuration that might differ across environments should be stored at the machine level , not the application level . (More info on configuration levels.) These are the kinds of configuration elements that I typically store at the machine level: Application settings Connection strings retail=true Smtp settings Health monitoring Hosting environment Machine key When each environment (developer, integration, test, stage, live) has its own unique settings in the c:\Windows\Microsoft.NET\Framework64\v2.0.50727\CONFIG directory, then you can promote your application code between environments without any post-build modifications. And obviously, the contents of the machine-level CONFIG directory get version-controlled in a different repository or a different folder structure from your app. You can make your .config files more source-control friendly through intelligent use of configSource . I've been doing this for 7 years, on over 200 ASP.NET applications at 25+ different companies. (Not trying to brag, just want to let you know that I've never seen a situation where this approach doesn't work.)
