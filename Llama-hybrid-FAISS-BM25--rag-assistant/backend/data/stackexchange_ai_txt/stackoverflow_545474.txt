[site]: stackoverflow
[post_id]: 545474
[parent_id]: 545455
[tags]: 
We can do that, see Java for an example. Whether Microsoft will do it is another question. They maintain a competitive advantage for Windows by not doing it. Other examples are Perl and Python to name just two. It's not enough to just have a language, you need to have libraries to make the programmers life easier. Java, Python and Perl seem to have achieved this relatively well and I'm sure Microsoft has the brainpower to do the same for .NET. But the question remains: why would they? Stepping away from bytecode-type VMs, you also have things like VMWare, Virtual PC and so on which can run code on a hardware-level virtual processor. Some of these need the same processor under the covers, others (like VirtualBox and Bochs, I believe) run a virtual processor on top of a different processor. What I haven't really seen is seamless integration between the host and virtual environments. VMWare's drag-n-drop between the two is okay but it would be so much better to be able to host an SPARC environment on top of x86 and basically have the SPARC apps look exactly like the x86 ones (similar to how Cygwin's X-windows-based apps just look like regular Windows windows.
