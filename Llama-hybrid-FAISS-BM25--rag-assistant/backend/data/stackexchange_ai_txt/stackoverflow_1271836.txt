[site]: stackoverflow
[post_id]: 1271836
[parent_id]: 1271716
[tags]: 
I would be cautious about dismissing TDD when prototyping. Primarily because prototypes tend to (but not always) evolve into the final product. If you can be sure that the prototypes are thrown out once they have established what ever it was they were started for, then you can be a bit more lax. If however it there is a chance that either the prototype will evolve into the final product, or parts of the code will be ported into the final product, then would endeavor to follow TDD principles. Not only does this make your code more testable, but more importantly (in my mind) it encourages you to follow good software design principles.
