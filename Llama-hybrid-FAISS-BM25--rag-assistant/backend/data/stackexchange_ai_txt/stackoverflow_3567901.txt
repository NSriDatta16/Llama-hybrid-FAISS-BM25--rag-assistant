[site]: stackoverflow
[post_id]: 3567901
[parent_id]: 3567372
[tags]: 
This'll do it: private List getInheritedPrivateFields(Class type) { List result = new ArrayList (); Class i = type; while (i != null && i != Object.class) { Collections.addAll(result, i.getDeclaredFields()); i = i.getSuperclass(); } return result; } If you use a code coverage tool like EclEmma , you have to watch out: they add a hidden field to each of your classes. In the case of EclEmma, these fields are marked synthetic , and you can filter them out like this: private List getInheritedPrivateFields(Class type) { List result = new ArrayList (); Class i = type; while (i != null && i != Object.class) { for (Field field : i.getDeclaredFields()) { if (!field.isSynthetic()) { result.add(field); } } i = i.getSuperclass(); } return result; }
