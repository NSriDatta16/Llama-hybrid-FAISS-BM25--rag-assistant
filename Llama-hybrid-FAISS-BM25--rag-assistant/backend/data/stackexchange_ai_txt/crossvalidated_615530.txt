[site]: crossvalidated
[post_id]: 615530
[parent_id]: 615412
[tags]: 
If you have some parametric function $F$ for a survival curve that predicts the time $T$ of some event $$P(T\leq t | \theta_1,\theta_2) = F(t;\theta_1,\theta_2)$$ and the parameters themselves are random as well $$\boldsymbol{\theta} \sim MVN(\boldsymbol{\mu}, \boldsymbol{\sigma})$$ then you can express the probability by integrating over all cases: $$P(T\leq t) = \iint_{\forall \theta_1,\theta_2} P(T\leq t | \theta_1,\theta_2) f(\theta_1,\theta_2) d\theta_1 d\theta_2$$ Possibly this might be evaluated analytically or approximated. Your question seems to use the approach of simulations. In that case the result is the average of your simulated curves. Computational example: Let the waiting time for the event be exponential distributed $$T \sim Exp(\lambda)$$ with a variable rate $\lambda$ $$\lambda \sim N(1,0.04)$$ The the survival curve can be computed as the average $$S(t) = E[exp(-\lambda t)]$$ and this follows a log normal distribution (approximately because the case here is truncated at zero) with mean parameter $-\mu t$ and scale parameter $\sigma t$ thus we have $$S(t) \approx exp(-\mu t + 0.5 \sigma^2 t^2)$$ (the formula brakes down for large $\sigma$ or $t$ when the approximation of the truncated distribution with a non-truncated distribution fails). The simulation below shows that this approximation can work set.seed(1) ### generate data from exponential distribution ### with variable rate n = 10^5 lambda = rnorm(n,1,0.2) t = rexp(n,lambda) ### order data for plotting as ### emperical survival curve t = t[order(t)] p = c(1:n)/n ### plotting plot(t, 1-p, ylab = "P(T
