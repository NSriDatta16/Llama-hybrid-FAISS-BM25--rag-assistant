[site]: stackoverflow
[post_id]: 3968615
[parent_id]: 1167182
[tags]: 
You can use the tool NDepend and visualize code coverage results imported from NCover , dotCover or Visual Studio coverage . The tool can show code coverage vs. lines of code in a colored treemap. This feature is especially useful to browse at a glance which portion of code is well covered or not by tests. You can also write and apply continuously code rules written over LINQ queries (CQLinq) like: From now, all types added or refactored should be 100% covered by tests // From now, all types added or refactored should be 100% covered by tests warnif count > 0 from t in JustMyCode.Types where // Match methods new or modified since Baseline for Comparison... (t.WasAdded() || t.CodeWasChanged()) && // ...that are not 100% covered by tests t.PercentageCoverage m.PercentageCoverage ...or also: Types that used to be 100% covered but not anymore C.R.A.P method code metric Complex methods partially covered by tests should be 100% covered The panel Search by Coverage can generate such Code Query over LINQ, and displays instantly the matched code elements: Also, the tool can build a HTML/javascript reports that will show code rules violated or code queries results .
