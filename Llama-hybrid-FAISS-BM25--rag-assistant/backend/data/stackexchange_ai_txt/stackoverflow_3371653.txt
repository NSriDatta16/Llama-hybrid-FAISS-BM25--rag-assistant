[site]: stackoverflow
[post_id]: 3371653
[parent_id]: 3371518
[tags]: 
def example @lines.select {|line| ... }.map {|line| ... }.uniq.sort end In Ruby 1.9 and 1.8.7, you can also chain and wrap iterators by simply not passing a block to them: enum.select.map {|bla| ... } But it's not really possible in this case, since the types of the block return values of select and map don't match up. It makes more sense for something like this: enum.inject.with_index {|(acc, el), idx| ... } AFAICS, the best you can do is the first example. Here's a small example: %w[a b 1 2 c d].map.select {|e| if /[0-9]/ =~ e then false else e.upcase end } # => ["a", "b", "c", "d"] %w[a b 1 2 c d].select.map {|e| if /[0-9]/ =~ e then false else e.upcase end } # => ["A", "B", false, false, "C", "D"] But what you really want is ["A", "B", "C", "D"] .
