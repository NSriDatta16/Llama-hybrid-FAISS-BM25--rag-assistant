[site]: stackoverflow
[post_id]: 4113461
[parent_id]: 4113421
[tags]: 
Every time you construct the ofstream with the same filename string, it will overwrite what was already there. Encapsulate the ofstream in a class which constructs it once and then write to it from your other classes using members on a globally-accessible instance of this wrapper class. This class could call open() on the first requested write, if you don't always want to write this file out. Or (quicker but messy) just declare an ofstream at global scope for all to use. I would not normally encourage globally-visible data in any form, but logfiles are one case where this makes sense. You probably need to implement a mutex to mediate concurrent writes. Another argument for encapsulating the ofstream in a FileWriter class or similar. If you don't do this, you could find data from one thread confusingly interleaved with that from another thread. If you expect your logging needs to become more complex you could consider log4cpp rather than invest increasing amounts of time in this peripheral area of your logic.
