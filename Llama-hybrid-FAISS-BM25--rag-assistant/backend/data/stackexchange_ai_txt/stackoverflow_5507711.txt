[site]: stackoverflow
[post_id]: 5507711
[parent_id]: 
[tags]: 
Incorrect (but non-error-throwing) return value with a Scripting Bridge call to Finder under 10.6

I've been skimming lots and lots of Scripting Bridge-related threads on StackOverflow and elsewhere, and can't seem to make any headway on figuring out why a block of Cocoa code that makes a Scripting Bridge call to the Finder no longer works correctly under 10.6. (A similar version of the code seemed to work OK under 10.5, and I don't know what caused the change in behavior.) Basically, I'm trying to access some of the display options for a Finder window. I have the following block of code as my test case. I'm pointing it at a folder that is displaying as icons, and when I run the code, none of the error blocks trip, but I always just get a nonsensical response (iconSize = 0) at the end. // Set up the Scripting Bridge FinderApplication *finder = [SBApplication applicationWithBundleIdentifier:@"com.apple.finder"]; // Get an HFS-style reference to a specified folder // (folderPath is an NSString * containing a POSIX-style path to a folder) NSURL *folderURL = [NSURL fileURLWithPath:folderPath]; NSString *folderPathHFS = (NSString *)CFURLCopyFileSystemPath((CFURLRef)folderURL, kCFURLHFSPathStyle); // Get the Finder-native folder reference FinderFolder* folder = [[finder folders] objectAtLocation:folderPathHFS]; if (folder == nil) { NSLog(@"folder error: %@", [[folder lastError] localizedDescription]); return; } // Get the Finder-native container window associated with the folder [folder openUsing:finder withProperties:nil]; FinderFinderWindow *folderWindow = [[folder containerWindow] get]; if (folderWindow == nil) { NSLog(@"folderWindow error: %@", [[folderWindow lastError] localizedDescription]); return; } // Retrieve the view preferences for the folder FinderIconViewOptions *ivo = [folderWindow iconViewOptions]; if (ivo == nil) { NSLog(@"ivo error: %@", [[ivo lastError] localizedDescription]); } // Get the current icon size int iconSize = (int)[ivo iconSize]; // Display the icon size in our label if (iconSize > 0) { NSLog(@"successfully retrieved icon size: %d", iconSize); } else { NSLog(@"couldn't retrieve icon size"); } The pure AppleScript version of this code works fine, even when pointing to the same folder: tell application "Finder" set aFolder to the folder " " set aFolderWindow to the container window of aFolder set aIVO to the icon view options of aFolderWindow return the icon size of aIVO end tell My gut instinct is that something is being cast or converted oddly as it's passing through the Scripting Bridge, but I'm completely out of ideas about what to check or where else to look. I've tried printing out class names along the way as objects are retrieved from the Finder and tagging [SBObject *get] calls onto the end of various SB-related assignment statements, but to no avail. Any ideas? UPDATE OK, so I've discovered where the error is being generated in the code above, although I don't feel like I'm all that much closer to fixing the problem. It turns out that the Scripting Bridge's lazy evaluation was masking the problem. If, after retrieving the reference to the FinderWindow, you insert the following two lines of code: NSString *test = [folderWindow name]; NSLog(@"Return value == %@; error message == %@", test, [[folderWindow lastError] localizedDescription]); Then, Scripting Bridge tries to actually execute the name retrieval, fails, and comes back with a slightly-more-constructive error message: Return value == (null); error message == The operation couldnâ€™t be completed. (OSStatus error -1700.) This is awesome (progress?!), but still doesn't get me a whole lot closer to solving the problem. That error message seems to indicate that there's an AEcoercion problem someplace, but I'm not sure how to proceed in solving it. The generated Finder.h file (and the Finder's AppleScript Dictionary) are both pretty clear about the fact that I should be getting back a reference to a FinderWindow object, and printing the folderWindow object out seems to verify that everything is OK up until the name call.
