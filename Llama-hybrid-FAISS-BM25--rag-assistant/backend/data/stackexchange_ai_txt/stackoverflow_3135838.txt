[site]: stackoverflow
[post_id]: 3135838
[parent_id]: 3135724
[tags]: 
This might not be the answer you are looking for, but I believe that Perlin Noise is the solution to your problem. Perlin Noise itself involves no textures; I do believe that you have a misunderstanding about what it is. It's basically, for your purposes, a 2D index of, for each point, a value between 0 and 1. You don't need to generate any textures. See this description of it for more information and an elegant explanation. The basics of Perlin Noise involves making a few random noise maps, starting with one with very few points, and each new one having twice as many points of randomness (and lower amplitude), and adding them together. Especially, if your map is discretely tiled, you don't even have to generate the noise at a high resolution :) How "often" are you planning to do this? If you're going to be doing it 10+ times every single frame , then Perlin Noise might not be your answer. However, if you're doing it once every few seconds (or less) , then I don't think that you should have any worries about speed impact -- at least, for 2D Perlin Noise. Establishing that, you could look at this question and my personal answer to it, which is trying to do something very similar to what you are trying to do. The basic steps involve this: Generate perlin noise; higher turbulence = less clumping and more isolated features. Set a "threshold" (ie, 0.5) -- anything above this threshold is considered "on" and anything above it is considered "off". Higher threshold = more frequent, lower threshold = less frequent. Populate "on" tiles with whatever you are making. Here are some samples of Perlin Noise to generate 50x50 tile based map. Note that the only difference between the nature of the two are the "threshold". Bigger clumps means lower threshold, smaller clumps means a higher one. A forest, with blue trees and brown undergrowth A marsh, with deep areas surrounded by shallower areas
