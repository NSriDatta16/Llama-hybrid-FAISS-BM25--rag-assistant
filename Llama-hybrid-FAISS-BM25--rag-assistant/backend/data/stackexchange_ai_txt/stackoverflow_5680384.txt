[site]: stackoverflow
[post_id]: 5680384
[parent_id]: 
[tags]: 
Manually controlling framerate of Cocos2d-iPhone game strategy

Most game developers should have encountered the "low framerate" issue at least once when developing games. But I, on the other hand, am making a sudoku-like puzzle game where low framerate is not a problem since it does not have constantly moving sprites/elements, and in fact I plan to decrease the framerate so that the game will take less CPU time and hence reduce the power consumption of the iDevices; all this just as a courtesy to the players :) I already know that I can control the framerate in Cocos2d-iphone by modifying animationInterval: [[CCDirector sharedDirector] setAnimationInterval:1.0/60]; But I'm having troubles on the strategy on when to lower the framerate and when to revert to the normal framerate (60Hz). At this point I only managed to define the strategy for touch event, that is: Start with lower framerate. On ccTouchBegan, revert to normal framerate. On ccTouchEnded, switch to lower framerate. Make sure multitouch is handled accordingly. I'm left with two more conditions: Handling CCActions on CCNodes: as long as some CCNodes have running actions, revert to normal framerate. Particle system: as long as there exist some particle systems that are emitting particles, revert to normal framerate. Basically I need to be able to detect if there are actions that are still running on any sprites/layers/scene, also if some particle systems are still emitting particles. I prefer to not having the checking done on individual objects, and I'd rather have a simple [SomeClass isActionRunning] . I imagine that I might be able to do this by checking the list of "scheduled" object but I'm not sure how. I'd appreciate if you could also suggest some other conditions where I need to revert to normal framerate.
