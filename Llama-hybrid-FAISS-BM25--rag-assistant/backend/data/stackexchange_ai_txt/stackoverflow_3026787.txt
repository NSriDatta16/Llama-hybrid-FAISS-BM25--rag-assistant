[site]: stackoverflow
[post_id]: 3026787
[parent_id]: 3016778
[tags]: 
First of all you post not full code, so I can not compile it. There are no code to open policyHandle with LsaOpenPolicy function. declaration of some structures like AUDIT_POLICY_INFORMATION , LSA_OBJECT_ATTRIBUTES and LSA_UNICODE_STRING also absent. Nevertheless I found at least one error in your code. Usage of the last parameter of AuditLookupCategoryGuidFromCategoryId seems me wrong. The function AuditLookupCategoryGuidFromCategoryId has prototype BOOLEAN WINAPI AuditLookupCategoryGuidFromCategoryId( __in POLICY_AUDIT_EVENT_TYPE AuditCategoryId, __out GUID *pAuditCategoryGuid ); which means, you have to allocate unmanaged memory to hold GUID and get pointer to AuditLookupCategoryGuidFromCategoryId . The memory will be filled by AuditLookupCategoryGuidFromCategoryId . So instead of GUID audCatGuid = new GUID(); if (!AuditLookupCategoryGuidFromCategoryId((POLICY_AUDIT_EVENT_TYPE)audCat, new IntPtr(&audCatGuid))) // ... if (!AuditEnumerateSubCategories(new IntPtr(&audCatGuid), true, out subCats, out nSubCats)) // ... seems me correct the following IntPtr pAuditCatGuid = Marshal.AllocHGlobal (Marshal.SizeOf(GUID)); if (!AuditLookupCategoryGuidFromCategoryId((POLICY_AUDIT_EVENT_TYPE)audCat, pAuditCatGuid)) // ... if (!AuditEnumerateSubCategories(pAuditCatGuid, true, out subCats, out nSubCats)) // ...
