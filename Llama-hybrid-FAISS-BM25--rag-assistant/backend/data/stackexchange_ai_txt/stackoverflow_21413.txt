[site]: stackoverflow
[post_id]: 21413
[parent_id]: 123
[tags]: 
This solution does not need any CSV or XML libraries and, I know, it does not handle any illegal characters and encoding issues, but you might be interested in it as well, provided your CSV input does not break the above mentioned rules. Attention: You should not use this code unless you know what you do or don't have the chance to use a further library (possible in some bureaucratic projects)... Use a StringBuffer for older Runtime Environments... So here we go: BufferedReader reader = new BufferedReader(new InputStreamReader( Csv2Xml.class.getResourceAsStream("test.csv"))); StringBuilder xml = new StringBuilder(); String lineBreak = System.getProperty("line.separator"); String line = null; List headers = new ArrayList (); boolean isHeader = true; int count = 0; int entryCount = 1; xml.append(" "); xml.append(lineBreak); while ((line = reader.readLine()) != null) { StringTokenizer tokenizer = new StringTokenizer(line, ","); if (isHeader) { isHeader = false; while (tokenizer.hasMoreTokens()) { headers.add(tokenizer.nextToken()); } } else { count = 0; xml.append("\t "); xml.append(lineBreak); while (tokenizer.hasMoreTokens()) { xml.append("\t\t "); xml.append(tokenizer.nextToken()); xml.append(" "); xml.append(lineBreak); count++; } xml.append("\t "); xml.append(lineBreak); entryCount++; } } xml.append(" "); System.out.println(xml.toString()); The input test.csv (stolen from another answer on this page): string,float1,float2,integer hello world,1.0,3.3,4 goodbye world,1e9,-3.3,45 hello again,-1,23.33,456 hello world 3,1.40,34.83,4999 hello 2 world,9981.05,43.33,444 The resulting output: hello world 1.0 3.3 4 goodbye world 1e9 -3.3 45 hello again -1 23.33 456 hello world 3 1.40 34.83 4999 hello 2 world 9981.05 43.33 444
