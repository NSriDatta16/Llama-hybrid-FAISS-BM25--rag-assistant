[site]: crossvalidated
[post_id]: 317578
[parent_id]: 317538
[tags]: 
An ARCH(1) model with a constant conditional mean is \begin{aligned} y_t &= \mu + u_t, \\ u_t &= \sigma_t \varepsilon_t, \\ \sigma_t^2 &= \omega + \alpha u_{t-1}^2, \\ \varepsilon_t &\sim i.i.d(0,1) \\ \end{aligned} where $d$ is some distribution, e.g. Normal. It gives you the conditional distribution of $y_t$ (the current value of $y$) conditioned on $y_{t-1}$ (the previous value of $y$): $$ y_t \sim d(\mu,\omega + \alpha u_{t-1}^2). $$ You can move one step ahead in time to get the conditional distribution of $y_{t+1}$ (the next period's value of $y$) based on $y_t$ (the current value of $y$): $$ y_{t+1} \sim d(\mu,\omega + \alpha u_t^2). $$ From this you can tell, for example, that an optimal point forecast of $y_{t+1}$ under square loss is $\hat y_{t+1} = \hat\mu$ where $\hat\mu$ is an estimate of $\mu$. Also, the forecast of the conditional variance $\sigma_{t+1}^2$ is $\hat\sigma_{t+1}^2 = \hat\omega + \hat\alpha\hat\sigma_t^2$ where again $\hat\omega$, $\hat\alpha$ and $\hat\sigma_t^2$ denote estimates of $\omega$, $\alpha$ and $\sigma_t^2$, respectively. In R, you can use the "rugarch" package for forecasting with an ARCH(1) model. You (1) specify the model, (2) fit it to the data, and (3) forecast as follows: library(rugarch) # load the "rugarch" package set.seed(1); x = rnorm(1000) # generate an example time series spec = ugarchspec(variance.model = list(garchOrder = c(0,1))) # specify the model fit = ugarchfit(data = x, spec = spec) # fit the model fcst = ugarchforecast(fitORspec = fit, n.ahead = 1) # generate the forecast print(fcst) # forecast object print(fcst@forecast$seriesFor) # point forecast print(fcst@forecast$sigmaFor) # forecast of the conditional variance
