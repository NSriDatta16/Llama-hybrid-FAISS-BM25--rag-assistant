[site]: stackoverflow
[post_id]: 4607272
[parent_id]: 4607036
[tags]: 
There are several additional advantages: Logical grouping of several actions in a single controller class (though it's also possible with MultiActionController , but not so flexible) Simplification of unit testing, since in most cases you can pass simple arguments and don't need to prepare mock HttpServletRequest / HttpServletResponse s. Additional flexibility of mapping with @RequestParam , @PathVariable , etc (though it could be implemented in traditional controllers, but I think not so elegant as with annotations due to static nature of traditional controllers). Also I can't agree with the first disadvantage - in my opinion annotations introduce much less coupling than inheritance. For example, you can even use compiled annotated controller as a regular class without having Spring in the classpath (though compilation of annotated source code still requires annotations in the build path).
