[site]: datascience
[post_id]: 124479
[parent_id]: 
[tags]: 
Can lag features be applied into test data without label?

can lag features be applied into test data without label? I've been wondering. I tried to build random forest model using dataset: training data (with label Y) and testing data (without label Y). The dataset contains datetime column. Label Y is numeric contains revenue value for each column date, district, type. I try to do feature engineering adding lag feature using PyTimeTK as below: import pandas as pd import numpy as np import pytimetk as tk df_dates = df.augment_timeseries_signature(date_column = 'date') df_test_dates = df_test.augment_timeseries_signature(date_column = 'date') df_with_lags = df_dates.augment_lags( date_column = 'date', value_column = 'Y', lags = [5,6,7,8,9] ) lag_columns = [col for col in df_with_lags.columns if 'lag' in col] I have completed the training of a Random Forest Regressor model. However, I am currently facing a challenge in applying lag features to the test data as it lacks corresponding 'Y' labels. Additionally, attempting to predict the test data without the inclusion of lag features results in an error due to a mismatch in feature dimensions. FEATURES = [ 'district' , 'type' , 'date_year' , 'date_month' , 'date_yweek' , 'date_mweek' , 'Y_lag_5' , 'Y_lag_6' , 'Y_lag_7' , 'Y_lag_8' ] TARGET = 'Y' X_train = train[FEATURES] y_train = train[TARGET] from sklearn.ensemble import RandomForestRegressor rf = RandomForestRegressor(random_state=123) rf.fit(X_train, y_train) df_test['Y'] = rf.predict(X_test)
