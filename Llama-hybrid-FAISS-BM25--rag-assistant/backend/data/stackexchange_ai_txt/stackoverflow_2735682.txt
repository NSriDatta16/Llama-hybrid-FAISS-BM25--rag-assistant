[site]: stackoverflow
[post_id]: 2735682
[parent_id]: 2732343
[tags]: 
There is an example with Qt Assistant called the "Drag and Drop Robot Example" which appears to use the QDrag method, I don't know if you've had a look at that already. edit : Just a quick observation, you appear to be creating a new DragItem in your DropEvent, instead of using the mimeData() of the event itself, and since your item draws itself at 0,0, that might explain why you have a new one appearing at that position regardless of where you drop your DragItem. When I wrote a graphics dragging thing similar to this, I went about it a slightly different way. Maybe it will help you: Instead of using the QDrag stuff, I used only the mousePressEvent, mouseReleaseEvent, and mouseMoveEvent functions of QGraphicsItem. The mouse press/release set a flag indicating the drag state, and move followed a process of call prepareGeometryChange(); update the bounds of the QGraphicsItem (my boundingRect() function returns these bounds. All my graphics item bounds are in QGraphicsScene space) call update(); Then in my paint() function I draw a shape using the boundingRect(). Sorry I don't have a code sample to share, I'll knock one up if I get time.
