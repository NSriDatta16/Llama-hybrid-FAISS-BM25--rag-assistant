[site]: stackoverflow
[post_id]: 3200597
[parent_id]: 
[tags]: 
(kind of) rotating and slicing elements of a container in C++

I have a std::vector that holds a Point struct (x,y,z and some other non-pointer types). These points are control points for drawing a bspline curve. I'm not having trouble drawing the curve, but complications arise when I have to close the curve, which involves adding control points (alredy existing inside the container) in certain order. For example, if I have 5 control points A B C D E I would have to get 5 sequences like this: A B C D //curve is drawn from B to C B C D E //curve is drawn from C to D C D E A //curve is drawn from D to E D E A B //curve is drawn from E to A E A B C //curve is drawn from A to B Initially, I went with std::rotate , but then realized it wasn't what I was looking for. I'm having trouble implementing this. Best I got is a non-working version in C++ (the reason of this failing is not the question, here's a snippet). static char letters = 'A'; typedef struct Point{ float x,y,z; char name; Point(float x,float y,float z=0):name(letters++){} }Point; typedef std::vector lpoints; void rotate(lpoints& points) { for (unsigned int i =0;i Is there a way to do this? I know I can implement it with many nested for loops, but i'm trying to avoid that, looking for something more elegant (if the word fits). Thanks in advance.
