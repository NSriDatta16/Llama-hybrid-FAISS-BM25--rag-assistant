[site]: crossvalidated
[post_id]: 118123
[parent_id]: 117172
[tags]: 
If you want to be able to discover easily human-quantifiable "rules" in your data which predict which features are associated with high vs. low prices, then it sounds like what you want to do is run a decision tree -based statistical classifier on your data set, treating the "trip-price" field as the class variable. A good example of a tree-based classifier is the C4.5 algorithm or its successor, C5.0. The C5.0 algorithm is implemented in the R package C50 , and a slightly modified version of C4.5 is also implemented in Weka as J48 (confusingly named, I know, but if you dig around a little bit you'll discover that it is indeed derived essentially from C4.5). A short video course covering use of the GUI version of Weka can be found here , and in particular, a 10 minute video (section 3.4 in the course syllabus) which introduces J48 specifically can be found here . There is also the CART (Classification And Regression Tree) algorithm as well; a version of that is implemented in the Python scikit-learn package. Lastly, it's worth noting that tree-based classifiers are only needed if you actually want to have human-understandable predictive rules that you easily write down on a sheet of paper. If you just want a computer to be able to accurately predict class outcomes (i.e., was it an expensive vacation or a cheap one) based on trip features (air conditioning, brand of hotel, country location, etc.) and you don't really care why the computer made a particular prediction, there are many other types of supervised machine learning algorithms that can help you as well.
