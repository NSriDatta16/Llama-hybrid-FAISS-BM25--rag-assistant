[site]: stackoverflow
[post_id]: 381896
[parent_id]: 349597
[tags]: 
I'm not sure this is helpful for embedding Excel, but assuming that the Excel engine is at the core of the embedded controls, you can look here for an alphabetized reference of the objects available for Excel 2003. And here for the root of the Excel VBA reference, which includes a section "Concepts" that discusses the major objects, like workbooks and worksheets, cells and ranges, etc. You'll have to set a reference to the Excel objects in your project before you can create any of these objects. Under Project/References, you'll find something like "Microsoft Excel 9.0 Object Library." (I have Office 2000, thus the 9.0. Based on the links above, I imagine that for Excel 2003 you'll see Excel 11.) In your code, do something like this: ' Start a new workbook in Excel ' Dim oExcel As Excel.Application Dim oBook As Excel.Workbook ' Launch an instance of Microsoft Excel ' Set oExcel = new Excel.Application Set oBook = oExcel.Workbooks.Add Then proceed to code against the application, workbooks, etc. The above code will create an instance of Excel that's not embedded, but in it's own window. One thing to be aware of is that by default, that Excel instance will not be visible. You have to set the Visible property to True before you can see it. Hope this helps.
