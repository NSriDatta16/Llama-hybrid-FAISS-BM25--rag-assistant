[site]: stackoverflow
[post_id]: 2379973
[parent_id]: 
[tags]: 
T-SQL: Parsing String with Multiple delimiters

I need to be able to query a SharePoint database for survey results. The type of data I'm having problems with is a "Rating Scale" value. So the data in each table column represents a whole group of sub-questions and their answers. So the following is an example of what is found in ONE column: 1. Our function has defined how Availability is measured the hardware/software in Production;#3#2. Availability threshold levels exist for our function (e.g., SLA's);#3#3. Our function follows a defined process when there are threshold breaches;#4#4. Our function collects and maintains Availability data;#4#5. Comparative analysis helps identify trending with the Availability data;#4#6. Operating Level Agreements (OLA's) guide our interaction with other internal teams;#4# The Questions end with a semi-colon and their answers are inside the two # signs. So the answer to the first question is 3. When I export the results of the survey it formats each question as a column header and the answer as the value in the cell below, which is ideal to get an average for each question, and would love to be able to replicate that from a SQL query. But if I could get query results into two columns (Question, Answer)...I'd be thrilled with that. Any help is appreciated. Thanks very much Hank Stallings *****ADDENDUM:** This was my version of astander's solution...THANKS again! DECLARE @Table TABLE( QuestionSource VARCHAR(50), QA VARCHAR(5000) ) DECLARE @ReturnTable TABLE( QuestionSource VARCHAR(50), Question VARCHAR(5000), Answer int ) DECLARE @XmlField XML, @QuestionSource VARCHAR(50) INSERT INTO @Table SELECT 'Availability' AS QuestionSource,CONVERT(varchar(5000),ntext1) FROM UserData WHERE tp_ContentType = 'My Survey' INSERT INTO @Table SELECT 'Capacity' AS QuestionSource,CONVERT(varchar(5000),ntext2) FROM UserData WHERE tp_ContentType = 'My Survey' --SELECT * FROM @Table DECLARE Cur CURSOR FOR SELECT QuestionSource, CAST(Val AS XML) XmlVal FROM ( SELECT QuestionSource, LEFT(Vals, LEN(Vals) - LEN(' ')) Val FROM ( SELECT QuestionSource, ' ' + REPLACE(REPLACE(REPLACE(QA,'&','&amp;'), ';#',' '), '#', ' ') Vals FROM @Table ) sub ) sub OPEN Cur FETCH NEXT FROM Cur INTO @QuestionSource,@XmlField WHILE @@FETCH_STATUS = 0 BEGIN INSERT INTO @ReturnTable SELECT @QuestionSource, T.split.query('q').value('.', 'nvarchar(max)') question, T.split.query('a').value('.', 'nvarchar(max)') answer FROM @XmlField.nodes('/option') T(split) FETCH NEXT FROM Cur INTO @QuestionSource,@XmlField END CLOSE Cur DEALLOCATE Cur SELECT * FROM @ReturnTable
