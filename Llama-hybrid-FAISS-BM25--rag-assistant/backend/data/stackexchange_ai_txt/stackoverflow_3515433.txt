[site]: stackoverflow
[post_id]: 3515433
[parent_id]: 3345611
[tags]: 
Honestly, I'm a self-taught C++ programmer originally (with my primary reference being the Source game engine's public-domain code from Half-Life 2), and I learned much of what got me through Data Structures by drawing up diagrams and reading comments and code. Maybe I'm just a prodigy or something, because it always seemed to come relatively easy to me, but I learned during a LOT of time spent reading, thinking, and analyzing what the particular uses of each structure could be, and why each structure exists as something separate from the other data structures in the first place. Having written some serious code projects (ie. Connect Four and a side-scrolling space shooter, as well as 3D isometric plotters and 2D drawing programs) on the severely-limited TI-83 Plus calculator in high school (p.s. Using TI-Basic, not Assembly), I realized what sorts of operations were more efficient, and I realized how limited the built-in list system (a basic Vector) was for data storage in certain situations. I also figured out how Big-O worked when I tried timing a program's runtime with different-size lists of input. Practice, think about things as you are doing them, and try to figure out how and why they work, and never be afraid to get down and dirty with testing. After all, what is science without experimentation?
