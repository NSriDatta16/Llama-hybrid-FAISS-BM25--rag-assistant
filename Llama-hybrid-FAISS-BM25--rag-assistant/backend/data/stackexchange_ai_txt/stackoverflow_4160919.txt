[site]: stackoverflow
[post_id]: 4160919
[parent_id]: 4160732
[tags]: 
The history seem to look like this: Google needs a storage layer for their inverted search index. They figure a traditional RDBMS is not going to cut it. So they implement a NoSQL data store, BigTable on top of their GFS file system. The major part is that thousands of cheap commodity hardware machines provides the speed and the redundancy. Everyone else realizes what Google just did. Brewers CAP theorem is proven. All RDBMS systems of use are CA systems. People begin playing with CP and AP systems as well. K/V stores are vastly simpler, so they are the primary vehicle for the research. Software-as-a-service systems in general do not provide an SQL-like store. Hence, people get more interested in the NoSQL type stores. I think much of the take-off can be related to this history. Scaling Google took some new ideas at Google and everyone else follows suit because this is the only solution they know to the scaling problem right now. Hence, you are willing to rework everything around the distributed database idea of Google because it is the only way to scale beyond a certain size. C - Consistency A - Availability P - Partition tolerance K/V - Key/Value
