[site]: stackoverflow
[post_id]: 4206971
[parent_id]: 4206765
[tags]: 
There are differing views on the principles to use when deciding whether to use an attribute or an element for a piece of data. For example, see this old article from IBM , which lays out a bunch of proposed principles, and then decorates the whole article with a giant caveat that says "there are lots of exceptions and these principles are not intended to be prescriptive" (essentially). I think the main thing is to be internally consistent. Be consistent within your own world, however large that is. Your "world" could be a single schema - in which you should be consistent in your approach. Every element within that schema should be philosophically consistent. Or your world could be a set of related schema, or it could be all XML documents emitted by a particular company, or even all XML schema used by an industry or technology group. Now, regarding the sample you offered: Tove Jani Reminder Don't forget me this weekend! Remember what happenned last time you forgot!!! ...this seems internally inconsistent because only one piece of data is factored out, and there doesn't seem to be a good reason to do so. Better if all the items were attributes or all were elements. One exception: the longish body element should probably always be an element. This feels right to me: Don't forget me this weekend! Remember what happenned last time you forgot!!! Putting the body into an attribute hurts readability, and that recommends putting the body into an element. Keep in mind that whitespace can be collapsed in attribute values (source: that IBM article I cited); the hard rule that arises from that, is that if whitespace is meaningful, then you should use an element. Now, if the heading in that fragment of xml is something like an email subject, I'd probably factor that out into an element as well, since subjects can be lengthy. As for your question regarding the month/day/year of the date, yes, factor those things out if you need easy access to these individual data in tools that process the XML. It's easier to search for all notes from before 2009 with an xpath statement that does not have to do string parsing and then string-to-number conversion, if you see what I mean. On the other hand if your use of the XML does not require you to do selects or searches on those individual data (month, day, year), then keep them consolidated into a human-readable form as in your original. tl;dr: There are few firm rules. As long as your use of elements and attributes is consistent, it will be easy for other developers and tools to understand and use.
