[site]: stackoverflow
[post_id]: 2562685
[parent_id]: 2561690
[tags]: 
The example code below shows how to drag a chess piece around a chess board. It uses JLayeredPane instead of a glass pane, but I'm sure the concepts would be the same. That is: a) add the glass pane to the root pane b) make the glass pane visible c) add the component to the glass pane making sure the bounds are valid d) use setLocation() to animate the dragging of the component Edit: added code to fix SSCCE JLabel l = new JLabel(); l.setText("Hello"); l.setBorder(new LineBorder(Color.BLACK, 1)); // l.setPreferredSize(l.getSize()); // l.setBounds(10, 10, 50, 20); ((JPanel)mf.getGlassPane()).add(l); mf.setVisible(true); mf.getGlassPane().setVisible(true); When using layout managers you never use the setSize() or setBounds() methods. In your case you just set the preferred size to (0, 0) since this is the default size of all components. It works when you add the label to the frame because the default layout manger for the content pane of the frame is a border layout, therefore the preferred size of the label is ignored and the label is made the size of the frame. However, by default a JPanel uses a FlowLayout which does respect the preferred size of the component. Since the preferred size is 0, there is nothing to paint. Also, the glass pane needs to made visible in order for it to be painted. I suggest you read the Swing tutorial . There are section on how layout managers work and on how glass panes work and each section has working examples. Edit: Example code added below: import java.awt.*; import java.awt.event.*; import java.util.*; import javax.swing.*; public class ChessBoard extends JFrame implements MouseListener, MouseMotionListener { JLayeredPane layeredPane; JPanel chessBoard; JLabel chessPiece; int xAdjustment; int yAdjustment; public ChessBoard() { Dimension boardSize = new Dimension(600, 600); // Use a Layered Pane for this this application layeredPane = new JLayeredPane(); layeredPane.setPreferredSize( boardSize ); layeredPane.addMouseListener( this ); layeredPane.addMouseMotionListener( this ); getContentPane().add(layeredPane); // Add a chess board to the Layered Pane chessBoard = new JPanel(); chessBoard.setLayout( new GridLayout(8, 8) ); chessBoard.setPreferredSize( boardSize ); chessBoard.setBounds(0, 0, boardSize.width, boardSize.height); layeredPane.add(chessBoard, JLayeredPane.DEFAULT_LAYER); // Build the Chess Board squares for (int i = 0; i
