[site]: datascience
[post_id]: 104226
[parent_id]: 104211
[tags]: 
The approach you're trying to describe is being able to fill the gaps in your data. Filling N/A in the data Since you're working in Python, I'm guessing your data is stored as a Dataframe. Pandas has a specific function for this: DataFrame.fillna() . This lets you fill any NaN values with multiple methods. There are some similar examples in this answer . Filling N/A and changing the following item From my knowledge, Dataframes don't yet have any functionality to do this. The best option I can think of is to iterate through the series. You could either convert to a list with .tolist() then use a for loop, or use Series.iteritems() In your loop, you'll need a condition to check if NaN and if so, take the average of the current and next item if the current item is NaN . You may also need to have a condition for the edge case if the final value in the list is NaN
