[site]: stackoverflow
[post_id]: 381005
[parent_id]: 339202
[tags]: 
There was perfect solution - pecl extension called "pwee" - it allowed user define his/her own extern superglobal constants / variable using XML file. Thus you were able to use absolute path as I recomend in such form: require_once APP_ROOT."/path/to/your/script.php"; The advantage of such solution was: accessible from everywhere no server load - everything in server memory The XML file contained link to pwee project You should distinguish these cases of inclusion: standalone library - all includes should be relative - to let user integrate it to his/her project easily executable scripts in your public directory - contain absolute includes to project files and to standalone libraries public files (which has relative includes inside - transparent to user). Using the APP_ROOT constant is elegant way. a,link,script, form html elemets and header forwards should use relative path when diving into tree hierarchy and absolute path when using common files from higher levels of hierarchy In case of relative path use this form: require_once "./relative/path/to/script.php"; Why do I use past tense? Because the project is not more supported - works only with Php4. If anyone knows similar solution with support, please let me know.
