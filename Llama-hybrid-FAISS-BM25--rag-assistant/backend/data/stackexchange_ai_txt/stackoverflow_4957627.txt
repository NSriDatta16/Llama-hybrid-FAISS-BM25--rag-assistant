[site]: stackoverflow
[post_id]: 4957627
[parent_id]: 4946252
[tags]: 
Summarizing all of the answers, I think there are four alternatives for the lookup table: Alternative 1: • Description (primary key, a longer varchar2 column) Alternative 2: • Code (primary key, a short varchar2 column) • Description (not null, a longer varchar2 column) Alternative 3: • Id (a meaningless primary key, an integer value derived from a sequence) • Description (not null, a longer varchar2 column) Alternative 4: • Id (a meaningless primary key, an integer value derived from a sequence) • Code (unique key, a short varchar2 column) • Description (not null, a longer varchar2 column) The primary key column will be in the main table with a foreign key constraint on top. Some characteristics per alternative: Alternative 1: • No join is required when querying the main table • Clear meaning when doing ad-hoc queries on main table • Requires more storage for main table • Index on main table will be much bigger than in other alternatives • Updating a Description value means maintenance trouble and possibly application downtime. Alternative 2: • Join is required when you want to retrieve the description value • Join in not required if you want to filter on certain lookup values: you can use the code value for that. • Pretty clear meaning when doing ad-hoc queries on main table • Minimal additional storage requirements for main table • Index on main table will be small. • Updating a Description value is easy, however code is usually an abbreviation from the description. When updating a Description value, the code can become confusing. Alternative 3: • Join is required when you want to retrieve the description value • When filtering on certain lookup values, you'd have to use the Description values in your queries as the Id's are meaningless. • Meaning is not clear when doing ad-hoc queries on main table • Minimal additional storage requirements for main table • Index on main table will be small. • Updating a Description value is easy and doesn't cause confusion as with Code values Alternative 4: • Join is required when you want to retrieve the description value • Join is required when filtering on certain lookup values, you would use the Code value in the lookup table. • Meaning is not clear when doing ad-hoc queries on main table • Minimal additional storage requirements for main table • Index on main table will be small • Updating a Description value is easy and you can also very easily update the Code value as well to make it resemble the Description value. You may have to revisit some of your code when doing this, though. Personal opinion: I would look at how I plan to use the main table and the lookup table. Which queries will be important and have to run efficiently? Will the values ever change? My personal choice would be alternative 2 or 4. I'd use alternative 2 if I was absolutely sure that the code value can never change. And this is rare. Country codes change, social security numbers change. Currency codes change, etcetera. So, most of the time, I'd choose alternative 4. I'd not be so concerned for an extra join, especially because the lookup table is a small table. But: choose an alternative that suits your requirements. Please feel free to edit the text when you know some more characteristics of an alternative. Regards, Rob.
