[site]: stackoverflow
[post_id]: 4949240
[parent_id]: 4949096
[tags]: 
It's a total hack and I'm sure there is a more elegant way to handle it but you could throw a hidden field in there and set up your form elements with an onchange script to update the value of the hidden field. Then just check for the value of the hidden field. Hopefully someone has a better way to do it than that but if all else fails. If you add a class to the hidden field of "hiddenIndicator" and to your form elements of "causesChanged" then the following Jquery should do what you want: $(document).ready(function() { $('input.causesChanged').change(function() { $(this) .closest('tr') // get the parent row .find("input.hiddenIndicator") // find children that match the selector .val('1'); //the value that indicates a change occured }); }) I haven't tested that code but I used something similar in a project once.
