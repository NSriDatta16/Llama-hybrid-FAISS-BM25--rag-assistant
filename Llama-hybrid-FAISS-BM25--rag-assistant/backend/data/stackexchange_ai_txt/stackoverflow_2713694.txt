[site]: stackoverflow
[post_id]: 2713694
[parent_id]: 2713547
[tags]: 
You can do this behavior but there a lot of work. You need next: 1. Create UIControl subclass that will be your buttons. 2. Override all touches* methods there. 3. Implement there support of standard uicontrol behavior + moving behavior. #pragma mark - #pragma mark Touches delegate methods - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { UITouch *touch = [touches anyObject]; [self performSelector:@selector(delayedTouchBeging:) withObject:touch afterDelay:0.15]; [super touchesBegan:touches withEvent:event]; } - (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event { UITouch *touch = [touches anyObject]; if ( dragging ) { // move your view in new position here } else { [super touchesMoved:touches withEvent:event]; } } - (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event { if ( dragging ) { // Do other stuff if you need } else { [super touchesEnded:touches withEvent:event]; } dragging = NO; [NSObject cancelPreviousPerformRequestsWithTarget:self]; } - (void)touchesCancelled:(NSSet *)touches withEvent:(UIEvent *)event { [self touchesEnded:touches withEvent:event]; } - (void) delayedTouchBeging:(UITouch*) touch { dragging = YES; [self cancelTrackingWithEvent:nil]; // Do here stuff about begin moving (animation, etc) }
