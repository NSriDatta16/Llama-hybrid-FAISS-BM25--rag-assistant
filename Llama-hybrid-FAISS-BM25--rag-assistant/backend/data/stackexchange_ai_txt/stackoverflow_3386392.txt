[site]: stackoverflow
[post_id]: 3386392
[parent_id]: 
[tags]: 
WPF Not sending MouseMove events after CaptureMouse();

I'm trying to have a WPF canvas with rounded rectangles on that I can drag round using the mouse. However once I try and capture the mouse on the canvas I don't get the move events any more. This is a "mycanvas" user control and the rectangles are "foo" user controls. The XAML for these (minus the preamble) are: mycanvas.xaml: foo.xaml: And then the handlers are: mycanvas.xaml.cs: private void CanvasMouseDown(object sender, MouseButtonEventArgs e) { if (e.Source is Foo) { m_moving = e.Source as Foo; CaptureMouse(); e.Handled = true; } } private void CanvasMouseMove(object sender, MouseEventArgs e) { if (m_moving != null) { Canvas.SetLeft(m_moving, e.GetPosition(this).X); Canvas.SetTop(m_moving, e.GetPosition(this).Y); } } private void CanvasMouseUp(object sender, MouseButtonEventArgs e) { ReleaseMouseCapture(); m_moving = null; } The MouseDown fires and so the CaptureMouse gets called (and works because I can no longer close the app or click anything else in it!) but the MouseMove never gets called anymore - so where do the MouseMove events get sent now??? If I alt-tab to another application and then go back now suddendly the MouseMove is called and the Foo moves with the mouse.
