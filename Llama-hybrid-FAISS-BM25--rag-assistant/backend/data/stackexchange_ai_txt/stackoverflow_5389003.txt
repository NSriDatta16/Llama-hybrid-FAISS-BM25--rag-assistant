[site]: stackoverflow
[post_id]: 5389003
[parent_id]: 5388891
[tags]: 
I don't really understand what you try to achieve by adding two hues together. Hue is an angle giving the "tint" of the color you are representing. If you think in degrees, the hue will be in the [0, 360[ range. Also, values of 45 and 405 will be representing the same hue. You have to take this into account when you want to manipulate hues. That is, is you want to average two values, for instance 355 and 5, the correct result could be 0 (draw a circle and take the smallest half angle between those two values) or 180 (the largest half angle). How I did it on Android (which does not have the Color manipulation utilities) is to create my own color class that stores both representations of a color (rgb and hsv). Then I have methods that allow to set RGB or set HSV. Adding in the same color space is trivial. Then each time these methods are called, I respectively call an updateHSV or updateRGB method that computes the color components from the new values. class Color { float[] hsv; float[] rgb; public void setRgb(float[] rgb) { System.arraycopy(rgb, 0, this.rgb, 0, 3); computeHsvFromRgb(); } public void setHsv(float[] hsv) { System.arraycopy(hsv, 0, this.hsv, 0, 3); computeRgbFromHsv(); } // ... } For color convertion sample code: http://www.koders.com/java/fid698452C6AA108615D4A611B52D27A9F5819B39F5.aspx?s=stopwatch http://www.f4.fhtw-berlin.de/~barthel/ImageJ/ColorInspector//HTMLHelp/farbraumJava.htm
