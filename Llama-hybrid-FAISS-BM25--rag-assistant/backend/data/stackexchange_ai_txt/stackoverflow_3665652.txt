[site]: stackoverflow
[post_id]: 3665652
[parent_id]: 3660443
[tags]: 
As @www.Flextras.com pointed out - you can write a class to do this. I'd encourage you to consider an alternative approach however, as looping through the children looking for a specific property is quite slow. That said - it does make for an interesting coding challenge. Here's a class & example that should acheive what you're after. package com.mangofactory.util { import flash.display.DisplayObject; import mx.core.UIComponent; /** * Utility class to set a given property of all matching children on a target. * Named to act as an operator, rather than a class (hence no captial letter) * * eg., on(someTarget).of(SomeClass).someProperty = someValue; * */ public class on { private var root:UIComponent; private var requiredPropertyName:String; private var requiredType:Class; public function on(root:UIComponent) { this.root = root; } /** * Returns a list of targets which match the defined criteria. * Note - the root component is also evaluated * */ private function get targets():void { var result:Array = []; if (matches(root)) { result.push(root); } for (var i:int = 0; i And an example: Note - I haven't tested this, but in theory it should work.
