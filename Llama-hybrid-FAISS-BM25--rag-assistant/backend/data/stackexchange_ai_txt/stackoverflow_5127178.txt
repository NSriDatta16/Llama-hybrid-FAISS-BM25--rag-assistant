[site]: stackoverflow
[post_id]: 5127178
[parent_id]: 
[tags]: 
.gitignore files added inside Git submodules

I recently reorganized my dotfiles to live inside a Git repository at ~/Dropbox/dotfiles and I'm using pathogen to bundle all Vim addons inside ~/Dropbox/dotfiles/home/.vim/bundle . These addons were added as Git submodules. Now the problem is, when I run Vim, it automatically generates the documentation for all addons and puts them inside each submodule directory. This adds untracked content to the submodules, which I'd like to avoid. ruby-1.8.7-p330@gs ~/Dropbox/dotfiles ‹master*› $ git st # On branch master # Changed but not updated: # (use "git add ..." to update what will be committed) # (use "git checkout -- ..." to discard changes in working directory) # (commit or discard the untracked or modified content in submodules) # # modified: home/.vim/bundle/fuzzyfinder (untracked content) # modified: home/.vim/bundle/l9 (untracked content) # modified: home/.vim/bundle/matchit (untracked content) # modified: home/.vim/bundle/ruby (untracked content) # ... no changes added to commit (use "git add" and/or "git commit -a") I tried to add a .gitignore file to the root of my Git repository to ignore all doc folders inside submodules, but this doesn't seem to work: home/.vim/bundle/**/doc My question: is there a way to ignore files and folders inside Git submodules or maybe configure Vim to create the documentation in a folder outside the Git repository? EDIT: as Randy Morris pointed out, this might be a duplicate of Generating tags to different location by pathogen
