[site]: crossvalidated
[post_id]: 642125
[parent_id]: 
[tags]: 
Violation of assumptions in Generalized additive models (GAMs)

I wanted to forecast Dengue count for the given weather data covariates: MeanT Mean temperature MeanRH Mean relative humidity MeanSM Mean soil moisture MeanVP Mean vapor pressure MeanWS Mean wind speed MeanWG Mean wind gust DI Dengue incidence I tried using machine learning and stat models such as LSTM, 1D CNN, Zero-Inflated Negative Binomial, and Hurdle, but they did not work. Now, I am attempting to use GAM and MARS, but it seems like these two violate all the assumptions, such as normality and constant variance. However, they did a pretty good job in forecasting on the test data. In fact, the MARS model had lower RMSE and MAE scores. There is another issue here: both models suffer from overfitting. I am not sure how to address these issues. My goal is to find important variables and make forecast. I appreciate your suggestions! # List of packages packages % mutate( Date = as.Date(Date), YearDay = as.numeric(format(Date, "%j")), Year = as.numeric(format(Date, "%Y")), # Ensure 'season' is a factor with appropriate levels season = factor(season, levels = c("Summer", "Rainy season", "Autumn", "Late autumn", "Winter", "Spring")) ) # Splitting the data split_date % filter(Date % filter(Date >= split_date) # Fit models # Note: Ensure 's()' terms are appropriate and 'k' is not set too high for the number of unique observations gam_mod $Pred_GAM Pred_GAM $Pred_MARS Pred_MARS $Dhaka_DI, dengue_train$ Pred_GAM) test_metrics_gam $Dhaka_DI, dengue_test$ Pred_GAM) train_metrics_mars $Dhaka_DI, dengue_train$ Pred_MARS) test_metrics_mars $Dhaka_DI, dengue_test$ Pred_MARS) # Print metrics cat("Training Metrics (GAM):\n") print(train_metrics_gam) cat("\nTest Metrics (GAM):\n") print(test_metrics_gam) cat("\nTraining Metrics (MARS):\n") print(train_metrics_mars) cat("\nTest Metrics (MARS):\n") print(test_metrics_mars) # Visualization ggplot() + geom_line(data = dengue_train, aes(x = Date, y = Dhaka_DI, color = "Actual Train"), size = 1) + geom_line(data = dengue_train, aes(x = Date, y = Pred_GAM, color = "GAM Train"), size = 1, linetype = "dashed") + geom_line(data = dengue_train, aes(x = Date, y = Pred_MARS, color = "MARS Train"), size = 1, linetype = "dotted") + geom_line(data = dengue_test, aes(x = Date, y = Dhaka_DI, color = "Actual Test"), size = 1) + geom_line(data = dengue_test, aes(x = Date, y = Pred_GAM, color = "GAM Test"), size = 1, linetype = "dashed") + geom_line(data = dengue_test, aes(x = Date, y = Pred_MARS, color = "MARS Test"), size = 1, linetype = "dotted") + labs(title = "Dengue Forecast with GAM and MARS Models", x = "Date", y = "Dengue Count") + theme_minimal() + scale_color_manual(values = c("Actual Train" = "black", "GAM Train" = "blue", "MARS Train" = "green", "Actual Test" = "grey", "GAM Test" = "red", "MARS Test" = "orange")) + guides(color = guide_legend(title = "Legend")) summary(gam_mod) summary(mars_mod) plot(mars_mod) plot(gam_mod) gam.check(gam_mod)
