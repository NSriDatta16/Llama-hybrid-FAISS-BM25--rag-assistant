[site]: stackoverflow
[post_id]: 4642501
[parent_id]: 
[tags]: 
How to sort dictionaries by keys in Python

Can anyone tell me how I can sort this: {'a': [1, 2, 3], 'c': ['one', 'two'], 'b': ['blah', 'bhasdf', 'asdf'], 'd': ['asdf', 'wer', 'asdf', 'zxcv']} into {'a': [1, 2, 3], 'b': ['blah', 'bhasdf', 'asdf'], 'c': ['one', 'two'],'d': ['asdf', 'wer', 'asdf', 'zxcv']} ? Thanks! UPDATE 1, code sample: So I am doing linguistics. One article is broken down to words that are stored in a database and have all kinds of properties including para ID and sentence ID. The task: trying to rebuild the original text. Get 500 consecutive words from DB words = Words.objects.all()[wordId:wordId+500] # I first create paragraphs, through which I can loop later in my django template, # and in each para will be a list of words (also dictionaries). # So i am trying to get a dictionary with values that are lists of dictionaries. # 'pp' i make just for shorthanding a long-named variable. paras={} para_high = para_low = words[0].belongs_to_paragraph for w in words: last_word = w pp = w.belongs_to_paragraph if pp >para_high: para_high = pp if pp At this point, however, if I try to loop the dict and rebuild the text, some later id'd paragraphs come before previous ones, and that just doesn't do it. UPDATE 2, loop code: {% for k,v in wording.iteritems() %} {% if v[0] == 'break' %} {% else %} {% for word in v %}{% if word.special==0%} {% endif %} {{ word.word }} {% endfor %} {% endif %} {% endfor %}
