[site]: stackoverflow
[post_id]: 4623429
[parent_id]: 4623360
[tags]: 
As Mark wrote, there is a List constructor that accepts an enumerable, maybe you can leverage it the following (less coupled) way: public class Base { private readonly List _list; protected Base(IEnumerable values) { _list = new List (values); } } public class Derived : Base { public Derived() : base((UserActions[]) Enum.GetValues(typeof(UserActions)) { } }
