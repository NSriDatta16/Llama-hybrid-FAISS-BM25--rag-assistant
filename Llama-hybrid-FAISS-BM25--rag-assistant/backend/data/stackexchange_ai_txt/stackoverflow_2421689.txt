[site]: stackoverflow
[post_id]: 2421689
[parent_id]: 2421314
[tags]: 
There are a number of ways to address this depending on the details of your problem: If you have only 1 file, use @Bill K's solution of opening the file in the non-recursive routine before entering the recursive part is a good approach. If you have a small number of files to be opened, create yourself a "file manager" class with one method that will open a new file on demand and a second method that will close and delete all open files. Change the algorithm to open files using the file manager, and put a call to the "close all" method in a the finally clause of a try / finally surrounding the recursive algorithm. If you have an arbitrarily large number of files to be opened, you will have to redesign your algorithm so that can open an close them on demand in a sensible fashion. Or change the algorithm so that it doesn't need to use so many files. @Michael Borgwardt' solution (don't close the file at all, and mark it as delete-on-exit) is potentially fragile, particularly if the algorithm needs to open a large number of these files. Many OS platforms have per process limits on the number of open file handles.
