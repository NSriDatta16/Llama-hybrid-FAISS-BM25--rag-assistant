[site]: stackoverflow
[post_id]: 4312962
[parent_id]: 
[tags]: 
Actor model pattern : Limiting number of concurrent running actors

I've designed an application based on the actor model pattern utilizing the spring application context events as the way to pass messages . I have three layers : issues a requesttransactionevent issues a dotransactionevent issues a donetransactionevent layer 1 saves the request to the DB (for distributed arch. monitoring requirements) and issues the clientrequest layer 2 receives it and should check how many a dotransactionevents it has running (issued and not returned donetransaction) if it has a free slot it should issue a dotransaction and it is allso declared as the listener for the donetransactionevent . what is the most elegant way to implement layer 2 without a synchronous method or something of that sort , the trick here is that it needs to pull the requestparameters saved by layer1 to the db for issuing a dotransactionevent .
