[site]: stackoverflow
[post_id]: 5579074
[parent_id]: 5576276
[tags]: 
Additionally, there are a few options how to write this. Robert's version has the actual implementation in the additional member. If you place the implementation into the interface, you can avoid the casting. (Also note that you don't need class .. end keywords): type MyRunner() = member this.Run(a,b,c) = 1 interface IRunner with member this.Run(a,b,c) = this.Run(a,b,c) Slightly clearer way is to define the functionality as a local function and then just export it two times: type MyRunner() = // Implement functionality as loal members let run (a, b, c) = 1 // Export all functionality as interface & members member this.Run(a,b,c) = run (a, b, c) interface IRunner with member this.Run(a,b,c) = run (a, b, c)
