[site]: stackoverflow
[post_id]: 3382969
[parent_id]: 3382954
[tags]: 
You can take timestamp snapshots before and after, then repeat the experiments several times to average to results . There are also profilers that can do this for you. From "Java Platform Performance: Strategies and Tactics" book: With System.currentTimeMillis() class TimeTest1 { public static void main(String[] args) { long startTime = System.currentTimeMillis(); long total = 0; for (int i = 0; i With a StopWatch class You can use this StopWatch class, and call start() and stop before and after the method. class TimeTest2 { public static void main(String[] args) { Stopwatch timer = new Stopwatch().start(); long total = 0; for (int i = 0; i See here (archived). NetBeans Profiler: Application Performance Application Performance profiles method-level CPU performance (execution time) . You can choose to profile the entire application or a part of the application. See here .
