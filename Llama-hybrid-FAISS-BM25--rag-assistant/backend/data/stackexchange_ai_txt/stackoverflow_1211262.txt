[site]: stackoverflow
[post_id]: 1211262
[parent_id]: 1211164
[tags]: 
The main reason is memory fragmentation that do not allows runtime to release all virtual memory. You should consider using custom allocator for such big allocations. Check out boost::pool_alloc as a very good implementation of custom allocator. Using Pools gives you more control over how memory is used in your program. For example, you could have a situation where you want to allocate a bunch of small objects at one point, and then reach a point in your program where none of them are needed any more. Using pool interfaces, you can choose to run their destructors or just drop them off into oblivion; the pool interface will guarantee that there are no system memory leaks.
