[site]: stackoverflow
[post_id]: 4753906
[parent_id]: 4753801
[tags]: 
In mySQL, use FLOAT for storing these geo-coordinates. It simply makes no sense to store them as high-precision decimal. Keep in mind that 1/60th of a degree of latitude is a nautical mile, so a foot (~ 1/3 of a meter) is around 3 microdegrees. (3e-06) The epsilon for IEEE single precision floating point (the error) is about 6e-08 GPS and geocoding aren't that detailed, even when you're at 179.9996 degrees. If you're making highly detailed 200-scale topo maps or something like that, you probably already know you have to use a high-precision projection like universal transverse Mercator or Lambert or some such, because you're beyond the limit of approximating the earth as a sphere. But, if you're doing a store-finder type of app, you don't need, don't want, and can't get, that kind of precision. If you MUST use decimal in your Ruby program, convert to float before storing to mySQL. Here's Randall Munroe's explanation of geocoordinate precision.
