[site]: stackoverflow
[post_id]: 1742804
[parent_id]: 
[tags]: 
Populating a DataGridView on-the-fly (VB.NET)

I have a DataGridView which reads data from a custom (CSLA) list object. The dataset might have 100,000 records, and obviously I don't want to show them all at once because, for one, it would take ages to load. I think it would be nice if I could read the first (for instance) 20 records, and make it so upon scrolling to the end of the list, it reads the next 20 and adds them to the DataGridView. I have experimented with various ways of doing this, mostly using a custom class inheriting from DataGridView to capture scroll events and raising an event which adds new records. I will include the code below: Public Class TestDGV Inherits DataGridView Public Sub New() AddHandler Me.VerticalScrollBar.ValueChanged, AddressOf vsScrollEvent AddHandler Me.RowsAdded, AddressOf vsRowsAddedEvent End Sub Private Sub vsScrollEvent(ByVal sender As Object, _ ByVal e As EventArgs) With DirectCast(sender, ScrollBar) If .Value >= (.Maximum - .LargeChange) Then RaiseEvent ScrollToEnd() End If End With End Sub Private Sub vsRowsAddedEvent(ByVal sender As Object, ByVal e As EventArgs) ScrollbarOn() End Sub Public Event ScrollToEnd() Public Sub ScrollbarOff() Me.VerticalScrollBar.Enabled = False End Sub Public Sub ScrollbarOn() Me.VerticalScrollBar.Enabled = True End Sub End Class Though this (sort of) works, it can be buggy. The biggest problem was that if you used the mouse to scroll the DataGrid, it would get stuck in a loop as it process the scrollbar's ValueChanged event after the data was added. That's why I added ScrollbarOff and ScrollbarOn - I call them before and after getting new records, which disables the scrollbar temporarily. The problem with that is that after the scrollbar is re-enabled, it doesn't keep track of the current mouse state, so if you hold down the 'Down' button with the mouse (or click on part of the scrollbar) it stops scrolling after it has added the new records, and you have to click it again. Also, it doesn't seem a particularly elegant way of doing things. Has anyone ever done this before, and how did you achieve it? Cheers.
