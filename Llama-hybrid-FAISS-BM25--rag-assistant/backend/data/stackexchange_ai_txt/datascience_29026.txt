[site]: datascience
[post_id]: 29026
[parent_id]: 25405
[tags]: 
You would probably want to place more weight on more recent training observations, as the performance in the upcoming 1-2 months is likely to be more influenced by performance over the past (say) 6 months than performance 2-3 years ago. If you have a "date" feature, you could create a weight based on this. Then - if your random forest algorithm allows it - use the weight feature to influence the bootstrap sampling (observations with higher weights are more likely to be sampled). In R, the ranger random forest algorithm has a parameter called case.weights which does exactly this. Another way of capturing a time-sensitive trend would be to create features based on "rolling" time periods - e.g. fraction of deliveries which are late within past month / 3 months / 6 months, etc. I would suggest doing this overall with reference to the date of analysis (perhaps group by delivery company), and for the individual training instances with reference to the instance's original delivery date. Hope that helps.
