[site]: stackoverflow
[post_id]: 2284486
[parent_id]: 2284446
[tags]: 
This question is very closely related to: "How to organize large R programs?" You should consider creating an R package. You can use the package.skeleton function to start with given a set of R files. I also strongly recommend using roxygen to document the package at the beginning, because it's much more difficult to do it after the fact. Read "Writing R Extensions" . The online book "Statistics with R" has a section on this subject . Also take a look at Creating R Packages: A Tutorial by Friedrich Leisch. Lastly, if you're in NY, come to the upcoming NY use-R group meeting on "Authoring R Packages: a gentle introduction with examples" . Just to rehash some suggestions about good practices: A package allows you to use R CMD check which is very helpful at catching bugs; separately you can look at using the codetools package. A package also forces you to do a minimal amount of documentation, which leads to better practices in the long run. You should also consider doing unit testing (e.g. with RUnit ) if you want your code to be robust/maintainable. You should consider using a style guide (e.g. Google Style Guide ). Use a version control system from the beginning, and if you're going to make your code open source, then consider using github or r-forge. Edit: Regarding how do make incremental changes without rebuilding and installing the full package: I find the easiest thing to do is to make changes in your relevant R file and then use the source command to load those changes. Once you load your library into an R session, it will always be lower in the environment (and lower in priority) than the .GlobalEnv, so any changes that you source or load in directly will be used first (use the search command to see this). That way you can have your package underlying and you are overwriting changes as you're testing them in the environment. Alternatively, you can use an IDE like StatET or ESS. They make loading individual lines or functions out of an R package very easy. StatET is particularly well designed to handle managing packages in a directory-like structure.
