[site]: stackoverflow
[post_id]: 3804686
[parent_id]: 3804573
[tags]: 
While others have pointed out a problem with your data types, there's a few problems with the structure of the first function that immediately caught my eye. (BTW, your indentation is enraging.) Look at this stripped-down version: bool prime (int recievedvalue) { // ... bool ended = false; while (ended == false){ if (...){ break; // jumps _behind_ the loop return false; } // ... if (...) { ended=true; return false; // leaves function returning true } else if (...) { // ... } else if (...) { ended = true; return true; // leaves function returning false } else { // ... } } // behind the loop // leaves function returning random value } For one, every time you set the loop control variable ended , you leave the loop anyway using some other means, so this variable isn't needed. A while(true) or for(;;) would suffice. Also, that break jumps behind the loop's body, but there isn't a statement there, so the code leaves the function without explicitly returning anything! That's invoking so-called Undefined Behavior . (According to the C++ standard, your program is, from this point on, free to do whatever it pleases, including returning random values (most implementations will do that), formatting your HD, invoking nasty Nasal Demons on you, or returning exactly what you expected, but only on Sundays.) Finally, that break occurs right before a return false; which is therefor never reached. Actually your compiler should warn about that . If it doesn't, you're likely not compiling at the highest warning level. (You should turn this on. Always try to cleanly compile your code at the highest warning level. ) If it does, learn to pay attention to compiler warnings . They are a very important tool for diagnosing problems during compilation. (Remember: Errors diagnosed during compilation need no testing and never make it to the customer.)
