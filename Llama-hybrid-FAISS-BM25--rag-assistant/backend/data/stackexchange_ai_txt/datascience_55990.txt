[site]: datascience
[post_id]: 55990
[parent_id]: 
[tags]: 
Predicting a numeric variable from many numeric variables, how to choose a proper structure?

I need to estimate the value of a one numeric variable from the values 8 numeric variables y = f(x_1, ..., x_8) . I have an historical dataset where I can relate thousands of y values to the corresponding x , that will grow with time potentially to millions of records. Of course I don't know the relationship between x and y , for sure I know it is not linear with x (I'm guessing y depends quadratically on some x s) and in principles it could be that there is no analytical expression at all for this relationship. For these reasons I guessed to solve the problem with a Neural Network but I'm pretty new to this topic so I'm trying to figure out (with very little success) which model should be suitable for my problem, i.e. how many hidden layers to choose and how many neurons for each layer? Should I put ReLUs or other functions between layers? Of course I'm not interested just in solving this particular situation but in understanding the possible choice criterias! Also I would be interested in this: if I know that y probably depends on combinations or functions of the x_i such as y = f(x_1 - x_2, x_3**2, ..., x_8) should I put directly those guesses as inputs in the net or plain x_8 s? If it's useful in any way, I'm pretty familiar with python and I would like to implement this solution with PyTorch for my personal learning benefit. An hint for the Model class structure would be most appreciated. Thank you
