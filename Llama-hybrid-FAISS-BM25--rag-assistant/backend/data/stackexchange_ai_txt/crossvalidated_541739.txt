[site]: crossvalidated
[post_id]: 541739
[parent_id]: 
[tags]: 
How to fit a scalable Bayesian VAR model in Stan/JAGS

I am trying to fit a Bayesian vector auto regressive model but I am struggling with the computation. I tried both JAGS and Stan to fit the model but I have never been able to fit it successfully. It either takes days and I have to stop the run or it ends up not converging after if finished the run. Here is the model: library(rstan) rstan_options(auto_write = TRUE) options(mc.cores = parallel::detectCores()) #Simulating toy data: T T; //Time int K; //location matrix[T,K] y; //Target time series } parameters { vector[K] alpha; real sigma; matrix[K,K] theta; row_vector[K] mu_t1 ; } transformed parameters { matrix[T,K] epsilon; //Residuals matrix[T,K] mu; //Mean of the process mu[1,] = mu_t1 ; epsilon[1,] = y[1,] - mu[1,]; for (t in 2:T){ for(k in 1:K){ mu[t,k] = alpha[k] + theta[k,] * epsilon[t - 1,]'; epsilon[t,k] = y[t,k] - mu[t,k] ; } } } model{ //priors for(k in 1:K){ alpha[k] ~ normal(0,3); for(j in 1:K){ theta[k,j] ~ normal(0,1); } } mu_t1 ~ normal(7,1) ; sigma ~ normal(0, 5); for(k in 1:K){ for (t in 1:T) y[t,k] ~ normal(mu[t,k], sigma); } } " model_data I need to be able to fit the model to at least 8 time series (each having 400 observations). Does anyone know if this is possible to do or simply MCMC is not cable of handling such big/complex problems?
