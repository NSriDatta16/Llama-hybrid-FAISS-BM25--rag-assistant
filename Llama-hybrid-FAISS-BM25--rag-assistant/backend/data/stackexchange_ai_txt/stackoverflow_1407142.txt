[site]: stackoverflow
[post_id]: 1407142
[parent_id]: 1406995
[tags]: 
Another approach, this one not in-place, though I think it's time-complexity-wise asymptotically the same. typedef map > map_type; map_type m; BOOST_FOREACH(MYSTRUCT const &s, v) { m[s.a].push_back(s.b); } BOOST_FOREACH(map_type::reference p, m) { float x = accumulate(p.second.begin(), p.second.end(), 0.0f) / p.second.size(); p.second.assign(1, x); } BOOST_FOREACH(MYSTRUCT &s, v) { s.b = m[s.a].front(); } Again, though, it's just a slightly elegant way to code the brute-force solution, not a nice functional-style way.
