[site]: crossvalidated
[post_id]: 262337
[parent_id]: 262320
[tags]: 
You task is to recognize devices connected to a network and recognize these. I'm guessing the output needs to be one of a few hundred computers connected to your network, and this could increase as your network expands (or with time if you have many guests using it temporarily). As Gung has already mentioned in the comments, CNNs are neural networks which use an optimization method to train the network; while Genetic Algorithms are a class of optimization methods which can't "learn" anything. The paper you've referred to uses a CNN like series of transformations on the character image before it passes on the final vector to evaluate and optimize by the GA. The author could have used another optimizer just as well. A CNN with large no of layers might not be required for your objective unless you're already tried other methods such as Random Forests, Gradient Boosted Trees, SVMs, or simpler Neural Networks. I would suggest trying to train a simpler neural network for this purpose. Your first step would be to identify which features are you going to use to identify a computer uniquely - OS fingerprint, open ports, TCP/IP parameters, etc. Regarding your statement about a user being able to easily change a mac address: if users are so skilled (or intent in hiding their identity) that they are able to change an interface's MAC address, then they could easily spoof all the other parameters you may need to track them too - this makes choosing the right features much more difficult.
