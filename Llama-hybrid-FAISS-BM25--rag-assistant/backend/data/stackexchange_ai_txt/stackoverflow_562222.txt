[site]: stackoverflow
[post_id]: 562222
[parent_id]: 558719
[tags]: 
Here are the three functions I wrote and tested My answer /***************************************************/ /* RandomSite1 */ //****************/ // Returns an array of random rec site IDs or NULL /***************************************************/ function RandomSite1($intNumberofSites = 1) { $arrOutput = NULL; GetDatabaseConnection('dev'); $strSQL = "SELECT id FROM site_info WHERE major <> 0;"; if (is_numeric($intNumberofSites)) { $result = @mysql_query($strSQL); $i=-1; while ($row = mysql_fetch_array($result, MYSQL_NUM)) { $arrResult[$i++] = $row[0]; } //mix them up shuffle($arrResult); for ($i=0;$i JPunyon and many others /***************************************************/ /* RandomSite2 */ //****************/ // Returns an array of random rec site IDs or NULL /***************************************************/ function RandomSite2($intNumberofSites = 1) { $arrOutput = NULL; GetDatabaseConnection('dev'); $strSQL = "SELECT id FROM site_info WHERE major<>0 ORDER BY RAND() LIMIT ".$intNumberofSites.";"; if (is_numeric($intNumberofSites)) { $result = @mysql_query($strSQL); $i=0; while ($row = mysql_fetch_array($result, MYSQL_NUM)) { $arrOutput[$i++] = $row[0]; } } return $arrOutput; } OIS with a creative solution meeting the intend of my question. /***************************************************/ /* RandomSite3 */ //****************/ // Returns an array of random rec site IDs or NULL /***************************************************/ function RandomSite3($intNumberofSites = 1) { $arrOutput = NULL; GetDatabaseConnection('dev'); $strSQL = "SELECT id FROM site_info WHERE major<>0;"; if (is_numeric($intNumberofSites)) { $result = @mysql_query($strSQL); $i=-1; while ($row = mysql_fetch_array($result, MYSQL_NUM)) { $arrResult[$i++] = $row[0]; } $randKeys = array_rand($arrResult, $intNumberofSites); $arrOutput = array_intersect_key($randKeys, $arrResult); } return $arrOutput; } I did a simple loop of 10,000 iterations where I pulled 2 random sites. I closed and opened a new browser for each function, and cleared the cached between run. I ran the test 3 times to get a simple average. NOTE - The third solution failed at pulling less than 2 sites as the array_rand function has different output if it returns a set or single result. I got lazy and didn't fully implement the conditional to handle that case. 1 averaged: 12.38003755 seconds 2 averaged: 12.47702177 seconds 3 averaged: 12.7124153 seconds
