[site]: datascience
[post_id]: 13795
[parent_id]: 13658
[tags]: 
I think it depends on your requirements. Read/Write, Sparse/Nonsparse,...? There are many alternatives. Really common is SQLite, the " most widely deployed and used database engine ", a small relational database, these days used behind-the-scenes by many open source and commercial software packages with data storage needs (e.g., Adobe Lightroom, Mozilla Firefox). From the top of my head: If you work with R and python: The feather software was designed for fast data-frame serialization. It is currently available for R and python. Two R and Python authorities designed it in a collaboration. It's built on top of "Apache Arrow" and/or " protocol buffers ", it's fast for reading, but it's in alpha state. There are some serialization formats available from the XML community. You can store complex webs of objects in these formats. There is JSON and JSON-schema. If your tables are sparse, there is, for instance, "sparse ARFF" format (in little use, though). There must be others ( I have to look this up myself )
