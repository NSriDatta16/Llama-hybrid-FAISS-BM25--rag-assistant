[site]: stackoverflow
[post_id]: 178657
[parent_id]: 160298
[tags]: 
Thank you all for the helpful replies. I've been plugging away at this problem. A 'best' solution still eludes me, but I've some thoughts. I should mention that the statistics of the data-set I'm working with. In 75% of the cases there will be one Mod. In 24% of the cases, two. In 1% of the cases there will be zero, or three or more. For every Mod, there is at least one unique Car, though a Mod may be applied to numerous Cars. Having said that, I've considered (but not implemented) something like-so: class ModSet(models.Model): mods = models.ManyToManyField(Mod) and change cars to class Car(models.Model): modset = models.ForeignKey(ModSet) It's trivial to group by Car.modset: I can use regroup, as suggested by Javier, for example. It seems a simpler and reasonably elegant solution; thoughts would be much appreciated.
