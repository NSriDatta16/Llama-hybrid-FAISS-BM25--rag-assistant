[site]: stackoverflow
[post_id]: 958620
[parent_id]: 958531
[tags]: 
I've done some extensive work with CSS, crossing almost every browser under the sun, for small projects and large. While there is always asthetic appeal to any kind of code you may write, I think the greater concern is maintainability...and this goes for CSS as much as for any other kind of code. While organizing your hacks and other css "fixes" into separate files that are loaded via conditional logic is nice from an asthetic perspective...it can actually create maintenance hassles down the road. In my experience, its best to keep your hacks with the base CSS they are fixing for any given browser. This keeps CSS that styles some particular element of your UI together in a single place, which makes managing that CSS significantly easier , and also makes it clear where future fixes for possible (or probable) fiture browser css bugs should be placed. In addition to placing your hacks just after the base css they relate to, you should also make sure its clear what a given hack fixes, along with the browsers the hack supports, with comments. I have worked on some large projects that used CSS extensively and in advanced ways, but we still had to support IE6. Long term, my team and I (which, btw, were all C# developers...at this particular job devs not only coded, but also did all UI implementation according to UI mockups created by our graphic designers) learned that you can actually use CSS to properly style pretty much any site without the need for hacks (it can be difficult, and requires some extensive knowledge of how CSS works...but it is possible to solve almost every bug in IE and Firefox without hacks...just clever/proper use of valid CSS). Before my team learned enough about CSS to accomplish that, however, we had more hacks that we could count. Keeping our hacks grouped together with the base css they fixed along with tagging each hack with a reason and the browser or browsers that hack supported went a long way to keeping our monstrous CSS files maintainable. Not only will this help improve maintainability...but as you learn more about CSS and figure out ways to avoid hacks...you'll be able to remove them little by little as you fix up existing CSS to use your new tricks. Since your hacks are right next to the CSS your improving, its easy to get rid of hacks that are no longer needed.
