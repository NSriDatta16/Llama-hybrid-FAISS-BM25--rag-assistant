[site]: datascience
[post_id]: 90986
[parent_id]: 90981
[tags]: 
The length of TIME_STEPS in one sequence is more of a Hyperparameter. That you should try to optimize. Does this method split the data or is he just creating a 3D variable in the correct format for the Convolutional Autoencoder? It simply create dataset for a 1-dimsnional convolutional network.Something like this, $\hspace{3cm}$ Each row is an instance. Convolution will happen across the row. I have a dataset where there are stored the measurements of 30 devices You may simply assume each data point as a Time-step assuming it was collected simultaneously. But your data has an additional dimension i.e. Devices. So you should either build one model for each device or take the average of each device and consider it as the single time-step. Or you can apply a 1-D CNN with a 2-D kernel in your first layer, assuming each device as a channel. Check an example here . In case, Keras doesn't allow a 2-D kernel, then use a 2D-CNN with kernel size "30xM". With that, the convolution will happen in only one direction. Beware that if you use the last 2 options, then your pre-processing function will have to change i.e each time-step will have "30x1" as a dimension.
