[site]: stackoverflow
[post_id]: 4206209
[parent_id]: 4205787
[tags]: 
Here's a GL selection-mode example /* Copyright (c) Mark J. Kilgard, 1994. */ /** * (c) Copyright 1993, Silicon Graphics, Inc. * ALL RIGHTS RESERVED * Permission to use, copy, modify, and distribute this software for * any purpose and without fee is hereby granted, provided that the above * copyright notice appear in all copies and that both the copyright notice * and this permission notice appear in supporting documentation, and that * the name of Silicon Graphics, Inc. not be used in advertising * or publicity pertaining to distribution of the software without specific, * written prior permission. * * THE MATERIAL EMBODIED ON THIS SOFTWARE IS PROVIDED TO YOU "AS-IS" * AND WITHOUT WARRANTY OF ANY KIND, EXPRESS, IMPLIED OR OTHERWISE, * INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY OR * FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL SILICON * GRAPHICS, INC. BE LIABLE TO YOU OR ANYONE ELSE FOR ANY DIRECT, * SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY * KIND, OR ANY DAMAGES WHATSOEVER, INCLUDING WITHOUT LIMITATION, * LOSS OF PROFIT, LOSS OF USE, SAVINGS OR REVENUE, OR THE CLAIMS OF * THIRD PARTIES, WHETHER OR NOT SILICON GRAPHICS, INC. HAS BEEN * ADVISED OF THE POSSIBILITY OF SUCH LOSS, HOWEVER CAUSED AND ON * ANY THEORY OF LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE * POSSESSION, USE OR PERFORMANCE OF THIS SOFTWARE. * * US Government Users Restricted Rights * Use, duplication, or disclosure by the Government is subject to * restrictions set forth in FAR 52.227.19(c)(2) or subparagraph * (c)(1)(ii) of the Rights in Technical Data and Computer Software * clause at DFARS 252.227-7013 and/or in similar or successor * clauses in the FAR or the DOD or NASA FAR Supplement. * Unpublished-- rights reserved under the copyright laws of the * United States. Contractor/manufacturer is Silicon Graphics, * Inc., 2011 N. Shoreline Blvd., Mountain View, CA 94039-7311. * * OpenGL(TM) is a trademark of Silicon Graphics, Inc. */ #include #include #include #include #include #include #define MAXOBJS 10000 #define MAXSELECT 100 #define MAXFEED 300 #define SOLID 1 #define LINE 2 #define POINT 3 GLint windW = 300, windH = 300; GLuint selectBuf[MAXSELECT]; GLfloat feedBuf[MAXFEED]; GLint vp[4]; float zRotation = 90.0; float zoom = 1.0; GLint objectCount; GLint numObjects; struct object { float v1[2]; float v2[2]; float v3[2]; float color[3]; } objects[MAXOBJS]; GLenum linePoly = GL_FALSE; static void InitObjects(GLint num) { GLint i; float x, y; if (num > MAXOBJS) { num = MAXOBJS; } if (num n) { *i = n; printf(" ???\n"); return; } printf(" (%g %g %g), color = (%4.2f %4.2f %4.2f)\n", feedBuf[index], feedBuf[index + 1], feedBuf[index + 2], feedBuf[index + 3], feedBuf[index + 4], feedBuf[index + 5]); index += 7; *i = index; } static void DrawFeedback(GLint n) { GLint i; GLint verts; printf("Feedback results (%d floats):\n", n); for (i = 0; i That program is a part of some other GLUT examples . The GL selection buffer is old and busted though, you're probably better off using color-readback selection or some CPU-side "ray casting" system that integrates with your geometry representation.
