[site]: stackoverflow
[post_id]: 4802572
[parent_id]: 4802417
[tags]: 
If you want to order the collection after a certain criteria then you must store that criteria somewhere. I don't know if this goes against your "not in Ruby" criteria but I would probably do something like this: class House "Dreaming", 1 => "Planning", 2 => "Building", 3 => "Living", 4 => "Tearing Down" } validates_inclusion_of :state, :in => STATES.keys def state_name STATES[self.state] end end @houses = House.order("state") In this case the db field state is an integer instead of a string. It makes it very effective for database storage as well as querying. Then in your view, you call state_name to get the correct name from the STATES hash stored in the model. This can also be changed to use i18n localization by using labels instead of strings in the hash.
