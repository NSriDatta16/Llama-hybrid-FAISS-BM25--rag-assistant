[site]: datascience
[post_id]: 117333
[parent_id]: 117009
[tags]: 
Giving a complete answer would be risky as there is a lot of unknown information. Nevertheless, I would suggest starting with just one case, which is relatively easy (low noise and good quantity of data), reaching good results, and then repeating with other cases. Then, I recommend Prophet for multivariate time series. To have good predictions, I recommend using correlation maps to define the best variable inputs with each target output. Indeed, the more the features are correlated, the best predictions you will get. Keep in mind that you should keep anti-correlated data (around -1) because it is a form of correlation. In addition to that, some input features can be useless and would alter the predictions. Note that there would be one model per output. For instance: If features A, C, E and F are (anti-)correlated together and with output O1, they would set the data for model M1. If features B, G and I are (anti-)correlated together and with output O2, they would set the data for model M1. If features D and H have no correlation with output 01 or output 02, they should be ignored. Perhaps you should have independent models per each time series. If some data is missing, applying an interpolation could be a good option. If you want to solve predictions with multiple lengths with a single model, the best solution I know is to vectorize the time series, just like word2vec or other advanced NLP models. Time-series vectorization will help to have vectors representing various dynamics with various lengths.
