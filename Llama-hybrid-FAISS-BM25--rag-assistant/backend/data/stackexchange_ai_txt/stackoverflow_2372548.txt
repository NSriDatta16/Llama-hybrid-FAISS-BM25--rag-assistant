[site]: stackoverflow
[post_id]: 2372548
[parent_id]: 1156985
[tags]: 
While not specifically limited to the cycle plugin, this may help others. I came across this stream in my attempt to find a solution to .animate() transparent/translucent png files. I had the issue of a black border occurring in both IE7 and IE8. The images appear fine until I attempted to use JQuery to animate the opacity... $('#my-png-img').stop().animate({opacity:0.0},3000); I went thru a number of the solutions and unfortunately, none of them were ideal. While this stream is a bit dated, it may help someone else still searching to piece together a solution. I ended up using the Twin Helix solution ( http://www.twinhelix.com/css/iepngfix/ ) with a bit of a tweak. I'm not a huge fan of .htc files but that's beside the point. I edited the iepngfix.htc file (~line 75) to trap for IE7 and IE8. I changed... !/MSIE (5\.5|6)/.test(navigator.userAgent) || to !/MSIE (5\.5|6|7|8)/.test(navigator.userAgent) || From there I followed the general instructions (see demo) including adding this bit to my CSS /* IE PNG Fix */ img, div, a, input { behavior: url(/_css/iepngfix.htc) } In addition and as others have mentioned, I had to nest my image in a container... Then I applied .animate() effect to the containing div. A bit constraining however, this was the only way I was able to get fading to work consistently. In one case, I even found that the transparency issue affected animating the opacity on a transparent .gif file. Oh and, whether I used .fadeIn()/.fadeOut rather than .animate() made no difference.
