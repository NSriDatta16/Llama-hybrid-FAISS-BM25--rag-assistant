[site]: stackoverflow
[post_id]: 4239131
[parent_id]: 
[tags]: 
"Could not create type XXXX" when accessing a .asmx page on IIS 7.0

I have this error message when I'm trying to access a .asmx file on my Web browser. The message is the following: Description: An error occurred during the parsing of a resource required to service this request. Please review the following specific parse error details and modify your source file appropriately. Parser Error Message: Could not create type 'GeocachingServerNS.GeocachingServer'. Source Error: Line 1: This is my code: using System; using System.Collections; using System.ComponentModel; using System.Data; using System.Web; using System.Web.Services; using System.Web.Services.Protocols; using System.Collections.Generic; namespace GeocachingServerNS { public class PlayerInfo { public string playerName; public Position position; public PlayerInfo() { } public PlayerInfo(string playerName, Position position) { this.playerName = playerName; this.position = position; } } public class CacheInfo { public string cacheName; public string creatorName; public int id; public Position position; public string hint; public string code; public CacheInfo() { } public CacheInfo(string cacheName, string creatorName, int id, Position position, string hint, string code) { this.cacheName = cacheName; this.creatorName = creatorName; this.id = id; this.position = position; this.hint = hint; this.code = code; } } public class Position { public double latitude; public double longitude; public Position() { } } public class Message { public string sender; public string content; public Message() { } } [WebService(Namespace = "http://ift604.usherbrooke.ca/", Name = "GeocachingServer")] [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)] [ToolboxItem(false)] public class GeocachingServer : System.Web.Services.WebService { public static int m_idCounter = 0; public static List m_cacheInfos = new List (); public static List m_playerInfos = new List (); public static Dictionary > m_cacheComments = new Dictionary >(); public static Dictionary > m_mailboxes = new Dictionary >(); /// /// Registers a new cache into the geocaching server. /// The cache will be visible to players. /// /// /// /// /// [WebMethod] public void RegisterCache(string cacheName, string creatorName, Position position, string hint, string code) { CacheInfo cacheInfo = new CacheInfo(cacheName, creatorName, m_idCounter, position, hint, code); m_cacheInfos.Add(cacheInfo); m_cacheComments[cacheInfo] = new List (); ++m_idCounter; } /// /// Sends (updates) the position of a player to the geocaching server. /// /// /// [WebMethod] public void SendPosition(Position position, string playerName) { PlayerInfo playerInfo = FindPlayer(playerName); if (playerInfo == null) { //TODO: Est-ce la meilleure façon de procéder, d'un point de vue //sécurité (flooding)? Non. m_playerInfos.Add(new PlayerInfo(playerName, position)); } else { playerInfo.position = position; } } /// /// Removes a player from the geocaching game. /// /// [WebMethod] public void Disconnect(string playerName) { PlayerInfo playerInfo = FindPlayer(playerName); m_playerInfos.Remove(playerInfo); //Fonctionne aussi avec null. } /// /// Returns positions of players nearby. /// /// The player that requests the positions. /// [WebMethod] public List GetPlayerPositions(String playerName) { //TODO: Retourner la position des joueurs qui sont près du joueur... return m_playerInfos; } /// /// Returns the list of all caches that exists in the server. /// /// [WebMethod] public List GetCacheList() { return m_cacheInfos; } /// /// Returns all comments related to a cache. /// /// /// [WebMethod] public List GetComments(int cacheId) { List comments = new List (); CacheInfo cacheInfo = FindCache(cacheId); if (cacheInfo != null) { comments = m_cacheComments[cacheInfo]; } return comments; } /// /// Sends a contragulations message to the creator /// of a cache. /// /// /// [WebMethod] public void SendMessage(Message message, int cacheId) { CacheInfo cacheInfo = FindCache(cacheId); if (!m_mailboxes.ContainsKey(cacheInfo.creatorName)) { m_mailboxes[cacheInfo.creatorName] = new List (); } m_mailboxes[cacheInfo.creatorName].Add(message); } /// /// Returns all messages sent to a player (like /// congratulations messages). /// /// /// [WebMethod] public List GetMessages(String playerName) { if (!m_mailboxes.ContainsKey(playerName)) { m_mailboxes[playerName] = new List (); } return m_mailboxes[playerName]; } /// /// Adds a comment to a cache. /// /// /// [WebMethod] public void AddComment(Message message, int cacheId) { CacheInfo cacheInfo = FindCache(cacheId); if (cacheInfo != null) { m_cacheComments[cacheInfo].Add(message); } } private PlayerInfo FindPlayer(string playerName) { foreach (PlayerInfo info in m_playerInfos) { if (info.playerName == playerName) { return info; } } return null; } private CacheInfo FindCache(int id) { foreach (CacheInfo info in m_cacheInfos) { if (info.id == id) { return info; } } return null; } } } I have created a virtual folder on "Default Web Site" on IIS Manager. I use IIS 7.0 and Windows Server 2008. I have looked at tenths of forums and they all say these things: There may be something with IIS 7.0 The namespace of the class attribute in the .asmx file is not good (in my case, it is) If the class name containing the Web service is Service, then it may not work (a bug) The build action of the .asmx file must be Content (it is). The build action of the .asmx.cs file must be Compile (it is). The code must be in an App_Code directory in the "virtual directory" and the .asmx file must include the correct file in the CodeBehind attribute (I have tried, but it didn't work). This is the directory structure - App_Data - bin - GeocachingServer.asmx - GeocachingServer.asmx.cs - GeocachingServer.dll - GeocachingServer.pdb - obj - Debug - Refactor - TempPE - GeocachingServer.dll - GeocachingServer.pdb - Server.csproj.FileListAbsolute.txt - Properties - AssemblyInfo.cs - Example09ServiceWeb.Publish.xml - GeocachingServer.asmx - GeocachingServer.asmx.cs - Server.csproj - Server.csproj.user - Server.Publish.xml - Web.config - x.html (if I ask this file when specifying the URL, it works) This is my web.config file: permet la configuration du mode d'authentification de sécurité utilisé par ASP.NET pour identifier un utilisateur entrant. --> --> permet de configurer les actions à exécuter si/quand une erreur non gérée se produit lors de l'exécution d'une demande. Plus précisément, elle permet aux développeurs de configurer les pages d'erreur html pour qu'elles s'affichent à la place d'une trace de la pile d'erreur. --> After six hours of debugging, I didn't found the solution to my problem. Please help!
