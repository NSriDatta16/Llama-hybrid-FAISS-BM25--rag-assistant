[site]: stackoverflow
[post_id]: 4732120
[parent_id]: 4731685
[tags]: 
A less verbose form is control != null && control.IsChecked == true Remember, a bool? has three values, true, false, and null, and it's always sufficient to check against a single value. For example, a == true and a != false are the checks, respectively, for when the null works like a false or when the null works like a true. For your combobox example, I'd use a strongly typed collection to begin with. See wpf: how to make ComboBoxItems hold integers in xaml for an example of how to bind directly to integers, (or if you want separate Content/Value, bind it to a list of KeyValuePairs [for example]) Then use SelectedValue and SelectedValuePath to reduce your value-retrieval code.
