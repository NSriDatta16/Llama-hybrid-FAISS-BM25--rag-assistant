[site]: stackoverflow
[post_id]: 670675
[parent_id]: 643594
[tags]: 
This reminds me of the Knapsack problem , more than the Traveling Salesman. But the Knapsack is also an NP-Hard problem, so you might be able to fool people to think up an over complex solution using dynamic programming if they correlate your problem with the Knapsack. Where the basic problem is: can a value of at least V be achieved without exceeding the weight W? Now the problem is a fairly good solution can be found when V is unique, your distances, as such: The knapsack problem with each type of item j having a distinct value per unit of weight (vj = pj/wj) is considered one of the easiest NP-complete problems. Indeed empirical complexity is of the order of O((log n)2) and very large problems can be solved very quickly, e.g. in 2003 the average time required to solve instances with n = 10,000 was below 14 milliseconds using commodity personal computers 1 . So you might want to state that several stops/packages might share the same vj, inviting people to think about the really hard solution to: However in the degenerate case of multiple items sharing the same value vj it becomes much more difficult with the extreme case where vj = constant being the subset sum problem with a complexity of O(2N/2N). So if you replace the weight per value to distance per value, and state that several distances might actually share the same values, degenerate, some folk might fall in this trap.
