[site]: crossvalidated
[post_id]: 588362
[parent_id]: 588332
[tags]: 
A GARCH(r,s) model looks something like this: \begin{aligned} x_t &= \mu_t + u_t, \\ \mu_t &= \dots, \\ u_t &= \sigma_t \varepsilon_t, \\ \sigma_t^2 &= \omega + \alpha_1 u_{t-1}^2 + \dots + \alpha_s u_{t-s}^2 + \beta_1 \sigma_{t-1}^2 + \dots + \beta_r \sigma_{t-r}^2, \\ \varepsilon_t &\sim i.i.D(0,1) \end{aligned} where $\mu_t$ is the conditional mean of $x_t$ , $\sigma_t^2$ is the conditional variance of $x_t$ and $D$ is some probability distribution with zero mean and unit variance. There are two types of residuals in a GARCH model: raw ones $u_t$ and standardized ones $\varepsilon_t$ . If we set the conditional mean to be zero, we obtain $u_t=x_t$ . That is, raw residuals are the same as the original data $x_t$ . If we set it to be a constant $c$ , we obtain $u_t=x_t-c$ , i.e. raw residuals differ from the original data by a constant. I am not familiar with coding in Python, but it looks like the conditional mean model in your specification happens to be a constant; the two time series you have presented differ by $0.06371$ at all time points. The interesting type of residuals in a GARCH model is however not the raw $u_t$ but the standardized $\varepsilon_t$ . It is the latter that is used in GARCH model diagnostics. For a well-fitting GARCH model, they should be approximately homoskedastic with a mean of zero and a variance of $1$ .
