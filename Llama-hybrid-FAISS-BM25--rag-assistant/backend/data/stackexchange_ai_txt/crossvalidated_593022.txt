[site]: crossvalidated
[post_id]: 593022
[parent_id]: 
[tags]: 
Negative threshold in roc_curve and precision_recall_curve

I am trying to find optimal threshold that can differentiate the two classes well but i am getting negative thresholds using roc_curve and precision_recall_curve . I have build a CNN-LSTM architecture. I am not sure if these information are enough to find the solution, but i want to know what would be the first thing you will check if you get negative threshold. Here are the functions def optimal_threshold_precision_recall_curve(self,gt, pmap): """Function to return an optimal thresholding value of the image """ gt = gt.flatten() pmap = pmap.flatten() precision, recall, thresholds = precision_recall_curve(gt,pmap, pos_label=1) optimal_thresholds = sorted(list(zip(np.abs(precision - recall), thresholds)), key=lambda i: i[0], reverse=False)[0][1] # optimal_mask = np.where(pmap>optimal_thresholds,1,0) plt.figure() plt.plot(recall,precision) plt.savefig('test.png') return optimal_thresholds def auc_thresh(self,label, pred,mode): fpr, tpr, thresholds = roc_curve(label.flatten(), pred.flatten()) roc_auc = auc(fpr, tpr) gmeans = np.sqrt(tpr * (1-fpr)) ix = np.argmax(gmeans) print('Best %s Threshold=%f, G-Mean=%.3f' % (mode,thresholds[ix], gmeans[ix])) return thresholds[ix] This is how graph look like, code to plot this image is optimal_threshold_precision_recall_curve function
