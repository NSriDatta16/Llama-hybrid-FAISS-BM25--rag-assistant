[site]: crossvalidated
[post_id]: 410968
[parent_id]: 
[tags]: 
Understanding cov.reduce argument in emmeans function

I would appreciate any help regarding emmeans package. I am fitting dummy-variable regression model (ANCOVA) with follow-up post hoc test in emmeans . My data includes the following variables produced in experimental setting. Scale is dependent (outcome) variable and Condition, BMI, Sex, Age are independent (predictor) variables. I am truly interested in the effect of Condition on Scale (dependent variable / outcome). Condition is factor with eight levels (e.g. Condition 1, 2, ... 8.) and the effect of interest that was experimentally controlled, BMI, Sex, Age are considered confounders in the model and I am including them but not interpreting. Given the experimental nature, there are specific levels in variable Condition that I am interested in. Therefore, the post-hoc analysis is a planned contrast comparison with Holm adjustment. The specified model looks like this: model1 Which results in: summary(model_Trust_Credibility) Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 0.199016 0.402865 0.494 0.621790 Condition2 -0.107303 0.166441 -0.645 0.519787 Condition3 -0.259154 0.165977 -1.561 0.119844 Condition4 0.001307 0.166773 0.008 0.993755 Condition5 -0.572274 0.167330 -3.420 0.000744 *** Condition6 -0.180062 0.170184 -1.058 0.291176 Condition7 -0.411715 0.164065 -2.509 0.012799 * Condition8 -0.422063 0.177381 -2.379 0.018179 * BMI 0.003585 0.006122 0.586 0.558692 SexMale 0.015283 0.084327 0.181 0.856345 Age 0.010749 0.004628 2.323 0.021096 * --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 I am not really interested in the output above that much because Conditions need to be compared between themselves. Therefore, I am fitting the post-hoc; however, I am confused how to make sense of cov.reduce argument in the function. Help page around this is sparse and it states: Using cov.reduce = FALSE specifies that, instead of using the mean, the reference grid should use all the unique values of each covariate. Leaving cov.reduce as TRUE (default) results in this: emm_model1 I don't understand why conditions are averaged only on the Sex predictor though. I've also tried cov.reduce = FALSE which averages across all unique levels but as there are numerical variables the covariance matrix is large and it may crash. Intuitively I feel that it should average across all variables, given that, the best result was achieved with cov.reduce = range resulting in: Condition emmean SE df lower.CL upper.CL 1 0.3033 0.158 224 -0.00712 0.6137 2 0.1960 0.148 224 -0.09487 0.4869 3 0.0442 0.145 224 -0.24071 0.3290 4 0.3046 0.145 224 0.01920 0.5900 5 -0.2690 0.151 224 -0.56730 0.0294 6 0.1232 0.137 224 -0.14725 0.3937 7 -0.1084 0.153 224 -0.40923 0.1924 8 -0.1188 0.158 224 -0.42940 0.1919 Results are averaged over the levels of: BMI, Sex, Age However, I still don't fully understand what is the impact of this argument. The help page doesn't do it justice and it seems people are not really concerned with it. I've noticed it has only impact on emm_model1 ; however contrasts are not affected at all (see below brief example). My next step to produce the contrast with (contrast_testing is list of pre defined contrasts and emm_model1 was specified above): contrast(object = emm_model1, contrast_testing, adjust = "holm") contrast estimate SE df t.ratio p.value Condition 1 vs 7 0.4117 0.164 224 2.509 0.1536 etc. etc. etc. etc. etc. etc. (I've cut out the rest) Results are averaged over the levels of: BMI, Sex, Age No matter how I fiddle with cov.reduce , results are always the same. My questions are "What is the purpose of cov.reduce?", "How should I understand it and interpret it?". "If someone asks why does it average on Sex or other variables only, what would be the answer?" Thank you for any help.
