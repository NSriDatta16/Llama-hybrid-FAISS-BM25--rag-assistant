[site]: stackoverflow
[post_id]: 2232561
[parent_id]: 2231814
[tags]: 
Here is a small python program for computing the probability distribution # modulus m = 20 # range of the random numbers 0..n-1 n = 33 # number of random numbers in sum k = 6 # distribution of one random number # a[i] is the probability that a random number modulo m is i. a = [0]*m for i in range(n): a[i % m]+= 1/n # convolution b = a for i in range(1,k): # Here b[t] is the probability that the sum of i random numbers is t. # Compute c[t] as the probability that the sum of i+1 random numbers is t. c = [0]*m for i in range(m): for j in range(m): c[(i+j)%m] += a[i]*b[j] b=c # print the probability distribution of the result for i in range(m): print(i, b[i]) # compute average print("average", sum(i*b[i] for i in range(m))) This gives the following result: 0 0.0500007971936 1 0.0499999764222 2 0.0499991633939 3 0.0499984370886 4 0.0499978679688 5 0.0499975063648 6 0.0499973824748 7 0.0499975063648 8 0.0499978679688 9 0.0499984370886 10 0.0499991633939 11 0.0499999764222 12 0.0500007971936 13 0.0500015451796 14 0.0500021452719 15 0.0500025347512 16 0.0500026702559 17 0.0500025347512 18 0.0500021452719 19 0.0500015451796 average 9.50015120662 I.e. the high numbers are indeed a little more probable, but the differences are very small.
