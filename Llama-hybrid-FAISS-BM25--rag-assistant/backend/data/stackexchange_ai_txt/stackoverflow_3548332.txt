[site]: stackoverflow
[post_id]: 3548332
[parent_id]: 3542450
[tags]: 
Just a different way of doing it, this uses Guava private String test(int[] a, int[] b) { List al = Lists.newArrayList(); List bl = Lists.newArrayList(); for (Integer ai : a) { al.add(ai); } for (Integer bi : b) { bl.add(bi); } List sets = Lists.newArrayList(); Iterator itera = al.iterator(); Iterator iterb = bl.iterator(); while(itera.hasNext() && iterb.hasNext()) { sets.add(itera.next()+":"+iterb.next()); } return Joiner.on("|").join(sets); } I was surprised to find no primitive array to list methods. If you can think of an elegant way to do that besides pulling it out into another method, the this code could be made cleaner.
