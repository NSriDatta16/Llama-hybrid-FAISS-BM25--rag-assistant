[site]: stackoverflow
[post_id]: 4288537
[parent_id]: 4288421
[tags]: 
The page is indeed likely cached by the browser. You can verify this in Firefox with Firebug . Generally, you would like to disable client side caching of dynamic content. You can achieve this by creating a Filter which is mapped on an url-pattern of *.jsp and does basically the following job in the doFilter() method. HttpServletResponse httpResponse = (HttpServletResponse) response; httpResponse.setHeader("Cache-Control", "no-cache, no-store, must-revalidate"); // HTTP 1.1 httpResponse.setHeader("Pragma", "no-cache"); // HTTP 1.0 httpResponse.setDateHeader("Expires", 0); // Proxies. chain.doFilter(request, response); Those response headers will instruct the client (webbrowser) to not cache the response. Don't forget to clean the browser cache before testing. In Spring MVC, you can create an interceptor like so: public class DisableBrowserCachingInterceptor extends HandlerInterceptorAdapter { public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) { response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate"); // HTTP 1.1 response.setHeader("Pragma", "no-cache"); // HTTP 1.0 response.setDateHeader("Expires", 0); // Proxies } }
