[site]: crossvalidated
[post_id]: 454254
[parent_id]: 
[tags]: 
Modifying an estimator in scikit-learn for use with CV

I am using scikit-learn and would like to use sklearn.model_selection.cross_validate to do cross-validation. I have a machine learning model where unphysical values are modified before scoring. For instance, if I use LASSO and get a vector of predicted values y , I will do something like y[y before evaluating the success of the model. Is there a way I can incorporate this criterion in the estimator's fit function such that I can use sklearn's cross-validation function? For instance, if I have from sklearn import datasets, linear_model from sklearn.model_selection import cross_validate diabetes = datasets.load_diabetes() X = diabetes.data[:150] y = diabetes.target[:150] lasso = linear_model.Lasso() cv_results = cross_validate(lasso, X, y, cv=3) I would like to be able to have all the predicted LASSO values to have a value of 0 if they were originally negative before doing cross_validate . Of course, I could just do the cross-validation myself and bypass this problem, but it'd be nice to use scikit-learn's built-in functions where possible.
