[site]: stackoverflow
[post_id]: 2568988
[parent_id]: 2568939
[tags]: 
Try this in MATLAB: z = sum(X.*(A*X)); This gives results equivalent to Federico's suggestion using the function DOT , but should run slightly faster. This is because the DOT function internally computes the result the same way as I did above using the SUM function. However, DOT also has additional input argument checks and extra computation for cases where you are dealing with complex numbers, which is extra overhead you probably don't want or need. A note on computational efficiency: Even though the time difference is small between how fast the two methods run, if you are going to be performing the operation many times over it's going to start to add up. To test the relative speeds, I created two 100-by-100 matrices of random values and timed the two methods over many runs to get an average execution time: METHOD AVERAGE EXECUTION TIME -------------------------------------------- Z = sum(X.*Y); 0.0002595 sec Z = dot(X,Y); 0.0003627 sec Using SUM instead of DOT therefore reduces the execution time of this operation by about 28% for matrices with around 10,000 elements. The larger the matrices, the more negligible this difference will be between the two methods. To summarize, if this computation represents a significant bottleneck in how fast your code is running, I'd go with the solution using SUM . Otherwise, either solution should be fine.
