[site]: stackoverflow
[post_id]: 564741
[parent_id]: 564577
[tags]: 
If you never coded a multithread application, I bare you to begin with OpenMP: the library is now included in gcc by default this is very easy to use In your example, you should just have to add this pragma: #pragma omp parallel shared(histogram) { for (int i1 = 0; i1 With this pragma, the compiler will add some instruction to create threads, launch them, add some mutexes around accesses to the histogram variable etc... There are a lot of options, but well defined pragma do all the work for you. Basically, the simplicity depends on the data dependency. Of course, the result should not be optimal as if you coded all by hand. But if you don't have load balancing problem, you maybe could approach a 2x speed up. Actually this is only write in matrix with no spacial dependency in it.
