[site]: crossvalidated
[post_id]: 96640
[parent_id]: 96452
[tags]: 
after cleaning up the code and letting a colleague of mine have a look on it, we/he finally found the bug. Of course, I have to compute the testing matrix from the training and testing samples (to let the SVM predict the testing data by using the sum over the product of alpha-values of the training vectors (they are zero for non support vectors)). Hope this clarifies the problem for any of you. To make it more clear, see my revised code below. But, as for example in https://stackoverflow.com/questions/7715138/using-precomputed-kernels-with-libsvm , there one with sharp eyes can also see the computation of the testing matrix with train and test vectors, too. Feel free to put comments or/and answers to this post if you have any further remarks/questions/tips! function [tacc, testacc, mdl, SimilarityMatrixTrain, SimilarityMatrixTest, trainLabels, testLabels] = computeSimilarityMatrix(dirName) fileList = getAllFiles(dirName); fileList = fileList(1:72); trainLabels = []; testLabels = []; trainFiles = {}; testFiles = {}; n = 0; sigma = 0.01; trainFiles = fileList(1:2:end); testFiles = fileList(2:5:end); noTrain = size(trainFiles); noTest = size(testFiles); permTrain = randperm(noTrain(1)); permTest = randperm(noTest(1)); trainFiles = trainFiles(permTrain); testFiles = testFiles(permTest); %Train for i = 1 : noTrain(1) x = csvread(trainFiles{i}); label = x(1); trainlabel = label; trainLabels = [trainLabels, label]; for j = 1 : noTrain(1) y = csvread(trainFiles{j}); dtwDistance = dtwWrapper(x(2:end), y(2:end)); rbfValue = exp((dtwDistance.^2)./(-2*sigma.^2)); SimilarityMatrixTrain(i, j) = rbfValue; end end SimilarityMatrixTrain = [(1:size(SimilarityMatrixTrain, 1))', SimilarityMatrixTrain]; %Test for i = 1 : noTest(1) x = csvread(testFiles{i}); label = x(1); testlabel = label; testLabels = [testLabels, label]; for j = 1 : noTrain(1) y = csvread(trainFiles{j}); dtwDistance = dtwWrapper(x(2:end), y(2:end)); rbfValue = exp((dtwDistance.^2)./(-2*sigma.^2)); SimilarityMatrixTest(i, j) = rbfValue; end end SimilarityMatrixTest = [(1:size(SimilarityMatrixTest, 1))', SimilarityMatrixTest]; mdlU = svmtrain(trainLabels', SimilarityMatrixTrain, '-t 4 -c 1000 -q'); fprintf('TEST: '); [pclassU, xU, yU] = svmpredict(testLabels', SimilarityMatrixTest, mdlU); fprintf('TRAIN: ');[pclassT, xT, yT] = svmpredict(trainLabels', SimilarityMatrixTrain, mdlU); tacc = xT(1); testacc = xU(1); mdl = mdlU; end Regards Benjamin
