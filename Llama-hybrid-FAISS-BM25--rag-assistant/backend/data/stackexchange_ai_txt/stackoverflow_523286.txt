[site]: stackoverflow
[post_id]: 523286
[parent_id]: 523254
[tags]: 
Building on Vinay's answer, integrating with your target platform is always going to be of paramount importance when designing an interface. If you were developing on Windows, make sure you stay true to the look, feel, and usability expectations of that platform. The interface guidelines are always going to be a jumping off point, though some are better than others. For my money's worth, the GNOME Human Interface Guidelines are a great set of guidelines to designing user-friendly interfaces, even if you aren't using GTK. On a more general note, learning good design is really learning to recognize good design. Find some applications that are really intuitive and then mimic their layout, style, etc. Then, when you are struggling with how to implement a particular feature, find a suitable analogue in a one of those other applications. You will want to pay particular attention to issues like grouping, tabbing, shortcuts, dialog modality, etc. I think you will find that very few good design principles are dependent on the language you are programming in, except in so far as it may influence the toolkit and platform that you target.
