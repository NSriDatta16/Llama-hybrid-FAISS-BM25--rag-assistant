[site]: stackoverflow
[post_id]: 39358
[parent_id]: 39281
[tags]: 
We have implemented a solution very similar to the solution that Chris Roberts suggests, and that works pretty well for us. Only difference is that we only store the new value. The old value is after all stored in the previous history row [ID] [int] IDENTITY(1,1) NOT NULL, [UserID] [int] NULL, [EventDate] [datetime] NOT NULL, [TableName] [varchar](50) NOT NULL, [RecordID] [varchar](20) NOT NULL, [FieldName] [varchar](50) NULL, [NewValue] [varchar](5000) NULL Lets say you have a table with 20 columns. This way you only have to store the exact column that has changed instead of having to store the entire row.
