[site]: stackoverflow
[post_id]: 4084748
[parent_id]: 4084488
[tags]: 
That's not an odd value for Android GC. The ~100ms and ~500K values are fairly average but that depends on the project specs of course.The real problem is in the frequency that your code causes the GC to be called. Here's an example: If you implement lists via the ListView and some custom Adapters you could get the worst ever performance and the best ever depending on how you write your code for them. If you do not optimize lists and create a new View (by inflating it from the .xml file) you will get GC calls very often and this is perceived as small hickups or hangups in the UI. The best method for determining of what causes the GC problem is localizing it. Start your app and use it one part an a time while monitoring the DDMS for GC gumps and then see which element or Activity causes most of them and go from there. Also try memory usage monitoring with some tools. For instance if you are using Eclipse there is a tool called MAT that will give you a bit more insight into object usage throughout your project.
