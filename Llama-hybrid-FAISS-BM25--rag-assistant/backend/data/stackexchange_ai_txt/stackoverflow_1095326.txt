[site]: stackoverflow
[post_id]: 1095326
[parent_id]: 1095290
[tags]: 
Great question. Should get some good responses. Code cleanliness (indented well, file organization, folder structure) Well commented (not just inline comments, but variables that say what they are, functions that say what they do, etc.) Small understandable functions/methods (no crazy 300 line methods that do all sorts of things with nested if logic all over the place) Follows SOLID principles Is the amount of unit test code similar in size and quality as the code base of the project Is the interface code separate from the business logic code which in turn should be separate from the infrastructure access code (email, database, web services, file system, etc.) What does a performance analysis tool think of the code (NDepend, NDoc, NCover, etc.) There is a lot more to this...but this gets your started.
