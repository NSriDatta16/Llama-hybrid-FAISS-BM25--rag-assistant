[site]: stackoverflow
[post_id]: 4280882
[parent_id]: 4275154
[tags]: 
Two useful scenarios for aliases: 1. Multiple foreign keys to the same model For example, your photos table has two fields: created_user_id & modified_user_id var $belongsTo = array( 'CreatedUser' => array( 'className' => 'User', 'foreignKey' => 'created_user_id', ... ), 'ModifiedUser' => array( 'className' => 'User', 'foreignKey' => 'modified_user_id', ... ), ); 2. Creating logical words specific to your application's domain Using the conditions field in the array, you could specify different kinds of models: var $hasMany = array( 'ApprovedUser' => array( 'className' => 'User', 'foreignKey' => 'group_id', 'conditions' => array( 'User.approved' => 1, 'User.deleted' => 0 ), ... ), 'UnapprovedUser' => array( 'className' => 'User', 'foreignKey' => 'group_id', 'conditions' => array( 'User.approved' => 0, 'User.deleted' => 0 ), ... ), 'DeletedUser' => array( 'className' => 'User', 'foreignKey' => 'group_id', 'conditions' => array('User.deleted' => 1), ... ), ); In the above example, a Group model has different kinds of users (approved, unapproved and deleted). Using aliases helps make your code very elegant.
