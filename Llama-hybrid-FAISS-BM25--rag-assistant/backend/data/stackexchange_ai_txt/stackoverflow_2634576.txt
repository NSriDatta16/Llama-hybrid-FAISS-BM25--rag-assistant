[site]: stackoverflow
[post_id]: 2634576
[parent_id]: 2634523
[tags]: 
The trick to memory management in Cocoa is to balance out any calls to alloc , retain or copy with a subsequent call to release . In this case, you are sending alloc to initialize your theAudio variable, but you are never sending release . Assuming that you will only have one sound playing at a time, the best way to do this is with a property on your controller (the one that has this -touchesBegan method). The property declaration would look like this: @property (nonatomic, retain) AVAudioPlayer * theAudio; You will then need to set theAudio to nil in your init method: theAudio = nil; // note: simple assignment is preferable in init And be sure to release the variable in your dealloc method: [theAudio release]; Now, your touchesBegan could look like this: - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { //stop playing theAudio.stop; ... AVAudioPlayer * newAudio = [[AVAudioPlayer alloc] initWithContentsOfUrl:...]; self.theAudio = newAudio; // it is automatically retained here... theAudio.delegate = self; [theAudio prepareToPlay]; [theAudio setNumberOfLoops:-1]; [theAudio setVolume: g_Volume]; [theAudio play]; [newAudio release]; // ...so you can safely release it here }
