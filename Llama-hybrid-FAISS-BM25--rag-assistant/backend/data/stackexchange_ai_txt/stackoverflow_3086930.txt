[site]: stackoverflow
[post_id]: 3086930
[parent_id]: 3086405
[tags]: 
If whatever resources you are interested in are in the classpath, packaged in the jar, war, or the distribution, you can retrieve them by getting resources. The convention is indeed to have a directory named 'src/resources' that serves as the root for this. Depending on the amount and scope of the resources you are using you may also want to add a sub-directory hierarchy to keep the organization and state of the resources manageable. Also, not that a resource can be any file, an image, sound, text, xml, binary, etc. no limitation. Finally, the call will look like this if you are using an object method: getClass().getResourceAsStream("resources/myResource") - or - getClass().getResource("resources/myResource") depends on if you want a stream or just the URI at that point in the code. Typically one would use the URI for delegating the processing of the resource elsewhere and the stream form when you are processing it in-line. For a class method, you will need to do something more like: new Object().getClass()... The think to keep in mind here, is eventually this is resolving to the class loader and it is from that class path that the resource will be fetched.
