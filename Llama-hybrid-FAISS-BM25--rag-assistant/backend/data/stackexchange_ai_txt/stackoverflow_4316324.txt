[site]: stackoverflow
[post_id]: 4316324
[parent_id]: 
[tags]: 
How to use paintComponent in Java to paint multiple things, but rotate one?

I'm making a program in Java for my CS class. My teacher has little experience with graphics programing in Java so I've turned to you. I'm currently using the paintComponent method of my main panel to draw two things, one, a rectangle (my cannon, possibly replaced with a image later), and two, a .png file of a cannon ball. I use the Graphics g (which I convert to Graphics2D) to paint the cannon and Ball on to the screen. I then rotate, but, the cannon and ball rotate, not just the cannon. Any tips, suggestions, or helpful tutorials are greatly appreciated. Here is my code (the commented out links are where I got certain code, ignore them): package Cannon; import java.awt.geom.Point2D; import java.awt.BorderLayout; import java.awt.Graphics; import java.awt.Graphics2D; import java.awt.Image; import java.awt.Rectangle; import java.awt.RenderingHints; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.event.MouseEvent; import java.awt.event.MouseListener; import java.awt.event.MouseMotionListener; import javax.swing.ImageIcon; import javax.swing.JButton; import javax.swing.JFrame; import javax.swing.JPanel; import javax.swing.Timer; public class NewMain{ public static void main(String[] args) { FraMainWindow frame = new FraMainWindow(); } } class FraMainWindow extends JFrame { DrawCannon pnlCannon = new DrawCannon(); ButtonPannel pnlButtons = new ButtonPannel(); public FraMainWindow() { this.setDefaultCloseOperation(JFrame.EXI… this.setTitle("Super Mario Cannon Bro's"); this.setSize(900, 550); this.setLayout(new BorderLayout()); this.add(pnlCannon, BorderLayout.CENTER); this.add(pnlButtons, BorderLayout.SOUTH); MouseMovement mouseMove = new MouseMovement(); MouseAction mouseClick = new MouseAction(); pnlCannon.addMouseMotionListener(mouseMo… pnlCannon.addMouseListener(mouseClick); FireButton actnFire = new FireButton(); pnlButtons.btnFire.addActionListener(act… this.setVisible(true); } public class DrawCannon extends JPanel{ Rectangle.Float rectCannon = new Rectangle.Float(30, 450, 50, 10); Image imgBall=new ImageIcon("ball.png").getImage(); double dAngle = 0; boolean isFired = false; public void addCannonBall(){ isFired=true; repaint(); } public void paintComponent(Graphics g) { super.paintComponent(g); Graphics2D g2d = (Graphics2D) g; g2d.setRenderingHint(RenderingHints.KEY_… RenderingHints.VALUE_ANTIALIAS_ON); g2d.setRenderingHint(RenderingHints.KEY_… RenderingHints.VALUE_RENDER_QUALITY);//A… Aliasing from http://www.java2s.com/Code/Java/2D-Graph… g2d.rotate(0 - dAngle, rectCannon.getX(), rectCannon.getY() + 5); g2d.fill(rectCannon); if(isFired){ g2d.drawImage(imgBall, 0, 0, null); } //Dimension size = getSize(); } } public class ButtonPannel extends JPanel { JButton btnFire = new JButton("Fire!"); ButtonPannel() { this.add(btnFire); } } public class FireButton implements ActionListener { public void actionPerformed(ActionEvent e) { pnlCannon.addCannonBall(); System.out.println("Fire ZE MISSILES"); } } public class MouseMovement implements MouseMotionListener { public void mouseDragged(MouseEvent e) { double dBase, dHeight, dAngle; dBase = e.getX() - pnlCannon.rectCannon.getX(); dHeight = pnlCannon.rectCannon.getY() - 5 - e.getY() + 10; dAngle = Math.atan2(dHeight, dBase); pnlCannon.dAngle = dAngle; pnlCannon.repaint(); }//http://download.oracle.com/javase/tutori… public void mouseMoved(MouseEvent e) { } } public class MouseAction implements MouseListener { public void mousePressed(MouseEvent e) { double dBase, dHeight, dAngle; dBase = e.getX() - pnlCannon.rectCannon.getX(); dHeight = pnlCannon.rectCannon.getY() - 5 - e.getY() + 10; dAngle = Math.atan2(dHeight, dBase); pnlCannon.dAngle = dAngle; pnlCannon.repaint(); } public void mouseReleased(MouseEvent e) { } public void mouseEntered(MouseEvent e) { } public void mouseExited(MouseEvent e) { } public void mouseClicked(MouseEvent e) { } // From http://www.rgagnon
