[site]: stackoverflow
[post_id]: 4150878
[parent_id]: 
[tags]: 
php global excution inside the class

PHP's define("CONSTANT", "Hello world."); is global function which is you can call it even if your inside the class or function. I have example below and let's say inside the class I declare a global variable supposed to be like private global $allForm ; my question how can i call the $this->allForm inside validate() without embedding the $this->validate() inside the __construct? $authentication = new authentication("1", "nanat", "amew", "yes" ); // declared define constant class authentication extends mySession { private $allForm; //variable public function __construct($submit, $user, $password, $remmeber) { $this->allForm = array('giSub' => $submit, 'giUser' => $user, 'giPas' => $password, 'giRemmeb' => $remmeber); //execute // $this->validate(); //not execute // $this->validateOne(); //not execute // $this->validateTwo() //not execute } private function validate() { var_dump($this->allForm); // return null // statement... } private function validateOne() { var_dump($this->allForm); // return null // statement... } private function validateTwo() { var_dump($this->allForm); // return null // statement... } } what i want is.. is this possible? class authentication extends mySession { private $allForm; //global variable.. public function __construct($submit, $user, $password, $remmeber) { $this->allForm = array('giSub' => $submit, 'giUser' => $user, 'giPas' => $password, 'giRemmeb' => $remmeber); //execute } private function validate() { var_dump($this->allForm); // return true // statement... } private function validateOne() { var_dump($this->allForm); // return true // statement... } private function validateTwo() { var_dump($this->allForm); // return true // statement... } }
