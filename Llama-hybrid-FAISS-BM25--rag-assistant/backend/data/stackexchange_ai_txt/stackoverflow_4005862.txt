[site]: stackoverflow
[post_id]: 4005862
[parent_id]: 
[tags]: 
Summary tag for django templates

From time to time I have to write some simple summarized reports using Django. First I tried using Django ORM aggregates and interleaving results, but it can get a bit messy and I loose all the ORM laziness - just doesn't feels right. Lately I wrote a generic iterator class that can group/summarize a dataset. In the view it works like: s_data = MyIterator(dataset, group_by='division', \ sum_fields=[ 'sales', 'travel_expenses']) In the template it works like: {% for g, reg in s_data %} {% if g.group_changed %} {{ g.group }} Division {{ g.group_summary.sales }} {{ g.group_summary.travel_expenses }} {% endif %} {{ reg.field }} {{ reg.other_field_and_so_on }} ... {% endfor %} {{ s_data.group }} Division {{ s_data.group_summary.sales }} {{ s_data.group_summary.travel_expenses }} Total {{ s_data.summary.sales }} {{ s_data.travel_expenses }} I think it is a lot more elegant than my previous approach but having to repeat the code for the last group summary violates the DRY principle. I had a look at "Geraldo reporting" but it was not "love at the first sight". Why there is no group/summary template tag, should I write one?
