[site]: crossvalidated
[post_id]: 1598
[parent_id]: 1595
[tags]: 
I don't think there's any argument that the range of statistical packages in cran and Bioconductor far exceed anything on offer from other languages, however, that isn't the only thing to consider. In my research, I use R when I can but sometimes R is just too slow. For example, a large MCMC run. Recently, I combined python and C to tackle this problem. Brief summary: fitting a large stochastic population model with ~60 parameters and inferring around 150 latent states using MCMC. Read in the data in python Construct the C data structures in python using ctypes . Using a python for loop, call the C functions that updated parameters and calculated the likelihood. A quick calculation showed that the programme spent 95% in C functions. However, I didn't have to write painful C code to read in data or construct C data structures. I know there's also rpy , where python can call R functions. This can be useful, but if you're "just" doing statistics then I would use R.
