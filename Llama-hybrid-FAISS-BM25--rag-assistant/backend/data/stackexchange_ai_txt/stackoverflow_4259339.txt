[site]: stackoverflow
[post_id]: 4259339
[parent_id]: 4256455
[tags]: 
This is easier than I first thought, though of course it's nothing Microsoft intended to be done. The following is for the Incident form, so you might have to tweak picklist indexes for the actual form used. In your form's OnLoad code put the following function (the window. part is important lest the function fall out of scope when the OnLoad code is through): window.setFormAssistantPicklist = function() { var plMain = document.getElementById("ContextSelect"); if ((plMain) && (1 == plMain.selectedIndex)) { var plSub = document.getElementById("selObjects"); if (plSub) { plSub.selectedIndex = 1; plSub.fireEvent("onchange"); } else { setTimeout(setFormAssistantPicklist, 1000); } } }; This will check if "Customer" is selected and if the lower pane of the form assistant has been loaded, Customer" is selected, and if so, select "Contact" in the second picklist and fire its OnChange event. If the second picklist cannot be found, the lower pane is still loading (I'm not sure whether there's a way to catch that load call's OnReadyStateChange event, which would of course be more elegant) and we check it again a second later. Now we need to make sure this code is called when the selection in the upper picklist is changed. This also goes in your OnLoad code: var pl = document.getElementById("ContextSelect"); if (pl) { pl.onchange = function () { RelatedInformationPane.LoadContextData(); // this is the standard OnChange code of the lookup selection picklist setFormAssistantPicklist(); } } This will cause the lower pane to be loaded, and then the checks in setFormAssistantPicklist() will be run and possibly the picklist set accordingly.
