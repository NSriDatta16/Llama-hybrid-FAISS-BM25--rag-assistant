[site]: stackoverflow
[post_id]: 2981683
[parent_id]: 2981607
[tags]: 
Of course there is some overhead. What it's hard to define is how much, not because it's hard to measure, but because it's hard to find an alternative which doesn't introduce the risk of being more fragile, bug ridden and poorly scalable. In other words, supposing you are really dying for performance... will you roll out you own server? How will it deal with managing concurrent requests (all hitting the same port)? Will you write your own parser for the HTTP request? Will it be able to work correctly with all browsers? How will you recognize a session from a given client? In other words your question is a bit like asking "do relational DBs introduce a significant overhead when measured against an imaginary custom datastore which nobody has written yet but that would cut out all the unecessary features in favour of raw speed?" My answer: yes, of course. I would still use a DB, because it works now, and has been tuned for lots of things developers take for granted, but are horribly inefficient to reinvent every time you discover you need them for your application. I strongly suggest, in case you haven't already, to have a look at Jetty , and specifically at the WebSockets implementation.
