[site]: stackoverflow
[post_id]: 3982633
[parent_id]: 
[tags]: 
C++ - dynamically use either reference or local variable

I would like to do something like this (I'm aware that this won't compile): struct Container{ vector storage; }; float foo(Container* aContainer){ if(aContainer!=NULL) vector & workingStorage=aContainer->storage; else vector workingStorage; workingStorage.reserve(1000000); ....use workingStorage to calculate something...... return calculated_result; } So - if i pass a Container to the function, i want that the function uses the vector in the container to work with instead of a local variable. If no container is provided, it should use a local variable. of course I could just in the end of the function copy the local variable to the storage of the Container, but that's not what I want to do. Thanks!
