[site]: stackoverflow
[post_id]: 921773
[parent_id]: 921360
[tags]: 
Welcome to the shared memory pool with no VM.... There's not a lot you can do here, but there are a few things (and it's possible it's actually your fault and you can completely fix it). Game developers often recommend their customers reboot before running them for this reason, so you may need to be in the same boat if you really need a lot of memory to be effective. Of course you should try to minimize your own memory footprint. But you should also try to avoid excessive memory fragmentation. Sometimes the problem isn't that there's no memory; there's just no blocks large enough. Sometimes it's better to use a Mutable and keep modifying it rather than generating a new immutable object. This is particularly true of large NSStrings, which can really trash memory. Keep in mind that UIImage +imageNamed: will keep the image around after you release it, so if you don't need them any more, you need to clear those out. Set its name to nil before releasing it to stop it caching. Make sure to run your app under Instruments. You may be eating more memory than you think you are. Don't forget the autorelease pool. If you generate a lot of autoreleased objects in a single event loop, you may need to drain your pool periodically so your don't spike memory. Memory spikes can lead to a program with modest memory requirements suddenly getting killed.
