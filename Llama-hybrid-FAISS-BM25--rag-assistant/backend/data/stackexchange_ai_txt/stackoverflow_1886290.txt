[site]: stackoverflow
[post_id]: 1886290
[parent_id]: 1871657
[tags]: 
If it is read(), write() file-system call you are talking about? Then, AFAIK, you have little or no control over the data scheduling policy of the underlying device. Having said that, it is always better from the application to queue a large chunk of data, such that the number of COMMAND-RESPONSE transactional overhead comes down . BTW, if you are talking about BUS LEVEL READ & WRITE transaction, then in USB2.0, MAXIMUM BULK PACKET SIZE supported is 512 bytes (which is same as the size of 1 sector in most storage devices), and which is good enough. And many times, these PIPES will have PING-PONG implementation in the host buffer, which will mean, anything over 1024 bytes, will effectively wait some-where in the upper layers of the physical hardware (like the Host PC cache ~~~)
