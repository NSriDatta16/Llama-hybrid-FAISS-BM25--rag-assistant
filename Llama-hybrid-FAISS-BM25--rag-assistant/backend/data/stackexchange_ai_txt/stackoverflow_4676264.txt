[site]: stackoverflow
[post_id]: 4676264
[parent_id]: 4676163
[tags]: 
Check the Content-Encoding header: import urllib2 import socket import random import StringIO import gzip def download(source_url): try: socket.setdefaulttimeout(10) agents = ['Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.0)','Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.1)','Microsoft Internet Explorer/4.0b1 (Windows 95)','Opera/8.00 (Windows NT 5.1; U; en)'] ree = urllib2.Request(source_url) ree.add_header('User-Agent',random.choice(agents)) ree.add_header('Accept-encoding', 'gzip') opener = urllib2.build_opener() response = opener.open(ree) encoding=response.headers.getheader('Content-Encoding') content = response.read() if encoding and 'gzip' in encoding: compressedstream = StringIO.StringIO(content) gzipper = gzip.GzipFile(fileobj=compressedstream) data = gzipper.read() return data else: return content except urllib2.URLError as e: return "" data=download('http://api.stackoverflow.com/1.0/questions/3708418?type=jsontext') print(data) If you are dealing with a server which does not report the Content-Encoding as gzip, then you could be more aggressive by just try ing first: def download(source_url): try: socket.setdefaulttimeout(10) agents = ['Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.0)','Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.1)','Microsoft Internet Explorer/4.0b1 (Windows 95)','Opera/8.00 (Windows NT 5.1; U; en)'] ree = urllib2.Request(source_url) ree.add_header('User-Agent',random.choice(agents)) ree.add_header('Accept-encoding', 'gzip') opener = urllib2.build_opener() response = opener.open(ree) content = response.read() compressedstream = StringIO.StringIO(content) gzipper = gzip.GzipFile(fileobj=compressedstream) try: data = gzipper.read() except IOError: data = content return data except urllib2.URLError as e: return ""
