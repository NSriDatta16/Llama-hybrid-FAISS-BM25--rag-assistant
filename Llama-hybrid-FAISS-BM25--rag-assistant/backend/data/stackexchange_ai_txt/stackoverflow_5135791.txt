[site]: stackoverflow
[post_id]: 5135791
[parent_id]: 5135693
[tags]: 
Yes, macros are pretty much a mess. typedef was added to the language quite a while after most of the rest of the language was complete. It uses the same syntax as a storage class: static int x; extern int y; typedef int z; These define x , y and z as all being int -- the difference is that x and y are objects of type int , and z is basically an alias for int itself. As such, typedef fits with the language proper reasonably well, and it's (as usual) the preprocessor that's really the "odd man out." At the same time, you could argue that the rest of the language should change as well. Just for an obvious example, Pascal roughly reversed the order of things: type z = integer; var x : integer; While it doesn't make a lot of difference for trivial examples, I think this is rather simpler to read, especially when you deal with more complex declarations. For better or worse, however, Pascal has (mostly) fallen out of favor, and newer languages like Java have retained this particular part of C syntax (i.e., the part of C they kept was the one thing most in need of being changed).
