[site]: stackoverflow
[post_id]: 3718957
[parent_id]: 3718398
[tags]: 
I don't know whether my point will convince you or not, but here it is. Practicing unit testing even in small applications will grow you more comfortable to work with them. Sometimes, you better learn or practice in small apps coding than bigger projects; Smaller or bigger project, only for a matter of your reputation as a quality developer, unit testing your code will make it less defective not to say mostly flawless code. Furthermore, any application deserves to be well developped; Taking the habit to unit test any project you develop will make yourself a better programmer; I see TDD as a work methodology, and as such, why developing with different methodologies when the project is smaller? I see, personally, see no advantages. Use the same techniques, approach and methodologies on either smaller or bigger projects, this will light up some automaticism to unit test any portion of your code, and you will come to no longer have to think about the tests to write for code coverage, you will write them in advance resulting in less omissions, as you always do your work the same way; In the situation where another guy has to correct or to add a feature that is more complex, this will make sure that he has to test his things when something goes wrong, since yours will all be in advance tested. So this guy can build up on solid foundation, that is, your quality code; Adopting one way of developing, such as unit testing everything you do, small or big, is for me like optimizing and factoring my code. Using always one function that does it for me. I create a project, and I call the function to write the unit tests of my project. That like beginning a project always the same way. This will grow easier and easier for you. Finally, I don't know whether I convinced you about my points of view, but at least I do hope that this bring you good points of reflection so that you may come to your own decision regarding your needs. Have a nice day!
