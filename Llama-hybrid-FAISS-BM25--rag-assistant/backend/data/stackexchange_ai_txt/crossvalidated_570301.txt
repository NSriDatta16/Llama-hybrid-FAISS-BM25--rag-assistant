[site]: crossvalidated
[post_id]: 570301
[parent_id]: 570296
[tags]: 
Supervision has to do with the objective that the network is trained on - not with the network itself. An example of a "supervised" objective is to get a network to classify images into categories that humans have already labeled. You're telling the network exactly how it should behave for every input in the training set. This image should get the label "dog", that image should get the label "platypus" and so forth. This is a way of training that requires a lot of human input or "supervision". Unsupervised training methods use an objective that requires (almost) no human input. For instance, an autoencoder is trained to encode images in such a way that the input image can be accurately reconstructed from its encoded representation. The objective then is to minimize (e.g.) the mean squared-error loss between the reconstructed images and the actual pixel values. This requires no input from humans (as far as telling the network what output it should give for a particular input). Can any network be trained with or without supervision? In principle, yes. However, there are usually certain parts of the network that are specific to the output that network is expected to give, and not every output is suited to both supervised and unsupervised objectives. For instance, a network for image classification probably has an output layer that spits out probabilities of different classes. That output is linked to the objectives that such a network can be trained on. E.g. you cannot train this exact network on an image-reconstruction objective, without altering the architecture in such a way that the network produces images as output. In other words, architectures typically reflect the task(s) that a network is designed for, and not every task can (easily) be cast into both supervised and unsupervised forms. So in that sense you could describe a particular architecture as "supervised", if it was designed for a supervised task or training objective. But if you're talking about a whole class of models, like all CNNs, you can't (typically) say that they are one or the other, because within any model class you (typically) have room to design a specific architecture to allow either supervised or unsupervised learning. And in any case, it is better to keep these concepts separate in your mind, since architectures and training objectives may be correlated but are very different things.
