[site]: stackoverflow
[post_id]: 1198707
[parent_id]: 1198483
[tags]: 
OK, I've figured out how to do it, but it's not exactly elegant. First of all, I lifted the CopyClipboard function from Jeff Wilcox's Blog . Now I've written code to generate an HTML table from the grid, and put that into the clipboard. private void Clipboard_Button_Clicked(object sender, RoutedEventArgs e) { StringBuilder sb = new StringBuilder(); sb.Append(" "); foreach (object obj in myDataGrid.ItemsSource) { sb.Append(" "); foreach (DataGridColumn c in myDataGrid.Columns) { sb.Append(" "); FrameworkElement el = c.GetCellContent(obj); TextBlock tb = el as TextBlock; if (tb != null) { string s = tb.Text; sb.Append(System.Windows.Browser.HttpUtility.HtmlEncode(tb.Text)); } sb.Append(" "); } sb.Append(" "); } sb.Append(" "); Clipboard.SetText(sb.ToString()); } It's especially bad because it's calling clipboardData.Invoke("setData", "text", text); rather than clipboardData.Invoke("setData", "text/html", text); Because the second one throws a "System.InvalidOperation" exception. That means if you copy it into Word instead of Excel it isn't a table, it's a block of HTML. But, yes, copying the datagrid contents to Excel via the clipboard is possible. Sort of.
