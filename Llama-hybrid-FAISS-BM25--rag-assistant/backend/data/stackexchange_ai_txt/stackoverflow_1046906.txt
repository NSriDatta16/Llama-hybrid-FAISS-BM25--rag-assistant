[site]: stackoverflow
[post_id]: 1046906
[parent_id]: 1046871
[tags]: 
I would recommend taking time to make sure the design doesn't hinder this kind of separation in the future, but implement it as a single database. It smells of premature optimization. There are a lot of high-powered database servers that can perform equally well under high load. Even still, there are solutions for replication that can be done as multiple servers with custom data replication, or back-end data accessing the same physical storage via fiber. I think you will save a lot of potentially needless work by avoiding this early in your project's implementation. But it won't take a lot of time to forsee a method by which it could be accomplished in the future (via class design, 3-tier architecture, or even database stored procedures (icky) ).
