[site]: stackoverflow
[post_id]: 2937166
[parent_id]: 2635581
[tags]: 
CLOBs are substantially more expensive (slower) and more difficult to work with than VARCHAR2. If you needlessly use CLOB instead of VARCHAR2 you are suffering a performance penalty that is measurable. In the end you should as was noted earlier, use the right datatype for the right job. 1) if you are storing 4000 bytes or less in the database, use VARCHAR2 otherwise use CLOB. 2) if you are storing 32k bytes or less in PLSQL use VARCHAR2 otherwise use CLOB. It is all about what you need. If your data can exceed a VARCHAR2 limit then use CLOB otherwise use VARCHAR2. As for clear negatives, consider that when working with LOB datatypes of any kind, a LOB can be either TEMPORARY (never stored in a real row in a table) or PERMANENT (stored in a real row in a table). If you dynamically build a CLOB in PLSQL and pass that CLOB out to JAVA or someother external client then you have created a temporary CLOB and pushed it outside the control of the Oracle database. This means your code that accepts the temporary CLOB is now responsible for releasing the CLOB when it is done with it. Your code must have a method native to its environment that you can use for this purpose. If you fail to do so, you temporary storage tablespace will eventually fill and your database will stall (stop working). It won't crash, it just does not work. A reboot will likely be needed. The problem is that many development tools (many versions of java for example) do not have the needed library call. Good luck.
