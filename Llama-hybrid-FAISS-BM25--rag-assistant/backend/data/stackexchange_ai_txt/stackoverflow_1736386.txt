[site]: stackoverflow
[post_id]: 1736386
[parent_id]: 1736294
[tags]: 
If you are doing heavy calculations maybe spawning a new thread is a good idea. Here I have an activityIndicator displayed and starts a large XMLParse operation in a background thread: - (void) setSearchParser { activityIndicator = [[ActivityIndicatorView alloc] initWithActivity]; [self.view addSubview:activityIndicator]; [NSThread detachNewThreadSelector:@selector(getSearchResults:) toTarget:self withObject:[searchParser retain]]; } then the getSearchResults method: - (void) getSearchResults: (SearchResultParser *) parser { NSAutoreleasePool* pool = [[NSAutoreleasePool alloc] init]; [parser startParser]; [self performSelectorOnMainThread:@selector(searchResultsReady:) withObject:[parser data] waitUntilDone:NO]; [pool release]; } So firstly make a new thread: [NSThread detachNewThreadSelector:@selector(getSearchResults:) toTarget:self withObject:[searchParser retain]]; this means that all code inside the getSearchResults will be executed on a different thread. getSearchResults also get's passed a parameter of "searchParser" thats a large object that just needs startParse called on it to begin. This is done in getSearchResults. When the [parser startParser] is done, the results is passed back to the main thread method called "searchResultsReady" and the threads autorelease pool is released. All the time it took from my parser began to it had finished, a gray view covered the screen an an activityIndicator ran. You can have the small activityIndicator class I wrote: -(id) initWithActivity { [self initWithFrame:[self bounds]]; [self setBackgroundColor:[UIColor blackColor]]; [self setAlpha:0.8]; activityView = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge]; activityView.center = CGPointMake(160, 240); [self addSubview:activityView ]; [activityView startAnimating]; return self; } - (void) dealloc { [activityView release]; [super dealloc]; } Hope it helps you out, even though threads seems a bit confusing, they can help to make the UI not freeze up, which is especially important on the iPhone.
