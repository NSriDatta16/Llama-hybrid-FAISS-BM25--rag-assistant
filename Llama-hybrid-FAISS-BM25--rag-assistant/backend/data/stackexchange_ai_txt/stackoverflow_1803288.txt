[site]: stackoverflow
[post_id]: 1803288
[parent_id]: 1801431
[tags]: 
Generally I concur with Ether's post; this will typically be more about low-level optimisation than algorithmic stuff. Knowing good algorithms comes in handy, but there are many cases in games where you prefer the O(N) solution over the O(logN) solution because the first is far friendlier on the cache and requires less memory management. So you need a more holistic knowledge. Perhaps on a more general level, the job may want to know if you can do some or all of the following: use a CPU profiler (eg. VTune, CodeAnalyst) in both sampling and call graph mode; use graphical profilers (eg. Microsoft Pix, NVPerfHud) write your own profiling/timer code and generate useful output with it; rewrite functions to remove dynamic memory allocations; reorganise and reduce data to be more cache-friendly; reorganise data to make it more SIMD-friendly; edit graphics shaders to use fewer and cheaper instructions; ...and more, I'm sure.
