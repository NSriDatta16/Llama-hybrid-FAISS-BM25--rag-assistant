[site]: stackoverflow
[post_id]: 669997
[parent_id]: 669957
[tags]: 
Create the new database the way you think it should be structured. Create an importError table in the new database with columns like "oldId" and "errorDesc" Write a straightforward, procedural, legible script that attempts to select a row from the old structure and insert it into the new structure. If an insert fails, log as specific an error as possible to the importError table (specifically, why the insert failed). Run the script. Validate the new data. Check whether there are errors logged to the importError table. If the data is invalid or there are errors, refactor your script and run it again, possibly modifying your new database structure where necessary. Repeat steps 1-5 until you have a solid conversion script. The result of this process will be that you have: a) a new db structure that is validated against the old structure and tested against "pragmatism"; b) a log of potential issues you may need to code against (such as errors that you can't fix through your conversion because they require a concession in your schema that you don't want) (I might note that it's helpful to write the script in your scripting/programming language of choice, rather than in, say, SQL.)
