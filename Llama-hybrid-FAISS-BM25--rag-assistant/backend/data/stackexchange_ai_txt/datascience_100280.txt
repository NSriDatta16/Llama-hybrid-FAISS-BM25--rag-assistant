[site]: datascience
[post_id]: 100280
[parent_id]: 100272
[tags]: 
You can calculate the text similarity using Transformers. With transformers, we can get better accuracies. Try the following code: pip install sentence-transformers==1.2.1 from sentence_transformers import SentenceTransformer model = SentenceTransformer('distilbert-base-uncased') sen = [ "Software Engineer", "Soft. Engineer" , "Software Eng", "Senior Software Engineer", ] sen_embeddings = model.encode(sen) from sklearn.metrics.pairwise import cosine_similarity #let's calculate cosine similarity for sentence 0: cosine_similarity( [sen_embeddings[0]], sen_embeddings[1:] ) If the similarity score is greater than 0.6 ( or 0.7), you can assume the texts to be similar.
