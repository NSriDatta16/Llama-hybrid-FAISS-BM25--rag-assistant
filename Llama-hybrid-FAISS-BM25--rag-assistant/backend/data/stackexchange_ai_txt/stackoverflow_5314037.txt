[site]: stackoverflow
[post_id]: 5314037
[parent_id]: 
[tags]: 
any more optimisation I can do for this function?

I have a simple box blur function in a graphics library (for JavaScript/canvas, using ImageData) I'm writing. I've done a few optimisations to avoid piles of redundant code such as looping through [0..3] for the channels instead of copying the code, and having each surrounding pixel implemented with a single, uncopied line of code, averaging values at the end. Those were optimisations to cut down on redundant lines of code. Are there any further optimisations I can do of that kind, or, better still, any things I can change that may improve performance of the function itself? Running this function on a 200x150 image area, with a Core 2 Duo, takes about 450ms on Firefox 3.6, 45ms on Firefox 4 and about 55ms on Chromium 10. Various notes expressive.data.get returns an ImageData object expressive.data.put writes the contents of an ImageData back to a canvas an ImageData is an object with: unsigned long width unsigned long height Array data , a single-dimensional data in the format r, g, b, a, r, g, b, a ... The code expressive.boxBlur = function(canvas, x, y, w, h) { // averaging r, g, b, a for now var data = expressive.data.get(canvas, x, y, w, h); for (var i = 0; i
