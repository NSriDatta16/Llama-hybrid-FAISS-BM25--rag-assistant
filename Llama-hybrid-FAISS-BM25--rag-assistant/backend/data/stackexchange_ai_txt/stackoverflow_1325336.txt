[site]: stackoverflow
[post_id]: 1325336
[parent_id]: 1325025
[tags]: 
Depending on the size of your application and the number of users a Guid may not be the best choice unless you know how to handle them. Most often I have seen these used as strings, which only increases your storage requirement and slows down your comparison routines. A string comparison of a guid on a match has to scan all 36 characters. Way overkill for data which is just stored in hex format. Its better to save the GUID as an array of integers...you reduce the search while at the same time reducing the storage requirements. If you only have a few thousand records, then guid as string is probably not going to matter much. But if your programming for scale, and that scale is large, then proper adjustments now will save you the pain of doing it later. IF you are doing joins on tables, use an integer identity to do the join, not the guid (for the same reasons already mentioned).
