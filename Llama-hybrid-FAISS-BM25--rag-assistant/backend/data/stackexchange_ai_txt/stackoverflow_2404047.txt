[site]: stackoverflow
[post_id]: 2404047
[parent_id]: 2403988
[tags]: 
The former is 3NF, properly normalized data. 1) Any indexing considerations? Indexes are not automatically created for foreign keys. Index creation on a foreign key makes sense - it's a very likely to be used as criteria, but the data and access to it should be considered. MySQL has a limit on the amount of space for allocating indexes (no others do that I'm aware of), and while indexes help data retrieval, they also impact INSERT/UPDATE/DELETE statements. If dealing with SQL Server, I highly recommend reading Kim Tripp's The Tipping Point series . 2) Any query optimization issues? I know the former method requires a JOIN, but I don't expect that to be taxing to SQL 2008. A join is the most preferred means of data retrieval and manipulation, vs say a subquery...
