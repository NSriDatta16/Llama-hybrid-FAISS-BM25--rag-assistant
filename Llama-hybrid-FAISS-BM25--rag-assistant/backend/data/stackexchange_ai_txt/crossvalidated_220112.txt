[site]: crossvalidated
[post_id]: 220112
[parent_id]: 219830
[tags]: 
tl;dr If you have enough example pairs such that you know the characteristics of both samples in the pairs and the rank preferences (A should have higher rank than B), you can pose it as a learning to rank problem. Details For a given sample with inputs represented by vector say X, your current weighting procedure is doing dot product X*W and the resulting single number is used to decide the ranking. Now you want to find W such that most of the rankings agree with your intuition. So you could pose this as a learning to rank problem. Though, you'll have to study learning to rank a bit on what your feature vectors should represent. Most of the literature that I've studied so far typically has a pair of information on the input side. For example, in learning to rank documents for a given query, the X or independent variables correspond to various similarity calculations between document and query. From the information that you've provided, it appears there's no equivalent query in your case, you are just trying to arrive at a static mapping. On the part of doing small changes to adapt the weights, you can further use Bayesian approach such that the current weight values are given as priors to learning phase. Every time you have newer data, you re-run the fitting algorithm such that the posterior gets updated. Hope this helps.
