[site]: stackoverflow
[post_id]: 2410694
[parent_id]: 2410180
[tags]: 
Well, if you don't find one, you can always monkey-patch FasterCSV::Row class, something like: class FasterCSV::Row def method_missing(m,*args) if self.field?(m.to_s) return self[m.to_s] else super end end end (Haven't tried the code myself.) PS. As you are generalizing data retrieval mechanism, I assume that CSV is just one of several data sources you plan to support. The logical thing then would be to create a single wrapper class for each of your data sources, with some common interface (which might or might not use accessors for accessing row fields). But underneath it should still access CSV row usual way, using [] method. So, as Glenjamin already asked, why do you need this at all? ;)
