[site]: stackoverflow
[post_id]: 4924437
[parent_id]: 4924350
[tags]: 
This is an often asked question here . You should look at the MVC design pattern . Your dictionary would be a model in this scenario and all the controllers/views that need to access it should have their own property for it. The loading can be done in another controller/view with a progress bar, in the application delegate or in the first tab; that depends on your situation. The classes would look a bit like this: @interface Model : NSObject {…} - (void) load; @end @interface ControllerA : UIViewController {…} @property(retain) Model *model; @end @interface ControllerB : UIViewController {…} @property(retain) Model *model; @end @implementation ApplicationDelegate - (void) applicationDidFinishLaunchingAndWhateverElseIsUsuallyHere { Model *model = [[Model alloc] init]; [model load]; ControllerA *controllerA = [[ControllerA alloc] init…]; [controllerA setModel:model]; ControllerB *controllerB = [[ControllerB alloc] init…]; [controllerB setModel:model]; [model release]; // The syntax here is probably off, you should get the idea UITabBarController *tabs = …; [tabs setViewControllers:controllerA, controllerB, nil]; [window addSubview:tabs.view]; [window makeKeyAndVisible]; }
