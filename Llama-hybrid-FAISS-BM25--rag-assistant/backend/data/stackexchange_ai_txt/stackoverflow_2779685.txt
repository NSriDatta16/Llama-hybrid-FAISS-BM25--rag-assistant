[site]: stackoverflow
[post_id]: 2779685
[parent_id]: 2779649
[tags]: 
Count is a member variable of the class Foo . As Foo is a reference type it is stored on the heap not the stack. If you created only 1 Foo object and allowed two separate threads to call the TrySomething() method, they would both be calling the method on the same object (stored on the heap), and both would attempt to increment the same member as it's part of that same object. (See Darin's sample code ) The difference between structs and classes is not whether they are stored on the heap or the stack. This is a common misconception. Think of classes as pointers to storage on the heap. Think of structs as direct values being stored locally. At a very simple level, this does mean that structs are often stored on the stack, it's certainly not true in all cases as this example shows.
