[site]: datascience
[post_id]: 50908
[parent_id]: 37154
[tags]: 
To use a seq2seq neural network for timeseries regression (and not forecasting, as everybody seems to be doing), a simple Keras model could be inputs = Input(shape=(n_timesteps, n_features)) x = LSTM(n_units, return_sequences = True)(inputs) outputs = Dense(1, activation="linear")(x) where you output a single value in the final layer, with linear activation, so that no scaling is applied. Then a common choice is to minimize MSE with your favorite optimizer - usually RMSprop for timeseries. Then, if you add convolutions and pooling layers, be sure to set padding = "same" , to maintain the sequence length throughout the layers, or fix downsampled timesteps with RepeatVector to match the input sequence length. Specific choice of layers may be problem-dependent.
