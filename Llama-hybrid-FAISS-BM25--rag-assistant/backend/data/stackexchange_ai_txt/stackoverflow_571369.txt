[site]: stackoverflow
[post_id]: 571369
[parent_id]: 568827
[tags]: 
1) Simulations (Ants and Mycelium) It's easy to leverage async workflows to make for massively parallel simulations. 2) Unit Tests for C# API F# makes for short, sweet and very readable tests. Also, FsStory is quite nice. 3) Data Analysis and Visualization It has great visualization libraries and it's very fast to try different things out. I also love VSLab and hope it sees another release soon. 4) Rapid XNA Development Once you have a small framework set up to keep the object-orientedness of XNA at bay, F# development is much faster and also much easier to experiment with. In short, I find F# to be fantastic anywhere development speed or immutability trumps API correctness. If there was a pragma or compiler flag to turn off type inference for public functions and type definitions, I'd probably be pushing to use it for my APIs as well.
