[site]: stackoverflow
[post_id]: 3393384
[parent_id]: 3388855
[tags]: 
In my opinion they should be equivalent, but for some dependencies, LATEST does not match any version, whereas [0,) does. In theory, LATEST is the latest released or snapshot version (see Rich Seller's excellent answer on the special RELEASE and LATEST versions) so I would indeed expect the same behavior as with the [0,) range. Out of curiosity, can you provide an example where LATEST doesn't match? That being said, I don't recommend using the LATEST nor RELEASE special versions as they make your build more fragile and harm the build reproducibility (you don't really want your build to suddenly start to fail because of some uncontrolled update). Admittedly, they're considered as a bad idea and references have been removed from the documentation (except from an untranslated part of the German version of the Definitive Guide) and they are no longer supported in Maven 3.x . You are thus strongly invited to not use them at all (bad practice, deprecated, not supported in the next version). And I somehow consider the same applies to version ranges (in general), I don't recommend them either as I wrote many times in previous answers or comments. See for example: Managing maven dependancies - New Versions and Non-Repo libraries Maven automatic SNAPSHOT update Debugging Maven’s “The artifact has no valid ranges” Follow-up after comment Here's an example (among many): aspectj aspectjrt [0,) -> matches version 1.5.3 Whereas: aspectj aspectjrt LATEST -> cannot be resolved I'm not 100% but I don't think this artifact is providing the right maven-metadata.xml for this feature to work. I think metadata should include and elements like for maven plugins (see for example this maven-metadata.xml ). But I wouldn't spend too much time on this for the aforementioned reasons, just forget this LATEST stuff.
