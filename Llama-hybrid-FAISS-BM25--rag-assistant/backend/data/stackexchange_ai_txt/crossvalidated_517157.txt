[site]: crossvalidated
[post_id]: 517157
[parent_id]: 
[tags]: 
Simple LassoRegression Outperforming Tensorflow?

I am trying to predict the bookings of a stand-up comedian cafe. There are a lot of features I can use which have an affect on the number of sales. (e.g. day of the year, weather, average sales last month, day of the week, average sales on the specific day of the week etc.) The goal is to predict the sales of the company for the upcomming week. During the week we would like to keep executing the prediction. Due to the fact reservations are obtained and we get closer to the deadline of a show the model its accuracy should increase steadily. We start making predictions 120 hours (5 days) before the start of a show. Currently I use the following features to make the prediction: avg_30 . Average daily sales in the last 30 days avg_60 . Average daily sales in the last 60 days vacation . hot/cold whether it is a vacation day LongtermGrowth ; the number of days the company already excists to measure continuous growth DayofYear . The day of the year. ( min: 1, max: 365) currentHour . The number of hours before the start of the show (min: 0, max: 120) Current sales. The number of sales already obtained Weekday . Each day of the week hot/cold encoded. (moday: 0/1 etc.) Example of how the data looks like: | avg_30 | avg_60 | vacation | longtermGrowth | DayofYear | curHour | current sales | Monday | 162 | 241 | 1 | 1837 | 2 | 120 | 21 | 1 | | 167 | 238 | 1 | 1838 | 3 | 96 | 118 | 0 | | 169 | 239 | 1 | 1839 | 4 | 72 | 207 | 0 | The task obviously is to perform what the eventual sales are as precisely as possible. I am using Mean Absolute Percentage Error ( MAPE ) as evaluation score. Furthermore, I use a minmax scaler . I do split my train and test data and I measure performance with the test data. However, It seems like the performance of my model can't get any higher than an average MAPE score of 10.8%. This is the case with Lasso Regression with an Alpha parameter of 0.1 . I have tried applying the following other Machine learning algorithms: Support Vector Regression (MAPE: 13.14 with C: 1000) Ridge Regression (MAPE: 11.67 with Alpha: 21.67) ElasticNet (MAPE: 20.08 with Alpha 0.1 and L1 Ratio: 1) DecisionTree (MAPE: 25.18 with Forrest Depth 6000) With some hope to further increase my model I attempted to train a Keras Regression Model. I was currently able to obtain a MAPE of 18.98% with the following model: model = models.Sequential() model.add(layers.Dense(15, activation='tanh', input_shape=[X_train.shape[1]])) model.add(layers.Dense(15, activation='tanh')) model.add(layers.Dense(15, activation='tanh')) # output layer model.add(layers.Dense(1)) model.compile(optimizer='rmsprop', loss='mse', metrics=['mae']) Question: Can someone help me explain why I am not able to obtain any higher scores than with a "simple" Lasso regression model with an Alpha parameter of 0.1 ? I would have assumed I should be possible to obtain much higher performanced with a well trained Keras model. Due to the fact I am new to Keras modelling any advice is highly appreciated. Thanks in advance!
