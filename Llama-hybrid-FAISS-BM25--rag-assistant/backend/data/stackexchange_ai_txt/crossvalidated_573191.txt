[site]: crossvalidated
[post_id]: 573191
[parent_id]: 572730
[tags]: 
You need to take into account both the different numbers of cells from each animal and the likely correlations of responses among replicates/cells taken from each animal. You have more confidence in results that are based on more cells, or more replicates within an animal, so just taking the mean for each animal by itself (whether first done on replicates within animals or not) wouldn't represent your data well. This would best be modeled in a way that respects the nesting of your observations, which is evidently: cells within replicates, replicates within animals, animals within genotypes, and genotypes within 2 experiments. That's typically done with a mixed model. Animals might be treated as random effects, with genotypes and experiments as fixed effects (along with an interaction between genotype and experiment to evaluate potential genotype-effect differences between the experiments). Then you have to decide how to represent the outcome per cell. "Respond to a drug" isn't necessarily an all-or-none thing. If you have some continuous measure of cell response, that could be better to model as an outcome rather than a binary "responded/didn't." A continuous outcome would also be more appropriate for the type of "nested t-test" that you can do with Prism. Percentage outcomes, with their fixed upper and lower limits, don't typically meet the assumptions needed for t-tests. For percentage outcomes, a binary-outcome regression like logistic regression is a common choice. Some implementations accept a two-column count outcome (success/failure) for each replicate, which would handle the cells per replicate nicely. (Otherwise you need a separate data row for each cell, annotated appropriately.) You also could model the counts directly with a Poisson or negative binomial model, with the (log of the) total number of cells as an "offset" to take into account the different number of cells in each replicate. Both the binomial/logistic regression and the Poisson regression are " generalized linear models ," which I don't think that Prism can handle. Such models are so widely useful, however, that it will be worth learning how to use them. See the "Linked" and "Related" questions on this page, and their links, as a start. Software for implementing such models is freely available from The Comprehensive R Archive network .
