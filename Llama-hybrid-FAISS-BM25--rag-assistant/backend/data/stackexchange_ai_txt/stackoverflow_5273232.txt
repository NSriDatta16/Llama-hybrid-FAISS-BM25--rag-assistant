[site]: stackoverflow
[post_id]: 5273232
[parent_id]: 5272268
[tags]: 
+1 @divillysausages :) then you can do something dirty and monitor "manually" the changes. the MovieClip class is dynamic so we can create variables to store the last X/Y position then perform a delta on EnterFrame. if the delta is not 0 then the clip has moved. that's really ugly: package { import flash.display.MovieClip; import flash.display.Sprite; import flash.events.Event; import flash.events.MouseEvent; public class Mover extends Sprite { private var mc:MovieClip; public function Mover() { mc = new MovieClip(); mc.graphics.beginFill( 0xCC00FF ); mc.graphics.drawRect( 0, 0, 50, 50 ); addChild( mc ); //storing dynamic properties mc.lx = mc.x; mc.ly = mc.y; //and add monitoring function mc.addEventListener( Event.ENTER_FRAME, onEnterFrameHandler ); mc.addEventListener( MouseEvent.MOUSE_DOWN, mouseHandler ); mc.addEventListener( MouseEvent.MOUSE_UP, mouseHandler ); //move clip from outisde // this.addEventListener( Event.ENTER_FRAME, moveClipHandler ); } private function moveClipHandler(e:Event):void { mc.x++ } private function mouseHandler(e:MouseEvent):void { switch( e.type ) { case MouseEvent.MOUSE_DOWN: ( e.target as MovieClip ).startDrag(); break; case MouseEvent.MOUSE_UP: ( e.target as MovieClip ).stopDrag(); break; } } private function onEnterFrameHandler(e:Event):void { var m:MovieClip = e.target as MovieClip; //check the delta if ( m.x != m.lx || m.y != m.ly ) trace( 'moved!' ); m.lx = m.x; m.ly = m.y; } } } but it works :) it would be a good idea to centralize the delta checks in a class that would give the abilty to register / unregister clips and DisplayObjects as needed.
