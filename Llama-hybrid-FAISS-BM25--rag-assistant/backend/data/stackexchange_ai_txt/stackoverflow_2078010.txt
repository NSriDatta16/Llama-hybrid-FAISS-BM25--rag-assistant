[site]: stackoverflow
[post_id]: 2078010
[parent_id]: 
[tags]: 
TFS project structure makes simple things difficult

My team is currently working on an ASP .NET website. We are one of the first teams in our organization to use TFS2008 for source control. When I joined the project, it had already been active for a few months. Below is a diagram of the basic file structure we are using in TFS: $/TfsProject/ | | /* Contains our in-house class libraries. */ |-- Common/ | | | |-- Extensions/ | | |-- Extensions.csproj | | | |-- Loggers/ | |-- Loggers.csproj | | /* Contains third-party libraries. */ |-- Library/ | | | |-- EnterpriseLibrary/ | | | |-- v4.1/ | |-- Microsoft.Practices.EnterpriseLibrary.Common.dll | | /* Contains the website itself. */ |-- Site/ | |-- Packages/ | |-- Packages.csproj | |-- Website.root/ | |-- Website/ |-- Website.sln | |-- Website/ | |-- Website.csproj | |-- Default.aspx | |-- WebsiteUnitTests/ | |-- WebsiteUnitTests.csproj | |-- WebsiteWebControls/ | |-- WebsiteWebControls.csproj | |-- Utilities/ |-- Utilities.csproj The main website solution ( Website.sln ) currently contains fifteen projects (including each of the .csproj files displayed in the diagram). Yesterday a decision was made that the projects contained in the Common directory should be moved into their own solution, and we should include them in the Website by referencing the compiled DLLs instead of the projects themselves. Anytime one of the Common projects is updated, all other projects that use it should begin using the latest version with minimal effort. Is there any easy way to implement this, based on our current hierarchy? I have read the TFS patterns & practices guide, but implementing any its suggestions would require significant changes (as well as updating all of our projects and solutions). Also, our organization is waiting until TFS2010 is released before they enable Team Builds -- so they're unavailable to us.
