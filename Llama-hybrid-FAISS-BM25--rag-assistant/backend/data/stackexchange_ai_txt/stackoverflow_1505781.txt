[site]: stackoverflow
[post_id]: 1505781
[parent_id]: 1505231
[tags]: 
Absolutely positioning all of the elements by default -- as Visual Studio used to -- do is a terrible way to design a site. It was a bad idea then, and it still is now. The issue with absolutely positioning has nothing to do with standards or rendering correctly in browsers (IE5 an NN4 both supported CSS absolute positioning, which was what Visual Studio.NET used to position elements). The problem with Visual Studio's approach was that it stripped out all of the power and elegance of HTML and CSS for the convenience of having a drag-and-drop interface. It was designed to allow developers who didn't know any HTML or CSS to develop web apps. Even trivial changes in HTML/CSS become a nightmare when all of your elements are absolutely positioned. Some of my specific gripes: The general alignment shuffle -- Whenever adding, removing, or resizing an element you had to manually make sure all of the controls were still evenly spaced and that controls didn't overlap. If they did... you just lost the next five minutes of your life to the general alignment shuffle. Nudging controls into place and making sure that everything lined up. Select-all and move -- If the new company logo was 10px taller then the previous one you would end up selecting all of your controls and moving them down 10px... but wait... you somehow managed to miss that one control. Another five minute penalty as you wrangle that control into place. Dynamic content hell -- You placed the description box right below the title... which works most of the time. But now the title has wrapped and is overlapping with the description @#$#%. God forbid you should actually attempt any page with a large amount of dynamic content. Absolutely positioning a few of your elements isn't bad, but unless you're porting a VB6 app to a webform, there's no reason to absolutely position all of them.
