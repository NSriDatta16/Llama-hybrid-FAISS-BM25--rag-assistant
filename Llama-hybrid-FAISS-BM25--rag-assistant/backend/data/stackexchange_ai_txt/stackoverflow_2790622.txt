[site]: stackoverflow
[post_id]: 2790622
[parent_id]: 2790412
[tags]: 
But is there a more elegant option - say, a build of GCC RTL with 2-byte wchar-t quietly sitting somewhere, waiting to be linked? No. This is a platform-specific issue, not a GCC issue. That is to say, the Linux platform ABI specifies that wchar_t is 32-bits wide, so either you have to use a whole new library (for which ICU is a popular choice), or port your code to handle 4-byte wchar_t s. All libraries that you might link to will also assume a 4-byte wchar_t , and will break if you use GCC's -fshort-wchar . But on Linux specifically, nearly everyone has standardized on UTF-8 for all multibyte encodings.
