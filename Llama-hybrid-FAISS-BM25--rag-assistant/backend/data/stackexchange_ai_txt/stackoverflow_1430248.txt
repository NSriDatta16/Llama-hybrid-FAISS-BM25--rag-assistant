[site]: stackoverflow
[post_id]: 1430248
[parent_id]: 
[tags]: 
Using undocumented native code APIs to install items into the GAC

I'm working on a project whose setup uses the APIs documented in Microsoft Knowledge Base article KB317540 to install and uninstall assemblies into the GAC. The KB article states: SUMMARY The native code application programming interfaces (APIs) that allow you to interact with the Global Assembly Cache (GAC) are not documented in the .NET Framework Software Development Kit (SDK) documentation. MORE INFORMATION CAUTION: Do not use these APIs in your application to perform assembly binds or to test for the presence of assemblies or other run time, development, or design-time operations. Only administrative tools and setup programs must use these APIs. If you use the GAC, this directly exposes your application to assembly binding fragility or may cause your application to work improperly on future versions of the .NET Framework. The GAC stores assemblies that are shared across all applications on a computer. The actual storage location and structure of the GAC is not documented and is subject to change in future versions of the .NET Framework and the Microsoft Windows operating system. The only supported method to access assemblies in the GAC is through the APIs that are documented in this article. Most applications do not have to use these APIs because the assembly binding is performed automatically by the common language runtime. Only custom setup programs or management tools must use these APIs. Microsoft Windows Installer has native support for installing assemblies to the GAC. For more information about assemblies and the GAC, see the .NET Framework SDK. Use the GAC API in the following scenarios: When you install an assembly to the GAC. When you remove an assembly from the GAC. When you export an assembly from the GAC. When you enumerate assemblies that are available in the GAC. NOTE: CoInitialize(Ex) must be called before you use any of the functions and interfaces that are described in this specification. What are the pros and cons of this technique? Are these APIs safe to use? Anyone out there using them? If so, why?
