[site]: stackoverflow
[post_id]: 1085013
[parent_id]: 1025624
[tags]: 
Well, I found the solution myself - I'll post it here just in case its useful to someone. The solution required that I write a wrapper class for each version of the CPI DLLs. Each wrapper class exists in its own project so that I can add the references for each CPI DLL to the project as well as a copy of the DLLs. This way I retain the early binding, Intellisense etc. The classes etc within the CPI assemblies are completely hidden from the rest of the projects so I have to add methods to access whatever data etc. I need from the CPI. Copies of the CPI DLLs are also placed in folders beneath the bin\Debug and bin\Release folders of the main project. I use app.config to enable the compiler to locate them and this prevents the DLLs being copied into Debug\Release and overwriting one another. Here's the relevant part of the app.config: Having multiple copies of the CPI DLLs is probably inadvisable, unnecessary and inelegant and I'll look further into this - this is just my PoC solution at this point. Whilst there are multiple DLLs in the CPI, testing suggests that I only need to reference this primary DLL in the app.config. Regards, ShadeSeeker.
