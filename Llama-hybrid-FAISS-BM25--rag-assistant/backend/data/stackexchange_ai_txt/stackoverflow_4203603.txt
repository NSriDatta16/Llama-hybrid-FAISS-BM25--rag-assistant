[site]: stackoverflow
[post_id]: 4203603
[parent_id]: 1696747
[tags]: 
I combined all sorts of ideas and came up with the following: There are - as mentioned - to things to fix. One is the scrollability beyond 100% of table width and the second one is the scrollbar itself. So i'll have some js-file to fix the resizing-problem and some css to add the scrollbar... page.xhtml - your page with some extended-dt inside. ExtendedDatatableFix.css - not that accurate, but hey - room for improvement .extdt-maindiv { margin-bottom: 17px; } .extdt-outerdiv { overflow-x:auto !important; overflow-y:hidden; height: 108% !important; } .extdt-innerdiv { height: 100% !important; } .extdt-content{ overflow-x:hidden; overflow-y:scroll; } ExtendedDataTableHeaderFixScrollable.js - copied from here: http://community.jboss.org/thread/146108 ExtendedDataTable.DataTable.header.prototype.OnSepMouseMove = function(event) { if(this.dragColumnInfo && this.dragColumnInfo.mouseDown) { if(!this.dragColumnInfo.dragStarted) { this.dragColumnInfo.dragStarted = true; this._showSplitter(this.dragColumnInfo.srcElement.columnIndex); } var delta = Event.pointerX(event) - this.dragColumnInfo.startX if (delta this.maxDelta) { delta = this.maxDelta; }*/ var x = this.dragColumnInfo.originalX + delta; var finalX = x - this.minColumnWidth - 6 //6 stands for sep span width; this.columnSplitter.moveToX(finalX); Event.stop(event); } } ExtendedDataTable.DataTable.header.prototype.OnSepMouseUp = function(event) { Event.stop(event); Event.stopObserving(document, 'mousemove', this.eventSepMouseMove); Event.stopObserving(document, 'mouseup', this.eventSepMouseUp); if(this.dragColumnInfo && this.dragColumnInfo.dragStarted) { this.dragColumnInfo.dragStarted = false; this.dragColumnInfo.mouseDown = false; var delta = Event.pointerX(event) - this.dragColumnInfo.startX; if (delta this.maxDelta) { delta = this.maxDelta; }*/ var columnIndex = this.dragColumnInfo.srcElement.columnIndex; var newWidth = this.getColumnWidth(columnIndex) + delta; this.extDt.setColumnWidth(columnIndex, newWidth); this.setColumnWidth(columnIndex,newWidth); this.extDt.updateLayout(); if (this.extDt.onColumnResize){ //set properly value to this.columnWidths this.extDt.columnWidths = ""; for (i=0; i maxWidth) { * c[c.length - 2].width -= (totalWidth - maxWidth); * } */ };
