[site]: stackoverflow
[post_id]: 3543491
[parent_id]: 
[tags]: 
trying to call an interface function throughout an abstract hierarchy of an object instance

I have recently been implementing a templating system for my home-grown web-site generator platform. What I'm currently trying to implement is the use of an interface throughout the template class hierarchy like so (this is just an example): interface IStyleSheet { public function StyleSheetFragment(); } abstract class TemplateBase { public abstract function DoRender(); } abstract class TemplateRoot extends TemplateBase implements IStyleSheet { public function DoRender() { ?> Content1(); ?> Content2(); ?> #content1{ text-align: center; } #content2{ text-align: right; } #foo{ /* styling stuff */ } #bar{ /* more styling stuff */ } now, the view class at the end of the hierarchy is called upon using reflection, what I want to be able to do is cycle through the list of base classes 1 by 1 and call the interface function StyleSheetFragment() in each one without it automatically resolving to the one overridden version in the view class. The other option I was considering was to use static functions but that cannot be enforced with an interface, I could define it in the very base class but again, in that instance there is nothing that will specifically denote the class as being self-styled (so to speak). It really needs to be enforced by type, hence my choosing to use the interface pattern on it. Any comments or suggestions would be most appreciated.
