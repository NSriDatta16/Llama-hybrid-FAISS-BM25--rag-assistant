[site]: stackoverflow
[post_id]: 4617465
[parent_id]: 
[tags]: 
Parsing YAML-like text file into hash structure

I've got the text file: country = { tag = ENG ai = { flags = { } combat = { ROY WLS PUR SCO EIR FRA DEL USA QUE BGL MAH MOG VIJ MYS DLH GUJ ORI JAI ASS MLC MYA ARK PEG TAU HYD } continent = { "Oceania" } area = { "America" "Maine" "Georgia" "Newfoundland" "Cuba" "Bengal" "Carnatic" "Ceylon" "Tanganyika" "The Mascarenes" "The Cape" "Gold" "St Helena" "Guiana" "Falklands" "Bermuda" "Oregon" } region = { "North America" "Carribean" "India" } war = 50 ferocity = no } date = { year = 0 month = january day = 0 } } What I'm trying to do is to parse this text into perl hash structure, so that the output after data dump looks like this: $VAR1 = { 'country' => { 'ai' => { 'area' => [ 'America', 'Maine', 'Georgia', 'Newfoundland', 'Cuba', 'Bengal', 'Carnatic', 'Ceylon', 'Tanganyika', 'The Mascarenes', 'The Cape', 'Gold', 'St Helena', 'Guiana', 'Falklands', 'Bermuda', 'Oregon' ], 'combat' => [ 'ROY', 'WLS', 'PUR', 'SCO', 'EIR', 'FRA', 'DEL', 'USA', 'QUE', 'BGL', 'MAH', 'MOG', 'VIJ', 'MYS', 'DLH', 'GUJ', 'ORI', 'JAI', 'ASS', 'MLC', 'MYA', 'ARK', 'PEG', 'TAU', 'HYD' ], 'continent' => [ 'Oceania' ], 'ferocity' => 'no', 'flags' => [], 'region' => [ 'North America', 'Carribean', 'India' ], 'war' => 50 }, 'date' => { 'day' => 0, 'month' => 'january', 'year' => 0 }, 'tag' => 'ENG' } }; Hardcoded version might look like this: #!/usr/bin/perl use Data::Dumper; use warnings; use strict; my $ret; $ret->{'country'}->{tag} = 'ENG'; $ret->{'country'}->{ai}->{flags} = []; my @qw = qw( ROY WLS PUR SCO EIR FRA DEL USA QUE BGL MAH MOG VIJ MYS DLH GUJ ORI JAI ASS MLC MYA ARK PEG TAU HYD ); $ret->{'country'}->{ai}->{combat} = \@qw; $ret->{'country'}->{ai}->{continent} = ["Oceania"]; $ret->{'country'}->{ai}->{area} = ["America", "Maine", "Georgia", "Newfoundland", "Cuba", "Bengal", "Carnatic", "Ceylon", "Tanganyika", "The Mascarenes", "The Cape", "Gold", "St Helena", "Guiana", "Falklands", "Bermuda", "Oregon"]; $ret->{'country'}->{ai}->{region} = ["North America", "Carribean", "India"]; $ret->{'country'}->{ai}->{war} = 50; $ret->{'country'}->{ai}->{ferocity} = 'no'; $ret->{'country'}->{date}->{year} = 0; $ret->{'country'}->{date}->{month} = 'january'; $ret->{'country'}->{date}->{day} = 0; sub hash_sort { my ($hash) = @_; return [ (sort keys %$hash) ]; } $Data::Dumper::Sortkeys = \hash_sort; print Dumper($ret); I have to admit I have a huge problem dealing with nested curly brackets. I've tried to solve it by using greedy and ungreedy matching, but it seems it didn't do the trick. I've also read about extended patterns (like (?PARNO)) but I have absolutely no clue how to use them in my particular problem. Order of data is irrelevant, since I have the hash_sort subroutine. I'll apprieciate any help.
