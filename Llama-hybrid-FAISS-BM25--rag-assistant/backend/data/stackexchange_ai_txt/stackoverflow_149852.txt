[site]: stackoverflow
[post_id]: 149852
[parent_id]: 
[tags]: 
profile program's speed on Linux

I have a couple variants of a program that I want to compare on performance. Both perform essentially the same task. One does it all in C and memory. The other calls an external utility and does file IO. How do I reliably compare them? 1) Getting "time on CPU" using "time" favors the second variant for calling system() and doing IO. Even if I add "system" time to "user" time, it'll still not count for time spent blocked on wait(). 2) I can't just clock them for they run on a server and can be pushed off the CPU any time. Averaging across 1000s of experiments is a soft option, since I have no idea how my server is utilized - it's a VM on a cluster, it's kind of complicated. 3) profilers do not help since they'll give me time spent in the code, which again favors the version that does system() I need to add up all CPU time that these programs consume, including user, kernel, IO, and children's recursively. I expected this to be a common problem, but still don't seem to find a solution. (Solved with times() - see below. Thanks everybody)
