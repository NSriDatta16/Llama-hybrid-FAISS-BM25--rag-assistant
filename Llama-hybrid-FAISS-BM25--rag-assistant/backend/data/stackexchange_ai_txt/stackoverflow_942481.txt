[site]: stackoverflow
[post_id]: 942481
[parent_id]: 
[tags]: 
Refactoring advice for big switches in C#

I have an application in C#/Winforms that lets users place objects on a grid to create levels for a game. It has several tools for placing tiles/lights/doors/entities etc. Currently I just use an enum for storing the currently selected tool and have a switch statement to run each tools code. As I've been adding more tools to the application it's starting to get spaghetti like, with lots of duplicated code. Here is a cutdown version of the mouse down function in my editor class: public void OnEditorViewMouseDown(Point mousePos) { // Check if the click is out of bounds. if (IsLocationOOB(mousePos)) return; if (CurrentTool == ToolType.GroundTile) { // Allow drags along whole tiles only. m_DragManager.DragType = DragManager.DragTypeEnum.Tile; m_DragManager.StartDrag(mousePos); } else if (CurrentTool == ToolType.WallTile) { // Allow drags along grid edges only. m_DragManager.DragType = DragManager.DragTypeEnum.Edge; m_DragManager.StartDrag(mousePos); } else if (CurrentTool == ToolType.PostTile) { // Allow drags along grid points only. m_DragManager.DragType = DragManager.DragTypeEnum.Point; m_DragManager.StartDrag(mousePos); } else if (CurrentTool == ToolType.AreaLight) { // Allow drags anywhere. ie. not snapped to the grid in some way. m_DragManager.DragType = DragManager.DragTypeEnum.FreeForm; m_DragManager.StartDrag(mousePos); } else if (CurrentTool == ToolType.PointLight) { m_CurrentWorld.AddLight(TranslateToWorldCoords(mousePos)); } else if (CurrentTool == ToolType.PlaceEntity) { m_CurrentWorld.PlaceEntity(TranslateToWorldCoords(mousePos)); } } The switch is used in several other functions (OnMouseMove, OnMouseUp) and it seems like bad design (big switch copied in several functions). Any advice for refactoring something like this in a cleaner and more extensible way? I'm currently thinking of having a base Tool class and having each tool it's own class that overrides the functions it uses (OnMouseDown() etc.). Does this sound sensible? Thanks for reading.
