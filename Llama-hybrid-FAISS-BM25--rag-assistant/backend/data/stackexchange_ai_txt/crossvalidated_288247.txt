[site]: crossvalidated
[post_id]: 288247
[parent_id]: 192168
[tags]: 
You may find other answers easier to find if you change your terminology: when you have a collection of zero-dimensional values, you can measure its dispersion by taking the variance or the standard deviation. If you want to store them all, then it probably makes sense to stuff them into a one-dimensional vector, but you could just as easily have a two-dimensional collection, for example, the pixels in an image. The point is: the things whose dispersion you're trying to measure are each just numbers, zero-dimensional objects, so you can use the standard deviation or the variance. If you have one-dimensional things whose dispersion you want to measure - for example, you have a bunch of objects and for each one, several measured quantities - then you need something more than just a variance. The natural generalization is the covariance matrix, because you need information about not just how much each thing varies, but about how they vary compared to each other. So if you have a bunch of one-dimensional things, you describe their variance with a two-dimensional matrix. Again, you might or might not put the things in an array (which would be at least two-dimensional, but might be more, for example if you were looking at the R G and B channels of an image). What if you have a higher-dimensional thing and you're interested in dispersion? A bunch of matrices, perhaps? Well, now you run into notation and bookkeeping headaches. Really you should be getting higher-dimensional analogues of matrices, tensors, but these are usually awkward to work with, so usually you "flatten" your matrices into vectors and just take the covariance matrix again, "unflattening" as needed. My point is: there are two separate notions here, how you organize the collection of things you're trying to summarize statistically, and what the dimension of each thing is. A variance or standard deviation is something you do to (a lot of) just-plain-numbers, while a covariance matrix is what you get when you have (a lot of) vectors.
