[site]: stackoverflow
[post_id]: 1169010
[parent_id]: 
[tags]: 
Win32 Message Handler Error Propagation

I'm writing a (C++) application that utilizes a single dialog box. After setting up a message pump and handler I started wondering how I would go about propagating C++ exceptions to my original code (i.e., the code that calls CreateDialogParam , for instance). Here's a skeleton example of what I mean: BOOL CALLBACK DialogProc(HWND, UINT msg, WPARAM, LPARAM) { if(msg == WM_INITDIALOG) //Or some other message { /* Load some critical resource(s) here. For instnace: const HANDLE someResource = LoadImage(...); if(someResource == NULL) { ---> throw std::runtime_error("Exception 1"); As you can see, WinMain will handle "Exception 2" and "3", but not "Exception 1". My fundemental question is simple; what would be an elegant way to propagate these sorts of errors to the original "calling" code? I thought of maybe using custom messages and moving the actual throw -statements out to the message pump (in RunApp() ), but I'm not sure how that would work yet as I have relatively little experience with Windows in general. Perhaps I'm looking at this situation all wrong. How do you usually bail out when something fatal (i.e., an acquisition of a critical resource fails, and there's no chance for recovery) when you're in the message handler?
