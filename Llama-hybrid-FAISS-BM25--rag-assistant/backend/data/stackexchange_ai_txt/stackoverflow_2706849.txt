[site]: stackoverflow
[post_id]: 2706849
[parent_id]: 2706760
[tags]: 
IOC (Inversion of Control) is a design pattern/principle for decoupling of components. For instance, you may have a DAO class that is utilized by two service classes. But lets say for example's sake the DataSource is different for each service class. In that case you can inject the DAO class for the two service classes with two different data source property. ServiceClassA -> uses MyDAO with DataSource = A ServiceClassA -> uses MyDAO with DataSource = B This link has a good example on IOC http://www.vaannila.com/spring/spring-ioc-1.html . There are many components in the Spring framework. You can use MVC, IOC, AOP, JDBC, Transaction Management, Scheduler, etc. The best part is all of these are independent. For example you can use Struts as MVC with Spring IOC and pure JDBC or Spring JDBC or Hibernate. So what you should use really matters on what your project requires or what your organization follows. I personally like the Spring Recipes book by Gary Mak for Spring intro.
