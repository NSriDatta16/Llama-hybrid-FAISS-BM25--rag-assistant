[site]: stackoverflow
[post_id]: 2369193
[parent_id]: 2368896
[tags]: 
This may not meet your need, but I've found a simple way to deal with multi-key datasets is to create an object which contains all your 'key' fields and 'value' keys (as many of each as you need) and then create Lookup expressions for each of your keys. For example: class MyData { // Your keys public string Dim1; public string Dim2; public string Time; // Your values public string Value; } would be 'indexed' and retrieved like this: // add all your data to a list or collection var data = new List (); // this provides the entry point to our dataset var lookupDim1 = data.ToLookup(d => d.Dim1); var lookupDim2 = data.ToLookup(d => d.Dim2); var lookupTime = data.ToLookup(d => d.Time); // sample retrievals IEnumerable sampleData1 = lookupDim1["DimValue1"]; var sampleData2 = lookupDim2["DimValue2"].Intersect( lookupTime["1999"] );
