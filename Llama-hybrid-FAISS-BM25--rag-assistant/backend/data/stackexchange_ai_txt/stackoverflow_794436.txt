[site]: stackoverflow
[post_id]: 794436
[parent_id]: 794415
[tags]: 
First, Concurrent and Server are mutually exclusive options. See this blog post for some details on server GC misconceptions. However, ASP.NET, by default, hosts the server GC (see Scott Hanselman's discussion ), so there will be no difference there. I'd recommend sticking with server instead of concurrent for an ASP.NET website. For a user-mode application, the concurrent GC has been user responsiveness, since the server gc will cause "hangs". I have used the server GC, and noticed significant improvements in certain situations. The server mode GC does help user apps, though, if you're user application is working with huge memory pools, and getting highly fragmented.
