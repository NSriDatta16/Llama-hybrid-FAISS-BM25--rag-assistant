[site]: stackoverflow
[post_id]: 3526538
[parent_id]: 3525836
[tags]: 
You could aso use stream_context_create(); Once i wrote a php class you are wecome to use it. headers = $headers; return true; } return false; } public function get($request) { if(!$this->headers) { throw new Exception("Please set Headers"); } $this->url = $request; $this->method = "GET"; return $this->send(); } public function put($request,$xml) { if(!$this->header) { throw new Exception("Please set Headers"); } $this->url = $request; $this->method = "PUT"; $this->data = $xml; return $this->send(); } public function post($request,$xml) { if(!$this->headers) { throw new Exception("Please set Headers"); } $this->url = $request; $this->method = "POST"; $this->data = $xml; return $this->send(); } public function delete($request) { if(!$this->headers) { throw new Exception("Please set Headers"); } $this->url = $request; $this->method = "DELETE"; return $this->send(); } public function setUserAgent($useragent) { $this->useragent = $useragent; } protected function send() { $params = array('http' => array ( 'method' => $this->method, 'content' => $this->data, 'user_agent' => $this->useragent ) ); $headers = ""; if (!empty($this->headers) && is_array($this->headers)) { foreach ($this->headers as $header) { $headers .= $header."\n"; } } $params['http']['header'] = $headers; $context = stream_context_create($params); $fp = fopen($this->url, 'r', false, $context); if (!$fp) { throw new Exception("Problem with ".$this->url); } $response = stream_get_contents($fp); if ($response === false) { throw new Exception("Problem reading data from ".$this->url); } return $response; } } ?>
