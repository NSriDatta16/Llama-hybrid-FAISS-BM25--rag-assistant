[site]: stackoverflow
[post_id]: 4389834
[parent_id]: 4388911
[tags]: 
You can do some data-smoothing. Instead of using the real data, apply a simple smoothing algorithm that keeps the peaks like a Savitzky-Golayfilter. You can get the coefficients here . The easiest to do is: Take the top coefficients from the website I linked to: // For np = 5 = 5 data points var h = 35.0; var coeff = new float[] { 17, 12, -3 }; // coefficients from the site var easyCoeff = new float[] {-3, 12, 17, 12, -3}; // Its symmetrical var center = 2; // = the center of the easyCoeff array // now for every point from your data you calculate a smoothed point: smoothed[x] = ((data[x - 2] * easyCoeff[center - 2]) + (data[x - 1] * easyCoeff[center - 1]) + (data[x - 0] * easyCoeff[center - 0]) + (data[x + 1] * easyCoeff[center + 1]) + (data[x + 2] * easyCoeff[center + 2])) / h; The first 2 and last 2 points you cannoth smooth when using 5 points. If you want your data to be more "smoothed" you can experiment with coefficents with larger data points. Now you can draw a line through your "smoothed" data. The larger your np = number of points, the smoother your data. But you also loose peak accuracy, but not as much when simply averaging some points together.
