[site]: stackoverflow
[post_id]: 3567082
[parent_id]: 3566288
[tags]: 
A quick little almost-functional example to give you an idea var c = make(chan *websocket.Conn, 5) //5 is an arbitrary buffer size var c2 = make(chan []byte, 5) func EchoServer(ws *websocket.Conn) { buff := make([]byte, 256) c This starts a goroutine that listens on two channels, one for new connections to add and one for messages to send to all active connection. somekindofstorage could be a map or a vector. Edit: Alternatively, you could just store all connections in a global map and write to each from EchoServer . But maps aren't designed to be accessed concurrently.
