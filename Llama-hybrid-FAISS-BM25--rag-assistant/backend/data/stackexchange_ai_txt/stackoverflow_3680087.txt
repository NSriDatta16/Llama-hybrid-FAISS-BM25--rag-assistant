[site]: stackoverflow
[post_id]: 3680087
[parent_id]: 3679967
[tags]: 
A Visual basic program normally needs a runtime to execute. If you have a COM object (implemented in VB) use the COM API to communicate with it from C++. You will have to register the COM first. Here is a thread that explains hot to do that: http://forums.devx.com/archive/index.php/t-87059.html If you use a .NET language, use the method of Hans Passant with a reference that will create an interop dll for you. This is far much easier. Method 1: Do not do that, if you have a COM object that you want to use from a .NET environment, reference it. Method 2: You get errors because you lack the the .lib file to properly link to the DLL (statically dynamically linking) Method 3: Would be a pure dynamic solution but you have to know the exact names of the methods in the DLL. These may vary according to the parameters and calling convention used. This is very similar (actually identical, I would say) to the issue you face with your Method 1 solution. The name of the method is for yure not "Get_Data" but something else. With a tool like the dependency viewer you can have a look at the exported names. Even Method 3 with the right names is likely to fail because if it is a COM object you will need some environment called Appartment to use the COM objects. You "enter" this appartment by calling CoInitialize . This creates some magical stuff in the TLS (Thread Local Storage) to perform the COM magic. I hope this explains why your tries will be pointless if the DLL you have is happening to be a COM component, what is quite likely according to the ATL like naming we can see. EDIT: I forgot to say that you can also easily see what is inside the dll if it is a COM with the OLE/COM Viewer (normally if you have a compiler you will have such a tool around).
