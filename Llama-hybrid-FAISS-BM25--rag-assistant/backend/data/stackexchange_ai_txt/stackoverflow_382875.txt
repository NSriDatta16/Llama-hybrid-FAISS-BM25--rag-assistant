[site]: stackoverflow
[post_id]: 382875
[parent_id]: 143760
[tags]: 
Many courses at top universities don't use a textbook because none of the available books are good enough. (I was educated at Princeton and taught for 8 years at Harvard.) When someone recommends a book, ask if the book is really good or if it is just the best available in the field . For example, in compilers , I'm not a big fan of the 'Dragon Book'; I never liked the approach, and the current edition is very outdated. I think you'd be better off with a book like Michael Scott's Programming Language Pragmatics which although a bit scattershot is a lovely book to read. (I've never taught from it, so I can't say what students think of it.) I don't know of a really good book on compiler construction for the autodidact, although you might look at Cooper and Torczon's Engineering a Compiler because it is up to date and written by two of the best compiler engineers in the business.
