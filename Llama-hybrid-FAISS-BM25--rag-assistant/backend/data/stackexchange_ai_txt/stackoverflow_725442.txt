[site]: stackoverflow
[post_id]: 725442
[parent_id]: 725331
[tags]: 
This is a really hard question to answer because it depends on what code will be affected and how critical that code is. First and foremost, when migration is a nontrivial undertaking, do yourself a favour and upgrade to the latest version of Java, which would be Java 6 not Java 5. Java 6 has been out for a year and a half or more and is mature. There's no reason to not pick it over Java 5 (imho). Secondly, like any software project, your goal should be to get something into production as soon as you possibly can. So you need to identify a slice of your system. The smaller the better, the more non-cdritical, the better. The other thing to do is just try starting up your app under Java 6 and seeing what breaks. It might be worse than you expected. It might be much better. The other thing you'll probably need to be aware of is that by the sounds of it you will have jars/libraries in your app that have since been deprecated. Some may not even be compatible with Java beyond 1.4.2. You will probably want to upgrade all of these to the latest version as well. This will probably mean more stuff breaking but using old/deprecated APIs is just kicking the can down the street and causes you other problems. There are exceptions to this where upgrading can have far-reaching consequences. Axis1 to Axis2 comes to mind. Those situations require more careful thought. As for what features are used... all of them pretty much. I can't think of any that should be avoided off the top of my head. Also, I just noticed the size of your project: ~20K LOC. That's actually quite small (eg I've written an app about that size in the last 3 months by myself). Lastly, this also depends on how easily you will find things that break. If you have good unit test coverage then great. That's pretty rare though. If you can just run through the app and reliably find problems it's not too bad. The problematic situations are where scenarios are hard to test and it's likely you won't uncover problems straight away. That calls for more caution.
