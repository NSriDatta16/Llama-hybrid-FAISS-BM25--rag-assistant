[site]: stackoverflow
[post_id]: 5612369
[parent_id]: 5611972
[tags]: 
How should your other class know about this variable in the first place? What you have posted here, shows that instances of your AppDelegate class have a member named className , that is of type ClassName . This means that in every instance-method of the AppDelegate-class (the ones starting with a minus sign) you can access that variable by the name className . This, however, does not mean you can directly access this variable from anywhere else! In fact, the exact opposite is much closer to the truth. If you want to access that variable from somewhere else, there are a couple of options â€” the probably most common one would be to provide an accessor method for it (and for doing this, there are again a couple of options). Consider the following: @interface ClassA : NSObject { NSMutableString *interestingMember; NSMutableString *inaccessibleMember; } -(NSMutableString*)interestingMember; @end @interface ClassB : NSObject { } -(void)appendString:(NSString*) toMemberOfObject:(ClassA*); @end @implementation ClassB -(void)appendString:(NSString*)string toMemberOfObject:(ClassA*)object { [[object interestingMember] appendString:string]; //this will work: you can access the variable through its accessor [inaccessibleMember length]; // this will give a compile error, because the variable is undefined in the current scope } @end Since this is the fairly basic bread & butter stuff of OOP, I'd encourage you to read Learning Objective C: A Primer and some of the other introductory material on Apple's website.
