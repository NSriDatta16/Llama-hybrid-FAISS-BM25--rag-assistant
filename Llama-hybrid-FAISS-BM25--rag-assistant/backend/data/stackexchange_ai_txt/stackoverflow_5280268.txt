[site]: stackoverflow
[post_id]: 5280268
[parent_id]: 5280102
[tags]: 
Or you can do this: var keywords = /break|case|catch|default|delete|do|else|false|for|function|if|in|instanceof|new|null|prototype|return|switch|throw|this|true|try|typeof|var|while|with/g; var script = 'return 1'; script.replace(keywords, " $& "); That is, in this simple case, you don't need to use capturing parentheses. The special token: $& returns the text matched by the whole regex. (In other languages, this is frequently specified as: $0 - i.e. capture group zero .) There are several special tokens you can use in a Javascript string.replace string: $1, $2, $3,...$99 The text matching capture groups 1-99. $& The substring that matched the whole regex. $` The text to the left of the matched substring. $' The text to the right of the matched substring. $$ A literal dollar sign This is taken from: "Javascript: the Definitive Guide (5th Edition)", by David Flanagan. This excellent Javascript reference is highly recommended (and there is a new revision about to come out too - Yay!) And regarding Javascript syntax highlighting... I've been looking into this lately and can make a couple recommendations: * The most popular is SyntaxHighlighter . However, I recently discovered a nasty bug at its very core and wrote an article about it: Fixing the SyntaxHighlighter 3.0.83 Parser Bug * Also, take a look at the McLexer/McHighlighter by Matt Might. (This guy is wicked smart). Although this one also has a bug when you run it under Opera. (this bug is easily fixed by removing the line which explicitly compiles the regex.) * Also, take a look at Google prettify (which is used by this site if I'm not mistaken).
