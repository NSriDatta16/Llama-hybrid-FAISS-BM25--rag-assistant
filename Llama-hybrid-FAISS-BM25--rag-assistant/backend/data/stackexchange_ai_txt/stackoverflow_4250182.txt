[site]: stackoverflow
[post_id]: 4250182
[parent_id]: 
[tags]: 
Castle Windsor ResolveAll fails with type argument exception

I'm using Castle Windsor for IoC. It's been working great, but all of a sudden every time I try to run my application, it fails during a ResolveAll call: var resolved = container.ResolveAll (); It throws this exception: System.ArgumentException occurred Message=The number of generic arguments provided doesn't equal the arity of the generic type definition. Parameter name: instantiation Source=mscorlib ParamName=instantiation StackTrace: at System.RuntimeType.MakeGenericType(Type[] instantiation) at Castle.MicroKernel.Handlers.DefaultGenericHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired) in c:\TeamCity\buildAgent\work\1ab5e0b25b145b19\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs:line 51 InnerException: The really odd thing is that it's been working great up until today. If I roll back to a version before it started doing this, even back to last week, I still get this error. I've tried rebooting, etc. Has anyone seen this before? EDIT : Here's how I'm registering the IValidator ones: private void registerFromAssembly(IWindsorContainer container, Assembly assembly) { container.Register( AllTypes.FromAssembly(assembly) .BasedOn () ); } Here's how I'm registering the IPresenterResolver service: container.Register( Component.For () .ImplementedBy () ); I have to remove both of these to get the application to run now.
