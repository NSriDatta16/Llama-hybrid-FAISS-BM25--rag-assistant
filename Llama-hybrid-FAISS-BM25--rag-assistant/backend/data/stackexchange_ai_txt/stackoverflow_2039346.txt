[site]: stackoverflow
[post_id]: 2039346
[parent_id]: 2039341
[tags]: 
If you want to run a PHP script from a PHP script why not just do: require 'child.php'; ? If you need to do something in the background, use AJAX to fire off the request. Edit: there is no reason an AJAX request couldn't be long-running but you're getting outside the realm of things that PHP was really designed for. But anyway, fire off an AJAX request. If it takes 20 minutes to come back, that's no drama. Alternatively you can fire off an AJAX request every 15 seconds (pick a number) to check on the status of what you've started. For truly long-running tasks you're probably going to have to take a "fire and forget" approach. Start it off and return immediately. But it won't have the session information. You'll need to store that. I'd suggest having some kind of persistence mechanism like a Jobs table: Job: id, started_by, status (not started, running, complete), started_when, completed_when. and rather than firing off such jobs as an exec() have a cron job that looks for jobs that need to be started and start them. This will be less fragile than a Webserver triggered approach. You'll also have the status reporting you need to be able to ask if a job is finished yet.
