[site]: stackoverflow
[post_id]: 1419070
[parent_id]: 1417727
[tags]: 
Yes, if you want to know how many requests per second your site is able to serve, look at the "Requests per second" line. In your case it's really quite simple since you ran ab with concurrency of 1. Each request, on average took only 2.371ms. 421 of those, one after the other, take 1 second. You really should play with the concurrency a little bit, to accurately gauge the capacity of your site. Up to a certain degree of concurrency you'd expect the throughput to increase, as multiple requests get handled in parallel by IIS. E.g. if your server has multiple CPUs/cores. Also if a page relies on external IO (middle tier service, or DB calls) the cpu can work on one request, while another is waiting for IO to complete. At a certain point requests/sec will level off, with increasing concurrency, and you'll see latency increase. Increase concurrency even more and you'll see your throughput (req/sec) decrease, as the server has to devote more resources to juggling all these concurrent requests. All that said, the majority of your requests return in about 2ms. That's pretty darn fast, so I am guessing there is not much going on in terms of DB or middle tier calls, and your system is probably maxed out on cpu when the test is running (or something is wrong, and failing really fast. Are you sure ab gets the response page you intend it to? I.e. is the page you think you are testing 1204 bytes large?). Which brings up another point: ab itself consumes cpu too, especially once you up the concurrency. So you want to run ab on another machine. Also, should your site make external calls to middle tier services or DBs, you want to adjust your machine.config to optimize the number of threads IIS allocates: http://support.microsoft.com/default.aspx?scid=kb;en-us;821268 And just a little trivia: the time taken statistics is done in increments of ~16ms, as that appears to be the granularity of the timer used. I.e. 80% of your responses did not take 0ms, they took some time
