[site]: stackoverflow
[post_id]: 4330577
[parent_id]: 4330358
[tags]: 
The secret is called expire_fragment : expire_fragment(key, options = nil) Removes fragments from the cache. key can take one of three forms: String - This would normally take the form of a path, like "pages/45/notes". Hash - Treated as an implicit call to url_for , like {:controller => "pages", :action => "notes", :id => 45} Regexp - Will remove any fragment that matches, so %r{pages/d*/notes} might remove all notes. Make sure you donâ€™t use anchors in the regex ( ^ or $ ) because the actual filename matched looks like ./cache/filename/path.cache . Note: Regexp expiration is only supported on caches that can iterate over all keys (unlike memcached). http://api.rubyonrails.org/classes/ActionController/Caching/Fragments.html#method-i-expire_fragment Sadly, it won't work with memcached (if I ever decide to use it). Gotta be a lot more clever to avoid cache in that circunstance. Maybe adding a serial parameter to the request, and increment it when the user presses the 'bust cache' button...
