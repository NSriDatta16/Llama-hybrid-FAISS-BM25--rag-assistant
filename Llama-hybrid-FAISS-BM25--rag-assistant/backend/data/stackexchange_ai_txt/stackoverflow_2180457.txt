[site]: stackoverflow
[post_id]: 2180457
[parent_id]: 2178924
[tags]: 
All the answers I've read here are good, I would just add that you do this in stages, stopping as soon as your goals for performance and functionality are met: Keep the schema identical - this just takes contention and load off the OLTP server Keep the schema identical - but add new indexed views OR index base tables differently Build a partial data-warehouse style model (perhaps not keeping snapshot-style history or slowly changing dimensions or anything special not catered for in your normal database) from the copy-schema in another schema or database on the same reporting server. The benefits of star-schema models are huge for reporting, views flattened for users and data dictionaries etc. In this model, if your OLTP database loses changes (for instance customer name changes) due to overwrites, the data warehouse doesn't capture that information (often it's not that important if you stop at this spot). Effectively you are getting data warehouse-style organization for "current" data only. The benefits of retaining the copy of the original schema on your reporting server at this point are that you can pull from the source data in original SQL Server form instead of some kind of intermediate form (like text files) without affecting production OLTP, and you can migrate data models gradually, some in stars, some in normal form, all without affecting production. At some point later, you might be able to drop all or part of the copy. Build a full data-warehouse including slowly changing dimensions where all the data is captured from the source system.
