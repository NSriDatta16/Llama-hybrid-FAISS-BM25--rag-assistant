[site]: crossvalidated
[post_id]: 581136
[parent_id]: 581131
[tags]: 
EM is one possible algorithm to do ML estimation, see, e.g., here . But you can also simply optimize the likelihood directly using any other standard optimization algorithm. (Be aware that the problem is in general nonconvex, though. Many people just ignore this, but I actually found it important in practice to use some kind of global optimization strategy.) Analytical expressions for the likelihood and its derivatives are available, see, e.g., chapter 12 of Simo Särkkä's excellent book "Bayesian filtering and smoothing" . I have had good success doing that as have many others, you can find my Matlab implementation on github . If you want to use a standard python library, statsmodels seems to support ML parameter estimation in state-space models . If you're a bit more adventurous, you could also use something like pyro or pymc , but that is probably a larger endeavour if you haven't worked with a probabilistic programming package before. For another, more optimization-oriented perspective and an accompanying python implementation, see "Fitting a Kalman smoother to data" by Barratt and Boyd (2020) [arxiv] and the accompanying python code .
