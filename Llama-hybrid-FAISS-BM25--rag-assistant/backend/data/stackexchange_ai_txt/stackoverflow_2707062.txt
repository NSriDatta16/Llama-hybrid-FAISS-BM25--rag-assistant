[site]: stackoverflow
[post_id]: 2707062
[parent_id]: 2702720
[tags]: 
These aren't functional-programming terms; they're terms from Category Theory. It's true that a handful of elite functional programmers seem to use category theory to get insights into functional programming (Conal Elliott, Ralf Hinze, Chung-Chieh Shan, phone your office), but these people are in the minority. Regarding these terms, I struggled with Pierce's book but I don't know a better sourceâ€”although Dan Piponi has a lot of related material on his blog; I encourage you to look there. ( 2012 update : Harold Simmons has a new book on category theory that looks quite good, and it was very well reviewed by Computing Reviews [behind a paywall]. The only complaint is that the examples are all from math and not from computing.) Some words you might hear from functional progammers: "map function", "fold function", "higher-order function", "point-free programming", "sum type", "product type", "catamorphism", "Church encoding", "calculating programs", "type-directed programming", "proper tail call", "accumulating parameter". I don't know of a good lexicon gathered in one place. Graham Hutton's book Programming in Haskell might be a place to start, or the older book by Richard Bird and Phil Wadler.
