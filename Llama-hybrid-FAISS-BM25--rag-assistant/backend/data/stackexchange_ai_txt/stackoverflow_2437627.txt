[site]: stackoverflow
[post_id]: 2437627
[parent_id]: 2437570
[tags]: 
I prefer the first style, as it keeps the implementation details closer to the object that is responsible for them. The second style tends to create more "utility methods" taking objects to act upon, but which do not involve objects of the class they are in to execute their function. Your test class does not need the knowledge of where the agent class defined its getAgentName method, introducing a getAgentName() method in the test class adds unnecessary complexity to your codebase, and future maintainers need to check the extra method when working with it. On another note, the agent class is the context of the getAgentName() method, so I would simplify it into getName() as the context is clear in: System.out.println(getAgent().getName());
