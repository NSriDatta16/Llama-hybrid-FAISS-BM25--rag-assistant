[site]: stackoverflow
[post_id]: 1029727
[parent_id]: 
[tags]: 
Can you improve this C# regular expression code?

In a program I'm reading in some data files, part of which are formatted as a series of records each in square brackets. Each record contains a section title and a series of key/value pairs. I originally wrote code to loop through and extract the values, but decided it could be done more elegantly using regular expressions. Below is my resulting code (I just hacked it out for now in a console app - so know the variable names aren't that great, etc. Can you suggest improvements? I feel it shouldn't be necessary to do two matches and a substring, but can't figure out how to do it all in one big step: string input = "[section1 key1=value1 key2=value2][section2 key1=value1 key2=value2 key3=value3][section3 key1=value1]"; MatchCollection matches=Regex.Matches(input, @"\[[^\]]*\]"); foreach (Match match in matches) { string subinput = match.Value; int firstSpace = subinput.IndexOf(' '); string section = subinput.Substring(1, firstSpace-1); Console.WriteLine(section); MatchCollection newMatches = Regex.Matches(subinput.Substring(firstSpace + 1), @"\s*(\w+)\s*=\s*(\w+)\s*"); foreach (Match newMatch in newMatches) { Console.WriteLine("{0}={1}", newMatch.Groups[1].Value, newMatch.Groups[2].Value); } }
