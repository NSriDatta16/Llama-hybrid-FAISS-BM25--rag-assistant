[site]: stackoverflow
[post_id]: 4504629
[parent_id]: 
[tags]: 
Linq-to-SQL query - Need to filter by IDs returned by Full-Text Search sql functions - Hitting limit for Contains

My objective: I have built a working controller action in MVC which takes user input for various filter criteria and, using PredicateBuilder (part of LinqKit - sorry, I'm not allowed enough links yet) builds the appropriate LINQ query to return rows from a "master" table in SQL with a couple hundred thousand records. My implementation of the predicates is totally inelegant, as I'm new to a lot of this, and under a very tight deadline, but it did make life easier. The page operates perfectly as-is. To this, I need to add a Full-Text search filter. Understanding the way LINQ translates Contains to LIKE(%%), using the advice in Simon Blog: LINQ-to-SQL - Enabling Full-Text Searching , I've already prepared Table Functions in SQL to run Freetext queries on the relevant columns. I have 4 functions, to match the query against 4 separate tables. My approach: At the moment, I'm building the predicates (I'll spare you) for the initial IQueryable data object, running a LINQ command to return them, like so: var MyData = DB.Master_Items.Where(outer); Then, I'm attempting to further filter MyData on the Keys returned by my full-text search functions: var FTS_Matches_Subtable_1 = (from tbl in DB.Subtable_1 join fts in DB.udf_Subtable_1_FTSearch(KeywordTerms) on tbl.ID equals fts.ID select tbl.ForeignKey); ... I have 4 of those sets of matches which I've tried to use to filter my original dataset in several ways with no success. For instance: MyNewData = MyData.Where(d => FTS_Matches_Subtable_1.Contains(d.Key) || FTS_Matches_Subtable_2.Contains(d.Key) || FTS_Matches_Subtable_3.Contains(d.Key) || FTS_Matches_Subtable_4.Contains(d.Key)); I just get the error: The incoming tabular data stream (TDS) remote procedure call (RPC) protocol stream is incorrect. Too many parameters were provided in this RPC request. The maximum is 2100. I get that it's because I'm trying to pass a relatively large set of data into the Contains function and LINQ is converting each record into a separate parameter, exceeding the limit. I just don't know how to get around it. I found another post linq expression to return property value which seemed SO promising. I tried ifwdev's solution (2nd highest ranked answer): using LinqKit to build an extension that will break up the queries into manageable chunks. But I can't figure out how to implement it. Out of my depth right now maybe? Is there another approach that I'm missing? Some simpler way to accomplish this that I've overlooked? Sorry for the long post. But thank you for any help you can provide!
