[site]: stackoverflow
[post_id]: 4179896
[parent_id]: 4179789
[tags]: 
If you look in your DataClasses1.designer.cs-file (or whatever you have named it) under the dbml-file in solution explorer you will find your classes like this. [global::System.Data.Linq.Mapping.TableAttribute(Name="Production.Product")] public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged { //... [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)] public int ProductID { get { return this._ProductID; } set { if ((this._ProductID != value)) { this.OnProductIDChanging(value); this.SendPropertyChanging(); this._ProductID = value; this.SendPropertyChanged("ProductID"); this.OnProductIDChanged(); } } } //... } etc. If you create an interface public interface ITableHasProductId { int ProductID {get; set;} } you can apply that interface to all your tables, put the following code in a separate file (to avoid loosing your changes when regenerating the data context) public partial class Product : ITableHasProductId {} Then you can put all your tables in an IEnumrable and update the ProductID.
