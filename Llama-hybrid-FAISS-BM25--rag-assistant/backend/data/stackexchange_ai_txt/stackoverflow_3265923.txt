[site]: stackoverflow
[post_id]: 3265923
[parent_id]: 817096
[tags]: 
A framework to me is a good tool to speed you up and save your time for the sake of you just don't want to spend time to redo it, not because you want to save time that you don't know how much it is. You will pay for it if you do so. To me framework is good if you are already a experience programmer and you have the touch or feel that you know how the framework roughly work below (just roughly not exactly) and have the confident to say ya if I want to I can re-create sort like simplify of this framework. Then a framework is a express car for you and it won't cause you the pain if you want to do something that the framework not ready for or something unusual or other odd thing. If you don't, you better try to solve your problem using plain old PHP and go through the pain of playing the language at your finger, and learn about good programming practice and paradigm and pattern first. Else you will be one of those fresh graduate joining a large team and their first project is working on a project with a very powerful framework that require very less coding and more on configuring and patching. You will never be a good programmer and can't build a good PHP application from scratch. How if you are in an organization that use a complex framework? Spend some of your very own time to solve the problem in plain old in this case PHP until you get the touch of what I mentioned above. Else, you will never find your confident in programming and keep telling yourself, "I just know those are the steps are the way to do it". That is not programming (a bit extreme :)) . Complex vs. Simple Framework Some of the framework although used by many, is just to overwhelming. There is too many layers that you will lose track of. Those frameworks are usually for something which is stereotype, a lot of configuration files and if you want to do something unusual, you do better be the framework writer(a bit exaggerated here :)). I do not want to mention any name here, but you will know it when you encounter one.
