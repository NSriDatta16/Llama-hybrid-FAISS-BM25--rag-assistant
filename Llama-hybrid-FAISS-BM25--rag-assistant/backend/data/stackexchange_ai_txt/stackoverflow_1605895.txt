[site]: stackoverflow
[post_id]: 1605895
[parent_id]: 1605331
[tags]: 
In my apps I have many instances of a single view controller which then utilizes different or multiple views to display the UI. You can take a view and all its subviews and add it to the view controller using addSubView, and remove that view and all its subviews using removeFromSuperview. This works well if the view is only displaying info and is subclassed to handle its own differences from the other views that the view controller has to handle. In you case, an analog clock view has to draw itself one way and the digital clock view draws itself in another. The controller merely has to tell each view what the time is, and the view handles the translation to visual data. If your view accepts input in the form of a user dragging the analog hands to set the alarm, then the view subclass needs to read that input and then translate to an alarm time and pass it back to the view controller. The controller doesn't need to know which type of clock the user is interacting with, but only sees an alarm time it needs to add to its alarm queue. However, when I have views that utilize very different UIs or for different purposes, I generally prefer having one view controller per set of views. Basically, I try to use my views as a display and my viewControllers as the manager of data related to that view (and any other views that can be backed by that same data). For example, my game has one view controller for playing, another for the high score table, and yet another for the settings.
