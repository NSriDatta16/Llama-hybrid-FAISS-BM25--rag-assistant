[site]: datascience
[post_id]: 23463
[parent_id]: 23457
[tags]: 
One option is to modify your network to output a binary label for each body part, signalling whether the part is visible or not. You would need the following changes: Modify your network architecture to return a real number in the range $[0, 1]$ for each body part. A sigmoid would be an appropriate activation for the last layer. Its semantics would be the probability that the $i^{th}$ body part is visible. Extend your training and test data with appropriate values for the new labels. Change your loss to only take into account the difference between body part positions (expected vs predicted) if the part was expected to be found (e.g. by multiplying). I'm not very sure whether you should use the real labels or the predicted ones here (or even an average of both). Add a new term (added to the original loss) to your loss with the cross entropy of the body part presence flag . You should probably add a weighting factor $\alpha$ to this new loss term to have a proper scale with respect to the position distance loss term.
