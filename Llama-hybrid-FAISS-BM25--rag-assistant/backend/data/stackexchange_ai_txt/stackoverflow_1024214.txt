[site]: stackoverflow
[post_id]: 1024214
[parent_id]: 1024168
[tags]: 
Here's an elegant way to do this, which I copied from somewhere and I only wish I could remember where, so I could give them the credit. 8-) I assign an id to each of my pages (or all the pages within a section) like this: In index.html: ... In faq.html: ... In download.html: ... And then an id for the corresponding links: Introduction FAQ Download And the in the CSS I set a rule like this: #section-intro #nav-intro, #section-faq #nav-faq, #section-download #nav-download { font-weight: bold; /* And whatever other styles the current link should have. */ } So this works in a mostly declarative way to control the style of the link that the current page belongs in. You can see it in action here: http://entrian.com/source-search/ It's a very clean and simple system once you've set it up, because: You don't need to mess about with template markup in your links You don't end up using big ugly switch statements or if / else / else statements Adding pages to a section Just Works [TM] Changing the way things look only ever means changing the CSS, not the markup. I'm not using Django, but this system works anywhere. In your case, where you "set their own respective titles and contents" you also need to set the body id , and there's no other Django markup required. This idea extends easily to other situations as well, eg. "I want a download link in the sidebar on every page except the download pages themselves." You can do that in CSS like this: #section-download #sidebar #download-link { display: none; } rather than having to put conditional template markup in the sidebar HTML.
