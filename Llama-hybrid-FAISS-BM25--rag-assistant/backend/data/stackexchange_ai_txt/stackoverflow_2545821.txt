[site]: stackoverflow
[post_id]: 2545821
[parent_id]: 2545736
[tags]: 
Quoting from Wikipedia : As n elements are inserted, the capacities form a geometric progression. Expanding the array by any constant proportion ensures that inserting n elements takes O(n) time overall, meaning that each insertion takes amortized constant time. The value of this proportion a leads to a time-space tradeoff: the average time per insertion operation is about a/(a−1), while the number of wasted cells is bounded above by (a−1)n. The choice of a depends on the library or application: a=3/2 1 and a=2[citation needed] is commonly-used. Apparently it seems that it is a good compromise between CPU time and memory wasting. I guess the "best" value depends on what your application does.
