[site]: datascience
[post_id]: 13105
[parent_id]: 
[tags]: 
Simple feed forward neural network on Tensorflow question

I'm building a simple feedforward neural network in Tensorflow and something seems to be broken. I have adopted the basic structure from http://joelgrus.com/2016/05/23/fizz-buzz-in-tensorflow/ and have tried to adapt it to spit out 1 output unit instead. The input is 10 numerically represented players ex:(5, 17, 19, 54, 110, 3, 112, 78, 60, 63), 5 on the 'North' team and 5 on the 'South' team, and the output is a 1 or 0 (if the 'North' team won or not). 3 hidden layers (200 parameters each). With how this is set up, the algorithm trains to constantly predict 1 (North victory). What can I fix that allows this to train to predict which team is going to have a higher chance of winning? My expected outcome is ex: [.54] (slight edge to the north team) or [.40] (edge to the south team) etc. import numpy as np import tensorflow as tf import sqlite3 def get_matches(start, stop): connection = sqlite3.connect('5v5.db') cursor = connection.cursor() result = cursor.execute('''SELECT * FROM matches WHERE rowid>=? AND rowid
