[site]: stackoverflow
[post_id]: 3612250
[parent_id]: 3607398
[tags]: 
Large systems are all about coupling between components and testing. Courses like "software architecture" and "software engineering" are supposed to be good at teaching you how to design systems (getting coupling and communication between components right). I was a bit disappointed with my university's take on this but it'll help you think about the right kind of things at least. Then for testing, start looking at a test driven development methodology. Test coverage is very important where robustness and security is a concern. Finally, I might even recommend looking at Haskell if for no other reason than to get into your mind into a more "formal" mode of operation. Haskell more or less forces you be more formal about how you express problems through its type system. (Also, if you really like advanced math you'll probably love haskell :))
