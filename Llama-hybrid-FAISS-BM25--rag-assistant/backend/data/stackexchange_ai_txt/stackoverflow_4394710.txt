[site]: stackoverflow
[post_id]: 4394710
[parent_id]: 4391146
[tags]: 
It's been a while since I've used Hpricot but here's some things I remember that might help: The quick way to get all the text: irb(main):023:0> print parsed.inner_text Testing: line 1 line 2 line 3 line 4 line 5 Here's some more text The downside to that is you get the text embedded in tags too. Similarly, we can search for all 'text()' nodes: irb(main):033:0> puts (parsed / 'text()') Testing: line 1 [...] line 5 So, we can do this: irb(main):036:0> puts (parsed / 'text()')[2 .. -3] line 1 line 2 line 3 line 4 line 5 or: irb(main):037:0> (parsed / 'text()')[2 .. -3] => # or: irb(main):039:0> (parsed / 'text()')[2 .. -3].map{ |t| t.inner_text.strip } => ["line 1", "line 2", "line 3", "line 4", "line 5", ""] The main idea for grabbing data/text from a web page is look for landmarks you can use to navigate through the page. Often we can grab text from inside a or tag. If a page doesn't give you landmarks you have to use other tricks; Looking for a series of text nodes followed by nodes maybe, or the five lines following an tag with a certain href attribute. That's the fun and challenge of dealing with HTML. In the back of my mind there's a nagging thought that there is a more elegant way to do this, but this seems to be working. Dig around on the Hpricot Challenge page for variations on themes on digging out content.
