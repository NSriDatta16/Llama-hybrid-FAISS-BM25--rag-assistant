[site]: stackoverflow
[post_id]: 4951018
[parent_id]: 4950817
[tags]: 
Your alert code is just fine I use that form (three lines - init, show, release) all of the time to do alerts. I suggest that the exit(0) is the root of the problem. If you want to exit after the user closes the alert, you should assign a delegate which will close the app when the user taps on the close button. Use your code, but remove the exit(0) . Then implement the UIAlertViewDelegate as follows: -(IBAction)continueGame_button:(id)sender { //=====CHECK IF THERE IS AN ON-GOING GAME, IF SO CONTINUE=====// AccessCurrentGameData *isThereAnOngoingGameFunction = [AccessCurrentGameData new]; BOOL ongoingGame = [isThereAnOngoingGameFunction checkIfGameOngoing]; [isThereAnOngoingGameFunction release]; NSLog(@"+ + +continueGame_button+ + +"); NSLog(@"ongoingGame = %@\n", (ongoingGame ? @"YES" : @"NO")); if (ongoingGame == YES) { NSLog(@"+++++++++ ONGOING GAME +++++++++"); // UIAlertView *continueGame = [[UIAlertView alloc] initWithTitle:@"Forts√§tta spel" message:@"Det finns ett aktivt spel, klicka Spela eller Tillbaka" delegate:self cancelButtonTitle:@"Tillbaka" otherButtonTitles:nil]; [continueGame show]; [continueGame release]; } } - (void) alertViewCancel:(UIAlertView *)alertView{ //If you have other alerts, you may want to check the title of the alert to //make sure that you only exit when THIS alert is dismissed exit(0); } Dont' forget to add the code to your header (.h) file. You can also use - (void) alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex , if you want multiple buttons, with one of them being a specific "Quit" button. Please note that Apple discourages using exit() in apps that are released to the App Store, and using it might get your app rejected.
