[site]: stackoverflow
[post_id]: 5122284
[parent_id]: 
[tags]: 
CakePHP Gurus: is my complex saveAll scenario possible?

I have an event management app, where event owners can import a list of email addresses to add to their event. The app should create a Member record for each email address, and then create an EventsMember record linking each new Member to the Event. The whole reason for doing this with saveAll() is to (a) minimize the number of SQL calls of course (there could be thousands of Members per event, and I don't want to design the import feature to run one SQL statement per new Member :), and (b) leverage transactions. I'm open to other ways to do this that leverage CakePHP efficiencies. So I am reading the list in from a file and creating an array to pass to the saveAll() method of the Member model; I know I can add every Member with an array like this: $data = Array( '0' => Array('email' => 'nobody@nowhere.com'), '1' => Array('email' => 'somebody@nowhere.com'), ... ); $this->Member->saveAll($data); and this is working fine. But I want to be able to have the associated EventsMember records created at the same time, but I'm not sure what format the data should take, or if it's even possible. I tried: $data = Array( '0' => Array( 'email' => 'nobody@nowhere.com'), 'Event' => Array('id' => 10); ), '1' => Array( 'email' => 'somebody@nowhere.com'), 'Event' => Array('id' => 10); ), ... ); $this->Member->saveAll($data); and $data = Array( '0' => Array( 'email' => 'nobody@nowhere.com'), 'Event' => Array( '0' => Array('id' => 10); ) ), '1' => Array( 'email' => 'somebody@nowhere.com'), 'Event' => Array( '0' => Array('id' => 10); ) ), ... ); $this->Member->saveAll($data); but they both only created the Member records, and ignored the embedded Event data. I know that my relationships are working correctly, as other CakePHP features (automatic joins and recursive finds, cascading deletes, etc.) are working great. Thanks for your insights!
