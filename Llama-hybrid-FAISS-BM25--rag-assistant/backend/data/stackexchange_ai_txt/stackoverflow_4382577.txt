[site]: stackoverflow
[post_id]: 4382577
[parent_id]: 4382471
[tags]: 
Hmm... I'm not sure how that ordering would work? Wouldn't you need a different order for each point to indicate it's neighbors. The simplest solution is to just iterate through all the points and compute the geometrical distance between the points. For 1000 points this should happen fairly fast. The most optimized solution (in terms of retrieval speed) is to compute the neighbors of each point when you insert them in the database. For example you can keep the list of ids as a comma separate string and insert in the database?. Then when you need someones neighbors you do directly to them. However this is going to become a pain if you need to insert new points. Basically you'll need to re-compute the neighbors.
