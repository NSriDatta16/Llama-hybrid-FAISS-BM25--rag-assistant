[site]: stackoverflow
[post_id]: 2054237
[parent_id]: 2051102
[tags]: 
Here's the definitive post on the subject from the android-platform mailing list: Dalvik JIT Compiler As some of you have noticed, the latest Android Open Source Project tree (eclair) includes source code for a Dalvik JIT compiler. The Dalvik team has been actively investigating what kind of JIT would work best over a wide range of memory- and power-constrained portable Android devices, and the code in AOSP master is an old snapshot of what we consider a promising proof-of-concept. It is a trace-based JIT, compiling only hot code traces rather than method-at-a-time strategy typically found on server-class JITs. It attempts to minimize heap usage, and it requires no persistent storage. The goal is to give a quick performance boost using very little heap and battery. The JIT has progressed significantly since the snapshot in AOSP eclair, and we're working on pushing out a more current version. Meanwhile, if you'd like to play with the prototype, you can build it by creating a buildspec.mk file in your AOSP root which includes the line "WITH_JIT := true". Note that the prototype JIT had not been extensively tested at the time the snapshot was taken, so you can expect some breakage. Also, it contains few optimizations other than the basic elimination of the interpreter's fetch/decode cycle. We're looking forward to getting a newer version into the AOSP tree. Bill Buzbee, Ben Cheng & the rest of the Dalvik team
