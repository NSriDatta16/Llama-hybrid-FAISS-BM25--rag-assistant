[site]: stackoverflow
[post_id]: 5596688
[parent_id]: 5595956
[tags]: 
The problem is that Rangy's save/restore selection module works by inserting invisible marker elements into the DOM where the selection boundaries are and then your code strips out all HTML tags, including Rangy's marker elements (as the error message suggests). You have two options: Move to a DOM traversal solution for colouring the numbers rather than innerHTML . This will be more reliable but more involved. Implement an alternative character index-based selection save and restore. This would be generally fragile but will do what you want in this case. UPDATE I've knocked up a character index-based selection save/restore for Rangy (option 2 above). It's a little rough, but it does the job for this case. It works by traversing text nodes. I may add this into Rangy in some form. ( UPDATE 5 June 2012: I've now implemented this, in a more reliable way, for Rangy. ) jsFiddle: http://jsfiddle.net/2rTA5/2/ Code: function saveSelection(containerEl) { var charIndex = 0, start = 0, end = 0, foundStart = false, stop = {}; var sel = rangy.getSelection(), range; function traverseTextNodes(node, range) { if (node.nodeType == 3) { if (!foundStart && node == range.startContainer) { start = charIndex + range.startOffset; foundStart = true; } if (foundStart && node == range.endContainer) { end = charIndex + range.endOffset; throw stop; } charIndex += node.length; } else { for (var i = 0, len = node.childNodes.length; i = charIndex && savedSel.start = charIndex && savedSel.end ]+)>)/ig,""); el.innerHTML = el.innerHTML.replace(/([0-9])/ig," $1 "); // Restore the original selection restoreSelection(el, savedSel); }
