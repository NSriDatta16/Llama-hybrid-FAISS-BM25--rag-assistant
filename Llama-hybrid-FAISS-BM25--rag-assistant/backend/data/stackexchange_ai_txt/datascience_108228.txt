[site]: datascience
[post_id]: 108228
[parent_id]: 108227
[tags]: 
Welcome to the wonderful world of ML. I'd use XGBoost . It's simple to get started. It can be kind of a pain to install on windows, but this might help . As I recall, on linux it's a breeze. It's what's called a "decision tree", so it takes all your inputs and learns a series of thresholds (if x>y and z it's very tolerant to poorly formatted data (non normalized) most of the hyperparameters are pretty intuitive it has a tendency to work fairly well out of the box. It will be daunting, the first time you implement just about any algorithm it's challenging. Just keep your head down and perserveere. If you do want to go with a NN (which is also an excelent choice), I recommend using tf.keras . There's excellent beginner tutorials by this guy . This is an, arguably, more useful library, but it can also be tough to get started. If you watch a few tutorials, though, you'll be fine. You will quickly find that the choice of model is often the easy part. It's the data preprocessing, training/validation, etc. that is a pain. So, If I were you, I would just pick a model and get started ASAP; your objective is to learn, not to make a perfect model. Some other things you'll probably need in your tool belt: python in general pandas for storing and manipulating data numpy for messing around with data types matplotlib.pyplot for plotting sklearn for miscellaneous stuff (or more, if you look into it)
