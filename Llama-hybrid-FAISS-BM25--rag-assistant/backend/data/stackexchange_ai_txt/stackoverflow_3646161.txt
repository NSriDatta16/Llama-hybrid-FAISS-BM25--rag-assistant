[site]: stackoverflow
[post_id]: 3646161
[parent_id]: 
[tags]: 
What are the differences between using pure C with a C compiler and the "C part" of a C++ compiler?

I'm not sure what programming in C really means: - Programming in pure C with a C compiler or - programming in C with a C++ compiler. Apart from the differences between the C's syntax of C and the C's syntax of C++, can I safely say there are absolutely (or in very few cases) no differences between two executables in terms of performance ? I'm thinking about this issue, because in game programming, each one of the rendering part, the game object part and the game scripting part can be programmed completely different languages, to obtain the best compromise between execution speed and easy development, and this at each one of those part. This separation between parts can be important for me, for example, I want to make a versatile 3D adventure engine, where a community would make their own gameplay without having to mess with the engine. It would only be able to make games with a single character and several ennemies, so different game type would be covered: hack & slash, infiltration, RPG, platform, etc. I should have put this 2 paragraphs in gamedev.stackexchange, but the first part is only about languages...
