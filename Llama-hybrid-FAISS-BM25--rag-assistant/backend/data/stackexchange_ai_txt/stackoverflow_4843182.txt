[site]: stackoverflow
[post_id]: 4843182
[parent_id]: 4843031
[tags]: 
Ok, funny story. Turns out it is not only possible to reference an null array, but it also points to somewhere. This really messed up my debugging. The "UInt32* bgImgIntPtr = (UInt32*)bgImgPtr;" that leads to the MDA exception is because the array was uninitialized. Making a pointer to the bytepointer that goes to the bytearray is the correct way to go. The answer: byte[] bgImageBytes = new byte[1000]; unsafe { // Make a byte pointer to the byte array fixed (byte* bgImgPtr = bgImageBytes) { // Make a UInt32 pointer to the byte pointer UInt32* bgImgIntPtr = (UInt32*)bgImgPtr; } }
