[site]: stackoverflow
[post_id]: 467915
[parent_id]: 455884
[tags]: 
I was the one quoted in this question. You might notice that I never advised you to use private setters. I simply said not to make every single one of them public, if you can help it. In your case, I'd favor making them package-private or internal, and placing the class that does serialization / saves them to a back-end / builds a DTO for your UI / whatever in the same package or assembly. The reason not to make every private member publicly gettable and settable is a coupling question, and it is entirely practical. Your domain model needs to be coupled to domain concepts. If those concepts are embodied by getters, then use them. Making them all public exposes you to coupling domain objects to private parts of your objects that are liable to change outside of your domain. It also encourages others to extract such information, make decisions based on that data, and set values back, which is the domain anemia you are rightly concerned about.
