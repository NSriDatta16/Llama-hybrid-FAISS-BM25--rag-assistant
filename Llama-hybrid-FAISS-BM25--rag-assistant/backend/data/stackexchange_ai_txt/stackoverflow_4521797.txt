[site]: stackoverflow
[post_id]: 4521797
[parent_id]: 4476270
[tags]: 
It seems you're complicating this a little bit. If you are implementing touchesMoved, you are wanting a drag. If you are more interested in a tap, then touchesEnded is where you want to implement this. Either way, you just need to get the location in view and update your UIView's center based upon that location. If you wrap the change to the center value in a UIView animation block, it will animate to the position as it updates. If you are using iOS 3.2 or later, you can use gesture recognizers which makes this pretty trivial: // In viewDidLoad or some such UITapGestureRecognizer *tapRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(viewWasTapped:)]; [[self view] addGestureRecognizer:tapRecognizer]; Then declare your action selector: - (void)viewWasTapped:(UITapGestureRecognizer*)recognizer { CGPoint location = [recognizer locationInView:[self view]]; [UIView beginAnimations:nil context:NULL]; [UIView setAnimationDuration:1.0f]; // take a second to animate [viewToMove setCenter:location]; [UIView commitAnimations]; } This will animate the view from one location to another. This is referred to as implicit animation. Using Core Animation classes such CAKeyframeAnimation or CABasciAnimation would be explicit animation.
