[site]: stackoverflow
[post_id]: 4753815
[parent_id]: 4753646
[tags]: 
My guess is that you are getting bizarre behavior because you are invoking a ui method on a non-ui thread. getTracklistProgressDialog.dismiss(); must be executed on a ui thread. My guess is that it is crashing and your thread is crashing then leaving some of your resources in a bad state. This would explain why you get a varying amount of characters. I would try creating a final Handler in your onCreate method which would get bound to the uiThread. In that thread, you can then call uiHandler.post( new Runnable() { public void run(){ getTracklistPRogressDialog.dismiss(); } } ); This is quick, so it may not be syntactically correct, check your ide. This is the best i can get from what you've posted. If you post more of the code I can try to run it to give you more help. Update: I think I found your problem: The idea of having another thread is to do the long running work there, but what we have right now actually does the long running work on the ui thread, the opposite of our goal. What we need to do is move the call to getStringFromUrl(url) from the setTracklist call up into the thread. I would rewrite setTracklist as follows: public void setTracklist(String tracklistContent, TextView tv) { try { runOnUiThread( new Runnable() { public void run() { tv.setText(tracklistContent); } }); } catch(Exception e) { e.printStackTrace(); } } Then in your inner onClick method, do this: public void onClick(DialogInterface dialog, final int pos) { getTracklistProgressDialog = ProgressDialog.show(GA.this, "Please wait...", "Retrieving tracklist...", true); new Thread() { public void run() { try { String str1, epURL; if(pos = 100) { str1 = getResources().getString(R.string.epNo3); epURL = String.format(str1, pos+1); String tlContent = getStringFromUrl(epUrl); setTracklist(epURL, tracklist); } } catch(Exception e) {} // Remove progress dialog getTracklistProgressDialog.dismiss(); } }.start(); } I'm so, we make the call to the web service/url before we regain ui thread execution. The long running internet retrieval runs on the bg thread and then the ui update happens on the ui thread. Think this should help.
