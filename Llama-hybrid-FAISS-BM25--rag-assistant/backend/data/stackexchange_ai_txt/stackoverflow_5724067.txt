[site]: stackoverflow
[post_id]: 5724067
[parent_id]: 
[tags]: 
Conquering CSS, algorithmically

Before delving into my question, I should first provide a synopsis of what angle I'm coming from: for most of my web development work (up until about a year ago), I have focused almost entirely on back-end development. Hence, much of my recent months have been spent coming up to speed on JavaScript, AJAX tools, JS libraries, DOM Manipulation, and of course: Cascading Style Sheets. I have found a way to adapt and leverage my mode of thinking to just about all of these aspects of web-development and do some truly neat things but CSS continues to be elusive to me. Just about every web resource I've encountered that explains how to use CSS, describes this technology in a very piece-meal fashion. So far I see nothing more than and endless list of example layouts and styles that make them happen. And of course, to make matters worse: there's often multiple ways to achieve the same end, and a myriad of fragmented "gotchas" to deal with browser inconsistencies. To me: CSS is not a fully-functional programming language (i.e. it is not Turing complete). Hence, learning CSS is like trying to hack a complex XML file without having a clear idea how the software consuming said file will interpret it. What I am looking for is an algorithmic description of exactly how CSS is interpreted by each of the major browsers (IE, Chrome and FireFox). To me, this would be far more preferable than the brute-force approach I've been forced to use so far.
