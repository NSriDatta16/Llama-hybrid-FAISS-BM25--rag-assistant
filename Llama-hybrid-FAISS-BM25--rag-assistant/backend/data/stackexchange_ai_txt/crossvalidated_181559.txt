[site]: crossvalidated
[post_id]: 181559
[parent_id]: 
[tags]: 
CI's from full model-averaged coefficients from model.avg (MuMIn package)

I am currently trying to get model-averaged estimates (and confidence intervals) for a GLMM I am running. After obtaining a full set of candidate models using the dredge() function from the MuMIn package in R and selecting the 95% confidence set using: avgmod.95 'summary(avgmod.95)' gives me both the full and conditional parameter estimates (see below output of the reproducible example). The full estimates treat every parameter equally and averages them over all models (i.e., even those not containing the parameter, for which it gives the parameter a value of 0). These are the parameter estimates I'd like to report. So far so good, but I'd also like to report confidence intervals. Running the function confint(avgmod.95) (as suggested in several papers) gives one confidence interval for each parameter (see reproducible example output below). However, these confidence intervals match the conditional parameter estimates much more closely than they do the full parameter estimates (which I am interested in). My questions are: Does the object generated with model.avg() only produce one set of confidence intervals, or does confint() give confidence intervals based on the conditional averages only? If the latter is the case, is there a way around this to obtain CI's for the full averages? Here's a reproducible example using the mtcars data: require(lme4) require(MuMIn) # Fit the global model global.model Now summary(avgmod.95) gives: Call: model.avg.model.selection(object = dr, subset = cumsum(weight) , data = mtcars) Component models: df logLik AICc delta weight 134 6 -73.31 161.97 0.00 0.76 1234 7 -73.53 165.73 3.75 0.12 13 5 -77.29 166.89 4.92 0.07 123 6 -75.89 167.14 5.16 0.06 Term codes: drat hp wt drat:wt 1 2 3 4 Model-averaged coefficients: (full average) Estimate Std. Error Adjusted SE z value Pr(>|z|) (Intercept) 11.208222 13.650695 14.120116 0.794 0.4273 drat 6.851292 3.665723 3.784583 1.810 0.0702 . wt 3.244549 4.455566 4.586870 0.707 0.4793 drat:wt -2.276614 1.341948 1.377762 1.652 0.0985 . hp -0.005121 0.011796 0.011856 0.432 0.6658 (conditional average) Estimate Std. Error Adjusted SE z value Pr(>|z|) (Intercept) 11.208222 13.650695 14.120116 0.794 0.42733 drat 6.851292 3.665723 3.784583 1.810 0.07025 . wt 3.244549 4.455566 4.586870 0.707 0.47935 drat:wt -2.594754 1.107692 1.156718 2.243 0.02488 * hp -0.029439 0.009162 0.009600 3.066 0.00217 ** --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Relative variable importance: drat wt drat:wt hp Importance: 1.00 1.00 0.88 0.17 N containing models: 4 4 2 2 and confint(avgmod.95) gives: 2.5 % 97.5 % (Intercept) -16.46669809 38.88314109 drat -0.56635437 14.26893779 wt -5.74555075 12.23464840 drat:wt -4.86187937 -0.32762871 hp -0.04825531 -0.01062219 Notice how the CI's confirm the conditional averages and not the full averages from the summary output.
