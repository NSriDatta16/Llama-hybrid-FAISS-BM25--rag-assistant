[site]: stackoverflow
[post_id]: 4052124
[parent_id]: 4052010
[tags]: 
The common knowledge tradeoff I use is, "Do not prematurely optimize." I build my code, choosing the simplest, clearest implementation I can make at the time. This is the fastest way to write correctly working code. Then I test and profile the code. Only then do I address the areas that need optimization. If the profiled code uses too much memory, I go back and optimize for space verses time. Or vice versa if the profiled code runs too slowly. If I spend too much time pre thinking about how to optimize the code I introduce unnecessary complications and invariably fail to give proper attention to the important optimizations in the final system.
