[site]: datascience
[post_id]: 108789
[parent_id]: 108779
[tags]: 
In this case, first each of the text in the 'docs' file will be encoded to certain numbers which are in the range of vocabulary size and then the output array will be padded with zeros to make these to the max_length size. If you check the padded output of one single text, it will look like this array([6, 2, 0, 0]) You have set the vector dimension for the output array as 100. This means each of the elements in the above padded array will be converted to 100 dimensions. Now you are defining LSTM neural network with keras. If you check the output shape, it will give an array of size (10, 4, 100). This means 10 input samples having length 4 has converted to 100 dimensions. Finally, after fitting the model with padded_docs as input and labels as target variable, you can predict on some new doc file which should be converted to padded_docs format. Only then the LSTM layer can predict with the trained model. The predicted output will give you values in the range (0,1) but not exactly 0 or 1. Below output shows values like 0.9, 0.8 etc. array([[9.9962938e-01], [8.5913503e-01], [9.9966836e-01], [9.9902046e-01], [5.9763002e-01], [5.9763002e-01], [2.4047494e-04], [4.7051907e-04], [6.3633323e-03], [3.6294390e-05]], dtype=float32) Hope it gives some lights to the problem
