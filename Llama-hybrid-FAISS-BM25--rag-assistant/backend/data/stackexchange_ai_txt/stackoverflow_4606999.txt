[site]: stackoverflow
[post_id]: 4606999
[parent_id]: 4602562
[tags]: 
Firstly, your problem has hardly anything to do with PHP, so I have removed that tag and added more relevant tags. Smartly doing it will not require NxN comparisions. You can use lots of heuristics, but first I would like to ask you: Are all the copies of one image exact resize of each other (is there some cropping done - matching cropped images to the original could be more difficult and time consuming)? Are all images generated (resized) using the same tool? What about parameters you have used to resize? For example, are all pictures for displaying on PSP in the same resolution? What is your estimate of how many unique images you have (i.e, how many copies of each picture there might be - on an average)? Do you have any kind of categorization already done. For example, are all mobile images in separate folder (or of different resolution than the PC images)? This alone could reduce the number of comparisons a lot , even if you do brute force otherwise. A very top level hint on why you don't need NxN comparisions: you can devise many different approximate hashes (for example, the distribution of high/low frequency jpeg coefficients) and group "potentially" similar images together. This can reduce the number of comparisions required by 10-100 times or even more depending on the quality of heuristic used and the data set. The hashing can even be done on parts of images. 30000 is not a very large number if you use right techniques.
