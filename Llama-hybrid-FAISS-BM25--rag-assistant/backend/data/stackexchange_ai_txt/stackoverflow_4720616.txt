[site]: stackoverflow
[post_id]: 4720616
[parent_id]: 
[tags]: 
Should I write tests that directly map input to output, or dynamically generate a result?

It seems to me that there are two ways to write test cases: Map fixed inputs to fixed outputs and assert that they match Map generated or fixed inputs to dynamic outputs and assert that they match # Static testing: assert_equal "test".upcase, "TEST" # Dynamic testing: assert_equal person.full_name, "#{person.title} #{person.first_name} #{person.last_name}" Of course there are pros and cons to each approach. Duplicating implementation details feels wrong, but allows me to generate sample data and run tests on it. Hard coding values makes the correct output very explicit, but doesn't seem to lend it self to reusing code. Is the former the conventional way to write tests? Do you mix and match approaches? Is the latter method avoided for a good reason that I haven't thought of?
