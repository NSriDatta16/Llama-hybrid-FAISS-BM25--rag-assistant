[site]: stackoverflow
[post_id]: 1893654
[parent_id]: 
[tags]: 
Resizing an image in c# without losing lower an right pixel-parts

I have a c#-class that looks roughly like this: class ImageContainer { Image image; internal ImageContainer getResized(int width, int height) { Bitmap bmp = new Bitmap(width, height); //Create a System.Drawing.Graphics object from the Bitmap which we will use to draw the high quality scaled image System.Drawing.Graphics gr = System.Drawing.Graphics.FromImage(bmp); //Set the System.Drawing.Graphics object property SmoothingMode to HighQuality gr.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality; //Set the System.Drawing.Graphics object property CompositingQuality to HighQuality gr.CompositingQuality = System.Drawing.Drawing2D.CompositingQuality.HighQuality; //Set the System.Drawing.Graphics object property InterpolationMode to High gr.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic; //Draw the original image into the target Graphics object scaling to the desired width and height System.Drawing.Rectangle rectDestination = new System.Drawing.Rectangle(0, 0, width, height); gr.DrawImage(image, rectDestination, 0, 0, image.Width, image.Height, GraphicsUnit.Pixel); //dispose / release resources ImageContainer ic = new ImageContainer(); ic.image = bmp; return ic; } } The resizing works fine, but DrawImage doesn't draw the most right an lower pixel-fragments when scaling down an image.
