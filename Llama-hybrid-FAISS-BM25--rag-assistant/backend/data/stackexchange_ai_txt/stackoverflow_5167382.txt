[site]: stackoverflow
[post_id]: 5167382
[parent_id]: 5142890
[tags]: 
Creating a fragment doesn't take much more validation than creating a regular plugin. The only difference I can think of is that you'll have a "fragment.xml" instead of the usual "plugin.xml". A fragment will be deployed as a separate JAR that can be installed (fragments are by nature optional) by the client alongside its "host" plugin. How the fragment is deployed in your client's Eclipse depends on how you deliver the regular plugin. If you provide them with an update site, you'll have to make sure that your fragment is included in a feature (if you look at the feature.xml, you should have something like this when including a fragment) : unpack="false"/> If you deploy the jars, when you select both the plugin and its fragment and use right-click > export > deployable plug-ins and fragments , you'll see that there is a jar for both. That's it really, the build facilities of Eclipse take care of everything for you, whether you're deploying regular plug-ins or plug-in fragments.
