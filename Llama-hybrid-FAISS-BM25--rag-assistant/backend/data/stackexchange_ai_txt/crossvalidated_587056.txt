[site]: crossvalidated
[post_id]: 587056
[parent_id]: 582055
[tags]: 
Just in case a Bayesian approach is of interest, there are some potential tools readily available in R or Python for use. The one probably most appropriate for your case is the mcp package--regression with multiple changepoints. Another popular one is bcp . But here I will choose a package Rbeast ( https://github.com/zhaokg/Rbeast ) most familiar to me (bcz I wrote it) to illustrate the ideas using the sample data from @ user4422 : set.seed(1) n_obs temperature_threshold]=random_numbers[temperatures>temperature_threshold] + increase_if_above_threshold df library(Rbeast) out = beast( df$random_numbers, season='none', # only consider a trend component torder.minmax=c(0,0), # the piecewise trend is modelled as flat lines (i.e., the min and max polynomial orders are both 0) tcp.minmax =c(0,1) # as in your case, the possible range of number of changepoints are 0 to 1. ); plot(out, vars=c("y","t","tcp"), main='Posterior probability of changepoint in the mean trend') In the 'prob' subplot below is a curve of probability of changepoint occurrence. Apparently, peaks correspond to locations where changepoints occur. Print out some addition posterior statistics: The posterior probability of observing a mean shift at 3748 is 0.845. print(out) ##################################################################### # Trend Changepoints # ##################################################################### .-------------------------------------------------------------------. | Ascii plot of probability distribution for number of chgpts (ncp) | .-------------------------------------------------------------------. |Pr(ncp = 0 )=0.009|* | |Pr(ncp = 1 )=0.991|*********************************************** | .-------------------------------------------------------------------. | Summary for number of Trend ChangePoints (tcp) | .-------------------------------------------------------------------. |ncp_max = 1 | MaxTrendKnotNum: A parameter you set | |ncp_mode = 1 | Pr(ncp= 1)=0.99: There is a 99.1% probability | | | that the trend component has 1 changepoint(s).| |ncp_mean = 0.99 | Sum{ncp*Pr(ncp)} for ncp = 0,...,1 | |ncp_pct10 = 1.00 | 10% percentile for number of changepoints | |ncp_median = 1.00 | 50% percentile: Median number of changepoints | |ncp_pct90 = 1.00 | 90% percentile for number of changepoints | .-------------------------------------------------------------------. | List of probable trend changepoints ranked by probability of | | occurrence: Please combine the ncp reported above to determine | | which changepoints below are practically meaningful | '-------------------------------------------------------------------' |tcp# |time (cp) |prob(cpPr) | |------------------|---------------------------|--------------------| |1 |3748.000000 |0.84592 | .-------------------------------------------------------------------. Of the two possible signal structures--no changepoint(i.e., number of changepoint (ncp)=0 ) vs 1 changepoint (ncp=1), there is strong evidence supporting ncp=1 (the posterior probability is 0.991). You can also plot it out using barplot(o$trend$ncpPr, names.arg = c('numer of changepoints=0','numer of changepoints=1'))
