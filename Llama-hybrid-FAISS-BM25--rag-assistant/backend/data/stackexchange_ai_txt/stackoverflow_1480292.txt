[site]: stackoverflow
[post_id]: 1480292
[parent_id]: 
[tags]: 
UI automation tool for a windows based WPF application with Record and Playback feauture

I am in the process of recommending an UI automation tool for a windows based WPF application in a company Which targets wide range of customers . The Application lives on a layer of WCF services for getting The data. The company is already having a small VBScript framework written specifically for Test Complete and is really not robust, Hence I am lookout for a right tool, where we could reuse the scripts or Improve the already existing tool. Any ideas are welcome. I have looked at Microsoft UI Automation, Project White, UIA Verify and Ranorex. Each one of them Is having a feature lack. I was able to go through the process of Microsoft UI Automation. I am still in the process of understanding how it works with WPF, since it is totally dependent on Automation IDS. Our application is huge and is not written with this in mind. All the code either does not implement Automation ID property or Name property which is very much essential for object identification in the visual tree in tools like UISpy and VisualUIAVerify. What I am looking in specific are the following. Please give ratings to each of these 1) Recording : Recording , play back and automatic execution of test scripts and generate a report. 2) Dependencies : Minimal Dependencies(.NET frameworks, API modules , SDK Versions etc..) 3) )Code Generation : Code Generation of test scripts from Templates, Macros and Recording. 4)Object Name Mapping: Avoid explicit usage of Automation IDS and screen corrdinates, if they use, does it support any tools which would take XAML Files and insert Automation IDS into it and also avoid Problems With duplicate Automation IDS. 5) Events: Any Events and call backs that the user(tester) may receive if the GUI has undergone any changes and how the scripts would change in this Case. 6) Support : Support for different scripting languages and easy Code conversions(C#, VBScript, Python.. etc) 7) Fast and Reliable: Easy and fast accessibility of GUI elements for manipulation( Like support to xml dom, Json.. etc), navigation, code duplication replacement tasks for changes in UI and easy configuration(xml, ini files) 8)Code Converters: the tester writes code in vbscript and developer could simply convert it into c# for embedding them into any stand alone framework if need be). 9)Custom controls: Support for custom controls and object mapping. If you have a custom object that behaves like one of standard controls. are you able to map (tell the test tool that the custom control behaves like the standard) control? Does it support all the standard controls methods? Can you add the custom control to itâ€™s own class of control? 10)Reports: Should be able to execute multiple tests at once and generate a report similar to VisualUIAVerify.
