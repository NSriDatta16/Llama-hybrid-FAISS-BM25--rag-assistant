[site]: stackoverflow
[post_id]: 5007937
[parent_id]: 4371044
[tags]: 
From my brief experience I've made minor adjustments to your workflow and added comments: (master) $ git svn init (or (master) git svn clone ) (master) $ git svn fetch (master) $ git svn rebase (begin loop, resolve conflicts) (master) $ git checkout -B topic-branch ( careful before doing this) (topic-branch) ## HACK HACK COMMIT HACK COMMIT (use 3rd party) (topic-branch) $ git checkout master (master) $ git rebase topic-branch (resolve conflicts) (master) $ git svn rebase (resolve conflicts, if any) (master) $ git svn dcommit ( careful reading here) GOTO 3 (or 4 if no need to rebase again) I'm using master branch just for integration with SVN and doing all work on topic-branch , just like I believe you were. I hope this makes more sense, since I couldn't use your workflow the way it was even if it was basically what I wanted - evidently! :-) More details on the adjustments that were made: Attention to capital -B on step 4, it will reset the topic-branch so it's always new from current SVN. without it the loop would break giving an error "branch already exists". Step 7 using rebase rather than merge . yes, it will probably be a fast-forward merge, but it's better safe than sorry. picture if something is done between steps 6 and 7. Loop to 3 instead of 4. Also, just to play on the safe side. Seems like using svn rebase never is an abuse and since it's always done on master there's always branches as backup.
