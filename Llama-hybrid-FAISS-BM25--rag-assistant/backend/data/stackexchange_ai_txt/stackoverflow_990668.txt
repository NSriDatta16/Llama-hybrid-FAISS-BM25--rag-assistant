[site]: stackoverflow
[post_id]: 990668
[parent_id]: 516615
[tags]: 
I like Jimmy Bogard's solution to this problem. He has a post on his blog titled "Entity validation with visitors and extension methods" in which he presents a very elegant approach to entity validation that suggest the implementation of a separate class to store validation code. public interface IValidator { bool IsValid(T entity); IEnumerable BrokenRules(T entity); } public class OrderPersistenceValidator : IValidator { public bool IsValid(Order entity) { return BrokenRules(entity).Count() == 0; } public IEnumerable BrokenRules(Order entity) { if (entity.Id
