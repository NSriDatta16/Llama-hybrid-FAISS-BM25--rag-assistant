[site]: datascience
[post_id]: 43387
[parent_id]: 43386
[tags]: 
The first thing is to define a distance metric to say how close potential keys are. If the data is text, Levenshtein distance is a common distance metric. If the data is numeric, then Euclidean or Manhattan distance could work. If the data is geographic, then Haversine is a good choice. After defining a distance, a threshold needs to be set to for merging. The threshold could be picked by a person or learned by a machine learning algorithm. Typically, there is not enough data to train a machine learning algorithm. It is often good enough to just pick a threshold based on domain knowledge. If you can use R, there is the fuzzyjoin package . Given that you have to search the cartesian product of the space, evolutionary algorithms will take too much time.
