[site]: stackoverflow
[post_id]: 2143479
[parent_id]: 2141126
[tags]: 
As the post you linked to suggests there are several ways of achieving this sort of result. The first question is: What do you need to track? It sounds like there are two possible answers to that question in your case, which I'll address seperately. You need to track the message as received off the wire before BizTalk touches it This scenario often arises where you need to be able to prove that your BizTalk solution is not the source of any message corruption or degradation being seen in messages. There are two common approaches to this: Use a pipeline component such as the one as Ben Runchey suggests There is another example of a pipeline component for archiving here on codebetter.com . It looks good - just be careful if you use other components, and where you place this component, that you are still following BizTalk streaming model proper practices. BizTalk pipelines are all forwardonly streaming, meaning that your stream is readonly once, and all the work on them the happens in an eventing manner. This is a good approach, but with the following caveats: You need to be careful about the streaming employed within the pipeline component You are not actually tracking the on the wire message - what your pipeline actually sees is the message after it has gone through the BizTalk adapter (e.g. HTTP adapter, File etc...) Rely upon BizTalk's out of the box tracking BizTalk automatically persists all messages to the message box database and if you turn on BizTalk tracking you can make BizTalk keep these messages around. The main downside here is that enabling this tracking will result in some performance degradation on your server - depending on the exact scenario, this may not be a huge hit, but it can be signifigant. You can track the message after it has gone through the initial receive pipeline With this approach there are two main options, to use a pure messaging send port subscribing to the receive port, to use an orchestration send port. I personally do not like the idea of using an orchestration send port. Orchestrations are generally best used to model the business flow needed. Unless this archiving is part of the business flow as understood by standard users, it could simply confuse what does what in your solution. The approach I tend to use is to create a messaging send port in the BizTalk admin console that subscribes to your receive port. The send port will then just use a standard BizTalk file adapter, with a pass through pipeline.
