[site]: stackoverflow
[post_id]: 1674904
[parent_id]: 1672299
[tags]: 
What you're asking about is one of the main purposes of an MVC framework. Specifically your talking about the Model or data interface. What you should do, if you don't want to go with a full blown framework just yet, is create 2 classes. 1) DataObject 2) DataModel where "Data" is replaced with something intuitive like User or Products. In the DataObject you keep only properties of the data and similarly it is the only place where data is assumed to be correct. The DataObject though is only accessed directly through the DataModel. Inside the data model you keep all the getters and setters of the DataObject as well as any remote service calls you need to populate the DataObject. This is just the beginning of MVC style application development and if you truly want to move on to more flexible, manageable code you should consider going with a full blown framework. Two that i recomend are: 1) Swiz ( http://swizframework.org/ ) : a super simple event driven framework that really leverages the power of flex. 2) PureMVC ( http://puremvc.org/ ) : an easy to understand MVC code structure that emphasizes code decoupling and strict MVC architecture. I say start with one of those two and you'll be well on your way to becoming a better flex developer. a couple great tutorials: swiz: http://vimeo.com/7166397 pureMVC: http://active.tutsplus.com/tutorials/workflow/understanding-the-puremvc-open-source-framework/
