[site]: stackoverflow
[post_id]: 2043759
[parent_id]: 2036452
[tags]: 
If this is a standard WinForms application, then all you really need to do in your application is to add event handlers in your Form for DragEnter and DragDrop. Inside of DragEnter, you'll want to check the type of object to make sure it is a filename: private void MyForm_DragEnter(object sender, DragEventArgs e) { if (e.Data.GetDataPresent(DataFormats.FileDrop)) { string[] files = e.Data.GetData(DataFormats.FileDrop) as string[]; if (files != null) { // Do additional checks here if needed, like check extensions e.Effect = DragDropEffects.Copy; return; } } e.Effect = DragDropEffects.None; } Then in your DragDrop handler, I would simply store off the file names, and then activate a timer. This allows DragDrop to return immediately, so that the other application (in your example, Windows Explorer) does not hang while you do any processing on the file which may take time. The Drag Source will not return until DragDrop finishes. private void MyForm_DragDrop(object sender, DragEventArgs e) { string[] files = e.Data.GetData(DataFormats.FileDrop) as string[]; if (files != null) { _filesToProcess.Text = files[0]; // Assuming this is declared at the Form level // Schedule a timer to fire in a few miliseconds as a simple asynchronous method _DragDropTimer.Interval = 50; _DragDropTimer.Enabled = true; _DragDropTimer.Start(); Activate(); // Activates the form and gives it focus } }
