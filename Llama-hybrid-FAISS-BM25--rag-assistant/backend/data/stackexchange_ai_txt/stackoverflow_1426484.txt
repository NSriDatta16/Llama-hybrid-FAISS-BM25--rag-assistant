[site]: stackoverflow
[post_id]: 1426484
[parent_id]: 
[tags]: 
Pattern to create class instances by integer id?

I am reading a Stream, which provides an identifier (a simple int). Depending on the int different data follows, which i need to turn into objects. So far i created classes for each object type, and each class provides a read(InputStream input)-method which reads whatever data there is to be read for that kind of object (all object classes inherit from a common base class). However, there are numerous id's and thus numerous classes. What is the most elegant way to determine and create the instance of the class? The most naive approach i tried first was to have a switch-case block to create the instances, but i find that it clutters the code (unreasonably). It also forces me to have every class available at compile time. Second try was to create a map that maps each int to a class and use newInstance() to create the objects. There is still the problem that i need to initialize the map, which still requires that i have every class available at compile time. It more or less just moved the clutter from one place to another. Removing the compile time dependencies is not required, it would just be a bonus if possible. The main goal is to avoid the boilerplate code. Constraints: I don't want to add a library to solve this. Reflection is fine with me.
