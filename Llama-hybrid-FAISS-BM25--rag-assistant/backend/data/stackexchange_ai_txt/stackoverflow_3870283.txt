[site]: stackoverflow
[post_id]: 3870283
[parent_id]: 3869784
[tags]: 
This is a shot in the dark since I don't know what database you use, but I'd recommend you to consider dialog timers and activation . Assuming that most of the jobs have to do some data manipulation, and is likely that all have to do only data manipulation, leveraging activation and timers give an extremely reliable job scheduling solution, entirely embedded in the database (no need for an external process/service, not dependencies outside the database bounds like msdb), and is a solution that ensures scheduled jobs can survive restarts, failover events and even disaster recovery restores. Simply put, once a job is scheduled it will run even if the database is restored one week later on a different machine. Have a look at Asynchronous procedure execution for a related example. And if this is too radical, at least have a look at Using Tables as Queues since storing the scheduled items in the database often falls under the 'pending queue' case.
