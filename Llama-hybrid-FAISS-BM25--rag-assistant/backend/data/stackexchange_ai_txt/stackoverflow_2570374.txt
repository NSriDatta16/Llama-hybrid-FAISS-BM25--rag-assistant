[site]: stackoverflow
[post_id]: 2570374
[parent_id]: 2570265
[tags]: 
@Tom's recommendation to use Map is the preferred approach. Here's a trivial example that constructs such a Map for use by a static lookup() method. private enum Season { WINTER, SPRING, SUMMER, FALL; private static Map map = new HashMap (); static { for (Season s : Season.values()) { map.put(s.name(), s); } } public static Season lookup(String name) { return map.get(name); } } Note that every enum type has two implicitly declared static methods : public static E[] values(); public static E valueOf(String name); The values() method returns an array that is handy for constructing the Map . Alternatively, the array may be searched directly. The methods are implicit; they will appear in the javadoc of your enum when it is generated. Addendum: As suggested by @Bert F, an EnumMap may be advantageous. See Effective Java Second Edition , Item 33: Use EnumMap instead of ordinal indexing , for a compelling example of using EnumMap to associate enum s.
