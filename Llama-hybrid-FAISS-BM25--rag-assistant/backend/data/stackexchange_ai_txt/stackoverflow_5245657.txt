[site]: stackoverflow
[post_id]: 5245657
[parent_id]: 5245456
[tags]: 
There are several ways to do this, none of which are optimal. You can keep everything in memory by "faking" different pages, using hash-bang urls you can send them on via normal get parameters, but as you probably already know since you ask this question, this has limitations you can use html5 localstorage, but since it is not supported by anything but the newest browsers this is not good for a production site that needs to target a broad audience you can use cookies, but here you will run into the same limitations as the get urls parameters You can use flash storage, but that requires a flash app loaded on each page, and some users might not have flash or might have disabled flash local storage The best solution in my mind is #2: use get url parameters and keep state via the url. Be aware of the limitations of url length across various browsers, and "compress" your data so they minimize their footprint. The way to do this is usually to use as few url parameters as possible, holding comma separated bit flags. So for instance you can change url parameters from ?cars=ford,bmw,vw,mazda to ?c=23 and then test c bitwise against predefined variables like: var BMW = 1, VW = 2, FORD = 4, KIA = 8, MAZDA = 16; if(c & BMW) { bmw is set} if(c & VW) { vw is set} if(c & FORD) { ford is set} if(c & KIA) { kia is set} if(c & MAZDA) { mazda is set} This example is not meant to be pretty, only to show the concept. If you minimize your url footprint this way you can have a massive amount of data stored in an url, and you are unlikely to run into url size restrictions.
