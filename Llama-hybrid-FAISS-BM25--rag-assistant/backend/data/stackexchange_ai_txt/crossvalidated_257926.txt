[site]: crossvalidated
[post_id]: 257926
[parent_id]: 
[tags]: 
SVM+ as a QP problem

I'm trying to implement the SVM+, an SVM variant that uses privileged information $x^*$ at training time but predicts based only on the regular training data $x$: Here $K(x_i, x_j)$ and $K^*(x_i^*, x_j^*)$ are kernels in $X$ and $X^*$ spaces that define inner products in $Z$ and $Z^*$ spaces and $\alpha, \beta$ are the solution of the following optimization problem: maximize the functional \begin{multline} R(\alpha, \beta) = \sum_{i=1}^\ell \alpha_i - \frac12 \sum_{i,j=1}^\ell \alpha_i \alpha_j y_i y_j K(x_i, x_j) \\ - \frac{1}{2 \gamma} \sum_{i,j=1}^\ell (\alpha_i + \beta_i - C)(\alpha_j + \beta_j - C) K^*(x_i^*, x_j^*) \end{multline} subject to three types of constraints \begin{gather} \sum_{i=1}^\ell (\alpha_i + \beta_i - C) = 0 \\ \sum_{i=1}^\ell y_i \alpha_i = 0 \\ \alpha_i \ge 0, \quad \beta_i \ge 0 \end{gather} I've read this tech report which manages to turn the above problem into a problem that a QP solver can understand: Celik, Izmailov and McDaniel. Proof and Implementation of Algorithmic Realization of Learning Using Privileged Information (LUPI) Paradigm: SVM+. Institute of Networking and Security Research (INSR) Technical Report, 20 December 2015, NAS-TR-0187-2015. I was hoping somebody could give a more intuitive explanation and help me understand how to turn $R$ into the form $\frac{1}{2}x^TPx-qx$ as I'm really struggling to follow it.
