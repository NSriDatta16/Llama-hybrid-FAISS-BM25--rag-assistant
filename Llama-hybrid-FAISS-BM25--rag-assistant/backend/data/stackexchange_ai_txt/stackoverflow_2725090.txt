[site]: stackoverflow
[post_id]: 2725090
[parent_id]: 2720061
[tags]: 
Storage_Offset is a special integeral type in package System.Storage_Elements that can be added to objects of type System.Address . What exactly the units of Address and Storage_Offset are is implementation defined, but probably just about every implementation in existence uses bytes. So Next_Address + Storage_Offset'(4) means "the address four bytes past whatever Next_Address refers to." You talked a bit about Ada porting. In 99% of cases, that is a very stupid idea (the %1 being when you need to port to a platform that has no Ada compiler). I'd say the same thing no matter what language you are porting. It's a fool's game. The best outcome you can hope for when porting code is that after a ton of effort it works as well as it did before. With coding the best case never happens. Ada can interface to C just fine, so it would be far smarter to keep unchanged code in Ada and only "port" stuff you need to change. If you come across any tasking code, protected types, or custom streams you will be in a world of hurt. Those things don't really have easy C analogs. If your bosses really have a boner for C or something, I'd suggest looking into Sofcheck's AdaMagic , which provides a service to transform Ada code to ANSI C. Back in the day (two owners prior) they used to claim that it produced maintainable C code. Either way, it will probably be far cheaper than having an inexperienced (in Ada) developer try to do it all by hand.
