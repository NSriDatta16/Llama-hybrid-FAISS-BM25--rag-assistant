[site]: stackoverflow
[post_id]: 1023440
[parent_id]: 1023146
[tags]: 
I personally use the return keyword to distinguish between what I call functional methods , i.e. methods that are executed primarily for their return value, and procedural methods that are executed primarily for their side-effects. So, methods in which the return value is important, get an extra return keyword to draw attention to the return value. I use the same distinction when calling methods: functional methods get parentheses, procedural methods don't. And last but not least, I also use that distinction with blocks: functional blocks get curly braces, procedural blocks (i.e. blocks that "do" something) get do / end . However, I try not to be religious about it: with blocks, curly braces and do / end have different precedence, and rather than adding explicit parentheses to disambiguate an expression, I just switch to the other style. The same goes for method calling: if adding parentheses around the parameter list makes the code more readable, I do it, even if the method in question is procedural in nature.
