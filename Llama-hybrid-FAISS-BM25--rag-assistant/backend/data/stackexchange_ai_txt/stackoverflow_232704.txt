[site]: stackoverflow
[post_id]: 232704
[parent_id]: 232681
[tags]: 
First books, you'll need to know some of the GoF patters but more importantly you need to understand the principles behind the patterns. Understand the differences between old-style (use inheritance for code-reuse) vs. new style (prefer encapsulation over inheritance) oo design. Two good books to read are Design Patterns Explained by Shalloway and Trott and Agile Software Development, Principles, Patterns, and Practices by Bob Martin. Then you need experience. The theory in books is nice but you need to fine tune your sense of when to use what. How to use process to fine tune your designs (Steven A. Lowe already named iterations) lots of old-timey-oo-gurus described iterative programming and oo-programming in the same papers and books. And last but I think most importantly you need feedback and communication. Talk to other programmers preferably outside the organization you work in. Try to work with as many people as possible (OSS is nice for that) eventually you learn from people not books.
