[site]: crossvalidated
[post_id]: 78420
[parent_id]: 78359
[tags]: 
@Glen_b suggested using dynamic time warping. There is an R package for DTW calculations. It works for the example, except for that I have not managed to implement the constraint that "growth rate" or rather minimum step in this context should be > 0. On the other hand implementing such a constraint for the example data would not make much sense because of few reference index points. So here is how it goes: library(dtw) res $value, curve$ value, keep = T, step=typeIIIc) library(plyr) names $date, index = seq_along(curve$ date)) points $date index2, from = names $index, to = as.character(names$ date))) library(ggplot2) library(scales) ggplot() + geom_line(data = curve, aes(x = date, y = value)) + geom_text(data = points, aes(x=date, y=value, label = distance), color = "red") + scale_x_date(name = "Month", breaks = date_breaks("months"), labels = date_format("%b")) Red numbers are the fitted points. Line represents the "curve". LetÂ´s try this on more reference index points: new.date $date[1], to = curve$ date[length(curve$date)], by = "day") curve Red points are the old reference index points. Line represents loess curve fitted on the "curve" values. I encounter problems when trying to define the step for dtw : res.new $value, new.curve$ value, keep = T, step=typeIIIc) #Error in dtw(points $value, new.curve$ value, keep = T, step = typeIIIc) : No warping paths exists that is allowed by constraints If I remove the step , fitting works, but now the function fits query indices on reference indices n = length(new.date). res.new $value, new.curve$ value, keep = T) plot(res.new, "twoway") I want only one time point for each query. Not an average over a longer period, so I am having difficulties to make this method work for the problem. This is no doubt my fault, because dtw package documentation is not very easy to understand. Any suggestions how to proceed?
