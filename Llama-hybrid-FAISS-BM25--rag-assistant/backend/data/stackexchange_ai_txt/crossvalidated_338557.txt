[site]: crossvalidated
[post_id]: 338557
[parent_id]: 
[tags]: 
Stack Implementation - Random Forest & Linear Regression cross_val_score

I use a stack of RF and LR as follows: tscv = TimeSeriesSplit(n_splits=3) for train_index, test_index in tscv.split(X): print("TRAIN:", train_index, "TEST:", test_index) X_train, X_test = X[train_index], X[test_index] y_train, y_test = Y[train_index], Y[test_index] # build a pure Random Forest rf = RandomForestRegressor(random_state=1, n_jobs=-1,verbose=3,n_estimators=20).fit(X_train, y_train) y_rf = rf.predict(X_test) # build a pure linear model linear = HuberRegressor().fit(X_train, y_train) y_lin = linear.predict(X_test) #build a stack of two models lin_resid = y_train - cross_val_score(linear, X_train, y_train,verbose=5,n_jobs=-1) rf.fit(X_train, lin_resid) y_stack = y_lin + rf.predict(X_test) I want to use cross_val_score and get the following error: ValueError: operands could not be broadcast together with shapes (62964,) (3,) Why is that? cross_val_predict works.
