[site]: stackoverflow
[post_id]: 4344393
[parent_id]: 4319222
[tags]: 
A slight variant on the elegant method given by High Performance Mark: Select[Tuples[{a, b, c, d}, 3], OrderedQ] Permutations is slightly more versatile (but not what you are looking for?) For example: Select[Permutations[ Sort@Flatten@ConstantArray[{a, b, c, d}, {3}], {2, 3}], OrderedQ] gives the following Edit: Select[Tuples[Sort@{a, b, d, c}, 3], OrderedQ] is probably better Edit-2 Of course, Cases may also be used. For example Cases[Permutations[ Sort@Flatten@ConstantArray[{a, b, d, c}, {3}], {2, 3}], _?OrderedQ] Edit-3. The two approaches will differ if the list contains a repeated element. The output from the following (approach 2), for example, will contain duplicates (which may or may not be desired): Select[Tuples[{a, b, c, d, a}, 3], OrderedQ] They may easily be got rid of: Union@Select[Tuples[{a, b, c, d, a}, 3], OrderedQ] The following evaluates to 'True' (remove duplicate elements from the list presented to approach 2, and Sort the list produced by approach 1 (High Performance Mark method): lst = RandomInteger[9, 50]; Select[Union@Sort@Tuples[lst, 3], OrderedQ] == Sort@DeleteDuplicates[Map[Sort, Tuples[lst, 3]]] as does the following (remove duplicates from output of approach 2, Sort output of approach 1): lst = RandomInteger[9, 50]; Union@Select[Sort@Tuples[lst, 3], OrderedQ] == Sort@DeleteDuplicates[Map[Sort, Tuples[lst, 3]]] Sorry about that!
