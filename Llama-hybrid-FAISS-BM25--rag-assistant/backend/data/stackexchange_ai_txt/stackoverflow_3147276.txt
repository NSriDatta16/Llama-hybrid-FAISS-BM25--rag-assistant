[site]: stackoverflow
[post_id]: 3147276
[parent_id]: 3147156
[tags]: 
Where C (and Objective C) casts are heavy rubberized mallets, the C++ casts are a set of chisels. They are there to allow you to declare the specific kind of cast you'd like to make, and let the compiler help you enforce that specific kind of cast only. Since casts can be dangerous, the limited scope of each of these casts makes them safer â€“ and the more awkward syntax is touted as an advantage, since it works to discourage overuse of casts. The one that's quite different from Objective C is dynamic_cast , which does an additional runtime check to make sure the object is of the desired type before casting to it, and returning 0 or throwing an exception if it doesn't exist. It is similar to invoking isKindOfClass on an NSObject before doing an Objective C cast, and in the C++ world is very useful for downcasting. Note, however, that because of dynamic method dispatch in Objective C, you don't have to downcast an object before you can send it specific messages for its type, so the role of downcasting is less than it is in the C++ world.
