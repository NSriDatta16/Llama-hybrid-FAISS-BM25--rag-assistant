[site]: crossvalidated
[post_id]: 641355
[parent_id]: 
[tags]: 
Multilayer Perceptron vs. Recurrent Neural Network for Time Series Forecasting: Utilizing Multiple Lagged Values

I am currently analyzing daily sales data for a product sold across multiple stores using a Multilayer Perceptron (MLP) model. For simplicity, let's assume it consists of a single layer, structured as follows: $$ \text{MLP:} $$ $$ h_t = f(UX_t), $$ $$ Y_t = Wh_t, $$ Here, $X_t$ encompasses both lagged and seasonal lagged values of $Y_t$ , specifically $$X_t = [Y_{t-1}, \ldots, Y_{t-p}, Y_{t-m}, \ldots, Y_{t-mP},\ldots],$$ where $m$ indicates the seasonal period, and $p$ and $P$ represent the simple and seasonal autoregressive orders, respectively. Additionally, $X_t$ incorporates exogenous variables such as Fourier terms, holidays, dummies for the day of the week and month of the year, and other sales-impacting factors. This model surpasses a harmonic dynamic regression model with the same exogenous variables, excluding lagged values, but with ARIMA erros. Although the model's accuracy at predicting sales for individual stores is moderate, its performance is very good when forecasts are aggregated to produce a global daily prediction. I am confident in the model's appropriateness for the dataset and pleased with the outcomes. Nevertheless, I have contemplated switching to a Recurrent Neural Network (RNN) model, described as follows: $$ \text{RNN:} $$ $$ h_t = f(U_1X_t + U_2h_{t-1}), $$ $$ Y_t = Wh_t, $$ In this model, $X_t$ is defined identically to the MLP model. I believe this formulation is accurate and argue that simplifying $X_t$ to only include a single lagged value and the additional features would lead to a less precise model fit. My question is whether it's a standard practice to train RNN models for time series data using multiple lagged values, as I have seldom seen this approach discussed or mentioned in existing literature. Is employing multiple lagged values a common strategy when applying RNNs to time series forecasting?
