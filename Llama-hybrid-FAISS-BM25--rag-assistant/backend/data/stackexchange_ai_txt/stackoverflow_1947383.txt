[site]: stackoverflow
[post_id]: 1947383
[parent_id]: 1945335
[tags]: 
Exactly. You cannot bind to attached property, in a way you want, because you have to know an object where it's attached. How to do this? I see three options (but there are many more). Whenever you are dragging use global mouse events listener ( Mouse.MouseMoveEvent ) in the custom status bar class. Expose static event from DragAndDropManager , subscribe to it in the custom status bar class. Whenever drag occurs, fire event from DragAndDropManager . But be careful with static events. It's very easy to introduce a memory leak... Convert DragAndDropManager into singleton. Implement INotifyValueChanged in it, create instance property MousePoint , for say. Bind to it from statusbar: Text="{Binding MousePoint.X, Source={x:Static local:DragDropBehavior.Instance}}" Whenever drag occurs, update instance property, and raise property changed event. Hope this helps, Cheers, Anvaka
