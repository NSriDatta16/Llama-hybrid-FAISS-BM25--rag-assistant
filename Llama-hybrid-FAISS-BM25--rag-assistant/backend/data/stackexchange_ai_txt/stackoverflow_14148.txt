[site]: stackoverflow
[post_id]: 14148
[parent_id]: 6126
[tags]: 
Try looking at Functors and Predicates. The Apache Commons project has a great set of objects to allow you to encapsulate conditional logic into objects. Example of their use is available on O'reilly here . Excerpt of code example: import org.apache.commons.collections.ClosureUtils; import org.apache.commons.collections.CollectionUtils; import org.apache.commons.collections.functors.NOPClosure; Map predicateMap = new HashMap(); predicateMap.put( isHonorRoll, addToHonorRoll ); predicateMap.put( isProblem, flagForAttention ); predicateMap.put( null, ClosureUtils.nopClosure() ); Closure processStudents = ClosureUtils.switchClosure( predicateMap ); CollectionUtils.forAllDo( allStudents, processStudents ); Now the details of all those isHonorRoll predicates and the closures used to evaluate them: import org.apache.commons.collections.Closure; import org.apache.commons.collections.Predicate; // Anonymous Predicate that decides if a student // has made the honor roll. Predicate isHonorRoll = new Predicate() { public boolean evaluate(Object object) { Student s = (Student) object; return( ( s.getGrade().equals( "A" ) ) || ( s.getGrade().equals( "B" ) && s.getAttendance() == PERFECT ) ); } }; // Anonymous Predicate that decides if a student // has a problem. Predicate isProblem = new Predicate() { public boolean evaluate(Object object) { Student s = (Student) object; return ( ( s.getGrade().equals( "D" ) || s.getGrade().equals( "F" ) ) || s.getStatus() == SUSPENDED ); } }; // Anonymous Closure that adds a student to the // honor roll Closure addToHonorRoll = new Closure() { public void execute(Object object) { Student s = (Student) object; // Add an award to student record s.addAward( "honor roll", 2005 ); Database.saveStudent( s ); } }; // Anonymous Closure flags a student for attention Closure flagForAttention = new Closure() { public void execute(Object object) { Student s = (Student) object; // Flag student for special attention s.addNote( "talk to student", 2005 ); s.addNote( "meeting with parents", 2005 ); Database.saveStudent( s ); } };
