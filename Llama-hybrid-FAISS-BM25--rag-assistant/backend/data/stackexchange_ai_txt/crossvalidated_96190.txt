[site]: crossvalidated
[post_id]: 96190
[parent_id]: 
[tags]: 
How do I correct for gender bias for Bayesian credible intervals?

Forgive me if this question is answered elsewhere - it may be all I need to be told is the correct terminology. I have a survey in which I ask a number of Yes/No questions (actually Yes/No/Don't know - but for simplicity I want to assume Yes/No for now). Say for one question I have 583 say yes and 237 say no. Suppose I had really no idea what the proportion of yes and no would be in the population as a whole (this was reasonably accurate), so that my prior belief can be represented by a uniform distribution over the proportion who would say yes in the population, then, if I have understood Bayesian inference properly, I obtain a Beta posterior distribution. I can compute credible intervals from that (using scipy.stats.beta.interval(0.95, 583, 237) for instance). (For Yes/No/Don't know I can use a Dirichlet distribution). But in fact my survey includes men and women. Consistently women are less likely to say yes than men. In my sample the yes v no numbers are: 172 v 118 (for women) and 411 v 119 (for men). As you can see more men answered the survey than women. I'd like to correct for that but I don't know how. Eg, I could fractionally weight the men's answers by the ratio of men/women. The problem is that I don't know how to compute credible intervals for the weighted numbers that would result. When I try to approach this from first principles, I get stuck working out what a good prior is. If P(M) is my prior belief that the proportion of men who would say yes in the population is M (and P(F) has the corresponding meaning) with m and f representing the sample values then I am computing P(M, F | m, f) via Bayes' theorem and I need a prior for P(M, F) . Although I have no real knowledge about Yes/No proportions for men or women individually I am quite sure they are correlated in some way. Are there well know priors that can incorporate that weak prior knowledge? Or can I avoid working out the whole problem and just do some kind of weighting? Telling me where to look would be very useful.
