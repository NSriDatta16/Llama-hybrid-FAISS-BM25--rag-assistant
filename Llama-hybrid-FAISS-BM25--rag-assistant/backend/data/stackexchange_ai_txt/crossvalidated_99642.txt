[site]: crossvalidated
[post_id]: 99642
[parent_id]: 
[tags]: 
Average of several categorical random variables

Say I have a categorical random variable $X$ over a discrete label space $L$ = {Sky, Road, Tree, Unknown}. In other words each $X_i \in L$. Now I store the parameters of each $X_i$ which are the individual probabilities i.e P(X_i = Sky), P(X_i = Road), ...$. Now say say I have several of these $X_1, X_2,...,X_m$. I want to get a new random variable $X_A$ which denotes the the average of $X_1, X_2,...,X_m$. So currently I am computing the parameters of $X_A$ by simply averaging the parameters of $X_1, X_2,...,X_m$. My question is that if the above approach is correct? More Details: Since I store the parameters of each $X_i$ : P(X_i = Sky), P(X_i = Road),.. as a vector $P_i$ of size $|L|$. I am using the following equation to compute the average: $P_A = (\sum_{i=1}^{m} P_i )/m$ and then normalize as $P_A = P_A / (\sum_{l=1}^{|L|} P_A[l] )$ And if I am storing Log Probabilities in each $P_i= [\log P(X_i= Sky), \log P(X_i= Road), ..]$ then I am doing: $P_A = \log \sum_{i=1}^{m} \exp (P_i) - \log(m)$ and normalize as $P_A = P_A - \log \sum_{l=1}^{|L|} \exp(P_A[l])$ where $\log \sum \exp$ is as described here . One side question is that if there is more efficient way of computing this when storing log-probabilities (2nd equation)? A grounded application of this averaging can be as following: Say you 3D voxels of some size where each voxel stores a random variable $X_i$ denoting its label Sky, Road, Tree, Unknown. Now you want to move to more coarse representation with bigger voxels (octree) so you need compute the average $X_A$ of all the smaller voxels inside the new voxel.
