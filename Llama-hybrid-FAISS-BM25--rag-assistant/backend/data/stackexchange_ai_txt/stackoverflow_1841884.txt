[site]: stackoverflow
[post_id]: 1841884
[parent_id]: 1841859
[tags]: 
I recommend listening to the Herding Code podcasts with Glenn Block. ( Part 1 and Part 2 ). He goes into this exactly subject, in much more detail than we can answer here. That being said - MEF and Unity are the two things that have quite a bit of overlap. Prism, in its default form, uses Unity for its dependency injection. You can use Prism with MEF, if you like, instead. Prism is designed more for building composite applications. MEF, on the other hand, is about extensibility. There is definitely some overlap in goals here, but the basic driving factor is different. In Prism's case, it's all about organizing known code. MEF, on the other hand, is about discovering new code, and injecting it appropriately. The newest guidance I've seen, which I fully agree with, was just posted on Glenn Block's blog : "If you are starting fresh you can use MEF for modularity, and general aspects of your composite app. Where appropriate you can pull in Prism bits."
