[site]: stackoverflow
[post_id]: 2105664
[parent_id]: 2105571
[tags]: 
OK the way we handle it is as follows. We have an extra column on every table called 'Deleted' this is a bit field. Then as you rightly have said your queries are quite simple as its just a where clause to filter them out or leave them in. Only thing you need to make sure is that any reporting or stats that you generate filter out the deleted records. Then for the extra info that you are talking about wanting to capture, just this extra info s would go in a separate 'audit' like table. In our case we have made this extra table quite generic and it can hold this audit info for any table... see below how it works... Event EventId EventName ... Deleted 1 Dinner 0 2 Supper 1 3 Lunch 0 4 Lunch 1 Audit AuditId EntityTypeId EntityId ActionTypeId ActionDateTime ... etc 1 1 (Event) 2 (EventId) 1 (Deleted) 2/1/2010 12:00:00 1 1 (Event) 4 (EventId) 1 (Deleted) 3/1/2010 12:00:00 Now if you have other entities you want to capture (like Location - where Location is a table) as well it would look like this... Audit AuditId EntityTypeId EntityId ActionTypeId ActionDateTime ... etc 1 1 (Event) 2 (EventId) 1 (Deleted) 1/1/2010 12:00:00 1 1 (Event) 4 (EventId) 1 (Deleted) 2/1/2010 12:00:00 1 2 (Event) 2 (LocationId) 1 (Deleted) 3/1/2010 12:00:00 1 2 (Event) 8 (LocationId) 1 (Deleted) 4/1/2010 12:00:00 1 2 (Event) 9 (LocationId) 1 (Deleted) 5/1/2010 12:00:00 Then when you want to get out the extra audit data you are talking about its quite simple. The query would look something like this SELECT * FROM Event E INNER JOIN Audit A ON E.EventId = A.EntityId WHERE E.Deleted = 1 AND A.EntityTypeId = 1 -- Where 1 stands for events Also this audit table can capture other events and not just deletes... This is done via using the ActionTypeId column. At the moment it just has 1 (which is delete), but you could have others as well. Hope this helps EDIT: On top of this if we have strong Audit requirements we do the following... None of the above changes but we create a second database called 'xyz_Audit' which captures the pre and post for every action that happens within the database. This second database has the same schema as the first database (without the Audit table) except that every table has 2 extra columns. The first extra column is a PrePostFlag and the second column is the AuditId. Hence the primary key now goes across 3 columns, 'xyzId', 'PrePostFlag' and 'AuditId'. By doing this we can give the admins full power to know who did what when, the data that changed and how it changed and to undelete a record we just need to change the deleted flag in the primary database. Also by having this data in a different database it allows us to have different optimization, storage and management plans to the main transnational database.
