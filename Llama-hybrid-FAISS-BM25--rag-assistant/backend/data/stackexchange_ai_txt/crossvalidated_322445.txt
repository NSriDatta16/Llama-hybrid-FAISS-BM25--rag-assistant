[site]: crossvalidated
[post_id]: 322445
[parent_id]: 322438
[tags]: 
An approach for point 2 would be: keep some of the lines as test data. I call one string x. Under the learned VAE model, you have the ELBO as the approximation to the true likelihood p(x). You can use the ELBO as a surrogate for p(x), compute the likelihood for test strings and for strings, you have generated randomly. If it has learned sth, the test strings must have a higher p(x) (ELBO(x)) than the randomly generated strings. You can also start modifying a test string digit by digit and show that the likelihood decreases for the modified digit... But this of course a very coarse verification... For point 1: you could try to visualize the strings as images... make gray values from the characters (for instance using their ASCII values), say 8x11 images and try to recognize patterns by eye. Then you can generate new strings from your trained VAE model, reshape to 8x11 and inspect them visually and try to see some sort of resemblance. But this has the assumption that there is some pattern that is visually recognizable, of course...
