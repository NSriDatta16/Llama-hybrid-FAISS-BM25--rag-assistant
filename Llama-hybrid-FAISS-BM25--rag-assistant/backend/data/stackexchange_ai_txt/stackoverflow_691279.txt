[site]: stackoverflow
[post_id]: 691279
[parent_id]: 691184
[tags]: 
Let's start by eliminating StringTokenizer . It is getting old and doesn't even support regular expressions. Its documentation states: StringTokenizer is a legacy class that is retained for compatibility reasons although its use is discouraged in new code. It is recommended that anyone seeking this functionality use the split method of String or the java.util.regex package instead. So let's throw it out right away. That leaves split() and Scanner . What's the difference between them? For one thing, split() simply returns an array, which makes it easy to use a foreach loop: for (String token : input.split("\\s+") { ... } Scanner is built more like a stream: while (myScanner.hasNext()) { String token = myScanner.next(); ... } or while (myScanner.hasNextDouble()) { double token = myScanner.nextDouble(); ... } (It has a rather large API , so don't think that it's always restricted to such simple things.) This stream-style interface can be useful for parsing simple text files or console input, when you don't have (or can't get) all the input before starting to parse. Personally, the only time I can remember using Scanner is for school projects, when I had to get user input from the command line. It makes that sort of operation easy. But if I have a String that I want to split up, it's almost a no-brainer to go with split() .
