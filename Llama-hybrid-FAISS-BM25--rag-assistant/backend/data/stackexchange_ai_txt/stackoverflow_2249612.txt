[site]: stackoverflow
[post_id]: 2249612
[parent_id]: 2246116
[tags]: 
As others have said, create a separate table of message types. When you add a record to the message table, check if the message type already exists in the table. If not, add it. In either case, then post the identifier from the message type table into the message table. This should give you normalized data. Yes, it's a little extra time when you add a record, but should be more efficient on retrieval. If there are a lot more adds then reads and if the "message type" is short, an entirely different approach would be to still create the separate message type table, but don't reference it when doing adds, and only update it lazily, on demand. Namely, (a) Include a time-stamp in each message record. (b) Keep a list of the message types found as of the last time you checked. (c) Each time you check, search for any new message types added since the last time, as in: create table temp_new_types as (select distinct message_type from message where timestamp>last_type_check ); insert into message_type_list (message_type) select message_type from temp_new_types where message_type not in (select message_type from message_type_list); drop table temp_new_types; Then store the timestamp of this check somewhere so you can use it the next time around.
