[site]: stackoverflow
[post_id]: 3092759
[parent_id]: 
[tags]: 
Sustaining early releases of a product

The context is as follows: Enterprise software developed without enough direct customer involvement. We did not develop this software for a particular customer but to fill in a market gap. We worked the core requirements with major customers only, more customers jump on now. Mandated deadlines, requirements changing, little time to design. Fun time! :) We got the first release out of the door. Then we got second release out of the door (luckily in a more organized fashion) Most problems that the sustaining engineering is facing for both releases are what they call 'design bugs' rather than good old code defects. In general these 'design bugs' are such that a feature or part of a feature behaves as designed but that behavior is not what some customers want the product to do. It is not that all customers have these problems - each customer is different and what is enough for one is not for the other. This makes me wonder about several things and I could really use an insight from y'all with more experience. Here are some esoteric questions : How much do you think is this a common phenomenon in product lifetime? How much do you think did the context contribute to this? What is/was your experience and context?
