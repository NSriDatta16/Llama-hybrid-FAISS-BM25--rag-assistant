[site]: crossvalidated
[post_id]: 447013
[parent_id]: 443154
[tags]: 
I believe I managed to model this! The stan code that I used is below. int T; // Number of time periods int N; // number of stores vector [N] n; // Average number people entering a store per week n_i int test[N]; // Whether a store is a test store or not int c[T, N]; // Number of purchases per time period } parameters { real P; // Maximum carrying capacity vector [2] r; // Rate parameter for each group real t0[N]; // Location shift for each store's growth curve // Product introduced t=0; t0 > 0 helps with convergence } model { P ~ beta(1, 1); r ~ exponential(0.01); t0 ~ normal(0, 200); for (i in 1:N) { for (t in 1:T) { if (test[i] == 0) c[t, i] ~ poisson(P / (1 + exp(- r[1] * (t - t0[i]))) * n[i]); else c[t, i] ~ poisson(P / (1 + exp(- r[2] * (t - t0[i]))) * n[i]); } } } I have also experimented with just estimating a distribution for t0 within each group by replacing real t0[N] by vector[2] t0 in the parameters, and then t0[i] by t0[1] or t0[2] as appropriate in the model. Both seem to give reasonable results, although the additional constraints on t0 seem to overwhelm my ability to estimate P , which is interesting.
