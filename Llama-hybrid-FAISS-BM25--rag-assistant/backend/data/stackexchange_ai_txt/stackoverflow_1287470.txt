[site]: stackoverflow
[post_id]: 1287470
[parent_id]: 1287146
[tags]: 
I think you want var value = (from t in _table where t.Id == id && t.Time >= intervalStartTime && t.Time This way, you get a double? back, whereas without the (int?) cast you need to get a double back, which cannot be null . This is because of the signatures double Enumerable.Average(IEnumerable source) double? Enumerable.Average(IEnumerable source) Now, to get an average of 0 instead of null, you need to place the coalescing operator at the end var value = (from t in _table where t.Id == id && t.Time >= intervalStartTime && t.Time IMHO this is a pretty awful design of the Enumerable / Queryable class; why can't Average(IEnumerable ) return double? , why only for Average(IEnumerable ) ?
