[site]: stackoverflow
[post_id]: 543431
[parent_id]: 543319
[tags]: 
Ideally you would use an ashx to send XML although I do allow code in an ASPX to intercept normal execution. Response.Clear() I don't use this if you not sure you've dumped anything in the response already the go find it and get rid of it. Response.ContentType = "text/xml" Definitely, a common client will not accept the content as XML without this content type present. Response.Charset = "UTF-8"; Let the response class handle building the content type header properly. Use UTF-8 unless you have a really, really good reason not to. Response.Cache.SetCacheability(HttpCacheability.NoCache); Response.Cache.SetAllowResponseInBrowserHistory(true); If you don't send cache headers some browsers (namely IE) will cache the response, subsequent requests will not necessarily come to the server. You also need to AllowResponseInBrowser if you want this to work over HTTPS (due to yet another bug in IE). To send content of an XmlDocument simply use: dom.Save(Response.OutputStream); dom.Save(Response.Output); Just be sure the encodings match, (another good reason to use UTF-8). The XmlDocument object will automatically adjust its embedded encoding="..." encoding to that of the Response (e.g. UTF-8 ) Response.End() If you really have to in an ASPX but its a bit drastic, in an ASHX don't do it.
