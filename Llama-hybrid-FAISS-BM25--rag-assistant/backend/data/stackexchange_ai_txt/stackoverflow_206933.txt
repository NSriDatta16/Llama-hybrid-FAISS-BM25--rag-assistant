[site]: stackoverflow
[post_id]: 206933
[parent_id]: 199016
[tags]: 
Found solution. Problem is very strange ugly and really hard to find. Somwhere on the internet I found that when you are linking opengl32.lib while compiling c++ application it must be placed before gdi32.lib. The reason for this is that (supposedly) opengl32.dll is overwriting ChoosePixelFormat and SetPixelFormat functions (and probably more :-). As I found in my c++ version, accidentally it was the case. Heh, but how to do it in C# After few days of searching I found that in tao framework they solved it using kernel32.dll LoadLibrary() function and loading opengl32.dll before calling SetPixelFormat public static bool SetPixelFormat(IntPtr deviceContext, int pixelFormat, ref PIXELFORMATDESCRIPTOR pixelFormatDescriptor) { Kernel.LoadLibrary("opengl32.dll"); return _SetPixelFormat(deviceContext, pixelFormat, ref pixelFormatDescriptor); } So we know that opengl32.dll must be loaded before gdi32.dll, is there any other way of doing this. After while I thought that we can call some NOP function from opengl32.dll to load it. For example: [DllImport("opengl32.dll", EntryPoint = "glGetString", CharSet = CharSet.Auto, SetLastError = true, ExactSpelling = true)] static extern IntPtr _glGetString(StringName name); public static string glGetString(StringName name) { return Marshal.PtrToStringAnsi(_glGetString(name)); } public enum StringName : uint { GL_VENDOR = 0x1F00, GL_RENDERER = 0x1F01, GL_VERSION = 0x1F02, GL_EXTENSIONS = 0x1F03 } and on the start of application, before any call to gdi32.dll I use this: GL.glGetString(0); Both ways solves the problem.
