[site]: stackoverflow
[post_id]: 3246725
[parent_id]: 3244439
[tags]: 
PRAGMA AUTONOMOUS_TRANSACTION This will allow you to log and commit your log without impacting the surrounding transaction(s). Logging is one of the very few acceptable use cases for autonomous transactions. It does what it says, allows you to write a pl/sql function/procedure that can commit its work without impacting the transaction it may or may not be already participating in. It is 'autonomous'. au·ton·o·mous 1. (of a country or region) Having self-government. 2. Acting independently or having the freedom to do so: "an autonomous committee of the school board". Oracle docs : The AUTONOMOUS_TRANSACTION pragma changes the way a subprogram works within a transaction. A subprogram marked with this pragma can do SQL operations and commit or roll back those operations, without committing or rolling back the data in the main transaction. CREATE OR REPLACE FUNCTION FNC_LOG(p_log_text varchar2(4000)) RETURN NUMBER IS PRAGMA AUTONOMOUS_TRANSACTION; BEGIN -- Your brief code goes here (don't abuse the evil feature that is autonomous transactions). END;
