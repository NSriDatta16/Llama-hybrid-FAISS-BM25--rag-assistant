[site]: datascience
[post_id]: 80175
[parent_id]: 
[tags]: 
What kind of neural network is the best for classifying a series of vectors

I am currently working on a project where I decided that it might be useful to use machine learning. I have a good understanding of pytorch and I know how to build my neural network within this framework. However, currently I am struggling to find the perfect kind of neural network to solve my problem. Let me describe the problem: You have a game which you have developed and you want to develop an anti cheat for all sorts of cases. Now just for an example i will choose "fly-hacking". What i am trying to do is record all of a players data over a period of time. Let's say within 1 second i will take n "snapshots" of a current players state over e.g. 5 seconds. This data includes the position vector in a 3-dimensional space (x,y,z), and some data of his surroundings which will be just split up in small areas (e.g. 3x3x3 matrix), now if i know there are solid objects in his surroundings they will be represented by 1 and if an area is empty it is 0. Now my input data could be looking like this for a standing person: (4.2, 10.2, 3.2, 0, 0, 0, 0, [....], 0, 1, 1, 1) which would just be representing a player who is standing on a plane with nothing else arround him. And if i collect this data over 5 seconds with e.g. 3 snapshots per second i would end up with an array of 15 elements. I can collect a fair amount of these vectors and labels them with "flying" and "not-flying" categories. I just need a fitting neural network model which would fit my problem best. In the end I think it is just a classification problem between "flying" and "not flying" but I am struggling with the idea of which model would learn the fastest and easiest from this data. Maybe you can help me out here and give some advice where to start :)
