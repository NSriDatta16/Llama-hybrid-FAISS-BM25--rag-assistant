[site]: stackoverflow
[post_id]: 737145
[parent_id]: 736889
[tags]: 
Even if don't know why you would match the regex on a incomplete XML fragment (starting within a and ending right before the closing XML tag , you do have three obvious problems with your regex: As Amri said: you have to escape the / character in the closing XML tag because you use / as the pattern delimiter. By the way, you don't have to escape the > character. That gives you: '/r1text1(.*) /' Alternatively you can change the pattern delimiter to # for example: '#r1text1(.*) #' (I will use the first pattern to further develop the expression). As Rich Adams already said: the text in your example data is " r1_text_1 " ( _ is a space character) but you match against '/r1text1(.*) /' . You have to include the spaces in your regex or allow for a uncertain number of spaces, such as '/r1(?:\s*)text(?:\s*)1(.*) /' (the ?: is the syntax for non-capturing subpatterns) The . (dot) in your regex does not match newlines by default. You have to add the s (PCRE_DOTALL) pattern modifier to let the . (dot) match against newlines as well: '/r1(?:\s*)text(?:\s*)1(.*) /s'
