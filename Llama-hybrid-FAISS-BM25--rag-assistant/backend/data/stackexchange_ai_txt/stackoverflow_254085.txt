[site]: stackoverflow
[post_id]: 254085
[parent_id]: 253587
[tags]: 
In this particular case, I would say that since you're testing the equals method, you may as well also test that equal objects have equal hashcodes: just add an extra test to all the cases where equals is expected to return true. That will give you code coverage, and into the bargain it will give you some confidence that hashCode actually satisfies its contract :-) It's only marginally worthwhile, given that you obviously can trust the hashCode method of String, and you don't expect ever to change this class. But if you're suspicious enough of your equals method to test it at all, then you should be suspicious enough of it to test that it and hashCode remain consistent. And you should always be suspicious of assumptions that you will not in future want to mess about with what you've done before. For instance, if someone comes along and decides to 'optimise' by adding a pointer-equality check, then you may as well have a complete set of tests for them to run their modified code against. Otherwise they'll waste time on the same worry you did - is it OK that I don't have code coverage?
