[site]: stackoverflow
[post_id]: 4789419
[parent_id]: 4789307
[tags]: 
Based on the discussion against the other answer, and the addition of no-cache, it is unlikely to have anything to do with any caching. The plans are exactly the same as well, so there's nothing in that direction. The most likely causes is therefore to do with the retrieval and storage of varchar(255) columns. Try these 3 new queries and see what you get: Count the length only, still processes the module column somewhat SELECT `t1`.`id`, `t1`.`key`, Length(`t1`.`module`), `t2`.`value` FROM `translates` AS `t1` LEFT JOIN `translates_i18n` AS `t2` ON (`t2`.`id` = `t1`.`id` AND `t2`.`culture` = 'en') WHERE `t1`.`module` IN ('GLOBAL','AJAX','FORMS', .... about 15 items) LIMIT 9000; Test only the mask whether it is null SELECT `t1`.`id`, `t1`.`key`, case when `t1`.`module` is null then 1 else 0 end, `t2`.`value` FROM `translates` AS `t1` LEFT JOIN `translates_i18n` AS `t2` ON (`t2`.`id` = `t1`.`id` AND `t2`.`culture` = 'en') WHERE `t1`.`module` IN ('GLOBAL','AJAX','FORMS', .... about 15 items) LIMIT 9000; Gathers the total length of varchars involved SELECT Length(GROUP_CONCAT(module)) FROM ( SELECT `t1`.`id`, `t1`.`key`, `t1`.`module`, `t2`.`value` FROM `translates` AS `t1` LEFT JOIN `translates_i18n` AS `t2` ON (`t2`.`id` = `t1`.`id` AND `t2`.`culture` = 'en') WHERE `t1`.`module` IN ('GLOBAL','AJAX','FORMS', .... about 15 items) LIMIT 9000 ) X
