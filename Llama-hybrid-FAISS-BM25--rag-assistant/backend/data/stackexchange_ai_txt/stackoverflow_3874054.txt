[site]: stackoverflow
[post_id]: 3874054
[parent_id]: 
[tags]: 
Is there a way, using LINQ/EF, to get the top most item in a parent/child hierarchy?

I have a class called Structure : public class Structure { public int StructureId { get; set; } public Structure Parent { get; set; } } As you can see, Structure has a parent Structure . There can be an indefinite number of structures within this hierarchy. Is there any way, using LINQ (with Entity Framework), to get the top-most structure in this hierarchy? Currently, I'm having to hit the database quite a few times in order to find the top most parent. The top most parent is a Structure with a null Parent property: Structure structure = structureRepository.Get(id); while (structure.Parent != null) { structure = structureRepository.Get(structure.Parent.StructureId); } // When we're here; `structure` is now the top most parent. So, is there any elegant way to do this using LINQ/Lambdas? Ideally, starting with the following code: var structureQuery = from item in context.Structures where item.StructureId == structureId select item; I just want to be able to write something like the following so that I only fire off one database hit: structureQuery = Magic(structureQuery); Structure topMostParent = structureQuery.Single();
