[site]: stackoverflow
[post_id]: 3045797
[parent_id]: 
[tags]: 
A shared List/Map among several threads in F#?

I'm doing a program to handle many blocking I/O operations at a time by spawning an Agent/MailboxProcessor per operation. I've got a bunch of files I've cached in memory in a Map which I want to share among these agents. However, I've also got a FileSystemWatcher to callback whenever changes are made to the files, so that I can update the cache. How do I make this happen without risking the cache being corrupted by multi-threaded read and write ? It seems to me that the Map is already based on pointers to objects, so would that automatically solve my problem as I'm simply changing the pointers to the new objects as they are loaded, or is this a broken understanding of it? Thanks
