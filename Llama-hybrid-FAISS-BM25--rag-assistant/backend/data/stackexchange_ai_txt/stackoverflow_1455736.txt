[site]: stackoverflow
[post_id]: 1455736
[parent_id]: 1455698
[tags]: 
C++ does not exactly represent floating point numbers due to the insane amount of storage that would be required to get the infinite precision necessary. For a demonstration of this, try the following: double ninth = 1.0/9.0; double result = 9.0 * ninth; This should yield a value in result of .99999999999 So, in essence, you need to compare floating point values within a small epsilon (I tend to use 1e-7). You can do a strict bit-by-bit comparison, but this consists of converting the memory used by the floating point to an array of characters of length sizeof(float), then comparing the characters. Another thing to check would be whether or not you are using degrees. The computer's calculator uses degrees for its cosine calculation (notice how the result from the calculator is .99999..., which is very close to 1. The cosine of zero is 1 exactly), whereas the cosine function offered in is in radians. Try multiplying your value by PI/180.0 and seeing if the result is more inline with your expectations.
