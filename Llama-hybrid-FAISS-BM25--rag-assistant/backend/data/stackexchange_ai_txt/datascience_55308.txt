[site]: datascience
[post_id]: 55308
[parent_id]: 55303
[tags]: 
You can aggregate all previous data points into a new features. For example the number of previous (un)successful call attempts or the number of days since the last call . After this aggregation (of transforming previous calls into new scalar features) you are no longer dealing with a time series but have the usual design matrix with one row per client (and one column per feature). Are these algorithms effective for these scenarios? They should be effective if you can derive good features, which shouldn't be too difficult. This is more manual than using a sequence-model (say LSTM) but if you derive good features, I would expect this too work better. I have read that time series data can be converted to a supervised learning problem, by including lead and lag columns of the dependent variable. But since my test data will not have those columns, I am confused to how they might help me. It doesn't sounds like you are dealing with a standard time-series problem. The timestamps themselves don't strike me as too important for predicting answers to a call. You can probably achieve good results by simply including the time of day and day of the week in addition to the features mentioned above.
