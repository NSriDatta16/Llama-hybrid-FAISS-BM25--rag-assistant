[site]: stackoverflow
[post_id]: 670477
[parent_id]: 669979
[tags]: 
Part of your error is that you are accessing a Swing component from outside the event thread! Yes, setText() is thread-safe, but Swing methods are not Thread-safe unless they are explicitly declared as such. Thus, setCaretPosition() is not Thread-safe and must be accessed from the event thread. This is almost certainly why your application eventually freezes. NOTE: JTextPane inherits its setText() method from JEditorPane and its setCaretPosition method from JTextComponent , which explains the links in the previous paragraph not going to the JTextPane JavaDoc page. To be Thread-safe, you really need to at least call setCaretPosition() from within the event thread, which you can do with code like this: SwingUtilities.invokeAndWait(new Runnable() { public void run() { a.setText(b.toString()); a.setCaretPosition(b.length()); } } And since you have to call setCaretPosition() from within the event thread, you might as well also call setText() from the same place. It's possible that you may not need to manually set the caret position. Check out the section "Caret Changes" in the JavaDoc for JTextComponent . Finally, you may want to check out a series of two articles: Faster JTextPane Text Insertion (Part I) Faster JTextPane Text Insertion (Part II)
