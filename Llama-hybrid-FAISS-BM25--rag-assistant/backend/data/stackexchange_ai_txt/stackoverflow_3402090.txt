[site]: stackoverflow
[post_id]: 3402090
[parent_id]: 
[tags]: 
Server Push vs Client Pull for Agent-Server Topology

I need to create a system comprising of 2 components: A single server that process and stores data. It also periodically sends out updates to the agents Multiple agents that are installed at remote endpoints. These collect data in (often, but not always) long-running operations, and this data needs to get to the server I'm using C# .NET, and ideally I want to use a standards compliant communications method (i.e. one that could theoritically work with Java too, as we may well also use Java agents in the future). Are there any alternatives to web services? What are my options? The way I see it I have 3 options using web services, and have made the following observations: Client pull No open port required at the agent, as it acts like a client Would need to poll the server for updates Server push Open port at the agent, as it acts like a server Server must poll agents for results Hybrid Open port at the agent, as it acts like both a client and a server No polling; server pushes out updates when required, client sends results when they are available The 'hybrid' (where agents are both client and server seems the obvious choice - but this application will typically be installed in enterprise and government environments, and I'm concerned they may have an issue with opening a port at the agent. Am I dwelling too much on this? Are there any other pros and cons I've missed out?
