[site]: stackoverflow
[post_id]: 302318
[parent_id]: 302277
[tags]: 
It's a slippery slope once you start initializing fields & generally setting up the context of your test within the test method itself. This leads to large test methods and really really unmanageable fixtures that don't explain themselves very well. Instead, you should look at the BDD style naming & test organization. Make one fixture per context, rather than one fixture per system-under-test. Then your [setup] truly does setup the context, and your tests can be simple one-liner asserts. It's much easier to read when you see a test output that does this: OrderFulfillmentServiceTests.cs with_an_order_from_a_new_customer it should check their credit from the credit service it should give no discount with valid credit check it should decrement inventory it should ship the goods with a customer in texas or california it should add appropriate sales tax with an order from a gold customer it should NOT check credit it should get expedited shipping added for free Our tests are now really good documentation for our system. Each "with_an..." is a test fixture, and the items below it are tests. Within those, you setup the context (the state of the world as the class name describes) and then the test does the simple assert that verifies what the method name says it does.
