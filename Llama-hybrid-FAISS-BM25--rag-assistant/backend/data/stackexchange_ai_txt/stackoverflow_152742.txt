[site]: stackoverflow
[post_id]: 152742
[parent_id]: 122316
[tags]: 
You can do it. Create the base template. Make it have only Private constructors. Then create specializations for each case you want to allow (or make the opposite if the disallowed list is much smaller than the allowed list). The compiler will not allow you to instantiate the templates that use the version with private constructors. This example only allow instantiation with int and float. template class FOO { private: FOO(){}}; template<> class FOO {public: FOO(){}}; template<> class FOO {public: FOO(){}}; Its not a short and elegant way of doing it, but its possible.
