[site]: stackoverflow
[post_id]: 629145
[parent_id]: 629047
[tags]: 
Right now there have been several approaches to doing this. Well the first and most basic would be to use alias_method_chain from ActiveSupport require 'activesupport' module UpcasedName def self.included( base ) base.alias_method_chain :name, :upcase end def name_with_upcase @name.upcase end end class User attr_accessor :name include UpcasedName end u = User.new u.name = 'john' puts u.name The approach you posted is actually similar to the approach posted by Bruce Williams' method here : http://www.codefluency.com/articles/2009/01/03/wrapping-a-method-in-ruby If you're really hardcore about this you can follow the approaches posted by Yehuda Katz here: http://yehudakatz.com/2009/01/18/other-ways-to-wrap-a-method/
