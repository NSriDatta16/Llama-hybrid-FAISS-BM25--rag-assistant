[site]: stackoverflow
[post_id]: 2600071
[parent_id]: 
[tags]: 
I can't load the view from the more tab (UITabbar)

Take a look to this video, I explain everything in it: the video Thanks a lot, I hope you will help me! Thanks your your very fast answer, so each of my "tab" uses a "UITableViewController", the code is the same for each one: - (void)viewDidLoad { [super viewDidLoad]; self.title = [NSString stringWithFormat:@"S.I."]; // Uncomment the following line to display an Edit button in the navigation bar for this view controller. // self.navigationItem.rightBarButtonItem = self.editButtonItem; NSMutableArray *array = [[NSArray alloc] initWithObjects:@"Verin", @"Binaire - Héxa - Décimal",@"Transistors",@"PFS", nil]; //Futures Categ //@"Conversions", self.siArray = [array sortedArrayUsingSelector:@selector(caseInsensitiveCompare:)]; [array release]; } - (void)didReceiveMemoryWarning { // Releases the view if it doesn't have a superview. [super didReceiveMemoryWarning]; // Release any cached data, images, etc that aren't in use. } - (void)viewDidUnload { // Release any retained subviews of the main view. // e.g. self.myOutlet = nil; } #pragma mark Table view methods - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView { return 1; } // Customize the number of rows in the table view. - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section { return [self.siArray count]; } // Customize the appearance of table view cells. - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath { static NSString *CellIdentifier = @"Cell"; UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier]; if (cell == nil) { cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease]; } // Set up the cell... NSUInteger row = [indexPath row]; cell.text = [siArray objectAtIndex:row]; return cell; } - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath { // Navigation logic may go here. Create and push another view controller. // AnotherViewController *anotherViewController = [[AnotherViewController alloc] initWithNibName:@"AnotherView" bundle:nil]; // [self.navigationController pushViewController:anotherViewController]; // [anotherViewController release]; NSInteger row = [indexPath row]; if ([siArray objectAtIndex:row] == @"Verin") {//Si on clique sur Polynomes SiVerinViewController *verin = [[SiVerinViewController alloc] initWithNibName:@"SiVerinView" bundle:nil]; self.siVerinViewController = verin; [verin release]; siVerinViewController.title = [NSString stringWithFormat:@"%@", [siArray objectAtIndex:row]]; GrugeAppDelegate *delegate = [[UIApplication sharedApplication] delegate]; [delegate.siNavController pushViewController:siVerinViewController animated:YES]; } //I use one: //if ([siArray objectAtIndex:row] == @"theCateg") //for each Table category if ([siArray objectAtIndex:row] == @"Transistors") {//Si on clique sur Polynomes SiTransistorsViewController *tempo = [[SiTransistorsViewController alloc] initWithNibName:@"SiTransistorsView" bundle:nil]; self.siTransistorsViewController = tempo; [tempo release]; siTransistorsViewController.title = [NSString stringWithFormat:@"%@", [siArray objectAtIndex:row]]; GrugeAppDelegate *delegate = [[UIApplication sharedApplication] delegate]; [delegate.siNavController pushViewController:siTransistorsViewController animated:YES]; } }
