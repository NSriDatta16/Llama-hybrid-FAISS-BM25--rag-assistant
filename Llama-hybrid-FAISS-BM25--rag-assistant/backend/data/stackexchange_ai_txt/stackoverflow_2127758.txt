[site]: stackoverflow
[post_id]: 2127758
[parent_id]: 1247584
[tags]: 
You asked for how other languages handle this, and I didn't see anything other than PHP, so I encourage you to check out Rails. Rails convention is elegant, and reflects @codeincarnate 's version in PHP. In the MVC framework, the current view is rendered inside of a controller-specific layout file that encapsulates the current method's corresponding view. It uses a "yield" method to identify a section where view content should be inserted. A common layout file looks like this: Header content, menus, etc… Footer content This enables the application to have a different look and feel or different navigation based on the controller. In practice, I haven't used different layout files for each controller, but instead rely on the default layout, which is named "application". However, let's say you had a company website, with separate controllers for "information", "blog", and "admin". You could then change the navigation for each in a clean and unobtrusive manner by handling the different layout views in their respective layout files that correspond to their controllers. You can always set a custom layout in the controller method by stating: render :layout => 'custom_layout' There are also great helper methods built into Rails so you don't have to rely on $global variables in PHP to ensure your CSS and Javascript paths are correct depending on your development environment (dev, staging, prod…). The most common are: #looks in public/stylesheets and assumes it's a css file stylesheet_link_tag "filename_without_extension" #looks in public/javascripts and assumes it's a js file javascript_include_tag "jquery" Of course, each of these sections could be expounded upon in much greater detail and this is just brushing the surface. Check out the following for more detail: http://guides.rubyonrails.org/layouts_and_rendering.html
