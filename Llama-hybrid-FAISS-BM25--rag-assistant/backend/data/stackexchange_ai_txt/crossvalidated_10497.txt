[site]: crossvalidated
[post_id]: 10497
[parent_id]: 
[tags]: 
Naive Bayes classification for "That's what she said" problem

I became interested in doing this in C# for my own amusement after reading the following papers: http://www.cs.washington.edu/homes/brun/pubs/pubs/Kiddon11.pdf I also took a look at http://www.cs.rpi.edu/academics/courses/fall03/ai/misc/naive-example.pdf as a concrete example for my implementation. I have a working implementation now, but I wanted to make sure that I was approaching it properly. I just want to have a solid Naive Bayes Classifier (unigram). Problem statement and setup I am using two sets of data, a list of sentences that ARE "that's what she said" and a list of sentences that dont make sense with a "that's what she said" suffix. Next I parse through all the words in all of the sentences and keep a tally on each word and how many times it was found in each of the two sets, so I might end up with data that looks like this: Word PositiveCount NegativeCount wet 23 4 hard 30 5 haiti 0 20 to 60 77 The I iterate over all of the words and calculate individual $\Pr(\text{Positive}|\text{ })$ and $\Pr(\text{Negative}|\text{ })$ using the following formula which I found in the above example paper: P(Positive|wet) = (23 + p * m) / ((23 + 4) + m) P(Negative|wet) = (4 + p * m) / ((23 + 4) + m) Where m is the equivilent sample size and p is the a priori estimate . Then in order to check an unknown sentence to see if it is a TWSS I iterate over each word in the sentence and multiply their positive [probibility distributions?] together and multiply all that by p. And do the same for the negative. Then if the positive number is larger I say that the sentence is a "that's what she said". Questions Currently I am using $p = .5$ for both positive and negative. I feel like I could be doing something better. Is this what the Bayesian vs. frequentist thing is about? How would I go about getting better numbers for $p$? Also, I am using $m$-estimates for the $\Pr( \text{Yes/No} | \text{ } )$. Should I be doing it this way and what should $m$ be? What effects does it have to make $m$ larger/smaller? Super Minor Question: Suggestions on where to get sample data from would be a bonus.
