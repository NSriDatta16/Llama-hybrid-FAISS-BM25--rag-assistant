[site]: datascience
[post_id]: 122646
[parent_id]: 122641
[tags]: 
Since employee demographics aren't usable in this case. The information about the task can be used instead. Task difficulty can also be obtained simply by averaging the RPH needed by different employees for the same task. If the case doesn't allow for multiple employees (a team) to do the same task, I'm afraid you have to obtain more data as there are no features currently. The rph, which is the target, is derived from two of the variables, leaving you with the date, employee ID, and task ID, which obviously have no correlation with the rph. Doing kernel density or any unsupervised learning wouldn't help much either, as there are no features that show patterns. It will just show that for a whole team, the pattern might consist of an employee who takes on a lot of tasks at the same time and has a lower rph as it needs to be summed. This shows that you can start by narrowing your perspective by grouping the rows by task and summing the number of employees working on it, or vice versa. There are a lot of EDA that can be done that can give you more clues. Looking from another perspective, completion of the task is of the utmost importance. If the rph is high but never results in completion of the task, the rph should be lower to be ideal. Start by defining what is ideal, as it could be using fewer hours from an employee while finishing the task faster. Again, information about the task, especially the difficulty, is important, as easier tasks tend to get finished earlier.
