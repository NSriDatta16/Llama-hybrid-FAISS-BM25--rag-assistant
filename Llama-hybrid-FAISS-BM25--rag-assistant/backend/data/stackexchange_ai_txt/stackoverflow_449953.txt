[site]: stackoverflow
[post_id]: 449953
[parent_id]: 406760
[tags]: 
Design patterns are a waste of time when it comes to software design and development. Don't get me wrong, design patterns are useful but mainly as a communication vector. They can express complex ideas very concisely: factory, singleton, iterator... But they shouldn't serve as a development method. Too often developers architect their code using a flurry of design pattern-based classes where a more concise design would be better, both in term of readability and performance. All that with the illusion that individual classes could be reused outside their domain. If a class is not designed for reuse or isn't part of the interface, then it's an implementation detail. Design patterns should be used to put names on organizational features, not to dictate the way code must be written. (It was supposed to be controversial, remember?)
