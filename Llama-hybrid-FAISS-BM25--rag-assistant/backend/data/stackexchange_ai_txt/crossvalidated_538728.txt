[site]: crossvalidated
[post_id]: 538728
[parent_id]: 
[tags]: 
Understanding convolutional operators in graphs

In a Graph Convolutional Neural Network, a convolutional operation is $$ h_i^{(l)} = \sigma\left(W^{(l)} \cdot \text{Agg}\left\{ h_j^{(l-1)},\forall j \in \hat{N}(i)\right\} \right)$$ Is my intuition of the aggregation function correct? Each node has many features, so this is an $N\times N$ dimensional matrix, which is very computationally expensive, so the goal is to reduce it. So, we aggregate information of its neighbors. For a target node $A$ , we aggregate all of the features together of $A's$ local neighbors, and the information from these neighbors are aggregated from their respective neighborhoods, etc... Then, we use $\sigma$ as a non-linear function to reduce the dimension but do we put the entire matrix as the input? If so how does it do this and what size would it be reduced to? I'll give an example of my understanding to show this: EXAMPLE: Node $A$ has neighbours $B$ and $C$ , who both have neighbour $D$ . Node Feature 1 Feature 2 A 2 3 B 1 2 C 3 3 D 5 4 Then, if we use the sum aggregation function , the new information of B is taken from the sum of B and D, likewise for C, it is the sum of C and D. Then the new information of A is just the sum of A+B+C. Here is the aggregated information: Node Feature 1 Feature 2 A 16 16 B 6 6 C 8 7 D 5 4 Then would we put this whole matrix through a non-linear function? Or would we put each feature as the input? What would it look like?
