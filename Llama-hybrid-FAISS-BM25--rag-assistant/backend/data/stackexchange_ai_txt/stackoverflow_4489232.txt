[site]: stackoverflow
[post_id]: 4489232
[parent_id]: 
[tags]: 
Java Server socket stuck on accept call (Android Client, Java Server)

Below I have put a fragment of code to help understand my problem. I have a server code, works fine for the first time the client loads and sends a packet. After the first packet is received, the server is stuck on "accept". I have wireshark configured for this port, and the server is getting those packets. I just wonder why accept wont return more than once. Its driving me nuts. Server Code public class DAPool implements Runnable { private ServerSocket serverSocket; private ArrayList pool; private LinkedList clientConnQ; public DAPool(int newPoolSize, int serverPort) { try { serverSocket = new ServerSocket(serverPort, 500, InetAddress.getByName("127.0.0.1")); } catch (IOException e) { e.printStackTrace(); return; } poolSize = newPoolSize; clientConnQ = new LinkedList (); pool = new ArrayList (poolSize); DA deviceThread; for (int threads = 0; threads Client Code public class SendQueue extends Thread { LinkedList requestQ; Message sendRequest, requestMessage; Socket clientSocket; OutputStream outputStream; ObjectOutputStream objectOutputStream; public SendQueue(Socket newClientSocket) { requestQ = new LinkedList (); clientSocket = newClientSocket; } public void run() { while (true) { synchronized (requestQ) { while (requestQ.isEmpty()) { try { requestQ.wait(); } catch (InterruptedException ignored) { ignored.printStackTrace(); } } sendRequest = requestQ.removeFirst(); } try { outputStream = clientSocket.getOutputStream(); objectOutputStream = new ObjectOutputStream(outputStream); objectOutputStream.writeObject(sendRequest); objectOutputStream.flush(); outputStream.flush(); } catch (IOException e) { e.printStackTrace(); } catch (RuntimeException e) { e.printStackTrace(); } } } public int sendRequest(Message message) { synchronized (requestQ) { requestQ.addLast(message); requestQ.notify(); } return 0; } }
