[site]: stackoverflow
[post_id]: 5610384
[parent_id]: 5610374
[tags]: 
The simplest way is probably to create a new dictionary, if that's okay for you: var newDictionary = oldDictionary.Where(pair => pair.Value >= 0) .ToDictionary(pair => pair.Key, pair => pair.Value); If you have to mutate the existing dictionary (e.g. because several other objects have reference to the same dictionary) you'd need to build a list of keys to remove, then remove them afterwards: var toRemove = dictionary.Where(pair => pair.Value pair.Key) .ToList(); foreach (var key in toRemove) { dictionary.Remove(key); } EDIT: I've just noticed the first sentence: "I am not into LINQ solutions". If that means you don't want to use a LINQ solution, here's the by-hand version: List toRemove = new List (); foreach (KeyValuePair pair in dictionary) { if (pair.Value ... but if you can use LINQ, I'd encourage you do. My second solution is equivalent to the "by-hand" version, but more readable IMO.
