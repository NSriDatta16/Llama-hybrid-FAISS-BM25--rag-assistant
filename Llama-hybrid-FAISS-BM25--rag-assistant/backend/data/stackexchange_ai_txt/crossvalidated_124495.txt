[site]: crossvalidated
[post_id]: 124495
[parent_id]: 
[tags]: 
NLP tokenization for building feature vector

I am trying to match new product description with the existing ones. Product description looks like this: ï¿¼ Panasonic DMC-FX07EB digital camera silver . These are steps to be performed: Tokenize description in form of: Panasonic => Brand, DMC-FX07EB => Model, etc. Get few candidates with similar features Get the best candidate. I am having problem with the first step (1). In order to get 'Panasonic => Brand', DMC-FX07EB => Model, silver => color , I need to have index where each token of the product description correspond to certain attribute name (Brand, model, color, etc.) in the existing database. The problem is that in my database product descriptions are presented as one atomic attribute e.g. 'description' (no separated product attributes). Any suggestions how can I tokenize descriptions and build index (inverted index) where each token corresponds to certain attribute? UPDATE: The best way to build index of product attributes is to use some APIs for product specifications: I am trying with one from Bestbuy.com, but attributes are not defined in a proper way. Any suggestions for the Product Specifications APIs? or similar solutions? So far https://www.semantics3.com/ seems the best solution.
