[site]: stackoverflow
[post_id]: 5292226
[parent_id]: 
[tags]: 
Pythonic loops--how to get multiple elements while iterating a list

I want to iterate over my list and do something with multiple elements, not just one element. I want to take the first element and some elements after it (they could be sequential or maybe the 3rd element from the one returned). l = ['a', 'b', 'c', 'd', 'e'] for items in l: print items[:3] The output should be: ['a', 'b', 'c'], ['b', 'c', 'd'], ['c', 'd', 'e'] There are a lot of good answers, what if want to skip elements? Say, get an element, skip the next element, and get the 3rd element? Output: ('a', 'c'), ('b','d'), ('c', 'e') I guess enumerate is the best way to handle this? Iterating through lists so simple and elegant I hoped similar syntax would allow you to use it inside a for loop on the element itself and not use range or enumerate. l = ['a', 'b', 'c', 'd', 'e'] for items in l: print (items[0], items[2]) (Yes, I know this code would give different results if the original list was a list containing lists. [ [1, 2, 3], [4, 5, 6], [7, 8, 9] ] would return [1, 3], [4, 6], [7, 9])
