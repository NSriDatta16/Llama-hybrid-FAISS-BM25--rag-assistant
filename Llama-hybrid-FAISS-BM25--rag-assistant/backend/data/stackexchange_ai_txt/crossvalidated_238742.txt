[site]: crossvalidated
[post_id]: 238742
[parent_id]: 
[tags]: 
Interpreting Negative Binomial Time-Series

I'm working with time-series data for someone else that counts events related to emergency departments over a 48-month period during which closures occurred and would like to investigate the effect of these closures. Measurements are either counts of events or a proportion at each time point. Initially they requested that I use Prais-Winsten time-series regression which accounts for the auto-correlation between repeated measurements. They have now asked me to perform negative binomial time-series on the count outcomes to check consistency between modelling approaches (I had originally suggested alternatives to Prais-Winsten such as GARCH or ARIMA models but they weren't interested). I've now performed the requested analyses but am struggling to reconcile the results from the two methods with each other and would be very grateful of advice. Data > dput(sample) structure(list(relative.month = 1:48, value = c(2407, 2019, 2623, 2443, 2043, 2605, 2623, 2365, 2822, 2558, 2144, 2601, 3034, 2878, 2883, 1995, 2323, 2861, 2193, 2729, 2859, 3118, 2064, 2350, 1701, 1665, 1848, 1428, 1371, 2043, 1218, 790, 1502, 1591, 1661, 2074, 713, 1531, 1460, 1444, 1391, 1632, 1623, 934, 1718, 1217, 1439, 1377), step = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), town = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)), .Names = c("relative.month", "value", "step", "town"), row.names = c(NA, -48L), class = "data.frame") ## Pre and post Means > group_by(sample, step) %>% summarise(mean = mean(value, na.rm = TRUE), sd = sd(value, na.rm = TRUE)) step mean sd 1 0 2522.500 336.5390 2 1 1473.792 334.4394 ## Difference in means Before (0) and After (1) > 2522.500 - 1473.792 [1] 1048.708 ## Percentage difference in means > 100* (2522.500 - 1473.792) / 2522.500 [1] 41.57415 A quick plot of the data.... Prais-Winsten Running a very simple Prais-Winsten regression with one step and accounting for auto-correlation... ## Simple Prais-Winsten Regression with 1-step model % summary() Panel Regression with AR(1) Prais-Winsten correction and panel-corrected standard errors Balanced Panel Design: Total obs.: 48 Avg obs. per panel 48 Number of panels: 1 Max obs. per panel 48 Number of times: 48 Min obs. per panel 48 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 2524.55 59.99 42.09 Chisq(1)): 0 My interpretation of this is that the step results in a mean reduction in the number of observed events, of roughly (/mean) of 908 events, which isn't far off the differences in the means before (0) and after (1) which is 904 (or a reduction of 37.56%). Including (relative) time as a co-variate to estimate the change over time... ## Simple Prais-Winsten Regression with 1-step and time as co-variate model % summary() Panel Regression with AR(1) Prais-Winsten correction and panel-corrected standard errors Balanced Panel Design: Total obs.: 48 Avg obs. per panel 48 Number of panels: 1 Max obs. per panel 48 Number of times: 48 Min obs. per panel 48 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 2526.3522 97.9934 25.781 Chisq(2)): 0 As with the simpler model there is still a reduction in number of events after the step, but inclusion of the time variable suggests that across the whole time series (i.e. both before (0) and after (1)) there tends to be a reduction in the number of events over time, although this is more obvious after the step. Negative-Binomial Time-Series Running a negative-binomial time-series on the very simple model with just one step, but allowing for correlation between sequential observations.... ## Negative Binomial Time-Series with 1-step > outcome covariates negbin.1step negbin.1step %>% summary() Call: tsglm(ts = outcome, model = list(past_obs = 1), xreg = covariates, link = "log", distr = "nbinom") Coefficients: Estimate Std.Error CI(lower) CI(upper) (Intercept) 8.3258 1.0195 6.328 10.324 beta_1 -0.0629 0.1301 -0.318 0.192 step -0.5715 0.0888 -0.746 -0.397 sigmasq 0.0349 NA NA NA Standard errors and confidence intervals (level = 95 %) obtained by normal approximation. Link function: log Distribution family: nbinom (with overdispersion coefficient 'sigmasq') Number of coefficients: 4 Log-likelihood: -351.8314 AIC: 711.6627 BIC: 719.1476 QIC: 3760.517 ## Exponentiate the coefficients to obtain a percentage change > negbin.1step %>% coefficients() %>% exp() (Intercept) beta_1 step 4128.9061822 0.9389960 0.5646913 Having read through the tscount vignette I take this to mean that there is (roughly) a 44% reduction in the observed number of events each month after the step, and that there is a small (~7%) reduction in the number of events over time (the beta_1 coefficient). Adding in time as co-variate to match the Prais-Winsten regression gives... ## Negative Binomial Time-Series with 1-step and time > outcome covariates negbin.1step.time negbin.1step.time %>% summary() Call: tsglm(ts = outcome, model = list(past_obs = 1), xreg = covariates, link = "log", distr = "nbinom") Coefficients: Estimate Std.Error CI(lower) CI(upper) (Intercept) 8.335323 1.04206 6.29292 10.37773 beta_1 -0.063606 0.13211 -0.32255 0.19533 step -0.563206 0.12753 -0.81316 -0.31325 relative.month -0.000357 0.00412 -0.00843 0.00771 sigmasq 0.035660 NA NA NA Standard errors and confidence intervals (level = 95 %) obtained by normal approximation. Link function: log Distribution family: nbinom (with overdispersion coefficient 'sigmasq') Number of coefficients: 5 Log-likelihood: -351.7691 AIC: 713.5383 BIC: 722.8943 QIC: 3923.615 > negbin.1step.time %>% coefficients() %>% exp() (Intercept) beta_1 step relative.month 4168.5475445 0.9383745 0.5693807 0.9996430 There is roughly the same reduction at the step, and given the correlation over time of a slight reduction (the beta_1 ) the relative.month co-variate shows virtually no change over time. Questions Equivalence - the results are telling me roughly the same thing, that there is a reduction in the number of events caused by the step, and over time there is a reduction in the number of events. Is it reasonable to interpret the beta_1 component in the Negative Binomial as being roughly equivalent to the effect of relative month, given that its estimating the correlation between sequential pairs of observations? If so is there no need to include relative.month as a co-variate in negative-binomial time-series? Is it reasonable to use a Negative-Binomial Time-Series model when the number of observed events are in the thousands? Its been suggested that doing so might not be appropriate as negative-binomial distributions are for counts when there is over-dispersion (i.e. high-variance because of possible skewness). Leading from the previous question, which approach is the most appropriate to report?
