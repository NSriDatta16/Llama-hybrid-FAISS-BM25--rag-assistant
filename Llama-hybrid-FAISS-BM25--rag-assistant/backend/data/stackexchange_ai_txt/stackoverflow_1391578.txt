[site]: stackoverflow
[post_id]: 1391578
[parent_id]: 1391396
[tags]: 
This isn't the answer to knowing when touches aren't active, but it is a reasonable solution to what I wanted to do, anyway. So, if anyone else is trying to simulate Apple's scroll views (pixel-perfect scrolling plus a nice fling and slide), then you will want the following: An integer keeping track of the number of touches. A loop or timer that is separate from the touch events. A vector (or two floats) storing a scroll "decay" amount. A constant float decay value, like 0.95. Then with those you can do the following: - In touchesBegan, increment touchCount by [touches count]. - In touchesEnded, decrement touchCount by [touches count]. - In touchesMoved, create a vector that represents currentTouchPos - previousTouchPos. - Scroll your view by that vector. - Set your scrollDecay vector equal to that vector. - In your main timer or loop, scroll your view by the scrollDecay only if touchCount And you're done. It works quite well, I can't see any discernible differences between this and Apple's scrolling.
