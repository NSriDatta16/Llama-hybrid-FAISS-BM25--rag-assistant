[site]: stackoverflow
[post_id]: 958283
[parent_id]: 673751
[tags]: 
Generally, you want to go through every entities in your game each update call, thus you could go ahead and use a Composite pattern where you'd have a root node. From that, you'd go recursively through the node and call each entity' update() method. From what I can see from your code, you already have a list, but using the composite pattern, you'd be able to make groups of entities instead, which might simplify your task. From what I understand, your Engine simply need to call the Update() method of the root node (if you use a composite pattern). From that, the root node will call subsequent node using their update(). At some point through the composite tree, you'll reach leafs who will know how to update themselves correctly. You will only need to have a pointer to your root node in your engine which will have a function UpdateAll() (or something else) which will then call rootNode->Update(); which in turn, will do what I described in the previous paragraph.
