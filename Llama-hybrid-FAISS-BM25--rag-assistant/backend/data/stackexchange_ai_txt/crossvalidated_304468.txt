[site]: crossvalidated
[post_id]: 304468
[parent_id]: 141189
[tags]: 
This in not a PyMC answer, but here is a piece of code inspired from https://probmods.org/chapters/03-conditioning.html#example-reasoning-about-tug-of-war It is in WebPPL , implementing a MCMC way to find player's strenght given a tournament results. var model = function() { var strength = mem(function (person) {return uniform(0, 1)}) var winner = function (player1, player2) { strength(player1) > strength(player2) ? player1 : player2 } var beat = function(player1,player2){winner(player1,player2) == player1} condition(beat('bob', 'mary')) return(strength('bob')) } var dist = Infer({method: 'MCMC', kernel: 'MH', samples: 25000}, model) console.log('Expected : ' + expectation(dist)) viz(dist) The online example also introduces teams made by several players and a parameter of a player strength : he is perhaps lazy. BTW, the probmods.org online book is a fascinating piece. About PyMC, I'm as you, I don't have any clue to how implement this, especially how to formalize observations.
