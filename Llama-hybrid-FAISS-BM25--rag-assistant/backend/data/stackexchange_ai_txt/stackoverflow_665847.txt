[site]: stackoverflow
[post_id]: 665847
[parent_id]: 665566
[tags]: 
Redirecting stdout to a write() method that updates your gui is one way to go, and probably the quickest - although running a subprocess is probably a more elegant solution. Only redirect stderr once you're really confident it's up and working, though! Example implimentation (gui file and test script): test_gui.py: from Tkinter import * import sys sys.path.append("/path/to/script/file/directory/") class App(Frame): def run_script(self): sys.stdout = self ## sys.stderr = self try: del(sys.modules["test_script"]) except: ## Yeah, it's a real ugly solution... pass import test_script test_script.HelloWorld() sys.stdout = sys.__stdout__ ## sys.stderr = __stderr__ def build_widgets(self): self.text1 = Text(self) self.text1.pack(side=TOP) self.button = Button(self) self.button["text"] = "Trigger script" self.button["command"] = self.run_script self.button.pack(side=TOP) def write(self, txt): self.text1.insert(INSERT, txt) def __init__(self, master=None): Frame.__init__(self, master) self.pack() self.build_widgets() root = Tk() app = App(master = root) app.mainloop() test_script.py: print "Hello world!" def HelloWorld(): print "HelloWorldFromDef!"
