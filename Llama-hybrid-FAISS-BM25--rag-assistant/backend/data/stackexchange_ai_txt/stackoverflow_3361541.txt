[site]: stackoverflow
[post_id]: 3361541
[parent_id]: 3361485
[tags]: 
The error message describes the problem -- in F#, list > isn't compatible with seq > . The upcast function helps get around this, by making a into a list > , which is then compatible with seq > : let a = [upcast [4.]] Test.func(a) Edit: You can make func more flexible in the types it accepts. The original accepts only sequences of seq . Even though list implements seq , the types aren't identical, and the compiler gives you an error. However, you can modify func to accept sequences of any type, as long as that type implements seq , by writing the inner type as #seq : type Test() = static member func (a: seq >) = 5. let a = [[4.]] Test.func(a) // works
