[site]: stackoverflow
[post_id]: 4176820
[parent_id]: 4176140
[tags]: 
I think that the "best practice" solutions are either your first and third options, provided that circumstances allow it. Another option that you haven't considered is something like this: public class MyMap extends HashMap { ... // constructors ... @Override public void put(String key, Object value) { if (value instanceof ClassA || value instanceof ClassB) { super.put(key, value); } else { throw new IllegalArgumentException("Verbotten!"); } } ... } You could combine this with your second option so that there is a statically typed option, and possibly even label the put(String, Object) method as deprecated to discourage its use. And finally, there is the option of just ignoring the problem, and relying on the application programmer to not put random stuff into the map. Depending on the circumstances, this might even be the best solution.
