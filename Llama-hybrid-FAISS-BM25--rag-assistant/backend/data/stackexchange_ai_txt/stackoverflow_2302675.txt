[site]: stackoverflow
[post_id]: 2302675
[parent_id]: 
[tags]: 
I want to improve performance of xslt

I have a framework that generates the XML, based on the HTTP request and the current session state. I may test in HTML, but production output will be VXML - perhaps one or two "flavors" for different reasons. Here's the slow part of my HttpServlet: jsp InputStream ms = new java.io.ByteArrayInputStream(sb.toString().getBytes()); Source xmlSource = new javax.xml.transform.stream.StreamSource(ms); String filePath = getServletContext().getRealPath(("/GetNextEvent-"). concat(req.getSession().getAttribute("client").toString().toUpperCase()).concat(".xsl")); Source xsltSource = new javax.xml.transform.stream.StreamSource(filePath); Result result = new javax.xml.transform.stream.StreamResult(resp.getWriter()); TransformerFactory tf = TransformerFactory.newInstance(); Transformer t = tf.newTransformer(xsltSource); t.transform(xmlSource, result); This currently takes ~ 200ms. I'd like for it to be much quicker. Perhaps Suggestions for caching? - seeing that the xsl files stay the same throughout the deployment, the Transformer objects can be cached indefinitely. I'm thinking of caching it in the Session level, so each session (1000's simultaneous) has their own. Any suggestions? Should I use any frameworks for caching, for any reason? Is there a faster way to transform the xml to the response stream? Should I scrap this and go another route? If you noticed the sb.toString, I am using a StringBuilder to get the XML representation of the objects (objects use a stringbuilder to create XML string). It takes about 1 millisecond to create the XML document using the StringBuilders, so I'm not concerned about it at the moment. Edit: Here's the XSL document. The XML document is usually very small. Just a couple of elements. XML sample is below XSL: ' ' 'tel:1136300' Here's some XML: BasicDialog initial en-us/prompts/OutageCleared.wav::Hello. I'm letting you know the incident that caused your outage has been fixed.
