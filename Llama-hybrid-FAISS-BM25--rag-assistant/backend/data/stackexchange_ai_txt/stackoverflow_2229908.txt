[site]: stackoverflow
[post_id]: 2229908
[parent_id]: 2227866
[tags]: 
I recommend writing it this way: if ( defined( &IPV6_DONTFRAG ) ) { $opts{'IPV6_DONTFRAG'} = {opt_level =>IPPROTO_IPV6,opt_name=>&IPV6_DONTFRAG,opt_print=>\&sock_str_flag}; } else { print "IPV6_DONTFRAG undefined\n"; $opts{'IPV6_DONTFRAG'} = {opt_level =>0,opt_name=>0,opt_print=>undef}; } Note the added ampersand in the value for opt_name , which evades constraints due to strict 'subs' . The documentation for defined explains: You may also use defined(&func) to check whether subroutine &func has ever been defined. The return value is unaffected by any forward declarations of &func . Note that a subroutine which is not defined may still be callable: its package may have an AUTOLOAD method that makes it spring into existence the first time that it is calledâ€”see perlsub . For example, with SO_BROADCAST if (defined &SO_BROADCAST) { print "SO_BROADCAST = ", SO_BROADCAST, "\n"; } the output on my machine is SO_BROADCAST = 6
