[site]: stackoverflow
[post_id]: 5385500
[parent_id]: 
[tags]: 
Eclipse: Trying to convert CCombo "display" value to "storage" value

I'm building my plugin in Helios SR2. It'd be Nice to support Galileo, but I'm not overly worried about it at this point. Windows 7: 64 bit, 64-bit JVM (1.6_21 IIRC). I have an swt.custom.CCombo box filled with the display values of a list of entries. I have a map of "display value" -> "storage value". I want to store the storage value, and display the display value. Go figure. I'm using databinding with BeanObservables, IObservables, a DataBindingContext, all that jazz. My current approach (that isn't working or I wouldn't be asking) is to create my own UpdateValueStrategy with a custom IConverter that'll internally map between the two. I'm currently trying to extend org.eclipse.core.databinding.conversion.Converter , because IConverter is marked with @noimplement and @noextend . The @noimplement states that clients should extend Converter rather than implementing IConverter directly (even though Converter is fairly trivial). Sadly, Eclipse's Java compiler is telling me that's a no-no: Access restriction: The type Converter is not accessible due to restriction on required library {install}\plugins\org.eclipse.core.databinding_1.3.100.I20100601-0800.jar In the relevant ".api_description", I see the following XML: Rooting around thanks to Google Code, I see that visibility="1" means a public API. Okay, great. restrictions="3" on the other hand, means @noextend @noimplement. Sound familiar? Okay, great. But it seems the restrictions on IConverter are rubbing off on Converter, making it impossible to use. I cannot extend Converter, nor may I call super(blah, blah) from my constructor. Interestingly enough, the compiler is not complaining about my implementation of public Object convert(Object fromObject) even though Converter doesn't have one of its own so one might think the IConverter restrictions would apply. Clearly not. Does anyone have An entirely different approach? Some means to beat this access restriction stuff into submission, preferably in a local kind of way so I don't do something dumb elsewhere. I found the "restricted access" setting for the compiler and have switched it to "warn" rather than "error". However, I'm hoping there's something a bit less global I could do. I'll proceed with this in the mean time, but an alternative would be nice.
