[site]: stackoverflow
[post_id]: 5549957
[parent_id]: 5549443
[tags]: 
Test::WWW::Mechanize is a good way to go. Test::WWW::Mechanize is a subclass of WWW::Mechanize and Test::WWW::Mechanize->new returns an object that is a subclass of LWP::UserAgent . So it would help you a lot if you read and understand the documentation for those libraries. For example, the WWW::Mechanize documentation will explain to you how to submit a form and retrieve its content. Example Here is an example that tests simultaneous access by 2 users and shows how to check the results (adapted from the Catalyst testing tutorial ): my $ua1 = Test::WWW::Mechanize->new; # user agent 1, Bud my $ua2 = Test::WWW::Mechanize->new; # user agent 2, Ace # Log in as each user $ua1->get_ok("http://localhost/login?username=Bud&password=xxx", "Login 'Bud'"); $ua2->get_ok("http://localhost/login?username=Ace&password=xxx", "Login 'Ace'"); # Go back to the login page and it should show that we are already logged in $_->get_ok("http://localhost/login", "Return to '/login'") for $ua1, $ua2; $_->title_is("Login", "Check for login page") for $ua1, $ua2; $_->content_contains("Please Note: You are already logged in as ", "Check we ARE logged in" ) for $ua1, $ua2; Brief explanation: get_ok($url, $msg): Checks to make sure $url can be retrieved. $msg is displayed when the test fails. title_is($title, $msg): Checks the contents of the ... tags. $msg is displayed when the test fails. content_contains($content, $msg): Checks if the regular expression $content matches anything in the html body. $msg is displayed when the test fails. More things to think about You might want to look at Test::WWW::Mechanize::CGI . It allows you to test without running a webserver. The WWW::Mechanize::FAQ could be useful to you if you are looking for examples.
