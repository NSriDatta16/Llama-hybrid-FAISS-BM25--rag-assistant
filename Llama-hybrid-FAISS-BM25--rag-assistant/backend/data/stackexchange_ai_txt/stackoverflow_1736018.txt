[site]: stackoverflow
[post_id]: 1736018
[parent_id]: 1736010
[tags]: 
You can use both YEAR(timestamp) and WEEK(timestamp) , and use both of the these expressions in the SELECT and the GROUP BY clause. Not overly elegant, but functional... And of course you can combine these two date parts in a single expression as well, i.e. something like SELECT CONCAT(YEAR(timestamp), '/', WEEK(timestamp)), etc... FROM ... WHERE .. GROUP BY CONCAT(YEAR(timestamp), '/', WEEK(timestamp)) Edit : As Martin points out you can also use the YEARWEEK(mysqldatefield) function, although its output is not as eye friendly as the longer formula above. Edit 2 [3 1/2 years later!]: YEARWEEK(mysqldatefield) with the optional second argument ( mode ) set to either 0 or 2 is probably the best way to aggregate by complete weeks (i.e. including for weeks which straddle over January 1st), if that is what is desired. The YEAR() / WEEK() approach initially proposed in this answer has the effect of splitting the aggregated data for such "straddling" weeks in two: one with the former year, one with the new year. A clean-cut every year, at the cost of having up to two partial weeks, one at either end, is often desired in accounting etc. and for that the YEAR() / WEEK() approach is better.
