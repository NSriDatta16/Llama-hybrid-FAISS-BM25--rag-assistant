[site]: datascience
[post_id]: 123946
[parent_id]: 61530
[tags]: 
(This is the asker's solution, moved from question and comment to answer) This sample code helped me to understand it: def your_function(number): print(number) from sklearn.model_selection import ParameterGrid param_grid = {'param1': [1, 2, 3]} grid = ParameterGrid(param_grid) for params in grid: your_function(params['param1']) I had too much paramaters for gridsearch. In this case it would take months to calculate all combinations. Finally i used hyperopt for the hyperparameter optimization. There are some nice basic tutorials out there. This one helped me a lot. You can also find a python notebook there. https://towardsdatascience.com/an-introductory-example-of-bayesian-optimization-in-python-with-hyperopt-aae40fff4ff0
