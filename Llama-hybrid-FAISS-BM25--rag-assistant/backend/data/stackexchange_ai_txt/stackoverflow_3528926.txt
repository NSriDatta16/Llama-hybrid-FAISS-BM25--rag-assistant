[site]: stackoverflow
[post_id]: 3528926
[parent_id]: 3528508
[tags]: 
You should really read Apple's introduction to Objective-C . It explains the syntax and structure of the language. You must also read the Objective-C memory management guide so that your programs don't leak memory and crash. Having said that, here's probably what you're trying to create (I took the liberty of changing some of your variable names): TestClass.h #import @interface TestClass : NSObject { NSArray* strings_; } // Method declarations would go here // example: - (NSString*)randomElement; @end TestClass.m #import "TestClass.h" #import // Notice how the implementation does NOT redefine the instance variables. @implementation TestClass // All code must be in a method definition. // init is analogous to the default constructor in other languages - (id)init { if (self = [super init]) { strings_ = [[NSArray alloc] initWithObjects:@"stuff", @"things", nil]; } return self; } // dealloc is the destructor (note the call to super). - (void)dealloc { [strings_ release]; [super dealloc]; } - (NSString*)randomElement { NSUInteger index = arc4random() % [strings_ count]; return [strings_ objectAtIndex:index]; } @end For random number generation , it's easy to use arc4random() because it doesn't require setting the seed value.
