[site]: stackoverflow
[post_id]: 2520067
[parent_id]: 2452781
[tags]: 
What you want is called a "backwards slice" ("all the code that contributes to a specific computed result") in the computing theory literature. To compute the backward slice, something needs to parse the langauge, compute all the influences (control and dataflow) on a selected point in the program, and then display those points to you. Slicing tools exist for langauges like C. They may exist for Java (as academic versions). I don't know of any that exist for PHP. Another way to discover the code involved in an action is to run a test coverage tool. Such a tool marks all the code (across many files) that gets executed for a specific action (usually a "unit test" but test coverage tools really don't care). Then you simply exercise the action you care about, and look at the test coverage data. A graphical display will make it easy to see what code was executed; the part you want is buried in all the executed code. A PHP Test Coverage tool does exist and will provide nice displays of the covered code.
