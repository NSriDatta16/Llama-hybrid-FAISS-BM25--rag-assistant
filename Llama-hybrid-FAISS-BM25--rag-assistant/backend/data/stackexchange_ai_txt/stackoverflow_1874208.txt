[site]: stackoverflow
[post_id]: 1874208
[parent_id]: 
[tags]: 
Problem using reinterpret_cast<> in c++

I am trying to cast a datastream into a struct since the datastream consists of fixed-width messages and each message has fulle defined fixed width fields as well. I was planning on creating a struct and then using reinterpret_cast to cast pointer to the datastream to the struct to get the fields. I made some test code and get weird results. Could any explain why I am getting these or how to correct the code. (the datastream will be binary and alpha numeric mixed but im just testing with strings) #pragma pack(push,1) struct Header { char msgType[1]; char filler[1]; char third[1]; char fourth[1]; }; #pragma pack(pop) int main(void) { cout (data); cout msgType filler third fourth The result that are coming up are 4 four our ur r I think the four, our and ur is printing since it cant find the null terminator. How do I get around the null terminator issue?
