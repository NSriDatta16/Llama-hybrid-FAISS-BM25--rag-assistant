[site]: stackoverflow
[post_id]: 5460653
[parent_id]: 
[tags]: 
Best design to organize HttpUnit+junit as standalone app

I have a task to write a set of http unit tests, which should be deployed and started as single threaded application on external server. After some investigation and reading of documentation I came to following application structure: public static void main(String... args) throws Exception { Class[] testCases = { LoginTest.class, Test2.class, Test3.class }; TestSuite suite = new TestSuite(testCases); TestResult result = new TestResult(); suite.run(result); displayResults(result); } And testcase looks like: public class LoginPageTest extends TestCase { public void testLogin() throws IOException, SAXException { WebConversation wc = new WebConversation(); //Some HttpUnit init code here loginForm.setParameter("j_username", login); loginForm.setParameter("j_password", pass); loginForm.submit(); String expected = String.format("/%s/action/logon.do", endpoint); assertEquals(wc.getCurrentPage().getURL().getPath(), expected); } } Has anyone made similar tasks ? Have you some advices than can improve this structure? How can I implement dependency between testcases (e.g. almost everything needs that user should be authenticated -> loginTestCase must be called) ? Any advice greatly appreciated ! Thanks in advance.
