[site]: stackoverflow
[post_id]: 3129362
[parent_id]: 3129326
[tags]: 
There are loads of questions that pop up here. Why aren't you executing media player itself instead of shellexecuting the name of the target file? How do you know when the media is done playing in order to close the file? Why not use the toolhelp APIs to simply enumerate processes instead of the wacky GetForegroundWindow/GetWindowsThreadProcessId shenanigans? Why aren't you just using the Media Player ActiveX control instead of this kludge so you'd actually have control over things? If you intend to make this generic for any file (i.e. not just media, but maybe something like the Word viewer, etc) then you're really out of luck and need to rethink whatever it is you're trying to do (you've not told us what you're trying to achieve, only how you['ve decided to implement it). Applications don't normally close in WinMo, they typically just lose focus of get minimized, so you don't really know when a user is "done" with the file. The application associated with the file may already be running, so terminating it yourself is an unfriendly thing to do. The target application really is not designed to give you a callback when it's done with any particular file.
