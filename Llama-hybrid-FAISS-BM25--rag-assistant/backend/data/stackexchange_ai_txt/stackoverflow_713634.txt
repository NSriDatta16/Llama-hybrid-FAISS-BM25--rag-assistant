[site]: stackoverflow
[post_id]: 713634
[parent_id]: 
[tags]: 
Passing a delegate with two parameters as a parameter function

I have a sequence of functions that look very similar but for a single line, like the following two (but I have many more of them): private static int HowManyHoursInTheFirstYear(IList samples) { DateTime firstDate = samples[0].Date; int count = 0; while (count samples) { DateTime firstDate = samples[0].Date; int count = 0; while (count I was thinking about using delegates to remove this repetition in code in some elegant way, that would have allowed me to invoke something like: HowManyDaysInTheFirstPeriod( samples, delegate(DateTime d1, DateTime d2) { return d1.Month == d2.Month; }); thereby declaring a delegate like the following: delegate bool DateComparer(DateTime first, DateTime second); and where HowManyDaysInTheFirstPeriod whould be something like the following: private static int HowManySamplesInFirstPeriod IList samples, DateComparer comparer) { DateTime firstDate = samples[0].Date; int count = 0; while (count Unfortunately, the compiler complains that comparer needs two parameters. I am relatively new to C# and hit a road-block here. How would you solve this?
