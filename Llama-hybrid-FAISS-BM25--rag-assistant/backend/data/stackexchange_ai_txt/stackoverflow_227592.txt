[site]: stackoverflow
[post_id]: 227592
[parent_id]: 227438
[tags]: 
Try this: -- Sum up lengths of all columns select SUM(sc.length) from syscolumns sc inner join systypes st on sc.xtype = st.xtype where id = object_id('table') -- Look at various items returned select st.name, sc.* from syscolumns sc inner join systypes st on sc.xtype = st.xtype where id = object_id('table') No guarantees though, but it appears to be the same length that appears in sp_help 'table' DISCLAIMER: Note that I read the article linked by John Rudy and in addition to the maximum sizes here you also need other things like the NULL bitmap to get the actual row size. Also the sizes here are maximum sizes. If you have a varchar column the actual size is less on most rows.... Vendoran has a nice solution, but I do not see the maximum row size anywhere (based on table definition). I do see the average size and all sorts of allocation information which is exactly what you need to estimate DB size for most things. If you are interested in just what sp_help returns for length and adding it up, then I think (I'm not 100% sure) that the query to sysobjects returns those same numbers. Do they represent the full maximum row size? No, you are missing things like the NULL bitmap. Do they represent a realistic measure of your actual data? No. Again VARCHAR(500) does not take 500 bytes if you only are storing 100 characters. Also TEXT fields and other fields stored separately from the row do not show their actual size, just the size of the pointer.
