[site]: stackoverflow
[post_id]: 2207428
[parent_id]: 
[tags]: 
Redrawing control behind composite with SWT.NO_BACKGROUND

Original goal: I have a TreeMenu that i use to display my Menu. In this tree, a user can select different items. I would like to disable the tree, so that a user cannot select a new item after choosing the first. The catch is, we cannot use setEnabled, because we are not allowed to use the greyed out look. The look/colors may not change. Our proposed solution Our first idea was to use a Composite with SWT.NO_BACKGROUND on top of the menu, to prevent any user interaction with the TreeMenu. Code: final Composite cover = new Composite(getPage().shell, SWT.NO_BACKGROUND); cover.setLocation(getMenu().getLocation()); cover.setSize(getMenu().getSize()); cover.moveAbove(getMenu()); This has a problem with redrawing. If the screen is covered by another screen and then brought back to front, the Cover Composite is filled with fragments of the previous overlapping window. Our idea was to manually redraw the menu: cover.moveBelow(getMenu()); getMenu().update(); cover.moveAbove(getMenu()); We placed the code inside the paintEventListener. But this caused an infinite loop and did not solve the problem. Questions Does anyone have an idea how we can achive our orignial goal? Does anyone know how we can make our proposed solution work?
