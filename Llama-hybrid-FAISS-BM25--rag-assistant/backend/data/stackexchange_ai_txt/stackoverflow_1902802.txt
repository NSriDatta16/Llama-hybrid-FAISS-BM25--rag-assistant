[site]: stackoverflow
[post_id]: 1902802
[parent_id]: 1902744
[tags]: 
The reason eval is there is because when you need it, when you really need it, there are no substitutes. There's only so much you can do with creative method dispatching, after all, and at some point you need to execute arbitrary code. Just because a language has a feature that might be dangerous doesn't mean it's inherently a bad thing. When a language presumes to know more than its user, that's when there's trouble. I'd argue that when you find a programming language devoid of danger, you've found one that's not very useful. When is eval justified? In pragmatic terms, when you say it is. If it's your program and you're the programmer, you set the parameters.
