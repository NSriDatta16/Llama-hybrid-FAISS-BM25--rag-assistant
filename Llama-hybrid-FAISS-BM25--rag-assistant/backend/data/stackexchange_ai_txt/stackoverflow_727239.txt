[site]: stackoverflow
[post_id]: 727239
[parent_id]: 727142
[tags]: 
Just off the top of my head... Although your testing of add really only tests the framework: You've got adding 1 item, that's good what about adding LOTS of items (I mean, ridiculous amounts - for what value of n entries does the container add fail?) what about adding no items? (null entry) if you add items to the list, are they in a particular order? should they be? likewise with your fetch: what happens in your fetch(x) if x > rep.Count ? what happens if x what happens if the rep is empty? does x match performance requirements (what's it's algorithmic complexity? is it within range when there's just one entry and when there's a ridiculously large amount of entries? There's a good checklist in the book Pragmatic Unit Testing (good book, highly recommended) Are the results right? Are all the boundary conditions CORRECT Conform to an expected format Ordered correctly In a reasonable range Does it Reference any external dependencies Is the Cardinality correct? (right number of values) does it complete in the correct amount of Time (real or relative) Can you check inverse relationships Can you cross check the results with another proven method Can you force error conditions Are performance characteristics within bounds
