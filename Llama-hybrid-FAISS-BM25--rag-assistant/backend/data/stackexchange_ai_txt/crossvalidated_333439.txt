[site]: crossvalidated
[post_id]: 333439
[parent_id]: 61144
[tags]: 
There is an excellent R tutorial on fitting the 4 parameter logistic model for calibration purposes (e.g. on ELISA data) here: http://weightinginbayesianmodels.github.io/poctcalibration/over_tutorials.html http://weightinginbayesianmodels.github.io/poctcalibration/calib_tut4_curve_ocon.html http://weightinginbayesianmodels.github.io/poctcalibration/calib_tut5_precision_ocon.html http://weightinginbayesianmodels.github.io/poctcalibration/AMfunctions.html#sdXhat They just use the nlsLM function in the minpack.lm package. I.e. they fit a a model of the form x |t|) # lower.asymp 1.5371 0.1080 14.24 7.06e-11 *** # upper.asymp 4.5508 0.1497 30.40 2.93e-16 *** # inflec 889.1543 14.0924 63.09 They also show how one could use weights and iteratively refitted least squares to allow for non-homogeneous variance. And it also covers how to do inverse prediction and calculating derived statistics like determining the limit of detection, limit of quantification and working range. Myself I had more luck using a constrained strictly monotone P spline fit though, fitted using the scam package, to do calibration curves, as that resulted in much narrower 95% confidence intervals and prediction intervals than using the four parameter logistic model... I.e. a model of the form require(scam) nknots = 20 # desired nr of knots fit = scam(y~s(conc,k=nknots,bs="mpi",m=2), family=gaussian, data=data) If your data are discrete counts as opposed to some continuous measure you could also use family=poisson with a log link, or work with a log(y+1) transformed dependent variable. You could also use log(conc+1) in your formula as well, as concentration can never go negative.
