[site]: stackoverflow
[post_id]: 2282427
[parent_id]: 
[tags]: 
Interesting Problem (Currency arbitrage)

Arbitrage is the process of using discrepancies in currency exchange values to earn profit. Consider a person who starts with some amount of currency X, goes through a series of exchanges and finally ends up with more amount of X(than he initially had). Given n currencies and a table (nxn) of exchange rates, devise an algorithm that a person should use to avail maximum profit assuming that he doesn't perform one exchange more than once. I have thought of a solution like this: Use modified Dijkstra's algorithm to find single source longest product path. This gives longest product path from source currency to each other currency. Now, iterate over each other currency and multiply to the maximum product so far, w(curr,source) (weight of edge to source). Select the maximum of all such paths. While this appears good, i still doubt of correctness of this algorithm and the completeness of the problem.(i.e Is the problem NP-Complete?) as it somewhat resembles the traveling salesman problem. Looking for your comments and better solutions(if any) for this problem. Thanks. EDIT: Google search for this topic took me to this here , where arbitrage detection has been addressed but the exchanges for maximum arbitrage is not.This may serve a reference.
