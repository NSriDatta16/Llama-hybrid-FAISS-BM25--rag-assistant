[site]: datascience
[post_id]: 123093
[parent_id]: 
[tags]: 
Data processing for Events that repeat a fixed number of times in each group in machine learning

Assume I have a football teams historical match performance data at player level, with attributes like number of goals score by each player, other performance metrices like passes given, crosses done, shots on targets etc. Now I want to train a model, to predict player with highest goal scoring probability in each match. In classical ml, I can build independent features like players historical performance data, in various temporal variations like last 3 matches last 5 matches etc (eg: no of shots on target in last 3 matches). The event will be the highest goal scorer of each match marked as 1 rest all of that match 0. The train set will comprise of multiple such matches. But the problem am facing here is, the data formed in this method doesn't in any way account for the fact that, each match will have atleast one target. The model will learn the pattern row wise and learn to identify event in a point predicition manner but it wont consider the relative importance of these patterns on a match to match basis, as the patterns that are valid to predict an event in one match, might not be same for another match.( in relative terms, one match of all stars team might require pretty high performance features for event but another of club level might require much lower.) here the comparitive numbers between the players are more important that the overall pattern resulting in one event per match basis. I have tried to validate my models on groupkfold, also converted my features to grouped rank percentiles based on matches (eg: match player percentile rank of no of shots on target in last 3 matches).Also tried to make various match level features. I just wanted to know, apart from building these type of features, is there a better way I can transform the data or the problem to approach it better. I also want to know if sklearn has anything like a group roc auc or close which I can use out of box to evaluate such models and supply as custom loss functions for training
