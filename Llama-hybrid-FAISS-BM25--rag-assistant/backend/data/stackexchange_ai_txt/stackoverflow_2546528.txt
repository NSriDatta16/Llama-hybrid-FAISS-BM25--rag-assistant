[site]: stackoverflow
[post_id]: 2546528
[parent_id]: 2546503
[tags]: 
AVG already ignores nulls and does what you want: The avg() function returns the average value of all non-NULL X within a group. String and BLOB values that do not look like numbers are interpreted as 0. The result of avg() is always a floating point value as long as at there is at least one non-NULL input even if all inputs are integers. The result of avg() is NULL if and only if there are no non-NULL inputs. From http://www.sqlite.org/lang_aggfunc.html So you can probably take the values you have per domain and load them into another table and then just run averages on that table. Or you could just unpivot your wide table and run averages on that, too. AVG works on columns, not rows. So if you unpivoted your table you could use AVG and not have the problem you're facing. Let's look at a small example: You have a table and it looks like this: ID | q1 | q2 | q3 ---------------------- 1 | 1 | 2 | NULL 2 | NULL| 2 | 56 You want to average q1 and q2 together because they're in the same domain, but they're separate columns so you can't. But if you changed your table to look like this: ID | question | value ----------------------- 1 | 1 | 1 1 | 2 | 2 1 | 3 | NULL 2 | 1 | NULL 2 | 2 | 2 2 | 3 | 56 Then you could take the average of the two questions easily: SELECT AVG(value) FROM Table WHERE question IN (1,2) And you can group by ID if you want an average per ID rather than a global average: SELECT ID, AVG(value) FROM Table WHERE question IN (1,2) GROUP BY ID
