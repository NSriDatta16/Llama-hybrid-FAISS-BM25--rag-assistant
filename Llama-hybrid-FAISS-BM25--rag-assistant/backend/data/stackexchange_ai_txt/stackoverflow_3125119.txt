[site]: stackoverflow
[post_id]: 3125119
[parent_id]: 3124535
[tags]: 
Alternate Approach I think you can do without messing around with any id's at all. Rely on the document structure instead to provide the information. It looks like you have a list of divs, where each div can be deleted by clicking on an x that is present inside the div. So if you had a structure like: x ... x .. Assign the delete event to all spans as, $("span.delete").click(function() { $(this).parent('.node').remove(); }); That should free you from having to rely on the id at all, as long as you stick to a basic structure of putting the span inside the div and assign appropriate class names. If you want to know the ID of the clicked element's parent, store it as a data attribute instead of an id. That keeps jQuery and older browsers happy. For example, ... which can be retrieved inside the span click handler, as: $("span.delete").click(function() { var node = $(this).parent('.node'); var id = node.attr('data-id'); // do something with it }); Old Approach Query using the native getElementById method to ensure that the element gets selected if the user-agent considers that to be a valid ID. jQuery will do some extra processing on the passed in ID, so it's better to query natively: $(document.getElementById("*xxx.")).remove(); $(document.getElementById(".xxx*")).remove(); Or escape the characters * and . with \\ . Here's a jQuery-esque solution $("#\\*xxx\\.").remove(); $("#\\.xxx\\*").remove(); Works on all moojor browsers for me. Do IE tests yourself :) See this example . Note, that the restrictions for what constitutes a valid ID string as per HTML5 are: Must be unique Must contain at least one character Must not contain any space character Quoting from the spec : The id attribute specifies its element's unique identifier (ID). The value must be unique amongst all the IDs in the element's home subtree and must contain at least one character . The value must not contain any space characters . If the value is not the empty string, user agents must associate the element with the given value (exactly, including any space characters) for the purposes of ID matching within the element's home subtree (e.g. for selectors in CSS or for the getElementById() method in the DOM).
