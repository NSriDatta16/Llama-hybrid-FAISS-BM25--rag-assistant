[site]: stackoverflow
[post_id]: 4942948
[parent_id]: 4939973
[tags]: 
I don't think data transformation is different from any other component - it needs to be tested just as much as anything else, and the answers to these questions are the same as for any other testing. The amount of investment in testing should of course be related to the cost or consequences of failure, which is something that is sometimes forgotten: some bugs in some environments really are cheaper to detect and fix after you go live. I've occasionally seen projects that do more testing than necessary, but the opposite is far more common. I have reservations about the term "unit test" - I've seen people get carried away with testing tiny components of the system, like individual methods of a class or individual templates in a stylesheet. That can be unproductive, especially if the tests are maintained "in perpetuity" and run on every build. Sometimes you need scaffolding while the bridge is being built, and you can safely put it in storage once the bridge is standing. I prefer that most of the tests should use interfaces that are available to users of your system: that minimizes the occasions when a test will fail because of changes to the internals of the system that don't affect its external behaviour.
