[site]: stackoverflow
[post_id]: 2535279
[parent_id]: 2527482
[tags]: 
I don't think that any particular CMS architecture exists, there are many. What you call widgets might be something like a component-based view layer. The idea is to create view using component, which can be configured and reused. That is what asp.net uses afaik. On the other hand, many MVC frameworks don't use components, because it is nature of MVC to have views, which are somewhat more coarse grained. The difference can be spotted easily and best compared between web aplications and GUI applications. Most MVC web applications use some sort of templateing engine to create views with at most some sort of partials - template embedding. In contrast, GUI frameworks present you "widgets" which are components of which you can compose your view layer. The advantage of components lays in reusability, but rigidness and some coupling to the backend (their behaviour) is present.
