[site]: stackoverflow
[post_id]: 1809275
[parent_id]: 
[tags]: 
Suppress jQuery event handling temporarily

Is there an elegant way to temporarily suppress jQuery events? I use code like this: $(element).unbind(event, function1).unbind(event, function2); // code for which the event is suppressed $(element).bind(event, function1).bind(event, function2); but I find it a bit clumsy and not very scalable to many events. Why do I want to suppress events temporarily? I use BlockUI plugin to block UI during Ajax access. This is done with: $().ajaxStart($.blockUI).ajaxStop($.unblockUI) as proposed by BlockUI. However, one Ajax access is special, so I need a different message. The ajaxStart and ajaxStop events interfere with the message code (nothing is shown): function message(text, callback) { if (text == undefined) { $.unblockUI(); return; } // $().unbind('ajaxStop', $.unblockUI).unbind('ajaxStart', $.blockUI); $("#message_text").html(text); $.blockUI({message: $("#message")}); $("#message_ok").click(function() { // $().bind('ajaxStop', $.unblockUI).bind('ajaxStart', $.blockUI); $.unblockUI(); if (callback != undefined) callback(); }); } Only if I uncomment the unbind() and the bind() lines, it is working.
