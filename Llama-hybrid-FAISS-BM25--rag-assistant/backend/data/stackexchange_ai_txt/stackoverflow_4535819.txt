[site]: stackoverflow
[post_id]: 4535819
[parent_id]: 4535791
[tags]: 
This is excatly the reason why most Maven repositories refuse to let people update (or remove) existing versions and only allow bumping version numbers (or releasing under a new name). Regarding your dependency you will need to find another repository that contains it and then add this repository to your project (or super) pom like this: java.net http://download.java.net/maven/2 where you will have to replace the identifier and URL with the values for the new repo. Alternativly maven actually first checks your own local repository to see if the package is already there (usually located in $HOME/.m2/ folder) so if you have the jar file at hand then you can install it with mvn install:install-file -DgroupId=javax.jnlp -DartifactId=jnlp \ -Dversion=1.2 -Dpackaging=jar -Dfile=/path/to/jnlp-1.2.jar Also note that mvnbrowser.com does not track content from all maven repositories, with the official Spring, Sun (Oracle) and JBoss (Redhat) repositories bring the most notable omissions. So the problems you describe actually occur pretty often (fx. when installing the Oracle JDBC driver) requiring you to go hunting for other repositories or adding the Jar to your own.
