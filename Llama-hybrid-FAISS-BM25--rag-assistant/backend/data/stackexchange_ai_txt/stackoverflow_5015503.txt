[site]: stackoverflow
[post_id]: 5015503
[parent_id]: 5014965
[tags]: 
If by efficient you mean faster, then I would guess (without testing) that using FormCollection will be faster as it doesn't have the overhead of using model binding. However the results of this will be negligible and using FormCollection for this reason would be premature optimisation. MVC was designed with integrated model binding and if you have a performance issue, I would bet it is somewhere else. Now, if you mean efficient in regards to developer time, then that depends entirely on the project and the developer. If the form is only posting a few simple values then using FromCollection may well be quicker to code than having to create a model. However if that's the case then using parameters would be quicker and you would have typed values. ActionResult Edit(int id, string name, bool someOtherValue) . Although, if you're using either of these methods in anything but simplest of projects you will soon find you need to create a model. So what was initially fast to code will take more development time to refactor and maintain. If you already have a OurDomainDataModel model defined then passing that will be far quicker to code. If what you really wanted to ask was "What would be the more elegant, maintainable, testable code that would gain the respect of anyone else that had to use it?" Then the answer is pass a Model or a ViewModel
