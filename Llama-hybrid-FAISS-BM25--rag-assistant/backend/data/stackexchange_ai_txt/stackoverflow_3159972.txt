[site]: stackoverflow
[post_id]: 3159972
[parent_id]: 
[tags]: 
errors concatenating bytes from a block of bytes using memcpy

On occasion, the following code works, which probably means good concept, but poor execution. Since this crashes depending on where the bits fell, this means I am butchering a step along the way. I am interested in finding an elegant way to fill bufferdata with buffer , but admittedly, this is not it. EDIT: the error I receive is illegal access on bufferdata unsigned char buffer[4096] = {0}; char *bufferdata; bufferdata = (char*)malloc(4096 * sizeof(*bufferdata)); if (! bufferdata) return false; while( ... ) { // int nextBlock( voidp _buffer, unsigned _length ); read=nextBlock( buffer, 4096); if( read > 0 ) { memcpy(bufferdata+bufferdatawrite,buffer,read); if(read == 4096) { // let's go for another chunk bufferdata = (char*)realloc(bufferdata, ( bufferdatawrite + ( 4096 * sizeof(*bufferdata)) ) ); if (! bufferdata) { printf("failed to realloc\n"); return false; } } } else if( read
