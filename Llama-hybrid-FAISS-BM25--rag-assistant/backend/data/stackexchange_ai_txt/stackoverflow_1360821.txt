[site]: stackoverflow
[post_id]: 1360821
[parent_id]: 1360352
[tags]: 
The problem is where you're comparing the RadioGroup 's selected id... you'll want to change your onClick() to: public void onClick(View v) { if (v == calculate) { String billtotal; double total = 0; billtotal = bill.getText().toString(); final int aInt = Integer.parseInt(billtotal); if (radioCheckedId == R.id.poor) { total = aInt * 1.1; final String aString = Double.toString(total); resulttotal.setText(aString); } if (radioCheckedId == R.id.average) { total = aInt * 1.15; final String aString = Double.toString(total); resulttotal.setText(aString); } if (radioCheckedId == R.id.excellent) { total = aInt * 1.2; final String aString = Double.toString(total); resulttotal.setText(aString); } } } onCheckedChanged() gives you will be the R.id for the view and not just a number which tells you which it is in sequence. A few quick (unrelated) suggestions: Use a switch statement instead of a bunch of if-statements. Put something in there to check for -1 (nothing checked) too... just to be sure. In the onClick() I usually check for which View was clicked by checking the incoming view's id. This just makes it where you don't have to keep everything stored and (IMHO) is a little more clear what you're talking about. The above suggestions would look something like: public void onClick(View v) { if (v.getId() == R.id.calculate) { String billtotal; double total = 0; billtotal = bill.getText().toString(); final int aInt = Integer.parseInt(billtotal); switch(radioCheckedId) { case R.id.poor: total = aInt * 1.1; final String aString = Double.toString(total); resulttotal.setText(aString); break; case R.id.average: total = aInt * 1.15; final String aString = Double.toString(total); resulttotal.setText(aString); break; case R.id.excellent: total = aInt * 1.2; final String aString = Double.toString(total); resulttotal.setText(aString); break; default: // do something for when nothing is selected... maybe throw an error? break; } } } Lastly, if all you're doing in onCheckedChanged() is storing the value you could get rid of it all together and just check for it in the onClick(). Something like: public void onClick(View v) { int radioCheckedId = radiogroup1.getCheckedRadioButtonId(); if (v == calculate) { // ... Unrelated, but another problem I noticed (and someone else mentioned)... if your EditText s are listed in the XML layout then you'd need to get hooks to them like this (and not create new ones): EditText bill = (EditText) findViewById(R.id.bill ); EditText resulttotal = (EditText) findViewById(R.id.resulttotal); Also, you could probably just use a TextView instead of an EditView for the result if yo udon't need it to be editable.
