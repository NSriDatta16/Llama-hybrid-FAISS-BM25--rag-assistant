[site]: datascience
[post_id]: 33324
[parent_id]: 
[tags]: 
Time Series Classification using LSTM

I have multiple .csv's files, each of them represent a product. I am using LSTM to classify these products as good or bad. All .csv's have been clubbed together in form of a 3d matrix of (#files, time_steps, #features). I am passing the matrix in batch_size=128. ````below is the psuedo code. model = Sequential() model.add(LSTM(#cells(64), input_shape=(time_steps, #features))) model.add(Dense(1, activation='sigmoid')) model.compile(loss='binary_crossentropy', optimiser='adam', metrics=['accuracy']) model.fit(train_X, train_y, batch_size=128, epochs=100, validation_split=0.1) The problem is that I am getting NaN's in loss function and accuracy too is 0.000. Can anyone suggest me where to look. Thanks in advance.
