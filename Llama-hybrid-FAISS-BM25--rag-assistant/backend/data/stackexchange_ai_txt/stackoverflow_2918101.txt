[site]: stackoverflow
[post_id]: 2918101
[parent_id]: 2917974
[tags]: 
If you know C and some object oriented programming you'll learn python very quickly - most of the key things in just a few hours of reading / tinkering with it. Here are the main differentiators: - Designed to be easy to learn quickly and to encourage writing readable code. - Has the fewest warts of any object oriented programming language. - Doesn't force you to write object oriented code however. - Makes it easy to write scripts that can be executed stand alone or imported into others. Object Oriented features: - True polymorphism. Unlike C++ and derivatives such as Java you don't have to stand on your head to make your code polymorphic, generic and reusable - even in ways you didn't think about beforehand. This is because although it's strongly typed it's not statically typed. So as long as your objects have the expected methods or attributes that some piece of code wants, it'll work. This is known as duck typing. - Introspection - so you can easily check if a method or attribute is present before accessing it. Also is great for debugging. - You can add attributes and even methods to objects at run time. Very malleable code. - Supports multiple inheritance. Problems: - Typically faster than Ruby but sometimes slower than Java. - You have to get used to seeing the word self all over the place. - Hard for C style developers to let go of having to type curly braces and semi-colons. Seeing uncluttered code like that can make you feel like there's just something missing. There's a programming style guide that all python developers are meant to follow: http://www.python.org/dev/peps/pep-0008/ There's a variant of it that's faster than the main version and supports an easy to use concurrency mechanism. It's known as Stackless Python because it does away with using the C stack. EVE Online is written in this language. Here's an example of something I suppose could be considered scientific programming - adjusting sound waves - it's simply cool - scroll down to the bottom for source and see how relatively simple it is. http://musicmachinery.com/2010/05/21/the-swinger/
