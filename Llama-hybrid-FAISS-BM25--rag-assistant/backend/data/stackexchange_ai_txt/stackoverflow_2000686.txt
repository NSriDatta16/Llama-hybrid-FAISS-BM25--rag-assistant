[site]: stackoverflow
[post_id]: 2000686
[parent_id]: 2000573
[tags]: 
Overall, the code fragment replaces the value of w with the next power of two that is greater than or equal to w. Test code: #include size_t doit(size_t w) { if (w & (w - 1)) { size_t i = 1; while (i 0x%06zX\n", i, x); } for (i = 0; i 0x%06zX\n", i, x); } return(0); } Results: 0x000000 --> 0x000000 0x000001 --> 0x000001 0x000003 --> 0x000004 0x000007 --> 0x000008 0x00000F --> 0x000010 0x00001F --> 0x000020 0x00003F --> 0x000040 0x00007F --> 0x000080 0x0000FF --> 0x000100 0x0001FF --> 0x000200 0x0003FF --> 0x000400 0x0007FF --> 0x000800 0x000FFF --> 0x001000 0x001FFF --> 0x002000 0x003FFF --> 0x004000 0x007FFF --> 0x008000 0x00FFFF --> 0x010000 0x01FFFF --> 0x020000 0x03FFFF --> 0x040000 0x07FFFF --> 0x080000 0x0FFFFF --> 0x100000 0x000000 --> 0x000000 0x00000D --> 0x000010 0x000034 --> 0x000040 0x0000A9 --> 0x000100 0x000208 --> 0x000400 0x000625 --> 0x000800 0x00127C --> 0x002000 0x003781 --> 0x004000 0x00A690 --> 0x010000 0x01F3BD --> 0x020000 0x05DB44 --> 0x080000 Results from obvious modification (not shown): 0x000001 --> 0x000001 0x000002 --> 0x000002 0x000004 --> 0x000004 0x000008 --> 0x000008 0x000010 --> 0x000010 0x000020 --> 0x000020 0x000040 --> 0x000040 0x000080 --> 0x000080 0x000100 --> 0x000100 0x000200 --> 0x000200 0x000400 --> 0x000400 0x000800 --> 0x000800 0x001000 --> 0x001000 0x002000 --> 0x002000 0x004000 --> 0x004000 0x008000 --> 0x008000 0x010000 --> 0x010000 0x020000 --> 0x020000 0x040000 --> 0x040000 0x080000 --> 0x080000 0x100000 --> 0x100000
