[site]: stackoverflow
[post_id]: 2999393
[parent_id]: 2998613
[tags]: 
The documentation is misleading and incomplete. The objectID methods do not themselves copy objects they simply guarantee that you've gotten the specific object you wanted. The context2 in the example is in fact the source context and not the destination. You're getting a nil because the destination context has no object with that ID. Copying managed objects is fairly involved owing to the complexity of the object graph and the way that the context manage the graph. You do have to recreate the copied object in detail in the new context. Here is some example code that I snipped from the example code for The Pragmatic Programmer's Core Data: Apple's API for Persisting Data on Mac OS X . (You might be able to download the entire project code without buying the book at the Pragmatic site.) It should provide you with a rough idea of how to go about copying an object between context. You can create some base code that copies objects but the particulars of each object graph's relationships usually mean that you have to customize for each data model.
