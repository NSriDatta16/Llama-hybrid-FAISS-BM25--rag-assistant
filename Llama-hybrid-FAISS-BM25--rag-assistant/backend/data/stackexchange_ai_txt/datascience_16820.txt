[site]: datascience
[post_id]: 16820
[parent_id]: 16805
[tags]: 
Another option could be to model your problem as a bayesian linear regression where $x_i$ are random variables that follow a Bernoulli distribution with probability $p_i$, that is, $x_i \sim Bernoulli (p_i)$, and $v \sim \mathcal{N}(x^T b, \sigma^2)$. The posterior distribution of $p_i$ would enable you to tell the values of $x_i$ that most likely fit with the observed data. These posterior distributions may be inferred via MCMC or variational inference . The three main frameworks to implement bayesian models in Python are pymc3 ( example ), edward ( example ) and pystan ( example ). The three of them allow straighforward implementation of bayesian linear regression as formulated above.
