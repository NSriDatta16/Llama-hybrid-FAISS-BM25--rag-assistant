[site]: stackoverflow
[post_id]: 710727
[parent_id]: 710692
[tags]: 
Up to the forth paragraph, I was thinking it was just a pure function with the transaction as an implicit argument. But when you say: the function has no side-effects, except within the same transaction scope. Changes in state outside the scope of the database transaction are not allowed. I'm not so sure. Do you mean that it could make changes within the transaction but not be cognizant of them on a future call? How do you square that with: If you call the function twice within a single transaction with REPEATABLE READ isolation, you should get the same result In other words, are you limiting the in-transaction side effects to assignments (such as setting a flag to true) that have the same effect if done multiple times?
