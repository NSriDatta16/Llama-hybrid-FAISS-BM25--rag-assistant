[site]: stackoverflow
[post_id]: 3322213
[parent_id]: 3322129
[tags]: 
Do long division. Have a temporary storage of size equal to the divisor plus one, and initialized to zero: accumulator[] = {0,0,0}; Now run a loop: Shift each digit of the quotient one space to the left. Shift each digit of the accumulator one space to the right. Take the next digit of the dividend, starting from the most-significant end, and store it to the least-significant place of the accumulator. Figure out accumulator / divisor and set the least-significant place of the quotient to the result. Set the accumulator to the remainder. Used to use this same algorithm a lot in assembly language for CPUs what didn't have division instructions.
