[site]: crossvalidated
[post_id]: 210614
[parent_id]: 210522
[tags]: 
Your dataset suffers from the imbalance problem. You can approach the problem possibly in two ways: Use sampling techniques to over-sample the minority class (the churn class), or undersample the majority class (the non-churn class) and eliminate the imbalance issue . (i) SMOTE is one popular technique for oversampling ( https://www.jair.org/media/953/live-953-2037-jair.pdf ). Library available from, for Python: https://github.com/fmfn/UnbalancedDataset , for R: http://www.inside-r.org/packages/cran/dmwr/docs/SMOTE (ii) Undersampling can be done by taking only a portion of the majority class. You try initially with random selection. Later you may try advanced methods like Random majority under-sampling with replacement, Extraction of majority-minority Tomek links, Under-sampling with Cluster Centroids, NearMiss-(1 & 2 & 3), Condensend Nearest Neighbour, One-Sided Selection, Neighboorhood Cleaning Rule Use specialized algorithms that can handle the imbalance problem. (i) RUSBoost ( http://sci2s.ugr.es/keel/pdf/algorithm/articulo/2010-IEEE%20TSMCpartA-RUSBoost%20A%20Hybrid%20Approach%20to%20Alleviating%20Class%20Imbalance.pdf ). There is library available in , for Matlab: http://in.mathworks.com/help/stats/ensemble-methods.html , for Python: https://github.com/harusametime/RUSBoost , for R: https://github.com/SteveOhh/RUSBoost (ii) Cost-sensitive SVM ( https://arxiv.org/pdf/1212.0975v2.pdf ), (iii) Cost-sensitive Adaboost ( http://sci2s.ugr.es/keel/pdf/algorithm/articulo/2007%20-%20PR%20-%20Sun%20-%20Cost-Sensitive%20boosting.pdf ). There are are bunch of cost sensitive classifiers which you can find at, for Python: https://pypi.python.org/pypi/costcla , for R: https://cran.r-project.org/web/packages/mlr/mlr.pdf
