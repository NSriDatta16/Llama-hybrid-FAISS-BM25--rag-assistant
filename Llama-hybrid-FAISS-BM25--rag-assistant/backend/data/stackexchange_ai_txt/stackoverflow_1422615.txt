[site]: stackoverflow
[post_id]: 1422615
[parent_id]: 
[tags]: 
CustomValidator problems within ASP.NET

EDIT Fixed the problem - I needed to add the validators to a ValidationGroup and then call each of the validation controls Validate() method on the submit behaviour of the button. protected void btnDone_Click(object sender, EventArgs e) { this.cvValidation.Validate(); this.revYear.Validate(); if (Page.IsValid) { DateTime sub = Convert.ToDateTime(String.Format("01/{0}/{1}", ddlMonth.SelectedValue, txtYear.Text)); string str = sub.ToString("MMMM") + " " + sub.ToString("yyyy"); pcePopUp.Commit(str); } } I am trying to add a CustomValidator to my UserControl but I cannot get the validator to run as it should. What I am trying to achieve is to test to see if the month/year is in the future. After breaking into the code I have noticed that the validateDate method is being fired twice. Any help on this situation would be greatly appreciated. Could it be a problem with the way I am retrieving data from the controls as using the following two methods. private void loadPostBackData() { loadPostBackDataItem(((TextBox)puymcStartDate.FindControl("txtDate"))); loadPostBackDataItem(((TextBox)puymcEndDate.FindControl("txtDate"))); } private void loadPostBackDataItem(TextBox control) { string controlId = control.ClientID.Replace("_", "$"); string postedValue = Request.Params[controlId]; if (!String.IsNullOrEmpty(postedValue)) { control.Text = postedValue; } else { control.Text = String.Empty; } } UserControl code ASP.NET Code Choose date Code Behind using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.UI; using System.Web.UI.WebControls; using AjaxControlToolkit; using System.Diagnostics; namespace CLIck10.Controls { public partial class CtrlPopUpYearMonthCalendar : System.Web.UI.UserControl { protected void Page_Load(object sender, EventArgs e) { if (!Page.IsPostBack) { DateTime month = Convert.ToDateTime("01/01/2000"); for (int i = 0; i = DateTime.Now) { e.IsValid = true; } else { e.IsValid = false; } } } } After experimenting with just embedding the control in a blank page It works so it must be something to do with the page I am working on.
