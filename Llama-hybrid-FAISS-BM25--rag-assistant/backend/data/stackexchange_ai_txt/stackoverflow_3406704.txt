[site]: stackoverflow
[post_id]: 3406704
[parent_id]: 
[tags]: 
How to update a database used as a source of data by an Android app

I have an app which uses a large amount of data which has been compiled outside the app (on my main PC). The app is for my personal use so there are no complications with having to distribute data updates to other users. However, I am currently following a very convoluted and time-consuming procedure each time I want to update the data, and I wonder if anyone can suggest any ways to streamline it. The procedure I follow whenever I want to add new data is as follows: I enter the new data into a csv file which I maintain as the source of the relevant table in the database I use SQLite Database Browser to import the data into an existing SQLite database. (This program does not seem to have the ability to append imported data into an existing table, so whenever a table needs updating I have to delete the existing table, then import data from the csv file into a new table, then manually edit the data types for all the fields in the table.) I drag the icon for the database file onto the 'assets' folder of my project in Eclipse. I export the project from Eclipse as an apk file. I copy the apk file to my phone (using Astro File Manager) I uninstall the old version of the app and install the new apk. when the app is run, code based on the example set out here copies the data from the 'assets' folder into the app's data folder; this means that each byte of data takes up two bytes in the phone's internal memory; at present this is not a problem, but could be as the volume of data grows; I wonder if there is a more memory-efficient method? I should be very grateful for any guidance.
