[site]: stackoverflow
[post_id]: 2114460
[parent_id]: 2114380
[tags]: 
List13 from the API Demos does something similar using OnScrollStateChanged. There may be a better way, though: public void onScrollStateChanged(AbsListView view, int scrollState) { switch (scrollState) { case OnScrollListener.SCROLL_STATE_IDLE: mBusy = false; int first = view.getFirstVisiblePosition(); int count = view.getChildCount(); for (int i=0; i . . . EDIT BY Corey Trager: The above definitely pointed me in the right direction. I found handling OnScrollListener.onScroll worked better than onScrollStateChanged. Even if I removed the case statement in onScrollSgtaetChanged and handled every state change, some text wasn't getting resized. But with onScroll, things seem to work. So, my seemingly working code looks like this: public void onScroll(AbsListView v, int firstVisibleItem, int visibleCount, int totalItemCount) { ListView lv = this.getListView(); int childCount = lv.getChildCount(); for (int i = 0; i
