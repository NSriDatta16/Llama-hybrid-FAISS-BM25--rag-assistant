[site]: stackoverflow
[post_id]: 5314307
[parent_id]: 5314241
[tags]: 
You could utilize enumerate , zip and list comprehensions : >>> a = [0, 4, 10, 100] # basic enumerate without condition: >>> [x - a[i - 1] for i, x in enumerate(a)][1:] [4, 6, 90] # enumerate with conditional inside the list comprehension: >>> [x - a[i - 1] for i, x in enumerate(a) if i > 0] [4, 6, 90] # the zip version seems more concise and elegant: >>> [t - s for s, t in zip(a, a[1:])] [4, 6, 90] Performance-wise, there seems to be not too much variance: In [5]: %timeit [x - a[i - 1] for i, x in enumerate(a)][1:] 1000000 loops, best of 3: 1.34 µs per loop In [6]: %timeit [x - a[i - 1] for i, x in enumerate(a) if i > 0] 1000000 loops, best of 3: 1.11 µs per loop In [7]: %timeit [t - s for s, t in zip(a, a[1:])] 1000000 loops, best of 3: 1.1 µs per loop
