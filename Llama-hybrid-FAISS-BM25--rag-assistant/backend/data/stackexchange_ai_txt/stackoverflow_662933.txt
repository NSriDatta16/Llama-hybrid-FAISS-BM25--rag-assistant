[site]: stackoverflow
[post_id]: 662933
[parent_id]: 662488
[tags]: 
I'm familiar with a fairly good-sized OSS project that made the decision at its inception to store images in the MySQL database, and it's proven to be among the top 3 bad ideas they have been coping with ever since. (Exacerbated by the fact the "refactor mercilessly" is anathema, but that's another story.) Among the serious problems this has caused: Exceeding maximum efficient database size (mysql). (The total space required for images exceeds all others by a at least 2 orders of magnitude). Image files lose their "fileness". No dates sizes etc. unless stored (redundantly) as dates (which require code for management). Arbitrary byte sequences don't process nicely all the time, for either storage or manipulation. "We'll never need to access the images externally" is a dangerous assumption. Fragility. Because the whole arrangement is unnatural and touchy, and you don't know where it will bite next (contributing to the anti-refactor mentality). The benefits? None that I can think of, except it might have been the path of least resistance at the time.
