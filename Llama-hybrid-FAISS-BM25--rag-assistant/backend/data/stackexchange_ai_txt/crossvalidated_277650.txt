[site]: crossvalidated
[post_id]: 277650
[parent_id]: 266965
[tags]: 
The way I like to describe this is that with RNN your net "understands" that your inputs are the same thing (say frame of video) and applies similar transformation to all of them - for instance if you are inputting a video input at a given timestep is a frame of the video and is separate from the previous frames. If you input all of the frames together your net might develop connections among unrelated inputs that are close to each other in the input (for instance first pixels of one frame and last pixels of the previous ones). Another great benefit of RNNs is that it requires less trainable connections and allows for variable length of the input (videos can be several seconds or hours long) while FNN will require some heavy data manipulation and will not perform well if most of the inputs are 0s
