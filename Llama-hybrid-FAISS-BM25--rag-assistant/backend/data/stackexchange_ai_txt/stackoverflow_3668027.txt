[site]: stackoverflow
[post_id]: 3668027
[parent_id]: 3667784
[tags]: 
You can’t really do this. I find it annoying too. However, you can alleviate the problem by using default parameter values instead of lots of overloads. Instead of: public SftpConnection(string host, string username, string password, int port) public SftpConnection(string host, string username, string password) public SftpConnection(string host, string username, int port) public SftpConnection(string host, string username) You can have just a single one: public SftpConnection(string host, string username, string password = "", int port = 22) This has multiple advantages: Need only one XML comment. The whole point of my answer. ☺ Users of Visual Studio can instantly see that the default value for port is 22. With the overloads, this is not obvious; you have to specifically mention it in the documentation. You indirectly encourage client code to become more readable by encouraging the use of named parameters (e.g. port: 2222 instead of just 2222 , which is less clear). And the greatest part about this is that using default values does not remove the ability to still have several overloads if you need them. Typical examples where you want overloads with default values might be something like... ReadFrom(string filename, ReaderOptions options = null) ReadFrom(Stream stream, ReaderOptions options = null) ReadFrom(byte[] rawData, ReaderOptions options = null) In these cases, I would argue the XML comments should actually be different.
