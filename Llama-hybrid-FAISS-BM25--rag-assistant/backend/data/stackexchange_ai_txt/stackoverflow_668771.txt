[site]: stackoverflow
[post_id]: 668771
[parent_id]: 668763
[tags]: 
My first thought was to point out that the normal semantics of ++ are in-place modification . If you want to mimic that you'd write: public static Account operator ++(Account a) { a.Balance += 1; return a; } and not create a new object. But then I realized that you were trying to mimic the post increment. So my second thought is "don't do that" -- the semantics don't map well at all onto objects, since the value being "used" is really a mutable storage location. But nobody likes to be told "don't do that" by a random stranger so I'll let Microsoft tell you not to do it . And I fear their word is final on such matters. P.S. As to why it's doing what it does, you're really overriding the preincrement operator, and then using it as if it were the postincrement operator.
