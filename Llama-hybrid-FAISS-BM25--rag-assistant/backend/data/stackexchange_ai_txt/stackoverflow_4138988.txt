[site]: stackoverflow
[post_id]: 4138988
[parent_id]: 4138919
[tags]: 
You have to implement IEventDispatcher . Like this: class ExampleDispatcher implements IEventDispatcher { private var dispatcher:EventDispatcher; public function ExampleDispatcher(){ dispatcher = new EventDispatcher(this); } public function addEventListener(type:String, listener:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false):void { dispatcher.addEventListener(type, listener, useCapture, priority); } public function dispatchEvent(evt:Event):Boolean { return dispatcher.dispatchEvent(evt); } public function hasEventListener(type:String):Boolean { return dispatcher.hasEventListener(type); } public function removeEventListener(type:String, listener:Function, useCapture:Boolean = false):void { dispatcher.removeEventListener(type, listener, useCapture); } public function willTrigger(type:String):Boolean { return dispatcher.willTrigger(type); } } TECHNICALLY you can define these functions without the implement , but it just kinda makes it more organized.
