[site]: crossvalidated
[post_id]: 588618
[parent_id]: 
[tags]: 
Predict unseen samples with Graph Neural Networks

I am recently studying graph neural networks (GNNs). I have read some papers, e.g., Semi-Supervised Classification with Graph Convolutional Networks , and blogs, e.g., Training Graph Convolutional Networks on Node Classification Task . Spektral (python package) has a nice introduction to graph neural networks. One use case of GNNs is node classification. According to the sources mentioned above, node classification is usually performed on a single graph that already contains training, validation and test data, including their adjacencies. Is this correct? If so, I have trouble understanding how to classify new, unseen data. Do I need to append this new data point as a new node to the existing graph and calculate adjacencies to all existing nodes based on the node features prior to classification? This cannot be right, because especially for large graphs, this can take too much time during inference, I guess. I think I am missing some crucial things in this concept. Hopefully, someone here can open my eyes.
