[site]: stackoverflow
[post_id]: 4673966
[parent_id]: 
[tags]: 
PHP MySQL How to organize this code?

I have this code (removed param escaping just to cut down some code): private function _get_tag_id($value) { $sql = "INSERT INTO tags (tag, added) VALUES ('$value', ".time().") " . "ON DUPLICATE KEY UPDATE tag_id = tag_id"; $id = execute($sql); if (empty($id)) { $sql = "SELECT tag_id FROM tags WHERE tag = '$value'"; $id = execute($sql); } return $id; } I'm really bad at organizing my code and I've been reading about the importance of keeping your code DRY. Does this include any queries you might have? For example, I need to perform these same queries for a few fields, and what I've done is change it to this: private function _get_field_id($field, $value) { $sql = "INSERT INTO {$field}s ({$field}, added) VALUES ('$value', ".time().") " . "ON DUPLICATE KEY UPDATE {$field}_id = {$field}_id"; $id = execute($sql); if (empty($id)) { $sql = "SELECT {$field}_id FROM {$field}s WHERE {$field} = '$value'"; $id = execute($sql); } return $id; } Although that reduces some similar functions, it also makes the query much harder to read at first. Another problem after doing this is what happens if sometimes the query may be slightly different for a field? Let's say if the field is tag, I don't need the added column any more and maybe the query would now change to: $sql = "INSERT INTO {$field}s ({$field}".($field == 'tag' ? '' : ", added").") " . "VALUES ('$value', ".($field == 'tag' ? '' : time()).") " . "ON DUPLICATE KEY UPDATE {$field}_id = {$field}_id"; Now it's starting to get extra messy, but I have a feeling people don't actually do that. Another thing I've read is that functions should only do one thing. So would I cut up this function like this? private function _get_tag_id($value) { $id = $this->_add_tag_id($value); if (empty($id)) { $id = $this->_get_tag_id($value); } return $id; } Or would it be better to leave it the way it was before? If you don't think either of the ways I've tried organizing the code is correct also feel free to suggest the way you'd do it, or in other words what would be the best way to organize these simple bits of code?
