[site]: stackoverflow
[post_id]: 554889
[parent_id]: 539431
[tags]: 
This is a more straight-forward method using XML DML in SQL Server 2005/2008 although there is a little kludginess to it. Since you can't insert sql:variable directly into XML using the .modify(insert) method of the XML data type, the trick is you have to cast the XML fragments as character strings, concatenate them, then recast them back as XML, move the second fragment inside the first one and delete the remnants of the second. The implementation is not nearly as bad as it sounds: DECLARE @xmlfrag1 XML DECLARE @xmlfrag2 XML DECLARE @xmlfrag3 XML SET @xmlfrag1 = ' ' SET @xmlfrag2 = ' ' SET @xmlfrag3 = ' ' SET @xmlfrag1 = CONVERT(XML, (CONVERT(NVARCHAR(MAX), @xmlfrag1) + CONVERT(NVARCHAR(MAX), @xmlfrag2))) SET @xmlfrag1.modify('insert /*[2] as first into /*[1]') SET @xmlfrag1.modify('delete /*[2]') SET @xmlfrag1.modify('insert as first into (/Orders/Order)[1]') SET @xmlfrag1 = CONVERT(XML, (CONVERT(NVARCHAR(MAX), @xmlfrag1) + CONVERT(NVARCHAR(MAX), @xmlfrag3))) SET @xmlfrag1.modify('insert /*[2] as first into (/Orders/Order/OrderItems)[1]') SET @xmlfrag1.modify('delete /*[2]') SELECT @xmlfrag1 This will return the following, which is exactly what you wanted: How you get your XML fragments is completely up to you, but this should be enough to get you started.
