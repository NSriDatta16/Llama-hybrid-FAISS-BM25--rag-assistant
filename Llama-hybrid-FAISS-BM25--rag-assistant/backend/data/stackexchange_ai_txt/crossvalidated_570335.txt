[site]: crossvalidated
[post_id]: 570335
[parent_id]: 
[tags]: 
How to get around the weaknesses of stationarity tests like ADF test?

I have a large search space of ~600 time series, where I am constantly scanning for stationarity (I have a "rolling window" for all the time series where I run a stationarity test at every time point to see if the series has reached stationarity or not). This means I'm running the ADF test probably thousands of times. Note: My threshold for stationarity is pretty loose in my context/problem. I don't need it to be perfect, just "pretty close". I am aware of the broad issue with this (repeatedly running hypothesis tests), but let's ignore that aspect for the moment unless it becomes relevant later. The central issues: The ADF test is relatively slow to run (so my code takes a LONG time to complete) I have read that the ADF test (along with other similar tests) has all kinds of problems in the form of low power and false positives . So it seems like I'm spending a lot of computational effort on a test that might not even be that good. I've tried to come up with heuristics to determine the stationarity - things like splitting the time series in half, taking the medians of the left and right side, and if the medians are pretty close to the mean of the whole series, I say "it's pretty stationary". This is obviously pretty crude. Are there any better statistical tests, or simple heuristics that you know of, to overcome the issues of the ADF test?
