[site]: stackoverflow
[post_id]: 3839477
[parent_id]: 3838285
[tags]: 
So to be clear, le't make sure I understand your scenario: What you have is some form of serialized array (you've not stated the format as XML, binary or other) as your data store? And if one property changes, you rewrite the entire array, even if there are 1000 objects with sub-objects? And you're writing to Flash, not just RAM? And for a full "save" you're doign the write operation a few times? And for some reason, you're finding that this is slow and it gets slower the larger the data set gets? The answer is actually fairly simple. This is completely expected behavior based on how you're doing this. Why would you use this mechanism for a data store, especially for large, frequently changing items? This is a classic example of a poor design decision. When a property changes, you should be changing just that property in the store and serialized arrays simply are not well suited to this. You should be using an actual database engine, whether it's an RDBMS or an object database, but something that's doing way, way less writing to the storage medium. If you need the data as an array for transfer to the PC/Server, that's fine - create a mechanism to extract from the store and put it into an array for that purpose.
