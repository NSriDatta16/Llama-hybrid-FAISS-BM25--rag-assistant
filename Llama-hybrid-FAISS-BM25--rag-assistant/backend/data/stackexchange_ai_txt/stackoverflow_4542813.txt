[site]: stackoverflow
[post_id]: 4542813
[parent_id]: 4542789
[tags]: 
If you are going to store a reference and need to use it after the constructor has completed, it's probably best for the constructor to take a pointer: struct C { C(const X* p) : p_(p) { } const X* p_; }; This way, it's pretty much guaranteed that you won't have a pointer to a temporary (unless X does something really dumb, like overloading the unary & to return this ). If the constructor takes a pointer, it's also clearer to users of the class that they need to pay attention to the lifetime of the X object they pass to the constructor.
