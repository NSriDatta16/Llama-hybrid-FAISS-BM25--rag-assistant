[site]: stackoverflow
[post_id]: 406004
[parent_id]: 
[tags]: 
Call cmake from make to create Makefiles?

I am using cmake to build my project. For UNIX, I would like to type make from my project's root directory, and have cmake invoked to create the proper Makefiles (if they don't exist yet) and then build my project. I would like the cmake "internal" files (object files, cmake internal Makefiles, etc.) to be hidden (e.g. put in a .build directory) so it doesn't clutter my project directory. My project has several sub-projects (in particular, a library, a user executable, and a unit test executable). I would like Makefiles (i.e. I type make and this happens) for each sub-project to execute cmake (as above) and build only that sub-project (with dependencies, so the library would be built from the executables' Makefiles, if needed). The resulting binary (.so library or executable) should be in the sub-project's directory. I made a Makefile which does the main project bit somewhat well, though it feels somewhat hackish. I can't build specific targets using it, because my Makefile simply calls make in cmake 's build directory. Note that because the library is a sole dependency (and probably doesn't need to be build manually, and because I'm lazy) I omitted it in my Makefile. BUILD_DIR := .build .PHONY: all clean project-gui ${BUILD_DIR}/Makefile all: project-gui project-test clean: @([ -d ${BUILD_DIR} ] && make -C ${BUILD_DIR} clean && rm -r ${BUILD_DIR}) || echo Nothing to clean project-gui: ${BUILD_DIR}/Makefile @make -C ${BUILD_DIR} project-gui @cp ${BUILD_DIR}/project-gui/project-gui $@ project-test: ${BUILD_DIR}/Makefile @make -C ${BUILD_DIR} project-test @cp ${BUILD_DIR}/project-test/project-test $@ ${BUILD_DIR}/Makefile: @[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR} @[ -f ${BUILD_DIR}/Makefile ] || (cd ${BUILD_DIR} && cmake ${CMAKE_OPTS} ..) If it helps, here's my project structure (if this is "wrong" please tell me -- I'm still learning cmake ): project/ project/CMakeLists.txt project/common.cmake project/Makefile -- see Makefile above for this; should be replaced with something better, building libproject, project-gui, and project-test project/libproject/ project/libproject/CMakeLists.txt project/libproject/libproject.so -- after build project/libproject/Makefile -- doesn't exist yet; should build libproject only project/libproject/source/ project/libproject/include/ project/project-gui/ project/project-gui/CMakeLists.txt project/project-gui/Makefile -- doesn't exist yet; should build libproject then project-gui project/project-gui/source/ project/project-gui/include/ project/project-test/ project/project-test/CMakeLists.txt project/project-test/Makefile -- doesn't exist yet; should build libproject then project-test project/project-test/source/ project/project-test/include/ If you haven't caught on yet, I'm basically looking for a way to build the project and sub-projects as if cmake wasn't there: as if my project consisted of only Makefiles. Can this be done? Is the solution elegant, or messy? Should I be trying to do something else instead? Thanks!
