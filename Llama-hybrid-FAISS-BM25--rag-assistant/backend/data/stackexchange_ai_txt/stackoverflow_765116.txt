[site]: stackoverflow
[post_id]: 765116
[parent_id]: 765090
[tags]: 
It depends on what you want to serialize of course. In some cases serialization is ridicilously easy. (I once wrote kind of a timeline program in Java, where you could draw en drag around and resize objects. If you were ready you could save it in file (like myTimeline.til). On that momenet hundreds of objects where saved, their position on the canvas, their size, their colors, their innertexts, their special effects,... You could than ofcourse open myTimeLine.til and work further. All this only asked a few lines of code . (just made all classes and their dependencies serializable) and my coding time took less than 5 minutes, I was astonished myself! (it was the first time I used serialization ever) Working on a timeline you could also 'saveAs' for different versions and the 'til' files where very easy to backup and mail. I think in my particular case it would be a bit idiot to use databases. But that's of course for document-like structures only, like Word to name one.) My point thus first : there are certainly several scenarios in which databases wouldn't be the best solution. Serialization was not invented by developers just because they were bored. Not true if you use XMLserialization or SOAP Not quite relevant anymore Only if you are not carefull, plenty of 'best practices' for that. Only if you want it to be problematic, see 1 Of course serialization has besides the speed of implementation other important advantages like not needing a database at all in some cases!
