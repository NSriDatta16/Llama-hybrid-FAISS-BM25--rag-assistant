[site]: stackoverflow
[post_id]: 4259166
[parent_id]: 4259009
[tags]: 
I would suggest avoiding moving the JSplitPane around while the user may want to interact with it. I can imagine it would be rather annoying to see the pane jump a few pixels before/after dragging it. Nevertheless, you might want to take a look at obtaining the dimensions of the scrollbar, and offsetting the divider location by that amount. For instance, say you have constructed the JTable as follows: JTable table = new JTable(myTableModel); final JScrollPane scrollPane = new JScrollPane(table); scrollPane .setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS); scrollPane .setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED); You could then add a listener to the table to determine when the horizontal scroll bar is displayed, and add some offset to the JSplitPane as needed: table.addComponentListener(new ComponentListener() { @Override public void componentShown(ComponentEvent e) {} @Override public void componentResized(ComponentEvent e) { System.out .println(scrollPane.getHorizontalScrollBar().getHeight()); } @Override public void componentMoved(ComponentEvent e) {} @Override public void componentHidden(ComponentEvent e) {} }); Bear in mind that by changing the divider location, table will resize, causing a loop, so this construction is not ideal.
