[site]: stackoverflow
[post_id]: 3110863
[parent_id]: 3110041
[tags]: 
Maybe I'm being a bit too simplistic, but if you are willing to change the data type of the identifier being passed around, hows about creating a computed column, type varchar ( ? ) that holds ServerName/Instance.db_name.schema_name.table_name.id. Uniqueness is guaranteed given servername/Instance is unique to your environment, db to your instance, schema to your db, tble to your schema and id to your table - which they all should be. I don't have ANY problem with de-normalizing data for this sort of use. What I have a huge problem with is anyone using a field such as this to ask questions - in code - such as, give me all of the records that came from Server02. This would be a string field and won't be so searchable, much like a GUID, but, depending on where / how they are being stored, outside of their originating table, would, I suspect be less of a cause of defragmentation in indexes to which they belong. for the 'ordered' guids in sql server see Creating and Modifying Identifier Columns CREATE TABLE dbo.Globally_Unique_Data (guid uniqueidentifier CONSTRAINT Guid_Default DEFAULT NEWSEQUENTIALID() ROWGUIDCOL, Employee_Name varchar(60) CONSTRAINT Guid_PK PRIMARY KEY (guid) );
