[site]: stackoverflow
[post_id]: 628915
[parent_id]: 628840
[tags]: 
You're absolutely right - it's not up to the user to use bugzilla. that's for devs. Error reporting from the user side needs to be really simple if you expect users to use it. (ie. When I see the "report this bug to MS" i usually hit cancel even though it's a one-click mechanism.) It's also not just about you getting the info you need to track the bug, it's also about making the user feel like something's being done, like they're being taken care of, so keep that in mind. As a result of all this, I'd go with whatever bug tracking package suited you as a developer and then feed into that from a nice, simple, friendly web-form interface built specifically for your end users. Then when an error occurs, try to only ask the user questions you can't answer programatically. Ideally, your exception handling should already track their current action (saving an invoice), current context (invoice screen), the entity being acted upon(invoice #10013), and all the exception info from the program. If you can't capture this and retrieve it remotely, feed it to your web form (in URL params or whatever) when the user clicks 'report this issue'. Ensure you pay attention to any sensitive data requirements. Then you should only need to ask your users the human questions like - 'How can we best contact you about this issue?' (method / times / etc.), and give them an idea of how long it'll take for them to get a response from a human. I realise this doesn't offer a software recommendation, but hopefully it's still good advice for handling your issue.
