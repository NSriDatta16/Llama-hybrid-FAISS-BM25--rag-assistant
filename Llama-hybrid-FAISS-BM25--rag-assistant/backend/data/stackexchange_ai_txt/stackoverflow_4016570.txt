[site]: stackoverflow
[post_id]: 4016570
[parent_id]: 4015844
[tags]: 
All the answers are general patterns I think none of them is really helpful. Just because you put your 3 huge function into an object doesn't make your code modular, reusable, maintainable. So my first suggestion is to utilize function decomposition . You've mentioned inheritance. Now if your code is basically made of this 3 giant functions nothing can be inherited or shared. You should separate function logic by purpose into smaller, more straighforward ones. A good example is that you've mentioned the word replacing is relevant in all your cases. Maybe you can set up a function that is responsible for DOM replacement independently of the element's type. Such function can be shared between your modules making your code more robust and allowing you to DRY . The best way to organize this process is called wishful thinking , when you solve your problem with functions which are intuitive and helpful even though they may not even exist. This is related to how you can design effective interaces.
