[site]: stackoverflow
[post_id]: 3759859
[parent_id]: 3759787
[tags]: 
There's multiple ways of doing this. You can shuffle the entire collection, and just grab items from one end. This will ensure you won't encounter any one item more than once (or rather, more than the number of times it occured in the original input array) during one whole iteration. This, however, requires you to either modify in-place the original collection, or to create a copy of it. If you only intend to grab a few items, there might be a different way. You can use a hash table or other type of dictionary, and just do a check if the item you picked at random in the original collection already exists in the dictionary. If it doesn't, add it to the dictionary and use it. If it already exists in the dictionary, pick again. This approach uses storage proportional to the number of items you need to pick. Also note that this second approach is a bit bad performance-wise when you get to the few last items in the list, as you can risk hunting for the items you still haven't picked for quite a number of iterations, so this is only a viable solution if the items you need to randomly pick are far fewer than the number of items in the collection.
