[site]: stackoverflow
[post_id]: 1964751
[parent_id]: 
[tags]: 
rate my (C++) code: a recursive strstr sans any standard library string functions :)

So, the idea was a write a recursive function that compares two strings to see if string 'prefix' is contained in string 'other', without using any standard string functions, and using pointer arithmetic. below is what i came up with. i think it works, but was curious - how elegant is this, scale 1-10, any obvious funky moves you would have done instead? thanks. bool is_prefixR(char* prefix, char* other) { static int prePos = 0,othPos = 0; // static int othPos = 0; bool test; test = ( *(prefix+prePos) == *(other+othPos)); //checks to see if same if (!*(prefix+prePos)) { return 1; } //end of recursion if (!*(other+othPos)) { return 0; } if (!test) { othPos++; //move othPos pointer by 1 prePos = 0; //reset the prefix position return(is_prefixR(prefix, other)); //lets try again } else { //chars are the same othPos++; //move othPos pointer by 1 prePos++; return(is_prefixR(prefix, other)); //lets try again } return 0; }
