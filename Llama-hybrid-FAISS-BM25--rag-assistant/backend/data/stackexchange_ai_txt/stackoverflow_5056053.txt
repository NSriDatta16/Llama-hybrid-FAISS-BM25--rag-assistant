[site]: stackoverflow
[post_id]: 5056053
[parent_id]: 5055159
[tags]: 
I agree with the previous comment made by "mu is too short". One algorithm that solves your problem could partition all existing "black" rectangles into one to three geometrical clusters based on the multiplication of horizontal and vertical components of the distance between each pair of "black" rectangles (this will give you the area of a hypothetical "red" rectangle formed between each pair), and then bind each resulting cluster with a "red" rectangle. Regardless of which geometric clustering algorithm you choose to solve that component of the problem (more on this below), it is important that you do not partition the "black" rectangles into clusters using the "straight", or euclidean distance between each pair as a parameter, as your problem involves reducing the area of bounding ("red") rectangles. As I mention in the preceding paragraph you would need to multiply the horizontal and vertical components of the distance between each pair of "black" rectangles in order to take account for the area a possible bounding "red" rectangle would cover. There are many geometric clustering algorithms in the literature with differing time-space complexity trade-offs, I would suggest you start with this Google search and get acquainted with those. Alternatively, this problem can be solved without the use of a clustering algorithm by using a genetic , or simulated annealing algorithm, in which case, the total area of various combinations and number of possible bounding "red" rectangles would be attempted and measured in order to produce an optimal solution. Feel free to ask for any needed clarification, and good luck with your project!
