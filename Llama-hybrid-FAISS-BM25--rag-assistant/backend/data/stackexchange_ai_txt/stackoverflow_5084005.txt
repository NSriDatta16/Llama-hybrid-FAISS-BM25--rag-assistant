[site]: stackoverflow
[post_id]: 5084005
[parent_id]: 5083655
[tags]: 
First you need to get the file into a data structure. Something like this should work if the formatting you have is always fairly the same. #!/usr/bin/env perl use strict; use warnings; use Data::Dumper; # for printing the hash of results at the end my $file = $ARGV[0]; # Specify the file as first command line argument open my $fh, ' ) { chomp $line; if ($line =~ /(DATA_SET\d+)/) { $current_set = $1; } elsif ($line =~ /=/) { my ($vars, $vals) = split(/\s*=\s*/, $line); my @vars = split(/\s/,$vars); my @vals = split(/\s/,$vals); die "length of variable declarations is not equal to length value declarations" unless (@vars == @vals); while (@vars) { my $var = shift @vars; my $val = shift @vals; $data{$current_set}{$var} = $val; } } } print Dumper \%data; #This assumes that each DATA_SET has an INFO4 term. # N.B. It will assume a zero if not defined! my @INFO4 = map { $data{$_}{'INFO4'} } keys %data; die "Nothing to average" unless @INFO4; my $sum; foreach (@INFO4) { $sum += $_; } my $av = $sum / scalar @INFO4; print "$av\n"; At the end I just print the created data structure, you will need to do your homework here to use this data structure (EDIT: Added averaging over INFO4 terms). perldoc is a good place to start. Also if you need some high powered math, I would look at the Perl Data Language (PDL) which implements a fast array math (Matlab like) numerical language in Perl. Good luck.
