[site]: stackoverflow
[post_id]: 4575265
[parent_id]: 4575192
[tags]: 
Most operating systems expose a C API, so if you want to use C++ for systems programming, you need some level of C interoperability. That the C standard library was incorporated into the C++ standard library has historical and practical reasons: C++ began its life as an extension of C, and the C standard library was ready to use. It would be silly to exclude part of the library (like malloc and free ) just because there are more idiomatic C++ alternatives: if you want to do stupid things, C++ gives you the power to do so. For actual language semantics, the same applies - but to a lesser degree - and because of backwards-compatibility, C++ can never be entirely free of its C heritage.
