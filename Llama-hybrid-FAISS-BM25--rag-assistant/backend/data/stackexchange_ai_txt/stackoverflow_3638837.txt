[site]: stackoverflow
[post_id]: 3638837
[parent_id]: 3632767
[tags]: 
I think I found the answer in this MSKB article oddly enough titled HOW TO: Validate XML Fragments Against an XML Schema in Visual C#.NET The bottom of the article states: NOTE: Only the type declarations and the top-level elements in the XML schema are validated against an XML schema. Subelements are considered as local and therefore cannot be validated. In order to validate a subelement, declare a top-level element and refer to that. I believe there is a mistake in that paragraph and the intention is to state top-level elements in the XML schema document/fragment are validated against an XML Schema Because the Microsoft code sample starts its fragment at the top level (instead of arbitrarily inside a document) it works with validation. However in my case I'm taking a mid-document construct. Correct me if my interpretation is wrong. Workaround/solution A workaround is for me to stuff my fragments inside a top level element for the purpose of validation. In other words if I'm dealing with the XHTML fragment: MY FRAGMENT I can wrap it for validation to conform to the XHTML Strict Schema as: HTML fragment enclosed, conforming to XHTML 1.0 Strict Template. MY FRAGMENT This solution works for me so I'll use it in the interim; whether or not a better solution exists I'm unsure yet.
