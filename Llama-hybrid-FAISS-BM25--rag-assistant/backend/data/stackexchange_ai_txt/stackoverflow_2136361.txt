[site]: stackoverflow
[post_id]: 2136361
[parent_id]: 2133252
[tags]: 
You could use array.sortOn() and then iterate once over the sorted array (starting from 0): when you reach the first match, start returning elements as you iterate forwards, until you stop matching. This returns the entire subset of matching elements, and on average you will be visiting only half the original array (after sorting). (If this is too slow, it might be quicker,depending on your data, to use a binary search to get a match, then iterate down until you stop matching ie find the first match in the ordered set, then start returning elements as you iterate upwards until you run out of matches... BUT the time saving might be marginal compared to the time needed to do the original sortOn())
