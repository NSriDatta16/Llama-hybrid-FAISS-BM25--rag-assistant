[site]: stackoverflow
[post_id]: 4843714
[parent_id]: 4817503
[tags]: 
Normally before I decide where to do the caching I ask myself a few questions. How often does this data change Do I use this data in more then one place How much data is it going to be Since I don't know all of the details for your application, I'm going to make some assumptions. you have a view that either takes in a date or uses the current date to query the database to pull out all of the calender events for that date. you only display this information on one template, The amount of data isn't too large (less then 100 entries). With these assumptions you have 3 options. 1. cache the templates 2. cache the view 3. cache the queryset Normally when I do my caching I cache the queryset, this allows me greater control of how I want to cache the data and I can reuse the same cached data in more then one place. The easiest way that I have found to cache the queryset is to do this in the ModelManger for the model in question. I would create a method like get_calender_by_date(date) that will handle the query and caching for me. Here is a rough mockup CACHE_TIMEOUT_SECONDS = 60 * 60 * 24 # this is 24 hours class CalendarManager(models.Manager): def get_calendar_by_date(self, by_date): """ assuming date is a datetime object """ date_key = by_date.strftime("%m_%d_%Y") cache_key = 'CAL_DATE_%s' % (date_key) cal_date = cache.get(cache_key) if cal_date is not None: return cal_date # not in cache get from database cal_date = self.filter(event_date=by_date) # set cal_date in cache for later use cache.set(cache_key, cal_date, CACHE_TIMEOUT_SECONDS) return cal_date Some things to look out for when caching Make sure the objects that you are storing in the cache can be pickled Since memcache doesn't know what day it is you need to make sure you don't over cache. For example if it was Noon on Jan 21st and you cache for 24 hours, that calendar information will show up until Noon on Jan 22nd and that might not be what you are looking for, so make sure when you set the time of the query you either set it to a small value so it expires quicker or you calculate how long to cache so that it expires when you want it to expire. Make sure you know the size of the objects you want to cache. If your memcache instance only have 16MB of storage but you want to store 32MB of data, the cache isn't going to do you much good. When caching the template or view you need to watch out for the following set your cache timeout so that it isn't too large, I don't think you can programtically change the template cache timeout, and it is hard coded, so if you set it too high you will end up having a page that is out of date. You should be able to programaticly change the cache time, so it is a little safer. If you are caching the template and there is other information on the template that is dynamic and changes all of the time, make sure that you only put the cache tags around the section of the page you want cached for a while. If you put it in the wrong place you might end up the wrong result. Hopefully that gives you enough information to get started. Good Luck.
