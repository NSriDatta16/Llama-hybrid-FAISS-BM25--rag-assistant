[site]: stackoverflow
[post_id]: 3921711
[parent_id]: 3913368
[tags]: 
I agree with Gabe that true Azure support from a CMS means leveraging the cloud's native queue, table and blob storage. I'll also add that a good Azure CMS should work out of the box when deployed on numerous machines sitting behind a load balancer (basically a must if you care about Azure's SLA). I myself did a research similar to yours a couple of months ago and ended up using N2CMS in an ASP.NET MVC application. AFAIK, there is still no CMS to comply with the above definition of good Azure support, so I would recommend going with N2 if you use ASP.NET MVC. The learning curve is a bit steep, but you mentioned you've used it before so this shouldn't be an issue. However, the great architectural flexibility N2 allows and the fact it's open source were the decisive points in my case. Regarding Wordpress, there's no arguing about the qualities of this CMS. Anyone who's used it (including myself) should be able to confirm that. However, deploying Wordpress on Azure still feels somewhat "hacky" to me. It will no doubt work, but I personally try to use native solutions and that's the reason I went with a .NET CMS on Azure and I always use Wordpress on Linux servers. I believe that's the right approach if you plan to maintain your application in the long run. In the end, the choice you have to make is a trade-off between many factors like your in-house know-how, your preferred technologies, etc. If you need rather quick results and have Wordpress guys at the moment - go for Wordpress. If not - I recommend ASP.NET MVC with N2. Well, at least that's my 2 cents :) Hope this helps.
