[site]: stackoverflow
[post_id]: 5399091
[parent_id]: 
[tags]: 
Returning the first method that works, more elegant way?

Recently I've found myself writing methods which call other methods in succession and setting some value based on whichever method returns an appropriate value first. What I've been doing is setting the value with one method, then checking the value and if it's not good then I check the next one. Here's a recent example: private void InitContent() { if (!String.IsNullOrEmpty(Request.QueryString["id"])) { Content = GetContent(Convert.ToInt64(Request.QueryString["id"])); ContentMode = ContentFrom.Query; } if (Content == null && DefaultId != null) { Content = GetContent(DefaultId); ContentMode = ContentFrom.Default; } if (Content == null) ContentMode = ContentFrom.None; } Here the GetContent method should be returning null if the id isn't in the database. This is a short example, but you can imagine how this might get clunky if there were more options. Is there a better way to do this?
