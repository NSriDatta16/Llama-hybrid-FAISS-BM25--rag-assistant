[site]: stackoverflow
[post_id]: 1342487
[parent_id]: 1341341
[tags]: 
It really depends on what you're trying to achieve. Avoiding dependency for the sake of avoiding dependency doesn't make much sense. In this case, aren't you still going to persist your entities? So dependency is still going to be there. Now, if we are talking about API being deployed separately (and actual persistence happening in some other layer deployed separately), you do have some options: You can define your API via interfaces (which is not a bad thing to begin with, annotations or not - makes for easy layer separation / testing / what have you) and only annotate the actual implementations. Deploy your API as a separate jar and you have no dependencies. If you define your API as concrete entities, your best option to eliminate dependencies is to use XML mappings instead of annotations. Take a look at this question for details. I would NOT do this, to be honest. JPA is part of JavaEE; it's not really a dependency to be concerned about.
