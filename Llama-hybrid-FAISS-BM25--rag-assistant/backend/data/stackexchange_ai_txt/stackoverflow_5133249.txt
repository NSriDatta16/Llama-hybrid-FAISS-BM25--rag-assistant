[site]: stackoverflow
[post_id]: 5133249
[parent_id]: 5133018
[tags]: 
you could use a Regex to find the stuff you are looking for.. start by loading the entire file into a stream. then use a regex like this: @"Operator ID = (.+?) Name = (.+?) Active profile = (.+?) Enable status " will find all posts, then you ofc need to do another regex check on array to extract the activeProfiles (and to see if there is more than 1) something like this: @"Active profile = (.+?) " disclamer.. you might need to modify the regex to fit what the streamreader actually puts into the stream. Here is an nice tool to check your reqex's EDIT: here is a sample of how the program could look like: static void Main(string[] args) { string path = @"c:\test.txt"; string t = File.ReadAllText(path); string pattern1 = @"OperatorID=(.+?),,Name=(.+?),(.+?),Enablestatus"; Regex rgx = new Regex(pattern1); //Removes all tabbed spaces. t = t.Replace("\t", ""); //Removes any new lines. t = t.Replace("\n", ","); //Removes blank spaces. t = t.Replace(" ", ""); //Removes the Underscore. t = t.Replace("_", ""); t = t.Replace("\r", ""); MatchCollection matches = rgx.Matches(t); List test = new List (); foreach (var match in matches) { string[] newString = match.ToString().Split(new string[] { @"OperatorID=", @",,Name=", @",Activeprofile=", @",Enablestatus", }, StringSplitOptions.RemoveEmptyEntries); for (int i = 3 ; i Didn't pay alot of attention to details in this tho :) EDIT: To add the results to a file: using (StreamWriter myWriter = new StreamWriter(@"c:\testOutput.txt")) { foreach (var line in test) { myWriter.WriteLine("ID: {0}", line[0]); myWriter.WriteLine("Name: {0}", line[1]); myWriter.WriteLine("Active Profile: {0}", line[2]); myWriter.WriteLine(); } }
