[site]: stackoverflow
[post_id]: 1240632
[parent_id]: 1239855
[tags]: 
You can macroize this as follows (for 32-bit architecture): #define align_step(N, shift) ((N) | ((N) >> shift)) #define align_up(N) (align_step(align_step(align_step(align_step(align_step((N)-1, 1), 2), 4), 8), 16) + 1) #define alignment_padding(N) (align_up((N)) - (N)) Then you can apply that using the union trick or some other means. In your example: #pragma pack(1) struct Message { struct internal_ { unsigned long member1; unsigned long member2; unsigned long member3; /* more members */ } internal; char pad[alignment_padding(sizeof(internal_))]; }; #pragma pack()
