[site]: stackoverflow
[post_id]: 4902468
[parent_id]: 2810141
[tags]: 
First of all, what do you mean by unit test and generate unit tests? Do you mean generate a framework, a test harness or do you mean generate a test with data and data checks or assertions that actually calls your code. And, in the latter case, how is that test generated? More fundamentally, why are you testing? Are you following a standard that requires a certain level of testing, or are you 'just' trying to reduce risk and cost in later stages of development? Or maybe you are building on an existing system and just want to make sure you do not break any existing functionality. A previous answer mentioned Cantata, we have recently released a new version with a component called 'baseline testing'. This may be just what you are looking for. It will create, for C code, a set of unit tests, containing test cases that stand a good chance of fully exercising each of your source files. The tool achieves this by reading your source and producing a set of test that drive the execution down each path aiming to achieve your desired coverage target â€“ 100% statement, decision or even MC/DC coverage. The intent is to 'baseline' your source code as part of the ongoing development of a legacy system, or to fill in coverage gaps after functional or maybe system testing. See the Cantata++ webpage for more information (and free evaluations)
