[site]: stackoverflow
[post_id]: 4969191
[parent_id]: 4969171
[tags]: 
Since getText() is non-static you cannot call it from a static method. To understand why, you have to understand the difference between the two. Instance (non-static) methods work on objects that are of a particular type (the class). These are created with the new like this: SomeClass myObject = new SomeClass(); To call an instance method, you call it on the instance ( myObject ): myObject.getText(...) However a static method/field can be called only on the type directly, say like this: The previous statement is not correct. One can also refer to static fields with an object reference like myObject.staticMethod() but this is discouraged because it does not make it clear that they are class variables. ... = SomeClass.final And the two cannot work together as they operate on different data spaces (instance data and class data) Let me try and explain. Consider this class (psuedocode): class Test { string somedata = "99"; string getText() { return somedata; } static string TTT = "0"; } Now I have the following use case: Test item1 = new Test(); item1.somedata = "200"; Test item2 = new Test(); Test.TTT = "1"; What are the values? Well in item1 TTT = 1 and somedata = 200 in item2 TTT = 1 and somedata = 99 In other words, TTT is a datum that is shared by all the instances of the type. So it make no sense to say class Test { string somedata = "99"; string getText() { return somedata; } static string TTT = getText(); // error there is is no somedata at this point } So the question is why is TTT static or why is getText() not static? Remove the static and it should get past this error - but without understanding what your type does it's only a sticking plaster till the next error. What are the requirements of getText() that require it to be non-static?
