[site]: stackoverflow
[post_id]: 4379600
[parent_id]: 4379394
[tags]: 
On systems with overcommit (e.g. Linux in the default configuration), it's even possible for objects of static storage duration to result in failure at runtime. At program startup, these objects will exist in either copy-on-write zero-pages (if they were uninitialized) or copy-on-write mappings of the on-disk executable file. Upon the first attempt to write to them, a page fault will happen and the kernel will make a local modifiable copy for your process. If the kernel was careless and did not reserve as much memory as it committed to the process, this could fail, and the result will be the dreaded OOM-killer. No robust system has this problem, and the Linux behavior can be fixed by: echo "2" > /proc/sys/vm/overcommit_memory
