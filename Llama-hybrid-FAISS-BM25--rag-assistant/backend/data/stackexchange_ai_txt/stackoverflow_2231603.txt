[site]: stackoverflow
[post_id]: 2231603
[parent_id]: 2231414
[tags]: 
Warning: slightly off-topic . If you have a class without default constructor, you absolutely need to have an array, and you don't want to incur into the overhead of dynamic memory allocation, you can use an array of boost::optionals : boost::optional foos[4]; // Stack storage allocated but no objects // constructed (roughly equivalent to what // you get with vector ::reserve) if(foos[2]) // Check if the third element has been constructed { foos[2]->bar(); // Access members of Foo with arrow } foos[1] = Foo(1, "a"); // Constructs the second element foos[1].reset(); // Destroy second element (storage remains there though) Unfortunately, you won't be able to pass this to a function expecting a true Foo[] .
