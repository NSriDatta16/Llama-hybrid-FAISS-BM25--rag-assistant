[site]: datascience
[post_id]: 75230
[parent_id]: 75229
[tags]: 
As far as I know GNU Octave is an open-source alternative for Matlab. Although you can use Octave for machine learning ( nnet package ), I doubt you could use it for " faster coding " of neural networks. Here are my thoughts on why that is the case: When you say " fast " there are two interpretations, writing code fast and writing fast code . Writing code fast : Beating any of the python libraries seems to be a difficult task, especially keras. I have to admit, I never used Octave (but I have experience with Matlab), but I doubt you can write a simple network model + training / evaluation loop faster than with keras or pytorch. Writing fast code : Most libraries fall back to fast C++ routines (BLAS / LAPACK) when it comes to heavy numerical computations or implement functionality in C++ straight away. I assume Octave does the same. You may know that GPUs are the way to go today for large problems since they are much faster than CPUs for deep learning and I'm not sure if you can use a GPU together with Octave. If not, this would be for sure a huge disadvantage. In the end you have to decide what fast means for you and what do you like to achieve. Here is a quick overview of current deep learning libraries. Here is a recent paper which benchmarks TensorFlow, Caffe, Torch and Theano in terms of speed for CPU as well as GPU. Unfortunately I did not found any comparison bewteen python (TF,Torch, ...) and Octave (nnet) / Matlab (Deep Learning Toolbox).
