[site]: stackoverflow
[post_id]: 5127159
[parent_id]: 5126884
[tags]: 
You need to introduce one more layer called Model. This layer will define a Student class as a data object only. ( No Save or Get methods in this layer). The Model layer can be in its own project ( and so its own dll ). Now reference the dll across all layers ( Presentation , Business and DA ).Use the Student type to hold the data elements only. In the Business layer , reference DA layer and have a class Student that has the SaveStudent method. In the DA layer , reference only the Model layer and implement the save student method. ( Note this only shows the layer and the classes these layers should have , ideally the classes should implement interfaces designed towards this purpose, but this itself is not a part of your question ) namespace Model{ class Student { public string Name { get; set; } public String Address { get; set; } // more student properties here .. // No methods like SaveStudent in this class , thats up into the business layer public bool IsValid(){ // validate the student here } } } namespace Business{ class Student { // call this method from your Presentation layer public void SaveStudent(Model.Student student) { if (student.IsValid()) { DataAccess.StudentDAO student = new DataAccess.StudentDAO(); student.SaveStudent(student); } else { throw new ApplicationException("Invalid student"); } } } } namespace DataAccess{ class StudentDAO { public void SaveStudent(Model.Student student) { // impl here to save a student informatin to a // persistent storage } } }
