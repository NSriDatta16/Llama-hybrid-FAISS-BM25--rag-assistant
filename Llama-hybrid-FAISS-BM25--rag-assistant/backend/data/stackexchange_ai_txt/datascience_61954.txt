[site]: datascience
[post_id]: 61954
[parent_id]: 
[tags]: 
When do you use FunctionTransformer instead of .apply()?

I'm watching a PyData talk from 2017 in which the speaker provides this example for how to use FunctionTransformer for sklearn.preprocessing from sklearn.preprocessing import FunctionTransformer logger = FunctionTransformer(np.log1p) X_log = logger.transform(X) In other words, she's applying a function over the rows of a column. I assumed this could be done more simply using .apply(). I feel that there must be something more to the reason why a data analyst would import FunctionTransformer. Could someone help me understand what differentiates the .apply() method from FunctionTransformer?
