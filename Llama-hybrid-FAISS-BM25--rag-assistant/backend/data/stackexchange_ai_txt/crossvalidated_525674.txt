[site]: crossvalidated
[post_id]: 525674
[parent_id]: 
[tags]: 
Gibbs Sampler for Normal and Inverse Gamma Distribution in R

I'm trying to implement a Gibbs sampler for the following conditional distributions using R: This is the code I have in R so far: gibbs = function(N, v0, alpha, beta){ # Data X = c(x1,...,xn); # Parameters n = length(X); xbar = mean(X); sigma2 = var(X); # Starting values mu0 = v0[1]; sigma20 = v0[2]; out = NULL; for (i in 1:N){ mu0 = rnorm(1, mean = ((n*xbar/sigma2 + mu0/sigma20) / (n/sigma2) + (1/sigma20)), sd = n/sigma2 + (1/sigma20)^-1); sigma20 = rinvgamma(1, n + alpha, 0.5*(sum(X - mu0))^2 + beta); out = rbind(out, c(mu0, sigma20)) } return(out) } When I run the function using gibbs(1000, v0 = c(1,1), 0.001, 0.01), the code runs for 5 or so iterations before starting to output NaN for everything. I'm new to R, and to MCMC methods, so any help would be greatly appreciated. Thanks!
