[site]: stackoverflow
[post_id]: 398218
[parent_id]: 282926
[tags]: 
Just check out how typical allocators work. A bump-the-pointer allocator works in O(1) , and it's a small ' 1 ' at that. For a segregated-storage allocator, allocation of k bytes means "return the first block from List( n )" where List( n ) is the list of blocks of n bytes where n >= k . It might find that List( n ) is empty, so that a block from the next list (List( 2n )) would have to be split with both resulting blocks of n bytes being put onto List( n ), and this effect might ripple through all availlable sizes, making for a complexity of O(ns) where ns is the number of different sizes availlable, and ns = log (N) where N is the size of the largest block size availlable, so even that would be small. In most cases, especially after a number of blocks have been allocated and deallocated, complexity is O(1) .
