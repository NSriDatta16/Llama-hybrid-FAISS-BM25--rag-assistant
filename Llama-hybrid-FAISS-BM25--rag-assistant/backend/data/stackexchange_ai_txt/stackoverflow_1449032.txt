[site]: stackoverflow
[post_id]: 1449032
[parent_id]: 1309915
[tags]: 
I actually just use the NSUserDefaults plist for snapping the last updated time only (in case I need it). I store everything in a sqlite DB ([self updateDatabase]). To check for file existence: NSString *fullPath = [[[NSBundle mainBundle]bundlePath] stringByAppendingPathComponent:@"filenamehere"]; //--or-- NSString *fullPath = [[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:filenamehere]; if ([[NSFileManager defaultManager] fileExistsAtPath:fullPath]) ... To delete: [fileManager removeItemAtPath:pathtofile error:NULL]; I guess your question is the one I had (somewhat). I was wondering if the singleton class should handle access to persistent data storage when the data is accessed across multiple viewcontrollers in the app. I just stuck with the design, since it works well for my app (although in very large apps I could see memory issues I guess). So I suppose I have answered my own question.
