[site]: stackoverflow
[post_id]: 3927265
[parent_id]: 3925813
[tags]: 
I use the following code to record audio data (successfully) to my Android's SD Card. My application requires the RECORD_AUDIO permission, but nothing else. File file = new File (Environment.getExternalStorageDirectory().getAbsolutePath() + FILE_NAME); if (file.exists()) file.delete(); // Delete any previous recording try { file.createNewFile(); // Create the new file } catch (IOException e) { Log.e (TAG, "Failed to create " + file.toString()); } try { OutputStream os = new FileOutputStream (file); BufferedOutputStream bos = new BufferedOutputStream (os, 8000); DataOutputStream dos = new DataOutputStream (bos); // Create a DataOutputStream to write the audio data to the file // Create an AudioRecord object to record the audio int bufferSize = AudioRecord.getMinBufferSize (frequency, channelConfig, Encoding); AudioRecord audioRecord = new AudioRecord (MediaRecorder.AudioSource.MIC, frequency, channelConfig, Encoding, bufferSize); short[] buffer = new short[bufferSize]; // Using "short", because we're using "ENCODING_PCM_16BIT" audioRecord.startRecording(); while (isRecording) { int bufferReadResult = audioRecord.read (buffer, 0, bufferSize); for (int i = 0; i It would appear to me that you're missing the getAbsolutePath() call appended to your getExternalStorageDirectory() call (which may have the same result as Marc Bernstein's hard coded solution).
