[site]: stackoverflow
[post_id]: 3842970
[parent_id]: 3841701
[tags]: 
T.J. Crowder gave me the answer on this one. Here is some code that implements the thing I was looking for: Step 1: get the stylesheet and the specific rule that I'm interested in: var stylesheets = document.styleSheets; var rule = document.styleSheets[0].cssRules[0]; Step 2: Access that specific rule in various ways rule.style.cssText // return the full text of that CSS rule rule.selectorText // return the selector for that rule e.g. .myclass Loop through the individual styles: var styleObj = rule.style; for (var i = 0; i NOTE that you have to convert the CSS property to CamelCase for those with hyphens. For example 'font-family' must be converted to 'fontFamily' For some reason JavaScript and jQuery do not have functions for doing this (Prototype does) so you should stick these extensions to the String class somewhere in your script String.prototype.toCamel = function(){ return this.replace(/(\-[a-z])/g, function($1){return $1.toUpperCase().replace('-','');}); }; String.prototype.toDash = function(){ return this.replace(/([A-Z])/g, function($1){return "-"+$1.toLowerCase();}); }; I got that from James Roberts' blog
