[site]: datascience
[post_id]: 45821
[parent_id]: 
[tags]: 
MAE,MSE and MAPE aren't comparable?

I'm a newbie in data science. I'm working on a regression problem. I'm getting 2.5 MAPE. 400 MAE 437000 MSE. As my MAPE is quite low but why I'm getting high MSE and MAE? This is the link to my data from sklearn.metrics import mean_absolute_error from sklearn.metrics import mean_squared_error from sklearn.preprocessing import Normalizer import matplotlib.pyplot as plt def mean_absolute_percentage_error(y_true, y_pred): y_true, y_pred = np.array(y_true), np.array(y_pred) return np.mean(np.abs((y_true - y_pred) / y_true)) * 100 import pandas as pd from sklearn import preprocessing features=pd.read_csv('selectedData.csv') import numpy as np from scipy import stats print(features.shape) features=features[(np.abs(stats.zscore(features)) Selecting the target Variable which want to predict and for which we are finding feature imps import numpy as np print(features.shape) print(features.describe()) from sklearn.model_selection import train_test_split train_input, test_input, train_target, test_target = train_test_split(features, target, test_size = 0.25, random_state = 42) trans=Normalizer().fit(train_input); train_input=Normalizer().fit_transform(train_input); test_input=trans.fit_transform(test_input); n=test_target.values; test_targ=pd.DataFrame(n); from sklearn.svm import SVR svr_rbf = SVR(kernel='poly', C=10, epsilon=10,gamma=10) y_rbf = svr_rbf.fit(train_input, train_target); predicted=y_rbf.predict(test_input); plt.figure plt.xlim(300,500); print('Total Days For training',len(train_input)); print('Total Days For Testing',len(test_input)) plt.ylabel('Load(MW) Prediction 3 '); plt.xlabel('Days'); plt.plot(test_targ,'-b',label='Actual'); plt.plot(predicted,'-r',label='POLY kernel '); plt.gca().legend(('Actual','RBF')) plt.title('SVM') plt.show(); test_target=np.array(test_target) print(test_target) MAPE=mean_absolute_percentage_error(test_target,predicted); print(MAPE); mae=mean_absolute_error(test_target,predicted) mse=mean_squared_error(test_target, predicted) print(mae); print(mse); print(test_target); print(predicted);
