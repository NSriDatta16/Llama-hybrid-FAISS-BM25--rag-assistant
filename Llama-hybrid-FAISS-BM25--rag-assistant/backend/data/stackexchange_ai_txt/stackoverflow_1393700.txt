[site]: stackoverflow
[post_id]: 1393700
[parent_id]: 967436
[tags]: 
I got around solving this some time ago... Since I only need to verify that two images from two detectors are perfectly aligned and since I do not have to try and align them if they are not I solved it like this: 1) Use the Aforge Framework and apply a grayscale filter to both images. This will average the RGB values for each pixel. 2) On one image apply a ChannelFilter to retain only the red channel. 3) On the other image, apply a ChannelFilter to retain only the green channel. 4) Add Both images. Here are the filters I used, I leave it to the reader to apply them if needed (it's trivial and there are examples on the Aforge website). AForge.Imaging.Filters.IFilter filterR = new AForge.Imaging.Filters.ChannelFiltering(new AForge.IntRange( 0, 255 ), new AForge.IntRange( 0, 0 ), new AForge.IntRange( 0, 0 )); AForge.Imaging.Filters.IFilter filterG = new AForge.Imaging.Filters.ChannelFiltering(new AForge.IntRange( 0, 0 ), new AForge.IntRange( 0, 255 ), new AForge.IntRange( 0, 0 )); AForge.Imaging.Filters.GrayscaleRMY FilterGray= new AForge.Imaging.Filters.GrayscaleRMY(); AForge.Imaging.Filters.Add filterADD = new AForge.Imaging.Filters.Add(); When significant features are present in both images I want to check, they will show up in Yellow thus doing exactly what I need. Thanks for all the input!
