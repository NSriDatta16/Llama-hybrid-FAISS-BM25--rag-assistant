[site]: stackoverflow
[post_id]: 3660750
[parent_id]: 3660696
[tags]: 
Is there any reason why I could (or should) not declare dependency properties as non-static? Yes. The Dependency Property mechanism in WPF uses a storage mechanism specified per type, not per instance. The design of DPs relies on them being defined statically, and not per instance. They will not work properly if you define them on an instance. This is partly done to allow inheritance of properties, but also allows you to specify a LOT of properties on an object without using a lot of memory per instance. If you want to make an interface with two-way bindable properties, typically you'd want to use INotifyPropertyChanged for your class, and the dependency properties on the user interface elements to handle the bindings. INotifyPropertyChanged is the proper mechanism for this. If the major complaint is the string identifiers, you can work around them using expression trees .
