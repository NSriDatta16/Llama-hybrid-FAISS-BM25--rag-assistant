[site]: stackoverflow
[post_id]: 3716214
[parent_id]: 
[tags]: 
Display hierarchical data in C#

I am trying to develop a page to display student/class results by subject/teacher. Some classes have groups which contain students and some have only students. A subject is thought by one or more teachers. This may change in the future and I want to keep the design as flexible as possible (i.e. subjects might be broken into modules or into individual test results, classes might be further grouped by year etc) I want to display the end results in a grid that I can expand and roll up to average out the results (class on the Y and subject on the X). My though it to have 3 database tables as follows: **class_structure** id (int) PK description (varchar) parent_id (int) FK to id The highest level would be the class (with no parent id) and the lowest level would be the student. **subject_structure** id (int) PK description (varchar) parent_id (int) FK to id The highest level being the subject, lowest being the teacher **results** id (int) PK class_structure_id (int) FK subject_structure_id (int) FK date (datetime) reult (int) What do you think of the above structure? I believe this gives me flexibility going forward? In my asp.net app then I query the highest class structure level and average out all the results below that (am I better to do this averaging in a sproc in the DB or use say LINQ in the app?) This would give me back a set of results at the highest level. Then I would need to display this is a table (i am thinking of just creating the table html in C#?) against the subject classes (i.e. create all the headers first and then try to place the result in the correct column (i am not sure how to do this though)). Subj 1 Subj 2 Teacher 1 Teacher 2 Teacher 1 Teacher 2 Class 1 Student 1 90 55 75 100 Student 2 40 95 65 39 Then when the user clicked on the first class, this would expand out and show all the groups (if any, students if not) (pass the class_structure_id of the clicked cell to the same method/sproc and get those results) and then redraw the table with an extra column. Is this a good way to go about achieving what I am trying to do?
