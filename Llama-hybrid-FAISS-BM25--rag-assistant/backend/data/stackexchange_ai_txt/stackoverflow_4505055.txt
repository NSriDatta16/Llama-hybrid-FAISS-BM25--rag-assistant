[site]: stackoverflow
[post_id]: 4505055
[parent_id]: 4505025
[tags]: 
In which format do you have your bytes? As concatenated chars? Or are the bytes a subpart of e.g. a uint32? In general, a loop is the best way for doing this - even if you would be able to apply a pattern-like mask with memset, you would still need to create it and that would take the same amount of CPU cycles. If you would have 4 bytes per element (e.g. uint32), you could cut the cpu cycles in half by creating a pre-defined mask for adding. But attention: such a solution would not check for overflows (pseudocode): uint32* ptr = new uint32[16]; // creates 64 bytes of data (...) fill data for (int k=0; k Edit: Please note that this assumes a little endian system and is C++ Pseudocode.
