[site]: stackoverflow
[post_id]: 4003190
[parent_id]: 4002945
[tags]: 
I do not think that you are on a right way. First you cannot store "honda" or "toyota" in int array. So you need String array. The first column looks like index, so you do not have to store it in your array at all. Second, the example is not OO enough. I'd suggest you the following. Create class Vehicle: public abstract class Vehicle { private String name; // getters, setters, constructor... } Then create classes Car and Bicycle that extend Vehicle. These classes can contain other data: public class Car extends Vehicle { public static enum Type {PICKUP, }; // add here other types private String model; private int doorsCount; private Type type; } Now create class Garage: public class Garage { private List vehicles; // other fields and methods relevant for garage. } This is the time to create static array of garages: private static Garage[] garages = new Garage[100]; You can populate it using static initializer (I assume here existence of convenient constructors I did not mention in my explanation): static { Vehicle honda = new Car("honda", 4); Vehicle toyota = new Car("toyota", 2); Vehicle bicycle = new Bicycle("bicycle"); garaghes[0] = new Garage("First", new Vehicle[] {honda, toyota, bicycle}); Vehicle fiesta = new Car("ford", "fiesta"); Vehicle pickup = new Car("ford", Car.Type.PICKUP); garaghes[1] = new Garage("Second", new Vehicle[] {fiesta, pickup}); } I believe your Prof will be satisfied. Good luck!
