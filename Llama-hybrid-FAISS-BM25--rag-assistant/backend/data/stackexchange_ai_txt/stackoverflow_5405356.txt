[site]: stackoverflow
[post_id]: 5405356
[parent_id]: 5403845
[tags]: 
Consider rewriting find_all_avgs/3 as a typical recursive predicate (Base case + recursive step) The base case would be when the first parameter (the list of students) is an empty list. In this case the result would be also an empty list. The recursive step clasuse would be one that takes the head of the input list, computes the student average for that student and then computes the rest of the averages (recursion). Note that the computed average can be put as the head of the output list instead of using append/3. So, the resulting predicate would be something like: find_all_avgs([],_,[]). % Base case find_all_avgs([Head|Tail],Year,[[Head,Avg]|L]):- find_student_avg(Head,Year,Avg), find_all_avgs(Tail,Year,L). % Recursion step This predicate yields results of the form L= [[Student1,Average1], ...., [StudentN,AverageN]] which is not what you stated. However, I believe that would be the proper output format. If you really need the other output format then the head of the second clause should be find_all_avgs([Head|Tail],Year,[[Head|Avg]|L]):-
