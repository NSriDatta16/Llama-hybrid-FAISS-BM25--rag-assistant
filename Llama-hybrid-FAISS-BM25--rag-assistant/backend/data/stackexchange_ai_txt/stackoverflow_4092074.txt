[site]: stackoverflow
[post_id]: 4092074
[parent_id]: 4092053
[tags]: 
Your main thread is probably exiting before any timers fire. The simplest and crudest way to fix this is to get the main thread to sleep for as long as necessary. A saner option is to signal something like a semaphore at the end of countdown3 and wait on it in the main thread. A more elegant solution, which can be integrated with a broader scheduling and asynchrony framework, is to invert the flow of control using generators: def countdown(): self.pic.set_markup(" 3 "); print 3 yield 1.0 print 'countdown1' self.pic.set_markup(" 2 "); print 2 yield 1.0 self.pic.set_markup(" 1 "); print 1 yield 1.0 takePic() for t in countdown(): time.sleep(t)
