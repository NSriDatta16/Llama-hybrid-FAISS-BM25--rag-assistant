[site]: stackoverflow
[post_id]: 4724432
[parent_id]: 4722812
[tags]: 
For the past 2 years i have been working on a project with a rather large (10000+ lines) javascript codebase, involving, more than 30 active javascript developers. As such you can probably imagine we have had our share of misery trying to keep the code up to shape and it all making sense and easily maintainable (it's a highly agile environment, where specifications change weekly if not more often) Some of the ways we have tried to tackle the structure problems are as follows: namespacing is a must. build your application in layers, for instance we have the following defined layers in our code: transport, data, businesslogic, control & ui build your layers around common reusable selfcontained unittested components/modules, like: state, selection,templates,storage,events,etc use patterns, read up on the various ones, understand when to use them, and start doing it, if you don't :) keep the coding style consistent, don't deviate unless you absolutely have to - code needs to be self explanatory, comments are an evil that should only be necessary in extreme cases try to think in terms like: use before reuse, simplicity and maintainability before elegance - give yourself mantras and stick to them
