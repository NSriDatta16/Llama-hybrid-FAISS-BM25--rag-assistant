[site]: stackoverflow
[post_id]: 2915850
[parent_id]: 2915772
[tags]: 
Compare what gets written into lib/deps/util.d on your working (Solaris) machine with the non-working (redhat), paying particular attention to line 25. That will probably give you a good hint as to what's going wrong. If they're identical, the problem is the one-off make minor version. If thye're different, the problem is probably some difference between the tools being run, or (more likely) different versions of icc installed. edit decoding make rule: $(GEN_DEPS) : @set -e; rm -f $@; \ $(CC) $(CDEP_FLAG) $(CFLAGS) $(INCDIRS) `basename $@ | sed 's/\.d/\.c/' | sed 's,^,$(HOME_SRC)/,'` | sed 's,\(.*\)\.o: ,$(GEN_OBJDIR)/\1.o $@ :,g' > $@.tmp ; \ cat $@.tmp > $@ ; \ cat $@.tmp | cut -d: -f2 | grep '\.h' | sed 's,\.h,.h :,g' >> $@ ; \ rm $@.tmp This rule makes the dependency files in $(GEN_DEPS) , which correspond to all the source files with the .c changed to .d @set -e; rm -f $@; Cause any errors to immediately exit this rule with a failure, rather than continuing, and remove the target we're about to regenerate $(CC) $(CDEP_FLAG) $(CFLAGS) $(INCDIRS) `basename $@ | sed 's/\.d/\.c/' | sed 's,^,$(HOME_SRC)/,'` | sed 's,\(.*\)\.o: ,$(GEN_OBJDIR)/\1.o $@ :,g' > $@.tmp ; Run icc on the .c file corresponding to the .d file we're trying to generate with flags to automatically generate dependencies instead of compiling. The basename $@ | sed 's/\.d/\.c/' | sed 's,^,$(HOME_SRC)/,' clause is translating the .d name back to the .c name. Pipe the output (which is the depdendency rules) to the sed script sed 's,\(.*\)\.o: ,$(GEN_OBJDIR)/\1.o $@ :,g' , which will add the dependency file itself as a something that depends on everything that icc found for the .o (object) file to depend on. Write all of this to a temp file. cat $@.tmp > $@ ; Copy the temp file to the output dependency file. cat $@.tmp | cut -d: -f2 | grep '\.h' | sed 's,\.h,.h :,g' >> $@ ; Append a second copy of the dependencies to the dependency file, modified by a little script which strips off the target and makes the first header into the target. So this is adding an additional set of dependencies for the first header file that appears in the source file. rm $@.tmp Remove the temp file.
