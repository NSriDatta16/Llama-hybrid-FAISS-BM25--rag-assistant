[site]: stackoverflow
[post_id]: 5104462
[parent_id]: 
[tags]: 
Why am i getting this error java.lang.ClassNotFoundException?

Why am i getting this error message? Testcase: createIndexBatch_usingTheTestArchive(src.LireHandlerTest): Caused an ERROR at/lux/imageanalysis/ColorLayoutImpl java.lang.NoClassDefFoundError: at/lux/imageanalysis/ColorLayoutImpl at net.semanticmetadata.lire.impl.SimpleDocumentBuilder.createDocument(Unknown Source) at net.semanticmetadata.lire.AbstractDocumentBuilder.createDocument(Unknown Source) at backend.storage.LireHandler.createIndexBatch(LireHandler.java:49) at backend.storage.LireHandler.createIndexBatch(LireHandler.java:57) at src.LireHandlerTest.createIndexBatch_usingTheTestArchive(LireHandlerTest.java:56) Caused by: java.lang.ClassNotFoundException: at.lux.imageanalysis.ColorLayoutImpl at java.net.URLClassLoader$1.run(URLClassLoader.java:202) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:190) at java.lang.ClassLoader.loadClass(ClassLoader.java:307) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301) at java.lang.ClassLoader.loadClass(ClassLoader.java:248) I am trying to create a Lucene index using documents that are created using Lire. When i am getting to the point where it tries to create a document using the document builder it gives me this error message. input paramaters first run: filepath: "test_archive" (this is a image archive) whereToStoreIndex: "test_index" (Where i am going to store the index) createNewIndex: true Since the method is recursive (see the if statement where it checks if is a directory) it will call itself multiple times but all the recursive calls uses createNewIndex = false. Here is the code: public static boolean createIndexBatch(String filepath, String whereToStoreIndex, boolean createNewIndex){ DocumentBuilder docBldr = DocumentBuilderFactory.getDefaultDocumentBuilder(); try{ IndexWriter indexWriter = new IndexWriter( FSDirectory.open(new File(whereToStoreIndex)), new SimpleAnalyzer(), createNewIndex, IndexWriter.MaxFieldLength.UNLIMITED ); File[] files = FileHandler.getFilesFromDirectory(filepath); for(File f:files){ if(f.isFile()){ //Hopper over Thumbs.db filene... if(!f.getName().equals("Thumbs.db")){ //Creating the document that is going to be stored in the index String name = f.getName(); String path = f.getPath(); FileInputStream stream = new FileInputStream(f); Document doc = docBldr.createDocument(stream, f.getName()); //Add document to the index indexWriter.addDocument(doc); } }else if(f.isDirectory()){ indexWriter.optimize(); indexWriter.close(); LireHandler.createIndexBatch(f.getPath(), whereToStoreIndex, false); } } indexWriter.close(); }catch(IOException e){ System.out.print("IOException in createIndexBatch:\n"+e.getMessage()+"\n"); return false; } return true; }
