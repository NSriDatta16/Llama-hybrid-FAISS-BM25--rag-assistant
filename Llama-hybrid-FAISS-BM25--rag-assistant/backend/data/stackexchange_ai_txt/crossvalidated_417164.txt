[site]: crossvalidated
[post_id]: 417164
[parent_id]: 401490
[tags]: 
I agree with you @Balrog. what about this little fun? I think it does what we need import networkx as nx import numpy as np def att_assortativity(nx_graph,attribute): ''' return corr. coeff. between node\'s and node\'s nearest neighbours average 'attribute', for given networkX graph ''' att_mix_dict = nx.attribute_mixing_dict(nx_graph,attribute) aver_neigh_att = [np.mean(list(att_mix_dict[val].keys())) for val in att_mix_dict.keys()] return np.corrcoef(list(att_mix_dict.keys()),aver_neigh_att)[0,1]
