[site]: crossvalidated
[post_id]: 635846
[parent_id]: 
[tags]: 
Different scales in psychological testing -- z score or other standardization ? within anova using repetead measures

I'm pretty sure this is a basic statistics question; however, here it goes: In psychological testing, let's assume some participants were tested with three different tests. The first goes from 1 to 10, the second goes from 1 to 100 and the third goes from 10 to 20. As the scales are different, higher means don't reflect higher performance. I would like to check whether the mean results obtained are statistically different. I was prone to Z-score each column before comparing them, but I would like if other suggestion is advisable. If you are a R user, just copy paste the code below #packages library(tidyverse) library(MCMCglmm) #> Warning: package 'MCMCglmm' was built under R version 4.3.2 #> Carregando pacotes exigidos: Matrix #> #> Attaching package: 'Matrix' #> The following objects are masked from 'package:tidyr': #> #> expand, pack, unpack #> Carregando pacotes exigidos: coda #> Carregando pacotes exigidos: ape #> Warning: package 'ape' was built under R version 4.3.2 #> #> Attaching package: 'ape' #> The following object is masked from 'package:dplyr': #> #> where library(rstatix) #> #> Attaching package: 'rstatix' #> The following object is masked from 'package:stats': #> #> filter library(ggpubr) #> #> Attaching package: 'ggpubr' #> The following object is masked from 'package:ape': #> #> rotate #fake data set.seed(123) df = data.frame( participant = paste("subject",c(1:100)), test1 = rtnorm(n = 100, mean = 5, sd = 1, lower = 0, upper = 10), test2 = rtnorm(n = 100, mean = 50, sd = 1, lower = 10, upper = 100), test3 = rtnorm(n = 50, mean = 1, sd = 1, lower = 10, upper = 20)) #long format df_long = df %>% pivot_longer(-participant) #plot ggboxplot(df_long, x = "name", y = "value", add = "point") # hypothesis testing res.aov ANOVA Table (type III tests) #> #> Effect DFn DFd F p p 1 name 1.57 155.41 98773.37 2.78e-234 * 0.999 pwc % pairwise_t_test( value ~ name, paired = TRUE, p.adjust.method = "bonferroni" ) Created on 2023-12-29 with reprex v2.0.2
