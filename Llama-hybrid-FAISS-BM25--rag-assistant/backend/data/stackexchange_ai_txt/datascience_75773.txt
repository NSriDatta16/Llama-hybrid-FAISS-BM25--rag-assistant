[site]: datascience
[post_id]: 75773
[parent_id]: 
[tags]: 
Object identifaction with trained CV model

I am rather new to Computer Vision and Neural Networks, but I already build the following setup: I have a robot which crawls through the grass with a live video feed. I build an OpenCV filtering and contour recognition routine, which can identify objects or regions in the video-feed, that might qualify to be Clover. I save those snippets as small images to train a model. I gathered and pre-classified >6.000 images manually into "Clover" and "Grass". I trained a Tensorflow model and it has now an accuracy of 90% for identifying the above. When Clover is found, I mark the region and use it for object tracking. So far so good. Now it is all about performance and quality. The issues are: Performance: In the desired use-case, I fire up the contour identification task every x seconds on the live-video, which gathers the contour images. I then run them through the model prediction. The latter process is rather quick, because I limit the amount of contours returned from the contour identification. The contour identification with filtering is rather slow though. During this time, unhandled frames stack up in the Queue. I do have to queue these frames to rule out video stuttering, which will cause the object tracking to loose focus. Quality: I do not have a problem with the quality of image classification, I rather have a problem with the contour-identification via filtering. This method does not indentify all regions that might contain Clover and can be classified by the model, as it is realy hard to calibrate the filter parameters to work with very crowded and similar colored background in different light-scenarios (clover on grass, all green, sometimes cloudy sometimes direct sunlight). I can only mark ~50% of the interesting regions with this approach, although the classification would be able to tell me if the additional regions are Clover or not. I read multiple times, that e.g. the YOLOv?-Models (which I was not able to set up and test) do both things at the same time: object identification and classification. As I understand YOLOv? is more a proconfigured toolset with underlying model(s), than a model alone, there might be a technique used in there to do the object identification (not classification) task. Maybe in an all in one approach. So I hope there is a method, where I can use the pretrained model or other functions of Tensorflow to do the actual object identification. And I hope, that these methods combined with the classification has in the end a higher performance and outputs a higher amount of identified Clover than my current cascade. So the question is : is there a way or a method, where I can use a pretrained model for the object isolation/identification inside of a crowded image? Or has this job always to be done via filtering? Thanks in advance, Seb
