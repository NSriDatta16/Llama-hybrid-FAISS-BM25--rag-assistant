[site]: stackoverflow
[post_id]: 3410859
[parent_id]: 
[tags]: 
What is the most elegant way to use generic type as generic parameter?

I was wondering if there was a more elegant way than this example to use generic type as generic parameter: public class Wrapper where TObject : MyBaseClass { } public class WrapperCollection : Collection where TWrapper : Wrapper where TObject : MyBaseClass { } Actually, if I want to initialize an instance of WrapperCollection I would to do it like this: WrapperCollection , MyClass> collection = new WrapperCollection , MyClass>(); And as I am not really happy with that, what would be really elegant would be to be able to initialize it like that: WrapperCollection > collection = new WrapperCollection >(); So my question is simple: is there a way to do that or is there a more elegant design to use for my CollectionWrapper? Thanks.
