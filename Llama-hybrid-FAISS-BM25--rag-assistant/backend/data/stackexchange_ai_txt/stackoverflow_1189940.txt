[site]: stackoverflow
[post_id]: 1189940
[parent_id]: 1189821
[tags]: 
I'll second Avihu Turzion's recommendation of Pragmatic Version Control using Subversion. Also check out Eric Sink's source control how-to if you haven't already. Since you're the only one committing, building and packaging the binaries locally is definitely an option. If the building/packaging steps are fairly standard, automate them by setting up a continuous integration system. TeamCity Professional is a free product you can start with that is easy to configure and get working with Subversion. As mentioned by others, the Export option is the way to get a version of your solution without the .svn files. Subversion handles file creation, merging, and deleting fairly smoothly. With the plug-ins you mention, particularly if you're using something like AnhkSVN and TortoiseSVN, it's possible for what the plug-in reports as committed (versus what the Subversion repository actually has committed) to get out of sync. If you delete files or move files, considering doing it entirely at the command-line (or in TortoiseSVN). I learned to use source control on my own once I'd been working a few years. While I started with Visual SourceSafe (which was terrible), I eventually moved on to companies that used Subversion and/or TFS for version control. You're far more likely to lose code if you don't use source control than if you do. You're definitely starting things off on the right foot.
