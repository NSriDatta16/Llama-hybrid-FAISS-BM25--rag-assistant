[site]: stackoverflow
[post_id]: 4890950
[parent_id]: 4886467
[tags]: 
From a "puristic" Mercurial perspective, Mike is right - pushed changesets are out of your control. But , in practice this is often a too strict perspective. In opposition to what Mike said, stripping already pushed changesets may be an option. It depends on whether you have control over the central repository (to strip there too) and on the size of your team/community and how it is organized. If you know for sure nobody has pulled your bad changesets yet, just strip your local and the central repo - done, history deleted. If there is a chance someone pulled your bad changesets already, you'd have strip the local and central repo as well and you'd have to notify all pushing team members to strip the bad changesets in their local repos too (or to reclone from the stripped central repo). If you're lucky, everyone does what you say. Otherwise the changesets end up in the central repo again, sooner or later. The bottom line is that stripping might be a solution for cases like your's - you have to balance the cost (burden your team with extra work) and the benefit (clean history). A practical example where the benefit outweighs the cost would be if you've accidentally added large binary files. In that case probably every team member prefers to strip synchronously instead of working with a blown up repository. UPDATE: You can use server side hooks to prevent stripped changesets from getting back into the central repository - read more here .
