[site]: crossvalidated
[post_id]: 433089
[parent_id]: 
[tags]: 
Missing Data imputation on one continuos column which depends on another feature and which does make sense only when such feature is positive

For each row (open contract) of my dataset, I have got a certain number of orders. I have created some features related to such orders; let's take for instance the average and the std deviation of the intervals in terms of time. PROBLEM : when I have 0 orders, both the average and the intervals are NaN. Moreover, whenever I have 1 order, Python clearly puts the std deviation to 0 -because having only one value- but that's conceptually wrong, since corresponding to the case in which I have N intervals of the same lenght. I have to handle these two exceptions, considering that together samples with 0 or 1 orders are 50% of my dataset. MY SOLUTION : I thought about putting a value out of scale (thus, negative): at the moment I put -100 to both average and std dev when I have 0 orders and -50 (only to std dev) when 1 order, as in Figure 1 . The reason, or at least what I'm trying to achieve, is to have a continuos variable and a model able to discriminate the negative values, understanding that the latter just refer to an exception. QUESTION : The value with whom I fill such situations, strongly influences the scaling (reminding that they are 50% of my data). In Fig 2 two different scaling: above filling with -2 and -1, below resulting scaling using -100 and -50. Models which are scale variant, such as SVM or Neural Networks, are thus very affected by this choice. Can you please tell me how to appropriately choose a reasonable out of scale value, or another way to handle these situations?
