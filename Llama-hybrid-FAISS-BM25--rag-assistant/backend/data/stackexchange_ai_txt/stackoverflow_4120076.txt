[site]: stackoverflow
[post_id]: 4120076
[parent_id]: 4118643
[tags]: 
personally I would not use define's, as stated by Gordon but i would do something like so: class Language { var $language; var $storage = array(); public function __construct($language) { $this->language = $language; $this->load(); } private function load() { $location = '/path/to/' . $this->language . '.php'; if(file_exists($location)) { require_once $location; if(isset($lang)) { $this->storage = (object)$lang; unset($lang); } } } public function __get($root) { return isset($this->storage[$root]) ? $this->storage[$root] : null; } } So the above would be a very basic language object, and the language file would look like so: /path/to/english.php $lang = array( 'user' => array( 'welcome' => 'Welcome %s', 'logout' => 'Logout', ) /*...*/ ); You should have multiple files for various locales but you should modify your class so that if a key does not exists within German then it should default to the English local as that's the primary So the usage would be like so. $lang = 'english'; //logic behind this to detect the browser or user data. $Language = new Language($lang); echo sprintf($Language->user->welcome,"RobertPitt"); // Welcome RobertPitt
