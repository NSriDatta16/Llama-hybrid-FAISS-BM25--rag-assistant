[site]: crossvalidated
[post_id]: 197841
[parent_id]: 197837
[tags]: 
Let me start with a disclaimer: https://security.stackexchange.com/questions/18197/why-shouldnt-we-roll-our-own . Is the idea to be able to do machine learning on hashes of your document features, so that you can keep the plain-features encrypted? Lets say you want to do some sort of unsupervised clustering on your documents. You might be able to do so in your scheme, if each feature is hashed in the same way. On the other hand, you can't use salting anymore, so your documents are much more vulnerable to dictionary attacks. There are other issues as well. As an example, you can think about "encrypting" a plain-text file in the following way: assign each word in the dictionary a random ID and replace the words in the file with these IDs. While it's a little bit more difficult for a human to read this text file, this is the sort of puzzle that usually goes on the back of a cereal box (minus the decoder ring). You can get a pretty good guess of the contents just by examining co-occurrences. In general, I think that what you're trying to do is an open problem, and your success would vary based on how much information you preserve in these features. I'm not familiar with it, but you can try searching for "Privacy Preserving ML" to get some pointers.
