[site]: crossvalidated
[post_id]: 465565
[parent_id]: 
[tags]: 
Model architecture approaches for event prediction at different timestamps

I would like to model a user event outcome (currently its binary). the data I have is aggregated user activity and static user data. here is an example of what the data looks like for clarity: ╔═════════╦════════╦═══════╦══════╦═════════╦═══════╗ ║ user_id ║ clicks ║ views ║ lang ║ country ║ label ║ ╠═════════╬════════╬═══════╬══════╬═════════╬═══════╣ ║ 1 ║ 5 ║ 7 ║ EN ║ US ║ 1 ║ ║ 2 ║ 2 ║ 2 ║ FR ║ CA ║ 0 ║ ║ 3 ║ 29 ║ 66 ║ EN ║ US ║ 1 ║ ╚═════════╩════════╩═══════╩══════╩═════════╩═══════╝ label is the event I'm interested in predicting. The data is highly unbalanced if it matters. what I currently do is take the aggregate data of the user for a defined time interval, and model the label if the event happened in the next 30 days. It works well, but the problem is that I would like to make different predictions for the same user with multiple timestamps. for example I would like the predict at user_age=1, user_age=30 etc (user_age is for example days after registration). I tried to use the same I approach I used before, and just generate a combined dataset with additional feature like user_age, but it did not work like I wanted to, and model metrics were worse compared to the supervised model I had if I just build a specific model for each timestamp, and additionally another issue with that is if I would like to create 50 prediction points then I would need to have 50 models, and 50 static datasets that are modeled specifically for the given timestamps I would like to predict on. Ideally, I would like to have a single model, that can take as input different user_ages and make sense of the time differences between actions for the same users (page clicks on day 1 compared to page clicks on day 20 for example). I thought of two approaches on how to tackle it: multivariate timeseries RNN model that can actually make much more sense in the time differences of the same user data, and it can serve different user ages in the same model. for example a user with user_age=7 and 10 features, will have an input matrix of 7X10, and a user with user_age=1 will have input matrix of 1X10 with padding the missing data (assuming I would limit user_age to 7 for example). treat this as a survival analysis problem, and model the problem as time to event. in this approach I would deviate from the binary classification case, and would have model output of 'X days for event to occur for user Y'. I'm less familiar with this approach but it can be quite relevant. I would like to know if the suggested (and which one) approaches sound reasonable, or any other approach you can recommend. Would be happy to hear for any references to papers/online sources that can tackle this problem. Thank you.
