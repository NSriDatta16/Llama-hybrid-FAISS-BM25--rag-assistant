[site]: datascience
[post_id]: 103477
[parent_id]: 
[tags]: 
How to multiply a pandas dataframe with a numpy array

I have a simple program for performing PCA analysis on a dataset. The goal is to multiply the dataset by the feature vector at the end of the program. import pandas as pd import numpy as np from numpy import linalg as LA def main(): s = pd.read_csv('A1-dm.csv') s = pca(s) def pca(s): # Normalize each s A1 = s[['A1']].to_numpy() A2 = s[['A2']].to_numpy() print(A1.ndim) if 'A3' in s: A3 = s[['A3']].to_numpy() A3_norm = A3/np.linalg.norm(A3) A1_norm = A1/np.linalg.norm(A1) A2_norm = A2/np.linalg.norm(A2) data = np.array([A1_norm,A2_norm]) if 'A3' in s: data = np.array([A1_norm,A2_norm,A3_norm]).squeeze() # determine covariance covMatrix = np.cov(data,bias=True) print(covMatrix) # compute eigen vactors and eigenvalues w, v = LA.eig(covMatrix) print("eigen vectors") print(v) print("eigen values") print(w) varianceV = np.empty(3) # calculate variances varianceV[0] = w[0]/(w[0]+w[1]+w[2]) varianceV[1] = w[1]/(w[0]+w[1]+w[2]) varianceV[2] = w[2]/(w[0]+w[1]+w[2]) print(f' variance of v1 : {varianceV[0]}') print(f' variance of v2 : {varianceV[1]}') print(f' variance of v3 : {varianceV[2]}') # calculate feature vector v_initial = 0 featureVector = np.empty(3) for i in range(0,3): if varianceV[i] > v_initial: featureVector = v[i] print(f'feature vector: {featureVector}') resolved_dataset = np.concatenate(featureVector,s.to_numpy()) print(f'dataset = {resolved_dataset}') main() Expected: The 3x3 matrix consisting of A1, A2, A3 columns should be multiplied by the 3x1 vector such that the returned dataset has been transformed via the principle components. Actual: 2 [[ 2.22742836e-03 -1.08176619e-04 1.28813346e-03] [-1.08176619e-04 2.37308545e-03 -5.81124131e-05] [ 1.28813346e-03 -5.81124131e-05 7.48662113e-04]] eigen vectors [[-0.50114911 -0.84926886 0.16610832] [-0.0016557 0.19289331 0.98121834] [ 0.86535936 -0.49146168 0.09807444]] eigen values [2.78617954e-06 2.99742571e-03 2.34896403e-03] variance of v1 : 0.0005208614522544459 variance of v2 : 0.5603528012046752 variance of v3 : 0.4391263373430704 feature vector: [ 0.86535936 -0.49146168 0.09807444] Traceback (most recent call last): File ".\cov.py", line 62, in main() File ".\cov.py", line 8, in main s = pca(s) File ".\cov.py", line 59, in pca resolved_dataset = np.concatenate(featureVector,s.to_numpy()) TypeError: only integer scalar arrays can be converted to a scalar index Here is a sample of the dataset A1,A2,A3,Class 2,0.4631338,1.5,3 8,0.7460648,3.0,3 6,0.264391038,2.5,2 5,0.4406713,2.3,1 2,0.410438159,1.5,3 2,0.302901816,1.5,2 6,0.275869396,2.5,3 8,0.084782428,3.0,3 2,0.53226533,1.5,2 8,0.070034818,2.9,1 2,0.668631847,1.5,2 2,0.215622639,1.5,2 2,0.148916231,1.5,3 2,0.51335434,1.5,3 Any help figuring out how to perform this operation would be greatly appreciated. Thank you.
