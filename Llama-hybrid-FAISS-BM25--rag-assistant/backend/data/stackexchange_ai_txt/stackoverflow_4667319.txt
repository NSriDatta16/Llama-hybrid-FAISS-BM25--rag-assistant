[site]: stackoverflow
[post_id]: 4667319
[parent_id]: 4667217
[tags]: 
Just use separate capture groups, and ? for the optional part of your regex. If a capture group doesn't capture anything the group's value will be None . >>> regex = re.compile(r'URL: (\S+)(?:\s+Cookie: (\S+))?') >>> regex.match("URL: http://www.cnn.com Cookie: xxx;yyy").groups() ('http://www.cnn.com', 'xxx;yyy') >>> regex.match("URL: http://www.cnn.com").groups() ('http://www.cnn.com', None) I've just used \S+ for the URL and cookie patterns in the above for example purposes. Replace them with your real URL and cookie patterns. Instead of groups() you can use group(1) and group(2) -- the behavior is the same, but groups() is nice with unpacking. eg: url, cookie = match.groups()
