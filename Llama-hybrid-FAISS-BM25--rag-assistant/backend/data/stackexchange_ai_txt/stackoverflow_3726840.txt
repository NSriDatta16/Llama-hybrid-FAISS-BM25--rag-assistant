[site]: stackoverflow
[post_id]: 3726840
[parent_id]: 
[tags]: 
Javascript Arrays - Consolidating Multiple Arrays Help

I wonder if anybody could provide me with any assistance to the following problem I am having with my JS project? I basically have information about a product being pulled from out from 3 different JSP lists: A Product's Details A Products's Ratings A Products's Retailers What I am trying to a do is loop through the JSP three lists, pulling out the relevant info for each of the products and then create a Javascript object which holds all the product information together. Once created I then need to loop through this Javascript object and display each product's information on screen - there could be 10, 20, etc, products at a time. The area I am having trouble with is that when I create my 'mainResults' object (see my code snippet below), although it is being populated correctly, I get a blank array first and then the product arrays after that. Below is a screenshot from Firebug that shows the an extract from the 'mainResults' javascript object - it is the empty arrays show that are my issue: link text This is causing me problems when I try to loop through the 'mainResults' using its length property as it is always reurned as '0'. I am sure there is better way to achieving what I need to do but after a lot of searching and playing around with OOP I still can't find a good solution. There are a couple of important things I need to add: I will never know exactly how many products there will be. The products have up to 3 ratings each. I will never know exactly how many retailers a products has. I need to access the product, its ratings and retailers by an index I have posted the relevant parts of my code below - I really hope somebody can point me in the right direction :) Many thanks in advance, Jim function populate(){ //Access Products from JSP Product Class productResults( , " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " " ); //Access Ratings from Ratings List in JSP Product Class ratingResults( , , " ", " ", " " ); //Access Retailers from Retailer List in JSP Product Class retailerResults( , " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " " ); } var mainResults = []; function productResults(pnum, pid, pname, pmanu, pdesc, pretail, plogo, plogoh, plogow, plowamt, plowcur, phghamt, phghcur) { var product = []; product.count = pnum; product.id = pid; product.name = pname; product.manufacturer = pmanu; product.description = pdesc; product.numretailer = pretail; product.logo = plogo; product.logoh = plogoh; product.logow = plogow; product.lowpriceamt = plowamt; product.lowpricecur = plowcur; product.highpriceamt = phghamt; product.highpricecur = phghcur; product.ratings = []; product.retailers = []; mainResults[pnum] = product; } function ratingResults(ratnum, pnum, rtgtype, rtgavg, rtgnum) { var ratings = []; ratings.count = ratnum; ratings.type = rtgtype; ratings.average = rtgavg; ratings.number = rtgnum; mainResults[pnum].ratings[ratnum] = ratings; } function retailerResults(retnum, pnum, rid, rname, rlink, rlogo, rtime, rstock, ramt, rcur, rstype, rsdate, rminamt, rmincur, rmaxamt, rmaxcur) { var retailers = []; retailers.count = retnum; retailers.id = rid; retailers.name = rname; retailers.purchaselink = rlink; retailers.logo = rlogo; retailers.leadtime = rtime; retailers.stock = rstock; retailers.priceamt = ramt; retailers.pricecur = rcur; retailers.sourcetype = rstype; retailers.sourcedate = rsdate; retailers.shipminprice = rminamt; retailers.shipmincur = rmincur; retailers.shipmaxprice = rmaxamt; retailers.shipmaxcur = rmaxcur; mainresults[pnum].retailers[retnum] = retailers; }
