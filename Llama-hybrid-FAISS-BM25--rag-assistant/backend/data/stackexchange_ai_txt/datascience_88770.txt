[site]: datascience
[post_id]: 88770
[parent_id]: 
[tags]: 
Problem about machine learning regression

I have to predict the weight of fishes in a database. With "mae" i have to improve getting less than 10..but I dont know what kind of optimizer i have to use for improve the "mae".. 159 fishes in database 7 attributes (species, Lenght1, Lenght 2, Lenght 3, Height, Width. Training set -- 143 instances Validation set --- 16 instances Full code: from google.colab import drive drive.mount('/content/drive') import pandas as pd import matplotlib.pyplot as plt import seaborn as sns data = pd.read_csv('/content/drive/My Drive/G2/Fish.csv', header=0) from sklearn.model_selection import train_test_split y=df['Weight'] x=df.drop(columns=['Weight']) #Feature Scaling from sklearn.preprocessing import StandardScaler sc = StandardScaler() x_train = sc.fit_transform(x_train) x_test = sc.transform(x_test) from tensorflow.keras import models from tensorflow.keras import layers from tensorflow.keras.callbacks import EarlyStopping from tensorflow.keras.callbacks import ModelCheckpoint def build_model(): model = models.Sequential() model.add(layers.Dense(64, activation='relu', input_shape=(x_train.shape[1],))) model.add(layers.Dense(64, activation='relu')) model.add(layers.Dense(1)) model.compile(optimizer='rmsprop', loss='mse', metrics=['mae']) #MSE = Mean Square Error / MAE = Mean Absolute Error return model from keras import optimizers model.compile(optimizer='RMSprop', loss='mse', metrics=['mae']) es = EarlyStopping(monitor= 'mae', mode='min', patience = 100, verbose=1) mc = ModelCheckpoint('/content/model_regression.h5', monitor='mae', mode='min', verbose=1, save_best_only=True) history = model.fit(x_train, y_train, epochs=150, batch_size=10, callbacks = [es, mc]) Final Result: Epoch 00150: mae did not improve from 29.04137 ------> The number I get is 29, i have to improve this in less than 10 Any idea? Thanks.
