[site]: crossvalidated
[post_id]: 169089
[parent_id]: 168971
[tags]: 
I'd like to add these details to the answer by f coppens. Basically, my take-home message is that the amount by which the original numbers vary does not affect confidence in the mean of the original numbers. #Here are the four estimates that I would like to average: m1=4.8; sd1=0.438178045 m2=3.6; sd2=0.328633533 m3=2.4; sd3=0.219089022 m4=1.2; sd4=0.109544511 n=4 In 10,000 fake simulations of four flights, I get 10,000 estimates of 'average number of boats' fake.values1 = array (0); fake.means1= array (0) for (ix in 1:10000) { fake.values1[1:4] = c(rnorm(n=1, m1, sd1), rnorm(n=1, m2, sd2), rnorm(n=1, m3, sd3), rnorm(n=1, m4, sd4)) fake.means1[ix] = mean(fake.values1) } # The variance of my 10,000 boat estimates is sd(fake.means1)^2 # which is darn near the Var2 value from my original data, 0.0225 Next, I've add 1 to m1 and subtracted 1 from m4, thus increasing the overall range (and variance) in the values, but keeping the mean constant. new.m1 = m1+1 new.m4 = m4-1 fake.values2 = array (0); fake.means2= array (0) for (ix in 1:10000) { fake.values2[1:4] = c(rnorm(n=1, new.m1, sd1), rnorm(n=1, m2, sd2), rnorm(n=1, m3, sd3), rnorm(n=1, new.m4, sd4)) fake.means2[ix] = mean(fake.values2) } # The variance of this set of 10,000 boat estimates is sd(fake.means2)^2 # which, again is near the Var2 value, 0.0225 So what appears to be the answer to my question is 'Use your Var2 equation'. The Var1 equation captures variability in the estimates. Var2 captures variability in the mean of the estimates, and is not dependent on the spread of the original values being averaged.
