[site]: crossvalidated
[post_id]: 81664
[parent_id]: 81656
[tags]: 
This question is really not metafor specific, but is more about proper understanding of the formula syntax and the coding of factor variables in R. The metafor package does nothing different than, for example, the lm() function (as far as setting up the model matrix is concerned). To see this, just try: summary(lm(Sepal.Length ~ factor(Species) * factor(var) -1, data=iris)) Now back to your models. The first model ( rma(Sepal.Length, Petal.Length, mods = ~ Species * var - 1, data = iris) ) does not make sense, because you are treating variables Species and var as numeric/quantitative covariates/predictors (I assume you really mean for Species and var to represent factors). Removing the intercept here is also not sensible, as it assumes that the outcome is (on average) equal to zero when Species and var are both equal to 0. In the second model ( rma(Sepal.Length, Petal.Length, mods = ~ factor(Species) * factor(var) -1, data = iris) ), R is creating dummy variables to code those two factors. By removing the intercept, you are getting the estimated mean for each level of the Species factor when the var level is 0. One cannot also get a coefficient for var level 0, as otherwise the design matrix would be overparameterized. You can reverse the order of the two factors in the formula and then you will get the estimated mean for each level of the var factor (when the Species level is 0), but now the factor(Species)0 coefficient is dropped. The remaining coefficients represent contrasts between various levels (combinations). If you really just want the estimated mean for each Species and var combination, you can use: rma(Sepal.Length, Petal.Length, mods = ~ factor(var) : factor(Species) -1, data = iris) which yields: estimate se zval pval ci.lb ci.ub factor(var)0:factor(Species)0 5.0488 0.2947 17.1332
