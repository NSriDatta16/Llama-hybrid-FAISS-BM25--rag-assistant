[site]: stackoverflow
[post_id]: 4556278
[parent_id]: 
[tags]: 
CGEventTapCreate's watching keyboard input in Cocoa

Greetings. I try to make kid control application. The keyboard logger is a part of this application. I use CGEventTapCreate to watch the keyboard. This works good, but sometimes I get duplicating key down events. They do not have [NSEvent isARepeat] set, just duplicates. For example I can type "qwerty" but application gets key down events for these characters: "qqwweerrttyy". Maybe somebody experienced smth like it? I get this problem on 10.5&10.6 (both are Intel). I post here keyboard logger install & handler methods: - (BOOL)installKeyboardLogger { CGEventMask keyboardMask = CGEventMaskBit(kCGEventKeyDown); CGEventMask mouseMask = CGEventMaskBit(kCGEventMouseMoved) | CGEventMaskBit(kCGEventLeftMouseDown) | CGEventMaskBit(kCGEventRightMouseDown); CGEventMask mask = keyboardMask + mouseMask;// + mouseMask;//CGEventMaskBit(kCGEventKeyDown) | CGEventMaskBit(kCGEventMouseMoved); // Try to create keyboard-only hook. It will fail if Assistive Devices are not set. mMachPortRef = CGEventTapCreate( kCGAnnotatedSessionEventTap, kCGTailAppendEventTap, // kCGHeadInsertEventTap kCGEventTapOptionListenOnly, keyboardMask, (CGEventTapCallBack)eventTapFunction, self ); if (!mMachPortRef) [mLogFile logNeedAssistiveDevice: @"Can't install keyboard hook."]; else CFRelease(mMachPortRef); mMachPortRef = CGEventTapCreate( kCGAnnotatedSessionEventTap, kCGTailAppendEventTap, // kCGHeadInsertEventTap kCGEventTapOptionListenOnly, mask, (CGEventTapCallBack)eventTapFunction, self ); if (!mMachPortRef) { [mLogFile logNeedAssistiveDevice: @"Can't install keyboard&mouse hook."]; return NO; } mKeyboardEventSrc = CFMachPortCreateRunLoopSource(kCFAllocatorDefault, mMachPortRef, 0); if ( !mKeyboardEventSrc ) return NO; CFRunLoopRef runLoop = CFRunLoopGetCurrent(); if ( !runLoop ) return NO; CFRunLoopAddSource(runLoop, mKeyboardEventSrc, kCFRunLoopDefaultMode); return YES; } CGEventRef eventTapFunction(CGEventTapProxy proxy, CGEventType type, CGEventRef event, void *refcon) { if (type != NX_KEYDOWN && type != NX_OMOUSEDOWN && type != NX_OMOUSEUP && type != NX_OMOUSEDRAGGED && type != NX_LMOUSEUP && type != NX_LMOUSEDOWN && type != NX_RMOUSEUP && type != NX_RMOUSEDOWN && type != NX_MOUSEMOVED && type != NX_LMOUSEDRAGGED && type != NX_RMOUSEDRAGGED) return event; NSEvent* sysEvent = [NSEvent eventWithCGEvent:event]; if (type == NX_KEYDOWN && [sysEvent type] == NSKeyDown) { if (![sysEvent isARepeat]) [(ControlPanelController*)refcon handleCapturedCharacters: [sysEvent characters]]; } else [(ControlPanelController*)refcon handleMouse]; return event; }
