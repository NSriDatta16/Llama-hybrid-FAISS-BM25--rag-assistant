[site]: crossvalidated
[post_id]: 494417
[parent_id]: 
[tags]: 
Black-box optimization algorithms performance

I've been doing some basic research of the black-box optimization algorithms that are on the market (and have Python implementation). I've found some recent and promising algorithms like LIPO , SHGO or Simple(x) but I didn't manage to find any systematic and recent study that would benchmark their performance (in terms of number of function evaluations needed to find a global optimum). Both among them and compared to older algorithms. The Bayesian optimization is another option for black-box optimization. It's widely used and sort of industry standard but I have never found any serious comparison of performance of the Bayesian optimization to the other methods like those above (that would be the best) or more classical like Pattern search algorithms , CMA-ES or other evolutionary and genetic algorithms. So my question is if there is some comparison of the Bayesian optimization against the other methods (recent ones (LIPO, SHGO) or "classical")? If there's nothing like that (I guess I would have found that) can you compare among these algorithms? There is nice paper by Rios and Sahinidis that systematically compares algorithms/implementations but it's relatively old (so that LIPO and SHGO couldn't be included) and it completely avoids Bayesian optimization as well.
