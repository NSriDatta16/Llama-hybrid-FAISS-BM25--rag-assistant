[site]: stackoverflow
[post_id]: 3991446
[parent_id]: 3991138
[tags]: 
Not quite standard looking rails column names, so I'm guessing you may be working with a legacy DB, at any rate: Assuming that your Organization model was something like this: belongs_to :organization_address, :class_name => 'Address', :foreign_key => 'organisationaddressid' belongs_to :main_admin_address, :class_name => 'Address', :foreign_key => 'mainadminaddressid' # See http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html # Make the organization accept nested attributes for the addresses accepts_nested_attributes_for :organization_address, :main_admin_address Your form would probably look something like this with fields_for the different addresses: ... ... After that, in your controller @organization = Organization.new(params[:organization]) @organization.save Should save the organization model as well as the two address models.
