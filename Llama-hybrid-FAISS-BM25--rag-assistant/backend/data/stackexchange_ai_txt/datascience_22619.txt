[site]: datascience
[post_id]: 22619
[parent_id]: 22545
[tags]: 
I'll try and answer your question point-by-point from an architect's point-of-view: We would like to implement rule engine in one of our products, but when I read on the Internet, many are suggesting that rule engines are an old way of doing things The 'people of the internet' don't know your scale and the use-case. Only you know. So, they might be suggesting ideas from a very high-scale point of view, when your system is not necessarily a high scale one. So, pick the right idea/tool for the job. suggesting that rule engines are an old way of doing things and it will be very hard to manage as we add more rules into it True . Rule-based systems are not scalable, due to obvious reasons. And, that's why people consider ML as a highly scaled out rule-based engine, wherein the rules can no longer be understood by humans. Thus, the black-box name . So my Question is, should I learn Machine Learning or go on implementing Drools as rule engine in my application. That is for you to decide. We don't know your scale. But, if you think the rules would be increasing at a huge rate in the future, then ML is the best way forward for your use-case. Or can you suggest any online resources achieving the same using Machine Learning? For me, every recommender system is a complex rule-based engine under the hood. So, go through Amazon's and how they do their recommendation.
