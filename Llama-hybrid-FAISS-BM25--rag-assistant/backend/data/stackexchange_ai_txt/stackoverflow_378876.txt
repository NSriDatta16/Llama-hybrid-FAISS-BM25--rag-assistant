[site]: stackoverflow
[post_id]: 378876
[parent_id]: 
[tags]: 
C++ namespaces: cross-usage

Consider the following example. It consists of two header files, declaring two different namespaces: // a1.h #pragma once #include "a2.h" namespace a1 { const int x = 10; typedef a2::C B; } and the second one is // a2.h #pragma once #include "a1.h" namespace a2 { class C { public: int say() { return a1::x; } }; } And a single source file, main.cpp : #include #include "a1.h" #include "a2.h" int main() { a2::C c; std::cout This way it doesn't compile (tried GCC and MSVC). The error is that a1 namespaces is not declared (C2653 on Windows). If you change include order in main.cpp this way: #include "a2.h" #include "a1.h" you get a symmetric error message, i.e. a2 namespace is not declared. What's the problem?
