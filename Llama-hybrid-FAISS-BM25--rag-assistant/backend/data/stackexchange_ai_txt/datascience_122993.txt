[site]: datascience
[post_id]: 122993
[parent_id]: 
[tags]: 
Why does a .fit() method change an input X to a np.array?

Why does a (custom) .fit() method transform a pd.DataFrame X to a numpy.ndarray? import pandas as pd import numpy as np from sklearn.pipeline import make_pipeline from sklearn.compose import TransformedTargetRegresso, make_column_transformer from xgboost import XGBRegressor class XGBRPipeline(XGBRegressor): def __init__(self, preprocessing, cardinality=10, **xgboost_params): super().__init__(**xgboost_params) self.preprocessing = preprocessing self.cardinality = cardinality self.pipeline = None def _get_num_cols(self, df): return [f for f in df.columns if pd.api.types.is_numeric_dtype(df[f])] def _get_cat_cols(self, df): return [f for f in df.columns if df[f].dtype.name == 'category'] def _get_ord_cols(self, df): cat_cols = self._get_cat_cols(df) return [f for f in cat_cols if df[f].cat.ordered] def _get_non_ord_cols(self, df): cat_cols = self._get_cat_cols(df) return [f for f in cat_cols if not df[f].cat.ordered] def _get_llc_cols(self, df, cardinality): non_ord_cols = self._get_non_ord_cols(df)26 return [f for f in non_ord_cols if len(df[f].cat.categories) cardinality] def fit(self, X, y=None, **fit_params): preprocessing = make_column_transformer( (self.preprocessing.get('numeric'), self._get_num_cols(X)), (self.preprocessing.get('ordinal'), self._get_ord_cols(X)), (self.preprocessing.get('cardinal'), self._get_llc_cols(X, self.cardinality)) ) â€‹ ttr = TransformedTargetRegressor( regressor=self, func=np.log1p, inverse_func=np.expm1, check_inverse=False ) self.pipeline = make_pipeline(preprocessing, ttr) self.pipeline.fit(X, y, **fit_params) return self def transform(self, X, **transform_params): return self.pipeline.transform(X, **transform_params) xgbr = XGBRPipeline( preprocessing=preprocessing_xgbr, cardinality=200, n_estimators=100, learning_rate=0.1 ) print(type(train)) xgbr.fit(X=train.drop(columns=[target]), y=train[target])) --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) Input In [67], in () 53 xgbr = XGBRPipeline(preprocessing=preprocessing_xgbr, cardinality=200, n_estimators=100, learning_rate=0.1) 54 print(type(train)) ---> 55 xgbr.fit(X=train.drop(columns=[target]), y=train[target]) Input In [67], in XGBRPipeline.fit(self, X, y, **fit_params) 39 ttr = TransformedTargetRegressor( 40 regressor=self, 41 func=np.log1p, 42 inverse_func=np.expm1, 43 check_inverse=False 44 ) 46 self.pipeline = make_pipeline(preprocessing, ttr) ---> 47 self.pipeline.fit(X, y, **fit_params) 48 return self File ~\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\pipeline.py:405, in Pipeline.fit(self, X, y, **fit_params) 403 if self._final_estimator != "passthrough": 404 fit_params_last_step = fit_params_steps[self.steps[-1][0]] --> 405 self._final_estimator.fit(Xt, y, **fit_params_last_step) 407 return self File ~\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\compose\_target.py:262, in TransformedTargetRegressor.fit(self, X, y, **fit_params) 259 else: 260 self.regressor_ = clone(self.regressor) --> 262 self.regressor_.fit(X, y_trans, **fit_params) 264 if hasattr(self.regressor_, "feature_names_in_"): 265 self.feature_names_in_ = self.regressor_.feature_names_in_ Input In [67], in XGBRPipeline.fit(self, X, y, **fit_params) 32 def fit(self, X, y=None, **fit_params): 33 preprocessing = make_column_transformer( ---> 34 (self.preprocessing.get('numeric'), self._get_num_cols(X)), 35 (self.preprocessing.get('ordinal'), self._get_ord_cols(X)), 36 (self.preprocessing.get('cardinal'), self._get_llc_cols(X, self.cardinality)) 37 ) 39 ttr = TransformedTargetRegressor( 40 regressor=self, 41 func=np.log1p, 42 inverse_func=np.expm1, 43 check_inverse=False 44 ) 46 self.pipeline = make_pipeline(preprocessing, ttr) Input In [67], in XGBRPipeline._get_num_cols(self, df) 10 def _get_num_cols(self, df): ---> 11 return [f for f in df.columns if pd.api.types.is_numeric_dtype(df[f])] AttributeError: 'numpy.ndarray' object has no attribute 'columns'
