[site]: stackoverflow
[post_id]: 1075819
[parent_id]: 1051055
[tags]: 
Your can change what you consider a fact value in your design ... it seems that a fact in your data model could be expressed as the following N-tuple: Movie | FactType | FactValue | FactSource | FactJournalist The following table structures should support the data model you want, and can relatively easily be indexed and joined. You can also create a view that pivots out just the fact value and fact type so that you can create the following perspective: MovieID | Movie Name | Director | LeadingMale | LeadingFemale | PrimaryVillain | etc Interestingly, you could consider this to be the logical extension of fully applying an EAV model to the data, and decomposing an individual movie (with it's intuitive attribution of director, lead, villain, etc) into a pivoted structure where attributes focus on the source of the information instead. The benefits of the proposed data model are: it is well-normalized (though you should probably normalize the FactType field into a reference table for completeness) it is possible to create a view that pivots fact types efficiently out into a tabular structure it is relatively extensible and allows the database to enforce referential integrity and (if desired) cardinality constraints the MovieFact table can be subclassed to support different kinds of movie facts, not just those that are simple text field simple queries against the data are relatively efficient Some of the disadvantages of the data model are: Composite, conditional queries are harder (but not impossible) to write (e.g. find all movies where Director is A and Leading Male is B, etc...) The model is somewhat less obvious than the more traditional approach, or one involving EAV structures inserts and updates are a little trickier because updating multiple facts requires updating multiple rows, not multiple columns I've the Movie data up a level to normalize the structure, and you could pushed the movie name down into the MovieFact structure for consistency (since for some movies I can imagine even then name is something you may want to track source information for). Table Movie ======================== MovieID NUMBER, PrimaryKey MovieName VARCHAR Table MovieFact ======================== MovieID NUMBER, PrimaryKeyCol1 FactType VARCHAR, PrimaryKeyCol2 FactValue VARCHAR FactSource VARCHAR FactJournalist VARCHAR Your fictional movie data would then look like the following: Movie Table ==================================================================================== MovieID MovieName ==================================================================================== 1 Green Lantern 2 The Tick MovieFact Table ==================================================================================== MovieID FactType FactValue FactSource FactJournalist ==================================================================================== 1 Director Kubrick CHUD Sarah 1 Leading Male Robert Redford CHUD James 1 Leading Female Miley Cyrus Dark Horizons James 1 Villain Hugh Grant CHUD Sarah 2 Director Mel Gibson Yahoo Cameron 2 Leading Male John Lambert Yahoo Erica ...
