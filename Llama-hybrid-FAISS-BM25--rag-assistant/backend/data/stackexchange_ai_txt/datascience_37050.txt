[site]: datascience
[post_id]: 37050
[parent_id]: 
[tags]: 
Train neural network for regression with negative samples

I have training samples which have have vector $\vec x$ as input and a vector $\vec y$ as output - both vectors have real (float) numbers $\in \mathbb R$ as entries. I want to train a neural network such that if I put an $\vec x$ I get the right $\vec y$ out. Obviously I am having an input layer of as many neurons as $\vec x$ is large in dimension and output neurons as large as $\vec y$ is in dimension. In my training set I have a lot of sample where I have a given input and and given output and I know that the output is not what I want (a wrong sample, or a negative sample if you will). Of course I could just not use those samples for training, but then I would through away some perfectly good information. I know there are papers out there using negative samples for classification (categorical output), but I do not know of an approach for regression (continuous output). How do I use my negative samples?
