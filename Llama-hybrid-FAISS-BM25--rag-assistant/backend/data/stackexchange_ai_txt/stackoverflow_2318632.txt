[site]: stackoverflow
[post_id]: 2318632
[parent_id]: 2317599
[tags]: 
We had the same question when we started our project. In the end we moved everything we could on the JS side. Here's our stack: The backend receives and send JSON data exclusively. We use Erlang, but Python would be the same. It handles the authentication/security and the storage. The frontend , is in HTML+CSS for visual elements and JS for the logic. A JS template engine converts the JSON into HTML. We've built PURE , but there are plenty of others available. MVC can be an overkill on the browser side, but IMO using a template engine is the least separation you can do. The response time is amazing. Once the page and the JS/CSS are loaded(fresh or from the cache), only the data cross the network for each request.
