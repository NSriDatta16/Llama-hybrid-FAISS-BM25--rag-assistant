[site]: stackoverflow
[post_id]: 4113569
[parent_id]: 4112064
[tags]: 
The problem is not technical, it is psychological. It is in what it encourages you to do by making it easy. To make a mundane analogy, it is like a credit card. It is much more efficient than writing checks or using cash. If that is so, why do people get in so much trouble with credit cards? Because they are so easy to use that they abuse them . It takes great discipline not to over-use a good thing. The way OO gets abused is by Creating too many "layers of abstraction" Creating too much redundant data structure Encouraging the use of notification-style code, attempting to maintain consistency within redundant data structures. It is better to minimize data structure, and if it must be redundant, be able to tolerate temporary inconsistency. ADDED: As an illustration of the kind of thing that OO encourages, here's what I see sometimes in performance tuning: Somebody sets SomeProperty = true; . That sounds innocent enough, right? Well that can ripple to objects that contain that object, often through polymorphism that's hard to trace. That can mean that some list or dictionary somewhere needs to have things added to it or removed from it. That can mean that some tree or list control needs controls added or removed or shuffled. That can mean windows are being created or destroyed. It can also mean some things need to be changed in a database, which might not be local so there's some I/O or mutex locking to be done. It can really get crazy. But who cares? It's abstract .
