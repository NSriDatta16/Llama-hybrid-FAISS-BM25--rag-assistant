[site]: stackoverflow
[post_id]: 1347811
[parent_id]: 1346957
[tags]: 
On the iPhone, one event has to run to completion before the next event is processed. Basically you want to have code which does not run for a long time so that your app remains responsive to user input. There are a number of way you can handle this. Put some of the code in a new thread and start that thread from your touchBegan method. Or turn the loop into multiple events on the main thread. You can do this by calling: - (void)initializeLoop { loopCounter = 0; [self performSelector:@selector(nextLoop) withObject:nil afterDelay:0.0]; } - (void)nextLoop { loopCounter++; if (loopCounter That way the new touchEnded event can be handled between these other events. Setting the delay higher than 0.0 will make the app even more responsive.
