[site]: datascience
[post_id]: 46570
[parent_id]: 46551
[tags]: 
Some context: The problem you are trying to solve can be defined as a classification problem. Where based on features $x^1...x^n$ we are trying to predict if $y$ is class $default$ or class $no$ $default$ . There are several algorithms that are able to learn the different functions between the features and the class, functions that can be used for prediction purposes. Neural network is one such function. Answering the question(s): 1) handling variable input size: this is common when looking at time based related data, where each instance might have different history length and or frequency. One simple approach is deducing the feature space to the biggest common space(I.E, truncate the history lengths to shortest existing in all). Be aware that in this approach you wont use all of data you have. Another approach is aggregating the history into one or more features: 'total deals', 'average deal amount', 'average time between deals', etc.. 2) Handling the 'string' columns: This data can be probably treated as a categorical feature . Encoding it into several different variables(each representing one(or more) possible value(s) this feature have) is a common way including it as a feature in the learning algorithms. There are other methods handling each question, but these should be a good starting point.
