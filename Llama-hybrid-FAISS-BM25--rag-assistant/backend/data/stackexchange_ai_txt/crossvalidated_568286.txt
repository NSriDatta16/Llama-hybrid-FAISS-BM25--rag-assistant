[site]: crossvalidated
[post_id]: 568286
[parent_id]: 
[tags]: 
Neural Network weights brute-force optimization

I have a hard-coded deep neural network with structure of 4-4-5-3. The outputs are known to me however the training is not done using backpropagation but using a brute-force algorithm cycling weights’ values between -1 and 1. Outputs will get activated differently and if activation is above 0.6, a certain action is executed. Based on the compound result of all executions from all 3 outputs, a total result is produced for each epoch (I am dealing with timeseries data). From the list of all produced results I pick the ones which fit my goals best. Now, my question is, how do I replicate this with a “proper” neural network in Keras or similar? Seen as I can’t actually train the NN as I don’t know when each output should “fire”, do I approach this more as an unsupervised learning problem or a classification problem? Thank you
