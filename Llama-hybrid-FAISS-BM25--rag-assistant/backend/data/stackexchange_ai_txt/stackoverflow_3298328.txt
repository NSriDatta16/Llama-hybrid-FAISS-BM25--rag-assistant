[site]: stackoverflow
[post_id]: 3298328
[parent_id]: 3298068
[tags]: 
The easiest way to do this, IMO is wrap the content of the inner div with obscure strings at either side then use a regular expression on the whole paragraph to find the markers you added along with the required number of characters at either side. Something like this: var full, result, // textContent for w3 compliance, innerText for IE txt = "textContent" in document.body ? "textContent" : "innerText", // Get references to both divs and store the current text of `xyz` out = document.getElementById("outer"), xyz = document.getElementById("xyz"), old = xyz[txt]; // wrap the inner text with something we can easily search for: xyz[txt] = "||||" + xyz[txt] + "||||"; // Get the whole text, change the DOM text back to what it was full = out[txt]; xyz[txt] = old; // Find the text with our markers and surrounding text: result = /.{0,10}\|{4}.*?\|{4}.{0,10}/.exec(full); alert(result[0]); // -> "ch button ||||will highlight all|||| the words" // Finally, replace your wrapping strings: result = result[0].replace(/\|{4}/g, ""); alert(result); // -> "ch button will highlight all the words" You might want to adjust the regex slightly so that it matches, say, two whole words before and after the inner string. Example http://www.jsfiddle.net/Sy4rT/
