[site]: stackoverflow
[post_id]: 1028400
[parent_id]: 966025
[tags]: 
Having fields that are only used in some contexts is OK in XML documents as long as you document it adequately. UDDI (yes I know, a thoroughly un-REST and uncool example) does just that. When you "save" or "update" an entry in UDDI, analogous to your POST and PUT, you need to supply the unique ID in the published data such that the server knows what to do with it. The advantage here is that you have one schema element and one resulting data structure to deal with for most operations on that data structure (for CRU but not always for D in UDDI). Since you are RESTful and can represent the unique identifier in the resource's URL, this approach may make less sense for your application. One thing to consider is if the retrieved data is to be passed around after retrieval. If the data needs to be self contained and is passed around within or between different contexts in your clients, then including the ID is likely helpful to the users of your service as they won't have to deal with two pieces of data (the actual data, and its unique identifier). That said, your clients may abstract away the REST/XML interaction entirely in which case, their abstraction probably already handles the ID and the remaining fields of the data structure.
