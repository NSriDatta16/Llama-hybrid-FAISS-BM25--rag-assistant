[site]: stackoverflow
[post_id]: 2827978
[parent_id]: 2827837
[tags]: 
Use a factory. Send the query to the factory, which grabs the struct from the library. Then have it read the struct and put it into any object you want. The factory then returns the object. An alternative is to use an adapter. Instead of just reading each field in the struct and using it to construct your model object, you might create an adapter object which contains the struct and presents the desired interface to the rest of the code. Your factory could then handle the query and return an adapted struct. I'd shy away from the Decorator pattern. It isn't a bad pattern, but it is far more useful when you need to dynamically add or remove behavior. In this case, you haven't mentioned the need to do this dynamically, so Decorator is overkill. On the database side, a simple data access object (DAO) will allow you to pass your model object to one of the CRUD methods. It's not the most elegant solution, but it sounds like you don't need the extra elegance of a JDO type solution.
