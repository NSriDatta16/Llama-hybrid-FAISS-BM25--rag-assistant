[site]: stackoverflow
[post_id]: 1352865
[parent_id]: 36314
[tags]: 
In an algebra of functions, dealing with functions that take multiple arguments (or equivalent one argument that's an N-tuple) is somewhat inelegant -- but, as Moses Sch√∂nfinkel (and, independently, Haskell Curry) proved, it's not needed: all you need are functions that take one argument. So how do you deal with something you'd naturally express as, say, f(x,y) ? Well, you take that as equivalent to f(x)(y) -- f(x) , call it g , is a function, and you apply that function to y . In other words, you only have functions that take one argument -- but some of those functions return other functions (which ALSO take one argument;-). As usual, wikipedia has a nice summary entry about this, with many useful pointers (probably including ones regarding your favorite languages;-) as well as slightly more rigorous mathematical treatment.
