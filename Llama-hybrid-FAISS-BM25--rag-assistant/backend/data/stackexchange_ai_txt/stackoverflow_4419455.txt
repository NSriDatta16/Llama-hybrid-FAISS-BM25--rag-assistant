[site]: stackoverflow
[post_id]: 4419455
[parent_id]: 4419358
[tags]: 
Should I bother checking for, say, security updates for these libraries? In general, it is probably a good idea to do this. But then so should everyone upstream and downstream of you. In your particular case, we are talking about test code. If potential security flaws in libraries used only in testing are significant, your downstream users are doing something strange ... Finally (and most importantly, actually what I'm most concerned about): What if I want to include another library which depends on the same libraries as this library, but with different versions? That is, what if for instance HtmlUnit depends on one version of xalan and another library I need, depends on a different version of xalan? Ah yes. Assuming that you are building your own classpaths, etc by hand, you need to make a decision about which version of the dependent libraries you should use. It is usually safe to just pick the most recent of the versions used. But if the older version is not backwards incompatible with the new (for your use case) then you've got a problem. Should I be concerned about this? IMO, for your particular example (where we are talking about test code), no. What are the best practices in situations like these? Use Maven! It explicitly exposes the dependencies to the folks who download your code, making it possible for them to deal with the issue. It also tells you when you've got dependency version conflicts and provides a simple "exclude" mechanism for dealing with it. Maven also removes the need to create distributions. You publish just your artifacts with references to their dependents. The Maven command then downloads the dependent artifacts from wherever they have been published. EDIT Obviously, if you are using HtmlUnit for production code (rather than just tests), then you need to pay more attention to security issues.
