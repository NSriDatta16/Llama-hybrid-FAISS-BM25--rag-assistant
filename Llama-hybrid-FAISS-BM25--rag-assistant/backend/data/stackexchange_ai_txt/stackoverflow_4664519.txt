[site]: stackoverflow
[post_id]: 4664519
[parent_id]: 4657513
[tags]: 
If you consider the C++11 standard (n3337): § 24.2.1 — [iterator.requirements.general#6] An iterator j is called reachable from an iterator i if and only if there is a finite sequence of applications of the expression ++i that makes i == j . If j is reachable from i , they refer to elements of the same sequence. § 24.2.5 — [forward.iterators#2] The domain of == for forward iterators is that of iterators over the same underlying sequence. Given that RandomAccessIterator must satisfy all requirements imposed by ForwardIterator , comparing iterators from different containers is undefined. The LWG issue #446 talks specifically about this question, and the proposal was to add the following text to the standard (thanks to @Lightness Races in Orbit for bringing it to attention): The result of directly or indirectly evaluating any comparison function or the binary - operator with two iterator values as arguments that were obtained from two different ranges r1 and r2 (including their past-the-end values) which are not subranges of one common range is undefined, unless explicitly described otherwise .
