[site]: stackoverflow
[post_id]: 4485488
[parent_id]: 
[tags]: 
Pigeon function: where to insert x into a sorted list

Suppose I have a sorted list of things {thing1, thing2, thing3, ...} and a binary comparison function that says whether one thing should come before another in that sort order. (I say "things" because they need not be numbers; they can be arbitrary data structures.) I now seek a function that takes a sorted list of things, a comparison function, and a thing and returns the first pair of adjacent things in the list that the new thing should be inserted between. That is, return the first adjacent pair {a,b} such that comp(a,x) and comp(x,b) are true, where comp() is the comparison function. For example, pigeon[{1,3,5,7}, Less, 4] should return {3,5} (EDIT: If the given thing is less than the first element, a, of the list, then return {Null, a}. Likewise, if it's greater than the last element, z, then return {z, Null}. Additionally, we need to either assume that the comparison function returns true for two identical elements (ie, it's like LessEqual rather than Less) or that the list of things doesn't contain the thing being pigeoned. Thanks to High Performance Mark for catching that!) My first thought was to use Split and then take the Last and First, respectively, of the resulting two sublists. I'll post that as an answer (or feel free to beat me to it) but I imagine there's a more efficient or elegant way.
