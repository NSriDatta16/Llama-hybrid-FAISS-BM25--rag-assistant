[site]: stackoverflow
[post_id]: 2479119
[parent_id]: 2477909
[tags]: 
Probably the most straightforward just to do it the old-fashioned way. Here's some initial code to get you going. It probably could be prettier but should give the basic idea: def is_docstr_bound(line): return "'''" in line or '"""' in line # XXX: output using the same name to some other folder output = open('output.py', 'w') docstr_found = False docstr = list() with open('input.py') as f: for line in f.readlines(): if docstr_found: if is_docstr_bound(line): # XXX: do conversion now # ... # and write to output output.write(''.join(docstr)) output.write(line) docstr = list() docstr_found = False else: docstr.append(line) else: if is_docstr_bound(line): docstr_found = True output.write(line) output.close() To make it truly functional you need to hook it up with a file finder and output the files to some other directory. Check out the os.path module for reference. I know the docstring bound check is potentially really weak. It's probably a good idea to beef it up a bit (strip line and check if it begins or ends with a docstring bound). Hopefully that gives some idea how to possibly proceed. Perhaps there's a more elegant way to handle the problem. :)
