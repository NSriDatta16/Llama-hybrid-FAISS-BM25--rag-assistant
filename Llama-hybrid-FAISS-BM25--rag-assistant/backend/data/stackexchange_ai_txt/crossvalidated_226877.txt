[site]: crossvalidated
[post_id]: 226877
[parent_id]: 
[tags]: 
Nonlinear regression for curve fitting of a dataset generated by an analytic function

I have the following analytic function. $y =e^{-\frac{1}{2} x^2} \left(4 \sin^2 6 x + 3 \cos^2 x \sin^2 4 x + 1\right)$ My goal is to create $(x, y)$ pairs from this function where $x = [-2, 2]$ and use nonlinear regression to fit a curve to the data. This is for mere educational purpose. Using TensorFlow I have created a neural network with one hidden layer and used it to fit a curve to the dataset generated from the analytic function. My results are as follows. In the legend $(a, b, c)$, $a$ = number of training steps, $b$ = number of nodes in the hidden layer, and $c$ = RMSE. My question: Why a particular $(a, b, c)$ works the best among the all?
