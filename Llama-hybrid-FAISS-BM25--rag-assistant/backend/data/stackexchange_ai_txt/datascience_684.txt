[site]: datascience
[post_id]: 684
[parent_id]: 677
[tags]: 
I have never used sklearn_pandas , but from reading their source code, it looks like this is a bug on their side. If you look for the function that is throwing the exception , you can notice that they are discarding the y argument (it does not even survive until the docstring), and the inner fit function expects one argument more, which is probably y : def fit(self, X, y=None): ''' Fit a transformation from the pipeline X the data to fit ''' for columns, transformer in self.features: if transformer is not None: transformer.fit(self._get_col_subset(X, columns)) return self I would recommend that you open an issue in their bug tracker . UPDATE : You can test this if you run your code from IPython. To summarize, if you use the %pdb on magic right before you run the problematic call, the exception is captured by the Python debugger, so you can play around a bit and see that calling the fit function with the label values y[0] does work -- see the last line with the pdb> prompt. (The CSV files are downloaded from Kaggle, except for the largest one which is just a part of the real file). In [1]: import pandas as pd In [2]: from sklearn import neighbors In [3]: from sklearn_pandas import DataFrameMapper, cross_val_score In [4]: path_train ="train.csv" In [5]: path_labels ="trainLabels.csv" In [6]: path_test = "test.csv" In [7]: train = pd.read_csv(path_train, header=None) In [8]: labels = pd.read_csv(path_labels, header=None) In [9]: test = pd.read_csv(path_test, header=None) In [10]: mapper_train = DataFrameMapper([(list(train.columns),neighbors.KNeighborsClassifier(n_neighbors=3))]) In [13]: %pdb on In [14]: mapper_train.fit_transform(train, labels) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) in () ----> 1 mapper_train.fit_transform(train, labels) /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/base.pyc in fit_transform(self, X, y, **fit_params) 409 else: 410 # fit method of arity 2 (supervised transformation) --> 411 return self.fit(X, y, **fit_params).transform(X) 412 413 /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn_pandas/__init__.pyc in fit(self, X, y) 116 for columns, transformer in self.features: 117 if transformer is not None: --> 118 transformer.fit(self._get_col_subset(X, columns)) 119 return self 120 TypeError: fit() takes exactly 3 arguments (2 given) > /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn_pandas/__init__.py(118)fit() 117 if transformer is not None: --> 118 transformer.fit(self._get_col_subset(X, columns)) 119 return self ipdb> l 113 114 X the data to fit 115 ''' 116 for columns, transformer in self.features: 117 if transformer is not None: --> 118 transformer.fit(self._get_col_subset(X, columns)) 119 return self 120 121 122 def transform(self, X): 123 ''' ipdb> transformer.fit(self._get_col_subset(X, columns), y[0]) KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski', n_neighbors=3, p=2, weights='uniform')
