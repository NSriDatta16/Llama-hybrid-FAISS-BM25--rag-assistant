[site]: stackoverflow
[post_id]: 3010828
[parent_id]: 208193
[tags]: 
GUI-based IDEs like Visual Studio and Eclipse have several advantages over text-based IDEs like Emacs or vim because of their display capabilities: WYSIWYG preview and live editing for GUI design Efficient property editors (eg. color selection using a GUI palette, including positioning gradient stops etc) Graphical depiction of code outlines, file interrelationships, etc More efficient use of screen real-estate to show breakpoints, bookmarks, errors, etc Better drag and drop support with OS and other applications Integrated editing of drawings, images, 3D models, etc Display and edit of database models Basically with a GUI-based IDE you can get more useful information on screen at once and you can view/edit graphical portions of of your application as easily as text portions. One of the coolest things to experience as a developer is editing a method that computes some data and seeing the live output of your code displayed graphically in another window, just as your user will see it when you run the app. Now that's WYSIWYG editing! Text-based IDEs like Emacs and vim can add features like code completion and refactoring over time, so in the long run their main limitation is their text-based display model.
