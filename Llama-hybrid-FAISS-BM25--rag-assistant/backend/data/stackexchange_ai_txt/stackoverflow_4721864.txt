[site]: stackoverflow
[post_id]: 4721864
[parent_id]: 4721426
[tags]: 
I prefer to create specific classes inherited from generic base classes: public class FooLookup : Lookup , Foo> { public FooLookup(IDictionary > dict) : base(dict) { } } It makes code much cleaner. Compare: var dictionary = new Dictionary >(); FooLookup fooLookup = new FooLookup(dictionary); Lookup , Foo> lookup = new Lookup , Foo>(dictionary); Main reason why I don't like to use classes with T1, T2, T3, T4 in code is human mind - average people can keep about 7 (+/- 2) things in their head at a time. So, creating T1, T2, T3, T4 will take 4 of that things, leaving 3 to business logic.
