[site]: stackoverflow
[post_id]: 2184399
[parent_id]: 
[tags]: 
C# class organization and lists

I am working on a C# application which consists of objects Department, Course, and Section. Each Department has many Courses, and each Course has many Sections. Currently I have three classes: Department, Course, and Section. Department contains some properties and then a List Courses, which contains the courses the department offers. Course contains some properties and then a List Sections, which contains the sections of the course. Is this a good way to have the code structured or should I be doing it a different way? Secondly, when I instantiate a department in my application, I set some properties and then would like to begin adding courses to the List Courses defined in the Department class. However, I seem to be unable to simply do Department.Courses.Add(Course) from the application. What must I do within the Department class so that I may add objects to that list without breaking the principle of encapsulation? An example of what I have with the list right now is: class Department { // ...... List Courses = new List ; } however Department.Courses is not available in the program code after the class has been instantiated (all other properties of the class are available).
