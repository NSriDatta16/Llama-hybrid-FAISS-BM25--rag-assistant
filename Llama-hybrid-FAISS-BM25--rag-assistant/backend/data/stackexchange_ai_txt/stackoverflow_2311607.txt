[site]: stackoverflow
[post_id]: 2311607
[parent_id]: 2311554
[tags]: 
I would give the first preference to the following aggreate model: ID | OBJECT_ID | DATE | PRICE | SOURCE ---+-----------+------------+--------+-------- 1 | 100 | 2010/01/01 | 10.00 | 0 2 | 100 | 2010/01/02 | 15.00 | 0 3 | 100 | 2010/01/03 | 20.00 | 0 4 | 100 | 2010/01/04 | 12.00 | 0 You would then be able to aggreate the above data to generate averages for every week/month/year very easily and relatively quickly. To get the list of weekly averages, you would be able to do the following: SELECT WEEK(date), AVG(price) FROM table GROUP BY WEEK(date); For some further examples, the following query would return the average price on Sundays: SELECT AVG(price) FROM table WHERE DAYOFWEEK(date) = 1; Or maybe get the average daily price for the 8th week of the year: SELECT AVG(price) FROM table WHERE WEEK(date) = 8; It would also be quite easy to get monthly or yearly averages: SELECT MONTH(date), AVG(price) FROM table GROUP BY MONTH(date); I would only opt for more de-normalized options like the two you proposed if the above aggregations would still be too expensive to compute.
