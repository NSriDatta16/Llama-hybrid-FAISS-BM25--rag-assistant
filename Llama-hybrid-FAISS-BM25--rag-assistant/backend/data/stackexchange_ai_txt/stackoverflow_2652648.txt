[site]: stackoverflow
[post_id]: 2652648
[parent_id]: 
[tags]: 
Dowser: "bad argument to internal function"

I'm trying out Dowser , it's really cool but I'm stuck with a little problem, and I couldn't find anything helpful on Google, so here I am.. ^^; I'm running a CherryPy+SQLAlchemy application.. It works normally, except that when I enable Dowser (that is, after I call dowser.Root()), now and then I get exceptions like: SystemError: ../Objects/tupleobject.c:809: bad argument to internal function on innocent-looking istructions, such as accessing a SQLA-mapped field.. Relevant part of a traceback: File "/usr/local/lib/python2.6/dist-packages/SQLAlchemy-0.5.8-py2.6.egg/sqlalchemy/orm/attributes.py", line 158, in __get__ return self.impl.get(instance_state(instance), instance_dict(instance)) File "/usr/local/lib/python2.6/dist-packages/SQLAlchemy-0.5.8-py2.6.egg/sqlalchemy/orm/attributes.py", line 377, in get value = callable_() File "/usr/local/lib/python2.6/dist-packages/SQLAlchemy-0.5.8-py2.6.egg/sqlalchemy/orm/strategies.py", line 586, in __call__ result = q.all() File "/usr/local/lib/python2.6/dist-packages/SQLAlchemy-0.5.8-py2.6.egg/sqlalchemy/orm/query.py", line 1267, in all return list(self) File "/usr/local/lib/python2.6/dist-packages/SQLAlchemy-0.5.8-py2.6.egg/sqlalchemy/orm/query.py", line 1422, in instances rows = [process[0](context, row) for row in fetch] File "/usr/local/lib/python2.6/dist-packages/SQLAlchemy-0.5.8-py2.6.egg/sqlalchemy/orm/query.py", line 2032, in main return _instance(row, None) File "/usr/local/lib/python2.6/dist-packages/SQLAlchemy-0.5.8-py2.6.egg/sqlalchemy/orm/mapper.py", line 1653, in _instance identitykey = identity_key(row) File "/usr/local/lib/python2.6/dist-packages/SQLAlchemy-0.5.8-py2.6.egg/sqlalchemy/orm/mapper.py", line 1594, in identity_key return (identity_class, tuple(row[column] for column in pk_cols)) Could this be related to the Dowser thread, accessing the garbage collector? Any hint on what I could check out? I'm running Python 2.6.2 on Xubuntu Jaunty. Thanks for your attention!
