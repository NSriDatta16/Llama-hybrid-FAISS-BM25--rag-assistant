[site]: stackoverflow
[post_id]: 4452059
[parent_id]: 4451282
[tags]: 
I have an answer, which you might or might not find helpful, concerning building large sites and webapps with a helping hand of XML/XSLT. So how we do it, how it can be done, just sharing experience. Backend Backend programmers make high-level business logic. The result is XML data available via http. Frontend A dialect of XML is used to make http calls to acquire XML data that comes from different sources. There are also a lot of other things like working with Request/Protocol/Cookies, kind of local datastorage (e.g. own scope for creating/setting "variables"), caching, threading and so on. Thus an XML document for every particular page is created in realtime (except of cached parts, of course). Common parts are shared via XInclude. Then it comes to XSLT. Well, nothing unusual here, except that an appreciable part of business logic is created. All in all it's a transforming of acquired XML input into HTML/CSS representation. XSLT is mainly done on serverside, rather than on client. This all is the area of responsibility of UI programmers. Clientside JS containing user experience logic is written by UI programmers aswell. AJAX calls, for example, go to XML gates, created on frontend, where backend response may be conviniently converted into HTML, JSON or anything else via XSLT, and than used on client. Whole picture User goes to a page (index.xml or index/ or you name it), XML data is collected from various sources, resulting XML is made and than transformed to HTML/CSS via XSLT. No visible indicators for a user, that XSLT even was there.
