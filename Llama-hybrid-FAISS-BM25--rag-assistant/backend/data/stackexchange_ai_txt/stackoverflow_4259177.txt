[site]: stackoverflow
[post_id]: 4259177
[parent_id]: 
[tags]: 
Eager Loading in .Net4 Link-to-EF; maybe like DataLoadOptions

I am using VS2010 .Net4 Linq-to-EntityFramework and would like to explicitly eager load some child data. I would like to provide functionality similar to that of DataLoadOptions or LoadWith which are available for Linq-to-SQL IIUC, but are not available to Linq-to-EF. (As an aside, this is so that I can record data to be played back later during testing. We have used lazy loading and I need to find these occurrences and replace with eager loading. The DataLoadOptions method would allow a clean way to implement this.) I am trying to provide a typesafe eager loading scheme as described at MosesOfEgypt blog . I have modified the generation of T4 and have what I think is the last problem. In .Net4, the entity properties return ObjectSet . But unfortunately, the Include function returns ObjectQuery which is the base class for ObjectSet . Here is a subset of the ObjectContext class as generated from modified T4 template: #region DataLoadOptions Functionality public DataLoadOptions LoadOptions { get; set; } private ObjectSet ApplyDataLoadOptions (string queryString) where TEntity : class { var query = CreateObjectSet (queryString); if (LoadOptions != null) { var members = LoadOptions.GetPreloadedMembers (); foreach (var member in members) { ********** query = query.Include(member.Name); } } return query; } #endregion #region ObjectSet Properties /// /// No Metadata Documentation available. /// public ObjectSet Addresses { get { if ((_Addresses == null)) { _Addresses = ApplyDataLoadOptions ("Addresses"); } return _Addresses; } } #endregion The line starting with " * " is where the cast from ObjectQuery to ObjectSet occurs. ANd this is an invalid upcast so if explicitly cast at designtime, will fail at runtime, unless I'm doing it wrong. One solution might be to write an extension method for ObjectSet.Include so that it returns ObjectSet instead of ObjectQuery . I would like to know how to find the source code of the ObjectQuery.Include function, if that is possible. And I'm not sure if these solution would work. Also wonder if there was a way to upcast the results of the Include function from ObjectQuery to ObjectSet . Again, not sure if this would work. Any help on implementing a DataLoadOptions capability for Linq-to-EF in .Net4 would be appreciated.
