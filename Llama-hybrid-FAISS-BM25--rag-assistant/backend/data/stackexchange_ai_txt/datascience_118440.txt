[site]: datascience
[post_id]: 118440
[parent_id]: 
[tags]: 
Early anomaly detection / Failure prediction on time series

My problem here is that I want to predict failures in advance with respect to their occurrence. I have sensors mounted on my machine and with a certain frequency, they send data to my database. Sometimes the machine fails and I want to find some anomaly patterns in the data before the actual failure. The idea is that if I notice in data some weird behavior I can stop the machine and do some maintenance to avoid its failure. The only thing I have as a label for a timestamp is when the system is down because of the failure. So for each timestamp, I only know if my machine either is working or not because of the failure. I don't know if before the failure I have a sequence of timestamps in which sensors are normal or not. What type of algorithm would you use in this case? I know the problem is not pretty standard. Below I leave my current idea. Currently, I am thinking about using different LSTMs Autoencoders. I would like to represent in a compressed feature vector the representation of my "normal" input, and with the reconstruction error of the autoencoder, I can understand whether the input fed behaves normally or not. The problem is that I am not sure if my input is normal or not, so here one doubt is that using subsequences that happened very far from the failure could simulate my normal behavior. Then another doubt is that I would use different autoencoders because I want to model different time periods of the sequence (minutes, hours, days), and then ensemble these different time-window encoders. What do you think? Could this be feasible?
