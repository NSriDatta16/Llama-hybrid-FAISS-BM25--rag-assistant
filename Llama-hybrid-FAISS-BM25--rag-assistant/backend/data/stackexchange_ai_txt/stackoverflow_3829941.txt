[site]: stackoverflow
[post_id]: 3829941
[parent_id]: 3829855
[tags]: 
Well, the - is called a "minus" :-) Seriously, everything between the square brackets is meant to calculate the size of sin_zero, which is a so-called padding. It's a member inside struct sockaddr_in , and it's just here to make sure that struct sockaddr_in is exactly of a certain size, most likely 16 bytes. The idea is to ensure that most(*) struct sockaddr variants are of the same size to avoid malloc problems. Quoting a document I found on the subject : The POSIX specification requires only three members in the structure: sin_family, sin_addr, and sin_port. It is acceptable for a POSIX-compliant implementation to define additional structure members, and this is normal for an Internet socket address structure. Almost all implementations add the sin_zero member so that all socket address structures are at least 16 bytes in size. (*) In an earlier version, I wrote all . @MaximYegorushkin correctly noted that this is not true, for example struct sockaddr_un is bigger. If you want the maximum size that fits all types of addresses, use sizeof(struct sockaddr_storage) . This struct exists only for this purpose (AFAIK).
