[site]: crossvalidated
[post_id]: 399047
[parent_id]: 398877
[tags]: 
Not sure I can adequately answer the stated questions, especially (3). But a few comments: Perhaps you should have a group factor in your model to distinguish the control group ( disfigurement of "none") from the other levels; because the design is different for the control group than for the others. emmeans() should detect a nesting structure of disfigurement nested in group . It may be OK to not have a group factor, but I think it'd help with interpretation. You state that face and disfigurement are arranged in a Latin square, for the subjects in the non-control group. But in a Latin square, you give up the ability to estimate the interaction fully. Thus, I think you should exclude face : disfigurement and situation : face : disfigurement in the model. Before plunging headlong into a sea of P values do some diagnostics to see how well the model fits the data. I do not have much experience with cumulative-link models, so I'm shaky on what those diagnostics might be; but you owe it to yourself to make sure the model you use actually explains the data and there are no glaring shortcomings; if the model is bad, then any post hoc analysis is garbage. Again, before plunging into comparisons and $P$ values, look at the results graphically. For example, emmip(model.clmm, situation ~ disfigurement | face) . This could help a lot in understanding which pairwise comparisons are actually going to be of interest. Some comparisons may be skipped simply because there are no practical differences in what you see. If there are strong interactions, you should not do marginal comparisons of each factor. Those don't make sense because it doesn't make sense to average over factors that interact with the one of interest. On the other hand, if you do emm = emmeans(model.clmm, ~ situation * disfigurement * face); emm you will obtain estimates and CIs for all factor combinations; then if you subsequently do pairs(emm) , you'll get pairwise comparisons of all of those estimates, which is an overwhelming number. You can reduce the number of comparisons considerably by doing separate comparisons of one factor, holding the others fixed: pairs(emm, simple = "each") . I'm no expert on ordinal models, but is the "symmetric" threshold justified? This is a pretty restrictive assumption, and it may not be what you think it is. It specifies that the cut points you estimate are arranged symmetrically; it does not specify that the underlying latent variable is symmetric; that requirement is already implicitly stated in your use of the default logistic link function.
