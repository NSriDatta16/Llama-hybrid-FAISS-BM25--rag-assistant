[site]: datascience
[post_id]: 89585
[parent_id]: 
[tags]: 
Should I give regularly-spaced or irregular-timestamped data to a price predicting neural network?

I am building an application to predict the price of an item. Data is collected at regular 5-minute intervals while the application is running. Unfortunately, there is downtime, so there is not a full track record of data points. I'm using a multi-layer perceptron network to do the prediction, my question is: Should I give the network continuous series of data? Or should I give it timestamped, but irregularly spaced data? index | timestamp | price ----- | --------- | ----- 1 | 5:20 | 0.80 2 | 5:25 | 0.78 3 | 5:30 | 0.66 4 | 5:35 | 0.72 5 | 6:24 | 0.91 6 | 6:29 | 0.89 7 | 6:34 | 0.92 Training with regularly spaced data would give prices 1-4, and 5-7 as separate data sets (the network sees '0.8, 0.78, 0.66, 0.72' and '0.91, 0.89, 0.92'). Training with irregularly spaced data would give the network '0.80 @ 5:20 , 0.78 @ 5:25 ... 0.92 @ 6:34' in one clump, but the network would know the times. Ideally, I'd like to be able to make a prediction at multiple distances into the future, not just "what will it be in 5 minutes' time". Note: The data I have access to each time I collect data, for both buy and sell, is 'orders placed', 'price per unit', 'units transacted in the last week', and 'avg volume of items per order.'
