[site]: stackoverflow
[post_id]: 5680315
[parent_id]: 5680188
[tags]: 
The stdout is a line buffered stream by default, this means you need to explicitly flush it. It is implicitly flushed on newline. This behavior is mandated by the C99 standard. This means in your first printf , the text is added to an internal buffer. This is done to improve efficiency, e.g. when printing lots of small text fragments. Your second printf contains a newline, and that causes the stream to get flushed. You can explicitly flush stdout via fflush(stdout); if you want. As an alternative you could also use the unbuffered stderr, as in fprintf(stderr, "bla bla bla"); , but as its name implies it is intended for errors and warnings. See also the SO question Why does printf not flush after the call unless a newline is in the format string? .
