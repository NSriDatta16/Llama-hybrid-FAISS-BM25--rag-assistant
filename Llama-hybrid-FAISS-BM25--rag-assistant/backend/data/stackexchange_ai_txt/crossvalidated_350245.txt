[site]: crossvalidated
[post_id]: 350245
[parent_id]: 347885
[tags]: 
The scikit-learn standard is to pass a design matrix $X \in \mathbb{R}^{n\times d}$ such that $n$ is the number of samples and $d$ the number of features, so you are passing the data in the right format. From your question, I presume you expect fit_transform( ) method to return the eigenvectors of the covariance matrix with the highest associated eigenvalue (i.e., the PCA projection matrix). However, fit_transform() instead returns the projected data; this is, the data matrix you passed multiplied by the projection matrix. Hence the output you get is $n\times 2$, as it represents your $n$ samples projected onto a two-dimensional output space. If you want to get the actual projection matrix, you can get that by accessing the components_ attribute of the PCA object (after you fit it, of course): components_ : array, shape (n_components, n_features)
