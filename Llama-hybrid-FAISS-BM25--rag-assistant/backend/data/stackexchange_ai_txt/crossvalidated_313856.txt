[site]: crossvalidated
[post_id]: 313856
[parent_id]: 270018
[tags]: 
XGBoost website answers your question with a good example, which is partially answered by jumboRumbo. As it says: In boosting, when a specific link between feature and outcome have been learned by the algorithm, it will try to not refocus on it (in theory it is what happens, reality is not always that simple). Therefore, all the importance will be on feature A or on feature B (but not both). You will know that one feature have an important role in the link between the observations and the label. It is still up to you to search for the correlated features to the one detected as important if you need to know all of them. So, as you remove one feature, you don't get to keep the exact order for feature importance again, unless the features were completely orthogonal (uncorrelated).
