[site]: stackoverflow
[post_id]: 1247979
[parent_id]: 1247950
[tags]: 
foreach($arr as $key => $value) { foreach($arr as $key2 => $value2) { if($value2 == $value && $key != $key2) { unset($arr[$key]); } } } It isn't the most elegant method, but it does exactly what you need it to do. The problem is you can't use array_unique recursively. This is another way from the PHP.net documentation comments (Great Code Snippets in there) function arrayUnique($myArray) { if(!is_array($myArray)) return $myArray; foreach ($myArray as &$myvalue){ $myvalue=serialize($myvalue); } $myArray=array_unique($myArray); foreach ($myArray as &$myvalue){ $myvalue=unserialize($myvalue); } return $myArray; }
