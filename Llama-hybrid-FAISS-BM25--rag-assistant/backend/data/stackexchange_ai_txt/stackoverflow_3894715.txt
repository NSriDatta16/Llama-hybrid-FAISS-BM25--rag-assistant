[site]: stackoverflow
[post_id]: 3894715
[parent_id]: 
[tags]: 
What's the fastest way to clear the isolatedstoragestore for a windows phone 7 application?

I'm currently working on an application which writes data to the IsolatedStorageStore. As part of the app, I'd like to implement a "clear all data/reset" button, but enumerating through all the files that exist and all the folders that exist is taking quite a bit of time. Is there a magic "reset" method or something I can use, or should I instead focus on optimizing the manual deletion process? Or can I get away with not providing such functionality, and leave it to the user to uninstall/reinstall the application for a reset? My hideous delete-all-files method is below: /// /// deletes all files in specified folder /// /// public static void ClearFolder(String sPath, IsolatedStorageFile appStorage) { //delete all files string[] filenames = GetFilenames(sPath); if (filenames != null) { foreach (string sFile in filenames) { DeleteFile(System.IO.Path.Combine(sPath, sFile)); } } //delete all subfolders if directory still exists try { foreach (string sDirectory in appStorage.GetDirectoryNames(sPath)) { ClearFolder(System.IO.Path.Combine(sPath, sDirectory) + @"\", appStorage); } } catch (DirectoryNotFoundException ex) { //current clearing folder was deleted / no longer exists - return return; } //try to delete this folder try { appStorage.DeleteDirectory(sPath); } catch (ArgumentException ex) { } } /// /// Attempts to delete a file from isolated storage - if the directory will be empty, it is also removed. /// /// /// public static void DeleteFile(string sPath) { using (IsolatedStorageFile appStorage = IsolatedStorageFile.GetUserStoreForApplication()) { appStorage.DeleteFile(sPath); String sDirectory = System.IO.Path.GetDirectoryName(sPath); //if this was the last file inside this folder, remove the containing folder if (appStorage.GetFileNames(sPath).Length == 0) { appStorage.DeleteDirectory(sDirectory); } } } /// /// Returns an array of filenames in a given directory /// /// /// public static string[] GetFilenames(string sDirectory) { using (IsolatedStorageFile appStorage = IsolatedStorageFile.GetUserStoreForApplication()) { try { return appStorage.GetFileNames(sDirectory); } catch (DirectoryNotFoundException) { return null; } } }
