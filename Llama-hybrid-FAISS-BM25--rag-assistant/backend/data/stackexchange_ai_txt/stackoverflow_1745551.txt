[site]: stackoverflow
[post_id]: 1745551
[parent_id]: 1745372
[tags]: 
A real BSTR is: temporarily allocated from the COM heap (via SysAllocString() and family) a data structure in which the string data is preceded by its length, stored in a 32-bit value. passed as a pointer to the fifth byte of that data structure, where the string data resides. See the documentation: MSDN: BSTR Most functions which accept a BSTR will not crash when passed a BSTR created the simple assignment. This leads to confusion as people observe what seems to be working code from which they infer that a BSTR can be initialized just like any WCHAR * . That inference is incorrect. Only real BSTRs can be passed to OLE Automation interfaces. By using the CComBSTR() constructor, which calls SysAllocString() , your code will create a real BSTR . The CComBSTR() destructor will take care of returning the allocated storage to the system via SysFreeString() . If you pass the CComBSTR() to an API which takes ownership, be sure to call the .Detach() method to ensure the BSTR is not freed. BSTRs are not reference counted (unlike COM objects, which are), and therefore an attempt to free a BSTR more than once will crash.
