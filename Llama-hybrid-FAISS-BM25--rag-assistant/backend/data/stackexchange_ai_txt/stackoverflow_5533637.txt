[site]: stackoverflow
[post_id]: 5533637
[parent_id]: 5105972
[tags]: 
JsTestDriver differs from some of the other test frameworks in that it doesn't use external HTML pages as input to provide the HTML fixtures. It instead provides the ability to create (or append) HTML fragments as part of the test case definition using its HtmlDoc feature. http://code.google.com/p/js-test-driver/wiki/HtmlDoc This makes it possible to store HTML with the test, for example: TestCase("Test HtmlDoc Features", { "test creating an isolated dom fragment": function() { /*:DOC foo = foo */ assertEquals("Foo is a dom fragment with id 'demo'", this.foo.id, "demo"); }, "test appending HTML to the body": function() { /*:DOC += foo */ assertEquals("HTML is appended to the body", document.getElementById("demo").innerHTML, " foo "); } }); There are unfortunately some limitations with their approach. For example, while inline styles can be applied to the HTML tags directly, inserting style blocks or link tags to external CSS files does not apply the CSS styles to the generated markup. This makes it difficult to include CSS in your test case, for tests where you want to test getting or setting style properties on DOM elements.
