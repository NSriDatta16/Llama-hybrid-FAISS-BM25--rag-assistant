[site]: stackoverflow
[post_id]: 3726432
[parent_id]: 
[tags]: 
String comparison algorithm, relevancy, how much "alike" 2 strings are

I have 2 sources of information for the same data (companies), which I can join together via a unique ID (contract number). The presence of the second, different source, is due to the fact that the 2 sources are updated manually, independently. So what I have is an ID and a company Name in 2 tables. I need to come up with an algorithm that would compare the Name in the 2 tables for the same ID , and order all the companies by a variable which indicates how different the strings are (to highlight the most different ones, to be placed at the top of the list). I looked at the simple Levenshtein distance calculation algorithm, but it's at the letter level, so I am still looking for something better. The reason why Levenshtein doesn't really do the job is this: companies have a name, prefixed or postfixed by the organizational form (LTD, JSC, co. etc). So we may have a lot of JSC "Foo" which will differ a lot from Foo JSC. , but what I am really looking for in the database is pairs of different strings like SomeLongCompanyName JSC and JSC OtherName . Are there any Good ways to do this? (I don't really like the idea of using regex to separate words in each string, then find matches for every word in the other string by using the Levenshtein distance, so I am searching for other ideas)
