[site]: crossvalidated
[post_id]: 118208
[parent_id]: 118080
[tags]: 
OK, the only thing I can think of (in the absence of any continuous predictors) is link misspecification. Tried this using the logit-power link code from the linked question , but I can't actually get it to look like your data (it's much noisier). Logit-power (uses (fragile) internal C calls for speed; could use plogis() , qlogis() for readability and stability instead) logitpower Comparing the shape of logit-power links, tweaked to have approximately the same x-intercept: par(las=1,bty="l") curve(logitpower(1)$linkinv(x),from=-4,to=4) curve(logitpower(0.5)$linkinv(x-1),add=TRUE,col=2) curve(logitpower(2)$linkinv(x+0.8),add=TRUE,col=4) legend("bottomright",bty="n",lty=1,col=c(1,2,4), paste0("lambda=",c(1,0.5,2))) abline(v=0,lty=2) This suggests that the pattern observed above (underpredict for values 0.5) could come from a logit-power link with $\lambda>1$ However, when we try simulating and fitting with regular logit and logit-power links, it doesn't reproduce your pattern (and doesn't seem to make much difference): ff Binned residual plots: library("arm") par(mfrow=c(1,2)) binnedplot(predict(fit1,type="response"),resid(fit1),nclass=100) binnedplot(predict(fit2,type="response"),resid(fit2),nclass=100)
