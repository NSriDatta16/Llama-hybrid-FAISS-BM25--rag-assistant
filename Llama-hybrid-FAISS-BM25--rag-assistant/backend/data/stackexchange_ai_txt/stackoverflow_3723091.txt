[site]: stackoverflow
[post_id]: 3723091
[parent_id]: 3722445
[tags]: 
I've been involved a system that presented a similar problem. Our resolution was a Schedule which defined an overarching start & end time, each of which had a collection of (up to seven) ScheduleDay which represent the days of the week. Schedule StartDateTime EndDateTime ScheduleDay DayOfWeek (enum for Mon, Tues etc) StartTime (time of day, expressed as minutes) EndTime (time of day, expressed as minutes) This allows time periods such as '1pm - 3pm every Tuesday between 1 March 2010 and 10 September 2010'; e.g. reasonably complex but still pattern-forming time periods. This is still a bit clunky, though. What you really want is a data representation of a gant chart; a collection of 'on' and 'off' periods that form time intervals. If I were designing this system I'd consider storing a unary function that takes a DateTime and returns a bool which describes whether the given time exists in the time period. Your business object needs a delegate; it might just be if (date.Year == 2010) return true else return false , or it might be extremely complex depending on the time period you are representing, but it allows to completely extensible time periods (not restrictions on what could be represented). Unfortunately I don't know how this could be queried inside the database, and it obviously isn't a POCO.
