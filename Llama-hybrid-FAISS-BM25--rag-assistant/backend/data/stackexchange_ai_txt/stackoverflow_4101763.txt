[site]: stackoverflow
[post_id]: 4101763
[parent_id]: 4101394
[tags]: 
In theory, according to RFC 4329 , application/javascript . The reason it is supposed to be application is not anything to do with whether the type is readable or executable. It's because there are custom charset-determination mechanisms laid down by the language/type itself, rather than just the generic charset parameter. A subtype of text should be capable of being transcoded by a proxy to another charset, changing the charset parameter. This is not true of JavaScript because: a. the RFC says user-agents should be doing BOM-sniffing on the script to determine type (I'm not sure if any browsers actually do this though); b. browsers use other information—the including page's encoding and in some browsers the script charset attribute—to determine the charset. So any proxy that tried to transcode the resource would break its users. (Of course in reality no-one ever uses transcoding proxies anyway, but that was the intent.) Therefore the exact bytes of the file must be preserved exactly , which makes it a binary application type and not technically character-based text . For the same reason, application/xml is officially preferred over text/xml : XML has its own in-band charset signalling mechanisms. And everyone ignores application for XML, too. text/javascript and text/xml may not be the official Right Thing, but there are what everyone uses today for compatibility reasons, and the reasons why they're not the right thing are practically speaking completely unimportant.
