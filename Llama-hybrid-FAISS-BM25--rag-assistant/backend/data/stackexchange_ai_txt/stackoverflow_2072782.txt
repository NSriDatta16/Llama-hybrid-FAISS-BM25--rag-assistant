[site]: stackoverflow
[post_id]: 2072782
[parent_id]: 2072036
[tags]: 
I find it interesting that in all these answers, only one person actually suggested doing what the warning says . The warning is telling you how to fix the problem; pay attention to it. Bitwise-or operator used on a sign-extended operand; consider casting to a smaller unsigned type first The bitwise or operator is being used on a sign-extended operand: the int. That's causing the result to be converted to a larger type: long. An unsigned type smaller than long is uint. So do what the warning says; cast the sign-extended operand -- the int -- to uint: result = (int)(0x80000000 | (uint) operand); Now there is no sign extension. Of course this just raises the larger question: why are you treating a signed integer as a bitfield in the first place? This seems like a dangerous thing to do.
