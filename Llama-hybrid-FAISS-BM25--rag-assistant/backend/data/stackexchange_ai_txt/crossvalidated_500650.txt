[site]: crossvalidated
[post_id]: 500650
[parent_id]: 500640
[tags]: 
You can apply exactly the same method for neural networks: sample data from some distribution, sample parameters, make prediction using this data and the parameters. Standard neural networks are not probabilistic models, so thereâ€™s no notion of error term, for this you would need Bayesian neural network. The difference would be that the untrained NN would produce the "noise" data, since it is a complicated non-linear function with random parameters. With linear models, the results won't be that crazy, because the model is simpler. Usually if you want to simulate the data, you want to have control on it, you want to do this based on some kind of model that approximates the reality. Neural networks can approximate any function, but a priori, before being trained, they do not represent any functional relationship that could be used to approximate reality. So usually you would rather need some kind of model that makes reasonable assumptions about reality for doing such sampling, to get reasonable simulated data.
