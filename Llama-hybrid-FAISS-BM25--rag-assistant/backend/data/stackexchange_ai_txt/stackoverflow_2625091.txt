[site]: stackoverflow
[post_id]: 2625091
[parent_id]: 2625006
[tags]: 
That, of course, is inherently implementation defined. Assuming it's a question of how somebody would implement a dynamic array, in general, it'd be something like this: push_back checks capacity() and ensures it's at least one larger than size() . If there is no capacity for the new element, the vector reallocates it's entire underlying storage, copying over the contents of the old storage to the new storage. The old storage is deallocated. The new element is copied to the end of the dynamic array. Some STL implementations will elide some of the copies by using swaps (i.e. for containers of containers), but for the most part that's exactly how it works.
