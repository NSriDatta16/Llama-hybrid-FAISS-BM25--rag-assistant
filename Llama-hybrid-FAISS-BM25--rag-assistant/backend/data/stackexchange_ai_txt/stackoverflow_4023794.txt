[site]: stackoverflow
[post_id]: 4023794
[parent_id]: 
[tags]: 
Forward declaration just won't do

Below are two fragments (ready to compile) of code. In first fragment in which I'm using only forward declaration for a struct while deleting pointer to this struct from a Base class dtor for a Guest class isn't invoked. In the second fragment when instead of forward declaration I use full definition of this Guest class using delete in Base works ase intended. Why? Why does it make a difference? Isn't forward declaration suppose to be just a note for a compiler saying that the definition of this class/struct is somewhere else? I'm very surprised that it just doesn't work intuitively. //First just forward dclr #include "stdafx.h" #include using std::cout; struct Guest; struct Base { Guest* ptr_; Base(Guest* ptr):ptr_(ptr) { cout //Second - full def #include "stdafx.h" #include using std::cout; struct Guest { Guest() { cout
