[site]: stackoverflow
[post_id]: 683379
[parent_id]: 683126
[tags]: 
Although the majority of if statements will end up being conditional branches, for very simple cases where neither branch has any side-effects, an optimising compiler may generate code which executes both and calculates the result rather than only executing one. This can have advantages in pipelined architectures where the average cost of calculating both branches is less than the average cost due to branch prediction misses. For example, the code: int x; if ( y can be compiled as if it were written: y -= 5 int r = y which can be converted to machine code without any branches
