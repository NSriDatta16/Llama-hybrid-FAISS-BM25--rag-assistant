[site]: stackoverflow
[post_id]: 5528218
[parent_id]: 5528022
[tags]: 
I'm a C# guy, but Linq is Linq, so I figured I'd take a stab. I was able to match your results by putting the following in your red section: Dim outStuff = From t In Products.SelectMany(Function(p) p.tags) Group By tagName = t.Name Into g = Group, Count() Order By Count Descending And then I used For Each t In outStuff Console.WriteLine("Tag: {0} - Count: {1}", t.tagName, t.Count) Next to do the output. I'm SURE this isn't the most graceful or elegant VB, and you can probably refine the Linq to be a little prettier, but it should be a good start for you. The sample code in your question helped a lot to get this done. For a quick explanation, if you're not familiar with SelectMany or Group By, they do a couple of different and extremely useful things. SelectMany works like Select, except that when applied to a collection property, the contents of all of the collection properties are flattened out and returned as a single collection of the appropriate type, instead of being returned as a collection of collections. In this case, it gets all the tags from all the products, and puts them into one collection to work with. Group By does sort of the opposite, and takes a big flat group, and turns it into a collection of collections, grouped according the criteria designated (t.Name in this case).
