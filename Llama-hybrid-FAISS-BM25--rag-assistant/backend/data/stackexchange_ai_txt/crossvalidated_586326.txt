[site]: crossvalidated
[post_id]: 586326
[parent_id]: 
[tags]: 
Compare univariate ARIMA and LSTM predictions

I am trying to learn how to make predictions for a univariate time series using an LSTM neural network. I know how to work with time series using traditional ARIMA models but with the LSTM I am getting confused. Below I have an example. As an example, consider that I have a univariate dataset with 1000 data points and that I want to predict the next 12 points. It is monthly data. ARIMA What I would do was to split the 1000 data points into two sets, one of 988 data points and another one of 12 points. So I would fit the model in 988 data points and make a 12 data points prediction. After, I would compare the prediction with the other 12 data points I previously split For an ARIMA model, I would use a package such as auto.arima in R and make a code like that: my_data # Initial data with 1000 data points train_data = my_data[1: 988] #first 988 data points test_data = my_data[989: 1000] #last 12 data points y = ts(my_data, freq = 12, start=c(1913,1)) #start date of the training series yt = window(y, end = c(1995,04)) #end date of the training series yfit = auto.arima(yt) #fit the model yfor = forecast(yfit, h = 12) #predict the next 12 data points rmse(test_data, yfor$mean) #Calculate the RMSE of the predictions vs test data LSTM For the case of LSTM, I need to put scale the data and put it in the sliding window format, with 12 data points and input and 12 as output. After I fit the model in the training data set, I predict the data in the test dataset and compare the predicted results with the hold-out dataset. Is it the right way to do it? my_data # Initial data with 1000 data points train_data = my_data[1: 976] #first 976 data points test_data = my_data[977: 988] #test dataset with 12 data points holdout_data = my_data[989: 1000] #last 12 data points for comparing Is it not possible to simply fit the model and make a prediction like what was done in the ARIMA case? If I want to compare my ARIMA with my LSTM I will have problems because I fitted the models in different datasets
