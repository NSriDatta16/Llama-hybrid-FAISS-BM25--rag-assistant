[site]: stackoverflow
[post_id]: 2094394
[parent_id]: 2054171
[tags]: 
This problem is known as Unit Test fragility. More often than not is caused by the coupling between your tests and the class under test is too high. You should treat your test as a client of a piece of code in the same way that other code is a client of it. The test should have certain expectations of how the code works, but it shouldn't have to know the details. If you need to know too much about how a class works to test it then there probably needs to be another layer of abstraction between you and the code you are testing. Feel free to create abstraction layers just for testing. Test code is as important as production code and should be as well written and designed as anything else. Sometimes a layer of indirection can make your tests less fragile and mean that when something breaks the change is only in one place.
