[site]: crossvalidated
[post_id]: 187286
[parent_id]: 
[tags]: 
Translating a TensorFlow LSTM into synapticjs

I'm working on implementing an interface between a TensorFlow basic LSTM that's already been trained and a javascript version that can be run in the browser. The problem is that in all of the literature that I've read LSTMs are modeled as mini-networks (using only connections, nodes and gates) and TensorFlow seems to have a lot more going on. The two questions that I have are: Can the TensorFlow model be easily translated into a more conventional neural network structure? Is there a practical way to map the trainable variables that TensorFlow gives you to this structure? I can get the 'trainable variables' out of TensorFlow, the issue is that they appear to only have one value for bias per LSTM node, where most of the models I've seen would include several biases for the memory cell, the inputs and the output.
