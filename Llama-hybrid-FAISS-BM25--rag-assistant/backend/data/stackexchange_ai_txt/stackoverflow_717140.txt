[site]: stackoverflow
[post_id]: 717140
[parent_id]: 716540
[tags]: 
First, realize you are starting completely over if you switch. You could transition to iPhone, Android or Symbian, but I wouldn't stake your livelihood on it unless you are used to freelancing wages and payments. Depends on your personality and opportunity. Second, establish and work on a network in the area you wish to be employed. Be kind, be quiet, be specific: Your opportunities will most likely be related to who you know and how much they want to help you. Too many programmers who spend their life in front of a screen forget that the employer and client are not compilers. Be nice! From a ground-up perspective, you might look into the PHP/MySQL winestore that is in this book: Web Database Applications with PHP and MySQL This is a fairly step-by-step (if older) approach to learning WHAT a web-based program does, and an approach in how to get it done. Don't worry about AJAX and other web 2.0 stuff until you have a grasp on the basics; it'll just be confusing, in my opinion. Atlassian, which builds web-based issue tracking software written in Java, has an open-source development kit and a 30-day trial. If you're looking to see some code and work in a fairly developed area, you might try it out: http://confluence.atlassian.com/display/DEVNET/ Web development is a different skillset than embedded, although you might find a way to leverage your ability to concentrate on detail and troubleshooting if you work in Python or Ruby. Web programming by nature is linking a bunch of disparate systems and protocols together, where I would imagine embedded might do so, but in a much more constrained environment with a lot fewer choices and limited reign for mischief. Typically, web programming based on kitchen-sink languages (PHP, Java, C#) seem to throw power at problems, so you would ideally find a way to leverage the skill you've acquired with a language that is predicated on performance, not bells and whistles. There are far more Java and C# positions than Python though, so pick you (misery) poison carefully. PHP is decent if you're looking to get into the startup/low-middle-end realm, while Java/C# will pay better but the circumstances are typically much different (corporate/commercial environments what they are). You might look at getting certified in Java or C# (the PHP cert is a joke). They won't get you a job, but since you're already knowledgeable, just not in the area you are looking to improve, cert course(s) will help you transition your toolset and terminology, plus explain the purpose. Some employers do care too. Java Certification (Sun school) C# Certification For something fun and Python/Ruby-like, think about picking up Groovy, a Java-based interpreted language. http://groovy.codehaus.org/ This is a good resource list if you're to get into Java: Essential Java resources
