[site]: stackoverflow
[post_id]: 397916
[parent_id]: 376236
[tags]: 
Firstly, construct the query using an explicit JOIN syntax, rather than the cartesian product. It probably won't make any difference performance-wise for any modern optimiser, but it does make the information on how the JOINs work more accessible for the programmers. SELECT Player.Name, Game.Date FROM Player INNER JOIN Game ON Game.WinnerPlayerID = Player.PlayerID WHERE Game.WinnerFrags > Game.TotalFrags/2 ORDER BY Player.Name Which will give us all the players sorted by name who have take more frags in a game than all the other players in the game put together, and the dates of the games. Putting both the conditions are in the JOIN probably won't affect performance either, since the optimiser is likely do the filtering as part of the JOIN anyway. It does start to matter for LEFT JOINs though. Lets say we're looking for how many games the week's top ten players have ever won by the margin described above. Since it is possible that some of them have never one this spectacularly, we'll need LEFT JOIN. SELECT Player.WeekRank, Player.Name, COUNT(Game.*) AS WhitewashCount FROM Player LEFT JOIN Game ON Game.WinnerPlayerID = Player.PlayerID WHERE Player.WeekRank >= 10 AND Game.WinnerFrags > Game.TotalFrags/2 GROUP BY Player.WeekRank, Player.Name ORDER BY Player.WeekRank Well, not quite. The JOIN will return records for each game played by a player, or the player data and NULL game data if the player has played no games. These results will get filtered, during or after the JOIN depending on the optimiser's decision, based on the frag criteria. This will eliminate all the records that don't meet the frag criteria. So there will be no records to group for players who have never had such a spectacular win. Effectively creating an INNER JOIN .... FAIL. SELECT Player.WeekRank, Player.Name, COUNT(Game.*) AS WhitewashCount FROM Player LEFT JOIN Game ON Game.WinnerPlayerID = Player.PlayerID AND Game.WinnerFrags > Game.TotalFrags/2 WHERE Player.WeekRank >= 10 GROUP BY Player.WeekRank, Player.Name ORDER BY Player.WeekRank Once we move the frag criteria into the JOIN the query will behave correctly, returning records for all players in the week's top ten, irrespective of whether they've achieved a whitewash. After all of that, the short answer is: For INNER JOIN situations it probably doesn't make a to performance difference where you put the conditions. The queries are more readable if you separate the the join and filtering conditions though. And getting a condition in the wrong place can seriously mess up the results of a LEFT JOIN.
