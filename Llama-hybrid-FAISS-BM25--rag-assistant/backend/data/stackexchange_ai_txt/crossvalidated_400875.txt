[site]: crossvalidated
[post_id]: 400875
[parent_id]: 400860
[tags]: 
Calculate the center of all the data. Calculate the center of each set. Offset each set to center them within the plotting area. We don't offer programming help in this answer, but I'll use code to explain the answer's appearance. Pseudocode, incomplete non-working example: /* Calculate the center of all the data. */ MaxX = 655; MinX = 632; MidX = (MaxX + MinX) / 2; MaxY = 60; MinY = 10; MidY = (MaxY + MinY) / 2; /* Calculate the center of each set. */ / * Shown for the first one only, use a loop to calculate for all four. */ X_1_A = (x_1st(1) - x_1st(4)) / 2; X_1_B = (x_1st(2) - x_1st(5)) / 2; X_1_C = (x_1st(3) - x_1st(6)) / 2; X_1 = Average (X_1_A, X_1_B, X_1_C); Y_1_A = (y_1st(1) - y_1st(4)) / 2; Y_1_B = (y_1st(2) - y_1st(5)) / 2; Y_1_C = (y_1st(3) - y_1st(6)) / 2; Y_1 = Average (Y_1_A, Y_1_B, Y_1_C); /* Now loop back for each one, not shown to reduce complexity of multiple indexes */ /* Now add X_1 and Y_1 to the values of x_1st(1 to 6) and y_1st(1 to 6) */ /* Do the same for: x_2nd y_2nd x_3rd y_3rd x_4th y_4th (for 3rd and 4th value it will offset left) */ All four should be centered on approximately: X = ((660 - 625) / 2) + 625 = 642.5 Y = ((60 - 10) / 2) + 10 = 35 or MidX and MidY, depending on preferance to chart domain or data domain centering. When you change the data and the range graphed you should still end up with your data sets centered. That proves you've written the algorithm correctly without dependencies on the data (as there are in the example). The correct way, to preserve all the data rather than move or scale, is to rotate on each axis until the objects overlap as much as possible; you might additionally rotate each set to flatten it. Here is rotation on one axis, if you had wrote your example in Octave there are online plotters which everyone could use to offer an answer. One more rotation and they will sit on top of each other.
