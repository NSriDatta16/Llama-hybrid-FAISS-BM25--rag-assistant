[site]: datascience
[post_id]: 88240
[parent_id]: 88190
[tags]: 
Thank you for all the suggested answers, they helped. What I ended up doing is the following: Firstly I changed my function that compares between the different models like so: def compareAlgorithmsFeatureSelection(X_train, y_train): # prepare configuration for cross validation test harness seed = 7 # prepare models models = [] models.append(('LR', LogisticRegression())) models.append(('SVM', SVC())) models.append(('Linear SVC', LinearSVC())) models.append(('ADABOOST', AdaBoostClassifier())) models.append(('DT', DecisionTreeClassifier())) names = [] precision_results=[] recall_results=[] auc_results=[] NumOfKFeatures=[10,20,30,40,50] for name, model in models: names.append(name) precision_model_results = [] recall_model_results = [] auc_model_results = [] for x in NumOfKFeatures: # get X_train and X_test after applying FS fs = SelectKBest(score_func=mutual_info_classif, k=x) fs.fit(X_train, y_train) X_train_fs = fs.transform(X_train) X_test_fs = fs.transform(X_test) # make splits for cross-validation skf = StratifiedKFold(n_splits=5, shuffle=False, random_state=seed) # calculate scores precision_cv_results = model_selection.cross_val_score(model, X_train_fs, y_train, cv=skf, scoring='precision') recall_cv_results = model_selection.cross_val_score(model, X_train_fs, y_train, cv=skf, scoring='recall') auc_cv_results = model_selection.cross_val_score(model, X_train_fs, y_train, cv=skf, scoring='roc_auc') precision_model_results.append(precision_cv_results.mean()) recall_model_results.append(recall_cv_results.mean()) auc_model_results.append(auc_cv_results.mean()) # append scores to final results list only after completed for an algorithm and all the feature subsets precision_results.append(precision_model_results) print(precision_results) recall_results.append(recall_model_results) auc_results.append(auc_model_results) return precision_results, recall_results, auc_results, names I then do the following to plot the score results for each feature subset using tips from answers provided by @Oxbowerce @10xAI and @Julio Jesus,: import matplotlib.pyplot as plt plt.style.use("seaborn-whitegrid") subsets=[10,20,30,40,50] fig = plt.figure() fig.suptitle("Precision") ax = fig.add_subplot(111) for x in range(len(subsets)): ax.plot(subsets, precision_results[x], label = names[x], marker = "o", linestyle = "--") ax.set_ylabel("Precision") ax.set_xlabel("Feature Selection Subsets") ax.legend(loc = "best") plt.show() To plot recall and auc I just replace precision_results with the relevant results list.
