[site]: stackoverflow
[post_id]: 2025090
[parent_id]: 2025072
[tags]: 
It would be impossible to know if a command ended without information going back to the agent issuing the commands with some sort of completion indication. Consider how a *nix terminal works. The *nix terminal was developed exactly for the same kind of situation -- issuing remote commands to another PC over some sort of pipe. In that case, how does the user know she can type another command? In the default case, it lets you know its done by giving you a prompt to issue another command. In an edge case it lets you have the process fork from the shell, in which you get an indication that the job has completed. It seems the simplest solution is to echo something along the lines of " > complete". Some basic psuedocode for (command in commands) { IssueCommand(command); result = ""; while (result != "complete") { // read serial port append to result result += read(serialPort); } }
