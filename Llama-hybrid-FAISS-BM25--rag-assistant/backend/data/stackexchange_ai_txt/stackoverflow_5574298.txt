[site]: stackoverflow
[post_id]: 5574298
[parent_id]: 5574183
[tags]: 
SQLite has an unorthodox dynamic-typing system where the type of a column doesn't determine the type of the actual data in the column, it merely encourages SQLite to convert data to a particular type if that happens to be possible. When trying to compare a string and a number, if the string isn't a well-formed number then it's considered greater than the number. So an obvious guess is that for some reason these time values aren't actually numbers but strings. That's puzzling for two reasons. (1) Since the time column has type decimal , it should have "numeric" affinity, which should get anything stored in it that looks like a number converted to be a number. (2) Even if the values were stored as strings, they should still have been converted to numbers for comparing against 0.0004. Why might they not have been converted? Possibility #1: maybe they contain extra spaces or something of the sort. Possibility #2: maybe your locale wants to use something other than . as the decimal point. (There may well be other possibilities that I haven't thought of.) If you insert a record into the table that actually contains a number -- insert into table_a (id,time) values (999,0.0001) or something of the sort -- does that record get included in your selection?
