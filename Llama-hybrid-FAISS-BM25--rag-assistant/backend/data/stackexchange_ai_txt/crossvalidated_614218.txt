[site]: crossvalidated
[post_id]: 614218
[parent_id]: 614136
[tags]: 
One possible approach that I've been investigating is the use of the second derivative (double differencing) with averaging and/or summing the values (more on that in a bit). Here's an example in Python: import numpy as np d = np.array([0,7.5,9,9,9,8,8,8,8,8,8,8]) #flattens curve avg = np.average(np.diff(np.diff(d))) # = -0.75 sum = np.sum(np.diff(np.diff(d))) # = -7.5 The average provides better "trend" of the second derivative IMHO. The summation seems better at "locating" the approximate local maxima/minima "point". Here's how to interpret the values: avg = 0 -> flat trend avg decreasing trend avg > 0 -> increasing trend We could make this a little more tolerant by assuming flatness is between $\pm 1$ if necessary. For all different time series patterns (more than about a 100 in my data set) this seems to provide a decent solution to address the need that is at the right level of simplicity. For now, this is what I will be going with unless someone provides a better answer. I may be inclined to include both the "overall average" of the entire time series independent variable plus the average of the second derivative. I will surely do a correlation test to ascertain if I should only keep one of them, but I have a feeling that both could be valuable (though I'm not sure if this commonly practiced).
