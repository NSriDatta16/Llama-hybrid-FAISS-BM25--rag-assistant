[site]: crossvalidated
[post_id]: 187517
[parent_id]: 
[tags]: 
Pairwise Learning to Rank SVM - class labeled 0

Recently, I am doing research about learning to Rank. Basically, we want to find the pattern for the sample as follows, $$S = \{(q_i, d_{ij}), (y_{ij}) \}$$ where $q_i$ denotes the i-th text-based query, $d_{ij}$ denotes the j-th text document retrieved for i-th query, $y_{ij} \in \{1, 2, 3, ... K \}$ denotes an order between query $q_i$ and the document $d_{ij}$. The numeric vector $\mathbf{x}_{ij} = \phi(q_i, d_{ij})$ is often created based on pair $(q_i, d_{ij})$. Then, the sample is like this, $$S = \{x_{ij}, y_{ij} \}$$ Pairwise learning to rank modify this sample as following form, $$S' = \{ (x_{ij} - x_{il}), (y_{ij} - y_{il}) \}$$ In this light, we can see that $(y_{ij} - y_{il})$ equals to $\{ -1, 0, 1 \}$. Then SVM classification can solve this problem. However, I don't understand why SVM can solve this problem directly. If the target data is $\{-1, 1 \}$, I think SVM can do it. But I read several article they just ignoring the class 0 and formulating this problem as SVM model. Can someone give me the interpretation for this problem?
