[site]: stackoverflow
[post_id]: 5761143
[parent_id]: 5761036
[tags]: 
You should override the getView method in your ListAdapter implementation, and make sure that you always assign a new value to the view that you are returning (or at least always update it to contain the proper data). @Override public View getView(int position, View convertView, ViewGroup parent) { convertView = inflater.inflate(R.layout.list_row, parent, false); //set the necessary data in your TextViews, Checkboxes, etc... return convertView; } If you don't inflate your item renderer, then you can instantiate it from code, like: @Override public View getView(int position, View convertView, ViewGroup parent) { convertView = new TextView([...]); convertView.setText(textBasedOnYourData); return convertView; } Edit As @CommonsWare noted, attention should be payed to the recycling of your list item renderer. So instead of instantiating it every time, you should check whether it already exists or not, and update the underlying TextView afterwards. So I'd suggest give a try to this slightly modified getView implementation: @Override public View getView(int position, View convertView, ViewGroup parent) { if (convertView == null) { LayoutInflater vi = (LayoutInflater) getContext(). getSystemService(Context.LAYOUT_INFLATER_SERVICE); convertView = vi.inflate(R.layout.list_row, null); } ListTask list_item = items.get(position); TextView item_name = (TextView) convertView.findViewById(R.id.item_name); //the item should never be null, but just in case: item_name.setText((list_item == null) ? "" : list_item.getTitle()); return convertView; }
