[site]: stackoverflow
[post_id]: 2999803
[parent_id]: 2998166
[tags]: 
I have developed a working solution to this problem that uses session_set_save_handler() and a set of custom session storage methods that check for content in the $_SESSION array before writing out session data. If there is no data to write for the session, then header('Set-Cookie:', true); is used to prevent PHP's session-cookie from being sent in the response. The latest version of this code as well as documentation and examples are available on GitHub . In the code below, the important functions that make this work are lazysess_read($id) and lazysess_write($id, $sess_data) . While this solution works and is mostly transparent to applications including it, it requires rewriting the entire session-storage mechanism rather than relying on the built-in storage mechanisms with a switch to save or not.
