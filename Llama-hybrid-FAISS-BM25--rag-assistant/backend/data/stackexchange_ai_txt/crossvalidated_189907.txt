[site]: crossvalidated
[post_id]: 189907
[parent_id]: 
[tags]: 
XG Boost vs Random Forest for Time Series Regression Forecasting

I am using R's implementation of XGboost and Random forest to generate 1-day ahead forecasts for revenue. I have about 200 rows and 50 predictors. (As I go further in time I have more data so more rows). The XGBoost model with the below parameters is 6% worse than an off the shelf random forest model with respect to the mean square error. Furthermore, the random forest model is slightly more accurate than an autoregressive time series forecast model. (I haven't tried Arimax yet tbh). For Xgboost, I tried changing eta to 0.02 and num_rounds to 8,000, but now it takes a long time to run. Is there some kind of guide that I can use to improve the forecast accuracy of the xgboost model? Am I using the multi-core feature properly? I feel as though I am reaching around in the dark with marginal payoff. If it helps, I am using a core I7 with 12gb of ram, running Windows 7 Professional. I appreciate your assistance! rf.mod = randomForest(act ~ ., data = train) rf.pred = predict(rf.mod, newdata = test) ##################################### train_x
