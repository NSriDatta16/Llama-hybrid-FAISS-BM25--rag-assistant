[site]: stackoverflow
[post_id]: 3112699
[parent_id]: 
[tags]: 
How can I avoid a deadlock between these two SQL statements?

I have two stored procedures running in separate threads, running on SQL Server 2005. One procedure inserts new rows into a set of tables and the other procedure deletes old data from the same set of tables. These procedures are running into a deadlock on the tables DLevel and Model . Here is the schema: (source: barramsoft.com ) Table DFile : Primary Key = DFileID Table DLevel : Primary Key = DLevelID, Foreign Key: DFileID Table Model : Primary Key = ModelID, Foreign Key: DFileID Table ELement : Primary key = ElementID, Foreign Key1: DFileID, Foreign Key2: DLevelID I have isolated the exact two SQL statements (one from each stored procedure) that are causing the deadlock. I have seen the deadlock reported by either of the procedures. I use top (1000) in both cases and both statements are executed in a loop until they complete with no rows left to delete/insert. SQL Statement 1: while (...) begin delete top (1000) from DLevel where DFileID = @fileID1 ... end SQL Statement 2: while (...) begin insert into Element (ElementID, DFileID, LevelNum, ...) select top (1000) el.ElementID, el.DFileID, el.LevelNum, ... from ElementLoader el with (nolock) left outer join Element e with (nolock) on e.ElementID = el.ElementID where el.DFileID = @fileID2 and e.ElementID is null order by el.ElementID ... end Note: The values for @fileID1 and @fileID2 are always guaranteed to be different. DLevel table has on average approx. 60 rows for a single DFileID and thus would complete deletion of all rows in a single pass. How can I avoid a deadlock between these two SQL statements? Edit 1: Rewritten to better clarify issue; added image; simplified SQL and removed join to DLevel table, which did not contribute to deadlock. Edit 2: Added XML of deadlock graph. Deadlock now occurs on Model table. Similar delete statement and schema for Model as for DLevel table. delete top (@batchSize) from Model where DFileID = @fileID Proc [Database Id = 11 Object Id = 690101499] insert into Element ( ElementID, DFileID, ModelID, ElementTypeID, CADElementID, ParentID, LevelNum, Depth, NumChildren, Color, Weight, Style, Xlo, Ylo, Zlo, Xhi, Yhi, Zhi, Diagonal, XCenter, BitFlags, ElementModTime ) select top (@batchSize) el.ElementID, el.DFileID, el.ModelID, el.ElementTypeID, el.CADElementID, parent.ElementID as ParentID, (case when el.LoaderType = 1 and et.IsGraphical = 1 then el.LevelAttrib else null end) as LevelNum, --l.LevelNum, el.Depth, el.NumChildren, el.Color, el.Weight, el.Style, el.Xlo, el.Ylo, el.Zlo, el.Xhi, el.Yhi, el.Zhi, el.Diagonal, el.XCenter, Proc [Database Id = 11 Object Id = 738101670]
