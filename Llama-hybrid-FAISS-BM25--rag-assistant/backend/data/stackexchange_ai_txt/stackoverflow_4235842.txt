[site]: stackoverflow
[post_id]: 4235842
[parent_id]: 4235743
[tags]: 
No, DI/IoC is not the same thing as designing by interface. A DI/IoC engine is really just a big instance factory. It saves you from having to write and maintain your own. The benefits are less maintenance (you don't have to write it) and a larger audience to find and report bugs. If the team that wrote the DI/IoC engine is better than you and your team, you get to use higher quality software. And if you choose one that is in wider circulation than your home-grown solution, there's a chance that outsiders will know how to use it from reading books that are widely available. People on your team will have their resumes enhanced by knowing and gaining experience with a well-known framework. I'd encourage you to continue to design to interfaces, but there's more to DI than that.
