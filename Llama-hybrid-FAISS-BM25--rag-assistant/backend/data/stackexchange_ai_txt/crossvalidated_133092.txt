[site]: crossvalidated
[post_id]: 133092
[parent_id]: 58001
[tags]: 
In addition to the nice answer by @whuber, I would like to add some other options for displaying multidimensional (multivariate) data in "star coordinates", for the sake of more comprehensive coverage. My answer focuses on performing such visualization of multivariate data in R . I will start by saying that star plots (in both spider and radar variants) are supported by R 's base graphics package via function stars() : http://stat.ethz.ch/R-manual/R-devel/library/graphics/html/stars.html . Next in the R "food chain" goes, obviously, ggplot2 package, which AFAIK currently doesn't have specific functions for this type of plots (please correct me, if I'm not up-to-date on this). However, a basic implementation by Hadley Wickham, using coord_polar() , can be found here . In addition, a ggplot2-based ggsubplot package offers the relevant function geom_star() : http://www.inside-r.org/packages/cran/ggsubplot/docs/geom_star . Other packages that contain the star plotting functionality include: psych - functions spider() and radar() - http://personality-project.org/r/html/spider.html , plotrix - function radial.plot() - http://onertipaday.blogspot.com/2009/01/radar-chart.html ) and, possibly, some others. In addition to the above, it should be noted that it is possible to create star plots in Web-enabled software, which easily interfaces with R . For example, here is a variation of a star plot in plotly , where it's called polar area chart: https://plot.ly/r/polar-chart/#Polar-Area-Chart . Speaking about R and Web-enabled data visualization, it is impossible not to mention great D3.js library, which also can be accessed from R . Here is how to make a great-looking star plot, using D3.js: http://www.visualcinnamon.com/2013/09/making-d3-radar-chart-look-bit-better.html .
