[site]: stackoverflow
[post_id]: 4208011
[parent_id]: 4203686
[tags]: 
Regarding your example: http://compute.com?content={base64file} , I would use POST because you are uploading "something" to be computed. For me this "something" feels more like a resource as a simple parameter. In contrast to this in usual search I would start to stick with GET and parameters. You make it so much easier for api-clients to test and play around with your api. Make the read-only access (which in most cases is the majority of traffic) as simple as possible! But the dilemma of large query strings is a valid limitation of GET. Here I would go pragmatic, as long as you don't hit this limit go with GET and url-params. This will work in 98% of search-cases. Only act if you hit this limit and then also introduce POST with payload (with mime-type Content-Type: application/x-www-form-urlencoded ). Have you got more real-world examples?
