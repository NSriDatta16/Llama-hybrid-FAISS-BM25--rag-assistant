[site]: stackoverflow
[post_id]: 3117440
[parent_id]: 3117217
[tags]: 
This is because when using addEventListener the execution scope is set to the node, just as if you had used node.onclick = foo . When you use attachEvent in IE, the execution scope becomes the global execution scope, which is the window. One way to get around this is to use Function.call, or Function.apply to specify the execution scope of your liking. Many libraries will declare a binding function to help with this, such as: function bind(fn, context) { return function() { return fn.apply(context, arguments); }; } this.AddListener(this.DraggingElement, "mousedown", bind(this.enableDragging, this)); You could also add a context argument to your AddListener function, and do the binding there. Ecmascript 5 has a built in bind method.
