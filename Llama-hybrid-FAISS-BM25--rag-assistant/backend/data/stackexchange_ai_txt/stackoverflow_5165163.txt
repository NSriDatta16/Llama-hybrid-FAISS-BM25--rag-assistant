[site]: stackoverflow
[post_id]: 5165163
[parent_id]: 5151510
[tags]: 
What about something like (I'm sure there are typos): SELECT A.RegTimePartnerID AS OrganiationID, P.PartnerName AS OrganiationName, ( SELECT COUNT(DISTINCT dta.[UniqueID]) FROM dbo.[DenormTraningActivity](NOLOCK) AS dta WHERE dta.[RegTimePartnerID] = P.[PartnerID] ) AS PUIDCount, ( SELECT COUNT(DISTINCT dta.[EventID]) FROM dbo.[DenormTraningActivity](NOLOCK) AS dta WHERE dta.[RegTimePartnerID] = P.[PartnerID] ) AS EventCount, ( SELECT COUNT(DISTINCT dta.[EventID]) FROM dbo.[DenormTrainingActivity](NOLOCK) AS dta WHERE dta.[CourseTypeid] = 10 AND dta.[RegTimePartnerId] = P.[PartnerID] ) AS SalesCount, ( SELECT COUNT(DISTINCT dta.[EventID]) FROM dbo.[DenormTrainingActivity](NOLOCK) AS dta WHERE dta.[CourseTypeid] = 20 AND dta.[RegTimePartnerID] = P.[PartnerID] ) AS TechCount, CASE WHEN ( SELECT COUNT(DISTINCT dta.[EventID]) FROM dbo.[DenormTrainingActivity](NOLOCK) AS dta WHERE dta.[EventCategory] IN ('Live-ILT', 'Live-Online') AND dta.[RegTimePartnerID] = P.[PartnerID] ) = 0 THEN 100 ELSE ( SELECT COUNT(DISTINCT dta.[EventID]) FROM dbo.[DenormTrainingActivity](NOLOCK) AS dta WHERE dta.[EventCategory] IN ('Live-ILT', 'Live-Online') AND dta.[RegTimePartnerID] = P.[PartnerID] )*100/ ( SELECT COUNT(DISTINCT dta.[EventID]) FROM dbo.[DenormTrainingActivity](NOLOCK) AS dta WHERE dta.[EventCategory] NOT IN ('Live-ILT', 'Live-Online') AND dta.[RegTimePartnerID] = P.[PartnerID] ) END AS LivevsOndemand FROM dbo.Partner P WHERE P.[PartnerID] <> 0 I was thinking that maybe the nested subqueries would be less costly than the INNER JOIN/COUNT/GROUPBY. Probably not though since each subquery would have to be evaluated for each record in the Partner table.
