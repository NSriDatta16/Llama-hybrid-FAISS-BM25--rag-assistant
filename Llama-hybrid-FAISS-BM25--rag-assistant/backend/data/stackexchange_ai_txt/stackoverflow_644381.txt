[site]: stackoverflow
[post_id]: 644381
[parent_id]: 526797
[tags]: 
Parsing C++ is a very complex challenge . There's the Boost/Spirit framework, and a couple of years ago they did play with the idea of implementing a C++ parser , but it's far from complete . Fully and properly parsing ISO C++ is far from trivial, and there were in fact many related efforts. But it is an inherently complex job that isn't easily accomplished, without rewriting a full compiler frontend understanding all of C++ and the preprocessor. A pre-processor implementation called "wave" is available from the Spirit folks. That said, you might want to have a look at pork/oink (elsa-based), which is a C++ parser toolkit specifically meant to be used for source code transformation purposes, it is being used by the Mozilla project to do large-scale static source code analysis and automated code rewriting, the most interesting part is that it not only supports most of C++, but also the preprocessor itself! On the other hand there's indeed one single proprietary solution available: the EDG frontend, which can be used for pretty much all C++ related efforts. Personally, I would check out the elsa-based pork/oink suite which is used at Mozilla, apart from that, the FSF has now approved work on gcc plugins using the runtime library license, thus I'd assume that things are going to change rapidly, once people can easily leverage the gcc-based C++ parser for such purposes using binary plugins. So, in a nutshell: if you the bucks: EDG, if you need something free/open source now : else/oink are fairly promising, if you have some time, you might want to use gcc for your project. Another option just for C code is cscout .
