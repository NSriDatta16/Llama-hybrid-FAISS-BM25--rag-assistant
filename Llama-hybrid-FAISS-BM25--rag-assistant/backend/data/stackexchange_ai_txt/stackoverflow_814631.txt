[site]: stackoverflow
[post_id]: 814631
[parent_id]: 814600
[tags]: 
Follow these steps: 1) Place all String fragments in a separate resource file. Example: StringResources.xaml : All Vehicles 2) Make copies for each language and add them (translated) to the merged dictionaries. Don't forget to add the country's ISO code to make things easier. Example App.xaml : The last resource file with strings will be used to replace text parts in code. 3a) Use the text parts from the String table: Example Window1.xaml : 3b) Load the resource from code (Only use this code if you don't want to set via XAML ): void PageLoad() { string str = FindResource("All_Vehicles").ToString(); } 4) Switch to new culture at start of application: Codesnippet from App.xaml.cs : public static void SelectCulture(string culture) { if (String.IsNullOrEmpty(culture)) return; //Copy all MergedDictionarys into a auxiliar list. var dictionaryList = Application.Current.Resources.MergedDictionaries.ToList(); //Search for the specified culture. string requestedCulture = string.Format("StringResources.{0}.xaml", culture); var resourceDictionary = dictionaryList. FirstOrDefault(d => d.Source.OriginalString == requestedCulture); if (resourceDictionary == null) { //If not found, select our default language. requestedCulture = "StringResources.xaml"; resourceDictionary = dictionaryList. FirstOrDefault(d => d.Source.OriginalString == requestedCulture); } //If we have the requested resource, remove it from the list and place at the end. //Then this language will be our string table to use. if (resourceDictionary != null) { Application.Current.Resources.MergedDictionaries.Remove(resourceDictionary); Application.Current.Resources.MergedDictionaries.Add(resourceDictionary); } //Inform the threads of the new culture. Thread.CurrentThread.CurrentCulture = new CultureInfo(culture); Thread.CurrentThread.CurrentUICulture = new CultureInfo(culture); }
