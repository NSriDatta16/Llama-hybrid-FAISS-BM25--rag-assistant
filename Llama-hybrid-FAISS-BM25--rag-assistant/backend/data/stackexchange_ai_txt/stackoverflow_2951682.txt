[site]: stackoverflow
[post_id]: 2951682
[parent_id]: 2951410
[tags]: 
How are you calling create? With a normal restful create action it would be with a POST from a form or something, but 404s are generally rendered from a failed GET action, where an ActiveRecord find fails to locate a record with a specific id. My best guess is that you're calling create with a GET, and that the line user = Freeagent::User.find_by_email(current_user.email) simply cannot locate a user with that email, and so is throwing the ResourceNotFound exception. Additionally, this bit of code is confusing to me: @kase = Kase.new(params[:kase]) @company = Company.find(params[:kase][:company_id]) @kase = @company.kases.create!(params[:kase]) respond_to do |format| if @kase.save Why are you creating @kase twice here, once with Kase.new and once with kases.create? Also, note that the line: if @kase.save will always evaluate true, because the line: @company.kases.create!(params[:kase]) would have thrown an exception if it were false, which is another way of saying that @kase.save is redundant because create! would have already persisted the new Kase record. EDIT: What I think you meant to do was: # this line can go @kase = Kase.new(params[:kase]) @company = Company.find(params[:kase][:company_id]) @kase = @company.kases.build(params[:kase]) EDIT: You probably want a new action like this: def new @kase = Kase.new # no params here end The 'new' erb template will have a form_for something like: etc. That form will by default post the params from the form to the create action, assuming you've set up something like resources :kase in your routes. That should get you started. Follow the standard tutorials like you're doing and things should get simpler as you go.
