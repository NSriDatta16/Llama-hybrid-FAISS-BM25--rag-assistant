[site]: stackoverflow
[post_id]: 294918
[parent_id]: 294909
[tags]: 
Yes. Basically, you can't do any harm by adding TDD for any new code you write, and any changes you make to existing code. Obviously it would be tricky to go back and retro-fit accurate tests to existing code, but it certainly couldn't hurt to cover the primary use-cases. Maybe consider having a look at Brownfield Application Development in .NET ? It is full of pragmatic and practical advice for exactly this scenario (one of the definitions offered for "Brownfield" is "without proper unit tests").
