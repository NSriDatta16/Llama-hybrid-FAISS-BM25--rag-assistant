[site]: stackoverflow
[post_id]: 3247224
[parent_id]: 
[tags]: 
C++ friend operator overload doesn't compile

I have the following (cut-down) class definition, and it has compilation errors. #include #include class number { public: friend std::ostream &operator > (std::istream &s, number &num); friend std::string &operator >> (std::string, number &num); protected: private: void write ( std::ostream &output_target = std::cout) const; void read ( std::istream &input_source = std::cin); void to_string ( std::string &number_text) const; void to_number (const std::string &number_text); }; std::istream & operator >> (std::istream &s, number &num) { num.read (s); return s; } std::string & operator >> (std::string &s, number &num) { num.to_number (s); return s; } std::string & operator When I compile it, I get the following errors... frag.cpp: In function ‘std::string& operator>>(std::string&, number&)’: frag.cpp:17: error: ‘void number::to_number(const std::string&)’ is private frag.cpp:27: error: within this context frag.cpp: In function ‘std::string& operator Could anyone help with this; in particular why to_number and to_string are thought private but read and write are OK? Thank you.
