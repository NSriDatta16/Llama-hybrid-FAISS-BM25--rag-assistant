[site]: stackoverflow
[post_id]: 1045315
[parent_id]: 1045304
[tags]: 
To be totally honest I don't believe you will see much of a performance benefit from doing this. Structs are hard to write well and a poorly written struct is far more dangerous than taxing the garbage collector. It sounds like your professor is advocating the use of data transfer objects which would encourage the separation of state and behavior. This can be a good design if done properly (and in most cases you would implement this pattern using classes, not structs). The reason I say that using a struct may be more dangerous is that value types are handled much more differently by the CLR and if written poorly (e.g. a mutable struct) can create terrible headaches. Also, if your type contains many fields and then is passed from method to method you will be copying every field's value on each method call thus using more memory than if you had used a class in the first place.
