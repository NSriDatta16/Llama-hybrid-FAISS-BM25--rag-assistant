[site]: stackoverflow
[post_id]: 3952174
[parent_id]: 
[tags]: 
avoid race in OpenMP (in a parallel for loop)

I am writing an OpenMP program in C. I have this shared array "data" which is being updated by all threads. i want to ensure that every thread has completed the reading part and stored the value in temp before the next statement data[j] = temp is executed. I tried putting #pragma omp barrier between the two statements but the compiler throws an error. Please help. #pragma omp parallel for shared(data) for (j = 0; j = max_j) { temp = data[j] + data[j - max_j]; data[j] = temp; } }
