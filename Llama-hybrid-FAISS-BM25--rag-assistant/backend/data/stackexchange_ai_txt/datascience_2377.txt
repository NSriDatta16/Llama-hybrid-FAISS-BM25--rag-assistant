[site]: datascience
[post_id]: 2377
[parent_id]: 1135
[tags]: 
Basically your machine-learning problem is: given [day-of-week, weather, departure-time, route], predict arrival time, then obtain travel time. Once your model is solid, you can then predict your travel time for each potential departure time and route, and choose the lowest. You don't really need to factor in the pit stops, if you think they're a function of the rest, or a random variable altogether. If you want a tool that can do the machine-learning aspect 'out of the box' you should try Weka. You'll have to encode the data in the specific format it expects, but other than that you won't have to do any coding (i.e. you won't need to code any of the actual machine-learning algorithms). I would discretize your departure time to make sure you have enough data. Weka will let you try out the different algorithms, see which one is best. Note that it's a regression problem as opposed to a classification problem, so only a subset of the algorithms apply. Once you've got the Weka part figured out, you can also call it programmatically, which will allow you to code the interface you want, and potentially include the automatic weather retrieval.
