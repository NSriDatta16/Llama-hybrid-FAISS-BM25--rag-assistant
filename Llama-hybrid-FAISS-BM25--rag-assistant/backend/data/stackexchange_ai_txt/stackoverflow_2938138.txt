[site]: stackoverflow
[post_id]: 2938138
[parent_id]: 2938131
[tags]: 
You're continually writing over an array ( a_array ) at the same position, then storing the address into a_result[i] ( a_result is an array of pointers). Thus, at the end, every element of a_result contains an identical address (of a_array ), and a_array itself has the values written by the last iteration. Worse, accessing the contents of a_array (including through the pointers in a_result ) outside the for loop is undefined behavior. That storage can only be used within the loop body. In contrast, you're allocating new heap memory for b_array (which is not in fact an array) every iteration, and storing this (new) pointer into b_result . Thus, you don't overwrite old values.
