[site]: stackoverflow
[post_id]: 1478182
[parent_id]: 1478157
[tags]: 
Nexus has the concept of proxy repository which does almost exactly what you describe. See the Proxying Public Repositories section of the book for details. Artifactory has a similar feature called Virtual repositories . Proxying and caching a remote public repository can speed up your builds by reducing redundant downloads over the public internet. If a developer in your organization needs to download version 2.5 of the Spring Framework and you are using Nexus, the dependencies (and the dependency's dependencies) only need to be downloaded from the remote repository once. With a high-speed connection to the Internet this might seem like a minor concern, but if you are constantly asking your developers to download hundreds of megabytes of third-party dependencies, the real cost savings are going to be the time it takes Maven to check for new versions of dependencies and to download dependencies over the public internet. You can stop your Maven install from ever trying to connect to Central by setting up your repository manager as a mirror of central, requests to central will then be directed to your repository manager. For example add the following to the section of Maven's settings.xml to redirect requests to central to your repository manager: central-proxy central http://myrepo/nexus/content/groups/public I tend to set up a repository group containing several remote repositories. The group acts as a single repository as far as my Maven install is concerned, but collates artifacts from several remote repositories.
