[site]: stackoverflow
[post_id]: 3186014
[parent_id]: 3186008
[tags]: 
It's a bitfield member. Your code means dumpable occupies exactly 1 bit in the structure. Bitfields are used when you want to pack members in bit-level. This can greatly reduce the size of memory used when there are a lot of flags in the structure. For example, if we define a struct having 4 members with known numeric constraint 0 then the struct could be declared as struct Foo { unsigned a : 5; // 20 then the bits of Foo may be arranged like ddddddd c cc b aaaaa --------- --------- --------- ---------- octet 1 octet 0 =========================================== uint32 instead of struct Foo { unsigned a; unsigned b; unsigned c; unsigned d; }; in which many bits are wasted because of the range of values # wasted space which is not used by the program # v v ddddddd ccc ------------------------------------ ------------------------------------ uint32 uint32 b aaaaa ------------------------------------ ------------------------------------ uint32 uint32 so you can save space by packing many members together. Note that the C standard doesn't specify how the bitfields are arranged or packed within an "addressable storage unit". Also, bitfields are slower compared with direct member access.
