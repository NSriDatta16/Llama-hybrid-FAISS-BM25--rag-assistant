[site]: stackoverflow
[post_id]: 2576158
[parent_id]: 2576122
[tags]: 
In order of preference Make as few changes as possible to the third party libraries. Try and get around their limitations within your code. Document your changes and then submit a patch. If you can't get around their limitations, submit your change as a patch (this may be idealistic with the glacial pace of some projects). If you can't do either of those things, document what you've changed in a centralized location so that the poor person doing the integration for new versions can figure out what the heck you were doing, and if the changes made are still needed. 1 and 2 are greatly preferred (however, fast and very slow respectively), while the third option will only lead to headaches and bugs as your code base deviates from the dependencies' code base. In my code, I don't even have the 3rd party code loaded up in the IDE unless I have to peruse a header file. This removes temptation to change things that aren't mine. As far as modularity, and this is assuming you are using relatively stable 3rd party libraries, only program to the public facing interface. Just because you have the source doesn't mean you have to use it all over your code. This should allow updates to be essentially drag and drop. Now, this is completely idealistic but its what I strive for with code I work on.
