[site]: stackoverflow
[post_id]: 5476790
[parent_id]: 5476216
[tags]: 
I just tested your exact code, with a constant for Diff_Values , timed it using GetTickCount() for rudimentary timing. If Diff_Values is 186 it takes 1466 milliseconds, if Diff_Values is 187 it fails with Out of Memory . You know, Out of Memory means Out of Address Space , not really Out of Memory . In my opinion you're allocating so much data you run out of RAM and Windows starts paging , that's why it's slow. On my system I've got enough RAM for the process to allocate as much as it wants; And it does, until it fails. Possible solutions The obvious one: Don't allocate that much! Figure out a way to allocate all data into one contiguous block of memory: helps with address space fragmentation. Similar to how a bi dimensional array with fixed size on the "branches" is allocated, but if your "branches" have different sizes, you'll need to figure a different mathematical formula, based on your data. Look into other data structures, possibly ones that cache on disk (to brake the 2Gb address space limit).
