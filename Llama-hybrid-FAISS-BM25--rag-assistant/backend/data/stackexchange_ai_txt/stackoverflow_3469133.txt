[site]: stackoverflow
[post_id]: 3469133
[parent_id]: 
[tags]: 
Expose 3rd party interface (over WCF) to Silverlight

I searched a lot, apologies if I missed something obvious. And thanks for reading the looong text below. I have a 3rd party (read: No way to access/change the source) application here. It consists of a server (Windows service) and an API, that talks to the server via remoting. For several reasons I'd like to expose this API over WCF (see subject: One reason is a WCF client). The problem is, the API is unchangeable (follows 3rd party rule) using no WCF itself (it is serializable/MarshalByRef where necessary for Remoting) using lots of interfaces and internal implementation classes Following 1 I cannot use the (quite intrusive) WCF attributes myself. Following 2 the API itself can be used "over the wire" (they support remoting via TCP and HTTP), but remoting is not good enough for me. Following 3 I have mostly interfaces (which WCF won't handle well, cannot (de-)serialize). The implementation classes could be sent over, but - I cannot access them. The general usage for this API is based on a single interface (and its members/properties), so the typical usage is like var entryPoint = new ApiClientEntryPoint(); entryPoint.SomeMethodCall(); entryPoint.PropertyExposingAnInterface.SomeOtherMethodCall(); and so on. What I'd really like to do is generate (with as little effort/code as possible) a proxy (not in the typical WCF sense) that I expose via WCF and that serializes this hierarchy mapping every call/property on the client to the real thing on the server. The closest I've come so far is stumbling upon this project , but I wonder if there are more/other tools available that take a medium to large part of this work off my shoulder. If there are any general other advices, better approaches to wrap something preexisting and unchangable into WCF, please share.
