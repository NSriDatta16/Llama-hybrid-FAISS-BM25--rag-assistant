[site]: stackoverflow
[post_id]: 78786
[parent_id]: 78716
[tags]: 
I too have made forays into the world of XSLT and I found it to be a little awkward in places. I think my main issue was in the difficulty in converting "pure data" XML into a complete HTML page. In hindsight, perhaps using XSLT to generate a page fragment that could be composed together with other fragments using Server Side Scripting (eg SSI) would have solved many of my issues. One of the possible mistakes was to try and construct a common page layout to surround my data by importing XHTML or other XML data in using the document() function. The other mistake was trying to do programatic things like create a general template to generate tables on XML data with logic that did things like use different background row colours for rows with certain values and allow you to specify some columns to be filtered out. Not to mention trying to construct a string list of values from XML data that seemed only to be solvable using recursive template calls. What did I gain? Well, the page source is XML data right there and available to the viewer. Data and presentation are neatly separated. Would I do it again? Probably not, unless I really wanted data/presentation separation on a static page. Otherwise, I'd probably write a Rails or Java EE app that could generate an XML view or an HTML view using templating - all the benefits, but with a much more natural (for me) programming language at my fingertips.
