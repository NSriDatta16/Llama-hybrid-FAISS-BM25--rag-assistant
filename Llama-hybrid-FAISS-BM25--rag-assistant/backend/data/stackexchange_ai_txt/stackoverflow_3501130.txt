[site]: stackoverflow
[post_id]: 3501130
[parent_id]: 
[tags]: 
Inheritance in hibernate

I would like to implement inheritance in Hibernate. I created ObjectClass object: @Entity @Table(name = "object") @Inheritance(strategy = InheritanceType.JOINED) public class ObjectClass { private id; } and CodeTable object that inhertance Object class: @Entity @ForeignKey(name = "id") @Table(name = "code_table") public class CodeTable extends ObjectClass{ private String description; } in the database object table is: CREATE TABLE `object` ( `id` bigint(11) NOT NULL auto_increment, PRIMARY KEY (`id`), ) code_table table is: - CREATE TABLE `code_table` ( `id` bigint(11) NOT NULL auto_increment, `description` varchar(45) character set latin1 default NULL, PRIMARY KEY (`id`), KEY `FK_object` (`id`), CONSTRAINT `FK_object` FOREIGN KEY (`id`) REFERENCES `object` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ) I wrote the following code to retreive data from codeTable: @SuppressWarnings( "unchecked" ) @Transactional( readOnly = true, propagation = Propagation.REQUIRED ) public Collection findAll() { Session session = getSessionFactory().getCurrentSession(); return session.createCriteria( persistentClass ).setResultTransformer( Criteria.DISTINCT_ROOT_ENTITY ).list(); } I gets empty list although there is one record in codetable table. When I write the following SQL in my database: SELECT * FROM `code_table` I get: id= 1, description = company. What went wrong in my Hibernate definition? How can I retrieve the object? EDITED : My hibernate.cfg.xml file looks like this:
