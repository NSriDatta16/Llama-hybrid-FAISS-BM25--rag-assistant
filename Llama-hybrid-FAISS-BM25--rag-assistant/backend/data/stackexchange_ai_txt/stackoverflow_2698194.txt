[site]: stackoverflow
[post_id]: 2698194
[parent_id]: 2697871
[tags]: 
This looks like a bug in the SQL generator of the Django ORM. The generated SQL is returning _row_num as well as id in the IN subquery of the second query when it isn't required. This wouldn't be needed for the first 20 calculation, since the subquery could be written as SELECT TOP 20... To get around this for last n rows calculations, you could return the un-aggregated collection of Things and carry out the average calculation in code. (There may be another Django-specific solution, but I'm a SQL server guy.)
