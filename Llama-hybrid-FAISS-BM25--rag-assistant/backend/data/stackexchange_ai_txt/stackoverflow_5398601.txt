[site]: stackoverflow
[post_id]: 5398601
[parent_id]: 
[tags]: 
Efficient Drawing Storage Method?

I'm developing a basic drawing app that has a few classes. One of these is a "Line" class that stores some info on a line the user can draw. When the user drags round the screen, a line is created for each movement of their finger, so a line is drawn following their finger. I store all the line objects in an NSArray and redraw each time something changes. However, since the array just keeps getting bigger, and eventually starts to slow down. Is there any way to just draw the new lines, or a better storage mechanism for the lines? EDIT: Read the answer below, but setNeedsDisplayInRect: doesn't seem to be working. I am calling it like so: -(void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event { for (UITouch *t in touches) { //add line to array w/ x and y values from touch [self setNeedsDisplayInRect:[self rectForLine:line]]; } } -(CGRect)rectForLine:(Line*)line { CGFloat x1 = [line begin].x; CGFloat y1 = [line begin].y; CGFloat x2 = [line end].x; CGFloat y2 = [line end].y; CGFloat originX = (x1>x2) ? x1 : x2; CGFloat originY = (y1 x2) ? x1 : x2) - originX; CGFloat diffY = ((y1>x2) ? y1 : y2) - originY; return CGRectMake(originX, originY, diffX, diffY); } - (void)drawRect:(CGRect)rect { CGContextRef context = UIGraphicsGetCurrentContext(); CGContextSetLineWidth(context, 10.0); CGContextSetLineCap(context, kCGLineCapRound); //[[UIColor blackColor] set]; for (Line *line in completeLines) { if (CGRectContainsPoint(rect, [line begin]) && CGRectContainsPoint(rect, [line end])) { //draw line onto the screen } }
