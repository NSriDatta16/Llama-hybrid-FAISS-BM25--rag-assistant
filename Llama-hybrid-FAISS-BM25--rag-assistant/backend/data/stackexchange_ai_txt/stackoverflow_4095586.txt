[site]: stackoverflow
[post_id]: 4095586
[parent_id]: 4095463
[tags]: 
Java has bitwise operators . See a tutorial example . The Java programming language also provides operators that perform bitwise and bit shift operations on integral types. The operators discussed in this section are less commonly used. Therefore, their coverage is brief; the intent is to simply make you aware that these operators exist. The unary bitwise complement operator "~" inverts a bit pattern; it can be applied to any of the integral types, making every "0" a "1" and every "1" a "0". For example, a byte contains 8 bits; applying this operator to a value whose bit pattern is "00000000" would change its pattern to "11111111". A byte value IS integral, you can check bit state using masking operations. The least significant bit corresponds to the mask 1 or 0x1 , the next bit correspond to 0x2 , etc. byte b = 3; if((b & 0x1) == 0x1) { // LSB is on } else { // LSB is off }
