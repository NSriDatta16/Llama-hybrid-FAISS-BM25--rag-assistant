[site]: stackoverflow
[post_id]: 3590726
[parent_id]: 3590095
[tags]: 
It appears from more research, in my O'Reilly JavaScript Pocket Reference, I find there's a paragraph that states: null ( and undefined ) The JavaScript keyword null is a special value that indicates "no value". If a variable contains null , you know that it does not contain a valid value of any type. There is one other special value in JavaScript: the undefined value. This is the value returned when you use an undeclared or uninitialized variable or when you use a non-existent object property. There is no JavaScript keyword for this value. After some testing with alert(dest.onchange) I found that Firefox was not complaining about every invocation of dest.onchange() but only those which were errors ( undefined ). Apparently (Grrrr!) Firefox didn't get the memo: [ There is no JavaScript keyword for this value. ] If I change my code to test for dest.onchange !== undefined then Firefox is happy, but then Safari, Opera and Chrome FAIL at the test. If I change the code as below, it works in all four browsers. if ( (dest.onchange !== null) // test for safari, chrome, opera && (dest.onchange !== undefined) ) { // test for firefox //we have an onchange function, so let's do it! dest.onchange(); } And I got to spend 8 hours trying to figure out why Firefox doesn't play nice.
