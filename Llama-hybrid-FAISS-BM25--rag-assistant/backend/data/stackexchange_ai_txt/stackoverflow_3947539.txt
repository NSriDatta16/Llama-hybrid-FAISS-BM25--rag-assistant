[site]: stackoverflow
[post_id]: 3947539
[parent_id]: 3947082
[tags]: 
Here's how you can get a list of folders off of the memory card: String state = Environment.getExternalStorageState(); if(state.contentEquals(Environment.MEDIA_MOUNTED) || state.contentEquals(Environment.MEDIA_MOUNTED_READ_ONLY)) { String homeDir = Environment.getExternalStorageDirectory(); File file = new File(homeDir); File[] directories = file.listFiles(); } else { Log.v("Error", "External Storage Unaccessible: " + state); } This code is from the top of my head, so some syntax may be off a bit, but the general idea should work. You can use something like this to filter down the folders to only folders that contain images: FileFilter filterForImageFolders = new FileFilter() { public boolean accept(File folder) { try { //Checking only directories, since we are checking for files within //a directory if(folder.isDirectory()) { File[] listOfFiles = folder.listFiles(); if (listOfFiles == null) return false; //For each file in the directory... for (File file : listOfFiles) { //Check if the extension is one of the supported filetypes //imageExtensions is a String[] containing image filetypes (e.g. "png") for (String ext : imageExtensions) { if (file.getName().endsWith("." + ext)) return true; } } } return false; } catch (SecurityException e) { Log.v("debug", "Access Denied"); return false; } } }; Then, change the first example to: File[] directories = file.listFiles(filterForImageFolders); That should return only directories that contain images. Hopefully this helps some!
