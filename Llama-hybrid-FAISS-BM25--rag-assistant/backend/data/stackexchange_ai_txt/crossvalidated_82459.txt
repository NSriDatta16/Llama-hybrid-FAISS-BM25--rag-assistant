[site]: crossvalidated
[post_id]: 82459
[parent_id]: 82455
[tags]: 
For a binary logistic regression, the usual use case for the binomial GLM with a logit link, you're modeling the probability that your dependent variable is a "success" (or "yes"), conventionally coded as $1$. The way that you're doing this is by modeling the log odds. So rather than modeling the mean of the response as in OLS, you're modeling the change in the log odds: $$\Pr(y=1)=\theta=\text{logit}^{-1}(\beta_0+\beta_1x_1+\beta_2x_2+...+\beta_7x_7)$$ Where $\text{logit}(x)=\log(\frac{x}{1-x})$ and $\text{logit}^{-1}(x)=\frac{\exp(x)}{1+\exp(x)}$. A more thorough, very approachable explanation of this can be found in Agresti, An Introduction to Categorical Data Analysis. But to your particular question, you state that you're modeling the proportion of successes. This is not actually what a binomial GLM is used to do. However, what you're really after is what a binomial GLM does, and is still possible in R. It just requires a slight tweak to what you're doing. In the case where you have a finite number of trials $n$ which may have $y \in \{0...n\}$ successes, you can still use the same model, which has density $$\Pr(y) \sim \binom{n}{y}\theta^y(1-\theta)^{n-y}$$ Because your values $n$ are fixed by experimental design, and $y$ is your observed successes, you're performing inference on the parameter $\theta$ in the same way as the more typical binary response case (above), in which $n$ is fixed at 1, $y$ takes the value 1 with probability $\theta$, and $\theta$ is a function of your parameters. For the case of the logit link, then we model $$\text{logit}(\theta)=\beta_0+\beta_1x_1+...+\beta_ix_i$$, chiefly because this transformed $\theta$ exists on the whole real line, rather than the unit interval. (Other desirable properties of the logit link are described in Agresti, including validity of the coefficients even in settings where nonrandom samples like case-control designs are used; this is not the case for, e.g., probit link functions.) In terms of R, simply create an object (which you term glmDV ) that is a 2-column matrix, the first column the number of successes $y$ and the second the total number of failures $n-y$. The rest of the statement remains the same!
