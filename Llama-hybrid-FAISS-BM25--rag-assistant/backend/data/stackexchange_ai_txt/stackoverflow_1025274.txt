[site]: stackoverflow
[post_id]: 1025274
[parent_id]: 1025042
[tags]: 
I would suggest that you attempt as best you can to provide a typical web 2.0 light approach to your web design. To start with, I would create a web-based interface to do the most simple, but most commonly used workflow in your application. Have the production version share the database of your current system so it can be a drop-in replacement, used for convenience on a day to day basis. Remember, power users will open several browser windows so to simulate an application is redundant. A set of wizards that lead you through workflows (add a client say) and status pages (view client details) would be a great starting point. Emulate as much as possible web 2.0 poster children (i.e Twitter) and use their designs as a free starting point. Don't try to do it all at once, just add a nice web front end to your existing system and gradually get support / usage within the organisation. If you decide to use Django (i.e develop website in python) it will probably support your database out of the box. Configure your settings to connect to the database (follow the tutorial) then run the "inspectdb" manager command to create a python file describing the 200 tables you have. You can then very easily run SQL queries on the DB without writing any SQL by using the Django model system, all in a python command line.
