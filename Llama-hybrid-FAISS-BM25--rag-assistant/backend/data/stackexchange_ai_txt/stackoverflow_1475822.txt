[site]: stackoverflow
[post_id]: 1475822
[parent_id]: 833180
[tags]: 
Handling arguments in a command line application: //We assume that the actual meat is already defined in function // DoStuff (string -> string -> string -> unit) let defaultOutOption = "N" let defaultUsageOption = "Y" let usage = "Scans a folder for and outputs results.\n" + "Usage:\n\t MyApplication.exe FolderPath [IncludeSubfolders (Y/N) : default=" + defaultUsageOption + "] [OutputToFile (Y/N): default=" + defaultOutOption + "]" let HandlArgs arr = match arr with | [|d;u;o|] -> DoStuff d u o | [|d;u|] -> DoStuff d u defaultOutOption | [|d|] -> DoStuff d defaultUsageOption defaultOutOption | _ -> printf "%s" usage Console.ReadLine() |> ignore [ ] let main (args : string array) = args |> HandlArgs 0 (I had a vague memory of this technique being inspired by Robert Pickering , but can't find a reference now)
