[site]: stackoverflow
[post_id]: 3112257
[parent_id]: 3112193
[tags]: 
There's nothing in the annotated C# 3 spec. I think there may be something in the annotated C# 4 spec - I'm not sure. (I think I started writing such an annotation myself, but then deleted it.) It's fine for simple cases, but as soon as you start adding extra flags, it gets a bit tricky: [Flags] enum Features { Frobbing, // 1 Blogging, // 2 Widgeting, // 4 BloggingAndWidgeting = Frobbing | Blogging, // 6 Mindnumbing // ? } What value should Mindnumbing have? The next bit that isn't used? What about if you set a fixed integer value? I agree that this is a pain. Maybe some rules could be worked out that would be reasonable... but I wonder whether the complexity vs value balance would really work out.
