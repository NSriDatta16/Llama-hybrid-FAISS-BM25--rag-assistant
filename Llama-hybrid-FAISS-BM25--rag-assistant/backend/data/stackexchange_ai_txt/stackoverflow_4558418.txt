[site]: stackoverflow
[post_id]: 4558418
[parent_id]: 4530328
[tags]: 
Windows Azure does support multi tenancy, but you have to architect for it. The most typical model I've seen used is a multi tenant web and business layer with a single tenant data store. You can debate multi tenant data, but single tenancy seems the preference from a risk perspective. If one client is compromised or corrupted, you don't want to affect all your customers. You can do that quite easily by Ensuring that your web and business components are stateless. Use a common security layer Switch data context per request The data context switching is the most complex part, but it could be something as simple as having a per user/role Entity Connection string if you're using EF, or a Partition naming pattern if you're using Table storage.
