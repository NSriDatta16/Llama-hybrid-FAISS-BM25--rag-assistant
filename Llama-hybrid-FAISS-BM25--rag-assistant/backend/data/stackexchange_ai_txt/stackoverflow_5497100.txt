[site]: stackoverflow
[post_id]: 5497100
[parent_id]: 
[tags]: 
Alterative array representation

I'm facing a problem in C++ for which I currently don't have an elegant solution. I'm receiving data in the following format: typedef struct { int x; int y; int z; }Data3D; vector v; // the way data is received (can be modified) But the functions that do the computations receive parameters like this: Compute(int *x, int *y, int *z, unsigned nPoints) {...} Is there a way to modify the way data is received Data3D so that the memory representation would change from: XYZXYZXYZ to XXXYYYZZZ What I'm looking for is some way of populating a data structure in a similar way we populate an array but that has the representation above (XXXYYYZZZ). Any custom data structures are welcome. So I want to write something like (in the above example): v[0].x = 1 v[0].y = 2 v[0].y = 0 v[1].x = 6 v[1].y = 7 v[1].z = 5 and to have the memory representation below 1,6...2,7....0,5 1,6 is the beginning of the x array 2,7 is the beginning of the y array 0,5 is the beginning of the z array I know that this can be solved by using a temporary array but I'm interested to know if there are other methods for doing this. Thanks, Iulian LATER EDIT: Since there are some solutions that change only the declaration of Compute function without changing its code - this should be taken into account also. See the answers related to the solution that involves using an iterator.
