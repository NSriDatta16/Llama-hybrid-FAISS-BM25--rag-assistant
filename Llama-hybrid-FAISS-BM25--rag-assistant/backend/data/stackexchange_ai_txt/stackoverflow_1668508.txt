[site]: stackoverflow
[post_id]: 1668508
[parent_id]: 1668434
[tags]: 
It depends on the compiler. For example: const int a = 4; This could be handled by the compiler allocating 4 bytes and just enforcing immutability. If you had a constant string: static final java.lang.String name = "Foobar"; The compiler could remove the variable and replace it with the actual string "Foobar" everywhere the variable is used. This doesn't take space from the heap but it still has to be stored somewhere in the programs data segment. Java tries to do this when it finds a quoted string that is being used in multiple places, so it only has to store one copy of it. Either way, constants don't eliminate storage allocation. At best they can only minimize the storage needed.
