[site]: stackoverflow
[post_id]: 2653267
[parent_id]: 2653096
[tags]: 
From here : Why should you, as a developer, even care about the Model-View-ViewModel pattern? There are a number of benefits this pattern brings to both WPF and Silverlight development. Before you go on, ask yourself: Do you need to share a project with a designer, and have the flexibility for design work and development work to happen near-simultaneously? Do you require thorough unit testing for your solutions? Is it important for you to have reusable components, both within and across projects in your organization? Would you like more flexibility to change your user interface without having to refactor other logic in the code base? If you answered "yes" to any of these questions, these are just a few of the benefits that using the MVVM model can bring for your project.
