[site]: stackoverflow
[post_id]: 2720061
[parent_id]: 
[tags]: 
address representation in ada

I have pasted a code below which is in Ada language.I need some clarification on some implementations. C : character; Char : character; type Myarr_Type is array (character range 'A'..'K') of character; Myarr : Myarr_Type := ('A','B','C','D','E','F','G','H','I','J','K'); Next_Address := Myarr'address --' Last_Address := Next_Address + Storage_Offset'(40); --' return P2 + Storage_Offset'(4); --' Last_Address := Next_Address + Storage_Offset'(4); --' Now my doubt is 1) what does P2 + Storage_Offset'(4) actually mean.Does that mean that its returning the address of the next element in the array which is 'B'.Storage_Offset'(4) in Ada --does this mean 4 bits or 4 bytes of memory. 2) If i assume that Last_Address points to last element of the array which is 'K', how does the arithmentic Storage_Offset'(40) satisfies the actual implementation? Please get back to me if u need any more clarifications. Please assume that the function does not exist. As a matter of fact,i have some ada file and my job is to convert them to C files.Since i am a beginner in ada,i faced a lot of issues with that.Please pardon in case of any confusion Thanks Maddy
