[site]: stackoverflow
[post_id]: 5762301
[parent_id]: 
[tags]: 
Python recursion limit

So I understand the reason for the recursion limit of 1000. I want to run a script continuously, but am I right understanding that eventually the recursion limit will be reached (even if I set it higher) and Python will break? In the scheme of things, its not a big deal, because I could get the OS to keep re-starting the script, but I thought there may be a more elegant solution I can employ within the script itself (swapping threads??). My script: import os import subprocess import time import logging import datetime from sys import argv if len(argv) >>') elif p.returncode == 10: printLog('****** Please check your internet connection!! ****** Rsync error code: %s' % p.returncode) else: printLog('There was a problem. Error code: %s' % p.returncode) except Exception as e: logging.debug(e) # main logic def main(): all_files = getFiles(LOC_DIR) files = [] for f in all_files: if checkExt(f): files.append(f) if len(files) == 1: printLog(' >>' % len(files)) elif len(files) > 1: printLog(' >>' % len(files)) for f in files: if checkSize(f): rsyncFile(f) printLog('No files found. Checking again in %s seconds' % RUN_INT) time.sleep(RUN_INT) printLog('Checking for files') main() if __name__ == "__main__": main()
