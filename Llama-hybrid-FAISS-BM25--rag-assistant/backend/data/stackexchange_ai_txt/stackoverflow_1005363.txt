[site]: stackoverflow
[post_id]: 1005363
[parent_id]: 1005318
[tags]: 
It's not really going to be a migration of code though, is it? What you're doing is essentially rewriting a system that exists in language a (C++ in this case) in language b (C#). The two languages don't have that much in common to facilitate an easy mechanical translation (C# Java is much easier to translate mechanically) and depending on how modern the C++ code is you might not be able to translate some of the idioms directly. My approach for a reasonable size project would be to write a "cross-compiler" in a language that allows for easy text processing (I used ruby the last time around). This cross-compiler should be able to mechanically translate about 80% of the code into something that is almost compilable in the target language. This also allows you to identify the areas of the code that need (lots of) attention from a programmer because you'll have to take the existing code and write a functional equivalent in C#. Don't forget that for this translation tool, you'll also need to write code that can pull together the necessary bits of code from header files and implementation files. Depending on how well organised the C++ code is, this is a non-trivial task.
