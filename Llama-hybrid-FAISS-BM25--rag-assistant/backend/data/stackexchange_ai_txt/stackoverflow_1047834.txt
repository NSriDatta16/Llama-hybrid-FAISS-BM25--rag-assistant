[site]: stackoverflow
[post_id]: 1047834
[parent_id]: 1044654
[tags]: 
It is error-prone, yes. I've seen lots of errors in this kind of code, mainly because some people feel that they should mess with it and the business logic in a totally disorganized way, creating maintenance nightmares. They think "real" programmers can write value |= mask; , value &= ~mask; or even worse things at any place, and that's just ok. Even better if there's some increment operator around, a couple of memcpy 's, pointer casts and whatever obscure and error-prone syntax happens to come to their mind at that time. Of course there's no need to be consistent and you can flip bits in two or three different ways, distributed randomly. My advice would be: Encapsulate this ---- in a class, with methods such as SetBit(...) and ClearBit(...) . (If you don't have classes in C, in a module.) While you're at it, you can document all their behaviour. Unit test that class or module.
