[site]: stackoverflow
[post_id]: 1021343
[parent_id]: 1018153
[tags]: 
I'd suggest you to have a look at the resource oriented architecture , first. This won't give you any direct guidelines of how to organize your code. However, when thinking in terms of resources life is more easy when it comes to deciding whether or not to create a new controller. Once you manage to identify a resource in your system, it's usually a good thing to create a model plus a controller for it - although, this is just a rule of thumb. Some additional points: look for resources and create a model and a controller for each of them (rule of thumb) don't be afraid to create models for resources that don't persist think about controllers as "plumbing" or "wiring" of user to the business domain - their role is to handle user requests and forward the answer back to them - keep them as thin as possible
