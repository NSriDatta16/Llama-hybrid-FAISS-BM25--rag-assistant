[site]: stackoverflow
[post_id]: 555657
[parent_id]: 555576
[tags]: 
Multiple thin processes and nginx are capable of providing lots of speed, depending on what your application is doing. So, the problem will be your application code, the speed of your application server, and your database server. Scaling Rails has been recently covered in depth by the Scaling Rails Screencasts . I recommend you start there. My 5 step program to scaling Rails would be: First step is to have the tools to look at what is slow in your application. Do not spend time optimizing everything in your application when you don't know what the problem is. The easiest way to be able to handle lots of requests/second is with page caching. If you can't do that, cache everything possible (fragment caching, use memcached to cache data, etc), to speed up your application. After that, optimize your application as best as possible, make SQL queries fast, index everything, etc. If you still need more speed, throw more hardware at the problem. Get a big, powerful database server, a bunch of app servers, and proxy your requests across them. You can start here, too, but it will only delay the optimization process.
