[site]: stackoverflow
[post_id]: 3008945
[parent_id]: 3003070
[tags]: 
Well, here's some things to fix with your script: 1) You do a query to check if there's anything to post, but do it by fetching all the matching rows, THEN THROWING AWAY THE RESULTS. Even though you have a 'limit 1' on the initial query, you still force MySQL to process the entire result set with the 'order by' directive. It has to find all the matching rows first, sort them descending, THEN it can pull off only the first row. Later on, you then perform the exact same query, but without the 'limit' clause. There's no reason you should run two queries when one would do. In pseudo-code: $results = mysql_query("SELECT * FROM tbl_alert ORDER BY id DESC;") or die(mysql_error()); if (mysql_num_rows() == 0) { echo "No current alerts." } else { ... start form here ... while($row = mysql_fetch_array($results)) { ... generate table rows here ... } ... finish off form here ... } 2) In your form you generate a hidden field with name="statusid". But you're outputting this for EVERY generated row with the same name. This means when the form's submitted, only the LAST generated value will be submitted. Maybe this is just to track which row you're on, but you can infer that from the other fields since you're embedding the $id value in their field names already, so I'm thinking this is a bug. 3) You're generating the 'checked' values on the radio buttons dynamically. This is fine, but you've got the same check/condition for both the 'no' and 'yes' buttons on the 'selstatus' radios, so if $status is 'yes', BOTH buttons check the checked attribute. As well, you're using the else clause to echo out an empty string. This just makes for slightly less readable code. Try replacing those with the following: /> /> Using the tertiary operator for stuff like this makes for slightly more compact code, and is somewhat easier to read than an in-line if() . 4) Ditto for the 'selected' class attributes you're adding to the label tags. The "else output blank string" portions just add to useless code bloat. 5) Within the while() loop that spits out the table rows, you use a multi-line echo statement with multiple "breakouts" to insert PHP variables. You should investigate the use of PHP's heredoc syntax which is specifically intended for multi-line text generation of this sort. Now, having said all of that, to see exactly what's being submitted to the server, try replacing the entirety or your "processing page" script with the following: This will output the entirety of the POST data, with some added formatting and variable type/length information. If your form is generated properly, you should see a section for every table row of radio buttons. If all you get is one row's worth of data, then you'll have to debug your form, because that's where the problem is.
