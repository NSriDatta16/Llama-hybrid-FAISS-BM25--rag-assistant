[site]: stackoverflow
[post_id]: 1324704
[parent_id]: 1324629
[tags]: 
C# has the following access. public - everyone can see it private - only things inside the class can see it protected - only things inside the class, or inside derived classes can see it internal - only things inside the assembly (dll or exe) can see it protected internal - only things inside the class or derived classes can see it, and only if they are in the same assembly You have only 2 options: As Neil mentioned , you can use internal , and split your code up into 2 assemblies - one for John and one for Paul. As you have already mentioned, you can use private , and nest all the JohnSecret classes inside the outer John class. paracycle's tip of using partial classes makes this reasonably nice. Note: to make multiple assemblies you must make multiple projects inside visual studio. From a pragmatic point of view, does it really matter if the directories are fenced off from each other like that? There are no security benefits in using access modifiers as anyone can always use reflection to easily call your private/internal methods anyway. The main benefit it gives you is keeping clutter out of your way when coding, but you've already put them in different namespaces, which should help with clutter anyway.
