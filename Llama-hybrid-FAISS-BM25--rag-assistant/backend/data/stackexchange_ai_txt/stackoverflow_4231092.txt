[site]: stackoverflow
[post_id]: 4231092
[parent_id]: 
[tags]: 
Gson IllegalStateException

I'm a noob when it comes to basically all forms of storage aside from SharedPreferences and some SQLite. I did some searching and found that JSON+GSON was a fast way to parse Objects and their fields into storable Strings. So, in my game, I have a Player object which has fields that are also my own classes: public class Player { private int something_game_related = 1; private Skill equipped_skill; private Item equipped_weapon; public Player () {} } I suspect those classes are the problem, because when I try to run a simple save method: private class ItemSerializer implements JsonSerializer { public JsonElement serialize( Item src, Type typeOfSrc, JsonSerializationContext context ) { return new JsonPrimitive(src.toString()); } } private class SkillSerializer implements JsonSerializer { public JsonElement serialize( Skill src, Type typeOfSrc, JsonSerializationContext context ) { return new JsonPrimitive(src.toString()); } } public void doSave() { GsonBuilder gson = new GsonBuilder(); //Both custom classes have zero-arg constructors so we don't need to register those gson.registerTypeAdapter( Item.class, new ItemSerializer() ); gson.registerTypeAdapter( Skill.class, new SkillSerializer() ); Gson g = gson.create(); String mPlayer = ""; Type player = new TypeToken (){}.getType(); try{ mPlayer = g.toJson( GameView.mPlayer, player ); } catch (Exception e) {e.printStackTrace();} } I get this Exception: java.lang.IllegalStateException: How can the type variable not be present in the class declaration! My Question is.. How do I get these custom serializers to work? Like I said, I'm a noob.. but it looks like I did it right..
