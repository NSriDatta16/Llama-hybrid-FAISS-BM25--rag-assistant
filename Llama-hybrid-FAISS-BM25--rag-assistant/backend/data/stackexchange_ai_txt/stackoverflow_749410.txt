[site]: stackoverflow
[post_id]: 749410
[parent_id]: 748573
[tags]: 
Regarding your edit, I don't think user code throwing a StackOverflowException is the same as the CLR throwing it. There's a bit of discussion about it here . Jeffrey's (Richter, author of Applied MicrosoftÂ® .NET Framework Programming ) comment applies to real stack overflows, i.e. to stack overflows that occur if your code contains an infinite recursion, something like: void MyMethod() { MyMethod(); } If you throw the StackOverflowException yourself, it will be handled like any other exception, and Jeffrey's comment does not apply. Also, Jeffrey's comment says: "if the stack overflow occurs WITHIN THE CLR ITSELF ...". So, if the .NET VM can detect the stack overflow "cleanly", i.e. without running ITSELF into a stack overflow, then you should get a StackOverflowException and your catch and finally blocks should execute as usual. But, in the tragic case where the VM ITSELF runs into a stack overflow, you won't be as lucky: the VM will not propagate a StackOverflowException (but crash in some other weird way) and your catch and finally blocks won't execute. Morale is: be careful with infinite recursion because you don't have a 100% guarantee that the VM will detect and signal them cleanly! Bruno. Clarified who "Jeffrey" was since the OP was citing that book.
