[site]: crossvalidated
[post_id]: 545219
[parent_id]: 
[tags]: 
Find the best threshold for logistic regression?

I am working on a customer purchase problem. I have 150 campaigns sent by email (or adds if you prefer), that I denote C0 , C1 ... C149 . Moreover, for each user i : Cj = 0 if campaign j is NOT received by customer i , Cj = 1 if campaign j is received by customer i Sucess = 0 or 1 ( 0 if customer i did NOT order despite the reception of campaigns, and 1 otherwise) I want to find the number of campaigns to make a customer order a product . I don't really know how to handle this problem and I'm starting to get into panic. What I did : I performed a logistic regression and got the intercept and the coef for nb_campaigns: X=np.array(data['nb_campaings']).reshape(-1,1) y=data['sucess'] X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(X, y, test_size = 0.20, random_state = 5) model1 = LogisticRegression(class_weight='balanced',random_state=0, multi_class='ovr', penalty='none', solver='newton-cg', n_jobs=-1).fit(X_train, y_train) #Print model parameters preds = model1.predict(X_test) params = model1.get_params() print('Intercept: \n', model1.intercept_[0]) print('Coefficients: \n', model1.coef_[0][0]) Intercept: -3.185764946987113 Coefficients: 0.6909684308864985 R-squared=0.32 Then, I plotted the probability of sucess=1 VS the number of campaigns received, and I have the following graph : intercept= model1.intercept_[0] coef_nb_campaigns=model1.coef_[0][0] probs=[] for i in range(0,19): probs+=[1/(1+np.exp(-(intercept+i*coef_nb_campaigns)))] sns.lineplot(range(0,19),probs) sns.scatterplot(data=test_plot,x='X_test',y='y_test') pd.DataFrame(probs) plt.xlabel("Number of campaigns received") plt.ylabel("Probability that Sucess=1") It is more likely that Y=1 (threshold>=0.5) if I send at least 4 or 5 campaigns. Do you think it is enough to solve the problem ? I am skeptical, as these calculations are theoretical. Moreover, the R squared is very low (0.32), and not only that, a threshold of 0.5 leads to "bad" predictions (cf PR Curve bellow) : According to the PR curve, a threshold of 0.5 isn't that good (low precision) so it is better to choose a least a threshold of 0.83, but I can I find the corresponding number of campaigns ( that enable to have a probability >=0.83) ? Can I use the first plot and say we need at least 7 campaigns to have "good" predictions ? Do not hesitate to warn me if there is a more appropriate method to solve the problem.
