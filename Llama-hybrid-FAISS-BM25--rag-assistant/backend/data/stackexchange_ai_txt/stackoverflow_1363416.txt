[site]: stackoverflow
[post_id]: 1363416
[parent_id]: 1362977
[tags]: 
It's actually quite a bit more complicated than you might think at first... in order to know how long a password can be valid, you need to read a "domain policy" and find out that way Then: if the user has the "UF_DONT_EXPIRE_PASSWD" flag set in his "userAccountControl", his password will never expire if the "pwdLastSet" value (a "ADSLargeInteger" or Int64 value, which is rather tricky to read in the first place) is 0, the user will have to change his password the next time he logs on if the "pwdLastSet" value is -1, the password has never been set only if none of the above are true, then the "pwdLastSet" value contains the date when the password was last set, to which you can add the "MaxPasswordAge" from the domain policy, and this will give you the date when the user's password is going to expire Phew! Did you think it would be this tricky? :-) Marc PS: If you're serious about .NET based AD programming, you ought to have this book: The .NET Developer's Guide to Directory Services Programming The book contains all the goodies like determining user's password expiration dates, determining user account lockout state and much much more - highly recommended! Joe and Ryan did an outstanding job getting all this information together and explaining it so that even an average Joe programmer like myself can understand it :-)
