[site]: stackoverflow
[post_id]: 3367591
[parent_id]: 3361665
[tags]: 
First off, make sure that all of those "questions" you ask yourself concern features that your application actually needs right now. One of the biggest issues I've seen with designing new projects is speculative design. Only add what you need. Write unit tests for what you add. When you get to the point where you need the extra features, refactor to a better design if necessary. If you do need all of the features up front, I still recommend the refactoring approach. Implement a few of the features that you can see being similar or contributing to the "bloat". When you're done, take a step back and see if you can refactor to something that is more elegant or something that distributes the responsibility more evenly between different objects and/or methods. Then continue. Various "pattern" and "refactoring" books will help you a lot here.
