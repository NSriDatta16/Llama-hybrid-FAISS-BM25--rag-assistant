[site]: stackoverflow
[post_id]: 4004590
[parent_id]: 4003802
[tags]: 
If you don't want to implement something complex than the Move Up and Move Down can be handled like this. If the source looks like this public ObservableCollection FileNames { get; set; } private void moveUp_Click(object sender, RoutedEventArgs e) { FileClass selectedfile = listBox1.SelectedItem as FileClass; int index = FileNames.IndexOf(selectedfile); if (index > 0) { FileNames.Remove(selectedfile); FileNames.Insert(index-1, selectedfile); listBox1.SelectedItem = selectedfile; } } private void moveDown_Click(object sender, RoutedEventArgs e) { FileClass selectedfile = listBox1.SelectedItem as FileClass; int index = FileNames.IndexOf(selectedfile); if (index CHANGE Try this code to move items up and down with drag and drop within the ListBox private void listBox1_Drop(object sender, DragEventArgs e) { ListBox parent = sender as ListBox; FileClass data = e.Data.GetData(typeof(FileClass)) as FileClass; FileClass objectToPlaceBefore = GetObjectDataFromPoint(parent, e.GetPosition(parent)) as FileClass; if (data != null && objectToPlaceBefore != null) { int index = FileNames.IndexOf(objectToPlaceBefore); FileNames.Remove(data); FileNames.Insert(index, data); listBox1.SelectedItem = data; } } private void listBox1_PreviewMouseLeftButtonDown(object sender, MouseButtonEventArgs e) { ListBox parent = sender as ListBox; FileClass data = GetObjectDataFromPoint(parent, e.GetPosition(parent)) as FileClass; if (data != null) { DragDrop.DoDragDrop(parent, data, DragDropEffects.Move); } } private static object GetObjectDataFromPoint(ListBox source, Point point) { UIElement element = source.InputHitTest(point) as UIElement; if (element != null) { object data = DependencyProperty.UnsetValue; while (data == DependencyProperty.UnsetValue) { data = source.ItemContainerGenerator.ItemFromContainer(element); if (data == DependencyProperty.UnsetValue) element = VisualTreeHelper.GetParent(element) as UIElement; if (element == source) return null; } if (data != DependencyProperty.UnsetValue) return data; } return null; } That should complete the drag'n'drop.
