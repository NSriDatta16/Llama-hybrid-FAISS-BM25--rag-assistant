[site]: stackoverflow
[post_id]: 1397770
[parent_id]: 1396784
[tags]: 
I would not put a JDK or JRE into a source code repository: It is bad practice to put externally versioned things into your version control because it usually leads to over-constraining, obscuring and/or hard-wiring your app's external dependencies. (Maven or Ivy are good solutions for dealing with external dependencies, though not in this case,) Putting binaries into version control is a bad idea for some version control systems. But I think your real problem (actually, your user's organization's problem) is the IT folks who refuse to contemplate upgrading the JRE: They need to be made aware of the fact that they can install multiple JRE versions on the one machine, and configure apps to launch with the JRE version they require. (It is trivial on Linux ...) They need to be made aware of the fact that their policy is an impediment to progress. They need to be made aware of the fact that their policy is a potential security issue. If they force users to deploy their own copies of JDKs / JREs in random places, it will be difficult to ensure that JRE security patches get applied. (Besides, 1.4.2 is due to be end-of-life'd soonish, and security patches for it will cease.) EDIT: and there is also the legal question of whether "redistributing" a JRE out of your source code repository is a violation of Sun's click-through JRE/JDK download license. (I don't know ...)
