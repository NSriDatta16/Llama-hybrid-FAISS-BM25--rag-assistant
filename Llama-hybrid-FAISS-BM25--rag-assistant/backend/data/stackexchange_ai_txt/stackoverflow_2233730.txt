[site]: stackoverflow
[post_id]: 2233730
[parent_id]: 
[tags]: 
How much unit-testing before start coding a method/class?

I´m starting (trying at least) to do coding using TDD principles and I have this question: how much tests do I need to write before actually start coding? Take for example a hypothetically Math class and a method Divide(int a, int b) . a) Do I have to fully test all methods of Math class ( Sum , Average , ...) before start coding Math ? b) Do I have to fully test the Divide method, asserting for example for division by zero, before start coding the method? c) Or I can create a simple test assertion and verify that it fails, write the code and check that it´s OK, reapeating the process for each of the assertions of a method? I think the option c) is the correct, but I couldn´t find an answer to it (I did some searchs but couldn´t find a definitive answer).
