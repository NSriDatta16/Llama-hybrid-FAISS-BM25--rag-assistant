[site]: stackoverflow
[post_id]: 4342158
[parent_id]: 4341300
[tags]: 
Keep it simple! It appears the moving average is a good enough damper device ; keep it as-is, maybe only increasing or decreasing its sample count if you notice that it either leaves too much noise or removes too much signal respectively. You then work off the this averaged signal exclusively. The pattern markers you seek seems relatively easy to detect. Expressed in English, these markers are: Targets = the points of inflection in the averaged readings curve, when the slope goes markedly negative to positive. You should therefore be able to detect this situation by comparison of the slope values, calculated along with the moving average , as each new reading value comes available (of course with a short delay, as of course the slope at a given point can only be calculated when the averaged reading for the next [few] point[s] is available) To avoid false detection, however, you'd need to define a few parameters aimed at filtering the undesirable patterns . These paremeters will define more precisely the meaning of " markedly " in the above target definition. Tentatively the formula for detecting a point of interest could be as simple as this (-1 * S (t-1) + S t ) > Min_delta_Slope where S is the slope (more on this) at time t-1 and t, respectively Min_delta_Slope is a parameter defining how "sharp" a change in slope we want at a minimum. Assuming normalized t and Y units, we can set the Min_delta_Slope parameter close to or even past 1. Intuitively a value of 1 (again in normalized units) would indicate that we target points where the curved "arrived" with a downward slope of say 50% and left the point with a upward slope of 50% (or 40% + 60% or .. 10% i.e almost flat and 90% i.e. almost vertical). To avoid detecting points in the case when this is merely a small dip in the curve, we can take more points into consideration, with a fancier formula such as say (Pm2 * S (t-2) + Pm1 * S (t-1) + P0 * S t + Pp1 S (t+1) ) > Min_delta_Slope where Pm2, Pm1, P0 and Pp1 are coefficients giving relative importance to the slope at various point before and after the point of interest. (Pm2 and Pm1 typically negative values unless we use only positive parameter and use negative signs in the formula) S t +/- n is the slope a various times and Min_delta_Slope is a parameter defining how "sharp" a change in slope we want at a minimum. Intuitively, this 4 points formula would take into account the shape of the curve at a point two readings prior and two reading past the point of interest (in addition to considering the point right before and after it). Given the proper values for the parameters, the formula would require that the curve be steadily coming "down" for two time slices, then steadily going up for the next two time slices, hence avoiding to mark smaller dips in the curve. An alternative way to achieve this, may be to compute the slope by using the difference in Y value between the [averaged] reading from two (or more) time slices ago and that of the current [averaged] reading. These two approaches are similar but would produce slightly different result; generally we'd have more say on the desired shape of the curve with the Pm2, Pm1, P0 and P1 parameters.
