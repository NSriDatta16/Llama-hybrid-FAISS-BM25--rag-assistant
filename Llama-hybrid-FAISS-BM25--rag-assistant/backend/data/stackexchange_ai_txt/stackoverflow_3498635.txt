[site]: stackoverflow
[post_id]: 3498635
[parent_id]: 657731
[tags]: 
Everyone learns a little differently, so I've included a few different types of resources. Books It seems that one of the biggest challenges for a COBOL programmer to move to a language like C# is the Object-Oriented way everything is done. "Everything is an object" is a pretty good generalization within C#, and certainly good enough for a beginner. So, the first suggestion is a book about Object Thinking . It attempts to introduce objects for a philosophical and historical perspective. It specifically discusses some of the differences between procedural languages and OO languages. Now, it is a bit academic (written by a professor) but there's a good fundamental basis here. Once OO is understood, there are a number of C# books available. Many people recommend Richter's CLR via C# which is a spectacularly good book. If the person is a veteran to CS, you can't recommend a better, more thorough book on C# and the CLR. For a more "approachable", feature-oriented way, I've always found Troelsen to be excellent. Websites Another approach is to compare and contrast syntaxes. Someone fluent in COBOL will think in COBOL when first attempting to write C#. So here is an article on CodeProject that does a side-by-side comparison of VB.NET, C#, and COBOL. It's not a complete overview, but it could be a good reference for someone trying to figure out how to, let's say, write a loop in C#. There is also this blog post which is more to the effect of taking C# and converting to COBOL. Still, the comparison between the two may be helpful. Training For those that need instructor-led courses, Microsoft offers Getting Started with Microsoft .NET for COBOL Programmers . Exactly where this would be offered, however, may be a challenge. Coding Fujistu makes a cool product called NetCOBOL for .NET . Nothing beats writing code. Here, you can write COBOL code within Visual Studio to produce Microsoft's Intermediate Language (MSIL) which runs on the CLR (how cool). Using this, a COBOL programmer could write OO COBOL, but leverage the .NET Framework. Perhaps using this, you could go the next step and use Reflector to decompile the IL into C#, VB, etc. The web-site doesn't list a price which means "If you have to ask, you can't afford it." Also, the goal here ISN'T to write more COBOL, so this may be a highly-addictive crutch to make the transition to C#. Videos Fujistu also has published a series of .NET for COBOL programmers on youtube. The intro video is located here and the first lesson is here , but anything by the user fujistucobol would be good.
