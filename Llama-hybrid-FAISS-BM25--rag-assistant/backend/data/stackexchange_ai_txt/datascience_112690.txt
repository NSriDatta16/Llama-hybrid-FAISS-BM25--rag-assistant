[site]: datascience
[post_id]: 112690
[parent_id]: 108529
[tags]: 
Pipeline's input is a list of steps, so you can dynamically create this list and then feed it into Pipeline object: names = ['numerical_scaler', 'categorical_encoder'] transformers = [StandardScaler(), OneHotEncoder()] columns = [num_columns_to_scale, cat_columns_to_encode] steps = [] for name, transformer, cols in zip(names, transformers, columns): if len(cols) > 0: steps.append((name, transformer, cols)) pipe = Pipeline(steps)
