[site]: crossvalidated
[post_id]: 471218
[parent_id]: 
[tags]: 
Algorithm to estimate aggregated outcome variable

I am looking for an algorithm that can estimate weights for an aggregated weighted average. The difficulty is that my outcome variable is an aggregated group variable. I have the following data that could train an algorithm: There are N groups. Say, for each group there are 3 observations that each makes up one row. Each row includes y* and n explanatory variables. For each group, there is an outcome variable y. The following table gives an example of the data: +------+----+---------------+-----+---------------+-------+ | y | y* | Explanatory 1 | ... | Explanatory n | Group | +---------------------------------------------------------+ | | 3 | 1 | ... | 500 | 1 | + ---------------------------------------------------+ | | 3 | 0 | ... | 1214 | 1 | + ---------------------------------------------------+ | 4.25 | 5 | 1 | ... | 71 | 1 | +---------------------------------------------------------+ | | 3 | 1 | ... | 23 | 2 | + ---------------------------------------------------+ | | 2 | 1 | ... | 821 | 2 | + ---------------------------------------------------+ | 2.00 | 2 | 1 | ... | 200 | 2 | ----------------------------------------------------------+ If I had an outcome variable y for each row, I could use a multivariate regression algorithm. Instead, y is a weighted average of all rows of the group. The explanatory variables make up a weight (which is unknown) for y*: w ij y* ij = (ß1*Explanatory 1 ij + ... + ßn Explanatory n ij ) y ij with index i denoting the group and j the row. The outcome variable y i then is the sum of the weighted y ij * for all rows of the group. y i = ∑ 1 3 (w ij y ij *)/ N I am now looking for an algorithm that is able to estimate the weight given the outcome variable y, such that I can estimate a ŷ for each row that takes all observations from preceding rows into account. This is my first question on StackOverflow. If you have any ideas, how I could clarify my question, please let me know. Similarly, I am totally new to working with algorithms. All hints are highly appreciated!
