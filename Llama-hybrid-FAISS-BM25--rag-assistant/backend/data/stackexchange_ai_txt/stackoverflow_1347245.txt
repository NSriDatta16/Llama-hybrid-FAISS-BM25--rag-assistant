[site]: stackoverflow
[post_id]: 1347245
[parent_id]: 1347172
[tags]: 
It isn't a question of efficiency (although that may be true) but of flexibility. Your code becomes more re-usable if it can consume an IEnumerable instead of a List. AS to efficient consider this code:- function IEnumerable GetDigits() { for(int i = 0; i numbers) { int result = 0; foreach(int i in numbers) result += i; return i; } Q : How do I take the set of numbers generated by GetDigits and get Sum to add them up? A : I need to load the set of numbers from GetDigits into a List object and pass that to the Sum function. This uses memory as all the digits need to be loaded into memory first before they can be summed. However changing the signature of Sum to:- function int Sum(IEnumerable numbers) Means I can do this:- int sumOfDigits = Sum(GetDigits()); No list is loaded into memory I only need storage for the current digit and the accumulator variable in sum.
