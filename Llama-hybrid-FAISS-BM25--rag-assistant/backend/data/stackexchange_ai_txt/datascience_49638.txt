[site]: datascience
[post_id]: 49638
[parent_id]: 
[tags]: 
Transfer Learning with CNN layer trainable True - Accuracy not improving

I am working on a image classification problem with 4 classes. And I am using Transfer Learning (Resnet50) to train the model. Below are the observation. Pre-trained weights are from imagenet dataset. And images used in this problem are different from imagenet dataset. 1. Transfer Learning (Resnet50) with CNN layer trainable false After training the model, model accuracy was around 95% (which seems to be fair). 2. Transfer Learning (Resnet50) with CNN layer trainable true Since the images are different from imagenet dataset I planned to train the CNN layers as well. However I am not seeing any improvement in the accuracy of the model. After training for 50 epochs it reached an accuracy of 60% which is quite poor considering I got a better accuracy in case 1. Could you please help me to increase the accuracy of the model in case 2? Kindly let me know if you need more details. Updates: Class distribution as given below Class A : 15000 Class B : 11000 Class C : 15000 Class D : 7000 Code snippet : def build_finetune_model(base_model, dropout, fc_layers, num_classes): for layer in base_model.layers: layer.trainable = True x = base_model.output x = Flatten()(x) for fc in fc_layers: print(fc) x = Dense(fc, activation='relu')(x) x = Dropout(dropout)(x) preditions = Dense(num_classes, activation='softmax')(x) finetune_model = Model(inputs = base_model.input, outputs = preditions) return finetune_model base_model = ResNet50(weights = 'imagenet', include_top = False, input_shape = (HEIGHT, WIDTH, 3)) finetune_model = build_finetune_model(base_model, dropout = dropout, fc_layers = FC_LAYERS, num_classes = len(class_list)) Thank you, DeepGuy
