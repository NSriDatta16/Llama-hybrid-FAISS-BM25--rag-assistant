[site]: stackoverflow
[post_id]: 5350946
[parent_id]: 5241065
[tags]: 
Actually when working with finding the elements position, you use its offsetLeft(/Top) . And each element have an offsetParent from where that position origins. When you drag an element, it is good to know it's position according to the whole document (read ), so you get a more precise point. So to find an elementes position you must create the following function: function findPos(elm) { var testElm = elm, pos = {x:0, y:0}; while( !!testElm && testElm.tagName.toLowerCase() !== "body" ) { pos.x += testElm.offsetLeft; pos.y += testElm.offsetTop; // important to use offsetParent instead of just parentNode, // as offsetParent will be where the element gets its offset from. // And that is not necesarily it parentNode! testElm = testElm.offsetParent; } return pos; } But i agree with some of the others, that jQuery DO simplify alot of these tedious calculations. But I really think it is best to get to know JS before you use the API's as it give you an understading of what JS really is. PS. Dont call this method for every mousemove event, as it will compromise performance. Intead save the value on the element ( ["startoffset"] = findPos( ) ), and then use it in the mousemove script to find its new position. Actually it is good practice, to save as many values you can upon mousedown , as mousemove will be called ALOT, and therefore should perform as little calculations/traversing as possible. See it in action: http://jsfiddle.net/fnwxu/22/
