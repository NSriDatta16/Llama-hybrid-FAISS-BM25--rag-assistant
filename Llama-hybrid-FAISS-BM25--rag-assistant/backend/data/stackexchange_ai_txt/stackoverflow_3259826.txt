[site]: stackoverflow
[post_id]: 3259826
[parent_id]: 3257771
[tags]: 
What you have shown us here is the PICTURE clause portion of a COBOL data declaration. COBOL data declarations are a bit odd and take some getting used to. Here is a link to an introductory tutorial on COBOL data declarations . This should get you started. The PICture clause you have given in your question is defining a numeric item with the following characteristics: S - Leading sign 9(5) - 5 decimal digits V - Implied decimal point 99 - 2 digits after the implied decimal point Basically, you are telling the COBOL compiler to define a numeric variable capable of holding the values -99999.99 through +99999.99. Exactly how the compiler will fulfill this request depends on the specific USAGE clause. However, for numeric items containing a fixed decimal position, the 'normal' USAGE is PACKED-DECIMAL or COMP-3 (these are just different names meaning the same thing). This link provides some introductory information concerning the storage representation of packed decimal data. Packed decimal data are useful for doing numeric computations where the number of decimal points must remain fixed. Writing packed decimal data to a report or terminal does not work particularly well. You must first convert it to a DISPLAY able format. This involves MOVE ing the packed decimal value to another variable with a USAGE DISPLAY attribute. Suppose your packed decimal variable was called PACKED-DECIMAL-NBR and was holding the value -2345.01. You could define a display variable to hold it as: 01 DISPLAY-NBR PIC +++,++9.99. then when it comes time to write/display the value contained in PACKED-DECIMAL-NBR you would do something like: MOVE PACKED-DECIMAL-NBR TO DISPLAY-NBR DISPLAY DISPLAY-NBR The MOVE converts the packed-decimal number to a character representation which you can display in reports or on the terminal. The value -2,345.01 is displayed.
