[site]: datascience
[post_id]: 113375
[parent_id]: 113369
[tags]: 
Why not use dimensional reduction algorithms? UMAP or t-SNE are quite simple to implement, they are non-linear (contrary to PCA) and they make meaningful clusters. Then, you can apply a KMeans. Here is an example with UMAP: import pandas as pd import numpy as np import umap import sklearn.cluster as cluster mydata = ... #Dataframe with numeric features mapper = umap.UMAP().fit(mydata) umap.plot.points(mapper) #After checking how many labels you have: kmeans_labels = cluster.KMeans(n_clusters=10).fit_predict(mydata) #you can also display a PCA diagnostic umap.plot.diagnostic(mapper, diagnostic_type='pca') Sources: https://umap-learn.readthedocs.io/en/latest/plotting.html https://plotly.com/python/t-sne-and-umap-projections/ https://umap-learn.readthedocs.io/en/latest/clustering.html
