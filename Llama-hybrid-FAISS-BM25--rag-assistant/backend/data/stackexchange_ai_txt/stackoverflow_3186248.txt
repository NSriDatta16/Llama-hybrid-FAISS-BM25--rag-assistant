[site]: stackoverflow
[post_id]: 3186248
[parent_id]: 3185768
[tags]: 
My two cents: Never ever trust user input. This include forms, cookies, parameters, requests... Keep your libraries updated . Everyday security flaws arise among us. Patches are released, but they are worthless if you don't apply them / upgrade your libraries. Be restrictive and paranoid . If you need the user to write his name, be restrictive and let him only use [A-z] characters and so on. Strong constraints will annoy the average user, but it will make your system more secure. Never log critical data . This means that you should not log things such as what password a user used (obvious) but also you should not be tempted to log what password did a user typed when he failed to log in into the system (because he may had a typo easy to guess). You can extend this example to all critical data. Remember, if it's not there, you don't have to worry about someone trying to get it. And extracted from wikipedia's CSFR article : Requiring authentication in GET and POST parameters, not only cookies; Checking the HTTP Referer header; Ensuring there's no crossdomain.xml file granting unintended access to Flash movies[14] Limiting the lifetime of authentication cookies When processing a POST, disregard URL parameters if you know they should come from a form Requiring a secret, user-specific token in all form submissions and side-effect URLs prevents CSRF; the attacker's site can't put the right token in its submissions
