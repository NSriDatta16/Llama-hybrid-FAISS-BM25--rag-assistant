[site]: stackoverflow
[post_id]: 383988
[parent_id]: 383966
[tags]: 
One option would be to use a Bayesian Classifier such as Reverend . The Reverend homepage gives this suggestion for a naive language detector: from reverend.thomas import Bayes guesser = Bayes() guesser.train('french', 'le la les du un une je il elle de en') guesser.train('german', 'der die das ein eine') guesser.train('spanish', 'el uno una las de la en') guesser.train('english', 'the it she he they them are were to') guesser.guess('they went to el cantina') guesser.guess('they were flying planes') guesser.train('english', 'the rain in spain falls mainly on the plain') guesser.save('my_guesser.bay') Training with more complex token sets would strengthen the results. For more information on Bayesian classification, see here and here .
