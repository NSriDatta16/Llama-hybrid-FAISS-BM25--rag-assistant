[site]: stackoverflow
[post_id]: 2766211
[parent_id]: 1208927
[tags]: 
A dictionary must define a functional relationship between words and lexemes otherwise it won't know which word to return when you lexize. In your example, al maps to three different values thus defining a multi-valued function and the lexize function doesn't know what to return. As Magnus shows, you can lexize from the proper names alan, albert, allen to the nickname al . Remember however, that the point of an FTS dictionary is not to perform transformations per se but to allow efficient indexing on semantically relevant words. This means that the lexeme need not resemble the original entry in any linguistic sense. Although you're right that a many-to-many relationship is impossible to define, do you really need to? For example, to resolve your vin example: vin vin vincent vin vincenzo vin vinnie vin but you could also do this: vin grob vincent grob vincenzo grob vinnie grob and get the same effect (although why you'd want to is another story). Thus if you were to parse a document with say 11 versions of the name Vincent then the to_tsvector function would return vin:11 in the former case and grob:11 in the latter.
