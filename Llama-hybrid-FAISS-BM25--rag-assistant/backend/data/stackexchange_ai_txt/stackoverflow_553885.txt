[site]: stackoverflow
[post_id]: 553885
[parent_id]: 553843
[tags]: 
Scrum, and other agile development methods, work best when there is trust between the people involved on both sides. Management needs to trust that developers work hard and work well. Developers need to trust that management respects their input and asks them to do appropriate work based on business needs. Absent this trust, your process will be dysfunctional. No environment is perfect, but at some point the trust issues may get bad enough that it becomes unworkable. Having said that, there are any number of things that I, as a developer, have to do "just because." I, for instance, have to do just this sort of thing because that's the way the whole organization works -- developers, included. I can live with that. I would say track your time, but plan from sprints. Record your "unproductive" time meaningfully -- as technology research, office tasks, etc. -- whatever they may be -- so that the business folks understand that you are always productive even when not developing code. EDIT Oh -- and if the time tracking activity is particularly onerous, like filling out detailed daily logs, make sure you keep track of the amount of time you spend tracking your time very clearly so they know how much the activity is costing.
