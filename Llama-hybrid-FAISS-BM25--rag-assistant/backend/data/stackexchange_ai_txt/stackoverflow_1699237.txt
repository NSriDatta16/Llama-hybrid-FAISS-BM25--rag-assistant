[site]: stackoverflow
[post_id]: 1699237
[parent_id]: 746354
[tags]: 
1) From the examples you gave I could make an assumption that you are trying to use IOC container primarily as service locator. Although almost all containers support it, main usage would be Dependency Injection . That means you should avoid calling Resolve method at all and let container inject all dependencies for you. The differences between two of them (Service Locator and Dependency Injection) is beyond this topic. 2) If you still want to use it as service locator you can just use root container ( Program.Container in your case) without creating inner containers. The sequence would be: Create ContainerBuilder Register you components in the builder Create root container: builder.Build() Access root container to resolve component instances 3) Container hierarchies can be useful in the scenarios where you need singleton behaviour in different scopes: Global \ Session \ Request (Web applications) Application \ Plugin (Desktop plugin-based applications) BTW Autofac encourage people to use tagged contexts to solve such problems:
