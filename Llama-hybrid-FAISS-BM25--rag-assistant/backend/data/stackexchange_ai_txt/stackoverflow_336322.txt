[site]: stackoverflow
[post_id]: 336322
[parent_id]: 335955
[tags]: 
I've reworked the program with some notes taken from the comments here. The 'factors' function is now ever so slightly more efficient and I also had to modify the Ïƒ_(2)(n) function to accept the new output. 'factors' went from having an output like: $ (factors 10) => (1 2 5 10) to having one like $ (factors 10) => ((2 5) (1 10)) Revised function looks like this: (defun o_2 (n) "sum of squares of divisors" (reduce #'+ (mapcar (lambda (x) (* x x)) (reduce #'append (factors n))))) After the modest re-writes I did, I only saved about 7 seconds in the calculation for 100,000. Looks like I'm going to have to get off of my ass and write a more direct approach.
