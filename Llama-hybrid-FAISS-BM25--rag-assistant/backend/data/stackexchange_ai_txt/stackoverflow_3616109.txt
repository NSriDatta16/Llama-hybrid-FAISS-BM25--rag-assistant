[site]: stackoverflow
[post_id]: 3616109
[parent_id]: 3613853
[tags]: 
I don't think that there are much tutorials for this. I'd suggest to stay with the way you do it now, but to look through "idiomatic" Scala code as well and to pay special attention in the following cases: use case classes or case objects instead of enums or "value objects" use objects for singletons if you need behavior "depending on the context" or dependency-injection-like functionality, use implicits when designing a type hierarchy or if you can factor things out of a concrete class, use traits when possible Fine grained inheritance hierarchies are OK. Keep in mind that you have pattern matching Know the "pimp my library" pattern And ask as many questions as you feel you need to understand a certain point. The Scala community is very friendly and helpful. I'd suggest the Scala mailing list, Scala IRC or scala-forum.org
