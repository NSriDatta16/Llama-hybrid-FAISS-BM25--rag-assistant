[site]: stackoverflow
[post_id]: 1570509
[parent_id]: 1570483
[tags]: 
HTTP is stateless. If you want data to persist between different page fetches, you need some other mechanism. Cookies are one way, but since they're stored on the client, they're not trustworthy on the server. $_SESSION is one approach to persistent, trustworthy storage. The most common usage is for login systems. Note that session IDs come from the client, so they're not trustworthy, but you can be fairly certain the data stored within the session itself isn't spoofed. Another option would be to use a database, but then you'd have to add code to serialize/unserialize or otherwise convert data stored in the database to and from PHP objects. One advantage databases have over sessions is that data can't easily be shared between sessions. As for storing objects as opposed to other types, it's just a matter of what your particular application uses, but it's not a necessity. Taking the login example, if you're storing authenticated user information (such as user ID and client IP address) in an object, you could store that object within $_SESSION . For another example, suppose you're writing a messaging application (e.g. forum, e-mail) that uses objects to model messages. Messages can have attachments, but the attachment form is a separate page, so you store the message object in $_SESSION . Not the most usable design, but a common one, though less so with the advent of AJAX.
