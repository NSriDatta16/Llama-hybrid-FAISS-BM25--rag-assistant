[site]: datascience
[post_id]: 97704
[parent_id]: 97695
[tags]: 
UPDATED As per your code, you have utilized River python package. OneHotEncoder PreviousImputer for handling missing/null values StandardScaler HoeffdingAdaptiveTreeClassifier machine learning model. In your code, you have utilized learn_one method which is stateless and actually does nothing, the next step you ideally need to do is to transform, transform_one will allow the features to be transformed. This is the most crucial data pre-processing step. Refer to links 1,2,3 in references that is for data pre-processing in River package for xi, yi in iter_pandas(XX, yy): model.learn_one(xi, yi) model.transform_one(xi, yi) y_pred = model.predict_one(xi) y_predict.append(y_pred) metric.update(yi, y_pred) print(metric) Without transform_one step, your input data is ideally sent to the model to be trained without making any actual changes to the input data. The main reason why your model has predicted incorrectly, as its been predicting with the null values, without actual data transformation. References: OneHotEncoder PreviousImputer StandardScaler HoeffdingAdaptiveTreeClassifier
