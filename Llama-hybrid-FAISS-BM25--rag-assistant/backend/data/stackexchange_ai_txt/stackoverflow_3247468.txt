[site]: stackoverflow
[post_id]: 3247468
[parent_id]: 3246135
[tags]: 
I was able to solve this question by writing a method that creates the organisational chart JSON from a C# DataTable: public string GoogleOrgChartJson(DataTable dt) { if ((dt == null) || (dt.Columns.Count == 0)) return ""; var sb = new StringBuilder(); sb.Append("{cols: ["); foreach (DataColumn dc in dt.Columns.Cast ().Where(dc => dc.Caption != "Format")) { sb.Append("{id: '"); sb.Append(dc.Caption); sb.Append("', label: '"); sb.Append(dc.Caption); sb.Append("', type: '"); sb.Append(dc.DataType.Name.ToLower()); sb.Append("'}, "); } sb.Remove(sb.Length - 2, 2); sb.Append("], rows: ["); foreach (DataRow dr in dt.Rows) { sb.Append("{c: ["); for (int i = 0; i As you see from the code above we need to have a DataTable with a column called Format in order to generate the f key in the JSON. Please find below an example of a C# DataTable and the call to create the JSON for the google chart API: var dt = new DataTable(); dt.Columns.Add("Name", typeof (String)).Caption = "Name"; dt.Columns.Add("Format", typeof (String)).Caption = "Format"; dt.Columns.Add("Manager", typeof (String)).Caption = "Manager"; dt.Rows.Add("Mathias Florin","Mathias Florin Technical Leader ","Christian Florin"); dt.Rows.Add("Christian Florin","Christian Florin CEO ","Christian Florin"); Page.ClientScript.RegisterStartupScript(GetType(), "vis", string.Format("var fundata = {0}", GoogleOrgChartJson(dt)), true); Additional columns can be added after the Manager column and can be accessed in JavaScript in the select event of the google chart api.
