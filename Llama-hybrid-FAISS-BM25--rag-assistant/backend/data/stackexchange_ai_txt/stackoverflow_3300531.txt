[site]: stackoverflow
[post_id]: 3300531
[parent_id]: 3290076
[tags]: 
Ok, I think I have figured out a solution. My original solution as per my question won't work because NHibernate doesn't yet support the ability to do a group by property without adding it to the select clause (see: link text ). While fooling around however, I came across these cool things called ResultTransformers. Using the AliasToBean result transformer Nhibernate will automatically map the alias's I give to each projection item to properties by the same name within a type I specify. I simply specified my SearchText object (however, I had to add an additional TotalSearchCount property for the sum projection item). It populated my objects perfectly and returned them. return Session.CreateCriteria(typeof(SearchTextLog)) .CreateAlias("SearchText", "st") .SetProjection(Projections.ProjectionList() .Add(Projections.Alias(Projections.GroupProperty("st.Id"), "Id")) .Add(Projections.Alias(Projections.GroupProperty("st.Text"), "Text")) .Add(Projections.Alias(Projections.Sum("SearchCount"), "TotalSearchCount"))) .SetMaxResults(topSearchLimit) .AddOrder(Order.Desc("TotalSearchCount")) .SetResultTransformer(Transformers.AliasToBean(typeof(SearchText))) .List (); I am surprised this wasn't easier to do. It's taken me about 4 to 5 hours of research and dev to figure this one out. Hopefully my NHibernate experience will get easier with more and more experience. I hope this helps someone else out there!
