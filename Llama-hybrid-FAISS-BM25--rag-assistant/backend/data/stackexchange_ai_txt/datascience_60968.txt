[site]: datascience
[post_id]: 60968
[parent_id]: 
[tags]: 
Training CNN for Regression

Background: I am using CNN to predict forces acting on a circular particle in a granular medium. Based on the magnitude of the forces, particle exhibits different patterns on its surface. The images are greyscaled 64-by-64 pixels. You can see different pictures with the magnitude of the corresponding force on the x-axis attached below. My attempt at a solution: I am relatively new to deep learning and data science and decided to use a simple conv net to run a regression. My code is provided below. I tried to fit the model using adam optimizer and MSE as a loss function, but it takes forever and sometimes aborts execution by itself. What could be the problem? I am running it on a PC with 8GB RAM, 1TB SSD, Intel i7 CPU, and GTX 1080 GPU. def build_model(): model = Sequential() model.add(Conv2D(64, kernel_size=(3, 3), strides = (1,1), padding = 'valid', activation='relu', input_shape=input_shape)) model.add(Conv2D(64, kernel_size = (3, 3), strides = (1,1), padding = 'valid', activation='relu')) model.add(MaxPooling2D(pool_size=(2, 2), strides = (2,2))) model.add(Dropout(0.25)) model.add(Flatten()) model.add(Dense(53824, activation='relu')) model.add(Dense(53824, activation='relu')) model.add(Dense(53824, activation='relu')) model.add(Dropout(0.5)) model.add(Dense(1, activation='linear')) return model Images of 9 particles with different force labels on x-axis:
