[site]: stackoverflow
[post_id]: 2640512
[parent_id]: 1515326
[tags]: 
Basically, tell the story of the class at the class level. Why is this here? What should it do? What should be in here? Who wrote it? Tell the story of methods at the method level. What does this do? No matter how accurate your methods names are, 20-30 characters just won't always cut it for descriptiveness. @author: Who wrote this? Who's proud of it? Who should be ashamed of their work? Interface level documentation tells me: what should this do? what will it return? Implementation level documentation tells me: how does it do it? what kind of algorithm? what sort of system load? what conditions might cause a problem? will null input cause an issue? are negative numbers okay? Class level documentation tells me: what goes here? what kind of methods should I expect to find? what does this class represent? @Deprecated tells me: why is this planned for removal? when is it expected to be removed? what is the suggested replacement? If something is final: why didn't you want me to extend this? If something is static: remind me in the class level doc, at least implicitly. In general: you're writing these for the next developer to use if and when you hit the lottery. You don't want to feel guilty about quitting and buying a yacht, so pay a bit of attention to clarity, and don't assume you're writing for yourself. As the side benefit, when someone asks you to work with the same code two years from now and you've forgotten all about it, you're going to benefit massively from good in-code documentation.
