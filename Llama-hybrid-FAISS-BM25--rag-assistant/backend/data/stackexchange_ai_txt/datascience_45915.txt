[site]: datascience
[post_id]: 45915
[parent_id]: 
[tags]: 
Is splitting the data set into train and validation applicable in unsupervised learning?

I am having a tough time implementing all the steps of setting up support vector machine (SVM) for unsupervised learning. My data set is labelled but for educational purposes I am learning unsupervised methods especially how to use SVM in an unsupervised way. Basically, in supervised learning we have a data set X that is split into Xtrain Xval and an independent Xtest which is never seen by the SVM during training. During training, the hyperparameters are learned using cross-validation (CV approach). My question is that for unsupervised learning should I need to have Xtrain , Xval and CV for learning the hyperparameters? The reason I ask is that theoretically in unsupervised learning we don't have any labelled dataset. Does this mean that we don't have Xtrain and Xval ? In the Matlab link, cross validation is done but it is unclear to me if that is done on part of the training data Xval CVSVMModel = crossval(SVMModel); [~,scorePred] = kfoldPredict(CVSVMModel); QUESTIONS: 1) Do we estimate the hyperparameters in SVM for unsupervised learning? 2) If yes, then this implies that we have access to labels when theoretically unsupervised learning is without knowing the labelled data set. This is contradictory to me. How do I estimate the hyperparameters in unsupervised SVM without Xval and splitting the dataset using c = cvpartition(n,'KFold',k) Can sombebody please suggest how to go about unsupervised learning. Thank you.
