[site]: stackoverflow
[post_id]: 4351240
[parent_id]: 
[tags]: 
Using Silvlight, custom EF POCO, custom Validation - leveraging Metadata and its not working in Silverlight 4

I am using metadata validation for both my MVC and SIlverlight together. However, the classes for silverlight arent working, and I think its due to the MetadataTypeAttribute that doesn't exist for silverlight 4. This seems to be the only thing holding by this part of my project... I am trying to avoid doing everthing custom as I dont like to reinvent the wheel, however the validation classes dont seem to render expected results..: Here is my solution for CLR: var metadataAttrib = this.GetType().GetCustomAttributes(typeof(MetadataTypeAttribute), true).OfType ().FirstOrDefault(); var buddyClassOrModelClass = metadataAttrib != null ? metadataAttrib.MetadataClassType : this.GetType(); var buddyClassProperties = TypeDescriptor.GetProperties(buddyClassOrModelClass).Cast (); var modelClassProperties = TypeDescriptor.GetProperties(this.GetType()).Cast (); var brokenRules = from buddyProp in buddyClassProperties join modelProp in modelClassProperties on buddyProp.Name equals modelProp.Name from attribute in buddyProp.Attributes.OfType () where !attribute.IsValid(modelProp.GetValue(this)) select new BrokenRule() { FieldName = buddyProp.Name, ErrorMessage = attribute.FormatErrorMessage("") }; brokenRulesList = brokenRules.ToList(); ... And here is the code for Silverlight var metadataAttrib = this.GetType().GetCustomAttributes(typeof(MetadataTypeAttribute), true).OfType ().FirstOrDefault(); var buddyClassOrModelClass = metadataAttrib != null ? metadataAttrib.MetadataClassType : this.GetType(); var buddyClassProperties = buddyClassOrModelClass.GetType().GetProperties(); var modelClassProperties = this.GetType().GetProperties(); var validationContext = new ValidationContext(this, null, null); var validationResults = from buddyProp in buddyClassProperties join modelProp in modelClassProperties on buddyProp.Name equals modelProp.Name from attribute in buddyProp.GetCustomAttributes(true).OfType ().Cast () where buddyProp.Name == modelProp.Name select attribute.GetValidationResult(modelProp, validationContext); brokenRulesList = new List (); foreach (ValidationResult vr in validationResults) { foreach (string memberName in vr.MemberNames) brokenRulesList.Add(new BrokenRule() { FieldName = memberName, ErrorMessage = vr.ErrorMessage }); } ... However, the silverlight code is not working.. Here is the test case... [MetadataType(typeof(UserMetadata))] public partial class User { public partial class UserMetadata { [Required(ErrorMessageResourceName = "UserIDValidationMessage", ErrorMessageResourceType = typeof(AppResources))] public System.Guid ID { get; set; } public Nullable UID { get; set; } [Display(Name="UserUsernameLabel", Description="Username", ResourceType=typeof(AppResources))] [Required(ErrorMessageResourceName = "UserUsernameValidationMessage", ErrorMessageResourceType = typeof(AppResources))] [StringLength(70, ErrorMessageResourceName="UserUsernameValidationMessage", ErrorMessageResourceType = typeof(AppResources))] public string Username { get; set; } [Display(Name="UserFirstNameLabel", Description="First Name", ResourceType=typeof(AppResources))] [StringLength(90, ErrorMessageResourceName="UserFirstNameValidationMessage", ErrorMessageResourceType = typeof(AppResources))] public string FirstName { get; set; } } I made a class for silverlight which lets it compile, but its not working - as expected.. using System; using System.Reflection; namespace System.ComponentModel.DataAnnotations { public class MetadataTypeAttribute : Attribute { public MetadataTypeAttribute(Type t) { MetadataClassType = t; } public Type MetadataClassType { get; set; } } } Does anyone know how to simply leverage to metadata classes for silverlight? Why the metadatatypeattribute isn't there I dont know. Any suggestions?
