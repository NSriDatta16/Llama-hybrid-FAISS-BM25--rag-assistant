[site]: crossvalidated
[post_id]: 304440
[parent_id]: 
[tags]: 
Building final model in glmnet after cross validation

This is my first time working with regularized regression so I apologize if the answer to this is obvious. I am planning on using GLMnet to run a regularized logistic regression on my data set using glmnet. Previously I have been using unregularized logistic regression and have evaluated my model/ compared different models using repeated random sub-sampling validation. After cross validation I then apply the better performing model on the entire test set in order to come up with the final model (aka the model that will be applied to new incoming data). This procedure follows the advice of this (highly ranked) cross validated discussion. However, I am confused over the question of how to build my final model for application after determining the better model with cv.glmnet. I would have imagined that I would do something similar as before where I get the best model, which in this case refers to the best lambda value (and alpha with elastic net) and run glmnet on the entire data set while passing the best value of lambda form cv.glmnet. However, according to this cross validated discussion: "you're not actually supposed to give glmnet a single value of lambda. " So, my concrete question is how to I implement the results of cv.glmnet in order to build my final model? EDIT: Based on the comments following the response by "Jogi", it appears that the coefficients of the best cv.glmnet model are the same as the coefficients when the best lambda which results from cv.glmnet is supplied to the entire dataset. Is this basically the answer to my question? If so can anyone elaborate on why this is the case? Here is a sample: age which outputs: coef(cv.glmmod, s = "lambda.min") 11 x 1 sparse Matrix of class "dgCMatrix" 1 (Intercept) 0.2231436 age . bmi_p . gender1 . m_edu1 . m_edu2 . m_edu3 . p_edu2 . p_edu3 . f_colorred . f_coloryellow . And the full dataset coefficients are: fit = glmnet(x, y=as.factor(asthma),lambda = best.lambda, family="binomial", alpha = 1) coef(fit) coef(fit) 11 x 1 sparse Matrix of class "dgCMatrix" (Intercept) 0.2231436 age 0.0000000 bmi_p . gender1 . m_edu1 . m_edu2 . m_edu3 . p_edu2 . p_edu3 . f_colorred . f_coloryellow .
