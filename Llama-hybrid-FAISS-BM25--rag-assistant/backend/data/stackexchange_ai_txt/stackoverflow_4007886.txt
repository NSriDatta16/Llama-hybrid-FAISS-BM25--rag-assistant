[site]: stackoverflow
[post_id]: 4007886
[parent_id]: 4000051
[tags]: 
In addtion to Robaticus, you need to figure out why you want to do the parallel development. In my opinion it is all about what you want to isolate If you do parallel development because there are multiple features that are developed, it depends whether the features need to be released in the same package (version / release / give it a name) and whether you want the different features to don't integrate with each other during development. The latter is important when the different features interfere with each other and you only want to spend time on the integration when you merge both features. If you need isolation on any of these reasons, you have within one release multiple branches which you merge before you do the integration test. If you do parallel development because you want to support multiple releases, then you need to know how many releases you need to support (how many release that are rolled out in production do you need to support, how many release do you have in pre-production, etc.). In this case, the advise is to have a branch per release that you need to support It sounds that you need to have this branching strategy for your organization. It also depends on the type of files that you are branching. If you have SSIS or SSRS files (or any other XML-based files), binary files, or any files that are not easy text (in contrast to C#), then it is not easy to merge the files from two different branches. You then need to have some manual involvement to actually merge these files! So as Robaticus already said, we need more information on your specific scenario to give more detailed guidance.
