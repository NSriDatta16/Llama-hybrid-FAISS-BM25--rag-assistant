[site]: stackoverflow
[post_id]: 1398336
[parent_id]: 1398216
[tags]: 
It's a bit of a trade off. You could use a SortedList and get faster index lookup, but you would be sacrificing the insert speed. To quote MSDN : ...Another difference between the SortedDictionary )>) and SortedList )>) classes is that SortedList )> ) supports efficient indexed retrieval of keys and values through the collections returned by the Keys and Values properties. It is not necessary to regenerate the lists when the properties are accessed, because the lists are just wrappers for the internal arrays of keys and values. Both SortedDictionary and SortedList implemented IDictionary , so I would get some test data and a code profiler together and try both. If neither are fast enough, you might need to start thinking of using a Dictionary (fast inserts, updates and key lookup) and manually maintaining an index in a second data structure.
