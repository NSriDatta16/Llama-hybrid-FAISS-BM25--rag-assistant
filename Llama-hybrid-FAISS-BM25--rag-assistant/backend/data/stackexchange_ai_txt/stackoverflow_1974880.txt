[site]: stackoverflow
[post_id]: 1974880
[parent_id]: 1971422
[tags]: 
I didn't understand very well if you want to generate arbitrary CPU load or CPU utilization . Yes, they are different things indeed. I'll try to cover both problems. First of all: load is the average number of processes in the running , runnable or waiting for CPU scheduler queues in a given amount of time, "the one that wants your CPU" so to speak. So, if you want to generate arbitrary load (say 0.3) you have to run a process for 30% of the time and then remove it from the run queue for 70% of the time, moving it to the sleeping queue or killing it, for example. You can try this script to do that: export LOAD=0.3 while true do yes > /dev/null & sleep $LOAD killall yes sleep `echo "1 - $LOAD" | bc` done Note that you have to wait some time (1, 10 and 15 minutes) to get the respective numbers to come up, and it will be influenced by other processes in your system. The more busy your system is the more this numbers will float. The last number (15 minutes interval) tends to be the most accurate. CPU usage is, instead, the amount of time for which CPU was used for processing instructions of a computer program. So, if you want to generate arbitrary CPU usage (say 30%) you have to run a process that is CPU bound 30% of the time and sleeps 70% of it. I wrote an example to show you that: #include #include #include #include #include #include #include #define CPUUSAGE 0.3 /* set it to a 0 tv_sec - t2->tv_sec) * 1000000 + (t1->tv_usec - t2->tv_usec); } static inline void gettime (struct timeval *t) { if (gettimeofday(t, NULL) If you want to eat up a fixed amount of RAM you can use the program in the cgkanchi 's answer .
