[site]: stackoverflow
[post_id]: 4032154
[parent_id]: 4032078
[tags]: 
This is a common problem in database design: The question of whether to separate or "archive" records that are no longer "active". The most common approaches are: Everything in one table, mark orders as "complete" as appropriate. Pros: Simplest solution (both code- and structure-wise), good flexibility (e.g. easy to "resurrect" orders). Cons: Tables can get quite large, a problem both for queries and for e.g. backups. Archive old stuff to separate table. Solves the problems from the first approach, at the cost of greater complexity. Use table with value-based partitioning. That means logically (to the application) everything is in one table, but behind the scenes the DBMS puts stuff into separate areas depending on the value(s) on some column(s). You'd probably use the "complete" column, or the "order completion date" for the partitioning. The last approach kind of combines the good parts of the first two, but needs support in the DBMS and is more complex to set up. Note: Tables that only store "archived" data are commonly referred to as "archive tables". Some DBMS even provide special storage engines for these tables (e.g. MySQL), which are optimized to allow quick retrieval and good storage efficiency, at the cost of slow changes/inserts.
