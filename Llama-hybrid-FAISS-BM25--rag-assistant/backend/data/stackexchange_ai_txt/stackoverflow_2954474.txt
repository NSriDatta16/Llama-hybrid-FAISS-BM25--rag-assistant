[site]: stackoverflow
[post_id]: 2954474
[parent_id]: 2954433
[tags]: 
Whether you need to free a block at the end of the function calling malloc() should be determined by whether the memory block is still used after the call. If it is becoming a node in the list then you should not free it at the end of the function. If it is used for temporary working memory during the call then you must free it at the end or you will eventually exhaust your heap. You must free the block when it is removed from the list. In any case using malloc() and free() on small memory blocks (i.e. linked list operations) in a real-time system (no virtual memory) is going to lead to eventual heap fragmentation. What you need to do is use a pool of memory blocks and recycle the buffers. Are you running an RTOS or is this bare metal? There are existing memory pool libraries available if you look. You can also write one but it is relatively easy to create something worse than no library at all unless you're really experienced in this area. Provide more details if you need more specific advice.
