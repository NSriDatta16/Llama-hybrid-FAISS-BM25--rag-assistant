[site]: stackoverflow
[post_id]: 4592760
[parent_id]: 4583799
[tags]: 
I decided to write an answer because comments are too small. Well, reading other Q&A on stackoverflow and looking around on the internet, I didn't find a simple solution for your problem. Actually, for .NET processes is really simple, you just need to retrieve informations from ".NET CLR Networking - Bytes Received/Bytes Sent" performance counters, as shown in this Q&A But in general, getting per-process used bandwidth isn't an easy work. For example "Microsoft Network Monitor" sniffer can trace the process that generates internet packets only for TCP traffic, because probably it maps IP-port pairs with processes using them (or something similar, TCP is a connected protocol so it is simpler). Anyway if you want to give it a try you can use the exposed API (look at this blog entry for some hint). However, as suggested in these Q&A's ( LINK 1 , LINK 2 ), the right, and probably the only way, is to write a NDIS/TDI driver that can intercept network traffic and exposing a .NET callable API to it. The problem is that such drivers can't be written in managed code, and so you need to implement it in C/C++. Obviously, if you manage to find an already written driver/sniffer exposing a callable API, you can use it. For example WinPCap has one (and some .NET wrappers like SharpPCap or PCap.Net ), but I don't think (not sure) it's able to get packets's source-process information.
