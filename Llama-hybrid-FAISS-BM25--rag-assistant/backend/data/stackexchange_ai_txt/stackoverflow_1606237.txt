[site]: stackoverflow
[post_id]: 1606237
[parent_id]: 1606181
[tags]: 
There's no memory leak in this example. It's 100% valid. What Apple means in the documentation is something like this: NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init]; [dateFormatter setDateFormat:@"yyyy"]; NSInteger year = [[dateFormatter stringFromDate:date] integerValue]; // new instance of NSDateFormatter without releasing the old one dateFormatter = [[NSDateFormatter alloc] init]; [dateFormatter setDateFormat:@"MM"]; NSInteger month = [[dateFormatter stringFromDate:date] integerValue]; [dateFormatter release]; Here are some tips to prevent these mistakes: Pay attention when reusing a pointer. Always use this construct: [[[NSDateFormatter alloc] init] autorelease] or use convinence members like [NSArray arrayWithCapacity:...] This is generally a good idea in Cocoa as the overhead is small. If you are on an iPhone this matters more. Apple recommends to manually release objects in order to keep memory low. But as always, profile first before optimizing. Don't use broad variable names like buffer that you are likely to reuse. Reusing variables does not save memory. The complier optimizes such things automatically.
