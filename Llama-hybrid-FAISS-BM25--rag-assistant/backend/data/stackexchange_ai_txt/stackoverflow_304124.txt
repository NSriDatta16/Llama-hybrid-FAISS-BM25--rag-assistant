[site]: stackoverflow
[post_id]: 304124
[parent_id]: 304103
[tags]: 
Why don't you just try it and see? The design of Haskell has borrowed from mathematical ideas in areas like category theory (monads, arrows, transformers), but most Haskell programmers only understand what these are in relation to programming anyway :-) You don't need any particularly advanced mathematics to learn Haskell, beyond things like being able to think of a function in the mathematical sense (like, "a map f: X -> Y" rather than as a "subroutine" that performs some actions), being able to think about higher order functions (e.g. to say that "'compose f g' is a function that at input x has the value f(g(x))") and so on. Haskell's notation is really clean, so that shouldn't be a problem either.
