[site]: stackoverflow
[post_id]: 1090163
[parent_id]: 1090145
[tags]: 
That's a great question. Unless you are writing open-source software or just dumped your old code online, I don't think that it is as big a problem because future employers won't see your past indiscretions. You are also likely not bound to your former employers and they won't release the source code. Most (good) developers improve over time, and past peers will realize that you are probably better today than you were then, just like they are likely better as well. Your employer paid you based on your experience then rather than your experience now, so they got what they paid for. If somebody else besides you cares enough about your application and uses it daily, then they are free to maintain it (if they have the source code). Code goes stale. An application that doesn't get maintained, improved and re factored is either perfect (unlikely), or not important enough to be worth the effort. If a former employer keeps making money on your old application without maintaining it, it's their problem and the problem of their clients, and eventually the cash cow will run dry. If you feel that your application is widely used, the code is freely available, and something there is likely to be featured on the next thedailywtf post, go ahead and fix it. Otherwise, be glad that there is enough old mediocre code out there so that you won't attract attention. I think a bigger problem is the textual crap we leave around from our earlier years - old forum posts, incorrect blog posts, flame wars over language features, and the like.
