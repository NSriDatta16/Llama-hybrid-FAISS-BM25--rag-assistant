[site]: stackoverflow
[post_id]: 858331
[parent_id]: 857703
[tags]: 
Thanks for the help guys :) Found the problem. Stoppos = $(this).position(); Should not be in: $(".item").draggable({ stop: function(event, ui) { But instead in: $(".item").droppable({ drop: function(event, ui) { Complete code: Drag drop 1 $(document).ready(function() { var Startpos = null; var Stoppos = null; // Make images draggable. $(".item").draggable({ // Elements cannot go outside #container containment: 'parent', // Make sure the element can only be dropped in a grid. grid: [150,150], // Find original position of dragged image. start: function(event, ui) { // Make sure picture always are on top when dragged (z-index). $(this).css({'z-index' : '100'}); // Show start dragged position of image. Startpos = $(this).position(); $("div#start").text("START: \nLeft: "+ Startpos.left + "\nTop: " + Startpos.top); }, // Find position where image is dropped. stop: function(event, ui) { // Revert to default layer position when dropped (z-index). $(this).css({'z-index' : '10'}); } }); $(".item").droppable({ drop: function(event, ui) { // Dragged image gets swapped with dropped on image. var prev_position = "#" + $(this).attr('id'); Stoppos = $(this).position(); var posTop = Startpos.top - Stoppos.top; var posLeft = Startpos.left - Stoppos.left; $(prev_position).css({'top' : posTop, 'left' : posLeft}); // Test window $("div#stop").text("STOP: \nLeft: "+ Stoppos.left + "\nTop: " + Stoppos.top); $("div#test").text("Passed variables. Top: " + posTop + " left: " + posLeft); } }); }); body { } #container { position:relative; width:480px; border:1px solid #000; } .item { position:relative; width:150px; height:150px; z-index:10; } Waiting... Waiting... Waiting... Waiting... Waiting... Now I just have to figure out how to get the placements of the images right when they have been moved more than one time. It seems that position:relative is automatically added to draggables and make trouble in calculating the positions :(
