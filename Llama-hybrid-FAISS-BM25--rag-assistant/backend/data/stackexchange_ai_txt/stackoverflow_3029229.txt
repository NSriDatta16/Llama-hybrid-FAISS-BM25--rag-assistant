[site]: stackoverflow
[post_id]: 3029229
[parent_id]: 3017270
[tags]: 
You could use the System.Speech.Recognition for configuring your TTS engine and the System.Speech.Synthesis namespace for recording/saving (saves to .WAV). In System.Speech.AudioFormat you can configure the output parameters of the WAV file. For Word, you can just use COM Interop to grab the file, open it and get it's text in any kind of chunk you need and feed that into the managed SAPI. I'd probably seperate things into Paragraphs/Runs, Tables, References and Other. If you're looking for a far more robust technology, one of the more well-known TTS engines is NaturallySpeaking's Server SDK - they've recently added an "Audio Streaming" feature that allows for on-the-fly TTS, so there would be no need for pre-recording to a permanent audio file (but if you want, it can also pre-record). You can also check out their AudioMining SDK , which allows for full indexing and searchability of spoken text within audio files. Their SDKs are all COM though, not .NET.
