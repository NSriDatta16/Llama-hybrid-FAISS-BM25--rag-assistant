[site]: stackoverflow
[post_id]: 4724188
[parent_id]: 4640038
[tags]: 
I'm developing a PHP framework with a collegue so this really caught my attention. Our .htaccess makes a minimal amount of assumptions. It looks like this: DirectoryIndex index.php RewriteEngine on RewriteBase / RewriteCond %{REQUEST_URI} \.png$ RewriteRule ^(.*)$ $1 [QSA,L] RewriteCond %{REQUEST_URI} \.gif$ RewriteRule ^(.*)$ $1 [QSA,L] RewriteCond %{REQUEST_URI} \.jpg$ RewriteRule ^(.*)$ $1 [QSA,L] RewriteCond %{REQUEST_URI} \.js$ RewriteRule ^(.*)$ $1 [QSA,L] RewriteCond %{REQUEST_URI} \.pdf$ RewriteRule ^(.*)$ $1 [QSA,L] RewriteCond %{REQUEST_URI} \.css$ RewriteRule ^(.*)$ $1 [QSA,L] RewriteCond %{REQUEST_URI} ^/favicon* RewriteRule ^(.*)$ favicon.ico [QSA,L] #RewriteCond %{REQUEST_FILENAME} !-f #RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^(.*)$ index.php?$1 [QSA,L] index.php in turn, looks like this: run(); } catch (\Exception $e) // catch errors and display/log { Error::indium_exception_handler($e); Error::render_error_page(); } IndiumFactory is the bootstrapper which sets up the environment. Indium is the name of our framework. IndiumFactory is autogenerated from a set of config files. Maybe I should clarify that Indium has a mechanism for loading and calling the correct controller class with the rest of REQUEST_URI as the arguments. Our forms rely on POST:ed data, so we can impose rather strict rules/filters on the URI.
