[site]: stackoverflow
[post_id]: 1994071
[parent_id]: 
[tags]: 
How safe is expression evaluation using eval?

I am building a website where I have a need that user should be able to evaluate some expression based from the value in DB tables, instead of using tools like pyparsing etc, I am thinking of using python itself, and have come up with a solution which is sufficient for my purpose. I am basically using eval to evaluate the expression and passing globals dict with empty __builtins__ so that nothing can be accessed and a locals dict for values from DB, if user will need some functions I can pass those too e.g. import datetime def today(): return datetime.datetime.now() expression = """ first_name.lower() == "anurag" and today().year == 2010 """ print eval(expression, {'__builtins__':{}}, {'first_name':'Anurag', 'today':today}) So my question is how safe it would be , I have three criteria Can user access current state of my program or table etc someshow? Can user have access to os level calls? Can user halt my system by looping or using much memory e.g. by doing range(10*8), in some cases he can e.g 100**1000 etc so 3 is not so much of a problem. i may check such op with tokenize and anyway I will be using GAE so it is not not much of concern. Edit : IMO this is not the duplicate of Q:661084 because where it ends this one starts, I want to know even with __builtins__ blocked, can user do bad things?
