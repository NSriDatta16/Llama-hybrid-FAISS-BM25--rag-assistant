[site]: stackoverflow
[post_id]: 4826587
[parent_id]: 4826482
[tags]: 
You don't override a module, you override (or, more properly, rewrite , see below) a class that belongs to a module, or belongs to the general lib folder. Based on your wording, I assume by override you mean "taking a class from app/code/core/ " and placing it in " app/code/local/ "? If that's the case then you mostly can't. Code pools work because magento adds four paths to the PHP include path. app/code/local app/code/community app/code/core lib Then, when the autoloader says include('Mage/Module/Path/To/File.php'); if will first check the local folder, then the community folder, then the core folder, and finally the lib folder. The local folder always wins. If your class is a Model, Helper, or Block, I'd suggest using the module based rewrite system. The same techniques you use to rewrite classes in the Core modules can be used to rewrite classes in local or community modules. The point of a module based system is that the code which runs the core system is inserted / behaves the same way as code other people might add to the system.
