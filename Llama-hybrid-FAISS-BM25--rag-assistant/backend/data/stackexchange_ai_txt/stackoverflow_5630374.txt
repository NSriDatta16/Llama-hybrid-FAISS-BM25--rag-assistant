[site]: stackoverflow
[post_id]: 5630374
[parent_id]: 
[tags]: 
How to turn a self-table subquery SQL to a Rails named_scope?

I'm using rails 2.3.10 and new to named_scope . I'm dealing with a SQL which retrieves a list of last invitations of a particular event. I came up with a SQL with subquery and it looks like it can do what I want. I'm thinking of is it possible to use named_scope to do the same thing so that I can make use of it with find() . I have the following questions: Is it possible to implement the SQL with named_scope ? Can it be in a elegant way so that the sub-select is not included in the :condition ?more than one named_scope needed? How do the named_scope (s) look like? How does the find() look like when it includes the name_scope(s)? SQL: SELECT * FROM invitation inv1 JOIN ( SELECT event_id, user_id, MAX(invite_time) AS last_invite_time FROM invitation GROUP BY event_id, user_id ) AS last_invite ON inv1.event_id = last_invite.event_id AND inv1.user_id = last_invite.user_id AND inv1.invite_time = last_invite.last_invite_time Invitation data: event_id user_id invite_time invite_reply_code 1 78 2011-02-01 15:21 1 2 78 2011-02-02 11:45 1 2 79 2011-02-02 11:50 1 2 79 2011-02-02 11:55 1 2 80 2011-02-02 11:50 1 2 80 2011-02-02 11:51 1 Expected result: event_id user_id invite_time invite_reply_code 2 78 2011-02-02 11:45 1 2 79 2011-02-02 11:55 1 2 80 2011-02-02 11:51 1
