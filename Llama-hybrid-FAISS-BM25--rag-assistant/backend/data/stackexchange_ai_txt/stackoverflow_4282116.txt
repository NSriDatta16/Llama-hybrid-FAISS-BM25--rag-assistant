[site]: stackoverflow
[post_id]: 4282116
[parent_id]: 4280069
[tags]: 
I show how to display an image as a texture in OpenGL ES 2.0 on the iPhone in this example , where the image is a frame of video from the camera, and this example , where I pull in a PVR-compressed texture as an image. The former example is described in the writeup here . I describe how the vertex and fragment shaders work, along with all the supporting code for them, in the video for the OpenGL ES 2.0 class which is part of my freely available iOS development course on iTunes U . Additionally, I highly recommend you read Jeff LaMarche's series of posted chapters from his unpublished OpenGL ES 2.0 book. In short, once you have the texture loaded in, you'll need to attach it as a uniform to your shader program using code like the following: glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, myTexture); glUniform1i(myTextureUniform, 0); Within your fragment shader, you'll need to define the texture uniform: uniform sampler2D myTexture; and then sample the color from the texture at the appropriate point: gl_FragColor = texture2D(myTexture, textureCoordinate); Again, I go into this in more detail within my class, and you can use these examples as starting points to work from.
