[site]: stackoverflow
[post_id]: 1556121
[parent_id]: 1538681
[tags]: 
To get a MapCanvasProjection you could derive a class from OverlayView and call the getProjection() method which returns a MapCanvasProjection type onAdd(), draw() and onRemove() must be implemented to derive from OverlayView. function MyOverlay(options) { this.setValues(options); var div = this.div_= document.createElement('div'); div.className = "overlay"; }; // MyOverlay is derived from google.maps.OverlayView MyOverlay.prototype = new google.maps.OverlayView; MyOverlay.prototype.onAdd = function() { var pane = this.getPanes().overlayLayer; pane.appendChild(this.div_); } MyOverlay.prototype.onRemove = function() { this.div_.parentNode.removeChild(this.div_); } MyOverlay.prototype.draw = function() { var projection = this.getProjection(); var position = projection.fromLatLngToDivPixel(this.getMap().getCenter()); var div = this.div_; div.style.left = position.x + 'px'; div.style.top = position.y + 'px'; div.style.display = 'block'; }; then when you're creating your map var OverLayMap = new MyOverlay( { map: map } ); For V2 you should be able to call fromLatLngToDivPixel from your GMap2 instance var centerPoint = map.fromLatLngToDivPixel(map.getCenter());
