[site]: stackoverflow
[post_id]: 617737
[parent_id]: 551779
[tags]: 
Just take another class like ClsAppearance.cs as I taken. Initialize all controls like static Infragistics.Win.Appearance txtBoxMidAppr = null; I take my own name like txtBoxMidAppr instead if the appiarance1 . due to it can be use for all textbox, by only once initialization. Make a function where we can initialize the appearance and call it on the MDI/Main form loading only once. public static void LoadAll() { txtBoxMidAppr = new Infragistics.Win.Appearance(); } Make another function here and take the appearance code from designing window public static Infragistics.Win.Appearance App_txtBoxMidAppr //text_box_small { get { txtBoxMidAppr.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(93)))), ((int)(((byte)(93)))), ((int)(((byte)(93))))); txtBoxMidAppr.ImageBackground = global::CS_POS.Properties.Resources.text_box_small; txtBoxMidAppr.ImageBackgroundStyle = Infragistics.Win.ImageBackgroundStyle.Stretched; txtBoxMidAppr.ImageHAlign = Infragistics.Win.HAlign.Right; return txtBoxMidAppr; } } In the designing code of the form, comment all appearance setting of the text box and put the function name for getting appearance from the ClsAppearance.cs class //appearance4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(93)))), ((int)(((byte)(93)))), ((int)(((byte)(93))))); //appearance4.ImageBackground = global::CS_POS.Properties.Resources.text_box_small; //appearance4.ImageBackgroundStyle = Infragistics.Win.ImageBackgroundStyle.Stretched; //appearance4.ImageHAlign = Infragistics.Win.HAlign.Right; this.uteNABoth.Appearance = CS_POS.App_Appearance.ClsAppearance.App_txtBoxMidAppr; take all controls appearance and make a function in the class and call it from there. So the appearance initialization will goes only once and can use many time.
