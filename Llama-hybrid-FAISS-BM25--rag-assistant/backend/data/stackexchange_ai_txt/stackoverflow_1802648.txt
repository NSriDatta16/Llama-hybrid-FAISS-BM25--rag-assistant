[site]: stackoverflow
[post_id]: 1802648
[parent_id]: 1796711
[tags]: 
mmmmm f#, the other white meat that dare speak its name. Go for it, F# as Mr Kay would say "its the future!". As for the pitfall...puh!, what pitfalls, you just create stuff that works without chuff and Objects. C# is great and it has its place. But as you correctly pointed out it does not suite web programming. In that matter neither does the event smoke and mirrors that ASP.net provides. Go lower. Think HttpHandlers and REST. You don't need the MVC stuff. Its and Idea and not a product. The front end GUI has nothing to do with the backend. Do you really need ASP.net? JSON/REST/POX.....develop your middle layer with these in mind and you should be ok. Stay away from WCF its propriety and nasty. as for the comment of maintainable code. Trail blaze. why be what you don't want to be. If they don't think like you, then do you want them around? When I work on projects the ideas drive the product not the technology and certainly not the masses or the mob. Large organizations cater for the mob for one reason only, and it has nothing to do with advancing the art and all about the Euro. Messages and pipes are what I would use in this current climate. Events are great when the environment supports it, but does the async nature of the web lend itself to thinking of a processing pipe with clock ticks and checking if things have been done. .Net good for one thing. middle layer with DB and logic. As for the front. Use something else. More webby. Why just F# bring in the whole shooting match of best in class. plenty to choose from php, python, ruby,clojure, haskell etc.... F# is more than what it is, but what it represents, an old way of thinking in new and desperate times of multi-core multi-threading, multi-process. As a song I once listened to said "I don't care about their different thoughts Different thoughts are good for me"
