[site]: stackoverflow
[post_id]: 555854
[parent_id]: 554750
[tags]: 
UPDATE: looks like similar question already was answered here When/Why to use Cascading in SQL Server? IMO correct answer on your question will be as usual "it depends" . If you are using a database as a storage of sensitive information (e.g. financial, medical etc.), or if someone else outside of your application could have access to the database I will vote for Hibernate/JPA approach. If your database is for logging (e.g. web site traffic etc.) or if you are developing software with embedded database you can relatively safely use cascade operations. 2. In most cases I will vote for Hibernate/JPA approach because it's more manageable and predictable. I tell you a story. Some times ago young country decided to change national currency (it happened with young countries). Couple years later new DBA saw in a currency table row with obsolete currency and decided to delete it (who knows why). Guess what happened? 30% of database was deleted because of cascade deletion operations. IMO with cascade operations you have to be super careful with all you delete/update statements from one hand and you lose power of constrains (i.e. foreign keys) for database validation from other hand.
