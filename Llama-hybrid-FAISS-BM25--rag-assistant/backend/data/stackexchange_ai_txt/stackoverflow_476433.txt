[site]: stackoverflow
[post_id]: 476433
[parent_id]: 476422
[tags]: 
Perhaps you're taking this from a relational point-of-view, but I would posit that the principles of interfaces and inheritance correspond to normalization in the world of OOP. For example, a Person abstract class containing FirstName , LastName , Gender and BirthDate can be used by classes such as Employee , User , Member etc. as a valid base class, without a need to repeat the definitions of those attributes in such subclasses. The principle of DRY, (a core principle of Andy Hunt and Dave Thomas's book The Pragmatic Programmer ), and the constant emphasis of object-oriented programming on re-use, also correspond to the efficiencies offered by Normalization in relational databases.
