[site]: stackoverflow
[post_id]: 3074415
[parent_id]: 
[tags]: 
How to bundle a ruby package into an [Objective-C] cocoa application?

I'm trying to figure out how I could bundle a package, written in Ruby ( Sass ) into a Cocoa application (Objective-C, not Ruby Cocoa) for me to execute (via NSTask is fine, unless there is an easy way to bridge ObjC Cocoa that I'm not aware of). The Sass package is something you have to install, using "gem install" or "rake install" -- doing so puts a ton of files in my ~/.gem directory. Since I want anybody who has installed my Cocoa-based application to be able to execute this tool from within my app, I don't want to have the user go through a process of installing anything additional, so I'm hoping to be able to embed everything I need in the Resources directory of my app package. However, not being that familiar with the internals and structure of Ruby (Sorry, I'm having trouble just keeping ObjC/Cocoa in my head!) , It's not clear to me just which of the 1,444 files that got installed in the ~/.gem directory (Yes, I counted) I need to embed in the application and what I might need to do to get the directory references, etc. working right. If anybody has any experience with embedding a ruby tool into a Cocoa application, I would really appreciate your input. I wasn't expecting this to be so hard, considering that ruby is installed on Mac OS X ... but apparently this package is (typically? atypically?) more than just a single script file....
