[site]: stackoverflow
[post_id]: 1461592
[parent_id]: 1461557
[tags]: 
If I understand your question correctly, you have a class that uses a DbConnection. You want to ensure that the DbConnection is correctly disposed when you are done working with it or when your class is disposed. There are a couple of ways to achieve this. If you are using a database connection as a local variable in a method then you can leverage the using() {} statement. using (SqlConnection sqlConnection = new SqlConnection(connStr)) { ...do stuff with connection here } The using () {} statement automatically calls Dispose() on objects declared within the (). (It also requires that objects declared in the () implement IDisposable to ensure they can be disposed) If you are instead working with a DbConnection as a private variable that is initialized during object construction or some other initialization method then you probably want to implement IDisposable yourself and then call _dbConnection.Dispose() in your Dispose() method. That way, when your object is disposed the db connection object will also dispose. public class MyDALObj : IDisposable { public MyDalObj() { ... create _dbConn object ... } public void Dispose() { _dbConn.Dispose(); } private DbConnection _dbConn; }
