[site]: stackoverflow
[post_id]: 4159568
[parent_id]: 4159327
[tags]: 
You can run any number of query_posts()'s on a given page. This gives you a couple alternatives to show featured pages then regular pages. One way, and the way I often organize content on my WordPress sites, is to have a 'featured' category. Featured posts or pages are assigned this category, along with any other appropriate category. Then you use that category name or ID in your query_posts() or get_posts() query string. //get featured posts (category_ID = 13) query_posts('cat=13&post_type=page'); //the loop goes here Another way is to use meta_key and meta_value in your query string. query_posts('meta_key=featured_product&meta_value=1&post_type=page'); //the loop goes here Both of these methods assume that after you query and display your featured pages, you would query your standard pages by excluding the category assigned to featured posts (13 in this example) or by using meta_compare if custom fields are used //get non-featured posts query_posts('cat=-13&post_type=page') //or query_posts('meta_key=featured_product&meta_compare=!=&meta_value=1'); //the loop goes here If you want to do it all with one query and order by featured status, I speculate that you can order by meta_value. //this might order by meta_value, i didn't test it. query_posts('post_type=page&orderby=meta_value_num&order=asc'); I recommend one of the first approaches, as it will allow custom styling of the featured products, and really won't have any downsides. I have sites with four or five custom queries on each page. Good Luck.
