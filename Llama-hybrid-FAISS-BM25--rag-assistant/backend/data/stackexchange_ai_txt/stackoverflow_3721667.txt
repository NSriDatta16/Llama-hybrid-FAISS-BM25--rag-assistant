[site]: stackoverflow
[post_id]: 3721667
[parent_id]: 3717203
[tags]: 
I'm not 100% sure I understand what you need, but the first design pattern that came to my mind was Strategy with this simple and elegant pattern, you can implement a concrete strategy for each implementation you have (xml, json, atom) and you also have a flexible solution that can be easily extended in the future to support new formats without breaking any existing code (that is the Open-Close principle). so, you would have a Factory method that would provide a "Build"/"Get" method which input would be an enum representing the required format (just an example, you can implement any way you want), and that factory method would use a strategy to actually build the object. that way, the client is 100% unaware of how the object is built, and doesn't even have to know what format it is. good luck!
