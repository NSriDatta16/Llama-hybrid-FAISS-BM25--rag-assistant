[site]: stackoverflow
[post_id]: 3063820
[parent_id]: 3063529
[tags]: 
A hashing container approaches O(1) for insert and retrieval, so from an order-of-magnitude perspective you can't get much better than that. Within a hash container, your performance over time is going to be related to two things: how good of a distribution your hash function provides, and how fast it can compute it. These are not equivalent - a poorly distributed function (where you end up with a lot of collisions) is going to be much more performance-impacting than a slower but better distributed hash function. Thus, if you could come up with a perfect hash function that was also extremely fast to compute, that would be an improvement. It's possible that constraining the data in specific ways may make that easier. But, odds are you, whatever you come up with will not be as good as what already exists.
