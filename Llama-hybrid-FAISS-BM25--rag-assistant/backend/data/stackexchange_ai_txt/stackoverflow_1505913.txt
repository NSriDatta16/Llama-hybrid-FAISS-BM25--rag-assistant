[site]: stackoverflow
[post_id]: 1505913
[parent_id]: 1503852
[tags]: 
I experimented with Blend to find the drag and drop approach to data binding which still lets you override your view model in code easily. First make your view model object which implements INotifyPropertyChanged and raises the notify event in the setters. The view models can be hierarchical. For example you could have an ObservableCollection within your main view model. In Blend open up your page or control and go to the data tab. On the right open the menu under the "Add live data source" icon. Pick "Define new object data source" Select your top level view model class and confirm the dialog In my experiments I found that it was important to bind the data source to where I wanted it first or else Blend might make a less than optimal configuration if I didn't do the next step first. Open the Objects and Timeline window in Blend Select the root object, for example UserControl Open Properties and verify that the root object is selected Find DataContext and click the square to open the menu and select DataBinding Select the data source that was just previously created Now that the data source has been created data binding is very easy. put some controls on the page open the Data window from the DataSource for your view model drag properties onto the controls to create the bindings or set the binding from the Properties window. Now you can create you live view model object in the constructor of the control public MainPage() { // Required to initialize variables InitializeComponent(); mVm = new MyViewModel(); this.DataContext = mVm; } private MyViewModel mVm; Add any initialization to retrieve data and you are ready to go.
