[site]: stackoverflow
[post_id]: 3519271
[parent_id]: 3505023
[tags]: 
disclaimer: i do not know if the following approach works when using grails. Let me know later. See better way for dynamic forms . The author says: To add LineItems I have some js that calculates the new index and adds that to the DOM. When deleting a LineItem i have to renumber all the indexes and it is what i would like to avoid So what i do I have a variable which stores the next index var nextIndex = 0; When the page is loaded, i perform a JavaScript function which calculates how many child The collection has and configure nextIndex variable. You can use JQuery or YUI, feel free. Adding a child statically I create a variable which store the template (Notice {index} ) var child = " " += " " += " Name " += " " += " " += " " When the user click on the Add child button, i replace {index} - by using regex - by the value stored in the nextIndex variable and increment by one. Then i add to the DOM See also Add and Remove HTML elements dynamically with Javascript Adding a child dinamically Here you can see The Paolo Bergantino solution By removing But i think it is the issue grow up when deleting. No matter how many child you remove, does not touch on the nextIndex variable. See here /** * var nextIndex = 3; */ // It will be removed Suppose i remove childList 1 What i do ??? Should i renumber all the indexes ??? On the server side i use AutoPopulatingList. Because childList 1 has been removed, AutoPopulatingList handles it as null . So on the initialization i do List childList = new AutoPopulatingList(new ElementFactory() { public Object createElement(int index) throws ElementInstantiationException { /** * remove any null value added */ childList.removeAll(Collections.singletonList(null)); return new Child(); } }); This way, my collection just contains two child (without any null value) and i do not need to renumber all the indexes on the client side About adding/removing you can see this link where i show a scenario wich can gives you some insight. See also Grails UI plugin
