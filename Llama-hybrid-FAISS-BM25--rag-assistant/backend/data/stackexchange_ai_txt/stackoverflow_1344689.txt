[site]: stackoverflow
[post_id]: 1344689
[parent_id]: 1341874
[tags]: 
I assume there are other easier ways to do this, but I finally got an solution. The title of the fifth viewController in the TabBarController, the only one that needs to change orientation, is "MyNotes" Inside of SubListViewController.m the TabBarControllerRotate object is created. tbc = [[TabBarControllerRotate alloc] initWithNibName:nil bundle:nil]; tbc.viewControllers = [NSArray arrayWithObjects:viewController1 , viewController2, viewController3, viewController4, viewController5, nil tbc.delegate = self; TabBarController subclasses UITabBarController and includes a BOOL property name bMyNotes. SubListViewController is a UITabBarControllerDelegate Each time the view is changed in the TabBarController a message is sent, namely - (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController Therefore SubListViewController.m contains this code: #pragma mark UITabBarControllerDelegate methods - (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController{ BOOL b = (viewController.title == @"MyNotes"); [tbc setBMyNotesTab:b]; //NSLog(@"MyNotesTab == %d", [tbc bMyNotesTab]); } Then TabBarControllerRotate.m contains: - (BOOL)shouldAutorotateToInterfaceOrientation: (UIInterfaceOrientation)interfaceOrientation { //NSLog(@"bMyNotesTab is: %d",self.bMyNotesTab); return ( (interfaceOrientation == UIInterfaceOrientationLandscapeRight || interfaceOrientation == UIInterfaceOrientationLandscapeLeft || interfaceOrientation == UIInterfaceOrientationPortrait ) && self.bMyNotesTab ); }
