[site]: stackoverflow
[post_id]: 4908440
[parent_id]: 4908379
[tags]: 
The DLL loading routines exposed in the Win32 API make sure you only have one copy of a DLL loaded per process ( see the "Remarks" section here , particular paragraph three and the last paragraph before the Security Remarks section, where per-process reference counts are discussed). I assume you're just calling LoadLibrary or similar, in which case you have one instance of G. It appears as thought it is possible to circumvent this by having multiple copies of the DLL in question in different locations ( as noted in this sort-of related question ), and loading each of those, in which case you could end up with multiple copies of all of the data in each DLL (G included).
