[site]: crossvalidated
[post_id]: 404884
[parent_id]: 
[tags]: 
contraints on parameters in MCMC

I run a basic version of mcmc, based on example given in this Metropolis-Hasting tutorial x = rep(0,10000) x[1] = 3 #initialize; I've set arbitrarily set this to 3 for(i in 2:10000){ current_x = x[i-1] proposed_x = current_x + rnorm(1,mean=0,sd=1) A = target(proposed_x)/target(current_x) if(runif(1) but get often negative values for parameters which should be strictly positive (it's a physiological model with parameters such as growth, transfer etc.). I use uniform priors because I don't know anything about these intracellular parameters. What is the best way to constraint the MCMC? I heard of simple techniques like taking the absolute value if a negative one is proposed but for sure there other methods as well. Any comments would be appreciated. EDIT After remarks from Taylor I expanded my code, see below the more complete version of the mcmc algorithm for multiple parameters. As explained before, I ran an ODE model to get the predictions, based on which I calculate the log-likelihood. Setting the model prediction to 0 solved the issue with negative values! ####################################################################### # mcmc - main function for N parameters # INPUTS: # iterNum - iteration number # startVal - initial guess # propSD - st dev for kernel - FIXED for now # expTimes - experimental data times # expData - experimental data # priorL/U - lower, upper bound for the uniform prior # sigma - st.dev for observation error - FIXED # optVar - optimized variable ####################################################################### mcmc 0) { modelPredProp n - number of exp points # f - n model predictions # sigma - st.dev for observation error - FIXED ####################################################################### logLikeNormal
