[site]: crossvalidated
[post_id]: 427174
[parent_id]: 
[tags]: 
Marginal effects of a smooth in a gamm4 model

I'm trying to obtain marginal effects of a smooth in a {gamm4} model. I notice a discrepancy between what {ggeffects} gives me and what I get manually. For a smooth x0, I calcualte the predictions over a grid of x0, at the average of other two smooths, and at each level of a categorical variable. Once I have the predictions, I average over the grouping factor to obtain the marginal effects. What is the correct way to get marginal smooths in such a case? ## Logistic Regression with smooth and categorical variables ### Simulate some data # Scale the variables to mean 0 and variance 1 # Create an 'id' variable, that is the repeat measurments for each subject library(tidyverse) library(gamm4) #> Loading required package: Matrix #> #> Attaching package: 'Matrix' #> The following object is masked from 'package:tidyr': #> #> expand #> Loading required package: lme4 #> Loading required package: mgcv #> Loading required package: nlme #> #> Attaching package: 'nlme' #> The following object is masked from 'package:lme4': #> #> lmList #> The following object is masked from 'package:dplyr': #> #> collapse #> This is mgcv 1.8-28. For overview type 'help("mgcv-package")'. #> This is gamm4 0.2-5 library(ggeffects) set.seed(1252) df Factor `by' variable example df % mutate(id = rep(c("1","2","3","4","5"), each = 80 )) %>% mutate(x0 = scale(x0), x1 = scale(x1), x2 = scale(x2), y = rbinom(400,1,0.8), fac2 = map_chr(1:400, ~sample(1:3, 1, replace = TRUE))) ### Model df_gam % plot() #> Warning in model.frame.default(Terms[[i]], data, xlev = object$xlevels): #> variable 'fac2' is not a factor #> Error: variable 'fac2' was fitted with type "character" but type "numeric" was supplied ### manually ## Create a grid of `x0` values at the average value of x1 and x2 at each level of the categorical variable. ## Make predictions on this and average over the categorical variable `fac` to get the mean prediction and the associated interval grid % group_by(x0) %>% mutate(fit = mean(fit)) %>% mutate(lower = fit - 2*se.fit, upper = fit + 2*se.fit) %>% summarize(fit = mean(fit), lower = mean(lower), upper = mean(upper)) %>% ## by grouping x0, average over the levels of fac ggplot(.,aes(x0, fit)) + geom_line() + geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) sessionInfo() #> R version 3.6.1 (2019-07-05) #> Platform: x86_64-apple-darwin15.6.0 (64-bit) #> Running under: macOS High Sierra 10.13.3 #> #> Matrix products: default #> BLAS: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib #> #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #> #> attached base packages: #> [1] stats graphics grDevices utils datasets methods base #> #> other attached packages: #> [1] ggeffects_0.12.0 gamm4_0.2-5 mgcv_1.8-28 nlme_3.1-140 #> [5] lme4_1.1-21 Matrix_1.2-17 forcats_0.4.0 stringr_1.4.0 #> [9] dplyr_0.8.3 purrr_0.3.2 readr_1.3.1 tidyr_0.8.3 #> [13] tibble_2.1.3 ggplot2_3.2.0 tidyverse_1.2.1 #> #> loaded via a namespace (and not attached): #> [1] sjlabelled_1.1.0 tidyselect_0.2.5 xfun_0.8 splines_3.6.1 #> [5] haven_2.1.1 lattice_0.20-38 colorspace_1.4-1 generics_0.0.2 #> [9] vctrs_0.2.0 htmltools_0.3.6 yaml_2.2.0 rlang_0.4.0 #> [13] nloptr_1.2.1 pillar_1.4.2 glue_1.3.1 withr_2.1.2 #> [17] modelr_0.1.4 readxl_1.3.1 sjmisc_2.8.1 munsell_0.5.0 #> [21] gtable_0.3.0 cellranger_1.1.0 rvest_0.3.4 evaluate_0.14 #> [25] labeling_0.3 knitr_1.23 highr_0.8 broom_0.5.2 #> [29] Rcpp_1.0.1 scales_1.0.0 backports_1.1.4 jsonlite_1.6 #> [33] hms_0.5.0 digest_0.6.20 stringi_1.4.3 insight_0.5.0 #> [37] grid_3.6.1 cli_1.1.0 tools_3.6.1 magrittr_1.5 #> [41] lazyeval_0.2.2 crayon_1.3.4 pkgconfig_2.0.2 zeallot_0.1.0 #> [45] MASS_7.3-51.4 xml2_1.2.0 lubridate_1.7.4 minqa_1.2.4 #> [49] assertthat_0.2.1 rmarkdown_1.14 httr_1.4.0 R6_2.4.0 #> [53] boot_1.3-22 compiler_3.6.1 Created on 2019-09-13 by the reprex package (v0.3.0)
