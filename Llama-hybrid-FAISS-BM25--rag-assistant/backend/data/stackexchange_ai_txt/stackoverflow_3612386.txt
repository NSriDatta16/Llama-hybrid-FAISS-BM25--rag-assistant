[site]: stackoverflow
[post_id]: 3612386
[parent_id]: 
[tags]: 
nhibernate + asp.net

error Could not compile the mapping document: WebApplication1.documents.hbm.xml ![alt text][1] photo http://forum.sources.ru/index.php?act=Attach&type=post&id=2684138&attach_id=1097 web.config NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle NHibernate.Connection.DriverConnectionProvider NHibernate.Driver.SqlClientDriver Data Source=MICROSOF-993CA1\SQLEXPRESS;Initial Catalog=DocsContainer;Persist Security Info=True;User ID=sa;Password=123 NHibernate.Dialect.MsSql2005Dialect false позволяет настроить параметры режима проверки подлинности, используемого ASP.NET для проверки подлинности пользователя, запрашивающего разрешение на доступ. --> позволяет настраивать параметры действий на случай возникновения необработанных ошибок во время выполнения запроса. А именно, он позволяет разработчикам настраивать HTML-страницы с сообщениями об ошибках, которые будут отображаться вместо трассировки стека ошибок. --> documents.hbm.xml documents.cs using System; using System.Collections; using System.Data; using System.Linq; using System.Reflection; using System.Web; using System.Web.Security; using System.Web.UI; using System.Web.UI.HtmlControls; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Xml.Linq; using NHibernate; using System.Security.Principal; using NHibernate.Cfg; namespace WebApplication1 { public class documents { public int id; public string name; public DateTime date; public string doclink; public documents manager; public void CreateDocuments() { documents exSample = new documents(); exSample.name = "never"; using (ISession session = OpenSession()) { using (ITransaction transaction = session.BeginTransaction()) { session.Save(exSample); transaction.Commit(); } //Response.Write("saved exSample to the databases"); } } public ISessionFactory factory; public ISession OpenSession() { if (factory == null) { Configuration conf = new Configuration(); conf.AddAssembly(Assembly.GetCallingAssembly()); factory = conf.BuildSessionFactory(); } return factory.OpenSession(); } } } use documents doc = new documents(); doc.CreateDocuments(); in doc.aspx.cs using System; using System.Collections; using System.Configuration; using System.Data; using System.Linq; using System.Web; using System.Web.Security; using System.Web.UI; using System.Web.UI.HtmlControls; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Xml.Linq; namespace WebApplication1 { public partial class docs : System.Web.UI.Page { protected void Page_Load(object sender, EventArgs e) { if (!Request.IsAuthenticated) { Response.Redirect("login.aspx"); } } protected void TextBox1_TextChanged(object sender, EventArgs e) { } protected void Button1_Click(object sender, EventArgs e) { /* String rootPath = Server.MapPath("docs\\"); if (FileUpload1.HasFile) { FileUpload1.SaveAs(rootPath + FileUpload1.FileName); Response.Write("file save in " + rootPath+FileUpload1.FileName + " size of file " + FileUpload1.FileBytes.Length.ToString()); } */ documents doc = new documents(); doc.CreateDocuments(); } } } date base CREATE TABLE documents( id int identity PRIMARY KEY, name nvarchar(50), date datetime, author nvarchar(50), doclink nvarchar(50) ) NHibernate.MappingException не обработано пользовательским кодом Message="Could not compile the mapping document: WebApplication1.documents.hbm.xml" Source="NHibernate" StackTrace: в NHibernate.Cfg.Configuration.LogAndThrow(Exception exception) в NHibernate.Cfg.Configuration.AddValidatedDocument(NamedXmlDocument doc) в NHibernate.Cfg.Configuration.ProcessMappingsQueue() в NHibernate.Cfg.Configuration.AddDocumentThroughQueue(NamedXmlDocument document) в NHibernate.Cfg.Configuration.AddXmlReader(XmlReader hbmReader, String name) в NHibernate.Cfg.Configuration.AddInputStream(Stream xmlInputStream, String name) в NHibernate.Cfg.Configuration.AddResource(String path, Assembly assembly) в NHibernate.Cfg.Configuration.AddAssembly(Assembly assembly) в WebApplication1.documents.OpenSession() в D:\Documents and Settings\Admin\Мои документы\Visual Studio 2008\Projects\WebApplication1\WebApplication1\documents.cs:строка 51 в WebApplication1.documents.CreateDocuments() в D:\Documents and Settings\Admin\Мои документы\Visual Studio 2008\Projects\WebApplication1\WebApplication1\documents.cs:строка 33 в WebApplication1.docs.Button1_Click(Object sender, EventArgs e) в D:\Documents and Settings\Admin\Мои документы\Visual Studio 2008\Projects\WebApplication1\WebApplication1\docs.aspx.cs:строка 43 в System.Web.UI.WebControls.Button.OnClick(EventArgs e) в System.Web.UI.WebControls.Button.RaisePostBackEvent(String eventArgument) в System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String eventArgument) в System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler sourceControl, String eventArgument) в System.Web.UI.Page.RaisePostBackEvent(NameValueCollection postData) в System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint) InnerException: NHibernate.MappingException Message="Problem trying to set property type by reflection" Source="NHibernate" StackTrace: в NHibernate.Mapping.SimpleValue.SetTypeUsingReflection(String className, String propertyName, String accesorName) в NHibernate.Cfg.XmlHbmBinding.ClassBinder.CreateProperty(IValue value, String propertyName, String className, XmlNode subnode, IDictionary 2 inheritedMetas) в NHibernate.Cfg.XmlHbmBinding.ClassBinder.PropertiesFromXML(XmlNode node, PersistentClass model, IDictionary 2 inheritedMetas, UniqueKey uniqueKey, Boolean mutable, Boolean nullable, Boolean naturalId) в NHibernate.Cfg.XmlHbmBinding.ClassBinder.PropertiesFromXML(XmlNode node, PersistentClass model, IDictionary 2 inheritedMetas) в NHibernate.Cfg.XmlHbmBinding.RootClassBinder.Bind(XmlNode node, HbmClass classSchema, IDictionary 2 inheritedMetas) в NHibernate.Cfg.XmlHbmBinding.MappingRootBinder.AddRootClasses(XmlNode parentNode, IDictionary`2 inheritedMetas) в NHibernate.Cfg.XmlHbmBinding.MappingRootBinder.Bind(XmlNode node) в NHibernate.Cfg.Configuration.AddValidatedDocument(NamedXmlDocument doc) InnerException: NHibernate.MappingException Message="class WebApplication1.documents, WebApplication1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null not found while looking for property: author" Source="NHibernate" StackTrace: в NHibernate.Util.ReflectHelper.ReflectedPropertyClass(String className, String name, String accessorName) в NHibernate.Mapping.SimpleValue.SetTypeUsingReflection(String className, String propertyName, String accesorName) InnerException: NHibernate.PropertyNotFoundException Message="Could not find field 'author' in class 'WebApplication1.documents'" Source="NHibernate" PropertyName="author" StackTrace: в NHibernate.Properties.FieldAccessor.GetField(Type type, String fieldName, Type originalType) в NHibernate.Properties.FieldAccessor.GetField(Type type, String fieldName, Type originalType) в NHibernate.Properties.FieldAccessor.GetField(Type type, String fieldName) в NHibernate.Properties.FieldAccessor.GetGetter(Type theClass, String propertyName) в NHibernate.Util.ReflectHelper.GetGetter(Type theClass, String propertyName, String propertyAccessorName) в NHibernate.Util.ReflectHelper.ReflectedPropertyClass(String className, String name, String accessorName) InnerException:
