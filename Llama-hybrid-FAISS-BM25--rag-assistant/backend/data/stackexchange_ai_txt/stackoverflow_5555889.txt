[site]: stackoverflow
[post_id]: 5555889
[parent_id]: 5554251
[tags]: 
Feasible? Yes. Practical? Probably not. Being a server application, you will almost certainly want to access your business objects from any thread. But dependency objects have thread affinity and must be accessed by the thread on which they were created, via their Dispatcher if necessary. And if you use the dispatcher, that means you will need to have something pumping its events. And this assumes that your business objects have properties that often take on a default value . If you don't have "common defaults", the sparse storage algorithms won't help you save memory. The reason the sparse storage system works well in WPF is because controls have so many properties, many of which always have the same values. Essentially, you'd probably be in for quite a bit of pain, and may not even reduce memory usage. It seems to me you'd be better off working around your issues in some other manner, or implementing your own free-threaded sparse storage mechanism if you validate that it will, in fact, reduce memory usage.
