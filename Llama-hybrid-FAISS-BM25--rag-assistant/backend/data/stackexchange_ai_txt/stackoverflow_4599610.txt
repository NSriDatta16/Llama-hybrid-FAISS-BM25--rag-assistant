[site]: stackoverflow
[post_id]: 4599610
[parent_id]: 4599249
[tags]: 
The real question is not about the use of pointers, but about dynamic allocation. Dynamically allocating an object (with new ) allows you to control the lifetime of the object. If you want to create the object in a function but don't want it to cease to exist as soon as the function is finished, then dynamic allocation is for you. You'll usually see pointers pointing to dynamically-allocated objects (as this is the best way to deal with them, references being a clumsy alternative); however, you can have a pointer to an object with automatic storage duration too: QGridLayout mainLayout; QGridLayout* ptr = &mainLayout; ptr->addWidget(nameLabel, 0, 0); ptr->addWidget(nameLine, 0, 1); ptr->addWidget(addressLabel, 1, 0, Qt::AlignTop); ptr->addWidget(addressText, 1, 1); ^ In this example, I'm using automatic storage (by creating the object as a "normal variable" as you put it), so the object will be destroyed at the end of the enclosing block scope (probably the end of the function, or perhaps of a conditional ( if ) block), but still using a pointer with it! Hope that helps somewhat.
