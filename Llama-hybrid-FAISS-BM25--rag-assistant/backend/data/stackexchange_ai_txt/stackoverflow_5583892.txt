[site]: stackoverflow
[post_id]: 5583892
[parent_id]: 5581288
[tags]: 
Nevermind, answered. In case someone needs to know, the trick is in 2 parts: First: In the draggable definition, under the start event, add a function that saves the original position. Like this: $('item_to_drag').draggable({ start: function(){ $(this).data("origPosition",$(this).position()); } }); Second: In the droppable definition, under the drop event, do your .get and use a function to process the answer; in case your conditions are not met, animate the draggable back to its original position. Like this: drop: function (event, ui) { $.get(url,function(data) { if (data == '"INVALIDO"') { ui.draggable.animate(ui.draggable.data("origPosition"),"slow"); } else { //store new positions, whatever; } } ); } That'll do the trick. Part of the answer came from here: In jQuery, how to revert a draggable on ajax call failure? .
