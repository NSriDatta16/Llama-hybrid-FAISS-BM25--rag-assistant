[site]: stackoverflow
[post_id]: 1521068
[parent_id]: 1520900
[tags]: 
deepesz answer is one good way to go. There is also nothing wrong with your second option: my $op = shift; # implicit shift from @ARGV my $file = shift; my @things = @ARGV; # iterate over @things; You could also skip copying @ARGV into @things and work directly on it. However, unless the script is very short, very simple, and unlikely to grow more complex over time, I would avoid taking too many short cuts. Whether you choose deepesz' approach or this one is largely a matter of taste. Deciding which is better is really a matter of philosophy. The crux of the issue is whether you should modify globals like @ARGV . Some would say it is no big deal as long as it is done in a highly visible way. Others would argue in favor of leaving @ARGV untouched. Pay no attention to anyone arguing in favor of one option or the other due to speed or memory issues. The @ARGV array is limited by most shells to a very small size and thus no significant optimization is available by using one method over the other. Getopt::Long , as has been mentioned is an excellent choice, too.
