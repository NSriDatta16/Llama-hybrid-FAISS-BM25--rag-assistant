[site]: stackoverflow
[post_id]: 5458519
[parent_id]: 5458231
[tags]: 
http://jsfiddle.net/JpYGg/6/ One important change: newAddButton.onclick = addNew; You were doing something like newAddButton.onclick = addNew(){}; which is an error, either you execute the function, i.e. addNew() , or make an anonymous function, i.e. function(){} , although there's no such thing as addNew(){} (there is something similar in Java, but that's totally unrelated). Oh and another: the difference you saw between your site and jsfiddle, was because you had your javascript execute onLoad, which means jsfiddle will wrap it, and globals, like the function addNew won't be visible from your inline event handlers (which you should probably change anyway). Notice that I have it on no wrap on my snippet. There are also a few insignificant changes (like counter increment, and semicolons) which didn't break it, but are just more my style. Regarding adding a new toolbox and not just a textbox, welcome to the flame war (which by now is possibly very much dead) about proper DOM augmentation. There are two ways you can approach this (there are more, but they all boil down to two methods in the end), either build the new like you're doing, with lots of appendChild and createElement calls, which is the "cleaner" method that uses standard DOM functions. Or you can use innerHTML , which accepts a giant string and will do the parsing itself. The first method, in addition to being "more standard", means that value injection is also more formal, so if you want to change an attribute for example, you do so in a javascript coded way, as opposed to embedding the value in a string and letting the browser parse it. The major advantage of the second way is that it is much quicker. Much quicker. It wouldn't make a difference for a few dropdown boxes, but when you have lots of things to render each DOM function is a little slower, and moreso if things need to render in between. So you can either extend your current method and add the dropdowns, or go with the "backdoor" innerHTML approach. For now do whatever feels better, optimise/change things only if you need to (which you most probably won't). Hopefully that is enough to get you going.
