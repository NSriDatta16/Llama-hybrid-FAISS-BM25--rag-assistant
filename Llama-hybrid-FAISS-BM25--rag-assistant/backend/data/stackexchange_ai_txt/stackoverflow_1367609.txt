[site]: stackoverflow
[post_id]: 1367609
[parent_id]: 1367429
[tags]: 
May not be the most elegant way, but you can sort them via value in a set as: #include #include #include #include using namespace std; struct sortPairSecond { bool operator()(const pair &lhs, const pair &rhs) { return lhs.second myMap; myMap["One"] = 1; myMap["Ten"] = 10; myMap["Five"] = 5; myMap["Zero"] = 0; myMap["Eight"] = 8; cout , sortPairSecond > mySet; for(map ::const_iterator it = myMap.begin(); it != myMap.end(); ++it) { cout first second >::const_iterator it = mySet.begin(); it != mySet.end(); ++it) { cout first second
