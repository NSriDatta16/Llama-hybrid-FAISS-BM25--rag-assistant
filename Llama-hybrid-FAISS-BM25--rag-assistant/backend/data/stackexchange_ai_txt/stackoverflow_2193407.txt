[site]: stackoverflow
[post_id]: 2193407
[parent_id]: 2182336
[tags]: 
I think you'd benefit quite a lot from tests that flex the basic functionality of the app and are likely to break when service contract changes break the service's customers. These tests (or at least a 'fast' subset of them) should be run every time you deploy your website to an integration test environment. The full set would run at least nightly. I think you need to view the website as super-project. If someone changes a service and breaks the customers, it will cause the deployment of the website to be marked as failed. With an aggregated change log across all the projects, identifying the service and developer responsible should be relatively easy. When you deploy, you'll usually deploy "the website" which is effectively calling the deployment process on each of the included services, content, etc. Or perhaps just the changed bits. Basically, what this gets to is that as an organization, you make a shift to requiring that services are stable enough that they can be integrated in with everyone else's work. If that isn't possible, they get their own branch and everyone works against the previous stable version and will have integrating with a new version of the service as a high priority story in a later sprint. Hopefully the teams want to avoid that and leave backwards compatible services available.
