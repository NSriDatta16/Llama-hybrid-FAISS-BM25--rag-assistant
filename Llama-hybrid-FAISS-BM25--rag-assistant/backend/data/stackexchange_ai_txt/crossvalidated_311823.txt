[site]: crossvalidated
[post_id]: 311823
[parent_id]: 311771
[tags]: 
This is not a trivial task and to my knowledge, there's no clearly superior way of doing this. You can't just use nearest neighbours in pixel space as the GAN can easily just have shifted the output a few pixels to either side, making the per pixel difference very high. The best approach is probably to find nearest neighbours in a compressed representation space such as the latent code vector of a convolutional autoencoder. Some GANs also have autoencoder-like architectures, making it easy to compare in their latent code space.
