[site]: stackoverflow
[post_id]: 5687454
[parent_id]: 5687386
[tags]: 
The entries always make a copy. If the key type is std::string , then, yes, that's a copy. (Behind the scenes, std::string does some optimizations so the characters aren't necessarily always copied, but that's besides the point.) (I think there's no way to get a pointer into the map's objects, so you can't change that key, ever again, just get copies upon iteration or other retrieval.) Now, if your key type is *std::string (a pointer!) then the bits in the pointer are copied, but if the value of the particular string instance is later changed, then the key will effectively be changed. (And the comparator needs to be appropriate for your key type.)
