[site]: datascience
[post_id]: 47075
[parent_id]: 45243
[tags]: 
We can assess reinforcement learning algorithm's performance itself with rewards and so on, but how can we be sure that neural network used in reinforcement learning algorithm is good or bad ? The "goodness" of the neural network is exactly what's being communicated to us through the reward signal from the environment. After all, the neural net (at least indirectly) determines what actions the agent takes. Any suboptimal behavior would result in lower reward. This information is backpropagated to the weights of the neural net by the RL algorithm being used. For example, if we're using a value network and we're trying to minimize error between experienced and predicted return, then we can perform stochastic gradient descent on parameters $w$ $$\begin{align}w_{t+1} &\doteq w_t - \frac{1}{2}\alpha\nabla_{w_t}\left[G_t-\hat{v}(S_t,w_t)\right]^2\\ &= w_t + \alpha\left[G_t-\hat{v}(S_t,w_t)\right]\nabla_{w_t}\hat{v}(S_t,w_t) \end{align}$$ (Once the neural net is fairly good at predicting the outcome of its actions, it can begin to optimize its behavior through Generalized Policy Iteration .)
