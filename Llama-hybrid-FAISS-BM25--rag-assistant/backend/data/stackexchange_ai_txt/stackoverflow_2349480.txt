[site]: stackoverflow
[post_id]: 2349480
[parent_id]: 2349468
[tags]: 
A compiler consists of three pieces: A parser An abstract syntax tree (AST) An assembly code generator There are lots of nice parser generators that start with language grammars. Maybe ANTLR would be a good place for you to start. If you want to stick to C roots, try lex/yacc or bison. There are grammars for C, but I think C in its entirety is complex. You'd do well to start off with a subset of the language and work your way up. Once you have an AST, you use it to generate the machine code that you'll run. It's doable, but not trivial. I'd also check Amazon for books about writing compilers. The Dragon Book is the classic, but there are more modern ones available. UPDATE: There have been similar questions on Stack overflow, like this one . Check out those resources as well.
