[site]: stackoverflow
[post_id]: 4976007
[parent_id]: 4975943
[tags]: 
There are two possible causes here: first, that the blocking task is blocking the UI thread rather than running on a background thread, and second, that the background thread is starving the UI thread so that it never gets the chance to respond to input. You need to find out which of these is the case. A crude way to do this is, in your Click handler, Debug.WriteLine the current thread ID (Thread.CurrentThread.ManagedThreadId), and do the same in the RunFullAutomation callback. If these print the same number, then you have the first problem. Reed and TheZenker have provided solutions to this. If these print different numbers, then you are already on a worker thread, and you have the second problem. (BackgroundWorker may get you to the worker thread more elegantly, and will help with updating the UI, but it won't stop starvation.) In this case the simplest fix is probably to set _thread.Priority = ThreadPriority.BelowNormal; before starting the worker thread. By the way, your code never appears to actually call AutomationThread.Start , which means the RunFullAutomation callback isn't even executed. Is this just a typo?
