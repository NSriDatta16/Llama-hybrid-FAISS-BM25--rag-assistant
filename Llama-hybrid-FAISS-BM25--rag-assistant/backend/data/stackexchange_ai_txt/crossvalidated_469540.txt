[site]: crossvalidated
[post_id]: 469540
[parent_id]: 469504
[tags]: 
Taking the ratio of features is just one amongst many other combinations. Once could take ratio of the cubes of the features and that could work as well. This is mostly problem specific. If this ratio has a meaning in the problem context, you're more likely to get benefit from it. For example, in advertising, click through rate is an important metric/feature for success of the campaigns. This is calculated by taking the ratio of two other raw features: number of clicks / number of ads shown. Generally speaking, engineering more, especially meaningful, features is useful for any machine learning model. Trees or GB trees are no exception to this. If the ratio is an important feature, trees will try to emulate it by branching several times, however if you had the ratio, you'd branch less. The general approach in feature engineering starts with visual inspection, i.e. plotting the target variable wrt the newly generated feature (or its combination with others). Then, you might also want to apply some feature selection algorithms and see if your new feature gets high rankings.
