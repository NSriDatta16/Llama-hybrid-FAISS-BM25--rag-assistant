[site]: stackoverflow
[post_id]: 1633983
[parent_id]: 1633616
[tags]: 
You should not use an XML parser to parse HTML. Use an HTML parser. Note that the following is perfectly valid HTML (and an XML parser would choke on it): Is this valid? This is a paragraph cell 1 cell 2 cell 3 cell 4 There are many task specific (in addition to the general purpose) HTML parsers on CPAN. They have worked perfectly for me on an immense variety of extremely messy (and most of the time invalid) HTML. It would be possible to give specific recommendations if you can specify the problem you are trying to solve. There is also HTML::TreeBuilder::XPath which uses HTML::Parser to parse the document into a tree and then allows you to query it using XPath. I have never used it but see Randal Schwartz's HTML Scraping with XPath . Given the HTML file above, the following short script: #!/usr/bin/perl use strict; use warnings; use HTML::TreeBuilder::XPath; my $tree= HTML::TreeBuilder::XPath->new; $tree->parse_file("valid.html"); my @td = $tree->findnodes_as_strings('//td'); print $_, "\n" for @td; outputs: C:\Temp> z cell 1 cell 2 cell 3 cell 4 The key point here is that the document was parsed by an HTML parser as an HTML document (despite the fact that we were able to query it using XPath).
