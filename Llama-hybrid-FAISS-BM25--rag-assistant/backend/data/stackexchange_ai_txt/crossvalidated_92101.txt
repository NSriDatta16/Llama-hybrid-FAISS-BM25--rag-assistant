[site]: crossvalidated
[post_id]: 92101
[parent_id]: 
[tags]: 
Prediction with scikit and an precomputed kernel (SVM)

I am kind of a newbie in the MachineLearning area and evaluating some tools etc. to get a feeling for it. For a project I am using a tool that creates a precomputed kernel (gram matrix) and also is able to normalize it (values between 0 and 1). My problem is, that I am not able to predict anything other than the training-set when using the precomputed kernel. Short summed up problem-description: original dataset is 1285 instances split it by using k_folds = sklearn.cross_validation.StratifiedKFold(list_of_annotations, k=5) into 5 folds (splitting manually, using the indices from the method) running (for test-purposes only on one fold for now) `classifier = svm.SVC(kernel='precomputed', probability=True) clf = classifier.fit(train_matrix, train_annotations) --> seems to work / no problems until here clf.predict(test_matrix) gives me the following error-message: ValueError: X.shape[1] = 257 should be equal to 1028, the number of samples at training time Is my approach wrong? I don't really understand the error-message - if I train the SVM with the precomputed kernel, afaik I'll not always have the same shape of the input-data (precomputed kernel on the input-data) for prediction as in the training-set?!
