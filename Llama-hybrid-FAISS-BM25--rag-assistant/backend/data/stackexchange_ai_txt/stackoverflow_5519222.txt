[site]: stackoverflow
[post_id]: 5519222
[parent_id]: 
[tags]: 
Distributing python application

I am writing a quite large Python application; the application is actually to a large part a wrapping of several shared libraries written in C and C++(Qt). I am 'installing' this without administrator rights, so everything including shared libraries, binary and also Python modules must be in non-standard locations, i.e. I have a situation like this: Shared libraries in /funny/path/lib Python modules installed in /funny/path/python/lin The python interpreter itself might also be in /nonstandard/location The whole thing is distributed as open source, and I need to find a reasonably elegant and simple way to set the necessary environment variables. The whole thing is distributed with version control software; so the environment variables must be set in some 'local addition' i.e. something like: #!/bin/bash export LD_LIBRARY_PATH /funny/path/lib:$LD_LIBRARY_PATH export PYTHONPATH /funn/path/python/lib:$PYTHONPATH # exec python main.py But I am programming in Python for a reason - I detest these shell scripts. Any views on the most elegant way to do this would be nice. Joakim
