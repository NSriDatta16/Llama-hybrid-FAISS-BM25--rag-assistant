[site]: stackoverflow
[post_id]: 830731
[parent_id]: 830709
[tags]: 
var pruned = etimes.Where(entry => Convert.ToInt64(entry.Value) >= Convert.ToInt64(stime)).ToDictionary(entry => entry.Key, entry => entry.Value); This statement simply filters the dictionary using the LINQ Where function to select which items to keep rather than those to remove (which then requires further code, as you showed). The ToDictionary converts thwe IEnumerable > to the desire Dictionary type, and is at least quite simple, if not terribly elegant or efficient due to the need to specify the two lambda expressions to select the key and value from a KeyValuePair (and then creating a new dictionary). Saying this, I don't really see it as a problem, especially if the dictionary is small and/or number of items being removed is large.
