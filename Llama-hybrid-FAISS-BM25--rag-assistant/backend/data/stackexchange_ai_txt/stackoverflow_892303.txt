[site]: stackoverflow
[post_id]: 892303
[parent_id]: 892133
[tags]: 
Avoid reference members, because they restrict what the implementation of a class can do (including, as you mention, preventing the implementation of an assignment operator) and provide no benefits to what the class can provide. Example problems: you are forced to initialise the reference in each constructor's initialiser list: there's no way to factor out this initialisation into another function ( until C++0x, anyway edit: C++ now has delegating constructors ) the reference cannot be rebound or be null. This can be an advantage, but if the code ever needs changing to allow rebinding or for the member to be null, all uses of the member need to change unlike pointer members, references can't easily be replaced by smart pointers or iterators as refactoring might require Whenever a reference is used it looks like value type ( . operator etc), but behaves like a pointer (can dangle) - so e.g. Google Style Guide discourages it
