[site]: crossvalidated
[post_id]: 413137
[parent_id]: 413133
[tags]: 
My original answer below was applicable to general (i.e non-stationary) time series. In the OP case, if the data can be modeled as $Y_t = \theta Y_{t-1} + Z_t$ , then it should be stationary, and therefore the variance is constant, so my statement about subsequent values $Z_{t+1}$ , $Z_{t+s}$ ,..getting larger is not correct. The residual standard deviation $\sigma$ is a good estimate for all values of $Z$ . (To add to the confusion, the data in the plot looks almost, but not quite stationary - there seems to be a slight downward trend - I'm surprised statsmodels.tsa was able to fit an $AR(1)$ without throwing an error, or at least a warning) Keep in mind that $Y_t = \theta Y_{t-1} + Z_t$ where $Z_t$ represents the "true" model underlying your component. Here by true, I mean the theoretical model that you have selected to represent your time series. The estimated model, that is the one actually calculated by your software and plotted by the software, will be $\hat{Y}_t = \theta Y_{t-1}$ . $Z_t$ is a stochastic process (i.e. random variable) and hence cannot be estimated by a deterministic calculation, which is what your point forecasting model is. For a model $\hat{Y}_t$ fitted on the data $[Y_0,...Y_{t-1}]$ , a good estimate $\hat{Z}_t$ is the standard deviation $\sigma$ of the residuals $\hat{Y}-Y$ . But $\sigma$ is a good estimate only for the first value $Z_t$ . Subsequent values $Z_{t+1}$ , $Z_{t+s}$ ,..will become larger and larger. Intuitively, this corresponds to the idea that the farther out into the future your forecast, the more uncertain it will be. Sometimes, depending on the forecasting method used, you can estimate the value of $Z_t$ analytically. So you have a formula $Z_{t+k+1} = f(Z_{t+k})$ which you apply iteratively to get the value $Z_{t+h}$ at your forecast horizon $h$ . Other times, you can't calculate $Z_t$ analytically, so you have to simulate it instead. For this you need to use something like an MCMC model, or sample path simulation ( here is a good example on how to do sample path simulation, it is regarding neural networks, not AR processes, and the code is in R not Python, but it is well written enough that it is still relevant to your question ).
