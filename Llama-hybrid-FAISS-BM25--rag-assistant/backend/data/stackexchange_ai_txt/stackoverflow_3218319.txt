[site]: stackoverflow
[post_id]: 3218319
[parent_id]: 3216400
[tags]: 
Yeah - I have a template approach now, but it relies on preprocessor conditionals to identify compilers and other nastiness, mainly to get the alignment handling right. IOW it's brittle and generally nasty Why don't you just use boost::variant ? if you're not going to use boost and you're already using C++0x then use type traits such as std::alignment_of/std::aligned_storage those are standardized and cross-platform and if your compiler supports them now you can use variadic templates. Use template meta-programming to compute the largest type in the type list etc.
