[site]: stackoverflow
[post_id]: 3230720
[parent_id]: 3229971
[tags]: 
" I have designed for it to not be set, therefore by design I don't expect the model binder to be setting it, but I don't want a validation error. I think it should only produce validation errors for properties that it CAN set. " Read more about this design decision here: http://bradwilson.typepad.com/blog/2010/01/input-validation-vs-model-validation-in-aspnet-mvc.html Interestingly most people complained the complete opposite of what your complaining about about. ;) Your basically telling the system that something that can't be set should always be set. So I wouldn't say MVC is working incorrectly or anything like that. Your just coding an impossible scenario. Overall your just reaching the pain points of the metadatabuddy technique. Primarily the need to have different validation for new and edit scenarios. " If I do this I open myself up to allowing the username to be changed for existing user's. I would have to add extra logic somewhere to catch this, not really very nice. I would also have to add a Bind Exclude on the action method to stop any naughty people trying to set it via a post. " IMHO your overeating to these code changes. You'd be adding a simple string to a single method call. Whats the big deal? I'd take the pragmatic approach here.
