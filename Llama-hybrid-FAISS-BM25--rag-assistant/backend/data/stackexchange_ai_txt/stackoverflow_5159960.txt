[site]: stackoverflow
[post_id]: 5159960
[parent_id]: 
[tags]: 
Seg faults with pthreads_mutex

I am implementing a particle interaction simulator in pthreads,and I keep getting segmentation faults in my pthreads code. The fault occurs in the following loop, which each thread does in the end of each timestep in my thread_routine: for (int i = first; i The strange thing is that if I uncomment one (it doesn't matter which one) or both of the couts, the program runs as expected, with no errors occurring (but this obviously kills performance, and isn't an elegant solution), giving correct output. box is a globally declared vector > > box which represents a decomposition of my (square) domain into boxes. When the loop starts, box[i][j].size() has been set to zero for all i, j, and the loop is supposed to put particles back into the box-structure (the get_id function gives correct results, I've checked) The array pthread_mutex_t locks is declared as a global pthread_mutex_t * locks , and the size is set by thread 0 and the locks initialized by thread 0 before the other threads are created: locks = (pthread_mutex_t *) malloc( box_no*box_no * sizeof( pthread_mutex_t ) ); for (int i = 0; i Do you have any idea of what could cause this? The code also runs if the number of processors is set to 1, and it seems like the more processors I run on, the earlier the seg fault occurs (it has run through the entire simulation once on two processors, but this seems to be an exception) Thanks
