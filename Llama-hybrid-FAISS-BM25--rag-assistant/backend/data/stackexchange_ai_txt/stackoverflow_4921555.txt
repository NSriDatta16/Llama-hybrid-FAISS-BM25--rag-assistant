[site]: stackoverflow
[post_id]: 4921555
[parent_id]: 4921356
[tags]: 
Events like dragging an image, bookmark (which are not explicitly set to be draggable) and other modal dialogs like alert() and confirm() are known to "pause" the the event listening activity as well as any timers that are running in that context. That said, you might want to look into the setCapture() method. It turns mouse capture on for a specified element. In other words, it redirects all mouse events to a specified DOM element until a call to .releaseCapture() is made. It is traditionally used in drag-drop scenarios. Passing true as parameter will let current element (if a container) capture all mouse events. i.e. cause the parent container to intercept events. Passing false will let mouse events reach their intended targets before bubbling. These below links are a good starting-point.. http://blog.stchur.com/category/advanced-javascript/page/2/ http://javascript.gakaa.com/object-setcapture-4-0-5-.aspx
