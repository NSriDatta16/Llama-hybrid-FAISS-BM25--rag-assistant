[site]: crossvalidated
[post_id]: 443908
[parent_id]: 443674
[tags]: 
UPDATE: This has been fixed in LambertW v0.6.5 (June 8, 2020). The error comes from get_initial_tau() , which is called for the tau.init argument as part of IGMM() . get_initial_tau() takes the original data y (or P in OP case) and transforms it to a centered/scaled version, z.init . But instead of simply using sample mean and standard deviation -- which would be bad for heavy-tailed data --, it uses robust estimators ( median() and mad() ). Now it turns out that for your data mad(P) = 0 --> the normalized data z.init is a vector of all Inf values --> kurtosis(z.init) = NaN , which throws the error. The error message unfortunately is not the best (I guess I wrongly assumed that moments::kurtosis() would throw an error if you pass a vector with Inf to it). This is a corner case bug in the implementation and I can fix it in the future. Having said that I agree with users before who point out that your particular data seems to be of discrete nature, so it does not really make much sense to Gaussianize it. In that way, the error thrown was a way to point out to you that Gaussianizing the data you have might not be the right thing to do (any data that has mad = 0 is not generated by a solely continuous data generating process -- there is some discreteness involved). In any case, a hacky way around the problem is to add tiny noise to P so that mad(P) > 0 . P.tilde
