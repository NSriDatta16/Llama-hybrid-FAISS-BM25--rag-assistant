[site]: datascience
[post_id]: 121817
[parent_id]: 
[tags]: 
RNN with PyTorch - I don't understand the initial parameters

I would like to understand the pyTorch RNN module in detail. There I created a very simple and basic example: import torch.nn as nn # example input data i_data = torch.arange(1,10).reshape((9,1)) rnn = nn.RNN(1, 1, 1, batch_first=False) # input_size, hidden_size, num_layers # Predefined weight and bias values to recalculate the RNN's result. state_dict = rnn.state_dict() state_dict["weight_ih_l0"] = torch.tensor([[2.0]]) state_dict["weight_hh_l0"] = torch.tensor([[3.0]]) state_dict["bias_ih_l0"] = torch.tensor( [4.0] ) state_dict["bias_hh_l0"] = torch.tensor( [5.0] ) rnn.load_state_dict(state_dict ) Now comes the incomprehensible for me ... If I initialize the hidden_state with the following values hidden_state = torch.zeros(1,1, dtype=torch.float32) and feed the input date to the model y, hidden_state = rnn(i_data, hidden_state) I got the error: assert (input.dim() in (2, 3)), f"RNN: Expected input to be 2-D or 3-D but received {input.dim()}-D tensor" AssertionError: RNN: Expected input to be 2-D or 3-D but received 1-D tensor I tried also many different combinations like hidden_state = torch.zeros(1,9, dtype=torch.float32) -> raise RuntimeError(msg.format(expected_hidden_size, list(hx.size()))) RuntimeError: Expected hidden size (1, 1, 1), got [1, 1, 9] hidden_state = torch.zeros(1,1,9, dtype=torch.float32) -> raise RuntimeError( RuntimeError: For unbatched 2-D input, hx should also be 2-D but got 3-D tensor I'm totally confused. Can someone please help me. Many thanks.
