[site]: stackoverflow
[post_id]: 3267453
[parent_id]: 3267290
[tags]: 
I have never used Rhino so I can't offer technical reasons, but as a generic programmer, I can offer up a pop psychology theory: For most of its life, javascript has been strictly a client side language, at least in people's heads. Even worse, it seemed like a crappy one, because there were always problems on web pages with javascript. These problems weren't necessarily the fault of the language so much as how the browsers implemented it, how they organized the dom, and what we were able to access through javascript. But in our heads we began to think "javascript has issues" or even just "javascript is limited in what it can do". So despite all the high level magic some people can do with it, many of us think of javascript as a toy language, from our early memories of the web where all it could do was make an image change on a mouse rollover. Finally, for a language to become popular,(especially when lacking a huge corporate sponsor) it needs to have some tangible benefit over the existing ones. There are already a lot of server side languages, frameworks, and runtimes competing for people's attention. What is so special about javascript that people should throw away their investments in technology X that they already use? (that's not a dig at js, just food for thought)
