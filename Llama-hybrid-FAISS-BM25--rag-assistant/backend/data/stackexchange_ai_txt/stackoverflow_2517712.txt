[site]: stackoverflow
[post_id]: 2517712
[parent_id]: 2510961
[tags]: 
If you're planning to use AJAX action calls more extensively, it may be worthwhile to go the "overkill" route, rather than the "inelegant" route. The following method configures your application to handle AJAX requests quite gracefully. In routes.php, add: Router::parseExtensions('json'); Create a new directory json in app/views/layouts/ , and a new layout default.ctp in the new directory: Create a new directory json in app/views/bookmarks/ , and a new view delete.ctp in the new directory: 1, 'message'=>__('Bookmark deleted',true)) : array( 'status'=>0, 'message'=>__('Could not delete bookmark',true)); echo $javascript->object($response); // Converts an array into a JSON object. ?> Controller: class BookmarksController extends AppController() { var $components = array('RequestHandler'); function beforeFilter() { parent::beforeFilter(); $this->RequestHandler->setContent('json', 'text/x-json'); } function delete( $id ) { $ok = $this->Bookmark->del($id); $this->set( compact($ok)); if (! $this->RequestHandler->isAjax()) $this->redirect(array('action'=>'index'),303,true); } } On the pages from which the AJAX is called, you'd change the AJAX requests from /bookmarks/delete/1234 to /bookmarks/delete/1234.json . This also make available to you the option of handling non-AJAX calls to /bookmarks/delete/1234 with an app/views/bookmarks/delete.ctp view. Any further actions that you want to handle via AJAX and JSON, you'd add views in the app/views/bookmarks/json/ directory.
