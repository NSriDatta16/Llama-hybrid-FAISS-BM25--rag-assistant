[site]: stackoverflow
[post_id]: 1622094
[parent_id]: 1622077
[tags]: 
If it is a plain variable, nothing is gained by using a shorter width, and some performance may get lost. The compiler will automatically widen storage to a full processor word, so even if you only declare 16 bits, it likely takes 32 bits on the stack. In addition, the compiler may need to perform certain truncation operations in some cases (e.g. when the field is part of a struct); these can cause a slight overhead. It really only matters for structs and arrays, i.e. if you have many values. For a struct, you may save some memory, at the expense of the overhead I mention above. Plus, you may be forced to use a smaller size if the struct needs to follow some external layout. For an array, memory savings can be relevant if the array is large.
