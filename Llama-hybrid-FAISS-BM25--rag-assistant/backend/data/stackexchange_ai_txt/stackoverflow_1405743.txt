[site]: stackoverflow
[post_id]: 1405743
[parent_id]: 
[tags]: 
How to access to ghost parent classes in ruby?

I was watching the first ruby metaprogramming screencast by prag dave. At some point he said that ruby introduce 'ghost classes' when you add a method to an instance variable. i. animal = "cat" def animal.speak puts "hola" end animal.speak # => hola animal.class # => String dog = "dog" dog.speak # Undefined method `speak' for "dog":String String.send :speak # NoMethodError: undefined method `speak' for String:Class animal.send :speak # hola Where is really the speak method store? If it is an invisible proxy class, How can we access to that proxy class?
