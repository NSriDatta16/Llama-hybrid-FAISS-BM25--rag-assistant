[site]: stackoverflow
[post_id]: 4474643
[parent_id]: 4474431
[tags]: 
If I remember correctly, the mangled function names created by STL easily exceed some built-in limit, and this is what triggers the warning. It's unfortunate that you used STLFilt to keep us from seeing the actual warnings produced by the compiler. The only work-around I found was to use typedefs and/or derived classes to shorten the names used in the template. As the others have mentioned, the best and easiest fix would be to upgrade your compiler. Edit: I tried this on my own VC6 and the error was exactly as I remembered: c:\program files\microsoft visual studio\vc98\include\xtree(118) : warning C4786: 'std::_Tree ,std::allocator >,std::pair ,std::allocator > const , std::basic_string ,std::allocator > >,std::map ,std::allocator >,std::basic_string ,std::allocator >,std::less ,std::allocator > >,std::allocator ,std::allocator > > >::_Kfn,std::less ,std::allocator > >,std::allocator ,std::allocator > > >' : identifier was truncated to '255' characters in the debug information c:\program files\microsoft visual studio\vc98\include\map(46) : see reference to class template instantiation 'std::_Tree ,std::allocator >,std::pair ,std::allocator > const ,std::basic_string ,std::allocator > >,std::map ,std::allocator >,std::basic_string ,std::allocator >,std::less ,std::allocator > >,std::allocator ,std::allocator > > >::_Kfn,std::less ,std::allocato r > >,std::allocator ,std::allocator > > >' being compiled The workaround I mentioned earlier isn't enough, because with the shortest class name possible the name of an iterator still exceeds 255 characters. The solution is to put this before the #include : #pragma warning(disable:4786)
