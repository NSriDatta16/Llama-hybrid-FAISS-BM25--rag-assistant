[site]: stackoverflow
[post_id]: 4381389
[parent_id]: 3016446
[tags]: 
i used to implement kinda passing big text to/from wcf. my trig is convert it to stream and use GZipStream to compress it then send it as byte[], luckily its never exceed 10 MB. In your case i recommend do fragmentation. Convert Serialized object to byte[] and then merg it and decompress psudo int transferSize = 5000000; // 5MB byte[] compressed = ...; var mem = new System.IO.MemoryStream(compressed); for(int i = 0; i edit 08 Dec 2010 ok based on my understanding, the situation is client is download some large serialize object throught WCF. i didn't particularly test on this solution, but guess it should work. The key is save serialized object to file and use Response transmit that file. [WebMethod] public void GetSerializedObject() { string path = @"X:\temp.tmp"; var serializer = new System.Runtime.Serialization.NetDataContractSerializer(); var file = new System.IO.FileStream(path, System.IO.FileMode.CreateNew); try { serializer.Serialize(file, ...); this.Context.Response.TransmitFile(path); this.Context.Response.Flush(); } finally { file.Flush(); file.Close(); file.Dispose(); System.IO.File.Delete(path); } } WCF shoud do file streaming automatically and u dont ahve to worry about serialized object size since we use file transmit. Dont forget to the config response limit.
