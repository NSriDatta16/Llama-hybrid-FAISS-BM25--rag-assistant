[site]: stackoverflow
[post_id]: 2546514
[parent_id]: 2546291
[tags]: 
What would be the smallest and largest number of comparisons in an unsorted array that could have duplicate elements as well ? If you are searching for a single specified value, then the smallest and largest number of comparisions will be 1 and n, respectively. If the value is known to be in the array, and you are only seeking its location, then you can get away with n-1 comparisions. I understand that finding anything in an unsorted array is a O(n) problem. But, is this true if the array contains duplicate elements as well ? Yes, it is still O(n). Suppose that the presence of duplicates means that, on average, the time searching is cut in half. Well, that's a great reduction, but it doesn't affect the O(n) time. Big-O isn't average case, it's worst case, and the worst case doesn't change. And division of n by a constant factor doesn't affect big-O time, anyway.
