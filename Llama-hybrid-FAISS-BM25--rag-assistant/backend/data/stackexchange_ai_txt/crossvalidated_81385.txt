[site]: crossvalidated
[post_id]: 81385
[parent_id]: 81364
[tags]: 
PCA and "star coordinates" do different things. Because star coordinates standardize all the values, a fair comparison would apply PCA to a correlation matrix (rather than the covariance matrix), which is another way of standardizing the values. PCA identifies a coordinate system adapted to the shape of the data, while star coordinates are based on the given coordinates originally in the data. This makes PCA far more flexible for uncovering relationships among the data. "Star coordinates" are, in contrast, not a whole lot more than a 2D graphic of univariate information. PCA (when performed on a correlation matrix) uses the data means for the origin and their standard deviations for scales. Star coordinates use the data minima for the origin and their ranges for scales. The minima and ranges are far more sensitive to outlying data than standard deviations are, making star coordinates less suitable for general-purpose data exploration. As such, each has its strengths--although the particular strengths of star coordinates relative to PCA are difficult to fathom. As an example, consider these two 3D datasets. Each consists of 300 points and in each one the point cloud has a very flat elliptical"pancake" shape. (The singular values of each correlation matrix are close to $\{2, 1, .01\}$.) The top row of the figure presents the correlation matrices, the second row shows a view of the point clouds in pseudo 3D (oriented approximately to capture the two largest principal components), and the bottom row is the "star coordinates" picture of the same points. Due to the different orientations of these point clouds relative to the original coordinate axes, the star coordinates plots are entirely different. This is characteristic: star coordinates give (very limited) information about the original coordinates while PCA reveals relationships among the coordinates. You can also see that star coordinates are a kind of "accidental" projection: sometimes they will capture large principal components of the data, as in the left hand version, and sometimes they will capture large and small components (as in the right hand), and at other times (not illustrated) they capture only small components (and all the points are clustered densely near the origin, revealing almost nothing).
