[site]: stackoverflow
[post_id]: 2547489
[parent_id]: 2533645
[tags]: 
For SpringSecurity - you need to upgrade to 3.x to leverage CAS attributes via the built-in support, see: GrantedAuthorityFromAssertionAttributesUserDetailsService.java It doesn't look like SpringSecurity 2.x populates based on CAS attributes - if you look at: CasAuthenticationProvider.java at getUserDetailsService(): /** * Template method for retrieving the UserDetails based on the assertion. Default is to call configured userDetailsService and pass the username. Deployers * can override this method and retrieve the user based on any criteria they desire. * * @param assertion The CAS Assertion. * @returns the UserDetails. */ protected UserDetails loadUserByAssertion(final Assertion assertion) { return this.userDetailsService.loadUserByUsername(assertion.getPrincipal().getName()); } You could of course override this with a UserDetails implementation, if you have to stay on 2.x for some reason.
