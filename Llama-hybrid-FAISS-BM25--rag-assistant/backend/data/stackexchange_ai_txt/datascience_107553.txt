[site]: datascience
[post_id]: 107553
[parent_id]: 
[tags]: 
how to link the predicted output to the original observation?

Am working on a binary classification using logistic regression data I have 1000 rows and 28 features. Three to 4 variables are Id variables like product_id, subject_id etc During train_test split, I drop them like as shown below X = df.drop(['status','Product_ID','subject_ID'], axis=1) y = df.status X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0) Once I do this I do some preprocessing and modelling tasks as below a) encoding categorical variables for train and test separately b) model.fit() c) model.predict() d) Finally, I get the y_pred and I compare it with y_test . My question are as follows a) when there is no identifier in y_pred , how can I link back to get the full row of that instance? Meaning, I want the full data row of that observation along with new column predicted_status (beside already existing actual status column). Is there anyway to include ID variables in model building process but make their effect as 0 (or just stay there as a useless column) b) Would the same order be preserved during train-test split,encoding,cross-validation,testing etc c) What happens if we split train and test based on some criteria like year between 2015-2020 (becomes train) and anytime after 2020 becomes test?
