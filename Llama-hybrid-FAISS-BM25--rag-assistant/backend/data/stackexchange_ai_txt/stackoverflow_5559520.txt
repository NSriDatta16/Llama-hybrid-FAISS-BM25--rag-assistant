[site]: stackoverflow
[post_id]: 5559520
[parent_id]: 5435913
[tags]: 
Alternate datastructures I would suggest that, given your desire to also search through the stored "string" values you should consider whether either a Trie structure such as a Patricia Trie or, for even better memory amortisation, a Directed Acyclic Word Graph (refered to affctionalty as a DAWG) would work better. Construction of them would take longer (though often they are used in cases where the underlying storage itself represents this form reasonably well allowing rapid construction up front)and even though some operations on them are algorithmically superior you may find that in your real world usage things are actually slower they do significantly reduce the memory footprint of your data so long as there is a reasonable amount of repetition. These can be viewed as generalisations of the (built in) de duplification provided in .net (and java and many other managed languages) of string interning. If you specifically wish to retain an ordering of the strings with some lexicographical manner (so you need only consider one character or code point at a time) then the Patricia Trie is likely to be the preferable option, implementing the ordering on top of the DAWG would be problematic. Alternate, more esoteric solutions may work if you have a particular domain of strings including: run length encoding and other forms of compression. At the cost of random access to a string and the risk of actually using more memory if the inputs turn out to not be as hoped. Huffman coding tends to work well on english text and is pretty simple to achieve, it has the advantage that the dictionary for it can be shard across all entires in the set so long as the frequency distribution of letters is comparable. Sorting would become problematic again. Fixed length strings. if you know the strings are small, and all of almost the same (or exactly the same) size you can store in in fixed size values (even structs if desired if the number of characters is in the region of 16 or less (the or use limit here will depend on your precise usage and may be heavily dependent on how willing you a to tune your code to play nice with this design)
