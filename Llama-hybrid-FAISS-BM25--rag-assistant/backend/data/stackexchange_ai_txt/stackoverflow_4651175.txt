[site]: stackoverflow
[post_id]: 4651175
[parent_id]: 4648333
[tags]: 
OK, I think there's lots going on here. My answer is based on these assumptions: The final use for these images is to be displayed on a website The website mentioned above is running on Azure You want to use the CDN to speed up access to the images You're using the .Net storage client library If any of these assumptions are wrong, let me know and I'll edit my answer appropriately. You're right, there is no built in method in the .Net client library which allows you to check if a blob exists. But, by doing the .FetchAttributes() this doesn't actually download the image, it simply attempts to retrieve the header information (much like when you list all of the blobs in a container), the blobs aren't actually downloaded until you call one of the .DownloadX() methods. Your server side code has no need to talk to use any of the CDN functionality. It should just talk to your images in blob storage like they're any old blob. The only time you need to use the CDN URLs is when you're specifying the path to the images on the page you're displaying. You don't want you're website to have to return the stream of the image, you want it to point to a URL on the CDN that contains the image. The CDN will be able to deal with much more load than any website that you can build. The website can then check to see if the blob exists, if it does, just return the URL. If it doesn't download the full image, resize it, save it, then return the URL. While accessing the image from blob storage isn't as quick as reading it off of a local disk, it's still pretty quick, particularly for files Presumably somewhere someone is specifying where and what size images to use in your site. Could you capture that and generate the resized image then?
