[site]: stackoverflow
[post_id]: 2393392
[parent_id]: 2393355
[tags]: 
Most applications will not have need for the Ribbon UI patern/design. However, that doesn't mean that most developers won't put the Ribbon in their applications. While there might not be a justification from a UI design point of view to put the Ribbon into an application, there is a point to be made about using an existing UI pattern/design that people are familiar with in order to make navigation and use of that UI easier due to that familiarity. Given the ubiquity of the Office line of products, it's not surprizing that the Ribbon is one of the most duplicated UI designs/patterns. Before that, the old Office command bars were the most duplicated (and they are even exposed in .NET through the ToolStrip class in the System.Windows.Forms namespace ) and you saw many apps that came out in the better part of the last decade use that UI pattern. So while I won't say that the application of the Ribbon is appropriate for every type of application, all of its benefits should be taken into account when considering it, meaning both the organizational features as well as the familiarity features. There is an excellent presentation given by Jenson Harris at MIX08 titled " The Story of the Ribbon " which chronicles the need for a new approach in Office due to the bloat of menus and items, as well as how they thought of the problem and how they ultimately came up with the Ribbon. The video is about 90 minutes, but is essential if you want to understand why the Ribbon exists in the form it does today, as well as when it is and is not appropriate to use it.
