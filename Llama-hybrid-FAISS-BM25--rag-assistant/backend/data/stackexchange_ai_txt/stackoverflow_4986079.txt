[site]: stackoverflow
[post_id]: 4986079
[parent_id]: 4984896
[tags]: 
Likely, it is ultimately more trouble than it is worth. Certainly, you don't want to replace the runtime being used by the system frameworks. Not only is it likely impossible (or certainly extremely hard), it is also quite likely going to make your app unbearably slow as there are numerous optimizations that can only be done at the system level. Doing so would likely require significant compiler and linker shenanigans. You are also going to run into issues of boundaries; is a call site a call into your code or a call into the system (if you were to try to run two runtimes in parallel -- which is likely impossible). You are definitely correct in the assessment that relying upon the layout of the metadata in the current runtime is a no-go. All of the metadata was put behind APIs in the Obj-C 2.0 transition specifically to allow for the metadata to change significantly without breaking [properly written] applications. If you really want a new/different runtime model for some subset of functionality in your class, it is best to isolate that from the system runtime as much as possible. A new root class might be interesting, but any intermingling with framework classes is likely to be rife with fragility.
