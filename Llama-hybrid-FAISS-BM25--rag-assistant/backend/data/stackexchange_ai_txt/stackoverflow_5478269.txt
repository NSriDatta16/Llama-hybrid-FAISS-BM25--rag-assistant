[site]: stackoverflow
[post_id]: 5478269
[parent_id]: 
[tags]: 
Efficient storage of binary image data

I want to store a large number of equally sized large 3D binary images in Java. My current thought process is to store the information in each bit of a byte[]. Therefore, in the space of one image I could effectively store 8 images (one image per bit). I have the following loops to get/set the image data. Set final byte[] storedArray = organData.get(imageNumber); final short[] binaryArray = getArray(binaryOrgan); int i=0; for (short binaryData : binaryArray) { byte storedData = (byte)storedArray[i]; if (binaryData == 0) storedData &= ~(1 Get final byte[] storedArray = organData.get(imageNumber); final short[] binaryArray = getArray(binaryImage); int i=0; for (short storedData : storedArray) { binaryArray[i] = (short)((storedData >> bitNumber) & 1); ++i; } Currently these are working fine however they are much too slow. Is there a way to speed this up? For instance just get the nth bit of every element in a byte[] without iterating over the byte[]? Ideally I'd like to get this as fast as a lookup in a HashMap (which is what I'm currently using). PS If there is another way to efficiently store and quickly get/set a set of binary images, I'm all ears.
