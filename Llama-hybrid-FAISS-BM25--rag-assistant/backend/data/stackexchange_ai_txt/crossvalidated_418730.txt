[site]: crossvalidated
[post_id]: 418730
[parent_id]: 418210
[tags]: 
Here are a couple ideas to try: (1) LSTMs (and recurrent neural nets in general) are often useful for making predictions from sequential data, since these models can accumulate historical data and use it to make predictions. Here's an example of LSTMs being used for time series prediction. (2) Choose loss functions which don't penalize large errors heavily. If large errors are penalized heavily (for instance, with L2 distance as the loss), your model will make conservative predictions. The paper you linked uses MAE loss, which is the average L1 and works better, but if you aren't already using that loss it might help. (3) Make sure you're not overfitting. This doesn't strictly answer your question, but in the graphs above your model tracks the seemingly random noise in the graph above very well, although it's possible your CNN is picking up on patterns too fine to pick out with the human eye. If the plot you showed was from test data your model is fine, but if it's from train data check for overfitting. (4) If you provide more data (how many points you are trying to predict at a time, using what window of input data) we might be able to provide more useful advice. (Some of the points in this answer would be in a comment but I don't have the rep to post one.)
