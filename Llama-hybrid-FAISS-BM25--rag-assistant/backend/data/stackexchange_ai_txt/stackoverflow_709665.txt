[site]: stackoverflow
[post_id]: 709665
[parent_id]: 709411
[tags]: 
Well, you are generally correct. Most functions do indeed focus on lists ( mapcar , find , count , remove , append etc.) For a few of these there are equivalent functions for sequences ( concatenate , some and every come to mind), and some, where the list-equivalent is outdated (eg. nth for lists only vs. elt for all sequences). Some functions simply work on sequences ( length , for example). CL is a bit of a mess. It's a big language, as in huge . Over 700 functions, AFAIK. And it's old. Some of these functions are deprecated by convention, and others are rarely, if ever, used. Yes, it would be more useful to have mapping functions be methods, that applied as intended on all sequences. CL was simply not built that way. If it were to be built again today, I'm sure this would be considered, and it would look very different. That said, you are not left completely in the cold. The loop macro works on sequences, as does iterate (a separate looping macro, which i happen to like more). This will get you far. For most practical purposes you will be using lists, and this won't be more than a pragmatic problem. If you do happen to lack a mapping function for vectors (or sequences in general), who's to stop you from writing it?
