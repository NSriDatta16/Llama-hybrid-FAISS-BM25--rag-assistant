[site]: stackoverflow
[post_id]: 3719415
[parent_id]: 3666436
[tags]: 
Now, this is all coming from my own experience so some of it may be wrong, but here's how I understand the process (I received no documentation and my company had no experience in calling SAP before I began doing it). SAP WS calls are only supported by WCF BasicHttpBinding, and as far as I can tell, only using plain-text credentials. This means you will want to use IPSec or HTTPS if you need to make your communication private (outside intranet, or sensitive data within intranet). Our SAP server does not have HTTPS configured, but we use VPN with IPSec for external communication. Important to note is that, by default, SAP GUI also does not make communication private. In this situation, you are being no less secure by using the method detailed below than the business user down the hall who is looking up sensitive data in GUI 7.1. Here's how I connect to our SAP server internally: //Create binding //Note, this is not secure but it's not up to us to decide. This should only ever be run within //the VPN or Intranet where IPSec is active. If SAP is ever directly from outside the network, //credentials and messages will not be private. var binding = new BasicHttpBinding(); binding.MaxReceivedMessageSize = int.MaxValue; binding.Security.Transport.ClientCredentialType = HttpClientCredentialType.Basic; binding.Security.Mode = BasicHttpSecurityMode.TransportCredentialOnly; //Assign address var address = new EndpointAddress(Host); //Create service client var client = new SAP_RFC_READ_TABLE.RFC_READ_TABLEPortTypeClient(binding, address); //Assign credentials client.ClientCredentials.UserName.UserName = User; client.ClientCredentials.UserName.Password = Password; As far as I have been able to determine, message-level security is not supported, and bindings other than basicHttpBinding (SOAP 1.1) are not supported. As I said, this is all from experience and not from training, so if anybody can add something through comments, please do so.
