[site]: stackoverflow
[post_id]: 2612770
[parent_id]: 2612434
[tags]: 
The reason a lot of commercial enterprises use Java (and similar high level languages) is that it (they) make it easier to write complex, robust and relatively efficient applications that are maintainable in the long term. With C or C++, large scale applications of the same level of complexity requires more effort (developer years). The software also tends to be more fragile because programmers with average skills make more mistakes in C / C++ than in Java (et al), and those mistakes tend to be more insidious (e.g. buffer overruns) and to have more serious consequences. It is claimed that C / C++ is more efficient than Java and other managed languages. While this is demonstrably true for some small (lines of code) applications, it is rather difficult to demonstrate for large (e.g. 100k+ SLOC) applications ... because nobody writes such applications to the same design in multiple languages. Besides, in most kinds of software, the speed of an application is less important than things such as cost of development, cost of maintenance, system reliability and so on. Often, the only hard performance criterion is that the software runs fast enough to be tolerable. A lot of young programmers find this hard to grasp, and hard to accept, but the folks who pay our salaries think about these things differently ...
