[site]: stackoverflow
[post_id]: 4119282
[parent_id]: 
[tags]: 
Scala case class hierarchy

I got some difficulties designing my case classes. A simplified version looks like: abstract class Base(s: Option[String]) { //code } case class CaseClass(s: Option[String] = None) extends Base(s) { //code } And I have a method where I want to do something like: def method(base : Base) = { //code base copy (s = Some("string")) } Of course I get: value copy is not a member of Base So what I want to do is create a new instance based on my base class (which is not a case class). Obviously one can not do this. But how would you solve this in a elegant way? Thanks in advance!
