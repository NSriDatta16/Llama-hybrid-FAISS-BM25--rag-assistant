[site]: stackoverflow
[post_id]: 746082
[parent_id]: 
[tags]: 
How to find list of possible words from a letter matrix [Boggle Solver]

Lately I have been playing a game on my iPhone called Scramble. Some of you may know this game as Boggle. Essentially, when the game starts you get a matrix of letters like so: F X I E A M L O E W B X A S T U The goal of the game is to find as many words as you can that can be formed by chaining letters together. You can start with any letter, and all the letters that surround it are fair game, and then once you move on to the next letter, all the letters that surround that letter are fair game, except for any previously used letters . So in the grid above, for example, I could come up with the words LOB , TUX , SEA , FAME , etc. Words must be at least 3 characters, and no more than NxN characters, which would be 16 in this game but can vary in some implementations. While this game is fun and addictive, I am apparently not very good at it and I wanted to cheat a little bit by making a program that would give me the best possible words (the longer the word the more points you get). (source: boggled.org ) I am, unfortunately, not very good with algorithms or their efficiencies and so forth. My first attempt uses a dictionary such as this one (~2.3MB) and does a linear search trying to match combinations with dictionary entries. This takes a very long time to find the possible words, and since you only get 2 minutes per round, it is simply not adequate. I am interested to see if any Stackoverflowers can come up with more efficient solutions. I am mostly looking for solutions using the Big 3 Ps: Python, PHP, and Perl, although anything with Java or C++ is cool too, since speed is essential. CURRENT SOLUTIONS : Adam Rosenfield, Python, ~20s John Fouhy, Python, ~3s Kent Fredric, Perl, ~1s Darius Bacon, Python, ~1s rvarcher, VB.NET, ~1s Paolo Bergantino, PHP (live link) , ~5s (~2s locally)
