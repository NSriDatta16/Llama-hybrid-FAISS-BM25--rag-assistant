[site]: datascience
[post_id]: 91058
[parent_id]: 
[tags]: 
How to modify a Convolutional Neural Network architecture built for a univariate time series to multivariate time series?

I have built a CNN (in combination with a LSTM cell) that takes 1D time series-like data as an input and performs classification. I am obtaining a good performance, but the complete data has actually 6 dimensions and I am just using one at a time (each one individually obtains very similar performances). I tried using the same architecture with the 6D data, and it produces a very marginal improvement over using just 1D. I am not sure if this is because the architecture should be different to account for the additional dimensions, or it might be the case that there is actually no advantage to using the full 6 dimensions. Is there any modification I should be applying to the architecture in order to improve performance?
