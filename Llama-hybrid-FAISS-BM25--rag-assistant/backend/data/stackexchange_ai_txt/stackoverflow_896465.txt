[site]: stackoverflow
[post_id]: 896465
[parent_id]: 896376
[tags]: 
You can't know the total transfer size in advance, even ignoring retransmits. There are several things that will stop you: TCP options are negotiated between the hosts when the connection is established. Some options (e.g., timestamp) add additional data to the TCP header "total data transfer size" is not clear. Ethernet, for example, adds quite a few more bits on top of whatever IP used. 802.11 (wireless) will add even more. So do HDLC or PPP going over a T1. Don't even think about frame relay. Some links may use compression (which will reduce the total size). The total size depends on where you measure it, even for a single packet. Assuming you're just interested in the total octet size at layer 2, and you know the TCP options that will be negotiated in advance, you still can't know the path MTU. Which may change, even while the connection is in progress. Or if you're not doing path MTU discovery (which would be wierd), then the packet may get fragmented somewhere, and the remote end will see a different amount of data transfer than you. I'm not sure why you need to know this, but I suggest that: If you just want an estimate, watch a typical connection in Wireshark. Calculate the percent overhead (vs. the size of data you gave to TCP, and received from TCP). Use that number to estimate: it will be close enough, except in pathological situations. If you need to know for sure how much data your end saw transmitted and received, use libpcap to capture the packet stream and check.
