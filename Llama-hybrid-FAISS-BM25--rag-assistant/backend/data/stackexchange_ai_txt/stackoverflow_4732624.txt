[site]: stackoverflow
[post_id]: 4732624
[parent_id]: 
[tags]: 
SVG - resizing a rectangle positioned at an angle

All, I have a SVG rectangle in my application which can be stretched horizontally by dragging the end bar (left & right) on either side of the rectangle. The rectangle can be (1) resized (by stretching as per above), (2)dragged, (3)& rotated. Everything works fine, however, one strange experience is that when I rotate the rectangle to a degree close to 90, & then try to resize the rectangle, it starts stretching from the opposite border of the rectangle instead of the original borders. (here is the image): It appears to be getting confused between left and right when I use the rotate function. Here is the revised HTML, JS & SVG: JSP Page --> path: path2: var ob=document.getElementById("oo") var svgDoc=null; var svgRoot=null; var MyGroupObjectsObj = null; var svgNS = "http://www.w3.org/2000/svg"; var dragTarget = null; var rectTemplate = null; var grabPoint = null; var clientPoint = null; var rectX = null; var rectY = null; var rectWidth = null; var rectHeight = null; var arr=new Array(); var resizingLeft = false; var resizingRight = false; var rectrot=null ob.addEventListener("load", function(){ svgDoc=ob.contentDocument; svgRoot=svgDoc.documentElement; grabPoint = svgRoot.createSVGPoint(); clientPoint = svgRoot.createSVGPoint(); rectTemplate = svgDoc.getElementById('rectTemplate') rectrot=svgDoc.getElementById("rect1") }, false) var angel=0 function Rotate1() { angel=angel+10 //alert(rectrot) var c=rectTemplate.getAttribute("transform"); var widt=Number(rectTemplate.getAttribute("width"))/2; var hie=Number(rectTemplate.getAttribute("height"))/2 var tran=c.match(/[\d\.]+/g); var newxpo=Number(tran[0])+widt; var newypo=Number(tran[1])+hie; var r=Math.tan((newxpo)/(newypo)) rectTemplate.parentNode.setAttribute("transform","translate("+newxpo+" "+newypo+")"+"rotate("+angel+") translate("+(newxpo*-1)+" "+(newypo*-1)+")"); } function MouseDown(evt) { var targetElement = evt.target; var checkForResizeAttempt = false; if (targetElement == rectTemplate) { //arr.push(cir ,cir1,rectTemplate) dragTarget = targetElement; checkForResizeAttempt = true; var transMatrix = dragTarget.getCTM(); grabPoint.x = evt.clientX - Number(transMatrix.e); grabPoint.y = evt.clientY - Number(transMatrix.f); } var transMatrix = dragTarget.getCTM(); //var transMatrix = dragTarget.getCTM().inverse(); grabPoint.x = evt.clientX - Number(transMatrix.e); grabPoint.y = evt.clientY - Number(transMatrix.f); if (window.console) console.log(grabPoint.x + " " + grabPoint.y); if (window.console) console.log(evt.clientX + " " + evt.clientY); if (checkForResizeAttempt) { clientPoint.x = evt.clientX; clientPoint.y = evt.clientY; rectX = Number(dragTarget.getAttributeNS(null, "x")); rectY = Number(dragTarget.getAttributeNS(null, "y")); rectWidth = Number(dragTarget.getAttributeNS(null, "width")); rectHeight = Number(dragTarget.getAttributeNS(null, "height")); if ((grabPoint.x - rectX) -- =======SVG ====
