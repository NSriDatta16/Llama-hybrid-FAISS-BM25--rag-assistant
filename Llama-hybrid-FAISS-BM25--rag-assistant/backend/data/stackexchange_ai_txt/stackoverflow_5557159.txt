[site]: stackoverflow
[post_id]: 5557159
[parent_id]: 
[tags]: 
POST form data using WinInet c++

I'm trying to make this program connect to a website and submit form data in order to login, but I don't know what I'm doing wrong. I have heard of others like curl and Winsock but I chose the WinINet library. So just for the testing of this program I've been using the website Pastebin to post to. So far, I haven't seen any results from this. If this program succeeds in posting the form data it will give me the header to the location of the post on their site. Am I writing the form data char* correctly? I have seen on other stackoverflow posts where they had a large amount of dashes before some number then the put their form data. Do I need to add something to it make it simulate clicking the submit button? Do I need to write out values for each elements on the form? I have tried HttpAddRequestHeaders and that didn't help me. Also, I get the ERROR_INSUFFICIENT_BUFFER error on HttpOpenRequest but it still returns a valid HINTERNET. #include #include #include #pragma comment( lib,"Wininet.lib") using namespace std; char* getheaders(HINTERNET hRequest){ DWORD dwInfoLevel=HTTP_QUERY_RAW_HEADERS_CRLF; DWORD dwInfoBufferLength=10; char* pInfoBuffer=(char*)malloc(dwInfoBufferLength+1); while(!HttpQueryInfo(hRequest,dwInfoLevel,pInfoBuffer,&dwInfoBufferLength,NULL)){ if (GetLastError()==ERROR_INSUFFICIENT_BUFFER){ free(pInfoBuffer); pInfoBuffer=(char*)malloc(dwInfoBufferLength+1); }else{ fprintf(stderr,"HttpQueryInfo failed, error = %d (0x%x)\n",GetLastError(),GetLastError()); break; } } pInfoBuffer[dwInfoBufferLength] = '\0'; return pInfoBuffer; } void readfile(HINTERNET hRequest,char** buffs,int size){ DWORD dwBytesAvailable; DWORD dwBytesRead; for(int i=0;i nul"); return 0; } char* heads=getheaders(hRequest); printf("%s\n\n\n\n",heads); HINTERNET hRequest2 = HttpOpenRequest(hConnect, "POST","/", NULL, NULL, accept, 0, 0); //ERROR_INSUFFICIENT_BUFFER (122) with "accept". send=HttpSendRequest(hRequest2, hdrs, strlen(hdrs), frmdata,strlen(frmdata)); if(!send){ printf("HttpSendRequest failed, code=%d",GetLastError()); system("pause>nul"); return 0; } heads=getheaders(hRequest); printf("%s\n\n\n\n",heads); InternetCloseHandle(hRequest); InternetCloseHandle(hRequest2); InternetCloseHandle(hConnect); InternetCloseHandle(hSession); system("pause>nul"); return 0; }
