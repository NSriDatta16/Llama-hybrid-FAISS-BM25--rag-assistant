[site]: stackoverflow
[post_id]: 4976243
[parent_id]: 
[tags]: 
Ruby on Rails 3, forms, ajax, nested, in-place editing, one-by-one. Best practice

Assume, that I have a complex nested form with many fields. I want to edit its fields one-by-one in ajax way, so that every time I see form - it is in 'show' style (without fields to change information), but with possibility to switch any particular field or group of fields to 'edit' mode with it's own 'save' or 'update' button. Solving this kind of problem, I ended up with two ways: Extended use of Ryan Bates' complex-form-examples . The disadvantage of this way is that every field (or group of fields) requires it's own code (i.e. javascript: 'insert_fields'), which renders corresponding 'edit' style form, so it results in page is overwhelmed by javascripts. Second - is unified procedure of loading corresponding edit partials through ajax through special controller action (i.e. get_partial), which "render :do updates" given field's area by 'edit' form. For given field or group of fields i have partials for 'edit' and for 'show'. When i need to switch that field to edit mode i send request ( link_to ...,'/.../get_partial?partial=foo',:remote => true ) with necessary params by ajax, and some controller#action renders that partial by javascript. I think that second approach is better one, but I can't figure out how optimize it the best. Are there any more elegant solutions to this problem?
