[site]: datascience
[post_id]: 82039
[parent_id]: 
[tags]: 
Getting vague results using VAR time series forecasting in python!

Firstly, I am a beginner in this field of Data Science and have tried to implement some time series models for wind speed forecasting. Also, I am aware of the fact that some regression models might give better results, but still, my aim is to crack the same with the help of VAR I tried to implement multivariate time series forecasting - VAR in python. To start with I followed the code in this article- https://towardsdatascience.com/simple-multivariate-time-series-forecasting-7fa0e05579b2 However, the forecasted value for my dataset is vague and I am unable to figure out why is the case! Anyone who can help me figure out the possible dent/mistake in the code and hopefully a solution for the same will be appreciated. PS: I also want to know that how can one get MSE or RMSE or residual terms for each forecasted value in the form of single - column array/ vector instead of a single overall error value? # Importing libraries import numpy as np import pandas as pd import matplotlib.pyplot as plt, seaborn as sb # Importing Dataset df = pd.read_csv("/Users/NEILYUG/Documents/ws_TN.csv") ds = df.drop(['samples'], axis = 1) # Visualize the trends in data sb.set_style('darkgrid') ds.plot(kind = 'line', legend = 'reverse', title = 'Visualizing Sensor Array Time-Series') plt.legend(loc = 'upper right', shadow = True, bbox_to_anchor = (1.35, 0.8)) plt.show() # Dropping Temperature & Relative Humidity as they do not change with Time ds.drop(['Pressure','Temperature'], axis = 1, inplace = True) # Again Visualizing the time-series data sb.set_style('darkgrid') ds.plot(kind = 'line', legend = 'reverse', title = 'Visualizing Sensor Array Time-Series') plt.legend(loc = 'upper right', shadow = True, bbox_to_anchor = (1.35, 0.8)) plt.show() # Splitting the dataset into train & test subsets n_obs = 892 ds_train, ds_test = ds[:-n_obs], ds[-n_obs:] # Augmented Dickey-Fuller Test (ADF Test) to check for stationarity from statsmodels.tsa.stattools import adfuller def adf_test(ds): dftest = adfuller(ds, autolag='AIC') adf = pd.Series(dftest[0:4], index = ['Test Statistic','p-value','# Lags','# Observations']) for key, value in dftest[4].items(): adf['Critical Value (%s)'%key] = value print (adf) p = adf['p-value'] if p the orange line is predicted value and it is clearly out of my understanding the forecasted values:
