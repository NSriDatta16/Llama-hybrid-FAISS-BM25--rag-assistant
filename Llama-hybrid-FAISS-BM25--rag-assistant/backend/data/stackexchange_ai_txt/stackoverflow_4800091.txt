[site]: stackoverflow
[post_id]: 4800091
[parent_id]: 4795784
[tags]: 
I have installed SQL Server to reproduce your problem and verify it. Short explanation You must read the values ONLY ONCE and in the ORDER they appear in the SELECT. JdbcOdbc sucks. While debugging, you're reading them multiple times. Long explanation What you are doing is inspecting a stateful object in the debugger , which leads to dynamic results. In this case it's the sun.jdbc.odbc.JdbcOdbcResultSet and executing the expression resultSet.getString(...) multiple times. The first time, it will work (in case your breakpoint suspends the Thread before the resultSet is asked). Then, the second time you (or your debugger) inspects the value of the expression again, the getString() method is called again and this method changes the internal state of the ResultSet object . Although the method's name suggests it's a simple getter, it's not. It does more than that. It may actually retrieve the data from the database, change its internal position counters etc. You cannot execute the getter methods multiple times. The ODBC Driver is a very bad thing and of low quality. Expect strange behavior and other dragons. You can get some debug information by enabling JdbcOdbc Tracing. That is done by setting a LogWriter on the DriverManager, before the JdbcOdbc-Bridge is activated: java.sql.DriverManager.setLogWriter(new PrintWriter(System.out)); Then, you will get verbose debugging output of the JdbcOdbc-Driver like the following. It may help you to debug the problem you have. When debugging, just ensure to store the data retrieved from the ResultSet objects in local objects, so you can inspect them multiple times in the debugger. DriverManager.getConnection("jdbc:odbc:testdbodbc") JdbcOdbcDriver class loaded registerDriver: driver[className=sun.jdbc.odbc.JdbcOdbcDriver,sun.jdbc.odbc.JdbcOdbcDriver@7b479feb] DriverManager.initialize: jdbc.drivers = null JDBC DriverManager initialized trying driver[className=sun.jdbc.odbc.JdbcOdbcDriver,sun.jdbc.odbc.JdbcOdbcDriver@7b479feb] *Driver.connect (jdbc:odbc:testdbodbc) JDBC to ODBC Bridge: Checking security No SecurityManager present, assuming trusted application/applet JDBC to ODBC Bridge 2.0001 Current Date/Time: Wed Jan 26 00:31:27 CET 2011 Loading JdbcOdbc library Allocating Environment handle (SQLAllocEnv) hEnv=115724512 Allocating Connection handle (SQLAllocConnect) hDbc=116219184 Connecting (SQLDriverConnect), hDbc=116219184, szConnStrIn=DSN=testdbodbc RETCODE = 1 WARNING - Generating SQLWarning... SQLWarning: reason([Microsoft][ODBC SQL Server Driver][SQL Server]Changed database context to 'master'.) SQLState(01000) vendor code(5701) SQLWarning: reason([Microsoft][ODBC SQL Server Driver][SQL Server]Changed language setting to us_english.) SQLState(01000) vendor code(5703) *Connection.getMetaData *DatabaseMetaData.getDriverName Get connection info string (SQLGetInfo), hDbc=116219184, fInfoType=6, len=300 SQLSRV32.DLL *DatabaseMetaData.getDriverVersion Get connection info string (SQLGetInfo), hDbc=116219184, fInfoType=7, len=300 06.01.7600 *DatabaseMetaData.getDriverName Get connection info string (SQLGetInfo), hDbc=116219184, fInfoType=6, len=300 SQLSRV32.DLL Driver name: JDBC-ODBC Bridge (SQLSRV32.DLL) *DatabaseMetaData.getDriverVersion P.S. And this was the reproduced exception, including line numbers of the Sun code for JDK 1.6.0_22. As you can see in the first line, this is what is printed out on the console when I inspected the getString() method. Get string data (SQLGetData), hStmt=108067024, column=3, maxLen=257 RETCODE = 100 ERROR - No data found java.sql.SQLException: No data found at sun.jdbc.odbc.JdbcOdbc.standardError(JdbcOdbc.java:7138) at sun.jdbc.odbc.JdbcOdbc.SQLGetDataString(JdbcOdbc.java:3907) at sun.jdbc.odbc.JdbcOdbcResultSet.getDataString(JdbcOdbcResultSet.java:5698) at sun.jdbc.odbc.JdbcOdbcResultSet.getString(JdbcOdbcResultSet.java:354) at sun.jdbc.odbc.JdbcOdbcResultSet.getString(JdbcOdbcResultSet.java:411) at sandbox.DatabaseMetadataTest.testDBMetadata(DatabaseMetadataTest.java:27)
