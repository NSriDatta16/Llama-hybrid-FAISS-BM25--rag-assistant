[site]: stackoverflow
[post_id]: 2636459
[parent_id]: 
[tags]: 
Lucene.net contains only last added document

It's a weird problem but every time I add a new document to Lucene.net it overrides the last one and thus it always holds the last inserted document. I've confirmed this behavior using LUKE which lets me open the index files. I'd appreciate if someone could shed light on the problem. Here is my code: public class SearchService : ISearchService { Directory indexFileLocation; Analyzer analyzer; public SearchService(String indexLocation) { indexFileLocation = FSDirectory.GetDirectory(indexLocation, true); analyzer = new StandardAnalyzer(); } public void AddToSearchIndex(ISearchableData data) { IndexWriter indexWriter = new IndexWriter(indexFileLocation, analyzer, true); Document doc = new Document(); foreach (var entry in data) { Field field = new Field( entry.Key, entry.Value, Lucene.Net.Documents.Field.Store.NO, Lucene.Net.Documents.Field.Index.TOKENIZED, Lucene.Net.Documents.Field.TermVector.WITH_POSITIONS_OFFSETS); doc.Add(field); } Field keyField = new Field( SearchField.Key.ToString(), data.Key, Lucene.Net.Documents.Field.Store.YES, Lucene.Net.Documents.Field.Index.UN_TOKENIZED); doc .Add(keyField); indexWriter.AddDocument(doc); indexWriter.Optimize(); indexWriter.Close(); } public IDictionary SearchContent(String term) { IndexSearcher searcher = new IndexSearcher(indexFileLocation); TermQuery query = new TermQuery(new Term(SearchField.Content.ToString(), term)); Hits hits = searcher.Search(query); searcher.Close(); return OrganizeSearchResults(hits); } public IDictionary OrganizeSearchResults(Hits hits) { IDictionary result = new Dictionary (); String keyField = SearchField.Key.ToString(); for (int i = 0; i I add documents like this: new SearchService(searchIndexFolderPath).AddToSearchIndex(entry.ToSearchableData()); and search for it like this: ISearchService search = new SearchService(MvcApplication.SearchIndexPath); IList submissionIds = search.SearchContent(SearchTerm).Select(hit => hit.Key).ToList ();
