[site]: stackoverflow
[post_id]: 426164
[parent_id]: 425711
[tags]: 
I went through a similar thing last year. There the question was: do we model our entities explicitly or generically? In your example, that would mean having entities/tables like teacher, student, etc with direct relationships between them or not. In the end we went for a generic "Party" model. The Party model is as follows: A Party represents a person or organisation; Most Party types had a dependent table to store extra information depending on the party type eg Person, Organization, Company; Things like Student or Teacher are Party Roles . A Party may have any number of Party Roles. A Person may be both a Teacher and a Student, for example; Things like classes are handled as Party Role Relationships . For example, a relationship between a Teacher and Student role indicates a class relationship; Party Role Relationships can have subtypes for extra information. A Teacher-Student Relationship in your model is an Enrolment and that could have the extra attributes you're talking about; Parties don't have direct relationships with each other . Only Party Roles relate to each other; and For common groupings of information, we created views if it helped because the SQL can be a bit convoluted as the relationships are more indirect (eg there are three tables in between the Party entities for a Teacher and Student). It's an extremely powerful model, one that is pretty common in CRM type systems. This model pretty much came from "The Data Model Resource Book: Volume 1" , which is an excellent resource for such things.
