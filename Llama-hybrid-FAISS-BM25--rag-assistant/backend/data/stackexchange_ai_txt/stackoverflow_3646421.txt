[site]: stackoverflow
[post_id]: 3646421
[parent_id]: 
[tags]: 
Kohana 3 module structure question

everybody! I have a new question about Kohana 3, or rather about a module structure. I develop a small module called Textblock. It's about an ordinary page or a small insertion to the site layout (e.g. a greeting or a slogan, company name). It contains both controllers and models. Models inherit Sprig_MPTT. And one feature I'd like to implement is one could be able to call this module like this: $textblock = Textblock::get_single(1); //by id $children = Textblock::get_children_of(4); //id of parent and not $textblock = Sprig::factory('Textblock')->get_single(1); $children = Sprig::factory('Textblock')->get_children_of(4); Those methods are defined in Model_Textblock class as static . So, I made a wrapper class Textblock , that inherits Model_Textblock . What if I suddenly want change Sprig to Jelly, for example? Foreground won't change at all. Another advantage, imho, is more clarity for anyone, who wants to use this module (e.g. it could be another programmer in the team). But there's a doubt if I'm on a wrong way... So, the question itself: is the suggested a right way to organize my module? Or it's preferable to keep ordinary Sprig::factory('Textblock') where Textblock's functionality is needed, remove additional wrapper class and remove static ?
