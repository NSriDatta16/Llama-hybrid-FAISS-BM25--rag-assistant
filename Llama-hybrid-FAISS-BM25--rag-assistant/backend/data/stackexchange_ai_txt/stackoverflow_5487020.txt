[site]: stackoverflow
[post_id]: 5487020
[parent_id]: 5486857
[tags]: 
Have you tried changing the UNION to UNION ALL ? A UNION tries to remove duplicate rows. In order to do that, it would have to sort the intermediate results what might explain what you are seeing in your execution plan. From MySQL Union By default the MySQL UNION removes all duplicate rows from the result set even if you donâ€™t explicit using DISTINCT after the keyword UNION. If you use UNION ALL explicitly, the duplicate rows remain in the result set. You only use this in the cases that you want to keep duplicate rows or you are sure that there is no duplicate rows in the result set. Edit I doubt it will make any difference (might even be worse) but could you try following "equivalent" query select * from ( select b.geo_boundary_id , GeoBoundaryContains( c.tpi_geo_boundary_coverage_type_id, 29.287437, -95.055807, b.centroid_lat, b.centoid_lon, b.radius ) in_out from geo_boundary b join trackpoint_index_geo_boundary_mem c on c.geo_boundary_id = b.geo_boundary_id where b.geo_boundary_type_id = 2 group by b.geo_boundary_id union all select a.geo_boundary_id , GeoBoundaryContains(c.tpi_geo_boundary_coverage_type_id, 29.287437, -95.055807, a.lat, a.lon, a.geo_boundary_vertex_id ) in_out from geo_boundary_vertex a join geo_boundary b on b.geo_boundary_id = a.geo_boundary_id join trackpoint_index_geo_boundary_mem c on c.geo_boundary_id = b.geo_boundary_id where b.geo_boundary_type_id = 3 group by a.geo_boundary_id ) s inner join ( select e.inquiry_match_type_id , e.inquiry_id , e.external_id , COALESCE(f.inquiry_device_id,0) inquiry_device_id , b.external_info1 , b.external_info2 , b.geo_boundary_id , b.geo_boundary_type_id from geo_boundary b join trackpoint_index_geo_boundary_mem c on c.geo_boundary_id = b.geo_boundary_id join trackpoint_index_mem d on d.trackpoint_index_id = c.trackpoint_index_id join inquiry_mem e on e.inquiry_id = b.inquiry_id left outer join inquiry_device_mem f on f.inquiry_id = e.inquiry_id and f.device_id = 3201 where d.trackpoint_index_id = 3127 and b.geo_boundary_type_id IN (2, 3) and e.expiration_date >= now() ) r on r.geo_boundary_id = s.geo_boundary_id
