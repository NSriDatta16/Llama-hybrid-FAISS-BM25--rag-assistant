[site]: stackoverflow
[post_id]: 4627833
[parent_id]: 4625031
[tags]: 
This way isn't secure, because silverlight is client side technology, so both SL control and their config stores at user computer. So any user can freely access/change key. Custom sessions is most secured way to handle your task. For example: Authentication/Authorization may be implemented using standard (or custom, you should feel free to implement some specific provider) roles/membership providers. After client was authenticated it receives server generated session token (for example guid). Same guid stores in server side database (for example in database which store all roles, users, etc.). Each session token have expiration (use DB agents/tasks/shedulers to remove expired keys from database). So each time client requests for some resource it send to server its session token as well as other request parameters. After receiving request server search for same session token in DB and in case if token exists, provide access to requested resource. Otherwise authentication fails. Custom sessions is pretty complicated but in same time most secured way to handle auth operations. Feel free to ask me if you have some questions about it.
