[site]: stackoverflow
[post_id]: 5768275
[parent_id]: 5423052
[tags]: 
I found some code that uses the ASTParser standalone. This may help. You will need to add the following jars to your project. I cut and pasted from the .classpath file. And here is the test code that I found (I cleaned up a few warnings): import java.util.HashSet; import java.util.Set; import org.eclipse.jdt.core.dom.AST; import org.eclipse.jdt.core.dom.ASTParser; import org.eclipse.jdt.core.dom.ASTVisitor; import org.eclipse.jdt.core.dom.CompilationUnit; import org.eclipse.jdt.core.dom.SimpleName; import org.eclipse.jdt.core.dom.VariableDeclarationFragment; public class TestAstParser { public static void main(String args[]){ ASTParser parser = ASTParser.newParser(AST.JLS3); parser.setSource("public class A { int i = 9; \n int j; \n ArrayList al = new ArrayList ();j=1000; }".toCharArray()); parser.setKind(ASTParser.K_COMPILATION_UNIT); final CompilationUnit cu = (CompilationUnit) parser.createAST(null); cu.accept(new ASTVisitor() { Set names = new HashSet (); public boolean visit(VariableDeclarationFragment node) { SimpleName name = node.getName(); this.names.add(name.getIdentifier()); System.out.println("Declaration of '"+name+"' at line"+cu.getLineNumber(name.getStartPosition())); return false; // do not continue to avoid usage info } public boolean visit(SimpleName node) { if (this.names.contains(node.getIdentifier())) { System.out.println("Usage of '" + node + "' at line " + cu.getLineNumber(node.getStartPosition())); } return true; } }); } } The original post can be found here: http://www.programcreek.com/2011/01/a-complete-standalone-example-of-astparser/
