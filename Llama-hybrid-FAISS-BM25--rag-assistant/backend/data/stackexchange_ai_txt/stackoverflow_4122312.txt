[site]: stackoverflow
[post_id]: 4122312
[parent_id]: 4121950
[tags]: 
First the general question: Your suggested method trying to find the card I'm about to play and if I find that in position x then I could check whether the pattern from x to n repeats at position x-(n-x) to x, looks really good. I would suggest basically the same. It is O(n) and needs a fixed amount of storage, and is simple: what else would you wish for? Second: You can check for repetition in games generally if you keep a hash table of all previous game states (complete state, nothing left out). Everytime you reach a new state look up if it is in the hashtable, if its in it: you game state is looping. In Javascript you have builtin hastables so this is very easy to do with something similar like this: new_state = next_move(old_state); new_encoded_state = encode(new_state); // make it into a string if (allstates[new_encoded_state]) { // we are looping! } else { allstates[new_encoded_state] = 1; // no looping } The variable allstates is not an Array but of type Object. You can have array like access with strings and this uses the Object as hastable.
