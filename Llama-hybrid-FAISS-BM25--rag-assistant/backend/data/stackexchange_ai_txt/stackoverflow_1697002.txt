[site]: stackoverflow
[post_id]: 1697002
[parent_id]: 1695841
[tags]: 
That problem is difficult to solve procedurally, but much progress has been made in the area lately. Most natural language processing begins with a grammar (which may or may not be context free.) Its a set of construction rules stating how more general things are made out of more specific ones. example context free grammar: Sentence ::= NounPhrase VerbPhrase NounPhrase ::= ["The"] [Adjective] Noun Adjective ::= "big" | "small" | "red" | "green" Noun ::= "cat" | "man" | "house" VerbPhrase ::= "fell over" This is obviously oversimplified, but the task of making a complete grammar to define all of english is enormous, and most real systems only define some subset of it applicable to a problem domain. Once a grammar has been defined, (or learned using complicated algorithms known only to the likes of Google) a string, called an "exemplar" is parsed according to the grammar. which tags each word with the parts of speech. a grammar that is very complex would not just have the parts of speech you learned in school, but categories such as "Websites" "Names of old people" and "ingredients". These categories can be laboriously built into the grammar by humans or inferred using things like Analogical Modeling or Support Vector Machines. In each, things like "chicken", "football", "BBQ", and "cricket" would be defined as points in a very high dimensional space, along with millions of other points, and then the clustering algorithms, would define groups just based on the positions of those points relative to each-other. then one might try to infer names for the groups from example text. link text This Google search lists several techniques used in NLP, and you could learn a whole lot from them. EDIT to just solve this problem, one might crawl the web for sentences of the form " _ is a _ " to build up a database of item-category relationships. then you parse a string like above, and look for words that are known items in the database
