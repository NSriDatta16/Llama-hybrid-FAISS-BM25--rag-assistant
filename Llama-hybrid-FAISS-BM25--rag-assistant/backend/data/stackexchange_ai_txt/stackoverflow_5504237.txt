[site]: stackoverflow
[post_id]: 5504237
[parent_id]: 
[tags]: 
Data Base Design Dilemma

I am creating a simple DB application for reports. According to DB design theory, you should never store the same information twice. This makes sense for most DB applications, but I need something that you can simply select a generic topic, you could then keep the new instance copy of the generic topic untouched or change the information but the generic topic should not be modified by modifying the instance copy, but the relationship needs to be tracked between the original topic and the instance copy of the topic. Confusing, I know. Here is a diagram that may help: I need the report to be immutable or mutable based off of the situation. A quick example would be you select a customer, then you finish your report. A month later the customer's phone number changes so you update the customer portion of the DB, but you do not want to pull up a finished report and have the new information update into the already completed report. What would be the most elegant solution to this scenario? This may work: But by utilizing this approach I would find myself using looping statements and if statements to identify the relationships between Generic, Checked Off and Report. for (NSManagedObject *managedObject in checkedOffTaskObjects) { if ([[reportObject valueForKeyPath:@"tasks"] containsObject:managedObject]) { if ([[managedObject valueForKeyPath:@"tasks"] containsObject:genericTaskObjectAtIndexPath]) { cell.backgroundView = [[[UIImageView alloc] initWithImage:[UIImage imageNamed:@"cellbackground.png"]] autorelease]; } } } I know a better solution exists, but I cannot see it. Thank you for time.
