[site]: stackoverflow
[post_id]: 192322
[parent_id]: 169404
[tags]: 
delete is used to deallocate memory previously allocated with new . You do not need to use delete here, when blah and complexBlah go out of scope they will automatically be destroyed. While yrp's answer shows you one way of using template specialization to delete the objects contained if they are pointers, and not if they aren't, this seems like a fragile solution. If you want behavior like this you are better off using Boost Pointer Container libraries, which provide this exact behavior. The reason that the standard library doesn't is because the containers themselves don't know if they control the contained pointer or not - you need to wrap the pointer in a type that does know - ie a smart pointer.
