[site]: stackoverflow
[post_id]: 2487131
[parent_id]: 2487091
[tags]: 
To me this sounds like you want to serialize Java classes to the DB. To my knowledge it is perfectly OK, although I have never done it myself. Here is a link to a tutorial , but you can easily google for more. OTOH at second thought, why do you actually need to store a full class instance in the DB? Isn't it enough to store the fully qualified class name, then load the class and instantiate it (with desired properties which may also come from configuration) via Spring? Update: OK, now I understand your case better. Serialization could be a viable option if you can constrain your end users to provide serializable strategy classes. Note though that serialization has its own quirks, so doing it properly requires deeper than average Java knowledge. Josh Bloch in Effective Java 2nd Ed. dedicates the entire Chapter 11 to serialization. Executing code provided by external parties could pose a security risk as well. Another possible option could be implementing the elements of your DSL yourself, then letting the end users put together what they want from the elements provided by you. This would be safer and more robust, as you still had control over what gets into the DB and what gets executed.
