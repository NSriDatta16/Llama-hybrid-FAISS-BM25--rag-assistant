[site]: stackoverflow
[post_id]: 2196065
[parent_id]: 
[tags]: 
Zend: ACL logic in View helpers

Background information: I'm in my admin module, and I created a view helper in modules/admin/views/helpers/AdminPanel.php . I have a layout plugin that forces my view to use the layout in admin/views/layouts/default.phtml . I'm trying to access my ACL object to determine whether or not the user has resources in the context of a view helper, and then determine whether to return the admin panel html by parsing a configs/admin-nav.xml or not return anything at all. I'm calling it in my admin layout like so: AdminPanel(); ?> And the class code which is blank, which I need to access the acl object in: class My_View_Helper_AdminPanel extends Zend_View_Helper_Abstract { public function AdminPanel() {} } I tried this: $acl = Zend_Controller_Action_HelperBroker::getStaticHelper('acl'); But this probably isn't what I'm looking for as it forces the default module's views/layouts/default.phtml to load and errors occur. Here's my global bootstrap file: bootstrap('view'); $view = $this->getResource('view'); $view->setEncoding('UTF-8'); $view->doctype('HTML4_STRICT'); } protected function _initAutoload() { $autoloader = Zend_Loader_Autoloader::getInstance(); $autoloader->registerNamespace('KG_'); $resourceLoader = new Zend_Loader_Autoloader_Resource( array( 'basePath' => APPLICATION_PATH, 'namespace' => '', 'resourceTypes' => array( 'form' => array( 'path' => 'forms/', 'namespace' => 'Form_' ), 'model' => array( 'path' => 'models/', 'namespace' => 'Model_' ) ) )); return $autoloader; } protected function _initAclAuth() { $this->_acl = new Model_Acl; $this->_auth = Zend_Auth::getInstance(); } protected function _initNav() { $this->bootstrap('layout'); $layout = $this->getResource('layout'); $view = $layout->getView(); $config = new Zend_Config_Xml( APPLICATION_PATH . '/configs/nav.xml', 'mainNav'); $navigation = new Zend_Navigation( $config ); $fc = Zend_Controller_Front::getInstance(); $fc->registerPlugin( new KG_Controller_Plugin_Acl( $this->_acl, $this->_auth ) ); $role = $this->_auth->getStorage()->read()->role; if ( !$role ) { $role = 'guest'; } $view->navigation( $navigation )->setAcl( $this->_acl)->setRole( $role ); } protected function _initEncoding() { $fc = Zend_Controller_Front::getInstance(); $response = new Zend_Controller_Response_Http; $response->setHeader('Content-Type','text/html;charset=utf-8', true); $fc->setResponse($response); } }
