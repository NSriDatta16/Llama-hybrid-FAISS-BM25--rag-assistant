[site]: datascience
[post_id]: 102417
[parent_id]: 102414
[tags]: 
What is the best way to implement this? As @rubengavidia0x said, the best way to implement Cross-Validation is with Scikit-Learn. Scikit-Learn handles all of the complexities for you and all you need to do is pass your data and model to the cross_val_score() function. Following is how to do this - from sklearn import datasets from sklearn import svm from sklearn.model_selection import cross_val_score # Iris dataset X, y = datasets.load_iris(return_X_y=True) print(X.shape, y.shape) # SVM Classifier clf = svm.SVC(kernel='linear', C=1, random_state=42) # The following cross_val_score will carry out 5 fold cross validation and return scores for all 5 experiments scores = cross_val_score(clf, X, y, cv=5) print(scores) print("%0.2f accuracy with a standard deviation of %0.2f" % (scores.mean(), scores.std())) Following is the output - (150, 4) (150,) [0.96666667 1. 0.96666667 0.96666667 1. ] 0.98 accuracy with a standard deviation of 0.02 References - https://scikit-learn.org/stable/modules/cross_validation.html
