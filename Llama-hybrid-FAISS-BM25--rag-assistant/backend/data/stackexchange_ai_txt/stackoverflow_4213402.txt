[site]: stackoverflow
[post_id]: 4213402
[parent_id]: 4213282
[tags]: 
What does it exactly mean? Technically deprecated means that a future standard may remove the feature. In practice that isn't going to happen, because of the need to support old code. So in practice it means, "strongly discouraged". Example of superiority of unnamed namespace An unnamed namespace is generally superior because what you have in that namespace can have external linkage. In C++98 external linkage is necessary for things that can be template parameters, e.g., if you want to templatize on a char const* , it must be pointer to char that has external linkage. #include // Compile with "-D LINKAGE=static" to see problem with "static" #ifndef LINKAGE # define LINKAGE extern #endif template void foo() { std::cout (); } That said, it's a bit inconsistent that static isn't also deprecated for functions.
