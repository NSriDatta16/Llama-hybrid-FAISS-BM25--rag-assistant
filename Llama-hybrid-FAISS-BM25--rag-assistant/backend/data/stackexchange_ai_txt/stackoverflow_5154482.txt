[site]: stackoverflow
[post_id]: 5154482
[parent_id]: 
[tags]: 
Refactor Ifs nesting statements in C#

I would like refactoring my code for do it more elegant andclear, if it is possible to reduce nesting “if” statements. My code "parsers" any string (results) of MsBuil process for check if process is correct build. public static bool CheckMsBuildResult(string resultadoEjecucionScriptMsBuild) { // Build started 01/09/2010 8:54:07. string s1 = @"Build Started \d{1,2}/\d\d/\d{4} \d{1,2}:\d\d:\d\d"; //Build started 9/1/2010 10:53:35 AM. //Build started 9/1/2010 8:42:16 AM. string s1Mod = @"Build Started \d{1,2}/\d{1,2}/\d{4} \d{1,2}:\d\d:\d\d"; s1 = s1Mod; string s11 = @"n Generar iniciada a las \d{1,2}/\d\d/\d{4} \d{1,2}:\d\d:\d\d"; // Compilaci�n iniciada a las 28/02/2011 14:56:55. string s12 = @"Compilaci.n iniciada a las \d{1,2}/\d\d/\d{4} \d{1,2}:\d\d:\d\d"; string s2 = "Build succeeded."; string s21 = @"Generaci.n satisfactoria\."; string s3 = @"0 Error\(s\)"; string s31 = "0 Errores"; Regex rg = new Regex(s1, RegexOptions.Multiline | RegexOptions.IgnoreCase); Match mt = rg.Match(resultadoEjecucionScriptMsBuild); if (!mt.Success) { rg = new Regex(s11, RegexOptions.Multiline | RegexOptions.IgnoreCase); mt = rg.Match(resultadoEjecucionScriptMsBuild); if (!mt.Success) { rg = new Regex(s12, RegexOptions.Multiline | RegexOptions.IgnoreCase); mt = rg.Match(resultadoEjecucionScriptMsBuild); if (!mt.Success) return false; } } int i = mt.Index + mt.Length; rg = new Regex(s2, RegexOptions.Multiline | RegexOptions.IgnoreCase); mt = rg.Match(resultadoEjecucionScriptMsBuild, i); if (!mt.Success) { rg = new Regex(s21, RegexOptions.Multiline | RegexOptions.IgnoreCase); mt = rg.Match(resultadoEjecucionScriptMsBuild); if (!mt.Success) { return false; } } i = mt.Index + mt.Length; rg = new Regex(s3, RegexOptions.Multiline | RegexOptions.IgnoreCase); mt = rg.Match(resultadoEjecucionScriptMsBuild, i); if (!mt.Success) { rg = new Regex(s31, RegexOptions.Multiline | RegexOptions.IgnoreCase); mt = rg.Match(resultadoEjecucionScriptMsBuild); if (!mt.Success) { return false; } } return true; }
