[site]: stackoverflow
[post_id]: 2251110
[parent_id]: 2250942
[tags]: 
This isn't very efficient and there are much better ways to do this in general (see @Anurag's answer), but it's simple and works fine for short strings: function stringIntersection(str1, str2) { var strTemp; // Swap parameters if necessary to ensure str1 is the shorter if (str1.length > str2.length) { strTemp = str1; str1 = str2; str2 = strTemp; } // Start with the whole of str1 and try shorter substrings until // we have a common one var str1Len = str1.length, l = str1Len, start, substring; while (l > 0) { start = str1Len - l; while (start >= 0) { substring = str1.slice(start, l); if (str2.indexOf(substring) > -1) { return substring; } start--; } l--; } return ""; } var s1 = "Here is a quick guide for the next time you reach" + " for your favorite oil and some other topics"; var s2 = "favorite oil and some other topics can be based on" + " something blah blah"; alert( stringIntersection(s1, s2) );
