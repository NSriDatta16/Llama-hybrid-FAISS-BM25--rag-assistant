[site]: stackoverflow
[post_id]: 4579786
[parent_id]: 
[tags]: 
Why is strand sort O(n sqrt n) in the average case?

I found strand sort very appealing to sort singly linked lists in constant space, because it is much faster than for example insertion sort. I see why it is O(n) in the best case (the list is already sorted) and O(n^2) in the worst case (the list is reversely sorted). But why O(n sqrt n) in the average case? If algorithm is not based on bisection and has polynomial best-case and worst-case performance, is the average case just O(n^m) , where m is arithmetic mean of best-case's and worst-case's exponents ( m = (1 + 2) / 2 = 3/2 , O(n sqrt n) = O(n^(3/2)) )?
