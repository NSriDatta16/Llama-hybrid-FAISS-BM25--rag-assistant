[site]: stackoverflow
[post_id]: 1068777
[parent_id]: 1068134
[tags]: 
If you need that the string will always make case insensitive comparation (when using operators == or !=), then a possible elegant solution is to redefine char_traits::compare method. Define your own structure. Example struct my_wchar_traits: public std::char_traits { static int compare( const char_type* op1, const char_type* op2, std::size_t num) { // Implementation here... any of the previous responses might help... } }; Then, define your own case insensitive string: typedef std::basic_string my_wstring;
