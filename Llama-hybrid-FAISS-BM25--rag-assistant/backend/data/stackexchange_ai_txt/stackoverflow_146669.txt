[site]: stackoverflow
[post_id]: 146669
[parent_id]: 146657
[tags]: 
The correct answer is to use include guards, and to use forward declarations. Include Guards /* begin foo.h */ #ifndef _FOO_H #define _FOO_H // Your code here #endif /* end foo.h */ Visual C++ also supports #pragma once. It is a non standard preprocessor directive. In exchange for compiler portability, you reduce the possibility of preprocessor name collisions and increase readability. Forward Declarations Forward declare your structs. If the members of a struct or class are not explicitly needed, you can declare their existence at the beginning of a header file. struct tree; /* element.h */ struct element; /* tree.h */
