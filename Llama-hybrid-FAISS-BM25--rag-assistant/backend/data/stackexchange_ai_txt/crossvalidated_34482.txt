[site]: crossvalidated
[post_id]: 34482
[parent_id]: 
[tags]: 
Stratified classification with random forests (or another classifier)

So, I've got a matrix of about 60 x 1000. I'm looking at it as 60 objects with 1000 features; the 60 objects are grouped into 3 classes (a,b,c). 20 objects in each class, and we know the true classification. I'd like to do supervised learning on this set of 60 training examples, and I'm interested both in classifier accuracy (and related metrics) as well as feature selection on the 1000 features. First, how's my nomenclature? Now the real question: I could throw random forests on it as stated, or any number of other classifiers. But there's a subtlety - I really only care about differentiating class c from classes a and b. I could pool classes a and b, but is there a good way to use the a priori knowledge that all non-c objects likely form two distinct clusters? I'd prefer to use random forests or a variant thereof, since it's been shown to be effective on data similar to mine. But I could be convinced to try some other approaches.
