[site]: stackoverflow
[post_id]: 5365967
[parent_id]: 5365940
[tags]: 
I don't see any reason for specific serialization methods for Dragon, Item and Hero unless you require some very special stuff that the default serialization mechanism cannot handle. (Of course the classes need to be serializable as mentioned by Steve B) You already have a lot of code so I suspect that you've already run some tests. Have you faced certain problems? Or how does it come that you are asking this? Update: I've noticed some aspects in your code which are not directly related to your question but may anyway be of interest for you: Do you really mean to use Vector? Does your application make use of multithreading and serialization is required? If not you might prefer to use ArrayList or so instead. The way you handle exceptions is quite strange. Perhaps you are only doing so as this is an example... You should not suppress exceptions by simply returning true or false. If you expect calling methods to be interested in exceptions you should simply add the exception to the methods signatur (throws...) and let the calling method care about it. If you feel this is not appropriate wrapping such exceptions in custom exceptions, which are more expressive in the context, might be an option. If you don't care about the exception at all wrapping it into a runtime exception is also possible. In case of success your method might simply return nothing...
