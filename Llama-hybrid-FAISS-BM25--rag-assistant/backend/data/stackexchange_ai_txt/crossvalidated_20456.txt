[site]: crossvalidated
[post_id]: 20456
[parent_id]: 15577
[tags]: 
Having spent some time on this code, it appears to me as though it basically: 1) Does a logistic regression with right hand side b0_f + b1_f*x1 and y > 0 as a target variable, 2) For those observations for which y > 0, performs a regression with right hand side b0_h + b1_h*x1 , a Gamma likelihood and link=log , 3) Also estimates the shape parameter of the Gamma distribution. It maximizes the likelihood jointly, which is nice, because you only have to make the one function call. However, the likelihood separates anyway, so you don't get improved parameter estimates as a result. Here is some R code which makes use of the glm function to save programming effort. This may not be what you'd like, as it obscures the algorithm itself. The code certainly isn't as clean as it could / should be, either. McLerran 0 y.gt.0 0] x.gt.0 0] m1 |t|) (Intercept) 1.2033 0.1377 8.737 1.44e-12 *** x.gt.0 -0.2440 0.2352 -1.037 0.303 --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 (Dispersion parameter for Gamma family taken to be 0.3448334) Null deviance: 26.675 on 66 degrees of freedom Residual deviance: 26.280 on 65 degrees of freedom AIC: 256.42 Number of Fisher Scoring iterations: 6 The shape parameter for the Gamma distribution is equal to 1 / the dispersion parameter for the Gamma family. Coefficients and other stuff which you might like to access programatically can be accessed on the individual elements of the return value list: > coefficients(foo$p.ygt0) (Intercept) x 2.140239 -2.393388 Prediction can be done using the output of the routine. Here's some more R code that shows how to generate expected values and some other information: # Predict expected value predict.McLerren And a sample run: > x.new > foo.pred foo.pred$fit 1 2 3 4 5 2.408946 2.333231 2.201889 2.009979 1.763201 > foo.pred$se.fit 1 2 3 4 5 0.3409576 0.2378386 0.1753987 0.2022401 0.2785045 > foo.pred$p0 1 2 3 4 5 0.1205351 0.1733806 0.2429933 0.3294175 0.4291541 Now for coefficient extraction and the contrasts: coef.McLerren coef.McLerren(foo) b0.f b1.f b0.h b1.h 2.0819321 -1.8911883 1.0009568 0.1334845
