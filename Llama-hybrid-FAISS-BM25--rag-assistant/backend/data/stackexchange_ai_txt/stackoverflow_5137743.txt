[site]: stackoverflow
[post_id]: 5137743
[parent_id]: 4941640
[tags]: 
What is the goal of the program? Score1 and Score2 don't tell us anything about what the algorithsm are trying to do. It looks likes its trying to find any word that is three letters with all capital 'U's removed is a valid word and is added to the list? What is the point of calling Parallel.Foreach on a bunch of Program instances when each thing is passed the exact same input? And always creating a StringBuilder for each word is not a good approach. You want to minimize any new calls in performance critical areas in order to reduce the number of times the GC has to kick in. I ran your program on the text file: http://introcs.cs.princeton.edu/data/words.txt Run 1 Total Average Time = 0.160149 sec Run 2 Total Average Time = 0.056846 sec Running it under the VS 2010 Sampling profiler shows that Report1 is roughly 78x slower than Report2 and accounts for most of the difference. Mainly due to all the string.Format and Append calls. Score1 and Score2 are roughly the same in speed with Score1 going slightly slower because of additional time in StringBuilder.ctor and clr.dll. But I suspect your algorithm could be rewritten without all the string builders or allocations to be an order of magnitude faster.
