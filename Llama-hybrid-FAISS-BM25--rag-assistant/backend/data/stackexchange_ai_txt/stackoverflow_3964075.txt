[site]: stackoverflow
[post_id]: 3964075
[parent_id]: 
[tags]: 
How can I condense the following Linq query into one IQueryable

I have an EntityFramework model that has User entity that has an EntityCollection of Organisations. For a particular User I am trying to write a Linq Query to return the names of the organisations that the user belongs where that query will hit the db only once. My problem is that I cannot see how to write this query without having to materialise the user first then query the users organisation collection. I would like to try and write one query that hits the db once. What I have so far: var orgNames = context.Users .Where(u => u.LoweredUserName == userName.ToLower()) //materialises user .FirstOrDefault() .Organisations //second hit to the db .Select(o => o.Name); What I was psuedo aiming for but cannot see the wood for the trees: orgNames = context.Users .Where(u => u.LoweredUserName == userName.ToLower()) //don't materialise but leave as IQueryable .Take(1) //The problem: turn what the query sees as possibly multiple // (due to the Take method) EntityCollection into a List .Select(u => u.Organisations.Select(o => o.Name)); I have looked at aggregates but I seem to be going in circles :)
