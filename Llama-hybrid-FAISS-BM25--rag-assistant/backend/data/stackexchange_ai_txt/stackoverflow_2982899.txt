[site]: stackoverflow
[post_id]: 2982899
[parent_id]: 2982829
[tags]: 
As the other answers mention (+1 to mark), when copying files, disk i/o is the bottleneck. The language you use won't make much of a difference. How you've laid out your files will make a difference, how you're transferring data will make a difference. You mentioned copying to a DROBO. How is your DROBO connected? Check out this graph of connection speeds . Let's look at the max copy rates you can get over certain wire types: USB = 97 days ( 1.5 TB / 1.5 Mbps ). Lame, at least your performance is not this bad. USB2.0 = ~7hrs ( 1.5 TB / 480 Mbps ). Maybe LogicCube? Fast SCSI = ~40hrs ( 1.5 TB / 80 Mbps ). Maybe your hard drive speed? 100 Mbps ethernet = 1.4 days ( 1.5 TB / 100 Mbps ). So, depending on the constraints of your problem, it's possible you can't do better. But you may want to start doing a raw disk copy (like Unix's dd ), which should be much faster than a file-system level copy (it's faster because there are no random disk seeks for directory walks or fragmented files). To use dd , you could live boot linux onto your machine (or maybe use cygwin?). See this page for reference or this one about backing up from windows using a live-boot of Ubuntu . If you were to organize your 1.5 TB data on a RAID , you could probably speed up the copy (because the disks will be reading in parallel), and (depending on the configuration) it'll have the added benefit of protecting you from drive failures.
