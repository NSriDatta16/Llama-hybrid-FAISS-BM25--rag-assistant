[site]: stackoverflow
[post_id]: 5505967
[parent_id]: 
[tags]: 
Return a sequence of a variable length whose summation is equal to a given integer

In the form f(x,y,z) where x is a given integer sum, y is the minimum length of the sequence, and z is the maximum length of the sequence. But for now let's pretend we're dealing with a sequence of a fixed length, because it will take me a long time to write the question otherwise. So our function is f(x,r) where x is a given integer sum and r is the length of a sequence in the list of possible sequences. For x = 10 , and r = 2 , these are the possible combinations: 1 + 9 2 + 8 3 + 7 4 + 6 5 + 5 Let's store that in Python as a list of pairs: [(1,9), (2,8), (3,7), (4,6), (5,5)] So usage looks like: >>> f(10,2) [(1,9), (2,8), (3,7), (4,6), (5,5)] Back to the original question, where a sequence is return for each length in the range (y,x) . I the form f(x,y,z) , defined earlier, and leaving out sequences of length 1 (where y-z == 0 ), this would look like: >>> f(10,1,3) [{1: [(1,9), (2,8), (3,7), (4,6), (5,5)], 2: [(1,1,8), (1,2,7), (1,3,6) ... (2,4,4) ...], 3: [(1,1,1,7) ...]}] So the output is a list of dictionaries where the value is a list of pairs. Not exactly optimal. So my questions are: Is there a library that handles this already? If not, can someone help me write both of the functions I mentioned? (fixed sequence length first)? Because of the huge gaps in my knowledge of fairly trivial math, could you ignore my approach to integer storage and use whatever structure the makes the most sense? Sorry about all of these arithmetic questions today. Thanks!
