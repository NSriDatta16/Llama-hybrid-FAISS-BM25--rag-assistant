[site]: stackoverflow
[post_id]: 5571356
[parent_id]: 5571108
[tags]: 
Suggest you load your query into a table variable first. Then you can perform your meta operations. Then UNION ing the 3 rows onto the resultset. The benefit of this approach: you're calculating from the SAME resultset. If you copy/pasted the query for the 3 (min,max,avg), you potentially could be reading different data, if there's another process who'd updated the rows while you were calculating. If/when this happens, your calculations would appear to be incorrect, compared to the raw data in the resultset. much less code to read and maintain DECLARE @MyResults (TABLE) (FY int, DAY varchar(10), STORE varchar(10), DATES varchar(10), ITEM varchar(10), NOTE varchar(10)) DECLARE @MyCalcs TABLE (ForYear int, Item int, Note varchar(100)) --calc the avg, max and min INSERT INTO @MyCalcs (ForYear, Item, Note) SELECT FY, AVG(ITEMS), 'Average' FROM @MyResults GROUP BY FY INSERT INTO @MyCalcs (ForYear, Item, Note) SELECT FY, Max(ITEMS), 'Max' FROM @MyResults GROUP BY FY INSERT INTO @MyCalcs (ForYear, Item, Note) SELECT FY, MIN(ITEMS), 'Min' FROM @MyResults GROUP BY FY --union the discrete data with the calcs SELECT FY,DAY,STORE,DATES,ITEM,NOTE FROM @MyResults UNION ALL SELECT ForYear AS FY, '' AS Day, '' AS Store, Item, Note FROM @MyCalcs
