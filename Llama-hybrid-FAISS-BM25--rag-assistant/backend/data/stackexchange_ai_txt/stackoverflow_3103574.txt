[site]: stackoverflow
[post_id]: 3103574
[parent_id]: 3103153
[tags]: 
"...chooses to resolve the function call on the last line by upcasting the this pointer of the object to the base class..." . What are you talking about? In all of your calls, the object pointer type is Bbase * and the functions the calls resolve to belong to either Bbase or its descendants. The compiler never does any upcasting in order to resolve your calls. In fact, the first two calls require downcasting in order to call the proper overrider, since the overrider belongs to the class located further down in the hierarchy. As for the last two calls - they are dispatched into the Bbase class through a pointer of Bbase * type. The types match exactly, no casting of any kind takes place. As for the overload resolution... Overload resolution is a compile time process, which is based on the static types of the arguments and the ranks of possible conversions. You supplied an argument of A2 * type. The f(A2 *) candidate matched your argument precisely . The f(A1 *) candidate requires a extra conversion from A2 * to A1 * . The candidate that matches exactly is considered a better one, so it wins the overload resolution. Simple.
