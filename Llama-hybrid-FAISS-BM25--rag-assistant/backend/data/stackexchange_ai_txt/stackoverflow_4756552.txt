[site]: stackoverflow
[post_id]: 4756552
[parent_id]: 
[tags]: 
funnelling data into a daemonised non-daemon, using shell commands

This is what I want to do: $ serverise normally-barely-interactive-program-that-uses stdin stdout & unique-id-221B $ clienty 221B "Astonishing!" Elementary $ clienty 221B "what did I just say?" 'Astonishing', although the methods are simple and easily followed, once explained. $ clienty 221B "so, you persist between invokations of the client?" Indeed. I have tried dual named pipes, but they only last one invocation. I think this is because the server side gets an EOF, and so assumes that stdin has been closed by the user. Sockets seem to be the way to go, but most of the wrappers assume an http-like model, and fork off a new program each time someone connects. Socat seems okay, but it also dies after just one go. I have seen Gnu Screen and Tmux used for this, but this seems overkill, and to be honest, I can't assume that the user's environment won't contain either, and thus any solution like this would be a bit fragile in the face of non-standard configs of those. It also seems like a bit of overkill. This seems like a problem that would have come up before, so I must be looking in the wrong place for the snazzy little utility that does this.
