[site]: stackoverflow
[post_id]: 3144246
[parent_id]: 3143803
[tags]: 
For the server itself, you'll need some sort of JavaEE server. Common implementations here are GlassFish (the reference implementation) and Apache Tomcat ... assuming you don't need anything more advanced than a Servlet container. Chances are you won't if you're just using web services. For the client, I assume you're going to have a GUI application, presumably that uses Swing or SWF. You could also opt to make a web application, since you're already going to have a web server involved. For client to server communications, you could use a JAX-WS (SOAP web services) or JAX-RS (RESTful services) implementation. JAX-WS implementations include Sun's Metro (which ships as part of Java 6 SE ) or Apache CXF . JAX-RS implementations include Jersey and Apache CXF . As for the database layer, JDBC isn't your only choice. Java also has the Java Persistence API (JPA, currently at version 2.0). JPA is usually used in J2EE apps (web apps specifically) to simplify the Database layer. Common implementations are EclipseLink JPA (obsoletes Oracle TopLink) and Hibernate 's Annotations . All of these are based on various standards that make up JavaEE: Servlet 2.5, JAX-WS 2.0, JAX-RS 1.1, and JPA 2.0.
