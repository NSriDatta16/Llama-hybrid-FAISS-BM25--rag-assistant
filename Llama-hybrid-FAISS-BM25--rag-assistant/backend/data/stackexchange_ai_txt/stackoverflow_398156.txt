[site]: stackoverflow
[post_id]: 398156
[parent_id]: 374885
[tags]: 
I would partially disagree with Milan's suggestion of embedding the requested representation in the URI. If anyhow possible, URIs should only be used for addressing resources and not for tunneling HTTP methods/verbs. Eventually, specific business action (edit, lock, etc.) could be embedded in the URI if create (POST) or update (PUT) alone do not serve the purpose: POST http://shonzilla.com/orders/08/165;edit In the case of requesting a particular representation in URI you would need to disrupt your URI design eventually making it uglier, mixing two distinct REST concepts in the same place (i.e. URI) and making it harder to generically process requests on the server-side. What Milan is suggesting and many are doing the same, incl. Flickr, is exactly this. Instead, a more RESTful approach would be using a separate place to encode preferred representation by using Accept HTTP header which is used for content negotiation where client tells to the server which content types it can handle/process and server tries to fulfill client's request. This approach is a part of HTTP 1.1 standard , software compliant and supported by web browsers as well. Compare this: GET /orders/08/165.xml HTTP/1.1 or GET /orders/08/165&format=xml HTTP/1.1 to this: GET /orders/08/165 HTTP/1.1 Accept: application/xml From a web browser you can request any content type by using setRequestHeader method of XMLHttpRequest object. For example: function getOrder(year, yearlyOrderId, contentType) { var client = new XMLHttpRequest(); client.open("GET", "/order/" + year + "/" + yearlyOrderId); client.setRequestHeader("Accept", contentType); client.send(orderDetails); } To sum it up: the address, i.e. the URI of a resource should be independent of its representation and XMLHttpRequest.setRequestHeader method allows you to request any representation using the Accept HTTP header. Cheers! Shonzilla
