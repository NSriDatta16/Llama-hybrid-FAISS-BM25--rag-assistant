[site]: stackoverflow
[post_id]: 2196554
[parent_id]: 2196470
[tags]: 
Don't base your detection on the user-agent. There are plenty of other browsers out there that use the Trident 4 engine (the one IE6 use) that are not IE6. The answer is simple: don't detect the browser , detect the engine . To do that, you must use what's called feature based detection . Using feature based detection has the following advantages: Detects all browsers using similar rendering engine than target. Easier code branching to work around issues of a rendering engine. Less false positives (UAs can be modified to pass as another browser, features can't). The following script uses browser features to detect the engine. Credit to The MooTools production team ( http://mootools.net/developers/ ). Note: The snippet below has been modified to work without the MooTools javascript framework. If you do wish to work with MooTools , you no longer need this code, it is part of the distribution. function $tryCatch(){ for (var i = 0, l = arguments.length; i Just include this JavaScript class and you can detect IE6 and any other browser using the Trident4 engine by doing the following: if(Browser.Engine.trident4) { alert('IE6 or similar...'); } elseif(Browser.Engine.name == "trident") { alert('Internet Explorer Trident Rendering Engine Version ' + Browser.Engine.version); }
