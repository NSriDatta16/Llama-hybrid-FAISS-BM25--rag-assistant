[site]: stackoverflow
[post_id]: 184147
[parent_id]: 
[tags]: 
CountDownLatch vs. Semaphore

Is there any advantage of using java.util.concurrent.CountdownLatch instead of java.util.concurrent.Semaphore ? As far as I can tell the following fragments are almost equivalent: 1. Semaphore final Semaphore sem = new Semaphore(0); for (int i = 0; i 2: CountDownLatch final CountDownLatch latch = new CountDownLatch(num_threads); for (int i = 0; i Except that in case #2 the latch cannot be reused and more importantly you need to know in advance how many threads will be created (or wait until they are all started before creating the latch.) So in what situation might the latch be preferable?
