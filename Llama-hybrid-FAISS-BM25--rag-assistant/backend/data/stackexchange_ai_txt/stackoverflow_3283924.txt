[site]: stackoverflow
[post_id]: 3283924
[parent_id]: 3283902
[tags]: 
The biggest problem with having many projects in a single solutions (in particular when there are many interdependencies between the projects) is that the compile time will slow down real quick. I have seen compile times go to several minutes to tens of minutes when project numbers grow this large. Application startup may suffer as well, if 100 assemblies need to be loaded and initialized. This of course assumes that all 100 assemblies are needed by the application. Such a large number of projects hints at code organization problems as well. I would call this a definite code smell. It looks like an attempt at decoupling that goes beyond the reasonable - a bit of architecture astronaut-ism, at a guess. I would not worry about the deployment story, as deploying one assembly into a directory is not much different from deploying 100 into one directory... Of course, deploying 100 assemblies via the web will be slower (100 connections instead of 1, probably the have a larger size...). There are tools that will merge multiple assemblies which can help with this - the best known is from Microsoft - ILMerge . A bigger issue to worry about, when coming to deployment is in configuration and getting it right, especially if most assemblies need their own configuration.
