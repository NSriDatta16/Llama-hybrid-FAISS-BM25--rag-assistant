[site]: stackoverflow
[post_id]: 3688571
[parent_id]: 3688389
[tags]: 
Without knowing the scale of your work it's extremely hard to answer this. Lots of things to consider, it sounds, at least like your software costs will be very low. Things to consider: One machine (web + app + db) vs multiple machines. Data backups (a must have IMHO), be that external service, external hardware, or a dedicated machine. Also relevant: offsite copies regularly maintained. Redundancy - multiple network cards/server, multiple power supplies/server, lights-out abilities of servers if they're not easily accessed, multiple connections in the network (if that's key to your application) Power - you'll want clean power for a server - not only does a UPS keep the system running for a few minutes during a brown out or blackout, but the higher level ones condition the power coming out. Cooling & noise - server hardware generates some serious heat, and some systems generate some serious noise - you need somewhere to put these things with good airflow + cooling that isn't going to drive anyone crazy. Networking - if you're building a multi-computer setup (eg. 1 DB server, 2 app servers, 1 load balancer) you'll also need good networking between them - ideally on a separated network (for security and performance). is this for a production system, a test system, a development system, all three? Solutions: One large machine: big ram, big/fast drives, large processor. Pros: Simplicity. Cons: Expensive, different services require different components but you have to get the best of all, doesn't scale - will have to switch to another format if you need more later. A machine of reasonable size for each service: db machine - large ram, as fast drives as possible/affordable, app machine - good processor, reasonable ram, some hd. You may also want to split out file storage into a SAN (which both the app and DB machine can use) Pros: Buy the best for the task, save where it's not needed. Cons: multiple machines to support, it's easy enough to just buy two large machines - so 2x #1 cost Machine cluster - a load balancer up front, several app servers behind that, with several database machines behind this. Pros: scales well, can use commodity hardware (eg. $500 desktops) to be quite inexpensive Cons: Every part has to be built with possibility or expectation of failure (not a bad idea), administration can be high, networking could become key There are lots of choices and options, and there are lots of configuration examples on the web. The cloud services (Amazon's AWS for example) have some excellent case studies of companies requirements and the cloud services they use to provide their solution - there's a real world hardware analogue of these setups. The amount of money you have (depending on the currency ;)) seems like more than enough for now - you can even get into the cluster setup depending on the chosen hardware. You're trying to solve a bottleneck but you don't say where it is right now - if it's a db server running on a desktop machine, there maybe other processes (including virus scanners, defrag processes, indexing) that are interfering, it could even be something as simple as the configuration is very restrictive (low threadcount, memory usage). The scale of what you're working on is really key here, but last couple of generations of server hardware may well be powerful enough for your needs.
