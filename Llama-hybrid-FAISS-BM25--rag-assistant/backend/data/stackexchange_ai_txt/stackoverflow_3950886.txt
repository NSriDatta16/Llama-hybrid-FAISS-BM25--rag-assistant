[site]: stackoverflow
[post_id]: 3950886
[parent_id]: 3950241
[tags]: 
MySingleton.h #import @interface MySingleton : NSObject { } @property(nonatomic,assign) int score; + (MySingleton*) sharedInstance; @end MySingleton.m #import "MySingleton.h" static MySingleton *_instance; @implementation MySingleton @synthesize score; + (MySingleton*)sharedInstance { @synchronized(self) { if (_instance == nil) { _instance = [[super allocWithZone:NULL] init]; } } return _instance; } #pragma mark Singleton Methods + (id)allocWithZone:(NSZone *)zone { return [[self sharedInstance]retain]; } - (id)copyWithZone:(NSZone *)zone { return self; } - (id)retain { return self; } - (unsigned)retainCount { return NSUIntegerMax; } - (void)release { } - (id)autorelease { return self; } @end See this xcode-template to simplify singleton-generation.
