[site]: stackoverflow
[post_id]: 4221802
[parent_id]: 4221687
[tags]: 
When you're passing the arrays, you just cite the names at the calling site: numGames = getStats(date[][2], oppName[], inStats[][4]); numGames = getStats(date, oppName, inStats); It is in the called functions that you use (more or less) the notation you showed. However, when your function accepts a multi-dimensional array, you must specify the sizes of the second and subsequent dimensions in the function's argument list. double compAvgTD(stat[][], numGames) double compAvgTD(double stat[][4], int numGames) This applies both in the declarations inside main() and in the definitions of the functions. Note that I added the types, too. As another answerer pointed out, it is aconventional (though not actually wrong) to declare the functions inside main() . If the declared functions would be called from any other function, then it would be bad to declare the functions inside main() - you'd have to repeat yourself to declare the functions in the other functions from which they are called, in contradiction of the Agile dictum: DRY Don't Repeat Yourself. The "I'm A Gullible Mug" Compiling Solution There were many changes necessary to get the code to compile. The code has not been run. There is at least one bug left in here - the compAvgPts() function uses the same statistic as cmpAvgYds() which is likely to give inflated statistics on the points. Fixing that requires moderately major surgery; I think you're missing two columns of data in the input (the score for each team). However, the code does compile cleanly on MacOS X 10.6.5 using GCC 4.2.1 with the command line: gcc -O -std=c99 -Wall -Wextra -Wmissing-prototypes -Wstrict-prototypes \ -Wold-style-definition xx.c -o xx Note that I had to move the function declarations out of main() ; otherwise, the compiler warned that there was no prototype in scope. #include #include #define MAXGAMES 15 #define AUSTATS "auPass2010.txt" int getStats(int date[][2], char oppName[][64], double inStats[][4]); void analysis(double inStats[][4], double outStats[][3], int numGames); double compAvgCmp(double stat[][4], int numGames); double compAvgAtt(double stat[][4], int numGames); double compAvgYds(double stat[][4], int numGames); double compAvgTD(double stat[][4], int numGames); double compAvgPts(double stat[][4], int numGames); int main(void) { int date[MAXGAMES][2]; char oppName[MAXGAMES][64]; double inStats[MAXGAMES][4]; double outStats[MAXGAMES][3]; double avgCmp, avgAtt, avgYds, avgTD, avgPts; int numGames=0, r,c; numGames = getStats(date, oppName, inStats); printf("\t\t2010 AUBURN PASSING STATISTICS\n" "DATE\tOPPONENT\t\tCMP\tATT\tYDS\tTD --\tAVEYDS\t%%CMP\tPTS\n" "-----\t-------------\t----\t----\t----\n"); if (numGames
