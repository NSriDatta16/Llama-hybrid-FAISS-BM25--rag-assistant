[site]: crossvalidated
[post_id]: 642701
[parent_id]: 
[tags]: 
Determining a mix of clusters by using naive Bayes classifiers

I have the following question which I cannot seem to find an easy answer to: given that we have two groups (let's call them 1 and 2), is it possible to determine a mixed percentage of the groups by training on only 1 and 2? For example, I did two clusters like this: clusterSize = 1000; % cluster one cluster1 = randn(clusterSize, 2); cluster1L = ones(clusterSize, 1); % cluster two cluster2 = randn(clusterSize, 2) + 5; cluster2L = 2 * ones(clusterSize, 1); I can then define clusters 3, 4 and 5, such that: 3 is a 50/50 combination of 1 and 2 4 is a 25/75 combination of 1 and 2 5 is a 75/25 combination of 1 and 2 To do this, here is the code: % cluster three cluster3 = 0.5.*cluster1 + 0.5.*cluster2; cluster3L = 3 * ones(clusterSize, 1); % cluster four cluster4 = 0.25.*cluster1 + 0.75.*cluster2; cluster4L = 4 * ones(clusterSize, 1); % cluster five cluster5 = 0.75.*cluster1 + 0.25.*cluster2; cluster5L = 5 * ones(clusterSize, 1); I then return this data as a table: X = [cluster1; cluster2; cluster3; cluster4; cluster5]; Y = string([cluster1L; cluster2L; cluster3L; cluster4L; cluster5L]); Data = table(); Data.X = X(:,1); Data.Y = X(:,2); Data.Label = Y; I normalize and take the PCA of the data. I train only on clusters 1 and 2: predictors = normalize(Data{:,1:2}); [coeff, score, latent, tsquared, explained] = pca(predictors); TrainingClustersData = score(contains(Data.Label,["1", "2"]),:); TrainingLabels = Data.Label(contains(Data.Label,["1", "2"]),:); MixedClustersData = score(~contains(Data.Label,["1", "2"]),:); MixedClustersLabels = Data.Label(~contains(Data.Label,["1", "2"]),:); mdl = fitcnb(TrainingClustersData, TrainingLabels); Doing so, I can calculate the posterior probability of the clusters and I can also scatter the different clusters to check their location: xMax = 5; xMin = -5; h = 0.05; [x1Grid,x2Grid] = meshgrid(xMin:h:xMax,xMin:h:xMax); [~,PosteriorRegion] = predict(mdl,[x1Grid(:),x2Grid(:)]); PosteriorRegion(:,3) = 0; h = scatter(x1Grid(:),x2Grid(:),1,PosteriorRegion); xlim([xMin xMax]) ylim([xMin xMax]) hold on gscatter(score(:,1), score(:,2), Data.Label) legend("Location", "northwest") By checking the plot, I can see that the distances of the clusters heavily depend on the mix that I defined previously, which is logical. My question is, can I find this mix percentage from this approach? is this viable and can it be found in citable research? Using mdl.predict on the mix data gives me probabilities (scores) of the sample belonging to either cluster 1 or 2, which is also what I need in this case. I want to use this probability as a mix determination. I look forward to any comments, critiques or suggestions
