[site]: stackoverflow
[post_id]: 4356536
[parent_id]: 4356273
[tags]: 
I cannot answer all of your questions, but I will take a shot at a few of them (Question 1) Basically your assessment sounds right. It could also be said that EF 'abstracts away' the SQL that is otherwise needed to persist data to a persistent (generally a disk drive) store. (Question 7) Yes. However, it has been my experience that many (if not most) software developers are unable or unwilling to deal with that many different technologies concurrently. The average Stack Overflow member does NOT suffer from this particular malady. (Question 8) That guy is right. LINQ rocks. Everytime you can replace a foreach loop with a LINQ statement your code gets easier to read and maintain. Remember LINQ (Lambdas) can be used for much more than querying databases. The LINQ syntax to sort a collection is as simple as sorting in SQL statements, but has the added advantage of being able to sort in memory. Learn LINQ completely, it is your friend. (Question 9) I usually dive right into a real work project. Then refactor after I've lerned a few things. The best learning comes from doing. You learn more from doing it wrong, seing the problem and making it right than any other methodolgy I know. (Question 10) There two books have been around a while but are still important. Design Patterns Elements of Reusable Object Oriented Software This book is commonly referred to as the 'Gang of Four' or GOF book. and Patterns of Enterprise Application Architecture by Martin Fowler
