[site]: stackoverflow
[post_id]: 257496
[parent_id]: 256915
[tags]: 
If you absolutely have to have your StoreBasketService use the session, I'd be tempted to define an interface and wrapper around HttpSessionState instead of using HttpSessionStateBase so that you can register it with StructureMap as well.The wrapper would get the session state from the current context. Register the wrapper with StructureMap and then have your StoreBasketService take the interface as the argument to the constructor. Structure map should then know how to create an instance of the interface wrapper and inject it into your StoreBasketService class. Using an interface and wrapper will allow you to mock the wrapper in your unit tests, muc in the same way HttpSessionStateBase allows mocking the actual session. public interface IHttpSessionStateWrapper { HttpSessionState GetSessionState(); } public class HttpSessionStateWrapper : IHttpSessionStateWrapper { public virtual HttpSessionState GetSessionState() { return HttpContext.Current.Session; } } ForRquestedType(typeof(IHttpSessionStateWrapper)) .TheDefaultIsConcreteType(typeof(IHttpSessionStateWrapper)); public class StoreBasketService { HttpSessionState session; public StoreBasketService( IHttpSessionstateWrapper wrapper ) { session = wrapper.GetSessionState(); } // basket implementation ... } However, you can have StructureMap actually store your basket in the session using .CacheBy(InstanceScope.HttpContext) when registering it. It may actually be better to have your StoreBasketService implement internal storage instead of storing things in the session -- then you lose the dependency on the session state entirely (from the perspective of your class) and your solution could be simpler. Your internal storage could be a Dictionary since this is how you access them via your interface. See also: http://www.lostechies.com/blogs/chad_myers/archive/2008/07/15/structuremap-basic-scenario-usage.aspx http://www.lostechies.com/blogs/chad_myers/archive/2008/07/17/structuremap-medium-level-usage-scenarios.aspx
