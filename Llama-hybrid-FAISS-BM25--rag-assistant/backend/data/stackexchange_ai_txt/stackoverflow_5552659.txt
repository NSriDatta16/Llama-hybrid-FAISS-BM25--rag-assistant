[site]: stackoverflow
[post_id]: 5552659
[parent_id]: 5547993
[tags]: 
Using wireshark to interogte the packets sent I saw that the MIME Multipart packet was malformed. I basically changed the client to write the content-disposition stuff to use the outputstream straight and not a PrintWriter. It seems to work , but I am not sure why , as both so essentialy the same thing. Thanks for Vineet Reynolds for pointing me to WireShark Here is the new client : package com.scrappy.web.client.compass.verification; import java.io.BufferedReader; import java.io.File; import java.io.FileInputStream; import java.io.IOException; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.net.HttpURLConnection; import java.net.MalformedURLException; import java.net.URL; import java.net.URLConnection; public class TestClient { public static void main(String ... aaa) { System.setProperty("http.keepAlive", "false"); String boundary = "---------------------------" + Long.toHexString(System.currentTimeMillis()); try { URLConnection connection = new URL("http://localhost:8080/scrappyWeb/MultipartUploadServlet").openConnection(); ((HttpURLConnection)connection).setRequestMethod("POST"); ((HttpURLConnection)connection).setConnectTimeout(6000000); connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13"); // Do as if you're using Firefox 3.6.3. connection.setDoOutput(true); connection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary); connection.setRequestProperty("accept-encoding", "gzip,deflate"); connection.setRequestProperty("connection", "keep-alive"); connection.setRequestProperty("accept-charset","ISO-8859-1,utf-8;q=0.7,*;q=0.7"); connection.setRequestProperty("accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"); connection.setRequestProperty("accept-language", "en-us,en;q=0.5"); OutputStream output = connection.getOutputStream(); String charset = "UTF-8"; File textFile = new File("/Users/christiaan/test.txt"); output.write(("\r\n\r\n--" + boundary +"\r\n").getBytes()); output.write(("Content-Disposition: form-data; name=\"file1\"; filename=\"" + textFile.getName() + "\"\r\n").getBytes()); output.write(("Content-Type: text/plain\r\n").getBytes()); output.write(("\r\n").getBytes()); PrintWriter writer = null; writer = new PrintWriter(new OutputStreamWriter(output, charset), true); BufferedReader reader = null; try { reader = new BufferedReader(new InputStreamReader(new FileInputStream(textFile), charset)); for (String line; (line = reader.readLine()) != null;) { writer.println(line); } } finally { if (reader != null) try { reader.close(); } catch (IOException logOrIgnore) {} } // End of multipart/form-data. output.write(("\r\n").getBytes()); output.write(("--" + boundary +"--\r\n").getBytes()); output.flush(); writer.close(); ((HttpURLConnection)connection).getResponseCode(); } catch (MalformedURLException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } } }
