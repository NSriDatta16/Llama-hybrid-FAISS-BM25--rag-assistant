[site]: stackoverflow
[post_id]: 1025409
[parent_id]: 
[tags]: 
Can you perform an impersonated search in SharePoint without providing a password?

I have done impersonation in SharePoint quite a bit in the past by doing something such as the following. SPWeb web = SPContext.Current.Web; string currentWebUrl = web.Url; SPUser user = web.EnsureUser(loginToImpersonate); using (SPSite site = new SPSite(currentWebUrl, user.UserToken) { using (SPWeb impersonatedWeb = site.OpenWeb()) { // Any SharePoint access here to 'impersonatedWeb' // is impersonated as 'loginToImpersonate' } } Note that this does not require the password of the user you are impersonating, but does require certain code access security to run. As a side note the EnsureUser call also requires the current user to be an admin, but there are other methods that can be used in place of EnsureUser to get the SPUser object (trying to keep my code fragment simple for this question). Now that I've set the stage... I now want to do either a FullTextSQLQuery or a KeywordQuery against either the MOSS or WSS query engine and get security trimmed results based on an impersonated user. Both objects can take a SPSite on the constructor, but ignore my impersonation logic. They go with the currently logged in user instead (HTTPContext.Current.User). There are other constructors as well: application name (string) and for MOSS there's one with a ServerContext to the SSP, but I don't think these will help at all. I've used Reflector on the KeywordQuery class and its base Query class and it gets pretty ugly pretty quick. I believe the actual logic that determines the user is down in unmanaged code. So, is it possible for me to do this?
