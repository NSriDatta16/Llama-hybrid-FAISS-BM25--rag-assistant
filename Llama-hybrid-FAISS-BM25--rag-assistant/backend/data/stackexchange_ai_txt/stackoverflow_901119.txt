[site]: stackoverflow
[post_id]: 901119
[parent_id]: 901115
[tags]: 
If you're using jQuery, you can use a library, such as jQuery BBQ: Back Button & Query Library . ...jQuery BBQ provides a full .deparam() method, along with both hash state management, and fragment / query string parse and merge utility methods. Edit: Adding Deparam Example: var DeparamExample = function() { var params = $.deparam.querystring(); //nameofparam is the name of a param from url //code below will get param if ajax refresh with hash if (typeof params.nameofparam == 'undefined') { params = jQuery.deparam.fragment(window.location.href); } if (typeof params.nameofparam != 'undefined') { var paramValue = params.nameofparam.toString(); } }; If you want to just use plain JavaScript, you could use... var getParamValue = (function() { var params; var resetParams = function() { var query = window.location.search; var regex = /[?&;](.+?)=([^&;]+)/g; var match; params = {}; if (query) { while (match = regex.exec(query)) { params[match[1]] = decodeURIComponent(match[2]); } } }; window.addEventListener && window.addEventListener('popstate', resetParams); resetParams(); return function(param) { return params.hasOwnProperty(param) ? params[param] : null; } })();â€‹ Because of the new HTML History API and specifically history.pushState() and history.replaceState() , the URL can change which will invalidate the cache of parameters and their values. This version will update its internal cache of parameters each time the history changes.
