[site]: crossvalidated
[post_id]: 180271
[parent_id]: 179341
[tags]: 
The core of glmnet (the fortran code) does not accept sample weights for binomial regression models. Contrast the call structure of the elastic net (the linear model) call elnet(ka,parm,no,ni,x,y,w,jd,vp,cl,ne,nx,nlam,flmin,ulam,thr,isd, intr,maxit,lmu,a0,ca,ia,nin,rsq,alm,nlp,jerr) to the call structure for the lognet (the binomial model) call lognet (parm,no,ni,nc,x,y,o,jd,vp,cl,ne,nx,nlam,flmin,ulam,thr,isd, intr,maxit,kopt,lmu,a0,ca,ia,nin,dev0,fdev,alm,nlp,jerr) The binomial model has no w argument. I'm not sure what the R wrapper does when you supply sample weights to a longet, I suspect it ignores them. It would explain what you are seeing, because the fitting algorithm would, in your situation, see one positive and one negative case for every combination of predictors. This would drive all the coefficients to zero. Passing sample weights to the lognet should be an error, but unfortunately it just seems to cause surprising behavior. What you want to do is pass in a two column matrix for your response vector. The first column will be a count of negative cases, the second a count of positive cases. This is documented For family="binomial" should be either a factor with two levels, or a two-column matrix of counts or proportions (the second column is treated as the target class; for a factor, the last level in alphabetical order is the target class).
