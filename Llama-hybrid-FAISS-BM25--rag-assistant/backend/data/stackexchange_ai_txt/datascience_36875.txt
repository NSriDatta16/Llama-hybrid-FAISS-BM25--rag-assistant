[site]: datascience
[post_id]: 36875
[parent_id]: 36868
[tags]: 
What you are looking for is a model with an "Attention mechanism". Unfortunately, this means that you have to change your model and to retrain it. It is more complicated that a simple image classifier but I can assure you that it is worth it to learn how it works. Or you can simply find an existing repository that implement it. Alternatively, you can train your model on smaller images that contain exactly the melanoma. The preprocessing will be much heavier. Then you will scan your bigger images with a bounding box this is known as sliding window . You will have probabilities for each small images. Sliding Window (Formally): The propose is: Given a classifying model $F(J)$ where $J$ are images of size $w \times h$ you will apply this model to a image $I[m,n]$ by slicing it into many blocks $B[m,n]$ where $$ B[m,n] = I\Biggl[\Biggl(m-\frac{w}{2}:m+\frac{w}{2}\Biggr),\Biggl(n-\frac{h}{2}:m+\frac{h}{2}\Biggl)\Biggr]$$ And you will apply the model as $F(B[m,n]), \forall m \in [w,W-w] and n \in [h,H-h]$ where $W$ and $H$ are the width and height of $I$ . Important to notice that for OpenCV images the height is actually the first coordinate of the variable (numpy array). If you have a mean size of melanoma images you can run through $m$ and $n$ with steps of half of the mean size. So you might search for which parts of the image where classified as melanoma by looking into $$H[m,n] = F(B[m,n])$$ and using it as a binary mask to identify melanoma classified image parts.
