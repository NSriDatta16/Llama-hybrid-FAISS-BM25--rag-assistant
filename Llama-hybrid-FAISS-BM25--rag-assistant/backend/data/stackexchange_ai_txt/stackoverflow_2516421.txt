[site]: stackoverflow
[post_id]: 2516421
[parent_id]: 1646674
[tags]: 
You can do this pretty easily in JavaScript using the OnClientNodeDropped event handler. You can also use the OnClientNodeDragStarted handler to cancel drag events if they are not at the desired level. I have posted a downloadable drag and drop treeview sample here. Below is the sample code from the project. Treeview Test function adminTV_OnClientNodeDropped(sender, eventArgs) { var dropTarget = eventArgs.get_desObj(); //if drop to the root level.the droptarget is treeview if (dropTarget == sender) { eventArgs.set_canceled(true); return; } var node = eventArgs.get_node(); //the other treeview's node can't drop to the admin's. if (node.get_treeView() != dropTarget.get_treeView()) { eventArgs.set_canceled(true); return; } //prevent drop the admin's node to the other level. if (dropTarget.get_level() != 0) { eventArgs.set_canceled(true); return; } }; function adminTV_OnClientNodeDragStarted(sender, eventArgs) { //can't drag root node. if (eventArgs.get_node().get_level() == 0) { eventArgs.set_canceled(true); } }; function userTV_OnClientNodeDropped(sender, eventArgs) { var dropTarget = eventArgs.get_desObj(); //if drop to the root level.the droptarget is treeview if (dropTarget == sender) { eventArgs.set_canceled(true); return; } //prevent drop the node to the other level. if (dropTarget.get_level() != 0) { eventArgs.set_canceled(true); return; } }; function userTV_OnClientNodeDragStarted(sender, eventArgs) { //can't drag root node. if (eventArgs.get_node().get_level() == 0) { eventArgs.set_canceled(true); } };
