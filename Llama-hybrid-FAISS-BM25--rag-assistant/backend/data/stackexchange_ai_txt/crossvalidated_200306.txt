[site]: crossvalidated
[post_id]: 200306
[parent_id]: 200276
[tags]: 
You probably want to use a linear SVM, or similar linear model, with kernel approximation. The Nystr√∂m method is reasonably good and works for any kernel function as long as its approximately low-rank on your dataset (most are); random Fourier features can also be quite effective for certain kernels. This blog post gives a reasonable overview, and that author's basic implementations are available in scikit-learn . You should also be sure to use either LIBLINEAR or other scalable linear SVM solvers, or standard code for stochastic gradient descent. Don't use software like LIBSVM, which is at least quadratic in the number of input points.
