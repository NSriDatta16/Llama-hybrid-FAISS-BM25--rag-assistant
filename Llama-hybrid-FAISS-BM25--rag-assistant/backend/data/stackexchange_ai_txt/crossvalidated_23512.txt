[site]: crossvalidated
[post_id]: 23512
[parent_id]: 23509
[tags]: 
If anyone is interested here are some of my thoughts on the subject: As @tdc suggested I'm doing coarse/fine grid search. This introduces two problems: In most cases I will get set of good metaparameter sets that have wildly different parametes --- i'm interpreting it in this way that these parameters are optimal solutions, but to be sure I should check all fine grids near all these good parameters (that would be take a lot of time), so for now I check only neighbourhood of bets metaparameter set. In most cases fine search doesn't increase SVM performance (that may be due to fact that I'm checking only neightbourhood of best point from coarse grid. I observed behaviour that most computing time is spent on metaparemeters sets that will not yield good results, for example: most metaparameter sets will compute in under 15 seconds (and best of them have error rate of 15%), and some take 15 minutes (and most of these have error rates bigger that 100%). So when doing grid search I kill points that take more than 30seconds to compute and assume they had infinite error. I use multiprocessing (which is simple enough)
