[site]: stackoverflow
[post_id]: 331623
[parent_id]: 328465
[tags]: 
Webforms is an abstraction of the web for folks who come from a gui world. I find it has alot of advantages, especially in the RAD sense, but when writing big beefy apps you often end up painting yourself into a corner it is very hard to get out of (ie: everything to do with viewstate.) The other problem is you sort of fall into bad practices with webforms. You should not be using drag and drop datasources, built in grid controls, and most definitely not have business logic in the code behind if you want something that is scalable and maintainable with a clean architecture. To do that in webforms requires forethought and discipline, because everything steers you in those directions. By contrast, with MVC you sort of fall into best practices. It is more performant (the whole page life cycle/viewstate thing chews perf on both client and server), and far cleaner from an architecture point of view. The downside is that you can say good bye to RAD, and you will actually need to have decent knowledge of css/javascript to make good looking pages. It really comes down to best tool for the job, and the type of experience/knowledge you/your team has.
