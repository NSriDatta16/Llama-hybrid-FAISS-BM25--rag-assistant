[site]: datascience
[post_id]: 53325
[parent_id]: 
[tags]: 
Logistic Regression doesn't predict for the entire test set

I am working through Kaggle's Titanic competition. I am mostly done with my model but the problem is that the logistic regression model does not predict for all of 418 rows in the test set but instead just returns predictions for 197 rows. This is the error PyCharm gives: Traceback (most recent call last): File "C:/Users/security/Downloads/AP/Titanic-Kaggle/TItanic-Kaggle.py", line 37, in submission = pd.DataFrame({'PassengerId': test['PassengerId'], 'Survived': predictions}) File "C:\Users\security\Anaconda3\envs\TItanic-Kaggle.py\lib\site-packages\pandas\core\frame.py", line 392, in __init__ mgr = init_dict(data, index, columns, dtype=dtype) File "C:\Users\security\Anaconda3\envs\TItanic-Kaggle.py\lib\site-packages\pandas\core\internals\construction.py", line 212, in init_dict return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype) File "C:\Users\security\Anaconda3\envs\TItanic-Kaggle.py\lib\site-packages\pandas\core\internals\construction.py", line 51, in arrays_to_mgr index = extract_index(arrays) File "C:\Users\security\Anaconda3\envs\TItanic-Kaggle.py\lib\site-packages\pandas\core\internals\construction.py", line 328, in extract_index raise ValueError(msg) ValueError: array length 197 does not match index length 418 When I print(predictions) to confirm, this is what it gives: [0 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 0] This is my full code: import pandas as pd import warnings from sklearn.linear_model import LogisticRegression from sklearn.model_selection import train_test_split warnings.filterwarnings("ignore", category=FutureWarning) train = pd.read_csv("https://raw.githubusercontent.com/oo92/Titanic-Kaggle/master/train.csv") test = pd.read_csv("https://raw.githubusercontent.com/oo92/Titanic-Kaggle/master/test.csv") train['Sex'] = train['Sex'].replace(['female', 'male'], [0, 1]) train['Embarked'] = train['Embarked'].replace(['C', 'Q', 'S'], [1, 2, 3]) # Fill missing values in Age feature with each sexâ€™s median value of Age train['Age'].fillna(train.groupby('Sex')['Age'].transform("median"), inplace=True) # Creating a new column called "HasCabin", where passengers with a cabin will get a score of 1 and those without cabins will get a score of 0 train['HasCabin'] = train['Cabin'].notnull().astype(int) train['Relatives'] = train['SibSp'] + train['Parch'] logReg = LogisticRegression() data = train[['Pclass', 'Sex', 'Relatives', 'Fare', 'Age', 'Embarked', 'HasCabin']] # implement train_test_split x_train, x_test, y_train, y_test = train_test_split(data, train['Survived'], test_size=0.22, random_state=0) # Training the model with the Logistic Regression algorithm logReg.fit(x_train, y_train) predictions = logReg.predict(x_test) submission = pd.DataFrame({'PassengerId': test['PassengerId'], 'Survived': predictions}) filename = 'Titanic-Submission.csv' submission.to_csv(filename, index=False) UPDATE As per what the users have pointed out, I went ahead and tried to remedy my mistake (ignore the code repetition. I'll be solving that later): import pandas as pd import warnings from sklearn.linear_model import LogisticRegression from sklearn.model_selection import train_test_split warnings.filterwarnings("ignore", category=FutureWarning) train = pd.read_csv("https://raw.githubusercontent.com/oo92/Titanic-Kaggle/master/train.csv") test = pd.read_csv("https://raw.githubusercontent.com/oo92/Titanic-Kaggle/master/test.csv") train['Sex'] = train['Sex'].replace(['female', 'male'], [0, 1]) train['Embarked'] = train['Embarked'].replace(['C', 'Q', 'S'], [1, 2, 3]) train['Age'].fillna(train.groupby('Sex')['Age'].transform("median"), inplace=True) train['HasCabin'] = train['Cabin'].notnull().astype(int) train['Relatives'] = train['SibSp'] + train['Parch'] train_data = train[['Pclass', 'Sex', 'Relatives', 'Fare', 'Age', 'Embarked', 'HasCabin']] x_train, x_validate, y_train, y_validate = train_test_split(train_data, train['Survived'], test_size=0.22, random_state=0) test['Sex'] = test['Sex'].replace(['female', 'male'], [0, 1]) test['Embarked'] = test['Embarked'].replace(['C', 'Q', 'R'], [1, 2, 3]) test['Age'].fillna(test.groupby('Sex')['Age'].transform("median"), inplace=True) test['HasCabin'] = test['Cabin'].notnull().astype(int) test['Relatives'] = test['SibSp'] + test['Parch'] test_data = test[['Pclass', 'Sex', 'Relatives', 'Fare', 'Age', 'Embarked', 'HasCabin']] logReg = LogisticRegression() logReg.fit(x_train, y_train) predictions = logReg.predict(test[test_data]) submission = pd.DataFrame({'PassengerId': test['PassengerId'], 'Survived': predictions}) filename = 'Titanic-Submission.csv' submission.to_csv(filename, index=False) As you can see, I tried to input the select test features into my algorithm test_data = test[['Pclass', 'Sex', 'Relatives', 'Fare', 'Age', 'Embarked', 'HasCabin']] ... predictions = logReg.predict(test[test_data]) Right now, I'm getting the following error: Traceback (most recent call last): File "C:/Users/security/Downloads/AP/Titanic-Kaggle/TItanic-Kaggle.py", line 29, in predictions = logReg.predict(test[test_data]) File "C:\Users\security\Anaconda3\envs\TItanic-Kaggle.py\lib\site-packages\pandas\core\frame.py", line 2914, in __getitem__ return self._getitem_frame(key) File "C:\Users\security\Anaconda3\envs\TItanic-Kaggle.py\lib\site-packages\pandas\core\frame.py", line 3009, in _getitem_frame raise ValueError('Must pass DataFrame with boolean values only') ValueError: Must pass DataFrame with boolean values only Its telling me that I need to pass boolean values into my algorithm but I don't understand why. There wasn't such a prerequisite when I was using the exact same data format while training the model.
