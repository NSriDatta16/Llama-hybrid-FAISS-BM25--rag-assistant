[site]: stackoverflow
[post_id]: 4639568
[parent_id]: 4637774
[tags]: 
C++ doesn't explicitly says so, but it is a consequence of two other requirements: First, all objects must be well-aligned. 3.8/1 says The lifetime of an object of type T begins when [...] storage with the proper alignment and size for type T is obtained and 3.9/5: Object types have *alignnment requirements (3.9.1, 3.9.2). The alignment of a complete object type is an implementation-defined integer value representing a number of bytes; an object is allocated at an address that meets the alignment requirements of its object type. So every object must be aligned according to its alignment requirements. The other requirement is that objects in an array are allocated contigulously: 8.3.4/1: An object of array type contains a contiguously allocated non-empty set of N subobjects of type T . For the objects in an array to be contiguously allocated, there can be no padding between them. But for every object in the array to be properly aligned, each individual object must be padded so that the byte immediately after the end of the object is also well aligned. In other words, the size of the object must be a multiple of its alignment.
