[site]: stackoverflow
[post_id]: 1506712
[parent_id]: 1506410
[tags]: 
Since it seems you're going to be hard-coding anyways, why not have something like public static Bar responseBar(Foo f) { switch(f) { case A: return Bar.Alpha; // ... etc } } for each enum? It looks like you have some overlapping responses in your example, so you could even take advantage of cases falling through. EDIT: I like Tom's suggestion of the EnumMap; I think performance is probably faster on the EnumMap, but the sort of elegant construction described in Effective Java doesn't seem to be afforded by this particular problem - however, the switch solution offered above would be a good way to construct two static EnumMaps, then the response could be something like: public static Bar response(Foo f) { return FooToBar.get(f); } public static Foo response(Bar b) { return BarToFoo.get(b); }
