[site]: stackoverflow
[post_id]: 182361
[parent_id]: 181537
[tags]: 
You'll have to write a plugin to logparser. Here is what I did: [Guid("1CC338B9-4F5F-4bf2-86AE-55C865CF7159")] public class SPUsageLogParserPlugin : ILogParserInputContext { private FileStream stream = null; private BinaryReader br = null; private object[] currentEntry = null; public SPUsageLogParserPlugin() { } #region LogParser protected const int GENERAL_HEADER_LENGTH = 300; protected const int ENTRY_HEADER_LENGTH = 50; protected string[] columns = {"TimeStamp", "SiteGUID", "SiteUrl", "WebUrl", "Document", "User", "QueryString", "Referral", "UserAgent", "Command"}; protected string ReadString(BinaryReader br) { StringBuilder buffer = new StringBuilder(); char c = br.ReadChar(); while (c != 0) { buffer.Append(c); c = br.ReadChar(); } return buffer.ToString(); } #endregion #region ILogParserInputContext Members enum FieldType { Integer = 1, Real = 2, String = 3, Timestamp = 4 } public void OpenInput(string from) { stream = File.OpenRead(from); br = new BinaryReader(stream); br.ReadBytes(GENERAL_HEADER_LENGTH); } public int GetFieldCount() { return columns.Length; } public string GetFieldName(int index) { return columns[index]; } public int GetFieldType(int index) { if (index == 0) { // TimeStamp return (int)FieldType.Timestamp; } else { // Other fields return (int)FieldType.String; } } public bool ReadRecord() { if (stream.Position
