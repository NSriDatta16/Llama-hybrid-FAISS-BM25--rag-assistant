[site]: stackoverflow
[post_id]: 1101611
[parent_id]: 
[tags]: 
Help needed improving Python code using List Comprehensions

I've been writing little Python programs at home to learn more about the language. The most recent feature I've tried to understand are List Comprehensions. I created a little script that estimates when my car needs its next oil change based on how frequently I've gotten the oil changed in the past. In the code snippet below, oil_changes is a list of the mileages at which I got the oil changed. # Compute a list of the mileage differences between each oil change. diffs = [j - i for i, j in zip(oil_changes[:-1], oil_changes[1:])] # Use the average difference between oil changes to estimate the next change. next_oil = oil_changes[-1] + sum(diffs) / len(diffs) The code produces the right answer (did the math by hand to check) but it doesn't feel quite Pythonic yet. Am I doing a lot of needless copying of the original list in the first line? I feel like there's a much better way to do this but I don't know what it is.
