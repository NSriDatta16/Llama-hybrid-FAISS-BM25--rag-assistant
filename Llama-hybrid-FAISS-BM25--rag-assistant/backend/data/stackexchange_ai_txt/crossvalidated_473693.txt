[site]: crossvalidated
[post_id]: 473693
[parent_id]: 473667
[tags]: 
If your problem is "nice enough" that CNNs can do a good job on it, congratulations! Most of the work has been abstracted away! But if you're unlucky enough to be working on any of the myriad of problems that don't naturally lend themselves to CNNs or similar "feature-free" neural networks, then you'll have to spend a lot of time figuring out how to collect and represent your data in a useful way. One example is computer security. A portable executable file is billions or more bytes and usually contains heterogenous data types. Feature engineering, the painstaking process of measuring various attributes of the file, is critically important to representing this data in a format that is useful and yields strong results. Feature-free attempts at analyzing PE files have not yet achieved parity with handcrafted feature vectors. (This might happen in the future, but it hasn't happened yet.) The discussion at Why do neural networks need feature selection / engineering? is also helpful here.
