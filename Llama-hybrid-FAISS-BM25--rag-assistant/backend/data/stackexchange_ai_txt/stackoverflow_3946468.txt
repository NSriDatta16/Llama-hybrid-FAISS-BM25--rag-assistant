[site]: stackoverflow
[post_id]: 3946468
[parent_id]: 3946433
[tags]: 
Option #2 is better as it's more event driven. However, there exists an Option #3. Client issues request to server. Server queues request and responds with the id. Client checks back every so often, passing the request id, to see if it's completed. This way you don't have to depend on the client being available when the request is completed. I'd probably mix options #2 and #3 and let the client choose if they want an event fired on their side or if they just want to check back later. UPDATE Rajah has asked about the maximum time between async request and response. For a WEB application, this is typically measured in seconds. Most servers have timeout values that are typically defaulted in the 30 second range. Personally, I think this is too long. Consider that an Async call requires the communications channel between the client and server to be open for the duration. How many of those channels can a single server handle? More to the point, how many channels will you have to maintain as requests are made? This can become quite outrageous even if you do control both ends. Whatever is hosting your services is going to determine the maximum amount of time to keep a request open. Again, every server I've seen measures this in seconds.
