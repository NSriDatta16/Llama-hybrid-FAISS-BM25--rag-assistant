[site]: crossvalidated
[post_id]: 620587
[parent_id]: 620433
[tags]: 
As your intent was to set up a binary regression that would be similar to a Cox survival model, you evidently treated the time variable Round as a factor instead of as a numeric predictor, even though the values of Round were numbers. As a Cox model makes no assumptions about the functional form of the baseline hazard, a corresponding binomial regression should treat Round as a factor rather than a numeric predictor so that there is no assumption about the functional form of its association with log-odds of mating. There would be nothing inherently wrong about treating Round as a numeric predictor. The danger, however, is that is easy to do inadvertently when the time-period values are numbers. Unless you specify otherwise, the software might then interpret the time variable as a numeric predictor linearly related to the log-odds of an event. If you do want to treat the time variable as numeric in a discrete-time model, a strict linear association with log-odds of an event would be unrealistic. A flexible fit, for example with a regression spline or other type of generalized additive model for the time variable, would be better. If I want to model a numeric time value as a factor, I find it safest to state that explicitly, as in: modFactor That provides separate coefficient estimates for log-odds differences of each of the Round values from the first. The associations of A , B and their interaction with the log-odds of mating are modeled as the same regardless of the value of Round , around the baseline log-odds for each Round . Note that you aren't restricted to the default "logit" link for the binomial regression; a "cloglog" link is more closely related to a Cox survival model. Once the model is built, in post-modeling analysis you can evaluate both the overall significance of the model and illustrate the differences among specific scenarios. The significant A:B interaction coefficient by itself already indicates that the association of each of A and B with outcome depends on the value of the other, at least in some combinations. With 3 levels of each of A and B , however, it doesn't tell you which particular combinations differ from each other. The additional displays produced by emmeans() provide ways to document those differences, in ways that you choose. The way that you chose for your first example displays the estimates of the log-odds of mating, averaged over all values of Round , comparing the 3 levels of F0_diet within each of the 3 values of F1_diet , and makes multiple-comparison corrections only within each value of F1_diet . Depending on the question you are asking that could be OK, but a combined evaluation of all 9 diet combinations at once might be expected by a reviewer. That's what you added in a later version of the question. In your model there is no interaction between Round and the other predictors. Thus the associations of A , B and their interaction with outcome in the log-odds scale of outcomes will be the same regardless of Round . If you are working in that scale, you thus could choose any particular Round as an example to illustrate the A:B interaction, rather than using the averages over all values of Round . The different baseline log-odds for the different values of Round , however, would mean different associations of A , B , and their interaction with outcomes in the probability scale depending on the Round .
