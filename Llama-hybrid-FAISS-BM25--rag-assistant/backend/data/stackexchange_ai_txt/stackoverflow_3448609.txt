[site]: stackoverflow
[post_id]: 3448609
[parent_id]: 3448199
[tags]: 
this depends on how complex the embedding of the UserControl into the environment is. If you think that its to much effort to build the view model logic for your user control again and again (which is also a very nice source for mistakes), you should infact encapsulate the logic in a single viewmodel for your control. If the user control will be an ListItem for example, i generally suggest you to build an own viewmodel for the control. The infrastructure will be than: A general viewmodel for your WPF screen, which holds instances of the viewmodels for your usercontrols. That DataContext of the screen will be the general viewmodel. The users controls's DataContext will be a Binding to the PropertyPath of the user control viewmodel in your general viewmodel. e.g: In WPF Screen: In the general viewmodel: public class ScreenViewModel : INotifyPropertyChanged { private ObservableCollection _itemList = new ObservableCollection (); public ObservableCollection ItemList { get { return _itemList; } set { _itemList = value; } } } This will automatically generate a your user control for each viewmodel in the ItemList of your general view model.
