[site]: stackoverflow
[post_id]: 3613334
[parent_id]: 3610975
[tags]: 
Sometimes, over-planning things can be a waste of time. Different games use different approaches, you'll want to take a look at the replica island's dev blog and code for various hints on how to organize your code using a GLSurfaceView. http://replicaisland.net/ I use your latter approach, but it's not as sloppy as you make it seem. You don't really need any logic code in your GLSurfaceView, just calls to your classes when certain events happen. (onDraw, onTouch, onKey, etc) Not sure what's sloppy about this, I maintain my logic in their proper classes. For example, in my onDrawFrame() I simply do MyAreaManager.draw(gl) The MyAreaManager class would maintain it's own logic and know what to draw. As for the clock, you'll most likely want two threads. One for rendering (the GLSurfaceView thread) and one for game logic that runs at a certain logic frame rate. The logic frame, would simply change the state of the canvas objects and the draw frame would simply draw them as fast as possible. This way you render as fast as possible and still maintain a steady logic frame rate.
