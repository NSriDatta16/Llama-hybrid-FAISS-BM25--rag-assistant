[site]: stackoverflow
[post_id]: 4240305
[parent_id]: 4240283
[tags]: 
First you get hold of the relevant IsolatedStorageFile using IsolateStorageFile.GetUserStoreForApplication() and then create a file using IsolatedStorageFile.CreateFile . That returns a Stream which you can write to in the normal way: using (var storage = IsolateStorageFile.GetUserStoreForApplication()) using (var stream = storage.CreateFile("test.xml")) { doc.Save(stream); // Where doc is an XDocument } It's as simple as that. One key point is to avoid thinking of IsolatedStorageFile as a single file - think of it as being a whole drive for your application. It can contain files, directories etc. It may end up being a single file in the native file system, but your application doesn't need to know or care about that.
