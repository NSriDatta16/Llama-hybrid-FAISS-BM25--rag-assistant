[site]: stackoverflow
[post_id]: 2527407
[parent_id]: 2527153
[tags]: 
Among the classic 'Gang of Four' patterns, quite a few are language-specific. Others, like Visitor, are really useful only in an object-oriented setting. Functional language have fold (catamorphisms) instead of Visitor, and anybody trying to use Visitor in a functional language would be viewed as a dangerous lunatic. Finally, there are patterns that could be applied in any language, like Factory. One of the reasons I'm not a big fan of the patterns movement as practiced by Gamma et al is that the view of pattern lacks intellectual coherence. "Anything useful" is a nice claim, but doesn't, as you observe, give much guidance as to which patterns might still be useful when language or paradigm changes. For a illustration of the risks inherent in classifying patterns, check out one of my favorite collections: Kent Beck's Smalltalk Best Practice Patterns . Despite the work "Smalltalk" in the title, many programmers have found these patterns applicable to languages like Java and Python as well.
