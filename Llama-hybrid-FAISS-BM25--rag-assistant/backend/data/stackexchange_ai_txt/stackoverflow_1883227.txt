[site]: stackoverflow
[post_id]: 1883227
[parent_id]: 1882637
[tags]: 
Refactor the application so that you do not have to create a new instance of the AuditLogger class each time. Use the singleton pattern directly, or a dependency-injection framework to use the same instance throughout the application. From there, the implementation is much easier: surround the write operations with lock statements, or use the TextWriter.Synchronized as has been mentioned in Robert's answer. This post may be relevant: Dependency injection and logging interfaces
