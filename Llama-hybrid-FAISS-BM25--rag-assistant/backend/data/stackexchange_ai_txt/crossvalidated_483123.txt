[site]: crossvalidated
[post_id]: 483123
[parent_id]: 
[tags]: 
Providing latitude and longitude to a house price model

I'm new to machine learning, and I'm trying to get a sense of how you optimize data for a model. I'm following this official Kaggle tutorial , which teaches the basics of machine learning through house price prediction. They use a decision tree, but I found it odd which features they feed into the model to predict the price of a house: house_price_features = ['Rooms', 'Bathroom', 'Landsize', 'Latitude', 'Longitude'] Rooms, bathrooms, and landsize all make sense to me - but latitude and longitude? Obviously there is a correlation between location and price, but it's not going to follow a nice curve. Sometimes, going a block up will increase house prices twofold; sometimes, it'll have no effect at all. Intuitively, I feel like all a model can do with those features in predicting price is overfit. So, my question is twofold: Were they right in giving this model latitude and longitude to predict price, or is this extraneous information that can only hurt the model? Why? If the answer to the above is "no", is there any transformation of the latitude and longitude data (i.e. into neighborhood IDs) that would make the data more helpful?
