[site]: datascience
[post_id]: 55366
[parent_id]: 51136
[tags]: 
The convLSTM layer parameters require an input shape of the form : (batch_size, time, channels, image_height, image_width) question 1 : in keras, the convLSTM layer does not require a timestep argument. So I assume it infers the number of timesteps from the input_shape. Is my understanding correct? The ConvLSTM layer in Keras does take a time argument. You've just stated the input shape in the line above which clearly has time as its second argument, so I'm a bit confused about your question here. The ConvLSTM layer in Keras takes in a full sequence, performs the unrolling internally, and returns the final timestep's output (or an output for every timestep if return_sequences=True ). In reply to your second question: you have drawn a standard many-to-many RNN architecture, this is not what you want here. What you want is an encoder-decoder RNN architecture which will allow you to predict your $j$ timesteps ahead, where $j$ does not have to be equal to the input timesteps.
