[site]: crossvalidated
[post_id]: 313729
[parent_id]: 
[tags]: 
Prediction Interval for Regression Models with Weights

Courtesy Prediction Interval for Neural Net With Hessian :: nnet in R I would like to understand how to manually derive a point-wise prediction confidence interval applicable to neural models. Following http://cdn.intechopen.com/pdfs-wm/14915.pdf Confidence Intervals for Neural Networks and Applications to Modeling Engineering Materials, my first aim was to construct a CI based on the Jacobian matrix related to model weights, using a simple lm model in R. By doing so I hope to get a comparable figure and then generalize it to non-linear (multilayer) set. Below is my try. I am feeling really dumb in the very core of these calculations, and what I got did not fit with what I expected. I am mostly concerned with my possible misunderstanding of: Question 1: is the Jacobian here relates to partial derivatives of the neural network output a rather then to a loss function of a ? Question 2: similarly, when it reads the gradient of function a does it relate to neural network output rather then it's loss? rm(list=ls()) # load libraries ---------------------------------------------------------- list.of.packages It's a clear mismatch in what I have done with what the lm SE is: > StErr [1] 4.962455 > StErr_lm [1] 0.228429
