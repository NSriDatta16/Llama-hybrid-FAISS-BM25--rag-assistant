[site]: stackoverflow
[post_id]: 4957005
[parent_id]: 4956641
[tags]: 
Looks like you can't just pass touches in and have it respond to them :( You would have to use the [UIScrollView setContentOffset:animated:] method to move the scrollview yourself. A better way of intercepting the touches might be to put a view in front of the scrollview - grab any touches you want to listen to and then pass it to the next responder in the chain. You would make a subclass of UIView that overrode the touch handling methods, something like : - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { if (scrollViewShouldGetThisTouch) [self.nextResponder touchesBegan:touches withEvent:event]; } and just make this view have the same frame as your scrollview but be infront of it in the ui (transparent of course!). OR You could subclass UIScrollView - though this might result in odd errors if Apple ever change the implementation of a UIScrollView. I'd choose the other option!
