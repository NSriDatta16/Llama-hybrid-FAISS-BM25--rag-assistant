[site]: stackoverflow
[post_id]: 823273
[parent_id]: 793012
[tags]: 
General system entities were designed to be used as a text include / replacement mechanism. I've seen deeply nested structures with boilerplate of vast complexity. So let's dig a little deeper into your problem statement. In your example, why do you think you can't have an !ENTITY declaration for CommonEnums in the document type declaration such that the entity referency &CommonEnums would be recognized when the containing entity is parsed? What is special about these system entities that you are having trouble declaring? If your goal is to avoid having to declare them during the parse of the document prologue, then, no, you can't get around that. You can't declare an !ENTITY outside of a !DOCTYPE header This is true in a sense, but there's a useful loophole. You can declare general entities in an external DTD, in which case their declaration is not physically visible in the document prologue. I don't know if this is helpful in your situation, but declaring your external general system entities in a DTD would allow you to "hide" them from document instances and fragments that refer to them. If as I suspect your goals are reusability, modularity, and terseness, then I think you can do what you want by means of an external DTD. But to leverage this feature you may have to take on all the work of creating a DTD, more or less, to whatever extent is required to satisfy your XML processor, which will probably insist on validating your document structures against the DTD.
