[site]: stackoverflow
[post_id]: 3913540
[parent_id]: 3913074
[tags]: 
So is it something like this you want? This will repeatedly call myfunc() for the next 20 seconds. So could do 1 call (if myfunc takes at least 20 seconds to run) or hundreds of calls (of myfunc() takes a few milliseconds to complete): #include void myfunc() { /* do something */ } int main() { time_t start = time(NULL); time_t now = time(NULL); while ((now - start) It's probably worth asking what you're ultimately trying to achieve. If this is for profiling (e.g., what's the average amount of time function f takes to execute), then you might want to look at other solutions - e.g., using the built-in profiling that gcc gives you (when building code with the "-pg" option), and analyzing with gprof.
