[site]: stackoverflow
[post_id]: 3402034
[parent_id]: 2257921
[tags]: 
I always think the rules and philosophy of TDD are best summed up in this article by Robert C. Martin: The Three Rules of TDD In it, he summarises TDD with the following three rules: You are not allowed to write any production code unless it is to make a failing unit test pass. You are not allowed to write any more of a unit test than is sufficient to fail; and compilation failures are failures. You are not allowed to write any more production code than is sufficient to pass the one failing unit test. There is an implied fourth rule: You should refactor your code while the tests are passing. While there are many more detailed examples, articles and books, I think these rules sum up TDD nicely.
