[site]: stackoverflow
[post_id]: 3542661
[parent_id]: 3542613
[tags]: 
I'm not entirely sure what you're aiming for in a use case for this - I'm guessing you have something happening in a loop that's slowing down your UIScrollView scrolling and making it stutter a bit more than you'd like. I'm going to guess that the answer is make the background task that you're working with asynchronous so that it's not taking up so much CPU resource in general. If you really want to bind into reacting if the scroll view is moving, then you want the UIScrollView Delegate methods to be your primary trigger points. The ones that stand out as potential uses: – scrollViewWillBeginDragging: – scrollViewDidEndDragging:willDecelerate: – scrollViewDidEndScrollingAnimation: ... Don't invoke the looping in viewDidLoad or you'll block the main UI interaction thread. Instead trigger off a background process using classic threading or better yet NSOperationQueue to do whatever looping/background thing you want done. If you have that queue reference in the view controller, you could also hook into that to pause or cancel those operations when a person decides to scroll using the delegate methods above.
