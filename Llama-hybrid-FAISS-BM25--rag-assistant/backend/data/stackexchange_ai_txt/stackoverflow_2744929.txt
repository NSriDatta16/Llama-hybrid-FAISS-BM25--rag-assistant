[site]: stackoverflow
[post_id]: 2744929
[parent_id]: 2744806
[tags]: 
So many parameters to a method is definitely a code smell. I would say a Chart object is waiting to be born. Here is a basic outline: private RenderImage getChartImage(Chart chart) { //etc. } private static class Chart { private GanttChartModel model; private String title = ""; //etc, initializing each field with its default value. private static class Builder { private Chart chart; public Builder(GanttChartModel model) { chart = new Chart(); chart.model = model; } public setTitle(String title) { if (title != null) { chart.title = title; } } } } Other options include using primitives on the methods instead of objects to indicate that null isn't allowed, although that doesn't necessarily make it better. Another option is a bunch of overloaded methods, but given the types of parameters here, that doesn't really work because I get the idea that you want to make any of the parameters optional rather than having the first ones required and subsequent ones optional.
