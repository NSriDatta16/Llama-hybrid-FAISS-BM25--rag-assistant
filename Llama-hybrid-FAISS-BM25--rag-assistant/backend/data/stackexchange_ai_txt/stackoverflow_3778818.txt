[site]: stackoverflow
[post_id]: 3778818
[parent_id]: 
[tags]: 
How to delete a template?

I'm having trouble with deleting my template. My template and destructor: template class Consortium { private : map *> m_consortiumMap; Heap m_consortiumHeap; public : ~Consortium(); void Insert(const S key, T toAdd); void Update(const S key); void Remove(const S key); const T Top(); }; template Consortium ::~Consortium() { m_consortiumMap.clear(); delete &m_consortiumHeap.; } My heap and destructor: template class Heap { private : vector *> m_heapVector; public : ~Heap(); int parent(int i) const {return i / 2;} int left(int i) const {return 2 * i;} int right(int i) const {return 2 * i + 1;} void heapify(int index); Node * extractMin (); void heapDecreaseKey (int index, Node * key); void MinHeapInsert (Node * key); Node * ExtractNode(int index); Node * top ()const {return m_heapVector[0];} }; template Heap ::~Heap() { for (int i = 0 ; i and this is the object that holds the template, I'm having problems with that also: class Garage { private : Consortium m_consortium; public : ~Garage() {delete &m_consortium;} }; what's wrong here?
