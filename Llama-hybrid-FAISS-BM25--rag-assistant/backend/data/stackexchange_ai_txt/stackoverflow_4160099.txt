[site]: stackoverflow
[post_id]: 4160099
[parent_id]: 4159582
[tags]: 
Just for reference, here's how you'd do the same sort of thing without numpy (less elegant, but more flexible): files = zip(open("A.dat"), open("B.dat"), open("C.dat")) outfile = open("D.dat","w") for rowgrp in files: # e.g.("1 2 3\n", "0 1 3\n", "2 5 6\n") intsbyfile = [[int(a) for a in row.strip().split()] for row in rowgrp] # [[1,2,3], [0,1,3], [2,5,6]] intgrps = zip(*intsbyfile) # [(1,0,2), (2,1,5), (3,3,6)] # use float() to ensure we get true division in Python 2. averages = [float(sum(intgrp))/len(intgrp) for intgrp in intgrps] outfile.write(" ".join(str(a) for a in averages) + "\n") In Python 3, zip will only read the files as they are needed. In Python 2, if they're too big to load into memory, use itertools.izip instead.
