[site]: stackoverflow
[post_id]: 4491665
[parent_id]: 4491438
[tags]: 
I too would suggest starting at wikipedia . From there, follow the links at the bottom. To provide a short answer: An ORM is used to abstract from the data storage, usually a database. This can serve multiple purposes, among those: Application programmers can add and maintain functionality of the software without in-depth knowledge of the database (you can write your code in Java, not in SQL). It takes away the pitfalls of having to assemble your SQL statements as strings and therefore eliminates a huge source of errors. Database optimization is independent from business logic. This ensures better maintainability. The optimization can either be done by the ORM ( via configuration files) or directly in the database (by manually adding index tables and/or query caches). Both will not take place in the actual program code. Data providers can more easily be exchanged, because the ORM usually offers drivers for multiple databases, so that the same functional logic will work with different products and vendors.
