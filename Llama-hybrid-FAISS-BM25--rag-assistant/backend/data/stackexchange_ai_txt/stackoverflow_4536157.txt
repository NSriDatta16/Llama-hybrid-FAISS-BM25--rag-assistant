[site]: stackoverflow
[post_id]: 4536157
[parent_id]: 4535994
[tags]: 
Two words : race conditions . If you set a variable in the global scope while its intended usage is local to a function instance you run the risk of having two (or more) unique instances accessing and manipulating this global variable and having all instances behave unpredictably. There are plenty of other reasons why you should be extremely careful about storing local state in the global space. One would be re-using the state of the last instance that set this variable (if you don't have multiple instances active simultaneously). There are also possible conflicts with other pieces of code that rely on a global variable with the same name. Aesthetically you also turn the global namespace into a mess (lots of random variables there without any direct information as to why they are there in the first place). Putting variables into the global space is error-prone and makes a mess of the runtime view. The scoping possibilities of JS also make it unnecessary, which is why nobody does it (except for things that really belong there). As an additional comment, don't mention your age or brag about your coding prowess in future questions. It's not relevant to the question.
