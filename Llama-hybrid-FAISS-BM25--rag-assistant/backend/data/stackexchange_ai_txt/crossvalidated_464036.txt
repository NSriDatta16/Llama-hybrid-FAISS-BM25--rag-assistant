[site]: crossvalidated
[post_id]: 464036
[parent_id]: 
[tags]: 
Time complexity of bagging and random forest

Most sources and books state that time complexity of a single decision tree for n points and d dimensions (features) is $O(d * n^2 * log(n))$ , with clever caching and one time sorting it’s $O(d * n * log(n))$ . But at the same time same books either omit the complexity of bagging and random forests based on those threes, or do some handwaiving and say that it’s just number of trees used times complexity of a single tree. What about bootstrapping complexity? What about random subspace creation? From my understanding bootstrapping is $O(n)$ (for typical n-sized sample) and random subspace is $O(d’)$ (where $d’ ). Shouldn’t this raise complexity by quite a bit, like $O(t * d * n^2 * log(n))$ for $t$ bagged trees and $O(t * d^2 * n^2 * log(n))$ for random forests (taking $d’ = d$ for big O notation)?
