[site]: stackoverflow
[post_id]: 5088439
[parent_id]: 4996823
[tags]: 
So as nobody replied, I investigated a bit more and it seems like my problem might have to do with VirtualBox. Using different server OSes (Debian Squeeze, Ubuntu Server), I had similar problems. For example, with simple static file serving, I got this result from the Apache web server (on Debian): > ab -c50 -n1000 http://ip.of.my.vm/some/static/file.css Requests per second: 91.95 [#/sec] (mean) This led to the conclusion that (I don't have a conclusion, but) I think the Java reloading might not be the problem here, rather the virtualization. I will try it on a real host and leave this question unanswered till then. FOLLOWUP Now I successfully tested a bare-bones Django site (really just the welcome page) using Jython + AJP over TCP/mod_proxy_ajp on Apache (again with patched flup package). This time on a real host (i7 920, 6 GB RAM). The result proved that my above assumption was correct and that I really should never benchmark on a virtual host again . Here's the result for the welcome page: Document Path: /jython-test/ Document Length: 2059 bytes Concurrency Level: 40 Time taken for tests: 24.688 seconds Complete requests: 20000 Failed requests: 0 Write errors: 0 Keep-Alive requests: 0 Total transferred: 43640000 bytes HTML transferred: 41180000 bytes Requests per second: 810.11 [#/sec] (mean) Time per request: 49.376 [ms] (mean) Time per request: 1.234 [ms] (mean, across all concurrent requests) Transfer rate: 1726.23 [Kbytes/sec] received Connection Times (ms) min mean[+/-sd] median max Connect: 0 1 1.5 0 20 Processing: 2 49 16.5 44 255 Waiting: 0 48 16.5 44 255 Total: 2 49 16.5 45 256 Percentage of the requests served within a certain time (ms) 50% 45 66% 48 75% 51 80% 53 90% 69 95% 80 98% 90 99% 97 100% 256 (longest request) # Very promising, I would say. The only downside is that the average request time is > 40 ms whereas the development server has a mean of
