[site]: stackoverflow
[post_id]: 925499
[parent_id]: 925267
[tags]: 
We have been using MS test tools since VS2005, and I did look at NUnit as a replacement at one point because of some problems we had with the MS tools. Here are some of my findings: MS test tools pros Easy to convince management to use MS supplied tools (of course this is not a technical issue, but it is probably relevant in a lot of companies) Test libraries, test runner and code coverage are all nicely integrated with VS Central reporting and other features in a Team Foundation setup More or less the same feature set as with NUnit (I get the feeling that NUnit may be a tad better than MS test tools, but the differences are not huge) MS test tools cons VS2005 - really slow, VS2008 a lot better, but still sluggish for large solutions Test host is STA which makes it harder to test multi-threaded code VS support is a bit clunky because they support test-first and test-after in the same interface (so there are two "new unit test" commands -> more support work) In the end switching to NUnit was not attractive to us for a couple of reasons: Code changes, not a lot but with a large number of tests it still amounts to a bit of work Increased cost and complexity per developer seat: if you swap MS Test with NUnit, you also loose the test runner and code coverage. Both can be obtained through other tools such as R#, TestDriven.NET, NCover etc, but it all adds to both the cost and the complexity.
