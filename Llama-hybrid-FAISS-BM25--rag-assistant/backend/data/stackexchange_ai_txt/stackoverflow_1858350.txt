[site]: stackoverflow
[post_id]: 1858350
[parent_id]: 1858237
[tags]: 
If I remember correctly, there are no more than 4 letters for any digit. A crude way of generating is to count up from 0 to 4^(number of digits)-1 in base 4, that would give you numbers like 02031, let the 0 represent the first letter for the relevant digit, 1 for the second and so on. All numbers containing a 3 in a position having a digit that only has 3 letters are discarded. a 10 digit number will yield a list of over a million base 4 numbers. You have been warned. edit: A more elegant approach is to look at how many 4 (let's call it x) character digits and 3 (let's call this one y) character digits you have and count from 0 to 4^x*3^y-1. each number can be translated into a sequence of numbers like above by using the / and % operators. example: if 8 and 9 are the 4 character digits, and you want a list of string representations of the number 258, you count from 0 to 3^2*4-1 = 35. Taking the number 21, for example: Working your way backwards, the rightmost character (from the 8), you get the character by taking 21 % 4 = 1, 1 representing 't' Dividing away the information from this character you do 21 / 4 = 5. Next character: 5 % 3 = 2, 2 representing 'l' 5 / 3 = 1. Final character: 1 % 3 = 1 representing 'b' This would get you the string "blt". There are some book-keeping to this algorithm, but you don't get the overhead counting and discarding from the example above, and you don't get the memory overhead that the recursive algorithms have.
