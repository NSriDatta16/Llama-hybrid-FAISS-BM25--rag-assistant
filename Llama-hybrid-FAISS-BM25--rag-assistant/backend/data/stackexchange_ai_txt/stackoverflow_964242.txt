[site]: stackoverflow
[post_id]: 964242
[parent_id]: 961877
[tags]: 
Hi am in full accord with Andy and Thomas. They both have explained the concept elegantly. I am only showing the steps of doing the same only with dataset . The MVVM (ModelView ViewModel) I am not discussing here. The Xaml looks like this Name Place Add Record In the .CS file create a dataset private DataSet MyDataSet() { DataTable dtInformation1 = new DataTable(); dtInformation1.Columns.Add("Name"); dtInformation1.Columns.Add("Place"); dtInformation1.Rows.Add(txtName.Text, txtPlace.Text); DataTable dtInformation2 = new DataTable(); dtInformation2.Columns.Add("Name"); dtInformation2.Columns.Add("Place"); dtInformation2.Rows.Add(txtName.Text + "2", txtPlace.Text + "2"); DataSet Ds = new DataSet(); Ds.Tables.Add(dtInformation1); Ds.Tables.Add(dtInformation2); return Ds; } Next in the Button's click event write the following private void btnAddRecord_Click(object sender, RoutedEventArgs e) { **listView.ItemsSource = MyDataSet().Tables[0].DefaultView; - OR - listView.ItemsSource = MyDataSet().Tables[1].DefaultView;** } N.B.~ You cannot assign the source of the ListView a dataset. Why ? You may ask? A dataset, in simple terms , is a collection of data tables. Suppose you have 5 different datatables. And say none of their column names as well as column numbers are same. Now you have assigned all those to your dataset. How will the controls source know that which source it has to bind? Inorder to overcome such a situation, either make a custom datatable that will have all the columns of those discreet datatables and assign the values to this custom one and then bind to the source. Or you need to explicitly specify the datatable in the datasource But I always prefer to use MVVM pattern for this kind of operations.
