[site]: stackoverflow
[post_id]: 3624055
[parent_id]: 
[tags]: 
C++ Object & Javascript Object life cycle mis-synchronization

I got a question regarding C++ Object & Javascript Object life cycle mis-synchronization and hope here your gurus could help me out. Specifically, I am embedding SpiderMonkey in my C++ program. I am not sure if my approach is right or not. What I am doing is like (1) C++ program loads a Javascript file and call an entry function. (2) In the entry function, some C++ functions are called to initialize the program. During these calls, some C++ objects will be created. (3) Based on user interaction, corresponding script function will be called as event handler. This approach works, but with one problem (there could be unidentified more :) That is, In my JS event handler function, I need to fetch a C++ object to the Javascript context and call it member function. For this, in my C++ fetching function, I check if its corresponding JS peer object has been created or not. If not, I use JS_NewObject to create one and return it. Then the JS function could call native function on it. The problem is that in some cases, the result of such native function call will lead the death of the C++ object. However, I can not find a way to notify the JS context to delete its JS peer object too. I failed to find a JSAPI function to do so. In my current program, all the JS objects created using JS_NewObject are destroyed when finally the JS runtime is destroyed. I guess this has something do with SipderMonkey's "garbage collection". But I have not found a good guide yet. Many thanks for any suggestionto
