[site]: stackoverflow
[post_id]: 1214944
[parent_id]: 
[tags]: 
Why not pass your IoC container around?

On this AutoFac "Best Practices" page ( http://code.google.com/p/autofac/wiki/BestPractices ), they say: Don't Pass the Container Around Giving components access to the container, or storing it in a public static property, or making functions like Resolve() available on a global 'IoC' class defeats the purpose of using dependency injection. Such designs have more in common with the Service Locator pattern. If components have a dependency on the container, look at how they're using the container to retrieve services, and add those services to the component's (dependency injected) constructor arguments instead. So what would be a better way to have one component "dynamically" instantiate another? Their second paragraph doesn't cover the case where the component that "may" need to be created will depend on the state of the system. Or when component A needs to create X number of component B.
