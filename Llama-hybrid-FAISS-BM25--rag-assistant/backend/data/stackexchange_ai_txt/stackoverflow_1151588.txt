[site]: stackoverflow
[post_id]: 1151588
[parent_id]: 1151516
[tags]: 
Each NSEvent represents just that: One event. When a key goes down, that's one event. When another key goes down, that's another event. The characters string is just that: a text string. It's what you would insert into your text storage if you were doing that manually. It does not tell you which character keys were pressed; that's the job of the key codes. For modifier keys, it's the job of the modifierFlags bit-mask. If you're writing a game, you may find either DDHIDLib or the new HID API in Leopard more useful. Also, remember that the user may have multiple keyboards, so it is possible for the user(s) to press two space bars, for example. Finally, please test your program with Dvorak. Many applications that try to handle raw keyboard events get it wrong and end up confusing us or even not working at all for us. Flash has a long-standing problem of ignoring keys that are punctuation in QWERTY even when they're letter keys in the active layout (true of several keys in Dvorak). And we're not the only ones who don't use QWERTY; many non-English keyboards deviate from the QWERTY layout.
