[site]: stackoverflow
[post_id]: 3517201
[parent_id]: 3516283
[tags]: 
If these files are for configuration, they belong in etc . Think of the etc folder the same way you would a unix/linux/bsd system's etc folder. It's where you put configuration information. Convention is that you should use an XML file to hold your config data, and then load it with Mage::getConfig()->loadModulesConfiguration('your-xml-name-here.xml') When you use the loadModulesConfiguration method to load your configuration values, Magento combines XML files for ALL modules in the system into one big tree. This allows other modules you'll write (or others would write) to share the configuration information. You don't need to do this, but etc is definitely the defined place for any configuration files you want to include with your module. Also, whatever method you're choosing, I'd pick a unique file name (packagename_modulename.xml, packagename_modulename.inc, etc.) to ensure against the slim possibility that someone at Magento might pick your name to use in a future version. Along the same lines as this question: is it acceptable to have a folder in the root of the namespace for the modules for includes that will be shared amongst the modules? No, that would not be acceptable. If you want a shared configuration, use the method I mentioned above. If modules need to share other information with each other, they should either do so directly (one module instantiates another module's model) or you should define a central "broker" module that handles all inter-module communication. If you're interested more in the topic, I'd recommend the first few chapters of Meyer's Object-oriented Software Construction . If you can get past the whole "how to implement low level data structures" aspected of old programming books, its a great introduction to what CS people when they say "module". (it's also worth mentioning that if there are simple configuration values, learning how to use the Magento System Config Admin section is worth it.)
