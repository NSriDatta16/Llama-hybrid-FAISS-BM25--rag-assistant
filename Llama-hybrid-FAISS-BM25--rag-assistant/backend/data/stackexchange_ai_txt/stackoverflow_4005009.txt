[site]: stackoverflow
[post_id]: 4005009
[parent_id]: 
[tags]: 
Pylons app deployment with privately developed dependencies

In my organization, we have a couple of internally developed Python packages. For sake of example, let's call them Foo and Bar . Both are developed in separate Git repositories. Foo is a Pylons application that uses certain library functions from Bar . Neither is publicly distributed. When we deploy Foo , we typically export the latest revision from source control and run setup.py develop within our virtualenv. This works okay. The problem is that we'll need some way of distributing Bar for every environment where we deploy Foo . We obviously can't put 'Bar' in setup.py's install_requires (as easy_install won't find be able to find it on any website). I can't find any way of automatically obtaining/installing privately developed dependencies. Is there an easier to way to manage this? I feel like I'm missing the point of Python packaging and distribution.
