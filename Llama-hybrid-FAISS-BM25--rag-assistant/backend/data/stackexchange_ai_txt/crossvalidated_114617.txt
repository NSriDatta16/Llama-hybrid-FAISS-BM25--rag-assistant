[site]: crossvalidated
[post_id]: 114617
[parent_id]: 114211
[tags]: 
To estimate the time elapsed at, say, P=70% done, given that you know (a) the time elapsed for 1,...,50% and (b) some previous curves, you can do the following: Train a regression model based on the previous curves. The target value (y) should be the time elapsed at 70% (which you know for the previous curves) and the predictors (x) should be the times elapsed for 1,...,50% (which you know for the previous curves and also for the new, in-progress curve). Use this model to predict the time elapsed at 70% for your in-progress task. If the regression method also gives an estimate of the uncertainty, you can calculate confidence bounds. Repeat this procedure to predict the elapsed time for P=51,...,100% to get a forecast curve (if the regression method allows multiple outputs, you can use one model for all values of P). I've used your problem as an excuse to waste this rainy Sunday afternoon to play around with Gaussian Processes, which I've heard are good at uncertainty estimation (I can confirm that now, but specifying the model seems to be kind of an art). The plots show the training curves in gray and the curve to estimate in black. The already completed part is marked with an 'x', the red area gives a confidence estimate for the remaining part of the task. I've taken the liberty to remove the outlier task (green in your plots) from the dataset - that task would pull up all estimates at about 50%. The plots show two things: As we get further away from the known datapoints, the uncertainty increases; and the more datapoints we have, the better we can predict the future. My R is a bit rusty (unfortunately) and I've found a convenient toolbox for Matlab, so that's what I used for the analysis. Here's my code: http://pastebin.com/RYNZqh3k . Note that I'm definitely no expert for Gaussian Processes (this is my first real exposure to them), so this probably is not the optimal code and certainly not the best model configuration. You can also try other regression methods that give uncertainty estimates (also indirectly, e.g. via bootstrap), but keep in mind that your predictors will be very correlated (if you were fast for the first 10% of the task, you likely also were fast for the first 8% and 9% of the task).
