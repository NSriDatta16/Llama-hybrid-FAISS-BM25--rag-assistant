[site]: datascience
[post_id]: 116059
[parent_id]: 
[tags]: 
Advice on How to Train Neural Networks

I am relatively new to neural networks and AI, and I have a question regarding the training method in such networks. In particular spiking neural networks (SNNs) are the type we are working with. I am confused with the best way to train spiking neural networks when high accuracy is the most desired performance metric I am working towards. For context, we are doing supervised learning with a SNN as an anomaly detector to classify various input data samples, inputted as spike trains, into 2 classes: Healthy and Unhealthy . Our training data has one healthy input sample that we want the SNN to recognise as healthy, and we make up random unhealthy input samples that we want the SNN to recognise as unhealthy. This leads to my question: How should you train a SNN? Take an example where you have a training dataset with 100 samples and say 50% are healthy and the other 50% are unhealthy, how should this network be trained in terms of the ratio of healthy and unhealthy training samples used to train? Do you need more than epoch, or iterations? Should you leave some training samples unshown to the SNN for testing? And as I only have one healthy sample, will this work?
