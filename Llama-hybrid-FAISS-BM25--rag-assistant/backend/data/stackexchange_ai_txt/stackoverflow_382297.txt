[site]: stackoverflow
[post_id]: 382297
[parent_id]: 381969
[tags]: 
There are a few options here. While Java has more options for integration, particularly for sessions, C#/.Net will probably rely upon other products to communicate. If this were background processing (eg processing of completed orders after checkout), it would probably be simpler. You want to mix web apps however. How and what you want to mix them could (and probably does) make this rather difficult--or at least uncharted waters. PHP runs under Apache and .Net web apps under IIS after all. You're going to have to go through another technology layer. Others have mentioned databases but that's not a viable or performant solution for session storage on live web apps. Your best bet is probably memcached , for which there is at least one C# client library. Here's an example of cross-platform serialization using memcached . beanstalkd may also be worth considering if you have background work processing. It's a distributed work queue process that has several client libraries (eg Ruby, PHP, Perl, Erlang). I couldn't see a C# version but that could probably be done. Refer to the protocol docuentation . I mention this because you could have PHP write work requests to beanstalkd rather than C# polling or interrogating the PHP session.
