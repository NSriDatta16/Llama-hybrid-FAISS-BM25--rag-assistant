[site]: stackoverflow
[post_id]: 3770375
[parent_id]: 3770348
[tags]: 
See docs.python.org : When youâ€™re done with a file, call f.close() to close it and free up any system resources taken up by the open file. After calling f.close(), attempts to use the file object will automatically fail. Hence use close() elegantly with try/finally : f = open('file.txt', 'r') try: # do stuff with f finally: f.close() This ensures that even if # do stuff with f raises an exception, f will still be closed properly. Note that open should appear outside of the try . If open itself raises an exception, the file wasn't opened and does not need to be closed. Also, if open raises an exception its result is not assigned to f and it is an error to call f.close() .
