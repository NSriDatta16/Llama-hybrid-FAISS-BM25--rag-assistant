[site]: stackoverflow
[post_id]: 3776598
[parent_id]: 3776521
[tags]: 
How much extra complexity would it take to make these tests interesting? Here there are three things that could be wrong: the choice of rosterDAO from all the other DAOs you may have, and the two parameters you are passing: the from and the to, which could for example be transposed without any compilation error. As it happens you seem to have no Exception handling to do (is that right by the way?), so I do agree that this is a pretty minimal case. However, if there was a smidge of extra logic here, for example any conditionality in the selection of the DAO or which params to pass then I would certainly want some tests. So looking at your project in the large, is this method typical? Suppose you had 20 methods, and 19 of them did have conditionality and so were worth testing. In that case, I would just leave things tidy and also test this method - it's hardly any work to do it. If this is a dominant pattern then I agree with Peter Torak, it's probably not worth the effort. But I would pay more attention to integration testing to cover this area.
