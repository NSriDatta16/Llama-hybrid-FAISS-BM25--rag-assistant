[site]: crossvalidated
[post_id]: 185070
[parent_id]: 101274
[tags]: 
I made a shiny app to help interpret normal QQ plot. Try this link. In this app, you can adjust the skewness, tailedness (kurtosis) and modality of data and you can see how the histogram and QQ plot change. Conversely, you can use it in a way that given the pattern of QQ plot, then check how the skewness etc should be. For further details, see the documentation therein. I realized that I don't have enough free space to provide this app online. As request, I will provide all three code chunks: sample.R , server.R and ui.R here. Those who are interested in running this app may just load these files into Rstudio then run it on your own PC. The sample.R file: # Compute the positive part of a real number x, # which is $\max(x, 0)$ . positive_part 0, x, 0)} # This function generates n data points from some # unimodal population. # Input: ---------------------------------------------------- # n: sample size; # mu: the mode of the population, default value is 0. # skewness: the parameter that reflects the skewness of the # distribution, note it is not # the exact skewness defined in statistics textbook, # the default value is 0. # tailedness: the parameter that reflects the tailedness # of the distribution, note it is # not the exact kurtosis defined in textbook, # the default value is 0. # When all arguments take their default values, the data will # be generated from standard # normal distribution. random_sample 0 (means data are right-skewed), # then small values of x will be rejected # with higher probability. l reject_tailedness(x) * reject_skewness(x) x[accept] } result The server.R file: library(shiny) # Need 'ggplot2' package to get a better aesthetic effect. library(ggplot2) # The 'sample.R' source code is used to generate data to be # plotted, based on the input skewness, # tailedness and modality. For more information, see the source # code in 'sample.R' code. source("sample.R") shinyServer(function(input, output) { # We generate 10000 data points from the distribution which # reflects the specification of skewness, # tailedness and modality. n = 10000 # 'scale' is a parameter that controls the skewness and # tailedness. scale = 1000 # The `reactive` function is a trick to accelerate the app, # which enables us only generate the data # once to plot two plots. The generated sample was stored in # the `data` object to be called later. data $skewness, tailedness = scale * input$ kurtosis) data.frame(x = sample1)}) output$histogram Finally, the ui.R file: library(shiny) # Define UI for application that helps students interpret the # pattern of (normal) QQ plots. # By using this app, we can show students the different patterns # of QQ plots (and the histograms, # for completeness) for different type of data distributions. # For example, left skewed heavy tailed # data, etc. # This app can be (and is encouraged to be) used in a reversed # way, namely, show the QQ plot to the # students first, then tell them based on the pattern of the QQ # plot, the data is right skewed, bimodal, # heavy-tailed, etc. shinyUI(fluidPage( # Application title titlePanel("Interpreting Normal QQ Plots"), sidebarLayout( sidebarPanel( # The first slider can control the skewness of input data. # "-1" indicates the most left-skewed # case while "1" indicates the most right-skewed case. sliderInput("skewness", "Skewness", min = -1, max = 1, value = 0, step = 0.1, ticks = FALSE), # The second slider can control the skewness of input data. # "-1" indicates the most light tail # case while "1" indicates the most heavy tail case. sliderInput("kurtosis", "Tailedness", min = -1, max = 1, value = 0, step = 0.1, ticks = FALSE), # This selectbox allows user to choose the number of modes # of data, two options are provided: # "Unimodal" and "Bimodal". selectInput("modality", label = "Modality", choices = c("Unimodal" = "Unimodal", "Bimodal" = "Bimodal"), selected = "Unimodal"), br(), # The following helper information will be shown on the # user interface to give necessary # information to help users understand sliders. helpText(p("The skewness of data is controlled by moving the", strong("Skewness"), "slider,", "the left side means left skewed while the right side means right skewed."), p("The tailedness of data is controlled by moving the", strong("Tailedness"), "slider,", "the left side means light tailed while the right side means heavy tailed."), p("The modality of data is controlled by selecting the modality from", strong("Modality"), "select box.") ) ), # The main panel outputs two plots. One plot is the histogram # of data (with the non-parametric density # curve overlaid), to get a better visualization, we restricted # the range of x-axis to -6 to 6 so # that part of the data will not be shown when heavy-tailed # input is chosen. The other plot is the # QQ plot of data, as convention, the x-axis is the theoretical # quantiles for standard normal distri- # bution and the y-axis is the sample quantiles of data. mainPanel( plotOutput("histogram"), plotOutput("qqplot") ) ) ) )
