[site]: crossvalidated
[post_id]: 325158
[parent_id]: 314510
[tags]: 
For your 10k examples, this model is way too complex in my opinion. I don't know your task specifically, but think about whether you really need that many "layers of abstraction" to determine if the text belongs in one class or another. As a general guideline, I would start with a very simple model (i.e. throw out all those Conv-Pool-Dropout-Combos except for the very first). Train that. If the training error is low, it means the model is not complex enough to learn the problem, so you should increase its size (either with more layers or more neurons/filters per layer. Or possibly you have to change the types of layers/their configuration). If the test error is much lower than your training error, that means your model is learning the training data by heart. Then you should add more regularization and/or make the model smaller (removing layers or decreasing layer size). You can also try pure RNNs (I would recommend GRUs), but note that their training takes much more time.
