[site]: stackoverflow
[post_id]: 4294226
[parent_id]: 4294214
[tags]: 
EDIT -- this answer is for a previous version of the question, that does not include anything about clients and multiple servers. This answer is about sharing data between instances of classes. There are many ways to do something like this. If I understood your approach outlined in the first paragraph, you dont want class1 and class2 to extend class3. You want them to both have a reference to the same instance of class3. If they share a reference to the same object, then changing values on that object will be reflected in both classes. If they extend class3, like you said you tried, then both class1 and class2 will have the properties of class3, but they wont be sharing any data. If class 3 had a property Object value; then instances of class1 and class2 would have separate references to separate instances of 'value'. You need to undertand the relationship between a class, and object instance, and what extending a class means. Note that this is not really a good way to share information between objects in a real program. You can run into all sorts of concurrency issues. The same is true for a solution that used a global mechanism implemented using static fields. To do this with static fields do something like: class SharedData { public static Object shared1; } and then in your class1 and class2 instances you can access SharedData.shared1 for either set or get. But I would not do anything like this in any sort of professional context.
