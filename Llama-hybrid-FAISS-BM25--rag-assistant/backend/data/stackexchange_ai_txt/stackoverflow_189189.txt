[site]: stackoverflow
[post_id]: 189189
[parent_id]: 188647
[tags]: 
My experience in the Microsoft Ecosystem: I've used Linq2Sql on a couple of projects and I have run into the 'Layering' problem that azamsharp mentions. Not that it would help much if you're dead set on sending POCO back to your Logic or UI layer, but an implementation of the Repository pattern helps a little with that nasty layering and separation of concerns issue. A good basic Repository Impl For anything that uses complex semantics like voting or statistics (basically any domain object that needs to be displayed or operated on differently than it's represented in the database) the ADO.Net Entity Framework gives you some advantages. It can simplify your business logic / data access layer by subsuming complicated data retrieval. ADO.Net Entity Framework Overview Hope that helps!
