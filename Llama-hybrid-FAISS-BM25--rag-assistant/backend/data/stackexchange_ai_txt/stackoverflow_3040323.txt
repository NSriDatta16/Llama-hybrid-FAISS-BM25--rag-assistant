[site]: stackoverflow
[post_id]: 3040323
[parent_id]: 3039024
[tags]: 
There might be a very simple way to do this, but I don't know what it is. When I first started using NSIS, I developed this workaround to suit my needs and haven't revisited the problem since to see if there's anything more elegant. I wanted my installers to have the same version number, description, and copyright info as my main executable. So I wrote a short C# application called GetAssemblyInfoForNSIS that pulls that file info from an executable and writes it into a .nsh file that my installers include. Here is the C# app: using System; using System.Collections.Generic; using System.Text; namespace GetAssemblyInfoForNSIS { class Program { /// /// This program is used at compile-time by the NSIS Install Scripts. /// It copies the file properties of an assembly and writes that info a /// header file that the scripts use to make the installer match the program /// static void Main(string[] args) { try { String inputFile = args[0]; String outputFile = args[1]; System.Diagnostics.FileVersionInfo fileInfo = System.Diagnostics.FileVersionInfo.GetVersionInfo(inputFile); using (System.IO.TextWriter writer = new System.IO.StreamWriter(outputFile, false, Encoding.Default)) { writer.WriteLine("!define VERSION \"" + fileInfo.ProductVersion + "\""); writer.WriteLine("!define DESCRIPTION \"" + fileInfo.FileDescription + "\""); writer.WriteLine("!define COPYRIGHT \"" + fileInfo.LegalCopyright + "\""); writer.Close(); } } catch (Exception e) { Console.WriteLine(e.Message + "\n\n"); Console.WriteLine("Usage: GetAssemblyInfoForNSIS.exe MyApp.exe MyAppVersionInfo.nsh\n"); } } } } So if you use that application like so: GetAssemblyInfoForNSIS.exe MyApp.exe MyAppVersionInfo.nsh You would get a file named MyAppVersionInfo.nsh that looks something like this (assuming this info is in your executable): !define VERSION "2.0" !define DESCRIPTION "My awesome application" !define COPYRIGHT "Copyright Â© Me 2010" At the top of my NSIS script, I do something like this: !define GetAssemblyInfoForNSIS "C:\MyPath\GetAssemblyInfoForNSIS.exe" !define PrimaryAssembly "C:\MyPath\MyApp.exe" !define VersionHeader "C:\MyPath\MyAppVersionInfo.nsh" !system '"${GetAssemblyInfoForNSIS}" "${PrimaryAssembly}" "${VersionHeader}"' !include /NONFATAL "${VersionHeader}" !ifdef VERSION Name "My App ${VERSION}" !else Name "My App" !endif !ifdef DESCRIPTION VIAddVersionKey FileDescription "${DESCRIPTION}" !endif !ifdef COPYRIGHT VIAddVersionKey LegalCopyright "${COPYRIGHT}" !endif The first 3 defines set up the file names to use in the !system call to GetAssemblyInfoForNSIS.exe. This system call takes place during your installer's compilation and generates the .nsh file right before you include it. I use the /NONFATAL switch so that my installer doesn't fail completely if an error occurs in generating the include file.
