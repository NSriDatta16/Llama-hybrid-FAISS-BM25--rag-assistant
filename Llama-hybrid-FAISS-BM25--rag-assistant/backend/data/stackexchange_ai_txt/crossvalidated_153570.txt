[site]: crossvalidated
[post_id]: 153570
[parent_id]: 
[tags]: 
Neural Networks and Numeric Prediction

I'm new to machine learning and am trying to write a simple neural network that uses back-propagation. Now, so far I've successfully implemented my neural network to learn a boolean function. So for example, I've tested it on the AND, OR, XOR, IFF and some random 3-input boolean function. It's managed to learn all of them so far. The next step I wanted to take was to do numeric prediction. Now I have an input data set, but I have no idea on what the differences between my current implementation and the numeric prediction implementation would be. I just barely have my head wrapped around the whole idea of back-propagation so I'm a little confused on what I would need to change. My current implementation is written in Java. Just to recap real quick, I basically have a neural net that can learn boolean functions. I want to modify this to be able to make numeric predictions. Is this an easy task, and how would I go about this? From my understanding, I don't see why my current implementation wouldn't work out. Please let me know if you need any more information. Thank you!
