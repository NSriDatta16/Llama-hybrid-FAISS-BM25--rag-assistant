[site]: stackoverflow
[post_id]: 4652749
[parent_id]: 672923
[tags]: 
Typically in WPF, you would leverage an ObservableCollection<> Because then you can just .Add() / .Remove() elements to/from the source collection, and any controls bound (Data Binding) automatically get updated (Automatic Property Change Notification) . Those are 2 important concepts in WPF. Main Window View Model using System.Collections.Generic; namespace TestDatagrid345.ViewModels { class Window1ViewModel { private ObservableCollection _customers = new ObservableCollection (); public ObservableCollection Customers { Get { return _customers; } } } } Main Window using System.Collections.Generic; using System.Windows; namespace TestDatagrid345 { public partial class Window1 : Window { Window1ViewModel _viewModel; public Window1() { InitializeComponent(); _viewModel = (Window1ViewModel)this.DataContext; // @#$% (see XAML) } private void Window_Loaded(object sender, RoutedEventArgs e) { // but this stuff could instead be done on a 'Submit' button click on form: _viewModel.Customers.Add(new Customer { FirstName = "Tom", LastName = "Jones" }); _viewModel.Customers.Add(new Customer { FirstName = "Joe", LastName = "Thompson" }); _viewModel.Customers.Add(new Customer { FirstName = "Jill", LastName = "Smith" }); } } } Main Window XAML
