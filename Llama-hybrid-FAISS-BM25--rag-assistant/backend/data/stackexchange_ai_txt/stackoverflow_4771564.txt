[site]: stackoverflow
[post_id]: 4771564
[parent_id]: 
[tags]: 
Will my session be automatically closed?

Edit Orignal Title: My transaction is closed by the time it gets to my Repo. What am I doing wrong? I got a answer to my origanl questions(I forgot to open the transaction lol). Now I am wondering if my code is automatically closing the session or if I have to somehow tell it to do this. Hi I am using mvc 3.0, nhibernate, fluent nhibernate and ninject 2.0 Global.asax // Note: For instructions on enabling IIS6 or IIS7 classic mode, // visit http://go.microsoft.com/?LinkId=9394801 public class MvcApplication : System.Web.HttpApplication { public static void RegisterGlobalFilters(GlobalFilterCollection filters) { filters.Add(new HandleErrorAttribute()); } public static void RegisterRoutes(RouteCollection routes) { routes.IgnoreRoute("{resource}.axd/{*pathInfo}"); routes.MapRoute( "Default", // Route name "{controller}/{action}/{id}", // URL with parameters new { controller = "Home", action = "Index", id = UrlParameter.Optional } // Parameter defaults ); } protected void Application_Start() { // Hook our DI stuff when application starts SetupDependencyInjection(); AreaRegistration.RegisterAllAreas(); RegisterGlobalFilters(GlobalFilters.Filters); RegisterRoutes(RouteTable.Routes); } public void SetupDependencyInjection() { // Tell ASP.NET MVC 3 to use our Ninject DI Container DependencyResolver.SetResolver(new NinjectDependencyResolver(CreateKernel())); } protected IKernel CreateKernel() { var modules = new INinjectModule[] { new NhibernateModule(), new ServiceModule(), new RepoModule() }; return new StandardKernel(modules); } } Session Factory public class NhibernateSessionFactory { public ISessionFactory GetSessionFactory() { ISessionFactory fluentConfiguration = Fluently.Configure() .Database(MsSqlConfiguration.MsSql2008.ConnectionString(c => c.FromConnectionStringWithKey("test"))) .Mappings(m => m.FluentMappings.AddFromAssemblyOf ()) .BuildSessionFactory(); return fluentConfiguration; } } Session Factory Provider public class NhibernateSessionFactoryProvider : Provider { protected override ISessionFactory CreateInstance(IContext context) { var sessionFactory = new NhibernateSessionFactory(); return sessionFactory.GetSessionFactory(); } } Nhibernate Module public class NhibernateModule : NinjectModule { public override void Load() { Bind ().ToProvider ().InSingletonScope(); Bind ().ToMethod(context => context.Kernel.Get ().OpenSession()).InRequestScope(); } } Service Module public class ServiceModule : NinjectModule { public override void Load() { Bind ().To (); } } Repo Module public class RepoModule : NinjectModule { public override void Load() { Bind ().To (); } } HomeController private readonly ITest test; public HomeController(ITest test) { this.test = test; } // // GET: /Home/ public ActionResult Index() { return View(); } Test(my service layer file) public class Test : ITest { private readonly IStudentRepo studentRepo; public Test(IStudentRepo studentRepo) { this.studentRepo = studentRepo; } } Repo public class StudentRepo : IStudentRepo { private readonly ISession session; public StudentRepo(ISession session) { this.session = session; } } When I look through my debugger at the session that is coming into my repo. It says the session is open and connected but the (session.Transaction).IsActive = false
