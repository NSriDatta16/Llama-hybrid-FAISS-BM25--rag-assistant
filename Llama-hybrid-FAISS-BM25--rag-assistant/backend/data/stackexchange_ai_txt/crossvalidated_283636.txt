[site]: crossvalidated
[post_id]: 283636
[parent_id]: 283622
[tags]: 
Using a linear SVM for such a task is a sound idea. Linear SVMs are very fast to train, and you get a first result, against which you can check any other approach. As to the resources, it does not only depend on how many features, and the algorithm, but also the implementation. scikit-learn provides efficient implementation for sparse features, and your problem at hand, http://scikit-learn.org/stable/modules/feature_extraction.html http://blog.christianperone.com/2011/09/machine-learning-text-feature-extraction-tf-idf-part-i/ How to train your SVM also plays a role. Using stochastic gradient will need less resources than other second order methods, http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html
