[site]: crossvalidated
[post_id]: 363134
[parent_id]: 
[tags]: 
KNN with categorical values can not predict correctly

I am trying to build a model that given an item, predicts which store it belongs to. I have a data-set of ~250 records which are supposed to be items in different online stores. Each record is composed of: Category,Sub Category,Price,Store Identifier(The y variable) I have tried several number of neighbors, tried Manhattan distance but unfortunately can not get better results accuracy ~0.55. Random Forest produces accuracy ~0.7. My intuition says that a model should be able to predict this problem. What am I missing? This is the data: https://pastebin.com/nUsSbkp4 from sklearn.ensemble import RandomForestClassifier from sklearn.metrics import confusion_matrix from sklearn.cross_validation import train_test_split from sklearn.preprocessing import LabelEncoder, OneHotEncoder from sklearn.neighbors import KNeighborsClassifier import numpy as np import matplotlib.pyplot as plt import pandas as pd dataset = pd.read_csv('data.csv') X = dataset.iloc[:, :-1].values y = dataset.iloc[:, 3].values labelencoder_X_0 = LabelEncoder() X[:, 0] = labelencoder_X_0.fit_transform(X[:, 0]) labelencoder_X_1 = LabelEncoder() X[:, 1] = labelencoder_X_1.fit_transform(X[:, 1]) onehotencoder_0 = OneHotEncoder(categorical_features = [0]) X = onehotencoder_0.fit_transform(X).toarray() onehotencoder_1 = OneHotEncoder(categorical_features = [1]) X = onehotencoder_1.fit_transform(X).toarray() X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0) # classifier = RandomForestClassifier(n_estimators=25, criterion='entropy', random_state = 0) classifier = KNeighborsClassifier(n_neighbors=3, metric='minkowski', p=2) classifier.fit(X_train, y_train) y_pred = classifier.predict(X_test) cm = confusion_matrix(y_test, y_pred) accuracy = classifier.score(X_test, y_test) print(accuracy)
