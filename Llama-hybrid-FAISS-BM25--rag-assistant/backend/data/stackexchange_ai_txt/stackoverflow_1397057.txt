[site]: stackoverflow
[post_id]: 1397057
[parent_id]: 1397029
[tags]: 
For sure reflection's purpose is not to expose such implementation details. You'll need some decompiler/disassembler utility of sorts. Decompilers are typically targeted at one particular source language, so you need to have one that matches the language in which the assembly is written. Whether you'd be able to leverage the decompiler output or API at the level of your own C# programs is another story. Furthermore beware that decompiling, and generally reverse engineering binaries and other supporting files may be illegal and in breach of licenses you may hold on the underlying software. Reflector , mentioned above is effectively a decompiler for the .NET IL, and it uses reflection to allow interactive browsing of the assembly contents. This appears to be a stand-alone product however not something that would interface with a C# program.
