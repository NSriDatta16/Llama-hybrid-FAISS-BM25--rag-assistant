[site]: stackoverflow
[post_id]: 2094609
[parent_id]: 
[tags]: 
Classes to avoid (code complete)

I am somewhat confused about a paragraph in the code complete book. In the section "Classes to avoid" it reads: "Avoid classes named after verbs A class that has only behavior but no data is generally not really a class. Consider turning a class like DatabaseInitialization() or StringBuilder() into a routine on some other class" My code mainly consists of verb classes without data. There are invoicereaders, pricecalculators, messagebuilders etc. I do this to concentrate the classes to one task each. Then I add dependencies to other classes for other functionality. If I understand the paragraph correctly I should use code like class Webservice : IInvoiceReader, IArticleReader { public IList GetInvoices(); public IList GetArticles(); } rather than class InvoiceReader : IInvoiceReader { public InvoiceReader(IDataProvider dataProvider); public IList GetInvoices(); } class ArticleReader : IArticleReader { public ArticleReader(IDataProvider dataProvider); public IList GetArticles(); } Edit Thanks for all the replies. My conclusion is that my current code is more SRP than OO but that it also suffers from the "anemic domain model". I'm sure theses insights will help me in future.
