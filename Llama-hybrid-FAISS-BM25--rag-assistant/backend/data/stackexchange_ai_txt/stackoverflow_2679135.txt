[site]: stackoverflow
[post_id]: 2679135
[parent_id]: 879513
[tags]: 
I have the same problem. I am trying out VS2010 Pro and I have made small home project where I am downloading multiple files (10-50) at the same time and I want to limit bandwidth for them all. I found this posting but I can't really see a solution so I tried for myself. What I did was, I created a DownloadLimiter class which is built up real simple. Each time a Downloader wants to download a chunk (like, just before InputStream.Read()) it has to ask the DownloadLimiter for bandwidth. It has a variable which holds a limitation, example 50 000 (like bytesPerSecond) and availableBandwidthPerSecond which decreases as each ask() is processed and returned. It also contains a Timer which resets the availableBandwidthPerSecond to the limitation each 1000ms. The ask() method is locked so if there is not currently any available bandwidth left it just loops and Sleeps for a while until the Timer has reset the available bandwidth. It works perfectly, however. There is an issue. Let's say you have a pretty fast connection (100 megabit) and you set the limit to 200kb. If you download one file (from a similar fast connection) then you will peak at 100megabit for x amounts of milliseconds then it will wait until the available bandwidth has been reset. And this will continue until the file has completed. The average download speed will be fairly even, but if you watch a bandwidth graph it will have peaks, each second. I guess that the posted link to ThrottledStream works the same way with peaking. I don't know if the text above helped you... If anyone is interested I can post the code somewhere for you to read. Would be nice with some optimization (if you want) too since I am not that familiar with threading just yet. :)
