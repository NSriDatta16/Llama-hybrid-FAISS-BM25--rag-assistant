[site]: stackoverflow
[post_id]: 4769256
[parent_id]: 4768988
[tags]: 
You have a number of things confused here. You have a global variable bob and you also have bob as a function argument. Also, you have an array of results, which local to the foo function is called resultArr , but you do not assign it anywhere when you call the foo function. Try the following code instead: var bob = [10,30,50,20,8]; var foo = function(arrayOfNumbers){ var resultObj = { max: 0, min: 0, average: 0, sum: 0 }; resultObj.max = Math.max.apply( null, arrayOfNumbers); // Get the max value. resultObj.min = Math.min.apply( null, arrayOfNumbers); // Get the min value. for( var i = 0; i Here's a description of the changes I made to your code, and why: I made sure that the names of your variables don't conflict. This should help you see where each variable is used and how they relate to each other. bob contains your numbers. You pass bob to the foo() function. Inside foo , the numbers are now referred to as v . This means you could also have frank , joe , and tom , and you could call foo on all of them. arrayOfNumbers is a local variable to foo . I changed resultArr from an array to an object. An object makes more sense because you can assign labels to the values. So now the max value is can be accessed at .max instead of [0] . I also showed how the result object is called resultObj inside foo but gets assigned to theResult outside foo. You can then refer to theResult.min , theResult.max , and theResult.average . I cleaned up a little bit, fixing indentation and moving the function to the top, to increase readability. I hope this helps you see what's going on here!
