[site]: stackoverflow
[post_id]: 2172579
[parent_id]: 672731
[tags]: 
My approach to doing something when page is completely loaded (including frames) is something like this: using System.Windows.Forms; protected delegate void Procedure(); private void executeAfterLoadingComplete(Procedure doNext) { WebBrowserDocumentCompletedEventHandler handler = null; handler = delegate(object o, WebBrowserDocumentCompletedEventArgs e) { ie.DocumentCompleted -= handler; Timer timer = new Timer(); EventHandler checker = delegate(object o1, EventArgs e1) { if (WebBrowserReadyState.Complete == ie.ReadyState) { timer.Dispose(); doNext(); } }; timer.Tick += checker; timer.Interval = 200; timer.Start(); }; ie.DocumentCompleted += handler; } From my other approaches I learned some "don't"-s: don't try to bend the spoon ... ;-) don't try to build elaborate construct using DocumentComplete, Frames, HtmlWindow.Load events. Your solution will be fragile if working at all. don't use System.Timers.Timer instead of Windows.Forms.Timer , strange errors will begin to occur in strange places if you do, due to timer running on different thread that the rest of your app. don't use just Timer without DocumentComplete because it may fire before your page even begins to load and will execute your code prematurely.
