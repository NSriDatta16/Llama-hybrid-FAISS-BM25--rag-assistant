[site]: stackoverflow
[post_id]: 3479362
[parent_id]: 3479297
[tags]: 
Applications tend to copy the organizations that create them. If a database has two customers, you could find yourself being asked to make a change that could break features that the other customer uses. So if the application has one customer but several distinct schemas, you might want to put them in one database. If the application has many customers, you might want to separate out them to different databases even if the schema is much the same--if you need to support the possibility of evolving the application for one user but not another. Blogger (the google app) is a good example. None of the customers has clout to ask for a feature just for them, so blogger most likely puts everything into one schema/one database.
