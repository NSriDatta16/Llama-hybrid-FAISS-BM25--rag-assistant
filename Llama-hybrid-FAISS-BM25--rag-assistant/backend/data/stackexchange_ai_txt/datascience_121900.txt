[site]: datascience
[post_id]: 121900
[parent_id]: 
[tags]: 
Seeking Feedback on Methodology for Implementing Supervised Classification ML Algorithm for Customer Satisfaction Prediction

I'm currently designing a methodology for implementing a supervised classification ML algorithm and seeking guidance to ensure I'm heading in the right direction. The problem I'm addressing involves measuring customer satisfaction for a service using the Net Promoter Score (NPS) obtained through customer feedback. The service can be evaluated based on two aspects: functional and non-functional. I have a set of features that belong to each category, with the non-functional features being relatively fewer and more challenging to construct. Additionally, I need to capture both types of features with a temporal dependency. I aim to train a classifier to predict each customer's monthly NPS. To achieve this, I intend to use data encompassing the features from the day the questionnaire was filled and the previous 30 days. Every month, I receive a new batch of labelled clients. Initially, I considered creating an input data matrix, let's call it W_nxm , where each row corresponds to a customer, and the columns represent aggregated features (e.g., averages, sums) for the desired time frame. Simultaneously, I would use a vector y_nx1 to store the known customer scores, which would serve as the training data for my model. However, I started contemplating whether it would be beneficial to incorporate the time dimension directly rather than aggregating it. This curiosity has led me to explore convolutional neural networks (CNNs) and their success in tasks like image processing (2D) and video analysis (3D). In video analysis, time propagates the third dimension through 2D images. In my case, the signals are 1D (features). As a potential solution, I suggest transforming each 1D feature signal into images using grayscale or scalogram representations within the desired timeframe. Consequently, the input to my network would become a 3D matrix that describes the behaviour of each client. Since I'm contemplating a different approach to constructing my input data, where time is not propagated per image but instead my features are, I would greatly appreciate any feedback or suggestions on this formulation. I'm open to hearing your thoughts and insights. Thank you in advance for your help!
