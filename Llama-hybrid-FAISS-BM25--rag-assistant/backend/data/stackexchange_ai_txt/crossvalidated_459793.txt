[site]: crossvalidated
[post_id]: 459793
[parent_id]: 
[tags]: 
Building a neural network with two training paths in Keras

I am trying to build a NN in Keras with two different output paths where the first path informs the second. The first path passes its loss to the end of the second path, like so: Pass through layer A then layer B, calculate loss as $L(Y_1, \hat{Y_1})$ and back-propagate error. (easy) Pass through layer A then layer C, calculate loss incorporating the loss from step 1 as $L(Y_2, \hat{Y_2}) - \lambda L (Y_1, \hat{Y_1})$ , and back-propagate error. (not sure how to do this) I think I need to save the error from step 1, and use it to build a customized loss function for step 2. Any guidance would be appreciated.
