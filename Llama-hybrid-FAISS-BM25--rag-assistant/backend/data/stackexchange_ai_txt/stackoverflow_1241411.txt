[site]: stackoverflow
[post_id]: 1241411
[parent_id]: 1241361
[tags]: 
In my opinion, here are a few things that come to my mind : PHPUnit is more integrated with other tools, like, for instance, Selenium (PHPUnit can use it to open true real browsers to test your site) phpUnderControl for continuous-integration PHPUnit works well with Xdebug , to generate code-coverage reports PHPUnit is more widely used ; which probably means more support But note I don't work with symfony, nor lime... Still, I've never heards anyone speak about it, except for those working with symfony -- that not a good thing, for the day you'll have to work with another framework (yes, this happens ^^ ) One thing that's not in PHPUnit : "false" browser (being able to do HTTP Requests to the application, without using Selenium to open a real browser) But some frameworks (Zend Framework does, with it's Zend_Test component) integrate with PHPUnit (or use it), while allowing injection of data into the MVC and fetching of the response, without having to issue any HTTP Request. I don't know if symfony allows that, but that's a nice thing with ZF/PHPUnit ^^ (Yes, not a symfony-specific answer ; but of the things I said must still be valid with that framework)
