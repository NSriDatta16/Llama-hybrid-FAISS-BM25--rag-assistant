[site]: stackoverflow
[post_id]: 3472653
[parent_id]: 3472408
[tags]: 
This is a little bit of a guess since I have never actually used GetOriginalEntityState but the question peaked my interest to figure out what is going on. I think the intent here is to check that product is still attached to the original DataContext The line: if (productsTable.GetOriginalEntityState(product) == null) I think this will return null if product has been dettached or created manually and not handled by the DataContext . From MSDN : This method returns the original state of an entity since it was either created or attached to the current DataContext. The original state of an entity that has been serialized and deserialized must be provided by an independent tracking mechanism and supplied when the entity is attached to a new DataContext. For more information, see Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL). I think the key line to understand is: This method returns the original state of an entity since it was either created or attached to the current DataContext. GetOriginalEntityState is used so that the method can receive an object with the option of not being attached already to the DataContext . Attached meaning, returned by a Linq To SQL call vs just creating an instance like Product p = new Product() { ... }; . If it is not attached, it will attach it to the DataContext and keep any of the values that were modified (preserving the update values) due to the RefreshMode.KeepCurrentValues param. Then the productsTable.Context.SubmitChanges(); always happens since even if it is dettached, the GetOriginalEntityState will make sure it gets attached so the submit will work.
