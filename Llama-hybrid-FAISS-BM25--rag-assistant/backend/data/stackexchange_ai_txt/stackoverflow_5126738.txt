[site]: stackoverflow
[post_id]: 5126738
[parent_id]: 
[tags]: 
State with namespaces and locals - or classes?

Right now, the modules in my game engine are organized as namespaces. They have Open() and Close() functions which act similar to constructors and destructors of classes, and are called when the game is entered left. Examples for these modules are: The physics manager, entity manager, I/O handler, rendering manager. Now, I'm beginning to think that it is bad to have all the variables of the modules "lying" around and being exported globally via the linker. Refactoring the modules from namespaces into classes would bring the following overhead: There would have to be a global controller which allows interaction between the different modules, by proving access to their instances Interaction between modules would get the extra overhead of a function call and 1-2 pointer dereferences And the following advantages: RAII conform All state could be packed into a single CState class which contains the instances of the modules Good for making sure that resources are deleted and allocated properly My questions: Should I consider refactoring my engine modules from namespaces to managed classes? Why (not)?
