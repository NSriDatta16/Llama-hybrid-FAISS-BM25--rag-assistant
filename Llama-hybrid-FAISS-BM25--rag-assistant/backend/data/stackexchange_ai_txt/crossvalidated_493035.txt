[site]: crossvalidated
[post_id]: 493035
[parent_id]: 492998
[tags]: 
Anna, because you used family = "binomial" and link = "logit" as options in your model, R assumes that you are trying to model a binary response variable which takes the values 0 ("failure") or 1 ("success"). This assumption is also based on the fact that you didn't use cbind() on the left hand side of your model formula - otherwise, your response variable would have been treated as a binomial count (i.e., number of successes k out of n independent trials). Under this assumption, what R is fitting is a mixed effects binary logistic regression model . This type of model looks at how the log odds of "success" are influenced by call and duration for a "typical" dyad and how the other dyads differ from the "typical" dyad with respect to the log odds of success corresponding to call1 = 0 and duration = 0. On your left hand side of the model, you indicated through your response variable naming that your response is multinomial , which would mean that your response is NOT binary since it takes more than 2 values (i.e., at least 3). These values would be "categories" - for instance "failure", "success", "undetermined". To fit a mixed effects multinomial logistic regression model , you would need to change your family from "binomial" to whatever the R package you are using suggests you should be using in a multinomial context. I am not familiar with this package, so others here may be able to give you hints on what the appropriate family to use would be. It could be "multinomial" but you would have to check the package documentation to verify that. Addendum One possibility for fitting a mixed effects multinomial logistic regression model in a frequentist setting would be to use the function npmlt from the mixcat package of R. Something like this: install.packages("mixcat") library(mixcat) attach(dur) model.po Note that you need to make sure your outcome variable, EEC_multinomial, is treated as a factor by R. Also, you need to attach your dataset prior to fitting your model(s) and then detach it after fitting your model(s). If EEC_multinomial has 3 categories, say, R will set one category aside and treat it as the baseline (or reference) category. If the 3 categories are A, B and C and A is the reference category, the npmlt function will model two sets of log odds: Log odds of response variable falling in category B rather than A as a function of (i) your predictor variables and (ii) a random intercept for Subject; Log odds of response variable falling in category C rather than A as a function of (i) your predictor variables and (ii) a random intercept for Subject; How npmlt will model these log odds will depend on your specification of the model: For model.po, npmlt will assume that the effect of the predictor variable call is same for both sets of log odds, conditional on the random intercept effect AND that the effect of the predictor variable duration is the same for both sets of log odds. [This is called the proportional odds assumption or po in short.] For model.npo, npmlt will assume that the effect of each of the predictor variables call and duration is different across the two sets of log odds, conditional on the random intercept effect. [This is called the "nonproportional odds assumption" or npo in short.] Of course, you could also formulate models where one of the predictors satisfies the po assumption and the other does not and viceversa: model.npo.1 The predictor variables listed in both formula and formula.npo do NOT satisfy the proportional odds assumption. The predictor variables listed only in formula DO satisfy the proportional odds assumption. I have not used this function much so please check out how you can best set the value of k in your model (e.g., contact the package author for guidance on choice of k or try out different k > 1 values to make sure your end results and conclusions are not sensitive to the choice of k). There are other R packages for fitting this type of models, some of which will take you to a Bayesian (e.g., brms ) rather than frequentist framework.
