[site]: stackoverflow
[post_id]: 5498073
[parent_id]: 5497790
[tags]: 
Make your tests small. A good test calls maybe 1-3 methods on the subject of the test and does some assertions on the result. These test will only need to change when one of these three methods change. Make your test code clean. If you haven't already read 'Clean Code' by Robert C. Martin. Apply the rules to your production code AND your test code. This has the tendency to reduce the affected surface area of any refactoring. Do refactor more often. Instead of (possibly unconsiously) waiting until you must do a large refactoring, do small refactorings a lot. If you are faced with a huge refactoring, break it down in a couple (or if necessary a couple hundred) tiny refactorings.
