[site]: stackoverflow
[post_id]: 5060385
[parent_id]: 5060366
[tags]: 
When you COUNT(*) it takes in count column indexes, so it will be the best result. MySQL with MyISAM engine actually stores row count, it doesn't count all rows each time you try to count all rows. (based on primary key's column) Using PHP to count rows is not very smart, because you have to send data from MySQL to PHP. Why do it when you can achieve the same on the MySQL side? If the COUNT(*) is slow, you should run EXPLAIN on the query, and check if indexes are really used, and where they should be added. The following is not the fastest way, but there is a case, where COUNT(*) doesn't really fit - when you start grouping results, you can run into a problem where COUNT doesn't really count all rows. The solution is SQL_CALC_FOUND_ROWS . This is usually used when you are selecting rows but still need to know the total row count (for example, for paging). When you select data rows, just append the SQL_CALC_FOUND_ROWS keyword after SELECT: SELECT SQL_CALC_FOUND_ROWS [needed fields or *] FROM table LIMIT 20 OFFSET 0; After you have selected needed rows, you can get the count with this single query: SELECT FOUND_ROWS(); FOUND_ROWS() has to be called immediately after the data selecting query. In conclusion, everything actually comes down to how many entries you have and what is in the WHERE statement. You should really pay attention on how indexes are being used, when there are lots of rows (tens of thousands, millions, and up).
