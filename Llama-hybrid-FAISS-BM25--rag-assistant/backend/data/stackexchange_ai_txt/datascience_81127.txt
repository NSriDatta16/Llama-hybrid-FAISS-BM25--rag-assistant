[site]: datascience
[post_id]: 81127
[parent_id]: 
[tags]: 
Is it vital to use weighted metrics with weighted loss functions?

When one has an imbalanced machine learning problem, let's say a binary classification problem where class 0 is a majority class and class 1 is a minority class. Here class 1 is the most important class for you. Now your dataset is composed of 100 samples: 70 samples from class 0 and 30 samples from class 1. In this case, usually, one defines and uses a weighted binary cross-entropy loss function to calculate the loss. classweights = torch.FloarTensor([1.000, 1.300]) weighted_loss = torch.nn.BCELoss(weight = classweights) For calculation of metrics like F1-score, is it required that these weights are used? sample_classweights = sklearn.utils.class_weight.compute_sample_weight(class_weight, y_true) classification_report = sklearn.metrics.classification_report(y_true, y_pred, sample_weight=sample_classweights) Any hint or help is appreciated.
