[site]: stackoverflow
[post_id]: 5672185
[parent_id]: 
[tags]: 
Identify a class call by another class from another package in eclipse galileo

Here I have a set of resource bundles( a .properties java class) that been called by many classes in a eclipse project file. I just wondering is it eclipse got any shortcut key or function to identify automatically the class(resource bundles) from another package that have been call from another class in different package. The line that call another package resource bundle is private ResourceBundle useCaseResourceBundle; The full code is package my.com.infopro.icba10.accounting.ui.maintainproductgl; import java.awt.BorderLayout; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.util.ArrayList; import java.util.Collections; import java.util.HashMap; import java.util.List; import java.util.Map; import java.util.ResourceBundle; import javax.swing.JButton; import javax.swing.JPanel; import javax.swing.border.TitledBorder; import my.com.infopro.icba10.accounting.delegate.AccountingDelegate; import my.com.infopro.icba10.accounting.domain.GLField; import my.com.infopro.icba10.accounting.domain.GLProduct; import my.com.infopro.icba10.accounting.domain.GLProductDetail; import my.com.infopro.icba10.admin.vlh.lov.CurrencyLov; import my.com.infopro.icba10.kernel.uiframework.annotation.ValidationConfigFile; import my.com.infopro.icba10.kernel.uiframework.binding.PresentationModelFactory; import my.com.infopro.icba10.kernel.uiframework.component.CustomizedCombobox; import my.com.infopro.icba10.kernel.uiframework.form.IconFactory; import my.com.infopro.icba10.kernel.uiframework.form.IconType; import my.com.infopro.icba10.kernel.uiframework.form.builders.CustomizedPanelBuilder; import my.com.infopro.icba10.kernel.uiframework.form.builders.PanelBuilderFactory; import my.com.infopro.icba10.kernel.uiframework.session.UserSessionProfileStore; import my.com.infopro.icba10.kernel.uiframework.util.LayoutType; import my.com.infopro.icba10.kernel.uiframework.validation.controls.CustomizedForm; import my.com.infopro.icba10.kernel.util.configuration.CustomConfig; import my.com.infopro.icba10.kernel.util.db.DataAccessMode; import my.com.infopro.icba10.kernel.valuelisthandler.lov.Lov; import org.apache.commons.beanutils.BeanComparator; import org.apache.log4j.Logger; import com.jgoodies.binding.beans.Model; import com.jgoodies.binding.list.SelectionInList; /* ================================================================================================= * HISTORY * ------------------------------------------------------------------------------------------------- * Date Author Remarks * ------------------------------------------------------------------------------------------------- * 2010/08/22 hmho class created * ================================================================================================= */ @ValidationConfigFile("my.com.infopro.icba10.cbs.core.ui.vconfig.maintainproductglset-vconfig") public class MaintainProductGLCopyPopUp extends CustomizedForm implements ActionListener { private Logger logger= Logger.getLogger(MaintainProductGLCopyPopUp.class); private CustomConfig config = CustomConfig.getInstance(); private ResourceBundle useCaseResourceBundle; private UserSessionProfileStore userSessionProfileStore= UserSessionProfileStore.getInstance(); private CustomizedCombobox currencyComboBox; private CustomizedCombobox glSetCodeComboBox; private JButton okButton = new JButton(); private GLProduct fromGLProduct; private GLProduct toGLProduct; private MaintainProductGLMaintForm form; private String glSetCode; private String glSetDescription; private Map > glDetailMap = new HashMap >(); private AccountingDelegate accountingDelegate; public MaintainProductGLCopyPopUp(MaintainProductGLMaintForm form,ResourceBundle useCaseResourceBundle, GLProduct glProduct,Map > glDetailMap) { super(); this.form = form; this.useCaseResourceBundle = useCaseResourceBundle; this.toGLProduct = glProduct; this.glDetailMap = glDetailMap; } @Override public boolean isFormValidatable() { return true; } public void init() { initPanels(); initBindingAndValidation(); initCode(); initEventHandling(); } private void initPanels() { setLayout(new BorderLayout()); add(buildCopyPanel(), BorderLayout.CENTER); } private void initBindingAndValidation() { fromGLProduct = new GLProduct(); presentationModelDelegate = PresentationModelFactory.getPresentationModel(this, getFormBeans(), new String[]{GLProduct.class.getSimpleName()}); fromGLProduct.setBankingConcept(toGLProduct.getBankingConcept()); fromGLProduct.setModuleCode(toGLProduct.getModuleCode()); glSetCode = toGLProduct.getGlSetCode(); glSetDescription = toGLProduct.getGlSetDescription(); logger.debug("init in copy " ); logger.debug("toGLProduct " + toGLProduct.getGlSetCode()); logger.debug("toGLProduct " + toGLProduct.getGlSetDescription()); } private void initCode() { accountingDelegate = new AccountingDelegate(); Lov currencyLov = new CurrencyLov(); presentationModelDelegate.bindComboBoxWithValues(currencyComboBox, currencyLov); } private void initEventHandling() { currencyComboBox.addActionListener(this); okButton.addActionListener(this); } private JPanel buildCopyPanel() { CustomizedPanelBuilder builder = PanelBuilderFactory.createPanelBuilder(LayoutType.SINGLE_CENTERED); JPanel popupPanel = new JPanel(); popupPanel.setLayout(new BorderLayout()); popupPanel.setBorder(new TitledBorder (useCaseResourceBundle.getString("copyPanel"))); JPanel copyPanel = new JPanel(); currencyComboBox= new CustomizedCombobox(); glSetCodeComboBox= new CustomizedCombobox(); builder.addComponentGroup(useCaseResourceBundle.getString("currency"), "GLProduct.currencyCode", currencyComboBox); builder.addComponentGroup(useCaseResourceBundle.getString("glSetCode"), "GLProduct.glSetCode", glSetCodeComboBox); copyPanel = builder.getStandardPanel(); popupPanel.add(copyPanel, BorderLayout.CENTER); popupPanel.add(buildButtonPanel(), BorderLayout.SOUTH); return popupPanel; } private JPanel buildButtonPanel() { JPanel innerButtonPanel = new JPanel(); okButton = new JButton(); okButton.setText(useCaseResourceBundle.getString("okButton")); okButton.setIcon(IconFactory.createIcon(IconType.OK)); innerButtonPanel.add(okButton); JPanel buttonPanel = new JPanel(); buttonPanel.setLayout(new BorderLayout()); buttonPanel.add(innerButtonPanel,BorderLayout.EAST); return buttonPanel; } public void registerComponentNames() { } @Override protected void createFormBeans() { fromGLProduct = new GLProduct(); } @Override public Model[] getFormBeans() { return new Model[]{fromGLProduct}; } @Override protected void setFormBeans(final Model[] updatedBean) { fromGLProduct = (GLProduct) updatedBean[0]; } public void actionPerformed(ActionEvent event) { // TODO Auto-generated method stub final Object sourceObject = event.getSource(); if (sourceObject.equals(okButton)) { if(null!=fromGLProduct.getCurrencyCode() && null!=fromGLProduct.getGlSetCode()){ setCopyData(); searchFrame.dispose(); } } if (sourceObject.equals(currencyComboBox)) { List glSetCodeList = accountingDelegate.findAvailableGlProduct(fromGLProduct); if(glSetCodeList.size() 0){ form.getGlSetTableManagerModel().clearItems(); BeanComparator comparator = new BeanComparator("glField"); Collections.sort(copyProduct.getGLProductDetailList(), comparator); form.setGlSetTableManagerModel(copyProduct.getGLProductDetailList()); logger.debug("Copy List Size 2 " + copyProduct.getGLProductDetailList().size()); } SelectionInList selectionInList = form.getGlSetTableManagerModel() .getItemSelectionsList(); List glProductDetails = new ArrayList (); glProductDetails.clear(); for(int i=0;i gls = form.getGlProductDetailMap().get(key); for(GLProductDetail gl:gls){ logger.debug("Map " +gls.size()); if(null!=gl.getGlCode()){ logger.debug("Map " + gl.getGlField()); logger.debug("Map " + gl.getGlCode()); } } } } } } Is there any way so that i can use any key or function in eclipse to open the java file refer by the useCaseResourceBundle from this class. In some case its easier because the class already declared it clearly. Example private ResourceBundle resourceBundle = config.getPropResourceBundle("KERN_BUNDLE_UIFRAMEWORK");
