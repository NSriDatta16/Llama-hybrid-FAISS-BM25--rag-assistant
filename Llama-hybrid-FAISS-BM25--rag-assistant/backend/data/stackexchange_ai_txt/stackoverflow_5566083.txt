[site]: stackoverflow
[post_id]: 5566083
[parent_id]: 5565330
[tags]: 
isset() returns true if the variable has been set - i.e., that is has been declared and has a non-NULL value. Apart from that bit about NULL, isset() says nothing about the contents of that variable. To test if a variable is truly empty (an empty string, NULL, FALSE, 0, an empty array, etc), use the aptly named empty() :) Example: $a = NULL; $b = ''; // $c we won't declare echo isset($a); // False - $a has a NULL value echo isset($b); // True - $b is set to a non-NULL Value. empty() will return True too. echo isset($c); // False - $c is not set. Another way of doing what Captain mentioned above: $address = ""; foreach( array( "address1", "address2", "address3" ) as $param ) { $param = trim($_REQUEST[$param]); $address .= !empty( $param ) ? ', '.$param : ""; } The way this works: Define the names of the elements in the $_REQUEST array you want. You loop through each element, pull its value out of $_REQUEST, strip any straggling whitespace (with trim()). If the parameter is not empty, append it to $address. If it is empty, you append an empty string. If you haven't seen it before, that condition ? expr_if_true : expr_if_false syntax is called the ternary operator . A tiny bit cleaner, IMO. Fewer if/else statements running around.
