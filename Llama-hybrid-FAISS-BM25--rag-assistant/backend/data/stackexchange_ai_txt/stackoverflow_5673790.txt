[site]: stackoverflow
[post_id]: 5673790
[parent_id]: 
[tags]: 
How do I use polymorphism with Spring Beans?

Here is the premise for what I'm doing: - Use a simple servlet to get page requests. - Get a page id from the request to determine which page i'm on. - Define the controllers in a beans xml config. - Use the bean definition to determine which page controller class to use. - All of these page controllers extends CORE.Controllers.PageController class. Here is what I am trying to do, but failing. I'm trying to load the page controller class (PersonController, which was determined from the beans) into the PageController variable. What you will see in my code sample is that I'm casting it into the PageController class. That doesn't work. How do I get my PersonController object from the bean factory using polymorphism, into my variable? The class is here in part: String pageId = "home"; if (request.getParameter("PID") != null) { pageId = request.getParameter("PID"); } response.setContentType("text/html; charset=UTF-8"); // Set content type for HTML. PrintWriter out = response.getWriter(); // Output goes to the response PrintWriter. try { TransformerFactory tFactory = TransformerFactory.newInstance(); String ctx = getServletContext().getRealPath("") + FS; //get the real path for xml and xsl files. BeanFactory pageFactory = new XmlBeanFactory(new FileSystemResource(ctx+"WEB-INF/page-cfg.xml")); PageMapping pageMap = (PageMapping) pageFactory.getBean("pageMapping"); Page page = pageMap.getPageById(pageId); BeanFactory controllerFactory = new XmlBeanFactory(new FileSystemResource(ctx+"WEB-INF/controller-cfg.xml")); PageController controller = (PageController) controllerFactory.getBean(page.getControllerName()); controller.setRequest(request);
