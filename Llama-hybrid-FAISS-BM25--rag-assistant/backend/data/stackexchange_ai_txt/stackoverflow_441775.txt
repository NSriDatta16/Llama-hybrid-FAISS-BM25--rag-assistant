[site]: stackoverflow
[post_id]: 441775
[parent_id]: 441496
[tags]: 
When you switch between the HTTP and HTTPS services on the same server, your HTTP session ID is not being passed to the HTTPS session. You can set it by passing the session ID from the HTTP page to the HTTPS page in one of three possible ways: From PHP: session_start : session_start() creates a session or resumes the current one based on the current session id that's being passed via a request, such as GET, POST, or a cookie When you are using sessions, you will normally start your script with session_start() . If the browser has a session ID cookie set, session_start() will use that session ID. If the browser does not have a session ID cookie set, session_start() will create a new one. If the session ID is not set(in your example, the browser is creating a new session ID cookie for the HTTPS session), you can set it using the session_id() function. session_id() also conveniently returns the session ID as a string. So ... $currentSessionID = session_id(); ... sets the $currentSessionID variable equal to the current session ID, and ... session_id($aSessionID); ... sets the sessionID cookie in the browser to $aSessionID . from PHP: session_id Here's an example with two scripts. One is accessed via HTTP and the other is accessed via HTTPS. They must be on the same server to maintain session data. Script 1(HTTP) : Click here to transfer your session to the secure server '; ?> Script 2(HTTPS) : For this to work the HTTP and HTTPS servers must use the same session data storage substrate (i.e. for the default files handler, run on the same physical machine with the same php.ini). There are some security flaws here, so I would not use this code to transfer sensitive information. It is just meant as a workable example. When I ran into this problem before, I came up with the above as a quick fix, but I just remembered the original cause of the problem. I was going from http://www.example.com/page.php to https://example.com/page.php (notice the lack of "www"). Make sure that http://www.example.com/page.php will link to https://www.example.com/page.php and http://example.com will link to https://example.com/page.php . PS, I didn't actually run these scripts so there may be a typo or two that prevents them from running properly as is.
