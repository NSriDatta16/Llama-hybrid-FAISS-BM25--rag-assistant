[site]: stackoverflow
[post_id]: 353072
[parent_id]: 353013
[tags]: 
AppSettings/ConnectionStrings will always be read from the currently running app pool. By this I mean: If I have A.exe which has a class DAL.cs . DAL.cs reads a connection string from config, and it returns "abc" as expected. I then move DAL.cs to its own project, and thus, its own assembly. I can still have it call the connection string from app.config, however, I will need to "host" the assembly in a running application, and add the connection string to that applications app config . So, I create a new app.config and specify the connection string "xyz" in it, when it runs, it runs as expected. Now, if I change the reference in the A.exe project to use the new DAL.dll , what connection string do you think it will have? "xyz" ? Nope! It will use the "abc" as it did before because that is still configured in the application configuration file for A.exe . I know this works because I used shared DAL code across many Windows and Web applications. If any of this is unclear, or does not help your problem, please let me know by commenting on this answer. Update following comment from OP By "host" I mean an application that is calling on the common code. This can be a Windows or a Web application, basically it is the application context. You will need to create entries in the configuration files for each application that uses the common code. If I misunderstood your original question (entirely possible, it's been a long day!) and you wish to centralize the configuration as well, then you would need to: Create some form of centralised storage (be it XML, DB, whatever). Enhance your common code to have default values to enable it to connect to the centralised storage. From there, the code can then configure itself, based on the information in the configuration store. Hope this helps :)
