[site]: stackoverflow
[post_id]: 2072003
[parent_id]: 2071974
[tags]: 
Use Enumerable.Average : double[] values = new[] { 1.0, 2.0, 3.14, 2.71, 9.1 }; double average = values.Where(x => x > 2.0 && x Therefore, to use this with your selection methods you should consider having those methods return IEnumerable . So, as an example: public IEnumerable GreaterThan(double[] values, double value) { for(int i = 0; i value) { yield return values[i]; } } Then: // values is double[] double average = GreaterThan(values, 2.0).Average(); You can even make the above an extension method so that it reads nicely: double average = values.GreaterThan(2.0).Average(); I would encourage you to write your filtering methods to return IEnumerable .
