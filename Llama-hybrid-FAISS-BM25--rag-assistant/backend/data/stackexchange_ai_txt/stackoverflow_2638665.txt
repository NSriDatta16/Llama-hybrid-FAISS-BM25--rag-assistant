[site]: stackoverflow
[post_id]: 2638665
[parent_id]: 2638520
[tags]: 
I agree with the recommendation of the author - use GWT for client-side logic, but still use HTML and CSS for presentation. The new UI Binder & Declarative UI patterns actually encourage you to write your HTML and CSS. Its easier for the designers, and makes your code maintainable. You may want to read GWT HTML layout conventions on SO - it explains how to intermix Widgets and plain-html/css to get advantages of both worlds. UI Binder makes it easy to use CSS using . With , you can generate CSS that is specific to that file. GWT will automatically obfuscate and optimize your CSS. Plus, if you mis-spell the css class name, it will give you a compile-time error (which is great) instead of you finding out about it when the page is deployed. Within the , you can put any valid CSS. UIBinder also has ways to include a global stylesheet. Additionally, background images in CSS can automatically be combined into sprites/data:uris for performance. To learn more, I'd recommend reading the UI Binder Guide , and then following the Contacts sample application. Its a great way to get started. Also, I'd recommend using the MVP pattern for designing your GWT application. There are several good articles on it, and the GWT Contacts Sample app is great way to learn it.
