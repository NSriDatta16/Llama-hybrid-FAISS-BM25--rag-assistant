[site]: stackoverflow
[post_id]: 5098573
[parent_id]: 5098018
[tags]: 
The easiest way to create the relationship you want is to have all of a user's details on 1 line of text. This is not a job for INI files. Your issue is how to parse strings. First of all, why do you need to save the "repeat password"? that doesn't make sense to me. Usually a UI will ask the user to repeat the password as a form of validation, but that's all it's good for. There's no benefit in storing it for later retrieval is there. I think you need to save the user's first_name, last_name, and password (3 strings). Have a look at the following piece of code. procedure SaveUserDetails(sFileName: string); var sFirstName, sLastName, sPassword: string; slUsers: TStringList; begin sFirstName := txtFirstName.Text; // these could be from TEdit controls for example sLastName := txtLastName.Text; sPassword := txtPassword.Text; slUsers := TStringList.Create; slUsers.Add(sFirstName + ',' + sLastName + ',' + sPassword); slUsers.SaveToFile(sFileName); // that has saved your stringlist to a file slUsers.Free; end; The file will look this Shane,Warne,cricket Now, how to load it... procedure LoadUserDetails(sFileName: string); var sFirstName, sLastName, sPassword: string; sTemp: string; slUsers: TStringList; iPos: integer; // string position marker we'll use to split the string in 3 begin slUsers := TStringList.Create; slUsers.LoadFromFile(sFileName); // this loads the file's contents into stringlist sTemp := slUsers[0]; if (Length(sTemp) > 0) then // just to check that there is data there begin iPos := pos(',', sTemp); // get position of first comma (our "delimiter") sFirstName := Copy(sTemp, 0, iPos-1); // firstName everything upto 1st comma sTemp := Copy(sTemp, iPos + 1, Length(sTemp)); // chop off bit we just read iPos := pos(',', sTemp); // get position of second comma sLastName := Copy(sTemp, 0, iPos-1); // LastName everything upto 2nd comma sTemp := Copy(sTemp, iPos + 1, Length(sTemp)); // chop off bit we just read sPassword := sTemp; // that's it end; slUsers.Free; end; Now... this far from "good code" but now you know at least 1 way to do your thing. Hope that helps.
