[site]: datascience
[post_id]: 23608
[parent_id]: 
[tags]: 
Classification of obfuscated text data

I am relatively new to data science and have an exercise task. This consists of the classifications of excerpts of texts. However, the texts are obfuscated such that one cannot read the words, spaces etc. But the "patterns" are preserved. I have a training set of the following form. One .txt file with the text excerpts looking like shdbcjhbjhbefbhbwhbkbehbwbwbfhwb / wbhbwtjnwkjbrfbqlenk / wjnfkjebrkbrghkbibgibib / tberbtewtwbkwtjbrkbwkbtwrbt / . . . and one .txt file with the labels of the texts looking like 1 / 4 / 11 / 0 / . . . This means that each string of symbols belongs to a certain text and one knows to which one. The task is now to set up a classifier, to train it on above training data and to test it on test data which also consists of text excerpts. My basic idea was to interpret the data as images and to set up a deep learning NN with e.g. TensorFlow. However, I am not sure about the shape of the data which is needed to feed the data to the NN. Do I have to create label-folders containing all texts with a certain class-label or is there a more direct way (so far I created vectors in R consisting of the texts and the labels)? Must the excerpts all have the same length? How do I have to manipulate the data until I can feed it to the NN?
