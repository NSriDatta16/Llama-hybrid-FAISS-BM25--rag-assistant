[site]: crossvalidated
[post_id]: 455095
[parent_id]: 
[tags]: 
Eigenvectors from Johansen Test not returning stationary time series

I'm using statsmodels.tsa.vector_ar.vecm.coint_johansen (v0.11.0, Python 3.6) implementation of the Johansen Test to test for cointegration of multiple time series, but the resulting time series constructed from the eigenvectors are not stationary despite the results passing the trace and maximum eigenvalue tests. Any thoughts? Source ## Simulate some Geometric Brownian Motion time series import numpy as np import pandas as pd np.seed(42) def Brownian(N): dt = 1./N # time step b = np.random.normal(0., 1., int(N))*np.sqrt(dt) # brownian increments W = np.cumsum(b) # brownian path return W, b def GBM(So, mu, sigma, W, T, N): t = np.linspace(0.,1.,N+1) S = [] S.append(So) for i in range(1,int(N+1)): drift = (mu - 0.5 * sigma**2) * t[i] diffusion = sigma * W[i-1] S_temp = So*np.exp(drift + diffusion) S.append(S_temp) return S, t So = [1 for n in range(5)] mu = [np.random.normal(0) for n in range(5)] sigma = [np.random.normal(0) for n in range(5)] N = int(2**6) W = Brownian(N)[0] T = 1. df = [] for n in range(5): a,t = GBM(So[n], mu[n], sigma[n], W, T, N) df.append(a) # Convert to DataFrame dat = pd.DataFrame() for n in range(5): dat[n] = df[n] dat.plot() ## Cointegration Test from statsmodels.tsa.vector_ar.vecm import coint_johansen res = coint_johansen(dat, 0, 1) print(f'Max Eig: {res.max_eig_stat[0]}, {res.max_eig_stat_crit_vals[0]}') print(f'Trace: {res.trace_stat[0]}, {res.trace_stat_crit_vals[0]}') -- [OUT] Max Eig: 90.7607428, [31.2379, 33.8777, 39.3693] Trace: 167.67532948, [65.8202, 69.8189, 77.8202] The first eigenvector's trace and maximum eigenvalue tests are significant at the 99% level. However the constructed time series is clearly not stationary: # First cointegrating vector normalized first component to 1 v1 = res.evec[:,0]/res.evec[:,0][0] keys = [x for x in dat.columns] w = pd.Series(dict(zip(keys,v1))) dat.multiply(w, axis=1).sum(axis=1).plot()
