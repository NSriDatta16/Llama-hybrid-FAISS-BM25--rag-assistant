[site]: stackoverflow
[post_id]: 3769168
[parent_id]: 3769159
[tags]: 
foreach has nothing to do with indexers . You need to declare a GetEnumerator method that returns an enumerator for the collection. (While youâ€™re at it, it may be wise to implement the IEnumerable interface as well, which provides this method.) In your particular case, you can do it easily like this: class Garage : IEnumerable { private List cars = new List (); public Car this[int i] { get { return cars[i]; } } // For IEnumerable public IEnumerator GetEnumerator() { return cars.GetEnumerator(); } // For IEnumerable IEnumerator IEnumerable.GetEnumerator() { return GetEnumerator(); } } A huge benefit of implementing the IEnumerable interface is that you can use all the LINQ extension methods, e.g. Where and Select , for example: var redCars = myGarage.Where(car => car.Color == CarColor.Red);
