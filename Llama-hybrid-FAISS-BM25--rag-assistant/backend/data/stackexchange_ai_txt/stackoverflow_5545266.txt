[site]: stackoverflow
[post_id]: 5545266
[parent_id]: 5541768
[tags]: 
Assuming Rails 3: There are two or three basic approaches to offering XMLRPC services from a rails application. The first is to use Rack middleware (gem 'rack-rpc' - https://github.com/datagraph/rack-rpc ) that supports this, which, in theory should be possible to run on the same server as an existing Rack based application, but I found the experience frustrating when I wanted to work with ActiveRecord models. I was able to get rack-rpc to respond to xml-rpc client requests by adding it to the middleware list in the application.rb config, but I did not spend the time to figure out a way to get ActiveRecord hooked up. An alternative is to use a fork of the deprecated actionwebservice feature from the rails 1.x days. As of this writing, I've found one fork that seems relatively functional on Rails 3.0.5: gem 'rubyjedi-soap4r' gem 'actionwebservice', :git => 'https://github.com/mkoentopf/actionwebservice.git' The actionwebservice feature was deprecated to encourage people to use RESTful APIs to expose web services, but if you have clients that expect to be able to send xmlrpc requests (like a dozen blogging clients that are popular out there) you'll obviously not have that option. I followed the documentation to implement an ApiController that has lines like this: class ApiController Then you need to implement an Api and a Service class. (You can simplify this if you don't need the namespace-style "metaWeblog.methodname" xml-rpc style method calls; just remove the :layered dispatching method and replace it with one of the alternatives explained in the actionwebservice docs. Your MyApi class inherits from ActionWebService::API::Base and uses methods like api_method to specify the supported xml-rpc method signatures. Your MyService inherits from ActionWebService::Base and simply implements the methods like normal ruby code. It's possible you may need/want to pass a reference to the ApiController class that you implement, which you can do in the service's initialize method.
