[site]: stackoverflow
[post_id]: 4369115
[parent_id]: 4367893
[tags]: 
Why should the .NET framework have IQueue and IStack interfaces? What would they buy? What made these types of collections get well-defined interfaces? The Base Class Libraries actually use all of the those interfaces ( IList etc): in each case, there are a bunch of other classes for which it made more sense to interact with the interface abstraction than a concrete type. Why do stacks and queues not warrant an interface? Probably because there weren't any BCL classes that needed IStack and IQueue and there were no obvious or likely use-cases for those abstractions. I realize this isn't a satisfying philosophical answer, but it looks like the framework designers were really pragmatic about what got interfaces: they made them when they needed them.
