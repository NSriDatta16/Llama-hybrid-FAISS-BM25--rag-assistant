[site]: stackoverflow
[post_id]: 5683714
[parent_id]: 5683654
[tags]: 
This is actually a bit more difficult than you'd expect. You can use an IValueConverter , but the sum won't stay up to date as you change values within the collection, as the converter doesn't see the change in individual members, only the collection itself. I wrote a sample for the Expression Code Gallery demonstrating a Collection Aggregator for WPF which uses a Blend SDK Behavior to do this. It allows you to display the sum, average, min, max, etc for values within a collection, and have it automatically stay up to date (provided the collection implements IBindingList or INotifyCollectionChanged , and the class implements INotifyPropertyChanged ). This works by actually subscribing to the collection changed events, as well as individual elements property changed events, and handling the aggregation for you.
