[site]: crossvalidated
[post_id]: 160658
[parent_id]: 
[tags]: 
Identifiability of a state space model (Dynamic Linear Model)

Take a general linear Gaussian state space model (SSM)(aka Dynamic Linear Model DLM): \begin{align} X_{t+1} &= FX_t + V_t \\ Y &= HX_t+W_t \\[10pt] V_t &\sim N(0,Q) \\ W_t &\sim N(0,R) \\ \end{align} I am interested in the unidentifiability issues related to these models: Hamilton (1994) states that ”in the absence of restrictions on F, H, Q and R, the parameters of the state-space representation are unidentified - more than one set of values for the parameters can give rise to the identical value of the likelihood function, and the data give us no guide for choosing among these” Now I realise that this representation is not unique as multiplication by any orthonormal matrix $M$ produces a new representation: \begin{align} MX_{t+1} &= MFM^{-1}M X_t + MV_t \\ Y &= HM^{-1}MX_t+W_t \end{align} This type of unidentifiability where the observed values can be produced by various orthonormal transformations of the state variables is inherent to state space models. However, I also came across another type of unidentifiability that seems to be related to the estimation method. In this case "Kalman Filtering." See the simple example starting on page 8 of this pdf . In this case there is a linear transformation of the observation equation and an offsetting one made to the variance of the state equation Do both the transformations above give rise to the same kind of identifiability issues described by Hamilton (I believe they do but want to check)? Are there other ways in which identifiability issues can manifest themselves in Linear Gaussian SSMs? Is the fix always the same find constraints or analogously (Bayesian priors) that will ensure that the final parameters are correct? Lastly this link in Matlab suggests that it is possible to build an "identifiable SSM". Unfortunately the link doesn't explain the theory. Thus: It is possible to translate any Linear Gaussian SSM into an "identifiable form"? Can someone please supply a link reference explaining how this works. It would seem at first blush that no matter what representation is used initially it would still be subject to the problems shown above?
