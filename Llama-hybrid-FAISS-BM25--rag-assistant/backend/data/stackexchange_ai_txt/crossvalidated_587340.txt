[site]: crossvalidated
[post_id]: 587340
[parent_id]: 
[tags]: 
Bootstrap multivariate time series

Given a variable y in time (in my case financial returns), I define a series of class labels encoding the sign of y : target=0 if sign(y) , else target=1 . I then try to predict the class at each time using a set of features X . I am looking into ways to augment my dataset ( data augmentation and testing for overfitting being two possible use cases). A sensible approach for bootstrapping my data is to use block bootstrap with a careful definition of "block". However, in my case that does not yield a high variability of the bootstrapped series (maybe I was overcautious in drawing y from same days within a month window). As an alternative , I am looking into MEboost as it natively "accounts" for seasonality. However, I cannot quite see how to make it work with a multivariate time series. As I understand, the algorithm samples from the empirical distribution of the data in a continuous manner. This means that the set of bootstrapped data might contain values not contained in the original set of values. If it is so, how can I go about bootstrapping in my case? Say that I ME bootstrap y, I then do not see how to modify the features in order to preserve the (unknown) relationship between them. Also ME bootstrapping the each feature separately makes no sense to me. Is it possible to apply MEboot to my problem? Side questions: Is MEboot still used? (Some critiques here ) In general, could training on bootstrapped series improve a models' prediction?
