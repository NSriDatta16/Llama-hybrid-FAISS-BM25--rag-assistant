[site]: stackoverflow
[post_id]: 5098340
[parent_id]: 
[tags]: 
Best way to pipe the output of a local() to the stdin of a remote run() command in Fabric?

Is there a simple way to pipe output from local commands to remote ones (and vice versa)? I've always just piped to a file, moved the file over, and then read it...but it seems like there could be an easier way. For simpler situations, just capturing the output and using string interpolation works: ip = local('hostname -i') run('Script was run from ip: %s' % ip) But when the output either needs escaping to be safe on the command line and/or needs to come from stdin it is a bit trickier. If the output is bash-safe, then something like run('echo "%s" | mycmd' % ip) would do what I'm looking for (which I guess implies that an equivalent question would be "is there a simple way to bash-escape strings?"), but it seems like there should be a "right way" to provide a remote stdin. Edit: To clarify with long-ish inputs there a number of potential problems with simple string interpollation: classic shell problems (eg. the output could contain "; rm -rf / ) but also (and more realistically, in my case) the output can contain quotes (both single and double). I think just doing run("echo '%s' | cmd" % output.replace("'", "'\\''") should work, but there may be edge cases that misses. As I mentioned above, this seems like the type of thing that fabric could handle more elegantly for me by directly sending a string to the run()'s stdin (though perhaps I've just been spoiled by it handling everything else so elegantly :)
