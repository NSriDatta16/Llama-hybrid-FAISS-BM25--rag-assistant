[site]: stackoverflow
[post_id]: 2362274
[parent_id]: 2329059
[tags]: 
Five or six years ago, I was stuck writing a network emulation layer for a PS2 game. I was told that all the classic behaviors of an internet connection had to be displayed; realistic loss characteristics, packet reordering, latency, rush-induced packet loss. Essentially, I was told to implement the internet in a couple weeks. I suggested just bouncing all our game traffic off a remote echo server. When I was told that it was absolutely forbidden to send development traffic out over public wires, I simply created a server that everyone pointed their PS2 devkits at that would store every packet it received and send a doppleganger (full of an id for the original packet plus a bunch of random garbage to make it the same size) out to the echo servers I ran. When the doppleganger was received, I would pass the original packet on to its original destination. Boom. Internet simulation with all the thorns in less than 8 hours. UPDATE: Given the success of the answer here, I reimplemented the game echo service a while back. It seemed that github might be a better place to stash it, so here it is : If it works for you, great! If not, let me know. I expect its current state to be shaky at best.
