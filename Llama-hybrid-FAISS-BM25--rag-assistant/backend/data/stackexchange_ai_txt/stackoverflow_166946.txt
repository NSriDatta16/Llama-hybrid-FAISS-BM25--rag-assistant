[site]: stackoverflow
[post_id]: 166946
[parent_id]: 153392
[tags]: 
Seeing the comment to the question after having given my other answer I'm puzzled about what your question is... Is it about session replication? Cluster communication? It might be better to state your problem instead of your planned solution that has problems itself. I'll state some possible problems together with quick answers: Your application is CPU/RAM intensive Profile it, optimize it, try again Buy a bigger/better server Your application is bandwidth intensive using the cheapo clustering you mentioned in your question will most likely make it worse, as the same (cloaked) channel is used for inter-server-communication as for client-server communication You might be able to separate different kinds of bandwidth e.g. by having dynamic content served from a different server than static content: No need for inter-server-communication here Your application is storage intensive get a bigger server go for dedicated hosting and fit in as many spinning disks as you need see if other models (like amazons S3 storage) might work for you) Your application is likely to be slashdotted determine which of the above factors (or others) are determining the limits of your application, fix that. You just need session replication? Tomcats SessionManager interface is small and can easily be implemented/extended yourself. Use it for any session replication you like. See the StandardManager documentation and implementation for more information More ideas look at more flexible setups like EC2 (amazon), googles offerings or other cloud computing setups. Make use of their own cloud-storage and inter-server-communication-facilities. Be careful to not depend too much on this infrastructure. I certainly have forgotten something, but this might provide some starting point. Be more concrete about the nature of your underlying problem to get better answers :)
