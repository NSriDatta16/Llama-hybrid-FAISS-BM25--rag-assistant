[site]: stackoverflow
[post_id]: 472344
[parent_id]: 471021
[tags]: 
The collation has nothing to do with the storage. You need to set the charset to determine the storage encoding. The collation governs how comparison and sorting should happen. The collation must be charset aware, but otherwise it has nothing to do with the charset. To answer your question, you can use iconv to translitter the text, and then compare it. For example: function compare($s1, $s2) { return strcmp( iconv('UTF-8', 'ISO-8859-1//TRANSLIT', $s1), iconv('UTF-8', 'ISO-8859-1//TRANSLIT', $s2)); } This is basically what MySql will do for you, although it's probably faster and it may have a slightly different collation-table than ISO-8859-1//TRANSLIT . Not entirely sure about that. Would probably be easier to use the database though, as others have already suggested.
