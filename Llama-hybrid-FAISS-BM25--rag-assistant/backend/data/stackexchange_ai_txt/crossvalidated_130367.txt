[site]: crossvalidated
[post_id]: 130367
[parent_id]: 
[tags]: 
Decompose a time series into superposition of step functions?

Background I have time series data comprising hourly observations of a sensor's readings over a period of almost a year. The sensor records an environment whose baseline measurements should have daily cyclicality, and which are generated by a sum of several 'steppy' (i.e. on, off) processes. However, there is a lot of other stuff going on in the environment, and the sensor captures that as well. The 'other stuff' often has a much larger amplitude than the underlying cyclical data. A final caveat - the 'other stuff' may actually have roughly daily cyclicality, but if so its period is extremely noisy - i.e. the 'other stuff' (say) starts at 1200 on average, and ends at 1500 on average, but the start and end points day to day vary widely. Question How can I uncover the actual cyclical step processes underlying this data? (main question) Can I write a sum-of-squared-error based optimisation that will try and represent this data as a superposition of step functions? I'm thinking something like multiple linear regression except the IDVs encode step functions with different amplitudes and starting times? (secondary question) Some approaches that either havent worked, or that I dont think will work Fourier analysis. I've run DFT, and tried saving either the largest amplitude frequencies, or the ones whose periods are between 0.8 and 1 days. However, this doesn't successfully filter out the 'other stuff' - in fact, because the base cyclical process is steppy, retaining only a few frequencies cant really capture this adequately, and because the SNR ratio is low, the reconstructed series can be quite close to the 'single-day-average' of the noise process See 2. above in Questions. I don't think this will work. Two appoaches: 1) pretend I'm doing simple linear regression, with one IDVs that encode every possible step function (e.g if a day was represented by only 4 time points, {1, 1, 0, 0}, {0, 0, 1, 1}, ... etc (likely to be overparameterized) 2) or write a sum of squares cost function where my estimator is a sum over S step functions, parameterized by an amplitude and a step time. I'm not sure that if I optimise my cost function against such an esimator that it will converge to a global minimum, especially if the number of steps, S, is allowed to vary. Would really appreciate some insight here! Thanks
