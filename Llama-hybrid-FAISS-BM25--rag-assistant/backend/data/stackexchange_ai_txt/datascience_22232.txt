[site]: datascience
[post_id]: 22232
[parent_id]: 22228
[tags]: 
I can tell you how I would do it, but there is almost certainly a faster implementation. Assuming you start with, for each point in $L$, the distances to each warehouse, $w \in W$. These distances should be calculated by the haversine formula . You can find the distance to the $N$th closest point in $w$ by using the quickselect algorithm. This is very similar to the quicksort algorithm but only sorting the parts that you care about. The average case for quickselect is $O(N)$ but you'll need to repeat for each $l \in L$. Note that, since the square is monotonic for positive distances, you only need to minimise $$\sum_{l \in L} maximum_{w \in W}(distance(l, w)) $$ I found a handy implementation of the quickselect algorithm on KoderDojo
