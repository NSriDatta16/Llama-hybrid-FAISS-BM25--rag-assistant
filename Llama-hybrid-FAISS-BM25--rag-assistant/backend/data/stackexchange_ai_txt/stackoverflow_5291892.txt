[site]: stackoverflow
[post_id]: 5291892
[parent_id]: 5291780
[tags]: 
It depends on your integers a lot. The point of the load factor is to "balance" the hash function: with a "perfect" hash function, your load factor could be 1.0. However, if the integer values in question show any sort of regularity, this may result in more than average hash collisions, which decrease the efficiency of the map. Then a lower load factor may help to spread the values a bit better (over a larger range), thus reduce hash collisions. I wouldn't worry much about the creation time and extra space taken by using a lower load factor - I doubt you would ever notice the difference (unless you are on a platform with limited hardware, or have several millions of integers in your map - then the size difference may become noticeable, roughly on the range of a few extra megabytes per million values).
