[site]: stackoverflow
[post_id]: 3514279
[parent_id]: 3473309
[tags]: 
Four questions, four answers I am, though family has to come first! Plus others are involved in looking at the general issue with synthesizing methods in a compiler plugin. If so, it will most likely be in a different form, perhaps without using annotations. I don't know of any equivalent plugins, although one of the Scala GSOC candidate projects was based partly on my autoproxy code. There is, however, one very clean solution that will work in most cases and doesn't need a compiler plugin at all: You define an implicit conversion from FooProxy to Foo that simply returns the self member; this will get you most of the way there. The main issues with the approach are that it'll make life harder if you need to use your code from Java, it may be less efficient in terms of speed/memory, and it's another imlicit that you have to be aware of. The frustrating part is that almost all of the necessary logic is already available in the compiler, and it's used for mixins, so there really should be an elegant way of handling the task.
