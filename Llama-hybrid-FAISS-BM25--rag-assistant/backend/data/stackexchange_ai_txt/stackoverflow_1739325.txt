[site]: stackoverflow
[post_id]: 1739325
[parent_id]: 1736305
[tags]: 
To give you a feel for the scope of the problem have a look at this table of keycodes. Omermuhammed's approach is a good one if you are able to vary the JAD content depending on the target handset, for example by looking at the user-agent header field in a download request from an on-handset web browser. If you cannot identify the handset until the app has been delivered, you could look at something like this that basically determines the host handset at run time and sets the keycode mappings appropriately. Looks cumbersome to me though. Lastly, if your application uses a subset of codes you may be able to get away with hard-coded lists - for some codes there are no or few collisions (LEFT is usually either -3 or -61, and those codes usually don't mean something else). Again, not an ideal approach. Final suggested resources for you: wurfl or user agent strings, and the J2MEPolish devices database for device keycodes.
