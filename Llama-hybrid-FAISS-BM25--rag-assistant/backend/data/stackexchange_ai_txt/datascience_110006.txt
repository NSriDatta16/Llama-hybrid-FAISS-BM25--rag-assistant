[site]: datascience
[post_id]: 110006
[parent_id]: 
[tags]: 
Why we need to 'train word2vec' when word2vec itself is said to be 'pretrained'?

I get really confused on why we need to 'train word2vec' when word2vec itself is said to be 'pretrained'? I searched for word2vec pretrained embedding, thinking i can get a mapping table directly mapping my vocab on my dataset to a pretrained embedding but to no avail. Instead, what I only find is how we literally train our own: Word2Vec(sentences=common_texts, vector_size=100, window=5, min_count=1, workers=4) But I'm confused: isn't word2vec already pretrained? Why do we need to 'train' it again? If it's pretrained, then what do we modify in the model (or specifically, which part) with our new 'training'? And how does our now 'training' differ from its 'pretraining'? TIA. Which type of word embedding are truly 'pretrained' and we can just use, for instance, model['word'] and get its corresponding embedding?
