[site]: stackoverflow
[post_id]: 4599420
[parent_id]: 
[tags]: 
How could I simplify this SQL query in Oracle?

After searching and reading a little bit I came up with the following SQL query for my application: SELECT ROUND(AVG(CASE WHEN gender = 'M' THEN rating END), 1) avgAllM, COUNT(CASE WHEN gender = 'M' THEN rating END) countAllM, ROUND(AVG(CASE WHEN gender = 'F' THEN rating END), 1) avgAllF, COUNT(CASE WHEN gender = 'F' THEN rating END) countAllF, ROUND(AVG(CASE WHEN gender = 'M' AND UserAge(birth_date) And I'm wondering how can I simplify this, if possible. The birth_date field is of type DATE and UserAge is a function to calculate the age from that date field. The table structures are as follows: [ACCOUNTS] aid(PK), birth_date, gender [MOVIE_RATINGS] mid(PK), aid(PK,FK), rating I'm looking for two things: General simplifications to the code above that more experienced users know about that I don't. I'm doing this in PHP and for each record I'll have an associative array with all those variables. I'm looking for a way to group them into a multidimensional array, so the PHP code is easier to read. Of course I don't want to do this in PHP itself, it would be pointless. For instance, something like this: $info[0]['avgAllM'] $info[0]['countAllM'] $info[1]['avgAllF'] $info[1]['countAllF'] $info[2]['avgU18M'] $info[2]['countU18M'] $info[3]['avgU18F'] $info[3]['countU18F'] Instead of: $info['avgAllM'] $info['countAllM'] $info['avgAllF'] $info['countAllF'] $info['avgU18M'] $info['countU18M'] $info['avgU18F'] $info['countU18F'] I don't even know if this is possible, so I'm really wondering if it is and how it can be done. Why I want all this? Well, the SQL query above is just a fragment of the complete SQL I need to do. I haven't done it yet because before doing all the work, I want to know if there's a more compact SQL query to achieve the same result. Basically I'll add a few more lines like the ones above but with different conditions, specially on the date.
