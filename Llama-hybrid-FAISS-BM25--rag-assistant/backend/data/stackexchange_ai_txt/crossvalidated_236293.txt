[site]: crossvalidated
[post_id]: 236293
[parent_id]: 69952
[tags]: 
to start with, for 3k instances, 6 classes is an overkill. Are you sure you need 6 ? i have had experiences where i used 40k+ records with only 4 labels/classes and ended up with rather similar 30-40% accuracy. But in any case it also depends on how well your selected attributes unequivocally ID different records. Have you tried bagging / boosting and stacking techniques ? At times (again depends on the combination of models) the accuracy improves (i particularly find ADABoost to be quite a smart algo where it iteratively trains estimators on misclassified labels) accuracy is somewhat misleading/overarching , please use f-score or precision / recall based on the problem set you are solving for. It also highlights which classes are creating problems for your accuracies. also please read up on algos before you try each one on your dataset. For instance SVM's have this issue where they are great at binary classification but for multi class they use either a one vs all or one vs one while labelling. Not implying that they don't work but they have issues like selecting the right C values and the kernels (that are essential for multiclass/hi D problems).. you could consider neural nets and simple decision trees (again here ensure the max depth is limited) as well ..... hope this helps
