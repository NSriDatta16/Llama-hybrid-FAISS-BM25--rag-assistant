[site]: stackoverflow
[post_id]: 5496049
[parent_id]: 5494506
[tags]: 
The basic structure per hexagon is: * hex color (with outline obviously) (or a bitmap picture) blitting anyone! * TextField with a number in it. (max 2 digits) I suppose you don't need to store all 250K TextFields and bitmaps, since they're need to exist only on screen. Pack this data into small number of bytes - max 2 digits is 7 bits, add color id's from your palette (or 24 bits if you need truecolor) and bitmap id's. If you make structures of same size, you can write them into ByteArray. This will let you get rid of 250K object references and prevents possible memory fragmentation. Then you only need to create pack/unpack functions for those bytes into some usable objects (don't forget object pools) and do the arythmetics to get them from ByteArray right. As others noted, 250K cells aren't much if you pack cell data into pair of int's.
