[site]: stackoverflow
[post_id]: 4977981
[parent_id]: 4977641
[tags]: 
It also may move the user to a few other individual activities but each one has a back button that takes them back to SongList and is implemented with moveTaskToBack(true); Please allow normal BACK button processing (which does finish() , not moveTaskToBack() ) to occur, unless you have a very good reason to do otherwise. Statistically speaking, it is unlikely that you have a very good reason to do otherwise. My question is how do I know what is happening with the state variables in SongList? What "state variables in SongList "? If you are referring to the Intent extras for the Intent that started this copy of SongList , they should still be there, AFAIK. Since none of the back buttons actually carry the state information, it seems if the user moves on to some of these other activities, when they hit back, it may either not take them back to SongList, or have lost all the state information and as such work improperly. It is entirely possible that your messed-up BACK handling (see my opening paragraph) may be causing you difficulty. Normally, Intent extras are not a problem with BACK button processing. If you have state that is beyond what is in those extras, you will need to use onSaveInstanceState() and onRestoreInstanceState() to manage that, in case Android destroys SongList to free up memory and to handle configuration changes (screen rotations, being placed in a desk dock, etc.).
