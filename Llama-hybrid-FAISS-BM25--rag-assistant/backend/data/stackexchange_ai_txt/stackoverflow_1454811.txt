[site]: stackoverflow
[post_id]: 1454811
[parent_id]: 1454612
[tags]: 
IMHO, line by line is the best way. I've ported several C++ style projects to a managed language and I've tried various approaches; translators, line by line, scripting, etc ... Over time I've found the most effective way is to do it line by line even though it seems like the slowest way at first. Too much is lost in a translator. No translator is perfect and you end up spending a lot of time fixing up the translated code. Also, translated code as a rule is ugly and tends to be less readable than hand crafted code. So the result is a fixed up, not very pretty code base. A couple of tips I have on line by line Start by defining all of the leaf types For every type that has a non-trivial (freeing memory) destructor, implement IDisposable Turn on the FxCop rule that checks for lack of Dispose calls to catch all of the places use used stack based RAII and missed it Pay very close attention to the uses of byref in C++.
