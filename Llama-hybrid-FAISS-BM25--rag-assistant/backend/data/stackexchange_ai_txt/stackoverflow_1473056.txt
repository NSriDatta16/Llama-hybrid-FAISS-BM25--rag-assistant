[site]: stackoverflow
[post_id]: 1473056
[parent_id]: 1472898
[tags]: 
If you want your data to be accessible to other Android applications, then the recommended way is to write a Content Provider . If, on the other hand you want your data to be used in non-android applications, you will need to "export" it. This you have to code on your own. I can think of three options right now: Create XML files Unfortunately, Android does not include all that is necessary to conveniently create XML files. Most notably, the javax.xml.transform is not available, and adding platform classes is not recommened. That means you will have to write it out on your own "transform" class Create JSON files JSON is well supported by the Android API. See here and here Create Java serialized files As long as your objects implement the interface "Serializable", then they can easily be written out to files. I've never needed to do that myself, but it should be straightforward, and examples should be available on the net. (As an example, Google came up with this mini-tutorial ) When you store your files privately, then consider using openFileInput and openFileOutput . If you want to store explicitly on the SD-Card, you should use getExternalStorageDirectory() to retrieve the root folder. My personal recommendation would be to use JSON files. It's a simple format which does well for most cases and it's widely available. Apart from that de/serialization is dead-simple.
