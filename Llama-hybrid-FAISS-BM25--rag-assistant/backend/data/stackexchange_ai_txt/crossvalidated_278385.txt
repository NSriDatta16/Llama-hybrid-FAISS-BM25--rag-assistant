[site]: crossvalidated
[post_id]: 278385
[parent_id]: 
[tags]: 
Machine Learning that improves our ML algorithms?

I know very little about ML, all I know is what I read on Flipboard or watch on youtube. So from what I know I think ML is a series of algorithms based on statistics and evolution, such that they try to optimize some utility function. I've read there are many algorithms, least squares, k-neighbours, neural networks etc. The only one I've studied so far is the least squares. I've seen videos where people use neural networks algorithms (which work similar to our brain/evolution I guess, trial and error) to let the computer find its own patterns and so solve a problem. (For example I saw a guy using neural networks to teach a computer to win at Super Mario. The computer made up its own strategies and was really good) So here's my (ignorant probably) question: Let's call Algorithms of the first type the main algorithms/methods we are using. So for example if we use neural networks to let a machine find its own algorithms to solve Super Mario, I will call neural network algorithm of the first type and the algorithms that the machine creates algorithms of the second type. So... is it not possible to programme a ML algorithm (based on algorithms of the first type, or also not!!) Such that we give it loads of examples of usage of algorithms of the first type, and their outcome, so that the machine can create ML algorithms for other machines to use as ML algorithms? I hope this question makes sense, basically I'm just curious to know whether we can use ML to create an algorithm that can create better ML algorithms (or even just use our owns, but better).
