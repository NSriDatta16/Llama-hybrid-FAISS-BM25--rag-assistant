[site]: stackoverflow
[post_id]: 4872527
[parent_id]: 
[tags]: 
KVO-related EXC_BAD_ACCESS exception on position property of CALayer

I'm having some problems debugging what appears to be a KVO-related EXC_BAD_ACCESS exception on 10.6.6. I've set up an observer on the position property of a CALayer subclass. This particular layer is the content layer for a custom CALayer scroll layer. Basically, when the user drags the content layer around, I would like some KVO notifications to occur on the position changes for the layer so that I can update some custom CALayer scrollers. The above all works fine. Now, I've added a rubber-band effect Ã  la iOS, so that when the user scrolls passed the limits of the content area, some resistance is encountered, and when the user lets go of the mouse, the content layer snaps back to the limit position in both x and y dimensions. Vertical snap-back works like a charm. However, for some bizarre reason, any amount of horizontal snap-back cause the above exception to occur. What I don't understand is why precisely the same code path (vertical snap-back vs. horizontal-snap back) would cause these two situations to behave differently? Here is the stack trace: 0 0x7fff810bbc2b in CALayerTransactionFlagsLocation_ 1 0x7fff810bbe00 in CALayerMark 2 0x7fff810bd394 in propertyDidChange 3 0x7fff810bcbff in endChange 4 0x7fff810bc9f3 in -[CALayer setPosition:] 5 0x100038578 in -[MRContextualScrollLayer scrollDidEnd] at MRContextualScrollLayer.m:280 ... scrollDidEnd is the method that is called when the user let's go of the mouse, and a snap-back calculation is performed to determine how to reposition the content layer for the snap-back effect. I've tried turning on NSZombieEnabled by setting the environment variable in the arguments of the executable in Xcode, but it has no effect, i.e., no additional information is logged. This leads me to believe that the problem is not a memory over-release issue, where an object is being accessed that shouldn't be. The final line in the scrollDidEnd method that results in the KVO notification getting posted (which then results in the crash) is simply: _contentLayer.position = CGPointMake(_contentLayer.position.x + snapBackOffset.x, _contentLayer.position.y + snapBackOffset.y); Does anyone have any ideas or helpful hints?
