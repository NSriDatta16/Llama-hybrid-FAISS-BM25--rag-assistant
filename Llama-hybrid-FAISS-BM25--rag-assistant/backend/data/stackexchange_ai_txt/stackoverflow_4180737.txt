[site]: stackoverflow
[post_id]: 4180737
[parent_id]: 4180640
[tags]: 
As far as I know, the .NET memory model doesn't guarantee that the changes of a variable made in one thread will be visible in another thread. You need a memory barrier there. The simplest (though not the most efficient) way to organize that is by using lock or Interlocked methods. By the way, busy waiting is not the best method to achieve your goal. Maybe you'd like to switch to the producer-consumer model with appropriate condition variable ( Monitor s in C# parlance) usage?
