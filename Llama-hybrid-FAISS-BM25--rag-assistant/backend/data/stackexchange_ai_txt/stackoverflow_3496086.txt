[site]: stackoverflow
[post_id]: 3496086
[parent_id]: 3268657
[tags]: 
It's hard to tell what the best solution is. But we have a scenario that's nearly the same. RealTime: For realtime data updating, we are using WebServices, since in our case, the two different databases belongs to distinct projects. So every project offers a WebService which can be used for data retrieval and data update. That has the advantage, that the project must not take care for database structure changes as long the webservice interface does not change. Static Data: Static data (e.g. employees) will be mirrored because for faster access. For that huge amount of data we are using flat files for the nightly update. In case of static data I think it's important to explicit define data owners. For every piece of data it should be clear which database has the original data, and which database only has shadow copies for faster access. So Static data is readonly in the shadow database, or only updateable through designated WebServices.
