[site]: stackoverflow
[post_id]: 2450755
[parent_id]: 2444263
[tags]: 
I believe you are using symfony 1.0 and thus Propel 1.2... Whilst the methods already described in the comments talk about alternative methods, there is a direct way to at least solve your problem: add this function to your ArticlePeer class: public static function getTaggedArticles() { $c = new Criteria(); //some filters here, e.g. LIMIT or Criteria::IN array $ahts = ArticleHasTagPeer::doSelectJoinAll($c); $articles = array(); foreach($ahts as $aht) { if(!isset($articles[$aht->getArticleId()])) { $articles[$aht->getArticleId()] = $aht->getArticle(); } $articles[$aht->getArticleId()]->addTag($aht->getTag()); } return $articles; } where $ahts is short for $article_has_tags . Create a simple array of tags in your Article class ( protected array $collTags ) along with the addTag() method, if they don't already exist to facilitate this. This then only executes one SQL query, but consider seriously that without the filter I mention you are potentially hydrating hundreds of objects unnecessarily, and that is a significant performance hit. You may want to research how to hydrate based only on a doSelectRS() call - inspect your BlahPeer classes for how their JOIN methods work, and then this link for how to write custom JOIN methods. Either way, the method builds a unique array of articles with the ArticleId as the key - if you need a different sort order, you can either sort this array again or use a different array key to organise the collection as you build it.
