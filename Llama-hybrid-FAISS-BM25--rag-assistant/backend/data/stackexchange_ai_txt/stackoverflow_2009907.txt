[site]: stackoverflow
[post_id]: 2009907
[parent_id]: 2009831
[tags]: 
Take a care: a.pl returns a list with an even number of elements, not a hash. When you then assign such a list to a hash variable, the hash will be built with the elements at the even indices as keys and the elements at the odd indices as values. [EDIT: That was how I always saw the matter, but sub { ... %hash } actually behaves a bit differently than sub { ... @list } . ] For the same reason, building a hash, the way you describe, is as simple as: my %hash = map { $_ => 1 } qw(hi bi no th xc ul 8e r); My personal rule of thumb is to avoid references unless I really need them (e.g. nested structures, or when you really need to pass around a reference to the same thing ). EDIT: (I can't click the "add comment" link anymore?! Using mousekeys here...) I thought about it a little and I think passing around hash refs is probably better after all, due to the way we use a hash. The paragraph above still holds for array refs though. Thanks for your comments Schwern and Ether.
