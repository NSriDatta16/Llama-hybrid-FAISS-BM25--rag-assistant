[site]: stackoverflow
[post_id]: 5700684
[parent_id]: 
[tags]: 
Storing ids in a MySQL-Link-Table

I have a table "link_tabl" in which I want to link three other tables by id. So in every row I have a triplets (id_1, id_2, id_3). I could create for every element of the triplet a column and everything would be fine. But I want more: =) I need to respect one more "dimension". There is an Algorthm who creates the triplets (the linkings between the tables). The algorithm sometimes outputs different linkings. Example: table_person represents a person. table_task represents a task. table_loc re√ºpresents a location. So a triplet of ids (p, t, l) means: A certain person did something at some location. The tuple (person, task) are not changed by the algorithm. They are given. The algorithm outputs for a tuple (p,t) a location l. But sometimes the algorithm determines different locations for such a tuple. I want to store in a table the last 10 triplets for every tuple (author, task). What would be the best approach for that? I thought of something like: IF there is a tuple (p,t) ALREADY stored in link_table ADD the id of location into the next free slot (column) of the row. If there are already 10 values (all columns are full) delete the first one, move every value from column i to column i-1 and store the new value in the last column. ELSE add a new row. But I don't know if this is a good approach and if it is, how to realise that... Own partial solution I figured out, that I could make two columns. Onw which stores the author id. One which stores the task id. And by ... UNIQUE INDEX (auth_id, task_id) ... I could index them. So now I just have to figure out how to move values from column i to i-1 elegantly. =) Kind regards Aufwind
