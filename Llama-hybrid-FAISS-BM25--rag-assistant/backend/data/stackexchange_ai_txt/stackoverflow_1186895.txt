[site]: stackoverflow
[post_id]: 1186895
[parent_id]: 1186708
[tags]: 
With any method that decompresses a lossy compressed image, rotates it and lossy compresses it again (even with same parameter), you will get a loss of quality. During the lossy decompression, you only get an approximation of the lossy compressed image (remember compression is defined in term of PSNR, so another implementation may decompress the same image slightly differently). Same goes for the re-compression, unless you take exactly the same lossy compressor and the same parameters, it is impossible to recompress the image leading to the same quantized DCT values. The JPEG format compresses color information in squares of 2x2 pixels by getting an average color to represent all four pixels, so if your image width and height are divisible by two you will lose less quality as most of the information removed in the compression is information that was interpolated in the decompression. Likewise the brightness information is compressed in squares of 8x8 pixels, so if your width and hight are divisable by eight, the grid will align after rotating the image and you will lose less actual information. To make a lossless rotation you have to use a completely different method, reading the JPEG file and rearranging and rotating each square of information (quantized DCT values) so that it forms the rotated image without decompressing and recompressing it (Entropy Encoding is a lossless mechanism which can safely be round-tripped).
