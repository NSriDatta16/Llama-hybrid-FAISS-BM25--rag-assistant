[site]: stackoverflow
[post_id]: 4931760
[parent_id]: 
[tags]: 
Parsing sections of HTML in c#

I need to parse sections from a string of HTML. For example: Lorem ipsum dolor sit amet, consectetur adipiscing elit. [section=quote] Mauris at turpis nec dolor bibendum sollicitudin ac quis neque. [/section] Parsing the quote section should return: Mauris at turpis nec dolor bibendum sollicitudin ac quis neque. Currently I'm using a regular expression to grab the content inside [section=quote]...[/section], but since the sections are entered using a WYSIWYG editor, the section tags themselves get wrapped in a paragraph tag, so the parsed result is: Mauris at turpis nec dolor bibendum sollicitudin ac quis neque. The Regular Expression I'm using currently is: \[section=(.+?)\](.+?)\[/section\] And I'm also doing some additional cleanup prior to parsing the sections: protected string CleanHtml(string input) { // remove whitespace input = Regex.Replace(input, @"\s*( ]+>)\s*", "$1", RegexOptions.Singleline); // remove empty p elements input = Regex.Replace(input, @" | \s* ", string.Empty); return input; } Can anyone provide a regular expression that would achieve what I am looking for or am I wasting my time trying to do this with Regex? I've seen references to the Html Agility Pack - would this be better for something like this? [Update] Thanks to Oscar I have used a combination of the HTML Agility pack and Regex to parse the sections. It still needs a bit of refining but it's nearly there. public void ParseSections(string content) { this.SourceContent = content; this.NonSectionedContent = content; content = CleanHtml(content); if (!sectionRegex.IsMatch(content)) return; var doc = new HtmlDocument(); doc.LoadHtml(content); bool flag = false; string sectionName = string.Empty; var sectionContent = new StringBuilder(); var unsectioned = new StringBuilder(); foreach (var n in doc.DocumentNode.SelectNodes("//p")) { if (startSectionRegex.IsMatch(n.InnerText)) { flag = true; sectionName = startSectionRegex.Match(n.InnerText).Groups[1].Value.ToLowerInvariant(); continue; } if (endSectionRegex.IsMatch(n.InnerText)) { flag = false; this.Sections.Add(sectionName, sectionContent.ToString()); sectionContent.Clear(); continue; } if (flag) sectionContent.Append(n.OuterHtml); else unsectioned.Append(n.OuterHtml); } this.NonSectionedContent = unsectioned.ToString(); }
