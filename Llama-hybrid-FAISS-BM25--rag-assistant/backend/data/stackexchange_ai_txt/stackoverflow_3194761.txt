[site]: stackoverflow
[post_id]: 3194761
[parent_id]: 3194346
[tags]: 
A callback or upcall is an invocation of a method in a higher layer that the caller. Particularly in procedural programming we typically think of higher layer calling into lower layers. Application code calling library code, and finer stratifications. A callback reverses the raltionship, by having a reference to the method passed to the lower layer. In Java this is typically implemented by implementing an interface, as the language does not (yet) have a concept of a lone method reference - it's all objects with runtime classes. Often these will be implemented as anonymous inner classes. On the other hand it might be outer classes perhaps with some other configuration, such as servlets and applets. The callback may be synchronous all asynchronous. Synchronous callbacks are called back during a single execution of a lower layer method, for instance as in the Execute Around Idiom . They may be called back later as in AWT/Swing events (same thread) or say java.util.concurrent.ExecutorService (different threads).
