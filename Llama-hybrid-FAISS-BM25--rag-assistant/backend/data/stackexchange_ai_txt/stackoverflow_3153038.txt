[site]: stackoverflow
[post_id]: 3153038
[parent_id]: 3152916
[tags]: 
Pages are classes and as any class they can grow unwieldy. When you come to the stage where code is heavily coupled, it kind-of depends on how this coupling shows whether or not you should refactor. If the code is clear, concise and easy to follow, it's ok to leave it as it is. But if its hard to follow, if you cannot explain it to a co-worker in a few minutes or you think you won't understand it yourself in half a year than it's eligible for refactoring. The Law of Demeter (light coupling) shouldn't only be applied in inter-class relationships, but also in inter-method relationships. This is often overlooked or underestimated. But sometimes too much refactoring leads to another extreme: too little coupling can become unreadable, too (just as having too many small methods or too many big ones). I usually ask myself the question: does the code read like a book with clear chapters and storyline, or do I have to read each paragraph twice, or worse, turn back pages to understand it?
