[site]: stackoverflow
[post_id]: 3127810
[parent_id]: 3127174
[tags]: 
I've fossicked around a bit more, and I've worked out a tentative solution. I'm not completely happy with it because it involves modifying the source, whereas I was actually looking for a piped solution, but it seems that g++.exe only accepts command line args (please correct me if I'm wrong). My "solution" is a bit rough-and-ready, but it works, and is certainly better (for me) than any other viable solution I've come across (which is none!) It requires due attention be paid to your editor's "File has been externally modified" message-box (if the file is being edited), but in fact, the BOM is still in the editor, so it is somewhat of a moot point. It is a simple command line hack. I'd prefer a more-integrated option, but here is this one (and it works): In Codeblocks, go to: Settings -> Compiler and Debugger -> Other settings -> [Advanced options] -> Command line macro: Make these mods to the command line. They should all be on a single line (of course), but for clarity I've seperated them out: cmd /c DropTheBOM.exe $file & $compiler $options $includes -c $file -o $object // (use your compiler cmdline) & MakeTheBOM.exe $file // Write your own utils, or try here: http://code.google.com/p/utf-bom-utils/ PS: #include files are not stripiped of their BOM (if they have one).. A simple BOM y/n arg switch for the routine which #includes these files would solve this issue quite simply... (but it is only a Windows problem... maybe thats why it hasn't been catered for... or has it? Does anyone know?
