[site]: stackoverflow
[post_id]: 2826267
[parent_id]: 2813743
[tags]: 
Thanks for all the suggestions! Just in case it will inspire anyone to come up with a solution to the problem: below is a simple HTML page written in our DSL Wing Beats. The span is a child of the body. This is not valid HTML. It would be nice if it didn't compile. let page = e.Html [ e.Head [ e.Title & "A little page" ] e.Body [ e.Span & "I'm not allowed here! Because I'm not a block element." ] ] Or are there other ways to check it, that we have not thought about? We're pragmatic! Every possible way is worth investigating. One of the major goals with Wing Beats is to make it act like an (X)Html expert system, that guides the programmer. We want to be sure a programmer only produces invalid (X)Html if he chooses to, not because of lacking knowledge or careless mistakes. We think we have a solution for statically checking the attributes. It looks like this: module a = type ImgAttributes = { Src : string; Alt : string; (* and so forth *) } let Img = { Src = ""; Alt = ""; (* and so forth *) } let link = e.Img { a.Img with Src = "image.jpg"; Alt = "An example image" }; It has its pros and cons, but it should work. Well, if anyone comes up with anything, let us know!
