[site]: stackoverflow
[post_id]: 4097344
[parent_id]: 4096605
[tags]: 
If by "stealing" you mean getting some content from your website (using HTTP GET), that's more or less the same problem as hot-linking . You could have some basic protection technique using the HTTP Referer header (it can be worked around, but it works in most cases). The other problem you have (making sure the requests come from your application) have to do with CSRF (Cross-Site Request Forgery). There are various protection mechanisms against this, mostly based on embedding tokens in forms for example. You could potentially combine the two approaches, although the real protection against getting the content would come from user authentication (otherwise, the other site could also get the page from which you're delivering those tokens and proxy it). (In addition, techniques that rely on remembering the IP address would probably not work well in the whole web architecture: it might cause problems if you get a pool of proxy servers or if the client is a mobile device that may change IP address between various requests, which would be perfectly legitimate.)
