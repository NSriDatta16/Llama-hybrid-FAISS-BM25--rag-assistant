[site]: stackoverflow
[post_id]: 5652049
[parent_id]: 5651770
[tags]: 
A piece of data that should only be represented once (like "my current location", of which you can have only one) should be someplace that can only exist once, like a singleton. You already have one perfectly good singleton that you're already using. There are those who will disagree with me on this (and God knows they've got good reasons to), but for this sort of data I don't have the first problem keeping it all in my App Delegate. When the app launches, in the App Delegate, I'll fire up a CLLocationManager with the App Delegate itself as the location manager's delegate. I'll keep the returned CLLocation as a named property of the delegate (say "currentLocation"), and overwrite it as often as I get updates from the locationManager. Then in my various view controllers I can say: MyAppDelegate *del = (MyAppDelegate *)[UIApplication sharedApplication].delegate; CLLocation *current = del.currentLocation; This way all your location getting/management/storage happens in one place that you can get to from anywhere in your app, and it keeps everything nice and clean EDIT: In answer to the question "By key-value observing, do you mean notifications", the answer is NO. They're completely different things. In any of your view controllers--probably in viewDidLoad--you can say: MyAppDelegate *del = (MyAppDelegate *)[UIApplication sharedApplication].delegate; [del addObserver:self forKeyPath:@"currentLocation" options:0 context:nil]; And then implement: - (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context { MyAppDelegate *del = (MyAppDelegate *)object; CLLocation *hereIAm = del.currentLocation; // and then do whatever with that } You got a bunch of details about the change that just happened on that key in the parameters of that method, but it's probably simpler just to reach back up to the delegate and snatch out the value you're looking for. Probably want to remove that observer in viewDidUnload: MyAppDelegate *del = (MyAppDelegate *)[UIApplication sharedApplication].delegate; [del removeObserver:self forKeyPath:@"currentLocation"];
