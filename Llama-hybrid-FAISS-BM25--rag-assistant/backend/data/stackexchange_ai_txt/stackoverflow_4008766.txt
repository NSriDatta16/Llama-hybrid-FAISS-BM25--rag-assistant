[site]: stackoverflow
[post_id]: 4008766
[parent_id]: 
[tags]: 
Howto move from object based language to server side Node.js Javascript for big projects?

I've decided to get used to using Javascript as my server sided (I'm using Node.js) language to setup a webserver, create server deamons and a lot more. This is a rather big project, which means that I have to get used to the language and get myself an optimal setup before actually starting to avoid overhead and unneeded hassle. I have been looking for sources that'd explain the basics of functional programming in big projects. Unfortunately, most sources talk only about basic Javascript meant for simple tricks in a browser. Two helpful links that explained how object creation works in Javascript were http://howtonode.org/object-graphs and http://howtonode.org/object-graphs-2 . In the end, it seems most wise to create an object like: function MyObject(constructorMemberOne, constructorMemberTwo) { this.constructorMemberOne = constructorMemberOne; this.constructorMemberTwo = constructorMembertwo; this.doSomething = function doSomething() { // } } Now, I'm looking for a complete Javascript language reference. So far, https://developer.mozilla.org/en/JavaScript/Reference seems to be most complete. Q1: is this the recommended ECMAScript language reference? I'm asking mostly because it's sourced by a company that's mostly working in the browser industry, yet Javascript is not just there for browsers -- maybe there are sources that I'm unaware of. Secondly, I'm used to creating a new file for every class I create where the file name represents the name of the class. Q2: Is this recommended practice in Javascript (V8, Node.js) too? How would one "import" this class? This "importing" leads me to my confusingness about Node.js's "require". I know it's not the same. Require basically loads another file which then has it's own namespace, meaning that it's variables are out of the scope of the file that's requireing this file. For my classes however, I want to have methods that are available to the class that is "importing" (quotes as I am not sure whether this is even possible) this class. Eg.: var utils = require("utils/MainUtils.js"); utils.doSomething(); As far as I know, this doSomething() method is only available if it was set like: function MainUtils() { exports.doSomething = function doSomething() { // } } Q3: Is that correct? Doesn't that seem quite abnormal? Q4: Are there any other blogs or resources that are helpful in getting my setup working, like howtonode.org? Finally, Q5: have there been any efforts into making all this inheritance, object creation, project structure, namespacing etc. easier for big projects? Any libraries or something for this purpose? Hopefully my questions are clear. Any help is appreciated. Thanks.
