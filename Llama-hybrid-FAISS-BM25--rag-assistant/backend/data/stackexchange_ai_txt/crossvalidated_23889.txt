[site]: crossvalidated
[post_id]: 23889
[parent_id]: 23874
[tags]: 
I believe that lmer won't be able to duplicate what comes out of aov because it does not have the capability of restricting the variance-covariance matrix of the random components to compound symmetry as done in aov. However, you can still try something like require(lme4) # assuming a simple symmetric positive-definite structure of variance-covariance matrix anova(m2 or a simple model anova(m3 Then you can compare the two models: anova(m2, m3) Models: m3: mean ~ condition * group * problem * topic + (1 | code) m2: mean ~ condition * group * problem * topic + (0 + problem | code) + m2: (0 + topic | code) Df AIC BIC logLik Chisq Chi Df Pr(>Chisq) m3 98 24985 25572 -12395 m2 117 24899 25599 -12332 124.4 19 The above result indicates the complicated model (the 1st one) is much better. In terms of model complexity, m1 with aov in your OP fits between m2 and m3. To obtain p-values and confidence intervals for specific effects, do this require(languageR) set.seed(101) # It will take a long time to run the MCMC simulations due to the huge number of effects in the model mcmc2 The last line will show you the confidence levels and two p-values (one from MCMC simulations, and one from fitted t-statistic) for all the possible fixed effects specified in the model. I am not copying the result here because it's a long table. If you want to know if the those groups have different variance-covariance structure, you may try anova(m20 or, anova(m21 And then compare the above two models with the simple one: anova(m2, m20, m21)
