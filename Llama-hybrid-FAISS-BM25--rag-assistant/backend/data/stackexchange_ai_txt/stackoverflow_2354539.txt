[site]: stackoverflow
[post_id]: 2354539
[parent_id]: 2353824
[tags]: 
Your code is moving the rectangle relative to the last position of the mouse. This works fine when you are simply moving things, but for your needs when you want it to stop at the borders, you need to use absolute positioning. // When the mouse is pressed, calculate the offset between the mouse and the rectangle public void mousePressed(MouseEvent e) { lastX = e.getX(); lastY = e.getY(); gobj = getElementAt(lastX, lastY); } public void mouseDragged(MouseEvent e) { double newX; // Assuming you can get the absolute X position of the object. newX = gobj.getX() + e.getX() - lastX; // Limit the range to fall within your canvas. Adjust for your paddle width as necessary. newX = Math.max( 0, Math.min( newX, getWidth() ) ); // Set the new position of the paddle, assuming you can set the absolute position. gobj.setX( newX ); lastX = e.getX(); lastY = e.getY(); } } This may not be quite what you want because as soon as you go off the edge, the object will stop moving, but then once you move back toward the canvas, your paddle will move immediately instead of waiting for the mouse to reach the same relative position to the paddle at which it started. You can probably experiment to get it to do what you want.
