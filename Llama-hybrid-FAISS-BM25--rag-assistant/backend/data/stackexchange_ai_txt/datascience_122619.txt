[site]: datascience
[post_id]: 122619
[parent_id]: 122618
[tags]: 
Resnet is designed for image classification, but under the hood the whole process can be summarized as a two-step-process: First the network extracts image features, then it performs classification based on these features. In a traditional image classification task, image features can be things like mean brightness or colour distributions, for a convolutional neural network these features are much more abstract and it is much more difficult to describe what the neural network sees as a feature. Feature extraction generally works on any type of images. If you use the pretrained network that comes with pytorch, you don't even have to train the whole network again, you can simply remove the last layer that performs classification and attach your own classifier instead. In training you freeze the first n-1 layers and only train the last layer with that satisfies your multi-output needs. This process of taking a network that was trained on one task and tweaking it slightly to apply it to a different but very similar task is also called Transfer Learning . You might want to read up on this, for example on wikipedia: https://en.wikipedia.org/wiki/Transfer_learning
