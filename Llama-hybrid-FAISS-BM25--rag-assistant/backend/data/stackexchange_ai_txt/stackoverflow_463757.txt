[site]: stackoverflow
[post_id]: 463757
[parent_id]: 
[tags]: 
What's the best solution for file storage for a load-balanced ASP.NET app?

We have an ASP.NET file delivery app (internal users upload, external users download) and I'm wondering what the best approach is for distributing files so we don't have a single point of failure by only storing the app's files on one server. We distribute the app's load across multiple front end web servers, meaning for file storage we can't simply store a file locally on the web server. Our current setup has us pointing at a share on a primary database/file server. Throughout the day we robocopy the contents of the share on the primary server over to the failover. This scneario ensures we have a secondary machine with fairly current data on it but we want to get to the point where we can failover from the primary to the failover and back again without data loss or errors in the front end app. Right now it's a fairly manual process. Possible solutions include: Robocopy. Simple, but it doesn't easily allow you to fail over and back again without multiple jobs running all the time (copying data back and forth) Store the file in a BLOB in SQL Server 2005. I think this could be a performance issue, especially with large files. Use the FILESTREAM type in SQL Server 2008 . We mirror our database so this would seem to be promising. Anyone have any experience with this? Microsoft's Distributed File System . Seems like overkill from what I've read since we only have 2 servers to manage. So how do you normally solve this problem and what is the best solution?
