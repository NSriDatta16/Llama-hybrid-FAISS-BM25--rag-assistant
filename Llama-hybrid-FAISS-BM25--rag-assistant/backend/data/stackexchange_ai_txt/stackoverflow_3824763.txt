[site]: stackoverflow
[post_id]: 3824763
[parent_id]: 
[tags]: 
Using SharedPreferences and/or class variables in an Activity

Just a random question. I'm learning a bit of Android right now, and in most examples, it seems a lot of common items (such as buttons, editboxes etc) get requested within each function using (cast) findViewById() . Is it considered good or bad practice to store the result of that in an Activity's member values? Simple example: public class MyActivity extends Activity { private EditText myText; public void onCreate(blah blah) { // blah this.myText = (EditText) findViewById(R.id.mytext); } } and use the myText field from there on. I think it'd be good for performance (depending on findViewById's inner workings, I'm quite sure it's already very fast), but I haven't seen it be encouraged yet. Also, it wouldn't be the first time I encountered a situation where 'caching' something like this leads to problems (had a case where database connections weren't released properly because I remembered a ConnectionManager or something in that fashion). Secondly, somewhat related, if you want to remember something across methods in your Activity (and later on too, when the Activity is restarted later), is it wiser to keep up both a class field and a value in SharedPreferences, or would calling SharedPreferences each time for setting / getting the value where it's needing be a better solution? (better being 'cleaner, without impacting performance significantly)
