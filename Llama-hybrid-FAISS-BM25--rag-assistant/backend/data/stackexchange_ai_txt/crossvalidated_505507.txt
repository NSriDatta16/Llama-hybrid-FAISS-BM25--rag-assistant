[site]: crossvalidated
[post_id]: 505507
[parent_id]: 115049
[tags]: 
If you are to encode your example as: Colour Category Binary1 Binary2 Hazel 0 0 0 Blue 1 0 1 Green 2 1 0 Brown 3 1 1 If your question is why do we use Encoding, lets consider the above example if you have 4 categories of colour of eyes according to what @Alexis suggested, we need to convert these categories into numbers because computers work better with numbers. So essentially we transform these four colour categories into respective integers categories, as shown above. Now if you are to give these integers as it is to the computer then depending on the integer values the computer will take out a relation as thus: Brown colour has been given a value 3, so it must be greater than the hazel colour denoted by 0 in terms of importance to colour with respect to the label you have to predict. This is wrong because the aim to provide an integer to text was just to make the calculation and evaluation easy for the computer. So to prevent learning wrong relations between features and output we need encoding What encoding essentially means is to create new dummy features corresponding to each colour ie if we have 'm' labels we can have maybe 'm' feature columns or 'm-1' feature columns depending on the encoding algorithm used. So if we were to represent the above table in terms of encoded values it would be: Colour Category Hazel Blue Green Brown Hazel 0 1 0 0 0 Blue 1 0 1 0 0 Green 2 0 0 1 0 Brown 3 0 0 0 1 In the above table what we did was to represent the categories by new columns called dummy features and corresponding to the colour its respective dummy column recieved a value 1 and rest were set to 0. While training, we do not need the category and colour columns because we have encoded them as dummy features. Note : If you perform transformation and encoding on training set, then transformation and encoding must be performed on the test set also. Returning back to the question. If it were to be framed as, if we can represent the category of integers by their binary couterparts then the answer would be no because essentially what you are doing is replacing the integers by their binary numbers. This does not validate or show the relation between the respective categories and the output of training would be the same as that with the integer values or maybe even worse. Refer the link below for more info: Feature Engineering on Categorical data
