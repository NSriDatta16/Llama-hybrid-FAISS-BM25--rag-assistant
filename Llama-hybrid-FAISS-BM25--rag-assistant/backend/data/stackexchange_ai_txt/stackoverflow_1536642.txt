[site]: stackoverflow
[post_id]: 1536642
[parent_id]: 1536578
[tags]: 
One thing you should investigate if you are working with .NET is LINQ to SQL . It will allow you to have a very elegant interface into your DAL. LINQ will allow you to craft aggregate queries in your BLL which saves plumbing code as well as nasty SQL snippets spread throughout your source. An example from the previous link of an aggregate SQL query expressed with LINQ: var averageOrderTotals = customers. Select(c => new { c.Name, AverageOrderTotal = c.Orders.Average(o => o.Total) }); I've switched over my database layer to LINQ although in my case I don't use MS SQL Server so I have instead used the DbLinq library. The very last thing you want to be doing is having to modify your classes to accommodate your database access layer, doing that approach will make your solution very fragile.
