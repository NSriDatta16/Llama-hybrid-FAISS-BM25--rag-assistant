[site]: stackoverflow
[post_id]: 1602229
[parent_id]: 1601913
[tags]: 
I agree - I'm in favor of leaning heavily towards state verification rather than behavior verification (a loose interpretation of classical TDD while still using test doubles). The book The Art of Unit Testing has plenty of good advice in these areas. 100% test coverage, GUI testing, testing getters/setters or other no-logic code, etc. seem unlikely to provide good ROI. TDD will provide high test coverage in any case. Test what might break.
