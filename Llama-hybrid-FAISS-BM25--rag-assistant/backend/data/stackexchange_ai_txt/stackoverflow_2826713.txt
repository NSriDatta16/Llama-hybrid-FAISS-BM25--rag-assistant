[site]: stackoverflow
[post_id]: 2826713
[parent_id]: 
[tags]: 
Can't add or remove object from NSMutableSet

Check it: - (IBAction)toggleFavorite { DataManager *data = [DataManager sharedDataManager]; NSMutableSet *favorites = data.favorites; if (thisEvent.isFavorite == YES) { NSLog(@"Toggling off"); thisEvent.isFavorite = NO; [favorites removeObject:thisEvent.guid]; [favoriteIcon setImage:[UIImage imageNamed:@"notFavorite.png"] forState:UIControlStateNormal]; } else { NSLog(@"Toggling on, adding %@", thisEvent.guid); thisEvent.isFavorite = YES; [favorites addObject:thisEvent.guid]; [favoriteIcon setImage:[UIImage imageNamed:@"isFavorite.png"] forState:UIControlStateNormal]; } NSLog(@"favorites array now contains %d members", [favorites count]); } This is fired from a custom UIButton. The UI part works great--toggles the image used for the button, and I can see from other stuff that the thisEvent.isFavorite BOOL is toggling happily. I can also see in the debugger that I'm getting my DataManager singleton. But here's my NSLog: 2010-05-13 08:24:32.946 MyApp[924:207] Toggling on, adding 05db685f65e2 2010-05-13 08:24:32.947 MyApp[924:207] favorites array now contains 0 members 2010-05-13 08:24:33.666 MyApp[924:207] Toggling off 2010-05-13 08:24:33.666 MyApp[924:207] favorites array now contains 0 members 2010-05-13 08:24:34.060 MyApp[924:207] Toggling on, adding 05db685f65e2 2010-05-13 08:24:34.061 MyApp[924:207] favorites array now contains 0 members 2010-05-13 08:24:34.296 MyApp[924:207] Toggling off 2010-05-13 08:24:34.297 MyApp[924:207] favorites array now contains 0 members Worst part is, this USED to work, and I don't know what I did to break it. --EDIT: By request, my shared data singleton code: .h #import @interface DataManager : NSObject { NSMutableArray *eventList; NSMutableSet *favorites; } @property (nonatomic, retain) NSMutableArray *eventList; @property (nonatomic, retain) NSMutableSet *favorites; +(DataManager*)sharedDataManager; @end .m: #import "DataManager.h" static DataManager *singletonDataManager = nil; @implementation DataManager @synthesize eventList; @synthesize favorites; +(DataManager*)sharedDataManager { @synchronized(self) { if (!singletonDataManager) { singletonDataManager = [[DataManager alloc] init]; } } return singletonDataManager; } - (DataManager*)init { if (self = [super init]) { eventList = [[NSMutableArray alloc] init]; favorites = [[NSMutableSet alloc] init]; } return self; } ------EDIT EDIT EDIT EDIT------ At @TechZen's suggestion, I moved my accessor methods into the data manager singleton. Here's what it now looks like: #import "DataManager.h" static DataManager *singletonDataManager = nil; @implementation DataManager @synthesize eventList; @synthesize favorites; +(DataManager*)sharedDataManager { @synchronized(self) { if (!singletonDataManager) { singletonDataManager = [[DataManager alloc] init]; } } return singletonDataManager; } - (DataManager*)init { if (self = [super init]) { eventList = [[NSMutableArray alloc] init]; favorites = [[NSMutableSet alloc] init]; } return self; } #pragma mark - #pragma mark Data management functions - (void)addToFavorites:(NSString *)guid { [self.favorites addObject:guid]; NSLog(@"Item added--we now have %d faves.", [favorites count]); } - (void)removeFromFavorites:(NSString *)guid { [favorites removeObject:guid]; NSLog(!"Item removed--we now have %d faves.", [self.favorites count]); } @end I made my viewcontroller where this is happening call [[DataManager sharedManager] addToFavorites:Event.guid] instead of adding the item right to the favorites set itself, but I left the logging stuff that was there in place. Here's my log: 2010-05-13 13:25:52.396 EverWondr[8895:207] Toggling on, adding 05db685f65e2 2010-05-13 13:25:52.397 EverWondr[8895:207] Item added--we now have 0 faves. 2010-05-13 13:25:52.398 EverWondr[8895:207] favorites array now contains 0 members 2010-05-13 13:25:53.578 EverWondr[8895:207] Toggling off 2010-05-13 13:25:53.579 EverWondr[8895:207] favorites array now contains 0 members So.... the DataManager object can't even add anything to its own property! And it doesn't throw an exception like it would if it was a non-mutable type, it just silently fails! Just for fun, I went through and changed it to an NSMutableArray, which I'm more familiar with. Same behavior.
