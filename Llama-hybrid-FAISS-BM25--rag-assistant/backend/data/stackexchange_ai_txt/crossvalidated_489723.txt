[site]: crossvalidated
[post_id]: 489723
[parent_id]: 
[tags]: 
SNAIVE METHOD getting same result for different estimators (BU, OLS and STRUC) on THIEF package in R (TSAGGREGATES + RECONCILETHIEF)

I'm stucked and don't know how to solve that problem using thief package in R (actually tsaggragates + reconcile thief) for SNAIVE METHOD . Does anyone can check it and see what is wrong with it? If it's not wrong, what are the possible outcomes or answers for that? I have an example of time series using train-test approach. As you can check on code below, I separate than in "b" and "c" series. As exampled on reconcilethief documentation , I made different frequencies for each one using tsaggregates() and after, I calculated for each frequency it's SNAIVE forecast. As mentioned on the article "Forecasting with Temporal Hierarchy" , father of THIEF (Am I wrong?), I want to compare the results from estimators: BU, OLS and WS . The Problem is: When I compare those results on each frequency, they all look the same ONLY for SNAIVE method . For NAIVE, ETS, ARIMA and THETA it works pretty well and get different results. Am I doing something wrong? What is the possibles outcomes or answers for that result? PS: I'm not worried if it fits well that data because it is just an example. It is just a practical way to address my problem/difficulties. #install.packages("forecast") #install.packages("thief") library(forecast); library(thief) #Data b $mean, col='red', type ="b"); lines(rt_struc[[i]]$ mean, col = "blue", type = "l"); lines(rt_bu[[i]] $mean, col = "green", type = "l"); lines(rt_ols[[i]]$ mean, col = "brown", type = "l"); } The image shows the result for each estimator on each frequency. And here are the accuracy measurements for 2-monthly frequency (Just change number 2 for another from 1 to 6 to check other frequencies results): accuracy(rt_struc[[2]],aggserie[[2]]) accuracy(rt_bu[[2]],aggserie[[2]]) accuracy(rt_ols[[2]],aggserie[[2]]) #> accuracy(rt_struc[[2]],aggserie[[2]]) # ME RMSE MAE MPE MAPE MASE ACF1 Theil's U #Training set 32.86667 1398.514 1151.000 -23.67196 64.23187 1.000000 0.7046529 NA #Test set -2018.25000 2577.705 2364.417 -252.60259 261.51293 2.054228 0.1678267 5.97304 #> accuracy(rt_bu[[2]],aggserie[[2]]) # ME RMSE MAE MPE MAPE MASE ACF1 Theil's U #Training set 32.86667 1398.514 1151.000 -23.67196 64.23187 1.000000 0.7046529 NA #Test set -2018.25000 2577.705 2364.417 -252.60259 261.51293 2.054228 0.1678267 5.97304 #> accuracy(rt_ols[[2]],aggserie[[2]]) # ME RMSE MAE MPE MAPE MASE ACF1 Theil's U #Training set 32.86667 1398.514 1151.000 -23.67196 64.23187 1.000000 0.7046529 NA #Test set -2018.25000 2577.705 2364.417 -252.60259 261.51293 2.054228 0.1678267 5.97304
