[site]: stackoverflow
[post_id]: 1883971
[parent_id]: 1883862
[tags]: 
Factory pattern could work (see e.g. http://en.wikipedia.org/wiki/Factory_method_pattern ). Something along the lines of: #define stringify(a) #a static int hashstr(const char* s) {/*hash fn of choice*/} list types; lst.push_back(hashtr(stringify(TaskOne))); // passing class type, not instance! lst.push_back(hashtr(stringify(TaskTwo))); static Abstract* Instance(int classid) { switch(id) { case hashstr(stringify(TaskOne)): return new TaskOne; //etc } } You can be considerably more elegant with extra work. Embedding class id's into the class declaration as static ints is often a good start.
