[site]: stackoverflow
[post_id]: 1011010
[parent_id]: 1010959
[tags]: 
I think it's a personal choice. However I like to organise my classes as such. public class classname { } The reason for this is as such. Member variables at the top To see what member variables exist and if they are initialised. Constructors To see if the member variables are setup/initialised as well as what are all the construction options for the class. Destructor To see the how the class is cleaned up and verify it with the constructors and member variables. Public methods To see what are the available contracts callers of the object can use. Protected methods To see what inherited classes would be using. Private methods As it's information about the internals of the class if you needed to know about the internals you can just scroll straight to the end quickly. But to know the interface for the class it's all at the start. UPDATE - Based on OP's update Logically a good way would be to organise the methods by categories of what they do. This way you get the readabilty of categorising your methods as well as the alphabetical search from you IDE (provided this is in your IDE). However in a practical sense I think placing the methods at the end of that section is the best way. It would be quite hard to continually police where each method goes, as it's subjective, for every method if the code is shared by more than yourself. If you were to make this a standard it'd be quite hard to provide the boundaries for where to put each method.
