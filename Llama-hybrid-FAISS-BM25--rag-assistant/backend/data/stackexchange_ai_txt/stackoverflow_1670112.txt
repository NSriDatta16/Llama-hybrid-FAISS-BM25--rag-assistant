[site]: stackoverflow
[post_id]: 1670112
[parent_id]: 1670006
[tags]: 
If you were to use a complex type as a key then: It would be hard for the hash table implementation to group items into buckets for fast retrieval; how would it decide how to group a range of hashes into a bucket? The hash table may need to have intimate knowledge of the type in order to pick a bucket. There is the risk of the properties of the object changing, resulting in items ending up in the wrong buckets. The hashes must be immutable. Integers commonly used because they are easy to split into ranges that correspond to the buckets, they are value types and therefore immutable, and they are fairly easy to generate.
