[site]: stackoverflow
[post_id]: 3279120
[parent_id]: 
[tags]: 
Using String or StringBuffer in Java: which is better?

I read a lot about using StringBuffer and String especially where concatenation is concerned in Java and whether one is thread safe or not. So, in various Java methods, which should be used? For example, in a PreparedStatement, should query be a StringBuffer: String query = ("SELECT * " + "FROM User " + "WHERE userName = ?;"); try { ps = connection.prepareStatement(query); And then again, in a String utility methods like: public static String prefixApostrophesWithBackslash(String stringIn) { String stringOut = stringIn.replaceAll("'", "\\\\'"); return stringOut; } And: // Removes a char from a String. public static String removeChar(String stringIn, char c) { String stringOut = (""); for (int i = 0; i Should I be using StringBuffers? Especially where repalceAll is not available for such objects anyway. Thanks Mr Morgan. Thanks for all the advice. StringBuffers have been replaced with StringBuilders and Strings replaced with StringBuilders where I've thought it best.
