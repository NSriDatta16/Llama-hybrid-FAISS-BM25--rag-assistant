[site]: datascience
[post_id]: 94599
[parent_id]: 
[tags]: 
Is there a node embedding method that is portable between graphs?

I have several graphs whose nodes I want to encode to later process them with a neural network. I want the embeddings to take into account the topology of the graph around the nodes I am embedding, such that nodes from different graphs but with a similar topology have close embeddings. For instance, on the figure below, node A from graph 1 and node B from graph 2 should have close embeddings because the topology of the graph around them is similar. Moreover, I want to be able when I get a new graph to quicly compute the embeddings of its nodes, and make sure that they are coherent with the embeddings I got earlier. For instance, if I get a third graph, with a node C that has a topology around it similar to node A and B, I want to be able to get its embedding (that should be close to A and Bs embeddings) without having to reprocess all the graphs. To sum up, I am looking for a (deterministic ?) approach that would allow me to encode nodes, and would yield similar results for nodes from other graphs but with a similar topology. Is there any embedding method that allows that? From my understanding, most node embedding methods (like GraRep, HOPE, node2vec..) are not portable to other graphs because they are not deterministic, and could yield different results after training with nodes from different graphs (even if these nodes have similar topologies).
