[site]: stackoverflow
[post_id]: 5545208
[parent_id]: 
[tags]: 
serving error pages in mvc: the control or the view?

Let's start by getting on the same page about MVC on the web. The control receives requests, selects a view, sends a response that it gets from the view. (Maybe the control gets data from the model, maybe the views do it themselves, I don't care.) Errors can occur, so we want to handle the errors and display a message or error page to the browser. I'm trying to decide if these error messages/pages are part of the control or come from the view . Perhaps it is different for different kinds of errors. some examples: The request path is meaningless, so we want to respond with a custom "not found" page. The control selects the "not found" view and uses its response The control builds the "not found" page itself . The controller selects a view successfully, but the view throws an exception. The view returns an error status. The controller checks the status and then selects a new view and uses its response The view returns an error status. The controller build the error response itself. The view handles the exception and returns a valid error page or message to the controller. The controller blindly sends it as the response. Now, the difference between the first two options in both cases is technical/organizational, and there is probably no difference to the user. Is there a standard opinion on this (perhaps across MVC frameworks) or is the choice just arbitrary? What is the preferred method?
