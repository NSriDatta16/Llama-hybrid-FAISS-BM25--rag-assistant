[site]: stackoverflow
[post_id]: 4324469
[parent_id]: 4323799
[tags]: 
The easiest thing to do for your use case is to use intrusive reference counting via inheritance, eliminating this need. However, if you're desperate, just check out MSVC's implementation of shared_ptr. typename aligned_storage ::value>::type _Storage; }; _Ty *_Getptr() const { // get pointer return ((_Ty *)&_Storage); } That C-cast is quite nasty. However, this suggests to me that this object will most definitely have the correct alignment, utilizing type traits.
