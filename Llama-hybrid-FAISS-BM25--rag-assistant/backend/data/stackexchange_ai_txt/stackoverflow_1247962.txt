[site]: stackoverflow
[post_id]: 1247962
[parent_id]: 1247921
[tags]: 
After loading the image, you will need to enable an alpha channel on the Surface . that will look a little like this: background = pygame.Display.set_mode() myimage = pygame.image.load("path/to/image.bmp").convert_alpha(background) This will load the image and immediately convert it to a pixel format suitable for alpha blending onto the display surface. You could use some other surface if you need to blit to some other, off screen buffer in another format. You can set per-pixel alpha simply enough, say you have a function which takes a 3-tuple for rgb color value and returns some desired 4tuple of rgba color+alpha, you could alter the surface per pixel: def set_alphas(color): if color == (255,255,0): # magenta means clear return (0,0,0,0) if color == (0,255,255): # cyan means shadow return (0,0,0,128) r,g,b = color return (r,g,b,255) # otherwise use the solid color from the image. for row in range(myimage.get_height()): for col in range(myimage,get_width()): myimage.set_at((row, col), set_alphas(myimage.get_at((row, col))[:3])) There are other, more useful ways to do this, but this gives you the idea, I hope.
