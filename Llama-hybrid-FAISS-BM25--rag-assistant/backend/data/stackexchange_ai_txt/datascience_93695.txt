[site]: datascience
[post_id]: 93695
[parent_id]: 
[tags]: 
Keras: Provide One-Hot-Encoded input values to neural network

I have a dataframe which has two columns of interest: A and B with string values. I am trying to build a prediction model which takes in a set of values in A as input and predicts the corresponding B values. I am trying to one-hot encode the string values before giving it to the neural network. This is what I have done: import pandas as pd from sklearn.model_selection import train_test_split from sklearn.preprocessing import LabelEncoder from sklearn.preprocessing import OneHotEncoder from keras.models import Sequential from keras.layers import Dense def load_dataset(filename): # load the dataset as a pandas DataFrame data = pd.read_csv(filename, header=None) dataset = data.values X = dataset[:, :-1] y = dataset[:,-1] # reshape target to be a 2d array y = y.reshape((len(y), 1)) return X, y def prepare_inputs(X_train, X_test): ohe = OneHotEncoder() ohe.fit(X_train) X_train_enc = ohe.transform(X_train) X_test_enc = ohe.transform(X_test) return X_train_enc, X_test_enc def prepare_targets(y_train, y_test): ohe = OneHotEncoder() ohe.fit(y_train) y_train_enc = ohe.transform(y_train) y_test_enc = ohe.transform(y_test) return y_train_enc, y_test_enc # load the dataset X, y = load_dataset('rdf.csv') # split into train and test sets X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=1) # prepare input data X_train_enc, X_test_enc = prepare_inputs(X_train, X_test) # prepare output data y_train_enc, y_test_enc = prepare_targets(y_train, y_test) # define the model model = Sequential() model.add(Dense(32, input_dim=X_train_enc.shape[1], activation='relu', kernel_initializer='he_normal')) model.add(Dense(32, activation='relu')) model.add(Dense(1, activation='sigmoid')) # compile the keras model model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy']) # fit the keras model on the dataset model.fit(X_train_enc, y_train_enc, epochs=100, batch_size=16, verbose=2) # evaluate the keras model _, accuracy = model.evaluate(X_test_enc, y_test_enc, verbose=0) print('Accuracy: %.2f' % (accuracy*100)) But I am getting this error: ValueError: Found unknown categories [...] . Is there any efficient way to solve this usecase?
