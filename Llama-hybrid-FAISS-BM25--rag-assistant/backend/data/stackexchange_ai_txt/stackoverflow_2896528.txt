[site]: stackoverflow
[post_id]: 2896528
[parent_id]: 
[tags]: 
Lazy loading Javascript, object not created from IE8 cache

Unfortunately the bug does not happen outside of my application! Scenario index.php Lazy loader ... ... internal.js myApp = { timerHitIt: false, hitIt: function () { if (arguments.callee.done) { return; } arguments.callee.done = true; if (myApp.timerHitIt) { clearInterval(myApp.timerHitIt); } var elt = document.createElement("script"); elt.async = true; elt.type = "text/javascript"; elt.src = "external.js"; elt.onload = elt.onreadystatechange = function () { alert(typeof(something)); }; document.body.appendChild(elt); } }; if (document.addEventListener) { document.addEventListener("DOMContentLoaded", myApp.hitIt, false); } /*@cc_on @*/ /*@if (@_win32) document.write(" "); document.getElementById("__ie_onload").onreadystatechange = function () { if (this.readyState == "complete") { myApp.hitIt(); } }; /*@end @*/ if (/WebKit/i.test(navigator.userAgent)) { timerHitIt = setInterval(function () { if (/loaded|complete/.test(document.readyState)) { myApp.hitIt(); } }, 10); } window.onload = myApp.hitIt; external.js something = {}; alert(true); Valid results are undefined -> true -> object (± new request) true -> object (± cached javascript) But sometimes, when hitting F5, I get true -> undefined Does anyone have a clue why alert(true) is executed but something is not set?
