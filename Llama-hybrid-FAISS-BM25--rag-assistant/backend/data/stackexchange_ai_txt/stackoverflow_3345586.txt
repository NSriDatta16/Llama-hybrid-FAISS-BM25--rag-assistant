[site]: stackoverflow
[post_id]: 3345586
[parent_id]: 3345500
[tags]: 
I learned this technique from SQL Server Magazine February 2007 (Datetime Calculations by Itzik Ben-Gan). This way, your 'between' will work regardless of whether the row's date is after midnight, as everything has been normalized to be at midnight with this comparison: select * from someTable where dateadd(day, datediff(day, 0, somedate), 0) between '07/26/2009' and '07/26/2010' The datediff and dateadd work together to strip off the time and leave the date. You can then compare it to string literals, or other dates that have had the same modification done. I'd recommend putting this in a function. EDIT: Based on OMG Ponies' comments. This will not take advantage of an index on the date column. An alternative might be to use the time stripping technique in addition to the technique others have mentioned. So instead of doing it on the table's column, do it on the last argument to 'between'. You could have a function like so: CREATE FUNCTION [dbo].[fn_enddate](@enddate datetime) RETURNS datetime AS BEGIN DECLARE @endOfDay datetime set @endOfDay = dateadd(millisecond, -2, dateadd(day, datediff(day, 0, @enddate) + 1, 0)) return @endOfDay END This takes the argument date, sets it to midnight the next day, then subtracts two milliseconds, giving the end of the day of the given datetime. So then you could do: select * from someTable where somedate between '07/26/2009' and dbo.fn_enddate('07/26/2010')
