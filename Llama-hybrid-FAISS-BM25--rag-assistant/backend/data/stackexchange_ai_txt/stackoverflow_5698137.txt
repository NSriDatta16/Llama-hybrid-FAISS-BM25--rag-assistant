[site]: stackoverflow
[post_id]: 5698137
[parent_id]: 5698077
[tags]: 
you could store View_A as a public instance variable within your Main Activity. then pass the context of main activity to View_B. You can then access the instance of View_A via the context of main activity within View_B. Here's basically what i mean This is in your main Activity: Context context; public View_A viewA; @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); context = this; viewA = new View_A(); View_B viewB = new View_B(context); } it would probably be better using a getter method to get the viewA from context. Here is View_B example class: class View_B { Context activityContext; // constructor View_B (Context _c) { activityContext = _c; viewA = activityContext.viewA; } } that is basically what i mean, but as i said in my comment, Teds solution seems more elegant. I think he meant something more like this: @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); context = this; View_A viewA = new View_A(); View_B viewB = new View_B(); // create a setter method in viewB class to set viewA instance into it after viewA & viewB are created. or i guess you could pass viewA to viewB in the constructor of viewB viewb.setViewA(viewA); } I hope something from that can help you out
