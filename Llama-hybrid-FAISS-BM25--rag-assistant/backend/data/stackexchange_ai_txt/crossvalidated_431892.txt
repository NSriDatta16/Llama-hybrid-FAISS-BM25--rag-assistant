[site]: crossvalidated
[post_id]: 431892
[parent_id]: 431073
[tags]: 
From your question it's not clear what you mean with different CNN models . Are you are comparing two models with different architecture, or two instances of the same model with different weights? Since I understand that you are a beginner in deep learning, I'll try to answer for both of the scenarios. Comparing two different model architectures In this case the answer is straightforward: compare the average performances of the two models. Run the training several times, introducing diversity in train/validation/test data performing the experiments, for example, in cross validation. You should use the same splits of your dataset for both of the models. Reproduce results of the same model This is more tricky. If you are using tensorflow, you should be aware that a "random" operation is in fact ruled by two different seeds: a global seed , set by tf.set_random_seed , and an operation seed , provided as an argument to the operation itself. Once you have set the global seed, the system deterministically picks an operation seed in conjunction with the graph-level seed so that it gets a unique random sequence. However, it's important to set it in the right moment. You probably want to use the same graph and same operations to get the same random numbers in different sessions , so you should set the seed just before running the tf.session. You can read more about this topic in this discussion
