[site]: stackoverflow
[post_id]: 4119641
[parent_id]: 4119602
[tags]: 
Like so? var myCollection = new List (); myCollection.Add(new double[]{1,2,3,4,5}); myCollection.Add(new double[]{3,4,5,6,7}); var qry = (from col in Enumerable.Range(0, myCollection.Min(arr => arr.Length)) select myCollection.Average(arr => arr[col])).ToList(); Original answer from when the question referred to a "2 dimensional array": How about (note - you may need to reverse col and row depending on how you choose to orient your data): int[,] data = {{0,1,2},{3,4,5}}; var qry = (from col in Enumerable.Range(0, data.GetLength(0)) select new { col, avg = Enumerable.Range(0, data.GetLength(1)) .Select(row => data[col, row]).Average() }).ToList(); foreach(var result in qry) { Console.WriteLine("{0}: {1}", result.col, result.avg); } Or if you just want the averages (not the anon-type): var qry = (from col in Enumerable.Range(0, data.GetLength(0)) select Enumerable.Range(0, data.GetLength(1)) .Select(row => data[col, row]).Average()).ToList();
