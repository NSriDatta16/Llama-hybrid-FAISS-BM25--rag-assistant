[site]: stackoverflow
[post_id]: 4959882
[parent_id]: 4958644
[tags]: 
I'm not aware of the way to load the ARGB data directly into the texture, but there is a better workaround than just doing the swizzle on CPU. You can do it very effectively on GPU instead: Load the ARGB data into the temporary RGBA texture. Draw a full-screen quad with this texture, while rendering into the target texture, using a simple pixel shader. Continue to load other resources, no need to stall the GPU pipeline. Example pixel shader: #version 130 uniform sampler2DRect unit_in; void main() { gl_FragColor = texture( unit_in, gl_FragCoord.xy ).gbar; }
