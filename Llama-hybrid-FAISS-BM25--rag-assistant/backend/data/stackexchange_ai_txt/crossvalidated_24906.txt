[site]: crossvalidated
[post_id]: 24906
[parent_id]: 
[tags]: 
Good algorithm for processing positional estimates

We (my team) are building a robot which will navigate around an arena. The robot uses a camera to determine its position based on markers on the wall. We have tested this and found it can determine position well when close to the wall. However, at further distances, the markers appear to move randomly by single pixels on the sensor (due to vibration, sensor noise and other factors), causing the positional estimates to vary considerably. Initially we took a mean of the captured samples, but if we have a list of samples like this: (4.45, 5.06) (4.43, 5.07) (4.42, 6.48) (3.95, 5.67) then the outliers considerably change the averaged result, making the calculated position inaccurate. So, we need to remove these data points - either replace the values with more reasonable estimates, or mark them as outliers and ignore them while taking the mean. Ideally, any such algorithm should be capable of handing only a few data points, as we will only be able to see a maximum of 7 markers at any one time, and typically only 4-5. I took GCSE Statistics about 3 years ago (and got an A) and I vaguely remember an algorithm which did just this - but my knowledge has since faded.
