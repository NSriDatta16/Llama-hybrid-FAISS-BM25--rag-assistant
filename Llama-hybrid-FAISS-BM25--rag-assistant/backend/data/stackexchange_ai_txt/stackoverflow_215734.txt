[site]: stackoverflow
[post_id]: 215734
[parent_id]: 214825
[tags]: 
In a system like .NET, where there are types in namespaces, you have to make a decision: is a namespace part of the name, or is it an organizational tool for types? Some systems choose the first option. Then, your using directives would be able shortening the names that you use the most often. In .NET, it's the latter. For example, consider System.Xml.Serialization.XmlSerializationReader . Observe the duplication between the namespace and the type. That's because in this model, type names must be unique, even across namespaces. If I remember correctly, you can find this described by the CLR team here: http://blogs.msdn.com/kcwalina/archive/2007/06/01/FDGLecture.aspx Its simpler to copy and paste code into other source files. True, but if you're copy/pasting a lot of code, you're probably doing it wrong. It is more readable (you see the namespaces right away) Seeing the namespaces isn't important, since, at least when you're following Microsoft's guidelines, type names are unique already; the namespace doesn't really provide you with useful information.
