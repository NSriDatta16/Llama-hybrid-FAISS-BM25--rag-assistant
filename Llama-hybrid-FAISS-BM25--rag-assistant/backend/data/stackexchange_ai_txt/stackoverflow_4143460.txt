[site]: stackoverflow
[post_id]: 4143460
[parent_id]: 4143382
[tags]: 
Define successfully! Define deallocated! After deallocating memory (whether it is free or delete) you must not use that pointer again. All other assumptions are irrelevant. After all, you call the C/C++ runtime to deallocate memory, but the C/C++ runtime also calls functions of the operating system to free the page. You could even have a custom memory allocator on top of the C/C++ runtime that e.g. uses caching to implement a faster memory allocation algorithm. All of these layers may keep the deallocated memory for themselves (because of fragmentation or just because they like to keep it to themselves) or may tell the underlying layer to deallocate it. Anything can happen, just don't use that pointer anymore.
