[site]: stackoverflow
[post_id]: 4711532
[parent_id]: 4706542
[tags]: 
This makes no sense. You trying to use macros, where functions are sufficient. What you want is similar to this: (defun tokenize (data ops) (mapcar (lambda (d) (cdr (assoc d ops))) (string->list data))) CASE is a macro that expects a bunch of fixed clauses. It does not take clauses that are computed at runtime. If list data should drive computation, then use functions like ASSOC. GENERATE-SWITCH-CASE is also an odd name, since the macro IS a switch case. GENERATE-SWITCH-CASE also does expect a list as a second argument. But in TOKENIZE you call it with a symbol OPS. Remember, macros compute with Lisp source code. Next, there are also no ARRAYs involved. Lisp has arrays, but in your example is none. Typical advice: if you want to write a MACRO, think again. Write it as a function. if you still want to write a macro, Go to 1.
