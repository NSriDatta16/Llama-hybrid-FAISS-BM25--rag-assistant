[site]: stackoverflow
[post_id]: 5736654
[parent_id]: 5734718
[tags]: 
Unless there's some more HTML or JS missing, your code is quite complicated for what it needs to do. Here's a solution that involves a lot less JS (and better practices, see below), and only 1 extra HTML element (which creates better logical separation anyway). var $videolist = jQuery('ul.projects'); var $videoplayer = jQuery('.video-container'); var videoplayerID = jQuery('#video-player-1_wrapper').attr('id'); jQuery('ul.projects li').click(function() { var filename = jQuery(this).find("img").attr("alt"); var $infoclass = jQuery('.' + filename.replace(/ /g,'')); jwplayer(videoplayerID).setup({ 'flashplayer': '/_/jw/player.swf', 'id': 'playerID', 'width': '258', 'height': '145', 'file': '/_/videos/' + filename + '.mp4', 'autostart': true, 'events': { onComplete: function(event) { $videoplayer.fadeOut(function() { $infoclass.fadeOut(); jwplayer(videoplayerID).remove(); $videolist.fadeIn(); }); } } }); $videolist.fadeOut(function() { $videoplayer.fadeIn(); $infoclass.fadeIn(); }); }); jQuery('.back-to-projects').click(function(e) { e.preventDefault(); jQuery('.info div:visible').fadeOut(); $videoplayer.fadeOut(function() { jwplayer(videoplayerID).remove(); $videolist.fadeIn(); }); }); Dwight Howard, son. Brian Deegan, son. Patrick Willis, son. Castles, son. Springtime, son. Powerbar, son. Back A few points: You were doing a lot of DOM traversal that wasn't necessary when you could have just directly used selectors by ID/class which is what I did above. You were also duplicating some vars instead of declaring them above the click events. The other big issue with your code was doubling up on jQuery objects. Example: var videolist = jQuery(this).closest('ul'); var videoplayer = jQuery(videolist).prev(); The first line returns a jQuery object (videolist). There's no reason to wrap that in jQuery() on the next line. You can safely do: var videolist = jQuery(this).closest('ul'); var videoplayer = videolist.prev(); If you look at my code, I use $var to reference a jQuery object. It's purely a personal/style decision, but it helps to quickly tell whether a variable is a jQuery object or not. Read here for more info about the jQuery object type: http://api.jquery.com/Types/#jQuery
