[site]: stackoverflow
[post_id]: 1272366
[parent_id]: 1272245
[tags]: 
Assuming that there is an apparent rational reason behind it - and it could quite easily be some legacy issue dating back to an archaic version of the software that has never been changed but is now unfathomable - I'd suggest that the most likely explanation is that the designers considered that access to the tables would usually be via the fields in the primary keys they used and hence they thought this would be drive the most efficient queries. This might have been particularly appealing to them if, for example on the Order Table they thought that most of the time they would only require the (organization-internal-id, order-internal-id) fields to be retrieved, hence by putting these into the primary key that would avoid a table read. The logic would have run something like "we know we usually only need need organization-internal-id and order-internal-id from this table, so if we use this as the PK the data will be retrieved directly rather than forcing access to the actual row data is we were to access via the arbitrary internal-id" Which may or may not be true, but once these decisions have been made in this kind of software they tend to stick around unless the reason to change them is compelling. I have vague memories of seeing a similar construction in Oracle Accounting IV a very long time ago, so possibly it comes over from some older Oracle methodology (Oracle 6 was rather sensitive about these things)
