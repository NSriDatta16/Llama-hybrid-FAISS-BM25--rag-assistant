[site]: datascience
[post_id]: 63523
[parent_id]: 63287
[tags]: 
I would suggest you to play with sample weight. My suggestion is try putting more weights on taking actions, this way you can configure penalizing more for not predicting buy or loss. Bear in mind that this might also might cause false positive (you are told to take action when it is not supposed to be taken) so please do some testing of this trade-off. Maybe another idea is to simply attempt to use binary classification (whether to take action or not) instead and then apply some rule-based action with your domain expertise. People have used algorithmic trading in years and this approach/step will most likely work or even required. Indeed it is not an easy task, but I In real life/deployment of machine learning model you might have to chain programs to automate the process better. You cannot be too greedy and put all the load on one model especially as the task gets more complicated. Another note, saying your model aiming to maximize accuracy is not entirely correct(since your model is learning based on loss and accuracy is just an evaluation metric, it just happen that minimizing loss will eventually increase accuracy).
