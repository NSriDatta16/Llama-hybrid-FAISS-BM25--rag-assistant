[site]: stackoverflow
[post_id]: 3376740
[parent_id]: 
[tags]: 
Runtime allocation of multidimensional array

So far I thought that the following syntax was invalid, int B[ydim][xdim]; But today I tried and it worked! I ran it many times to make sure it did not work by chance, even valgrind didn't report any segfault or memory leak !! I am very surprised. Is it a new feature introduced in g++? I always have used 1D arrays to store matrices by indexing them with correct strides as done with A in the program below. But this new method, as with B, is so simple and elegant that I have always wanted. Is it really safe to use? See the sample program. PS. I am compiling it with g++-4.4.3, if that matters. #include #include int test(int ydim, int xdim) { // Allocate 1D array int *A = new int[xdim*ydim](); // with C++ new operator // int *A = (int *) malloc(xdim*ydim * sizeof(int)); // or with C style malloc if (A == NULL) return EXIT_FAILURE; // Declare a 2D array of variable size int B[ydim][xdim]; // populate matrices A and B for(int y = 0; y
