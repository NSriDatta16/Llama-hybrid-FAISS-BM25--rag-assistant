[site]: datascience
[post_id]: 36549
[parent_id]: 
[tags]: 
Understanding the Shuffle and Split Process in a Neural Network Code

I need to understand how the splitting of labels in the following code happened : import keras import librosa import librosa.feature import librosa.display import glob import numpy as np from keras.models import Sequential from keras.layers import Dense , Activation from keras.utils.np_utils import to_categorical def extract_features_song(f): y, _ = librosa.load(f) # get mfcc mfcc = librosa.feature.mfcc(y) # make value between 1 -1 mfcc /= np.amax(np.absolute(mfcc)) return np.ndarray.flatten(mfcc)[:25000] def extrac_features_and_labels(): all_features = [] all_labels = [] genres = ['blues' , 'classical', 'country' , 'disco' , 'hiphop', 'jazz', 'metal' , 'pop', 'reggae', 'rock'] for genre in genres: sound_files = glob.glob('genres/'+genre+'/*.au') print ('prcoessing %d songs in %s genre'% (len(sound_files), genre)) for f in sound_files: features =extract_features_song(f) all_features.append(features) all_labels.append(genre) # one hot encoding label_uniq_ids , label_row_ids = np.unique(all_labels, return_inverse= True) label_row_ids = label_row_ids.astype(np.int32, copy= False) onehot_labels = to_categorical(label_row_ids, len(label_uniq_ids)) return np.stack(all_features), onehot_labels features , labels = extrac_features_and_labels() print (np.shape(features)) print (np.shape(labels)) training_split = 0.8 alldata = np.column_stack(features , labels) np.random.shuffle(alldata) splitidx = int(len(alldata))*training_split train , test = alldata[:splitidx,:], alldata[splitidx:, :] print (np.shape(train)) print (np.shape(test)) # the concerned part: begin train_input = train [:,:-10] train_labels = train [:,-10:] test_input = test [:,:-10] test_labels = test [:,-10:] #the concerned part: end print (np.shape(train_input)) print (np.shape(train_labels)) the output is as follows: (1000, 25000) (1000, 10) (800, 25010) (200, 25010) (800, 25000) (800, 10) Now, when he - code instructor - stacked both arrays together and shuffled them, he can't be sure that the last ten elements are the labels, am I right? If so how did he do it like this, this would cause an error.
