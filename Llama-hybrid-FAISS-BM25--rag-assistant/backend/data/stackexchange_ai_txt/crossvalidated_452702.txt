[site]: crossvalidated
[post_id]: 452702
[parent_id]: 452209
[tags]: 
1. A sampler (or sampling algorithm) is any procedure which is designed to generate draws from a target distribution $\pi(\cdot)$ . 2. Your understanding seems correct to me. Monte Carlo essentially leverages the Law of Large Numbers. Suppose that $X$ is a distributed according to a distribution $\pi(x)$ and $\theta$ is a scalar quantity $\theta = E(g(X))$ which you would like to estimate. \begin{align*} \theta &= E(g(X)) \\[1.2ex] &= \int g(x)\pi(x) dx \\[1.2ex] &\approx \frac{1}{M}\sum_{i=1}^Mg(x_i) && \text{(the MC estimator)} \end{align*} where $x_1, x_2, \cdots x_M$ are independent draws from the target distribution $\pi(x)$ . Note that Monte Carlo, which is an estimation procedure, always requires that a sampler already exists for a target distribution. 3. This seems to be where your confusion stems from. The Metropolis-Hastings algorithm (which is an MCMC method) is "just a sampler" which is commonly used for parameter inference in Bayesian statistics. The common use-case may be what's confusing you, so focus on the facts the MH algorithm is used to sample from a target distribution $\pi(x)$ , $x \in \mathbb R^d$ . Unlike most of the other "samplers" that you mention, the MH algorithm does NOT generate independent draws from the target distribution. Regardless, as the number of samples increase, each draw (in theory) is distributed according to $\pi(x)$ . This allows us to estimate $\theta$ in the same way as above (i.e. question 2.). Due to its many advantages (the target density need not be "normalized", easy to choose a fast "proposal distribution", works well in high dimensions), the MH algorithm is often used to sample from a posterior distribution $\pi(\theta|x)$ . These samples from the posterior can then be used for inference, such as parameter estimation. The MH algorithm itself, however, refers to the sampler. 4. Yes, the accept-reject algorithm is a sampler. 5. Hopefully this has been mostly answered in the response to question 3. When using an MCMC algorithm to sample from a distribution (usually a posterior), each "sample" depends on the sample before it. That is, the generated samples are not independent, but can be viewed as a Markov Chain. Still, assuming the MCMC sampler has "converged" these draws can be used in the usual Monte Carlo way.
