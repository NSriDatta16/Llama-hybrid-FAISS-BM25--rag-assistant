[site]: stackoverflow
[post_id]: 4098726
[parent_id]: 4098692
[tags]: 
No. Value types in .Net must have a size known at compile time. The size of a string is often determined only at runtime and hence cannot be model'd as a value type. Additionally a type in .Net which is a Value type can only have 1 size. Or more simply there cannot be different instances of the same value type with different sizes. This means that you'd need to represent strings of different lengths as different types. For example "dog" and "zebra" would be different incompatible types Note It seems like this question can be interpretted in 2 ways Make string a value type with no alternate storage Make string a value type and allow for alternate storage in an array My answer is for scenario #1. It doesn't seem like scenario #2 holds a lot of value because it just replaces a reference type with a value type that has an embedded reference type.
