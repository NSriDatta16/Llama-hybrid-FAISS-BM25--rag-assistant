[site]: stackoverflow
[post_id]: 5496163
[parent_id]: 5467829
[tags]: 
There is a great perl script available that will help you visualize how this works. Example output: $ ./ipcalc 197.23.37.128/25 Address: 197.23.37.128 11000101.00010111.00100101.1 0000000 Netmask: 255.255.255.128 = 25 11111111.11111111.11111111.1 0000000 Wildcard: 0.0.0.127 00000000.00000000.00000000.0 1111111 => Network: 197.23.37.128/25 11000101.00010111.00100101.1 0000000 HostMin: 197.23.37.129 11000101.00010111.00100101.1 0000001 HostMax: 197.23.37.254 11000101.00010111.00100101.1 1111110 Broadcast: 197.23.37.255 11000101.00010111.00100101.1 1111111 Hosts/Net: 126 Class C The network part of the mask in your problem is 25 bits long. If you want to divide it into 4 more subnets, you need two more bits. (because math.pow(2,2) == 4 ) So you'd have to extend it to a /27, as follows: $ ./ipcalc 197.23.37.128/27 Address: 197.23.37.128 11000101.00010111.00100101.100 00000 Netmask: 255.255.255.224 = 27 11111111.11111111.11111111.111 00000 Wildcard: 0.0.0.31 00000000.00000000.00000000.000 11111 => Network: 197.23.37.128/27 11000101.00010111.00100101.100 00000 HostMin: 197.23.37.129 11000101.00010111.00100101.100 00001 HostMax: 197.23.37.158 11000101.00010111.00100101.100 11110 Broadcast: 197.23.37.159 11000101.00010111.00100101.100 11111 Hosts/Net: 30 Class C To get the next group of 5 bits, add one to the network mask: $ python >>> 128 + 0b100000 160 So your next subnet is 197.23.37.160/27 , and so on.
