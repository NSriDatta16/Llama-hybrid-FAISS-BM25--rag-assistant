[site]: stackoverflow
[post_id]: 1771117
[parent_id]: 
[tags]: 
Why doesn't C++ reimplement C standard functions with C++ elements/style?

For a specific example, consider atoi(const std::string &) . This is very frustrating, since we as programmers would need to use it so much. More general question is why does not C++ standard library reimplement the standard C libraries with C++ string,C++ vector or other C++ standard element rather than to preserve the old C standard libraries and force us use the old char * interface? Its time consuming and the code to translate data types between these two interfaces is not easy to be elegant. Is it for compatible reason,considering there was much more legacy C code than these days and preserving these C standard interfaces would make translation from C code to C++ much easier? In addition,I have heard many other libraries available for C++ make a lot of enhancement and extensions to STL.So does there libraries support these functions? PS: Considering much more answers to the first specific question, I edit a lot to clarify the question to outline the questions that I am much more curious to ask.
