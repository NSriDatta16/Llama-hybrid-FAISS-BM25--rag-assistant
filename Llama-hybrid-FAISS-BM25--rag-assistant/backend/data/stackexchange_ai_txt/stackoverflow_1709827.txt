[site]: stackoverflow
[post_id]: 1709827
[parent_id]: 
[tags]: 
Choosing an ORM for a "simple" SaaS startup (ASP.NET MVC)

I'm about to start developing a web-based application that I can best describe as a specialized version of 37Signal's Highrise contact management app, targeted towards service businesses such as lawn care. I've decided to use ASP.NET MVC to take advantage of my BizSpark membership and to leverage the C#/ASP.NET/SQL Server that I already know. I'm doing a bit of research to choose an ORM for the project; I'm not sure if I should go with something lightweight such as LINQ to SQL or go with the big guns of NHibernate. At this point I don't envision the application as being overly complex. I essentially have these models: Account User (provided by ASP.NET, but I might need to extend it) Customer Job where the following business rules apply: The account is the master record (since it represents a subscriber) and everything else (users, customers, jobs) hang off it A customer can have more than one job There are two types of Customers: A "lead" and a "customer" - the idea is that customers can request a followup from a form that we provide and be automatically added to the account's customer database, and then an employee can follow up and schedule a job, which "converts" the lead A job can be either one-time or set on a recurring schedule (e.g. every two weeks, once a month) I have a bad habit of trying to overarchitect things. LINQ to SQL seems like it would suit my needs immediately, but I'm concerned about scalability in the future and whether the upfront costs of using a more feature-rich ORM such as Entity Framework or NHibernate would make up for itself in query effectiveness and optimization. I'm considering using Windows Azure to host the application. Any thoughts?
