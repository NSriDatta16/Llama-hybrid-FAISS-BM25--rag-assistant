[site]: stackoverflow
[post_id]: 1039082
[parent_id]: 907756
[tags]: 
Here's how I make my poor man's approach to scaling the point size: void render() { glEnable(GL_VERTEX_PROGRAM_POINT_SIZE_ARB); glHint(GL_POINT_SMOOTH_HINT, GL_NICEST); glEnable(GL_POINT_SPRITE); glActiveTexture(GL_TEXTURE0); glTexEnvi(GL_POINT_SPRITE, GL_COORD_REPLACE, GL_TRUE); /* Activate shader program here */ /* Send pointSize to shader program */ glBegin(GL_POINTS); /* Render points here */ glVertex3f(...); glEnd(GL_POINTS); } Vertex shader: uniform float pointSize; void main() { gl_Position = ftransform(); gl_PointSize = pointSize / gl_Position.w; } You can do whatever you want in the fragment shader, but you'll have to compute the color, lighting and texturing yourself.
