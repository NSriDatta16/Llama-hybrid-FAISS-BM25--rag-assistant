[site]: stackoverflow
[post_id]: 4001212
[parent_id]: 4000137
[tags]: 
The min and max values for colors in the #AABBCC format is #000000...#FFFFFF, or 0...16777215 in decimal. Each individual color component ranges from #00..#FF, which is 0..255 in decimal and requires 8-bits or 1 byte of storage. For #AAABBBCCC the range of components is #000-#FFF or 0..4095 each and they require 12-bits or 1Â½ bytes of storage. Not sure what the range of values is for N in (N, N, N), but if it's 0..1 then these two functions will convert from it to either 8-bit component #AABBCC or 12-bit component #AAABBBCCC color values (without rounding). Note that the output of each function is a string with the value shown after each print statement below. ITOH8 and ITOH12 are constant lookup tables used by the corresponding function. ITOH8 = [('%02X' % i) for i in range(0x100)] rgbconv8 = lambda c: ''.join( ['#'] + [ITOH8[int(v*0xFF)] for v in c] ) print rgbconv8((0., 1., 0.)) #00FF00 print rgbconv8((.2, .6, .75)) #3399BF ITOH12 = [('%03X' % i) for i in range(0x1000)] rgbconv12 = lambda c: ''.join( ['#'] + [ITOH12[int(v*0xFFF)] for v in c] ) print rgbconv12((0., 1., 0.)) #000FFF000 print rgbconv12((.2, .6, .75)) #333999BFF
