[site]: datascience
[post_id]: 76405
[parent_id]: 76402
[tags]: 
Yes, the filter will learn as if they are spatially co-located. The main purpose of convolutions is to detect local features, where the notion of locality comes from the positions over which the filter is applied. Some neural network building blocks that you could use are: Position-wise dense layers: this applies a linear transformation to each of the elements. The result would be an element for each of the elements in the input. The dimensionality depends on the matrix used for the multiplication. This can be achieved also by applying a 1D convolution with a filter of length 1. Max/avg. pooling over time: taking the maximum/average value over all elements in the input, separately for each input channel. This gives you a single element, as it collapses all the elements in one. A variation is to take the $k$ maximum elements. Of course, you may want to exploit the relations between the elements in your input, but not in their original meaningless ordering: you could sort your inputs (from lowest to highest or vice versa). Then you could apply convolutional layers.
