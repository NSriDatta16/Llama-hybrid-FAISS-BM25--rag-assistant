[site]: crossvalidated
[post_id]: 419329
[parent_id]: 
[tags]: 
Supervised Machine Learning: Is it okay to use features of a data-point to split it up into additional data-points?

I am starting to work on a supervised Machine Learning project. The way it has been approached by someone else previously seems unusual to me and I am trying to be sure of whether their methodology is incorrect/correct Project Background We have data on 50 subjects with movement disorders. Along with the subjects' demographic/physiological info as features, we also have access to kinematic data from when they used an exoskeleton. Each subject performed 20 targeted movements using an exoskeleton arm, and for each movement, they received a score stating how "smooth" the motion was. Here, "smoothness" can be used as measure of the level of movement impairment. These 20 movements did not follow the same order/pattern for everyone, and the targets on the screen were randomly assigned to a different location after each movement. We are trying to use this data to try to predict the subjects' scores in a motor functional test 1 month after these exoskeleton trials (so it's a regression problem). I would have approached this as a Supervised ML problem with 50 data points and along with the demographic/physiological info as features, I would have also used summary statistics on the 20 movements as additional features. And then I would have run linear/non-linear algorithms to see what model performs best. However, the person who worked before me on this project did something very different. They used each movement itself as a data-point. So instead of 50, they had 1000 data-points and were able to use slightly more data-hungry algorithms like neural networks. So for this method, there were 20 almost identical data-points produced from each subject, where the only difference between the 20 points was the feature that indicated the "smoothness" score of that particular movement. This feels like an unusual approach to me. But I am not sure if it is indeed violating any of the principles of machine learning. If anyone could offer more insight into this method and why it is correct/incorrect, that would be very helpful
