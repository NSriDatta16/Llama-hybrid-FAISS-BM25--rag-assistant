[site]: stackoverflow
[post_id]: 4091604
[parent_id]: 4090971
[tags]: 
Using dlmalloc in cross-platform code is an oxymoron. Replacing any standard C functions (especially malloc and family) results in undefined behavior . The closest thing to a portable way to replace malloc is using search-and-replace (not #define ; that's also UB) on the source files to call (for example) my_malloc instead of malloc . Note that internal C library functions will still use their standard malloc , so if the two conflict, things will still blow up. Basically, trying to replace malloc is just really misguided. If your system really has a broken malloc implementation (too slow, too much fragmentation, etc.) then you need to do your replacement in an implementation-specific way, and disable the replacement on all systems except ones where you've carefully checked that your implementation-specific replacement works correctly.
