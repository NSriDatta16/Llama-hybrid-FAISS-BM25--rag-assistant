[site]: stackoverflow
[post_id]: 2916296
[parent_id]: 2916027
[tags]: 
It looks like you have two reasonable approaches here, but it will depend on the nuances of your requirements. You can use Single Table Inheritance (STI) to do what you want, where User is only the base class for others named SalesAgent or Client and so forth. Each of these sub-classes may define their own validations. All you need for this to work is a string column called "type" and ActiveRecord will do the rest: class User The alternative is to have a number of free-form fields where you store various bits of related data and simply interpret them differently at run-time. You may structure it like this: class User :destroy end class AgentRole That would have the advantage of allowing for multiple roles, and if you use has_many, then multiple roles of the same type.
