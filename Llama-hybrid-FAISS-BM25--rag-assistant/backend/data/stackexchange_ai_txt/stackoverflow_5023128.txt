[site]: stackoverflow
[post_id]: 5023128
[parent_id]: 
[tags]: 
Cucumber: how to organize a complex test set

I've got three versions of a backend that I'm testing. I would like to run similar feature specifications against the three versions. Initially, I thought I'd just organize everything in a directory structure, as such: features/ v1/ something.feature step_definitions/ something_steps.rb v2/ something.feature step_definitions/ something_steps.rb v3/ something.feature step_definitions/ something_steps.rb However, cucumber seems to flatten everything, which means that I end up with ambiguous step definitions. I then thought of the following structure: features/ v1/ something.feature v2/ something.feature v3/ something.feature step_definitions/ something_steps.rb I'd define a variable in the feature file somewhere, indicating which version that one is for, and I'd have a bunch of "ifs" inside the steps file, to choose code paths depending on that version variable. However, I haven't found an obvious way of defining that variable in the feature file. Is there any way I can organize things, or will I just have to create multiple "feature" roots, one per version, which would be an awful solution given that it would mean multiple invocations of cucumber? v1/ features/ something.feature step_definitions/ something_steps.rb v2/ features/ something.feature step_definitions/ something_steps.rb v3/ features/ something.feature step_definitions/ something_steps.rb
