[site]: stackoverflow
[post_id]: 1397654
[parent_id]: 1397572
[tags]: 
You are lucky it's in Python which is easy to read. But it is of course possible to write tricky hard to understand code in Python as well. The steps are: Run the software and learn to use it, and understand it's features at least a little bit. Read though the tests, if any. Read through the code. When you encounter code you don't understand, put a debug break there, and step through the code, looking at what it does. If there aren't any tests, or the test coverage is low, write tests to increase the test coverage. It's a good way to learn the system. Repeat until you feel you have a vague grip on the code. A vague grip is all you need if you are going to manage the code. You'll get a good grip once you start actually working with the code. For a big system that can take years, so don't try to understand it all first. There are tools that can help you. As Stephen C says, an IDE is a good idea. I'll explain why: Many editors analyses the code. This typically gives you code completion, but more importantly in this case, it makes it possible to just just ctrl-click on a variable to see where it comes from. This really speeds things up when you want to understand otehr peoples code. Also, you need to learn a debugger. You will, in tricky parts of the code, have to step through them in a debugger to see what the code actually do. Pythons pdb works, but many IDE's have integrated debuggers, which make debugging easier. That's it. Good luck.
