[site]: stackoverflow
[post_id]: 2725117
[parent_id]: 2553522
[tags]: 
I like THE answer that checks if s2 is a substring of s1 concatenated with s1. I wanted to add an optimization that doesn't lose its elegance. Instead of concatenating the strings you can use a join view (I don't know for other language, but for C++ Boost.Range provide such kind of views). As the check if a string is a substring of another has linear average complexity (Worst-case complexity is quadratic), this optimization should improve the speed by a factor of 2 in average.
