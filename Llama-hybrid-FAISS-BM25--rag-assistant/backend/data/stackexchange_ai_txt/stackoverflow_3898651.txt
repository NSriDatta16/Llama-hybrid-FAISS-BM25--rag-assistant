[site]: stackoverflow
[post_id]: 3898651
[parent_id]: 
[tags]: 
XPATH contains(string, string) Not Working

sI have an XML file that looks like the following... 1.0 foo.EXE bar.DLL I have a COM DLL that uses MSXML2:IXMLDOMNode objects that call "selectNodes" something like... CComPtr oRes = NULL ; HRESULT hResult = m_StartNode->selectNodes(sQuery, &oRes) ; When sQuery is //a/b/c[Module[contains(.,'EXE')]] , then hResult is E_FAIL and ::GetLastError() returns 0. Admittedly, I am new to XPATH, but why wouldn't this return all the 'c' element that have a Module element containing 'EXE'. ((edit)) Other simpler XPATH expressions work. //a/b/c for example returns all elements as expected. It appears to be when I use 'contains()' or 'ends-with()' that the XPATH fails. Here is a complete console app that demonstrates the problem. // XMLTest.cpp : Defines the entry point for the console application. #include "stdafx.h" #import raw_interfaces_only rename("value", "xmlvalue") int _tmain(int argc, _TCHAR* argv[]) { CoInitialize(NULL); CComPtr thedoc; thedoc.CoCreateInstance(__uuidof(MSXML2::DOMDocument)); _variant_t filename(L"c:\\shared\\test\\BlackListSmall.xml"); VARIANT_BOOL success; HRESULT res = thedoc->load(filename, &success); _bstr_t sQuery = L"//a/b/c[Module[contains(.,'EXE')]]"; CComPtr oRes; thedoc->selectNodes(sQuery, &oRes); thedoc = NULL; oRes = NULL; CoUninitialize(); return 0; } and this is the contents of stdafx.h #pragma once #include "targetver.h" #include #include #ifndef STRICT #define STRICT #endif #define _ATL_APARTMENT_THREADED #define _ATL_NO_AUTOMATIC_NAMESPACE #define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS // some CString constructors will be explicit #include #include #include using namespace ATL; BTW, when I run this and get to the selectNodes() call, I get three messages in the debugger output window... First-chance exception at 0x7564fbae in XMLTest.exe: 0xE0000001: 0xe0000001. First-chance exception at 0x7564fbae in XMLTest.exe: 0xE0000001: 0xe0000001. First-chance exception at 0x7564fbae in XMLTest.exe: 0xE0000001: 0xe0000001. ... and the callstack provides no real info when I break on all exceptions. ((Final Edit)) I awarded the answer to Dimitre, see below. Here are the changes I made to my example program according to his answer... #import raw_interfaces_only rename("value", "xmlvalue") ... CComPtr thedoc; //changed from IXMLDOMDocument ... HRESULT res = thedoc->load(filename, &success); // unchanged _bstr_t lang = L"SelectionLanguage"; // inserted _variant_t xpathlang = L"XPath"; // inserted thedoc->setProperty(lang,xpathlang); // inserted _bstr_t sQuery = L"//a/b/c[Module[contains(.,'EXE')]]"; //unchanged ... Thanks again Dimitre
