[site]: stackoverflow
[post_id]: 1546501
[parent_id]: 
[tags]: 
Increasing performance on a logging table in SQL Server 2005

I have a "history" table where I log each request into a Web Handler on our web site. Here is the table definition: /****** Object: Table [dbo].[HistoryRequest] Script Date: 10/09/2009 17:18:02 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[HistoryRequest]( [HistoryRequestID] [uniqueidentifier] NOT NULL, [CampaignID] [int] NOT NULL, [UrlReferrer] [nvarchar](512) NOT NULL, [UserAgent] [nvarchar](512) NOT NULL, [UserHostAddress] [nvarchar](15) NOT NULL, [UserHostName] [nvarchar](512) NOT NULL, [HttpBrowserCapabilities] [xml] NOT NULL, [Created] [datetime] NOT NULL, [CreatedBy] [nvarchar](100) NOT NULL, [Updated] [datetime] NULL, [UpdatedBy] [nvarchar](100) NULL, CONSTRAINT [PK_HistoryRequest] PRIMARY KEY CLUSTERED ( [HistoryRequestID] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY] ) ON [PRIMARY] GO ALTER TABLE [dbo].[HistoryRequest] WITH CHECK ADD CONSTRAINT [FK_HistoryRequest_Campaign] FOREIGN KEY([CampaignID]) REFERENCES [dbo].[Campaign] ([CampaignId]) GO ALTER TABLE [dbo].[HistoryRequest] CHECK CONSTRAINT [FK_HistoryRequest_Campaign] GO 37 seconds for 1050 rows on this statement: SELECT * FROM HistoryRequest AS hr WHERE Created > '10/9/2009' ORDER BY Created DESC Does anyone have anysuggestions for speeding this up? I have a Clustered Index on the PK and a regular Index on the CREATED column. I tried a Unique Index and it barfed complaining there is a duplicate entry somewhere - which can be expected. Any insights are welcome!
