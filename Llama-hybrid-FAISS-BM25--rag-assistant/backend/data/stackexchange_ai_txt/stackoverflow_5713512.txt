[site]: stackoverflow
[post_id]: 5713512
[parent_id]: 
[tags]: 
.net sockets ObjectDisposed exception

I am using async sockets in my project. When i calling Disconnect method in my class NotifyConnection ObjecDispoded exception arises. I realize that that happen becaouse socket.Close() method calls Dispose inside. Have anyone idea how close socket in this situation ? public void Disconnect() { try { lock (_syncRoot) { _clientSocket.Shutdown(SocketShutdown.Both); _clientSocket.Close(); } } catch (SocketException ex) { OnSocketExeceptionThrowed(new EventArgs (ex)); NotificationAgentEm.LogExceptionToConsole(ex); } } I expcect what EndReceive not called because socket.ShutDown closes socket receiving data..but EndReceive called after socket.ShutDown;socket.Close. End exception throwed because socket not exist at this moment. private void OnReceiveData(IAsyncResult ar) { try { TransferStateObject state = null; lock(_syncRoot) { string message; state = (TransferStateObject)ar.AsyncState; // in this place exception throwed . client socket not exist becaouse it destroyed in disconnect method int bytesRead = _clientSocket.EndReceive(ar); keleton of how i using async sockets. public void Connect(string host, int port) { if (host == null) throw new NullReferenceException(); try { _clientSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp); _clientSocket.Connect(host, port); } catch (Exception ex) { NotificationAgentEm.LogExceptionToConsole(ex); throw; } } public void Disconnect() { try { lock (_syncRoot) { _clientSocket.Shutdown(SocketShutdown.Both); _clientSocket.Close(); } } catch (SocketException ex) { OnSocketExeceptionThrowed(new EventArgs (ex)); NotificationAgentEm.LogExceptionToConsole(ex); } } public void StartListen() { if (_clientSocket == null) { throw new InvalidOperationException("No connection"); } try { BeginReceive(); } catch (SocketException ex) { NotificationAgentEm.LogExceptionToConsole(ex); OnSocketExeceptionThrowed(new EventArgs (ex)); } } private void BeginReceive() { try { var receivedTranferObject = new TransferStateObject(); _clientSocket.BeginReceive( receivedTranferObject.Buffer, 0, TransferStateObject.BufferSize, 0, new AsyncCallback(OnReceiveData), receivedTranferObject); } catch(SocketException ex) { OnSocketExeceptionThrowed(new EventArgs (ex)); NotificationAgentEm.LogExceptionToConsole(ex); } } private void OnReceiveData(IAsyncResult ar) { try { TransferStateObject state = null; lock(_syncRoot) { string message; state = (TransferStateObject)ar.AsyncState; // in this place exception throwed . client socket not exist becaouse it destroyed in disconnect method int bytesRead = _clientSocket.EndReceive(ar); //bla bla bla } } p.s sorry for my english
