[site]: stackoverflow
[post_id]: 4796725
[parent_id]: 
[tags]: 
PowerShell renders exes commands inert?

I mistakenly used the below PowerShell construct to capture stdout: $output = devenv.exe ..... Or, if I invoke the exe as a function parameter: obj.LogOutput((devenv.exe ...)) After either of these commands are executed, all future commands executed within the same command window do nothing. If I ran devenv, echo, or xcopy, for example, they immediately return without executing. If I run "devenv /?" no output was produced. If I closed the command window and started a new one everything returned to normal. I was able to execute these commands again. What gives? I know the syntax is incorrect, but PowerShell never errored on the syntax. Instead it silently fails when executing subsequent EXEs (PowerShell commands continue to work, btw). What about my syntax tripped up PowerShell so bad? I ask mostly because I am seeing this behavior again but I can find any of the above constructs in my script. Update: My best guess was this construct: $o = new-object psobject $o | add-member -force -memberType ScriptMethod -name Test -value { param($t) $t > c:\temp\output.txt" } $o.Test((xcopy /?)) This was very similar to the line of code that was causing the problem in my original script, but this code standalone does not reproduce the problem. In any case, I would think there would be no syntax I could dream up that would render all EXEs inoperable.
