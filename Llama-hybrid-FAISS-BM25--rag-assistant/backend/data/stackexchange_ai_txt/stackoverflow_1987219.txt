[site]: stackoverflow
[post_id]: 1987219
[parent_id]: 1986969
[tags]: 
As others have said, in C, static variables must be initialized with compile-time constants. If you omit the initial value, it is taken as 0 . Now, about the logic in your function. I think the function is written much more clearly like this (I am not changing the form of the function): #include int min_call(int num, ...) { va_list argptr; int number; static int min = INT_MAX; va_start(argptr, num); while ((number = va_arg(argptr, int)) != -1) if (number If num should also be included in the calculation of the minimum, then you will need an additional check along the lines of if (num . I also have trouble understanding if (min line. Since all_min was initialized to -1 in the beginning and then never touched, the if condition will always be true. Note that the initialization of min is to INT_MAX and not INT_MIN as one of the comments says, and that we must call va_end() .
