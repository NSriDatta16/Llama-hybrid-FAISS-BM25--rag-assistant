[site]: crossvalidated
[post_id]: 131127
[parent_id]: 130902
[tags]: 
I don't know how you could use cross-correlation to quantitatively check the correctness of the implementation. Below I give you some other ideas. One possibility (probably the most straightforward) to test your implementation of the simulation smoother is trying to reproduce the results from some application that use it for the model you are interested in. The simulation smoother can be used for Bayesian estimation of state space models using the Gibbs sampler. Another possibility to test your code is therefore to generate several series from a known model and check if the average parameter estimates based on the Gibbs sampler are close to the true values (e.g., you could check if the true values lie within the 95% confidence intervals in 95% of the simulated series). This would require the additional work of implementing the Gibbs sampler, but for the local level model it is not that hard (at least for the purposes of getting some benchmark results). Edit If you are looking for some software to get benchmark results, the function simulateSSM in the R package KFAS implements the simulation smoother. In order to replicate results you may set the seed for the random number generator (and use the same algorithm to generate the random values from the Gaussian distribution). Alternatively you may dig into the source code and modify the function to pass some values or to print the values that are generated by the random number generator so that you can use them in your function to compare results. The first approach seems the most straightforward, but you will have to make sure that a given seed generates the same draws in R and in the software you are using. Be also aware that the simulation smoother depends on the output from the Kalman filter (the prediction error, its variance and the Kalman gain) so you will have to check that the same input is passed to the simulation smoother (differences for example in the initialization of the Kalman filter may lead to changes in the output from the simulation smoother).
