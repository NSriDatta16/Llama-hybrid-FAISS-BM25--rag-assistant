[site]: stackoverflow
[post_id]: 5211761
[parent_id]: 
[tags]: 
Jquery connected lists via tabs - database interaction

I have two connected lists, each within a Jquery UI tab. I would like the lists to be connected through the tab so that dragging and dropping a li element from one ul list onto the tab name should append the li element to the target ul list. I have been able to do this to an extent with the JQuery with the connect lists through tabs Jquery tutorial , however I haven't been able to construct the callback function I need on the drop event. The callback would need to (a) identify the id of the draggable item, (b) the target list based on which droppable tab it was droppped on, and (c) send both to a PHP script via GET/POST which would do the database interaction (moving the item from one database table to another). Here's the JQuery I'm using so far (the first part handles internal sorting for sortable1 and sortable2 ): $(function() { $("#sortable1").sortable({ items: 'li:not(.ui-state-disabled)', opacity: 0.6, cursor: 'move', connectWith: '.connectedSortable', update: function() { var order1 = $(this).sortable("serialize"); $.get("updatedb.php?p=masterlist", order1, function(data){ }); }, }); $("#sortable2").sortable({ items: 'li:not(.ui-state-disabled)', opacity: 0.6, cursor: 'move', connectWith: '.connectedSortable', update: function() { var order2 = $(this).sortable("serialize"); $.get("updatedb.php?p=offline", order2, function(data){ }); }, }); var $tabs = $( "#tabs" ).tabs(); $("#tabs").droppable({ accept: ".connectedSortable li", drop: function(ev, ui) { } }); (The drop even callback is empty as none of my attempts have worked so far.) Here is the html output for the lists: Tab 1 Tab 2 Item 1 Item 2 Item 3 Item 4 Item 5 Item 1 Item 2 Item 3 Item 4 Item 5 Any help with this problem would be greatly appreciated. Thanks. EDIT: Solved, like this: var $tab_items = $( "ul:first li", $tabs ).droppable({ accept: ".connectedSortable li", hoverClass: "ui-state-hover", drop: function( event, ui ) { var $id = ui.draggable.attr('id'); var $item = $( this ); var $list = $( $item.find( "a" ).attr( "href" ) ) .find( ".connectedSortable" ); ui.draggable.hide( "fast", function() { $tabs.tabs( "select", $tab_items.index( $item ) ); $( this ).appendTo( $list ).show( "fast" ); }); var $listname = $list.attr('id'); $.get("tester.php", {list:$listname, id:$id}, function(data){ }); } }); });
