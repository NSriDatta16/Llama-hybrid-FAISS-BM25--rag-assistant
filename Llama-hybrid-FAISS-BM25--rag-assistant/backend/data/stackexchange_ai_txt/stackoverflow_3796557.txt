[site]: stackoverflow
[post_id]: 3796557
[parent_id]: 3796520
[tags]: 
Okay, I'm not going to question your sanity here since I'm sure you wouldn't be asking the question if there weren't a good reason :-) Here's how I'd approach it. Create a sorted list, then simply create another list by processing the keys in order, alternately inserting before and appending, something like: sortedlist = list.sort (descending) biginmiddle = new list() state = append foreach item in sortedlist: if state == append: biginmiddle.append (item) state = prepend else: biginmiddle.insert (0, item) state = append This will give you a list where the big items are in the middle. Other items will fan out from the middle (in alternating directions) as needed: 1, 3, 5, 7, 9, 10, 8, 6, 4, 2 To get a list where the larger elements are at the ends, just replace the initial sort with an ascending one. The sorted and final lists can just be pointers to the actual items (since you state they're not simple integers) - this will minimise both extra storage requirements and copying.
