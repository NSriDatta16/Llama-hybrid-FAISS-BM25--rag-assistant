[site]: stackoverflow
[post_id]: 1532651
[parent_id]: 1523629
[tags]: 
The primary reasons for adopting HTML5 are to support integration of audio and video directly into the browser without any additional software or programming instruction. There are some problems with this reasoning. 1) HTML does not exist for usability or multimedia. These were never its objectives and are not the intent of the language. The intent of HTML is to describe and structure content as data intended for human consumption regardless of whether it is written by a human. 2) 95+% of all reported security vulnerabilities are related to client side scripting. This includes technologies such as: Flash, Acrobat, ActiveX, Silverlight, JavaScript, and so forth. Integrating the features of those technologies directly into HTML means integrating those technology failures related to security directly into HTML. Client side scripting technologies that require a plugin for execution allow the vendor of those plugins to rapidly develop and release security patches when security exploits are discovered. How often is HTML updated? 3) HTML5 ignores all problems associated with current forms of HTML: security, accessibility, and syntax conformity. Subtle changes to HTML can do wonders to improve security on the web, such as imposing limitations upon the uses of iframes which are the fastest growing attack vector for JavaScript and ActiveX related exploits. Accessibility has always been a problem with the web, and stricter requirements with the heading tags (h1 - h6) could significantly reduce content navigation confusion to users of text readers. HTML is the most lax and syntactically divergent language possibly ever created, which incredibly impairs or eliminates access of many assisting technologies. The reason for supporting HTML5, as stated in point 1 above is to embed multimedia. The reasons why this is important are absurd and don't make any sense. Let's review what the common mandates for support: 1) It is the future, so therefore you must support it. This is a fallacy of logic on its face. It is your choice to support it regardless if it is claimed to be the next version of the language. Browsers are not going to abandon support for HTML 4 or XHTML1 for more than a decade at least. 2) If you don't support it you will be left behind. This came from the article 'HTML5 Is Coming: Ignore It at Your Own Peril' linked in a comment of this thread. The article uses some metaphor of television remote controls and progression to color TV that does not make any sense to the current subject. If you don't support HTML5 you can continue to support Flash, Silverlight, and other media plugin technologies. Vendors will continue to support those products even after HTML5 is released and they will continue to do their jobs and innovate just the same as they have in the past. 3) HTML5 is going to provide support for audio/video that you currently have to rely upon plugins for. There is no reason these features must exist in HTML. Flash is a radically prolific plugin and there is no reason flash based media is unavailable to consuming audiences to any measurable extent that could only be solved by forcing those problems into HTML. 4) The time it takes to learn and write code like ActionScript is expensive and by forcing those benefits into HTML5 there will be a cost savings to development. This comes from the article 'Why HTML5 is a Game Changer and what it means for you.' linked in this thread. This is completely made up. Media takes time to develop. Client side script to process multimedia on the web takes time to write. Now matter where you force that stuff to execute from there is still development time. There are no numbers behind any measurements or research into development cost savings. The author completely made this up, and the author is wrong. The moment HTML creates video for you and supplies you with the code the process that video for the user automatically without regard for customization is the moment the author stops being wrong, but until that time media will always take time to create and publish. 5) The doctype string is too confusing to memorize and HTML5 solves this problem with a simple doctype declaration. This point is not stated, so far, in the any of the comments of the question, but it is stated elsewhere. If an HTML coder cannot copy the doctype declarations, which are found as the first result in a Google search, then that developer has other more serious problems to solve. The moment copy and paste becomes too complicated is the moment it is time to stop writing code. My opinion is that there are no strong reasons for support HTML5. Security failures and compromises on average cost business $11.3 million per compromise last year according to research from Symantec, so there are strong reasons for not supporting HTML5. http://eval.symantec.com/mktginfo/enterprise/white_papers/b-whitepaper_government_internet_security_threat_report_04-2009.en-us.pdf http://eval.symantec.com/mktginfo/enterprise/white_papers/b-whitepaper_internet_security_threat_report_xiv_04-2009.en-us.pdf http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/web_based_attacks_02-2009.pdf
