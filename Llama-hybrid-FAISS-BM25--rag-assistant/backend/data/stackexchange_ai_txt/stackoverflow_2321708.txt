[site]: stackoverflow
[post_id]: 2321708
[parent_id]: 
[tags]: 
Ninject modules or organising wiring up dependencies

I've started playing with Ninject and from a screencast it states the following is how you set up a binding: class MyModule : StandardModule { public override void Load() { Bind ().To (); // More bindings here... } } This is all very good. However suppose you have one hundred objects used in an application. That would mean this would have one hundred bindings. Is this correct? Secondly, I presume that given such an application it may be split into subsystems such as GUI, Database, Services and so on. Would you then create a custom module for each subsystem which in turn would be: GUIModule DatabaseModule ServiceModule ... For each module you'd have the correct bindings that they required. Am I on the right page here? Finally would this binding all occur in Main or the entry point for your application?
