[site]: crossvalidated
[post_id]: 304352
[parent_id]: 
[tags]: 
Estimating mean of Neural Network

Is there a way, how one can estimate the mean of a neural network $f(\vec{x})$ $$ \int_{\mathbb{B}_1} f(\vec{x}) d\vec{x} $$ efficiently? Of course, one could sample randomly points from the feature space, propagate them through the network, collect the results, and calculate the arithmetic mean. The problem with this is though, that, when the network gets too many inputs (for example an image) the curse of dimension would make it unrealistic to sample the feature space densly enough. So can one somehow use, that one knows the funcitonal form $$f(\vec{x}) = \text{softmax}(\text{ReLu}(A_1 \text{ReLu}(A_2...\text{ReLu}(A_N \vec{x})))...) $$
