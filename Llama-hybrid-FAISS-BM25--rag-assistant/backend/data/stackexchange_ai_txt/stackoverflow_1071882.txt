[site]: stackoverflow
[post_id]: 1071882
[parent_id]: 1071856
[tags]: 
Switch statements (especially long ones) are considered bad, not because they are switch statements, but because their presence suggests a need to refactor. The problem with switch statements is they create a bifurcation in your code (just like an if statement does). Each branch must be tested individually, and each branch within each branch and... well, you get the idea. That said, the following article has some good practices on using switch statements: http://elegantcode.com/2009/01/10/refactoring-a-switch-statement/ In the case of your code, the article in the above link suggests that, if you're performing this type of conversion from one enumeration to another, you should put your switch in its own method, and use return statements instead of the break statements. I've done this before, and the code looks much cleaner: private DiscountType GetDiscountType(string discount) { switch (discount) { case "A": return DiscountType.Discountable; case "B": return DiscountType.Loss; case "O": return DiscountType.Other; } }
