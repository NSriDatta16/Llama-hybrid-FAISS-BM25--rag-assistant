[site]: stackoverflow
[post_id]: 5721799
[parent_id]: 5719212
[tags]: 
Yes, you can do this. At the end of the day you are just using Windows Server, so anything that installs there will install in the cloud as well. I have done this myself for hosting WordPress in Windows Azure. However, there are some pitfalls here. Mostly the pitfalls are around the M (MySQL). To setup MySQL in Windows Azure is not really that hard, but you have several considerations on how to make sure it is always available. You can: Setup a single instance of MySQL in a role and store the db on local disk (this is a bad idea). Setup a single instance of MySQL in a role and store the db on a drive (blob backed storage) Setup 2 instances of MySQL to each point to a shared drive (hot-failover). Only one drives will be able to mount. Now, you have reliability and failover, but a single instance at a time working for you. Setup 1 writer of MySQL on a drive, and multiple readers on a snapshot of a drive. Put in some logic via connection strings to make sure only writes goto a single one and reads to the others. Snapshot every X mins to update readers. Setup multiple instances of MySQL and use native replication features (each storing to local disk) and rely on that if you lose an instance. There are probably more permutations, but the gist of the problem is how you scale out MySQL to be available and reliable. In Windows Azure, you don't get to rely on the fact that the local disk will always be around or that you will always have the same instance. In fact, you can guarantee that your instances will be down for some period of time each month and eventually, given enough time, you will lose the local disk. Overall, with multiple instances however, you can guarantee they won't be down simultaneously (to the service SLA level at least). So, you need to make sure MySQL works with multiple instances (or live with single instance downtime) and that your data is backed by blob storage to guarantee it is persisted. Or you can scrap all that crap and just use SQL Azure, which solves all those problems. So, it become WASP. SQL Azure can also be more economical as well for smaller DBs.
