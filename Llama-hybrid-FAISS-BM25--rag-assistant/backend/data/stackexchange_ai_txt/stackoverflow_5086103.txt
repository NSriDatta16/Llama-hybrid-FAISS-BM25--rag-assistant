[site]: stackoverflow
[post_id]: 5086103
[parent_id]: 
[tags]: 
gcc stack optimization

Hi I have a question on possible stack optimization by gcc (or g++).. Sample code under FreeBSD (does UNIX variance matter here?): void main() { char bing[100]; .. string buffer = ....; .. } What I found in gdb for a coredump of this program is that the address of bing is actually lower than that buffer (namely, &bing[0] I think this is totally the contrary of was told in textbook. Could there be some compiler optimization that re-organize the stack layout in such a way? This seems to be only possible explanation but I'm not sure.. In case you're interested, the coredump is due to the buffer overflow by bing to buffer (but that also confirms &bing[0] Thanks!
