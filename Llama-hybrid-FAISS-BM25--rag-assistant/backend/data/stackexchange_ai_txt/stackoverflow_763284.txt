[site]: stackoverflow
[post_id]: 763284
[parent_id]: 585065
[tags]: 
There are 2 main approaches to building an RCP app 1.) You are using RCP just for the platform features - SWT/startup exe/Auto-update. The application code will be isolated from RCP conventions and libraries as much as possible for the actual app biz functionality. 2.) Your app is completely immersed in RCP. You try to reuse RCP API's wherever possible I have tried out Option 1. In this case, the experience is very similar to Java development. You might want to try this option out. The advantages are - -- SWT is very well integrated into RCP. You dont need to run into hoops to get it working. I would recommend SWT over Swing any day as it is very easy for an average programmer to create a responsive and native-feeling SWT app while it takes a Swing expert to create a decent Swing app -- With a client app, the ability to auto-update is very useful. Eclipse automatically offers this functionality. RCP stuff you still need to learn are: -- How the Eclipse classloader works. This is to ensure you can explicitly load resources from your jars in the correct way [NOTE: It is not simple] -- You will need to package the JVM along with the app. And invoke the JVM on startup using relative naming convention
