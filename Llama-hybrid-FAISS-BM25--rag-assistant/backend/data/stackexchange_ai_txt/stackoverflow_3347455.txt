[site]: stackoverflow
[post_id]: 3347455
[parent_id]: 3326110
[tags]: 
Tools like XMLVM , Codename One and iSpectrum tell us that you can actually cross-compile Java code (from an Android app or creating one from scratch) to Objective-C code that is running on an iPhone without having to install any virtual machine on the Apple side of things. I suggest watching Developing iPhone Applications using Java Unfortunately Apple's license agreement for the iPhone SDK prohibits the porting of the Java virtual machine to the iPhone. In this presentation we introduce an Open Source Java-to-Objective-C cross-compiler as well as a Java-based implementation of the Cocoa library. With the help of these tools, iPhone applications can be written in pure Java. Using the Java version of Cocoa, it is possible to run a Java-based iPhone application as a Java desktop/applet application that can be cross-compiled to run natively on the iPhone. The talk will discuss the challenges of the Java-to-Objective-C cross-compiler as well as the Java-based version of Cocoa. Details are available at http://www.xmlvm.org/ and for more insight a more recent talk about Cross-Compiling Android applications to the iPhone from Frebruary 2010 is available here , which is documented at http://www.xmlvm.org/android/ : Android is an Open Source platform for mobile devices. Initiated by Google, Android has received much attention. Android applications are developed using Java, although a special compiler converts class files to a proprietary, register-based virtual machine that is used on Android devices to execute applications. Android defines its own API for writing mobile applications. With the help of XMLVM it is possible to cross-compile Java-based Android applications to native iPhone applications. The Android application is written in Java and makes use of an Android specific API. XMLVM offers a compatibility library, written in Java, that offers the same API as Android, but only makes use of the Java-based API for Cocoa Touch. During the cross-compilation process, both the application and the Android compatibility library are cross-compiled from Java to Objective-C and linked with the Cocoa Touch compatibility library to yield a native iPhone application. From the 2008 talk about building Java applications for the iPhone http://www.xmlvm.org/iphone/ : Apple's iPhone has generated huge interest amongst users and developers alike. Like MacOS X, the iPhone development environment is based on Objective-C as the development language and Cocoa for the GUI library. The iPhone SDK license agreement does not permit the development of a virtual machine. Using XMLVM, we circumvent this problem by cross-compiling Java to the iPhone. Just like a Java application can be cross-compiled to AJAX, XMLVM can be used to cross-compile a Java application to Objective-C. The cross-compilation is also accomplished by mimicking a stack-based machine in Objective-C.
