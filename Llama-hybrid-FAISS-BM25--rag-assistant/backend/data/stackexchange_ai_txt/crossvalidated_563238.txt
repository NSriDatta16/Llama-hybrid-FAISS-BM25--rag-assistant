[site]: crossvalidated
[post_id]: 563238
[parent_id]: 563090
[tags]: 
I think Arthur's answer is quite valuable here, but I think some more detail can be added. Let's keep in mind that feature engineering is not the same as data collection. You should absolutely collect more data and more variables/information if you can. However, at the stage of feature engineering, we're assuming you already have all the raw data you could get. During feature engineering, your job is to select, transform and combine these raw data variables in ways that are helpful to the model. The process that Arthur outlines is absolutely correct - to engineer good features, you need to have some subject matter input (someone who understands exactly what each variable means, how it was gathered etc.) . This way, you can combine this expertise with some creativity to find new ways of representing the data. Let's move away from these somewhat abstract definitions, and let me give you some potential ideas for features. Most fundamental thing to keep in mind: It's a huge range of potential here. As long as you're not leaking data, you can try literally whatever you can think of . There are no boundaries. If you have an idea that you think makes sense in the context of the problem, try it! Some ideas I had, given your dataset (adjust these to your understanding of the data, as I might not fully know your situation): Average booking QTY of the customer (up until a point in time, remember - no data leaking from the future, don't average across the whole dataset, only the data you would've had at that point) Average size of order or price of item of the customer (up until a point in time, remember - no data leaking from the future, don't average across the whole dataset, only the data you would've had at that point. As I hope you realize, this comment applies to ALL the features I mention, and all features you can think of.) Number of orders this customer has made with you With your date_diff variables, you could again take averages (like average time to respond to this customer etc., rather than just the most recent response time) You could take standard deviations of these date_diff variables (to see how consistent it is over time) If you have the data for it, you could look at average of actual revenue realized vs. your "revenue expected" column ("On average, the realized revenue is x% of expected revenue, for this customer/category) You could look at any of the above variables and calculate them only for the customers within a certain category, and then compare your given customer to all other customers in that category (so for example, look at the number of orders customer X, in category Z, has made with you COMPARED to the average number of orders ALL customers in category Z have made with you. You could express this number as a percentile). I think this gives some pointers and inspiration!
