[site]: crossvalidated
[post_id]: 353756
[parent_id]: 
[tags]: 
Normality test giving confusing results

So I was transforming data for machine learning purposes and checking whether I should use the data or log-transform it. In addition to creating histograms I decided to test for normality using scipy.stats.normaltest . The data looks as follows. The result of the normality test for this particular data was that the p-value=0.73 . Now, I don't claim to be a statistician. However... This does not look like a normal distribution. I tested with a np.random.normal(0, 1, size=1000) and it gave something along the lines of p=0.2 and increasing it to a hundred thousand points gave p=0.6 . My data holds ~4000 records. So I must ask. Have I missed something here? Some of the other vaguely log-normally distributed variables gave p-values of the order 10^-20 after transforming. Does the value of the Chi^2 test need to be incorporated in some manner? I'm really lost. Edit: Running the normaltest on the whole DataFrame gives different results, which adds to the confusion. It gives the same Chi^2 value, but a halved p-value of 0.365... Edit II Just for the heck of it, this data gives a similar graph but a p-value of 0.97. What. >>> a = np.sort(df['col'].values).tolistfrom scipy.stats import normaltest >>> normaltest(a) NormaltestResult(statistic=0.05292848970575527, pvalue=0.9738828645381232) >>> from matplotlib import pyplot as plt >>> plt.hist(a) # Results in a similar graph to above
