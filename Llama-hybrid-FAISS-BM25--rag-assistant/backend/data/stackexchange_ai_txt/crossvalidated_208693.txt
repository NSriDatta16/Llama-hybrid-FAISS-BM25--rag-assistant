[site]: crossvalidated
[post_id]: 208693
[parent_id]: 208451
[tags]: 
As I understand you want to use supervised learning algorithm, then you need target variable (outcome). WinnerName and LoserName can't provide any useful information to classifier, you don't need these columns in your dataset. Players are fully described by (Stat1, Stat2, ..., StatN) One row represents one game. Suggested dataset structure: Player1Stat1 ... Player1StatN Player2Stat1 ... Player2StatN Outcome where the outcome is 1 if Player1 has won, and 0 (or -1) if Player2. Now you need additional function which puts in correspondence player name and his Stats1..StatsN vector. userName -> [Stats1..StatsN]: create.stats.vector Now you can create dataset rows by two names: # One dataset row for learning: c(create.stats.vector('John'), create.stats.vector('Ivan'), Outcome) # One dataset row for prediction c(create.stats.vector('John'), create.stats.vector('Ivan')) EXAMPLE Suppose you have 3 players: get.stats.vector.from.database.or.text.file Suppose you have 2 games (2 rows of data): df You can create stats vectors for each row of this dataframe: create.fm.row Now you have feature matrix and can apply machine learning methods. Note As I understand you want to use for loop for feature matrix creation. But, as noted here [r-bloggers.com] , usage of loops in general should be avoided in R
