[site]: stackoverflow
[post_id]: 2927008
[parent_id]: 2926612
[tags]: 
I don't know what's the structure of your tables, so I will assume that id is actually user_id since I believe you are trying to associate the user with its comments. Maybe you made a mistake rewriting the code to post it here? Anyway, my last point will be based on these assumptions. There is no need to reconnect to the same database inside the loop. Your second loop shouldn't overwrite the $row array. Use $row2 instead to prevent headaches. You can do all the work in a single query as stated above with LEFT JOIN or subqueries. Your first query returns a single record, so, there is no need to loop through it. Here is your fully rewritten code, not tested and assuming that you want to display the user data based on my assumptions in the first paragraph. $mysqli = mysqli_connect("localhost", "root", "", "sitename"); $dbc = mysqli_query($mysqli,"SELECT users.*, COUNT(cid) AS num FROM users LEFT JOIN comments ON comments_id = user_id WHERE user_id = 4 GROUP BY users.user_id"); if (!$dbc) { // There was an error...do something about it here... print mysqli_error($mysqli); } if($row = mysqli_fetch_assoc($dbc)){ echo 'User: ' . $row['user_id'] . ''; echo 'Link To User' . $row['user_id'] . ''; echo 'User ' . $row['user_id'] . ' Comments# ' . $num . ''; } Next time please provide your table structures so we can give a more accurate solution to your problem. Quick Reference: Using Quotes I will explain something here since I saw some of you make the same mistake with quotes a couple of times in your responses to this post. This is what you tell PHP when you use quotes: Single Quotes: Do not parse here. Double Quotes: Parse the contents inside the quotes, please. No Quotes: This is a constant or number, please parse if it's a constant only. When you're working with arrays, the element inside the square brackets should be single quoted if there is nothing to be parsed there. If there is a number or a constant, you can drop the quotes. For instance: // If your string is double quoted, you use regular brackets to encapsulate the array $sql = "SELECT * FROM tableA WHERE id = {$myarray['id']}"; Or, there is another similar approach: $sql = "SELECT * FROM tableA WHERE id = ".$myarray['id']; Which can also be written like: $sql = 'SELECT * FROM tableA WHERE id = '.$myarray['id']; Another couple of examples: // This is correct echo $myarray[5]; // If you are using constants, this is correct too define('MYCONSTANT', 5); echo $myarray[MYCONSTANT]; // This shouldn't be used, because 'name' isn't a constant... echo $myarray[name]; // Use this instead... echo $myarray['name']; // Or, like I explained above, escape the array echo "My name is {$myarray['name']}"; Hope it helps.
