[site]: datascience
[post_id]: 6018
[parent_id]: 
[tags]: 
Create a prediction formula from data input

I have an algorithm which have as an input about 20-25 numbers. Then in every step it uses some of these numbers with a random function to calculate the local result which will lead to the final output of A, B or C. Since every step has a random function, the formula is not deterministic. This means that with the same input, I could have either A, B or C. My first thought was to take step by step the algorithm and calculating mathematically the probability of each output. However, it is really difficult due to the size of the core. My next thought was to use machine learning with supervised algorithm. I can have as many labeled entries as I want. So, I have the following questions: How many labeled inputs should I need for a decent approach of the probabilities? Yes, I can have as many as I want, but it needs time to run the algorithm and I want to estimate the cost of the simulations to gather the labeled data. Which technique do you suggest that works with so many inputs that can give the probability of the three possible outputs? As an extra question, the algorithm run in 10 steps and there is a possibility that some of the inputs will change in one of the steps. My simple approach is to not include this option on the prediction formula, since I have to set different inputs for some of the steps. If I try the advanced methods, is there any other technique I could use?
