[site]: stackoverflow
[post_id]: 1072523
[parent_id]: 1064232
[tags]: 
To follow up ephemient's excellent answer: Haskell type classes use an open-world assumption : some idiot can come along later and add an instance declaration that's not a duplicate and yet overlaps with your instance. Think of it as an adversary game : if an adversary can make your program ambiguous, the compiler bleats. If you're using GHC you can of course say to the compiler "to hell with your paranoia; allow me my ambiguous instance declaration": {-# LANGUAGE OverlappingInstances #-} If later evolution of your program leads to overload resolution you didn't expect, the compiler gets 1,000 I-told-you-so points :-) Deprecation Note This pragma has been deprecated since GHC 7.10, and per-instance pragmas should be used instead. More detail can be found in the GHC documentation .
