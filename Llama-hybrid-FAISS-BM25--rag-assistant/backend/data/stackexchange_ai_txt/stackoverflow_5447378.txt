[site]: stackoverflow
[post_id]: 5447378
[parent_id]: 5446187
[tags]: 
This is the specification . It is slightly stale right now and doesn't have the formalism of a normal spec. However, Blocks have been proposed in the C working group and a more formal specification has been discussed in that context. Specifically, the spec says: The Block_copy operator retains all objects held in variables of automatic storage referenced within the Block expression (or form strong references if running under garbage collection). Object variables of __block storage type are assumed to hold normal pointers with no provision for retain and release messages. Thus, the behavior you are seeing is correct, though it is definitely a pitfall! A block won't retain anything until the block is copied. Like blocks starting on the stack, this is largely a performance based decision. If you were to change your code to: SimpleBlock block2_copied = [block2 copy]; [block1_copied release]; It behaves as expected. The static analyzer should catch that, but does not (Please file a bug ).
