[site]: stackoverflow
[post_id]: 2097226
[parent_id]: 2097191
[tags]: 
In your examples it seems that you can in both cases solve the problem by getting the 'first fields', the 'last fields' and 'everything in between': m = line.split("¬")[2].split() firstname = m[0] surname = m[-1] initials = m[1:-1] # Maybe just keep this as a list? And: m = line.split("¬")[4].split() city = ' '.join(m[:-2]) state = m[-2] zipCode = m[-1] In general you can handle a single field containing spaces by getting the 'fixed' fields from both the start and the end and whatever is left over is the field that can contain spaces.. As soon as you have two fields containing spaces in the same column, there's nothing you can do. It's ambiguously defined. With the data format you have, you may have some problems if there are people with first or last names containing spaces such as Robert Van de Graff. This can be solved if you have an initial by looking for words containing only one letter such as: Robert J. Van de Graaff and using those to define where the first and last names start and end. But in general you may have problems. Also there's an internationalization issue hidden here: not everyone writes their 'first name' first - sometimes they write their family name first.
