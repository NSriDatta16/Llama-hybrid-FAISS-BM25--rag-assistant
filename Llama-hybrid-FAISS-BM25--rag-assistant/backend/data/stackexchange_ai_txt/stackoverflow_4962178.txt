[site]: stackoverflow
[post_id]: 4962178
[parent_id]: 4961725
[tags]: 
Without haveing a logcat output or stack trace to work from, my guess is that you are making most devices scream for mercy by loading that many MediaPlayer instances into memory at one time! Calling MediaPlayer.create() not only creates another instance, it also calls prepare() on it and get it ready to roll. Perhaps try a more streamlined approach: public class MyMain extends Activity implements MediaPlayer.OnCompletionListener { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); //Set up the buttons Button bmoney = (Button) findViewById(R.id.money); bmoney.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.money); } }); Button bpants = (Button) findViewById(R.id.pants); bpants.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.pants); } }); Button oath = (Button) findViewById(R.id.oath); oath.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.oath); } }); Button tardis = (Button) findViewById(R.id.tardis); tardis.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.tardis); } }); Button screwdriver = (Button) findViewById(R.id.screwdriver); screwdriver.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.screwdriver); } }); Button alarm = (Button) findViewById(R.id.alarm); alarm.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.alarm); } }); Button kame = (Button) findViewById(R.id.kame); kame.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.kame); } }); Button card = (Button) findViewById(R.id.card); card.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.card); } }); Button laugh = (Button) findViewById(R.id.laugh); laugh.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.laugh); } }); Button him = (Button) findViewById(R.id.him); him.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.him); } }); Button her = (Button) findViewById(R.id.her); her.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.her); } }); Button hell = (Button) findViewById(R.id.hell); hell.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.hell); } }); Button mocking = (Button) findViewById(R.id.mocking); mocking.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.mocking); } }); Button god = (Button) findViewById(R.id.god); god.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.god); } }); Button rasengan = (Button) findViewById(R.id.rasengan); rasengan.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.rasengan); } }); Button rasen = (Button) findViewById(R.id.rasen); rasen.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.rasen); } }); Button dalek = (Button) findViewById(R.id.dalek); dalek.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.dalek); } }); Button sharingan = (Button) findViewById(R.id.sharingan); sharingan.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { playSound(R.raw.sharingan); } }); } //Consolidate media playing to one location private void playSound(int resId) { MediaPlayer mp = MediaPlayer.create(this, resId); mp.setOnCompletionListener(this); mp.start(); } //Completion listener method public void onCompletion(MediaPlayer mp) { mp.release(); } } This method will create the MediaPlayer instance and play the sound only at the time you need it. Once complete, the listener can release the resources to keep your memory footprint reasonable. You could also streamline this code further by making use of android:onClick in your XML to have all the buttons call one method, and then call playSound() with the right id based on the button id (unless your targeting 1.5, of course). Hope that helps!
