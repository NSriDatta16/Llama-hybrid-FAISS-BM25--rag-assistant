[site]: datascience
[post_id]: 121520
[parent_id]: 121507
[tags]: 
If you are predicting probabilities for each class, you can use the "categorical_crossentropy" loss function in Keras and set the "softmax" activation function on the output layer of your CNN. Since your labels are not one-hot encoded, you can use the "sparse_categorical_accuracy" metric in Keras to evaluate the accuracy of your model. This metric will compare the predicted class probabilities to the actual class labels. Here is an example code snippet: from tensorflow import keras model = keras.models.Sequential([ # add your CNN layers here keras.layers.Dense(4, activation='softmax') # output layer with 4 classes and softmax activation ]) model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['sparse_categorical_accuracy']) Note that even though your labels are not one-hot encoded, Keras will automatically convert them to one-hot encoded format internally when using the "categorical_crossentropy" loss function.
