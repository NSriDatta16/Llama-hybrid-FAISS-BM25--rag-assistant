[site]: stackoverflow
[post_id]: 1728563
[parent_id]: 
[tags]: 
changing the scope of an anonymous function on a setTimeout causes a weird warning

this has interested me purely as research and personal development. i have a namespaced set of functions / variables. within 1 function I need to call another through setTimeout but keeping the scope to 'this'. i am struggling with this a little, can't seem to bind it for when the setTimeout runs. var foo = { ads: ["foo","bar"], timeDelay: 3, loadAds: function() { var al = this.ads.length; if (!al) return; // no ads for(var i = 0; i the .apply(this) DOES change the scope as the console.log outputs the right object back, but it runs the function immediately and then the exception/warning comes up as the callback remains empty: useless setTimeout call (missing quotes around argument?) is there an elegant way of doing this at all? i know i could do var _this = this; and reference _this in the anon callback. for example, in mootools i'd use .bind(this) instead... and no, as this involves animating, i don't want to use " " around the string as it will need to be eval'd and would impact performance...
