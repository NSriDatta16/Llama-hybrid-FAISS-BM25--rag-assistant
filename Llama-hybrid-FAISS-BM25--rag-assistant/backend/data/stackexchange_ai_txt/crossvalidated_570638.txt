[site]: crossvalidated
[post_id]: 570638
[parent_id]: 570503
[tags]: 
You seem to be asking about a nonparametric estimator for the mean. First, let's make it clear: for Bayesian statistics, you always need to make distributional assumptions. You can proceed as suggested by Sextus Empiricus (+1), but this does assume Gaussian distribution. If you really didn't want to make any assumptions, in practice, you would probably just estimate the arithmetic mean. But let's try coming up with a nonparametric solution. One thing that comes to my mind is Bayesian bootstrap also described by Rasmus Bååth who provided code example . With Bayesian bootstrap, you would assume the Dirichlet-uniform distribution for the probabilities, resample with replacement the datapoints and evaluate the statistic, so arithmetic mean on those samples. But in such a case, to approximate the frequentist estimator, you would use the same estimator on the samples to find their distribution. Not very helpful, isn't it? Let's start again. The definition of expected value is $$ E[X] = \int x \, f(x)\, dx $$ The problem is that you don't know the probability densities $f(x)$ . With the parametric model, you would solve it by finding a parametric distribution for $f$ . In the frequentist setting, we would estimate the expected value using the arithmetic average with $\phi_i$ weights equal to the empirical probabilities $$ \widehat{E[X]} = \sum_{i=1}^N x_i \, \phi_i $$ Same as with Bayesian bootstrap, you could assume a prior Dirichlet-uniform prior for the $\phi_i$ weights, sampling the weights, calculating the weighted average, and repeating this many times to find the distribution of the estimates. If you think about it, It's the most trivial case of the Bayesian bootstrap for a weighted statistic. Yes, this makes a number of unreasonable assumptions like approximating continuous distribution with a discrete one. It's also not necessarily very useful, but if you insist on a Bayesian nonparametric estimator, that's a possibility. As you can see from the example below, it gives the same results as the frequentist estimator and standard bootstrap. set.seed(42) N In the end, it's the same as the frequentist estimator, so you could just use the frequentist estimator.
