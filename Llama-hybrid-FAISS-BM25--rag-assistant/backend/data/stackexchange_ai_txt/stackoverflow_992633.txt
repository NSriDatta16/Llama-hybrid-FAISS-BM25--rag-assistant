[site]: stackoverflow
[post_id]: 992633
[parent_id]: 50525
[tags]: 
If upcasting doesn't gain you any bits (there's no guarantee that sizeof(long)>sizeof(int) in C), you can use conditions like the ones below to compare and check for overflowâ€”upcasting is almost certainly faster if you can use it, though. #if !defined(__GNUC__) || __GNUC__ c. If it overflows off the bottom, a+b c || unlikely(a>=0 && b>=0 && unlikely(a+b = both numbers. */ if(a+b>c || unlikely(a+b sizeof(int) ? ((long)a+b>c) : (a+b>c || unlikely(a>=0 && b>=0 && unlikely(a+b Great candidates for macros or inline functions. You can pull the "unlikely"s if you want, but they can help shrink and speed up the code GCC generates.
