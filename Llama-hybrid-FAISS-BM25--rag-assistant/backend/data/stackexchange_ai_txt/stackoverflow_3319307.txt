[site]: stackoverflow
[post_id]: 3319307
[parent_id]: 3317537
[tags]: 
Heaps, especially for small memory allocations, a often structured as a linked list, where each heap cell points to the next. When allocating memory, the allocator will walk the heap until it finds a cell big enough for the required allocation. As your memory becomes more fragmented, you will have to walk a larger and larger number of cells. Although a large amount of work has been done to minimize allocation times, it is better to avoid the problem all together. It may well be a good idea to allocate a large block and divide this amongst a number of list items. this will probably mean you have fewer cache misses when walking your linked list. For this reason, I would avoid the high frequency use of malloc and free and add the extra complexity of a freelist.
