[site]: stackoverflow
[post_id]: 1466556
[parent_id]: 1466453
[tags]: 
It looks like you need to use a packed structure for the result. I found an example online, perhaps this will assist you: http://www.brunningonline.net/simon/blog/archives/winGuiAuto.py.html # Programmer : Simon Brunning - simon@brunningonline.net # Date : 25 June 2003 def _getMultipleWindowValues(hwnd, getCountMessage, getValueMessage): '''A common pattern in the Win32 API is that in order to retrieve a series of values, you use one message to get a count of available items, and another to retrieve them. This internal utility function performs the common processing for this pattern. Arguments: hwnd Window handle for the window for which items should be retrieved. getCountMessage Item count message. getValueMessage Value retrieval message. Returns: Retrieved items.''' result = [] VALUE_LENGTH = 256 bufferlength_int = struct.pack('i', VALUE_LENGTH) # This is a C style int. valuecount = win32gui.SendMessage(hwnd, getCountMessage, 0, 0) for itemIndex in range(valuecount): valuebuffer = array.array('c', bufferlength_int + " " * (VALUE_LENGTH - len(bufferlength_int))) valueLength = win32gui.SendMessage(hwnd, getValueMessage, itemIndex, valuebuffer) result.append(valuebuffer.tostring()[:valueLength]) return result def getListboxItems(hwnd): '''Returns the items in a list box control. Arguments: hwnd Window handle for the list box. Returns: List box items. Usage example: TODO ''' return _getMultipleWindowValues(hwnd, getCountMessage=win32con.LB_GETCOUNT, getValueMessage=win32con.LB_GETTEXT)
