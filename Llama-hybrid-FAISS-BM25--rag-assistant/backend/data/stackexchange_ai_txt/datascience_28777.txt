[site]: datascience
[post_id]: 28777
[parent_id]: 
[tags]: 
tensorflow tf.scatter_update over a matrix

i begin to work with tensorflow, and now i want to update a matrix (in the matrix, every row is one prediction, all the matrix is updated after a batch), i want to know what is the max value in the output of the mlp, and i have two problems, the first is how i can update a matrix, in the doc not says about update a matrix, i want to try update a simple array, and after update the complete row in the matrix (i'm not sure if allows that, or i will reassign all the row) ...MLP... unbatched_states = tf.split(hidden, batch_size, 0) #hidden is the last layer from one MLP, the shape is 100,100, size of 100, and batch of 100 unbatched_sense_ids = tf.split(train_sense_one_hot, batch_size, 0) ##creates a list of tensors, every tensor is a case tagged self.predictions = tf.Variable(tf.zeros([batch_size, embedding_size], dtype=tf.int64), trainable=False)#variable, where is stored the prediction) for i in range(batch_size): predicted_sense_i = tf.argmax(unbatched_states[i], 1, name='prediction') #get the index of the max value in the case i of the batch predicted_sense=tf.Variable(tf.zeros([embedding_size], dtype=tf.int64), trainable=False) #a tensor updated marking one the max value predicted_sense = tf.scatter_update(predicted_sense, predicted_sense_i), tf.constant(1, dtype=tf.int64)) #update with the index of max value self.predictions = tf.scatter_update(self.predictions[i], predicted_sense, tf.constant(1, dtype=tf.int64)) #update the matrix Exist another way for update a matrix.
