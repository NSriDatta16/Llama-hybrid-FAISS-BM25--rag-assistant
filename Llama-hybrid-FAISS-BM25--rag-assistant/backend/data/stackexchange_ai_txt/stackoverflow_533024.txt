[site]: stackoverflow
[post_id]: 533024
[parent_id]: 532906
[tags]: 
It's a perfectly sound approach, and very much what the class attribute should be used for. I would say that if a class is only consumed by jQuery and not by CSS, it's good to have a clear naming convention which indicates usage - if not for yourself, then at least for anyone else who may be working with your code, see a Class which isn't referenced in CSS and then delete it :) I tend to have a specific class name which identifies the purpose of an object, and further, often quite generic sounding, class names which specify state of an object. eg class="toolTip" - the tooltip class="toolTip open" - the tooltip in displayed state This way you can generalise naming convention for behaviours easily (and potentially JS code for them too). Also, by using CSS to define the presentation of the different states, your JS code is much more elegant than if you manage it all through JS. eg: $('div.toolTip').addClass('open'); rather than $('div.toolTip').css({display: 'block' ... etc etc }); ps. I don't think this is the place to get into the Class vs ID question, that really is a different debate!
