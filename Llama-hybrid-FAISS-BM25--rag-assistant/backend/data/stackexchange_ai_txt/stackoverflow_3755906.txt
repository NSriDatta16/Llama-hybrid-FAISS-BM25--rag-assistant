[site]: stackoverflow
[post_id]: 3755906
[parent_id]: 3754710
[tags]: 
I ended up with probably not a best solution, but here is what i've got(may be it will help someone in future): 1) I measured the time, which the recursive method needs to calculate the 42-nd(for example) Fibonacci number. 2) Using the iterative method, I counted how many program rows are executed while calculating the 42-nd Fibonacci number with the recursive method. (Rows = 3*fib_iterative(42)-2) 3) Deviding 2. by 1. I got the average number of rows executed in 1 millisecond. 4) Using the iterative method, I counted how many program rows are executed while calculating the 400-th Fibonacci number with the recursive method. (Rows = 3*fib_iterative(400)-2) 5) Deviding 4. by 3. I got the estimated time spent by fib_recursive(400). // Recursive algorithm, calculates Fibonacci number (slow) private static double fib_recursive(int n){ if( n
