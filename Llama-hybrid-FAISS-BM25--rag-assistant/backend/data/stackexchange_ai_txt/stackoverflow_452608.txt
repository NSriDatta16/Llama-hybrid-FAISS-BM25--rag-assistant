[site]: stackoverflow
[post_id]: 452608
[parent_id]: 452357
[tags]: 
You're getting into that gray area where it might be better to postprocess this outside the world of SQL. At least that's what I'd do: I'd just ORDER BY instead of GROUP BY, and loop through the results to handle the grouping as a filter done in the client language: Start by initializing last_id to NULL Fetch the next row of the resultset (if there aren't more rows go to step 6) If the id of the row is different than last_id start a new output row: a. if last_id isn't NULL then output the grouped row b. set the new grouped row = the input row, but store the name as a single element array c. set last_id to the value of the current ID Otherwise (id is the same as last_id ) append the row name onto the existing grouped row. Go back to step 2 Otherwise you have finished; if the last_id isn't NULL then output the existing group row. Then your output ends up including names organized as an array and can decide how you want to handle/escape/format them then. What language/system are you using? PHP? Perl? Java?
