[site]: stackoverflow
[post_id]: 4423025
[parent_id]: 4422998
[tags]: 
First, you're wrong: in Java, when passing an object as a parameter, you're actually passing a copy of the reference , (like passing a pointer in C or C++), so the object itself is never copied. Copy does occur with primitive types, such as int or boolean. In your example, only one object is allocated: d, and, assuming Derived inherits from Base, that object is upcasted to type Base. In fact, the cast is redundant since upcasting is implicit in Java. As a rule of thumb, just look for the new keyword: if it's there, you're creating a new object. Otherwise, you're just making a reference to an existing object.
