[site]: stackoverflow
[post_id]: 2365576
[parent_id]: 2365543
[tags]: 
CTE Version ;WITH ser as ( SELECT DISTINCT * From dbo.StuEnrlmt ser WHERE (ser.StuEsiRltnspExpctdSchlStartDate = @AsOfDate) left join dbo.RefEngLangAcqstnStatSt relass on selar.EngLangAcqstnStatStKey = relass.EngLangAcqstnStatStKey left join dbo.RefEngLangArtsTestProfcy relatp on selar.ElaTestProfcyDsgntnKey = relatp.EngLangArtsTestProfcyKey inner join dbo.StuDemo sdr on ser.StuKey = sdr.StuKey inner join dbo.RefGndr rg on sdr.GndrCodeKey = rg.GndrCodeKey left join dbo.StuStat ssr on ser.StuKey = ssr.StuKey and ssr.EfctvStartDate = @AsOfDate) inner join dbo.StuGrdLvl sglr on ser.StuKey = sglr.StuKey inner join dbo.RefGrdLvl rgl on sglr.GrdLvlKey = rgl.GrdLvlKey left join dbo.StuPgm spr on ser.StuKey = spr.StuKey AND spr.StuEduPgmMbrshpCatgStartDate = @AsOfDate) left join dbo.RefEduPgm rep on spr.EduPgmCodeKey = rep.EduPgmCodeKey left join dbo.StuPrntOrGrdn spogr on ser.StuKey = spogr.StuKey And spogr.EfctvStartDate = @AsOfDate) left join dbo.RefHighstEduLvl rhel on spogr.PrntOrGrdnHighstEduLvlCodeKey = rhel.HighstEduLvlKey left join dbo.vwStuRaceRptng srr on ser.StuKey = srr.StuKey and srr.EfctvStartDate = @AsOfDate) inner join #TempRace tr on isnull( case when sdr.StuHspncEnctyIndctr = 'Y' then 'Hispanic' when sdr.StuEnctyMsngIndctr = 'Y' or sdr.StuRaceMsngIndctr = 'Y' then 'Missing' when srr.RaceCatg2Code is not null then 'Multiple' else srr.FedEnctyRaceCatgCode end, 'Missing') = tr.Race inner join #TempGender tg on rg.GndrCode = tg.GenderCode inner join #TempGrade tgr on rgl.GrdLvLCode = tgr.GradeCode Where -- Enrollments res.EnrlmtStatCode = '10' AND isnull(rsec.StuExitCatgCode, 'N/A') != 'N470' AND -- no shows are not considered in active enrollment numbers -- Effective date Comparisions. As of date should be between Effective Start and End date (end date can be null) sdr.EfctvStartDate = @AsOfDate) AND sglr.EfctvStartDate = @AsOfDate) AND -- Filter deleted records out (spr.DeleteFlag is null OR spr.DeleteFlag = 'N') AND (spogr.DeleteFlag is null OR spogr.DeleteFlag = 'N') AND (sglr.DeleteFlag is null OR sglr.DeleteFlag = 'N') AND (selar.DeleteFlag is null OR selar.DeleteFlag = 'N') AND (sdr.DeleetFlag is null OR sdr.DeleetFlag = 'N') some ideas You don't need to make all those temp tables, your function will return an in memory table which will not go to disk, should be faster. For example change INNER JOIN #TempRace tr ON to INNER JOIN dbo.tfnParseStringIntoTable(@Race, ',') tr ON and remove all references to #TempRace. You can do the same for #TempGender and #TempGrade You can sometimes gain a lot of speed by selecting the main table's elements of interest before doing all the joins. To see what I mean, try the following and see if it works: ;WITH ser as ( SELECT DISTINCT * From dbo.StuEnrlmt ser WHERE (ser.StuEsiRltnspExpctdSchlStartDate = @AsOfDate)) AND ((spr.DeleteFlag IS NULL) OR (spr.DeleteFlag = 'N')) AND ((sdr.DeleetFlag IS NULL) OR (sdr.DeleetFlag = 'N')) AND ((ser.DeleteFlag IS NULL) OR (ser.DeleteFlag = 'N')) ) --Main select replacing FROM dbo.StueEnrlmt with FROM ser Also: You might want to join in the other elements in the where of the main select into this CTE so your main select has NO where clause (res, rsec, sdr, sglr, spr, spogr, selar), then you will be doing a lot of the slow stuff - that is case statements and joins only for records you are actually going to use. original before query code One thing to note is the estimated number of rows was 3 and the actual number of rows was 11601. Also it says order by RaceCatg2Key -- are you joining to this table? It might be ordering it so it can do the join. If you show the whole query we might have some ways to speed it up.
