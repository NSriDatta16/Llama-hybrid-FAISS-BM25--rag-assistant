[site]: stackoverflow
[post_id]: 5291993
[parent_id]: 5291725
[tags]: 
First of all, Java's sound library is rather weak compared to something like Java Media Framework, which you might look into, but if this is a simple game with minimal sound effects, Java's sound library should be enough. You may want to give more details on what type of sound files you want to play (format, length, etc) so we can better address your problem. If you want to play short clips of sound (less than a second) you should initialize the Clip at the start, and play it whenever you need it: //initialize this at the beginning of your program AudioInputStream soundStream = AudioSystem.getAudioInputStream(new File("sound.wav")); Clip soundEffect = AudioSystem.getClip(); soundEffect.open(soundStream); ... //later, play the sound soundEffect.start(); The issue with this is that Clip has a very limited buffer, and you won't be able to play anything remotely long (>1 second on average, in my experience). If you want to play background music, or something longer, and want to avoid managing byte streams yourself, you'll have to look at outside libraries. There exists a BigClip class that I can't seem to find a download link for, but you can have a look: http://pscode.org/javadoc/org/pscode/xui/sound/bigclip/BigClip.html When I've had to play longer sound I use my own modified version of the PCMFilePlayer class found here (I add some extra methods to make it work more like a BigClip): http://codeidol.com/java/swing/Audio/Play-Non-Trivial-Audio/ In either case, I load up as much sound as is reasonable at the very beginning of the program, and play has needed, but in all cases this has been with a very limited number of sounds. If you're playing huge amounts of sound/music or worry about memory usage, you may want to look into libraries like JMF, which are much more powerful.
