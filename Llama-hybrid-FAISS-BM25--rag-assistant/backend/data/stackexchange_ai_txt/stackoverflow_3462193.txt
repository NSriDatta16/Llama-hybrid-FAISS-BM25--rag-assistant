[site]: stackoverflow
[post_id]: 3462193
[parent_id]: 3462103
[tags]: 
Personally, I document inline sparingly (I do religiously put doc-blocks in for methods, classes and member variables though). I believe that code itself should be as self documenting as possible. There will be times where you need to do something non-obvious or possibly even counter-intuitive. That's the time for inline comments. Try to explain not what the block of code does, but why it does it that way. There's a great example in Phing 's CodeCoverageReportTask class: // Strange PHP5 reflection bug, // classes without parent class or implemented interfaces // seem to start one line off if ($reflection->getParentClass() == NULL && count($reflection->getInterfaces()) == 0) { unset($coverageInformation[$classStartLine + 1]); } else { unset($coverageInformation[$classStartLine]); } And another good one just a few lines down from that: // PHP5 reflection considers methods of a parent class to be part // of a subclass, we don't if ($method->getDeclaringClass()->getName() != $reflection->getName()) { continue; }
