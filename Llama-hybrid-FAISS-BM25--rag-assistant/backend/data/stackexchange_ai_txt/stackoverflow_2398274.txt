[site]: stackoverflow
[post_id]: 2398274
[parent_id]: 2398219
[tags]: 
Remember that properties are really methods - they compiler will convert them to T get_Property() and set_Property(T value) calls - there is no storage (unless using automatic proprieties, but what happens there is the compiler creates a backing field automatically. So what your stack overflow example looks like is: public class Feedback { public Feedback() { } // Getter public string get_FeedBackComment() { return get_FeedBackComment(); } // Setter public void set_FeedBackComment(string value) { System.Web.HttpUtility.HtmlEncode(value); } } So your getting was a function call that called it self forever, so the stack overflowed because each call is a stack push. And the setting called a function, but never stored its value anywhere.
