[site]: stackoverflow
[post_id]: 2796760
[parent_id]: 2758409
[tags]: 
John Resig owns the copyrights to the code and he can license it to anybody he wants and under any terms he wants within the constraints of copyright law. He has chosen to license the code under GPLv2, perhaps because he wants to encourage the producers of other GPL licenced products to use this software. He has also chosen to license the code under the MIT license, perhaps because he wants to encourage producers of open-source and proprietary code to use this software. If you read over the licenses, a piece of software cannot be GPL and MIT at the same time. GPL requires that distributors of derivative works distribute the entire source code of the entire derived work. MIT allows distributors of derivative works to withhold the source code. This is logically impossible. I suspect that when he dual-licensed the software, he meant that the two licenses were GPL and MIT. More specifically he did not say that the license (singular) is GPL and MIT. Remember that you are the owner of the copyrights of any derivative works (e.g. applications that use/modify the open source software plus your own software). If derived your software from anything that is licensed under the GPL, you only had that right to make the derivative work if you agreed to license your derivative work under the GPL to anybody to whom you distribute the derivative work). If you derived your application from MIT-licensed software then you are the copyright owner and you can license your application under any terms you want, including the exchange of money for a right to use the application. Apple Computer does that with their FreeBSD operating system base (licensed under a MIT-like license), and their proprietary Mac OS-X code on top. Therefore, you should pick the license that suits your project and go with it. Usually it is more prudent to use the MIT license if you are a business that sells software but would like to keep the source code written by you secret. You will do better to pick GPL if you would like to ensure that the code base of your application remains liberated for anybody to study, use, and modify. Having said that, you can still mix GPL code with MIT code without violating the terms of either license. The Linux folks do it all of the time with the kernel (GPL) and linked device drivers (GPL, MIT and some others). However, if you distribute the application, you must distribute the code base of the entire derived work including the GPL licensed software and the MIT licensed software, and you must license it to your customers under the GPL. Check out my page at Squidoo for more insight.
