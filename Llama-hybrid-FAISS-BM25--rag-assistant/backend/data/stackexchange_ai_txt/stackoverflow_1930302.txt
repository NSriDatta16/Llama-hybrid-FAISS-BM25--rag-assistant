[site]: stackoverflow
[post_id]: 1930302
[parent_id]: 1930275
[tags]: 
do you know the "quality" of the code? bad code can cost huge in hardware while good code can cost nothing Update based on the comment A few years ago, I had to maintain an apps badly done, it was using 500 megs ram(sometime 1.5gig) and was taking minutes to show stuff, I had to rewrite the whole thing and after that, it was only taking the necessary amount of memory(close to 10-15x less) and it was quick at showing stuff, I'm talking in millisecond here. The number of loop and badly caching data in memory that was done wrong was... incredibly sad to look at. Just to tell you, I had 3 versions of a whole freaking database in memory(so 4 with the real db) and the code had to update all versions one after the other. Everything else in the apps was based on the versions in memory. Anyway, in the end. I deleted 25 thousand lines of code. Quality of the code IS important. second update found this, might be good third update In an application that I'm currently developing, asp.net 3.5 using linq to sql talking(of course) with sql server 2005. many read to the db and not so many write. on my own dev machine which is old p4 prescott with 3 gig of ram. it take an average of 20ms to 100ms to load a whole page, depend which page :-) session(memory usage) is very low, way under 20k for sure if I go from here, my bad math would be; If I have 100 simultaneous users, it would take about 2secs to load a page and it would use at least 2 meg of ram for the duration of the session. the bad math needed? what do you need for 1 user and from that, just do 1 user multiply by WhatYouThinkYouShouldBeAbleToHandle I don't think there is any other way to find out. Because again, the code under the page does matter.
