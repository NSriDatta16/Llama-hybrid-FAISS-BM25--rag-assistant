[site]: stackoverflow
[post_id]: 581423
[parent_id]: 552905
[tags]: 
Ok, the way I found is with a "dragging status" variable, similar to your previous post, but it works under both IE7 and FF. Using Prototype, you can add an observer function for the click event of the html element you want to drag, telling in there event.stop(); . This action extends (i.e. Prototype-ize) the event object to be passed to the handler function, thus enriching it of all Prototype add-on methods and making it able to invoke the stop() method without worrying about the browser it's running into, as Prototype manages this aspect for you. Here's the code of my example: Draggables Test Ok, you can drag this one. function processIt(event) { if ( isDragging ) { event.stop(); } isDragging = false; } new Draggable('dragme', { revert: false }); var isDragging = false; $('dragme').observe('click', processIt ); Draggables.addObserver({ onDrag:function( eventName, draggable, event ) { isDragging = true; } }); The difference is that in your original example you were treating the event as a standard DOM event (see parameters specifications here , bottom of the page), which is ok with FF, but not at all with IE, as it deals with events in a slightly (but definitely) different way. On top of that, the event you were dealing with into your onEnd: handler was't a click event, but a onend event.
