[site]: stackoverflow
[post_id]: 1221990
[parent_id]: 
[tags]: 
Hungarian Algorithm and multiple factors

I have a situation where I need to allocate people to several events. If we just had a price as a factor, it would be fine, but there is a number of factors that come in. First, some background. This is for a non-profit organization that promotes story hours for children that are hospitalized for any reason, so they depend on voluntary work to do so. So, since they rely on people's good will, they give people as much work as people can / want to do, which varies like: Some people can only do mornings, and some other people can only do afternoons; Some people can only do Mondays, and Thursdays, other people can't go on August or December; Some people can only go once a month, other people can go 4 times (and even other people are given "priority" in these actions because they're more experienced and can are available to do 10 times a month) So, I kinda figured out the first two. Since the Hungarian Algorithm is about price, I'd give them a stupidly high price for the times they can't go. However, how would you do the others? I thought about giving them some sort of score. Something along the lines of: one person who can do this once a month costs something like 1000 points. If someone can go 10 times a month, that person costs 100 points (1000 basis dividing by 10). Also, the way to distribute this would be to increase the price whenever a separate action would be done, like so (selected people have a * on their associated cost): First iteration | August 1st 2009 Person A | 1000 Person B | 500 * Second iteration | August 8th 2009 Person A | 1000 * Person B | 1000 This would be the way to distribute accordingly between all the people, giving more priority to those that can do this several times. What do you think and how would you do it?
