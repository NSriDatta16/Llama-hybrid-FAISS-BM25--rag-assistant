[site]: stackoverflow
[post_id]: 4710463
[parent_id]: 4709970
[tags]: 
APC/Redis/Memcached If you could you should use APC (and/or Redis / Memcached ) to cache your data because it is going to be WAAAAAAAAAAAAAAAAY faster(everything stays in MEMORY ). If you want your website to perform good you should have APC(precompiled byte-code in MEMORY) installed anyway. Cache_Lite Else you should use the excellent Cache_Lite library to cache your data to a file. The introduction explains perfectly how to use it. If it all possible you should write to /dev/shm/ because this maps to MEMORY which is going to be way faster then Disc IO. Splitting Cache I tried splitting the caching into two files but parts 2 and 3 depend on some php processing of part1 I'm having a hard time... You should have unique pieces(exclusively as large as possible would be best, but sometimes hard to keep track off) and then combine these pieces you need on that page. Each piece should have an unique ID off-course(for retrieval). '/tmp/', 'lifeTime' => 3600 ); // Create a Cache_Lite object $Cache_Lite = new Cache_Lite($options); if ($data = $Cache_Lite->get('#{ID for user specific menu}')) { echo($data); } else { $data = 'Data of the block 1-1'; $Cache_Lite->save($data); } echo(' Non cached line ! '); if ($data = $Cache_Lite->get('#{user specific info}')) { echo($data); } else { $data = 'Data of the block 2'; $Cache_Lite->save($data); } ?>
