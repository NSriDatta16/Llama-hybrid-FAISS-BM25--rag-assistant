[site]: stackoverflow
[post_id]: 3218941
[parent_id]: 3217632
[tags]: 
The problem isn't in jQuery exactly, but the differences in browser .innerHTML implementation. Different browsers handle this in different ways, for example in Opera your example works fine, Firefox can work with adjusting, in IE8 it half-works with adjustment, and Chrome strips everyting. It's all about how they handle the .innerHTML call, this is what jQuery uses internally when creating document fragments . Here's a quick test page using the exact HTML you have , and the results from a few browsers: Chrome 6 (runs the alert() , strips almost everything): Results: Entire and contents stripped, nothing to get IE8 (Runs the alert() , it retains the , but as a top level element, test it in IE here ): Results: $(html).filter("meta").attr("name") : "keywords" was stripped Firefox 3.6 (Runs the alert() , retains contents but again as top-level elements, test it here ): Sub Page to Parse Results: $(html).filter("meta").attr("name") : "keywords" $(html).filter("title").html() : "Sub Page to Parse" Opera 10.6 (Runs the alert() , strips only scripts, test it here ): Sub Page to Parse Results: $(html).find("meta").attr("name") : "keywords" $(html).find("title").html() : "Sub Page to Parse" So the problem isn't jQuery per-say, but the what different browsers are doing in their .innerHTML methods to strip out whatever they want. This makes parsing anything in the particularly unreliable, notice when it's retained at all, it may or may not be a top level element, for example $(html).length will vary. I would say you have two options here, but neither of which seem too appealing: Make the request via a server-side call, it gets out the info you want Parse the HTML yourself, but you won't much any benefit from jQuery in that department Sorry the answers sucks, but it seems cross-browser issues, unless you parse it yourself, are going to be killer here, and make jQuery just about useless.
