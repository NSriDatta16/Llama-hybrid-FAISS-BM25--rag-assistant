[site]: stackoverflow
[post_id]: 4531186
[parent_id]: 4531123
[tags]: 
Resize.Xaml: ResizeHandle.Xaml ResizeHandle.Xaml.cs using System; using System.Windows; using System.Windows.Controls; using System.Windows.Controls.Primitives; namespace ERDesign { public partial class ResizeHandle : UserControl { public ResizeHandle() { InitializeComponent(); } private void Thumb_DragDelta(object sender, DragDeltaEventArgs e) { ResizeHandle resizehandle = (sender as Thumb).Parent as ResizeHandle; Resize resize = (resizehandle.DataContext as Control).Parent as Resize; UserControl userctrl = (resize.DataContext as ContentControl).Parent as UserControl; if (userctrl == null) { } else { double X; double Y; switch (this.HorizontalAlignment) { case HorizontalAlignment.Left: X = Math.Min(e.HorizontalChange, userctrl.ActualWidth - userctrl.MinWidth); Canvas.SetLeft(userctrl, Canvas.GetLeft(userctrl) + X); userctrl.Width = userctrl.Width - X; break; case HorizontalAlignment.Right: X = Math.Min(-e.HorizontalChange, userctrl.ActualWidth - userctrl.MinWidth); userctrl.Width = userctrl.Width - X; break; default: break; } switch (this.VerticalAlignment) { case VerticalAlignment.Top: Y = Math.Min(e.VerticalChange, userctrl.ActualHeight - userctrl.MinHeight); Canvas.SetTop(userctrl, Canvas.GetTop(userctrl) + Y); userctrl.Height = userctrl.Height - Y; break; case VerticalAlignment.Bottom: Y = Math.Min(-e.VerticalChange, userctrl.ActualHeight - userctrl.MinHeight); userctrl.Height = userctrl.Height - Y; break; default: break; } } } } }
