[site]: stackoverflow
[post_id]: 3562731
[parent_id]: 3560571
[tags]: 
Blocks and procs let you extract small bits of code without the full overhead and complexity of methods. Even map by itself is pretty powerful, and jQuery is built around this same concept: ['spite','rest','purpose'].map {|s| s And you can throw logic in if necessary ['sprite','restful','luck'].map {|s| s There is a clever operator '&' that means "convert the symbol to a proc and call it", so you can convert objects strings: ['spite',12,:purpose].map(&:to_s) And using closures and combining writing a simple closures we can find where adjacent of numbers appear. This is rather clumsy Ruby, but more concise than most languages: last = -2 # this variable is accessed and changed within the closure objs.sort.map do |o| if (last + 1) != o last = o nil # not one more than previous so return nil else o end end.compact # compact removes nils When you start rewriting it in another language you realize how convenient this is. It encourages you to structure your code into smaller operations, so it is more re-usable and testable.
