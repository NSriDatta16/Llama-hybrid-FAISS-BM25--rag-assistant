[site]: stackoverflow
[post_id]: 4399783
[parent_id]: 
[tags]: 
Filtering results from the data access layer in the business layer

I haven't been able to find an answer to my question so far, and I suppose I have to ask my first question some time. Here goes. I have a Data Access Layer that's responsible for interacting with various data storage elements and returns POCOs or collections of POCOs when querying out things. I have a Business Layer that sits on top of this and is responsible for implementing business rules on objects returned from the Data Access Layer. For instance, I have a SQL Table of Dogs, my data access layer can return that list of dogs as a collection of Dog object. My business layer then would do things like filter out dogs below a certain age, or any other filtering or transformation that had to happen based on business rules. My question is this. What's the best way to handle filtering objects based on related records? Let's say I want all the people who have Cats. Right now my data access layer can return all the cats, and all the people, but doesn't do any filtering for me. I can implement the filtering via a different data access method (i.e. DAO.GetCatPeople()) but this could get complicated if I have a multitude of related properties or relationships to handle I can return all from both sides and do the matching myself all in the business layer, which seems like a lot of extra work and not fully utilizing the sql server. I can write a data filtration interface and if my data access layer changes this layer would have to change as well. Is there some known best practices here I could be benefiting from?
