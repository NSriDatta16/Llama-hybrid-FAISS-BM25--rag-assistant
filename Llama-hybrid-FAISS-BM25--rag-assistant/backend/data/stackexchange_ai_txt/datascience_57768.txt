[site]: datascience
[post_id]: 57768
[parent_id]: 
[tags]: 
How to convert trained data (feature extracted) into a prediction model?

Background: I am analyzing and labeling some log data. (parsed already, sample data below) I have extracted the major features of data. For examples, the classification results ("1 - normal" or "0 - anomaly") largely depends on columns "duration", "mean", "std". For example, records/sec usually std usually Then I want to convert current result into a prediction model , in order to classify the future log data. Sample data: | ID | datetime | No. of Records | duration(s) | mean | std | labels | | 1 | 26/7/2019 8:06:00 PM | 5 | 1.0 | 0.33 | 0.47 | normal | | 2 | ... | anomaly | ... | 1,000,000 | ... | normal | Question: How to convert such parsed & feature extracted & labelled data into a prediction mode (or prediction function)? I am NOT asking the theory. I have read some articles or projects of machine learning models. But many of them introduces too high-level. I still don't understand how to implement those machine learning models. I need to convert them into a real prediction function running in the computer . I am asking the detailed / hands-on implementation steps . Maybe it becomes a call function f(x1, x2, x3, ...) or API in the code? The new data may be the input of a function call? The output will be normal or anomaly in this case. In other words, how to present a prediction model in the form of code?
