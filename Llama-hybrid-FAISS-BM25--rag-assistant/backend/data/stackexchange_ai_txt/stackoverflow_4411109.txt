[site]: stackoverflow
[post_id]: 4411109
[parent_id]: 
[tags]: 
How to create an instance of a generic type argument using a parameterized constructor in C#

I'm trying to write a helper method that would log a message and throw an exception of a specified type with the same message. I have the following: private void LogAndThrow (string message, params object[] args) where TException : Exception, new() { message = string.Format(message, args); Logger.Error(message); throw new TException(message); } Before adding the new() constraint the compiler complained that without it I can't instantiate TException . Now the error message I get is "Cannot provide arguments when creating an instance of a type parameter 'TException'". I tried creating the instance with the parameterless constructor and then set the Message property but it's read-only. Is this a limitation of the language or is there a solution I don't know about? Maybe I could use reflection but that's overkill for such a simple task. (And pretty ugly, but that's a matter of personal opinion.)
