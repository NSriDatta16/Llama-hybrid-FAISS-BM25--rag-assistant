[site]: datascience
[post_id]: 124158
[parent_id]: 
[tags]: 
how to define a linear function WX+b in pytorch?

I am practicing pytorch. I want to define a linear function Y=WX+B for inputs shape as (3,32,32) and output, the same shape i.e. (3, 32, 32). I defined m network as: class Linear(nn.Module): def __init__(self): super(Linear, self).__init__() # defining the parameters 'w' and 'b' w = torch.empty((batch_size, 3, 32, 32 ), requires_grad = True) b = torch.empty((1, 3, 32, 32 ), requires_grad = True) def forward(x): y_pred = w * x + b return y_pred Am I doing it right? Because I am getting error for it. Here is the error: NotImplementedError Traceback (most recent call last) in 40 image= torch.rand((8, 3, 32, 32 )) 41 model= Denoiser_AutoEncoder() ---> 42 print(model(image)) ~\Anaconda3\lib\site-packages\torch\nn\modules\module.py in _call_impl(self, *input, **kwargs) 887 result = self._slow_forward(*input, **kwargs) 888 else: --> 889 result = self.forward(*input, **kwargs) 890 for hook in itertools.chain( 891 _global_forward_hooks.values(), ~\Anaconda3\lib\site-packages\torch\nn\modules\module.py in _forward_unimplemented(self, *input) 199 registered hooks while the latter silently ignores them. 200 """ --> 201 raise NotImplementedError 202 203 NotImplementedError:
