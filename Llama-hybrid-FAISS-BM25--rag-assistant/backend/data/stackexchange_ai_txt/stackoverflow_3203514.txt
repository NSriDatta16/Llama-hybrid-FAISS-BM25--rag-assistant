[site]: stackoverflow
[post_id]: 3203514
[parent_id]: 3200816
[tags]: 
reference count the new / delete counter when allocate memory to anaylize the memory leak problem. I'm pretty sure that MSVC already comes with debug memory allocator which allows to detect such issues. IIRC it can be optionally activated for debug builds. In fact, when searching for "visual studio memory debugger" first link leads immediately to this page : Memory Leak Detection Enabling. reduce the memory fragment. Standard memory allocators are quite resistant to memory fragmentation. You might need alternative memory allocator only if you write application which is expected to run months/years without interruption. But even for the cases replacement of memory allocator is superficial and less reliable compared to the simple resource allocation in advance: allocate all resources which might be needed right after the start of the application. I don't know how to improve my code to use the placement new / replace the new to my code? You do not need to do anything special. Placement new doesn't trigger memory allocation - it is just a fancy way to call a constructor on a piece of raw memory. If the raw memory was allocated before with the new then you are all set already. I don't know what has happened in deconstruct the static variable? No memory management is involved. Static variables live in data segment, not in heap. I don't know is any better way to resolve my problems metion in the begining of this post? My wild guess would be (and this is a usual beginner's error) is that your implementation of memory manager uses dynamic memory and is recursively calling itself.
