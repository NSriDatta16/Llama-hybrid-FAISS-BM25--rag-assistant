[site]: crossvalidated
[post_id]: 403492
[parent_id]: 3752
[tags]: 
Kernel density estimation means integration over a local (fuzzy) window, and kernel smoothing means averaging over a local (fuzzy) window. Kernel smoothing: $ \tilde y(x) \propto \frac 1 {\rho(x)} \sum K(||x-x_i||)\,y_i $ . Kernel density estimation: $\rho(x) \propto \sum K(||x-x_i||) $ . How are these the same? Consider samples of a boolean-valued function, i.e. a set containing both "true samples" (each with unit value) and "false samples" (each with zero value). Assuming the overall sample density is constant (like a grid), the local average of this function is identically proportional to the local (partial-) density of the true-valued subset. (The false samples permit us to constantly disregard the denominator of the smoothing equation, whilst adding zero terms to the summation, so that it simplifies into the density estimation equation.) Similarly if your samples were represented as sparse elements on a boolean raster, you could estimate their density by applying a blur filter to the raster. How are these different? Intuitively, you might expect the choice of smoothing algorithm to depend on whether or not the sample measurements contain significant measurement error. At one extreme (no noise) you simply need to interpolate between the exactly-known values at sample locations. Say, by Delaunay triangulation (with bilinear piecewise interpolation). Density estimation resembles the opposite extreme, it is entirely noise, as the sample in isolation is not accompanied by a measurement of the density value at that point. (So there is nothing to simply interpolate. You might consider measuring Voronoi diagram cell-areas, but smoothing/denoising will still be important..) The point is that despite the similarity these are fundamentally different problems, so different approaches may be optimal.
