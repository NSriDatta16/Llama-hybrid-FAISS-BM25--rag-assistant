[site]: stackoverflow
[post_id]: 363460
[parent_id]: 363190
[tags]: 
This document describes in detail the concept of "Blind XPath Injection". It provides concrete examples of XPath injections and discusses ways of preventing such. In the section " Defending against XPath Injection " it is said: " Defending against XPath Injection is essentially similar to defending against SQL injection. The application must sanitize user input. Specifically, the single and double quote characters should be disallowed. This can be done either in the application itself, or in a third party product (e.g. application firewall.) Testing application susceptibility to XPath Injection can be easily performed by injecting a single quote or a double quote, and inspecting the response. If an error has occurred, then itâ€™s likely that an XPath Injection is possible ." As others have said, one should also pay attention to using of axes and the // abbreviation. If XPath 2.0 is being used, then the doc () function should not be allowed, as it gives access to any document with known URI (or filename). It is advisable to use an API which precompiles an XPath expression but leaves the possibility that it works with dynamically defined parameters or variables. Then the user input will define the contents of these parameters only and will never be treated as a modification of the already compiled expression.
