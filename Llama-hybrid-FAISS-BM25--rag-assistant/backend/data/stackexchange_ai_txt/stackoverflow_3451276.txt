[site]: stackoverflow
[post_id]: 3451276
[parent_id]: 3414819
[tags]: 
If you're looking for a quick example using Flex and .NET: Uploader.mxml: /Uploader.ashx"); myRequest.method = URLRequestMethod.POST; try { __file.upload(myRequest); __status__.text = "Status: Now uploading " + __file.name + " ... "; } catch (error:Error) { __status__.text = "Status: Error uploading " + __file.name; } } private function __fileSelectionHandler(_e:Event):void { __upload__.enabled = true; __uploadFile__.text = __file.name; __status__.text = "Status: Click 'Upload' to begin file upload"; } private function __completeHandler(_e:Event):void { // nothing currently done in this handler - experiment and have fun :) } private function __uploadDataHandler(_e:DataEvent):void { var myResult:XML = new XML(_e.data); __status__.text = "File Upload Complete \n" + myResult.toString(); } ]]> Uploader.ashx: using System.IO; using System.Web; using System.Web.Configuration; public class Uploader : IHttpHandler { public void ProcessRequest( HttpContext _context ) { // not very elegant - change to full path of your upload folder (there are no upload folders on my site) string uploadDir = "C:\\ \\"; if (_context.Request.Files.Count == 0) { _context.Response.Write(" Error No files selected "); return; } foreach(string fileKey in _context.Request.Files) { HttpPostedFile file = _context.Request.Files[fileKey]; file.SaveAs(Path.Combine(uploadDir, file.FileName)); } _context.Response.Write(" Success Upload completed "); } public bool IsReusable { get { return true; } } } Note that this is basically just a transcription of the Algorithmist's Post from '07
