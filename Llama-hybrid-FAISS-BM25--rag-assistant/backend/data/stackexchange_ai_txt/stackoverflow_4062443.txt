[site]: stackoverflow
[post_id]: 4062443
[parent_id]: 4062175
[tags]: 
Let's get idiomatic with your code: print gender(), "\n" for 1..5; sub gender { return int rand(100) > 50 ? 'MALE' : 'FEMALE'; } So, what did I do? First: The gender sub should not be called with the & and no parens. This invokes the subroutine on the arguments passed to its caller. This is handy when you have a bunch of common argument sanitizing code. But it is not desirable or needed here. I put the sub after the other code because I like to read my code from high level to specific--the opposite of how C forces you to organize things. I don't like reading my code from the bottom up, so I did it this way. This is purely a personal preference. Do whatever makes you happy. Or if you have to work with others, follow the standard you've agreed upon. I shortened foreach to for . They do exactly the same thing, one takes fewer characters. I used for as a statement modifier. In other words I took a simple statement print $_, "\n"; and tacked the for onto the end. For simple tasks it is nicer than using a block. Again, this is my opinion. Some people decry statement modifiers as evil and unwelcome. If you decide to use them, keep it simple. YMMV. I got rid of the extra unneeded print ysth mentioned. Instead of using a big if/else block, I used the ternary operator (OK, it's really just a ternary operator, but people call it the ternary operator). It computes a test value and depending on the boolean value of the test, returns the result one of two expressions. It is handy when you want if/else logic in an assignment.
