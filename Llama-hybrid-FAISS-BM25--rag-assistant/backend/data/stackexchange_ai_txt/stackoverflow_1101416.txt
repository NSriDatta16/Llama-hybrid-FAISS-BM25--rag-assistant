[site]: stackoverflow
[post_id]: 1101416
[parent_id]: 1101324
[tags]: 
Database should always be designed and initially implemented in 3NF. But the world is a place of reality, not ideals, and it's okay to revert to 2NF (or even 1NF) for performance reasons. Don't beat yourself up about it, pragmatism beats dogmatism in the real world all the time. Your solution, if it improves performance, is a good one. The idea of having an actual radio (for example), manufactured by nobody and having no features, is not a bad one - it's been done a lot before, believe me :-) The only reason you would use that field as NULL was to see which vehicles have no radio and there's little difference between these queries: select Registration from vehicles where RadioId is null select Registration from vehicles where RadioId = 0 My first thought was to simply combine the four tables into one and hang the duplicate data issue. Most problems with DBMS' stem from poor performance rather than low storage space. Maybe keep that as your fallback position if your current de-normalized schema becomes slow as well.
