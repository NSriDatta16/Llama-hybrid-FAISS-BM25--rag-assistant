[site]: stackoverflow
[post_id]: 2151016
[parent_id]: 2150153
[tags]: 
There is an in-memory copy. You get negligible performance improvement from caching the value; it would save only a Dictionary lookup, which will be too fast to notice unless you're doing it a zillion times per page load. Also important to note is that for a given key, each retrieval returns a reference to the same instance, and Session keeps a reference too. That means, if you retrieve an object from Session and modify it, you need not call the setter again to re-serialize it. I just asked a question about this same thing: Are .Net property setters ever called implicitly?
