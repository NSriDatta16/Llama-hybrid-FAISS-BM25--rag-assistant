[site]: stackoverflow
[post_id]: 4096514
[parent_id]: 4088259
[tags]: 
now is working. Here are the changes I made: class TestJob { def matchService List matchList = new ArrayList() static triggers = { cron name: 'trigger', cronExpression: "0 0/1 13 ? * THU" } def group = "threadGroup" def execute() { Cal.get(1).matches.each{ match -> matchList.add(match) } for(Match m: matchList) { if(!m.validate()) { throw new MatchException( message: "match not valid!!" , match:m) } matchService.run(m.id) } } } class MatchService { static transactional = true // Match updateMatch def backgroundService public void run(Long matchId) { backgroundService.execute("Calculating match", { def backgroundMatch = Match.findById(matchId) backgroundMatch = matchSituation(backgroundMatch) println backgroundMatch.teamH.name + " - " + backgroundMatch.teamA.name + ": " + backgroundMatch.golTeamH + " - " + backgroundMatch.golTeamA if(!backgroundMatch.save()) { throw new RuntimeException("match is not valid and cannot be saved!") } }) // Thread.start { // println "run thread (" + matchId + ") : " + String.format('%tH:% m.teamA.averagePlayerValue) { m.golTeamH = random.nextInt(5) } else { m.golTeamA = random.nextInt(4) } return m } }
