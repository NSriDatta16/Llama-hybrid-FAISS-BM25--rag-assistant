[site]: stackoverflow
[post_id]: 4886655
[parent_id]: 
[tags]: 
iPhone - My new view is blocking my toolbar

I have a problem with my app. With help by a tutorial I've created a slideshow with pictures. I've added a toolbar so it's possible to go back. The problem is that when the pictures are showing, the toolbar disappear. I've been trying to google the problem and so on, but I can't solve it. In a "previous" class I create SlideShowViewController, and inside that class I have another one called SlideShowView. I hope this ain't to messy or stupid, cause I really need help. Here is the code: #import "SlideShowViewController.h" #import "Pictures.h" @interface SlideShowView : UIView { NSArray * mImages; UIImageView * mLeftImageView; UIImageView * mCurrentImageView; UIImageView * mRightImageView; NSUInteger mCurrentImage; Pictures *picRef; SlideShowViewController *slideRef; BOOL mSwiping; CGFloat mSwipeStart; } - (id)initWithImages:(NSArray *)inImages; @end // SlideShowView #pragma mark - //#import "SlideShowViewController.h" @implementation SlideShowView - (UIImageView *)createImageView:(NSUInteger)inImageIndex { if (inImageIndex >= [mImages count]) { return nil; } UIImageView * result = [[UIImageView alloc] initWithImage:[mImages objectAtIndex:inImageIndex]]; result.opaque = YES; result.userInteractionEnabled = NO; result.backgroundColor = [UIColor whiteColor]; result.contentMode = UIViewContentModeScaleAspectFit; result.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight; return result; } - (id)initWithImages:(NSArray *)inImages { if (self = [super initWithFrame:CGRectZero]) { mImages = [inImages retain]; NSUInteger imageCount = [inImages count]; if (imageCount > 0) { mCurrentImageView = [self createImageView:0]; [self addSubview:mCurrentImageView]; if (imageCount > 1) { mRightImageView = [self createImageView:1]; [self addSubview:mRightImageView]; } } self.opaque = YES; self.backgroundColor = [UIColor whiteColor]; self.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight; } return self; } - (void)dealloc { [mImages release]; [super dealloc]; } - (void)layoutSubviews { if (mSwiping) return; CGSize contentSize = self.frame.size; mLeftImageView.frame = CGRectMake(-contentSize.width, 0.0f, contentSize.width, contentSize.height); mCurrentImageView.frame = CGRectMake(0.0f, 0.0f, contentSize.width, contentSize.height); mRightImageView.frame = CGRectMake(contentSize.width, 0.0f, contentSize.width, contentSize.height); } - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { if ([touches count] != 1){ return; } mSwipeStart = [[touches anyObject] locationInView:self].x; mSwiping = YES; mLeftImageView.hidden = NO; mCurrentImageView.hidden = NO; mRightImageView.hidden = NO; } - (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event { if (! mSwiping || [touches count] != 1) return; CGFloat swipeDistance = [[touches anyObject] locationInView:self].x - mSwipeStart; CGSize contentSize = self.frame.size; mLeftImageView.frame = CGRectMake(swipeDistance - contentSize.width, 0.0f, contentSize.width, contentSize.height); mCurrentImageView.frame = CGRectMake(swipeDistance, 0.0f, contentSize.width, contentSize.height); mRightImageView.frame = CGRectMake(swipeDistance + contentSize.width, 0.0f, contentSize.width, contentSize.height); } - (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event { if (! mSwiping) return; CGSize contentSize = self.frame.size; NSUInteger count = [mImages count]; CGFloat swipeDistance = [[touches anyObject] locationInView:self].x - mSwipeStart; if (mCurrentImage > 0 && swipeDistance > 50.0f) { [mRightImageView removeFromSuperview]; [mRightImageView release]; mRightImageView = mCurrentImageView; mCurrentImageView = mLeftImageView; mCurrentImage--; if (mCurrentImage > 0) { mLeftImageView = [self createImageView:mCurrentImage - 1]; mLeftImageView.hidden = YES; [self addSubview:mLeftImageView]; } else { mLeftImageView = nil; } } else if (mCurrentImage
