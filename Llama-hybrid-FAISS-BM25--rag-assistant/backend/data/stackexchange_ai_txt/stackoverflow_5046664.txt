[site]: stackoverflow
[post_id]: 5046664
[parent_id]: 
[tags]: 
C#: Very fast object search & retrieval using any persistence model

I am developing an application with Fluent nHibernat/nHibernate 3/Sqlite. I have run into a very specific problem for which I need help with. I have a product database and a batch database. Products are around 100k but batches run in around 11 million+ mark as of now. When provided with a product, I need to fill a Combobox with batches. As I do not want to load all the batches at once because of memory constraints, I am loading them, when the product is provided, directly from the database. But the problem is that sqlite (or maybe the combination of sqlite & nh) for this, is a little slow. It normally takes around 3+ seconds to retrieve the batches for a particular product. Although it might not seem like a slow scenario, I want to know that can I improve this time? I need sub second results to make order entry a smooth experience. The details: New products and batches are imported periodically (bi-monthly). Nothing in the already persisted products or batchs ever changes (No Update ). Storing products is not an issue. Batches are the main culprit. Product Ids are long Batch Ids are string Batches contain 3 fields, rate, mrp (both decimal ) & expiry ( DateTime ). The requirements: The data has to be stored in a file based solution. I cannot use a client-server approach. Storage time is not important. Search & retrieval time is . I am open to storing the batch database using any other persistence model. I am open to using anything like Lucene, or a nosql database (like redis), or a oodb, provided they are based on single storage file implementation. Please suggest what I can use for fast object retrieval. Thanks.
