[site]: stackoverflow
[post_id]: 5609046
[parent_id]: 5608799
[tags]: 
More code would be helpful but here are some suggestions: Check if startUploads is being called before the view is loaded. The view will only be loaded when it is accessed for the first time to be added to a superview. Consider initializing processList in your init method instead of viewDidLoad both to solve #1 and b/c the view can loaded & unloaded by iOS independently of the lifecycle of the viewController (depending on what other views you are displaying and whether any memory warnings occur). Make sure you are releasing processList in dealloc . You only need to release it in viewDidUnload if it is recreated and loaded in viewDidLoad . Your code sample doesn't show when startUploads is being called and you aren't adding any items to processList so it's hard to tell if the above is relevant. Post some more code and I'll revise my answer accordingly. good luck! [EDIT: added example code] The code fragments you posted are not a complete implementation of a view controller and the associated objects that interact with it. Given the code I have seen, your application design does not conform to MVC (Model/View/Controller) design pattern and I would be doing things a bit differently. However, I don't want to make assumptions about code I haven't seen or your ultimate intent or ability as a developer. I can't write your app for you, just trying to directly help you with the specific question you asked regarding why your NSMutableArray property remains null after the startUploads action completed. With that in mind, here are my edits to the code you posted: processViewController.m - add the following: - (id)initWithNibNamed:(NSString *)nibName bundle:(NSBundle *)bundle { self = [super initWithNibNamed:nibName bundle:bundle]; if (self) { processList = [[NSMutableArray alloc] init]; } return self; } - (void)dealloc { self.processList = nil; [super dealloc]; } different.m - (void)displayProcessVC { ProcessViewController *processVC = [[ProcessViewController alloc] initWithNibNamed:@"processView.xib" bundle:nil]; NSLog(@"Different:displayProcessVC BEFORE STARTING UPLOAD, processList = %@", processVC.processList); [processVC startUploads]; NSLog(@"Different:displayProcessVC AFTER STARTING UPLOAD, processList = %@", processVC.processList); // would normally present process VC here [processVC release]; } Hope this helps.
