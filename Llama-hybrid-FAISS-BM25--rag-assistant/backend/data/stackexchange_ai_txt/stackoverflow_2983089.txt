[site]: stackoverflow
[post_id]: 2983089
[parent_id]: 2451528
[tags]: 
You also need to account for the fact this is specific to firefox, here is the snippet I'm using - I got directed the right way from Harris' solution. I encountered this problem w/o using the helper when the sortable was in a relatively positioned container. var options = { handle: '.mover', update:updateSorting }; var userAgent = navigator.userAgent.toLowerCase(); if(userAgent.match(/firefox/)) { options["start"] = function (event, ui) { ui.item.css('margin-top', $(window).scrollTop() ); }; options["beforeStop"] = function (event, ui) { ui.item.css('margin-top', 0 ); }; } $("#" + list_id+"").sortable(options); $("#" + list_id+"").disableSelection(); You could also do this check on the server and then have 2 different calls depending on the browser.
