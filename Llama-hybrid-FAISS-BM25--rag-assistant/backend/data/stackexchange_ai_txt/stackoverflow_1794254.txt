[site]: stackoverflow
[post_id]: 1794254
[parent_id]: 1793660
[tags]: 
The Python interpreter doesn't give you a way to introspect the evaluation of an expression at runtime. The sys.settrace() function lets you register a callback that is invoked for every line of source code, but that's too coarse-grained for what you want to do. That said, I've experimented with a crazy hack to have the function invoked for every bytecode executed: Python bytecode tracing . But even then, I don't know how to find the execution state, for example, the values on the interpreter stack. I think the only way to get at what you want is to modify the code algorithmically. You could either transform your source (though you said you didn't want to parse the code), or you could transform the compiled bytecode. Neither is a simple undertaking, and I'm sure there are a dozen difficult hurdles to overcome if you try it. Sorry to be discouraging... BTW: What application do you have for this sort of technology?
