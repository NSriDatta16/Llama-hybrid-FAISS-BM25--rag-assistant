[site]: stackoverflow
[post_id]: 4290978
[parent_id]: 
[tags]: 
Rapid tap doesn't fire touchesEnded

Ok, so I am hoping someone can shed some light on this. The thing is I have an app where the user can interact with a number of "pads" that are kind of like big icons, that can be dragged around on the screen. Tapping once on the pad opens it and tapping and holding brings up an alert view which asks if you want to delete it. I am using a timer to check that a user is tapping and holding and invalidating the timer in the touchesMoved and touchesEnded events. The thing is that if you tap very quickly on a pad the touchesEnded event is never fired and as such the delete dialog appears, which can get a little confusing for a user. Any thoughts on why this is? - (void) startTouchTimer:(float)delay { self.touchTimer = [NSTimer scheduledTimerWithTimeInterval:delay target:self selector:@selector(touchHeld:) userInfo:nil repeats:NO]; } - (void) touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { UITouch *touch = [[event allTouches] anyObject]; if (touches.count == 1) { for(WishPad *pad in self.view.subviews) { if ([touch view] == pad) { //Animate Selection [UIView animateWithDuration:0.03 delay:0 options:UIViewAnimationOptionBeginFromCurrentState animations:^{ pad.highlight.alpha = 0.5; } completion:NULL]; self.touchedPad = pad.padName; [self startTouchTimer:0.40]; [self.view bringSubviewToFront:pad]; } } } } - (void) touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event { [self.touchTimer invalidate]; UITouch *touch = [[event allTouches] anyObject]; if (touches.count == 1) { for(WishPad *pad in self.view.subviews) { if ([touch view] == pad) { CGPoint location = [touch locationInView:self.view]; pad.center =location; } } } } - (void) touchesEnded:(NSSet *)touches withEvent:(UIEvent*)event { [self.touchTimer invalidate]; UITouch *touch = [[event allTouches] anyObject]; if (touches.count == 1) { for(WishPad *pad in self.view.subviews) { if ([touch view] == pad) { //Animate deselection [UIView animateWithDuration:0.03 delay:0 options:UIViewAnimationOptionBeginFromCurrentState animations:^{ pad.highlight.alpha = 0; } completion:NULL]; CGPoint location = pad.frame.origin; NSString *position = NSStringFromCGPoint(location); iWishAppDelegate *delegate = (iWishAppDelegate *)[[UIApplication sharedApplication] delegate]; for (Wish in [delegate.wishes objectForKey:@" "]) { if ([position isEqual:Wish.position] && [[(WishPad*)[touch view] padName] isEqualToString:Wish.name]) { self.goToAddWish = [[AddWish alloc] initWithNibName:@"AddWish" bundle:nil]; self.goToAddWish.editWish=YES; self.goToAddWish.hidesBottomBarWhenPushed=YES; [self.navigationController pushViewController:self.goToAddWish animated:YES]; [self.goToAddWish editDetailText:Wish]; [self.goToAddWish release]; } else if ([pad.padName isEqual:Wish.name]) { Wish.position = position; [delegate save]; } } } } } } - (void) touchHeld:(NSTimer*)timer { [self.touchTimer invalidate]; NSString *wishToDel = [NSString stringWithFormat:@"Delete %@?", self.touchedPad]; UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:wishToDel message:@"Do you really want to delete this wish?" delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:@"Delete", nil]; [alertView show]; [alertView release]; } - (void) alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex { if (buttonIndex == [alertView cancelButtonIndex]) { //Lots of deleting from plist and deleting image stuff happening here }
