[site]: stackoverflow
[post_id]: 1002362
[parent_id]: 1002323
[tags]: 
You can make these many self-joins of table data more explicit, which makes the query more readable but most likely won't affect speed. I.e.: SELECT FN.sub_id, FN.field_val AS `First Name`, LN.field_val AS `Last Name`, DOB.field_val AS `dob`, EMAIL.field_val AS `email`, PHONE.field_val AS `phone` FROM $db->data FN JOIN $db->data LN ON (LN.field_name = 'Last Name' AND LN.sub_id = FN.sub_id) JOIN $db->data TEAM ON (TEAM.field_name = 'Team' AND TEAM.sub_id = FN.sub_id) JOIN $db->data DOB ON (DOB.field_name = 'DOB' AND DOB.sub_id = FN.sub_id) JOIN $db->data EMAIL ON (EMAIL.field_name = 'EMail' AND EMAIL.sub_id = FN.sub_id) JOIN $db->data PHONE ON (PHONE.field_name = 'Telephone' AND PHONE.sub_id = FN.sub_id) WHERE FN.field_name = 'First Name' ORDER BY LN.field_val Basically, the many tedious self-join are the price you pay for this "flexible" organization of the table as a collection of attribute names and values. BTW, if some of the data might be missing for a certain sub_id and you still want to see that row in the output (with NULL for the missing data), use LEFT JOIN instead of plain JOIN for that field's instance of the data in the above query.
