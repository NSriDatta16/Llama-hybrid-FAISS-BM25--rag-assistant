[site]: stackoverflow
[post_id]: 1259096
[parent_id]: 1226416
[tags]: 
I haven't done this, but this would be my general approach. As you indicate, the lack of structure in the visible content parts (i.e. it doesn't have tags such as header , navigation , ads ) of HTML means it is harder to home in on the key part of the page. My approach would be to first remove distinct elements which you have definitely decided are not interesting. A possible list of exclusions could be: meta elements such as !doctype , head (take the title as a separate piece of data) dynamic elements such as object , embed , applet , script images (depending on whether want to retain them or not), img form elements, i.e. form , input , textarea , label , legend , select , option A second pass could then start to exclude commonly occurring div or ul id/class names, and all tags within them, such as: header , footer , meta nav , navigation , topnav , sidebar ad , ads , adu (and other names commonly used for ads) This will hopefully remove a significant amount of decoration from the page. The next challenge is to try to identify the main content from what's left, and I would suggest initially assuming that the site author is using semantic HTML properly, and so is principally using the h1 , h2 head tags and the p paragraph tag. To identify content, I would look for any header tag which is then followed by a paragraph tag(s). (This may be h2 for your main content; the h1 tag is often (and arguably incorrectly) used to display the site name or logo, but this will hopefully have been eliminated by excluding the header parts of the page.) Each subsequent paragraph should be added to the current content until you reach a break, which could either be the end of the div or td element, or it could be a header element of the same level you started from. As there may still be several sets of content that you've gathered on the page (maybe the main content plus the blurb about the author), you need to test and refine a decision-making step here which chooses the most likely candidate. This will often simply be the largest, both in terms of length and number of paragraph elements used. As you gather more examples of content, you can add supporting measures to your algorithm; this might be that you notice many of the pages use div id="content" or id="maincontent" . It may also be useful to retain the secondary items of content that you detected, so that if certain sites have a curious way of structuring the content, then once you've add a catcher into your algorithm it can be re-run against just this site's content.
