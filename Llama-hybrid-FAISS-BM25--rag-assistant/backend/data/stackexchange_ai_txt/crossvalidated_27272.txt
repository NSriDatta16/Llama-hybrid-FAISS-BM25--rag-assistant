[site]: crossvalidated
[post_id]: 27272
[parent_id]: 27164
[tags]: 
There are several solutions to your problem. One is, as you suggest, just to collect all the MCMC output then delete the draws for which the parameters of interest are outside of [0,1]. You can think of this as resampling from your posterior using importance sampling, where the importance sampling weight is 0 if the parameters are outside [0,1] and 1 if they are OK; a little thought should convince you that this works. Another approach, as you have almost realized, is to use the I() construct (what you want in JAGS) on the prior. Here's a line from a JAGS program that is running even as I type: b.dni ~ dnorm(-0.00021, 100000)I(-0.005,0.005) constraining b.dni to be between -0.005 and 0.005. This naturally works better if there's any substantial probability in the unconstrained case of the parameter falling outside the range, since you don't waste MCMC samples, albeit at a slightly higher computational cost per sample. Another approach would be to abandon the Normal distribution for one with compact support, e.g., a Beta distribution: b.dni.raw ~ dbeta(a,b) b.dni Distributions on the hyperparameters a and b can be constructed more intuitively than working with a and b themselves by putting distributions on the mean and std. deviation of b.dni , then assigning the appropriate values to a and b based on the sampled mean and standard deviation. This is somewhat more of a pain programmatically, though it does gain you some flexibility in prior shape.
