[site]: stackoverflow
[post_id]: 1733696
[parent_id]: 1733684
[tags]: 
Presumably you will store your articles separately from your users (to satisfy 3NF). To that end, I'd start with something like: Users: UserId int primary key. Other user-specific data (name, address, affiliations, ...). Articles: ArticleId int primary key. UserId references Users(UserId). ArticleText varchar(big-enough-to-hold-article). The data types for the primary keys are in your hands (they don't affect the 3NF aspect). Whether you wish to split the article text into paragraphs or add keywords to articles and so on is expansion from that. This is where you should be starting from. These are the things that come to mind immediately that I'd be looking at beyond the basic structure given above. Keywords or search terms for articles, kept in another two tables, one to hold the keywords themselves and the other to hold a many-to-many relationship between keywords and articles. Synopses of the articles, can simply be another column in the Articles table. Articles that end up needing more than the maximum space allotted, in which case the article text can be split out to another table with a foreign key reference to Articles(ArticleId) and a sequence number to order the article pieces.
