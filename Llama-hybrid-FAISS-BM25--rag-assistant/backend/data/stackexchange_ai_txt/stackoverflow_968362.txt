[site]: stackoverflow
[post_id]: 968362
[parent_id]: 964724
[tags]: 
As promised, I said I would take a look. Sorry I never uploaded last night, long day and needed to hit the hay! So, I was checking out the ContentPlaceHolder.Controls collection differences between how they are populated. I noticed that when the code block is used, it flips to read only. At any other point, it will simply be empty or populated. I therefore decided to throw in an extension method to check it for us: ContentPlaceHolderExtensions.cs public static class ContentPlaceHolderExtensions { public static bool ContainsControlsOrCodeBlock(this ContentPlaceHolder placeHolder) { if (placeHolder.Controls.Count > 0) return true; return placeHolder.Controls.IsReadOnly; } } And then check this in the master page: Site.Master Content1: Content2: Content3: Content1 (Ex. Meth.): Content2 (Ex. Meth.): Content3 (Ex. Meth.): As proof-of-concept, I then added a content page: Index.aspx Plain Text Content And all rendered as expected (I believe).. TBH, while it is not perfect .. I don't think we can get much more elegance in this situation. I am not sure how other control collections are set up in these different scenarios, so I only bolted on to the ContentPlaceHolder control.. Other templated controls may or may not work the same. Thoughts? You can download the project from here : http://code.google.com/p/robcthegeek/source/browse/#svn/trunk/stackoverflow/964724
