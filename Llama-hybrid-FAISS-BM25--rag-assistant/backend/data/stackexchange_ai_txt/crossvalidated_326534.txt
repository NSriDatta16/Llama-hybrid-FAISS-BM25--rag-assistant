[site]: crossvalidated
[post_id]: 326534
[parent_id]: 326514
[tags]: 
Adjacency matrices are a good way to represent graphs: $A_{ij}=1$ if node $i$ connects to node $j$, otherwise zero. For undirected graphs, only the upper or lower triangle needs to be stored, as connections are symmetric. To prevent storage requirements from blowing up, use a sparse matrix datatype, which only needs to store the locations and values of the nonzero elements (in the case of a dense graph, there's simply no way around the issue). You can save additional space by using a sparse boolean matrix, as only 0/1 values need to be represented. For weighted graphs, you can use a weight matrix where $W_{ij}$ contains the weight of the edge from node $i$ to node $j$, or zero if they're unconnected. As above, use a sparse matrix, and store only the upper/lower triangle for undirected graphs.
