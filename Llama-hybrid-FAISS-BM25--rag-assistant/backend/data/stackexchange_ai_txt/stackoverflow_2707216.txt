[site]: stackoverflow
[post_id]: 2707216
[parent_id]: 2707203
[tags]: 
I'm not familiar with redmine , but assuming it has functionality and complexity comparable to trac , I would recommend "going for it" earlier rather than later -- and I wouldn't really call trac a "project management" tool (a term which makes me think of Microsoft Project, GANTT charts, etc, and whose appropriateness to software development projects is much iffier and debatable), but rather an "issue tracking" tool. If you have a simple project there will be fewer and smaller issues (feature requests, bug fixes, ...), but there's no harm and definitely some good in tracking them -- it helps organization even in a single-person project to easily determine and tweak what areas the problems or desires are in, their relative priorities, etc. There are other approaches to tracking (e.g., Pivotal's tracker ) that may even more appropriate to projects run along agile lines, at least in theory, but personally I've always liked a trac-like system whatever other tools and approaches I'm using (if I can get it to integrate with my code management system -- track changesets automatically wrt what issue or feature they target, etc, etc -- then I'm a really happy camper). Some tools and approaches that help with big complex projects don't "scale down" well to simpler, smaller ones (because there's a minimum threshold of complexity or rigidity in the approach or tool that makes it too heavy to bother for small-enough projects), but, in my experience, some tools and approaches (a version control system, an issue tracker, code reviews if I can get them and automatic "programming style" checkers in any case, etc) scale down sweetly and I'm always happy to have them in my toolbelt, simple as a project may be!
