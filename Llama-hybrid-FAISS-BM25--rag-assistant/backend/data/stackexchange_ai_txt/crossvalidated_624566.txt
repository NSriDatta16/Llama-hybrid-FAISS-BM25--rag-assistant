[site]: crossvalidated
[post_id]: 624566
[parent_id]: 94172
[tags]: 
Would a na√Øve (but simple) approach be to just average the vectors (centroid) in the cluster and then find the vector in the cluster closes to this centroid? import numpy as np import faiss # Using FAISS to build the vector index vector_dimension = vectors.shape[1] # assume vectors index = faiss.IndexFlatL2(vector_dimension) faiss.normalize_L2(vectors) index.add(vectors) # find the mediod, closest to centroid? centroid = np.array(vectors).mean(axis=0) faiss.normalize_L2(centroid) distances, indices = index.search(centroid, 2) medoid = vectors[indices[0][0]]
