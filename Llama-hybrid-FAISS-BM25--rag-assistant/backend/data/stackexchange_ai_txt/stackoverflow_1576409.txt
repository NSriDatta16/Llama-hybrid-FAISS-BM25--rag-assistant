[site]: stackoverflow
[post_id]: 1576409
[parent_id]: 
[tags]: 
In a makefile, how do I execute a command on each file name in variable?

I know I am doing it wrong, but I can't figure out how to organize this makefile. I define my util source files, and use some functions to define the .o files from them here: UTIL_SRC = utils/src/foo.cpp utils/src/bar.cpp utils/src/baz.cpp UTIL_OBJS = $(patsubst utils/src/%.cpp,utils/obj/%.o,$(UTIL_SRC)) This is the target that I use these files for: lib : lib/libutils.a lib/libutils.a : $(UTIL_OBJS) rm -f lib/libutils.a ar -c -q lib/libutils.a $(UTIL_OBJS) Then, when I get to the rule to compile these babies, I would love to just have one command that would iterate through each UTIL_OBJS file and each UTIL_SRC file. Instead I have resorted to this monstrosity, which defeats the purpose of storing them in variables. $(UTIL_OBJS) : $(UTIL_SRC) g++ $(UTIL_FLAGS) utils/src/foo.cpp -o utils/obj/foo.o g++ $(UTIL_FLAGS) utils/src/bar.cpp -o utils/obj/bar.o g++ $(UTIL_FLAGS) utils/src/baz.cpp -o utils/obj/baz.o Can I condense this down to one line? How? Thanks, great ones!
