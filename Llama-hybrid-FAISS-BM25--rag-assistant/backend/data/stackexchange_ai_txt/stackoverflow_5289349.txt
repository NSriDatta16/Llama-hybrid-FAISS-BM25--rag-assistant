[site]: stackoverflow
[post_id]: 5289349
[parent_id]: 3561876
[tags]: 
I think the problem is not so much the inherent speed difference between joining on 76 byte keys and 16 byte keys but more on: How many rows can you pack into each 8k page (where you get more page splits / more fragmented indexes / worse performance).... Also -- you didn't mention if those pretend GUID's were sequential or not. If they were part of the primary key and that KEY was clustered then every insert could have potentially reorganised the complete btree of the table........ Also any nonclustered indexes you have on the table contain the primary key (so they can do lookups on querys not 100% satisfied by the nonclustered index). So your nonclustered indexes are going to be much, much bigger than if they were on a table with a UNIQUEIDENTIFIER type. I haven't seen the GUID's modelled as strings in any company I've worked for but I have seen a few tables where the pk was clustered and a GUID was chosen for no particular reason. Worked fine for small datasets and then..... performance problems in production.
