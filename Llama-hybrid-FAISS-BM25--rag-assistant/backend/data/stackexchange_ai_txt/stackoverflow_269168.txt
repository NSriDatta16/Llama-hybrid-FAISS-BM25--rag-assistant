[site]: stackoverflow
[post_id]: 269168
[parent_id]: 268129
[tags]: 
Are the web applications deployed on the same server? I can't speak for Spring, but it is straightforward to move your business logic in to the EJB tier using Session Beans. The application organization is straight forward. The Logic goes in to Session Beans, and these Session Beans are bundled within a single jar as an Java EE artifact with a ejb-jar.xml file (in EJB3, this will likely be practically empty). Then bundle you Entity classes in to a seperate jar file. Next, you will build each web app in to their own WAR file. Finally, all of the jars and the wars are bundled in to a Java EE EAR, with the associated application.xml file (again, this will likely be quite minimal, simply enumerating the jars in the EAR). This EAR is deployed wholesale to the app server. Each WAR is effectively independent -- their own sessions, there own context paths, etc. But they share the common EJB back end, so you have only a single 2nd level cache. You also use local references and calling semantic to talk to the EJBs since they're in the same server. No need for remote calls here. I think this solves quite well the issue you're having, and its is quite straightforward in Java EE 5 with EJB 3. Also, you can still use Spring for much of your work, as I understand, but I'm not a Spring person so I can not speak to the details.
