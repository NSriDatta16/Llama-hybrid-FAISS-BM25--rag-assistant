[site]: stackoverflow
[post_id]: 389212
[parent_id]: 389047
[tags]: 
It is a fact of .NET/Java applications that the CLR/JVM will allocate a larger heap memory then actually needed/used . They usually less willing to release allocated to OS unless OS is getting physical memory starveling. But it is true that memory-management is a difficult topic . The problem is: how do you define the memory usage by your application? Total allocated virtual memory? total working-set? private working-set? used memory in heap? heap allocated? minimum, peak or average? One thing you can do is using CLR Profiler to check are there too much heap allocated. You can try to optimize it by spend memory consuming takes by times to prevent the heap glow too much.
