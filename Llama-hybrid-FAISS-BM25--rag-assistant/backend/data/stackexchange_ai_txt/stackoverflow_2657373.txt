[site]: stackoverflow
[post_id]: 2657373
[parent_id]: 2650310
[tags]: 
The answers given so far, though sensible, might be answering a different question than intended. I think he's saying: assume there's a database that's difficult to secure. How can he detect hacking when it happens, ideally before it overwrites the good data? If that's what's meant, how about this: Keep a hash column in each row. It should be made from the columns in the row plus a private 'salt'. When your application changes data, have it update the hash. An outsider who doesn't know the 'salt' can't do that. Put an UPDATE trigger on the table to check the hash. If it doesn't check, something is wrong and you can rollback the UPDATE before the bad data is committed. This is hardly hackproof, but it discourages the casual vandal.
