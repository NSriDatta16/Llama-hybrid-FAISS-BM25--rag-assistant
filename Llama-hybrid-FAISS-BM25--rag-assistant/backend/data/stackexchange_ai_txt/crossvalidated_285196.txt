[site]: crossvalidated
[post_id]: 285196
[parent_id]: 
[tags]: 
Imputing missing counts in a time series (with variance?)

We're using a sonar to enumerate migrating fish. The date & time are recorded with each event that a fish passes the sonar station. We've noted two very strong time-varying components to the density of migration: A periodic (diurnal) component - a distinctly sinusoidal pattern in run density, with a period of one day A strong trend component - very few fish initially, and more & more until ice formation "flushed" them out (and ended fieldwork!) There are a few gaps in the dataset of more than one hour. In the past, we've imputed by averaging the counts for the same time period, for the previous and subsequent days, in an attempt to account for both the diurnal and seasonal trends. (Side question: if someone can suggest a better imputation approach, I'd love to hear it!) This technique feels pretty ad hoc, but seems to perform pretty well. In a simulation in which I selected 1 to 2 hour time intervals at random and compared real counts to counts that would have been imputed, the imputed counts were reasonably similar, and followed the same trend as real counts (surprisingly well, actually). R code is shown below for completeness, and I apologize that it's not reproducible. minjulian windowpos & big_julian windowpos-1 & big_julian windowpos+1 & big_julian So here's the question. Is there a way to estimate a variance of these imputed counts? My first thought was to consider unknown fish passage as a Poisson process, with an expected count for each imputed block equal to the imputation value. Granted, this is a big assumption, but would that also give a variance equal to the imputation value? (Note: here's another post where I explored the Poisson process assumption in the presence of a trend. If the time interval is less than 1/12 of the period, the results aren't so bad for the scale of counts we see.) I did also explore the performance of the Poisson approximation assumption via simulation. Given below are the proportions of actual counts that fall within the middle 50%, 80%, 95% and 99% of Poisson densities defined by corresponding imputed values. Performance was ... well ... Meh. for (middle in c(0.5, 0.8, 0.95, 0.99)) print(c(middle, mean(n >= qpois((1 - middle)/2, ninterp) & n Theoretical proportions are on the left, observed on the right. Any suggestions on where to go from here?
