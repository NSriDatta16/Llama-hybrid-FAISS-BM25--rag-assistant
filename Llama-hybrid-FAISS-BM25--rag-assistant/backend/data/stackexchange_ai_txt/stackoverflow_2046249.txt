[site]: stackoverflow
[post_id]: 2046249
[parent_id]: 2014636
[tags]: 
[org-mode] is great for managing somewhat 'actionable' items, but I keep adding things of a more general nature, that I won't be needing on a day-to-day basis (how-tos, reading notes etc), so it's getting slow and hard to manage. I'm a follower of David Allen and his Getting Things Done methodology. I'm using Emacs for three of the lists he recommends: Next Actions Project Resources The Someday/Maybe list The material I'm concerning myself with doesn't fit the /projects/tasks/sub-tasks paradigms, they are more like little knowledge nuggets on selected topics, which are inherently more complex to classify and manage. I've been wondering what kind of structure could be used to handle that kind of information (classification and retrieval), and if there are maybe other modes that could help with the job ? For this kind of information I've migrated away from emacs. Instead I keep a directory ~/etc/howto , and in that directory I put files that contain "little knowledge nuggets on selected topics", where the key criterion is that the information has long-term value . I could search this directory with Emacs, but my Emacs Lisp is not so hot, so I wrote a howto shell script instead (some error checking omitted for clarity): case $# in 1) ;; *) echo "Usage: $0 " 1>&2; exit 2 ;; esac topic="$1" # Note the ordering: first exact matches, then beginning matches, then any matches set xxx `find $HOME/etc/howto/. -name "$topic" -not -type d -print` \ `find $HOME/etc/howto/. -name "${topic}?*" -not -type d -not -name '*~' -print` \ `find $HOME/etc/howto/. -name "?*$topic*" -not -type d -not -name '*~' -print` shift case $# in 0) echo "No file found matching *$topic*" 1>&2 ; exit 1 ;; *) for i do less "$i" done ;; esac Examples include: howto football brings up three nuggets, in this order: Instructions to give to my wife on how to record a football game on the computer Instructions for me as exactly what to take and how to dress when I have tickets to a football game Instructions for transcoding a football game so it can be transmitted over the net and viewed away from home howto filesystem brings up instructions on how to copy a filesystem howto batteries brings up a list of recommended rechargeable batteries One reason I don't use Emacs is that my real script is a little more complicated than what you see above: it also handles PDF and djvu files, so for example howto razor brings up a djvu document of the manual which came with my electric razor. I have over 500 items in the main directory or in subdirectories, and even at this scale the system works quite well for me. I hope you may find it helpful too.
