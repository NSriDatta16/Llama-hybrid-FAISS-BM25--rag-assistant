[site]: stackoverflow
[post_id]: 799622
[parent_id]: 799436
[tags]: 
It's not reasonable to make concrete performance & scalability expectations without any information about hardware, technology, load, usage, etc. "CMS" is very broad: What does your server farm look like? What are the terms of your SLA? What does your typical user look like? E.g. many brief users or fewer users with long sessions and many requests? Other important questions to answer: Do you want to measure "time to first byte" (I hate this but it's fairly common), or include network latency in your total "time to serve"? How many editors are working against the system? Do your editors work against the same data backing, or do they prepare content in an isolated environment and push batches of content updates? What kind of caching mechanism can you support? Can the content be stale for minutes/hours? In our farm of several load-balanced 64-bit servers with ~32gb RAM (IIRC) and 4 CPUs each, we average just under 100k requests per hour with a peak load of several hundred requests/sec (uncommon). Total end-user load time (incl images and assets) must be under 5 sec. Our total CMS content database is just under 750,000 pages. We have massive amounts of cross-loaded content, querying, complex editor-configurable widgets, etc.
