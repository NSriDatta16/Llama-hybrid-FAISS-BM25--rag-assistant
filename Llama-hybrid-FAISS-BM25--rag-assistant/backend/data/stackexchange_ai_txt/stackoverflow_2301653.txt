[site]: stackoverflow
[post_id]: 2301653
[parent_id]: 2301305
[tags]: 
I'm not sure that you can avoid conflict! The challenge is deciding what to do so everyone can learn and not too many people get hurt. A well-run team should run itself. That is to say, the team lead's role should be to get a good framework in place so the team can decide on priorities, techniques, methodologies and even process by talking together. So good managers will ask team members "OK, so what would you do?" They'll then get the appropriate support put in place so that can happen. I'd suggest that as a group you Regularly get together (perhaps weekly) to review progress and learn from mistakes made in implementation. Make sure that all tasks are given to the team as a whole, not to individual developers. Everyone should know the high-level summary of a job. Get together daily to very quickly summarise progress. Keep this meeting limited to 10 minutes. In these meetings it's best to avoid blaming people. Blame the code instead, or the process, but don't get personal. And if your company culture allows it, try reading up on some of the literature around agile project management: there are many parts of that process that are designed to avoid conflict of this nature. However, it can be quite a hard shift for some organisations to devolve quite so much power to developers...
