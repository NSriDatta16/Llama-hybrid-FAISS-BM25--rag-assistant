[site]: crossvalidated
[post_id]: 250513
[parent_id]: 194273
[tags]: 
The proper role of exploratory data analysis is a subtle issue. I wouldn't say that it is "necessary" to perform EDA before fitting a logistic regression model. You could conduct exploratory analyses if that is the point of your endeavor. On the other hand, if your goal is to test a hypothesis (say a treatment effect), exploring your data first to determine the optimal way to do it puts your thumb on the scale: you could end up with inflated type I error rates and poor out of sample performance. Under the assumption that you are exploring a dataset because your true purpose is to explore the dataset, there are some plots that are handy. With all discrete variables, any number of simple plots (e.g., bar plots) could be used. The difficulty is when you have a continuous predictor. In that case, an option is to use a spineplot. There, you bin the x-variable using an algorithm for a histogram without looking at Y. Then you compute the proportion of 'successes' within each bin. A different option is to use a conditional density plot. Here is an example, coded in R using the NASA space shuttle o-ring failure data (adapted from the examples in the documentation): fail = factor(c(2,2,2,2,1,1,1,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,1), levels=c(1, 2), labels=c("no", "yes")) temp = c(53,57,58,63,66,67,67,67,68,69,70,70,70,70,72,73,75,75,76,76,78,79,81) dy = density(temp[fail=="yes"], from=min(temp), to=max(temp)) dn = density(temp[fail=="no"], from=min(temp), to=max(temp)) sm = dy$y + dn$y windows() par(mfrow=c(3,1)) spineplot(fail~temp, main="Splineplot") plot(dy, xlim=range(temp), ylim=c(0, 0.11), col="red", main="Densities", xlab="temp") lines(dn, col="blue") lines(dy$x, sm, col="black") legend("topleft", legend=c("Failed","Didn't","Sum"), lty=1, col=c("red","blue","black")) cdplot(fail~temp, main="Conditional density plot")
