[site]: stackoverflow
[post_id]: 5481481
[parent_id]: 5481401
[tags]: 
Technically speaking, it doesn't work because --foo is not an lvalue, but the unary & operator requires one. From the C draft standard, section 6.5.16: An assignment expression has the value of the left operand after the assignment, but is not an lvalue. While that doesn't directly cover the prefix decrement operator, section 6.5.3.1 makes it apply: The expression ++E is equivalent to (E+=1) . and The prefix -- operator is analogous to the prefix ++ operator, except that the value of the operand is decremented. And, of course, section 6.5.3.2: The operand of the unary & operator shall be either a function designator, the result of a [] or unary * operator, or an lvalue that designates an object that is not a bit-field and is not declared with the register storage-class specifier.
