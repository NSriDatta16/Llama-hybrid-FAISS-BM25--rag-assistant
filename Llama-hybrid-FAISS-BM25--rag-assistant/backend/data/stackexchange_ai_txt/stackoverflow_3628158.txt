[site]: stackoverflow
[post_id]: 3628158
[parent_id]: 3628086
[tags]: 
You are overcomplicating things. If the new fragment is less than 3 letters, it is automatically OK. If not, it must be the start of some word and not be a word itself to be OK. >>> words = { "apple" } >>> def isOK( fragment, letter ): ... word = fragment + letter ... if len( word ) >> isOK( "a", "p" ) True >>> isOK( "ap", "p" ) True >>> isOK( "app", "l" ) True >>> isOK( "appl", "l" ) False >>> isOK( "appl", "e" ) False (It would be possible to combine the two tests above into one conditional statement: return len( word ) but I think that is overly obscure.) I can't follow the logic of your code above; it is rather confusingly written. (Why is words a string, for instance?) Try writing the logic of the game in pseudocode before trying to implement it -- that may help you sort out your thoughts. Here's a clearer version: def isOK( word ): condition_one = len( word ) > 3 and word in words condition_two = not any( w.startswith( word ) for word in words ) return not( condition_one or condition_two )
