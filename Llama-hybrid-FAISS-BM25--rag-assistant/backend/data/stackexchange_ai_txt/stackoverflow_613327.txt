[site]: stackoverflow
[post_id]: 613327
[parent_id]: 
[tags]: 
abstract method in a virtual class

I have a c# Class that has lots of virtual methods, some of these methods are essentially abstract ( they are fully implemented in subclasses and the base class is empty). To get it to compile i am throwing an InvalidOperationException in the base class with a comment on what should be done. This just feels dirty. Is there a better way to design my classes? edit: It is for the middle tier of an application that will be ran in canada, half of the methods are generic hence the virtual. and half of the methods are province specific. Public class PersonComponent() { public GetPersonById(Guid id) { //Code to get person - same for all provinces } Public virtual DeletePerson(Guid id) { //Common code } Public virtual UpdatePerson(Person p) { throw new InvalidOperation("I wanna be abstract"); } Public Class ABPersonComponent : PersonComponent { public override DeletePerson(Guid id) { //alberta specific delete code } public override UpdatePerson(Person p) { //alberta specific update codecode } } hope this makes sense
