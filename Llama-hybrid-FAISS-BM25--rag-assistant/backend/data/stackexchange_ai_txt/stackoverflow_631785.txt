[site]: stackoverflow
[post_id]: 631785
[parent_id]: 631193
[tags]: 
You almost certainly, should not continue down your current path. The recursive method you are trying to use will almost certainly kill your performance if your tree ever gets even slightly larger. You probably should be looking at a nested set structure instead of an adjacency list if you plan on reading the tree frequently. With a nested set, you can easily retrieve the entire tree nested properly with a single query. Please see these questions for a a discussion of trees. Is it possible to query a tree structure table in MySQL in a single query, to any depth? Implementing a hierarchical data structure in a database What is the most efficient/elegant way to parse a flat table into a tree?
