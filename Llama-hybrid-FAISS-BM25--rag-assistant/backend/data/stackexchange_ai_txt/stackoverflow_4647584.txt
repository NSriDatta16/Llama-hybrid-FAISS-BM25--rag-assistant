[site]: stackoverflow
[post_id]: 4647584
[parent_id]: 
[tags]: 
Why do I get errors about non-staic methods being referenced from the static context?

In the following block of code, I am trying to print the properties whose location , monthlyRent , numberOfBedrooms defined in the Property class being equal to this method's parameters in LettingAgent class. When I compiled, the error is occured in the if line where it says non-static method like getlocation() can't be referenced from static context. /** * Java coursework on class property which present detail information about the property public class Property { // instance variables of class property. private String address; private char location; private double monthlyRent; private int numberOfBedrooms; private boolean occupied; private String tenantName; /** * Constructor for object of class Property with required parameters. */ public Property( String addressinput, char locationinput, double Rentinput, int Bedsinput ) { //initialise the instance variables or fields of property class. address = addressinput; location = locationinput; monthlyRent = Rentinput; numberOfBedrooms = Bedsinput; occupied = false; tenantName = ""; } /** * Return the address of the property */ public String getAdress( ) { return address; } /** * Return the location of the property */ public char getLocation( ) { return location; } /** * Return the monthlyRent of the property */ public double getmonthlyRent( ) { return monthlyRent; } /** * Return the numberOfBedrooms of the property */ public int getnumberOfBedrooms( ) { return numberOfBedrooms; } /** * Return the occupied value of the property */ public boolean isoccupied( ) { return occupied; } /** * Return the tenant's name of the property */ public String gettenantName( ) { return tenantName; } /** * Set the monthly rent to a new value */ public void setmonthlyRent( double newRent ) { monthlyRent = newRent; } /** * Adding tenant's name to the property */ public void addtenantName(String newTenant) { if(occupied == false) { tenantName = newTenant; occupied = true; } else { System.out.println(" The property is already occupied"); } } /** * Removing tenant's name of the property */ public void removetenantName( ) { if( occupied == true) { tenantName = ""; occupied = false; } else { System.out.println(" The property is new and not occupied"); } } /** * Print all the property attributes */ public void printProperty( ) { //simulate the printing of the property attributes. System.out.println( "The details of the property are as follow" ); System.out.println("Address:" + address ); switch(location){ case 'n': case 'N': System.out.println("Location: North london" );break; case 's': case 'S': System.out.println("Location: South london" );break; case 'e': case 'E': System.out.println("Location: East london" );break; case 'w': case 'W': System.out.println("Location: West london" ); } System.out.println("Monthly-Rent:" + monthlyRent ); System.out.println("Number of Bedrooms:" + numberOfBedrooms ); System.out.println("Status of property:" + occupied ); if(occupied == true) { System.out.println("Tenant Name:" + tenantName ); } else { System.out.println("Property is empty at moment" ); } } } LettingAgent Class (calling class) import java.util.ArrayList; /** * Write a description of class LettingAgent here. */ public class LettingAgent { // instance variables of LettingAgent Class. private ArrayList agproperty; private int Propnumber; /** * Constructor for objects of class LettingAgent */ public LettingAgent() { // initialise instance variables agproperty = new ArrayList (); Propnumber = 0; } /** * Return the property number of the Class LettingAgent. */ public int getPropnumber(){ return Propnumber; } /** *Method to add new property to the class LettingAgent via class Property. */ public void addNewProperty(String addressinput, char locationinput, double Rentinput, int Bedsinput) { // put your code here Property newProperty = new Property(addressinput,locationinput,Rentinput,Bedsinput); agproperty.add(newProperty); } /** * @Description Method for removing the propety from the class LettingAgent. * @param int propnumber */ public void removalOfProperty(int Propnumber) { // initialise instance variables if( Propnumber
