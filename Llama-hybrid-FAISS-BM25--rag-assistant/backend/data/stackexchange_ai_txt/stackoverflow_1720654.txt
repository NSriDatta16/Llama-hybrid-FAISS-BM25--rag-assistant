[site]: stackoverflow
[post_id]: 1720654
[parent_id]: 1718463
[tags]: 
I don't know Moles at all, but I'll cover the ones I know a bit about (I really need a table for this, though). Moq Pros Type-safe Consistent interface Encourages good design Cons Not as full-featured as some of its competitors It can't mock delegates It can't do ordered expectations probably other things I can't think of right now... Can only mock interfaces and virtual/abstract members Rhino Mocks Pros Type-safe Full feature set Encourages good design Cons Confusing API. There are too many different ways to do the same things, and if you combine them in the wrong way it just doesn't work. Can only mock interfaces and virtual/abstract members TypeMock Isolator Pros Type-safe (AFAIR) Can mock anything Cons Very invasive Potential Vendor Lock-In Does not encourage good design NMock Pros Encourages good design Works on any version of .NET (even 1.1) Cons Not type-safe Can only mock interfaces and virtual/abstract members Please note that particularly the advantages and disadvantages regarding TypeMock are highly controversial. I published my own take on the matter on my blog . I started out with NMock when that was the only option back in 2003, then migrated to Rhino Mocks because of its type safety, and now use Moq because of the simpler API.
