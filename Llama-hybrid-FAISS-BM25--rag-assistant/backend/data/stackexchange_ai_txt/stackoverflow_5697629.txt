[site]: stackoverflow
[post_id]: 5697629
[parent_id]: 
[tags]: 
C++ linked list , stack ( sort of )

#include using namespace std; struct Node { int item; // storage for the node's item Node* next; // pointer to the next node }; /************** use reference **************/ void addNode(Node*& head, int data , int& count) { Node * q; // new node q = new Node; // allocate memory for the new mode q->item = data; // inserting data for the new node q->next = head; // point to previous node ?? how would i do that? ( am i doing it correctly?) count++; // keep track of number of node head = q; } int main() { int a, count = 0; int data; char callen; Node *head = NULL; do { cout > data; addNode(head, data, count); cout > callen; }while( callen != 'n' ); // assuming this is the print function while(head != NULL) { cout item next; //next element } system("pause"); return 0; } I tried adding a new element in the list how would i move the head around like a LIFO memory (stack) so the last element is on the very top.. Any help would be appreciated ! The pointers and the nodes are messing with my brain lately ....
