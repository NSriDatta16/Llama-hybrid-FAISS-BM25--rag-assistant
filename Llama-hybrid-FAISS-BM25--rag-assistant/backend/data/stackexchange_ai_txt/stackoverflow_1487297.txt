[site]: stackoverflow
[post_id]: 1487297
[parent_id]: 1487194
[tags]: 
Rather than sublcassing Collection to implement FilteredCollection, try implementing FilteredCollection as a separate class that implements iCollection and delegates to an existing collection. This is similar to the Decorator pattern from the Gang of Four. Partial example: class FilteredCollection implements ICollection { private ICollection baseCollection; public FilteredCollection(ICollection baseCollection) { this.baseCollection = baseCollection; } public GetItems() { return Filter(baseCollection.GetItems()); } private Filter(...) { //do filter here } } Implementing FilteredCollection as a decorator for ICollection has the added benefit that you can filter anything that implements ICollection, not just the one class you subclassed. For added goodness, you can use the Command pattern to inject a specific implementation of Filter() into the FilteredCollection at runtime, eliminating the need to write a different FilteredCollection implementation for every filter you want to apply.
