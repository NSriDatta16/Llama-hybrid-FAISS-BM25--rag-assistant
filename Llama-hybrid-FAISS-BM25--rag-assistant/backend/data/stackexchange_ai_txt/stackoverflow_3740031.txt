[site]: stackoverflow
[post_id]: 3740031
[parent_id]: 3739990
[tags]: 
The standard and default mechanism of memory management in memcached is slab allocator . It means that memory is being allocated for the process and never released to the operating system. Basically, when memory is no longer used to store some data, it is being held by the process in order to be reused later, when needed. However, the operating system releases memory allocated by the process when it is finished. That is why memory is being released when you kill/stop the memcached. There is a compile-time option in memcached to enable malloc/free mechanism. So that when free() is called, memory might be released to operating system (this depends on C standard library implementation). But doing so might hurt a good fragmentation and performance . Please read more about the issue here: Why not use malloc/free Memcached memory management
