[site]: stackoverflow
[post_id]: 3425827
[parent_id]: 3425591
[tags]: 
You should not use relative paths in Java IO. The path would become relative to the current working directory which depends on how you started the webserver/webapplication. When Tomcat is started in Eclipse for example, it may be the Eclipse project directory. When Tomcat is started from CMD, it may be the currently opened folder in CMD. When Tomcat is started as service, it may be /bin folder of Tomcat. To determine it yourself, do as follows: System.out.println(new File("programAll.txt").getAbsolutePath()); And you'll see that it's completely different than you'd expect. You need to specify absolute paths instead. You can use ServletContext#getRealPath() to convert a webcontent-relative path to an absolute disk file system path. String relativeWebPath = "programAll.txt"; String absoluteDiskPath = getServletContext().getRealPath(relativeWebPath); output = new FileOutputStream(absoluteDiskPath); // ... The getServletContext() method is available inside every servlet. That said, did you take into consideration that all modified files in the webcontent will be wiped/overriden whenever you redeploy/restart the webapp/server? If you'd like to have a bit more permanent storage, I strongly recommend to store them outside the webcontent (of course in an absolute path, e.g. /var/webapp/files or so).
