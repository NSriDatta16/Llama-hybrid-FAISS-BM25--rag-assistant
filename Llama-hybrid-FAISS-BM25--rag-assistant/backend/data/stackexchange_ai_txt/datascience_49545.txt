[site]: datascience
[post_id]: 49545
[parent_id]: 49327
[tags]: 
You could just pass gender as a parameter to create a pipeline def create_pipeline(gender): select_statement = "SELECT * FROM __THIS__ WHERE {predicate}".format(predicate = "is_male" if gender == "male" else "not is_male") pipeline = Pipeline(stages=[transformer = SQLTransformer(statement=select_statement), VectorAssembler(inputCols=['age', 'bmi', 'bp', 's1'],outputCol='features'), LogisticRegression(featuresCol='features', labelCol='label', maxIter=100, elasticNetParam=1, regParam=0.) ]) return pipeline Then store all the models model_types = {'model_male': create_model(gender='male'), 'model_not_male': create_model(gender='not_male')} Fit each model for model_types in models: pipeline = models[model_types] model = pipeline.fit(df) model.transform(df)
