[site]: stackoverflow
[post_id]: 648256
[parent_id]: 648195
[tags]: 
The most pragmatic and versatile way to do string conversions is with TypeConverter : public static T Parse (string value) { // or ConvertFromInvariantString if you are doing serialization return (T)TypeDescriptor.GetConverter(typeof(T)).ConvertFromString(value); } More types have type-converters than implement IConvertible etc, and you can also add converters to new types - both at compile-time; [TypeConverter(typeof(MyCustomConverter))] class Foo {...} class MyCustomConverter : TypeConverter { // override ConvertFrom/ConvertTo } and also at runtime if you need (for types you don't own): TypeDescriptor.AddAttributes(typeof(Bar), new TypeConverterAttribute(typeof(MyCustomConverter)));
