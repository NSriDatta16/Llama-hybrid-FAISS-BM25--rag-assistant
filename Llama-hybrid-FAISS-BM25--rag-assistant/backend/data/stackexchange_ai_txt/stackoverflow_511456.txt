[site]: stackoverflow
[post_id]: 511456
[parent_id]: 511378
[tags]: 
I wouldn't be concerned too much with performance issues (Knuth), I'd be more concerned with issues of testability and managing state in a multithreaded environment, primarily to reduce complexity of coding and maintenance, which can drag down a project worse than the occasional performance issue. You can't mock statics, so code that uses an API that is based on static methods is relatively untestable imho. Not really what you're asking, but please think about the people who are going to use your API. You should reduce the points where shared data is held among threads to the absolute minimum. This reduces the chances of threading issues. You will probably lose a little efficiency in doing this, but you gain much in ease of coding and maintenance. Imagine how hard it would be to write and test an ASP.NET application if all the pages were static. It'd be a nightmare. You might find yourself going down that road as your API gains features over time. Also, use a decent DI framework (I liek Unity, may be the best thing to come out of P&P).
