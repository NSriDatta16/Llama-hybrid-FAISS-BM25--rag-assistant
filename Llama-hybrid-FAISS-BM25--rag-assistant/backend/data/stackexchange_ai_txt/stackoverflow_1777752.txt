[site]: stackoverflow
[post_id]: 1777752
[parent_id]: 
[tags]: 
Python importing & using cdll (with a linux .so file)

After one of my last questions about python&c++ integration i was told to use dlls at windows. (Previous question) That worked ok doing: cl /LD A.cpp B.cpp C.pp in windows enviroment, after setting the include path for boost, cryptopp sources and cryptopp libraries. Now i'm tryting to do the same in linux, creating a .so file to import through ctypes on python2.5. I did: gcc -Wall -Wextra -pedantic A.cpp B.cpp C.cpp /usr/lib/libcryptopp.so -shared -o /test/decoding.so and the so object is created ok. If removed "-shared" compilation is OK but stops as no main in there (obviously ;) ). Of course libcryptopp.so exists too. But when i go to python and import the "so" file, it said that the attribute has no object "decrypt", "encrypt" or whatever i put there. using "dir" over the dll objects confirms that they are not there. external functions are defined in A.cpp as: int encrypt (params...) //.. return num; int decrypt (params...) //.. return num; also tried using: extern "C" encrypt (params...) ..... Could anyone tell me what i'm doing wrong? Thanks in advance! Rag
