[site]: stackoverflow
[post_id]: 4179652
[parent_id]: 4179642
[tags]: 
Short answer: you should. Long answer that lead to the short answer: When you say .append(' ') , or even .append(' , behind the scenes jQuery calls document.createElement and the browser knows what to do. It's not like jQuery actually puts that string of HTML anywhere, but rather parses it and creates the necessary DOM elements UPDATE- As Nick pointed out, this might not always be the case. Relevant source: init If you pass it just ul , it just calls createElement . If the html string is more complicated, it will go into buildFragment which is more complicated than that. Based on this, I would say the best/fastest way to create a single element thru jQuery, is to do something like $(' ').appendTo($target); UPDATE 2- So apparently jQuery only calls createElement in some methods, but append ends up calling clean which has a regex that closes tags. So either way, you're safe, jQuery saves you as usual. Relevant source: ... } else if ( typeof elem === "string" ) { // Fix "XHTML"-style tags in all browsers elem = elem.replace(rxhtmlTag, " "); ... UPDATE 3- So it turns out jQuery doens't fix anything for you when you call append , and it just injects the string into a temporary div element. Seems like most browsers know how to deal with the HTML even if not closed properly, but to be save it's probably best to close it yourself! Or if you're feeling lazy, do something like .append($(' ')) which doesn't use innerHTML
