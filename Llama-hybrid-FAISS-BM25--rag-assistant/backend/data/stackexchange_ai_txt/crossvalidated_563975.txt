[site]: crossvalidated
[post_id]: 563975
[parent_id]: 563958
[tags]: 
Yes, sure they can do that. For many statistical survival, the log-hazard of an event at time t as $\log h(t) = \log \lambda(t) + \text{linear terms}$ , where $\lambda(t)$ (the "baseline hazard function" that applies when the linear terms add up to 0) is some function of time that is otherwise the same for all subjects. You can also have this different for different levels of categorical variables, which would be a stratified survival model. The fit for the linear terms does - as you say - only give a relative ranking of subjects, but in combination with $\lambda (t)$ , you also get absolute predictions. When you fit a Cox model, it internally has a step-function that approximates $\lambda(t)$ , while in parametric regression models such as exponential or Weibull survival models $\lambda(t)$ has a particular parametric form (e.g. for an exponential distribution it's just $\lambda(t) = \lambda_0$ ). You get from $\lambda(t)$ to the survival function $S(t) := P(\text{survive until after time } t)$ as $$S(t) = \exp(-\int_0^t h(u) du)$$ see e.g. here . For other machine learning models, it depends a bit on exactly what you did. E.g. one approach is to estimate a simple survival model in each node of a tree based model such as just a step function (as done e.g. in survival forest where something like a Kaplan Meier curve is estimated in each node), when you can basically average all the predicted curves to get a survival at time t prediction. With neural networks some people often output the parameters for some parametric survival model instead, which again let's you get a prediction of the survival function.
