[site]: stackoverflow
[post_id]: 2277942
[parent_id]: 2273734
[tags]: 
Oh my! Pardon my saying so, but every regular WPF user who has read your question has probably shaken their head in pity. We feel sad for you because you haven't yet learned the true "Zen of WPF", which is leveraging data binding, templates and triggers to make your UI dynamic rather than doing it the old-fashioned way. WPF is beautiful because of this ability. It also makes things "1000%" easier. I recommend you change your UI to use a Trigger on your TreeViewItem to replace your HeaderTemplate based on a property you define in the TreeViewItem. Set this property true when the item is double-clicked. Set it false when IsKeyboardFocusWithin goes false (you can override metadata and add a PropertyChangedCallback for this). As far as your LostFocus problem goes, I suspect your problem is that you have multiple focus scopes or it is a bug in the RC. Without seeing your XAML I can't say much more than that. Additional details on doing this the "WPF way" Here are some of the details on how to implement this using an attached property, triggers and templates. Your templates can be as simple or as complex as you want. Here's simple: Here is what your style would look like: The attached property "ShowTextBox" can be created in MyWindowClass using the "propa" snippet - just type "propa" and hit tab, then fill in the blanks. To switch the item to show the textbox, just: SetShowTextBox(item, true); To switch it back: SetShowTextBox(item, false); I hope this helps.
