[site]: stackoverflow
[post_id]: 5569613
[parent_id]: 5569570
[tags]: 
In the controller rendering this view you need to set ViewData["CategoryID"] = "5"; if you want to preselect an option with value="5" . Of course using ViewData is not something that I would recommend you. You should use a view model instead: var model = new SomeViewModel(); model.CategoryID = "5"; model.Categories = ... return View(model); and then: x.CategoryID, Model.Categories, new { style="font-size:11px; width:150px;" } )%> UPDATE: Providing a full example for @Robert Koritnik who expressed some doubts about this solution in the comments section: Model: public class MyViewModel { public string Id { get; set; } public IEnumerable Items { get; set; } } Controller: public ActionResult Index() { var model = new MyViewModel { // we want the second item preselected // so assign our view model property // which will be used to bind the dropdown list // to the id of the corresponding item in the options collection Id = "2", Items = new[] { new SelectListItem { Value = "1", Text = "item 1" }, new SelectListItem { Value = "2", Text = "item 2" }, new SelectListItem { Value = "3", Text = "item 3" }, } }; return View(model); } View: @Html.DropDownListFor( x => x.Id, new SelectList(Model.Items, "Value", "Text"), "-- Please select an item --" ) As expected the second item is preselected. Remark: The Items property could be an IEnumerable of any custom type, it's just necessary to specify the corresponding Value and Text properties when building the SelectList in the view.
