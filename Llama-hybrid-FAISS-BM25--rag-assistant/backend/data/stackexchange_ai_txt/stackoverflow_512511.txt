[site]: stackoverflow
[post_id]: 512511
[parent_id]: 512412
[tags]: 
I check in often. Two things source control gives you that you lose from not checking in often are: simplifying collaboration tracking history of changes over time Other developers need to be aware of changes that are happening in the codebase. Checking in your changes early notifies them of what you are working on. It can help against duplication of effort (either multiple people implementing the same thing of fixing the same bug). Infrequent checkins may lead to significant and unexpected changes to the code, which is much more likely to result in difficult debugging situations (less so because of the code you just checked in, but because of the complexities of it interacting with the rest of the system). Your source control system can't help you revert changes if it doesn't know what changes have been made. Additionally, if you were to lose the local changes you've been working on for the past week, the damage would be much greater. You shouldn't limit yourself because of disk space. SCM systems are pretty intelligent about their disk usage, but in any case storage is cheap and plentiful. That said, I suggest you divide the work you have to do into small pieces, and check in after you've completed one such piece. It'll be easier on you and the other developers.
