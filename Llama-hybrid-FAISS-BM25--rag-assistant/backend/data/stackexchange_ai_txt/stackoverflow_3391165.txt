[site]: stackoverflow
[post_id]: 3391165
[parent_id]: 3391099
[tags]: 
You may be better served using the BackgroundWorker that is built-in to the .NET framework. BackgroundWorker bw = new BackgroundWorker(); bw.DoWork += new DoWorkEventHandler(bw_DoWork); bw.RunWorkerCompleted += new RunWorkerCompletedEventHandler(bw_RunWorkerCompleted); bw.ProgressChanged += new ProgressChangedEventHandler(bw_ProgressChanged); bw.WorkerReportsProgress = true; void bw_ProgressChanged(object sender, ProgressChangedEventArgs e) { // update UI with status label1.Text = (string)e.UserState } void bw_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e) { //Check for cancel if(e.Cancelled) { //Handle the cancellation. { //Check for error if(e.Error) { //Handle the error. } // Update UI that data retrieval is complete } void bw_DoWork(object sender, DoWorkEventArgs e) { // Get data //foreach to process data //Report progress bw.ReportProgress(n, message); } Here's a link to the MSDN article on how to use the BackgroundWorker for additional details. Thanks to Henk Holterman for the suggestion to include this: http://msdn.microsoft.com/en-us/library/cc221403%28VS.95%29.aspx
