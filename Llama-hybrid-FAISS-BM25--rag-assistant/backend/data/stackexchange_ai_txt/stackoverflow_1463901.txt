[site]: stackoverflow
[post_id]: 1463901
[parent_id]: 1457643
[tags]: 
Ok, I found out something interesting. The nil sort descriptor wasn't causing the leak, it was still there but maybe I was stopping the leak detector too early. Here is the method with the leak. When I comment out the pragma mark, the 16 byte leak doesn't show in Instruments. Why would having a pragma mark in the method cause a 16 byte leak? - (NSPersistentStoreCoordinator *)persistentStoreCoordinator { if (persistentStoreCoordinator != nil) { return persistentStoreCoordinator; } NSString *databaseFilePath = [[self applicationDocumentsDirectory] stringByAppendingPathComponent: @"Locations.sqlite"]; NSFileManager *fileManager = [NSFileManager defaultManager]; if([fileManager fileExistsAtPath:databaseFilePath]) { # pragma mark - flag to delete file NSError *fMerror; if (![fileManager removeItemAtPath:databaseFilePath error:&fMerror]) { NSLog(@"persistentStoreCoordinator error %@, %@", fMerror, [fMerror userInfo]); } } NSURL *storeUrl = [NSURL fileURLWithPath: databaseFilePath]; NSError *error; persistentStoreCoordinator = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel: [self managedObjectModel]]; if (![persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeUrl options:nil error:&error]) { NSLog(@"persistentStoreCoordinator error %@, %@", error, [error userInfo]); } return persistentStoreCoordinator; }
