[site]: stackoverflow
[post_id]: 954395
[parent_id]: 953609
[tags]: 
POST is non-idempotent, meaning if you send the same POST request many times, you will get many new items. PUT should be idempotent, since the same update happening on the same resource should have no side effects when executed multiple times. As for where this action should go, it really depends on your aesthetic sensibilty and how hardcore you want to be about REST versus keeping your Rails controllers clean and well organized. It's certainly arguable that a DeletedBob is different resource from a Bob. You could say that a PUT sent to the DeletedBobsController would update the DeletedBob resource, perhaps with a parameter like "deleted=false" to indicate the purpose of the update. You could also consider Deletions as a resource. Then you could use DELETE on the DeletionsController with the params "resource_type=bob&resource_id=23". By destroying the deletion, you are restoring the original object. Subsequent identical calls will yield an "object not found" error, as one would expect with DELETE. Personally, ever since Roy Fielding (original author of the dissertation defining REST) came out and said there's really nothing wrong with POST , I would consider defining an additional :put => :restore method and route on my BobsController. It keeps the code where another programmer would expect it, and they are likely the only audience for this kind of design.
