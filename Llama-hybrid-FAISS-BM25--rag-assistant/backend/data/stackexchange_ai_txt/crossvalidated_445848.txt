[site]: crossvalidated
[post_id]: 445848
[parent_id]: 445847
[tags]: 
I'm not sure exactly what you mean by knowing what channels are best at predicting the category. I am guessing you mean determine which channels have the highest rates of correct predictions after you use the other columns for predicting category. This may be an issue due to the small sample size per channel. However, on the topic of predicting the category based on all the other columns, have you considered a Random Forest or similar model? RF is a tree based model meaning each column basically acts as fork in a road. In the simplest case possible, a tree could come to PPN1 and see the value is greater than 0 and then continues down that path (as opposed to In reality, the model will be fit using other cutoffs determined by the training data and parameters you set. Additionally, not all of the columns will necessarily be used and they will not necessarily be in the order you see them. Furthermore with an extension like RF, you are going to fit thousands of trees and basically have the outcomes averaged to determine a final prediction (this helps with over fitting). This link (an 100s of others) can point you to a decent starting point: https://www.r-bloggers.com/how-to-implement-random-forests-in-r/ This method usually performs very well in prediction but is not so great in interpretability. However, if you fit a single tree, there are ways to visualize it to get an idea of the underlying mechanics. This link provides a pretty good overview of how to quickly train and visualize a tree: http://www.di.fc.ul.pt/~jpn/r/tree/tree.html Hope this helps!
