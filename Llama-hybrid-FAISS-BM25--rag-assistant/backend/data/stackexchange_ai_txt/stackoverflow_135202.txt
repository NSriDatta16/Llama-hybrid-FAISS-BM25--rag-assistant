[site]: stackoverflow
[post_id]: 135202
[parent_id]: 127009
[tags]: 
Well because std::vector is guaranteed to have contiguous storage, it should be perfect fine to do this: class Arc; typedef Arc* ArcIterator; class Node { public: ArcIterator incomingArcsBegin() const { return &_incomingArcs[0] } ArcIterator incomingArcsEnd() const { return &_incomingArcs[_incomingArcs.size()] } private: std::vector _incomingArcs; }; Basically, pointers function enough like random access iterators that they are a sufficient replacement.
