[site]: stackoverflow
[post_id]: 92638
[parent_id]: 
[tags]: 
Self-owning web services, or services that can survive the death of the inventor

I noticed a new web service today called a Dead man's switch , which dispatches email in the event that you don't respond to periodic "pings" that prove you're still alive. But it occurred to me that I might outlive the person or organization that pays the bills for the service, making the service useless. There are other kinds of services that we could be reluctant to use simply because the value is so high we don't trust it to an inventor who could lose interest, or an organization that could go insolvent. Like data repositories that could be used in many different programs and devices, but that would break them all if someone forgot to pay the hosting bill. But say the service "owned itself", and paid its own hosting bills? Like this: The host is Amazon EC2 or similar The bill is paid by debiting a bank account The bank account is replenished by interest returns and advertising revenue The bank account is in the name of the service itself, and once seeded is never touched for anything else again The creator declares the service "finished" and moves onto the next project To me, this is an engineering problem similar to those of building Mars rovers, bury-n-forget power generators, The Millenium Clock, and other artifacts that have their own homeostasis mechanisms and can be abandoned by their creators without ceasing to function. The question is: what are the gotchas? Must the bank account be in a real person's name? Can you prevent the govt. from considering the account "unclaimed" after n years? How could it recover from crashes? Is there an API for opening new hosting accounts at other companies so it could automatically scale itself and protect itself against the insolvency of any one host?
