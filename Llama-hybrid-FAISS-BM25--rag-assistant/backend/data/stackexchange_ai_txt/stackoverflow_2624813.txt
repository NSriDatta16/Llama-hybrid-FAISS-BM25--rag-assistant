[site]: stackoverflow
[post_id]: 2624813
[parent_id]: 2624712
[tags]: 
The following probably applies to most framework-base development. Do the new features save more time than fixing the old things the upgrade breaks? If you're going to waste lots of time making old things work, perhaps you're better off just to sit it out on 3.x and port to 4.x at a later phase. If you really need features from 4.0 and would have to spend time implementing them yourself, perhaps it's a net time saving. Can you support this version of the framework? (ie can your server people handle the upgrades and monitor things okay?) If your server bods can't make this work in the field, give up now. I don't know your organisational structure or who runs your servers but I know some companies have a pretty thorough testing regime they'll put software through before allowing it. As a brand new version, they might be weary. And let's be frank, just because something goes through several pre-release versions, they don't catch every bug because they're rarely used in production scenarios. You know the drill. And if installing 4.0 on the server breaks old things, you might be waiting a long time. Is your project's launch likely going to be after the first round of bug fixes? If you're developing this for 3+ months away, you've probably got enough time to sort the platform issues, fix the code issues and get framework bugs reported with the (blind) hope that they fix them or you can work around them safely. If you're launching tomorrow, it's not enough time to test it.
