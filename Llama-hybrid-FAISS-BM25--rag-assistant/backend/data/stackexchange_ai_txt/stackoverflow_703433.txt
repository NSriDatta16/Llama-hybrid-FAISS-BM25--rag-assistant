[site]: stackoverflow
[post_id]: 703433
[parent_id]: 679928
[tags]: 
I've done some research and here is what I got. The ra_response_steps.rb expect redirect to come crude and then the story to define wether the redirect should be followed or not. This is failing because Webrat Session implementation has the following code: def request_page(url, http_method, data) #:nodoc: h = headers h['HTTP_REFERER'] = @current_url if @current_url debug_log "REQUESTING PAGE: #{http_method.to_s.upcase} #{url} with #{data.inspect} and HTTP headers #{h.inspect}" if h.empty? send "#{http_method}", url, data || {} else send "#{http_method}", url, data || {}, h end save_and_open_page if exception_caught? && Webrat.configuration.open_error_files? raise PageLoadError.new("Page load was not successful (Code: #{response_code.inspect}):\n#{formatted_error}") unless success_code? reset @current_url = url @http_method = http_method @data = data if internal_redirect? check_for_infinite_redirects request_page(response_location, :get, {}) end return response end Notice the if internal_redirect? ... end . This if is the one making our tests failing because webrat is following the redirects. As a workaround, you can comment those lines on your webrat session but this is probably not a decent solution. I'll work a bit more and post a patch somewhere.
