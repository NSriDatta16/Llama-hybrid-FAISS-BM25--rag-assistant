[site]: datascience
[post_id]: 66520
[parent_id]: 
[tags]: 
Multidimensional collaborative filtering model

I have a dataset that is approximately structured in the following way: 500 users, 500 products, 100 countries, 2 seasons, and 300,000 ratings. This means that I have 300,000 rows containing unique combinations of the user, product, country, and season, each with an assigned rating for the product from the user in a given year and location. For E.g. User 257 rated Product 105 a score of 4.1 in Country 29 in Season 1 From this, I would like to create a model to predict the mean rating between any given combination of user and product, i.e. an estimate of what the mean rating would be if ratings across all countries and seasons were known. My understanding is that collaborative filtering typically uses a matrix that has a structure where users are rows and products are columns. I'm not sure that is applicable in my case due to the countries and seasons giving the matrix two extra dimensions. The model would ideally learn a mapping from four dimensions (n_users x n_products x n_loc x n_year) -> two dimensions (n_users x n_products) where the first tensor is sparsely populated with known ratings and the second tensor would be populated by predicted ratings. Using the 300,000 known ratings, we can estimate the mean ratings of roughly 8,000 user-product combinations by averaging across all their known countries and seasons and then treat these mean ratings as labels for supervised learning, i.e. 8,000 of the 250,000 (500 x 500) entries could be filled. My questions are: Which type of model would you recommend using? If we use the 8,000 estimated labels, can features be engineered to capture the information contained in the joint rating distribution of user ID, product ID, country and season? Many thanks for any help or suggestions provided!
