[site]: stackoverflow
[post_id]: 2583261
[parent_id]: 2583192
[tags]: 
See FAQ - Embedding Jython . Note that jythonc is no longer supported : jythonc doesn't handle generators and is difficult to debug and improve. The current thinking is to add capabilites to jython itself to generate bytecode from py files and run those statically compiled items rather than jythonc's approach of making Java classes that work like the base Python code. The current thinking runs as follows: Turn Python classes into Java classes without a Java interface or class using function annotations to specify the static Java type information statically compile proxy classes for Python classes that extend Java classes remove code from core that is only there to support jythonc The example suggests special annotation for any method in a Python class that needs to be visible from Java: class Simple(object): @java def __init__(self): @java(String, String) def firstWord(self, param): return param.split(' ')[0]
