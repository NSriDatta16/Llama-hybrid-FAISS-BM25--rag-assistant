[site]: crossvalidated
[post_id]: 287975
[parent_id]: 287963
[tags]: 
The argument order has different default values when you use pbgtest() compared to bgtest() . For pbgtest() order = NULL , for bgtest() order = 1 . See also the section Note in the documentation ( ?pbgtest ). What you want for a panel model the answer from pbgtest() (no matter what you want order to be). However, you will not get the same numbers for both functions if you apply it to a panel model (fixed or random effects). This has a rather technical reason: lmtest::bgtest takes the data from model_object$model which are the original (untransformed) data in any case. For panel models, the test needs to be run on the (quasi-)demeaned data and pbgtest() being a wrapper around lmtest::bgtest() does excatly that: extract the (quasi-)demeaned data and pass them on to lmtest::bgtest() . For a pooling model, you will get the same numbers as the data are not transformed. Please also note that the data in models estimated by plm might be in a different order as plm re-orders the data to be a stacked time series. To check that, one can compare the data and its order used in estimation by looking at plm_object$model and lm_object$model . A different order of observations will lead to differnt results of pbgtest and bgtest even for pooling models. Here is a code example how pbgtest() works in principle: library(plm) data("Grunfeld", package = "plm") g_re
