[site]: stackoverflow
[post_id]: 5540657
[parent_id]: 5510697
[tags]: 
UPDATE 2 EclipseLink 2.4 has been released with MOXy's JSON binding: http://www.eclipse.org/eclipselink/releases/2.4.php UPDATE 1 Get a sneak peak of the native MOXy object-to-JSON binding being added in EclipseLink 2.4: http://blog.bdoughan.com/2011/08/json-binding-with-eclipselink-moxy.html Ensure that you have included a file named jaxb.properties file with your model classes that contains the following entry: javax.xml.bind.context.factory=org.eclipse.persistence.jaxb.JAXBContextFactory Without this entry the reference implementation will be used, and the EclipseLink JAXB (MOXy) extensions will not appear in the resulting XML/JSON. Using the @DescrimatorNode example from my blog, the XML produced would be: 1 A Street When I marshal leveraging Jettison: StringWriter strWriter = new StringWriter(); MappedNamespaceConvention con = new MappedNamespaceConvention(); AbstractXMLStreamWriter w = new MappedXMLStreamWriter(con, strWriter); marshaller.marshal(customer, w); System.out.println(strWriter.toString()); Then I get the following JSON: {"customer":{"contactInfo":{"@classifier":"address-classifier","street":"1 A Street"}}} For more information on JAXB and JSON see: http://bdoughan.blogspot.com/2011/04/jaxb-and-json-via-jettison.html
