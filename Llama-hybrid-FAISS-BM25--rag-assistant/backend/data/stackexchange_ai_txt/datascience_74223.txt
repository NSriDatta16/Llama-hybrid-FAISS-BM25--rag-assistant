[site]: datascience
[post_id]: 74223
[parent_id]: 
[tags]: 
Building a prediction model for dynamic coordinates and later categorize as binary classification

Project Summary I have a website (academic project) that records mouse movements such as click, mouse up, mouse down, etc. It records the coordinates for each event on a given web page from a visitor. What am I trying to accomplish? I would like to do a dynamic polling per 100 msec from a website and compare if those points/graphs/velocities etc of user movement already existed in ML Model or not. Each time it polls, it will check against the ML model and will give me the confidence of the matching values. So, this will be an online ML model which will poll against multiple models that I have. What I do not know and where to start? In the first approach, I was brainstorming: Would it be better to have each 100 msec during polling of the coordinates to draw a graph and compare it against the models that I have? The idea that I got was image similarity matching. Each 100 msec will draw a dynamic graph and compare on models that I have allocated against each polling. The second approach that I was brainstorming: Have velocities of coordinate changes into the time-series graph and compare the slice of the graph for the given time series (T-current). Here, the graph will be sliced and compared against the time series. Expertise seeking summary I would like to identify, with the dynamic mouse movement pattern, that this pattern was already in the ML model or not in an online mode. This will be handled prefetching the information from the already trained model. It would be great if you could point me in the following suggestions: What kind of models or ways to handle this example would be best suited? Example of links that support this. Real-time modeling interpretation/classification using the already built modeling References - These are the tutorials that looked so far https://www.vis.wiwi.uni-due.de/uploads/tx_itochairt3/publications/cgf-dynamicgraphs.pdf https://ieeexplore.ieee.org/abstract/document/4734024 https://www.sciencedirect.com/science/article/pii/S2468502X20300140 https://ieeexplore.ieee.org/document/5190876 https://scholarworks.umass.edu/cgi/viewcontent.cgi?article=1906&context=dissertations_2 https://stackoverflow.com/questions/5730631/image-similarity-comparison https://towardsdatascience.com/prediction-and-analysis-of-time-series-data-using-tensorflow-2136ef633018 https://towardsdatascience.com/how-not-to-use-machine-learning-for-time-series-forecasting-avoiding-the-pitfalls-19f9d7adf424 https://medium.com/@akarshzingade/image-similarity-using-deep-ranking-c1bd83855978 https://medium.com/dataseries/easily-deploy-deep-learning-models-in-production-13db48071578
