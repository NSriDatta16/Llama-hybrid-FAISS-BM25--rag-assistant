[site]: stackoverflow
[post_id]: 3074910
[parent_id]: 3074861
[tags]: 
Not sure what your looking for but if your looking for a suitable binary sort algorithm then you want to be aware of your requirements. Each algorithm has its own strengths and weakness. For example, are you looking for an algorithm that give fastest average performance (e.g. heap search) or fasted worst case (slowest operation) performance (e.g. balanced binary tree). Some are slow if you also need to iterate from one item to the next. If your doing many random operations you are probably more interested in average performance but if you have a need to ensure that any operation is faster than X milliseconds then you may want a different algorithm. Some can be slow if you always adding items at the end of the collection etc. So have a google for keywords like: Red black tree heap search balanced trees, e.g. http://www.codeproject.com/KB/recipes/redblackcs.aspx?msg=931557 It all comes down to what you need.
