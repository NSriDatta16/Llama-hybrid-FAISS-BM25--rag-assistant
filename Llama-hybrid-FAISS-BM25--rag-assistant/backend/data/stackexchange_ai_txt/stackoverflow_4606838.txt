[site]: stackoverflow
[post_id]: 4606838
[parent_id]: 2389320
[tags]: 
Check out Martin's Clean Code for some inspiration. The examples are in Java but the ideas should translate to JavaScript as well. In order to refactor properly, you'll need to test your code well as having proper tests in place is a prerequisite for it. Try finding testing tools that give you code coverage as this will be extremely valuable. In case your code hasn't been tested yet you can think testing as a method of learning. You write tests to prove or disprove your assumptions about it. Once you are done and covered it adequately you should be able to refactor the code using various patterns provided. As Ira mentioned having a tool to detect clones may be valuable. That's definitely one way to look at it. I think that often having proper perspective is half the solution. If you can state your design in clear terms, you'll end up with better results. Try not to over-engineer it too much by applying every possible pattern you find. :)
