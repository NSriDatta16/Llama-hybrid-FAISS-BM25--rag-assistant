[site]: stackoverflow
[post_id]: 1697964
[parent_id]: 1697931
[tags]: 
The easiest way to do a screen aligned quad is by using Point Sprites with texture rewrite. I never did that with DirectX but in OpenGL, enabling point sprites is a matter of 2 API calls that look like this. glEnable(GL_POINT_SPRITE); glTexEnvi(GL_POINT_SPRITE, GL_COORD_REPLACE, true); With this mode enabled, You draw a single vertex and instead of a point, a screen aligned quad is renderd. The coordinate replace thing means that the rendered quad is processed with texture coordinates. This means that you can place any texture on the quad. Usually you'll want something with an alpha channel to blend into the background seamlessly. There should be an equivalently easy way to do it in D3D. In addition, if you write a shader, it may allow you do do some additional stuff like discard some of the pixels of the texture. This tutorial might help Also, google. -- Edit To transform a quad to any other shape, use the alpha channel of the texture. If the alpha is 0, the pixel is not visible. You can't add an alpha channel to a JPEG but you can do it to a PNG. Here's an example: sun with alpha channel http://www.shiny.co.il/shooshx/sun.png If you'll open this image in photoshop you'll see that the background is invisible. Using alpha blending might cause some problems if you have other things going on in the scene so if that happens, you can write a simple fragment shader which discards the pixels with alpha==0.
