[site]: stackoverflow
[post_id]: 2792454
[parent_id]: 2792362
[tags]: 
Oh boy ! First what You are doing right or at least it seems so. You are drawing attention and get points for upvotes, despite the fact, that the code looks like typed in directly to the editor box on the Stackoverflow and never checked with any compiler. Good job :) Now what's wrong. The list is long but some tips void main() { PERSON person[100]; int *total; funcB(people, &total); } void funcB(PEOPLE people[], int *total); It would be nice if You showed us the definitions of (probably) structs PEOPLE and PERSON. In the code we can see, there is no definition of people - the variable you pass to funcB. You define a pointer to int - total and don't initialize it. Then You pass an address of that pointer to funcB which takes int* not int** as a second argument. Those types are not compatible. void funcB(PEOPLE people[], int *total) { int i; for (i = 0; i You use a pointer in the loop condition instead of the value pointed too. There is no value, because You didn't initialize the pointer in main, but here You have incompatible types in the condition. You pass an address of the pointer to funcA instead of the pointer, like in main. void funcA(PEOPLE people[], int *total) { FILE *fp; char line[100]; fp = fopen("example.txt", "r"); if (fp == NULL) { exit(1); } else { fgets(line, 100, fp); //get a number from the txt total = atoi(linha); //convert to int } } You use an undefined symbol 'linha' - I guess it's a misspelling of 'line'. Then You assign an int to a pointer instead of an int pointed to by that pointer.
