[site]: stackoverflow
[post_id]: 1761447
[parent_id]: 1760596
[tags]: 
There are two uses for RAISE_APPLICATION_ERROR. The first is to replace generic Oracle exception messages with our own, more meaningful messages. The second is to create exception conditions of our own, when Oracle would not throw them. The following procedure illustrates both usages. It enforces a business rule that new employees cannot be hired in the future. It also overrides two Oracle exceptions. One is DUP_VAL_ON_INDEX, which is thrown by a unique key on EMP(ENAME) . The other is a a user-defined exception thrown when the foreign key between EMP(MGR) and EMP(EMPNO) is violated (because a manager must be an existing employee). create or replace procedure new_emp ( p_name in emp.ename%type , p_sal in emp.sal%type , p_job in emp.job%type , p_dept in emp.deptno%type , p_mgr in emp.mgr%type , p_hired in emp.hiredate%type := sysdate ) is invalid_manager exception; PRAGMA EXCEPTION_INIT(invalid_manager, -2291); dummy varchar2(1); begin -- check hiredate is valid if trunc(p_hired) > trunc(sysdate) then raise_application_error (-20000 , 'NEW_EMP::hiredate cannot be in the future'); end if; insert into emp ( ename , sal , job , deptno , mgr , hiredate ) values ( p_name , p_sal , p_job , p_dept , p_mgr , trunc(p_hired) ); exception when dup_val_on_index then raise_application_error (-20001 , 'NEW_EMP::employee called '||p_name||' already exists' , true); when invalid_manager then raise_application_error (-20002 , 'NEW_EMP::'||p_mgr ||' is not a valid manager'); end; / How it looks: SQL> exec new_emp ('DUGGAN', 2500, 'SALES', 10, 7782, sysdate+1) BEGIN new_emp ('DUGGAN', 2500, 'SALES', 10, 7782, sysdate+1); END; * ERROR at line 1: ORA-20000: NEW_EMP::hiredate cannot be in the future ORA-06512: at "APC.NEW_EMP", line 16 ORA-06512: at line 1 SQL> SQL> exec new_emp ('DUGGAN', 2500, 'SALES', 10, 8888, sysdate) BEGIN new_emp ('DUGGAN', 2500, 'SALES', 10, 8888, sysdate); END; * ERROR at line 1: ORA-20002: NEW_EMP::8888 is not a valid manager ORA-06512: at "APC.NEW_EMP", line 42 ORA-06512: at line 1 SQL> SQL> exec new_emp ('DUGGAN', 2500, 'SALES', 10, 7782, sysdate) PL/SQL procedure successfully completed. SQL> SQL> exec new_emp ('DUGGAN', 2500, 'SALES', 10, 7782, sysdate) BEGIN new_emp ('DUGGAN', 2500, 'SALES', 10, 7782, sysdate); END; * ERROR at line 1: ORA-20001: NEW_EMP::employee called DUGGAN already exists ORA-06512: at "APC.NEW_EMP", line 37 ORA-00001: unique constraint (APC.EMP_UK) violated ORA-06512: at line 1 Note the different output from the two calls to RAISE_APPLICATION_ERROR in the EXCEPTIONS block. Setting the optional third argument to TRUE means RAISE_APPLICATION_ERROR includes the triggering exception in the stack, which can be useful for diagnosis. There is more useful information in the PL/SQL User's Guide .
