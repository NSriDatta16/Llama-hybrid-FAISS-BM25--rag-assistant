[site]: stackoverflow
[post_id]: 1708377
[parent_id]: 
[tags]: 
how does one make a subview firstResponder

i am trying to get a subview to become firstResponder. my understanding is that this is done in its viewDidAppear method, like so: - (void)viewDidAppear { [self becomeFirstResponder]; } while overriding canBecomeFirstResponder to return YES: - (BOOL)canBecomeFirstResponder { return YES; } however, when i insert the subview in its parent view's viewDidLoad method: - (void)viewDidLoad { subViewController = [[SubViewController alloc] init]; [self.view insertSubview: subViewController.view atIndex: 0]; [subViewController viewDidAppear: NO]; [super viewDidLoad]; } (i call viewDidAppear manually, because it does not get triggered automatically), the subview does not become firstResponder. why does the subview not become firstResponder? and how can i make it firstResponder? thanks, mbotta btw, this is a rewrite of my original question: i am trying to build an iphone app where a rootviewcontroller object manages two subviews, one of which should react to a user shaking his iphone. after some digging, i concluded the subview must be made firstResponder in its view controller's viewDidAppear method. moreover, the canBecomeFirstResponder method should be modified to return YES. so here's what happens: i instantiate the rootviewcontroller in the app delegate. in its viewDidLoad method, i tell it to addSubView firstViewController. all of this works just beautifully. however, firstViewController does not react to any shaking. i sprinkled some NSLogs around and found that while we DO tell firstViewController in canBecomeFirstResponder to return YES, and while we DO tell it to [self becomeFirstResponder] in viewDidAppear, in actual fact, it is not the firstResponder. so, my questions are: 1) does a subview actually need to be firstResponder in order to react to shaking? a) if not, how does one make a subview react without being firstResponder? 2) how does one make a subview firstResponder? what makes this interesting is that if i perform the same sequence (canBecomeFirstResponder, [self firstResponder], motionBegan:) in a different project with only one view controller, it all works flawlessly. clearly, i must be hitting a design flaw of my own making. thanks, mbotta
