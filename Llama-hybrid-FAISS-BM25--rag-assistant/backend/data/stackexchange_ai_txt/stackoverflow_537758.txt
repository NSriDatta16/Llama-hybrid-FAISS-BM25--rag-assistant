[site]: stackoverflow
[post_id]: 537758
[parent_id]: 537580
[tags]: 
You're hoping for a VB answer, but this is non trivial. Most of the following comes from http://www.experts-exchange.com/Programming/Languages/Visual_Basic/Q_20571958.html IBindStatusCallback interface is not directly accessible from VB. It must be introduced into a compatible type library. You can find the Type library olelib.tlb under: http://www.domaindlx.com/e_morcillo/scripts/type/default.asp The zip file name to download is: tl_ole.zip You will also find examples on how to use it included. Not sure thou whether you will find a specific example on IBindStatusCallback on not, but it worth giving it a try. You can write your own function to get the data into a string, which will give you full control over everything: Option Explicit Public Const INTERNET_OPEN_TYPE_PRECONFIG = 0 Public Const INTERNET_DEFAULT_HTTP_PORT = 80 Public Const INTERNET_SERVICE_HTTP = 3 Public Const INTERNET_FLAG_RELOAD = &H80000000 Public Const HTTP_QUERY_STATUS_CODE = 19 Public Const HTTP_ADDREQ_FLAG_ADD = &H20000000 Public Declare Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" (ByVal sAgent As String, ByVal lAccessType As Long, ByVal sProxyName As String, ByVal sProxyBypass As String, ByVal lFlags As Long) As Long Public Declare Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" (ByVal hInternetSession As Long, ByVal sServerName As String, ByVal nServerPort As Integer, ByVal sUsername As String, ByVal sPassword As String, ByVal lService As Long, ByVal lFlags As Long, ByVal lContext As Long) As Long Public Declare Function HttpOpenRequest Lib "wininet.dll" Alias "HttpOpenRequestA" (ByVal hHttpSession As Long, ByVal sVerb As String, ByVal sObjectName As String, ByVal sVersion As String, ByVal sReferer As String, ByVal something As Long, ByVal lFlags As Long, ByVal lContext As Long) As Long Public Declare Function HttpSendRequest Lib "wininet.dll" Alias "HttpSendRequestA" (ByVal hHttpRequest As Long, ByVal sHeaders As String, ByVal lHeadersLength As Long, ByVal sOptional As String, ByVal lOptionalLength As Long) As Long Public Declare Function HttpQueryInfo Lib "wininet.dll" Alias "HttpQueryInfoA" (ByVal hHttpRequest As Long, ByVal lInfoLevel As Long, ByRef sBuffer As Any, ByRef lBufferLength As Long, ByRef lIndex As Long) As Long Public Declare Function InternetCloseHandle Lib "wininet.dll" (ByVal hInet As Long) As Integer Public Declare Function HttpAddRequestHeaders Lib "wininet.dll" Alias "HttpAddRequestHeadersA" (ByVal hHttpRequest As Long, ByVal sHeaders As String, ByVal lHeadersLength As Long, ByVal lModifiers As Long) As Integer Public Declare Function InternetReadFile Lib "wininet.dll" (ByVal hFile As Long, ByVal sBuffer As String, ByVal lNumberOfBytesToRead As Long, lNumberOfBytesRead As Long) As Integer Public Declare Function InternetOpenUrl Lib "wininet.dll" Alias "InternetOpenUrlA" (ByVal hInternet&, ByVal lpszUrl As String, ByVal lpszHeaders As String, ByVal dwHeadersLength&, ByVal dwFlags&, ByVal dwContext&) As Long Public Declare Function InternetQueryDataAvailable Lib "wininet.dll" (ByVal hFile As Long, lpdwNumberOfBytesAvailable As Long, ByVal dwFlags As Long, ByVal dwContext As Long) As Long Public Function GetHTML(strURL As String) As String Const BufferSize = 16384 Dim hSession&, hURL&, lRet&, lBytesAvail& Dim Buffer As String * BufferSize Dim BufferLen&, sResult$ hSession = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, vbNullString, 0) hURL = InternetOpenUrl(hSession, strURL, vbNullString, ByVal 0&, INTERNET_FLAG_RELOAD, ByVal 0&) sResult = "" Do InternetReadFile hURL, Buffer, Len(Buffer), BufferLen If BufferLen > 0 Then sResult = sResult & Left(Buffer, BufferLen) Loop Until BufferLen = 0 GetHTML = sResult InternetCloseHandle hURL InternetCloseHandle hSession End Function You will find additional resources for doing the callback method here (scroll down to the bottom): http://www.experts-exchange.com/Programming/Languages/.NET/Visual_Basic.NET/Q_21763861.html http://www.experts-exchange.com/Programming/Languages/.NET/Visual_Basic.NET/Q_21746456.html But I honestly think you'll be better off making your own download function if you want more control over it. TCP/IP stuff in VB is actually very easy. -Adam
