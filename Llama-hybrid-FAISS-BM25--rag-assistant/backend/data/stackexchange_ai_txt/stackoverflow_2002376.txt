[site]: stackoverflow
[post_id]: 2002376
[parent_id]: 2002057
[tags]: 
You could build a tree out of List2; the first level of the tree is the first of (X1..Xn) that appears in set X. The second level is the values for the second item, plus a leaf node containing the set of lists which contain only X1. The next level contains the next possible value, and so on. Root --+--X1--+--EOF--> List of pointers to list2 lines containing only "X1" | | | +--X2---+--EOF--> List of pointers to list2 lines containing only "X1,X2" | | | | | +--X3--+--etc-- | | | +--X3---+--EOF--> "X1,X3" | +--X2--+--EOF--> "X2" | | | +--X3---+--EOF--> "X2,X3" | | | ... This is expensive in memory consumption (N^2 log K, I think? where N=values for X, K=lines in List2) but results in fast retrieval times. If the number of possible Xs is large then this approach will break down... Obviously you could build this index for all 3 parts of the tuple, and then AND together the results from searching each tree.
