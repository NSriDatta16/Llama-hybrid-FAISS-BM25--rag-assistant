[site]: stackoverflow
[post_id]: 3252103
[parent_id]: 3210411
[tags]: 
I would probably leverage the hierarchical datatemplate in wpf see this article. And basically it seems to me that you just need a TreeView control with its ItemSource or DataContext to ProjectViewModel and then create some other datatemplates for your other viewmodels. See your ViewModel just needs to PROVIDE all the information for the view to display, it doesn't nor shouldn't care exactly how it gets displayed, or what technology displays it (e.g. WPF) . That's where MVVM is supposed to shine, it separates ui logic from the actual implementation of the ui. DataTemplates are great because you can reuse sections of xaml. If you have a DataSetViewModel you can create a DataTemplate that will display that type a certain way without any further configuration on your side. Everytime you want to create a new viewmodel you need to ask yourself, "Is there a viewModel that has all these properties already? If you answer yes, I wouldn't create a new ViewModel, less is more sometimes. Hierarchical templates are good for usercontrols that have nested viewmodels
