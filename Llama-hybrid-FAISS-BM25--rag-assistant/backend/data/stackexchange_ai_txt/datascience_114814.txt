[site]: datascience
[post_id]: 114814
[parent_id]: 107934
[tags]: 
Simphile NLP package creator here. Choosing the text similarity method that works best for your application can be difficult. Ideally you have a large sample set with many known positives (i.e. text that are sufficiently related to the reference). You would choose the method that orders the sample set such that the positives are concentrated at the head; this could be measured with the area under the precision-recall curve. The Simphile package makes it easy to try several different methods: Install: pip install simphile Choose your favorite method. This example shows three: from simphile import jaccard_similarity, euclidian_similarity, compression_similarity text_a = "I love dogs" text_b = "I love cats" print(f"Jaccard Similarity: {jaccard_similarity(text_a, text_b)}") print(f"Euclidian Similarity: {euclidian_similarity(text_a, text_b)}") print(f"Compression Similarity: {compression_similarity(text_a, text_b)}") Compression Similairty – leverages the pattern recognition of compression algorithms Euclidian Similarity – Treats text like points in multi-dimensional space and calculates their closeness Jaccard Similairy – Texts are more similar the more their words overlap More docs and examples at the repo
