[site]: stackoverflow
[post_id]: 3878265
[parent_id]: 3872810
[tags]: 
jQuery, among other things (like createDocumentFragment ), heavily relies on innerHTML for element creation/manipulation, for it is the fastest way to dynamically create/modify the page content. Although most browsers support innerHTML , it’s not a part of the W3C standard, and even though it works rather consistently across browsers, it does carry some quirks with it. For instance, it allows for invalid HTML to be inserted, and hence introduce hard to catch bugs; when removing elements it can introduce memory leaks from events and data associated with the DOM elements being deleted; when creating elements with innerHTML , especially on page load, the event handlers are not yet bound to the element, and that's what I think is happening here, since link is a special tag, in terms of events, because the page needs to start downloading the stylesheet once the link tag has been added to the DOM, and it needs to update itself once the loading finishes, and since there are no event handlers to tell it that, the page does nothing. So, even though innerHTML works perfectly in most browsers, it’s not a part of the W3C standard, and it's better to add these special tags with standard DOM methods ( createElement , appendChild etc.) I'm not an IE user, and I cannot list all the elements that have issues with being created using innerHTML , but I know that I had issues in IE8 with google's excanvas.js not being able to attach itself to dynamically created canvas elements, and that I needed to re-create all canvas elements that were created with jQuery (and therefore innerHTML ) and re-create them with standard DOM createElement method. It is funny, since Internet Explorer was the first browser to have innerHTML (as Microsoft invented this property), and it is also the browser which doesn't implement it properly.
