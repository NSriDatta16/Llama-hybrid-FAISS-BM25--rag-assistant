[site]: stackoverflow
[post_id]: 1098374
[parent_id]: 1072761
[tags]: 
UPDATED: you just have to put the lib in some place reachable by your apps (in a place where you can reach it via http or ftp or https or something else) and include it. If you have to update it often you can package your library in a single phar file and you can then provide your client a function to pull the library from some remote path and update a parameter in their local configuration accordingly, like: function updateLocalLibary(){ //read the remote library in a variable $file= file_get_content($remoteLibraryRepository.$libraryPharFile); //give it a unique name $newLibraryName=$libraryPharFile."_".date('Ymdhsi'); //store the library it on a local file file_put_content($localLibraryPath.$newLibraryName,$file); //update the configuration, letting your app point to the new library updateLatestLibraryPathInConfig($newLibraryName); //possibly delete the old lib } In your include path then you don't have necesasrily to hardcode a path, you can include a parameter based on your config, like: include( getLatestLibraryPathFromConfig() ) (you are responsible to secure the retrieval in order to let only your clients see the library) Your conf can be in a db, so that when you call updateLibraryPathInConfig() you can perform an atomical operation and you are sure not to have client read dirty data. The clients can then update their library as needed. They may even schedule regular updates.
