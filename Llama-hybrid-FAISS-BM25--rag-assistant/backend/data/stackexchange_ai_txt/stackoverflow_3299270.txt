[site]: stackoverflow
[post_id]: 3299270
[parent_id]: 3299099
[tags]: 
I think it goes something like this: WORKING STORAGE SECTION. 01 NORMAL-STRING-A PIC X(80) 01 NORMAL-STRING-B PIC X(80) 01 NORMAL-STRING-C PIC X(80) 01 NORMAL-STRING-D PIC X(80) 01 NORMAL-STRING-E PIC X(80) 01 SUB-STRING. 05 FIVE PIC X(5) 05 REST PIC X(75) 01 TWENTY-FIVE-A. 05 FIVE-A PIC X(5). 05 FIVE-B PIC X(5). 05 FIVE-C PIC X(5). 05 FIVE-D PIC X(5). 05 FIVE-E PIC X(5). 01 TWENTY-FIVE-B PIC X(25). PROCEDURE DIVISION. MOVE NORMAL-STRING-A TO SUB-STRING. MOVE FIVE TO FIVE-A. MOVE NORMAL-STRING-B TO SUB-STRING. MOVE FIVE TO FIVE-B. MOVE NORMAL-STRING-C TO SUB-STRING. MOVE FIVE TO FIVE-C. MOVE NORMAL-STRING-D TO SUB-STRING. MOVE FIVE TO FIVE-D. MOVE NORMAL-STRING-E TO SUB-STRING. MOVE FIVE TO FIVE-E. MOVE TWENTY-FIVE-A TO TWENTY-FIVE-B. Then, your string is in TWENTY-FIVE-B . You know, I can't imagine why people thought COBOL was verbose :-) On a more serious note, I think you can do something along these lines to achieve the same result (you may have to fiddle with the start and length parameters, it's been a while since I did any serious COBOL): WORKING STORAGE SECTION. 01 STRING-A PIC X(80) 01 STRING-B PIC X(80) 01 STRING-C PIC X(80) 01 STRING-D PIC X(80) 01 STRING-E PIC X(80) 01 TWENTY-FIVE PIC X(25). PROCEDURE DIVISION. MOVE STRING-A(1:5) TO TWENTY-FIVE( 1:5). MOVE STRING-B(1:5) TO TWENTY-FIVE( 6:5). MOVE STRING-C(1:5) TO TWENTY-FIVE(11:5). MOVE STRING-D(1:5) TO TWENTY-FIVE(16:5). MOVE STRING-E(1:5) TO TWENTY-FIVE(21:5).
