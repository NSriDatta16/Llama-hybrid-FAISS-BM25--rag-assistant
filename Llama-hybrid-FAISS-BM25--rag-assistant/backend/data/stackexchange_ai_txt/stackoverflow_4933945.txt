[site]: stackoverflow
[post_id]: 4933945
[parent_id]: 4931735
[tags]: 
I'm using sometimes Access databases in .net too. Ok, MS-Access isn't the best database for this kind of application, I know. But the easy-doing complex queryes and the functional and well-knowed reports makes Access a good cost-benefit solution. I saw the link that you've indicated. This way was my first technique, but then I realized there was another easier and faster. I suggest you to do the linkage for Access database in a different way. Create a dataSet, if you already didn't it. Create a connection to the MS-Access database using database explorer. Drag and drop your desired tables on created DataSet (.net will create the designer code for you in backStage) On code, create an tableAdapter object and a table object: Supose that your dataSet name is DS1 and a table name is table01. language: VB.NET check intellisense autocomplete for your dataobjects creates a tableadapter object and table object (designed when you drop the database explorer objects in dataset) dim table01_TA as new ds1Tableadapters.table01_tableAdapter dim table01 as new ds1.table01dataTable loads the database data into the on-memory table table01 table01 = table01_TA.getData do your opperations using table01 (add, update, insert, delete, queries) for automatic generation of scripts for update, insert and delete, make sure your table has primaryKeys and correct relationships. finally, update the table adapter. Unless you do it, the data will not be updated in the database. table01_Ta.update(table01) I suggest you use LINQ to query your data, and the datatable methods to adding and editing data. These methods are created automatically when you drop the databaseExplorer tables on dataSet and save it. Its worth to compact and repair Access database frequently. Contat-me if you have troubles.
