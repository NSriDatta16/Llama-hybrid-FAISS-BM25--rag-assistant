[site]: crossvalidated
[post_id]: 443807
[parent_id]: 
[tags]: 
How to improve the performance of Tree LSTM?

Tree LSTM seems like a prominent neural network structure to capture the feature of a syntax tree. However, when I applied Tree LSTM on an abstract syntax tree(AST) analyzing task (such as rating the vulnerability of a code fragment), the Tree LSTM seems to keep at a poor result (70% training accuracy). The implementation of Tree LSTM references an open-source implementation( https://github.com/aykutfirat/pyTorchTree ), with a minor modification because I do not have vulnerability labels for specific AST nodes, but only for code fragments. How should I improve the training accuracy of Tree LSTM? The only method I have known is to add the number of neurons of the Tree LSTM module. Are there any other methods to improve the training accuracy, such as deeper Tree LSTM or incorporating other NN modules into Tree LSTM?
