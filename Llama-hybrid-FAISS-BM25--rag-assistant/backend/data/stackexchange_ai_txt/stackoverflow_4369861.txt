[site]: stackoverflow
[post_id]: 4369861
[parent_id]: 
[tags]: 
Xml file not copying to test output directory

Visual Studio 2010, x64 machine, using the built-in web server to host a WCF service with a set of unit tests using the built-in test framework. I have an XML file that my tests need to load to run. I've included this file in the test project, and have the file set to 'content' and 'always copy to output directory'. This file copies to the bin\debug directory fine. When I execute the tests, however, the xml file is not there. Instead of looking in the project's bin\debug folder, it looks for it in the test's working directory, C:\Projects\SAP Reapprovals\TestResults\name_machine 2010-12-06 13_45_43\Out". The file hasn't been copied there. Is there a way to force this file to copy, or do I need to fully qualify the reference from within the test? TIA! James Update I set the DeploymentItem attribute, but the file still doesn't copy. But that sure looks like what I want... any ideas why that isn't working? My test code: [TestMethod] [DeploymentItem("SAP - GS3 format.xml")] public void TestProcessSapRoles() { // I get a 'file not found' error here, and when // I check the output directory, it isn't there XElement rolesRoot = XElement.Load("SAP - GS3 format.xml"); } ANSWERS: Thanks go out to CPedros, with his help I've zoomed in on this a bit. I ran SysInternals' Process Monitor, to see where it was looking for my xml file. Here's what I found: When I ran the tests using ctrl+r,ctrl+t (debug tests in current context), visual studio ignored the DeploymentItem attribute completely and did not even try to copy the file anywhere. In this case I got a "File Not Found" exception when I tried to open it for reading. Visual studio created a temporary working directory for the tests, but there was only one file in it, AgentRestart.dat. When I ran the tests using the 'Run Unit Tests' button in my toolbar (not sure what test option that is), Visual Studio did not copy the file over, but referenced it directly from the project directory. The test passed, and no temporary working directory was created. When I ran the test from the menu option "run -> tests in current context" (run, not debug), a temporary working directory was created, and the xml file and all executables were copied to it. The test passed. When I edited Local.testsettings (under a Solution Items folder under my tests folder), I chose 'Deployment' from the left menu, and added the xml file. It was added as [solution directory]\[project directory]\file.xml. I removed the DeploymentItem attribute. Now I was able to debug the tests; the xml file and all executables were copied to the temporary directory created for the test. TLDR: Visual Studio is ignoring the DeploymentItem attribute for certain ways of running the test. The solution is to edit Local.testsettings , the Deployment menu, and add the file by hand. Thanks for the help! I'm giving CPedros credit for his answer, as it was the most helpful in resolving this.
