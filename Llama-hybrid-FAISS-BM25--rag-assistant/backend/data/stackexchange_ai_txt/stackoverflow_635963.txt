[site]: stackoverflow
[post_id]: 635963
[parent_id]: 635547
[tags]: 
I think the problem here is because jQuery doesn't set the Content-Type header in the HTTP request for HTTP GET's when using $.ajax() . It only gets sent if the request type is 'POST'. This seems to be the case for both dataType: "jsonp" and dataType: "json" . I tried your example and watched the request/response exchange in Fiddler and sure enough I don't see Content-Type: application/xml; charset=UTF-8 being sent in the headers for HTTP GET requests. The header does get sent if using HTTP POST. I'm guessing the presence of this header is a cue for the ASP.NET web service plumbing to decide whether to return either a JSON or XML formatted response. It seems you're not the only one with this problem, see the following article on the on Elegant Code website: Calling Remote ASP.NET Web Services from JQuery The solution appears to be one of the following: Use a HttpModule to inject the Content-Type: application/xml; charset=UTF-8 header into the request stream as described in the article above. Use a HttpHandler for the endpoint as you explained you were doing prior to using an ASP.NET web service. Try Rick Strahl's page based approach in the following article (which is in effect a HttpHandler anyway): JSONP for cross-site Callbacks .
