[site]: stackoverflow
[post_id]: 835696
[parent_id]: 
[tags]: 
What's a good practice for dividing up presenters in a MVP interface pattern that have grown too large?

One problem that I have frequently run into lately is the problem of my presenter classes growing too large. Usually, I can chop up a regular large class without skipping a beat. But the presenters sometimes are a little more difficult to pare down, without making the code harder to follow. Especially when the page starts filling up with CRUD oriented controls. Sometimes I divide out controls, but if they are affected by other controls the coordination logic is complex in it's own right. Sometimes I divide out list or grid data retrieval, but sometimes that can have similar pitfalls. Are there any techniques, or rules of thumb, or common areas that you refactor out of your presenters?
