[site]: stackoverflow
[post_id]: 3758256
[parent_id]: 3581960
[tags]: 
Your current solution doesn't work because mod_rewrite can only be used to rewrite the request to a single destination, but you seem to want the request to take a detour to your PHP script, then continue onward to the image. It might be possible to cause a subrequest that would cause the PHP script to get triggered, but I don't think it would be possible to control whether or not the original request continued on to the image in that scenario. The best course of action here is to have your PHP file print out the actual image data (not an image tag referencing the image) after it does whatever checking/logging you intend it to do. You can do this with readfile() , provided that you send the right headers. After making sure the file is one of the images you want to serve up (and not some arbitrary file on your system...), you'll at least need to determine the appropriate content type , then print out the data. It's also a good idea to take caching (see this answer , as well as this one ) into consideration. Combining some of the techniques mentioned, a simple pseudo-example of the referrer script would be as follows. Note that you should research the best way to implement the techniques described, and you need to pay particular attention to security since you're opening files and printing their contents. $filename = /* sanitized file name */; log_img(/* log some data about the request */); if (file_exists($filename) && allowedToView($filename)) { // Assume we're not on PHP 5.3... $types = array( 'gif' => 'image/gif', 'png' => 'image/png', 'jpg' => 'image/jpg', ); $parts = pathinfo($filename); $ext = strtolower($parts['extension']); if (array_key_exists($ext, $types)) { $mime = $types[$ext]; $size = filesize($filename); $expires = 60 * 60 * 24 * 30; if (!empty($_SERVER['IF-MODIFIED-SINCE'])) { $modified = filemtime($filename); $cached = strtotime($_SERVER['IF-MODIFIED-SINCE']); if ($modified And as far as the .htaccess file goes, it would just be something like this (the stuff that you added to the query string is available in $_SERVER anyway, so I see no point in manually passing it to the script): RewriteEngine on RewriteRule \.(jpg|png|gif)$ /include/referrer.php [NC]
