[site]: stackoverflow
[post_id]: 3651472
[parent_id]: 3651390
[tags]: 
What are the arguments for and against to support std::wstring only? The argument in favor of using wide characters is that it can do everything narrow characters can and more. The argument against it that I know are: wide characters need more space (which is hardly relevant, the Chinese do not, in principle, have more headaches over memory than Americans have) using wide characters gives headaches to some westerners who are used for all their characters to fit into 7bit (and are unwilling to learn to pay a bit of attention to not to intermingle uses of the character type for actual characters vs. other uses) As for being flexible: I have maintained a library (several kLoC) that could deal with both narrow and wide characters. Most of it was through the character type being a template parameter, I don't remember any macros (other than UNICODE , that is). Not all of it was flexible, though, there was some code in there which ultimately required either char or wchar_t string. (No point in making internal key strings wide using wide characters.) Users could decide whether they wanted only narrow character support (in which case "string" was fine) or only wide character support (which required them to use L"string" ) or whether they wanted to support both, too (which required something like T("string") ).
