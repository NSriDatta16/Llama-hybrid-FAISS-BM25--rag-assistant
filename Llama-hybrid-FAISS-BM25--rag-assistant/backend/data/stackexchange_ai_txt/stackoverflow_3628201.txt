[site]: stackoverflow
[post_id]: 3628201
[parent_id]: 3628099
[tags]: 
I would say : yes use a queue in a messaging infrastructure. Personally I would use Camel for this because I am completely smitten by Camel and would use it if I would reprogram my toaster to toast the slices golden brown at breakfast. Since you are going to mail, it will be message based anyway, so using a message based system will already reduce the impedance mismatch. Now things as transactions, retries and parking the message on a dead letter queue comes as standard with these things. This is nice, because you can then script your way out of trouble when a email server disaster hits, by resubmitting the messages from the dead letter queue. Integrating an ActiveMQ or a Camel is just adding a couple of dependencies and 5-10 lines in your spring configuration. Once it is in there it is beautiful to organize background processing, notify remote systems, automate email responses, notify sysadmins of impending doom, ... You send a message, continue what you're doing, respond to the customer, while in the background the wheels are turning. Ok, sorry : I got carried away and got way too lyrical.
