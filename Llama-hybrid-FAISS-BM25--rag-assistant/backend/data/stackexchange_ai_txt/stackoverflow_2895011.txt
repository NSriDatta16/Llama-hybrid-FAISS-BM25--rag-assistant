[site]: stackoverflow
[post_id]: 2895011
[parent_id]: 2894896
[tags]: 
Don't know if this will work, never tried it, but... If both classes can implement the same interface or share a base class, could you maybe do: var q = (booleanVariable) ? from p in myTable1 select (ISomeInterface)p : from p in myTable2 select (ISomeInterface)p; If you use this often, you can put this into its own method - I believe it will return IQueryable . Then connect to the rest of the LINQ query using the LINQ methods instead of the LINQ C# syntax (i.e. OrderBy() instead of orderby). I just don't know if LINQ-to-SQL will be smart enough to translate this into the correct SQL query. But I agree with Jon's comment - this is probably bad design, and should be revisited. If you can't reorganize the tables themselves, and if you only need read access, how about a view that unions the two tables together, then tie that view into your LINQ-to-SQL structure.
