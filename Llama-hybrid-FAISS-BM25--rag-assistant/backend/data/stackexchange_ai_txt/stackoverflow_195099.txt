[site]: stackoverflow
[post_id]: 195099
[parent_id]: 194676
[tags]: 
Hand optimizing your ASM code compared to what C++ can do for you is rarely cost effective. If you've done anything you can to the algorithm from a traditional algorithmic view, and you've also eliminated excesses, then you may either be SOL, or you can consider optimizing your program from a hardware point of view. For example, any time you follow a pointer around the heap you are paying a huge cost due to cache misses, possibly paging, etc., which all affect branching predictions. Most programmers (even C gurus) tend to look at the CPU from the functional standpoint rather than what happens behind the scenes. Sometimes reorganizing memory, for example by "flattening" or manually allocating memory to fit on the same page can obtain ENORMOUS speedups. I managed to get 2X speedups on graph traversals just by flattening my structures. These are not things that your compiler will do for you since they are based on your high-level understanding of the program.
