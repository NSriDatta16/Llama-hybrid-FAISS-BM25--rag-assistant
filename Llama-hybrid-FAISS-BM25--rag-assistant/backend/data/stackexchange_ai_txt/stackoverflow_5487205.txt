[site]: stackoverflow
[post_id]: 5487205
[parent_id]: 5482662
[tags]: 
If you were using this purely as a storage type of class, you could use Boost::tuple , which automatically generates such a ctor, so your class would look something like: tuple MyFunctor; The problem with this is that it doesn't provide any way for you to include your operator() . Unfortunately, since ctors aren't inherited, you could not accomplish anything by trying to create a functor_base using boost::tuple , then deriving a class that added your operator() . The obvious alternative would be to rewrite tuple allow you to specify the code for various member functions. I'm not sure how to do that right off though -- it would take some careful thought (at best).
