[site]: stackoverflow
[post_id]: 3409256
[parent_id]: 3407649
[tags]: 
By default, the bulk of your app should be cached by the browser until a new version of it is generated by your build process. It might help to understand the GWT bootstrapping model to understand how this works. The first script your client requests, your-app-name.nocache.js , is not cached, and it does nothing except check the browser's user agent and capabilities, and make a second request for the relevant app JS. At this point, the script it requests should be cached by the browser if it's been requested before. This is a {indistinguisable-numbers-and-letters}.cache.html file. When you redeploy your app, the nocache.js file will be executed and ask for a different cache.html file from the server, which will not already be present in the cache, but which will get cached by the browser once it is downloaded. Are you doing anything unusual with deferred binding, or with caching headers on your server? This might potentially be causing your nocache.js file to get cached after all, which would make it request old cache.html s from the browser cache.
