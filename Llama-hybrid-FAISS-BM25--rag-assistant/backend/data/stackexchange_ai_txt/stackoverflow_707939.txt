[site]: stackoverflow
[post_id]: 707939
[parent_id]: 707741
[tags]: 
Hibernate allows you to create types and override the fetching/saving metods of the types. Create a type, e.g., InsertableOnly , which on the fetch sets throws away the database value. Assuming your value is an Integer because you represent prices in cents to avoid rounding issues: class InsertOnlyInteger extends org.hibernate.type.IntegerType { public Object get(ResultSet rs, String name) throws SQLException { return null; } } Then make the Hibernate type of the attribute InsertOnlyInteger (with xml or annotation, as it suits you). This is a very similar answer to the answer given by sewardrobert, but it allows you to have a "normal" setter in the class, which collaborators /other/ than Hibernate (like your Java-code summing routine) can then use normally, it is re-usable, and with a decent name (like InsertableOnly) it's more-or-less self-documenting.
