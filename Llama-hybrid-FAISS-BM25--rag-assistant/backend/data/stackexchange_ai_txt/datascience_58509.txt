[site]: datascience
[post_id]: 58509
[parent_id]: 
[tags]: 
Feature selection, is it possible to combine wrapper and embedded methods?

I'm using neural network to predict PM10 concentration (a regression problem). Since the wrapper method is dependent on the model, so passing the neural network model that's optimized for all the features in the dataset won't work correctly (since every time the wrapper reduces the features in the dataset, the hidden layer size of the neural network must be re-tuned). So my question is, can I use the embedded method (Lasso) as an estimator in the wrapper method? This is the feature selection part that I' asking about: from mlxtend.feature_selection import SequentialFeatureSelector feature_selector = SequentialFeatureSelector(LassoCV(), k_features=3, forward=True, verbose=0, scoring='neg_mean_absolute_error', cv=0) features = feature_selector.fit(X, y) filtered_features= cols[list(features.k_feature_idx_)] print(filtered_features) I'm new to data science and machine learning, so I want to know if this is right or wrong.
