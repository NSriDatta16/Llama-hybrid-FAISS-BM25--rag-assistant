[site]: stackoverflow
[post_id]: 2228153
[parent_id]: 
[tags]: 
Fluent NHibernate: Model Markov chain

I want to use Fluent NHibernate to model a Markov chain . It's basically a set of different states with transition probabilities between the states. I want to map the transition probabilities into MarkovState.TransitionProbabilities as a Dictionary. I want to use the NEXT state as key (using either MarkovState or int as key), so that I can do lookups like: float probability = currentState.TransitionProbabilities[nextState.Id].Probability; My database model: CREATE TABLE MarkovState ( Id int IDENTITY(1,1) NOT NULL, StateContent varchar(10) NOT NULL ); CREATE TABLE TransitionProbability ( Id int IDENTITY(1,1) NOT NULL, CurrentState_Id int NOT NULL, NextState_Id int NOT NULL, Probability float NOT NULL ); My classes: public class MarkovState { public virtual int Id { get; private set; } public virtual string StateContent { get; set; } public virtual IDictionary TransitionProbabilities { get; set; } } public class TransitionProbability { public virtual int Id { get; private set; } public virtual MarkovState CurrentState { get; set; } public virtual MarkovState NextState { get; set; } public virtual float Probability { get; set; } } And my maps: class MarkovStateMap : ClassMap { public MarkovStateMap() { Id(x => x.Id); Map(x => x.StateContent); HasMany (x => x.TransitionProbabilities) .AsMap(x => x.NextState.Id) .KeyColumn("CurrentState_Id") .Not.LazyLoad() .Inverse(); } } class TransitionProbabilityMap : ClassMap { public TransitionProbabilityMap() { Id(x => x.Id); Map(x => x.Probability); References(x => x.CurrentState); References(x => x.NextState); } } However, this mapping seems to use CurrentState as the key, and not the NextState . I don't even know if this model is possible. Please suggest alternatives if you think this model isn't valid.
