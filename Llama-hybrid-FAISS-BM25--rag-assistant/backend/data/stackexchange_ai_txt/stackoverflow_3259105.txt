[site]: stackoverflow
[post_id]: 3259105
[parent_id]: 3258920
[tags]: 
Fivestar , and User Points could be used for the purpose, but you only get something similar to Stack Overflow. The first module (which requires Voting API ) can be used to allow the users to vote, and the second module can be used to transform the votes in points for the users who voted (among other things â€” the module is not limited to this). To integrate the two modules, there is another module, but I am not sure it's part of "User Points", or User Points Contributed modules . The problem with Fivestar is that users are allowed to give a vote from 1 to X (I think the maximum vote can be changed), which is different from the voting system used by Stack Overflow, where users can simply report "I like it", or "I don't like it". With Fivestar there would be only positive votes, and nobody would be able to down vote a comment, or a node; it would be possible to lower the average by giving the minimum vote. Between the modules I listed, there isn't a module that allows to give points to the author of the node / comment; using "Voting API", and "User Points" it would possible to do that, but no module I looked allows to do it (this means that you could probably write a custom module). If you look at the list of the modules included in the installation profile ArrayShift , you can get an idea of the modules you can use to reach the same purpose. The list of modules includes Node comments , which transforms comments in full nodes; with this module, in example, is possible to use a voting module that works only for nodes with comments too. Voting API . Vote UP/Down that allows users to up vote, or down vote. User Points . ArrayShift Support Modules ; it is probable that this module contains code that allows node authors to get points every time a node they created is voted. In particular, a module that is part of ArrayShift Support Modules (as_tweaks) contains the following code: /** * Below, a bunch of simple hook implementations that award userpoints based * on various events that happen. In theory, Rules module and various other tools * could be used to do these things, but most of those modules don't have easy * to export/import configuration data. */ // VotingAPI hook. When a user casts a vote on a node, the author should // get/lose points.. function as_tweaks_votingapi_insert($votes) { foreach ($votes as $vote) { if ($vote['content_type'] == 'node' && ($node = node_load($vote['content_id']))) { // Award the points userpoints_userpointsapi(array( 'uid' => $node->uid, 'points' => $vote['value'] * 10, 'operation' => 'vote up', 'entity_id' => $node->nid, 'entity_type' => 'node', )); } } } // VotingAPI hook. When a user casts a vote on a node, the author should // get/lose points.. function as_tweaks_votingapi_delete($votes) { foreach ($votes as $vote) { if ($vote['content_type'] == 'node' && ($node = node_load($vote['content_id']))) { // Award the points userpoints_userpointsapi(array( 'uid' => $node->uid, 'points' => $vote['value'] * -10, 'operation' => 'vote up', 'entity_id' => $node->nid, 'entity_type' => 'node', )); } } }
