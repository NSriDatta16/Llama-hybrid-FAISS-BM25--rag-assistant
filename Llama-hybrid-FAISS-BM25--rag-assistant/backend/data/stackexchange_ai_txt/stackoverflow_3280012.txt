[site]: stackoverflow
[post_id]: 3280012
[parent_id]: 3274344
[tags]: 
I don't use the IsEnabled property, because these are the requirements: nothing disabled, only message displayed if "invalid" values are set. Other requirement is not to inject view-models into view... We have some 'workspace' classes that link a view with a view model, so no view is aware of the view model instance attached to it. Of course, the injection can be made from the workspace... I tried this and still does not seem to work. But isn't any other elegant and MVVM-ish method of doing this? I prepared a very simple example that illustrates my problem. I have 2 text-boxes, bound to the same property in the view model: First text box Second text box The view model has the IDataErrorInfo implementation: public String this[String propertyName] { get { String error = null; if (propertyName == "Property") { if (Property != "1000") { error ="Only value '1000' is accepted here."; MessageBox.Show(error, "Error", MessageBoxButton.OK, MessageBoxImage.Error); Property = "1000"; } } return error; } } Initially, the value is "1000". If I add a "0" in one text-box, the message is displayed, the other text-box is correctly updated to "1000", but the focused text-box's value remains "10000". I feel that I miss here something essential. Lucia
