[site]: stackoverflow
[post_id]: 5216449
[parent_id]: 5216323
[tags]: 
Here are some alternatives found by Googling: 1- GlobalProxySelection This is from http://www.hccp.org/csharp-http-proxy.html Sample Code: System.Net.Uri proxyURI = new System.Net.Uri("http://64.202.165.130:3128"); System.Net.GlobalProxySelection.Select = new System.Net.WebProxy(proxyURI); 2- Another discussion on StackOverflow: Programmatically Set Browser Proxy Settings in C# Read it if you want the proxy only for your app. For global change, it suggests looking at: http://msdn.microsoft.com/en-us/library/aa384113.aspx Sample Code: WINHTTP_PROXY_INFO proxyInfo; // Allocate memory for string members. proxyInfo.lpszProxy = new WCHAR[25]; proxyInfo.lpszProxyBypass = new WCHAR[25]; // Set the members of the proxy info structure. proxyInfo.dwAccessType = WINHTTP_ACCESS_TYPE_NAMED_PROXY; swprintf_s(proxyInfo.lpszProxy, 25, L"proxy_server"); swprintf_s(proxyInfo.lpszProxyBypass, 25, L" "); // Set the default proxy configuration. if (WinHttpSetDefaultProxyConfiguration( &proxyInfo )) printf("Proxy Configuration Set.\n"); // Free memory allocated to the strings. delete [] proxyInfo.lpszProxy; delete [] proxyInfo.lpszProxyBypass; 3- Using Native Code This is from http://huddledmasses.org/setting-windows-internet-connection-proxy-from-c/ Sample Code: using System; using System.Runtime.InteropServices; using System.ComponentModel; namespace PoshHttp { public class Proxies { public static bool UnsetProxy() { return SetProxy(null, null); } public static bool SetProxy(string strProxy) { return SetProxy(strProxy, null); } public static bool SetProxy(string strProxy, string exceptions) { InternetPerConnOptionList list = new InternetPerConnOptionList(); int optionCount = string.IsNullOrEmpty(strProxy) ? 1 : (string.IsNullOrEmpty(exceptions) ? 2 : 3); InternetConnectionOption[] options = new InternetConnectionOption[optionCount]; // USE a proxy server ... options[0].m_Option = PerConnOption.INTERNET_PER_CONN_FLAGS; options[0].m_Value.m_Int = (int)((optionCount 1) { options[1].m_Option = PerConnOption.INTERNET_PER_CONN_PROXY_SERVER; options[1].m_Value.m_StringPtr = Marshal.StringToHGlobalAuto(strProxy); // except for these addresses ... if (optionCount > 2) { options[2].m_Option = PerConnOption.INTERNET_PER_CONN_PROXY_BYPASS; options[2].m_Value.m_StringPtr = Marshal.StringToHGlobalAuto(exceptions); } } // default stuff list.dwSize = Marshal.SizeOf(list); list.szConnection = IntPtr.Zero; list.dwOptionCount = options.Length; list.dwOptionError = 0; int optSize = Marshal.SizeOf(typeof(InternetConnectionOption)); // make a pointer out of all that ... IntPtr optionsPtr = Marshal.AllocCoTaskMem(optSize * options.Length); // copy the array over into that spot in memory ... for (int i = 0; i 0) { // throw the error codes, they might be helpful throw new Win32Exception(Marshal.GetLastWin32Error()); } return (returnvalue Please check the links themselves for details and complete parts of the solutions.
