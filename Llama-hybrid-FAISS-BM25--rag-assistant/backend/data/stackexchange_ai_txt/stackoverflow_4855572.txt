[site]: stackoverflow
[post_id]: 4855572
[parent_id]: 4855425
[tags]: 
Could have sworn this didn't work when I was writing the abomination below, but it does now: ## self contained example: txt Just compute unique set of levels and coerce each colX to a factor: > dat3 lev dat3 dat3 str(dat3) 'data.frame': 5 obs. of 2 variables: $ col1: Factor w/ 6 levels "Bob","Tom","Frank",..: 1 2 3 4 2 $ col2: Factor w/ 6 levels "Bob","Tom","Frank",..: 5 1 6 1 1 > data.matrix(dat3) col1 col2 [1,] 1 5 [2,] 2 1 [3,] 3 6 [4,] 4 1 [5,] 2 1 [ Original: to show how stupidly complex and obfuscated one can write R code it one tries really hard!] Not sure this is particularly elegant (and it isn't), but... We first unlist the data: tmp then compute the unique levels lev and then restructure tmp (from above) back into the same dimensions as the original data, convert to data.frame (preserving the strings), lapply over this data frame, creating a factor with levels lev computed above, and finally coerce to a data frame. dat2 Which gives: > dat2 X1 X2 1 Bob John 2 Tom Bob 3 Frank Jane 4 Jim Bob 5 Tom Bob > sapply(dat2, levels) X1 X2 [1,] "Bob" "Bob" [2,] "Tom" "Tom" [3,] "Frank" "Frank" [4,] "Jim" "Jim" [5,] "John" "John" [6,] "Jane" "Jane" > data.matrix(dat2) X1 X2 [1,] 1 5 [2,] 2 1 [3,] 3 6 [4,] 4 1 [5,] 2 1
