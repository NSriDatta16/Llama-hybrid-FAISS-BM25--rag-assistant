[site]: stackoverflow
[post_id]: 1579529
[parent_id]: 1579117
[tags]: 
Subclass the TitleWindow and add a canvas over the title bar as a drag proxy. Then you can explicity call startDrag with a boundary rectangle. This is pretty skeletal, but should put you on the path... The reason for the proxy is you may get some weird behavior when you click the titleBar label if you don't have the canvas over it. public class MyTitleWindow extends TitleWindow { public var titleBarOverlay:Canvas; override protected function createChildren():void { super.createChildren(); if(!titleBarOverlay) { titleBarOverlay = new Canvas(); titleBarOverlay.width = this.width; titleBarOverlay.height = this.titleBar.height; titleBarOverlay.alpha = 0; titleBarOverlay.setStyle("backgroundColor", 0x000000); rawChildren.addChild(titleBarOverlay); } addListeners(); } override protected function updateDisplayList(w:Number, h:Number):void { super.updateDisplayList(w, h); titleBarOverlay.width = this.width; titleBarOverlay.height = this.titleBar.height; } private function addListeners():void { titleBarOverlay.addEventListener(MouseEvent.MOUSE_DOWN, onTitleBarPress, false, 0, true); titleBarOverlay.addEventListener(MouseEvent.MOUSE_UP, onTitleBarRelease, false, 0, true); } private function onTitleBarPress(event:MouseEvent):void { // Here you can set the boundary using owner, parent, parentApplication, etc. this.startDrag(false, new Rectangle(0, 0, parent.width - this.width, parent.height - this.height)); } private function onTitleBarRelease(event:Event):void { this.stopDrag(); } }
