[site]: stackoverflow
[post_id]: 605678
[parent_id]: 605434
[tags]: 
If I was to try to parse markdown (and its extension Markdown extra ) I think I would try to use a state machine and parse it one char at a time, linking together some internal structures representing bits of text as I go along then, once all is parsed, generating the output from the objects all stringed together. Basically, I'd build a mini-DOM-like tree as I read the input file. To generate an output, I would just traverse the tree and output HTML or anything else (PS, LaTex, RTF,...) Things that can increase complexity: The fact that you can mix HTML and markdown, although the rule could be easy to implement: just ignore anything that's between two balanced tags and output it verbatim. URLs and notes can have their reference at the bottom of the text. Using data structures for hyperlinks could simply record something like: [my text to a link][linkkey] results in a structure like: URLStructure: | InnerText : "my text to a link" | Key : "linkkey" | URL : Headers can be defined with an underline, that could force us to use a simple data structure for a generic paragraph and modify its properties as we read the file: ParagraphStructure: | InnerText : the current paragraph text | (beginning of line until end of line). | HeadingLevel : or 1-4 when we can assess | that paragraph heading level, if any. Anyway, just some thoughts. I'm sure that there are many small details to take care of and I'm pretty sure that Regexes could become handy during the process. After all, they were meant to process text.
