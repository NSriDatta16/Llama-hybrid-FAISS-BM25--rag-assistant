[site]: stackoverflow
[post_id]: 2648412
[parent_id]: 2648145
[tags]: 
I actually recommend to go with GlassFish. Apart from your familiarity, it uses a NIO network infrastructure ( Grizzly ) which supports very high number of concurrent connections. We primarily use JBoss, and I can tell you JBoss5 can support a pretty high number of connections, too (as far as I know, it also uses a NIO based connector). There is also an EJB container called Resin , which is semi-opensource (basically they have open source version and proprietary version). People say it has excellent performance, but I haven't got the chance to investigate further. My last point is, are you sure you want to go with JavaEE EJB container? We actually started off with JavaEE EJB container, but because of our performance requirement etc. we are now trying to migrate to Tomcat+Spring. EJB has restriction on threading model etc., which can become unwanted restriction if you have clients other than web browsers... Until JavaEE5, you have only this "TimerService" for executing periodical tasks, and JMS for doing asynchronous stuff, which is very heavy weight and can become very annoying.
