[site]: datascience
[post_id]: 63014
[parent_id]: 63004
[tags]: 
I would recommend a TOP-DOWN learning path: get a first grasp about what algorithms types there are based on possible use cases (classification, regression, clustering, etc); this way, you know the WHAT CAN I SOLVE WITH THIS for the algorithms you are interested in (a basic one could be a linear regression trained via gradient descent optimizer), you can get a first feeling using libraries like scikit-learn which wrap all the math in between, but give you results which you can quickly check and play with --> HOW CAN I SOLVE IT after you have played around it, you can have a deeper look at how the algorithms work, with the linear algebra, statistics and calculus concepts you need to really understand them (basically, the math fomulae you said) --> HOW IT WORKS Good sources: Python Machine Learning book, by Sebastian Raschka (good balance between theory and practice) Jason Brownlee blog and books (very applied use cases) scikit-learn documentation, which includes the math used in their code
