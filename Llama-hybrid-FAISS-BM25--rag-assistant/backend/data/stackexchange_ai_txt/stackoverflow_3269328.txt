[site]: stackoverflow
[post_id]: 3269328
[parent_id]: 3256320
[tags]: 
If I understand what you're trying to say, you want a continuous, slow scroll (600px per 15 seconds) which can be overruled by the user. If this is what you want, I'd take a different approach than this one. The animation you're firing, when started, will probably just do what it's told, while the user is interacting as well, which will all get very messy. Create an NSTimer which takes care of the slow scrolling motion, one pixel at a time. Then the user can still interact freely. something like: ... NSTimer *slow = [NSTimer scheduledTimerWithTimeInterval:0.1 target:self selector:@selector(scrollALittle:) userInfo:nil repeats:YES]; ... // maybe, somewhere: [slow invalidate]; -(void)scrollALittle:(NSTimer*)theTimer { CGPoint offset = scrollview.contentOffset; offset.y+=4; // 10 times 4 pix a second makes 600px/15 seconds. // add check on max y? // these checks are deliberately placed as close as possible to the contentOffset assignment if ( scrollview.tracking ) return; if ( scrollview.dragging ) return; if ( scrollview.zooming ) return; if ( scrollview.decelerating ) return; scrollview.contentOffset = offset; } of course you can do a lot of things here, but this may be a starting point.
