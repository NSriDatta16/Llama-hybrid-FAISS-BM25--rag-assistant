[site]: stackoverflow
[post_id]: 1870050
[parent_id]: 1854828
[tags]: 
It is a valid question, since there are too many products and buzz words. In simple terms, think of jBPM as a workflow framewrok / engine - you define a "sequence of events", that also called a business process (hence BPM - B usiness P rocess M anagement), and jBPM make your data follow that sequence/process. Whereas Spring Integration is an Event Driven framework based on several building blocks: Message, Source, Target, Channel, Filter, etc. To understand it better take a look at: " Spring Integration in 10 minutes ". It follows a simple Source [send message] ---> CHANNEL --> FILTER --> CHANNEL --> Target [receive message] pattern, which allows you to create wonders. Sources or/and targets would be assigned to named channels, and filters may range from being a simple transformer / translator to the router, that reads the message header and decides what channel to route the message to. Of course there is all power of Spring Remoting (JMS, Webservice, RMI, etc..) which is available in Spring Integration via templates (JmsTemplate, WebserviceTemplate, etc..) and adapters that allow the integration with external systems with FTP, RMI, HttpInvoker, JMS, Web Services etc. You can of course build a workflow solution using Spring Integration, but there is Drools Flow for that - no need to reinvent a workflow engine :)
