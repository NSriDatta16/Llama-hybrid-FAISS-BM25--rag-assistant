[site]: stackoverflow
[post_id]: 2111504
[parent_id]: 2099120
[tags]: 
In your last paragraph, you're referring to the C++ standards committee. It's been plenty busy, and important language features do get dropped because the committee runs out of time (such as std::unordered_map in the current standard and concepts in the upcoming one). They aren't interested in making minor changes without good reason. In the days before the standards committee, Bjarne Stroustrup wasn't interested in adding minor features just for the sake of having them. C didn't have this declaration, possibly because nobody wanted it (few people declared types with associated functions back then), possibly because it might be confusing. A lot of features of computer languages are there for historical purposes, and may indicate that somebody made a random choice decades ago. That doesn't mean it's a good idea to change them without good reason, once they're established. The correct question is not "why don't they make this change?" but "why should they make this change?" Your proposed change doesn't look like it would be really useful, since I can do the exact same thing with two lines of code; total additional typing is one semicolon, one end-of-line, and repetition of the variable name. The downside is that it would add additional syntax to the language, and it raises the question of return values (as sth pointed out). Should the return value of the called function be discarded? Should the called function be required to return void or some variation on this ? Any solution I can see right now is going to be confusing under some circumstances, and whatever C++ needs it isn't more opportunity to get confused.
