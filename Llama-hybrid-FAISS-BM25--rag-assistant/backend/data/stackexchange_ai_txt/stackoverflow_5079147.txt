[site]: stackoverflow
[post_id]: 5079147
[parent_id]: 5078913
[tags]: 
Note that the faster you update your output, the more you will affect your measurement. Although minimal, I try to update my fps output once per second or less unless it's necessary to go faster. I like to have a low-pass filter on my results so that a temporary hiccup doesn't affect the values too strongly. This is easier to compute and write than a moving average, and doesn't have the problem of an overall average where your 'current' readings are affected by total performance over the entire run (e.g. anomalous readings during startup). Put together, here's how I usually measure FPS: var fps = 0, now, lastUpdate = (new Date)*1; // The higher this value, the less the FPS will be affected by quick changes // Setting this to 1 will show you the FPS of the last sampled frame only var fpsFilter = 50; function drawFrame(){ // ... draw the frame ... var thisFrameFPS = 1000 / ((now=new Date) - lastUpdate); if (now!=lastUpdate){ fps += (thisFrameFPS - fps) / fpsFilter; lastUpdate = now; } setTimeout( drawFrame, 1 ); } var fpsOut = document.getElementById('fps'); setInterval(function(){ fpsOut.innerHTML = fps.toFixed(1) + "fps"; }, 1000);
