[site]: stackoverflow
[post_id]: 5098665
[parent_id]: 3837480
[tags]: 
After raging against this for a day-and-a-half, and doing my best to figure out the right way to do this fairly simple this, I gave up and did the following. I still can't believe there's not a better way. The use case that necessitates this is a simple record listing, with a form up top for adding some filters (via GET), maybe some column sorting, and Zend_Paginate thrown in for good measure. I ran into issues using the Url view helper in my pagination partial, but I suspect with even just sorting and a filter-form, Zend_View_Helper_Url would still fall down. But I digress. My solution was to add a method to my base controller class that merges any raw query-string parameters with the existing zend-style slashy-params, and redirects (but only if necessary). The method can be called in any action that doesn't have to handle POSTs. Hopefully someone will find this useful. Or even better, find a better way: /** * Translate standard URL parameters (?foo=bar&baz=bork) to zend-style * param (foo/bar/baz/bork). Query-string style * values override existing route-params. */ public function mergeQueryString(){ if ($this->getRequest()->isPost()){ throw new Exception("mergeQueryString only works on GET requests."); } $q = $this->getRequest()->getQuery(); $p = $this->getRequest()->getParams(); if (empty($q)) { //there's nothing to do. return; } $action = $p['action']; $controller = $p['controller']; $module = $p['module']; unset($p['action'],$p['controller'],$p['module']); $params = array_merge($p,$q); $this->_helper->getHelper('Redirector') ->setCode(301) ->gotoSimple( $action, $controller, $module, $params); }
