[site]: stackoverflow
[post_id]: 3633092
[parent_id]: 
[tags]: 
Inplace union sorted vectors

I'd like an efficient method for doing the inplace union of a sorted vector with another sorted vector. By inplace, I mean that the algorithm shouldn't create a whole new vector or other storage to store the union, even temporarily. Instead, the first vector should simple grow by exactly the number of new elements. Something like: void inplace_union(vector & A, const vector & B); Where, afterwards, A contains all of the elements of A union B and is sorted. std::set_union in wont work because it overwrites its destination, which would be A . Also, can this be done with just one pass over the two vectors? Edit: elements that are in both A and B should only appear once in A.
