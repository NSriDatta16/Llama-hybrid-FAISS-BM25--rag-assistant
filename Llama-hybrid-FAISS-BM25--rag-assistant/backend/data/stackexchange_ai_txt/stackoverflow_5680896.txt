[site]: stackoverflow
[post_id]: 5680896
[parent_id]: 
[tags]: 
iOS - How to limit the MapView to a specific region?

I have the following problem: I have a "drawn map" (image) which I add to the MapView as an Overlay. No Problem with that.. but I need to limit the MapView to the region of the Overlay, so a user isn't able to scroll/zoom outside of this region.. but it should be possible to scroll/zoom inside the "bounds" of the overlay - means I cannot just disable zoom/scrolling for the MapView. Are there any ideas/solution on this topic? The reason for using the MapView/-Kit is that I need to add various POIs to the custom map. This may become more complex when just using an ImageView+ScrollView for presenting the custom map. I've researched alot on this topic, but I didn't found a nice solution. Any help is appreciated! Best Regards, Christian Edit: This is our solution: You supply a topleft and a bottomright coordinate to limit the map. The (minimum) zoomlevel is also limited. I've deactivated decelerating and you are able to bounce a bit out of the map (for better performance/ux). I added a ~1km grey border to the overlay so the user isnÃ„t able to see the orignal worldmap of google. LimitedMapView.h: #import #import @interface LimitedMapView : MKMapView { } @property (nonatomic, assign) CLLocationCoordinate2D topLeftCoordinate; @property (nonatomic, assign) CLLocationCoordinate2D bottomRightCoordinate; @end LimitedMapView.m: #import "LimitedMapView.h" @implementation LimitedMapView @synthesize topLeftCoordinate, bottomRightCoordinate; - (void)scrollViewDidZoom:(UIScrollView *)scrollView{ if([super respondsToSelector:@selector(scrollViewDidZoom:)]) [super scrollViewDidZoom:scrollView]; if ([self region].span.latitudeDelta > 0.002401f || [self region].span.longitudeDelta > 0.003433f) { CLLocationCoordinate2D center = self.centerCoordinate; MKCoordinateSpan span = MKCoordinateSpanMake(0.002401f, 0.003433f); self.region = MKCoordinateRegionMake(center, span); } } -(void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate{ if([super respondsToSelector:@selector(scrollViewDidEndDragging:)]) [super scrollViewDidEndDragging:scrollView willDecelerate:decelerate]; MKCoordinateRegion currentRegion = self.region; bool changeRegionLong = YES; bool changeRegionLat = YES; // LONGITUDE if((currentRegion.center.longitude - (currentRegion.span.longitudeDelta/2)) self.bottomRightCoordinate.longitude) { currentRegion.center.longitude = (bottomRightCoordinate.longitude - (currentRegion.span.longitudeDelta/2)); } else { changeRegionLong = NO; } // LATITUDE if((currentRegion.center.latitude + (currentRegion.span.latitudeDelta/2)) > self.topLeftCoordinate.latitude) { currentRegion.center.latitude = (topLeftCoordinate.latitude - (currentRegion.span.latitudeDelta/2)); } else if((currentRegion.center.latitude - (currentRegion.span.latitudeDelta/2))
