[site]: stackoverflow
[post_id]: 2888057
[parent_id]: 2887302
[tags]: 
How do the Lambda Expressions / Closures in C++0x complicate the memory management in C++? Do they? They're just syntactic sugar for creating function objects. Nothing we havn't seen before. Only now, we have a short syntax for creating those on-the-fly. Why do some people say that closures have no place in languages with manual memory management? You should probably ask them. I find the C++0x lambda approach rather elegant and low-level. It fits the spirit of C++. Is there claim valid and if yes, what are the reasons behind it? Beats me. Care to dig up some arguments yourself?
