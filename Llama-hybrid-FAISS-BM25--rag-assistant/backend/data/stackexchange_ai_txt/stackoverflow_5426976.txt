[site]: stackoverflow
[post_id]: 5426976
[parent_id]: 5425626
[tags]: 
No, you are not correctly using C style strings ( char * ). Give it up and use std::string instead. For example: const char *color[30]; for(i=1;i The above fragment copies pointers and does not make duplicates of the text. This may or may not be what you wanted. Rewritten more safely: const char * color[30]; // 30 pointers to char. const char text_white[] = "white"; for (i = 0; i The const char text_white[] declares a pointer, text_white , to constant data. This will let the compiler know when you try to assign to the literal. The C++ code for this: typedef std::vector Text_Container; Text_Container texts; const std::string white_text("white"); const unsigned int MAX_TEXTS = 30; for (i = 0; i Give up on char * for text unless your program needs to conserve memory. Prefer std::string and std::vector .
