[site]: stackoverflow
[post_id]: 5282480
[parent_id]: 5282403
[tags]: 
I think that organizing things this way mixes controller and authentication logic. In CakePHP your actions are grouped by controller, and controllers are usually in correspondence with models. So you will have controllers for users, posts, products or whatever. Then, for each controller, some actions may only be available to users with certain privileges, for instance admins. You should not create a separate controller to distinguish the privilege level, but rather group your actions according to the data they act opon. It is the task of the Auth component, possibly working together with other components such as Acl , to grant or deny access to the single actions in each controller. As you already know, you can then prefix actions which need admin privileges by admin using routing. This gives a separate entry point for the action, but the controller managing the logic reamins the same. So the answer to your question is: you shouldn't. This is not what controllers are for; controllers are for grouping actions on the same objects, not to group actions requiring different access levels.
