[site]: stackoverflow
[post_id]: 3698271
[parent_id]: 
[tags]: 
Creating a good registry class in PHP for important classes

I have a webapplication where I use a registry class. The registry class holds important classes that I need troughout my application. I have made the registry class a Singleton class and this class is static. The content of the registry class is here: $name = $name; } } public function __set( $object, $key ) { require_once(__LIBRARIES . DS . $object . '.class.php'); self::$objects[ $key ] = new $object( self::$instance ); } public function __get( $key ) { if( is_object ( self::$objects[ $key ] ) ) { return self::$objects[ $key ]; } } public function returnAllObjects() { return self::$objects; } } ?> Now whenever I want to use one of the classes here in my application I do: registry::singleton()->data->adddata('somedata'); I use the classes a lot in my application, minimum of 1 time in every method. Now my question is what is the best thing to do: 1) call the whole thing everytime 2) Class $registry = registry::singleton(); one time in every method and then just use the local variable. (I do not know if this will work) Or is there a more elegant method to tackle this problem.
