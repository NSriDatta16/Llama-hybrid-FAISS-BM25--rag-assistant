[site]: stackoverflow
[post_id]: 932952
[parent_id]: 932398
[tags]: 
The short answer is that there is no way to specify the type parameter. That is because the Class object (say, for example, List.class, not just Class.class) doesn't understand that generic type parameter - it is erased during compilation. My IDE, Intellij IDEA, gives the same warning. It is the IDE being too aggressive. You can suppress the warning with IDEA (it generates a @SuppressWarnings annotation), but code to work around it (like Robert Munteau's clever workaround) is really introducing some nasty design just to avoid an IDE message that is really not correct - the JDK does not view this case as an erasure. EDIT: Given the downvote, I should at least justify my thinking here. Think about the following: List.class That represents a class object of type: Class It cannot represent a type of: Class > because it isn't known if the given list will actually have a generic parameter or what it will be. The List.class object has to represent all types, as far as parameterizing Class. The evidence that the JDK does not view this as an unsafe operation is that if you compile the code, it gives you no warning. So the IDE is just being overly sensitive. Although the questioner didn't specify which IDE he uses, I see this behavior with Intellij IDEA 8.1.2.
