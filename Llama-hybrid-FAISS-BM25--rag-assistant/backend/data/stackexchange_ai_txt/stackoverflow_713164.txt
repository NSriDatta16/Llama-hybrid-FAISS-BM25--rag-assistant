[site]: stackoverflow
[post_id]: 713164
[parent_id]: 711607
[tags]: 
An example of a static utility function using generics. It takes two maps, A -> B and B -> C and constructs an A -> C (hash) map from it. public static Map transitise(Map aToB, Map bToC) { HashMap map = new HashMap (aToB.size() * 2); for (Map.Entry abEntry : aToB.entrySet()) { map.put(abEntry.getKey(), bToC.get(abEntry.getValue())); } return map; } Example Use: public static void main(String[] args) { HashMap nameToNumber = new HashMap (); nameToNumber.put("Anna", 12345); nameToNumber.put("James", 444); HashMap numberToPosition = new HashMap (); numberToPosition.put(12345, new Point(3, 3)); numberToPosition.put(444, new Point(1, 55)); for (Map.Entry nTP : transitise(nameToNumber, numberToPosition).entrySet()) { System.out.println(nTP.getKey() + " -> " + nTP.getValue().x + "/" + nTP.getValue().y); } } Results in: James -> 1/55 Anna -> 3/3 Anyway, what I'm trying to illustrate is that using generics, you can make some very useful, er, generic utility functions.
