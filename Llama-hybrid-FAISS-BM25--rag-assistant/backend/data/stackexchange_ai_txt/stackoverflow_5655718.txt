[site]: stackoverflow
[post_id]: 5655718
[parent_id]: 
[tags]: 
"Here methods" in Ruby?

I'm writing a few helpers to DRY up my tests. I pictured something like: class ActiveSupport::TestCase def self.test_presence_validation_of model, attribute test "should not save #{model.to_s} with null #{attribute.to_s}", nil assert !#{model.to_s}.save, '#{model.to_s.capitalize} with null #{attribute.to_s} saved to the Database' EOM # Another one for blank attribute. end end So that this: class MemberTest Executes exactly this at MemberTest class scope: test 'should not save member with null name' do member = Factory.build :member, :name => nil assert !member.save, 'Member with null name saved to the Database' end Is it possible to do it this way (with a few adaptations, of course; I doubt my "picture" works), or do I have to use class_eval ?
