[site]: stackoverflow
[post_id]: 1159459
[parent_id]: 717515
[tags]: 
This DataBase to Class point of view approach is more than likely to lead you to cranking lots of code quite quickly. However, a good chunk of this code will likely not be of any use or require some severe mutation. In other words, you'll likely build specific classes that mismatch your displays and workflow. First, consider your apps, your users' needs, general workflow .. etc Actually come up with something that looks workable (i.e. mock your displays). Concentrate on the classes you need to use the displays and model your storage (db design) after those needs. Chances are that you will have only a few of straight-table classes as most of your classes will naturally tend provide the solution for your displays. Good luck.
