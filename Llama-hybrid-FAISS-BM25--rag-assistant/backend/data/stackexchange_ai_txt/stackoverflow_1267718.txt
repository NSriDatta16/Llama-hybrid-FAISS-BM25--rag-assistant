[site]: stackoverflow
[post_id]: 1267718
[parent_id]: 1264797
[tags]: 
While the other posters here mention many of the 'right' ways to do string interpolation, there is a fancier way using quasiquotation and the interpolatedstring-perl6 library: {-# LANGUAGE QuasiQuotes, ExtendedDefaultRules #-} import Text.InterpolatedString.Perl6 (qq) main = putStrLn [$qq| length [1,2,3] => ${length [1,2,3]} |] In fact there is also an interpolatedstring-qq library which offers a Ruby syntax. {-# LANGUAGE QuasiQuotes, ExtendedDefaultRules #-} import Text.InterpolatedString.QQ (istr) main = putStrLn [$istr| length [1,2,3] => #{length [1,2,3]} |] That said, you probably should just use show and ++ or concat to glue together the strings main = putStrLn $ "length [1,2,3] => " ++ show (length [1,2,3]) or main = putStrLn $ concat ["length [1,2,3] => ", show $ length (1,2,3)] The latter tends to look nicer, code-wise, when you are gluing together a lot of string fragments.
