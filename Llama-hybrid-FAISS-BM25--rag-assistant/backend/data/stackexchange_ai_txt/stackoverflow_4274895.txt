[site]: stackoverflow
[post_id]: 4274895
[parent_id]: 
[tags]: 
Action sheet doesn't display when the MFMailComposeViewController's cancel button is tapped

I'm trying to incorporate MFMailComposeViewController in my app. When I present it modally, the send button works fine and the email is sent, which implies that the result sent to the delegate is right in that case. Whereas when I tap the cancel button it hangs up the app. The log shows no errors either, just the screen goes dark and everything gets disabled. Apparently, the result is not being passed to the delegate (I checked it through logs). it appears that the (void)mailComposeController:(MFMailComposeViewController*)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError*)error is never called whenever the cancel button is pressed. Probably that's the reason why the actionsheet ( Save draft , cancel , delete draft ) is not displayed and therefore the app hangs in right there. I'm using the exact code from Apple's sample apps ( MailComposer ), it works perfectly there, but somehow fails in mine. :( Kindly help me if anyone has ever come across the same issue, and successfully resolved it. My code: -(IBAction)emailButtonPressed:(id)sender{ Class mailClass = (NSClassFromString(@"MFMailComposeViewController")); if (mailClass != nil) { if ([mailClass canSendMail]) { [self displayComposerSheet]; } else { [self launchMailAppOnDevice]; } } else { [self launchMailAppOnDevice]; } } #pragma mark - #pragma mark Compose Mail -(void)displayComposerSheet { MFMailComposeViewController *picker = [[MFMailComposeViewController alloc] init]; picker.mailComposeDelegate = self; [picker setSubject:@"Ilusiones"]; // Set up recipients NSArray *toRecipients = [NSArray arrayWithObject:@"anam@semanticnotion.com"]; [picker setToRecipients:toRecipients]; // Attach a screenshot to the email UIGraphicsBeginImageContext(self.view.bounds.size); [self.view.layer renderInContext:UIGraphicsGetCurrentContext()]; UIImage *viewImage = UIGraphicsGetImageFromCurrentImageContext(); UIGraphicsEndImageContext(); NSData *myData = UIImagePNGRepresentation(viewImage); [picker addAttachmentData:myData mimeType:@"image/png" fileName:@"viewImage"]; // Fill out the email body text NSString *emailBody = @""; [picker setMessageBody:emailBody isHTML:NO]; [self presentModalViewController:picker animated:YES]; [picker release]; } - (void)mailComposeController:(MFMailComposeViewController*)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError*)error { switch (result) { case MFMailComposeResultCancelled: NSLog(@"Result: canceled"); break; case MFMailComposeResultSaved: NSLog(@"Result: saved"); break; case MFMailComposeResultSent: NSLog( @"Result: sent"); break; case MFMailComposeResultFailed: NSLog( @"Result: failed"); break; default: NSLog(@"Result: not sent"); break; } [self dismissModalViewControllerAnimated:YES]; } #pragma mark - #pragma mark Workaround -(void)launchMailAppOnDevice { NSString *recipients = @"mailto:anam@semanticnotion.com.com?cc=second@example.com,third@example.com&subject=illusions!"; NSString *body = @"&body=xyz"; NSString *email = [NSString stringWithFormat:@"%@%@", recipients, body]; email = [email stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]; [[UIApplication sharedApplication] openURL:[NSURL URLWithString:email]]; }
