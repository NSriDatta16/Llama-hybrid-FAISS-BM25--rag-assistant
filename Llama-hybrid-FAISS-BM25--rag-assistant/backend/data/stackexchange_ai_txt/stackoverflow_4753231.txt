[site]: stackoverflow
[post_id]: 4753231
[parent_id]: 4733380
[tags]: 
Here's what I came up with, to get the formatted array as per above: reladded = new Array(); jQuery("#related-posts").find('input.related').each(function() { jQuery.each(this.attributes, function(i, attrib){ var name = attrib.name; var value = attrib.value; if( name=='name' ){ arrayNameAndKey = value; //get 'reladded[*]' (key for array) } if( name=='value' ){ arrayValue = value; //get input value } }); //add entry to 'reladded' array from name attr. and input values eval(arrayNameAndKey +"='"+arrayValue+"'"); }); After I submitted the array via AJAX, I then had to remove all the 'undefined' array values that javascript added in, between mine. Here's the code I used for that: $value){ if($value=="undefined") unset($related[$key]); } ?> Definitely open to more elegant ways to do this... Note - I actually didn't need to serialize the array in JQuery, since I was just passing it through to PHP with AJAX. I did the serialization there instead. My main goal was retaining the custom key indexes in the retrieved array - that is what I want suggestions on how to do more easily, if possible....thanks!!!
