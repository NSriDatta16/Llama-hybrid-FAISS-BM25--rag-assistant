[site]: stackoverflow
[post_id]: 5098618
[parent_id]: 5098493
[tags]: 
That SQL is unreadable: SELECT Story, CASE StoryCategoryID WHEN 1 THEN 'Negative' WHEN 0 THEN 'Positive' ELSE CAST(StoryCategoryID as varchar(10)) as StoryCategoryID, CreationDate, CompanyRole, MAX(CASE WHEN Z.MinName = af2.Name THEN af2.Name ELSE '' END) as Tag1 , MAX(CASE WHEN Z.MinName <> af2.Name AND Z.MaxName <> af2.Name THEN af2.Name ELSE '' END) as Tag2, MAX(CASE WHEN Z.MaxName = af2.Name THEN af2.Name ELSE '' END) as Tag3 FROM ( SELECT s.Story , s.StoryCategoryID , CONVERT(VARCHAR(10), s.CreationDate, 103) AS CreationDate , m.CompanyRole , af.AgileFactorID , MIN(af.Name) MinName , MAX(af.Name) MaxName FROM Story s INNER JOIN ProjectIterationMember pm ON pm.ProjectIterationMemberID = s.ProjectIterationMemberID INNER JOIN Iterations i ON i.ProjectIterationID = pm.ProjectIterationID INNER JOIN Member m ON m.MemberID = pm.MemberID INNER JOIN ProjectStoryFactors psf ON psf.StoryID = s.StoryID INNER JOIN AgileFactors af ON af.AgileFactorID = psf.AgileFactorID WHERE i.ProjectID = '" + proj_id + "'" GROUP BY s.Story, s.StoryCategoryID, CONVERT(VARCHAR(10), s.CreationDate, 103), m.CompanyRole, af.AgileFactorID ) Z INNER JOIN AgileFactors af2 ON af2.AgileFactorID = Z.AgileFactorID GROUP BY Story, StoryCategoryID, CreationDate, CompanyRole; At least organize it so the structural keywords are visible: SELECT Story, CASE StoryCategoryID WHEN 1 THEN 'Negative' WHEN 0 THEN 'Positive' ELSE CAST(StoryCategoryID as varchar(10)) as StoryCategoryID, CreationDate, CompanyRole, MAX(CASE WHEN Z.MinName = af2.Name THEN af2.Name ELSE '' END) as Tag1, MAX(CASE WHEN Z.MinName <> af2.Name AND Z.MaxName <> af2.Name THEN af2.Name ELSE '' END) as Tag2, MAX(CASE WHEN Z.MaxName = af2.Name THEN af2.Name ELSE '' END) as Tag3 FROM (SELECT s.Story, s.StoryCategoryID, CONVERT(VARCHAR(10), s.CreationDate, 103) AS CreationDate, m.CompanyRole, af.AgileFactorID, MIN(af.Name) MinName, MAX(af.Name) MaxName FROM Story s JOIN ProjectIterationMember pm ON pm.ProjectIterationMemberID = s.ProjectIterationMemberID JOIN Iterations i ON i.ProjectIterationID = pm.ProjectIterationID JOIN Member m ON m.MemberID = pm.MemberID JOIN ProjectStoryFactors psf ON psf.StoryID = s.StoryID JOIN AgileFactors af ON af.AgileFactorID = psf.AgileFactorID WHERE i.ProjectID = '" + proj_id + "'" GROUP BY s.Story, s.StoryCategoryID, CONVERT(VARCHAR(10), s.CreationDate, 103), m.CompanyRole, af.AgileFactorID) Z JOIN AgileFactors af2 ON af2.AgileFactorID = Z.AgileFactorID GROUP BY Story, StoryCategoryID, CreationDate, CompanyRole The notation '" + proj_id + "'" suggests this was extracted from a string in a programming language; it is an open invitation to SQL injection. In a pure SQL context, it is syntactically invalid; you have a stray double quote at the end.
