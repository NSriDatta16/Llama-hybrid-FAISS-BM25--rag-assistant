[site]: stackoverflow
[post_id]: 3135474
[parent_id]: 996052
[tags]: 
Using nfdata and rnf everywhere isn't a solution since it means repeatedly traversing large structures that have already been evaluated. The introductory chapter of Ben Lippmeier's PhD thesis (about DDC) is about the best critique of Haskell that I've seen--it discusses issues of laziness, destructive update, monad transformers, etc. DDC has laziness but you have to request it explicitly, and it's considered an effect, which is tracked and managed by DDC's type-and-effect system.
