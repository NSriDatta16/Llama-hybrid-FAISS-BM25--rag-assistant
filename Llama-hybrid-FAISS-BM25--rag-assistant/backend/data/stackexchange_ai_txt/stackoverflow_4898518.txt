[site]: stackoverflow
[post_id]: 4898518
[parent_id]: 
[tags]: 
limitations to serial port Asynchroneous Input function?

We have a Linux embedded project and we are concerned with performance. The Serial port Asynchronous Input example at: http://www.faqs.org/docs/Linux-HOWTO/Serial-Programming-HOWTO.html#AEN105 pretty much does what we want. However the engineer in charge objects to the CPU performance lost by the looped sleep call. He would like the program to wait for a signal to execute the response handling code instead. I tried moving that code from main() to inside the signal function, i.e.: void signal_handler_IO (int status) { // I moved my code here } The result does not work, writes to the serial port made in that function quickly fail and the program becomes completely unresponsive. Why is that? And does anyone have a good online example of Signal-Driven I/O for just one serial port? I have been poring over Chapter 63 of Kerrisk's "The Linux Priogramming Interface" book and googling like crazy. I am beginning to think there might not be a better way to do the initial example. Thanks in advance, Bert
