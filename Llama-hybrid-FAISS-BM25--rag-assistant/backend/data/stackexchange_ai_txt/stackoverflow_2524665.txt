[site]: stackoverflow
[post_id]: 2524665
[parent_id]: 1146954
[tags]: 
I've recently looked into doing this too. The development setup for my app is Xcode (obviously) with Sparkle, and I maintain my code in a Mercurial repository. As part of my build process, I query Mercurial using the "hg id" to populate the Info.plit. This is done in a build script for my Xcode target. This is the script: /usr/libexec/PlistBuddy -c "Set :CFBundleVersion `/usr/local/bin/hg id -in`" "${TARGET_BUILD_DIR}/${INFOPLIST_PATH}" /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString `/usr/local/bin/hg id -t`" "${TARGET_BUILD_DIR}/${INFOPLIST_PATH}" So, for beta releases, I can just tag my changeset as "0.29b" or whatever. To make it so that users who want to get beta releases I implement the SUUpdater delegate method: #pragma mark - #pragma mark SUUpdate Delegate methods - (NSArray *)feedParametersForUpdater:(SUUpdater *)updater sendingSystemProfile:(BOOL)sendingProfile { if([[NSUserDefaults standardUserDefaults] boolForKey:BSEnableBetaUpdates]) { return [NSArray arrayWithObjects:[NSDictionary dictionaryWithObjectsAndKeys:@"beta", @"key", [NSNumber numberWithBool:YES], @"value", @"Enable beta updates", @"displayKey", @"Yes", @"displayValue", nil], nil]; } else { return nil; } } Where BSEnableBetaUpdates is a constant that get set by the user in my preferences window. What this does is make sure that the GET request to your feed url contains beta=1. On the server you can interpret this and provide an appcast of beta releases or if it doesn't exist of normal releases. I wont explain how you could do that, either using php, .htaccess whatever.
