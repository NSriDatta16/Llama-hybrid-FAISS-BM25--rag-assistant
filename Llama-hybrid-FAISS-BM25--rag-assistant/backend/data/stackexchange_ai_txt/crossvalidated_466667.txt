[site]: crossvalidated
[post_id]: 466667
[parent_id]: 
[tags]: 
Using PDFs to calculate optimally weighted average

I want to calculate the expected value of a parent node in a search tree, where the parent node has three children A, B, C. The goal is that the expected value of the parent should reflect the probable outcome if the best branch in the tree is followed, so the higher the value of a node, the higher weight it should have. The beta distribution describes the PDF for A, B, C, and I would like to calculate the average of them based on their PDFs, but I'm not sure how to do that analytically. I understand that I could sample numbers from A, B and C using the besta distribution and then the proportion of wins for each child would be a good estimate of the weight I want to assign to them when calculating the expected value of the parent, but I suspect that an analytical solution could be faster. To be more concrete, consider the following parameters for the child nodes Child node A: alpha = 2, beta = 13.4 (mean = 0.13) Child node B: alpha = 2, beta = 8 (mean = 0.2) Child node C: alpha = 2, beta = 5.78 (mean = 0.26) alpha Now, I can achieve what I think is the right answer with sampling, e.g. my.sampling.f But my application is time critical, so I very much need something faster than sampling, and perhaps there is an analytical solution?
