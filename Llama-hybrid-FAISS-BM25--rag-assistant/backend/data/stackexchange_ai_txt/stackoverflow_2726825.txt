[site]: stackoverflow
[post_id]: 2726825
[parent_id]: 2726785
[tags]: 
Since k is apparently supposed to be pretty small, an insertion sort is probably the most obvious and generally accepted algorithm. In an insertion sort on random elements, you have to scan through N elements, and you have to move each one an average of N/2 positions, giving ~N*N/2 total operations. The "/2" constant is ignored in a big-O (or similar) characterization, giving O(N 2 ) complexity. In the case you're proposing, the expected number of operations is ~N*K/2 -- but since k is a constant, the whole k/2 term is ignored in a big-O characterization, so the overall complexity is O(N).
