[site]: stackoverflow
[post_id]: 208292
[parent_id]: 
[tags]: 
Looking for pragmatic CMDB solution

I need a solution to catalog a number of applications in our company (more than 100 less than 1000). Right now we are using a spreadsheet and for each app we fill in name, short description, contact person and maintainer (internal or vendor). The puspose is to use this list for IT planning and incident management (impact estimation, etc.) In order to do this, as a minimum we need to start adding relations like 'depends on', 'part of' or 'supersedes'. It would be also useful if a future solution would allow tagging, adding indexed key-value pairs, comments and attachments to each entry. We will NOT want to discover all deployed instances of the applications, manage configuration settings, integrate monitoring have complex security settings and get burried in meta-meta-schemata. Anything that requires a dedicated administrator is already too heavy. We have the following non-functional requirements: Should allow multiple users to work concurrently on it Every change should be versioned Easy export to XML or some other easy to parse format So far we have considered the following: Put the spreadsheet on a Confluence wiki, where we can edit it via WebDav (and get locking and versioning) Use the Confluence wiki since it provides tagging, hierarchy, metadata and links. The only concern is that a wiki is too freeform and it may be difficult to extract the information should we decide to migrate to another system. DabbleDB.com - has everything we need, but unfortunately the data should not leave the firewall. OneCMDB.org - I am not sure how easy it is to capture ad-hock information and evolve the schema. Would appreciate experiences. Zenoss.com - haven't checked it yet. Looks too focused on network management. Lightweight registry (Mule Galaxy, WSO2 Registry) - not sure if this is the right tool for the job, though they offer a lot of the facilities we need (attributes, labels, versions, lifecycles). BMC Atrium - complex, corporate politics would require a number of unnecesarry procedures. Unless it offers some huge benefit, we'd rather stick with opensource. I'm interested on feedback/ideas from people that have successfully gone through a similar endeavor or have experience with some of the approaches above. Also, I would appreciate advice about common pitfalls and recommendations.
