[site]: stackoverflow
[post_id]: 5082352
[parent_id]: 5081755
[tags]: 
I am in a similar situation and have recently researched quite a few options. There are a few open source projects for AOP with .NET but most seems to be abandoned or not very active. PostSharp is by far the most mature of them. There is a community edition which is free and can be used for commercial development. Other static weavers (such as PostSharp): AspectDNG (abandoned) Gripper-LOOM (not updated since 2008) AOP.NET (seems to be abandoned) The other option would be to used Dynamic Proxies instead. There are a few libraries which uses this technique but with the exception of Spring.NET they seem to be more or less dead as well. Spring.NET AOP ( http://www.springframework.net/doc/reference/html/aop-quickstart.html ) AspectSharp Rapier-LOOM.NET I believe Spring.NET AOP can be used without the rest of the Spring.NET stack but I'm not entirely sure. If you don't mind to work on a lower level there are always Mono.Cecil which allows you to rewrite assemblies just like PostSharp does but I wouldn't recommend it. It will be a lot of work and hard to get right. Generating dynamic proxies with for example Castle.DynamicProxy or LinFu is probably a better approach then but it will still be quite a lot of plumbing to make everything to work. Also, unless you are already using an IoC-container you might want to consider that as it will make it much easier to inject the proxies where needed. Compared to using an OnMethodInvocationAspect or similar from PostSharp it will be a lot more work. I currently leaning towards using PostSharp (Community Edition) since it does everything I need and is very easy to use. Spring.NET seems somewhat interesting but a dynamic proxy based solution won't be quite as elegant or easy to use as PostSharp.
