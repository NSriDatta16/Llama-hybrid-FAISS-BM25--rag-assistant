[site]: stackoverflow
[post_id]: 3605450
[parent_id]: 3604713
[tags]: 
You are looking for disjoint sets so I would suggest a disjoint-set data structure and a find/union algorithm: see http://en.wikipedia.org/wiki/Disjoint-set_data_structure#Disjoint-set_forests The union operation is symmetric so you really only need to compare each element of the matrix with its neighbor to the right and its neighbor below applying the union operation when the compared elements have the same value. Sweep through each of the elements again using the find operation to count the size of each set keeping track of the largest. You will need storage for the counts. The computational complexity will be O(MN A -1 (MN,MN)) where A -1 is the Inverse Ackermann function, which one can consider a small constant (
