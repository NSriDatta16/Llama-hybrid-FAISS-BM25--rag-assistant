[site]: stackoverflow
[post_id]: 3932145
[parent_id]: 3932090
[tags]: 
The process is exactly the same as overload resolution: Func(myObject); The compiler checks all functions named "Func" and tries to match the static type of myObject to the parametrs (possibly using conversions, upcasting to base class). If it succeeds, then calls the appropriate function. If you realize that you can call extensions methods "in a normal way", then it clears up: static class MyExtensions { public static void MyFunc(this string arg) { // ... } } string a = "aa"; MyExtensions.MyFunc(a); // OK a.MyFunc(); // same as above, but nicer For the given type (here string), the compiler just looks for all static functions with "this" modifier on the first argument and tries to match the static type on the left of the . (in this example "a") with the parameter type in the function.
