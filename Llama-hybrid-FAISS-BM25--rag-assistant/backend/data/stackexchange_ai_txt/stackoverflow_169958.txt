[site]: stackoverflow
[post_id]: 169958
[parent_id]: 168897
[tags]: 
Of course, if all else fails... test it! Following gives (in "Release", at the console): Size 1000, Repeat 1000 int[,] set: 3460 int[,] get: 4036 (chk=1304808064) int[][] set: 2441 int[][] get: 1283 (chk=1304808064) So a jagged array is quicker, at least in this test. Interesting! However, it is a relatively small factor, so I would still stick with whichever describes my requirement better. Except for some specific (high CPU/processing) scenarios, readability / maintainability should trump a small performance gain. Up to you, though. Note that this test assumes you access the array much more often than you create it, so I have not included timings for creation, where I would expect rectangular to be slightly quicker unless memory is highly fragmented. using System; using System.Diagnostics; static class Program { static void Main() { Console.WriteLine("First is just for JIT..."); Test(10,10); Console.WriteLine("Real numbers..."); Test(1000,1000); Console.ReadLine(); } static void Test(int size, int repeat) { Console.WriteLine("Size {0}, Repeat {1}", size, repeat); int[,] rect = new int[size, size]; int[][] jagged = new int[size][]; for (int i = 0; i
