[site]: datascience
[post_id]: 32798
[parent_id]: 29710
[tags]: 
As mentioned by @Frankstr you want a tutorial on "character-level classification", not handwritten digit recognition as the one you have linked. Character-level classification is typically done with an RNN or a 1D CNN . See this implementation of Character-level Convolutional Networks for Text Classification for example. In order to convert your json data to x_train and y_train which can be fed to Keras, you can read it into a dictionary, extract keys and values separately, and binarize your class labels: import json from sklearn.preprocessing import LabelBinarizer with open('data.json', 'r') as f: train = json.load(f) y_train = list(train.values()) lb = LabelBinarizer() x_train = lb.fit_transform(list(train.keys())) Make sure your json is properly formed. The example you gave is missing commas after each value. It should be: {"candidate00001": "graceful ones.", "candidate00002":"One more,Marvelous said, sounding royally bored from his seat.", "candidate00003":"She tired,Joe said, though not unkindly." }
