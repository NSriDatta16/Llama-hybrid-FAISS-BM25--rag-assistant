[site]: stackoverflow
[post_id]: 891628
[parent_id]: 
[tags]: 
Calculating slope in negative, zero and positive domains

Imagine a sine wave oscillating about a zero line. My task is to calculate the slope at several random points along the wave using a fairly coarse x-axis scale. (yes, this has a real application) When the wave is in positive territory (above the zero line) slope can be calculated from: Slope = (y(n) / y(n-1)) - 1 This yields +ve slope values heading up and -ve heading down. The problem is that this must be switched when we are in -ve territory and then two more expressions are required when one of the values is zero for a total of four expressions that must be chosen programmatically with a conditional statement. I would like to find ONE expression that covers all four conditions as this is at the center of a heavily travelled algorithm and click count! I am sure this would be a trivial solution for a math genius, but to these tired eyes, it eludes me... Added: The "sine wave" is actually an MACD indicator that is derived from (random) price action of financial markets. An example would be here: http://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:moving_average_conve The slope (of the thick black line in the lower graph for example) is what I need to calculate here, defined simply as up or down (where heading up is positive) The problem is that both +ve and -ve slope can occur above and below zero. A slope calculation may also occur using increments that cross the zero line and at the zero line. It would be nice to find a solution that not involve a ton of IF statements... like, for example, shifting all the y values by a fixed amount, so they become positive and then calculating slope in the +ve region. I would need to pick a number that historically, y has never been below, like a couple of orders of magnitude for example (99) and then I could perform the offset and one slope calculation?
