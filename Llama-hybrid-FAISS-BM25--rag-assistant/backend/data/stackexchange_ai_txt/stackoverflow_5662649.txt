[site]: stackoverflow
[post_id]: 5662649
[parent_id]: 
[tags]: 
Entity Framework - how do I find out what's causing referential integrity bug?

Working with entity framework, my code uses LINQ to get a collection of objects that need deleting from the database. This collection is sometimes fairly large depending on the circumstances - 30 or 40 objects. I proceed to try and de-couple these objects from their related objects so that I can delete them, then I call context.DeleteObject() against each and then finally context.SaveChanges(). Most of the time this works perfectly well, especially when the collection of objects to delete is very small. However when its large, this code sometimes throws and error around referential integrity, specifically: The DELETE statement conflicted with the REFERENCE constraint \"FK_ServiceFeatureSchemaFragmentSchemaFragment_SchemaFragment\". The conflict occurred in database \"MyDataBase\", table \"dbo.ServiceFeatureSchemaFragmentSchemaFragment\".\r\n The statement has been terminated. So it seems that sometimes my objects have additional constraints that I'm failing to find and de-couple before deleting. What I'm struggling with is that because I'm working with a relatively large collection, I can't work out which one(s) are causing this to happen. I'm looking for suggestions as to how I can move forward by identifying the problem objects in some way, for example is there a way in which you can pre-determine whether objects in a collection are going to throw these sorts of error before you delete them? Or another approach? Suggestions gratefully received.
