[site]: stackoverflow
[post_id]: 1622437
[parent_id]: 1621733
[tags]: 
There are a number of issues I think. First, the persistence.xml looks a bit odd, I would have expected something like this: oracle.toplink.essentials.PersistenceProvider jdbc/sample model.Customer That is, a provider field, and the necessary fields to indicate that you're running in a server (jta-data-source). Of course, jta-data-source has to refer to a datasource that you configured in Glassfish. Next, I think it's quite odd that your application runs on ports 4848, normally that's the administrative listener for Glassfish, and I'd expect only the admin console to run there. Did you reconfigure your Glassfish's ports? One thing that puzzles me is how you got this far with such a configuration: it looks like Toplink thinks it has to contact a Derby running on localhost (port 1527 is standard for Derby) so maybe there's still some other persistence.xml floating around? Please check that. About tutorials: I use Glassfish a lot, but always with NetBeans. Here are a couple of links to tutorials from the Netbeans site, they might help you. http://www.netbeans.org/kb/docs/web/customer-book.html http://www.netbeans.org/kb/61/javaee/persistence.html It may be easiest to just install Netbeans, follow the tutorials and have a look at all the files that get generated, Netbeans automates the creation of a lot of this stuff and I have no idea what degree of assistance Eclipse gives you with these files. Here is a rather complete tutorial based on Eclipse: http://wiki.eclipse.org/EclipseLink/Examples/JPA/GlassFishV2_Web_Tutorial A last one: a tutorial for GF3 should get you going on GF2 as well, at least for these technologies (servlet and JPA). OK, GF3 comes with Eclipselink instead of Toplink Essentials, but these two are not that different at all. Edit: when I saw TLE trying to connect to a Derby on localhost I forgot the part about MySQL. This has been corrected now - references to how you should start Derby have been removed.
