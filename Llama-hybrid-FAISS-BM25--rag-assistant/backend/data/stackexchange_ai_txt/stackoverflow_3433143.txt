[site]: stackoverflow
[post_id]: 3433143
[parent_id]: 3433013
[tags]: 
The goal of unit testing should be to test the parts of the code that are likely to contain bugs. Achieving 100% test coverage should not be a goal, and AFAIK, TDD does not call it out as a goal. Creating exhaustive tests for code that is unlikely to contain significant bugs is a tedious waste of time both now, and as your system evolves. (In the future, duplicative unit tests are likely to be a source of meaningless regressions in the tests themselves that just waste someone's time to find and fix.) Finally, you and your management should always use common sense when applying some development methodology to a project. No methodology ever invented will be a perfect fit to all problems / projects. Part of your job is to spot the situations where the methodology is not working optimally ... and if necessary adapt, or even abandon it. And in this case, the fact that the way that you/your project is using TDD is driving you nuts is a clear sign that something is not right .
