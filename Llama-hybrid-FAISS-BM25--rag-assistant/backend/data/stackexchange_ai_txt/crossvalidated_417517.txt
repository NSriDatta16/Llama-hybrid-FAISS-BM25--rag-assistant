[site]: crossvalidated
[post_id]: 417517
[parent_id]: 
[tags]: 
Predicting walking routes using PyTorch

I'm working on a project that uses sensors to monitor a persons location. These devices simply record the current GPS coordinates and ping them back to a server (the coordinates will then be converted to a simple-grid representation to account for noise in GPS). What I want to try and do is after recording a users routes, train a neural network to predict the next coordinates, i.e. take the example below where a user repeats only two routes over time, Home->A and Home->B . I want to implement a model that once trained, could then be fed with real-time coordinates e.g. (15, 4), (14, 4), (13, 4) and predict that the next location is (12, 4) , or with the other route (15, 10), (15, 11), (15, 12) and predict that (14, 12) is next. I had success using LSTMs in Keras before, but that was essentially a regression problem e.g. yearly sales. I initially assumed an RNN/LSTM approach would be best for this route prediction, but now I'm not so sure since each route is discreet, how would I decided what part of the sequence is designated input and which as output for training. Any ideas, guidance on how to tackle this problem would be really appreciated! I appreciate that there might be better non-neural net approaches, but I really want to try and use deep learning to tackle this. I'm currently working in PyTorch if that helps in terms of implementation options. Note: I wasn't sure if this was a better fit here or Stack Overflow, so please shout if it should be moved.
