[site]: crossvalidated
[post_id]: 234235
[parent_id]: 
[tags]: 
In bnlearn, cpquery gives random probablities

Running the example from bnlearn documentation in R data(gaussian.test) fitted = bn.fit(hc(gaussian.test), gaussian.test) # the result should be around 0.04. cpquery(fitted, event = ((A >= 0) & (A = 0) & (B When I run the last command multiple times, I get different probabilities. cpquery(fitted, event = ((A >= 0) & (A = 0) & (B = 0) & (A = 0) & (B = 0) & (A = 0) & (B = 0) & (A = 0) & (B = 0) & (A = 0) & (B = 0) & (A = 0) & (B = 0) & (A = 0) & (B = 0) & (A = 0) & (B = 0) & (A = 0) & (B I am new to Bayesian Network, but shouldn't the probabilities be constant for an event. It is for continuous variable, so ideally its calculating the integrals form the joint probability functions. Its not like the gaussian data is generated every time a query is run. The data is generated in the first line and then reused. The manual says that the answer should be around 0.04, but I am also getting 0.049 and 0.029. I am getting this on other queries to for my own data. So was wondering if anyone has an answer.
