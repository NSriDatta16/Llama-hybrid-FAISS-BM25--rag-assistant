[site]: stackoverflow
[post_id]: 2033404
[parent_id]: 2026071
[tags]: 
These are quite incompatible topics. An expert system relies on a set of rules and an inferential engine; the set of rules is given by the knowledge engineer. The rules are "if-then" statements, easy to be read/corrected/maintained etc. A neural network, on the other hand, is rather perceived as a black box. The weights and neurons adapt based on the input/output patterns, but these weights are not represented as rules. There is no inferential engine, as the input is used in various computations to provide the output. There are few cases in which you can extract some rules from NN (see for example rule extraction for Fuzzy ARTMAP ); but, from what I know, such approaches are rarely encountered in practice. It is about to reverse engineering of knowledge embedded into NNs, a process highly dependent on the concrete architecture of the network. Another big difference: a NN can be used exclusively for numerical input (non-numeric input must be converted to numbers, but this is sometimes a non-natural process) while an expert system accepts nominal values.
