[site]: stackoverflow
[post_id]: 5025523
[parent_id]: 5023550
[tags]: 
How you have configured your solution has nothing to do with DDD and won't effect the success of your project. Good code that is organized badly is much better than bad code that is organized well. Projects have a productivity and complexity cost associated with them. Right now you are agonizing over details which don't really matter. More projects also equals slower compile times which increases context shifting. Try reading a book and pausing for 30 seconds every page. New projects should be created for either deployment or code sharing purposes. Good reasons include if the domain is shared between two front or if you have a monstrous deployment strategy ( 1000s of machines ) and megabytes still matter. Once you simplify the rules for new projects the decisions start to be made naturally as the codebase matures and new requirements pops up. You are essentially making physical decisions at the last possible moment. This is good. Don't BUFD this when you have features and code to write! Not sure why this question is tagged MVC but the MVC codebase is pretty lean with only 1 main project. Compiles fast and is really easy to navigate around.
