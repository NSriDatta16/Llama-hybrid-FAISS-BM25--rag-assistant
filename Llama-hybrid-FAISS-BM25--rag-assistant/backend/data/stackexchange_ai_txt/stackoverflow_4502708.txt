[site]: stackoverflow
[post_id]: 4502708
[parent_id]: 4502612
[tags]: 
You mean something like this? http://jsfiddle.net/CSvjw/ $('input[type=text]').click(function() { $('input[type=file]').trigger('click'); }); $('input[type=file]').change(function() { $('input[type=text]').val($(this).val()); }); Note, though, that the value given by the file input is fake for security reasons. If you want to just have the file name show up, you can cut out the slashes. Here's an example of how to do it using a string split and an array pop: http://jsfiddle.net/CSvjw/1/ $('input[type=text]').click(function() { $('input[type=file]').trigger('click'); }); $('input[type=file]').change(function() { var vals = $(this).val(), val = vals.length ? vals.split('\\').pop() : ''; $('input[type=text]').val(val); }); You can adjust this further to account for systems that use a forward slash as the directory separator. It's also important to note that if you do this, you'll lose the functionality of many modern browsers where users can drag files from their computer directly onto a file input. If I were you, I'd embrace that paradigm by styling the file input rather than trying to turn a text input into something that it is not.
