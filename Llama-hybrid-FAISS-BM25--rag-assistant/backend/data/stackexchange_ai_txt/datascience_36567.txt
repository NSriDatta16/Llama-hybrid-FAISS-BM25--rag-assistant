[site]: datascience
[post_id]: 36567
[parent_id]: 
[tags]: 
TensorFlow restored model returning constant negative prediction

I've trained a CNN model using Google Colab with TensorFlow. It is a pretty basic CNN: def convolutional_neural_network(x): weights = {'W_conv1': tf.Variable(tf.random_normal([5, 5, 1, 32])), 'W_conv2': tf.Variable(tf.random_normal([5, 5, 32, 32])), 'W_conv3': tf.Variable(tf.random_normal([5, 5, 32, 64])), 'W_conv4': tf.Variable(tf.random_normal([5, 5, 64, 128])), 'W_conv5': tf.Variable(tf.random_normal([5, 5, 128, 128])), 'W_fc': tf.Variable(tf.random_normal([4 * 2 * 128, 1024])), 'out': tf.Variable(tf.random_normal([1024, n_classes]))} biases = {'b_conv1': tf.Variable(tf.random_normal([32])), 'b_conv2': tf.Variable(tf.random_normal([32])), 'b_conv3': tf.Variable(tf.random_normal([64])), 'b_conv4': tf.Variable(tf.random_normal([128])), 'b_conv5': tf.Variable(tf.random_normal([128])), 'b_fc': tf.Variable(tf.random_normal([1024])), 'out': tf.Variable(tf.random_normal([n_classes]))} x = tf.reshape(x, shape=[-1, 110, 42, 1]) conv1 = tf.nn.relu(conv2d(x, weights['W_conv1']) + biases['b_conv1']) conv1 = maxpool2d(conv1) conv2 = tf.nn.relu(conv2d(conv1, weights['W_conv2']) + biases['b_conv2']) conv2 = maxpool2d(conv2) conv3 = tf.nn.relu(conv2d(conv2, weights['W_conv3']) + biases['b_conv3']) conv3 = maxpool2d(conv3) conv4 = tf.nn.relu(conv2d(conv3, weights['W_conv4']) + biases['b_conv4']) conv4 = maxpool2d(conv4) conv5 = tf.nn.relu(conv2d(conv4, weights['W_conv5']) + biases['b_conv5']) conv5 = maxpool2d(conv5) fc = tf.reshape(conv5, [-1, 4 * 2 * 128]) fc = tf.nn.relu(tf.matmul(fc, weights['W_fc']) + biases['b_fc']) fc = tf.nn.dropout(fc, keep_rate) output = tf.add(tf.matmul(fc, weights['out']), biases['out'], name='pred') return output And when I test the accuracy it returns ~80%. So I saved the model and restored in my computer to actually use it in practice. Like so: with tf.Session() as sess: new_saver = tf.train.import_meta_graph('cnn_model.meta') new_saver.restore(sess, tf.train.latest_checkpoint('./')) graph = tf.get_default_graph() pred1 = graph.get_tensor_by_name("pred:0") print_pred = tf.Print(pred1, [pred1]) pred = tf.greater(print_pred, 0.5) x = graph.get_tensor_by_name("x:0") with driver as dv: while(True): image = np.array(sct.grab(coordinates)) image = image[::, 75:615] image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY) image = cv2.resize(image, (0, 0), fx=0.1, fy=0.2) first_image = np.array(image, dtype='float').reshape(1, 4620) if(sess.run(pred, {x: first_image})): actions.send_keys(Keys.SPACE).perform() The output of the CNN is turned into a binary "press or not press" the SPACE key. My problem is, when I run this, the prediction always returns this value: -0.21995841 Which is strange given that I'm feeding very similar images as the test and train data sets. Can someone shed a light on what I'm doing wrong? Thanks in advance!
