[site]: stackoverflow
[post_id]: 3773612
[parent_id]: 3771424
[tags]: 
Here is a functional solution: text = """Joe Sam Bob 1 2 3 2 1 3 NA 2 3 3 5 NA""" def avg( lst ): """ returns the average of a list """ return 1. * sum(lst)/len(lst) # split that text parts = [line.split() for line in text.splitlines()] #remove the headers names = parts.pop(0) # zip(*m) does something like transpose a matrix :-) columns = zip(*parts) # convert to numbers and leave out the NA numbers = [[int(x) for x in column if x != 'NA' ] for column in columns] # all left is averaging averages = [avg(col) for col in numbers] # and printing for name, x in zip( names, averages): print name, x I wrote a lot of list comprehensions here so you can print out intermediate steps, but those can be generators of cause.
