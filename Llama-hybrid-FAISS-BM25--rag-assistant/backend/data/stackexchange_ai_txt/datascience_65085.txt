[site]: datascience
[post_id]: 65085
[parent_id]: 65082
[tags]: 
Step by step. Since you say its seperated into C-customer and A-agent I am going to assume its labeled (some of the questions could be solved unsupervised also) Who is the customer and who is the agent? Simple binary classification. Find suitable numerical model representation of text and perform classification. Starting reference Customer Name Named entity recognition - NER example how to use it: import nltk from nltk.tag.stanford import NERTagger st = NERTagger('stanford-ner/all.3class.distsim.crf.ser.gz', 'stanford-ner/stanford-ner.jar') text = "blablabla" for sent in nltk.sent_tokenize(text): tokens = nltk.tokenize.word_tokenize(sent) tags = st.tag(tokens) for tag in tags: if tag[1]=='PERSON': print tag` The topic of conversation Start with these two approaches: LDA and LSA Promises made by the operator to the customer (for example, "I call back tomorrow") General approach (its plausible, needs a bit of work by you) But lets say you use word embeddings, all of the sentences that have promises will be vectors that are close to each other in this high-dimensional space. You can limit your system to return all sentences that fall into this cluster in the space. Negative Sentiment (if there is something in the conversation that the subscriber is not happy with) Simply just look at this introduction to Emotion AI Nutshell: You already have pre-trained models that can model positive-neutral-negative sentiment in the given text. Use the recources.
