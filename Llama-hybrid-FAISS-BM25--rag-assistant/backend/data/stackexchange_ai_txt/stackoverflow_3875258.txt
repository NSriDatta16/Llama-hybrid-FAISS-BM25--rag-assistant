[site]: stackoverflow
[post_id]: 3875258
[parent_id]: 3874063
[tags]: 
According to the PHP manual, yes- strpos() is the quickest way to determine if one string contains another. Note: If you only want to determine if a particular needle occurs within haystack, use the faster and less memory intensive function strpos() instead. This is quoted time and again in any php.net article about other string comparators (I pulled this one from strstr() ) Although there are two changes that should be made to your statement. if (strpos($storage->getMessage($i),'chocolate') !== FALSE) This is because if(0) evaluates to false (and therefore doesn't run), however strpos() can return 0 if the needle is at the very beginning (position 0) of the haystack. Also, removing htmlentities() will make your code run a lot faster. All that htmlentities() does is replace certain characters with their appropriate HTML equivalent. For instance, it replaces every & with &amp; As you can imagine, checking every character in a string individually and replacing many of them takes extra memory and processor power. Not only that, but it's unnecessary if you plan on just doing a text comparison. For instance, compare the following statements: strpos('Billy & Sally', '&'); // 6 strpos('Billy &amp; Sally', '&'); // 6 strpos('Billy & Sally', 'S'); // 8 strpos('Billy &amp; Sally', 'S') // 12 Or, in the worst case, you may even cause something true to evaluate to false. strpos(' In order to circumvent this you'd end up using even more HTML entities. strpos('&lt;img src...', '&lt;'); // 0 But this, as you can imagine, is not only annoying to code but gets redundant. You're better off excluding HTML entities entirely. Usually HTML entities is only used when you're outputting text. Not comparing.
