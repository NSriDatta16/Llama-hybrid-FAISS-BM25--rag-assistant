[site]: crossvalidated
[post_id]: 186268
[parent_id]: 
[tags]: 
Dimensionality reduction and dynamic weighing of large set of correlated features

I have a relatively large number of scalar-valued features (in the order of 1000), each given as an equidistant time series. These features are predictors of a target quantity (the features use different forecasting techniques, but for the present purpose can be considered black boxes). The problems I want to tackle: How do I find the combination (including weights) of the features that yields the best prediction of the target quantity? I'd categorize possible approaches in the following increasing order of complexity: (a) Linear combination with constant weights (regression problem: OLS, LASSO, ...?) (b) Linear combination with dynamically updated weights (perhaps based on recent prediction error; maybe something based on Kalman filter?) (c) Non-linear techniques (neural nets, ...) As many of my features are quite correlated, I want to reduce the number of features that I'm using for my forecasting. How to find the smallest set of relevant features for a good prediction? I've considered regression for (1a) (regressing my features onto the prediction target). I could use t-statistic of the coefficients or LASSO to judge the relevance of a predictor (although I've heard that LASSO is not a good approach for a very large number of predictors). Am I on the right track, or what should I look at? This would give me constant weights. But as not all predictors work good throughout the whole prediction period, it's probably better to use dynamic weights and include the recent prediction error into the weighing scheme. Any pointers on suitable techniques for (1b) and (1c)? I've thought of using PCA for (2), but this doesn't seem right intuitively, as it doesn't reduce the number of my predictors, just groups them differently into eigenvectors. I'm aware of feature-selection techniques such as forward selection or backward elimination. Would these the a good choice, or can I do something smarter given the structure of my problem?
