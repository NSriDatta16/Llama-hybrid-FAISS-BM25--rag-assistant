[site]: stackoverflow
[post_id]: 3062654
[parent_id]: 3062221
[tags]: 
Components in Swing have to be laid out in a certain order. You start with a JFrame. The only components that are placed in the JFrame are a JMenuBar and a JPanel. You do not add any other components in a JFrame. You add components in a JPanel. Here's Nick's code, reorganized to define the components in the correct order. I used GridLayout because it was quicker. You should use GridBagLayout, as Nivas said. public class Bar { private static final long serialVersionUID = 1L; public Bar(final JFrame frame) { JMenuBar menuBar = buildMenuBar(); frame.setJMenuBar(menuBar); JPanel masterPanel = new JPanel(new GridLayout(2, 1)); JPanel pane1 = new JPanel(new GridLayout(3, 1)); pane1.add(new JLabel("Welcome to the CIT Test Program ")); pane1.add(new JLabel("Please select which Test Package from the list below.")); JButton button = new JButton("Click Me"); pane1.add(button); JPanel pane2 = new JPanel(new GridLayout(1, 1)); String[] tests = { "A+ Certification", "Network+ Certification", "Security+ Certification", "CIT Full Test Package" }; JComboBox packageChoice = new JComboBox(tests); pane2.add(packageChoice); masterPanel.add(pane1); masterPanel.add(pane2); frame.add(masterPanel); frame.pack(); frame.setVisible(true); // frame.setSize(250, 250); } public JMenuBar buildMenuBar() { JMenuBar menuBar = new JMenuBar(); JMenu fileMenu = new JMenu("File"); JMenu editMenu = new JMenu("Edit"); JMenu helpMenu = new JMenu("Help"); menuBar.add(fileMenu); menuBar.add(editMenu); menuBar.add(helpMenu); JMenuItem newMenu = new JMenuItem("New (Ctrl+N)"); JMenuItem openMenu = new JMenuItem("Open (Ctrl+O)"); JMenuItem saveMenu = new JMenuItem("Save (Ctrl+S)"); saveMenu.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { // TODO Auto-generated method stub } }); JMenuItem exitMenu = new JMenuItem("Exit (Ctrl+W)"); JMenuItem cutMenu = new JMenuItem("Cut (Ctrl+X)"); JMenuItem copyMenu = new JMenuItem("Copy (Ctrl+C)"); JMenuItem pasteMenu = new JMenuItem("Paste (Ctrl+V)"); JMenuItem infoMenu = new JMenuItem("Help (Ctrl+H)"); fileMenu.add(newMenu); fileMenu.add(openMenu); fileMenu.add(saveMenu); fileMenu.add(exitMenu); editMenu.add(cutMenu); editMenu.add(copyMenu); editMenu.add(pasteMenu); helpMenu.add(infoMenu); return menuBar; } } I moved the JMenuBar code into its own method so, hopefully, the rest of the code is easier to understand. I have a master JPanel, that all of the other components are added to. I used another JPanel to hold the two JLabels and the JButton. I used a third JPanel to hold the JComboBox. The basic pattern is as follows: Define the JPanel. Define the components. Add the components to the JPanel. Add the JPanel to the master JPanel Add the master JPanel to the JFrame.
