[site]: stackoverflow
[post_id]: 4679539
[parent_id]: 
[tags]: 
What should I use Sleep or Timer

I have two alternative using timer or using sleep, I need to call a method every 3 seconds after this method is finished, I wrote basic example to demonstrate what I mean: public static void Main() { new Thread(new ThreadStart(fooUsingSleep)).Start(); callToMethodAfterInterval(new Action (fooUsingTimer), 3000); } public static void fooUsingSleep() { Console.WriteLine("Doing some consuming time work using sleep"); Thread.Sleep(3000); fooUsingSleep(); } public static void fooUsingTimer(object dummy, ElapsedEventArgs dummyElapsed) { Console.WriteLine("Doing some consuming time work usning timer"); callToMethodAfterInterval(new Action (fooUsingTimer), 3000); } public static void callToMethodAfterInterval(Action inMethod, int inInterval) { System.Timers.Timer myTimer = new System.Timers.Timer(); myTimer.Elapsed += new ElapsedEventHandler(inMethod); myTimer.Interval = inInterval; myTimer.AutoReset = false; myTimer.Start(); } So my questions are 1)Can I wrote the code with the timer more elegant? Means removing the call to the callToMethodAfterInterval method from fooUsingTimer, make the timer one or two lines, and remove the dummy variables from the declaration of fooUsingTimer? 2)I understand sleep isn't busy waiting (http://www.codeproject.com/KB/threads/ThreadingDotNet.aspx) So I don't found justification to use the timer option here, because the sleep is more simple, what is better to use, the timer version or the sleep one? 3)I know that Timers.timer is thread safe, does it can help me in the behavior I want to implement? Thanks.
