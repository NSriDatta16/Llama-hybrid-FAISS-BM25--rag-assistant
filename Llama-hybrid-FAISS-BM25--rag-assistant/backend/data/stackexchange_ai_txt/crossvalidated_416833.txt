[site]: crossvalidated
[post_id]: 416833
[parent_id]: 
[tags]: 
Parameter not estimating due to singular information matrix and mutually exclusive categories in R

I have some data that has two categorical variables that are somewhat correlated (there is a row and a column of zeros where the levels are mutually exclusive), similar to the tabulation below. TREATMENT TREATMENT_DURATION no_treatment treatment_1 treatment_2 treatment_3 no_treatment a 0 0 0 treatment_duration_1 0 b c d treatment_duration_2 0 e f g treatment_duration_3 0 h i j treatment_duration_4 0 k l m treatment_duration_5 0 n p q I'd like to create a logistic regression model using the treatment and treatment_duration variables so that the model would take the form $$\text{Y} \sim \text{treatment} + \text{treatment_duration} + \epsilon $$ where no_treatment is the reference level for both variables. The model would then look like: $$\text{Y} \sim \beta_0 + \beta_1 \text{t1} + \beta_2 \text{t2} + \beta_3 \text{t3} + \beta_4 \text{td1} + ... + \beta_7 \text{td4} + \beta_8 \text{td5} + \epsilon$$ where "td" = "treatment duration" and "t" = "treatment." I was hoping that by formulating the model this way, there would result in no collinearity issues with the ability to estimate the "no treatment" effect (estimated by $\beta_0$ ). When I run this model in R using both rms::lrm and stats::glm , a single parameter won't estimate (say, $\beta_8$ ). rms::lrm provides the error that there is a singular information matrix with the offending variable td8. stats::glm runs the model without error, providing NA for the offending variable with no entry in the covariance matrix. My question is: why would this happen? Why is the model not able to estimate all parameters? I think I'm missing something here - probably some theory in parameter estimation and information matrices. I've created a reproducible example in R: library(dplyr) library(rms) dd % mutate(treatment_duration = ifelse(treatment == 1, 1, sample(2:6, size = n(), prob = c(.35, 0.35, 0.2, 0.05, 0.05), replace = T))) %>% mutate(treatment_duration = factor(treatment_duration, levels = c("1","2","3","4","5","6"), labels = c("No treatment","1","2","3","4","5"))) %>% mutate(treatment = factor(treatment, levels = c("1","2","3","4"), labels = c("No treatment","1","2","3"))) table(dd $treatment, dd$ treatment_duration, useNA = "always", dnn = c("Treatment", "Treatment duration")) Treatment duration Treatment No treatment 1 2 3 4 5 No treatment 3006 0 0 0 0 0 0 1 0 5575 5566 3213 838 788 0 2 0 210 229 107 34 23 0 3 0 157 117 91 25 21 0 0 0 0 0 0 0 0 table(dd $y, dd$ treatment) No treatment 1 2 3 0 1486 8004 311 203 1 1520 7976 292 208 table(dd $y, dd$ treatment_duration) No treatment 1 2 3 4 5 0 1486 2987 2962 1713 440 416 1 1520 2955 2950 1698 457 416 lrm(y ~ treatment + treatment_duration, data = dd) singular information matrix in lrm.fit (rank= 8 ). Offending variable(s): treatment_duration=5 Error in 1:ns : argument of length 0 In addition: Warning message: In lrm(y ~ treatment + treatment_duration, data = dd) : Unable to fit model using “lrm.fit” glm(y ~ treatment + treatment_duration, data = dd, family = "binomial") Call: glm(formula = y ~ treatment + treatment_duration, family = "binomial", data = dd) Coefficients: (Intercept) treatment1 treatment2 treatment3 treatment_duration1 0.022622 -0.021672 -0.081468 0.006154 -0.010344 treatment_duration2 treatment_duration3 treatment_duration4 treatment_duration5 -0.003245 -0.008613 0.038450 NA Degrees of Freedom: 19999 Total (i.e. Null); 19992 Residual Null Deviance: 27730 Residual Deviance: 27720 AIC: 27740 ```
