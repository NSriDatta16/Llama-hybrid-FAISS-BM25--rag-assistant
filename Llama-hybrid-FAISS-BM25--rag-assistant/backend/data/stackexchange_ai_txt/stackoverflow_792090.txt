[site]: stackoverflow
[post_id]: 792090
[parent_id]: 792050
[tags]: 
Sounds like an issue of trade-off. It depends on the emphasis: Speed of rendering Use of resources Speed of rendering is going to be an issue of how long the process of the blending images is going to take to render to a screen-drawable image. If the blending process takes too long (as transparency effects may take a long time compared to regular opaque drawing operations) then pre-rendering the transition may be a good approach. Of course, pre-rendering means that there will be multiple images either in memory or disk storage which will have to be held onto. This will mean that more resources will be required for temporary storage of the transition effect. If resources are scarce, then doing the transition on-the-fly may be more desirable. Additionally, if the images are on the disk, there is going to be a performance hit due to the slower I/O speed of data outside of the main memory. On the issue of "saving the transition images with a lower quality" -- what do you mean by "lower quality"? Do you mean compressing the image? Or, do you mean having smaller image? I can see some pros and cons for each method. Compress the image Pros: Per image, the amount of memory consumed will be lower. This would require less disk space, or space on the memory. Cons: Decompression of the image is going to take processing. The decompressed image is going to take additional space in the memory before being drawn to the screen. If lossy compression like JPEG is used, compression artifacts may be visible. Use a smaller image Pros: Again, per image, the amount of memory used will be lower. Cons: The process of stretching the image to the screen size will take some processing power. Again, additional memory will be needed to produce the stretched image. Finally, there's one point to consider -- Is rendering the transition in real-time really not going to be fast enough? It may actually turn out that rendering doesn't take too long, and this may all turn out to be premature optimization . It might be worth a shot to make a prototype without any optimizations, and see if it would really be necessary to pre-render the transition. Profile each step of the process to see what is taking time. If the performance of on-the-fly rendering is unsatisfactory, weigh the positives and negatives of each approach of pre-rendering, and pick the one that seems to work best.
