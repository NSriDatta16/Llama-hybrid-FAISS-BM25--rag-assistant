[site]: stackoverflow
[post_id]: 4467645
[parent_id]: 4425418
[tags]: 
I would suggest one of the PluginManager style plugin methods with C++. I'm writing this from 2+ year old memory so it's meant only as a loose guide, not a definitive answer. I have included a link to a site I used to get started on a project like you describe a few years ago. It worked well with the 40+ plugins we had available. A search for [DLL plugin C++ class] should find several of the sites for you if you don't like the one I linked. You will have to correct for your environment/compiler/OS etc. In essence, assume you want the ability to Open, Read, Write and Close the serial ports in your plugins. Create a pure virtual base class (Acts as something declared as an interface in Java): /* This is the basic plugin header file that every plugin DLL has to include Use your compilers pragmas/keywords to export the entire class from the DLL In Microsoft land the keywords are _declspec( dllexport ) to export the class from the base DLL and __declspec( dllimport ) to import the class into other code. I'm using the MS keywords here because I don't remember how this is done in other compilers. :) */ #if BUILDING_BASE_PLUGIN /* You're compiling the DLL that exports the Plugin Base #define BASE_DLL_EXPORT declspec( dllexport ) #else /* You're compiling code that uses the plugin base #define BASE_DLL_EXPORT declspec( dllimport ) #endif class DLL_EXPORT SerialPortPluginBase { public: enum SerialPortPluginError{ SUCCESS = 0, ERROR_1, ERROR_2, ERROR_ETC }; virtual SerialPortPluginError Open( /*Parameters*/ ) = 0; virtual SerialPortPluginError Read( /*Parameters*/ ) = 0; virtual SerialPortPluginError Write( /*Parameters*/ ) = 0; virtual SerialPortPluginError Close( /*Parameters*/ ) = 0; static std::string pluginName = "SerialPortPluginBase"; static int version; }; In each plugin, implement the interface based on the above class as well as a method to register/unregister the DLL with a plugin manager (see the link below). Each plugin should go in a separate DLL/SO. See this site for a complete example. Hope this helps. :)
