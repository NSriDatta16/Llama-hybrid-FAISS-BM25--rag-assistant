[site]: crossvalidated
[post_id]: 161189
[parent_id]: 
[tags]: 
Train a Neural Network to distinguish between even and odd numbers

Question: is it possible to train a NN to distinguish between odd and even numbers only using as input the numbers themselves? I have the following dataset: Number Target 1 0 2 1 3 0 4 1 5 0 6 1 ... ... 99 0 100 1 I trained a NN with two input neurons (one being the variable Number, the other being a bias neuron), nine neurons in the hidden layer and one output neuron using a very simple genetic algorithm: at each epoch, two sets of weights "fight" against each other; the one with the highest error loses and it's replaced by a modified version of the winner. The script easily solve simple problems like the AND, the OR and the XOR operators but get stuck while trying to categorise odd and even numbers. Right now the best it managed to do is to identify 53 numbers out of 100 and it took several hours. Whether I normalize or not the inputs seems to make no difference. If I wanted to cheat I could just pre-processed the data and feed % 2 to the NN as an input but I don't want to do that; NN should be able to approximate every function, including the modulo operator (I believe ). What am I doing wrong?
