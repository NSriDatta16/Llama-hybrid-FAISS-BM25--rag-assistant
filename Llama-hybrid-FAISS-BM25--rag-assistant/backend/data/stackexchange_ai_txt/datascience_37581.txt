[site]: datascience
[post_id]: 37581
[parent_id]: 
[tags]: 
Multivariate, multistep forecasting with LSTM

I want to use an RNN with LSTM to forecast multiple steps into the future, based on multiple inputs. I have some ideas for different ways to approach this, but I'm afraid I'm missing the "right way" to do it. Please let me know if any of these approaches are generally better or worse than others, or if I'm missing any. More specifically, I have ~1,000,000 periods of financial data to train on: a stock closing price (X), the value of stock indicator 1 (Y), and the value of stock indicator 2 (Z). I want to train on that data and predict the closing price (X) up to and including 10 periods in the future. Here's how I can imagine approaching this: 1. Separate models for predicting each input value Have one model that predicts the next X based on the previous X, Y and Z. Have a second model that predicts the next Y based on the previous X, Y, and Z. Have a third model that predicts the next Z based on the previous X, Y, and Z. Use the predictions from these three models as the inputs for the subsequent step. 2. Separate models with different period width Train one model on every period in the training data, use it to predict one period into the future. Train a second model on every second period in the training data, use it to predict two periods into the future. Train a third model on every third period in the training data, use it to predict three periods into the future. Etc 3. Train one model that predicts a vector of ten values, each representing the predicted X at each period up to ten periods into the future. 4. Train one model that predicts a vector of three values, each representing the predicted next X, Y, and Z. Use them as inputs for the subsequent step.
