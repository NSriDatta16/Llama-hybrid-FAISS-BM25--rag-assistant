[site]: stackoverflow
[post_id]: 4626949
[parent_id]: 4626447
[tags]: 
First, I'd like to recommand SLak's answer. This really is the answer to your question. I understand your trepidation about using large toolsets like EF, but it's really the right solution and doesn't have as much of a learning curve as you might think. There's very little reason to go straight to things like a DataReader anymore. EF is part of .NET and I can't encourage you enough to use it. Likewise, don't go down the road of creating your own ORM of sorts with decorations and automatic code generation and the like. Do. Not. Do. It. In the end, you'll spend as much time maintaining that as you do your business logic, and you'll kick yourself for not using the work of many people who are a lot smarter than I am and probably you, as well ;) (No offense, of course). If you're looking for quick-and-dirty, then you need to go quick-and-dirty. That being said, using a DataReader is the most lightweight method for reading data from the database. I'm not sure exactly how to answer your first question, other than to give you an example of using a DataReader in C#. using(DbConnection conn = new SqlConnection("connection string"0) { conn.Open(); using(DbCommand cmd = conn.CreateCommand()) { cmd.CommandType = CommandType.Text; cmd.CommandText = "sql statement"; using(IDataReader reader = cmd.ExecuteReader()) { while(reader.Read()) { var column1 = reader["column1"]; } } } } The while statement will execute for every row retrieved from the reader, though you can certainly short-circuit that loop if need be and not parse the entire result set.
