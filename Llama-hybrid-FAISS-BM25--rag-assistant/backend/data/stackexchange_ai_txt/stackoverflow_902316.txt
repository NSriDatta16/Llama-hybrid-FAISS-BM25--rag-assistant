[site]: stackoverflow
[post_id]: 902316
[parent_id]: 704758
[tags]: 
Prototype's Element library is one of the most powerful query libraries in terms of the methods. I recommend you to check out the API. A few hints: Checking visibility can be a pain, but you can use the Element.getStyle() method and Element.visible() methods combined into a custom function. With getStyle() you can check the actual computed style. I don't know exactly what you mean by "underneath" :) If you meant by it has a specific ancestor, for example, a wrapper div, you can use Element.up(cssRule) : var child = $("myparagraph"); if(!child.up("mywrapper")){ // I lost my mom! } else { // I found my mom! } If you want to check the siblings of the child element you can do that too: var child = $("myparagraph"); if(!child.previous("mywrapper")){ // I lost my bro! } else { // I found my bro! } Again, Element lib can help you if I understand correctly what you mean :) You can check the actual dimensions of the viewport and the offset of your element so you can calculate if your element is "off screen". Good luck! I pasted a test case for prototypejs at http://gist.github.com/117125 . It seems in your case we simply cannot trust in getStyle() at all. For maximizing the reliability of the isMyElementReallyVisible function you should combine the following: Checking the computed style (dojo has a nice implementation that you can borrow) Checking the viewportoffset (prototype native method) Checking the z-index for the "beneath" problem (under Internet Explorer it may be buggy)
