[site]: crossvalidated
[post_id]: 488830
[parent_id]: 488816
[tags]: 
In R, begin by getting 60 numbers that sum to 1000: set.seed(823) x = sort(rnorm(60, 29, 4)) x = 1000*x/sum(x) sum(x) [1] 1000 So the 60 elements of x sum to exactly 1000, and they are sorted in ascending order of size. Now we need to get rid of a few of the smallest numbers at the start, as @StephanKolassa has suggested, so the sum will be near 900. Here is an automated method. Begin by finding the cumulative sums s of numbers in x , and then find where the cumulative sum first exceeds 100. For my sequence that is at the 8th element. s = cumsum(x) i = which.max(s > 100); i [1] 8 s[i] [1] 102.5158 Now the numbers in x beyond the 8th position will sum to about 900, as required. y = x[(i+1):60] sum(y) [1] 897.4842 There may be more elegant R code that does the same thing, but I hope this method is transparent.
