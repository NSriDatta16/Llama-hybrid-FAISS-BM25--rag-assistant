[site]: crossvalidated
[post_id]: 509552
[parent_id]: 509492
[tags]: 
My first question is, if we can have an auto forecast, why would we do a hierarchical forecast that requires high computation cost. Hierarchical forecasting from an applied perspective would be very important if you need all your forecasts at different levels to be 'coherent' and it can increase forecast accuracy. For example, if you are forecasting for products which go to multiple countries which have distribution centers which are assigned stores you then have the ability to forecast at just the whole item level or all the way down to the most granular level which is the store. So if you want forecasts at all levels you have a few options: Forecast at the highest level and disaggregate based on rules down to the lower levels Forecast at the lowest level and aggregate up Forecast in the middle and aggregate up and disaggregate down Forecast at every level Forecast at every level but adjust it using a hierarchical approach Every approach has strengths and weaknesses which the hierarchical tries to overcome, for example if you forecast at each level then when you hand off your item level forecast to the financial department and your DC level forecast to supply chain they actually won't add up. This is where the 'coherent' part comes in. Hierarchical forecasting will try to rectify differences at different levels so everything adds up. Additionally, we can leverage forecasts at potentially more stable levels which can increase accuracy at the lower levels. So really it just depends, do you need forecasts at every level? If not I would just do the auto route or better yet use the several models and hand them off to an ensemble method. My second question is about deployment. what's your recommandations to deploy this. What do you need it to do? Do you need a graphical interface for it? Do you just need numbers pushed to a database? How many items? What's the update frequency? I mean, if you got like 20 items then just run it on your laptop and push it to an excel spread sheet. If you got 1 million then you'll probably need some distributed solution.
