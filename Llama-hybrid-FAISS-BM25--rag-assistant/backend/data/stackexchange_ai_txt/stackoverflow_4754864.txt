[site]: stackoverflow
[post_id]: 4754864
[parent_id]: 4754783
[tags]: 
If the Base class requires the values to do its thing, then it should be explicit. In other programming languages the requirement could be set with abstract methods, one for each value, but that's not in the Python style, and simulating it would be cumbersome. The most interesting difference between the examples is that the first code fragment tries to use class variables of the Base class, which would impact every derived class and all its instances. Which way should it be? Values per hierarchy? Per derived class? Per instance? In the best pythonic style, if objects can set their own initialization values, then the Base class should use reasonable defaults for them, and provide a mechanism for subclasses and their instances to override them. class Base(object): def __init__(self, attr1=DEFAULT1, attr2=DEFAULT2): self.attr1 = attr1 self.attr2 = attr2
