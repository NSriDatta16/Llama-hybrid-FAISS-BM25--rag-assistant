[site]: datascience
[post_id]: 35930
[parent_id]: 
[tags]: 
What can I use to post process an NLP tree generated from the python library `spaCy`?

Using spaCy as the NLP engine for a chatbot, I call nlp("Where are the apples?").print_tree() and receive: [{'word': 'are', 'lemma': 'be', 'NE': '', 'POS_fine': 'VBP', 'POS_coarse': 'VERB', 'arc': 'ROOT', 'modifiers': [{'word': 'Where', 'lemma': 'where', 'NE': '', 'POS_fine': 'WRB', 'POS_coarse': 'ADV', 'arc': 'advmod', 'modifiers': []}, {'word': 'apples', 'lemma': 'apple', 'NE': '', 'POS_fine': 'NNS', 'POS_coarse': 'NOUN', 'arc': 'nsubj', 'modifiers': [{'word': 'the', 'lemma': 'the', 'NE': '', 'POS_fine': 'DT', 'POS_coarse': 'DET', 'arc': 'det', 'modifiers': []}]}, {'word': '?', 'lemma': '?', 'NE': '', 'POS_fine': '.', 'POS_coarse': 'PUNCT', 'arc': 'punct', 'modifiers': []}]}] I can easily enough parse out (arc, lemma) pairs for where ( advmod , where ) and ( apple , nsubj ), and call a function where(apple) . However, this is a really naive way of handling the parsed tree. Any suggestions for how to handle processing this tree? I don't think something like a multilevel SVM would work. Maybe a NN of some kind?
