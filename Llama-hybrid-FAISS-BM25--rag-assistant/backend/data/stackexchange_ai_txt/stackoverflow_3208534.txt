[site]: stackoverflow
[post_id]: 3208534
[parent_id]: 3207457
[tags]: 
I'd take a slightly different approach to the abandoned cart problem. Every time you "create a shopping cart" by adding a product, you're creating a Mage_Sales_Model_Quote that magento stores in the database. Every time you complete an order, you're creating a Mage_Sales_Model_Order object. Mage_Sales_Model_Order objects keep a reference to their Original quote IDs. So, you can query for all the orders to get a list of quote IDs, and then create a quote collection and filter quotes for which there are orders. This will give you a list of each time a cart's been abandoned. //may start to degrade as orders pile up. Add date filters to //prevent or look into properly joining things in. $orders = Mage::getModel('sales/order') ->getCollection() ->addAttributeToSelect('*'); var_dump('Order Count', count($orders)); $quote_ids = $orders->getColumnValues('quote_id'); $quote_ids = array_filter($quote_ids, 'is_numeric'); $carts = Mage::getModel('sales/quote') ->getCollection(); var_dump('All Cart Count:'); var_dump(count($carts)); $carts = Mage::getModel('sales/quote') ->getCollection() ->addFieldToFilter('entity_id',array('nin'=>$quote_ids)); var_dump('Filtered Cart Count:'); var_dump(count($carts)); foreach($carts as $cart) { var_dump('abandoned cart', $cart); } As for your other questions, they're way too involved to get into a single stack overflow question. I'd read up on Magento to get a feel for the basic architecture, and then use the live Commerce Bug demo to figure out which controller you're after. (both projects linked to above are mine, self link, buyer beware, etc.)
