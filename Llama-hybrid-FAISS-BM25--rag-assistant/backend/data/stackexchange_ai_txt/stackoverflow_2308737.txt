[site]: stackoverflow
[post_id]: 2308737
[parent_id]: 2308467
[tags]: 
I think there are several ways to solve your problem. This one may be faster and a little bit more elegant. You will need to create an array of actions and then submit them through AJAX to the server. Let me explain: suppose your "phone" fields are with the class "phone" and a wrapper DIV with an "id": Example: (The id can be your DB's id or the phone with a prefix(like I show). Or if you prefer, you can add them first to an array and assign a temporally id. That way you can verify the changes at the end). Delete ... Add More... Save Changes Now the JQuery: var phones = new Array(); var new_id = 0; //keep track of added ids $(window).load(function() { $("input.phone").change(function() { //you could check here if the phone id is the same as the val... (and skip) phones[$(this).parent().attr("id")] = $(this).val(); }); $("button.del").click(function() { var id = $(this).parent().attr("id"); $(this).prev("input.phone").val("deleted"); //setting to "deleted" $("#"+id).hide(); //hide the DIV (input + button) }); $("#add").click(function() { new_id++; $("#main").append(" Delete "); }); $("#save").click(function() { $.post("save.php",{ phones : $.toJSON(phones) }, function(reply, status){ if(status == "success" && reply == "OK") { alert("UPDATED!"); } else { alert("ERROR: Try again"); } } ); }); }); Now in you "save.php" you will need to execute something like: $p) { $phones[$i] = $p; } } //print_r($phones); ... echo "OK"; //Tell JQuery everything went fine! ?> In you PHP you will have an array now with the ID and action to do. If the action is "deleted" you proceed to delete it (remember that the ID will be p_#####), if its a number, then update and if the ID starts with "n_" then its new. Other way is to create 3 arrays separated one for update, one for delete and one for insert and send them separately. But I decided to do it this way for simplicity. Additionally you could perform some checks before sending the list. You don't need the "form" tag anymore neither the javascript actions inside your tags. I recommend you to use the JSON Jquery plugin if you want fully compatibility (JQuery -> PHP). This code is untested and unfinished, it is just the idea... you will need to implement it. If you want you can add some JQuery UI dialog to display "Please wait..." while the form is transmitted to the server. If you want to keep going with your approach, you could always change the input TYPE: $("#disa_num input").attr("type","hidden"); and append to the form another input "hidden" with the actions, or prepend to the value an identifier of the action like: var oldvalue = $("#disa_num input").val(); $("#disa_num input").val("d-"+oldvalue); //prepend "d-" to identify it as "deleted" That's it.. I hope its useful.
