[site]: crossvalidated
[post_id]: 276210
[parent_id]: 276200
[tags]: 
This seems to be an inconsistency in the scaling of AIC and BIC in the package lmridge . The relevant function is infocr.lmridge() . In the AIC case this employs n * log(x/n) + 2 * (y) whereas in the BIC case n * log(x) + y * log(n) is used, where x is the residual sum of squares and y are the degrees of freedom. Of course, for model selection it does not matter whether the additional log(n) term is present or not. But it would certainly be more consistent if the same definition were employed within the package. I encourage you to contact the lmridge maintainer about this. If you do, please also point out that the infocr() approach is somewhat non-standard. Providing AIC() and BIC() methods would be more common. Or, even better, providing logLik() and nobs() methods, then the default AIC() and BIC() would work automatically. Final remark: $\log(114) = 4.736$ because the natural logarithm is employed in BIC and not the common logarithm with base 10 $\log_{10}(114) = 2.0569$.
