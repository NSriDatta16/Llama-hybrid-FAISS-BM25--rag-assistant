[site]: stackoverflow
[post_id]: 476570
[parent_id]: 476142
[tags]: 
Since you can't use one of the standard data formats to store references to python objects I would recommend you use a text data format for storing the parameters you need for your method calls rather than making a new data format. And anyway, it would be no good to pass a reference to an object from one app to another as the object in question would not be accessible (remember memory protection?). Here is a simple example for your requirements: import wx class TestDropTarget(wx.TextDropTarget): def OnDropText(self, x, y, text): wx.GetApp().TopWindow.HandleDrop(text) def OnDragOver(self, x, y, d): return wx.DragCopy class Test(wx.Frame): def __init__(self): wx.Frame.__init__(self, None) self.numbers = wx.ListCtrl(self, style = wx.LC_ICON | wx.LC_AUTOARRANGE) self.field = wx.TextCtrl(self) sizer = wx.FlexGridSizer(2, 2, 5, 5) sizer.AddGrowableCol(1) sizer.AddGrowableRow(0) self.SetSizer(sizer) sizer.Add(wx.StaticText(self, label="Drag from:")) sizer.Add(self.numbers, flag=wx.EXPAND) sizer.Add(wx.StaticText(self, label="Drag to:"), flag=wx.ALIGN_CENTER_VERTICAL) sizer.Add(self.field) for i in range(100): self.numbers.InsertStringItem(self.numbers.GetItemCount(), str(i)) self.numbers.Bind(wx.EVT_LIST_BEGIN_DRAG, self.On_ElementDrag) self.field.SetDropTarget(TestDropTarget()) menu_id1 = wx.NewId() menu_id2 = wx.NewId() self.menu = wx.Menu() self.menu.AppendItem(wx.MenuItem(self.menu, menu_id1, "Simple copy")) self.menu.AppendItem(wx.MenuItem(self.menu, menu_id2, "Mess with it")) self.Bind(wx.EVT_MENU, self.On_SimpleCopy, id=menu_id1) self.Bind(wx.EVT_MENU, self.On_MessWithIt, id=menu_id2) def On_ElementDrag(self, event): data = wx.TextDataObject(self.numbers.GetItemText(event.Index)) source = wx.DropSource(self.numbers) source.SetData(data) source.DoDragDrop() def HandleDrop(self, text): self._text = text self.PopupMenu(self.menu) def On_SimpleCopy(self, event): self.field.Value = self._text def On_MessWithIt(self, event): self.field.Value = " " % "".join([int(c)*c for c in self._text]) app = wx.PySimpleApp() app.TopWindow = Test() app.TopWindow.Show() app.MainLoop() Methods like On_SimpleCopy and On_MessWithIt get executed after the drop so any lengthy operations you might want to do you can do there based on the textual or some other standard type of data you transfered with the drag (self._text in my case), and look... no OLE :)
