[site]: stackoverflow
[post_id]: 1886135
[parent_id]: 1774369
[tags]: 
To follow up on this question, I've found that querying is dog slow using Core Data. I've scratched my head on this one for many hours. As in the SQL example in my question, there are two entities: textTable and words where words contains each word, it is indexed, and there is a many-to-many relationship between textTable and words. I populated the database with a mere 4000 words and 360 textTable objects. Suppose the textTable relationship to the words object is called searchWords, then I can use a predicate on the textTable entity that looks like predicate = [NSPredicate predicateWithFormat:@"ANY searchWords.word BEGINSWITH %@", query]; (I can add conjunctions of this predicate for multiple query terms.) On the iPhone this query takes multiple seconds. The response for my hand-coded SQL using a larger test set was instant. But this isn't even the end of it. There are limitations to NSPredicate that make rather simple queries slow and complex. For example, imagine in the above example that you want to filter using a scope button. Suppose the words entity contains all words in all text fields, but the scope would limit it to words from specific fields. Thus, words might have a "source" attribute (e.g. header and message body of email). Naturally, then, a full text would ignore the source attribute, as in the example above, but a filtered query would limit the search to a particular source value. This seemingly simple change requires a SUBQUERY. For example, this doesn't work: ANY searchWords.word BEGINSWITH "foo" AND ANY searchWords.source = 3 because the entities that are true for the two expressions can be different. Instead, you have to do something like: SUBQUERY(searchWords, $x, $x.word BEGINSWITH "foo" AND $x.source = 3).@count > 0 I've found that these subqueries are, perhaps not surprisingly, slower than predicates using "ANY". At this point I'm very curious how Cocoa programmers efficiently use Core Data for full text search because I'm discouraged by both the speed of predicate evaluation and expressibility of NSPredicates. I've run up against a wall.
