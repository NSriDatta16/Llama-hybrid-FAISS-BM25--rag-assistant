[site]: crossvalidated
[post_id]: 625562
[parent_id]: 
[tags]: 
Training Regression Models to Predict Continuous Probability Values in [0, 1]

I'm working on a machine learning project where my target variable represents continuous probability values that must fall within $[0, 1]$ . While I understand regression models are suitable for this task, ensuring the predicted values remain within the desired range is quite difficult. The only thing I can think of is to transform the target into logit and then proceed it using GLM (or any other algorithms), i.e. $$ \ln\left(\frac{p}{1-p}\right)=\mathbf{X}\boldsymbol{\beta} $$ but interpreting the model and its outcomes would be a challenging task. Hence, I'd like to ask: Which regression algorithms are well-suited for predicting continuous probability values? What preprocessing steps and feature engineering techniques should I consider when working with such target variables? In addition, I'm particularly interested in using H2O and/or other Python packages for this task, therefore I'd like to know: How can I leverage the H2O Python library for training regression models that predict continuous probability values? Are there any specific features or functions in H2O that are beneficial for this task? Are there other Python packages or libraries that are well-suited for this type of regression problem? I'm eager to hear about practical experiences and any potential pitfalls to avoid when working on projects involving continuous probability values. Any insights or resources you can provide would be greatly appreciated. Thank you!
