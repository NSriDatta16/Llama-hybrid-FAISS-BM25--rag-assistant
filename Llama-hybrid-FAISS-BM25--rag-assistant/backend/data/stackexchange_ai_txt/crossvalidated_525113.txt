[site]: crossvalidated
[post_id]: 525113
[parent_id]: 
[tags]: 
Learning speed of only Dense layers vs a CNN

So I understand, that the main advantage from CNNs are that there are less leanrable parameters and that this should speed up learning. Now I build two models to train on the fashion_mnist dataset. These are the Models I created: def build_model_seq(input_shape,output_shape): model = tf.keras.models.Sequential() model.add(tf.keras.layers.Flatten(input_shape=input_shape)) model.add(tf.keras.layers.Dense(units=64,activation='relu')) model.add(tf.keras.layers.Dense(units=64,activation='relu')) model.add(tf.keras.layers.Dense(units=output_shape,activation='softmax')) opt = tf.keras.optimizers.SGD() model.compile( optimizer=opt, loss='sparse_categorical_crossentropy', metrics=['accuracy']) return model def build_model_cnn(input_shape,output_shape): model = tf.keras.Sequential() model.add(tf.keras.layers.Conv2D(filters=16,kernel_size=(3,3), activation='relu',input_shape=input_shape)) model.add(tf.keras.layers.MaxPool2D()) model.add(tf.keras.layers.Conv2D(filters=8,kernel_size=(3,3), activation='relu')) model.add(tf.keras.layers.MaxPool2D()) model.add(tf.keras.layers.Flatten()) model.add(tf.keras.layers.Dense(units=output_shape,activation='softmax')) opt = tf.keras.optimizers.SGD() model.compile( optimizer=opt, loss='sparse_categorical_crossentropy', metrics=['accuracy']) return model Now If I train these models the fitting time on a single epoch is 8 times larger. This can be seen here: Why is that? Can someone explain this to me please and after that the overall benefit of CNNs other than they just work better?
