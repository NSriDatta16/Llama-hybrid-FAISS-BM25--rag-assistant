[site]: datascience
[post_id]: 124654
[parent_id]: 97780
[tags]: 
The OP was convinced in the comments to rewrite the question towards cryptographic hashes. A hash function just needs to minimise collisions. Given that a neural network with N parameters can memorise about N different inputs, it seems it can easily be used as a hash. But the problem comes when you consider the validation. The validation should be a bit tricky because really you should not bother about what categories each entry is mapped to, you only want to be equally distributed. So a trivial answer with all the logits equal could be in principle a "correct" answer. One needs to train to avoid this result.
