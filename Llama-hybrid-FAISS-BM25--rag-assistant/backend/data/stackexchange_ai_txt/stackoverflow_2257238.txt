[site]: stackoverflow
[post_id]: 2257238
[parent_id]: 2257177
[tags]: 
Personally I like the second approach (using appendChild) better, because, you are adding new element to the document tree without affecting the old elements. When using innerHTML += new content, you affect old content, because all the HTML has to be reassigned (replaced with new HTML that contains of old code and some new code). But, if you want to increase the performance, I'd suggest using DocumentFragments. Using them you can append a whole set of nodes with just one appendChild call on the document tree. Worth reading: "DOM DocumentFragments" by John Resig , but it's not the case in your problem, because you get the content as a string, that you have to first convert to DOM nodes. My second suggestion is, to create a string of HTML code and then use innerHTML on a temporary container to convert it to DOM nodes var htmlCode = ""; for (thumb in thumbnails) { htmlCode += new Thumbnail(thumb).toXMLString(); } var element = document.createElement(htmlCode); element.innerHTML = htmlCode; // ... and append all the elements to document, or thumbContainer.innerHTML += htmlCode;
