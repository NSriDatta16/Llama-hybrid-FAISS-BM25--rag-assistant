[site]: crossvalidated
[post_id]: 464333
[parent_id]: 463982
[tags]: 
Change points can be difficult in a frequentist framework. Most methods involve identifying the change point as a fixed location , ignoring the uncertainty inherent in estimating it. In addition, fixing a particular parameter (the slope in segment 1) may require a few tricks to get working on many packages. Change points and fixing parameters come more naturally in a Bayesian context. The R package mcp can flexibly model changes in means and the standard deviation of the residuals, among other things. You may be interested in comparing four models: model1 = list(y ~ 0 + x) # No change in slope or sigma model2 = list(y ~ 0 + x, ~ 0 + x) # Change in slope only model3 = list(y ~ 0 + x, ~ 0 + sigma(1)) # Intercept change in sigma only model4 = list(y ~ 0 + x, ~ 0 + x + sigma(1)) # Change in both Then fix the first slope to be 1 using a point prior, and do the fit: library(mcp) prior = list(x_1 = 1) # fix the slope on x in segment (x_1) to be 1 fit1 = mcp(model1, data, prior) fit2 = mcp(model2, data, prior) fit3 = mcp(model3, data, prior) fit4 = mcp(model4, data, prior) You can use leave-one-out cross-validation to compare the models' predictive performances or hypothesis() to compare parameter values: loo::loo_compare(fit1, fit2, fit3, fit4) hypothesis(fit2, "x_2 Read more about: mcp overview and the associated paper . Modeling variance in mcp Model comparison and hypothesis tests in mcp Disclosure: I am the author of the mcp package.
