[site]: stackoverflow
[post_id]: 5528954
[parent_id]: 5524696
[tags]: 
From a user experience pov (which you should measure on the browser, not server side), under one second feels pretty good, so in principle your 100ms server-side load time sounds great. Actual user experience is affected by many other factors though - latency, javascript, css - take a look at YSlow and its docs for more info. The real question you should deal with on the server side is what load you're expecting and consequently how the page load time is affected by additional concurrent requests. For instance, maybe with 10 concurrent users it'll take your server 1100 milliseconds on average, not 100, to render a page. You'll need to do performance testing to figure that out. The advantage of MongoDB and other NoSQL data stores is that they let you scale out (by adding more of the same hardware, rather than scale up - by switching to every stronger and more expensive hardware). In principle MongoDB could scale nearly linearly ad infinitum, meaning that you could (in principle) stay at 100ms load time no matter how many users you grow to - as long as you add more servers.
