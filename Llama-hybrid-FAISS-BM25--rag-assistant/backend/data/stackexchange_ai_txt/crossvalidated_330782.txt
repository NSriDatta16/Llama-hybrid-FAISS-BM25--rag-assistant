[site]: crossvalidated
[post_id]: 330782
[parent_id]: 
[tags]: 
Is it legitimate to use a neural network to predict the output from another model?

Background I have a time-series prediction model which aggregates historic analogues to make predictions about potential future positions. It works really well in that it makes accurate predictions and is driven by strong business intuitions. However , making predictions is prohibitively calculation intensive (it compares all possible potential states of the system to all historically observed states at each iteration) to the point that it is infeasible to implement in a live system. Proposal To combat this issue, my plan is to implement a neural network to predict the results of my current model, using predictions from the old model to augment the historic dataset with what-if scenarios in order to increase the size and variability of the training set. (I have previously tried solving the initial prediction problem using neural networks but found it hard to get good results without overfitting the training data due to the small number of, and lack of variation in, the historic observations so am hoping that augmenting the dataset in this way will overcome these issues) Are there any intrinsic problems with this approach? I foresee a certain amount of propagating and compounding errors, but am more interested in whether there are strong reasons against using models to predict models in general.
