[site]: crossvalidated
[post_id]: 532943
[parent_id]: 531623
[tags]: 
More of an extended set of comments than an answer. The bootMer() and its associated simulate.merMod() functions in lme4 contain hints as to what works in practice whether in frequentist or Bayesian modeling. (The package doesn't seem to contain functions for case resampling; more on that later.) Quotes below are from the manual page for bootMer() . The use.u parameter determines whether the random effects ( u ) are used at their estimated values ( use.u = TRUE ) or simulation/sampling is done from the "spherical" random effects ( use.u = FALSE ). According to the bootMer() manual page, "resampling from the estimated values of u is not good practice."* That would argue against resampling from your fitted random effects, whether in Bayesian or frequentist modeling. The type setting determines how errors/responses are sampled. With type = "parametric" , "the i.i.d. errors (or, for GLMMs, response values drawn from the appropriate distributions) are resampled." With type = "semiparametric" : the i.i.d. errors are sampled from the distribution of (response) residuals. (For GLMMs, the resulting sample will no longer have the same properties as the original sample, and the method may not make sense; a warning is generated.) As this question is about a logistic model, the "semiparametric" setting would thus be unwise. So with bootMer() and a logistic model you would use type = "parametric" , thus sampling response values drawn from the underlying binomial distribution. Your choice is whether to use random-effect values fixed at their estimates ( use.u = TRUE ) or to sample from the estimated distribution of random-effect values ( use.u = FALSE ). The former choice would seem to make your results conditional on your sample. With respect to case resampling, Michael Chernick notes that: "The nonparametric bootstrap has been shown to be more robust than the parametric bootstrap when the model is misspecified." That said, it's not clear to me how to deal correctly with resamples that don't seem to be fit properly. If it's just a matter of slow convergence that might be handled by altering fitting options, but if a fit to a resample is really impossible then omitting those resamples would seem to lead to a bias. As the Bayesian model seems to work well, I suspect that you will stick with that. The warning about resampling from fitted fixed effects in the bootMer() manual page would suggest you should move to drawing from their distribution instead. *The citation on this point in the manual page is to: Morris, J. S. (2002). The BLUPs Are Not ‘best’ When It Comes to Bootstrapping. Statistics & Probability Letters 56(4): 425–430. doi:10.1016/S0167-7152(02)00041-X. I haven't read that myself.
