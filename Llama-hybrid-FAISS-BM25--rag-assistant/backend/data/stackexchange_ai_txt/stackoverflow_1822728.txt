[site]: stackoverflow
[post_id]: 1822728
[parent_id]: 1822635
[tags]: 
Depending on how custom you need each project to be, the easiest way may be to have a separate tree of templates for each customer that takes precedence to the base set. As in base/template1.html customer/template1.html For any page, the customer's directory gets searched first. You shouldn't need a lot of version control magic for this, but subrepositories might be convenient. You may be able to keep track of each customer's changes as a patchset using mq (Mercurial queues). It can be a bit tricky to merge patchsets. You could do the same thing with rebase , potentially more elegant than mq , but I'm not sure how to share rebase sets. Or you could simply keep a base repository and separate repositories from each customer that are never pulled back into the base. In each case, your life (merging) will be much easier if you organize your project so the per-customer customizations are confined so they are less likely to conflict with changes to the core product.
