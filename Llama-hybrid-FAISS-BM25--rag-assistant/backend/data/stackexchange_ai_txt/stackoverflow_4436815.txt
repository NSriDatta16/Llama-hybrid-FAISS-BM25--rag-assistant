[site]: stackoverflow
[post_id]: 4436815
[parent_id]: 4394968
[tags]: 
If you thought weichsel's first solution was hacky, you're going to love this one: The culprit is the Content-Type header, as you have determined. Had QTKit.framework used Objective-C internally, this would be a trivial matter of overriding -[NSHTTPURLResponse allHeaderFields] with a category of your choosing. However, QTKit.framework (for better or worse) uses Core Foundation (and Core Services) internally. These are both C-based frameworks and there is no elegant way of overriding functions in C. That said, there is a method, just not a pretty one. Function interposition is even documented by Apple, but seems to be a bit behind the times, compared to the remainder of their documentation. In essence, you want something along the following lines: typedef struct interpose_s { void *new_func; void *orig_func; } interpose_t; CFStringRef myCFHTTPMessageCopyHeaderFieldValue ( CFHTTPMessageRef message, CFStringRef headerField ); static const interpose_t interposers[] __attribute__ ((section("__DATA, __interpose"))) = { { (void *)myCFHTTPMessageCopyHeaderFieldValue, (void *)CFHTTPMessageCopyHeaderFieldValue } }; CFStringRef myCFHTTPMessageCopyHeaderFieldValue ( CFHTTPMessageRef message, CFStringRef headerField ) { if (CFStringCompare(headerField, CFSTR("Content-Type"), 0) == kCFCompareEqualTo) { return CFSTR("audio/x-mpeg"); } else { return CFHTTPMessageCopyHeaderFieldValue(message, headerField); } } You might want to add logic specific to your application in terms of handling the Content-Type field lest your application break in weird and wonderful ways when every HTTP request is determined to be an audio file.
