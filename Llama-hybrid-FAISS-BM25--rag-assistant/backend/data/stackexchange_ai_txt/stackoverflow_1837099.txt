[site]: stackoverflow
[post_id]: 1837099
[parent_id]: 1836853
[tags]: 
Hi As Gann Bierner said, this is a classification problem. The best classification algorithm for your needs I know of is, Ross Quinlan algorithm. It's conceptually very easy to understand. For off-the-shelf implementations of the classification algorithms, the best bet is Weka. http://www.cs.waikato.ac.nz/ml/weka/ . I have studied Weka but not used, as I discovered it a little too late. I used a much simpler implementation called JadTi. It works pretty good for smaller data sets such as yours. I have used it quite a bit, so can confidently tell so. JadTi can be found at: http://www.run.montefiore.ulg.ac.be/~francois/software/jaDTi/ Having said all that, your challenge will be building a usable interface over web. To do so, the dataset will be of limited use. The data set basically works on the premise that you have the training set already, and you feed the new test dataset in one step, and you get the answer(s) immediately. But my application, probably yours also, was a step by step user discovery, with features to go back and forth on the decision tree nodes. To build such an application, I created a PMML document from my training set, and built a Java Engine that traverses each node of the tree asking the user to give an input (text/radio/list) and use the values as inputs to the next possible node predicate. The PMML standard can be found here: http://www.dmg.org/ Here you need the TreeModel only. NetBeans XML Plugin is a good schema-aware editor for PMML authoring. Altova XML can do a better job, but costs $$. It is also possible to use an RDBMS to store your dataset and create the PMML automagically! I have not tried that. Good luck with your project, please feel free to let me know if you need further inputs.
