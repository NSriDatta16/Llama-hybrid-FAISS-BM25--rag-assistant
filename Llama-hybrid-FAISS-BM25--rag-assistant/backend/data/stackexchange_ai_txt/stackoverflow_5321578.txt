[site]: stackoverflow
[post_id]: 5321578
[parent_id]: 5321231
[tags]: 
I think the problem is that the page is set so the user drags and drops a clone of the image on to the grid. When you click on an image, the rotation plugin is called and replaces that image with a (at least in Firefox). That is the reason the drag/drop stopped functioning. The image is positioned using "absolute" positioning, and the canvas is positioned using "relative" positioning and that's why it ends up below the grid. I haven't tested this, but I think the solution would be to wrap the image with a that has drag/drop functionality applied to it. I don't know if the rotated canvas will once again be wrapped in a relatively positioned . So there might still be positioning issues even after this suggested change. On a side note, when clicking on the canvas, Firebug reports this error: $(this).rotate({angle: test, containment: "working-area"}).parent is not a function [Break On This Error] Failed to load source for: http://usha...ng_Conveyors/build.php?num1=50&num2=50 build....num2=50 (line 624) Update: Here you go, updated demo and code: HTML Script $(document).ready(function() { $('#dhtmlgoodies_xpPane .draggable').draggable({ scope: "draggable", helper: "clone" }); $('#working-area .rotatable').live('click', function(event) { test = test + 90; $(this).rotate({ angle: test, containment: "working-area" }); }); $("#working-area").droppable({ activeClass: "ui-state-default", hoverClass: "ui-state-hover", accept: "#dhtmlgoodies_xpPane li .draggable", drop: function(event, ui) { $(this).append($(ui.helper).clone().draggable()); }, scope: "draggable" }).mousemove(function(e) { var x = e.pageX - this.offsetLeft; var y = e.pageY - this.offsetTop; $('#status2').html("X = " + x + ', ' + "Y = " + y); }); });
