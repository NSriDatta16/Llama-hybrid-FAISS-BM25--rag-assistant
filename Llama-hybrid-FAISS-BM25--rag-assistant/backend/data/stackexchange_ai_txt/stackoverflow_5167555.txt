[site]: stackoverflow
[post_id]: 5167555
[parent_id]: 
[tags]: 
Visual 2010 keeps telling me "error: Expression must have class type"

Okay I need some insight. I am taking a C++ class and am working on my second project. I am trying to create a list of options that allow you to store emails in a string vector. Now before taking the time to help me and look at the code I want to point out my problem. I made an object in the file "HughesProject2-1.cpp": HughesEmail myhughesEmail(); Well the problem comes right after this when I used this object to run displayList(): myHughesEmail.displayList(); Visual 2010 keeps telling me "error: Expression must have class type" Now I am using the book as a reference to doing this and they created an object the same way and used it the same way right after. I am confused at what I have wrong as my file is quite different past the basics of using the objects and what is being done. I understand there my be other errors as this is incomplete and I'm still learning, I need to know what is most likely causing me from using the object after I made it. Thanks in advance. I have three files: HughesEmail.cpp // Classes for HughesProject2-1.cpp and HughesEmail.h // Includes #include #include #include #include #include "HughesEmail.h" // Namespaces using namespace std; // Initializing Constructor HughesEmail::HughesEmail() { vector emailStorage( 100 ); emailMinimumLength = 9; exitOption = 1; emailOption = 1; } void HughesEmail::displayList() { // Check if exit is set, if not run. if ( exitOption == 1 ) { // Email list options cout > option; switch ( option ) { case '0': // set exitOption to 0 exitOption = 0; emailOption = 0; break; case '1': //Input email name cout > emailName; // run storeEmail storeEmail( emailName ); break; case '2': // run searchEmail break; case '3': // run listEmail break; case '4': // run deleteEmail break; //Ignore case '\n': case '\t': case ' ': break; default: cout = emailMinimumLength ) { // if email in vector slot i is less than minimum length, then override with new email. if ( emailStorage[ i ].length() HughesEmail.h // In this project: HughesProject2.h // Class header file. //Includes #include #include #include //Namespaces using namespace std; class HughesEmail { public: HughesEmail(); void displayList(); void storeEmail( string ); string searchEmail( string ); string listEmail(); void deleteEmail(); private: vector emailStorage; int emailMinimumLength; int emailOption; int exitOption; char option; string emailName; }; HughesProject2-1.cpp // In this project: HughesProject2-1.cpp // Class creation to store email adresses. Adding, deleting, searching and listing email addresses. // Includes #include #include #include #include "HughesEmail.h" // Namespaces using namespace std; int main() { //Create HughesEmail Object HughesEmail myHughesEmail(); myHughesEmail.displayList(); }
