[site]: stackoverflow
[post_id]: 4870947
[parent_id]: 
[tags]: 
Mutually exclusive contiguous ranges from multiple bitfields

(This is not a CS class homework, even if it looks like one) I'm using bitfields to represent ranges between 0 and 22. As an input, I have several different ranges, for example (order doesn't matter). I used . for 0 and X for 1 for better readability. .....XXXXX.............. ..XXXX.................. .....XXXXXXXXXXXXXXX.... ........XXXXXXX......... XXXXXXXXXXXXXXXXXXXXXXXX The number of bitfield ranges is typically below 10, but can potentially become as high as 100. From that input, I want to calculate the mutually exclusive, contiguous ranges, like this: XX...................... ..XXX................... .....X.................. ......XX................ ........XX.............. ..........XXXXX......... ...............XXXXX.... ....................XXXX (again, the output order doesn't matter, they just need to be mutually exclusive and contiguous, i.e. they can't have holes in them. .....XXX.......XXXXX.... must be split up in two individual ranges). I tried a couple of algorithms, but all of them ended up being rather complex and unelegant. What would help me immensely is a way to detect that .....XXX.......XXXXX.... has a hole and a way to determine the index of one of the bits in the hole. Edit: The bitfield range represent zoomlevels on a map. They are intended to be used for outputting XML stylesheets for Mapnik (the tile rendering system that is, among others, used by OpenStreetMap).
