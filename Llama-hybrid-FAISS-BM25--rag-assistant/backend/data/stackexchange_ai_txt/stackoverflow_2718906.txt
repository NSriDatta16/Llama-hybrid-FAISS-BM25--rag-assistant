[site]: stackoverflow
[post_id]: 2718906
[parent_id]: 2718837
[tags]: 
Thankfully, it's not possible to change the duration of the vibration. The only way to trigger the vibration is to play the kSystemSoundID_Vibrate as you have. If you really want to though, what you can do is to repeat the vibration indefinitely, resulting in a pulsing vibration effect instead of a long continuous one. To do this, you need to register a callback function that will get called when the vibration sound that you play is complete: AudioServicesAddSystemSoundCompletion ( kSystemSoundID_Vibrate, NULL, NULL, MyAudioServicesSystemSoundCompletionProc, NULL ); AudioServicesPlaySystemSound(kSystemSoundID_Vibrate); Then you define your callback function to replay the vibrate sound again: #pragma mark AudioService callback function prototypes void MyAudioServicesSystemSoundCompletionProc ( SystemSoundID ssID, void *clientData ); #pragma mark AudioService callback function implementation // Callback that gets called after we finish buzzing, so we // can buzz a second time. void MyAudioServicesSystemSoundCompletionProc ( SystemSoundID ssID, void *clientData ) { if (iShouldKeepBuzzing) { // Your logic here... AudioServicesPlaySystemSound(kSystemSoundID_Vibrate); } else { //Unregister, so we don't get called again... AudioServicesRemoveSystemSoundCompletion(kSystemSoundID_Vibrate); } }
