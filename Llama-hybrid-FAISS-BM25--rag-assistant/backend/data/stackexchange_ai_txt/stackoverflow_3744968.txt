[site]: stackoverflow
[post_id]: 3744968
[parent_id]: 3643065
[tags]: 
Let's time the join and the re versions: In [3]: import re In [4]: def withRe(theString): return re.sub('\D', '', theString) ...: In [5]: In [6]: def withJoin(S): return ''.join(c for c in S if c.isdigit()) ...: In [11]: s = "8-4545-225-144" In [12]: %timeit withJoin(s) 100000 loops, best of 3: 6.89 us per loop In [13]: %timeit withRe(s) 100000 loops, best of 3: 4.77 us per loop The join version is much nicer, compared to the re one, but unfortunately is 50% slower. So if the performance is an issue, the elegance might need to be sacrificed. EDIT In [16]: def withFilter(s): return filter(str.isdigit, s) ....: In [19]: %timeit withFilter(s) 100000 loops, best of 3: 2.75 us per loop It looks like filter is the performance and readability winner
