[site]: datascience
[post_id]: 82405
[parent_id]: 
[tags]: 
How does "one-to-many" RNNs work?

I recently came across an article about RNNs here . Which describes different types of RNNs like: The first figure makes sense. A regular feedforward network. The second is a big question for me. Is it one timestep cloned three times to make it recurrent with 3 timesteps? The third is returning just the last timestep's output. The fourth is an even bigger question. Is it getting the last timestep's output, clone it three times, and put another RNN layer on it? Or it's two RNN layers, where the output of the first layer is the input of the second (returning all timestep's outputs)? The fifth makes sense as well, it returns the output of all timesteps. So am I missing something, or the second, and fourth cases can only be made by cloning inputs/outputs as specified above?
