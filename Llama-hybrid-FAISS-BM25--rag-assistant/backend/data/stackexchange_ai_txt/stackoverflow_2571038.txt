[site]: stackoverflow
[post_id]: 2571038
[parent_id]: 2571026
[tags]: 
EDIT: You still haven't indicated which is line 197 in the question, but I'll assume it's p1 = conn.prepareStatement(s1); This is almost certainly due to this bit of the constructor: Connection conn=DriverManager.getConnection("jdbc:odbc:reg","system","suganthi"); This declares a local variable called conn . Presumably you also have an instance variable called conn , but the local variable is hiding it. You're assigning to the local variable, which means the instance variable is going to keep its default value of null. You probably meant just: conn = DriverManager.getConnection("jdbc:odbc:reg","system","suganthi"); However, if an exception occurs you shouldn't just print "Error" and keep going... you should probably throw an exception from the constructor instead. After all, the instance isn't going to behave properly unless you've got a database connection. You should also consider only creating a database connection when you actually need it, and closing it immediately afterwards. Use a connection pool to allow this to be efficient where appropriate. Original answer You haven't shown the bit of code which is throwing the exception - namely jButton1ActionPerformed , with line 197 being the culprit. You've shown us jButton3ActionPerformed instead. Show us the right piece of code, with line numbers, and we're more likely to have a chance to help you. Or just look at what's being used on line 197 - something there is resulting in a null reference which you're trying to dereference, e.g. int foo = someNullValue.getIntValue(); It may be the result of a method call though, e.g. foo().getIntValue(); // Will throw if `foo()` returns null As an aside, doing database work in the UI thread isn't generally a good idea - although as you're a beginner it may be simpler to get that right and live with the UI hanging during database access than getting multithreading right. You should consider threading it properly at a later date though, when you have more experience.
