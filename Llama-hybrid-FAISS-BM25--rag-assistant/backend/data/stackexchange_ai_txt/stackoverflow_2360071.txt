[site]: stackoverflow
[post_id]: 2360071
[parent_id]: 2359928
[tags]: 
Here's my suggestion: step away from the "Unit Testing" paradigm, and work on a suite of integration tests. I assume that your system has a front end which calls the services. Write a test suite that actually connects to running services (in your test environment obviously) and makes the same sequence of calls as your front end does. Your test environment would have the latest services running against an empty test database. Just like with unit tests, each test would make the calls that populates the test data with just what it needs, invoke functionality, test that the visible information now matches what it should, then clears the database again. You may have to create one other service that services the integration tests by clearing the database on request. (Obviously, you wouldn't actually deploy that one...) While they are not "Unit tests", you would be getting full coverage.
