[site]: crossvalidated
[post_id]: 615506
[parent_id]: 
[tags]: 
SPSS and Scikit-learn giving different PCA eigenvectors coefficients

The Python code used, printed are the eigenvector coefficients and the relative eigenvalues, the data is the same for both SPSS and Python: X = dat[cols] pca = PCA(n_components=2,svd_solver = 'full').fit(X) print(pca.components_.T) print(pca.explained_variance_ratio_) Python Output: [[-0.61573707 -0.12879642] [-0.40476782 -0.3582253 ] [-0.26925575 0.67811576] [-0.37436419 0.53892622] [-0.49435177 -0.32373394]] [0.31112415 0.25145249] SPSS Output: [[0.793 -0.027] [0.608 -0.510] [0.276 0.812] [0.478 0.621] [0.603 -0.314]] [0.33332266 0.28082707] I tried applying different normalization methods: scaler = preprocessing.MinMaxScaler().fit(X) X_scaled = scaler.transform(X) pca = PCA(n_components=2,svd_solver = 'full').fit(X_scaled) [[-0.82663883 -0.23475242] [-0.31202742 -0.28986165] [-0.27729367 0.74274876] [-0.25778984 0.5187487 ] [-0.27560797 -0.20023884]] [0.34864558 0.24545525] scaler = preprocessing.MaxAbsScaler().fit(X) X_scaled = scaler.transform(X) pca = PCA(n_components=2,svd_solver = 'full').fit(X_scaled) [[ 0.55296252 -0.70429099] [ 0.11899483 -0.31431751] [ 0.63331106 0.50543344] [ 0.51086644 0.27929861] [ 0.13418372 -0.26778354]] [0.34906865 0.26269499] scaler = preprocessing.StandardScaler().fit(X) X_scaled = scaler.transform(X) pca = PCA(n_components=2,svd_solver = 'full').fit(X_scaled) [[-0.60705794 -0.03705608] [-0.51335244 -0.37088481] [-0.20018055 0.67711926] [-0.29857834 0.59942764] [-0.48859866 -0.20800795]] [0.3126145 0.24884053] scaler = preprocessing.RobustScaler().fit(X) X_scaled = scaler.transform(X) pca = PCA(n_components=2,svd_solver = 'full').fit(X_scaled) [[-0.28720655 -0.51737357] [-0.93496554 0.31763895] [ 0.00257742 -0.15641986] [-0.00360587 -0.32249965] [-0.20816385 -0.70919453]] [0.49561027 0.18208105] I get very different results. Given this I don't feel confident using any of these coefficients. Any ideas? Assuming the coefficients obtained by SPSS are the most correct how could I replicate them? and are they?
