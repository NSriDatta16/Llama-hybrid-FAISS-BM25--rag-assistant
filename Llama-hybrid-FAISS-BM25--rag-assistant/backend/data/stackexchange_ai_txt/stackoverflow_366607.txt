[site]: stackoverflow
[post_id]: 366607
[parent_id]: 366588
[tags]: 
Good code is where you know what the method does from the name. Bad code is where you have to work out what the code does, to make sense of the name. Good code is where if you read it, you can understand what it's doing in not much more time than it takes to read it. Bad code is where you end up looking at it for ages trying to work out wtf it does. Good code has things named in such a way as to make trivial comments unnecessary. Good code tends to be short. Good code can be reused to do what it does anywhere else, since it doesn't rely on stuff that is really unrelated to its purpose. Good code is usually a set of simple tools to do simple jobs (put together in well organised ways to do more sophisticated jobs). Bad code tends to be huge multi-purpose tools that are easy to break and difficult to use.
