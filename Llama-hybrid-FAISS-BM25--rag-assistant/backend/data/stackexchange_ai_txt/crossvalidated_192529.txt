[site]: crossvalidated
[post_id]: 192529
[parent_id]: 192145
[tags]: 
Such patterns can arise when you have inappropriate data for PCA . For example, when your data is sparse and discrete. pdata = np.random.poisson(.005, 1000*1000).reshape((1000,1000)) p = sklearn.decomposition.TruncatedSVD(2).fit_transform(pdata) scatter(p[:,0], p[:,1]) The fish-like shape arises because: the data is very skewed (most values are 0 due to sparsity) there are no negative values In such cases, PCA will often not work very well. PCA is about maximizing variance in the first components . However, variance is a quantity that makes most sense for continuous and non-sparse data. PCA (usually, if you use the original version) centers your data; but already this operation only makes sense when the data generation process can be assumed to be translation invariant (e.g. Normal distributions don't change their shape when you translate the mean).
