[site]: stackoverflow
[post_id]: 3311085
[parent_id]: 3310936
[tags]: 
I agree with everyone here. I think if I were given code to maintain and saw a class with an interface that had no properties or methods I would be very confused. In an asp.net mvc app that I worked on recently I had a core operation (tracking code) I wanted done on almost every request (but not on say and ajax request or an admin page). I added the operation to a base controller and executed it in the ExecuteCore method. For the few situations I didn't want it to run I set a flag in the derived controller not to run it. This isn't as clean and elegant as an attribute but it is much simpler to implement. Of course this won't help if you want to create generic operations for all the derived classes. But in such a case there would have to be some things in common about the objects (say a common property) which would mean the interface wouldn't be empty.
