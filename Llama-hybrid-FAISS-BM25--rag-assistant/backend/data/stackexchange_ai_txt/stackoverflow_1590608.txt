[site]: stackoverflow
[post_id]: 1590608
[parent_id]: 
[tags]: 
How do I forward-declare a function to avoid `NameError`s for functions defined later?

Is it possible to forward-declare a function in Python? I want to sort a list using my own cmp function before it is declared. print "\n".join([str(bla) for bla in sorted(mylist, cmp = cmp_configs)]) I've put the definition of cmp_configs method after the invocation. It fails with this error: NameError: name 'cmp_configs' is not defined Is there any way to "declare" cmp_configs method before it's used? Sometimes, it is difficult to reorganize code to avoid this problem. For instance, when implementing some forms of recursion: def spam(): if end_condition(): return end_result() else: return eggs() def eggs(): if end_condition(): return end_result() else: return spam() Where end_condition and end_result have been previously defined. Is the only solution to reorganize the code and always put definitions before invocations?
