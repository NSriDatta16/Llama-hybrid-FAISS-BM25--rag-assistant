[site]: crossvalidated
[post_id]: 431632
[parent_id]: 431582
[tags]: 
We could help you further if you detail your application and language in which you are implementing your regression. I did not understand why there is no confusion matrix to evaluate your results. I suppose you have some data that you are using to train your random forest , so the best practice would be to split it into a training and a testing set. If you are using python/pandas, you can do this as follow: ## Considering your dataset has 1000 samples and you'll split it into 70%-30% training_set = dataset.sample(700) testing_set = dataset.drop(labels=training_set.index) Once you've split your data, you can use some libraries both for fitting your model as well as checking its accuracy. Here you'll find an example in python of a random forest implementation using cross-validation to check its accuracy. Regardless of which language you are implementing, an alternative is to use R-squared as a performance metric (remember that in all cases, you will need a reference, so separating your dataset into a training and testing part is extremely important). As detailed in this article : The coefficient of determination (R-Squared) quantifies how good the simulation is compared to a baseline model with no independent variables that always predicts the expected value of y. Mainly used in regression, one-to-one comparisons between the predicted value and ground truth value.
