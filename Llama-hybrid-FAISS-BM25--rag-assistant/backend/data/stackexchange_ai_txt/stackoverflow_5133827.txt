[site]: stackoverflow
[post_id]: 5133827
[parent_id]: 
[tags]: 
Entity Framework many to many relationship without primary key

I have a few tables which all refer to each other with many-to-many relationships but not the normal kind. Usually a many-to-many relationship has a join table which joins the two other tables on their primary keys. In my case I have a few tables which relate to each other by sharing matching foreign keys. I have patient records with two tables. Doctors who are assigned to a patient. The patients test results. I am not allowed to store anything about the patient besides their patient id (and I have no reason to) so there is no point in a patient table. How could I relate the Doctors to the TestResults? They both have a foreign key to a table that does not exist. i.e. they both have patient record numbers but there is no table of patient record numbers (the record numbers are generated by a system that I do not have access to). So in fact they are in a many-to-many relationship with each other. I did think of making a table just to hold the record ids. That table would have one column which is the primary key and nothing else. That solution would not work for me at all. My storage agnostic (poco) library which would be managing and analysing these records would have no way to check if a patient was in our system when adding a new test result. Even if I did pass a Database Context to the managing library. That would mean that the system would have to make a database call every time it wanted to add a test record just to see if the patient had any previous records with us or if this was the first one. All to add a record in a table that had no purpose. During peak processing times this could be thousands of times per minute. Something that would be trivial to do if your just accessing clr objects, but totally overwhelming if you need to make a database call for each one. Thank you!
