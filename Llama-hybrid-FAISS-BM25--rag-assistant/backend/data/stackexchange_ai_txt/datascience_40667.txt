[site]: datascience
[post_id]: 40667
[parent_id]: 31405
[tags]: 
If you need to impute each missing value you could consider multiple imputation or interpolation methods for Time Series. e.g. https://stackoverflow.com/questions/49308530/missing-values-in-time-series-in-python If the goal is to simply predict the entry time to Stage 10 and not worry about when they hit the intermediate stages, you can treat is a regression problem i.e. just predict time to Stage 10. The simplest way might be this - just treat it like a normal supervised learning problem with some missing data. The only extra step is you need to create some missingness in your training/test data to match the data you will score. Your train/test data will consist of all records with the full data up to stage 10. Use cross-validation or a train/test split within this data to create a predictive model to predict time to Stg10. Within this data randomly blank out data between Stg1 and Stg9 to simulate the scoring dataset but keep Stg10 as you need a label to predict. Use a tree based method such as Random Forests as they are OK with the dependence between the variables and will deal with missing data. Use this model to score the unlabelled data (i.e. where there is no Stg10 info). The remaining problem is the level of completeness within the unlabelled dataset. If they are filled up to Stg9 you have no problem. If they all go to Stg1 you have a problem! So you will have to see if you have enough completeness in your data to support this method. But it's a valid place to start and may turn out to be sufficient for your purpose..
