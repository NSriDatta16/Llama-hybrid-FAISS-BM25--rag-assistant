[site]: stackoverflow
[post_id]: 5626395
[parent_id]: 
[tags]: 
Accessing the intrinsic type hash functions for tr1/unordered_map

I'm messing around with the unordered_map class template, and I'd like to write a custom hasher for my class. The documentation for it mentions that default hashing functions are provided for the intrinsic types. So, if you declare: std::tr1::unordered_map foo; You automatically get a hasher defined for you. There's a good example on here on how to provide a functor if you want a custom hash function. However, what if I have a complex class that has a std::string member that I would like to use as the key for insertion/deletion into the unordered_map ? I don't want to rewrite my own hasher. I want to leverage what was already written for the std::string type.
