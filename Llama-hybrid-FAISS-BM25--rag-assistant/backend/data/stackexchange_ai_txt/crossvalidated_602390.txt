[site]: crossvalidated
[post_id]: 602390
[parent_id]: 602379
[tags]: 
I am not sure I understand the question correctly. You want to approximate the function approximated by a ML model with another parametric function? In what scenario would that be applicable? As a general rule, don't be afraid of not using AI. If there are other established methods of modeling, use them. To stay with the neural network example: In principle, a neural network is nothing else than a weighted, summed interconnection of different transfer functions (tanh, ReLu, etc.). Of course, one can look at the weights and activation of individual neurons and try to draw any conclusions from that. However, in the case when one has trained a good model (good in the sense of good generalization ability), one uses the entire "capacity" of the network. I.e. there are no unnecessary weights. Otherwise these could be eliminated by regularization / pruning. So in this case you already have a very good model. To simplify it further will be difficult. And of course the question then arises, why one would want to do that, if one already has a well working model. In general, however, it is not possible to draw any conclusions about the physical origins of the input-output behavior from the trained weights of the model. At least not yet - there is a whole research direction dealing with this question: explainable AI. If one already has a rough idea of the system interactions, one can use physics-inspired neural networks. These predetermine the structure of known relationships and only individual parameters or the behavior of individual subsystems are learned.
