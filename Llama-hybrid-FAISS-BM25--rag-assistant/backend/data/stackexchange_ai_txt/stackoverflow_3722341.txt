[site]: stackoverflow
[post_id]: 3722341
[parent_id]: 3721524
[tags]: 
The simplest thing to try that just might work is a nearest-neighbor algorithm: compute the similarity between a new set of answers and every set of answers with a known solution (weighting by total number of answers, if that's what you want), and offer the most-frequently-chosen known solution from the set of equally close set of answers. If that doesn't perform well, then you want a more sophisticated classifier of some sort. You should look up decision trees (and their extensions, alternating decision trees and random forests) and Bayesian classifiers , among others. You can find code for some of these things in machine learning or neural network toolboxes. Since you didn't specify a language, I can't point to one, but the algorithms (not code) are described in various books like The Elements of Statistical Learning by Hastie, Tibshirani, and Friedman.
