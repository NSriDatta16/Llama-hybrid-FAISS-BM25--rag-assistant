[site]: stackoverflow
[post_id]: 1243317
[parent_id]: 1243241
[tags]: 
in general: you're looking for a memory mangager, which uses a (see wikipedia) memory pool (like the boost::pool as answered by TokenMacGuy). They come in many flavours. Important considerations: block size (fixed or variable; number of different block sizes; can the block size usage be predicted (statistically)? efficiency (some managers have 2^n block sizes, i.e. for use in network stacks where they search for best fit block; very good performance and no fragementation at the cost of wasting memory) administration overhead (I presume that you'll have many, very small blocks; so the number of ints and pointers maintainted by the memory manager is significant for efficiency) In case of boost::pool, I think the simple segragated storage is worth a look. It will allow you to configure a memory pool with many different block sizes for which a best-match is searched for.
