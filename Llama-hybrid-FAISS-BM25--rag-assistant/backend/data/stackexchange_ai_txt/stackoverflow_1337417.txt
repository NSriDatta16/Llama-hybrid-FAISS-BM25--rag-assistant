[site]: stackoverflow
[post_id]: 1337417
[parent_id]: 1292577
[tags]: 
I've done something sort of similar and my general solution was to use a lot of meta data. I'm using the term loosely to mean that any time I needed new data to make a given decision(allow a quest, allow using an item etc.) I would create a new attribute. This was basically just a table with an arbitrary number of values and descriptions. Then each character would have a list of these types of attributes. Ex: List of Kills, Level, Regions visited, etc. The two things this does to your dev process are: 1) Every time there's an event in the game you need to have a big old switch block that checks all these attribute types to see if something needs updating 2) Everytime you need some data, check all your attribute tables BEFORE you add a new one. I found this to be a good rapid development strategy for a game that grows organically(not completely planned out on paper ahead of time) - but it's one big limitation is that your past/current content(levels/events etc) will not be compatible with future attributes - i.e. that map won't give you a region badge because there were no region badges when you coded it. This of course requires you to update past content when new attributes are added to the system.
