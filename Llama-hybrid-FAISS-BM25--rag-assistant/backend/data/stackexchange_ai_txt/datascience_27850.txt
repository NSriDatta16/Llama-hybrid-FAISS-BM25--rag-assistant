[site]: datascience
[post_id]: 27850
[parent_id]: 9637
[tags]: 
In order to train an agent to play a board game, the first important task is to create a Reinforcement Learning environment. 4 essential aspects of an environment is: Observation space: What is the input/state, as well as its shape and range? Action space: What is the possible action, as well as its shape and range? Reward function: What is the reward for a particular pair of state + action? Will it be immediate or sparse reward? The reward function will affect the difficulty of the environment a lot. When will an episode/a game end? I highly suggest using the same API as OpenAI Gym because of its popularity and high-quality. Then you can try to apply direct these algorithms before trying on your own. They are state-of-the-art algorithms and the quality is guaranteed. About the neural network architecture, you can exploit the nature of the game for better result. For example, in Go, the position is symmetric and the actions are simple and position-independent, which is very suitable to use convolutional neural network (AlphaGo Zero). On the other hand, in Chess, because the actions are asymmetric and position-dependent, Google had to redesign the architecture to train an agent to play chess.
