[site]: stackoverflow
[post_id]: 167783
[parent_id]: 156243
[tags]: 
As others have noted, the two code snippets you show are not equivalent (for memory management reasons). As to why the former is chosen over the latter: The correct formulation of the latter would be self.aController= [[[AController alloc] init] autorelease]; Compared with the former, this adds additional overhead through use of the autorelease pool, and in some circumstances will lead to the lifetime of the object being unnecessarily extended (until the autorelease pool is released) which will increase your application's memory footprint. The other "possible" implementation (depending on where the example is from) is simply: aController = [[AController alloc] init]; However, setting an instance variable directly is strongly discouraged anywhere other than in an init or dealloc method. Elsewhere you should always use accessor methods. This brings us then to the implementation shown in sample code: AController *tempAController = [[AController alloc] init]; self.aController = tempAController; [tempAController release]; This follows best practice since: It avoids autorelease; It makes the memory management semantics immediately clear; It uses an accessor method to set the instance variable.
