[site]: crossvalidated
[post_id]: 83915
[parent_id]: 83908
[tags]: 
Based on what you have told me of the study, I believe it would be perfectly acceptable to model close ship distances (truncate the data as you have done) separately from far ships if it appears the ships have no effect on the birds if they are too far away. You could do what is called broken-stick regression, also known as segmented or piecewise regression. I would suggest plotting the response by distance, and if there appears to be a distinct difference in the model when ship distance is high compared to when the ship distance is low, this provides good evidence using broken-stick regression. I have a hunch (without seeing your data) that birds are not affected by far away ships at all (because they cannot even sense the ships), but may nicely fit the logistic regression as ships get closer. This would explain why the logistic regression coefficient was insignificant when all distances were included, yet it was significant when fit on the truncated data (see example scenario below). If the data support this idea, you could find the breakpoint and then fit both sides separately. The diagram below is a simple example of what I think your data may look like. The solid dots represent the data (Fly/notFly vs Distance). I then noticed that it appears the close Distances are more likely to result in Fly, but high Distances seem to have a constant (and low) probability of Fly as if they are unaffected by Distance. So I modeled the Distances Logistic regression performed on all distances gave the following fit (notice Distance is not significant): Logistic regression performed on Distance Even if you do down weight the far distance observations, you would in effect be stating that you believe the far away cases are less important (because they don't fit the model), so you might as well model them separately. Here is the R code I used to generate the example if you are interested: # Generate made up data Fly = c(1,1,1,0,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1) Distance = c(1:20, 20+2*(1:10), 40+4*(1:10)) plot(Fly ~ Distance) # Fit all distances using logistic regression fitAll = glm(Fly ~ Distance, family = binomial) summary(fitAll) # Fit 30 closest points (Distance 40 points(rep(fitClose$fitted[30],10) ~ Distance[31:40], col = "red")
