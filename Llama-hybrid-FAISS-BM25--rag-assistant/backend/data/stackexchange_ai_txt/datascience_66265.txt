[site]: datascience
[post_id]: 66265
[parent_id]: 66254
[tags]: 
You should not leave the column as it is since similar id values are not semantically related. Maybe a deep neural network could handle this, but linear models definitely do not. There are two options, depending on the cardinality (the number of unique entries/categories) of the column. If the cardinality is low you should one-hot-encode the series, one column for each series, like you propose. However, in your dataset, there are probably many series, and your data will end up having too many features. See this image ( source ), you need one column/feature for each category if you one-hot encode. If the cardinality is high, you should find an encoding for the id column. One way would be using target statistics: Calculate the mean target (in your case revenue) a movie of a series makes for each series-category of the training set. Then replace the id column with a column of the target-means for the respective series. If there is a series in the test data, which is not in the training data, just use the overall target mean of the training set. It is important for this approach that you never use target-statistics calculated from the test set, otherwise, your error estimate will be highly optimistic! The rationale behind this approach is, that the model is allowed to learn things like "continuations of successful movies are often successful".
