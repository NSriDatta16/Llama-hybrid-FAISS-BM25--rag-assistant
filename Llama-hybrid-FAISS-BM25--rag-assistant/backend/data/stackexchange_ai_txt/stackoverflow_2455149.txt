[site]: stackoverflow
[post_id]: 2455149
[parent_id]: 872623
[tags]: 
In situations like this in Code Igniter I prefer one of two posiibilities: 1) Have model's attribute and setter like this: class X extends Model { var $Y_model; public function setY($Y) { $this->Y_model = $Y; } public function doItRightNow($a,$b) { $list = $this->Y_model->getSomeList($a,$b); // ... } // ... } And then use this setter before other methods to give an instance of other model so it can be used by methods. $this->load->model('X'); $this->load->model('Y'); $this->X->setY($this->Y); $this->X->doItRightNow($something,$somethingElse); 2) To have a parameter in method by which I will give an other model instance from controller. class X extends Model { public function doItRightNow($a,$b,$Y_model) { $list = $Y_model->getSomeList($a,$b); // ... } // ... } And use it like this: $this->load->model('X'); $this->load->model('Y'); $this->X->doItRightNow($something,$somethingElse,$this->Y); I think that these are more clean possibilities. Which way to use depends on how many methods need to access other model. If there are one or two it might be better to give it as a method parameter. If more - I think it's better to have a class attribute and setter. And in elegant way you can give one model or another depending on some condition - if they both partially implement same interface with the same kind of data returned (it's rarely useful, but it can be sometimes).
