[site]: stackoverflow
[post_id]: 2179180
[parent_id]: 2128708
[tags]: 
There's not really a typical "functional programming" name for that specific operation. In fact, the way I phrased the question presupposes a language that works like Lisp, where functions are applied to lists of arguments. It also assumes that "mapping" in the first place means doing something like Lisp's 'mapcar'. Not every language works that way. For example, Haskell functions take only one typed argument (see the other answers and comments, and http://www.haskell.org/tutorial/index.html ). Mapping a function that takes a tuple type over a list of that type is conceptually similar to the operation I was asking about, and in that case the relevant function is...'map'. As far as Lisp is concerned, that's just the way the 'mapcar' version of mapping a function over arguments works - it zips up the lists it takes as inputs and applies the function to map to the resulting argument lists. Some other function could just as easily take the zipped argument lists instead and still be called some variant of "map". My thanks to everyone who contributed to what was, for me, pretty educational.
