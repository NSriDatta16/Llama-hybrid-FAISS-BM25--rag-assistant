[site]: stackoverflow
[post_id]: 205384
[parent_id]: 205337
[tags]: 
First thing I would check is the data types - the exact definition of datatypes varies from database to database. I would create a mapping list that tellme what to map each of the datatypes to. That will help in building the new tables. I would also check for data tables or columns that are not being used now. No point in migrating them. Do the same with functions, job, sps, etc. Now is the time to clean out the junk. How are you accessing the data through sps or dynamic queries from the database? Check each query by running it aganst a new dev database and make sure they still work. Again there are differences between how the two flavors of SQl work. I've not used my sql so I'm not sure what some of the common failure points are. While you are at it you might want to time new queries and see if they can be optimized. Optimization also varies from database to database and while you are at it, there are probably some poorly performing queries right now that you can fix as part of the migration. User defined functions will need to be looked at as well. Don't forget these if you are doing this. Don't forget scheduled jobs, these will need to be checkd and recreated in myslq as well. Are you importing any data ona regular schedule? All imports will have to be rewritten. Key to everything is to use a test database and test, test, test. Test everything especially quarterly or annual reports or jobs that you might forget. Another thing you want to do is do everything through scripts that are version controlled. Do not move to production until you can run all the scripts in order on dev with no failures.
