[site]: stackoverflow
[post_id]: 2775728
[parent_id]: 2775114
[tags]: 
I would suggest you to debug/trace your application to check what's going on. It's very helpful in understanding how things work in OTP. In your case, you might want to do the following. Start the tracer: dbg:tracer(). Trace all function calls for your supervisor and your gen_server: dbg:p(all,c). dbg:tpl(echo_server, x). dbg:tpl(echo_sup, x). Check which messages the processes are passing: dbg:p(new, m). See what's happening to your processes (crash, etc): dbg:p(new, p). For more information about tracing: http://www.erlang.org/doc/man/dbg.html http://aloiroberto.wordpress.com/2009/02/23/tracing-erlang-functions/ Hope this can help for this and future situations. HINT: The gen_server behaviour is expecting the callback terminate/2 to be defined and exported ;) UPDATE: After the definition of the terminate/2 the reason of the crash is evident from the trace. This is how it looks: We (75) call the crash/0 function. This is received by the gen_server (78). ( ) call echo_server:crash() ( ) ! {'$gen_call',{ ,#Ref },crash} ( ) ,#Ref },crash} ( ) call echo_server:handle_call(crash,{ ,#Ref },none) Uh, problem on the handle call. We have a badmatch... ( ) exception_from {echo_server,handle_call,3} {error,{badmatch,2}} The terminate function is called . The server exits and it gets unregistered. ( ) call echo_server:terminate({{badmatch,2}, [{echo_server,handle_call,3}, {gen_server,handle_msg,5}, {proc_lib,init_p_do_apply,3}]},none) ( ) returned from echo_server:terminate/2 -> ok ( ) exit {{badmatch,2}, [{echo_server,handle_call,3}, {gen_server,handle_msg,5}, {proc_lib,init_p_do_apply,3}]} ( ) unregister echo_server The Supervisor (77) receive the exit signal from the gen_server and it does its job: ( ) , {{badmatch,2}, [{echo_server,handle_call,3}, {gen_server,handle_msg,5}, {proc_lib,init_p_do_apply,3}]}} ( ) getting_unlinked ( ) ,process, , {{badmatch,2}, [{echo_server,handle_call,3}, {gen_server,handle_msg,5}, {proc_lib,init_p_do_apply,3}]}} ( ) call echo_server:start_link() Well, it tries... Since it happens what Filippo said...
