[site]: stackoverflow
[post_id]: 4584182
[parent_id]: 
[tags]: 
The correct way of doing delegates or callbacks in PHP

I need to implement the following pattern in php: class EventSubscriber { private $userCode; public function __construct(&$userCode) { $this->userCode = &$userCode; } public function Subscribe($eventHandler) { $userCode[] = $eventHandler; } } class Event { private $subscriber; private $userCode = array(); public function __construct() { $this->subscriber = new Subscriber($this->userCode) } public function Subscriber() { return $this->subscriber; } public function Fire() { foreach ($this->userCode as $eventHandler) { /* Here i need to execute $eventHandler */ } } } class Button { private $eventClick; public function __construct() { $this->eventClick = new Event(); } public function EventClick() { return $this->eventClick->Subscriber(); } public function Render() { if (/* Button was clicked */) $this->eventClick->Fire(); return ' '; } } class Page { private $button; // THIS IS PRIVATE CLASS MEMBER !!! private function ButtonClickedHandler($sender, $eventArgs) { echo "button was clicked"; } public function __construct() { $this->button = new Button(); $this->button->EventClick()->Subscribe(array($this, 'ButtonClickedHandler')); } ... } what is the correct way to do so. P.S. I was using call_user_func for that purpose and believe it or not it was able to call private class members, but after few weeks of development i've found that it stopped working. Was it a bug in my code or was it some something else that made me think that 'call_user_func' is able call private class functions, I don't know, but now I'm looking for a simple, fast and elegant method of safely calling one's private class member from other class. I'm looking to closures right now, but have problems with '$this' inside closure...
