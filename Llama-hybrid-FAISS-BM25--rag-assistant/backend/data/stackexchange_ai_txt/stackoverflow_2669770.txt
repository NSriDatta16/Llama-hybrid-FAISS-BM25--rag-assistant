[site]: stackoverflow
[post_id]: 2669770
[parent_id]: 
[tags]: 
Composite key syntax in Boost MultiIndex

Even after studying the examples , I'm having trouble figuring out how to extract ranges using a composite key on a MultiIndex container. typedef multi_index_container , indexed_by >, // ID index ordered_non_unique >, // Age index ordered_non_unique >, // Household index ordered_non_unique , const_mem_fun > > > // end indexed_by > HostContainer; My goal is to get an iterator pointing to the first of the subset of elements in HostContainer hmap that has age partnerAge and returns false to Host::isPaired() : std::pair pit = hmap.equal_range(boost::make_tuple( partnerAge, false ) ); I think this is very wrong. How/Where do I specify the iterator index (which should be 3 for age & eligibility)? I will include other composite keys in the future. What exactly are the two iterators in std::pair ? (I'm copying syntax from an example that I don't understand.) I would ideally use std::count to calculate the number of elements of age partnerAge that are eligible (return false to Host::isPaired() ). What is the syntax for extracting the sorted index that meets these requirements? I'm obviously still learning C++ syntax. Thanks in advance for any help.
