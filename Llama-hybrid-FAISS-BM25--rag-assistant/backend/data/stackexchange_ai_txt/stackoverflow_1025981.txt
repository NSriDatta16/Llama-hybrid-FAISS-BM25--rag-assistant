[site]: stackoverflow
[post_id]: 1025981
[parent_id]: 1025430
[tags]: 
I guess you're a bit confused over these things, and they are confusing, so let's go over them slowly. N-Tiered Architecture and MVC are different, but intertwined. N-Tier usually talks about separating Data Access, Business Logic and the User Interface. However, some people may argue that it is impossible to totally separate BLLs from the UI; MVC addresses that, in such a way that there is a corresponding Controller talking to your BLL, and to your View, as opposed to having your View talk directly to your BLL. Yes, having repositories is one approach to having a DAL . There are many ways of doing this, and you should not limit yourself to what is discussed in the book. The book only uses LINQ to SQL to demonstrate ASP.NET MVC the fastest way possible, but it is NOT the only way. Stop thinking about LINQ to SQL for a minute; ASP.NET MVC can be used whether you use an ORM like NHibernate or you use plain ADO.NET + DAL Factory or whatever -- what you'll not going to be able to use are those ASP.NET ObjectDataSources that you drag and drop with your UI. As for Entity Framework, Brad Abrams wrote a nice guide on how to use Entity Framework with ASP.NET MVC , that should cover your last question. HTH
