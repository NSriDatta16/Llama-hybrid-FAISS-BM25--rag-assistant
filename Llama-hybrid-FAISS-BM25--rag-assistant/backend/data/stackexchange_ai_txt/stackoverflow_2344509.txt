[site]: stackoverflow
[post_id]: 2344509
[parent_id]: 2344496
[tags]: 
The obvious solution is a function to map a digit to a list of keys, and then a function that would generate the possible combinations: The first is obvious, the second is more problematic because you have around 3^number of digits combinations, which can be a very large number. One way to do it is to look at each possibility for digit matching as a digit in a number (on base 4) and implement something close to a counter (jumping over some instances, since there are usually less than 4 letters mappable to a digit). The more obvious solutions would be nested loops or recursion, which are both less elegant, but in my opinion valid. Another thing for which care must be taken is to avoid scalability issues (e.g. keeping the possibilities in memory, etc.) since we are talking about a lot of combinations. P.S. Another interesting extension of the question would be localization.
