[site]: stackoverflow
[post_id]: 3246440
[parent_id]: 3246161
[tags]: 
I agree with the previous answers that you should not really care about the performance of your debug build in general. The tests are there because we need them... However, I am a pragmatic programmer, and there is a reason I do not use a valgrinded application to run my tests: I don't want them to be too slow either, because the system becomes completely impractical at that point. I don't see anything wrong with enabling inlining, sure the debugger might have some issues picking out the place in code which produced the code, but it doesn't modify the code itself. I have also seen partial-debug builds. The idea is to turn off those debug features which really cripple the program (like iterator checking) so that performance remains acceptable for the task at hand. It could potentially help you here, if you figure which debug features slows you down. That being said I have never had performance issues with boost, but then I compile it with gcc and I don't know if inlining is preserved or not in debug.
