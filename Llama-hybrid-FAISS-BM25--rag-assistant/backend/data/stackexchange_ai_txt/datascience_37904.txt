[site]: datascience
[post_id]: 37904
[parent_id]: 
[tags]: 
Multi-class time series data in LSTM

I have a data set that includes the individual performance of a number of "actors" over some period of time. For a less-than-ideal contrived example (I'm not able to share the actual use case), you can imagine this is a set of stocks on the NYSE. My goal is to use an LSTM model to predict T+1 value for a given actor I have a dataframe which looks something like this: +----------+---------+-----------+-----+-----------|-------+ | Date | ActorID | Feature 1 | ... | Feature X | Value | +----------+---------+-----------+-----+-----------+-------+ | 1/1/2019 | 1 | 1.1 | ... | 0.123 | 1.111 | | 1/2/2019 | 1 | 1.2 | ... | 0.456 | 1.222 | | 1/3/2019 | 1 | 1.3 | ... | 0.789 | 1.333 | | 1/1/2019 | 2 | 1.4 | ... | 0.123 | 1.444 | | 1/2/2019 | 2 | 1.5 | ... | 0.456 | 1.555 | | 1/3/2019 | 2 | 1.6 | ... | 0.789 | 1.666 | +----------+---------+-----------+-----+-----------+-------+ My question is how to ideally feed this data into my LSTM model for training. Do I flatten the dataframe and turn all the actors' data on a given day into a single array? Do I feed them sequentially? Any general direction on the approach here would be hugely helpful. Thanks in advance!
