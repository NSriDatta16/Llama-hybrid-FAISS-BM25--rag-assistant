[site]: stackoverflow
[post_id]: 1281094
[parent_id]: 1281073
[tags]: 
People have been embedding tcl in larger projects for what seems like ages. It's been a while since I've had to use tcl for anything... One of the things that sets tcl apart from other programming languages is that everything is a string. And for your reference, here's the tcl documentation on string functions . tcl might be easier to embed than perl, but I do have to agree @Matthew Scharley's reasoning. Also, tcl isn't exactly known for it's performance, but maybe that's changed in recent years. Anyway, here is the tcl wiki link on embedding tcl in C applications , and a relevant quote from the page: "How do I embed a Tcl interpreter in my existing C (or C++) application?" is a very frequently-asked question. It's straightforward, certainly far easier than doing the same with Perl or, in general, Python; moreover, this sort of "embeddability" was one of the original goals for Tcl, and many, many projects do it. There are no complete discussions of the topic available, but we can give an overview here. (RWT 14-Oct-2002) Another alternative might be to go with Lua, as you mentioned, while extending it with another C string library of your choice (Google turns up The Better String Library , for instance). Once you've compiled Lua into your application, you can "extend" C functions to Lua's interpreter . Or maybe the built-in string functions are adequate for you. You certainly have a few options.
