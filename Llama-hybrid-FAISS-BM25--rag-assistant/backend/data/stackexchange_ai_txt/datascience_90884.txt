[site]: datascience
[post_id]: 90884
[parent_id]: 90854
[tags]: 
It's not going to be pretty, but you just for-loop your code: ax, fig = plt.subplots() for i in range(30): ax.plot(X_test[i].T, label='y_true_' + i) ax.plot(x_test_pred[i].T, label='yhat_conv' + i) plt.show() Because you have so many lines, it would be best to remove the legend from the plot as it will be too much information to interpret. You could use additional subplots e.g. ax,fig = plt.subplots(5,6) and plot one row on each subplot e.g. ax[1].plot(first_plot) etc. It might be more suitable to generate some summary statistics or differences of the lines (as suggested in the comments). One way would also to plot the error bars/distributions of the lines as shaded regions and just the line of the average for particular groups , similar to the plot below:
