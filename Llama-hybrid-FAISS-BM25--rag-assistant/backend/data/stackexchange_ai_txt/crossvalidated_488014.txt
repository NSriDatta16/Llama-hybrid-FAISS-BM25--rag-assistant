[site]: crossvalidated
[post_id]: 488014
[parent_id]: 
[tags]: 
How to extract noise parameters from $y = kx$ data, with multiparameter noise components

I'm interested in extracting noise parameters from (x, y) data, where x are known input values and y are the corresponding signals. There is strict linear relationship between y and x; in the absence of noise y = kx. Furthermore, I typically know quite well the functional form of the (sometimes complex and multi-step) noise-generating processes. The only unknowns are the parameters that characterize the noise and errors, and I'm interested in finding them in order to understand (and improve) the underlying processes better. For instance, in the example below, the signals y are produced by a (complex) process. Initially, the signal (virtual signal at this point) is proportional to input x. The first actual step in the process attenuates the signals by 30% and corrupts it by constant gaussian background noise (with avg = 100, stdev = 5). Then, discrete counts are generated by a process that can be accurately approximated by negative binomial model (theta = 500), thus compounding noise to the already noisy signal. Finally, in the last step, gaussian noise that is proportional to y (avg = 0, stdev = 5% of y) is added. ### library(MASS) n My main question is: Is there a function(s) or package(s) available in R, that takes (x, y) data, as well as user-specified noise model as inputs and returns the best estimates for (in this case) k, average1, stdev1, theta0, average2, and stdev2? My intuition tells me that no algorithm can tell everything about the noise, e.g., whether that (average) 100 y-offset seen in the data comes from the first or the second gaussian noise step, or whether it is a combination from contributions from both, as well as at which step exactly the signal attenuation (k) comes from, but I can live with that, since some constraints exist and maybe I can tell the function those as well. Also, in some cases there are lot of datapoints (even more than in my example), so that may help in getting more accurate fit. Thus, this seems like a doable thing in R (mechanistically speaking, putting aside the fact that the noise contributions may be impossible to parse apart accurately into its components), but I haven't been able to find suitable solution to my problem. Still, I am not very experienced programmer (I only know R, just enough to do simple things), and I don't have any deep understanding of (developing) algorithms, so my perceptions may be totally off, in that case my apologies. The noise levels and exact models presented in these toy examples may not be exactly what I want but are realistic. Here, I'm just trying to illustrate that I'd like to find a way to model somewhat complex and user-specified multi-parameter noise scenarios, and that the noise components can take different forms such as constant gaussian, gaussian proportional to the signal, poisson, negative binomial, and possibly others (and constant scaling is possible as well). As said, the noise-generating processes are known and can be modeled quite accurately, but the exact parametrizations vary from instance to instance and thus have to be estimated somehow; the bottleneck is to know what are the appropriate R function(s)/packages to use, how to use them correctly, and and if something like this is available in R in the first place. I'd like to stick with R, I'm simply time-limited to learn more programming languages. Thank you!
