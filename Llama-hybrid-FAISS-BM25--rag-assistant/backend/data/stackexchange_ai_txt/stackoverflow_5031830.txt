[site]: stackoverflow
[post_id]: 5031830
[parent_id]: 5010608
[tags]: 
A brief explanation of "normalized" floats In scientific notation, you write any number as x.y * 10^z , where x is a single non-zero digit. For example 212 = 2.12 * 10^2 . It's always possible for x to be a single digit, because you can keep dividing by 10 . Likewise, it's always possible for x to be non-zero, because you can keep multiplying by 10 except when trying to write the value 0 . 0 in scientific notation just ends up as 0.0 * 10^0 . More about scientific notation Moving on to floats... Floats are basically scientific notation in binary. They are written in the form x.y * 2^z . x is still a single non-zero digit, but in binary that only leaves one option: 1 ! If you're implementing floating point storage in a computer, you don't want to waste a bit that is always 1 , so you only store y and z (and +/-). But now how do you store 0 ? It turns out that a special value of z is used to mean " x is actually 0 ." Then you can store 0.0 . But you can also store 0.0010100011000 * 2^(special z) and all sorts of "denormal" values. I don't understand what toxiclib's normalize function does - I was unable to find the documentation. As far as I was aware, denormal floats have no equivalent normalized representation for the same precision float (a denormal single could be represented as a normal double, but not as a normal single). Perhaps that's what the function is doing. But unless you're dealing with some really low-level stuff or high-precision, you probably don't care. Eric Lippert has a good explanation of the anatomy of a float.
