[site]: stackoverflow
[post_id]: 1924675
[parent_id]: 1924608
[tags]: 
Good abstraction doesn't hide complexities, it takes decisions that are best left to the compiler off of your plate. Consider garbage collection: The complexities of releasing resources are delegated to a garbage collector which is (presumably) better qualified to make a decision than you, the programmer. Not only does it take the decision off your hands, but it makes a better decision than you would have yourself. Explicitness is (sometimes) good because it makes it so that certain decisions that in some cases are better left to the programmer are not automatically made by a less qualified agent. A good example is when you're declaring a floating point data type in a c-type language and initializing it to an integer: double i = 5.0; if instead you were to declare it as var i = 5; the compiler would rightfully assume you want an int and operations later on would be truncated.
