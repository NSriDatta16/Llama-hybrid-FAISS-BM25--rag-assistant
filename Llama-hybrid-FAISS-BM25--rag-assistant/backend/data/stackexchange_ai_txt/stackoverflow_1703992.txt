[site]: stackoverflow
[post_id]: 1703992
[parent_id]: 1672530
[tags]: 
OAuth tokens are explicitly a session identifier, interaction is not stateless between requests in the OAuth token negotiation protocol as the requests must be performed in a specific sequence, and they do require per-client storage on the server as you need to track things like when they were issued. So yes, OAuth does violate the strict principles of a RESTful architecture. Unfortunately there's the Real World TM to contend with where we need to do things like allow applications to authenticate on the behalf of individuals without requesting their password, which OAuth does fairly well. It would be impossible to implement a similarly secure authentication scheme without this kind of state. Indeed, one of the changes required by OAuth (1.0a) was to add more state to the token negotiation protocol to mitigate a security risk. So, does it torpedo REST's stateless principle? Yes. Does that matter? Not unless you live in an ivory tower :-)
