[site]: stackoverflow
[post_id]: 3185988
[parent_id]: 
[tags]: 
Separation of concerns dilemma in Rails

I'm trying to make logging for my rails app and have some dilemmas over philosophy used in rails. My app has Link model which has_many Hit s: class Link Now each time the link is being hit, I call hit! method to record a request on the link (to keep the controller skinny I make the model fat): class LinksController Now here's where I'm confused. I want to record the data that came with request object (like remote ip, referrer, user agent, etc.) so I need to pass request object down to model, but I believe that this does not conform to "separation of concerns" and blurs responsibility lines in MVC design pattern (of course, correct me if I'm wrong). Also if I'll create a Hit object in controller itself, then I'm making skinny model and fat controller: class LinksController params[:id]) end end Although the latter case makes testing much easier (I don't need to mock request in model specs) - it just doesn't seem right. Any advice on this - much appreciated. P.S. extract_data_from_request(req) method is placed in appropriate places where needed. It returns a hash of needed attributes for Hit object.
