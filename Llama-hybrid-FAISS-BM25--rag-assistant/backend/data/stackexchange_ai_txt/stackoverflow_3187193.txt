[site]: stackoverflow
[post_id]: 3187193
[parent_id]: 3186381
[tags]: 
I have created a simple extension method. And it turns out to be two times more efficient in a simple stopwatch benchmark. public class Report { public DateTime? Date { get; set; } public int RECAUDACION { get; set; } public int SERVICIOS { get; set; } } static class EnumerableEx { public static Tuple AveragePerMonth(this IEnumerable reports) { var months = new HashSet (); double RECAUDACION = 0d; double SERVICIOS = 0d; foreach (Report rep in reports) { if (!months.Contains(rep.Date.Value.Month)) { months.Add(rep.Date.Value.Month); } RECAUDACION += rep.RECAUDACION; SERVICIOS += rep.SERVICIOS; } var totalMonth = months.Count; if (months.Count > 0) { RECAUDACION /= totalMonth; SERVICIOS /= totalMonth; } return Tuple.Create (RECAUDACION, SERVICIOS); } }
