[site]: stackoverflow
[post_id]: 1935177
[parent_id]: 1935147
[tags]: 
Disclaimer: My qt is rather rusty, but the signal/slot mechanism is still just C++ function calls. If the signal/slot mechanism actually copies objects into internal storage, my apologies (you'll need to check the Qt pages, there's a big one on signals/slots afaik) - as the bits below will only be relevant in a C++ context, not in a C++ + Qt context. If you leave out the reference, the string will be copied (and having the const would not matter, any changes made to it will remain in the function alone). If you leave in the reference but take out the const, you allow the method to modify the string that you give it. They both work, but do different things to the object you pass (amount of copying/possibility of retaining changes). I suggest you read the following resources: (on const correctness) https://isocpp.org/wiki/faq/const-correctness (on references) https://isocpp.org/wiki/faq/references to understand exactly what passing a parameter is and how void foo(const A&) / void foo(const A) / void foo(A&) / void foo(A) are all different.
