[site]: stackoverflow
[post_id]: 2990525
[parent_id]: 2989961
[tags]: 
As @Jerry Coffin said, it really sounds like your actual problem is a memory leak. Fix that. But for the record, none of your "poor mans solutions" would work. At all. Windows pages out some of your data because there's not room for it in RAM . Looping through the entire memory database would load in every byte of the data model, yes... which would cause other parts of it to be paged out. In the end, you'd generate a lot of page faults, and the only difference in the end would be which parts of the data structure are paged out. Disabling the page file? Yes, if you think a hard crash is better than low performance. Windows doesn't page data out because it's fun. It does that to handle situations where it would otherwise run out of memory. If you disable the pagefile, the app will just crash when it would otherwise page out data. If your dataset really is so big it doesn't fit in memory, then I don't see why an SQL database would be especially "expensive". Unlike your current solution, databases are optimized for this purpose. They're meant to handle datasets too large to fit in memory, and to do this efficiently. It sounds like you have a memory leak. Fixing that would be the elegant, efficient and correct solution. If you can't do that, then either throw more RAM at the problem (the app ends up using 16GB? Throw 32 or 64GB at it then), or switch to a format that's optimized for efficient disk access (A SQL database probably)
