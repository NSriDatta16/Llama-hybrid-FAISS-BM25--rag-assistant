[site]: stackoverflow
[post_id]: 2941508
[parent_id]: 2941491
[tags]: 
I don't see what could be more elegant than just parsing -- but please make use of standard library facilities already in place. Assuming you don't need error checking: void Parse(int result[4], const std::string& input) { std::istringstream parser(input); parser >> result[0]; for(int idx = 1; idx > result[idx]; } } bool LessThanVersion(const std::string& a,const std::string& b) { int parsedA[4], parsedB[4]; Parse(parsedA, a); Parse(parsedB, b); return std::lexicographical_compare(parsedA, parsedA + 4, parsedB, parsedB + 4); } Anything more complicated is going to be harder to maintain and isn't worth your time.
