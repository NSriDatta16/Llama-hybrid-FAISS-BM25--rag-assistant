[site]: stackoverflow
[post_id]: 4350651
[parent_id]: 
[tags]: 
Efficient way to convert a 2D bitmap into a 3D cube model?

I want to create cube model of a 32x32 bitmap in opengl. For example, the result should look something like this given a 2D bitmap of Bob-omb from Super Mario: http://fc02.deviantart.net/fs49/f/2009/186/f/a/Bob_omb_in_Minecraft_by_Luafox.png The idea is to represent each 2D pixel from the bitmap as a 3D cube. Each model will represent an enemy in a game so I need to be able to render these quickly. What would be a good way of doing this? One attempt I've made is to generate a static 3D model from the bitmap by first creating a 32x32x2 grid of vertices and then creating triangles from these vertices in the appropriate places to form the cube faces. One big problem I'm having though is how to store the colors and normals for the faces. The triangles of each face need to share a vertex and that shared vertex needs to store the color and the normal for that face. However, I don't think I have enough vertices for each face to have the appropriate color and normal. I can't think of an elegant way to solve this.
