[site]: crossvalidated
[post_id]: 449725
[parent_id]: 449721
[tags]: 
A great professional of machine learning should know a mix of the ingredients that make up the Computer Scientist and Statistician. Furthermore, It should also know some math to be able to realy learn these subjects. Math 1) Calculus in $\mathbb{R}^n$ and Optimization (diferential calculus, interior optimization, properties of gradients, constraint optimization, integrals (to know how to calculate expected values)). Calculus 2) Math analysis Mathematical analysis 3) Linear Algebra (The more you know, the better. Solutions of linear systems, inverses and pseudo inverses, decompositions, vector spaces, linear transformations) Linear algebra Linear algebra and optimization 4) Numerical Calculus and analysis (solution of linear and non-linear systems, numerical solutions of eigenvectors/eigenvectors, several gradient methods) Scientific computing Numerical analysis 5) Notions of Applied Functional Analysis (for example, Banach Fixed Point Theorem, Hilbert Spaces Projection Theorem) Functional analysis 6) Convex optimization and optimization (theory and numerical analysis) Convex optimization Optimization 7) Measure theory (to understand the details of probability theory) Concise and great measure theory Related knowledge: 1) Probability Theory and Statistics Probability theory Introduction to probability Statistical inference Statistical learning Monte Carlo methods Bayesian theory Bayesian analysis 2) Multivariate statistics (for example, principal component analysis) Multivariate statistics 3) Regression models (linear regression, binary response) Introductory econometrics Intermediate econometrics: lots of interesting models Generalized linear models 4) Time series A very good introduction Hamilton: The bible With deep math 5) Neural network models (classic problems and also those that include Deep Learning) Classical neural networks (preparation for deep learning) Deep learning 6) Lots of computer programming (structured, functional and object oriented programming, pattern design) Think python Functional programming OOP and Design pattern A great book of design pattern 7) Algorithms (algorithms and algorithm complexity). Levitin Cormen Kleinberg 8) Reinforcement learning (Dynamic Programming and Monte Carlo methods) Putterman: Math Suton and Barto: Computation 9) Languages: Python and R Think python Advanced R 10) Database: MySQL, PostgreSQL and Hadoop Data base systems Beautiful database in python More database Finally, you need to have practical experience. Nothing better than connecting with a community that has the same interests as you. You can also face competitions. Most of this answer comes from a previous answers 1 and 2 that I gave to this (Brazilian) site. I must have forgotten lots of great references... Sorry about that.
