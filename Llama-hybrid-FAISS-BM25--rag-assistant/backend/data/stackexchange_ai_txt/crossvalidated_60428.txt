[site]: crossvalidated
[post_id]: 60428
[parent_id]: 
[tags]: 
How to train SVM correctly on a 1D dataset

I am trying to use svmtrain (Statistic Toolbox) to train a linear (2 class) SVM on a 1D feature vectors. The features are not fully separable and the classes intersect. The naive approach would be to search for the optimal threshold for a simple classification, but one can expect to get similar (or even the same) results using a linear SVM. I am using all the default parameters and the SVM gives a different threshold and performs much worse than searching for a threshold (0.73 accuracy with threshold search vs. 0.66 accuracy with SVM). The motivation for the process is as follows: While 1D vectors can be separated into 2 classes using a simple threshold, when the dimension is > 1, the threshold approach is not feasible and requires an SVM (or similar methods) to find a separation. To make sure I configure and use the SVM correctly I first expect to get very similar results using threshold search and SVM on a 1D vectors. Would be happy to know what am I doing wrong to get this kind of difference in performance.
