[site]: stackoverflow
[post_id]: 914294
[parent_id]: 914151
[tags]: 
Using a PHP opcode cache will dramatically cut down on the time taken to open and compile PHP scripts, by skipping the parsing and compilation into bytecode. Turning on the MySQL query cache is generally (though not always) a good idea. Rather than focusing on the number of queries, focus on reducing the time those queries take by optimising your queries . It is often much more efficient to have a larger number of small, optimised queries than to try and reduce the number of queries. Use a profiler such as the one built in to XDebug . Together with an interpreter like KCacheGrind or WinCacheGrind, optimising code really helps when you know what to focus on. It's not worth optimising something that contributes only a negligible amount to your total execution time. It's worth getting to know what everything in *CacheGrind means. My PHP content management system usually loads a page in about the same amount of time (down to minimum 8ms where everything is a cache hit). But very occasionally, when you do something complex it may take over 500ms. When concerned about user experience the typical time is more important, not so much the outliers, but when concerned about server load the average time is more important, so those 500ms outliers are suddenly quite important.
