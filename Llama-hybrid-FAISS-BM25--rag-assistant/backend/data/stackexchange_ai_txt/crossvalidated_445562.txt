[site]: crossvalidated
[post_id]: 445562
[parent_id]: 
[tags]: 
What are the practical uses of Neural ODEs?

"Neural Ordinary Differential Equations", by Tian Qi Chen, Yulia Rubanova, Jesse Bettencourt and David Duvenaud, was awarded the best-paper award in NeurIPS in 2018 There, authors propose the NeuralODE, which is a method that fuses concepts of Differential Equations and Neural Networks. Borrowing from previous literature and contributing newer developments, NeuralODEs can, for example, use Differential Equation Solvers in their forward pass and still maintain a computable backward pass. Two examples in the paper really caught the attention in the media I think, which were on Flow-based generative modelling and the pseudo-equivalence between the ResNet skip-connection depth and the NeuralODE number of function evaluations (see more here: What is the continuous depth concept in Neural ODE paper by David Duvenaud? ). So, for brevity's sake, two questions need to be made pertaining to the way they are to be actually used (which I'm surprised we did not have in CV yet): Is there something NeuralODEs do that "conventional" Neural Networks cannot? Continuous time computations? "Infinite" "depth" computation? Is there something "conventional" Neural Networks do that NeuralODEs cannot do?
