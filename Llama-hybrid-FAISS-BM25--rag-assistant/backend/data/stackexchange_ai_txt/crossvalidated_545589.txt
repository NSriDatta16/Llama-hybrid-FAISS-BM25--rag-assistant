[site]: crossvalidated
[post_id]: 545589
[parent_id]: 
[tags]: 
Unseen Classes in Decision Tree algorithms

I'm trying to train an XGBoost algorithm in a multiclass classification case, where the number of classes is very high (~6000). I recognize that this is quite difficult to do as it is, however, my question is about how decision trees handle this problem generally. As such, when I split my dataset into training and test sets, there are classes that haven't been encountered before during training that we see in the test set. To me, this sounds similar to a zero-shot case, but I don't think decision trees can handle this problem. I'm able to pass in the total number of classes (both seen and unseen), but how is this handled under the hood? Will the decision tree just assign a known class to a new test example with an unseen class?
