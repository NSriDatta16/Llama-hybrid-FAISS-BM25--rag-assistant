[site]: stackoverflow
[post_id]: 340939
[parent_id]: 325906
[tags]: 
I've been using shared_ptr for years now. It's just so useful, there's no reason that a project should be without it. On top of that, I also use Bind/Function/Lambda for generic callback mechanisms -- especially useful when testing -- as well as Format for my general-purpose sprintf replacement. Finally, it was just the other day when I used Variant in anger to solve a problem (a parser that could respond with a small, fixed set of unrelated token types). The solution was very elegant, and I'm very happy with it. Years have passed and times have changed, so time for an update. SharedPtr and Function are now part of the Standard, and Bind and Lambda are obsoleted by actual language-level lambda functionality. I still use Variant (which has also been standardized, but I'm not there yet), Format is largely replaced by fmtlib (which has also been standardized). The big part of Boost that I use is Boost.Asio. Which is in the process of being standardized.
