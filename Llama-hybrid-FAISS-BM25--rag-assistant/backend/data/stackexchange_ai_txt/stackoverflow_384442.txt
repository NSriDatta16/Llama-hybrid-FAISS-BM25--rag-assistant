[site]: stackoverflow
[post_id]: 384442
[parent_id]: 
[tags]: 
f# byte[] -> hex -> string conversion

I have byte array as input. I would like to convert that array to string that contains hexadecimal representation of array values. This is F# code: let ByteToHex bytes = bytes |> Array.map (fun (x : byte) -> String.Format("{0:X2}", x)) let ConcatArray stringArray = String.Join(null, (ByteToHex stringArray)) This produces result I need, but I would like to make it more compact so that I have only one function. I could not find function that would concat string representation of each byte at the end of ByteToHex. I tried Array.concat, concat_map, I tried with lists, but the best I could get is array or list of strings. Questions: What would be simplest, most elegant way to do this? Is there string formatting construct in F# so that I can replace String.Format from System assembly? Example input: [|0x24uy; 0xA1uy; 0x00uy; 0x1Cuy|] should produce string "24A1001C"
