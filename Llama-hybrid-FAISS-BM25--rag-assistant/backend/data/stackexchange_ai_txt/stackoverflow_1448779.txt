[site]: stackoverflow
[post_id]: 1448779
[parent_id]: 1448276
[tags]: 
Visual Studio 2010 is adding 2 new libraries which support this scenario very well, the Asynchronous Agents Library and Parallel Pattern Library. The agents library has support or asynchronous message passing and contains message blocks for sending messages to 'targets' and for receiving messages from 'sources' An unbounded_buffer is a template class which offers what I believe you are looking for: #include #include #include using namespace ::Concurrency; using namespace ::std; int main() { //to hold our messages, the buffer is unbounded... unbounded_buffer buf1; task_group tasks; //thread 1 sends messages to the unbounded_buffer //without blocking tasks.run([&buf1](){ for(int i = 0 ; i
