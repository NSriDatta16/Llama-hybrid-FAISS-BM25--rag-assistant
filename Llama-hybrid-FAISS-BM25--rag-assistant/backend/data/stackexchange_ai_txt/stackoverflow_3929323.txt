[site]: stackoverflow
[post_id]: 3929323
[parent_id]: 3929228
[tags]: 
I think that instead of from pack1.mod2 you actually want to say from lib.pack1.mod2 . Edit: and, specifying what version of Python this is would help, since importation semantics have improved gradually over the years! Edit: Aha! Thank you for your comment; I now understand. You are trying to rename libraries without going inside of them and fixing the fact that their name is now different. The problem is that what you are doing is, unfortunately, impossible. If all libraries used relative imports inside, then you might have some chance of doing it; but, alas, relative imports are both (a) recent and (b) not widely used. So, if you want to use library p , then you are going to have to put it in your root directory, not inside of lib/p because that creates a library with a different name: lib.p , which is going to badly surprise the library and break it. But I have two more thoughts. First, if you are trying to do this to organize your files, and not because you need the import names to be different, then (a) create lib like you are doing but (b) do not put an __init__.py inside! Instead, add the lib directory to your PYTHONPATH or, inside of your program, to sys.path . (Does the GAE let you do something like this? Does it have a PYTHONPATH ?) Second, I am lying when I say this is not possible. Strictly speaking, you could probably do this by adding an entry to sys.metapath that intercepts all module lookups and tries grabbing them from inside of lib if they exist there. But â€” yuck.
