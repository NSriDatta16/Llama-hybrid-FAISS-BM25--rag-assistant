[site]: stackoverflow
[post_id]: 3500666
[parent_id]: 3500488
[tags]: 
In the current version of C#, I don't think you have other options than foreach... yield return and Concat . I agree it would be nice to have the yield! operator in C#, it would make certain constructs much more elegant, but I doubt this feature will ever make it to the "must-have" list, since we can easily do without it. You might be interested in this MS research paper , which introduces a new yield foreach construct : IEnumerable Traverse(XmlNode n) { yield return n; foreach (XmlNode c in n.ChildNodes) yield foreach Traverse(c); } Regarding your question about complexity: in both cases it's O(n) . O(2n) is not used, because it denotes the same complexity as O(n) (linear). I don't think you can do better than that with the current C# features...
