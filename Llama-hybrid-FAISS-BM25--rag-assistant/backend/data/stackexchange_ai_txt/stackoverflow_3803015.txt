[site]: stackoverflow
[post_id]: 3803015
[parent_id]: 
[tags]: 
Spring 3.0 HEAD Requests

recently we moved to spring 3.0 Controller handling like this: @Controller public class MyController { @RequestMapping(method = RequestMethod.POST) protected String onSubmit ( Form form, Errors errors) { // handle POST } @RequestMapping(method = RequestMethod.GET) protected void getForm ( Form form ) { // handle GET } } Now we are getting lots of Exceptions in our logs because of HEAD Requests. org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'HEAD' not supported at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter$ServletHandlerMethodResolver.resolveHandlerMethod(AnnotationMethodHandlerAdapter.java:621) at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:422) at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:415) ... I would like to support HEAD Requests the same way like GET Requests, but obeying the HTTP reference of course: The HEAD method is identical to GET except that the server MUST NOT return a message-body in the response. The metainformation contained in the HTTP headers in response to a HEAD request SHOULD be identical to the information sent in response to a GET request. This method can be used for obtaining metainformation about the entity implied by the request without transferring the entity-body itself. This method is often used for testing hypertext links for validity, accessibility, and recent modification. http://www.ietf.org/rfc/rfc2616.txt Does anybody has an elegant solution or is there even a spring solution out-of-the-box? I searched the web but did not find any answers to this.
