[site]: stackoverflow
[post_id]: 1275538
[parent_id]: 1275250
[tags]: 
I got bored. I'm sure there are optimizations / tweaks needed. Uses a little bit of jQuery to do its magic. Worked in FF3. And the answer to your question is that there isnt a very "simple" way :) $(function() { $.fn.pmaker = function() { var brs = 0; var nodes = []; function makeP() { // only bother doing this if we have nodes to stick into a P if (nodes.length) { var p = $(" "); p.insertBefore(nodes[0]); // insert a new P before the content p.append(nodes); // add the children nodes = []; } brs=0; } this.contents().each(function() { if (this.nodeType == 3) // text node { // if the text has non whitespace - reset the BR counter if (/\S+/.test(this.data)) { nodes.push(this); brs = 0; } } else if (this.nodeType == 1) { if (/br/i.test(this.tagName)) { if (++brs == 2) { $(this).remove(); // remove this BR from the dom $(nodes.pop()).remove(); // delete the previous BR from the array and the DOM makeP(); } else { nodes.push(this); } } else if (/^(?:p)$/i.test(this.tagName)) { // these tags for the P break but dont scan within makeP(); } else if (/^(?:div)$/i.test(this.tagName)) { // force a P break and scan within makeP(); $(this).pmaker(); } else { brs = 0; // some other tag - reset brs. nodes.push(this); // add the node // specific nodes to not peek inside of - inline tags if (!(/^(?:b|i|strong|em|span|u)$/i.test(this.tagName))) { $(this).pmaker(); // peek inside for P needs } } } }); while ((brs--)>0) { // remove any extra BR's at the end $(nodes.pop()).remove(); } makeP(); return this; }; // run it against something: $(function(){ $("#worker").pmaker(); }); And this was the html portion I tested against: bla bla bla long paragraph here bla bla bla more paragraph text this text should end up in a P and so should this and this without breaking at the single BR and then we have the a "buggy" clause fear the real P! and a trailing br And the result: bla bla bla long paragraph here bla bla bla more paragraph text this text should end up in a P and so should this and this without breaking at the single BR and then we have the a "buggy" clause fear the real P! and a trailing br
