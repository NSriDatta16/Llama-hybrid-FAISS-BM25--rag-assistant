[site]: stackoverflow
[post_id]: 3952069
[parent_id]: 3951780
[tags]: 
The main thing to make things more Pythonic is to adopt Python's PEP8, the style guide. It uses underscore for functions. 1 If you're returning a fixed string, e.g. your get* functions, a variable is probably a better approach. By this, I mean replace your getSourceDirectory with something like this: source_directory = "/Users/robert/Music/iTunes/iTunes Media/" Adding the following conditional will mean that code that is specific for running the module as a program does not get called when the module is imported. if __name__ == '__main__': source = getSourceDirectory() destination = getDestinationDirectory() if not os.path.exists(destination): os.makedirs(destination) walkDirectory(source, destination) I would use a try & except block, rather than a conditional to test if walkDirectory can operate successfully. Weird things can happen with multiple processes & filesystems: try: walkDirectory(source, destination) except IOError: os.makedirs(destination) walkDirectory(source, destination) 1 I've left out discussion about whether to use the standard library. At this stage of your Python journey, I think you're just after a feel how the language should be used in general terms. I don't think knowing the details of os.walk is really that important right now.
