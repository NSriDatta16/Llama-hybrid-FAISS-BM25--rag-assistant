[site]: stackoverflow
[post_id]: 3807037
[parent_id]: 3806028
[tags]: 
(Posting this as another answer, since this is a different approach than my first answer.) As I mentioned above, here's another approach involving a custom module based on the code at http://drupal.org/node/247472 . You could also just drop that code into a custom block with the "PHP" input format selected, but that's generally considered to be bad practice. Add a new folder in sites/all/modules called vocabulary_block . Customize and add the following two files: vocabulary_block.module name, "taxonomy/term/$term->tid"); } if(count($items)) { return theme('item_list', $items); } } /** * Implementation of hook_block(). */ function vocabulary_block_block($op = 'list', $delta = 0, $edit = array()) { switch ($op) { case 'list': $blocks[0]['info'] = t('List of [vocabulary] terms'); return $blocks; case 'view': if ($delta == 0) { $vid = 43; $block['subject'] = t('[Vocabulary]'); $block['content'] = vocabulary_block_get_terms($vid); } return $block; } } vocabulary_block.info name = Vocabulary Block description = Exposes a block with a simple list of terms from [vocabulary]. Each term is linked to its respective term page. ; Core version (required) core = 6.x ; Package name (see http://drupal.org/node/101009 for a list of names) package = Taxonomy ; Module dependencies dependencies[] = taxonomy Notes Be sure to change $vid = 43; to reflect the ID of the vocabulary that you'd like to load. You can find the VID by visiting admin/content/taxonomy and looking at the destination of the edit vocabulary link for your vocabulary. The VID will be the last fragment of that URL: admin/content/taxonomy/edit/vocabulary/ [vid] . I wouldn't normally hard-code the $vid into the module itself. However, setting up the necessary Drupal variable and administration form (to allow users to select a vocabulary from the Drupal interface) would be overkill for this answer. For your own documentation purposes, don't forget to search/replace [vocabulary] in those two files and use your own vocabulary's name instead. This method may not necessarily be more performant than the Views method I described earlier, especially once you start considering caching, optimization, etc. Since performance is a priority, I recommend thoroughly testing a variety of different methods on this page and choosing whichever one is fastest for you.
