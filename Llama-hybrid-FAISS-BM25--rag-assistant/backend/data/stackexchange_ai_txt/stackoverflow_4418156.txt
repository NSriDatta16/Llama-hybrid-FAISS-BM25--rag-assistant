[site]: stackoverflow
[post_id]: 4418156
[parent_id]: 4417680
[tags]: 
I don't think there's a perfect solution for your answer. I confused myself too. But with my experiences in the work and school, I made my own rules. Maybe will give you a clue about what you asked. I assume that you already known about MVC design pattern. Where Model is about to handle your business's logic and database thing. View is what you want to be seen in the screen. And the controller is to response users' request and decide which view and model should be loaded. I usually organized my Model by creating some folder(namespace) to achieve it. Here's my Model: Repository: will only do query, insert, update and delete a single table(Interface and Implements). Services: the combination of the tables based on Repository, do login and logout, and some others that not related to database access. Classes: are the declared object. Utils: static functions redirect from Repository and can be called by View. Maybe you can share yours!!
