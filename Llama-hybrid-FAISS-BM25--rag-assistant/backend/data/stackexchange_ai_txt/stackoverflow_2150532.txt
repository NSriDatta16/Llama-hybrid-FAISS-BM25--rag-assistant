[site]: stackoverflow
[post_id]: 2150532
[parent_id]: 2150295
[tags]: 
First up, I would suggest coming up with a URL scheme that you are happy with. (seems you have one already) Then I would use a ControllerFactory that will be responsible of Instantiating and running the right action on the right controller. That is independent of any routes that you define in your route table - in fact it wont matter what you have there since you want your URL to be "database driven". You invoke the controller factory from your Global.asax file : protected void Application_Start() { RegisterRoutes(RouteTable.Routes); ControllerBuilder.Current.SetControllerFactory(new Controllers.ControllerFactory()); } Then in the GetControllerType method in your ControllerFactory, you inspect the URL with RequestContext.RouteData.Values.ContainsKey("keyname") to work out the url scheme the user is presenting, and do a database look-up based on that. If you want to take this one step further, your database can also contain references to the controller to instantiate, but that would be an overkill in your situation. As a quicknote, we use that in a solution where it was important to provide the ability for non-developers to create templates without involving dev - the database held url schemes, controller and views to render on that controller. While you are at it, if you want to make things more elegant, create a BaseController that your controllers inherit from, and in there set things in your ViewData such as your SEO tags (MetaDescription, Title, etc) - look these up from your database.
