[site]: crossvalidated
[post_id]: 134745
[parent_id]: 134735
[tags]: 
I'm not sure of a typical way but here is an example solution to help you get orientated. Otherwise Google "pricing algorithms" for more examples. Ok, lots of things to assume first. I assume slots pertain to the availability of dog walkers. I assume that dog walkers are not exchangeable and that demand for them changes independently of each other. I assume that you're wanting to maximise profit overall. For a particular dog walker, the task is then to relate the price to the probability that they'll be booked at any given time such that profit is maximised. Probability needs to be derived from demand. Supply is assumed constant. Let $s_i$ be a dog walker's availability slot in $(s_1,...,s_n)$. Let $b$ stand for the base price of the dog walker's service. Let $p(s_i)$ indicate the probability of slot $s_i$ being booked. We could model the relationship between price and probability at a particular slot in various ways dependent on the response of demand to price. Here are two basic examples: Simple Linear: $price(s_i) = b + c \times p(s_i)$ where $c$ is a scaling constant. Implies that price and probability are linearly related. Simple Non-Linear: $price(s_i) = b + c/[1-p(s_i)]$ where a change in probability leads to an exponentially change in price. It might help to think of it as $b + c^{p(s_i)-1}$ which is equivalent. Determining the one to go for is a matter of trying. For now, let's pick the linear one for simplicity, so $price(s_i) = b + c \times p(s_i)$. We can set $p(s_i)$ if various ways. If we know nothing at all about which slots are then we can start with $p(s_i) = 1/n$ and update the probabilities when we know more. We could also just set the slots according to the booking frequency so that $p(s_i) = N_{s_i}/N_{t}$ where $N_{s_i}$ represents the number of booking at a particular slot time and $N_{t}$ represents the total number of bookings. Bayesian updating may be used to change the slot probabilities over time. In order to maximise your profit with the linear price all you have left to tweak is $b$ and $c$. You might start with whatever seems reasonable to you initially (e.g. $b=\$10$ and $c=\$5$) which would make the minimum and maximum prices \$10 and \$15 respectively. A simple online way to tweak $b$ and $c$ thereafter would be to use a gradient descent algorithm to change the values from week to week, constantly trying to converge on a bigger overall revenue. You'd be optimising $\underset{a,b}{\operatorname{argmax}}[\sum_{i=1}^N{b + c \times p(s_i)}]$ where $N$ is the total number of bookings. The optimisation would be local but this is may be ok for pricing dog walkers. I hope that gives you a good starting point from which to ask more particular questions. If you're interested in modelling generally, maybe have a look at my blog: http://prescientmuse.blogspot.co.uk
