[site]: stackoverflow
[post_id]: 1864806
[parent_id]: 1864525
[tags]: 
Remove search from form.submit.search i.e. form.submit I'm guessing you're appending search to submit thinking that it has something to do with the value of the submit button i.e. search. What you're code is doing IS successfully submitting the form. However you are calling the search method of the resulting page object with a nil argument. The search method expects a selector e.g. 'body div#nav_bar ul.links li' as an argument for it to return an array of elements that match that selector. Of course no elements will match a nil selector, hence the empty array. Edit per your response: Your code: ruby script/console require 'mechanize' agent = WWW::Mechanize.new agent.get("https://www.owens.edu/cgi-bin/class.pl/") agent.page.forms form = agent.page.forms.last form.occ_subject = "chm" form.submit.search => [] What I tried and got to work: ruby script/console require 'mechanize' agent = WWW::Mechanize.new agent.get("https://www.owens.edu/cgi-bin/class.pl") agent.page.forms form = agent.page.forms.last form.occ_subject = "chm" form.submit # Insanely long array of HTML elements The same code will not work with Google either: require 'mechanize' require 'nokogiri' agent = WWW::Mechanize.new agent.get("http://www.google.com") form = agent.page.forms.last form.q = "stackoverflow" a = form.submit.search b = form.submit puts a => [] # } {meta} {title "stackoverflow - Google Search"} {iframes} {frames} {links # # The search method of a page object behaves like the search method of Nokogiri, in that it accepts a sequence of CSS selectors and/or XPath queries and returns an enumerable object of matching elements. e.g. page.search('h3.r a.l', '//h3/a[@class="l"]')
