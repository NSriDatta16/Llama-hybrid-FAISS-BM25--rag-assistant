[site]: crossvalidated
[post_id]: 445829
[parent_id]: 
[tags]: 
Confidence interval for the ratio of two Gaussian means

I have data set of $\sim\! 125$ points of a certain variable $A$ that goes approx. proportional with variable $B$ . The quotient $A/B$ is approx. independent of $B$ ; however the distribution is not very Gaussian as it has some tail at low values of $A/B$ , but still not very "pathological". I calculate the mean: $ =X$ , which should be approx. Gaussian as it is the average of more than 100 data points. I also know the standard deviation of the mean: $\sigma[ ]=\sigma[X]$ . On the other hand, I have a theory that predicts a certain behavior (continuous function) of A with B, and I calculate $ =Y$ by integration in the same range of $B$ values of my data sample. This random variable is approx. Gaussian too, and I know $\sigma[ ] = \sigma[Y]$ . Because there is an important mismatch between measurements and theory, I want to quantify it calculating the ratio: $R=X/Y$ . I know that, even when $X$ and $Y$ are Gaussian, $R$ follows the "ratio" distribution. I want to calculate a likelihood $68\%$ confidence interval for the ratio $R$ . This is what I tried: 1 - Fieller's theorem , as explained in this question, seems close to giving me an answer, but because $Y$ is not the average of a certain number of measurements $N$ , but comes from an integral, I don't know how to apply it to this case. Can I "assume" a certain $N$ ? 2 - I tried expressing the variance of the ratio distribution as a function of the variances of $X$ and $Y$ but I failed. 3 - I tried a "maximum likelihood" method, but the problem is that I have only "one measurement" of $R$ , so I'm not confident that what I did is appropriate, and I found in no book any similar procedure. Furthermore: I know that if $0 then it is reasonable to approximate: $(\sigma(R)/R)² \approx (\sigma(X)/X)² + (\sigma(Y)/Y)²$ . However, for some of the theories I test, the assumption $0 is not valid, so I want to avoid it. Finally, I am looking for an analytic solution, not a numerical solution like bootstrapping for example.
