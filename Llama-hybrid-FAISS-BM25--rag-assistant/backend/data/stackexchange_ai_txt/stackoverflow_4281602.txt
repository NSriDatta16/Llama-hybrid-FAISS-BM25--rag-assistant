[site]: stackoverflow
[post_id]: 4281602
[parent_id]: 4281124
[tags]: 
This will do the trick. Not the most elegant example due to the free function with a static variable, but you can make it more elegant by using a lambda or an instance of a class for the callback target. function filter($subArray) { static $seenKeys = null; if ($seenKeys === null) { $seekKeys = array(); } // I 'm just selecting the "three first" indexes here, // you can change it to better suit your needs $thisKey = serialize(array_slice($subArray, 0, 3)); if (isset($seenKeys[$thisKey])) { return false; } else { return $seenKeys[$thisKey] = true; } } $result = array_filter($inputArray, 'filter'); I think this example is as fast as you can go in PHP without making assumptions about the type and/or values of the first three items in each subarray. If any such assumption can be made, then at the very least the serialize call can be replaced with something more appropriate. I imagine that this would speed up the process quite a bit.
