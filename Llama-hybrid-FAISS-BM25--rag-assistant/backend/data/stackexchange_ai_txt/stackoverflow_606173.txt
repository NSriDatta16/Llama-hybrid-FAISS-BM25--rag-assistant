[site]: stackoverflow
[post_id]: 606173
[parent_id]: 605889
[tags]: 
Skizz and Dazmogan have it right. On the one hand, when programmers try to make their software take as few cycles as possible, they succeed, and it is blindingly fast. On the other hand, when they don't, which is most of the time, their interest in "Galloping Generality" uses up every available cycle and then some. I do a lot of performance tuning. (My method of choice is random halting.) In nearly every case, the reason for the slowness is over-design of class and data structure. Oddly enough, the reason usually given for excessively event-driven and redundant data structure is "efficiency". As Bompuis says, we build upon many layers of abstraction. That is exactly the problem.
