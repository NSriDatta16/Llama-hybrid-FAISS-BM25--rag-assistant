[site]: stackoverflow
[post_id]: 593832
[parent_id]: 593792
[tags]: 
If you're having to rewrite the #include s to do this, you did it wrong. Change all your #includes to use a very simple directory structure, at mot two levels deep and only using a second level to organize around architecture or OS dependencies (like sys/types.h ). Then change your make files to use -I include paths. Voila. You'll never have to hack the code again for this, and compiles will blow up instantly if something goes wrong. As far as the history part, I personally find it easier to make a clean start when doing this sort of thing; archive the old one, make a new repository v2, go from there. The counterargument is when there is a whole lot of history of changes, or lots of open issues against the existing code. Oh, and you do have good tests, and you're not doing this with a release coming right up, right?
