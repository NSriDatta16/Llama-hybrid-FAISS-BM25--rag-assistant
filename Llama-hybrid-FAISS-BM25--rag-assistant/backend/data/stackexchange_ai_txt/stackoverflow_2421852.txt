[site]: stackoverflow
[post_id]: 2421852
[parent_id]: 2421771
[tags]: 
In addition to the answer above, it's worth mentioning that it's often good practice to only disable a warning within a limited scope (this is especially important if you're placing these pragmas in header files): #pragma warning (disable : 4121) // alignment of a member was sensitive to packing #include #pragma warning (default : 4121) // Restore default handling of warning Another way to do this is using a push/pop mechanism. This can be handy if you need to disable a bunch of warnings in 3rd-party header files: #pragma warning(push) #pragma warning(disable: 4018) // signed/unsigned mismatch #pragma warning(disable: 4100) // unreferenced formal parameter #pragma warning(disable: 4512) // 'class' : assignment operator could not be generated #pragma warning(disable: 4710) // 'function' : function not inlined #pragma warning(disable: 4503) // decorated name length exceeded, name was truncated #include #include #include #include #pragma warning(pop)
