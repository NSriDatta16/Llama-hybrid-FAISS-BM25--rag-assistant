[site]: stackoverflow
[post_id]: 5599097
[parent_id]: 
[tags]: 
Close a windows form without exiting the entire application

Environment Windows XP SP3 x32 Visual Studio 2005 Standard Device/Platform: Honeywell Dolphin 9500 with Windows Mobile/Pocket PC 2003 NET Framework 1.1 and .NET Compact Framework Framework 1.0 SP3 Goal I currently have an application with 3 forms. The first form is something like a splash screen but I have not yet decided whether or not the user will be allowed to reopen it. The second form is an aggregate listing of items that will be displayed, one by one, in the third form. I would like to be able to open the first form and wait for a button press. When that button is pressed, I would like to open another form and dispose of the first. Once an item is selected out of the list box on the second screen, I would like to display the third form and possibly dispose of the second form. The user also needs to be able to reopen the second form to select another item to be displayed on the third form. That being said, I probably don't want to dispose of the second form. However, memory is an issue on this device (64MB shared between storage and system memory) hence my desire to dispose of things when I can. Problem You can probably guess this by the title, but when I close/dispose of my first form, the entire application closes. Now that I have read up on the matter a little, I am aware that this has to do with this line: Application.Run(new Form1()); or whatever my form happens to be named. Things I Have Tried this.Dispose() - closes the entire application this.Close() - closes the entire application I also saw multiple people recommending one instantiate their form (Form f1 = new MyForm();), show it (.Show();), and then use Application.Run(); with no arguments. When I try this, I get "No overload for method 'Run' takes '0' arguments" ApplicationContext does not exist in version 1.1 of the .NET Framework Code static void Main() { Application.Run(new Welcome()); } private void btnBegin_Click(object sender, EventArgs e) { Form wof = new WorkOrderForm(); wof.Show(); wof.BringToFront(); // Here is where I would like to dispose of the Welcome form }
