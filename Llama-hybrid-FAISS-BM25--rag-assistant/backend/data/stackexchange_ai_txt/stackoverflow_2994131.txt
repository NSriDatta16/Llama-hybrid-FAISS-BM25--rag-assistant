[site]: stackoverflow
[post_id]: 2994131
[parent_id]: 2993236
[tags]: 
After a few hours of experimentation I came up with the following. It gives the desired results. Anyone see a way to improve it? CREATE TABLE #totalOrganization (employeeID int,managerID int,level int); CREATE TABLE #countedOrganization (employeeID int,managerID int,orgCount int,level int); WITH OrgChart (employeeID,managerID,level) AS ( SELECT employeeID,0 as managerID,0 AS Level FROM Emp WHERE managerID IS NULL UNION ALL SELECT Emp.employeeID,Emp.managerID,Level + 1 FROM Emp INNER JOIN OrgChart ON Emp.managerID = OrgChart.employeeID ) INSERT INTO #totalOrganization SELECT employeeID,managerID,level FROM OrgChart; DECLARE @maxLevel int SELECT @maxLevel = MAX(level) FROM #totalOrganization; WHILE (@maxLevel > -1) BEGIN INSERT INTO #countedOrganization SELECT upline.employeeID,upline.managerID,SUM(CONVERT(INT,CASE WHEN downline.orgCount IS NULL THEN 0 ELSE downline.orgCount END)) + CONVERT(INT,CASE WHEN COUNT(downline.employeeID) IS NULL THEN 0 ELSE COUNT(downline.employeeID) END),upline.level FROM #totalOrganization AS upline LEFT OUTER JOIN #countedOrganization AS downline ON downline.managerID=upline.employeeID WHERE upline.level = @maxLevel GROUP BY upline.employeeID,upline.managerID,upline.level SET @maxLevel = @maxLevel - 1 END UPDATE Emp SET totalOrg= CONVERT(INT,CASE WHEN orgCount IS NULL THEN 0 ELSE orgCount END) FROM #countedOrganization INNER JOIN Emp ON #countedOrganization.employeeID=Emp.employeeID
