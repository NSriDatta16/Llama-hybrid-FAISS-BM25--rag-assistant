[site]: stackoverflow
[post_id]: 3458879
[parent_id]: 3458772
[tags]: 
The theory that's probably necessary: How to sort an array with something that's not O(n^2) The very basic data structures; array, list, tree, stack, queue, heap are the first to mind. If not how to write them, then absolutely why you'd use a tree over a list over an array, or vice-versa. The practical knowledge that's also necessary: The book The Pragmatic Programmer covers most of what you're asking here. Eclipse. How to work a debugger. How to work a profiler. Ant. Some basic web framework; Struts, Spring, etc. Apache Commons, JAXB, a SOAP library, a REST library. How to read bad, uncommented code. How to refactor it bit by bit to be maintainable. What a good comment is. HTML, CSS, JavaScript, JQuery, in that order. Validators (W3C), formatters (Jalopy), checkers (PMD, FindBugs). How to use a piece of Bug Tracking software; how to write a good bug description, how to explain what you've done to fix it, and how to handle user expectations. Actually, that deserves it's own line; how to handle user expectations and conflicting timelines and goals.
