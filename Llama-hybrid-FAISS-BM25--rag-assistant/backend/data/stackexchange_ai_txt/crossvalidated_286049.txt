[site]: crossvalidated
[post_id]: 286049
[parent_id]: 
[tags]: 
Bayes Factors and Type I error Rate

The WIKIPEDIA Page on Bayes Factors , quickly mentions something that caught my attention. The exact quote from WIKIPEDIA is pasted below this post. Specifically, I'm wondering if there is any property attributed to bayes factors that has made the Wikipedia page to say that $Bayes~Factors$ are known to have lower Type I error rate? From WIKIPEDIA: "$M_2$ [i.e., the alternative model ] is a more complex model than $M_1$ [i.e., the Null model ] because it has a free parameter which allows it to model the data more closely. The ability of Bayes factors to take this into account is a reason why Bayesian inference has been put forward as a theoretical justification for and generalisation of Occam's razor , reducing Type I errors .[11]" Some thoughts and simulation: Let me do a quick simulation (and please correct me if I'm wrong anywhere) to see what is exactly meant by Type I error when using bayes factors to do hypothesis testing. Bayes Factors are often benchmarked against cut-off values put forward by Harold Jefferey (also see below 1961, p.432) So, to attribute Type I error rate to bayes factors, one has to invoke Jeffeys benchamrks. Specifically, for a $Alternative/Null$ Bayes Factor when Null is True we may consider the proportion of the times that we obtain a Bayes factor that is larger than 3 ( General Rule ). Yet a more fine-grained view is shown below using R: if(!require(BayesFactor)){install.packages('BayesFactor')} library(BayesFactor) n = 1e2 n.sim = 1e3 BF10 = numeric(n.sim) set.seed(0) for(i in 1:n.sim){ x = rnorm(n = n, mean = .0, sd = 1) y = rnorm(n = n, mean = .0, sd = 1) t.value = unname(t.test(x, y)[[1]]) BF10[i] = unname(ttest.tstat(t.value, n, n, rscale = sqrt(2)/2, simple = TRUE)[[1]]) } It seems if we take the decision rule of BF larger than 3 is a Type I error, than in our case Type I error rate is $1.3$%. ## Summarize the erroneous support for alternative when NULL is True (Type I error rate): ## General rule: cat("Erroneously Reject ",(length(BF10[3 = 100])/n.sim)*1e2,"%") Here are Jeffereys' benchmarks:
