[site]: stackoverflow
[post_id]: 5147796
[parent_id]: 4756937
[tags]: 
I've been using the python wrapper for libSVM and found I could compute a confidence-measure using the margin... see the "predict_values_raw" function below. It returns a real value, with large positive values indicating high confidence that it IS a class member, large negative values indicating high confidence that it IS NOT a class member; values close to zero indicate that it is not confident about the classification. So instead of calling 'predict', call 'predict_values_raw' and apply a low threshold (e.g. -2) to ensure you don't reject any true faces # Begin pseudo-code import svm as svmlib prob = svmlib.svm_problem(labels, data) param = svmlib.svm_parameter(svm_type=svmlib.C_SVC, kernel_type = svmlib.RBF) model = svmlib.svm_model(prob, param) # get confidence self.model.predict_values_raw(sample_to_classify)
