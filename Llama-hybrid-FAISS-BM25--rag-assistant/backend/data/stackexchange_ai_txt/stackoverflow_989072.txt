[site]: stackoverflow
[post_id]: 989072
[parent_id]: 988919
[tags]: 
You can probably fit the graph in memory (in the representation that each vertex knows a list of its neighbors). Then, from each vertex n , you can run a breadth-first search (using a queue) to the depth of 6 and count number of vertices visited. If not all vertices are visited, you have disproved the theorem. In other case, continue with next vertex n . This is O(N*(N + #edges)) = N*(N + N*100) = 100N^2, if user has 100 connections on average, Which is not ideal for N=20 million. I wonder if the mentioned libraries can compute the diameter in better time complexity (general algorithm is O(N^3)). The computations for individual vertices are independent, so they could be done in parallel. A little heuristic: start with vertices that have the lowest degree (better chance to disprove the theorem).
