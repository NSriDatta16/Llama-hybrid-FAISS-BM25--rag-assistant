[site]: stackoverflow
[post_id]: 3402329
[parent_id]: 3401639
[tags]: 
First, the Graphical Models in R Task View , (on CRAN) lists probably every R Package that is primarily related to graph theoretics or any application like social network analysis. ( Task Views are just collections of Packages related either by domain/application (e.g., Finance) or by technique (e.g., Regression)). If you are fairly new to network modeling, and you don't have a background in graph theory, let me suggest the R Package netmodels (the value is not limited to novices though). netmodels is in essence a set of wrappers around lower-level functions in a C library called igraph , which has R bindings (also called igraph). So for instance, using netmodels you can just call the function do.base.description on your network and it will return a list several key network parameters and that network's value for each (for instance, number of nodes , number of edges , average degree , average path length , etc.) So by using netmodels you can quickly get a high-level description of your network without having to calculate those high-level descriptive parameters yourself from 'articulation points the basic graph theoretic components like 'articulation points', 'eigenvectors centrality', and 'Cocitation coupling'. Three other similar R Packages which wrap lower-level graph theoretic functions are inetwork, RSiena, and sna. Regarding "significance tests" for networks. I believe that analysis is directed to the statistical significance of key parameters/attributes of the networks under study. So what are those key parameters? Perhaps there's a consensus on this, but more likely it depends on the particular problem you are trying to solve. Here's my list of key network parameters i nearly always calculate (i'll try to list a function and its R Package next each attribute): cumulative degree distribution (count its edges, or links, for every node in the network, let's you estimate nodes-to-edges ratio) R Function: plot.c.degree in package netmodels Krackhardt connectedness (returns a score from 0 to 1) R Function: connectedness in package sna average path length (shortest directed or undirected) path between nodes R Function: average.path.length in package igraph
