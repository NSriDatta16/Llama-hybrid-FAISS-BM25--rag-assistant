[site]: stackoverflow
[post_id]: 5576452
[parent_id]: 5570781
[tags]: 
As others have mentioned, there are some tools you should look into if performance is your only concern. But there are some advantages to using plain SQL statements. Many organizations have regulations, policies, and stubborn developers that will block any new tools. A simple SQL script is the universal language of your database, it's pretty much gaurenteed to work anywhere. If you decide to go with SQL statements you need to avoid scripts like this: insert into my_table values(...); insert into my_table values(...); ... And replace it a single statement that unions multiple lines: insert into my_table select ... from dual union all select ... from dual union all ... The second version will run several times faster. However, picking the right size is tricky. A large number of small inserts will waste a lot of time on communication and other overhead. But Oracle parse time grows exponentially with very large sizes. In my experience 100 is usually a good number. Parsing gets really slow around a thousand. Also, use the "union all" method, avoid the multi-table insert trick. For some reason multi-table insert is much slower, and some Oracle versions have bugs that will cause your query to hang at 501 tables. (You can also create a somewhat similar script using PL/SQL. A 1 megabyte PL/SQL procedure will compile much faster than a 1 megabyte SQL statement will parse. But creating the script is complicated; collections, dynamic sql, handling all the types correctly, creating a temporary object instead of an anonymous block because large anonymous blocks cause Diana node errors, etc. I've built a procedure like this, and it worked well, but it probably wasn't worth the effort.)
