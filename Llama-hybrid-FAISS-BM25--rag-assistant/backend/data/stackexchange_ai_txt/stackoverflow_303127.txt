[site]: stackoverflow
[post_id]: 303127
[parent_id]: 303048
[tags]: 
For a quick hit of each of your explicit questions I would say. As for the how of integration, learn inversion of control principals and how it is used for extensibility purposes. Keep an eye on MEF, Microsoft Extensibility Framework. As for the what, your integration points will depend mostly on the type of application you are writing and your target audience. It also depends on how much control you want to give third parties. Reflector for example has a great, almost wide open plugin structure in place. DLL's and CABs are libraries and storage formats respectively. By themselves, they don't do much. MSI's are one form of installer and can contain the DLLs that will make up your application. Regardless of the type of installer you have, the easier it is to use, the more people that will try your product. The data layer itself doesn't necessarily matter so much. People probably won't be creating their own data layers for your application and if they do, they should be able to use what ever they want if your extensibility framework is doing its job. More importantly is that whatever DAL you do decide on, you need to check to see if it is capable of running on different databases if that is important to you and how much work it takes. You also need to make sure the features you use in the DAL work for all of the databases you want to support. NHibernate has several features that don't work in all of the databases it runs on.
