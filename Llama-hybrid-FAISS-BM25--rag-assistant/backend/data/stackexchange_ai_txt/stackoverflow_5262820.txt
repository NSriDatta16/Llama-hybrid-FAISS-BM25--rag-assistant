[site]: stackoverflow
[post_id]: 5262820
[parent_id]: 5262717
[tags]: 
Initial Thoughts The problem here probably isn't with your stored procedures. Especially in regards to the login script, you are focussing your attention in a small and irrelevant place, as a login command is a one off cost and you can have a much much higher tolerance for script execution time of those sort of pages. You are using classic ASP, which is quite out of date now. When you are dealing with so many visitors, your server is going to need a lot of power to manage all those requests that it is interpreting. Interpreted pages will run slower than compiled pages. Time Events If you are convinced the database is being slow, use times in your script. Add a general timer at the top of the page, and an SQL timer. Page start load, initialise general time. When you reach a stored procedure, start the SQL timer. When query has finished, stop the SQL timer. At the end of the page you have two timers, one totalling the time spent running SQL, and the other timer - SQL timer gives you total time for executing code. This helps you separate your database from your code in regards to efficiency. Improving ASP Page Performance I've detailed good ASP page design here: VBScript Out Of Memory Error Also consider: Use Option Explicit at the top of your pages. Set Response.Buffer = True Use response.write inside , repeatedly opening and closing these is slow I'll re-iterate what I said in the linked answer, by far, by far the best thing you can do for performance is to dump recordset results into an array with .getRows() . Do not loop recordsets. Do not select fields in queries you do not use. Only have 1 recordset, and 1 ado connection per page. I really recommend you read the link for good ASP page design. Upgrade if no Glaring Issues What are the specs of the server? Upgrading the hardware is probably your best route to increased performance in this instance, and most efficient in regards to cost/reward.
