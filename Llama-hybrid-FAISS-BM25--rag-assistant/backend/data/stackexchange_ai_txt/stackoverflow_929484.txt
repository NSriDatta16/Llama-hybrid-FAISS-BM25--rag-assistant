[site]: stackoverflow
[post_id]: 929484
[parent_id]: 929280
[tags]: 
GUIs are ideally handled by more abstract languages than C, otherwise there's lots of redundant boilerplate code, in this sense I'd advise you to consider embedding a scripting language interpreter into your C application, so that the GUI is largely driven by scripts, while the core of your application is coded in C. This would also have the advantage of making your application more configurable and more flexible without necessarily requiring recompilation. You will want to look into lightweight scripting engines that are written in ANSI C and that provide bindings to GUI libraries such as QT, GTK, wxWindows etc. You might want to check out Lua or nasal both of which are fairly lightweight and do provide bindings for GUI libs. For some example uses, you might want to check out the following screenshots of two applications that feature GUIs that are largely based on nasal and its GTK bindings: KyCE II - Kymatica Compositional Environment AlgoScore AlgoScore
