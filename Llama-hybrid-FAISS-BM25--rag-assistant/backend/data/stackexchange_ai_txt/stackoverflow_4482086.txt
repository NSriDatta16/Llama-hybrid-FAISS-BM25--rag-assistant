[site]: stackoverflow
[post_id]: 4482086
[parent_id]: 4482050
[tags]: 
This would either take some intricate case-by-case logic, or a hard-coded storage of all days sequentially. I'd prefer the latter. def weekdays_consecutive(x): allDays = { 'Monday':1, 'Tuesday':2, 'Wednesday':3, 'Thursday':4, 'Friday':5, 'Saturday' : 6, 'Sunday' : 7} mostRecent = x[0] for i in x[1:]: if allDays[i] % 7 != allDays[mostRecent] % 7 + 1: return False mostRecent = i return True And this can sort the input : x.sort(lambda x, y: allDays[x] - allDays[y]) . I don't know which function you'd prefer to use it in >>>x = ['Tuesday', 'Thursday', 'Monday', 'Friday'] >>>x.sort(lambda x, y: allDays[x] - allDays[y]) >>>x ['Monday', 'Tuesday', 'Thursday', 'Friday'] This relies on no non-days being present. I imagine you'd want to deal with this in the weekdays_to_string function rather than here in weekdays_consecutive. i also think you want to change the first case of your other function to 'and' instead of 'to' and add case for single-day inputs. EDIT: had a pretty dumb mistake i just fixed, should work now!
