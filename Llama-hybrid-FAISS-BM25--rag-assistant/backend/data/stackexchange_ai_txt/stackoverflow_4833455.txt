[site]: stackoverflow
[post_id]: 4833455
[parent_id]: 4827244
[tags]: 
That Ruby version has multiline modifier in the regex, so you need to do the same in python: def newline_callback(matchobj): return re.sub(re.compile(r'^(.+)$', re.M),r'\1 ',matchobj.group(0)) text = re.sub(re.compile(r'(\A|^$\n)(^\w[^\n]*\n)(^\w[^\n]*$)+', re.M), newline_callback, text) So that code will (like the Ruby version) add two spaces after before newline, except if we have two newlines (paragraph). Are those test string you gave correct? That file you linked has this, and it works with that fixed code: "apple\npear\norange\n\nruby\npython\nerlang" -> "apple \npear \norange\n\nruby \npython \nerlang"
