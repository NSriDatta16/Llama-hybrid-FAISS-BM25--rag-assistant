[site]: stackoverflow
[post_id]: 492061
[parent_id]: 
[tags]: 
Why doesn't std::string provide implicit conversion to char*?

std::string provides const char* c_str ( ) const which: Get C string equivalent Generates a null-terminated sequence of characters (c-string) with the same content as the string object and returns it as a pointer to an array of characters. A terminating null character is automatically appended. The returned array points to an internal location with the required storage space for this sequence of characters plus its terminating null-character, but the values in this array should not be modified in the program and are only granted to remain unchanged until the next call to a non-constant member function of the string object. Why don't they just define operator const char*() const {return c_str();} ?
