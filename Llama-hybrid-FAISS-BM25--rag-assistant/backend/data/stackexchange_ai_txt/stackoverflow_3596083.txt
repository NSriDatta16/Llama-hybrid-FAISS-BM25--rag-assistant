[site]: stackoverflow
[post_id]: 3596083
[parent_id]: 3595935
[tags]: 
The idea from my answer to your previous question was that the generic IRepository is only known inside your infrastructure layer - it is not published outside of this. When you publish the ISession to the non-generic repositories they gain a very versatile interface, as they have access to the ISession for querying. The problem with not exposing the ISession is that your generic repository will either: Limit your querying capabilities or Have a whole host of different methods for querying (basically duplicating the interface of the ISession. Seems a bit of a waste having NHibernate's querying interface hidden away inside a facade (which the generic Repository would be limited to). IMO, if you choose nHibernate, you should leverage the power it gives you and live with the dependence through-out your infrastructure dll (including tests). Think of the generic IRepository interface as a helper interface to NHibernate to reduce the amount of duplicate code inside the repositories.
