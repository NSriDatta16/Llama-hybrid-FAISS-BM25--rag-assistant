[site]: datascience
[post_id]: 18665
[parent_id]: 18494
[tags]: 
After rubber ducking with a friend of mine, I decided to take a two stage approach. First, whenever I see a word I've recognized as a multiple use word, I flag it in the system and give it the appropriate correction. Once it evaluates that part, it stores the corrected word and enough words such that there is sufficient context in a tuple... inside a list... inside a dictionary. It all looks something like use_case = {'abbr': ('five word abbr context string', 'correction') . Secondly, I've created a dictionary of scikit-learn LinearSVCs that looks like svm_dict = {'abbr': LinearSVC} . Once these things are established and the program is run again, when it finds one of the multiple usage words it first checks use_case to see if that exact set of 5 words surround this case. If it does it swaps it out for the original correction, otherwise it tries to predict the usage with the appropriate SVC and asks the user if the prediction is correct. I know it's not fully automated, but neither is the program in which it runs. I figured the occasional yes/no question to the user was easier than leaving it off the lists and rewriting it every... single... time... Either way, I have it all in place but haven't gotten to the point where it's being used yet. So, I'll either be editing, deleting, or accepting this answer sometime next week when I've had some time to test'r out.
