[site]: crossvalidated
[post_id]: 641371
[parent_id]: 
[tags]: 
remove "non stable" occurences in a time series

I have a signal, corresponding to a time series, in which I want to identify "outliers", actually corresponding to samples for which the signal is not "sufficiently stable" (see hereafter for an illsutration of what I would like it to mean). I have implemented this: def count_outliers(series, window_size=5, stability_threshold=0.1): rolling_min = series.rolling(window=window_size, min_periods=1, center=True).min() rolling_max = series.rolling(window=window_size, min_periods=1, center=True).max() mean_over_window = series.rolling(window=window_size, min_periods=1, center=True).mean() # Calculate the max-min over a rolling window max_min_difference = rolling_max - rolling_min # Create a binary vector based on the condition # if the gap is high (transition/instability) outliers = ((max_min_difference > stability_threshold * mean_over_window) & ( abs(series - mean_over_window) > stability_threshold * mean_over_window)).astype(int) return outliers but this is not convincing and let me explain why on two examples. Example 1: Assume this one: test_vec=pd.Series([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7.03, 6.21, 15.84, 16.81, 17.78, 30.16, 29.23, 28.3, 28.215, 28.13, 28.195, 28.245, 28.305, 28.305, 28.345]) I want the elements of indices 10 to 14 (included), that is the third "row" (presented like this only for readibility), to be labeled as outliers. The two following elements might or might not be classified as outliers, depending on the threshold maybe. This is not so critical. Example 2: Assume this one, which is the trickiest thing I could encounter: test_vec=pd.Series([0, 0, 0, 0, 0, 0, 26.09, 11.36, 6.04, 0, 0, 5.2, 26.15, 27.825, 29.5, 0, 0, 5.32, 26.18, 27.37, 28.56, 0, 0, 0, 0, 0]) In fact, all non-zero elements (I don't care much about 0's in the problem in fact) should be outliers: the signal is never stable enough. Despite testing various approaches, I keep having difficulties to reach my goal, thanks for help or insights.
