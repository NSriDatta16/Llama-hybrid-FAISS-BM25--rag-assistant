[site]: crossvalidated
[post_id]: 274287
[parent_id]: 274226
[tags]: 
I'm not entirely sure what you mean with 'modeling the bird's genes'. The way I would go with this is use this javascript library which incoperates genetic algorithms and neural networks for you, so you don't have to program 'genes' yourself. It has a lot of mutation methods of which the basis comes from the NEAT algorithm. Then you could use this library for a flappy bird impementation in Javascript.' So for the genes, take a look at the NEAT paper on how to modify those of a neural network. A genome consists of nodes and connection genes. Take a look at the mutation methods described above as an example on how to mutate the genome. On the input/output: What I would use as inputs: Distance to next pipe Y position of center Y position of bird These inputs all have a limit, which makes it nice to work with. I think the speed is not very relevant as you'll always aim for the gap, regardless of speed. The fitness function could look something like this (pseudocode): function fitness(genome): while(alive): var action = genome.activate([dist, y_pipe, y_bird]); flappygame.compute(action); return score; So basically, let each genome play until it dies - then return the score of the flappy bird game as a fitness.
