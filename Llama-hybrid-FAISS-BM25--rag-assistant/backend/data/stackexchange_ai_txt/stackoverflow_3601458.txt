[site]: stackoverflow
[post_id]: 3601458
[parent_id]: 3601402
[tags]: 
Excerpt from an article - CSLA is cool -- the thing I always tell folks to keep in mind is what I see as its central philosophy, that ALL business logic should be encapsulated in business objects (to as great an extent as is realistically possible, at least). "Business logic" in CSLA includes everything from validation to persistence -- objects are required to know how to valdate their own properties, and also how to persist themselves. With this in mind, the CSLA framework gives you lots of tools to help make it less painful to encapsulate this amount of business logic in business objects. I like CSLA because it helps enforce rigor in OO design. As far as resources, I'd recommend checking out the "Dot Net Rocks TV" episodes that Rocky Lhotka has done -- they are screencasts, and he goes through the reference app that he ships with CSLA in the first few, then goes into detailed implementations with specific architectures in later ones. The information on CSLA.NET 2.0 is definitely still relevant, 3.5 is primarily just leveraging the new 3.5 framework features (WCF, etc.) in the context of the basic architecture. Orignal article is from here - http://forums.asp.net/t/1307040.aspx
