[site]: stackoverflow
[post_id]: 1234441
[parent_id]: 1193100
[tags]: 
If you're using Java, then Spring Security (formerly ACEGI) will let you annotate your methods to require whatever user roles you wish as a condition of execution. Here's an example: package com.habuma.expectations.springsecurity.intercept; import org.springframework.security.annotation.Secured; public class SecuredObject { @Secured( {"ROLE_SECRET_AGENT"} ) public String getSecuredData() { return "Top-Secret Data"; } } Requests by users lacking the role will throw an exception. You're free to choose whatever authentication scheme you wish, and it won't matter if you're using SOAP or REST. It doesn't get much more declarative than annotations. I've used this approach successfully in a number of webservices.
