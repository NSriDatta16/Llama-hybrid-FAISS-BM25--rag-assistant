[site]: stackoverflow
[post_id]: 1906767
[parent_id]: 1880609
[tags]: 
Well FxCop has a different focus. It concentrates on the API-design and that you follow the .NET guide-lines and naming-conventions. Therefore it's reports are way more detailed. So it's really powerfull. Resharper is more about assisting the programmer in it's everyday Job. So it has it's focus on things like better Intelli-Sense, better navigation through code and potential bugs. And of course, VS and Resharper will continue to improve the coding-expirience. Now can you get the best out of FxCop. I'm not an FxCop-expert, but some of my recommendations. Decide which rules you want to follow in your project. FxCop has tons of rules which are quite strict. Lots of them may not apply to your project, so disable them. Agree on the same rule-set in your team Better a small rule-set which everyone in your team follows instead of a big rule-set which is broken all the time. Run it often and fix the rule-violations as you go. If you run it often, its not a biggy to fix the issue. If you wait until you've tons of errors, you'll probably ignore it, because it to much work. Pay attention to the 'Fix Category'. If it's 'Non Breaking' there's no problem fixing the issue. If it's 'Breaking' you need to pay attention to the depended code. You could integrate FxCop to your continuous-build-server, so you don't have to run in manually.
