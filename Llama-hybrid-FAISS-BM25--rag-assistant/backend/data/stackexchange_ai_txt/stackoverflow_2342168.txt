[site]: stackoverflow
[post_id]: 2342168
[parent_id]: 2337731
[tags]: 
Here's how the caching in your scenario works. Suppose you define the following action [OutputCache(VaryByParam = "none", Duration = 5)] public ActionResult AjaxCache() { return Json(new { date = DateTime.Now }, JsonRequestBehavior.AllowGet); } If you don't explicitly set the Location attribute it default to OutputCacheLocation.Any which means: The output cache can be located on the browser client (where the request originated), on a proxy server (or any other server) participating in the request, or on the server where the request was processed. This value corresponds to the HttpCacheability.Public enumeration value. Duration = 5 means that the contents will be cached for 5 seconds. Next you send ajax request: $(function() { $('a').click(function() { $.ajax({ url: this.href, success: function(json) { $('#result').html(json.date); } }); return false; }); }); If you click on the link twice during 5 seconds interval you will see that the result div will not change neither the server action will be hit but the success callback will always execute. The server sends the following headers: Cache-Control: public, max-age=5 Expires: Fri, 26 Feb 2010 14:09:02 GMT Last-Modified: Fri, 26 Feb 2010 14:08:57 GMT Vary: *
