[site]: stackoverflow
[post_id]: 1790600
[parent_id]: 1790550
[tags]: 
You could write a generator: def running_average(): sum = 0 count = 0 while True: sum += cauchy(3,1) count += 1 yield sum/count Or, given a generator for Cauchy numbers and a utility function for a running sum generator, you can have a neat generator expression: # Cauchy numbers generator def cauchy_numbers(): while True: yield cauchy(3,1) # running sum utility function def running_sum(iterable): sum = 0 for x in iterable: sum += x yield sum # Running averages generator expression (** the neat part **) running_avgs = (sum/(i+1) for (i,sum) in enumerate(running_sum(cauchy_numbers()))) # goes on forever for avg in running_avgs: print avg # alternatively, take just the first 10 import itertools for avg in itertools.islice(running_avgs, 10): print avg
