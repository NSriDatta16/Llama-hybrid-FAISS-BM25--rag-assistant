[site]: stackoverflow
[post_id]: 3287547
[parent_id]: 3287162
[tags]: 
Some vendors have JSF tooling that will generate beans from WSDL, in effect it feels like you just drag that WSDL to the page. I work with IBM Eclipse-based products which have this capability, but it's possible that the free Eclipse tooling may have what you need. In the very worst case it should not be hard to roll this yourself: 1). Generate a Java client from WSDL, Eclipse should deal with that. 2). If that generated code is a Bean then fine, you now have something to use with JSF. If not, then write a simple Java Bean public class MyServiceBean { private ServiceClient myServiceCaller; /* plus variables to hold service result */ public MyServiceBean() { /* init code */ } private invokeService() { /* invoke service, save result */ } public getSomeValue() { invokeService(); /* return value */ } /* other getters */ } Now you have bean that can be used lust like any other. Equally you can invoke the service in the Backing Bean - I see no reason object to doing service invocation there.
