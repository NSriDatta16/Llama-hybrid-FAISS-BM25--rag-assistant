[site]: stackoverflow
[post_id]: 99729
[parent_id]: 99688
[tags]: 
It depends. This is one of those issues that must be decided pragmatically. Suppose I had a class for representing a point. I could have getters and setters for the X and Y coordinates, or I could just make them both public and allow free read/write access to the data. In my opinion, this is OK because the class is acting like a glorified struct - a data collection with maybe some useful functions attached. However, there are plenty of circumstances where you do not want to provide full access to your internal data and rely on the methods provided by the class to interact with the object. An example would be an HTTP request and response. In this case it's a bad idea to allow anybody to send anything over the wire - it must be processed and formatted by the class methods. In this case, the class is conceived of as an actual object and not a simple data store. It really comes down to whether or not verbs (methods) drive the structure or if the data does.
