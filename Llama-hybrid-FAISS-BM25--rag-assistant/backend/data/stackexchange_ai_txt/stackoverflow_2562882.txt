[site]: stackoverflow
[post_id]: 2562882
[parent_id]: 2552506
[tags]: 
In our project we have separate suite for regular/plain unit tests and separate suite for integration tests. The are two reasons for that: performance: integration tests are much slower, test fragility: integration tests fail more often due to environment-related conditions (give false positives). We use TeamCity as our main Continuous Integration server and Maven as build system. We use the following algorithm to run the tests: We run unit tests at within Eclipse IDE and before every commit. We run unit tests automatically after each commit on TeamCity agents using Maven's mvn clean install We run integration tests automatically on TeamCity agent after "main" build is completed. The way we trigger integration tests execution is by configuring TeamCity's integration.tests task to be dependent on "main" continous.build task, see here for details: http://confluence.jetbrains.net/display/TCD4/Dependencies+Triggers We run only integration tests (excluding unit tests) by: using separate directory named "src/it/java" to keep integration tests, excluding by default this source folder from maven-surefire-plugin configuration (configuration/excludes element), using Maven profile called "integration" to exclude regular unit tests and include tests from "src/it/java" (this profile is configured by passing -Pintegration in integration.tests task).
