[site]: crossvalidated
[post_id]: 410485
[parent_id]: 
[tags]: 
Unsupervised classification of images

Assuming I have a dataset of images from two similar classes, for example let's say 95% Labradors and 5% of Chihuahuas and I want to make a classifier. The point is that I need to find the anomalies (Chihuahuas in this example). What would be a good approach that would be quite easy to implement (in python or, to be even more specific, in pytorch )? I thought about using a neural network with convolutional layers in order to get features, and after I get a list of features use k-means to do clustering. It should work, I guess, but I'm not sure how to integrate k-means into the net. I vision conv layers that give features, I feed those features into k-means (or any other clustering technique) and then what? How do I close the loop with the net that I want to train? I thought about other approaches too, like maybe using PCA on the features and then do the clustering (/classification), maybe use SVM, or even SOM (convolutional SOM, though I'm not sure I'd find much about it over the net). Let's sum this up? How do I integrate a clustering technique into a NN? Is there any other good (and simple) approach that I can use? Keep it simple. I need a simple solution that is easy to implement, not the best solution/results.
