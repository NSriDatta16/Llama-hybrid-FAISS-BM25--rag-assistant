[site]: datascience
[post_id]: 12138
[parent_id]: 12106
[tags]: 
The two languages have pretty similar benefits since Scala can call Java libraries. So Java machine learning packages like Weka ( http://www.cs.waikato.ac.nz/ml/weka/ ), can in theory be easily used with Scala. There are minor pros and cons to each, however: Java is a language that most software engineers with 5+ years of experience understand. If you go to a big financial institution and need to hand off your app to a legacy team, they'll likely know how to support Java a app but not a Scala app (at least where I work) Java is stable and doesn't often change, but Scala seems to change rapidly. This can make it more difficult to maintain in the long term Poorly written Java code might be verbose, but poorly written Scala code can be completely unintelligible (ex: what does ::: mean?). The creator of Python optimized Python for readability; it sometimes feels like the creator of Scala did the opposite You can write Scala code much faster than you can write Java code. Scala is ideal for temporary prototype code because you can see your idea come to life faster than you can with Java Spark is much easier to work with Scala than Java. The machine learning Spark libraries are decent enough that you might not need to use a different machine learning library like Weka. I've seen people build Scala models in Spark even on small datasets. You don't need to have a huge data set to use Spark. Summary: Go with Scala. Most data science work is prototyping, and Scala will help you work through prototypes faster. Spark ML is probably good enough for your needs, and Scala is much better for Spark than Java.
