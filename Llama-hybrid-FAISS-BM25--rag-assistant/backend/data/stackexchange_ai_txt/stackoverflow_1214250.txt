[site]: stackoverflow
[post_id]: 1214250
[parent_id]: 1214181
[tags]: 
Writing lots of unit testing from the very first step of a new application is not my approach. In general, when I create a new application (from scratch), I first create a prototype, without any UT . Once I have a working prototype on a sunny day scenario, and some peers review it (and approve, improve etc.) - I do two things: I write unit tests that cover the sunny day scenario, and then I refactor my code. Only then I continue working on the application, but I try to write UT that I consider important . Too much UT might give the wrong impression that the code is fully covered. In the real world, such coverage rarely exists.
