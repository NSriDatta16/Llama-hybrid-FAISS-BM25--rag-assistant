[site]: stackoverflow
[post_id]: 1271115
[parent_id]: 1270370
[tags]: 
The compiler will evaluate printf 's arguments in whatever order it happens to feel like at the time. It could be an optimization thing, but there's no guarantee: the order they are evaluated isn't specified by the standard, nor is it implementation defined. There's no way of knowing. But what is specified by the standard, is that modifying the same variable twice in one operation is undefined behavior; ISO C++03, 5[expr]/4: Between the previous and next sequence point a scalar object shall have its stored value modified at most once by the evaluation of an expression. Furthermore, the prior value shall be accessed only to determine the value to be stored. The requirements of this paragraph shall be met for each allowable ordering of the subexpressions of a full expression; otherwise the behavior is undefined. printf("%d %d %d\n",++a, a++,a); could do a number of things; work how you expected it, or work in ways you could never understand. You shouldn't write code like this.
