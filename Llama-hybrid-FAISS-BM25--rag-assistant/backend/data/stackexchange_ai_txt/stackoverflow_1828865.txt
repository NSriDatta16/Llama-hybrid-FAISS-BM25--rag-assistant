[site]: stackoverflow
[post_id]: 1828865
[parent_id]: 417112
[tags]: 
It is absolutely important that you set the variable to Null/Nothing after calling Marshal.ReleaseComObject or Marshal.FinalReleaseComObject. Dim cn As ADODB.Connection cn = New ADODB.Connection cn.Open(_cnnstr) cn.Execute(sbDML.ToString) cn.Close() System.Runtime.InteropServices.Marshal.FinalReleaseComObject(cn) cn = Nothing '!!!IMPORTANT!!! - Do not remove, MUST be explicitly called! In addition, I have noted that creating another method helps avoid problems with dealing with local COM objects (variables placed on the stack). For instance, if you have one method that does everything, wrap it within another method, add a call to garbage collection, then call the wrapper. Public Sub MainMethod '... Marshal.FinalReleaseComObject(foo) foo = Nothing '!!!IMPORTANT!!! - Do not remove, MUST be explicitly called! End Sub Public Sub WrapperMethod Call MainMethod GC.Collect() End Sub I believe the extra call, with the creation of an addition stack for the local variables, forces the objects to be fully collected quicker and causes the COM objects to be released fully. I have been following this pattern for a couple of years now, and I have not had any problems since.
