[site]: crossvalidated
[post_id]: 600892
[parent_id]: 600310
[tags]: 
I think a linear model can't do it because there is no direct or inverse relationship between a number (your feature) and the class it belongs to (odd/even). I mean, you can't say something like "as the number gets bigger it will tend to be odd". Also, there are no clusters of even and odd numbers, both classes are uniformly distributed in the set of integer numbers, so SVM, KNN or any clustering algorithm will fail as well. I think you should ask yourself the following: "How can I recognize whether a number is even or odd if the only thing I know is the number itself?" well, there are a bunch of ways to do that. For example, you can divide by two and check if the result is an integer or decimal, but linear models (or any ML model, I think) know nothing about integers or decimal numbers, so they can't help you. Other ways would be using transformations as described in the previous answers but, again, a linear model won't be able to create a binary or sine transformation (perhaps a deep ANN can do something like the sine transform, but I'm not sure). At the end, I think the answer was already given: "...the issue is one of defining your features". You need to help the ML model by providing useful features.
