[site]: stackoverflow
[post_id]: 3613281
[parent_id]: 3613149
[tags]: 
You have to decide how you represent the text internally. This should be constant no matter what else you choose. Then whenever you read any input you must trans-code from the input format into the internal format. Then from the internal format to the output format on the way out. If you happen to use the same format internal and externally this becomes an identity operation. UTF-8 is great for storage and transmission as it compresses well. But I don't like it as an internal representation as it has variable length. UTF-16: Was supposed to be the savior of all mankind. But was quickly superceeded by UTF-32 UTF-32: Fixed with. Therefore great for internal representation and manipulation. Easy to convert to/from UTF-8. Very bulky (each character takes 4 bytes). Most OS have either already converted to a UTF string representation or are heading that way. So using an onld obsolte format internally like ISO-8859 just means than calls to the OS will cause extra work as the string is converted to/from UTF. As a result this seems like a waste of time (to me).
