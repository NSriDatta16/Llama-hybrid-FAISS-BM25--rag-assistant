[site]: crossvalidated
[post_id]: 223194
[parent_id]: 223178
[tags]: 
As I wrote in the comments there's nothing inherently wrong with this approach per se. In fact, time separated holdout sample might be the only way you can cross validate the model. If you had multiple companies, you could create a cross-validation sample from a subset of companies. However, it seems that you have only one company, then time separated sub sample is the only option for you. You're dealing with 2008-2016 period which brings up its own issue: you have only a part of business cycle. Look at NBER's recession dates here . The last recession went from Dec 2007 to June 2009. So, if you try to predict the data from 2008-2009 based on data since 2010, you should expect poor results. It's always good to have data spanning multiple business cycles to separate out the impact of the economic environment. It's like trying to do seasonal analysis when you have only half year of data: not going to work very well. On top of macroeconomic life cycle, you also have the industry and firm life cycles. In different stages of life of a firm it goes through very different patterns of revenue growth and other things like capital investments. This all complicates the cross validation design. One approach I may suggest is to use random non-continuous observations for the hold out. For instance, you take a few quarters in 2008-2009 + a few qurters outside this period. This way your training sample will include some observations from 2008-2009 too. This is a bit inconvenient for time series models such as ARIMA, but it can be done if you estimate the samples with state space methods. The last recession was very unique, therefore it's better to include its observations in any training sample UPDATE: As I commented in @RichardHardy's answer, I'm assuming that you're not actually trying to reverse time in a literal sense. You're not trying to "predict" January 2008 revenues based on data since Feb 2008 onwards. I'm assuming you're trying to train the model on 2010-2016 data, then apply the model to data in 2008. This approach is not only Ok, it's actually used in practice.
