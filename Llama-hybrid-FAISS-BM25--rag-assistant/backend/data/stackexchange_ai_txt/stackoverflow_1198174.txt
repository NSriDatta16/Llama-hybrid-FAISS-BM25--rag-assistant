[site]: stackoverflow
[post_id]: 1198174
[parent_id]: 1173356
[tags]: 
I would recommend coming at it from a couple different angles and making your decision after you consider the following: 1) Your back of the envelope calculation... 2.5 test cases per requirement (but Jeff Fry's point is dead on, sometimes more will be required, sometimes less) 2) Quickly calculate a 1/Nth the time answer... What percent of overall development time and/or overall testing time did we use last time for a project of this general type? Was it enough to do the job well? 3) Spend an hour inputting the parameters and values into a test design tool like Hexawise and create a simple 2-way (or pairwise) set of test conditions. Doing so will generally give you a minimum number of tests, beyond which you wouldn't typically want to cut. The additional benefit of using a test design tool is that you will not only confirm that Stated Requirement #1: "the site looks OK when using the Google Chrome browser" and Stated Requirement #2: "users are able to change the credit card they are using to pay at the end of the transaction" will be tested, but also the /Unstated/ Requirement (that no one thought to include) "Make sure that a user using Google Chrome will be able to change their credit card" gets tested as well. Expedia apparently did not follow this approach, but I digress... (Relevant side note: If you haven't tried pair-wise test design methods or a tool like Hexawise to help with semi-automated test case generation before, you should expect to see a significant increase in your testing efficiency when you begin using it; there will be fewer tests required to achieve all the possible pairs than you would think would be possible. A case in point: only 35 tests are required to achieve this type of full pairwise coverage as compared to the 72 billion tests that would be required for comprehensive testing in a test of the "Get Directions" functionality of Google Maps). Most of your requirements will fit easily into the test design tool. Some won't. 4) Take an average of the three estimates and add 20% to it if similar projects have been significantly underestimated. Justin Disclosure: I'm the founder of Hexawise which offers a free version of our test design tool at www.hexawise.com/users/new
