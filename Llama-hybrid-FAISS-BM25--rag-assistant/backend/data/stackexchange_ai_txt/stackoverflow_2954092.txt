[site]: stackoverflow
[post_id]: 2954092
[parent_id]: 2954029
[tags]: 
As mentioned, you can use the exclusions mechanism, but that basically means excluding every runtime dependency declared in the dependency's pom, which is not only a pain, but fragile, since you have to keep tracking the dependency's pom to keep your list of exclusions up to date. An alternative is to mark the dependency as provided and then copy the dependency yourself to the war construction directory under 'target' using the dependency:copy plugin goal. By default a war is built in ${project.build.directory}/${project.build.finalName} . See the war plugin for details. E.g. org.apache.maven.plugins maven-dependency-plugin copy package copy org.springmodules spring-modules-cache 0.8 jar true ${project.build.directory}/${project.build.finalName}/WEB-INF/lib
