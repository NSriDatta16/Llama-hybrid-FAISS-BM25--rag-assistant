[site]: stackoverflow
[post_id]: 1386701
[parent_id]: 1355438
[tags]: 
@Brian if I'm correctly understanding your question you mean that you have everything wired up it user clicks on a row when the page is showing. You want that if somebody types the URL of page directly in browser and appends ?id=x to it, you should direct him to relevant page, select relevant row and populate FormView based on selected record. Well if this is the case I've made something, but let me warn before hand it is not very elegant and its 2:30 AM here so please don't laugh. Assumption:- In presented solution the DataKeyNames field is set to Primary Key of the source table. The rows fetched are sorted by this key. I'm using SubSonic 3 for talking to SQL Server 2005 Express DB (coincidently this is my first SS3 project, very busy at office to try it). The table definition is as follows: Create Table StudentsTable ( EnrolmentNumber int not null identity primary key, StudentName nvarchar(50) not null) The aspx: Enrolment Number /> Student Name /> C# Code (Hold your laughs): private IList students; protected void Page_Load(object sender, EventArgs e) { if (!IsPostBack) { LoadData(); CheckQueryString(students); } } private void LoadData() { students = StudentsTable.All().ToList(); gvStudents.DataSource = students; gvStudents.DataBind(); } private void CheckQueryString(IList students) { if (!Request.QueryString.HasKeys() || string.IsNullOrEmpty(Request.QueryString["erno"])) { return; } var erno = Request.QueryString["erno"]; int key; if (!int.TryParse(erno, out key)) return; for (var i = 0; i students, int i) { var ps = gvStudents.PageSize; var cp = i / ps; var ridx = i - ps - 1; var pageEvent = new GridViewPageEventArgs(cp); GridPageChanging(null, pageEvent); gvStudents.SelectedIndex = ridx; GridRowChanged(null, EventArgs.Empty); } protected void GridRowChanged(object sender, EventArgs e) { var rIdx = gvStudents.SelectedIndex; if (rIdx x.EnrolmentNumber == (int)key.Value); SetFormView(lst); } private void SetFormView(IList student) { fvSubjects.DataSource = student; fvSubjects.DataBind(); } protected void GridPageChanging(object sender, GridViewPageEventArgs e) { var p = e.NewPageIndex; if (p > gvStudents.PageCount) p = gvStudents.PageCount - 1; gvStudents.PageIndex = p; LoadData(); } PS:- It is failing if you put id of last record. EDIT:- Here is link to Project
