[site]: stackoverflow
[post_id]: 4489524
[parent_id]: 4486731
[tags]: 
You can use the functionality of associated objects introduced in the IA64 and ARM Objective-C runtimes. This works on on device for iOS, but not on the simulator since the simulator uses the old fragile 32-bit Objective-C run-time. Here is a small example that allows you to set any kind of object as a context value on all UIView instances. The associated objects are released properly at dealloc, so no extra memory management needed. // UIView+CWObjectContext.h @interface UIView (CWObjectContext) @property(nonatomic, retain) id objectContext; @end // UIView+CWobjectContext.m #import "UIView+CWobjectContext.h" #import @implementation UIView (CWObjectContext) static void* const objectContextKey = "objectContext"; -(id)objectContext; { return objc_getAssociatedObject(self, objectContextKey); } -(void)setObjectContext:(id)object; { objc_setAssociatedObject(self, objectContextKey, object, OBJC_ASSOCIATION_RETAIN_NONATOMIC); } @end
