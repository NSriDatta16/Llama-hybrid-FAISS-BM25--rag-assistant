[site]: stackoverflow
[post_id]: 159395
[parent_id]: 158775
[tags]: 
I'll discuss a few points on the {budget, business utility function, time frame} spectrum out there. For convenience, let's follow the architecture conceptualization you linked to at WikipediaDataWarehouseArticle Operational database layer The source data for the data warehouse - Normalized for In One Place Only data maintenance Data access layer The transformation of your source data into your informational access layer. ETL tools to extract, transform, load data into the warehouse fall into this layer. Informational access layer • Report-facilitating Data Structure Data is not maintained here. It is merely a reflection of your source data Hence, denormalized structures (containing duplicate, but systematically derived data) are usually most effective here • Reporting tools How do you actually allow your users access to the data • pre-canned reports (simple) • more dynamic slice-and-dice access methods The data accessed for reporting and analyzing and the tools for reporting and analyzing data fall into this layer. And the Inmon-Kimball differences about design methodology, discussed later in the Wikipedia article, have to do with this layer. Metadata layer (facilitates automation, organization, etc) Roll your own (low-end) For very little out-of-pocket cost, just recognizing the need for the denormalized structures can buy those that are not using it some efficiencies Get in the ballgame (some outlays required) You don't need to use all the functionality of a platform right off the bat. IMO, however, you want to be on a platform that you know will grow, and in the highly competitive and consolidating BI environment, that seems to be one of the four enterprise mega-vendors (my opinion) Microsoft (the platform of our 110 employee firm) SAP Oracle IBM BiMarketStateArticle My firm is at this stage, using some of the ETL capability offered by SQL Server Integration Services (SSIS) and some alternate usage of the open source, but in practice license requiring Talend product in the "Data Access Layer", a denormalized reporting structure (implemented completely in the basic SQL Server database), and SQL Server Reporting Services (SSRS) to largely automate (based on your skill) the production of pre-specified reports. Note that an SSRS "report" is merely a (scalable) XML configuration/specification that gets rendered at runtime via the SSRS engine. Choices such as export to an excel file are simple options. Serious Commitment (some significant human commitment required) Notice above that we have yet to utilize the data mining/dynamic slicing/dicing capabilities of SQL Server Analysis Services. We are working toward that, but now focused on improving the quality of our data cleansing in the "Data Access Layer". I hope this helps you to get a sense of where to start looking.
