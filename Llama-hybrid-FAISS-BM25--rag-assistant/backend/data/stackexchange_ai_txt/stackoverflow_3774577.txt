[site]: stackoverflow
[post_id]: 3774577
[parent_id]: 3772765
[tags]: 
Both f and make-s are functions, but the resemblance doesn't go much further. Applying f calls the function and executes its code; applying make-s creates a structure. In most language implementations and modelizations, make-s is a different kind of object from f : f is a closure, whereas make-s is a constructor (in the functional languages and logic meaning, which is close to the object oriented languages meaning). If you like to think in an object-oriented way, both f and make-s have an apply method, but they have completely different implementations of this method. If you like to think in terms of the underlying logic, f and make-s have a type build on the samme type constructor (the function type constructor), but they are constructed in different ways and have different destruction rules (function application vs. constructor application). If you'd like to understand that last paragraph, I recommend Types and Programming Languages by Benjamin C. Pierce. Structures are discussed in ยง11.8.
