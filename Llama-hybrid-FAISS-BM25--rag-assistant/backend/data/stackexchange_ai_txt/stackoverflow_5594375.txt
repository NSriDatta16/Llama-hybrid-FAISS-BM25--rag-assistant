[site]: stackoverflow
[post_id]: 5594375
[parent_id]: 
[tags]: 
How can we ignore uncaught exceptions in current function when debugging?

Here's an oddity I ran into when running some code. I was playing with old python assignments I've done in school - embedding them in C# programs, running them with IronPython, etc. Embedding the code worked as I would expect it, same when running in IronPython interactive. I then ran it in a new IronPython project and found some awkward behavior. Running the code without debugging gave normal behavior. Running with debugging started giving off unhandled exception errors (which turned out to be just warnings after looking in to it, more on that later). It was a head scratcher for me. Stepping through the code, I found that everything was happening as I should have expected. However at certain points, it would stop and would show the unhandled exception window pointing at seemingly random parts of the code. In an attempt at finding out what was wrong, I came up with this code: from __future__ import print_function def raiser(): print('raising an exception') raise Exception() # unreported exception here if __name__ == '__main__': try: raiser() except Exception: # but is handled here print('caught it') #raiser() # ignoring exceptions would leave this unreported Now here it should be pretty obvious what happens here. Running it without debugging runs normally. Running it with debugging, it stops, showing that there was an unhandled exception. It is handled, just not in the scope of the raiser() function. That's when I realized that this was a warning ... 2 hours on a goose chase going crazy over such a simple thing. Can this warning be disabled or suppressed somehow? Now this kind of warning I might expect for a beginner who needs all the help they can get, but I am far from beginner on this and don't care that there's the exception isn't handled in the current function scope, just that it is handled somewhere in my code. I can't find any references to this online or any settings in Visual Studio. Is there some new requirement to have to declare that exceptions will be raised for the debugger? (akin to Java's checked exceptions) Would this be a candidate for a bug report? This is on IronPython 2.7 Stable (which I just installed hours ago) running off of Visual Studio 2010 Pro. I don't recall if this was ever an issue in prior versions, I've never tried the code via the debugger then.
