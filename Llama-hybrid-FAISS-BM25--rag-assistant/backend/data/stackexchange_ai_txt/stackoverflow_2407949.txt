[site]: stackoverflow
[post_id]: 2407949
[parent_id]: 2407540
[tags]: 
DI is a technique or a pattern and not related to any framework. You can wire up your dependencies manually. DI helps you with SR (Single responsibility) and SoC (separation of concerns). DI leads to a better design. From my point of view and experience there are no downsides . Like with any other pattern you can get it wrong or misuse it (but what is in the case of DI quite hard). If you introduce DI as principle to a legacy application, using a framework - the single biggest mistake you can do is to misuse it as a Service-Locater. DI+Framework itself is great and just made things better everywhere I saw it! From organizational standpoint, there are the common problems with every new process, technique, pattern, ...: You have to train you team You have to change your application (which include risks) In general you have to invest time and money , beside that, there a no downsides, really!
