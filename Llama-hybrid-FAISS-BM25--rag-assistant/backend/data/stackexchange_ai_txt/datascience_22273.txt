[site]: datascience
[post_id]: 22273
[parent_id]: 
[tags]: 
Combining Machine Learning classifier with NLTK Vader for Sentiment Analysis

As a part of my university project, I am researching/developing a sentiment analysis model wherein I am trying to combine NLTK Vader (SentimentIntensityAnalyzer) results with a Machine Learning trained classifier for prediction of Sentiments on Twitter data. Detailed description - To explain what I am trying to do is - Combine Machine Learning classifier and NLTK Vader sentiment analysis to get the better classification of tweets as Positive, Negative or Neutral. What I have done is - Cleaned the data ( Niek Sanders twitter corpus ) and pre-processed the tweets which include stop words removal, URL removal, User mention removal, remove the # symbol from Hashtags, lower case conversion, stemmer processing, etc. Split into 80:20 training: test ratio Used TfidfVectorizer to create a sparse matrix of features with TFIDF of words. The number of columns is equal to the number of words in clean data. Use this vector matrix to train and test the classifiers using scikit-learn. Classifiers used - This same vector matrix is being used to train - KNN, Random forest, Naive Bayes, SVM, Artificial Neural Network and Convolutional Neural Network. Now the main doubt arises when trying to combine NLTK Vader (SentimentIntensityAnalyzer results). What I am doing is - From step three above, in the tfidf vector-matrix I am adding 2 columns and I am adding the Positive and Negative polarity result for the tweet given by NLTK, so now the vector-matrix has 2 new columns n+1 (total positive polarity of tweet by NLTK), n+2 (total negative polarity of tweet by NLTK) and it looks like - 0 1 2 3 4 5 6 7 ......... | n+1 | n+2 ------------------------------------------------------------|---------|---------- 0.4 0.3 0.4 0.1 0.5 0.3 0.2 0.4 ......... | 0.345 | 0.345 0.5 0.3 0.2 0.8 0.3 0.6 0.4 0.5 ......... | 0.765 | 0.523 0.6 0.4 0.1 0.7 0.8 0.8 0.2 0.2 ......... | 0.392 | 0.664 0.2 0.9 0.7 0.4 0.9 0.9 0.8 0.5 ......... | 0.832 | 0.658 0.9 0.5 0.9 0.7 0.3 0.2 0.2 0.5 ......... | 0.273 | 0.283 0.5 0.2 0.2 0.7 0.2 0.1 0.6 0.6 ......... | 0.505 | 0.194 0.4 0.3 0.2 0.3 0.3 0.9 0.5 0.5 ......... | 0.102 | 0.927 0.1 0.8 0.1 0.2 0.1 0.5 0.2 0.7 ......... | 0.735 | 0.455 Question - So is it correct to add it this way? I could also convert these polarities to binary values to mark if the overall sentiment is positive, negative or neutral using 0 and 1. Note - I am representing 3 categories(positive, negative or neutral) using 2 columns to avoid dummy variable trap. Though it has increased the overall accuracy of the classifiers by small margin of 1-2%. But am I doing it right? If not, kindly let me know how can I collaborate the two mentioned above, i.e. NLTK Vader results with Machine Learning classifiers.
