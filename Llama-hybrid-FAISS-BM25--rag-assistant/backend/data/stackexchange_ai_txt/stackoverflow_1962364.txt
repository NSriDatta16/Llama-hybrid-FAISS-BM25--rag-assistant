[site]: stackoverflow
[post_id]: 1962364
[parent_id]: 1962358
[tags]: 
looks like you're asking "why there is only one assertion per test in most professional TDD code I have seen". That's probably to increase test isolation, as well as test coverage in presence of failures. That's certainly the reason why I made my TDD library (for PHP) that way. say you have function testFoo() { $this->assertEquals(1, foo(10)); $this->assertEquals(2, foo(20)); $this->assertEquals(3, foo(30)); } If the first assert fails, you don't get to see what would happen with the other two. That doesn't exactly help pinpoint the problem: is this something specific to the inputs, or is it systemic?
