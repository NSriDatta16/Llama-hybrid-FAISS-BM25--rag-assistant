[site]: stackoverflow
[post_id]: 4402258
[parent_id]: 4402184
[tags]: 
Not that I am aware of, but what you can do is assign values 2^i to the enum members. For instance: enum fruit_and_vegetables { apples = (1 Then you can check with if (something & (apples | pears | tomatoes)) std::cout Of course, this is limited to enums with a reasonable size (I think you can have up to 32 elements). EDIT If you have more than 32 (64) values, you have to be more creative than this. By doing several checks, you can still be reasonably quick: enum fruit_and_vegetables { apples = 1, //! pears, tomatoes, cucumbers, // ... grapes } #define FRUIT_AND_VEGETABLES 120 if ( (1 But that is not really a great solution. If you have a large number of enums and they can be partitioned into several classes, then I would go with Noah Roberts' answer .
