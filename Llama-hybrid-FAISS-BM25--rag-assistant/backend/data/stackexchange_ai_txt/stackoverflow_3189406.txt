[site]: stackoverflow
[post_id]: 3189406
[parent_id]: 3185169
[tags]: 
I worked my way around named_scope and found an elegant solution. So, I am posting it here so that others stuck with the same problem can also get help. My solution gives you a way to access any column of the join model in the has many through association. Here's the solution for my problem above: class Widget :widget_features def leaf_features widget_features.leaf_features.map{|widget_feature|widget_feature.feature} end end class WidgetFeature 'children_features IS NULL' belongs_to :feature belongs_to :widget attr_accessible :children_features, :widget_id, :feature_id end Now, Widget.find_by_id(widget_id).leaf_features will give you only those features where children_features column is NULL .
