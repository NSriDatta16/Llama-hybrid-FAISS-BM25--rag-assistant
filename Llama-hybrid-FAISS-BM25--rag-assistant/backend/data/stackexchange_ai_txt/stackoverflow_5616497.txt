[site]: stackoverflow
[post_id]: 5616497
[parent_id]: 3105577
[tags]: 
This is the cleanest solution I could come up with: $client = new SoapClient( 'https://www.sandbox.paypal.com/wsdl/PayPalSvc.wsdl', array( 'soap_version' => SOAP_1_1 )); $cred = array( 'Username' => $username, 'Password' => $password, 'Signature' => $signature ); $Credentials = new stdClass(); $Credentials->Credentials = new SoapVar( $cred, SOAP_ENC_OBJECT, 'Credentials' ); $headers = new SoapVar( $Credentials, SOAP_ENC_OBJECT, 'CustomSecurityHeaderType', 'urn:ebay:apis:eBLBaseComponents' ); $client->__setSoapHeaders( new SoapHeader( 'urn:ebay:api:PayPalAPI', 'RequesterCredentials', $headers )); $args = array( 'Version' => '71.0', 'ReturnAllCurrencies' => '1' ); $GetBalanceRequest = new stdClass(); $GetBalanceRequest->GetBalanceRequest = new SoapVar( $args, SOAP_ENC_OBJECT, 'GetBalanceRequestType', 'urn:ebay:api:PayPalAPI' ); $params = new SoapVar( $GetBalanceRequest, SOAP_ENC_OBJECT, 'GetBalanceRequest' ); $result = $client->GetBalance( $params ); echo 'Balance is: ', $result->Balance->_, $result->Balance->currencyID; This produces the following XML request document, which, at the time of writing, was being successfully accepted and processed by PayPal: *** *** *** 71.0 1 In response to some of the other comments on this page: I'm fairly certain the OP has read the API doc, because that's where the example XML came from that he is trying to reproduce using PHP SOAP library. The PayPal PHP API has some shortcomings, the biggest one being that it fails to work with E_STRICT warnings turned on. It also requires PEAR, so if you are not currently using PEAR in your project it means dragging in quite a lot of new code, which means more complexity and potentially more risk, in order to achieve what should be two or three fairly simple XML exchanges for a basic implementation. The NVP API looks pretty good too, but I'm a glutten for punishment, so I chose the hard path. :-)
