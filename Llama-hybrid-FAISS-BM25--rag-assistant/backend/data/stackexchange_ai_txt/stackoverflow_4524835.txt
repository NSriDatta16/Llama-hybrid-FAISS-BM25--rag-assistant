[site]: stackoverflow
[post_id]: 4524835
[parent_id]: 4524824
[tags]: 
char *str= "hello"; String literal "Hello" is stored in const region of memory(on most common implementations) and has static storage duration. Any attempt to modify the content would invoke UB i.e str[0]='c' would cause segfault on most implementations. ISO C99 2.13.4/1 says An ordinary string literal has type "array of n const char" and static storage duration. 'static storage duration' in 3.7.1/1: The storage for these objects shall last for the duration of the program. Is it required to release the memory allocated to string "str" , in the below program ? Nopes! That would be UB too because the string is not dynamically allocated.
