[site]: stackoverflow
[post_id]: 4124612
[parent_id]: 4124424
[tags]: 
Yes there are lots of advantages to putting the business logic in the Oracle database even for a standalone application: Performance and scalability, where the business logic involves accessing or updating the database Dependency tracking: references to tables and other objects in your code are easily found PL/SQL is designed for writing code that accesses the database, very simply, and without the need for building lots of dynamic SQL prepared statements, or using an obfuscating layer like Hibernate to do it for you. I would actually steal some of Josh's answer and turn it 180 degrees: IF your database will only ever support a single application, and IF you never expect the same data to have different use cases depending who is using it... then sure put business logic in the... application. I mean, do you seriously want two different applications to access the same rows of data but apply different rules to changes to that data? What's the point of having a "rule" if you can break it just by using a different access path? Note that I omitted this part of Josh's answer: ...IF you are never ever planning to use a different storage mechanism... Of course, if you are planning to support multiple databases, or to throw away Oracle and start using SQL Server or something else entirely to store your data, then you won't want to use PL/SQL to write your code. But in many, many cases that is not going to happen and you would be ill-advised to pursue database independence for its own sake.
