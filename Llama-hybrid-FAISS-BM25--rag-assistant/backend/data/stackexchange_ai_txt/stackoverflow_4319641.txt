[site]: stackoverflow
[post_id]: 4319641
[parent_id]: 4318849
[tags]: 
As you've alluded to, there are various mechanisms (like transactions) for ensuring the software based "handshake" is reliable and completes successfully. Architectureally - yes having two copies of stuff gives you redundencey which helps not losing stuff. beyond that: Clear Processes: people need to know exactly where information is going - both in sunny day senarios and when the brown stuff hits the fan. Having the data but not being able to find it, or recognise it is just as bad as lossing it. The clearer (and well documented) your processes are the better. Consistency: automated is obviously better that random human error. To specifically answer your question - but the above points should be echoed in an architecture and design that was clear, and which clearly seperated concerns. Reduce points of failure as much as possible. Focus attention on higher risk areas. Use proven techniques (I guess that's what you're actually asking for). Keep things as simple as possible. I worked on a solution architecture for an off-the-shelf document management system a while back; no loss of data was the big driver. The system was rolled out nationally, so multi-site in terms of both 'regional' caches for servicing local users, and actual 'data centers'. Some points of interest: All components (where possible) were deployed onto virtual boxes, which were back-ed to a SAN, so iun the event of a physcial host going down we could restore service faster. In terms of data loss it means that users are more likely to be able to use the protected system than storing stuff locally if the system was down. Also, the SAN was seen as being more safer than local disks. The above was part of the existing set-up, so nothing new for Ops to learn. Failover site, with replication. This wasn't real-time, and was augmented by the transactional logs on the databases. I guess none of this is heavily software centered, but I do think that all the good software architecture / design principles "we" use helped guide my thinking.
