[site]: stackoverflow
[post_id]: 3974306
[parent_id]: 3194323
[tags]: 
This works, although it's a bit jumpy: // Boundaries var southBound = 33; var westBound = -119; var northBound = 34; var eastBound = -118; // Intersect boxes for stopping drag var topBox = new google.maps.LatLngBounds( new google.maps.LatLng(northBound, westBound), new google.maps.LatLng(northBound + 1, eastBound) ); var rightBox = new google.maps.LatLngBounds( new google.maps.LatLng(southBound, eastBound), new google.maps.LatLng(northBound, eastBound + 1) ); var bottomBox = new google.maps.LatLngBounds( new google.maps.LatLng(southBound - 1, westBound), new google.maps.LatLng(southBound, eastBound) ); var leftBox = new google.maps.LatLngBounds( new google.maps.LatLng(southBound, westBound - 1), new google.maps.LatLng(northBound, westBound) ); // Last known good center point var lastGoodCenter = map.getCenter(); // Listen for dragging google.maps.event.addListener(map, 'drag', function() { // If the map's bounds intersect with one of the stop boxes if (map.getBounds().intersects(topBox) || map.getBounds().intersects(rightBox) || map.getBounds().intersects(bottomBox) || map.getBounds().intersects(leftBox)){ // Go back to the good center map.setCenter(lastGoodCenter); }else{ // Or set this new center as good lastGoodCenter = map.getCenter(); } });
