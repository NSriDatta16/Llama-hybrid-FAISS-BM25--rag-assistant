[site]: crossvalidated
[post_id]: 564311
[parent_id]: 
[tags]: 
How to cross-validate a time series LSTM model?

I have been looking at how to split my data for training/validation/test for a timeseries using LSTM and came across: QA1 and QA2 Given I should implement walk-forward splits my depiction of it is: Where each line is a Run followed by obtaining the best model. How should the best model be decided. More specifically, how is the test data used? do we evaluate at each "Run" with test data? i.e I use checkpoints to save the best epoch based on validation data. Do I use the best one? Do I need to evaluate all the models/epochs against test data and take the best of these? or? On the final "Run", what is the construct? Do we have no validation or no test data? If we don't have validation data, is it possible to run model.fit without validation data? If we don't have test data, do we not have a final evaluation?
