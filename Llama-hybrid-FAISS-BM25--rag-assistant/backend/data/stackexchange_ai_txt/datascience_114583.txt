[site]: datascience
[post_id]: 114583
[parent_id]: 114582
[tags]: 
Supervised means that the training stage is supervised and requires labels. It does not mean that you need labels during inference. Here is small example using a Random Forest classifier with scikit learn ( source ): >>> from sklearn.ensemble import RandomForestClassifier >>> from sklearn.datasets import make_classification >>> X, y = make_classification(n_samples=1000, n_features=4, ... n_informative=2, n_redundant=0, ... random_state=0, shuffle=False) >>> clf = RandomForestClassifier(max_depth=2, random_state=0) >>> clf.fit(X, y) RandomForestClassifier(...) >>> print(clf.predict([[0, 0, 0, 0]])) [1] As you can see, training the model takes in labels ( clf.fit(X, y) where y are the labels) but during inference the model runs the prediction for an unseen datapoint with no label ( print(clf.predict([[0, 0, 0, 0]])) where [[0, 0, 0, 0]] is a a new datapoint which is classified as belonging to class 1 ). In contrast, unsupervised ML does not require labels during training. This blog post provides some further explanations and examples.
