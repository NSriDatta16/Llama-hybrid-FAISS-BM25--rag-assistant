[site]: crossvalidated
[post_id]: 463577
[parent_id]: 463526
[tags]: 
If I understood your data correctly, one method would be calculating feature importances for each model and maybe plotting them. Below is an example beeswarm plot and code in R for 198 different models that predict wind speed of storms using four features, with the features in decreasing order by average importances. Each point represents one feature importance of one model for the specific feature, and the vertical lines represent the mean feature importances for each predictor. If you have many predictors, you could limit them to the n most important as calculated by average feature importance. library(dplyr) # data wrangling library(purrr) # map function library(tidyr) # nest function and pivot library(caret) # varImp function library(ggplot2) # plotting library(ggbeeswarm) # plot type data("storms") # Nest data for each storm nested % group_by(name) %>% select(name, wind, month, pressure, lat, long) %>% nest(data = c(wind, month, pressure, lat, long)) # Make models for each storm and store in tibble models % mutate(model = map(.x = data, ~lm(wind ~ month + pressure + lat + long, data = .x))) # Combine the importances in a data frame importances % mutate_all(function(x) ifelse(is.infinite(x) | is.na(x) | is.nan(x), 0, x)) %>% mutate_all(function(x) {(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)) * 100 }) # Pivot for plotting and join means to_plot % pivot_longer(month:long, names_to = "Feature", values_to = "Importance") %>% inner_join(importances_scaled %>% summarise_all(mean) %>% pivot_longer(month:long, names_to = "Feature", values_to = "Mean")) # Plot from most important to least important to_plot %>% ggplot(aes(x = reorder(Feature, Mean), y = Importance, color = Feature)) + geom_quasirandom() + geom_point(data = to_plot %>% select(Feature, Mean) %>% distinct(), aes(Feature, Mean), shape = "|", size = 20, color = "black", alpha = 0.4) + coord_flip() + theme_minimal() + theme(legend.position = "none") + xlab("") + ylab("Feature importance") + ggtitle("Models for predicting wind speeds of tropical storms", subtitle = paste("Average feature importance from 0 to 100 for", nrow(models), "different storms, means as vertical lines"))
