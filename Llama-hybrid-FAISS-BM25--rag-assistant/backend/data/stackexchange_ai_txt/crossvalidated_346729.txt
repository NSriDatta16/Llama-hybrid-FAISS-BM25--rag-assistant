[site]: crossvalidated
[post_id]: 346729
[parent_id]: 346714
[tags]: 
To answer your question in a more general term, it is possible to use machine learning and predict h-steps-ahead forecasts . The tricky part is that you have to reshape your data into a matrix in which you have, for each observation the actual value of the observation and past values of the time series for a defined range. You will need to define manually what is the range of data that appear relevant to predict your time series, in fact, as you would parameter an ARIMA model. The width/horizon of the matrix is critical to predict correctly the next value taken by your matrix. If your horizon is restricted, you might miss seasonality effects. Once you have done that, to predict h-steps-ahead, you will need to predict the first next value based on your last observation. You will then have to store the prediction as an "actual value", which will be used to predict the second next value through a time shifting , just like an ARIMA model. You will have to iterate the process h times to get your h-steps-ahead. Each iteration will rely on the previous prediction. An example using R code would be the following one. library(forecast) library(randomForest) # create a daily pattern with random variations myts Now obviously, there are no general rules as to determine whether a time-series model or a machine learning model are more efficient. Computational time may be higher for machine learning models, but on the other hand, you may include any type of additional features to predict your time-series using them (e.g. not just numerical or logical features). General advice would be to test both, and pick the most efficient model.
