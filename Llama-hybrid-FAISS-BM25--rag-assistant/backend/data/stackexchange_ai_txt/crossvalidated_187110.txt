[site]: crossvalidated
[post_id]: 187110
[parent_id]: 
[tags]: 
How to fit weights into Q-values with linear function approximation

In reinforcement learning, linear function approximation is often used when large state spaces are present. (When look up tables become unfeasible.) The form of the $Q-$value with linear function approximation is given by $$Q(s,a) = w_1 f_1(s,a) + w_2 f_2(s,a) + \cdots, $$ where $w_i$ are the weights, and $f_i$ are the features. The features are predefined by the user. My question is, how are the weights assigned? I have read/downloaded some lecture slides on $Q-$learning with function approximation. Most of them have slides on linear regression that follow. Since they are just slides, they tend to be incomplete. I wonder what the connection/relation is between the two topics.
