[site]: crossvalidated
[post_id]: 411843
[parent_id]: 248652
[tags]: 
The Metro-Hastings sampling procedure is over-sampling higher values due to the accept/reject criteria. The average of the sample values returned by sum(chain) * (1/len(chain)) is too high. In typical method for Monte Carlo integration, random samples are drawn uniformly across the [0, pi] interval. You can still use a Markov Chain to create "jumps". For example, changing for i in range(1,n): can = x + rands[i] #candidate for jump aprob = min([1., f(can)/f(x)]) #acceptance probability u = uniform(0,1) #rand number between 0 and 1 if u to for i in range(1, n): x += rands[i] #candidate for jump if f(x) > 0: chain.append(f(x)) will get a much better approximation
