[site]: stackoverflow
[post_id]: 1052007
[parent_id]: 1051971
[tags]: 
Good question. The short answer is that the Z-buffer stores a single value (only) for each pixel in the frame buffer. Given the "usual" mode of operation (for opaque objects-- GL_DEPTH_TEST enabled, glDepthFunc set to GL_LESS ), that value will be the depth of the nearest fragment that maps to that pixel. The frame buffer is a "dumb" device--every fragment rasterizes and depth tests independently from all others, and divorced from any concept of the primitive that produced it. So, there is no place for the information about preceding primitives, depth sorting, etc. to be held, as would be required to implement your "auto transparency" feature. You might want to look into "scene graphs" for help with the depth sorting. These are libraries that add "higher level" functionality beyond the basic T&L stuff that OpenGL provides. Hope this helps.
