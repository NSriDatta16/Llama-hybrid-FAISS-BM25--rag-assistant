[site]: stackoverflow
[post_id]: 3755643
[parent_id]: 
[tags]: 
String comparison precedence in Bash

The following example will compare all files in a directory to input string ($string) and return matching filename. It is not very elegant and efficient way of accomplishing that. For speed purposes I modified for condition to only compare to files that start start with first word of $string. Problem with this script is following - I have two files in the directory: Foo Bar.txt Foo Bar Foo.txt and I compare them to string "Foo Bar 09.20.2010" . This will return both files in that directory, as both files match. But I need to return only the file that matches the string in most exact way - in our example it should be Foo Bar.txt . Also if you have better ideas how to solve this problem please post your ideas as I am not that proficient in scripting yet and I am sure there are better and maybe even easier ways of doing this. #!/bin/bash string="Foo Bar 09.20.2010" for file in /path/to/directory/$(echo "$string" | awk '{print $1}')*; do filename="${file##*/}" filename="${filename%.*}" if [[ $(echo "$string" | grep -i "^$filename") ]]; then result="$file" echo $result fi done Here is breakdown what I want to achieve. Two files in directory to match against two strings, Correct/Incorrect in brackets means if result was as I expected/wanted or not. 2 Files In directory (stripped off extensions for matching): Foo Bar.txt Foo Bar Foo.txt To compare against 2 Strings: Foo Bar Random Additional Text Foo Bar Foo Random Additional Text Results: compare "Foo Bar"(.txt) against Foo Bar Random Additional Text -> Match (Correct) compare "Foo Bar"(.txt) against Foo Bar Foo Random Additional Text -> Match (Incorrect) compare "Foo Bar Foo"(.txt) against Foo Bar Random Additional Text -> NOT Match (Correct) compare "Foo Bar Foo"(.txt) against Foo Bar Foo Random Additional Text -> Match (Correct) Thank you everyone for your answers.
