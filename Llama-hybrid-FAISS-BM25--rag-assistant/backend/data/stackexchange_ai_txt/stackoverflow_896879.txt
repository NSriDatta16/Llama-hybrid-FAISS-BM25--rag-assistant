[site]: stackoverflow
[post_id]: 896879
[parent_id]: 896320
[tags]: 
Grails adds Groovy goodness to existing Java frameworks and provides the tooling to use it easily: Grails (web part) = Groovyfied Spring MVC (like @Jon points out) GORM = Groovyfied Hibernate GroovyTestCase = Groovyfied JUnit TestCase @Jon already mentioned some concrete practical advantages. I would like to point out two more fundamental concepts in the Grails approach: Convention over configuration . If you adhere to the conventions set out by Grails (which are very sensible btw) you can become productive very quickly. Don't Repeat Yourself (DRY) Grails enables you to write DRY code and in itself is a good example of how to be DRY. If you have any existing Java code reusing it in Grails should be no problem. So, Is it worth learning? I think for you yes. Since you already know Java and some of the available frameworks (especially Spring MVC) the learning curve should not be steep at all. What is all the buzz around Grails, is it only because of Groovy? The buzz could be explained because Grails demonstrates that Groovy can be leveraged to create a very usable "product".
