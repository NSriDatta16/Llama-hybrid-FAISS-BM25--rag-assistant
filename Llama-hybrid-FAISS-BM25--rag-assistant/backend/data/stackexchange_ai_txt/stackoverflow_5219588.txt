[site]: stackoverflow
[post_id]: 5219588
[parent_id]: 5219302
[tags]: 
I just copy pasted this code form my project.. I have created a delegate in this class "appImageDidLoad" this delegate called when the image downloaded completely. Hope it will help you can post comment if you need any explaination #import "MixtapeInfo.h" @class Record; @protocol IconDownloaderDelegate; @interface IconDownloader : NSObject { MixtapeInfo *appRecord; NSIndexPath *indexPathInTableView; id delegate; NSMutableData *activeDownload; NSURLConnection *imageConnection; } @property (nonatomic, retain) MixtapeInfo *appRecord; @property (nonatomic, retain) NSIndexPath *indexPathInTableView; @property (nonatomic, assign) id delegate; @property (nonatomic, retain) NSMutableData *activeDownload; @property (nonatomic, retain) NSURLConnection *imageConnection; - (void)startDownload; - (void)cancelDownload; @end @protocol IconDownloaderDelegate - (void)appImageDidLoad:(NSIndexPath *)indexPath; @end #import "IconDownloader.h" #import "MixtapeInfo.h" #define kAppIconHeight 48 #define TMP NSTemporaryDirectory() @implementation IconDownloader @synthesize appRecord; @synthesize indexPathInTableView; @synthesize delegate; @synthesize activeDownload; @synthesize imageConnection; #pragma mark - (void)dealloc { [appRecord release]; [indexPathInTableView release]; [activeDownload release]; [imageConnection cancel]; [imageConnection release]; [super dealloc]; } - (void)startDownload { self.activeDownload = [NSMutableData data]; // alloc+init and start an NSURLConnection; release on completion/failure NSURLConnection *conn = [[NSURLConnection alloc] initWithRequest: [NSURLRequest requestWithURL: [NSURL URLWithString:appRecord.mixtape_image]] delegate:self]; self.imageConnection = conn; [conn release]; } - (void)cancelDownload { [self.imageConnection cancel]; self.imageConnection = nil; self.activeDownload = nil; } #pragma mark - #pragma mark Download support (NSURLConnectionDelegate) - (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data { [self.activeDownload appendData:data]; } - (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error { // Clear the activeDownload property to allow later attempts self.activeDownload = nil; // Release the connection now that it's finished self.imageConnection = nil; } - (void)connectionDidFinishLoading:(NSURLConnection *)connection { // Set appIcon and clear temporary data/image UIImage *image = [[UIImage alloc] initWithData:self.activeDownload]; self.appRecord.mixtape_image_obj = image; self.activeDownload = nil; [image release]; // Release the connection now that it's finished self.imageConnection = nil; // call our delegate and tell it that our icon is ready for display [delegate appImageDidLoad:self.indexPathInTableView]; } @end
