[site]: stackoverflow
[post_id]: 4197949
[parent_id]: 4153118
[tags]: 
IPC (including MPI and RMI ) Hi, in the wiki pages you can find that MPI (message passing interface) is a methods of a general IPC technique: http://en.wikipedia.org/wiki/Inter-process_communication Another interesting approach is a Remote procedure call. For example Java's RMI enables you to focus only on your application domain and communication patterns. It's an "application level" concurrency. http://www.oracle.com/technetwork/java/javase/tech/index-jsp-136424.html There a various design patterns/tools available to aid in shared memory model prallelization. Apart from the mentioned futures one can also take advantage of: 1. Thread pool pattern - focuses on task distribution between fixed number of threads: http://en.wikipedia.org/wiki/Thread_pool_pattern 2. Scheduler pattern - controls the threads execution according to a chosen scheduling policy http://en.wikipedia.org/wiki/Scheduler_pattern 3. Reactor pattern - to embed a single threaded application in a parallel environment http://en.wikipedia.org/wiki/Reactor_pattern 4. OpenMP (allows to parallelize part of code by means of preprocessor pragmas) Regards, Marcin
