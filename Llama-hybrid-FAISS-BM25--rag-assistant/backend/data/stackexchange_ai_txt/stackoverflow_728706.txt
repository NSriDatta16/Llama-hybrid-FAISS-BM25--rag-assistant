[site]: stackoverflow
[post_id]: 728706
[parent_id]: 
[tags]: 
Recommendations for encrypting/decrypting scripts elegantly?[Now on Sourceforge]

Update2: Thanks for the input. I have implemented the algorithm and it is available for download at SourceForge . It is my first open source project so be merciful. Update: I am not sure I was clear enough or everyone responding to this understands how shells consume #! type of input. A great book to look at is Advanced Unix Programming. It is sufficient to call popen and feed its standard input as demonstrated here. Original Question: Our scripts run in highly distributed environment with many users. Using permissions to hide them is problematic for many reasons. Since the first line can be used to designate the "interpreter" for a script the initial line can be used to define a a decrypter #!/bin/decryptandrun *(&(*S&DF(*SD(F*SDJKFHSKJDFHLKJHASDJHALSKJD SDASDJKAHSDUAS(DA(S*D&(ASDAKLSDHASD*(&A*SD&AS ASD(*A&SD(*&AS(D*&AS(*D&A(SD&*(A*S&D(A*&DS Given that I can write the script to encrypt and place the appropriate header I want to decrypt the script (which itself may have an interpreter line such as #!/bin/perl at the top of it) without doing anything dumb like writing it out to a temporary file. I have found some silly commercial products to do this. I think this could be accomplished in a matter of hours. Is there a well known method to do this with pipes rather than coding the system calls? I was thinking of using execvp but is it better to replace the current process or to create a child process?
