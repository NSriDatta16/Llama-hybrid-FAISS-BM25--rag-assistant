[site]: stackoverflow
[post_id]: 5362374
[parent_id]: 5362226
[tags]: 
Linq to SQL is deprecated by MS. If you want to stick with MS Frameworks take a look at Entity Framework. (See comments) I would advice to use NHibernate. If you use their fluent configuration or even auto configuration you can easily build a simple system. As soon as you need something more sophisticated NHibernate has the power you need. Of course this won't be the simplest way to do CURD, however database access is no simple topic and should need some thought. You can google for active record implementations for .net if you want to take the ruby on rails approach, which is quite pragmatic and elegant, too. Edit to provide you with a sample take a look at the NH getting started guide: http://nhforge.org/wikis/howtonh/your-first-nhibernate-based-application.aspx It's relatively easy to get going with NHibernate. As you require more sophisticated features you can drill deeper into the framework. Notice that the getting started guide uses XML Mapping Configuration. You can use http://fluentnhibernate.org/ to fluently configure your mappings like: public class SomeTypeMap : ClassMap { Id(x => x.Id); Map(x => x.Property1); Map(x => x.Property2); // .... Map(x => x.PropertyN); } The fluent interface exposes all further functions chained on the Map() method. Fluent NH even provides Auto Mapping: http://wiki.fluentnhibernate.org/Auto_mapping
