[site]: stackoverflow
[post_id]: 5188248
[parent_id]: 
[tags]: 
Disk IO, performance issues with two files?

I'm interested in some low-level details on how disk seeks and writes works when your working with two files concurrently. I'm thinking of splitting an file that I currently do both read and writes on to two files to handle concurrency better. They're are potentially heavily accessed at the same time. a) Will performance be much worse because two files are accessed instead of one, even if disk seek times would from the start to the end of a big "all-in-one" file? b) Can you somehow place two files after each other or "close to each other" on disk to improve their concurrent performance? (I guess this will be hard with disk fragmentation and all) c) How does SSD drives affect this, since they don't spin they should be pretty good for a solution like this right? d) if you fire rapid i/o reads and writes at both files at the same time will the OS (Windows) optimize so that the disk the head doesn't go back and forth too much? I'm bit curious why some database/nosql solution seem so adamant in keeping things in a single file when using more than one seems to offer some advantages.
