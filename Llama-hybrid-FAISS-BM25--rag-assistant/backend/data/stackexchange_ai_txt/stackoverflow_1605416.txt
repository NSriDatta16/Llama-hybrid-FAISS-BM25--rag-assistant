[site]: stackoverflow
[post_id]: 1605416
[parent_id]: 1605402
[tags]: 
real and float numeric types are useful to handle a very wide range of values as is encountered with physical dimensions or mathematical results. The loss of precision they incur, for example when adding values which are not in the same range, for example 0.00002468 + 1.23E9 (i.e. 1,230,000) is typically acceptable for practical uses. This is a small tribute to pay to the relatively compact storage requirements of these floating point types. The decimal and money types do not cover such a broad range (yet they cover ranges that are beyond most typical accounting applications), and do not exhibit any of this lossy behavior with rounding and such. See MS-SQL document for detailed information. The following table provides an indicative precision, range and storage requirement for various types. Type Max value precision(*) Storage money +/-922,000,000,000,000 3 (4?) 8 bytes smallmoney +/-200,000 3? 4 bytes decimal varies (as defined) varies varies 3 to 17 real +/- 3.4 * 10^38 7 digits 4 bytes float "56" +/- 1.7 * 10 ^308 15 digits 8 bytes (float can also be declared to be just like a real) (*) precision : For the "exact" types, this is the number of digits after the decimal point. For the "lossy" reals and floats, this is the number of significant digits.
