[site]: crossvalidated
[post_id]: 374380
[parent_id]: 
[tags]: 
Are basic multilayer perceptrons well-suited to prediction of non-independent events?

Multilayer perceptrons are great for discovering associations between variables defining independent events based on the same underlying associations in reality. Less cryptically put, MLP's are great for learning, for example, whether a tumor is cancerous based on its size and density, because these features are inherently associated with properties relating to cancer formation, and thus are good predictors of whether or not a given tumor is cancerous. But cancerous tumors are independent events, e.g. if Bob's tumor is cancerous, that fact does not make it any more likely that Alice's tumor is also cancerous, it simply reveals more information about the underlying pattern that can be trained upon without the events themselves having any actual interdependence. What if the problem at hand does not involve independent events, but dependent ones. For example, what if I wanted to predict earthquakes? Earthquakes are dependent events, as an earthquake here creates and relieves stresses in the earth there , actually changing the likelihood that a future earthquake will occur at a given time. Now convention would dictate that for predicting such a problem, I start with an LSTM or some other type of RNN, so I can express the ordinality of earthquake events through the directed graph itself, rather than though the data. But earthquake events really aren't a matter of "is there an earthquake happening here and now, or isn't there" because earthquakes happen constantly, and the vast majority are too weak to detect, and thus too weak to be present in the dataset. I'm trying to overcome this factor of — and excuse my crude use of mathematics terminology from a different field — a "sparse" dataset over the true set of events, by using a model not inherently structured toward ordinal data. Is a basic multilayer perceptron well-suited toward this type of dependent-events problem, or is there a clearly better structure? Also, if you know something I clearly don't, please share. I'm here to learn :)
