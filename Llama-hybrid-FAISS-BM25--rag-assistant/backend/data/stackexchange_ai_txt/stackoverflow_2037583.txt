[site]: stackoverflow
[post_id]: 2037583
[parent_id]: 2037543
[tags]: 
Some newer logging frameworks allow you to specify arguments as parameters, and won't evaluate them if there's no logging. The example I found is LogBack, the successor to Log4j. Here's the info: http://www.infoq.com/news/2007/08/logback This gives you the best of both worlds, so to speak. Elegant syntax yet good performance. Log4j code example: if( logger.isDebugEnabled() ) { logger.debug( "User with account " + user.getAccount() + " failed authentication; " + "supplied crypted password " + user.crypt(password) + " does not match." ); } Equivalent LogBack code: logger.debug( "User with account {} failed authentication; " + "supplied crypted password {} does not match.", user.getAccount(), user.crypt(password) ); This defers the cost of message assembly until LOGBack has ascertained whether or not this message will be viewed. It doesn't defer the cost of retrieving expensive parameters, such as the password crypting in the above example.
