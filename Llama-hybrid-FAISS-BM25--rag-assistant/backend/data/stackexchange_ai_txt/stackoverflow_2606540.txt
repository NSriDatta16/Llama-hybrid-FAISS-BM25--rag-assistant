[site]: stackoverflow
[post_id]: 2606540
[parent_id]: 2185321
[tags]: 
One could imagine the following requirements for a hypothetical product: Quick time-to-market on Windows Eventual deploy to non-Windows platforms Must not rely on Mono for non-Windows In such a scenario, using eg C# for 1 would stymie you on 2 and 3 without a rewrite. So, one could develop in C++/CLI, suitably munged with macros and template shenanigans to look as much like ordinary C++ as possible, to hit reqt 1, then to hit reqt 2 one would need to (a) reimplement said macros and template shenanigans to map to pukka C++ and (b) implement .NET framework classes used in pukka C++. Note that (a) and (b) could be reused in future once done once. The most obvious objection would be "well why not do the whole thing in native C++ then?"; well maybe there's lots of good stuff in the vast .NET class library that you want to use to get to market asap. All a bit tenuous I admit, so I very much doubt this has ever been done, but it'd be a fun thing to try out !
