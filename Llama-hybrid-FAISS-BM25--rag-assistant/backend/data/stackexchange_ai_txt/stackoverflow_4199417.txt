[site]: stackoverflow
[post_id]: 4199417
[parent_id]: 
[tags]: 
Proper Error Handling on a WCF service call

I am tyring to figure out the best way to go about calling a WCF service and handeling an error or timeout when it occurs. Here is what I am doing: I have a data service interface like this: public interface IDataService { void GetUserId(string userName, string password, Action getUserIdComplete); } I implement it like this: public class MockDataService : IDataService { private Action _getUserIdCompleted; private SomeServiceClient; public MockDataService() { _proxy = new SomeServiceClient(); } public void GetUserId(string userName, string password, Action getUserIdComplete) { _getUserComplete = getUserIdComplete; var request = new UserRequest(); request.UserName = userName; request.Password = password; //populate any other request info _proxy.GetUserIdCompleted += new EventHandler (_proxy_GetUserIdCompleted); _proxy.GetUserIdAsync(request); } void _proxy_GetUserIdCompleted(object sender, GetUserIdCompletedEventArgs e) { _proxy.GetUserIdCompleted -= new EventHandler (_proxy_GetUserIdCompleted); _getUserIdComplete(e.UserId); } } My problem is that, when an error happens or the request times out, the application terminates. I could wrap a try catch block around the call but that sounds like a bad idea. Can someone please help me to elegantly handle timeouts and errors with this method?
