[site]: stackoverflow
[post_id]: 5174903
[parent_id]: 
[tags]: 
How can you do phone-to-server development when simulators or Wi-Fi are not an option?

I'm working on a project for multiple mobile phones (iPhone/BlackBerry/Android) in an organization where Wi-Fi is strictly forbidden. The nature of the project employs the phones' camera so simulator programs are not an option, and it needs to be able to communicate to a server, so some form of connectivity is required. So the problem I have is that I can't use the camera of the phone as well as have it communicate with either my development machine or a QA cluster. I can't get the phone to be on a network wirelessly because of the aforementioned Wi-Fi ban. I can have it communicate over the Internet using 3G or whatever it uses to connect, but then it can't see my local machine or our QA environment because those aren't visible to the outside world. And I can't just use the simulator because I need to use the camera. The way I see it my only real options are to simulate the communication to the server with "stunt" images loaded from files and then test the actual phone-to-server communication when the communication piece goes to production, or do as much testing as I can on some other Wi-Fi network, like the one at my house. If these phones had Ethernet jacks - or could share the network connection of the machine they're attached to - my problem would be solved. Or if the simulators could use, say, a webcam attached via USB (which would not simulate the capabilities of the actual camera in the phone but might be better than nothing). The fact that different phone platforms have different simulators is unavoidable but complicates the situation further. Has anyone ran into this issue before and has an inventive solution?
