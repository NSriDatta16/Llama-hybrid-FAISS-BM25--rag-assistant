[site]: stackoverflow
[post_id]: 4986554
[parent_id]: 4985246
[tags]: 
@eggie5 said: I would put in your os x cd and install xcode again. Do NOT install XCode from the DVD. The version that came on the 10.6 (Snow Leopard) disk is known to be buggy. Install the latest version from Apple's XCode site. You have to be registered to download, but it's a free registration. I suspect you upgraded to 10.6, rather than it being installed by default when you bought your machine. 10.6 is 64-bit as is its related XCode version, so everything should have been 64-bit clean. Since it isn't it smells like regular Leopard or a pre-10.6 OS. That means all RVM hosted Rubies are suspicious and need to be cleaned up, along with any gems that were compiled prior to the upgrade and update of XCode. After installing the XCode distribution, you'll need to uninstall, then install your RVM hosted Rubies. First, update RVM to the latest rev: Type rvm -v and note the revision number. Type rvm get head to load the latest version. When it has finished loading you should see a new revision number. RVM changes fast so you want to update to the latest pretty regularly. This is from the RVM FAQ which is very good information for working with RVM, especially the comments about using sudo with gems: My ruby is compiling as 32 bit but I am on Mac OS X Snow Leopard which has heavy advertisement that it is 64 bit!!! RVM compiles to your current running kernel's architecture. This means that if your kernel is running as a 32 bit kernel (uname -m) it will compile 32 bit. You can override this behavior by placing the following in your ~/.rvmrc before installing the ruby interpreter: rvm_archflags="-arch x86_64" I think it's a good idea to set that rather than rely on defaults, since you're probably going to be on 64-bit from now on. Type rvm reload or close your terminal window and reopen a session. Type rvm notes and read it. This gives you a list of prerequisites you need for a smooth install of Ruby, based on your operating system. Failure to install those means various features might not work in Ruby, which will result in random, weird failures. Type rvm list and make note of your installed Ruby versions. Pretend your first one is ruby-1.8.7-p330 . Type: rvm uninstall ruby-1.8.7-p330 rvm install ruby-1.8.7-p330 Repeat for each one you have installed. When you are done type rvm info and see if what it says passes sanity checks. If everything looks good, it's time to rebuild the native drivers for your gems. Both of these steps are optional, but are part of a good periodic house-keeping: You might want to give your gems an update if you haven't run gem update for a while. rvm ruby 'gem update' will walk through the installed Rubies, updating them. People accumulate old gems but often don't clean them up, so, to speed up rebuilding your gems you probably should clean out your old ones. You'll have to pay attention to what its telling you as it processes, because it will let you know about dependencies that will not be met. rvm ruby 'gem clean' will walk through the installed Rubies, and clean out the old stuff. To rebuild the native drivers type rvm ruby 'gem pristine --all' , which will reinstall all your gems. Afterward, run rvm info and make sure it's returning sane information again. Also, as an emergency escape hatch, it's entirely safe to blow away your ~/.rvm directory, either by typing rm -f ~/.rvm or using rvm implode , then starting over. Reinstalling a Ruby is the longest part of the process, and RVM makes it pretty painless once the supporting libraries are there.
