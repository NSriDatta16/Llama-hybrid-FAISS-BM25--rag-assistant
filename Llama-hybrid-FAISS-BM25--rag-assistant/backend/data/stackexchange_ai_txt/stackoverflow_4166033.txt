[site]: stackoverflow
[post_id]: 4166033
[parent_id]: 4165360
[tags]: 
Why ObjectReference does not expose its underlying object? I am assuming that you are referring to the com.sun.jdi.ObjectReference interface. If so, it is a combination of two things: On the face of it, it wouldn't make sense. The ObjectReference is in the JVM running the debugger, but the corresponding Java object exists on the target machine. Assuming that it did make sense, then it would be a bad thing to expose the actual pbject addresses and memory contents. This would allow the debugger to do things to the target JVM that would lead to hard crashes. Considering the situation that you have the uniqueID() from ObjectReference, is there any way to resolve the underlying object from JVM? No. If no to the previous question, then what is the best way to resolve the underlying object? AFAIK, there is no way to do this, apart from writing your own debug agent in C / C++ using the JVM Tool Interface and configuring the target JVM to run it.
