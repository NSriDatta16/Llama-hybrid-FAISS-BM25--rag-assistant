[site]: stackoverflow
[post_id]: 4050531
[parent_id]: 4050259
[tags]: 
Your entity could be simple set of fields with getters and setters. What you need to take care of is how you relate your objects and approach you take to populate objects. ORM APIs gives liberty of using Objects rather than SQL. You should be careful as to when you should choose to initialize the fields of an Object. For example if you have an object person, which comprises of name, age, collection of contacts and cities visited. In a situation where you are interested in name and age of the person and not contact and cities, you should load name and age only. Which implies that contacts and cities should be lazy loaded. When interested in contact you load only contacts and not the entire person object or through person object. You would want to load Set of contacts only using Dao/Service and explicitly defining methods to load specific aspect of the object (use of reverse association). Some best hibernate practices can be found at Best Practices . Updated: 1) Entity does not populate on its own. One of the popular approach is to have DAO to do this Job. Your Entity could simple be public class Foo { private Set bar=new HashSet (); public Set getBar { return bar; } public void setBar(Bar bar) { this.bar = bar; } } 2) You can have transaction managed in another layer also referred as Service layer.
