[site]: stackoverflow
[post_id]: 2451906
[parent_id]: 2444848
[tags]: 
At least in my opinion, most situations like this should be handled in data, not code. Hard-coding the fact that (for example) operation X can only be done by an administrator tends to be relatively brittle. Right now, you have five classes of users, but (just for example) you'll almost inevitably (somewhere along the line) end up inventing some other class of user, and have to re-organize quite a bit of code to fit (e.g. a new step halfway between moderator and admin, or perhaps a "restricted user" that's a step below a normal verified user, etc.) In fact, you're already basically running into that with your "banned" user who's mostly like an unverified user, but in a few ways like a verified user. Having to rewrite the code every time you decide on a change like this is a poor idea. Instead, you should (probably) pre-define your five (or maybe six) user groups, and (for example) assign a bit to each. Likewise, assign a bit-mask to each function. To verify whether a given user can execute a given function, you AND those bitmasks together, and see whether the user has the appropriate bits set in their mask. This makes it considerably easier to create new groups as needed, and/or change the assignments of rights to execute specific functions to groups of users. In particular, it allows changes in such rights to be done administratively rather than requiring a code rewrite.
