[site]: stackoverflow
[post_id]: 4159123
[parent_id]: 
[tags]: 
How can I submit this form using json to another page and parse json in PHP or jQuery?

I know this seems like I should have immediately found the one example out there that simply explained this concept, and I can't find the right one. The examples in tutorials out there use flickr as the request url, and I get it up to a point. I'm trying to handle a very complex form with four different buckets of info under one larger bucket of info. I though json would be a good choice. So I found an example that shows me how to serialize the data like this: $.fn.serializeObject = function() { var o = {}; var a = this.serializeArray(); $.each(a, function() { if (o[this.name]) { if (!o[this.name].push) { o[this.name] = [o[this.name]]; } o[this.name].push(this.value || ''); } else { o[this.name] = this.value || ''; } }); return o; }; Which is great! Via an alert, I can see the json structure and my form elements. So I thought the rest would be totally simple. And here I am banging my head because I can't find one simple example of HOW to SEND or REQUEST this serialized data from my processing page which needs to print, organize and calculate the values of what was sent. So what I did next (and I'm sure it's wrong, but perhaps this will illustrate how new I am to it and where I need to start in my understanding of it) was to write the serialized data out to a hidden field like so: $('form').submit(function() { var field = ' '; // alert($.toJSON($('form').serializeObject())); alert(field); document.write(field); return true; }); I'm using the GET method in the form and when it pops the alert it looks fine, then it goes to the next page. Only that hidden var I wrote out isn't there. The rest of the form values are. I just WANT to see the darn json somehow so I can then use json.parse or whatever I have to use in PHP to decode it. Here's the complete code: Attendees First Name: Last Name: Preconference: A: B: What days: ConfA: ConfB: ConfC: Select a role: Decision Maker Person Family Select your educational credits: Nursing Welding Case Managers First Name: Last Name: Preconference: A: B: What days: ConfA: ConfB: ConfC: Select a role: Decision Maker Person Family Select your educational credits: Nursing Welding Case Managers $.fn.serializeObject = function() { var o = {}; var a = this.serializeArray(); $.each(a, function() { if (o[this.name]) { if (!o[this.name].push) { o[this.name] = [o[this.name]]; } o[this.name].push(this.value || ''); } else { o[this.name] = this.value || ''; } }); return o; }; $('form').submit(function() { var field = ' '; // alert($.toJSON($('form').serializeObject())); alert(field); document.write(field); return true; }); How do I get it to just communicate in some fashion with the receive.php page? Thanks for fielding such a newbie question. I did search for awhile, but can't figure out if I need to use a framework, or if there is a nice straightforward way.... There were so many different kinds of examples that were more complex than this problem seemed to call for.
