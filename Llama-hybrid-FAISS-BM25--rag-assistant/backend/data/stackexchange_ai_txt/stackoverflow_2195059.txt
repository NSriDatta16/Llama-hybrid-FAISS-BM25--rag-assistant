[site]: stackoverflow
[post_id]: 2195059
[parent_id]: 2194299
[tags]: 
Original: >>> from matplotlib import pylab >>> data1 = [0.3, 0.9, 0.1] >>> data2 = [3.0, 0.2, 0.5] >>> colors = ['b','magenta','cyan'] >>> data_list = [data1,data2] >>> num_bars = len(data_list) >>> for i, d in enumerate(data_list): ... for j,value in enumerate(sorted(d,reverse=True)): ... c = colors[j] ... obj_list = pylab.bar(i*0.4,value,width=0.8/num_bars,color=c) ... You can draw them in order, like this, or do the zorder Edit: I spiffed this up a little. Basically, the key is to sort the data for each bar from largest to smallest before calling bar. But you could go back later and do set_zorder etc. In fact, I save the objects returned from bar () just in case you wanted to inspect them. import numpy as np from pylab import * data = [[6.7, 1.5, 4.5], [2.0, 3.25, 5.7]] w = 0.5 xlocations = np.array(range(len(data)))+w colors = ['r','b','cyan'] oL = list() for x,d in zip(xlocations, data): for c,value in zip(colors, sorted(d,reverse=True)): b = bar(x, value, width=w, color=c) oL.extend(b) show()
