[site]: stackoverflow
[post_id]: 5356907
[parent_id]: 5355833
[tags]: 
CHAR(1): G, V, F, D, P Performant, storage efficient and results in readable code. I favour this solution when I know that the values are stable, and when I need to attach behaviour to the codes. ( if code = 'G' then specific behaviour ). TINYINT: Using number codes (i.e. Grain = 1, Vege = 2) Performant, storage efficient, but results in less readable code. This solution is also immune to confusion if values change (G was initially Grain, but now it is changed into Brain). This is most common. ENUM I don't see a single benefit of using enum other than a tiny performance benefit. Of course, the small performance gain will never be enough if you are truly having a performance problem. VARCHAR(9): Using full names Results in readable code. Certain queries will have less joins which in those specific cases provides performance benefits. Not storage efficient, and may give you problems if you want to change the values. If you have lots of tables with lots of rows and they are all referencing this table, think carefully before you take the risk.
