[site]: stackoverflow
[post_id]: 3337259
[parent_id]: 3336987
[tags]: 
SPOILER ALERT: Since you're solving a Project Euler problem, you might not want to read this, even though it's only about the "how to read in the data?" part of it... The reason this happens is as explained in the other answers. The correct solution would be to embed the input in your code as a string -- with linebreaks! -- and use something like the following: (->> the-string (.split #"\n") (map #(.split #"\s+" %)) (map (partial drop-while empty?)) ;; this just doesn't care about the leading 0 (mapcat (partial map #(Integer/parseInt %))) vec) This should produce a vector of your numbers. For a two-dimentional vector, you could replace the mapcat with a regular map and put in an extra (map vec) before the final vec . If you prefer to put the input in a separate file and have Clojure read it from there, replace the-string and (.split #"\n") with a call to line-seq on a reader on your file.x
