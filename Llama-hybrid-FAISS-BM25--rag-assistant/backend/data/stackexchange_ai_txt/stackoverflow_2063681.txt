[site]: stackoverflow
[post_id]: 2063681
[parent_id]: 2063387
[tags]: 
As said before accessing an Array by an index as you will do in C in not the same, it s not a direct access to the data the virtual machine will do some check before giving you the data you want. I suggest you read this post talking about implementation of Array structure within Tamarin (Adobe virtual machine used in Flash) To simplify , the second implementation use a Class for the Linked List which mean that the compiler (and then the VM ) know exactly when you call a field ( data , next , ...) where and how it can found them. It has less work to do, less overhead and so it will be faster. If you want to use faster Array, use a typed Vector instead when available . Avoid to use an Object to store field make a class, etc.. You can check for example Joa Ebert paper on As3 optimisation Edit: Let's see the ABC bytecode produce for an Array access compare to a class property: Compile this class: package { import flash.display.Sprite; public class TestArray extends Sprite { private var _array:Array=[1]; private var _ll:LinkList=new LinkList(1); private function test():void { var d1:*= _array[0]; var d2:*= _ll.data; } public function TestArray() { test(); } } } class LinkList { public var data:Object; public var next:LinkList; public function LinkList(data:Object) { this.data = data; } } and look at the bytecode for test() function ( AVM2 overview ): 1. GetLocal0 2. PushScope 3. GetLocal0 4. GetProperty QName(PrivateNamespace(""), "_array") 5. PushByte 0x0 6. GetProperty MultinameL( NamespaceSet( PrivateNamespace(""), PrivateNamespace(""), PackageNamespace(""), PackageInternalNamespace(""), Namespace(http://adobe.com/AS3/2006/builtin), ProtectedNamespace("TestArray"), StaticProtectedNamespace("TestArray"), StaticProtectedNamespace("flash.display:Sprite"), StaticProtectedNamespace("flash.display:DisplayObjectContainer"), StaticProtectedNamespace("flash.display:InteractiveObject"), StaticProtectedNamespace("flash.display:DisplayObject"), StaticProtectedNamespace("flash.events:EventDispatcher"), StaticProtectedNamespace("Object") )) 7. CoerceAny 8. SetLocal1 9. GetLocal0 10. GetProperty QName(PrivateNamespace(""), "_ll") 11. GetProperty QName(PackageNamespace(""), data") 12. CoerceAny 13. SetLocal2 14. ReturnVoid So accessing the indexed element from the Array result in the long lookup GetProperty at line 6. which is not as free lookup as the single lookup line 11. for the data field access
