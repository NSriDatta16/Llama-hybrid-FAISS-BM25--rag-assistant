[site]: crossvalidated
[post_id]: 332003
[parent_id]: 242863
[tags]: 
Looking at the code, python-glove also computes the cosine similarity. In _similarity_query it performs these operations: dst = (np.dot(self.word_vectors, word_vec) / np.linalg.norm(self.word_vectors, axis=1) / np.linalg.norm(word_vec)) You can find the code here if no updates have been performed (otherwise search for the _similarity_query ). As you can observe, the function first computes the dot product between the word vectors and the current word embedding, after that the division between the norms (or length) is performed, which corresponds to the definition of the cosine distance $$\text{CosineSimilarity(u, v)} = \frac {u . v} {||u||_2 ||v||_2} = cos(\theta) \tag{1}$$ .
