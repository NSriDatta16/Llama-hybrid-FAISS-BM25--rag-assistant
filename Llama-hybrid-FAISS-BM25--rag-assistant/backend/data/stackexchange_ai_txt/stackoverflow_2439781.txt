[site]: stackoverflow
[post_id]: 2439781
[parent_id]: 2439739
[tags]: 
You need to initialize the static variable inside the class declaration itself: class Person { public static $name = 'bob'; } Or, you need some bootstrapping mechanism, where you inititalize the static variable: bootstrap.php: Person::$name = 'bob'; and then in the pages: // assuming, you preloaded the bootstrap somewhere first $person = new Person(); echo $person::$name; edit Ugh, what was I thinking... the above won't even work. You can't access a static member like that on an instance. Only through a method, like so: class Person { public static $name; public function getName() { return self::$name; } } // assuming, you preloaded the bootstrap somewhere first $person = new Person(); echo $person->getName(); /end edit Or as Pekka pointed out, use sessions to keep state. But more importanty: what is the goal you are trying to achieve? If you want to maintain state of a Person object between different requests, then Pekka's route is the way to go, or alternatively use another persistance storage mechanism, like a DB, File, etc... Because I presume you don't mean to have every single Person instance named 'bob' do you? I presume you mean to maintain state of a single Person instance. So, concluding, you probably don't want to use a static member to begin with.
