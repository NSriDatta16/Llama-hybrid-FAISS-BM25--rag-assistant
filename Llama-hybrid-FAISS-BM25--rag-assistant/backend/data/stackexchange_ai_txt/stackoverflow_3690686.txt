[site]: stackoverflow
[post_id]: 3690686
[parent_id]: 
[tags]: 
How to write a request filter / preprocessor in Django

I am writing an application in Django, which uses [year]/[month]/[title-text] in the url to identitfy news items. To manage the items I have defined a number of urls, each starting with the above prefix. urlpatterns = patterns('msite.views', (r'^(?P [\d]{4})/(?P [\d]{1,2})/(?P [\w]+)/edit/$', 'edit'), (r'^(?P [\d]{4})/(?P [\d]{1,2})/(?P [\w]+)/$', 'show'), (r'^(?P [\d]{4})/(?P [\d]{1,2})/(?P [\w]+)/save$', 'save'), ) I was wondering, if there is a mechanism in Django, which allows me to preprocess a given request to the views edit , show and save . It could parse the parameters e.g. year=2010, month=11, slug='this-is-a-title' and extract a model object out of them. The benefit would be, that I could define my views as def show(news_item): '''does some stuff with the news item, doesn't have to care about how to extract the item from request data''' ... instead of def show(year, month, slug): '''extract the model instance manually inside this method''' ... What is the Django way of solving this? Or in a more generic way, is there some mechanism to implement request filters / preprocessors such as in JavaEE and Ruby on Rails?
