[site]: stackoverflow
[post_id]: 5514550
[parent_id]: 3034578
[tags]: 
I've just had a similar problem (a search for the exception lead me here), with MVC3, which for me turned out to be because I had moved my edmx file and it had got confused about where the namespace attribute of the EdmEntityTypeAttribute should be pointing. I create a structure similar to the one you've described, whereby I had a model class that derived from an entity type and again, I got the same error. If I copy the EdmEntityTypeAttribute from the entity type to the derived class then the problem goes away (at least for writing, you get a different problem on reading). This leads me to believe that the framework is probably using reflection to interrogate the class passed into the add method, to determine what attributes are present, but only on the actual type (inheritence tree is ignored). I thought about this and it actually makes a bit of sense if you think about data flowing back from the database. If you were to fetch back a list of 'Person' objects, the framework would need to decide what class to create to and populate from the table and it doesn't know about your derived Model class so it will need to make the base class. At best, this would mean that you're interacting with the storage using raw entity types for reading and model types for writing, which seems like it would get confusing. The use of partial classes in the generated entity types allows you to extend them if you need to, or if you want to explicitly separate the entity and model types, then some kind of object mapping may be required. Of course, I'm still getting to know the entity framework, so there may well be another way around the problem. I assume by this point, you've already found a solution that's working for you.
