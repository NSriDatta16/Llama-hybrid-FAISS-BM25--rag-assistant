[site]: stackoverflow
[post_id]: 933692
[parent_id]: 933667
[tags]: 
I suspect that the best way to go around this would be to create a translator between your language and SQL, mainly because you won't be able to get more functionality from a rdbms than what's provided via its SQL dialect. MySQL existence has nothing to do with the difficulty of the work done by storage engines, storage engines in MySQL really do most of the grunt work, leaving MySQL to parse and optimize SQL and the retrieve the data from the engine, respecting the corresponding semantics of the engine. Most rdbms do not expose storage engines to users/administrators so in that respect MySQL is somewhat unique, which makes more reasonable to create a translator, that way you'll be able (by changing a few syntax rules) to use more than one rdbms via your app. Additionally, you probably won't be able to generate a pure relational language over existing database technology, check The Third Manifesto for more information. All that said, I would really first look at all existing SQL wrappers, maybe some will suit your taste .
