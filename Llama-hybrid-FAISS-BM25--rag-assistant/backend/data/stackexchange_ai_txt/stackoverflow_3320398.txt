[site]: stackoverflow
[post_id]: 3320398
[parent_id]: 3320214
[tags]: 
If the records are as consistent as presented in your example, you don't need to use regular expressions. A simple partition of the text file into lists of tokens will do the trick. For instance: txt = '\n10: Vikelis M, Rapoport AM. Role of antiepileptic drugs as preventive agents for \nmigraine. CNS Drugs. 2010 Jan 1;24(1):21-33. doi:\n10.2165/11310970-000000000-00000. Review. PubMed PMID: 20030417.\n\n\n21: Johannessen Landmark C, Larsson PG, Rytter E, Johannessen SI. Antiepileptic\ndrugs in epilepsy and other disorders--a population-based study of prescriptions.\nEpilepsy Res. 2009 Nov;87(1):31-9. Epub 2009 Aug 13. PubMed PMID: 19679449.\n\n\n' lines = [token.replace('\n', '') for token in txt.split('.')] for line in lines: print line will print line by line each element of your references: 10: Vikelis M, Rapoport AM Role of antiepileptic drugs as preventive agents for migraine CNS Drugs 2010 Jan 1;24(1):21-33 doi:10 2165/11310970-000000000-00000 Review PubMed PMID: 20030417 21: Johannessen Landmark C, Larsson PG, Rytter E, Johannessen SI Antiepilepticdrugs in epilepsy and other disorders--a population-based study of prescriptions Epilepsy Res 2009 Nov;87(1):31-9 Epub 2009 Aug 13 PubMed PMID: 19679449 Again, if you can trust that the first line of a record has the author; the second one the title, the third one the journal, etc, you may be able to do this very fast. If the information is a bit more "contextual" then you can START using regexp at this point. Good luck.
