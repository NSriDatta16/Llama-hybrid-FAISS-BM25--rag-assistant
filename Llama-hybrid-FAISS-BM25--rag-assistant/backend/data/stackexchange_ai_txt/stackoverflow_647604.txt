[site]: stackoverflow
[post_id]: 647604
[parent_id]: 646590
[tags]: 
I'm not sure what you mean by 'windows event' -- there are just so many! You're talking about the task scheduler in the headline, but what you write in your question seems to indicate there's some external change you are looking for with the help of the scheduler. I'll assume it's not a keyboard, mouse or windows event, since that's what GUI frameworks are for. If the 'glue' application approach isn't elegant or quick enough for you, I'd say dig into Windows Management Instrumentation . Check out this article on MSDN for a starter, and perhaps this one on how to work within VS : if that fails, you may have to descend to the COM Interop level to register your listener. You haven't stated how your 'background application' is implemented: whether as a normal process with or without a window/GUI, or as a Windows Service, or something more modern . I think WMI listeners work with all of these, but thinking is no substitute for testing (and vice versa!). I offer this advice with some hesitation: WMI is based on DCOM , which can be a pain in the posterior if you start working across the network, and sometimes within a single machine (running under different user accounts). I'm sure there's a well thought out security model somewhere underneath all the mysterious parameters and configurations!
