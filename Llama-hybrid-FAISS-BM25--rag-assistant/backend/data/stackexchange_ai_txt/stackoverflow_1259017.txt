[site]: stackoverflow
[post_id]: 1259017
[parent_id]: 1258954
[tags]: 
First, here are a few posts you could read about ClearCase: What are the basic clearcase concepts every developer should know? How to Leverage Clearcaseâ€™s features ClearCase advantages/disadvantages Now: CCRC means "web views", i.e. snapshot views on a ClearCase-dedicated web server... you better have a good LAN between your desktop and that server. branches are first-class citizen in ClearCase, meaning one given ClearCase view (here a snapshot ccweb one) will only give you access to one branch. If you are used to working on several branches at once, you will need several views. all operations are file-per-file, so the idea on working on a private branch, then merge is cumbersome because of the number of merges involved. I strongly recommend working on a common branch for a given development effort that several developers want to address. If they want private branches and sandbox, they can setup a Git view within their ClearCase view without problem. (Note: a snapshot view cannot be considered as a sandbox: when you check-in a file, every other developer will see your changes when they will do an update of their snapshot view) the ClearCase Eclipse plugin does support refactoring. the notion of svn:external is not really supported in ClearCase, except through links. Or through UCM baseline dependencies. One should be aware that it is easier to work with binaries dependencies than with sources dependencies: if your external is for including the thousand of source files of the next project, it will be cumbersome in ClearCase (due to long updates). If you include a few jar or dll, that is much quicker (plus those are the one which will actually be deployed). If you are working with UCM, it will not be possible to move codes from one component to another. You will have to clearfsimport the main labels in the new identified "common" component. Note: RCS keyword substitution is generally considered... evil ;) I would recommend a separate text file with the version or labels of relevant important files in it. That works fine for delivery materials, not for source files.
