[site]: stackoverflow
[post_id]: 3211508
[parent_id]: 3199476
[tags]: 
I will add my few words. Linker can remove unused procedures and functions only if it can follow the code hierarchy. The nightmare list for linker listed below: Message-driven code, the sad news is that this code can't be removed whatsoever, that's why Delphi blank project size continues growing from version to version. Every new windows message (WM_TOUCH for example as long as I know introduced recently) creates procedure call hierarchy that can't be removed (even if you don't have plan to use Touch API at all). This is because every case WM_: fragment is something linker can't decide whether it will be used or not. Code and data structures accessed from the begin end, initialization, finalization secions of the units. Here you have some control, remove unnecessary calls or object creation. Even if you create objects on demand and only free them in finalization section, make it carefully
