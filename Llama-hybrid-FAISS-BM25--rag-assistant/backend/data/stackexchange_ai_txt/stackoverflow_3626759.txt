[site]: stackoverflow
[post_id]: 3626759
[parent_id]: 3603858
[tags]: 
Unit Tests Python and matlab are dynamic languages. As your code base grows, you will be forced to refactor your code. In contrast to statically typed languages, the compiler will not detect 'broken' parts in your project. Using unit test frameworks like xUnit not only compensate missing compiler checks, they allow refactoring with continuous verification for all parts of your project. Source Control Track your source code with a version control system like svn , git or any other derivative. You'll be able to back and forth in your code history, making branches or creating tags for deployed/released versions. Bug Tracking Use a bug tracking system, if possible connected with your source control system, in order to stay on top of your issues. You may not be able, or forced, to fix issues right away. Reduce Entropy While integrating new features in your existing code base, you will add more lines of code, and potentially more complexity. This will increase entropy. Try to keep your design clean, by introducing an interface, or inheritance hierarchy in order to reduce entropy again. Not paying attention to code entropy will render your code unmaintainable over time. All of The Above Mentioned Pure coding related topics, like using a style guide, not duplicating code, ..., has already been mentioned.
