[site]: stackoverflow
[post_id]: 851033
[parent_id]: 850999
[tags]: 
Seems like you're trying to microoptimize, which means you'll spend a lot of effort to make your program run the same speed. Focus on clarity of code first, and then optimize what is actually slow. Assuming you have profiled and found this to be your application's bottleneck in real-world scenarios: It is inelegant (and often a performance drag) to use exceptions in non-exceptional cases. See http://www.developerfusion.com/code/4650/validating-an-integer/ , for example. Depending on the constraints of your situation, you're probably better off changing your IsInteger() to do one of: bool int.TryParse(string s, out int result); (See http://msdn.microsoft.com/en-us/library/system.int32.tryparse.aspx ) or: Microsoft.VisualBasic.Information.IsNumeric(object expression) (See http://www.hanselman.com/blog/ExploringIsNumericForC.aspx ) or x >= '0' && x And then: .Where(c => c[0] == 'q' && IsInteger(c[1]))
