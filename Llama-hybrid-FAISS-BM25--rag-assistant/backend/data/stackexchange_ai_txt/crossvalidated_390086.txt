[site]: crossvalidated
[post_id]: 390086
[parent_id]: 389207
[tags]: 
Simply speaking, a neighborhood radius set to zero means that no neighbors are updated. MiniSom comments state that the sigma at each iteration is updated, based on timestep t and total number of iterations T , as follows. sigma(t) = sigma / (1 + t/T) https://github.com/JustGlowing/minisom/blob/master/minisom.py#L83 Setting sigma = 0 means that there will be no neighborhood property. Indeed, any sigma will have a negligible neighborhood property. Thus, at each timestep, with sigma = 0 , the best matching unit for each data point will be updated towards it, but there will be no neighbor interaction. Depending on your initialization and normalization, it might be possible that every single data point in the set of observations best matches the node 0,0. In this case, over time, that node will be set to the average of the set of observations, while all other nodes will be unaffected. To fix this problem, I'd suggest normalizing the data so that it fits the range of the codebook vectors. However, looking at MiniSom https://github.com/JustGlowing/minisom/blob/master/minisom.py#L263 , the codebook vectors are initialized scaled to the range of the input data. There are some comments there about normalization for PCA initialization, but my intuition is that even without that, not every single data point would best match the center node 0,0, so I think that something is strange in the statement: "when I used 0 for the neighborhood radius (sigma) only one node was the winner (node 0,0)". Maybe there was some other problem as well?
