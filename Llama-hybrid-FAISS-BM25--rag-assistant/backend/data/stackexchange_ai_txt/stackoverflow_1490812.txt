[site]: stackoverflow
[post_id]: 1490812
[parent_id]: 1490425
[tags]: 
If you are sorting the UTF8 characters "alphabetically", you can convert them to 32-bit integers (UTF8 chars are 1 to 4 8-bit values) and then do a RADIX sort . It will work in O(N) time. If you were using just ASCII, I would suggest Counting Sort . There are many ways to match the signatures but I would use a Hash Table ( O(1) on average ) or a O(Lg N) structure such as Red-Black Trees or Skip-Lists . To further speed up your string matching, you can compress these signatures by Run Length Encoding these UTF8 characters (since they're sorted, the signature will be runs + gaps). Actually, you could compress them to use bit tags that represent 7-bit chars (most common), RLE runs, and longer literals (8-bit through 32-bit chars). Comparing the compressed strings would be faster.
