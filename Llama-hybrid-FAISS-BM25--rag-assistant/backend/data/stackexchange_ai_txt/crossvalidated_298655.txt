[site]: crossvalidated
[post_id]: 298655
[parent_id]: 298576
[tags]: 
You can rather easily approximate the expected value of $f(X)g(Y)$ using simulation. For instance, here is the R code to simulate the expected value of $X^2e^Y$ with $\rho = 0.2$ using 1 million samples: # Parameters for calculation f Similar code can approximate the expectation in python: import numpy as np np.random.seed(144) simulated = np.random.multivariate_normal([0, 0], [[1, 0.2], [0.2, 1]], 1000000) print(np.average(simulated[:,0] ** 2 * np.exp(simulated[:,1]))) # 1.70735583203 Analytically, the expectation is given by the following expression, based on the bivariate normal pdf : $$ \int_{-\infty}^\infty \int_{-\infty}^\infty f(x)g(y)\frac{1}{2\pi\sqrt{1-\rho^2}}\exp\bigg[-\frac{x^2-2\rho xy + y^2}{2(1-\rho^2)}\bigg] dxdy $$ Whether this has an analytical solution depends on the functions $f$ and $g$.
