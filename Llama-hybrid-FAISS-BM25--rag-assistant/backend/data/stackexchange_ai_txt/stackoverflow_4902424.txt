[site]: stackoverflow
[post_id]: 4902424
[parent_id]: 4899700
[tags]: 
You have set pr outside of the parallel region and then made pr private by putting it in a private clause. That means that each thread has a pr, but the private pr variables are not initialized. Use firstprivate rather than private for pr, so that the private variables are initialized. However, you are incorrect about loop counters being private by default. The loop counter for the worksharing (or canonical) for (i.e., the variable i) is private (section 2.4.1 for Construct of the OMP V2.0 spec). But "j" is not. See the OpenMP V2.0 spec (which is what Microsoft supports in VS2008), section 2.7.2 Data-Sharing Attribute Clauses: If a variable is visible when a parallel or work-sharing construct is encountered, and the variable is not specified in a sharing attribute clause or threadprivate directive, then the variable is shared. Static variables declared within the dynamic extent of a parallel region are shared. Heap allocated memory (for example, using malloc() in C or C++ or the new operator in C++) is shared. (The pointer to this memory, however, can be either private or shared.) Variables with automatic storage duration declared within the dynamic extent of a parallel region are private. As for omp_get_num_threads() returning a 1, all I can think of is that you didn't compile this wih the OpenMP flag enabled.
