[site]: stackoverflow
[post_id]: 4683999
[parent_id]: 
[tags]: 
MySQL - Many column in an index? Or one by one?

Suppose that a product can have up to five (5) complaints. In this case, there is a table with five (5) columns. These five columns directly involved in the other table, where reports claim codes. See in: http://img263.imageshack.us/img263/4990/01mysql.jpg From this moment, I have to make a relationship between two tables. So which of the following is more correct to create indexes: a) creating index one by one? ALTER TABLE `complaint` ADD INDEX (`code_01`) ALTER TABLE `complaint` ADD INDEX (`code_02`) ALTER TABLE `complaint` ADD INDEX (`code_03`) ALTER TABLE `complaint` ADD INDEX (`code_04`) ALTER TABLE `complaint` ADD INDEX (`code_05`) b) That all fields in a single index? ALTER TABLE `complaint` ADD INDEX (`code_01`, `code_02`, `code_03`, `code_04`, `code_05`) I believe the best option is a), because if I choose option b) and by accessing "Relation View" in phpMyAdmin, it shows that there are other fields saying that there is "No index defined!" in columns code_02, code_03, and code_04 code_05. ATTENTION - FOR INSERT AND UPDATE: If I use option b) and enter a code on record with columns code_02, code_03, and code_04 code_05, MySQL does not advise any errors that the code entered does not exist. Only returns a success message which should really be incorrect. So in this particular case, I have to use option a), right?
