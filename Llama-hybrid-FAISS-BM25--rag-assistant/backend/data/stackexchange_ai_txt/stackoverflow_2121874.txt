[site]: stackoverflow
[post_id]: 2121874
[parent_id]: 
[tags]: 
Python pickling after changing a module's directory

I've recently changed my program's directory layout: before, I had all my modules inside the "main" folder. Now, I've moved them into a directory named after the program, and placed an __init__.py there to make a package. Now I have a single .py file in my main directory that is used to launch my program, which is much neater. Anyway, trying to load in pickled files from previous versions of my program is failing. I'm getting, "ImportError: No module named tools" - which I guess is because my module was previously in the main folder, and now it's in whyteboard.tools, not simply plain tools. However, the code that is importing in the tools module lives in the same directory as it, so I doubt there's a need to specify a package. So, my program directory looks something like this: whyteboard-0.39.4 -->whyteboard.py -->README.txt -->CHANGELOG.txt ---->whyteboard/ ---->whyteboard/__init__.py ---->whyteboard/gui.py ---->whyteboard/tools.py whyteboard.py launches a block of code from whyteboard/gui.py, that fires up the GUI. This pickling problem definitely wasn't happening before the directory re-organizing.
