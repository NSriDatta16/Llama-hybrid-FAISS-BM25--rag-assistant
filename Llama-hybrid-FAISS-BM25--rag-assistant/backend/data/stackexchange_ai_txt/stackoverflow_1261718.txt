[site]: stackoverflow
[post_id]: 1261718
[parent_id]: 1261687
[tags]: 
Stab in the dark, if you are looking to circumvent meta-data and size related things: Edge Detection and scale-independent comparison Sampling and statistical analysis of grayscale/RGB values (average lum, averaged color map) FFT and other transforms (Good article Classification of Fingerprints using FFT ) And numerous others. Basically: Convert JPG/PNG/GIF whatever into an RGB byte array which is independent of encoding Use a fuzzy pattern classification method to generate a 'hash of the pattern' in the image ... not a hash of the RGB array as some suggest Then you want a distributed method of fast hash comparison based on matching threshold on the encapsulated hash or encoding of the pattern. Erlang would be good for this :) Advantages are: Will, if you use any AI/Training, spot duplicates regardless of encoding, size, aspect, hue and lum modification, dynamic range/subsampling differences and in some cases perspective Disadvantages: Can be hard to code .. something like OpenCV might help Probabilistic ... false positives are likely but can be reduced with neural networks and other AI Slow unless you can encapsulate pattern qualities and distribute the search (MapReduce style) Checkout image analysis books such as: Pattern Classification 2ed Image Processing Fundamentals Image Processing - Principles and Applications And others If you are scaling the image, then things are simpler. If not, then you have to contend with the fact that scaling is lossy in more ways than sample reduction.
