[site]: datascience
[post_id]: 27223
[parent_id]: 27218
[tags]: 
Depending on what exactly you mean by framework , I would argue that there is. Using a REST interface to serve a production model at inference time is pretty close to a general serving framework at this point. However, there are a potentially infinite number of use cases that would diverge from this standard even if one categorically existed. Some mobile apps using image recognition models on personal data that the user doesn't want transmitted to the cloud are pushing the envelope of ways to compress formerly huge neural network architectures into ones that easily fit into mobile-sized memory, for example. If you're talking software framework, it shouldn't be surprising that a field of programming practice (or, rather, plethora of fields) that find needs for a variety of languages and even ecosystems within languages would have difficulty forming a consensus around a single aporoach. It's likely that deployment frameworks have yet to build in enough benefit to justify a reduction in general flexibility to justify their use.
