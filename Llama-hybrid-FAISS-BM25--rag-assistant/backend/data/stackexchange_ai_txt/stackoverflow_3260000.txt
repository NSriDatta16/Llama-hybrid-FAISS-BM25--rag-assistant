[site]: stackoverflow
[post_id]: 3260000
[parent_id]: 
[tags]: 
Why are the unsigned CLR types so difficult to use in C#?

I came from a mostly C/C++ background before I began using C#. One of the things I did with my first project in C# was make a class like this class Element{ public uint Size; public ulong BigThing; } I was then mortified by the fact that this requires casting: int x=MyElement.Size; as does int x=5; uint total=MyElement.Size+x; Why did the language designers decide to make the signed and unsigned integer types not implicitly castable? And why are the unsigned types not used more throughout the .Net library? For instance String.Length can never be negative, yet it is a signed integer.
