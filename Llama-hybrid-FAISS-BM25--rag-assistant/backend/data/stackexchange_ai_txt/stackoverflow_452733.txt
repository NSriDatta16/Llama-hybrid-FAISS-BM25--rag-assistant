[site]: stackoverflow
[post_id]: 452733
[parent_id]: 452300
[tags]: 
"but does that mean it should just be an example of the sort of expression you could use, or should it be an actual expression, that can be executed (eval etc..) to recreate the object? Or... should it be just a rehasing of the actual expression which was used, for pure information purposes?" Wow, that's a lot of hand-wringing. An "an example of the sort of expression you could use" would not be a representation of a specific object. That can't be useful or meaningful. What is the difference between "an actual expression, that can ... recreate the object" and "a rehasing of the actual expression which was used [to create the object]"? Both are an expression that creates the object. There's no practical distinction between these. A repr call could produce either a new expression or the original expression. In many cases, they're the same. Note that this isn't always possible, practical or desirable. In some cases, you'll notice that repr() presents a string which is clearly not an expression of any kind. The default repr() for any class you define isn't useful as an expression. In some cases, you might have mutual (or circular) references between objects. The repr() of that tangled hierarchy can't make sense. In many cases, an object is built incrementally via a parser. For example, from XML or JSON or something. What would the repr be? The original XML or JSON? Clearly not, since they're not Python. It could be some Python expression that generated the XML. However, for a gigantic XML document, it might not be possible to write a single Python expression that was the functional equivalent of parsing XML.
