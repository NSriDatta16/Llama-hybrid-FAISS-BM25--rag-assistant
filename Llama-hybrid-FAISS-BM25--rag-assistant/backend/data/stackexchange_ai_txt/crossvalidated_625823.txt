[site]: crossvalidated
[post_id]: 625823
[parent_id]: 
[tags]: 
Grid search does not choose optimal results when using a different number of features based on RFE

I am using Grid search for an SVM-RFE predicting a binary outcome with 33 features. X_train, X_test, y_train, y_test = train_test_split(df[df.columns.difference(['label'])], df['label'], test_size=0.2, random_state=42, shuffle=True, stratify= df['label'] ) print(f'The training dataset has {len(X_train)} records.') print(f'The testing dataset has {len(X_test)} records.') #The training dataset has 461 records. #The testing dataset has 116 records. pipe = Pipeline(steps=[('wz',Winsorizer(capping_method='gaussian', tail='both', fold=3)), ('standardscaler', MinMaxScaler()), ('feat_sel', RFE(estimator=SVC(kernel='linear'))), ('svc',SVC(kernel='linear')) ] ) param_distributions = { # specify here the number of features you want to test using the RFE method 'feat_sel__n_features_to_select': [10] , # ... other parameters you want to search ... 'svc__C': [1,10,100,1000], 'svc__class_weight':['balanced'], 'svc__gamma': ['auto'], 'svc__probability': [True]} kfold = StratifiedKFold(n_splits=3, shuffle=True, random_state=42) search = GridSearchCV(estimator=pipe, param_grid=param_distributions, cv=kfold, scoring ='f1', refit=True, n_jobs=-1, verbose=1 ) grid_result=search.fit(X_train, y_train) print(f'The best hyperparameters are {grid_result.best_params_}') pred=search.predict(X_test) print(metrics.classification_report(y_test, pred)) As you can see above when I run fit and predict with fixed number of features (10 features), I get the following results: precision recall f1-score support 0 0.84 0.70 0.76 76 1 0.57 0.75 0.65 40 But with a ** different number of features** grid search chooses 33 features. 'feat_sel__n_features_to_select': [10,15,20,33] And I get the following results: precision recall f1-score support 0 0.79 0.64 0.71 76 1 0.50 0.68 0.57 40 Why did the grid search not choose the optimal result? I read this article1 and the article2 , but I think those are about a different problem. Did I miss something?
