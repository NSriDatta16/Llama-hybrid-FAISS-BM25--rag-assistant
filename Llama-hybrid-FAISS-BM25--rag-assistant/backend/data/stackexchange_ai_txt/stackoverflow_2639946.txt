[site]: stackoverflow
[post_id]: 2639946
[parent_id]: 2633159
[tags]: 
Previous SO questions have gone a long way toward answering your questions. Please review: What are Fortran and COBOL used for today Why is COBOL still a preferred language in the business world Reasons to start a new project in COBOL What makes COBOL such a hated language Was COBOL the first programming language used in financial, stock and banking systems Well known languages that co-existed with early COBOL are Fortran and Lisp. These languages were not much used much outside of research and university facilities. The landscape was highly fragmented within the world of business computing. A number of proprietary low-to-medium level languages existed but generally only ran on one vendors machine. A few examples were: FLO-MATIC , AIMACO and COMTRAN , all of which heavily influenced the development of COBOL. From this chaos emerged a strong desire to have a machine independent and common language for developing business applications. According to Jean E. Sammet ( The Early History of COBOL ), the US Department of Defense spearheaded and funded the early development of COBOL. Where is COBOL used Largely in financial (banks/government) and insurance industries. Outside of these sectors, COBOL is pretty much unheard of. Is it used more frequently than Fortran or BASIC I believe Fortran actually pre-dates COBOL by a little bit. Fortran is primarily suited for high-performance numerical applications (astronomy, physics and the like). COBOL is primarily suited for financial and record keeping applications - the stuff of business and commerce (hence the name: CO mmon B usiness O riented L anguage). The two were never in "competition" so asking which is more frequently used is kind of like comparing apples to oranges. Putting the "apples" and "oranges" aside, it is hard to say how many lines of production code exist for either of these languages. Estimates vary from billions to millions. However, I don't think anybody would claim that the active code base is insignificant. BASIC (excluding "Visual Basic") was largely a personal computer language. There have been a few ports to larger machines (eg. VAX BASIC - Oh that was fun) but I don't think this ever caught on. I would be surprised if there are any significant production systems written in BASIC today. Just say "BAISC" to any "old timer" and their minds will flood with fond memories. Other than that it is pretty much gone. When did COBOL stop being used The COBOL legacy is huge. As such, there is a lot of legacy maintenance going on today, and it will go on for many years to come. Is there any new development? I would say less and less every year but it is nowhere near coming to an end. I work in a very large shop and we actively develop new COBOL applications. I don't believe we are alone. Those that still actively develop systems in COBOL are not a bunch of "back woods" idiots who don't know any better. They do it because COBOL "delivers the goods" for the least cost per transaction processed. Believe me, if any other technology could do it cheaper, faster and more reliably, COBOL would be gone tomorrow! One can only get an appreciation for how wide spread COBOL is by working in the financial, government or insurance industries - and then only in an area where they have to push a lot of data around. If you work outside of this environment it is like the language died a hundred yeas ago! How did people react to the rise of COBOL? In a couple of words: Not well. COBOL came into existence just about the same time that the academic world made huge breakthroughs in language theory and compiler design. COBOL missed that boat and has been denigrated by everybody with an academic interest in computing ever since. I went through university in the 70's and even at that time the word "COBOL" made us all cringe. The hate for COBOL runs very deep. Even the developers of COBOL could not have predicted the long term success of the language. The original COBOL was specified by a "short range committee" so that could it implemented with reasonable time and effort. The final "touches" would be made by a "long range committee". The "long range committed" never materialized and this is what we got! The death of COBOL has been predicted as imminent since the 60's. It is still with us and going strong. Why? I think there are three big reasons: Code stability. COBOL carries its legacy fairly well, major upgrades are rare. This may not be a selling point if you are in the business of developing code. However, if you are the one paying for it COBOL gets high marks on this one. Performance. COBOL applications are generally developed where volume and/or throughput are critical (eg. processing monthly bank statements, tax returns, etc.) Track Record. Organizations that use COBOL generally know their track record. They have a certain comfort level with cost/time estimates for major development projects using COBOL and related technologies. Taking on a new language and supporting technology to implement mission critical applications involves additional and unknown risks (and unknown benefits). Notice that all the reasons I have cited for COBOL's continued existence are driven by cost and risk minimization. There is nothing from a developer's point of view that makes developing in COBOL interesting. Blame corporate accountants for COBOL's continued success. On the brighter side, there are a few frameworks (eg. Bassett Frame Technology and XVCL) that can make COBOL development today tollerable, even, dare I say, interesting.
