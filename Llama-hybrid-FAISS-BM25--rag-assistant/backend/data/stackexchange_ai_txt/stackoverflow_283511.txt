[site]: stackoverflow
[post_id]: 283511
[parent_id]: 
[tags]: 
How to deal with great products written with crappy code?

I was asked to improve and maintain an internal Web application used and approved by an important community of users. This includes performance improvements and adding features. Unfortunately, the code is bloated, sometimes very poorly written, and hard to read and change. This makes changes much more difficult to implement. Despite all of this, the application is good-looking, useful, and users like it and want changes. That's why I feel like I have been fooled. Is it really better to write crappy code for quicker great result and glory, then leave for great new projects leaving such an amount of problems behind ? I have read a lot about this topic on Coding Horror already, but I would like to read more from people here who are experiencing this sad reality, and how they are dealing with it. I might probably need to be given some courage too ;) As my primary language is not English, please feel free to rewrite this question with better grammar.
