[site]: stackoverflow
[post_id]: 2322193
[parent_id]: 2322148
[tags]: 
You shouldn't have to go directly to the URL for the data. Instead, add a parameter to your route and action. Your route could look something like "{controller}/{id}/{action}" and your action something like: ViewResult Show(int userId){ var viewData = new MyViewData(){ UserID = userId }; return View(viewData); } Then, in your view, use Model.UserID . EDIT : This is initially more work than just doing a (dare I write it?) Int32.Parse(Request["userId]) in your view. However, the approach I have shown above is the preferred approach, since you will be leveraging the power of MVC's routing and binding capabilities. If you want to change parameter name someday, you just need to fix your route and the action's parameter name, as opposed to having to sort through all of your application searching for places where you pull values directly from the Request collection.
