[site]: crossvalidated
[post_id]: 416410
[parent_id]: 
[tags]: 
Trying to slightly alter logistic GLM - Link function seems unstable

So the data I have is whether a subject has performed a test correctly, or incorrectly. They have to match choose which of a pair of stimuli matches one they have memorized, and this gets harder and harder to figure out (represented by the "angle" parameter approaching zero) and at that point they get the test right 50% of the time. So when "angle" is larger, they get the test right 100% of the time (so "correct" = 1, with no variance), but as "angle" approaches 0, "correct" is either 1 or 0, with a mean of 0.5, and a variance of 0.25. As "angle" changes, the subjects responding moves from getting the answer correct, to getting it right 50/50. Each subject is only tested at a given angle once. I then give the subjects a intervention which I believe will make them worse at this task, hence shifting this curve to the right. Small Edit: The above is what I want to know: Has the intervention made the subjects better or worse at the task. Because of ethical and financial reasons, each subject will experience the stimulus only once. Perhaps a mixed-effect model would be better. But right now I'm binning the data from all the subjects together. Ultimately, I'm not sure that is a huge sin, because this is not a within subjects experiments: some subjects get the intervention, and some do not. This data is also like a logistic regression, but no matter how small "angle" becomes, the data will never become all zeros. Hence, I believe I need to run a binomial regression with a custom link function. The curve should take on the form of: y = 0.5 + (0.5 * exp(Beta*X) ) /( exp(Beta*X) + 1 ) The inverse of this (i.e. the link function) is then log( (1-2*y)/(2*y-2) ) The deriviate of the inverse link function with respect to eta is 0.5*exp(Beta*X) /( ( exp(Beta*X) + 1 ) * ( exp(Beta*X) + 1 ) ) So I have written my custom link function as bills In order to test that this function behaves, I have written the following script to make data like my real data: n_reps = 10 differences = c(5,10,15,20) output $p angle, control_v50) dat_d $p angle, drug_v50) dat_c $correct p) dat_d $correct p) dat = merge(dat_c, dat_d, all=TRUE) mdl_simp Chi)"[2] if ( is.na(p) ) { p However, when I run that script, I get constant errors like: step size truncated: out of bounds glm.fit: algorithm stopped at boundary value glm.fit: fitted probabilities numerically 0 or 1 occurred Error: inner loop 1; cannot correct step size I have double and triple checked my math, but I can't see any problem. The link function passes the typical suggested tests i.e. that running linkinv(linkinv(x)) returns x, and that mu.eta returns values that match a numerical calculation of the gradient of linkfunction. But perhaps I am doing something else wrong? Any ideas appreciated.
