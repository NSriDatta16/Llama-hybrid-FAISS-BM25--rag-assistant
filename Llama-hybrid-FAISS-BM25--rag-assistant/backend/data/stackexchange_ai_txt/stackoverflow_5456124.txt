[site]: stackoverflow
[post_id]: 5456124
[parent_id]: 3042464
[tags]: 
Alex, you have a very elegant algorithm but it needs correction for an array that contains a single element that is negative. Of course, in the original algorithm of Kadane's, one can get the subarray start and end indexes which is useful for knowing the "path". Here's an inelegant but I think correct Python function: def max_subarray(A): (maxSum, maxStartIndex, maxEndIndex) = (float("-inf"), 0, 0) (currentMaxSum,currentStartIndex,currentEndIndex ) = (0,0,0) for item in A: currentMaxSum = currentMaxSum + item if currentMaxSum > maxSum : (maxSum, maxStartIndex, maxEndIndex) = (currentMaxSum, currentStartIndex, currentEndIndex) if currentMaxSum
