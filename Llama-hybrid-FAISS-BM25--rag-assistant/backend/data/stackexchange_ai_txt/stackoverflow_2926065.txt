[site]: stackoverflow
[post_id]: 2926065
[parent_id]: 2922895
[tags]: 
(Semi-appologies in advance for the self links in this post, but I seem to be (at least for now) the unofficial Magento developer's guide) This is the code that's causing you your problems (in the Data.php file mentioned above) if (!$model = Mage::getStoreConfig($prefix . 'model', $store)) { // Mage::Log('could not get model for ' . $prefix); continue; } $methodInstance = Mage::getModel($model); if (!$methodInstance->isAvailable($quote)) { // Mage::Log($model . ' is not avaiablable' ); /* if the payment method can not be used at this time */ continue; } Magento is seaching the system config for either a class name, or a URI style path to use in the call to getModel, which instantiates the model. $methodInstance = Mage::getModel('authorizecim/paymentmethod'); So, your problem is that authorizecim/paymentmethod isn't resolving to a Magento classname like it's supposed to. (if you don't follow this try the (Class/URI lookup tab in the Commerce Bug demo). So, authorizecim/paymentmethod is going to resolve to the classname CPAP_AuthorizeCim_Model_Paymentmethod authorizecim == look in config for this name in the section and use it's value as a basename (CPAP_AuthorizeCim_Model) paymentmethod = append this with underscore word upper casing (Paymentmethod) and append to above string to give us CPAP_AuthorizeCim_Model_Paymentmethod So, Magento tells PHP to instantiate a "CPAP_AuthorizeCim_Model_Paymentmethod". However, this class isn's loaded into memory, so the __autoload takes over and loads the file at CPAP/AuthorizeCim/Model/Paymentmethod.php Which is your PHP file, which brings us to your problem. Your class is named CPAP_AuthorizeCim_Model_Authorizenet when it needs to be named CPAP_AuthorizeCim_Model_Paymentmethod
