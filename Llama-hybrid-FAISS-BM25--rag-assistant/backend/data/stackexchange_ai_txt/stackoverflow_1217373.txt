[site]: stackoverflow
[post_id]: 1217373
[parent_id]: 1217355
[tags]: 
EDIT. This is NOT the same as the problem below.. My bad... But based on the last comment below, it might be equivilent to the following: Find the furthest vertically separated pair of zero points that have no zero point between them. Find the furthest horizontally separated pair of zero points that have no zeros between them ? Then the horizontal region you're looking for is the rectangle that fits between these two pairs of points? This exact problem is discussed in a gem of a book called "Programming Pearls" by Jon Bentley, and, as I recall, although there is a solution in one dimension, there is no easy answer for the 2-d or higher dimensional variants ... The 1=D problem is, effectively, find the largest sum of a contiguous subset of a set of numbers: iterate through the elements, keeping track of a running total from a specific previous element, and the maximum subtotal seen so far (and the start and end elemnt that generateds it)... At each element, if the maxrunning subtotal is greater than the max total seen so far, the max seen so far and endelemnt are reset... If the max running total goes below zero, the start element is reset to the current element and the running total is reset to zero ... The 2-D problem came from an attempt to generate a visual image processing algorithm, which was attempting to find, within a stream of brightnesss values representing pixels in a 2-color image, find the "brightest" rectangular area within the image. i.e., find the contained 2-D sub-matrix with the highest sum of brightness values, where "Brightness" was measured by the difference between the pixel's brighness value and the overall average brightness of the entire image (so many elements had negative values) EDIT: To look up the 1-D solution I dredged up my copy of the 2nd edition of this book, and in it, Jon Bentley says "The 2-D version remains unsolved as this edition goes to print..." which was in 1999.
