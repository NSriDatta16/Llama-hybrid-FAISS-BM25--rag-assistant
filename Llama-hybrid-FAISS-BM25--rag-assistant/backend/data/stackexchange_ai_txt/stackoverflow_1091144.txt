[site]: stackoverflow
[post_id]: 1091144
[parent_id]: 1090371
[tags]: 
First lets consider the options: No CMS - No Tools: you have a very good developer with a strong HTML background, some server side expertise and plenty of time on his/her hands. No CMS but a light weight tool: You have a person or two who are comfortable with the basics of HTML, you site is mostly static and it is already built, but you need to update - you can consider any number of tools from (yes it is true) DreamWeaver, Aptana, Visual Studio WebExpres) You have a small to medium web team and you have a medium for large site that is mostly content. I have found this to be the bulk of all projects that I have every seen. May times thes types of engagements end up with a large enterprise system becasue they incorrectly understood the two or three of the main factors that should drive an Enterprise CMS (read costs more that $250 and way more than free). Open source blogging engines like WordPress are very powerful and extensible. Add in a free editorial tool like LiveWriter and you have a lot if distributed editorial power, cheap, and it takes care of lots of things like Standards and SEO because it is just build solidliy in that respect. Plus there are a lot of people who can help you out. And it is very extensible. Enterprise CMS: Three factors should guide your decisions regarding CMS: Large distributed editorial team that requires rigorous (usually complex) editorial workflows. The site design and operation has been deemed secondary to some other functioanlity provided byt the CMS (simple SarBox Compliance, easy support for localizing the site to many languages) In house experience with the product that has been positive and has proven ROI - but be clear, having purchased licenses is no reason to deploy. I have seen far too many cases where a large scale CMS was purchased (licensed) only to find it would not suit the true needs of the project. In some cases the clients were wise and moved on. In others they stuck to their purchase and to this day live in a world of hurt. Start simple and grow - The average website had a half-life of 3 years. Make a series of small mistakes that you can easily correct through fast itteration. Only go for the big stuff when you are sure. Instant smell that you are buying more than you need - you can't find out the price of the product until a sales person visits you and you can't get demo bits of the system untl you attend their traning session. By the time you get done with that, you could have an awsome site up and be buying everyone at your firm some nice libations.
