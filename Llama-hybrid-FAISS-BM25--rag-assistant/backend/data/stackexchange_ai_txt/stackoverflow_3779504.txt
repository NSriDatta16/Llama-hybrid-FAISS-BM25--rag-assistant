[site]: stackoverflow
[post_id]: 3779504
[parent_id]: 3746225
[tags]: 
Something simple is (assuming all the graphs have 5 points, and x = 1,2,3,4,5 always) Take u1 = the first point of y, ie. y1 Take u2 = y2 - y1 ... Take u5 = y5 - y4 Now consider the vector u as a point in 5-dimensional space. You can use simple clustering algorithms, like k-means. EDIT: You should not aim for something too complicated as long as you go with javascript. If you want to go with Java, I can suggest something based on PCA (requiring the use of singular value decomposition, which is too complicated to be implemented efficiently in JS). Basically, it goes like this: Take as previously a (possibly large) linear representation of data, perhaps differences of components of x, of y, absolute values. For instance you could take u = (x1, x2 - x1, ..., x5 - x4, y1, y2 - y1, ..., y5 - y4) You compute the vector u for each sample. Call ui the vector u for the ith sample. Now, form the matrix M_{ij} = dot product of ui and uj and compute its SVD . Now, the N most significant singular values (ie. those above some "similarity threshold") give you N clusters. The corresponding columns of the matrix U in the SVD give you an orthonormal family B_k, k = 1..N. The squared ith component of B_k gives you the probability that the ith sample belongs to cluster K.
