[site]: stackoverflow
[post_id]: 224007
[parent_id]: 223652
[tags]: 
S. Lott's answer is right: you don't encode the end tag, you break it across multiple CDATA sections. How to run across this problem in the real world: using an XML editor to create an XML document that will be fed into a content-management system, try to write an article about CDATA sections. Your ordinary trick of embedding code samples in a CDATA section will fail you here. You can imagine how I learned this. But under most circumstances, you won't encounter this, and here's why: if you want to store (say) the text of an XML document as the content of an XML element, you'll probably use a DOM method, e.g.: XmlElement elm = doc.CreateElement("foo"); elm.InnerText = " "; And the DOM quite reasonably escapes the , which means that you haven't inadvertently embedded a CDATA section in your document. Oh, and this is interesting: XmlDocument doc = new XmlDocument(); XmlElement elm = doc.CreateElement("doc"); doc.AppendChild(elm); string data = " "; XmlCDataSection cdata = doc.CreateCDataSection(data); elm.AppendChild(cdata); This is probably an ideosyncrasy of the .NET DOM, but that doesn't throw an exception. The exception gets thrown here: Console.Write(doc.OuterXml); I'd guess that what's happening under the hood is that the XmlDocument is using an XmlWriter produce its output, and the XmlWriter checks for well-formedness as it writes.
