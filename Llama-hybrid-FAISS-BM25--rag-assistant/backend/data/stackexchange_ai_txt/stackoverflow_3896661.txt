[site]: stackoverflow
[post_id]: 3896661
[parent_id]: 3896567
[tags]: 
You're the only one who can take decisions on how your application should be organized. You can, of course, follow some recommandations such as the Java Naming Convention for packages, or even try to split your packages for each tier implied in your application; but in the end, you have to choose for yourself. @Kevin D's solution is correct, you could use the com.company.project.dao.interfaces (I wouldn't use interfaces as it's a plural and I avoid plural in package names, but again it depends on you) and com.company.project.dao.impl or you could use packages to split different implementations. It's as you want. And no one should tell you how to split your own application (except your team). The only (but still facultative) rule I would tell you to follow is "Have coherent names". That means choose your project convention, but stick to it, and of course the names you choose for your packages (but it also applies on classes, variables) must represent their content (but I suppose this is common sense). On another note, I don't know the context of your work, but you should really read Adam bien's Weblog , you'll see some articles on best practices regarding DAO and "default implementation", maybe it will concern your project. Resources : DAO's aren't dead - but they either collapsed or disappeared Service s = new ServiceImpl() - Why are you doing that ? (not really related to DAO but still your "default implementation" made me think of this) JPA/EJB3 killed the DAO
