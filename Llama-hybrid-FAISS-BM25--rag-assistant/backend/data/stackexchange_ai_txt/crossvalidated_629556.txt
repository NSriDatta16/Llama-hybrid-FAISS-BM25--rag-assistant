[site]: crossvalidated
[post_id]: 629556
[parent_id]: 
[tags]: 
what would be a good optimizer for black-box optimization in a unstable environment

My experiment is based on an online ab test system. A typical situation is that, I generate some candidates by some optimizer (CEM, GP etc) and push them to different experiment buckets (around 10). After one day, I will get a daily ab test report for previous day. This will be my evaluated result for these candidates as reward for next iteration. But the tricky thing is that, even for the same candidates, the result will not be same in different two days because the environment itself is not stable. This fact makes my current solutions heavily rely on luck, no matter CEM or GP. So my question is that: is there any black-box optimizer suitable for my situation, in which the environment is not so stationary? Do I need to try neural network in which I could add more feature describing the environment?
