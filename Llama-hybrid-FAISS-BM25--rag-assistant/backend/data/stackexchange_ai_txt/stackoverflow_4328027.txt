[site]: stackoverflow
[post_id]: 4328027
[parent_id]: 3987666
[tags]: 
I think you will begin to grasp IoC/DI stuff when you understand why and when it is used. I wouldnt worry too much about which IoC container to use. You could essentially write a basic container yourself (At the most basic level its is just a Dictionary that maps an interface to a concrete implementation ). Here is a good video showing how that would be done. The core concept is that it encourages loose coupling of components, which means code is easier to test and does not depend on other concrete classes. This link has details about the SOLID principles, your question particularly pertains to the "D" (Dependency Inversion Principle), but the others will also be of interest.
