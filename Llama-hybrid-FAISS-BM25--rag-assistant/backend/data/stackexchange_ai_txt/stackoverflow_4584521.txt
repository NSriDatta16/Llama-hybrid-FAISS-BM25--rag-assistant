[site]: stackoverflow
[post_id]: 4584521
[parent_id]: 
[tags]: 
DataGrid's Row Becomes Read-Only After Write

I have an issue with a DataGrid bound to an ObservableCollection where if i explicitly set a value on to the OC skipping the DataGrid [I have an auto-complete textbox so when the user clicks the listbox entry i set the OC at current selected index to the correct AutoCompleted object] it becomes readonly and if i try to edit it with F2 i get this exception: InvalidOperationException - Added item does not appear at given index '0'. XAML: Code-behind: public partial class Compras : Window, INotifyPropertyChanged { public ColeccionArticulos CompraActual { get { return _CompraActual; } set { _CompraActual = value; NotifyChange("CompraActual"); } } public ColeccionArticulos _CompraActual; public ColeccionArticulos AutoCSource { get { return _AutoCSourse; } set { _AutoCSourse = value; NotifyChange("AutoCSource"); } } public ColeccionArticulos _AutoCSourse; private TextBox Txt; private ListBox Lst; public Compras() { AutoCSource = CentralStorage.Articulos; CompraActual = new ColeccionArticulos(); InitializeComponent(); } public event PropertyChangedEventHandler PropertyChanged; public void NotifyChange(String Info) { if (PropertyChanged != null) { PropertyChanged(this, new PropertyChangedEventArgs(Info)); } } private void CollectionViewSource_Filter(object sender, FilterEventArgs e) { if (Txt != null) { Articulo Ar = e.Item as Articulo; e.Accepted = Ar.Nombre.ToUpper().Contains(Txt.Text.ToUpper()) || Ar.Categoria.ToUpper().Contains(Txt.Text.ToUpper()) || Ar.Material.ToUpper().Contains(Txt.Text.ToUpper()) || Ar.Observaciones.ToUpper().Contains(Txt.Text.ToUpper()) || Ar.Referencia.ToUpper().Contains(Txt.Text.ToUpper()) || Ar.Color.ToUpper().Contains(Txt.Text.ToUpper()); } } private void TextBox_TextChanged(object sender, TextChangedEventArgs e) { CollectionViewSource CVS = (CollectionViewSource)WinCompras.FindResource("Source"); Lst.Visibility = Txt.Text != "" ? Visibility.Visible : Visibility.Hidden; CVS.View.Refresh(); } #region Find Template Controls private void TextBox_Loaded(object sender, RoutedEventArgs e) { Txt = sender as TextBox; } private void TextBox_Unloaded(object sender, RoutedEventArgs e) { Txt = null; } private void ListBox_Loaded(object sender, RoutedEventArgs e) { Lst = sender as ListBox; } private void ListBox_Unloaded(object sender, RoutedEventArgs e) { //Lst = null; } #endregion private void ListBox_MouseLeftButtonUp(object sender, MouseButtonEventArgs e) { //THIS IS WHERE THE PROBLEM STARTS >. Any Ideas?
