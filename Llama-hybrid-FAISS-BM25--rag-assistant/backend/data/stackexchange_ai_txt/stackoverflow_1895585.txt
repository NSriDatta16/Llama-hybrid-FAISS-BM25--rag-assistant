[site]: stackoverflow
[post_id]: 1895585
[parent_id]: 1895552
[tags]: 
Post is not a Question at this point and the CLR is rightly complaining. You could upcast Question to Post but not visa-versa. Now, if you had a high-level reference to a Post that you knew was a Question, you could downcast like this: public Post Post { set { if (value is Question) { question = (Question)value; } } } But even this is a code smell . But I think what you're trying to accomplish can be achieved without class casting, or maybe without inheritance at all. Following the venerable "favor encapsulation over inheritance" principle, why not just wrap the Post object into your Question object with something like: public class Question { Post post; public Question(Post post) { this.post = post; } } Assuming you've defined properties for Post's relevant members, instead of Question ques = (Question)post; you'd have Question ques = new Question(post);
