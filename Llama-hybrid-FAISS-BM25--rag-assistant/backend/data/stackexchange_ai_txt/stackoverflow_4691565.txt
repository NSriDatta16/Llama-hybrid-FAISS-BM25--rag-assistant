[site]: stackoverflow
[post_id]: 4691565
[parent_id]: 4683242
[tags]: 
1) ts. Since this is a regularly spaced time series, convert it to a ts series and then aggregate it from frequency 24 to frequency 1: aggregate(ts(x2[, 2], freq = 24), 1, mean) giving: Time Series: Start = 1 End = 4 Frequency = 1 [1] 108.5 132.5 156.5 180.5 2) zoo. Here it is using zoo. The zoo package can also handle irregularly spaced series (if we needed to extend this). Below day.hour is the day number (1, 2, 3, 4) plus the hour as a fraction of the day so that floor(day.hour) is just the day number: library(zoo) day.hour If zz is the output from aggregate then coredata(zz) and time(zz) are the values and times, respectively, as ordinary vectors.
