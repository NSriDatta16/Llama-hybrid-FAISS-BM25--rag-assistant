[site]: stackoverflow
[post_id]: 3366604
[parent_id]: 3366545
[tags]: 
You need to add Scala to the classpath, e.g. -classpath scala-library.jar:. or by adding -Xbootclasspath/a:scala-library.jar to the VM arguments. Addition: Sorry, did not see that last question. If you want do distribute single JAR files many people use ProGuard to ship the classes needed from the scala-library.jar along with your classes in one jar. Second Edit: Assuming you have your .class-files and your META-INF folder containing the MANIFEST.MF in a folder called classes you can use the following Proguard configuration (after adjusting the paths, e.g. you need rt.jar on Linux/Windows instead of classes.jar on Mac OS) saved e.g. as your.pro : -injar classes -injar /opt/local/share/scala-2.8/lib/scala-library.jar(!META-INF/MANIFEST.MF) -outjar main.jar -libraryjar /System/Library/Frameworks/JavaVM.framework/Versions/1.6/Classes/classes.jar -dontwarn -dontnote -ignorewarnings -optimizationpasses 2 -optimizations !code/allocation/variable -keep,allowoptimization,allowshrinking class * { *; } -keepattributes SourceFile,LineNumberTable -keepclasseswithmembers public class your.Main { public static void main(java.lang.String[]); } Now you can create main.jar with java -Xmx512m -jar proguard.jar @your.pro Eventually you have to set the -Xmx a bit higher. Some more info can be found on the SBT Wiki .
