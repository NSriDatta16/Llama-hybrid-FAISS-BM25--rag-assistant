[site]: stackoverflow
[post_id]: 1149319
[parent_id]: 1116598
[tags]: 
well, actually, AS3 is a language, not a framework ... the flash player API has framework like traits ... but ok, let's not argue about terminology ... so what's cool in flash player 9 (other than things that were mentioned already)? a couple of language features making your life A LOT easier : method closures (no need for Delegate), optional arguments (saves a lot of time compared to AS2 optional arguments, which are rather a hack), instance scope resolution (you can access members of an instance from within an anonymous function declared in a method of that instances, so no need for var self = this;) general API design : API is much cleaner, sensibly packaged, has constants properly defined (in many classes like flash.filters.BitmapFilterType ), and exposes quite a lot more things, and offers proper error handling package flash.net : Socket : real sockets, instead of XML sockets ... this allows any TCP based protocol to be implemented URLStream : this is actually quite powerfull, but personally, i always use sockets instead package flash.display : much cleaner, much more consistent, much more granular (and thus reducing overhead) ... also, you can finally take objects away off the display list, change their parent etc. ... input events are no longer handled through one single callback (which sometimes is a hell of a limitation), they are triggered in a sensible manner (on objects, that have focus), they are triggered in nested InteractiveObject s ... and then event bubbling on the display list ... Loader::loadBytes : allows to generate swf at runtime with ActionScript and load them into the player directly, as well as manual caching Stage::frameRate : finally, you can change it at runtime DisplayObject::getBounds & DisplayObject::getRect : much better, than fiddling around with this incredibly stupid return value of the AS2 equivalent ... package flash.events : partially mentioned above, in conjuction with the DisplayObjectModel, it is much cleaner, much more powerful, very reusable ... well done, really ... package flash.utils : ByteArray : manipulation of binary data in reasonable time ... this allows JPG or PNG compression, PDF creation on client side, and so on Dictionary : allows mapping objects to objects ... this can come in very handy (you could hack that into AS2, but that wasn't your question, right?) ... for example, this is great for creating sets, or mapping objects to handlers, etc. Proxy : the proxy class is so damn powerful and so much fun to play with, really ... use it for proxies, collections, AOP, etc. ... Timer : ok, now this can quite easily be reimplemented in AS2, but apart from that, i think it's much cleaner than fiddling arount with setInterval ... package flash.text : TextField : much bigger API, allows many cool things, as getting character/line metrics, etc. ... Font.registerFont : allows embedding fonts at runtime overall design is much cleaner and powerful package flash.sampler : this is REALLY helpful, when trying to find bottlenecks package flash.media : much better API, notably SoundChannel and SoundTransform are really helpful ... note that event model and diplay list can be reimplemented in AS2 at additional performance cost, but i think it was about built-in features ... i think, that's about it ... greetz back2dos
