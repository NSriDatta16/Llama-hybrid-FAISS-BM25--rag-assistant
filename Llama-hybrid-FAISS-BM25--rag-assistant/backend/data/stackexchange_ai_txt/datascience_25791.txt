[site]: datascience
[post_id]: 25791
[parent_id]: 25788
[tags]: 
At the end of the day, as an applied data scientist you have a bag of tools you can use to solve business problems. It's helpful to know what your tools are capable of, where each is useful, and also what their limits are. If you don't have at least some theory, knowing which method to use in which circumstance will seem like a meaningless list of details, and when things break, you may not know why - is there an error in my code, or am I making a fundamental error in applying an algorithm in a scenario where it has fundamental limitations? You can be pragmatic in applying tools as you've seen them applied before. Theory will help you have an intuition about whether it's possible or reasonable to apply given tools to new situations that you haven't seen. It can help you answer questions like: how will this algorithm scale with the size or dimensionality of data? SVMs in particular suffer from poor scaling with data size, precisely because they rely on kernels. That kind of basic knowledge is probably more useful than being able to write down the kernel trick.
