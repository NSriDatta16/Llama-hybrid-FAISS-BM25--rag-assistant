[site]: crossvalidated
[post_id]: 317443
[parent_id]: 22212
[tags]: 
I'm a little puzzled by the answer above because of the following paragraph from Gower (1971): POSITIVE SEMI-DEFINITE PROPERTY OF THE SIMILARITY MATRIX With n individuals, the n X n matrix S can be formed whose element Sij is the similarity, as described in section 2, between individuals i and j. We often require to represent the n individuals of a sample as a set of points in Euclidean space. Gower (1966) has discussed this problem and shown that a convenient representation can be obtained by taking the distance between the ith and jth individuals as proportional to (1 - Sij)^(1/2). The coordinates of points with these distances are the elements of the latent vectors of S scaled so that their sums of squares equal the latent roots. Thus to get a real Euclidean representation with distances (1 - Sij)^(1/2) it is sufficient for S to be positive semi-definite (p.s.d.). It is shown in the Appendix that when there are no missing values S is p.s.d. By my read of this, although it's true that the output of a Gower's distance function (e.g. D=as.matrix(daisy(data, metric="gower")) ) isn't Euclidean on its own, if there is no missing data, a Euclidean transform should be obtainable -- and if there is missing data, but you find that S=1-D is positive semidefinite (e.g. using matrixcalc::is.positive.semi.definite(S) ), then you should still be able to do that same transform. (Incidentally, I think whether Ward's method wants Euclidean distances or squared Euclidean distances depends on the implementation. Based on the documentation, I believe the version in agnes() wants Euclidean distances.)
