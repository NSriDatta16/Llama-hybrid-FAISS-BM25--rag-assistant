[site]: stackoverflow
[post_id]: 378759
[parent_id]: 378724
[tags]: 
As a manager, I actively solicit opportunities for my developers to use new technology. We are a .NET shop, but "keeping up with the Jones'" is a paradigm-shift from some of the older policies that we used to have. Until last year, we were still on the 1.1 Framework for everything. It was very painful, both in being limited by an older version of the Framework and by having to use Visual Studio 2003. We started to align business requests with the functionality available in the Framework. After a few "it will take ten developer days to do with our current infrastructure, or you can invest five days in allowing us to address our Framework restrictions - then these kind of requests will take two days", we were not only encouraged to upgrade the Framework, but also to stay current and adopt features and functionality as it became available. While Microsoft is not perfect, they do offer great availability into CTPs of their products now, allowing people to stay ahead of the game, given the time can be made within the organization to allow this. These kinds of products are great for inclusion in proof of concept projects, as well. With the advances that are being made, it is very difficult to assimilate them all, regardless of the immediate time investment you can make. You need to determine what features, functionality, and tooling can provide the largest positive impact up front, and focus on that. You will be surprised how fast the other pieces start to just fall in place as you expand your usage. Lambda expressions are a great example of that. Working with LINQ provided a logical progression into them without it being the focus of what we were trying to implement.
