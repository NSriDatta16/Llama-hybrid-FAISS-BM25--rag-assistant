[site]: stackoverflow
[post_id]: 5569928
[parent_id]: 5566822
[tags]: 
You're using make wrong. Make's design is actually fairly simple at heart: you tell it how to create targets (The body of the rule). which targets it needs to create first (The dependency list). Make then topological sorts the dependency information so it executes the bodies in the right order. Your rule with $ (which expands to the list of dependencies) means you're telling the invoked make to create the dependency %.h not the target lib%.so . The rule has to create the target. If the dependency needs to be created, you need to tell make how to do so with another, separate rule, not try to ensure it is up to date in this rule. As you're trying to coordinate across directories, I'll recommend the paper Recursive make considered harmful , which can often be a nice way to organize things, though not the only possible way to do things.
