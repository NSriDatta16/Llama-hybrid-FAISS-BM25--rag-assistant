[site]: stackoverflow
[post_id]: 4633896
[parent_id]: 
[tags]: 
Android OPEN GL ES 2 Fragment Shaders

I have a problem with an Open GL ES 2 fragment shader and was wondering if anybody could help me. I'm using the shader to draw metaballs on the screen. It's relatively simple and the code is as follows: private static final String mFragmentShader = "precision mediump float;\n" + "uniform vec2 balls[" + NUMBER_OF_BALLS + "];\n" + "float sqr(highp float x) { return x*x; }\n" + "void main() {\n" + " vec4 pixelColor = vec4(0.0, 0.0, 0.0, 0.0);\n" + " vec4 color = vec4(0.0, 0.5, 1.0, 1.0);\n" + " for (int i=0; i The shader compiles fine and works well when NUMBER_OF_BALLS is less than 15. Unfortunately when number of balls is greater than 15, it renders as if the locations of all the balls are at position (0,0) (see here ). I've checked the input to the shader and it is definitely right so there must be a problem with the shader itself. Furthermore if I change the precision from mediump to highp then I can up the number of balls to 20 before the rendering becomes a problem. Can anyone tell me what I am doing wrong? Edit: Here is the complete code just in case the problem is not wirth the fragment shader itself. private static final String mFragmentShader = "precision mediump float;\n" + "uniform vec2 balls[" + NUMBER_OF_BALLS + "];\n" + "float sqr(highp float x) { return x*x; }\n" + "void main() {\n" + " vec4 pixelColor = vec4(0.0, 0.0, 0.0, 0.0);\n" + " vec4 color = vec4(0.0, 0.5, 1.0, 1.0);\n" + " for (int i=0; i }
