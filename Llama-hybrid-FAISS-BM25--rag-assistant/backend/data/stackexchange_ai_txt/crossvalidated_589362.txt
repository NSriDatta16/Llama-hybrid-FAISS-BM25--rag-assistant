[site]: crossvalidated
[post_id]: 589362
[parent_id]: 589009
[tags]: 
Here are some thoughts regarding your question: I am not familiar with the DREAM_ZS package. However, when using a classical algorithm, such as Metropolis-Hastings, I would highly recommend trying to implement it yourself, rather than using an off-the-shelf implementation. The time you will dedicate in implementing the algorithm yourself will eventually spare you difficulties in interpreting the results. For instance, I don't really get what these two plots represent. I assume the lower one is some convergence metric, based on the variance of the samples, but it does not tell us much about the variance of the posterior distributions you are computing. For instance, this paper provides an efficient implementation of MH, both in Matlab and in Julia. From your question, I understand that the measurements you use are not synthetical data that you generated yourself, i.e. that you do not know the ground-truth values of the parameters. An important step to check if your Metropolis-Hastings solution works properly is to test it with your own synthetical data: generate data points with ground-truth parameters $\theta^*$ , use the MH to compute their posterior distribution $p(\theta)$ , and verify that it does not fall too far away from $\theta^*$ . Having a small std for your posterior is not necessarily a bad thing (it simply means that all your MCMC samples are around the same value), provided that this value is close to the ground-truth $\theta^*$ . If not, it is possible that the algorithm is working correctly, but that your model has some identifiability issues (see also this question ).
