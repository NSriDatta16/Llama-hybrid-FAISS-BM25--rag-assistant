[site]: stackoverflow
[post_id]: 719630
[parent_id]: 719576
[tags]: 
From a command prompt (cmd.exe), run netstat -a on the server-side and look at just the LISTENING lines. There should be one showing the port your server is running on as the number after the colon in the Local Address column: >netstat -a ... Proto Local Address Foreign Address State TCP 0.0.0.0:135 Blah:0 LISTENING TCP 127.0.0.1:136 Blah:0 LISTENING If the Local Address is shown as 127.0.0.1 it means your server application is listening only on the loopback adapter. This adapter allows only connections from the local machine back to itself (hence the name) so remote connections to such ports will not be accepted. Note that the name 'localhost' is a name for 127.0.0.1, so if you have specified that anywhere this could be the explanation. (136 in the above example shows a listening loopback socket.) If the Local Address is shown as 0.0.0.0 it means your server application is listening on all adapters and (providing you have a network adapter which I will assume you have) remote connections will be accepted. (135 in the above example.) The final case if the Local Address is another IP address then your server application is listening on a particular network adapter. If you have multiple adapters it could be it is listening on the wrong one. Now, having said all this, I have just a small application with the code you posted and it appears the default is to listen on 0.0.0.0 (all adapters) so I would be surprised if you see something else. If you do see 0.0.0.0, then my next port of call would be to look at firewalls on both the client and server, both local and corporate if you are in an organisation. If you have console access to the remote machine then you could try telneting back to the local machine on that port to see if it indeed listening for connections. I would also be tempted to substitute a simple TCP listener, such as Netcat, on the server to see if the problem lays with your application or in the infrastructure.
