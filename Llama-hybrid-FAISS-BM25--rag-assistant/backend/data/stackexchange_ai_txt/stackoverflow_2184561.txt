[site]: stackoverflow
[post_id]: 2184561
[parent_id]: 2181458
[tags]: 
I think the issue is indeed that you seem to want to create an XML fragment with your stylesheet and the XmlWriter while the LINQ to XML object model (i.e. System.Xml.Linq.XDocument/XNode) does not have any class representing fragments. The code works flawlessly for me if I take your XML input (e.g. Arts &amp; Entertainment Client1 Get your Free 2 Arts &amp; Entertainment Client1 Get your Free 4 Arts &amp; Entertainment client1 Get your Free 5 Community &amp; Neighborhood Client2 Get your Free 1 Education Client3 Get Your Free 3 ) and the second stylesheet posted (e.g. ) and then use the following C# code: XDocument mydoc = XDocument.Load(@"..\..\XMLFile1.xml"); XDocument newTree = new XDocument(); using (XmlWriter writer = newTree.CreateWriter()) { XslCompiledTransform xslt = new XslCompiledTransform(); xslt.Load(@"..\..\XSLTFile2.xslt"); xslt.Transform(mydoc.CreateReader(), writer); writer.Close(); } Console.WriteLine(newTree); When I use the original stylesheet (e.g. ) I get an InvalidOperationException saying "Token StartElement in state EndRootElement would result in an invalid XML document. Make sure that the ConformanceLevel setting is set to ConformanceLevel.Fragment or ConformanceLevel.Auto if you want to write an XML fragment.". I suspect you tried to counter that by wrapping your XmlWriter into another one with ConformanceLevel.Fragment, as you have in your C# code, but that does not work I think, it only results in a different exception. What should work in my view is to use CreateWriter() on an XElement instance as it should be possible to add a fragment to an XElement. My test however still throws an exception therefore I have filed a bug on that, see https://connect.microsoft.com/VisualStudio/feedback/details/530052/xslt-stylesheet-writing-an-xml-fragment-to-an-xmlwriter-created-with-xelementinstance-createwriter-causes-nullreferenceexception
