[site]: stackoverflow
[post_id]: 1547960
[parent_id]: 1546874
[tags]: 
is REST also an interface "for the browser" or just for scripts Both. In fact the Browser is actually an excellent example of a REST client. The fact that it only uses a subset of the HTTP interface does not violate the uniform interface constraint. POST is pretty much a wildcard verb anyway. Scripts are defined in the description of REST as "code download" and play an integral part of the REST interface. Update: The uniform interface constraint of REST does not say "you must use all available verbs" to be RESTful. It says if you use a verb, use it to perform an action that is consistent with the expected behavior. should we see the HTTP world exclusively through the eyes of a REST representation? No. REST usually is done over HTTP, but HTTP has no dependency on REST. However, if you are building a web application then you should seriously consider choosing the REST architectural style for your solution. It may not be the right option, but it probably will be. The request GET /foo/?page=bar&action=delete breaks the rules of HTTP and therefore breaks the REST constraint of a uniform interface. But it breaks HTTP first! Update: In the HTTP spec RFC 2616 section 9.1.1 it states: "In particular, the convention has been established that the GET and HEAD methods SHOULD NOT have the significance of taking an action other than retrieval." Performing a delete action using a GET is definitely breaking the rules of HTTP. should the web access and the REST interface be intermingled or separate? In my opinion, they should be the same. In fact XHTML is actually an excellent format to use to deliver both UI and API results. It is standardized, it is easily parseable, it is viewable in a browser for debugging purposes, it can support hypermedia, microformats can be used to do semantic markup, class attributes can be used to define things that microformats don't cover. What more could you want? If you are planning to do a HTML UI, why do the same work twice? Can Roy give us a simple sample? Read the How to GET a cup of coffee article to get a good idea of how a REST API should work. When reading the article remember this important fact that everyone seems to have forgot: REST interfaces should be EASY TO USE , they are NOT EASY TO DESIGN .
