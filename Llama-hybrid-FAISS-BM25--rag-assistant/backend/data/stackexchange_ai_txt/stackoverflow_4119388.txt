[site]: stackoverflow
[post_id]: 4119388
[parent_id]: 
[tags]: 
ASP.NET MVC - Is a ViewModel an appropriate place to do minor calculations?

I'm working on a UserViewModel, and I'm wondering if it's appropriate to do minor calculations in the VM, or if I need to separate it further and calculate elsewhere. Public Class UserViewModel Public Property UserName As String Public Property Email As String Public Property Website As String Public Property ID As Integer Public Property OpenIds As List(Of OpenID) Public Property UserAge As String Public Property About As String Public Property Slug As String Public Property LastSeen As String Public Property Region As String Public Property MemberSince As String Public Property Reputation As String Public Property isUserMatch As Boolean = False Private MarkDownSharp As MarkdownSharp.Markdown Public Sub New(ByVal user As User) Dim currentuser As Authentication.AuthUserData = Authentication.CustomAuthentication.RetrieveAuthUser MarkDownSharp = New MarkdownSharp.Markdown With MarkDownSharp .AutoHyperlink = False .AutoNewLines = True .EncodeProblemUrlCharacters = True .LinkEmails = True .StrictBoldItalic = True End With _UserName = If(Not user.UserName Is Nothing, user.UserName, "User" & user.ID.ToString) _Email = user.Email _Website = user.WebSite _ID = user.ID _OpenIds = user.OpenIDs.ToList ''# Converts the users birthdate to an age representation ''# IE: 29 _UserAge = user.BirthDate.ToAge ''# Because some people can be real ass holes and try to submit bad ''# data (scripts and shit√®) we have to modify the "About" content in ''# order to sanitize it. At the same time, we transform the Markdown ''# into valid HTML. The raw input is stored without sanitization in ''# the database. this could mean Javascript injection, etc, so the ''# output ALWAYS needs to be sanitized. _About = Trim(Utilities.HtmlSanitizer.Sanitize(MarkDownSharp.Transform(user.About))) ''# Removes spaces from Usernames in order to properly display the ''# username in the address bar _Slug = Replace(user.UserName, " ", "-") ''# Returns a boolean result if the current logged in user matches the ''# details view of the user in question. This is done so that we can ''# show the edit button to logged in users. _isUserMatch = If(currentuser.ID = user.ID, True, False) ''# Grabs the users registration data and formats it to a time span ''# The "timeago-nosuffix" CssClass is there to remove the "ago" ''# suffix from the "member for" string. Cuz when you think about ''# it... "Member for 5 days ago" just sounds stupid. _MemberSince = user.MemberSince.ToTimeSpan("timeago-nosuffix") ''# Grabs the users last activity and formats it to a time span _LastSeen = user.ActivityLogs.Reverse.FirstOrDefault.ActivityDate.ToTimeSpan("timeago", "ago") ''# Formats the users reputation to a comma Deliminated number ''# IE: 19,000 or 123k _Reputation = user.Reputation.ToShortHandNumber ''# Get the name of the users current Region. _Region = user.Region.Region.FirstOrDefault End Sub End Class
