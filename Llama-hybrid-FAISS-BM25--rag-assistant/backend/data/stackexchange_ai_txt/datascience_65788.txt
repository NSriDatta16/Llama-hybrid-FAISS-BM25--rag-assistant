[site]: datascience
[post_id]: 65788
[parent_id]: 65787
[tags]: 
1) Feature Selection should be done by AutoML on the other hand preprocessing is normally done by the user in order to make sense fo the data. 2) AutoML takes care of the hyper-parametrization. 3) The disadvantage that I mostly find is that is extremely computationally expensive. And from what I have seen in Kaggle most of the winning solutions use manual ML, not AutoML. 4) For me, one of the advantages is that sometimes it finds a good algorithm that I have not tried (or thought) and that it avoids me spending some coding time. Also, it happens to do some good ensembles of different models. 5) You can do Manual ML in your side and then doing an ensembling with your personal ML model and the AutoML. This doesn't guarantee improvement but it could boost your performance. You can have a look at H20 AutoML , I quote the documentation, I believe it can be helpful in this case in order to have an intuition about it: Although H2O has made it easy for non-experts to experiment with machine learning, there is still a fair bit of knowledge and background in data science that is required to produce high-performing machine learning models. Deep Neural Networks in particular are notoriously difficult for a non-expert to tune properly. In order for machine learning software to truly be accessible to non-experts, we have designed an easy-to-use interface which automates the process of training a large selection of candidate models. H2Oâ€™s AutoML can also be a helpful tool for the advanced user, by providing a simple wrapper function that performs a large number of modeling-related tasks that would typically require many lines of code, and by freeing up their time to focus on other aspects of the data science pipeline tasks such as data-preprocessing, feature engineering and model deployment. You can also have a look at this blog of Bojan Tunguz where he defines what are the phases of AutoML: Level 0: No automation. You code your own ML algorithms. From scratch. In C++. Level 1: Use of high-level algorithm APIs. Sklearn, Keras, Pandas, H2O, XGBoost, etc. Level 2: Automatic hyperparameter tuning and ensembling. Basic model selection. Level 3: Automatic (technical) feature engineering and feature selection, technical data augmentation, GUI. Level 4: Automatic domain and problem specific feature engineering, data augmentation, and data integration. Level 5: Full ML Automation. Ability to come up with super-human strategies for solving hard ML problems without any input or guidance. Fully conversational interaction with the human user.
