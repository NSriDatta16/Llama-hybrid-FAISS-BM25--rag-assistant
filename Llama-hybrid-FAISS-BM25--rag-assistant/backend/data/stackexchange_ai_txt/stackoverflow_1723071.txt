[site]: stackoverflow
[post_id]: 1723071
[parent_id]: 1721980
[tags]: 
Just for fun, a slightly different route to the same result, using std::valarray instead of std::vector and (various) algorithms: template T const variance(std::valarray const &v) { if (v.size() == 0) return T(0.0); T average = v.sum() / v.size(); std::valarray diffs = v-average; diffs *= diffs; return diffs.sum()/diffs.size(); } As Jacob hinted, there are really two possible versions of a variance calculation. As it stands, this assumes your inputs are the "universe". If you've taken only a sample of the overall universe, the last line should use: (diffs.size()-1) instead of diffs.size() .
