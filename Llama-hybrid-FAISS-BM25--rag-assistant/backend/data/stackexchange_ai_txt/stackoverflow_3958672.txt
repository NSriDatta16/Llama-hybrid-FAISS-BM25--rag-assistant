[site]: stackoverflow
[post_id]: 3958672
[parent_id]: 3955680
[tags]: 
A key property of an AVL tree is that each of its sub-trees is also an AVL tree. That means that covering the basic scenarios should give you a broad coverage of the AVL tree functionality. In other words, these tests done on the smallest tree structure that allows them are the most important ones: Creating a new tree. Inserting the first value. Inserting a bigger value. Inserting a smaller value. Inserting a value that causes LL Rotation. Same for the other rotations. Same for Removing. All the variants of Finding values. If your implementation passes these tests, it would probably pass them on larger trees. Note that performance and memory usage is not tested here.
