[site]: stackoverflow
[post_id]: 3524738
[parent_id]: 3524222
[tags]: 
Visual C++ refers to an Integrated Development Environment and C++ Compiler. It is strictly Windows only * implementation* for all practical intents and purposes. C++ is a language. Linux has several compilers for C++. If you use non-portable extensions, such as #pragma once instead of include guards , using the DLL import/export stuff, or the Windows APIs type system, then your code will be less portable between implementations. Much of this can be controlled with judicious use of the pre processor and some common sense. The best way is to write portable code and libraries in the first place. It is not as hard as it sounds. Now for this comment: I will apologise for sounding offensive, but if you can't tell the difference between "C++" and "Visual C++", please learn such elements of the English language (and C++). It will help you in the long run, programming wise. Compilers for Linux -> GNU C/C++ (GCC/G++). See also Intels compiler. IDEs for Linux -> generally run on Windows too, check wikipedia.
