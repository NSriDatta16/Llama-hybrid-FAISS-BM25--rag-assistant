[site]: stackoverflow
[post_id]: 4214645
[parent_id]: 4082177
[tags]: 
I think Pascal is the canonical procedural language. I also think Lisp (ironically not ML) is the canonical "meta" language. For one, a macro is a program fragment which modifies a data structure that represents a program fragment---so you use the language to tweak the language. Secondly, it's considered common practice to write self-hosting interpretors, traditionally called metacircular evaluators: they are programs which programs and run them. Of course, any other language can do that. In Python you have access to the python compiler, and PyPy is a python implementation in python. But Lisp has, I think, the strongest tradition of doing this. But I'm a Lisp outsider, so what do I know... 'hope-this-helps ;-)
