[site]: stackoverflow
[post_id]: 5667108
[parent_id]: 5666924
[tags]: 
I assume the first thing I have to do is add three dimensions for installed, activated and cancelled - and have three fact tables? Not really. A license sale is a fact. It has a price. A license sale has has dimensions like date, product, customer and program. An "installation" or "activitation" is a state-change event of a license. You have "events" for each license (sale, install, activate, etc.) So a license has a "sale" fact, an "installation" fact and an "activation" fact. Each of which is (minimally) a relationship with time. Or have one fact table with each license, and have a row for cancelled, installed or activated? (so one license may be repeated). This gives the most flexibility, because each event can be rich with multiple dimensions. A sequence of events can be then be organized to provide the history of a license. This works out very well. You will often want to create summary tables for simple counts and sums to save having to traverse all events for the most common dashboard metrics. The requirement is for them to be able to see a connected fact. Right. You're joining several rows from the fact table together. A row where the event was sold, outer joined with a row where the event was installed outer joined with row where the event was activated, etc. It's just outer joins among the facts. So. Count of sales in March is easy. Event = "Sale". Time is all the rows where time.month = "march". Easy. Count of sales in march which became installs. Same "march sales" where clause outer joined with all "install" events for those licenses. Count of "sales" is the same as count(*). Count of installs may be smaller because the outer join puts in some nulls. Count of sales in march which became activations. The "march sales" where clause outer joined with all "activation" events. Note that the activation has no date constraint. Or have one fact table, with different fields for installed, cancelled, activated? This doesn't work out as well because the table's columns dictate a business process. That business process might change and you'll be endlessly tweaking the columns in the fact table. Having said it doesn't work out "as well" means it doesn't give ultimate flexibility. In some cases, you don't need ultimate flexibility. In some cases, the industry (or regulations) may define a structure that's quite fixed. Also, how do you relate one fact table to another? Is it through dimensions, or they can related in some other ways? Dimensions by definition. A fact table only has two things -- measurements and FK's to dimensions. Some dimensions (like "license instance") are degenerate because the dimension may have almost no usable attributes other than a PK. So you have an "sold" fact that ties to a license, a optional "installed" fact that ties to a license and an optional "activate" fact that ties to a license. The license is an object ID (the database surrogate key) and -- perhaps -- the license identifier itself (maybe a license serial number or something outside the database). Please by Ralph Kimball's Data Warehouse Toolkit before doing anything more.
