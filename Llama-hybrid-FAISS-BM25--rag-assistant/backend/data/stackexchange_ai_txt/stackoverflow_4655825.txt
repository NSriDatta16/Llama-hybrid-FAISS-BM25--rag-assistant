[site]: stackoverflow
[post_id]: 4655825
[parent_id]: 4655330
[tags]: 
The drawback is that the main table will get zillions of reads (and plenty of writes, too). This means that there will be lots of lock contentions, heavy reindexing etc. In order to mitigate this a bit you may consider splitting the "main table" in a series of not-so-main-tables. Say, you will have one main table for "Posts" (possibly refined through metadata or subtables for specific types of posts, like Sticky, Announcement, Shoutbox, Private...) One main table for Images (possibly refined for gifs, jpegs etc.) One main table for Videos... If this is a custom application (and not intended to be something that has to be "infinitely tweakable" like a CMS or a Portal framework) I think this kind of split is acceptable, and may provide some better performance (if you expect to have large amounts of data). Regarding your "examples" comment... first of all, if you keep comments again in a single gigantic table you may have similar problems as if you kept all type of items in it. Assuming this is not a problem, you can obviously put a sort of reference key (you can't use the normal foreign keys, of course) that links comments to their original item. This works fine when you go from item to comments, a bit less when you have to move from comments to the originating item. So the tradeoff is about what kind of operations would be more frequent for your problem.
