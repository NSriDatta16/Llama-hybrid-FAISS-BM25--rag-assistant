[site]: stackoverflow
[post_id]: 5413872
[parent_id]: 5361752
[tags]: 
I took the liberty of coding it up. You'll need to With Ada.Numerics.Discrete_Random. Generic Low, High : Integer; Package Initialization is SubType Element is Integer Range Low..High; Function Incrementor Return Element; Type Element_Array is Array(Element) of Element; Values : Element_Array; Procedure Print; End Initialization; Package Body Initialization is Count : Element := Element'Last; Function Incrementor Return Element is begin Return Result : Element:= Count do Null; Count:= Element'Pred( Result ); Exception When Constraint_Error => Count:= Element'Last; End Return; end Incrementor; Procedure Swap( Index_1, Index_2 : In Integer ) is Temp : Constant Element:= Values( Integer(Index_1) ); begin Values( Integer(Index_1) ):= Values( Integer(Index_2) ); Values( Integer(Index_2) ):= Temp; end Swap; Procedure Print is begin Put_Line( "Length: " & Values'Length'Img ); Put( "(" ); For Index in Values'First..Integer'Pred(Values'Last) loop Put( Values(Index)'Img & ',' ); end loop; Put( Values(Values'Last)'Img ); Put_Line( ")" ); end Print; Begin Shuffle: Declare Package Random_Element is New Ada.Numerics.Discrete_Random( Element ); Number : Random_Element.Generator; Use Random_Element; Begin Values:= Element_Array'( Others => Incrementor ); Reset( Number ); For Index in Element'Range loop Swap( Integer(Index), Integer(Random(Number)) ); end loop; End Shuffle; End Initialization; And you can test it out with something like: Test: Declare Package Q is new Initialization( Low => 0, High => 1000 ); Begin Q.Print; End Test;
