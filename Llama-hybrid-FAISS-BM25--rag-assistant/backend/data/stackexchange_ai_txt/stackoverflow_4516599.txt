[site]: stackoverflow
[post_id]: 4516599
[parent_id]: 4222319
[tags]: 
An easy solution exists for named parameters: function checkParams($call, $parameters) { $param_template = array( 'Foo' => array('name', 'age'), 'Bar' => array('email', 'opt_out'), ); //If there's no template, just return the parameters as is if (!array_key_exists($call, $param_template)) { return $parameters; } //Get the Template $template = $param_template[$call]; //Use the parameter names as keys $template = array_combine($template, range(1, count($template))); //Use array_intersect_key to filter the elements return array_intersect_key($parameters, $template); } $parameters = checkParams('Foo', array( 'age' => 32, 'name' => 'john', 'something' => 'else' )); //$parameters is now array('name' => 'john', 'age' => 32) $out = $client->__soapCall('Foo', $parameters); Not only does it correctly order the parameters, it also filters the parameters in the array.
