[site]: stackoverflow
[post_id]: 711180
[parent_id]: 686290
[tags]: 
JavaScript is a prototype based , functional language that pretends to be the cousin of Java. Here is a few key things about JavasSript: Everything is an Object, including Functions Object is more like Hash, it is a collection of key value pairs prototype itself is Object as well To answer your first question about performance of "borrowing" prototype: Typically, a JavaScript class contains a collection of [name, function object] pairs. When you borrow the prototype of the parent class , you basically copy the values of the parent prototype object into child class's prototype object. The copy is by reference , when the function is copied, the function code is not duplicated, only the reference is copied. This is similar to function pointers in C language. Thus the only performance hit is the duplication of the prototype object, which takes very little memory. To answer your second question of how to pass data to Parent Class in a clean way: There are many libraries out there that has some OOP style inheritance already built in. You can roll your own as well, but that would not be trivial. I recommend a framework called Joose . It supports classes, inheritance, mixins, traits, method modifiers and more. Stable and used in production environments. Elegant, and will save you a lot of key strokes Using Joose, parent constructors can be overridden or augmented, and SUPER() or INNER() methods will be provided to access the original constructor, or the subclass constructor.
