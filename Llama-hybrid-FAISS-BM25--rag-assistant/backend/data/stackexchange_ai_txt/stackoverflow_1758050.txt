[site]: stackoverflow
[post_id]: 1758050
[parent_id]: 1757822
[tags]: 
If you can change the database layout, I would do the following: As each gallery can have multiple images and as each image can be in multiple gallery, you have a many-to-many relationship. So you have 3 tables, the first one to hold the gallery, with a galleryId primary key and additional fields for gallery info (if galleries have names, for instance, a name field), then you have an image table, with an imageId and all the image information, and then you have third table with just two fields, galleryId and imageId. So if image 5 has to go to gallery 7, you'd enter 7 and 5 into the relationship table. to get all the images for gallery 7, you'd run something like SELECT * FROM images i LEFT JOIN galleryImages gi ON gi.imageId = i.imageId WHERE gi.galleryId=7 with galleryImages being the relationship table. Likewhise, to delete an image from a gallery, just delete the row in the relationship table. One thing you might want to pay attention to is to check if there are still entries for an image in the relationship table when you remove it from a gallery. or in other words, check if the images is being used in any galleries, if not, remove the entry from the images table as well, otherwhise you might end up with a lot of garbage image entries that aren't even needed anymore. hope this helps to clear some things up.
