[site]: crossvalidated
[post_id]: 35417
[parent_id]: 
[tags]: 
Genetic algorithms, genetic programming or machine learning algorithms for solving this problem

I have a problem that consists of finding the optimal solution based on the following criteria: Logic for identifying that event A has occurred (i.e. "find" logic that most accurately categorises an A type event) Logic for identifying that event B has occurred (i.e. "find" logic that most accurately categorises a B type event) Transition states (finding a parsimonious number of states in which the system can be said to occupy) State transition logic (Which state to transition to based on an event) I have been wrestling with this problem for over a year now, and I have managed to identify that the problem decomposes into combining the four sub problems above into one that produces the optimal solution. For the purpose of brevity, assume that I have an objective function (or fitness evaluation function). The fitness function will return a score based on how a proposed solution performs with new data. My question has been stated with an unintentional bias to GA, but thats simply because that is the approach that (to my perhaps naive mind), appears to be the most promising line of enquiry. I think GP may be useful here (though I have no experience with it), because as requirement 1,2 and 4 suggest, the "optimal" logic to use is not yet known. As an aside, I have some ideas about what possible solutions using this logic are likely to entail. It's just that I'm not sure which approach would produce the "fittest" result (pardon the GA terminology, I don't mean to bias the answers). My question is that given such an "optimisation" problem, what is the best approach for solving it - GA, GP, ML (or some combination of all three)? More (equally?) importantly, what are the practical steps I need to take to implement a solution that can help me solve this problem? Last but not the least (it may be too early to start talking about the implementation details), but I would like to implement the solution using Python, if possible. However, I can also use R, Octave etc if there are existing packages/toolkits etc to prevent me from reinventing the wheel.
