[site]: stackoverflow
[post_id]: 4266479
[parent_id]: 2433490
[tags]: 
Well, MvcContrib.IncludeHandling uses MvcContrib's DependencyResolver to find the necessary components. It's not very well documented (see the sample site for more detail, although in that case uses a custom injector). For example, MvcContrib.Castle has a WindsorDependencyResolver for that IoC container that you can mimic to use NInject (there may be something if you Google around). The initialization is quite verbose, but goes like this (container is the Windsor container, in your case, use NInject): var httpContextProvider = new HttpContextProvider(HttpContext.Current); var settings = IIncludeHandlingSettings)ConfigurationManager.GetSection("includeHandling"); container.Register(Component.For(typeof(IIncludeReader)).ImplementedBy(typeof(FileSystemIncludeReader))); container.Register(Component.For(typeof(IIncludeStorage)).ImplementedBy(typeof(StaticIncludeStorage))); container.Register(Component.For(typeof(IKeyGenerator)).ImplementedBy(typeof(KeyGenerator))); container.Register(Component.For(typeof(IIncludeHandlingSettings)).Instance(settings)); container.Register(Component.For(typeof(IHttpContextProvider)).Instance(httpContextProvider)); container.Register(Component.For(typeof(IIncludeCombiner)).ImplementedBy(typeof(IncludeCombiner))); container.Register(Component.For(typeof(IncludeController)).ImplementedBy(typeof(IncludeController)).LifeStyle.Transient); DependencyResolver.InitializeWith(new WindsorDependencyResolver(Container)); This way you can register all the dependencies that are needed. Beware that you need the includeHandler section in your web config. I hope this helped.
