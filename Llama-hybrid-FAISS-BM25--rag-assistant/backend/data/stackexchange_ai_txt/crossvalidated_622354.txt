[site]: crossvalidated
[post_id]: 622354
[parent_id]: 
[tags]: 
Understanding emmeans outputs for poisson and negative binomial GLM fitted on count data with or without offset

I fitted a poisson and negative binomial GLM on count data (=larva) and try to explain it as a function of a factor (=modality). However, as the traps used to trap larvae from inflorescences were exposed to different number of inflorescences, I than added an offset (=inflo) to the models for count normalization (in this case I am modeling the number of larvae per inflorescence). I used the following data: mydata % mutate(rate = larva / inflo) Mean values per modality for count and rate data are : mydata_stat % group_by(modality) %>% summarise(mean_larva = mean(larva), mean_inflo = mean(inflo), mean_rate = mean(rate), n = length(larva) ) mydata_stat # A tibble: 3 x 5 modality mean_larva mean_inflo mean_rate n 1 EH 48.5 36.2 2.28 18 2 ER 70.6 39.5 1.75 14 3 TS 27 30.1 0.856 14 From what I understand, a count GLM models the conditional mean of counts. If μ is the mean response conditional on the level of modality and the log-link function is η = log(μ), then the model is: η = β0 + β1 modalityER + β2 modalityTS, that is: μ = exp(β0 + β1 modalityER + β2 modalityTS) And for count GLM with an offset models the conditional mean of normalized counts. In this case, the model is: η = β0 + β1 modalityER + β2 modalityTS + log(inflo), that is: μ / inflo = exp(β0 + β1 modalityER + β2 modalityTS) 1/ Here the models and emmeans outputs for the Poisson and negative binomial GLMs without offset : fit1 I was expecting that the response means provided by emmeans was equal to observed means (=mean_larva in mydata_stat), which is the case for both models. 2/ Here the models and emmeans outputs for the Poisson and negative binomial GLMs with offset : fit1_offset In the case of count GLMs with offset, I was also expecting that the response rates provided by emmeans was equal to observed rates (=mean_rate in mydata_stat), which is not the case. In the case of the negative binomial GLM, it was close to mean_rate but not exactly the same, particularly for EH modality. And in the case of the Poisson GLM, it was instead exactly equal to mean_rate_2 = mean_larva / mean_inflo. mydata_stat %>% mutate(mean_rate_2 = mean_larva / mean_inflo) # A tibble: 3 x 6 modality mean_larva mean_inflo mean_rate n mean_rate_2 1 EH 48.5 36.2 2.28 18 1.34 2 ER 70.6 39.5 1.75 14 1.79 3 TS 27 30.1 0.856 14 0.896 I can't understand why... I realized that there is a possible oulier in modality EH: boxplot(rate ~ modality, data=mydata) When removing the outlier, response rates provided by emmeans were much more closer between the two models and also closer the observed rates (=mean_rate in mydata_stat_cor - see below) : mydata_cor % filter(rate % group_by(modality) %>% summarise(mean_larva = mean(larva), mean_inflo = mean(inflo), mean_rate = mean(rate), n = length(larva) ) mydata_stat_cor %>% mutate(mean_rate_2 = mean_larva / mean_inflo) # A tibble: 3 x 6 modality mean_larva mean_inflo mean_rate n mean_rate_2 1 EH 36.9 37.8 0.976 17 0.978 2 ER 70.6 39.5 1.75 14 1.79 3 TS 27 30.1 0.856 14 0.896 fit1_offset Does it mans that mean_rates are managed differently in Poisson and Negative binomila GLMs? How can these differences in results be explained ? Thanks in advance for your helpful explanations.
