[site]: stackoverflow
[post_id]: 3195153
[parent_id]: 3190720
[tags]: 
If your problem can be narrowed down to breaking apart a general curve into straight or smoothly curved partial lines then you could try this. Comparing the slope of the segments and identifying breaking points where it is greater then some threshold would work in a very simplified case. Imagine a perfectly formed L-shape where you have a right angle between two straight lines. Obviously the corner point would be the only one where the slope difference is above the threshold as long as the threshold is between 0 and 90 degrees, and thus a identifiable breaking point. However, the vertical and horizontal lines may be slightly curved so the threshold would need to be large enough for these small differences in slope to be ignored as breaking points. You'd also have to decide how sharp a corner the algorithm should pick up as a break. is 90 deg or higher required, or is even 30 deg enough? This is an important question. Finally, to make this robust I would not be satisfied comparing the slopes of two adjacent segments. Hands may shake, corners may be smoothed out and the ideal conditions to find straight lines and sharp corners will probably never occur. For each point investigated for a break I would take the average slope of the N previous segments and compare it to the average slope of the N following segments. This can be efficiently implemented using a running mean . By choosing a good sample number N (depending on the accuracy of the input, the total number of points, etc) the algorithm can avoid the noise and make better detections. Basically the algorithm would be: For each investigated point (beginning N points into the sequence and ending N points before the end.) Compute average slope of the N previous segments. Compute average slope of the N next segments. If the difference of the averages is greater than the Threshold , mark current point as a breaking point. This is quite off the top of my head. You'd have to try it in your application.
