[site]: stackoverflow
[post_id]: 1141367
[parent_id]: 1092144
[tags]: 
Programming for mobile clients has historically been a nightmare. The fragmented nature of the mobile world exacerbates any problems you have encountered in the desktop/server market. If your goal is to make money as a small developer you should focus your efforts as much as possible. To this end the iPhone is the only real choice, the cost of testing, porting and certifying your application on J2ME, Symbian or Windows Mobile very quickly overcomes the potential market advantage these platforms have. You also need to consider the technical requirements of the applications you are going to develop. For example, while J2ME is 'supported' on more handset than any of the other possibilities, the security model restricts the usefulness of J2ME if you want to do 'cool' things (at least this has repeatedly been a problem for me). The fragmented support for JSR s is also a major problem. J2ME can run on a lot on non smart phones but do these handsets support the features you want? Also consider the handset distribution across your target audience. Location, income and age of your potential users will greatly determine the handsets that you can and should target. My own experience is that mobile application programming is a loosing battle on Symbian, Windows Mobile and BREW . It is a organizational nightmare on J2ME. But many people are making money on the Apple App Store . And Nokia now has Ovi ... RIM has a store, Windows Mobile will have a store... Maybe Apple's success will push the other handset vendors to get their act together and make it easier. A note on your criteria about handset cost: MTK (most of the Chinese/Taiwanese knock-offs) would be the cheapest, but you can only install on the handsets at manufacture time so it's not really an option... Java handsets can be cheap, but the porting issue is a pain. One international company I worked for spent more than half a million on handset acquisition and client porting every year as they had to test their applications on each new Java handset and even the same handset with different firmware (just enter N95 in the Wurfl and you can see how many different firmwares there can be when the European operators do silly things like install custom firmware so the Vodafone UK and O2 UK N95 are not the same.) Windows Mobile can be the same, every new release has different API(s) and the OEMs change things... If you count the cost of acquiring even a few Java or Windows Mobile handsets to ensure your application works across different OS editions and firmwares then you have spent a tidy sum. Might as well get an iPhone or two. So, my suggestions? iPhone Symbian (2 and 3 could switch depending on features you need) J2ME Windwos Mobile Android BREW (if you are in the Americas) RIM Flash MTK
