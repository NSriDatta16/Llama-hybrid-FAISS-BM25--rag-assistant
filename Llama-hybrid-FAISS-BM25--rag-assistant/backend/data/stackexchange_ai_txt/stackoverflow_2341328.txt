[site]: stackoverflow
[post_id]: 2341328
[parent_id]: 2341283
[tags]: 
Django's ORM isn't intended for things like this. I would suggest you're doing something the wrong way but you haven't explained why you want to do this, so I can't really comment. Anyway. You can use Django's raw SQL: def my_custom_sql(): from django.db import connection, transaction cursor = connection.cursor() # Data modifying operation - commit required cursor.execute("UPDATE bar SET foo = 1 WHERE baz = %s", [self.baz]) transaction.commit_unless_managed() # Data retrieval operation - no commit required cursor.execute("SELECT foo FROM bar WHERE baz = %s", [self.baz]) row = cursor.fetchone() return row http://docs.djangoproject.com/en/dev/topics/db/sql/#executing-custom-sql-directly
