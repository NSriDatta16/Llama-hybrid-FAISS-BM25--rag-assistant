[site]: stackoverflow
[post_id]: 4563432
[parent_id]: 4563385
[tags]: 
I don't think it is possible with classes. To segregate functionality you should use interfaces instead of extending classes. It is quite likely that your class A is violating the Single Responsibility Principal if you need to divide methods like that. Then look to use composition instead of inheritance to compose complex classes from the simpler ones. Also take a look at the strategy pattern . Divide your functionality in interfaces like this - public interface IFlyable { void FlapWings(); void Fly(); } public interface IHuntingAnimal { void Hunt(); } Then implement your classes like this - public class Duck : IFlyable { ... public class Eagle : IFlyable, IHuntingAnimal { ... public class Tiger : IHuntingAnimal { .. Note: The example is in C#. You need to work out the java equivalent.
