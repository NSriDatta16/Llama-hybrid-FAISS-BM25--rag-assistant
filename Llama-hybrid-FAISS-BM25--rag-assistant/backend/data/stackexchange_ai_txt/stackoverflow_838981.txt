[site]: stackoverflow
[post_id]: 838981
[parent_id]: 297889
[tags]: 
This feels like a hack, but it works (kind of) (sorry, vb.net not c#): Public Class UserControl2 Private Sub tsMainMenu_BeginDrag(ByVal sender As Object, ByVal e As System.EventArgs) Handles tsMainMenu.BeginDrag tsMainMenu.Tag = tsMainMenu.Parent End Sub Private Sub ToolStrip1_EndDrag(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tsMainMenu.EndDrag If Not tsMainMenu.Parent.Parent.Equals(CType(tsMainMenu.Tag, ToolStripPanel).Parent) Then CType(ToolStrip1.Tag, ToolStripPanel).Controls.Add(tsMainMenu) End If End Sub End Class simply put; when the control is finished being dragged, if its parent ToolStripContainer is not the same as it was when it started dragging, move the toolstrip back to where it was. im sure this could be rolled into a control so that you dont have to write it for every toolbar. Edit: You could put all this code into a control that inherits from ToolStripContainer, and have it do all the work for you, meaning a nice encapsulated solution.
