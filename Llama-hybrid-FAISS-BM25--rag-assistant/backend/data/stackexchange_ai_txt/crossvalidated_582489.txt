[site]: crossvalidated
[post_id]: 582489
[parent_id]: 582361
[tags]: 
A direct attack ( via integration) on computing the density looks intractable. Instead, we may more easily compute the characteristic function of $Y$ (when the scale factor $b=1,$ which we may assume without any loss of generality simply by changing the units in which we express $Y$ ) as $$\begin{aligned} \phi_Y(t;a) &= E\left[e^{itY}\right] = E\left[e^{it(UX_1+(1-U)X_2)}\right] = E_U\left[E_{X_1,X_2}\left[e^{it(UX_1+(1-U)X_2)}\right]\right]\\ &= E_U\left[ E_{X_1} \left[e^{it UX_1}\right]\, E_{X_2} \left[e^{it (1-U)X_2}\right]\right]\\ &= E_U\left[(1 - i U t)^{-a}\, (1 - i(1-U)t)^{-a}\right]\\ &= \int_0^1 \left((1 - iut)(1 - i(1-u)t)\right)^{-a}\,\mathrm{d}u\\ &= \frac{_2F_1\left(1, 2-2a, 2-a; \frac{i}{2i+t}\right)\ {-}\ _2F_1\left(1, 2-2a, 2-a; \frac{i+t}{2i + t}\right)}{(a-1)t(2i + t)(1 - it)^{a-1}}. \end{aligned}$$ The hypergeo library for R will efficiently compute these hypergeometric functions, as shown in these graphs of $\phi_Y$ for a range of $a.$ The solid graph plots the real part of $\phi_Y$ and the dotted graph plots its imaginary part. (There is a technical problem: the foregoing formula is not defined for positive integral values of $a.$ You can get close enough by computing the average of $\phi_Y(t;a\pm2\epsilon)$ when $a$ is within $\epsilon$ of an integer and $\epsilon$ is small. It doesn't have to be terribly small for this to be highly accurate; I used $\epsilon = 10^{-5}.$ Smaller values will cause too much loss of precision in double precision floating point calculations.) That answers the question. However, often it's more useful to have a density or distribution function. Either can be obtained through a Fourier transform. The density, for instance, is $$f_Y(y;a) = \frac{1}{2\pi}\int_{\mathbb R} e^{- i y t} \phi_Y(t;a)\,\mathrm{d}t.$$ Numerical integration is possible, albeit a little slow for small values of $a.$ For $a=3/2$ it took half a minute to generate 101 points on the curve below, which matches the histogram of 100,000 values of $Y$ generated directly from its definition. For $a=6$ the time dropped to four seconds; for $a=7.5$ to under half a second; etc. The timing is a rather irregular function of $a$ (odd multiples of $1/2$ tend to be very quick to compute) so take some care if you need many evaluations of $f_Y.$ This is the full R code. # # The characteristic function of Y. # library(hypergeo) phi. eps)) phi.(t, a) else { (phi.(t, a - 2*eps) + phi.(t, a + 2*eps)) / 2 }) } # # Test `phi` by plotting it. # par(mfrow=c(1,3)) for (s in c(bquote(1/4), bquote(3/2), bquote(10))) { a
