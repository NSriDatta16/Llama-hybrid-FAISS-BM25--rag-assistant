[site]: stackoverflow
[post_id]: 888983
[parent_id]: 888390
[tags]: 
Use normalized correlation to determine a match of templates. @Daniel, Daniel's solution is good for leveraging your multiple CPUs. He doesn't mention a quality metric that would be useful and I would like to suggest one quality metric that is very common in image processing. I suggest using normalized correlation [1] as a comparison metric because it outputs a number from -1 to +1. Where 0 is no correlation 1 would be output if the two templates were identical and -1 would be if the two templates were exactly opposite. Once you compute the normalized correlation you can test to see if you have found the template by doing either a threshold test or a peak-to-average test[2]. [1 - footnote] How do you implement normalized correlation? It is pretty simple and only has two for loops. Once you have an implementation that is good enough you can verify your implementation by checking to see if the identical image gets you a 1. [2 - footnote] You do the ratio of the max(array) / average(array_without_peak). Then threshold to make sure you have a good peak to average ratio.
