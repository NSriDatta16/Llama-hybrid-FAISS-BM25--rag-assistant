[site]: stackoverflow
[post_id]: 1080949
[parent_id]: 92079
[tags]: 
There are an pragma in Borland, wich controls how many lines of code is recompiled. In the past years i have managed (in some project), that only changes of my source are compiled. I don't know, if this will be worked in newer versions of borland Borland 6 has an pragma "hdrstop". this is only active, if the project option "Pre-Compile headers" is NOT "none" years ago I have an very slow computer an i accelerate the compilition time from hours to minutes with following trick all cpps have become this first line #include "all.h" #pragma hdrstop default was an include of "vcl.h" "all.h" will includes all header, wich are needed in all! units. every unit will skip all sources, wich depend on header before pragma hdrstop. Example: Unit1.h #include Unit1.cpp #include "all.h" #pragma hdrstop #include "Unit1.h" Unit2.h #include Unit2.cpp #include "all.h" #pragma hdrstop #include "Unit2.h" all.h #include #include Importing dont use all.h in headerfiles you can add all includes, wich are used in the project header, like , All sources wich depend on the "pre compiled headers" will not be compiled again! generation of precompiled headers will be slow! So only add headers in all.h, which will not be changed often. Like system headers or your headers wich are already finished. compilation can be failed. sometimes the order of the includes produce an "deadlock" for the comilation. if its happen, deactivate "pre-compiled headers". Most problems will be solved, if you write your c++ like in java: every class will become his own files(cpp and h). Filename in the project option "Pre-Compiled headers" shows the basename of the real precompiled files. an unit can share an precompiled file with another unit, if it have (exact) the same inludes before "pragma hdrstop". Best performance is reached, if you have only one file with an numeric postfix. Example for more than one precompiled header: Unit1.h #include Unit1.cpp #include "all.h" #pragma hdrstop #include "Unit1.h" Unit2.h #include Unit2.cpp #include //!!!!!!!!!!!!!!!!!!! produce a second version of an precompiled file #pragma hdrstop #include "Unit2.h" all.h #include #include
