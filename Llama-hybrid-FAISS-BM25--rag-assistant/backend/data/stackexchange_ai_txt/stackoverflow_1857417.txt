[site]: stackoverflow
[post_id]: 1857417
[parent_id]: 1855493
[tags]: 
OTOH there's some wild features dating back to Perl 1 that still work. For example, what does this print? %foo = (foo => 23); print values foo That's right, 23. Why? Because "associative arrays" were not first-class objects in Perl 1. $foo{bar} worked but there was no %foo . I really don't know why, even the Perl 1 man page acknowledges this is warty. So for compatibility with Perl 1 you can access a global hash without using a % , maybe if your keyboard is broken or Apple decides nobody uses the % symbol. chdir has some oddities. chdir() with no argument will take you to your home directory, replicating the shell cd behavior. Unfortunately so will chdir undef and chdir "" making it difficult to catch errors around chdir . Fortunately this behavior is deprecated. I will have to make sure it dies in 5.14. $[ is still around and remains undeprecated, but "highly discouraged". It changes what the first index of an array is, so if you're a human like me and count from 1 you could do: $[ = 1; @foo = qw(foo bar baz); print $foo[2]; # prints bar Perl 5 changed it to be file-scoped, as otherwise it was a performance drag and a great source of CrAzY.
