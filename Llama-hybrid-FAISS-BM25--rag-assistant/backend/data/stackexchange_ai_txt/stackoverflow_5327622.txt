[site]: stackoverflow
[post_id]: 5327622
[parent_id]: 5327519
[tags]: 
This query will give you a wide table that includes the table names, primary key names, and the columns within the primary keys, for all tables which have "Location" as part of their name: select * from INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc inner join INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu on tc.CONSTRAINT_CATALOG = kcu.CONSTRAINT_CATALOG and tc.CONSTRAINT_SCHEMA = kcu.CONSTRAINT_SCHEMA and tc.CONSTRAINT_NAME = kcu.CONSTRAINT_NAME where tc.CONSTRAINT_TYPE='PRIMARY KEY' and tc.TABLE_NAME like '%Location%' order by tc.CONSTRAINT_CATALOG, tc.CONSTRAINT_SCHEMA, tc.CONSTRAINT_NAME, kcu.ORDINAL_POSITION You may want to limit the columns more for your actual query. When writing SQL, you're encouraged to think in terms of the set of results as a whole, and in terms of telling the engine what you want , not how to do it . So you shouldn't generally be thinking in terms of "first I do this, then I do this next thing, then for each result, I want to do something else".
