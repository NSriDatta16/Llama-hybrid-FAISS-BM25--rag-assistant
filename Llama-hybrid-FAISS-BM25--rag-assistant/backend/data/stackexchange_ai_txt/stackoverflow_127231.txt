[site]: stackoverflow
[post_id]: 127231
[parent_id]: 127009
[tags]: 
Try this: class Arc; class Node { private: std::vector incoming_; public: typedef std::vector ::iterator iterator; iterator incoming_arcs_begin() { return incoming_.begin(); } }; And use Node::iterator in the rest of the code. When/if you change the container, you have to change the typedef in a single place. (You could take this one step further with additional typedef for the storage, in this case vector.) As for the const issue, either define vector's const_iterator to be your iterator, or define double iterator types (const and non-const version) as vector does.
