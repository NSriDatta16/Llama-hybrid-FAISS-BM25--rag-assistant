[site]: stackoverflow
[post_id]: 1879291
[parent_id]: 1879214
[tags]: 
Your one problem is with public void mouseDragged(MouseEvent me) { if (isCircleClicked = true) { What you're doing here is setting isCircleClicked to true every time you drag the mouse. Also this statement evaluates to true which is why you can drag anywhere and move the circle. Change this to if (isCircleClicked) { and you should be fine here. The next problem is that you never reset isCircleClicked to false . You should be doing this either in mouseReleased or change your mousePressed as follows: public void mousePressed(MouseEvent me) { isCircleClicked = (cX - me.getX()) * (cX - me.getX()) + (cY - me.getY)) * (cY - me.getY()) which will set isCircleClicked accordingly. There is still something to do, though. In the current form you need to start dragging to the upper-left of the center point, as illustrated below: +------+ | | | .-|-. | / | \ +------+ | \ / '-_-' This is because of your drawing: fillOval takes an upper-left corner of the oval and a width and height of the bounding rectangle. It's not the center point and the respective diameters. Hence you need to adapt his as follows: g.fillOval(cX - r, cY - r, r * 2, r * 2); Note the offset by the radius to the left and top. Furthermore, your dragging code needs a bit more work. You are currently assuming that the user drags the circle's center . What you need to do is save the coordinates of the mouse click and then move the circle based on the mouse's movement relative to the last point. Currently you're moving relative to the circle's center so for the movement to be nice you have to start dragging exactly in the center of the circle. I'll leave that as an exercise for you :-) Besides, your listener class already inherits from MouseAdapter so you don't need to explicitly implement the MouseMotionListener since MouseAdapter implements it already.
