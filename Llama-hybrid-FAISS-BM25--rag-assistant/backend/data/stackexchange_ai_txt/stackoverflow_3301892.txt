[site]: stackoverflow
[post_id]: 3301892
[parent_id]: 3293873
[tags]: 
Yes, you can store these files in AppFabric - the restriction for storing objects in AppFabric is that they are serialisable (or serializable if you're in the USA :-)). How do you turn a file into a serialisable object? You turn it into bytes - here's an example that allows you to upload zip files with a web page. public partial class WebForm1 : System.Web.UI.Page { protected void Page_Load(object sender, EventArgs e) { if (!IsPostBack) { bindGrid(); } } protected void UploadButton_Click(object sender, EventArgs e) { DataCacheFactory factory; DataCache zipCache; Byte[] zipArray; // Check to see if the user uploaded a zip file if (ZipFileUpload.HasFile && ZipFileUpload.PostedFile.FileName.EndsWith(".zip")) { // Initialise the byte array to the length of the uploaded file zipArray = new Byte[ZipFileUpload.PostedFile.ContentLength]; // Read the uploaded file into the byte array ZipFileUpload.PostedFile.InputStream.Read(zipArray, 0, ZipFileUpload.PostedFile.ContentLength); factory = new DataCacheFactory(); // Get the "files" cache zipCache = factory.GetCache("files"); // Add the byte array to the zipfiles region of the cache // Using regions allows us to separate out images and zips zipCache.Add(ZipFileUpload.PostedFile.FileName, zipArray,new TimeSpan(1,0,0), "zipfiles"); bindGrid(); } } protected void bindGrid() { DataCacheFactory factory; DataCache zipCache; IEnumerable > cachedFiles; DataTable cachedFilesDataTable; factory = new DataCacheFactory(); zipCache = factory.GetCache("files"); cachedFiles = zipCache.GetObjectsInRegion("zipfiles"); cachedFilesDataTable = new DataTable(); cachedFilesDataTable.Columns.Add(new DataColumn("Key", typeof(string))); foreach (KeyValuePair cachedFile in cachedFiles) { cachedFilesDataTable.Rows.Add(cachedFile.Key); } CachedZipFilesGridview.DataSource = cachedFilesDataTable; CachedZipFilesGridview.DataBind(); } }
