[site]: stackoverflow
[post_id]: 1104139
[parent_id]: 1103262
[tags]: 
In Django, it's not that hard: you simply have to write an authentication backend , that will authenticate users against password stored in plaintext. That said, you should never store passwords in plaintext . The main point is that people tend to use the same password over and over again and therefore, using plaintext in your site you put your users at risks for an attacker to get to their bank account. Jeff Atwood wrote a nice post, about this topic, You're Probably Storing Passwords Incorrectly ; I suggest you reading it, because it will explain issues about plaintext in passwords in a much better way than me. At least, you should encourage your users to use a different password from their "secure" ones; for instance, you could simply generate new random passwords, even if this approach has its own limitations, too. Another approach, that could be much more secure: write your authentication backend, that will validate against (for instance) the WebDAV storage. You do not store the passwords anywhere in your system - you simply pass them through. I do not know if it may work in your case (especially if you have to authenticate against several sources) but at least you can give it a try.
