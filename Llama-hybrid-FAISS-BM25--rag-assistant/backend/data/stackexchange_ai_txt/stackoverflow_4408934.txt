[site]: stackoverflow
[post_id]: 4408934
[parent_id]: 4400747
[tags]: 
What is possible between between 8-byte integers and the float format is straightforward to explain but less so to implement! The next paragraph concerns what is representable in 8 byte signed integers. All positive integers between 1 (2^0) and 16777215 (2^24-1) are exactly representable in iEEE754 single precision (float). Or, to be precise, all numbers between 2^0 and 2^24-2^0 in increments of 2^0. The next range of exactly representable positive integers is 2^1 to 2^25-2^1 in increments of 2^1 and so on up to 2^39 to 2^63-2^39 in increments of 2^39. Unsigned 8-byte integer values can be expressed up to 2^64-2^40 in increments of 2^40. The single precison format doesn't stop here but goes on all the way up to the range 2^103 to 2^127-2^103 in increments of 2^103. For 4-byte integers (long) the highest float range is 2^7 to 2^31-2^7 in 2^7 increments. On the x86 architecture the largest integer type supported by the floating point instruction set is the 8 byte signed integer. 2^64-1 cannot be loaded by conventional means. This means that for a given range increment expressed as "2^i where i is an integer >0" all integers that end with the bit pattern 0x1 up to 2^i-1 will not be exactly representable within that range in a float This means that what you call rounding upwards is actually dependent on what range you are working in. It is of no use to try to round up by 1 (2^0) or 16 (2^4) if the granularity of the range you are in is 2^19. An additional consequence of what you propose to do (rounding 2^63-1 to 2^63) could result in an (long integer format) overflow if you attempt the following conversion: longlong_int=(long long) ((float) 2^63). Check out this small program I wrote (in C) which should help illustrate what is possible and what isn't. int main (void) { __int64 basel=1,baseh=16777215,src,dst,j; float cnvl,cnvh,range; int i=0; while (i This program shows the representable integer value ranges. There is overlap beteen them: for example 2^5 is representable in all ranges with a lower boundary 2^b where 1=
