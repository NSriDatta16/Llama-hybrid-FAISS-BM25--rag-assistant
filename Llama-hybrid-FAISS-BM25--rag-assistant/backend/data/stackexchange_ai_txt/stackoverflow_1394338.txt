[site]: stackoverflow
[post_id]: 1394338
[parent_id]: 
[tags]: 
C# - Interface -Help in power of Interface

I am new to C#. Recently I have read an article.It suggests "One of the practical uses of interface is, when an interface reference is created that can work on different kinds of objects which implements that interface." Base on that I tested (I am not sure my understanding is correct) namespace InterfaceExample { public interface IRide { void Ride(); } abstract class Animal { private string _classification; public string Classification { set { _classification = value;} get { return _classification;} } public Animal(){} public Animal(string _classification) { this._classification = _classification; } } class Elephant:Animal,IRide { public Elephant(){} public Elephant(string _majorClass):base(_majorClass) { } public void Ride() { Console.WriteLine("Elephant can ride 34KPM"); } } class Horse:Animal,IRide { public Horse(){} public Horse(string _majorClass):base(_majorClass) { } public void Ride() { Console.WriteLine("Horse can ride 110 KPH"); } } class Test { static void Main() { Elephant bully = new Elephant("Vertebrata"); Horse lina = new Horse("Vertebrata"); IRide[] riders = {bully,lina}; foreach(IRide rider in riders) { rider.Ride(); } Console.ReadKey(true); } } } Questions : Beyond such extend, what are the different way can we leverage the elegance of Interfaces ? What is the Key point that I can say this can be only done by interface (apart from multiple inheritances) ? (I wish to gather the information from experienced hands). Edit : Edited to be concept centric,i guess.
