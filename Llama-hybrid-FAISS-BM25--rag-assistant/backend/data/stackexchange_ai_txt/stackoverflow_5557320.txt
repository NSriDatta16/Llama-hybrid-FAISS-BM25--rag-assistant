[site]: stackoverflow
[post_id]: 5557320
[parent_id]: 5556769
[tags]: 
Hard coding GUIDs or other numeric IDs may not look very elegant, but from my experience sometimes it proved to be quite beneficial as far as performance is concerned. Your example is quite simple, but if you had a more complex query with many joins, removing one join could speed up the query. An example in your code would be removing join with PlayerStatus and filter using PlayerStatusID from Player table instead of using PlayerStatusName from PlayerStatus. There are two more thing to consider when it comes to hard coding GUIDs/IDs: GUID/ID is usually a PK in a table and referenced by FK, so it's harder to change GUID/ID than it is to change i.e. status name. Changing PlayerStatusName in your example from 'Active' to 'In action' would make your query using PlayerStatusName useless. So using GUIDs/IDs guarantees that queries are based on solid columns (PKs, FKs) Using GUIDs/IDs in queries requires little discipline if you have multiple environments for example. You need to make sure relevant IDs in tables holding dictionaries (i.e. PlayerStatus) are the same across all database instances.
