[site]: stackoverflow
[post_id]: 3190543
[parent_id]: 3190237
[tags]: 
This isn't a problem, you need to use a technique called formal link. Instead of button you put a from with submit button. Below is a code of helper I use for this: def formal_link_to(*args, &block) options = html_options = name = nil if block_given? options = args.first html_options = args.second name = capture(&block) else name = args.first options = args.second || {} html_options = args.third end method = html_options.delete(:method) || "POST" method = method.to_s.upcase url = url_for(options) html = " " html += " " html += " " html += link_to(name, "#", html_options) html += " " if block_given? concat(html) else return html end end You use this helper like a normal link_to, but you can pass extra options :method in second hash. Example: "fill_in_lots" }, { :method => :post } -%> Remarks: 1. This of course will make the full page reload, but it is inevitable without using JavaScript. 2. I assumed action fill_in_lots is exposed to POST request. In case of GET you can use normal link_to helper.
