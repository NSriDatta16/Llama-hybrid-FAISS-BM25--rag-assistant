[site]: stackoverflow
[post_id]: 5653728
[parent_id]: 5653698
[tags]: 
Use a regular memory mapped file. Writing to binary executables is bad practice and many (if not all) OS-es will prohibit that in all but the most promiscuous security policy settings. PS. The popular term for this kind of storage is 'database' (or program database ). This should help you get a few google hits. Also, depending on your preferred method of implementation you can use memory-mapping to overlay your data-segment (so you can have your cake and eat it: keep you global static data where it is and easily commit them to disk). However, this is more in the C/C++ spirit. In .NET you'd have to use a giant custom-layout struct (meaning, all reference types are out of the question - this is more unnatural in C# than it is in, say, C++) So your best bet is probably to use an UnmanagedMemoryStream , serialize your data using builtin .NET System.Runtime.Serialization (of which the XML flavour is by far the more popular and easily copied from blogs and other sources). Cheers
