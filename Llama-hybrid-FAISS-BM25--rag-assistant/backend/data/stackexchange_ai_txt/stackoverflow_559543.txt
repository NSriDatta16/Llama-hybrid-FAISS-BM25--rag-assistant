[site]: stackoverflow
[post_id]: 559543
[parent_id]: 559522
[tags]: 
It is not required. It's basically a judgment call. If the implementation is simple for each class you can put them all in one .h and one .cpp If the implementations are a bit longer, then it's probably cleaner to use a separate .h and .cpp file for each. Some advantages of using a different .h/.cpp for each class: It will keep the code organized and clean Reduced compiling work: A change in one of the implementations won't need to recompile all others Faster compiling time: Several compilers can compile multiple files at once such as Visual Studio's /MP switch. With several files you'll have a faster compile time. Other files can include only what they need instead of everything Faster link time: Linking time will be reduced due to incremental linking Using version control you can look back on only the changes to a particular derived class, instead of having to go through all changes made to the massive 1 .h/.cpp file to find that one change in a particular derived class.
