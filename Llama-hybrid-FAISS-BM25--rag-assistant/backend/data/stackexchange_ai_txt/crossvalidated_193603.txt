[site]: crossvalidated
[post_id]: 193603
[parent_id]: 193594
[tags]: 
QUESTION: Is the above logic depending upon how the original data splits? (you should word this question more clearly) Ideally, you should randomly break the data up into the three parts. That means, as you correctly said, you should shuffle it first. The performance of the algorithm should not depend too much on how you split the data. It may vary a little bit, but not by a lot [ † see below]. Different people use different fractions of the data, based on their experience practicing machine learning. You might see the breakup [60% train, 20% validate, 20% test] online. So out of your 2000000, some people would use 1200000 as training data, 400000 as validation data and 400000 as test data. And when I build the model with Train I overfit it so that I get maximum AUC with Test data. QUESTION: Isn't overfitting helping in this case? The goal of running a machine learning algorithm is for the purpose of making, to the best extent possible, correct predictions on data that hasn't been seen yet . If you are tuning the parameters of the model to get maximum performance with Test data, then you are not using the Test data correctly. What you are actually doing, without realizing it, is treating the Test data like "validate" data. The purpose of the Test data is to see if your machine learning algorithm is even capable of making correct predictions. Remember, that the algorithm isn't magic and sometimes may not be capable of finding a pattern relating the input to the target variable 'y'. The algorithm may fail because: there isn't much of a pattern in the data you do not have enough training data your model isn't complex enough to learn the pattern etc. You should only use Train (train + validate) to tune the model. If you 'overfit' to get best results with the Test data, you now have no more Test data to see if the algorithm did a good job or not. Think of your algorithm as a student taking a college course with a final exam at the end. Training is like learning how to solve problems where the student can look at the answers. But in the end, when the final exam is given, the student should not be able to see the answers and learn from them. This is how the Test data should be treated: like an exam. The purpose of the exam is to check if the student knows the course material on unseen problems . If the answers are given out at exam time for the student to check and learn more, then the professor will never know whether the student has understood the subject. † if your data is skewed or imbalanced , you would need to address that issue separately
