[site]: stackoverflow
[post_id]: 2984596
[parent_id]: 2984592
[tags]: 
You may want to compare a user input (which can be in different cultures) with a reference string set in code. One of the classic use-cases for culture invariant comparisons is the Turkish-I problem . Assume that you have a textbox in your application that validates a URL protocol by checking whether it starts with http:// , ftp:// , or file:// . If you write: inputUrl.StartsWith("FILE://", StringComparison.CurrentCultureIgnoreCase) and the user input is file://test , it'll work on a machine with English regional settings (more accurately, the thread's CurrentCulture ) but the test will fail if the culture is set to Turkish because the uppercase version of file:// will be FÄ°LE:// in Turkish alphabet. In these cases, we want to match the string using invariant culture: inputUrl.StartsWith("FILE://", StringComparison.InvariantCultureIgnoreCase) In general, when you want to perform comparisons for input data where the input has specific semantics in your program (it represents a URL, resource key, ...) rather than simply being used for display purposes or storage and retrieval, you should consider using InvariantCulture .
