[site]: stackoverflow
[post_id]: 2079262
[parent_id]: 
[tags]: 
Conways's Game of life array problems

I'm writing a Conway's life game for school. In the program I am having trouble with the arrays taking the values I am assigning them. At one point in the program they print out the value assigned to them (1) yet at the end of the program when I need to print the array to show the iterations of the game it shows an incredibly low number. The other trouble was I was encountering difficulties when putting in a loop that would ask if it wants you to run another iteration. So I removed it until the previous errors were fixed. Im writing this with C++ #include int main (void) { int currentarray [12][12]; int futurearray [12][12]; char c; char check = 'y'; int neighbors = 0; int x = 0; // row int y = 0; //column printf("Birth an organism will be born in each empty location that has exactly three neighbors.\n"); printf("Death an organism with four or more organisms as neighbors will die from overcrowding.\n"); printf("An organism with fewer than two neighbors will die from loneliness.\n"); printf("Survival an organism with two or three neighbors will survive to the next generation.\n"); printf( "To create life input x, y coordinates.\n"); while ( check == 'y' ) { printf("Enter x coordinate.\n"); scanf("%d", &x ); while((c = getchar()) != '\n' && c != EOF); printf("Enter y coordinate.\n"); scanf("%d", &y ); while((c = getchar()) != '\n' && c != EOF); currentarray [x][y] = 1; printf ("%d\n", currentarray[x][y]); printf( "Do you wish to enter more input? y/n.\n"); scanf("%c", &check); while((c = getchar()) != '\n' && c != EOF); } // Note - Need to add a printf statement showing the array before changes are made after input added. // check for neighbors while(check == 'y') { for(y = 0; y 3) futurearray[x][y] = 0; else if(currentarray[x][y] == 1 && (neighbors == 2 || neighbors == 3)) futurearray[x][y] = 1; else if(currentarray[x][y] == 0 && neighbors == 3) futurearray[x][y] = 1; } } } // Set the current array to the future and change the future to 0 { for(y = 0; y
