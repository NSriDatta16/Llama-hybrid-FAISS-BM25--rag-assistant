[site]: stackoverflow
[post_id]: 1863608
[parent_id]: 1862593
[tags]: 
There are generally four reasons I can think of for using a constant: As a substitute for a value that could reasonably change in the future (e.g., IdColumnNumber = 1 ). As a label for a value that may not be easy to understand or meaningful on its own (e.g. FirstAsciiLetter = 65 ), As a shorter and less error-prone way of typing a lengthy or hard to type value (e.g., LongSongTitle = "Supercalifragilisticexpialidocious" ) As a memory aid for a value that is hard to remember (e.g., PI = 3.14159265 ) For your particular examples, here's how I'd judge each example: const int ZERO_RECORDS = 0; // almost definitely a code smell const int FIRST_ROW = 0; // first row could be 1 or 0, so this potentially fits reason #2, // however, doesn't make much sense for standard .NET collections // because they are always zero-based const int DEFAULT_INDEX = 0; // this fits reason #2, possibly #1 const int STRINGS_ARE_EQUAL = 0; // this very nicely fits reason #2, possibly #4 // (at least for anyone not intimately familiar with string.CompareTo()) So, I would say that, no, these are not worse than Zero = 0 or A = "A" .
