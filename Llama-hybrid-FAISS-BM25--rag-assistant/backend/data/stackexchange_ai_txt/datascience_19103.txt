[site]: datascience
[post_id]: 19103
[parent_id]: 19040
[tags]: 
For most clustering approaches, first you need to choose a similarity measure. Some common default ones for raw time series are Euclidean distance and Dynamic Time Warping (DTW). When you have computed the similarity measure for every pair of time series, then you can apply hierarchical clustering , k-medoids or any other clustering algorithm that is appropriate for time series (not k-means !, see this ). Update : if the number of time series (along with their size) makes it computationally not acceptable to compute pairwise distances, then one option can be to extract features from each time series, and then use such features as proxies for the time series in the clustering process. Some examples of such features are maximum value, number of peaks, mean value. There are libraries like tsfresh in Python that are meant to easily extract such kind of features from time series. With these features, then any clustering approach like k-means can be applied.
