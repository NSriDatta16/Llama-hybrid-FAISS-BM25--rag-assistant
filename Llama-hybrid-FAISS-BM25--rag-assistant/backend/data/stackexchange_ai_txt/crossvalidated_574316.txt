[site]: crossvalidated
[post_id]: 574316
[parent_id]: 
[tags]: 
Choice Between Alternatives in Machine Learning

I need some advice on the simplest/best way to structure an ML model for a (slightly) non-standard situation. Setup : I have many teams in a company that have leaders. Each team has two options for a leader (A & B). The teams and their leader options differ a lot across the company, but the choice of A or B for each team is more or less arbitrary/random. I can measure teams' performance (y) consistently and potential leaders' characteristics (x_A, x_B). Goal : I want to predict what kinds of leaders are best. Should A or B have been chosen? Analysis : there are a few ways to set this problem up and here's where I need advice. Say f is some ML model function of characteristics, should I fit y ~ f(x_Winner) -- this is primarily the relationship I want, but the model doesn't see what the alternative leader was for each team (just the winner) y ~ f(x_i, T_i) -- that is, have two observations per team, one for A & B each. Add A and B's characteristics and include T_i which is equal to 1 if the person was chosen as leader. The model still doesn't see the alternative and predictions may be inconsistent across observations (f(x_A,1) should = f(x_B,0)) y ~ f(x_A, x_B, T_A) -- now the model sees both alternatives, but the ordering of inputs is very arbitrary; does A or B go in the first slot? I wanted advice on what's most standard to do here and how to evaluate which model is best. Do I care most about whether the model predicts y? or, since each choice is relative, how the predicted effect (f(A wins) - f(B wins)) is most related to y? Edits: Since the morality of this came up, this is purely a conceptual question. There's no actual organization or teams. If you prefer, think about a situation where I observe a series of binary choices, characteristics about the choices, which choice was made, and the ultimate outcome. I want to predict the 'best choices.' The choice is always binary between A & B, but the labels don't mean anything other than "first choice" and "second choice."
