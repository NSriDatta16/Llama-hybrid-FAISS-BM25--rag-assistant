[site]: stackoverflow
[post_id]: 2091593
[parent_id]: 
[tags]: 
How to elegantly write a SQL ORDER BY (which is invalid in inline query) but required for aggregate GROUP BY?

I have a simple query that runs in SQL 2008 and uses a custom CLR aggregate function, dbo.string_concat which aggregates a collection of strings. I require the comments ordered sequentially hence the ORDER BY requirement. The query I have has an awful TOP statement in it to allow ORDER BY to work for the aggregate function otherwise the comments will be in no particular order when they are concatenated by the function. Here's the current query: SELECT ID, dbo.string_concat(Comment) FROM ( SELECT TOP 10000000000000 ID, Comment, CommentDate FROM Comments ORDER BY ID, CommentDate DESC ) x GROUP BY ID Is there a more elegant way to rewrite this statement?
