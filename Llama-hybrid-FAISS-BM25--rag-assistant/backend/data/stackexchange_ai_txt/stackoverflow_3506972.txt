[site]: stackoverflow
[post_id]: 3506972
[parent_id]: 3503842
[tags]: 
It's been a while since I've dealt with frontend catalog pages, but give this a try. Current versions of Magento register certain global variables (not PHP globals, but things global to the Magento system) on certain pages. Calling the following $category = Mage::registry('current_category'); $product = Mage::registry('current_product'); $product = Mage::registry('product'); will either return null if the objects haven't been set (i.e. you're on a page without a category or a product), or return category and product objects. If a product object is returned you're on a product page. If no product object is returned but a category object is, you're on a category page. Category objects have a method to getting the parent id $category->getParentId() A category without a parent id should be a top level category, categories with parent ids should be sub-categories. That should give you what you need to identify where the current request is. UPDATE: Coming back to this almost a decade later -- I likely would not rely on the contents of the registry alone to determine the page I'm on. Instead I'd use the full action name in combination with looking for the above the objects.
