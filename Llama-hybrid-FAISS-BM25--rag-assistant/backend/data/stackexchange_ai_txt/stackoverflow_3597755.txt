[site]: stackoverflow
[post_id]: 3597755
[parent_id]: 3427999
[tags]: 
rq's answer is almost correct, but misses a couple of subtleties. Try this: bin_PROGRAMS = myprogram myprogram_SOURCES = Foo.c Foo.h FooHelper.h FooHelper.c $(OTHER_SOURCES) BUILT_SOURCES = Foo.c Foo.h FooHelper.h FooHelper.c EXTRA_DIST = Foo.idl MAINTAINERCLEANFILES = Foo.c Foo.h FooHelper.h FooHelper.c Foo.c: Foo.idl $(THE_GENERATE_COMMAND) Foo.h FooHelper.h FooHelper.c: Foo.c @if test -f $@; then \ touch $@; \ else \ ## Recover from the removal of $@ rm -rf $ The additional rules to "generate" Foo.h , FooHelper.h and FooHelper.c from Foo.c ensure that parallel builds won't try and run $(THE_GENERATE_COMMAND) twice. It is an idiom detailed in the Automake manual which will work for parallel builds. There is still a little fragility here: if the user removes (say) FooHelper.h and FooHelper.c and starts a parallel make, it may run the $(MAKE) $(AM_MAKEFLAGS) $ recovery part of the rule multiple times in parallel. As the manual says, this race can only going to happen if the user manually mutilates the build tree, and even then it's nothing a make clean; make cannot fix. The BUILT_SOURCES line ensures that Foo.c , Foo.h , FooHelper.h and FooHelper.c are built before trying to build myprogram (see this section of the Automake manual to see why just adding them to myprog_SOURCES is insufficient). The EXTRA_DIST variable ensures that the .idl file will be captured by make dist ( reference ). MAINTAINERCLEANFILES specifies additional files to delete when running make maintainer-clean ; this is to comply with the GNU Makefile Standards . See also the variable's description in the Automake manual .
