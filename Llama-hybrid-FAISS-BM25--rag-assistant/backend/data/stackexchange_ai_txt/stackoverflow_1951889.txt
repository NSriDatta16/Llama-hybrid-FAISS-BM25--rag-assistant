[site]: stackoverflow
[post_id]: 1951889
[parent_id]: 72931
[tags]: 
Good question. As for the 'making me type far too much', C++0x seems to address most of it as mentioned: auto it = lotsOfThingys.begin()) // ... deduce type, just like in *ML VS2010beta implements this already. As for the memory management - for efficiency - you will have to keep good track of memory allocations, with or without garbage collection (ie, make memory-pools, re-use allocated object sometimes) anyhow, so that eventually whether your environment is garbage collected or not, matters less. You'll have to explicitly call the gc() as well, to keep the memory from fragmenting. Having consistent ways to manage memory is important anywhere. RAII - is a killer feature of C++ Another thing - is that memory is just one resource, you still have to keep track of other resources with a GC, so RIAA. Anyhow, C# - is a nice alternative in many respects, I find it a very nice language, especially the ability to write functional-style code in it (the cute lambda -> syntax, map/select 'LINQ' syntax etc), thus the possibility to write parallel code; while it's still a 'standard curly-brackets', when you (or your colleagues) need it.
