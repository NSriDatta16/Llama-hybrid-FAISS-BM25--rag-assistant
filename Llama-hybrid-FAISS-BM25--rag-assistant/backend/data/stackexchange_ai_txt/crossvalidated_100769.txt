[site]: crossvalidated
[post_id]: 100769
[parent_id]: 100761
[tags]: 
I'll record my modelling thoughts as I create it: import pymc as pm How can I recreate this data? Well, N_T cars enter. Do I know N_T ? No, so it's a random variable. For simplicity, I'll say its a discrete uniform with max 1000 (you can change this to, say, a Poisson) N_T = pm.DiscreteUniform('N_T', 0, 1000) Of these N_T cars that enter, I know a car will enter A with probability p . Thus the number of cars through A is a binomial rv. But do I know p for certain? Probably not, you mentioned it was a historical average, so we should model this stochastically (using the beta-binomial model): p_A = pm.Beta('p_A', 50, 50) #centered at 0.5, but with some variance. This depends on your historical data. N_A = pm.Binomial('N_A', N_T, p_A) Next, only C percent of cars are recorded by A's observer. Let's just assume that C is completely accurate, i.e. there is no uncertainty about what C is: C=0.95 Then the number of cars recorded is again a binomial, with N_A trials. Furthermore, suppose observer A record 20 cars. obs_A = pm.Binomial('obs', N_A, C, observed=True, value = 20) Let's fire the mcmc canon: mcmc = pm.MCMC( [obs_A, N_A, p_A, N_T] ) mcmc.sample(10000, 5000) from pymc.Matplot import plot as mcplot mcplot(mcmc) And I get this posterior for N_T :
