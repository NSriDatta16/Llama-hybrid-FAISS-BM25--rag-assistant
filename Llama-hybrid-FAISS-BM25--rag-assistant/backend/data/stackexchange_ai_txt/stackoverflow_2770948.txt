[site]: stackoverflow
[post_id]: 2770948
[parent_id]: 2744387
[tags]: 
OK, not a nice solution but at the end it's working (because I have a defined limited set of records ca. 100): On intializing the app: I create an "order by" attribute in the managed object. I check if the localization (and with it the sort order) changed since last time. If so: I fetch all the records and sort it in an NSArray by localized names. I write back the records in the store For perfomance reason I only fetch and sort records according to a NSPredicate. Than I can use all the existing code using the "order by" as sort key and section key path. I know that I could use my ordered array as datasource for the table view, but I wanted to keep the existing code and use the methods of NSFetchedResultsController. As a convenience of this I have full control over the sorting, that will fit my needs in future since I plan to build a more complex sort ordering (location based, higher probability of use of the records at the top, etc.) However it's not an elegant solution.
