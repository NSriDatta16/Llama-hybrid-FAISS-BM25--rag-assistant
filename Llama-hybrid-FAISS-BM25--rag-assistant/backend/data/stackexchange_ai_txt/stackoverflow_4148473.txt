[site]: stackoverflow
[post_id]: 4148473
[parent_id]: 4131027
[tags]: 
After some more research, I was not able to find an elegant solution to this. Because re-loading elements from a xib file at each rotation seemed slow and eliminated any dynamic view-based data, I switched over to a code-based setup (i.e. no more xib files). I decided to create a method like this: // This is for an iPad root-level view controller. - (void)setupForOrientation:(UIInterfaceOrientation)orientation { if (UIInterfaceOrientationIsPortrait(orientation)) { CGRect bounds = CGRectMake(0, 0, 768, 1004); bkgImageView.frame = bounds; // Other view positioning for portrait. } else { CGRect bounds = CGRectMake(0, 0, 1024, 748); bkgImageView.frame = bounds; // Other view positioning for landscape. } [self drawBackgroundForOrientation:orientation]; } This method is called from the shouldAutorotateToInterfaceOrientation: method, and handed the new orientation.
