[site]: stackoverflow
[post_id]: 1993860
[parent_id]: 1989987
[tags]: 
Most OCR algorithms these days are based on neural network algorithms. Hopfield networks are a good place to start. Based on the Hopfield Model available here in C , I built a very basic image recognition algorithm in python similar to what you describe. I've posted the full source here . It's a toy project and not suitable for real OCR, but can get you started in the right direction. The Hopfield model is used as an autoassociative memory to store and recall a set of bitmap images . Images are stored by calculating a corresponding weight matrix. Thereafter, starting from an arbitrary configuration, the memory will settle on exactly that stored image, which is nearest to the starting configuration in terms of Hamming distance. Thus given an incomplete or corrupted version of a stored image, the network is able to recall the corresponding original image. A Java applet to toy with an example can be found here ; the network is trained with example inputs for the digits 0-9. Draw in the box on the right, click test and see the results from the network. Don't let the mathematical notation intimidate you, the algorithms are straightforward once you get to source code.
