[site]: stackoverflow
[post_id]: 3873220
[parent_id]: 3872852
[tags]: 
In the case of num: num is a global property. If you have that knowledge (that it is a global property), then you know that you can access it like so: window.num In the case of y: y is a property that is in the scope chain of the function that was created by executing adder(5). That function has access to the value of y, but the code outside of that function does not have access to it. var closureFunction = adder(5); The function closureFunction has the y property in its scope chain, and if you run this function, the value of y will be added to the passed-in argument. However, if you refactor your code you could enable the retrieval of the value of y. Your code: var adder = function(y) { return function(x) { return x + y; }; }; Refactored code: var adder = function(y) { var fn = function(x) { return x + y; }; fn.getArgument = function() { return y; }; return fn; }; Now you can get y like so: closureFunction.getArgument(); This should be thought trough.
