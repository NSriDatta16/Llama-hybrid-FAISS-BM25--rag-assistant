[site]: stackoverflow
[post_id]: 5195459
[parent_id]: 5195412
[tags]: 
The static keyword specifies that the life-time of the given the variable, function or class is application-wide. Like having a single instance. This example might illustrate it: #include using namespace std; void test() { static int i = 123; if (i == 123) { i = 321; } cout The output is: 321 321 So "i" is only initialized the first time it is encountered, so to speak. But actually it's allocated at compile time for that function. Afterwards, it's just in the scope of the function test() as a variable, but it is static so changing it changes it in all future calls to test() as well. But I encourage you to read more about it here: http://www.cprogramming.com/tutorial/statickeyword.html
