[site]: stackoverflow
[post_id]: 1012921
[parent_id]: 1012741
[tags]: 
There are four hypothetical paths through that function. Each if-clause doubles the number of paths. Each if-statement is a branch where you can go two different ways. So whenever your tool encounters an "if", it assumes the code can either take the "true" branch or the "false" branch. However, this is not always possible. Consider: bool x = true; if (x) { do_something(); } The "false" branch of the if-statement is unreachable. This is an obvious example, but when you factor in several if-statements it becomes increasingly difficult to see whether a path is possible or not. There are only three possible paths in your code. The path that takes the "false" branch in the first if statement and the "true" branch in the second is unreachable. Your tool is not smart enough to realize that. That being said, even if the tool is perfect, obtaining 100 % path coverage is probably unlikely in a real application. However, very low path coverage is a sure sign that your method has too high cyclomatic complexity.
