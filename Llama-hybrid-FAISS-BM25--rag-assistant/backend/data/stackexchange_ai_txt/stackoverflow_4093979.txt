[site]: stackoverflow
[post_id]: 4093979
[parent_id]: 4093103
[tags]: 
If a library doesn't expose its internals to you, then no, there's generally no way to get them. You could try hooking an API function that you know the library must call, and then intercept its parameters or return value where you know the socket value must be, but that's a big hack and probably pretty fragile. Instead, you could look harder into what the library does expose. Maybe it exposes the socket value under a name you don't recognize, or maybe it provides its own way of manipulating the socket's properties so you don't need to use the APIs you're planning to use. For all you know, using the APIs might interfere with how the library works anyway. If all that fails, you could ditch your current socket library for a different one. There's no shortage of libraries to choose from. In addition to Delphi's built-in socket components, you have Indy , ICS , and Synapse ; all are native Delphi libraries, so you have access to anything you want.
