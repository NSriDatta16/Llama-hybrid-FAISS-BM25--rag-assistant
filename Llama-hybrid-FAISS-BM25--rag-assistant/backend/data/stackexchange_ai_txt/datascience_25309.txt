[site]: datascience
[post_id]: 25309
[parent_id]: 
[tags]: 
Can I use a regression machine learning model for predicting a vector with multiple values?

Introduction I have a large CSV file with about 400 rows . Each row contains 1000 x values and 400 y values . Thus, my current model is taking in a row of 1000 x values and predicting a row of 400 y values: (input) 1000 x values ----> (neural network) ----> 400 y values (output prediction) The challenge is the 400 y values are not one hot vectors.E.g, they are not all zero's with 1 y having a value: [0,0,0,0,0,...,1,0,0] The 400 y values actually contain multiple discrete values, like so: [0,13,0,23,5,...,1,85,0] Keras model: # Intialize the artificial neural network model = Sequential() # Input layer and hidden layer model.add(Dense(activation="relu", input_dim=1000, units=700, kernel_initializer="uniform")) # Dropout to aid overfitting model.add(Dropout(0.285)) # Output layer model.add(Dense(activation="linear", input_dim=700, units=400, kernel_initializer="uniform")) # Compile the ANN model.compile(optimizer="adagrad", loss="mean_squared_error", metrics=["accuracy"]) Then I fit my data to the training set: # Fit the ANN to the training set model = baseline_model() result = model.fit(X_train, y_train, batch_size=10, nb_epoch=200, validation_data=(X_test, y_test)) Question Is it okay to use my model for this machine learning problem? Or is my neural network in Keras incorrect?
