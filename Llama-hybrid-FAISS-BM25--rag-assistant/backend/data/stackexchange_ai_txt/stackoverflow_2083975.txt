[site]: stackoverflow
[post_id]: 2083975
[parent_id]: 2083741
[tags]: 
There is a file web.xml at war/WEB-INF. You can enter the following in the file. myApp1 /hello/dolly myApp2 /bye/bunny myApp1 misc.apps.enter.theDragon myApp2 misc.apps.enter.theDragon Here is the explanation: Define a servlet identifier myApp1. Define the context-relative url pattern/path of myApp1 as /hello/dolly Similarly, for identifier myApp2, define context-relative url pattern/path as /bye/bunny Then associate myApp1 to the servlet misc.apps.enter.theDragon. As well as, associate myApp1 to the servlet misc.apps.enter.theDragon. So, now both paths /hello/dolly /bye/bunny actually end up calling the same servlet misc/apps/enter/theDragon.java Then inside the servlet code misc/apps/enter/theDragon.java you have the code this.requestUri = request.getRequestURI(); if (this.requestUri.contains("/hello/dolly")){ happyRoutine(); else // if (this.requestUri.contains("/bye/bunny")) { response.redirect("whatever page"); } But, you want to map a jsp not a non-jsp servlet, don't you? Take a look at the web.xml entries below and I am sure you do not need any further explanation of how two url paths is being mapped to the same jsp. Then, inside the jsp, again use request.getRequestURI() to find out which url was used to invoke the jsp and then make the respective actions you wish to make. empJSP1 /hello/dolly empJSP2 /bye/bunny empJSP1 /employees/emp.jsp empJSP2 /employees/emp.jsp
