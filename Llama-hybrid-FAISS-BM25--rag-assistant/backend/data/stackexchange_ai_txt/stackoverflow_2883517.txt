[site]: stackoverflow
[post_id]: 2883517
[parent_id]: 2835777
[tags]: 
Well since no one else has tried to answer this one, I'll toss out my opinion. Bear in mind that I've never used protobuf (which is why I've not answered already), so this is all just based on my loose understanding of things and how, if I had this problem to solve, I would proceed. First, I've got reservations about sticking blobs into a relational database. This may go back to my bad experiences way, way back in the stone age times of VB6 and may be invalid, but it still gives me pause. As such, I'd probably investigate some other object-storage mechanisms (like Perst or db4o ) before trying it. As due diligence, I'd also at least profile stuffing blobs into a SQLCE database. Why SQLCE instead of SQlLite or some other RDMS? Well, becasue SQLCE supports TableDirect, which I'm a huge fan of. Any time you can access the data without having to use a slow-ass query processor, you're way ahead. So I'd create a table, give it a couple small look-up columns that I might search on, then an image column holding some large binary blob (the actual blob is not relevent for the test, but it needs to be reasonably close in size to what you expect in production). I'd then add indexes for each of the search columns. I'd fill the table with a few thousand records and then profile the speed at which I could seek to a desired key (i know that's fast) and more importantly the speed at which I can rehydrate my objects. I'd then weight the costs (time to develop, opportunity cost, opportunities for reusability etc) of the options and make the decision. I'd probably blog about the results too, as it seems like a problem that would be of a fairly broad interest.
