[site]: crossvalidated
[post_id]: 449879
[parent_id]: 449846
[tags]: 
You appear to be referring to the view of the computation graph provided by tensorboard or a similar visualization tool. Typically, these visualization tools don't draw every weight as a separate edge -- that would not really be feasible, since neural networks can have hundreds of millions to billions of parameters, which I doubt most plotting software could handle. So you might decide that it makes more sense to just show the "vectorized form" and have a single edge to represent a linear layer ( $x \mapsto Wx$ ) or a bias ( $x \mapsto x+b$ ). In this way a single neural network layer of arbitrary size could be represented with just a few edges and nodes. However, even this is too granular to be useful -- for example modern neural networks are often composed of many "blocks", and each block may have several layers, so typically an entire block or even the entire neural network may be drawn as a single node in the graph. Since many models are built by smashing together a bunch of other neural network components as necessary, having a much higher level visualization of the computation graph is often useful. Finally one more thing to keep in mind -- some frameworks have tools so that programmers can manually label and provide hints about how the computation graph should be organized for plotting. Without these explicit labelings, visualization tools often have to resort to heuristics and guesswork about how to draw the graph -- and the results are often quite subpar and confusing.
