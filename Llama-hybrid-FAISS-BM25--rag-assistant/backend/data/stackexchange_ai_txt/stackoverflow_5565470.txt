[site]: stackoverflow
[post_id]: 5565470
[parent_id]: 
[tags]: 
How to implement critical section in Azure

How do I implement critical section across multiple instances in Azure? We are implementing a payment system on Azure. When ever account balance is updated in the SQL-azure, we need to make sure that the value is 100% correct. But we have multiple webroles running, thus they would be able to service two requests concurrently from different customers, that would potentially update current balance for one single product. Thus both instances may read the old amount from database at the same time, then both add the purchase to the old value and the both store the new amount in the database. Who ever saves first will have it's change overwritten. :-( Thus we need to implement a critical section around all updates to account balance in the database. But how to do that in Azure? Guides suggest to use Azure storage queues for inter process communication. :-) They ensure that the message does not get deleted from the queue until it has been processed. Even if a process crash, then we are sure that the message will be processed by the next process. (as Azure guarantee to launch a new process if something hang) I thought about running a singleton worker role to service requests on the queue. But Azure does not guarantee good uptime when you don't run minimum two instances in parallel. Also when I deploy new versions to Azure, I would have to stop the running instance before I can start a new one. Our application cannot accept that the "critical section worker role" does not process messages on the queue within 2 seconds. Thus we would need multiple worker roles to guarantee sufficient small down time. In which case we are back to the same problem of implementing critical sections across multiple instances in Azure. Note: If update transaction has not completed before 2 seconds, then we should role it back and start over. Any idea how to implement critical section across instances in Azure would be deeply appreciated.
