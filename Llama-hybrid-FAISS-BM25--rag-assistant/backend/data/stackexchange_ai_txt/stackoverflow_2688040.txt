[site]: stackoverflow
[post_id]: 2688040
[parent_id]: 
[tags]: 
how to callback a lua function from a c function

I have a C function (A) test_callback accepting a pointer to a function(B) as the parameter and A will "callback" B. //typedef int(*data_callback_t)(int i); int test_callback(data_callback_t f) { f(3); } int datacallback(int a ) { printf("called back %d\n",a); return 0; } //example test_callback(datacallback); // print : called back 3 Now, I want to wrap test_callback so that they can be called from lua, suppose the name is lua_test_callback ;and also the input parameter to it would be a lua function. How should I achieve this goal? function lua_datacallback (a ) print "hey , this is callback in lua" ..a end lua_test_callback(lua_datacallback) //expect to get "hey this is callback in lua 3 " EDIT: This link provide a way to store the callback function for later use . //save function for later use callback_function = luaL_ref(L,LUA_REGISTRYINDEX); //retrive function and call it lua_rawgeti(L,LUA_REGISTRYINDEX,callback_function); //push the parameters and call it lua_pushnumber(L, 5); // push first argument to the function lua_pcall(L, 1, 0, 0); // call a function with one argument and no return values
