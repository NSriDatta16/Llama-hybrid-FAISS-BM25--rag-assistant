[site]: stackoverflow
[post_id]: 2676311
[parent_id]: 2672069
[tags]: 
Well, if analysis fails, reach for a computer and do a silly amount of calculation until you get a feel for the numbers ... I too have a copy of Mathematica. To keep things simple, since a triangle must lie in a plane, I've worked the following in 2D space. To keep things extra simple, I specify a point at {0,0} and a line segment from {1,0} to {0,1} . The average distance from point to line must be, if it is meaningful, the average length of all the lines which could be drawn from {0.0} to anywhere on the line segment. Of course, there are an awful lot of such lines, so let's start with, say, 10. In Mathematica this might be computed as Mean[Table[EuclideanDistance[{0, 0}, {1 - k, 0 + k}], {k, 0, 1, 10.0^-1}]]] which gives 0.830255 . The next step is obvious, make the number of lines I measure larger. In fact, let's make a table of averages as the exponent of 10.0 gets smaller (they're negative !). In Mathematica: Table[Mean[Table[EuclideanDistance[{0, 0}, {1 - k, 0 + k}], {k, 0, 1, 10.0^-i}]], {i, 0, 6}] which produces: {1, 0.830255, 0.813494, 0.811801, 0.811631, 0.811615, 0.811613} Following this approach I re-worked @Dave's example (forget the third dimension): Table[Mean[Table[EuclideanDistance[{0, 0}, {4, 0 + 3 k}], {k, 0, 1, 10.0^-i}]], {i, 0, 6}] which gives: {9/2, 4.36354, 4.34991, 4.34854, 4.34841, 4.34839, 4.34839} This does not agree with what @dreeves says @Dave's algorithm computes. EDIT: OK, so I've wasted some more time on this. For the simple example I used in the first place, that is with a point at {0,0} and a line segment extending from {0,1} to {1,0} I define a function in Mathematica (as ever), like this: fun2[k_] := EuclideanDistance[{0, 0}, {0 + k, 1 - k}] Now, this is integratable. Mathematica gives: In[13]:= Integrate[fun2[k], {k, 0, 1}] Out[13]= 1/4 (2 + Sqrt[2] ArcSinh[1]) Or, if you'd rather have numbers, this: In[14]:= NIntegrate[fun2[k], {k, 0, 1}] Out[14]= 0.811613 which is what the purely numerical approach I took earlier gives. I'm now going to get back to work, and leave it to you all to generalise this to an arbitrary triangle defined by a point and the end-points of a line segment.
