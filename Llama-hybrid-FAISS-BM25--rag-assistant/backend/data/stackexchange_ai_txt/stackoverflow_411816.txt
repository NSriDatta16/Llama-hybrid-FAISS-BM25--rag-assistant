[site]: stackoverflow
[post_id]: 411816
[parent_id]: 411798
[tags]: 
Find out who wrote it. Are they an idiot? Are they you from a few years ago? Can you ask them questions? Are they familiar with the existence of multiple platforms and systems? Knowing the mind-set of the author(s) of the program will help you understand problems when you run into them. Get a 64-bit machine/build environment up and running. Replace long with int. Be perfectly aware that LONG is not long . Replace (int)&x casts and typing with intptr_t and (unsigned int)&x with uintptr_t Audit anything that relies on casting structures to char* to do pointer arithmetic with it. Regex search for \ in case you assumed 4 = sizeof(void*) Be patient. When you find a problem, look elsewhere if the same problem exists, and wrap the solution in a macro. Try not to use #ifdef RUN64 or anything similar. You'll regret it if 128-bit platforms ever go into vogue. Encapsulate all of your changes in terms of some centralized macros that'll hide the portability differences elsewhere in your program. Use a coverage tester to help make sure you've covered everything (if appropriate) EDIT added uintptr_t note as suggested by comment.
