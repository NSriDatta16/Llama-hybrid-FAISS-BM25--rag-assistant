[site]: stackoverflow
[post_id]: 2908971
[parent_id]: 
[tags]: 
How does MonoTouch autogenerate XIB code behind?

I'm a C# programmer dabbling in a bit of iPhone development using MonoTouch. I add a new View Interface Definition to my project and double click to open it up in Interface Builder. I add a UIButton. I save the file, and inspect the xib.designer.cs file, and I can see no reference to the new button. I downloaded the code from http://monotouchexamples.com/ where I could see an example of autogenerated code behind : [MonoTouch.Foundation.Connect("infoButton")] private MonoTouch.UIKit.UIButton infoButton { get { return ((MonoTouch.UIKit.UIButton)(this.GetNativeField("infoButton"))); } set { this.SetNativeField("infoButton", value); } } I opened up MainWindow.xib in interface builder. I notice a few differences. File's Owner is of type UIApplication instead of NSObject. What is the importance of this? There is an App Delegate object of type AppDelegate. I can't add an AppDelegate to my own view, or at least I can't find it in the Library. Do I need to add one? I can see that the existing controls on MainWindow.xib have Referencing Outlets to the App Delegate. I add a new button and I want to hook it up. When I click and drag a New Referencing Outlet to the App Delegate a context menu appears that lists the existing controls. How do I add a new element to this list, or where does this list come from? I've been spoilt by the Visual Studio world where I just dump a button on a form and start writing code for the click event. Could someone provide some pointers about the steps needed to get this working on MonoTouch? Thanks, Patrick
