[site]: stackoverflow
[post_id]: 5267725
[parent_id]: 5267212
[tags]: 
Using the approach detailed at http://www.sommarskog.se/error_handling_2005.html seems to be working sufficiently so far. It has only required an update to the top level stored procedure and will output the name of the stored procedure that failed and the line number to SQL agent. The output error will look like this: Executed as user: NT AUTHORITY\NETWORK SERVICE. *** [InnerInnerStoredProc2], 5. Errno 208: Invalid object name 'NonExistentTable'. [SQLSTATE 42000] (Error 50000) Start [SQLSTATE 01000] (Error 0). The step failed. Summary of steps: Create the following error handler stored procedure: CREATE PROCEDURE error_handler_sp AS DECLARE @errmsg nvarchar(2048), @severity tinyint, @state tinyint, @errno int, @proc sysname, @lineno int SELECT @errmsg = error_message(), @severity = error_severity(), -- 10 @state = error_state(), @errno = error_number(), @proc = error_procedure(), @lineno = error_line() IF @errmsg NOT LIKE '***%' -- 11 BEGIN SELECT @errmsg = '*** ' + coalesce(quotename(@proc), ' ') + ', ' + ltrim(str(@lineno)) + '. Errno ' + ltrim(str(@errno)) + ': ' + @errmsg RAISERROR(@errmsg, @severity, @state) END ELSE RAISERROR(@errmsg, @severity, @state) go Wrap the top level stored proc in a try catch as follows BEGIN TRY SET NOCOUNT ON SET XACT_ABORT ON EXEC InnerStoredProc1 EXEC InnerStoredProc2 END TRY BEGIN CATCH IF @@trancount > 0 ROLLBACK TRANSACTION EXEC error_handler_sp RETURN 55555 END CATCH
