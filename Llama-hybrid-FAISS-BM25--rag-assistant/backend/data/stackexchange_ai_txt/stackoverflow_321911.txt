[site]: stackoverflow
[post_id]: 321911
[parent_id]: 298962
[tags]: 
I use a custom LinqToSQL generator, built upon one I found in the Internet, in place of the default MSLinqToSQLGenerator. To make my upper layers independent of such Linq objects, I create interfaces to represent each one of them and then use such interfaces in these layers. Example: public interface IConcept { long Code { get; set; } string Name { get; set; } bool IsDefault { get; set; } } public partial class Concept : IConcept { } [Table(Name="dbo.Concepts")] public partial class Concept { private long _Code; private string _Name; private bool _IsDefault; partial void OnCreated(); public Concept() { OnCreated(); } [Column(Storage="_Code", DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true)] public long Code { //*** } [Column(Storage="_Name", DbType="VarChar(50) NOT NULL")] public string Name { //*** } [Column(Storage="_IsDefault", DbType="Bit NOT NULL")] public bool IsDefault { //*** } } Of course there is much more than this, but that's the idea.
