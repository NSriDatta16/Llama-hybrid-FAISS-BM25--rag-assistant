[site]: crossvalidated
[post_id]: 610818
[parent_id]: 610700
[tags]: 
I suspect that the problems with your residual plots come from some mis-specification of the model. The DHARMa vignette shows some ways to look for such problems via its simulated residuals. In particular, the numInfluencers has integer values that range from 0 to 4. You are treating that as having an exactly linear association with outcome at treatment=0 (the individual coefficient for numInfluencers ) and a linear interaction with treatment . You might need to fit that more flexibly: is the effect of moving from 0 to 1 influencers really expected to be the same as moving from 3 to 4? Also, the trial number in your model has a fixed association with outcome independent of treatment ; I wonder whether that's realistic. With respect to the choice between the log-transformed and Gamma models, as a biologist I personally find the log transformations easier to think about. That might be because I've been thinking about log transformations for about 60 years, ever since I learned the relationship between pH and hydrogen-ion activity, but I've not had much cause to think about how to interpret a Gamma-distributed variable with a log link between its mean and a linear predictor. If your audience understands that, or you can explain it simply to them, then the Gamma model does get around the potential confusion with the log-transformed data, where you are modeling the mean of the logs instead of the log of the mean. My comment to @dipetkov about ordinal regression was more for her benefit, as you seem to be handling the repeated measures well enough with your mixed models. The orm() function doesn't handle random effects. Another way to deal with repeated measures, without modeling random effects explicitly, is to fit a model as if the repeated measures don't matter (a "working independence" assumption), then calculate a "robust" or "sandwich" variance-covariance matrix for the coefficient estimates based on the "clusters" in your data, that takes the repeated measures into account. You might apply that in your situation if you treated group as a fixed effect and treated the pairs as the clustering variable. That's what the robcov() function can do with an orm model. (With only 4 levels of group you might consider treating it as fixed in your mixed model, anyway.) I think that the Bayesian ordinal mixed modeling in the rmsb package only allows for a single random effect, so you might have to treat group as a fixed effect were you to try that.
