[site]: stackoverflow
[post_id]: 5471294
[parent_id]: 5471018
[tags]: 
Write a wrapper for JOptionPane - this is definitely the most robust option, and also allows you to write convenient short-hand methods for yourself. I'd pick this one. If, like myself and most other developers, you already have some GUI helper class somewhere in your project, they can go there. Use an instance - not a bad solution, but definitely not as easy to manage as a call to a single static method. I wouldn't say the added complexity was worth it. Use a Robot to mock the inputs - yes, that sounds extremely fragile to me. You become dependent on the internal structure and implementation details of JOptionPane at that point, which is not a good place to be. JOptionPane s' behaviors and button order may also vary under different look-and-feels (i.e. OK, Cancel vs. Cancel, OK). Finally, this won't work in a headless environment (although if you're already using JOptionPane s in your tests, and plan on always testing on a desktop machine, that isn't a concern).
