[site]: stackoverflow
[post_id]: 4562095
[parent_id]: 4561813
[tags]: 
Would Learning C teach me enough computer science theory / low level programming to not look like a common dandy (complete tool)? You're using C# which can perform unmanaged pointer manipulation, not too far off what you can achieve in C++ land. For instance, games can be successfully programmed in C#, although most games will be C++. Assembler is basically moving bits of memory around and sometimes doing a bad job of it too if you don't know what you're doing. C++/C compilers create quite good assembly code underneath, so why would you do it yourself unless you had to write low-level driver software. The only bit of assembler in our 2,000,000 lines of mixed C++/C# code is to detect VMWare. I don't think in this modern age and given your description of your job there is much call for you to know about how many registers you can use on your processor. By all means learn C++, but as mentioned before, learning syntax is not the same as learning how to apply it. At a minimum learn and understand patterns ( Gang of four ), OO design, understand the implications and benefits of different testing methodologies and the impact of all this on business costs.
