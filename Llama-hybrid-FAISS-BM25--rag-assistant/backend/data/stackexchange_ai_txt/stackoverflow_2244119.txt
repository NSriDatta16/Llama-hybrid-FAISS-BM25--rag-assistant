[site]: stackoverflow
[post_id]: 2244119
[parent_id]: 2244010
[tags]: 
Everytime you insert a new key,value pair the map will allocate a node to store it. The details of how this allocation takes place are determined by the allocator that the map uses. By default when you create a map as in std::map the default allocator is used, which creates nodes on the heap (i.e., with new / delete ). You don't want that, so you'll have to create a custom allocator class that creates nodes as dictated by your memory manager. Creating an allocator class is not trivial. This code shows how it can be done, you'll have to adapt it to your own needs. Once you have your allocator class (let's say you call it MemManagerAllocator ) you'll have to define your map as std::map and then use it like you would use a regular map. Personally, I would need to have a really bad problem of memory fragmentation to go into all that trouble.
