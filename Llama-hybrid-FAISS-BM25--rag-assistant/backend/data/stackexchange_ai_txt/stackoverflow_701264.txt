[site]: stackoverflow
[post_id]: 701264
[parent_id]: 
[tags]: 
Is there a standard 3rd party Python caching class?

I'm working on a client class which needs to load data from a networked database. It's been suggested that adding a standard caching service to the client could improve it's performance. I'd dearly like not to have to build my own caching class - it's well known that these provide common points of failure. It would be far better to use a class that somebody else has developed rather than spend a huge amount of my own time debugging a home-made caching system. Java developers have this: http://ehcache.sourceforge.net/ It's a general purpose high-performance caching class which can support all kinds of storage. It's got options for time-based expiry and other methods for garbage-collecting. It looks really good. Unfortunately I cannot find anything this good for Python. So, can somebody suggest a cache-class that's ready for me to use. My wish-list is: Ability to limit the number of objects in the cache. Ability to limit the maximum age of objects in the cache. LRU object expirey Ability to select multiple forms of storage ( e.g. memory, disk ) Well debugged, well maintained, in use by at least one well-known application. Good performance. So, any suggestions? UPDATE: I'm looking for LOCAL caching of objects. The server which I connect to is already heavily cached. Memcached is not appropriate because it requires an additional network traffic between the Windows client and the server.
