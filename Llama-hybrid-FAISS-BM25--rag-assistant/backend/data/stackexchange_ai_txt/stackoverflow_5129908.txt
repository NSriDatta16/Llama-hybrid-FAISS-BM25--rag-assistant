[site]: stackoverflow
[post_id]: 5129908
[parent_id]: 5121350
[tags]: 
I see two problems in your code. The first one is more cosmetic, but the correct solution can simplify many things in the future. The first problem is that you add manual the "TOTAL" row as a part of grid data and calculate the values in the row inside calculateTotal function. The better way is to use footerrow:true option, which add additional row at the bottom of grid which will be not mixed with the grid data. For server based data you can use userdata part of JSON or XML response from the server and use userDataOnFooter:true additionally to till the data from the userData jqGrid parameter to the footer row. In case of "local" datatype one can use footerData method to set (or get) the data in the footer. Additionally the method getCol can be used co calculate the sum of elements in the column. So your version of calculateTotal function can be rewritten as var grid = $("#list"); var calculateTotal = function() { var totalAmount = grid.jqGrid('getCol','amount',false,'sum'), totalTax = grid.jqGrid('getCol','tax',false,'sum'); grid.jqGrid('footerData','set',{name:'TOTAL',amount:totalAmount,tax:totalTax}); } Now to your main problem. You use cell edit mode. If the function calculateTotal (your original or my simplified version) will be called at the time when one from the cells of the 'amount' or 'tax' are in the editing mode, the calculateTotal will be read HTML fragment with element instead of the string with the number and the calculation will failed. I created the small demo which call calculateTotal every second. So if you click on any cell from the 'amount' or 'tax' column you will see that in the footer row 0 will be displayed as the sum. So the demo having cellsubmit:'clientArray' has the same problem as in your original code with cellsubmit:'remote' . To solve the problem one can use data parameter of jqGrid during the sum calculation: var grid = $("#list"); var calculateTotal = function() { var gridData = grid.jqGrid('getGridParam','data'), i=0,totalAmount=0,totalTax=0; for (;i The corresponding fixed demo you will find here . In your final code you can remove setInterval(calculateTotal, 1000); which I used for demonstration purpose only and refresh the footer in the afterSaveCell event handler only. UPDATED : If you work with remote data you can not use data parameter. So one have to get data from the element if needed. I created one more demo which demonstrate how one can do this. The code of calculateTotal will be longer: var getColumnIndexByName = function(grid,columnName) { var cm = grid.jqGrid('getGridParam','colModel'); for (var i=0,l=cm.length; i tr.jqgrow > td:nth-child("+(i+1)+")",grid[0]).each(function() { totalAmount += Number(getTextFromCell(this)); }); i=getColumnIndexByName(grid,'tax'); $("tbody > tr.jqgrow > td:nth-child("+(i+1)+")",grid[0]).each(function() { totalTax += Number(getTextFromCell(this)); }); grid.jqGrid('footerData','set',{name:'TOTAL',amount:totalAmount,tax:totalTax}); };
