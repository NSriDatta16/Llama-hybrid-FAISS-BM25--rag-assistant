[site]: datascience
[post_id]: 13815
[parent_id]: 
[tags]: 
How to deal with item belonging to more than one category

So I'm training a classification task which takes as input some description of the state of a 2x2x2 rubix cube and outputs the optimal move to take. And a potential problem I noticed is that in many states more than one move is optimal. In particular, only about 46% of states have only one optimal move, and 24% have 2, 12% have three, etc. So I have a few choices. The options I thought of were have each data point choose an optimal move at random Do cross-entropy minimization with the data point containing the same probability for each optimal move. i.e (0.5,0.5,0,0,0,0,0,0,0) if the first two are optimal Discard states with more than one optimal move (this seems really bad) What is the standard practice? Also, is there a difference between 1 and 2? If necessary you may assume that I'm using a neural network model
