[site]: stackoverflow
[post_id]: 1034352
[parent_id]: 1034268
[tags]: 
The best thing you can do is to profile your application code. Find out which calls are consuming so much of your resources. Here are some options (the first three Google hits for "php profiler"): Xdebug NuSphere PhpED DBG You might have some SQL queries that are very slow, but if they are run infrequently, they probably aren't a major cause of your performance problems. It may be that you have SQL queries that are more speedy, but they are run so often that their net impact to performance is greater. Profiling the application will help identify these. The most general-purpose advice for improving application performance with respect to database usage is to identify data that changes infrequently, and put that data in a cache for speedier retrieval. It's up to you to identify what data would benefit from this the most, since it's very dependent on your application usage patterns. As far as technology for caching, APC and memcached are options with good support in PHP. You can also read through the MySQL optimization chapter carefully to identify any improvements that are relevant to your application. Other good resources are MySQL Performance Blog , and the book " High Performance MySQL ." If you're serious about running a MySQL-based website, you should be consulting these resources frequently.
