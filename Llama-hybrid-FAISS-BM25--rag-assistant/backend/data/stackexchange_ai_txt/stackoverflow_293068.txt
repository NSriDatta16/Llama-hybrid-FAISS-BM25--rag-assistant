[site]: stackoverflow
[post_id]: 293068
[parent_id]: 105838
[tags]: 
Finding the median in average-case O(n). Equivalent to finding the k-th largest item in a list of n things, with k=n/2: int kthLargest(list, k, first, last) { j = partition(list, first, last) if (k == j) return list[j] else if (k Here, partition picks a pivot element, and in one pass through the data, rearranges the list so that items less than the pivot come first, then the pivot, then items bigger than the pivot. The "kthLargest" algorithm is very similar to quicksort, but recurses on only one side of the list. For me, this is the simplest recursive algorithm that runs faster than an iterative algorithm. It uses 2*n comparisons on average, regardless of k. This is much better than the naive approach of running k passes through the data, finding the minimum each time, and discarding it. Alejo
