[site]: stackoverflow
[post_id]: 4383894
[parent_id]: 4383754
[tags]: 
For this situation (and INotifyPropertyChanged ) I tend to go with a private static class declaring all the property names as constants: public class Customer : INotifyPropertyChanging, INotifyPropertyChanged, IDataErrorInfo, etc { private static class Properties { public const string Email = "Email"; public const string FirstName = "FirstName"; } } There's still a little repetition but it's worked fine for me on a few projects. As for organizing the validation... You could consider a separate CustomerValidator class to be supplied at run-time. You can then swap different implementations for different contexts. So, for example, new customers could be validated differently to existing ones without a mess of conditionals.
