[site]: stackoverflow
[post_id]: 2151448
[parent_id]: 2151049
[tags]: 
You need to declare the prototype for your event handler, and a member variable to hold event handlers that have been registered in the class owns the treeview. // this class exists so that you can pass arguments to the event handler // public class FooEventArgs : EventArgs { public FooEventArgs (int whatever) { this.m_whatever = whatever; } int m_whatever; } // this is the class the owns the treeview public class MyClass: ... { ... // prototype for the event handler public delegate void FooCustomEventHandler(Object sender, FooEventArgs args); // variable that holds the list of registered event handlers public event FooCustomEventHandler FooEvent; protected void SendFooCustomEvent(int whatever) { FooEventArgs args = new FooEventArgs(whatever); FooEvent(this, args); } private void OnBtn_Click(object sender, System.EventArgs e) { SendFooCustomEvent(42); } ... } // the class that needs to be informed when the treeview changes // public class MyClient : ... { private MyClass form; private Init() { form.FooEvent += new MyClass.FooCustomEventHandler(On_FooCustomEvent); } private void On_FooCustomEvent(Object sender, FooEventArgs args) { // reorganize back end data here } }
