[site]: crossvalidated
[post_id]: 423597
[parent_id]: 289016
[tags]: 
The simulation exercise just tests whether your program has no bugs , that is, whether the algorithm you implemented correctly reflects the mathematics you want to use. Bayesian models are not corrected: they are updated – that's an important point of the theory. There's no way to "test" the model: to do that we'd need to know what future data we'll get – which is exactly our original problem and what we're trying to guess! There's of course the point that the models we use in our algorithms are often very simplified pictures of the complex beliefs that lie in the backs of our minds – that's why they're called "models". In this case there's an approximate update process going on in our mind which cannot be reflected in the simplified model we put on paper. In this case we start over with a new model, a new picture, which better reflects our complex beliefs. For example we use an exchangeable model for a sequence of coin tosses, and suddenly we start to see an alternating pattern in the outcomes: tail, head, tail, head, tail, head, tail, head,... The exchangeable model was too simple and will never be able to update to reflect the alternating pattern. But in our mind we're always watching for such kinds of patterns, even when we barely believe in them. So the alternating data will start increasing our belief in a non-exchangeable pattern, and we will have to cross out the one on paper, which was only a simplified picture, and replace it with a different simplified picture, for example a time-series model. But neither the model on paper or the complex beliefs in your minds can be "tested" – they're simply updated.
