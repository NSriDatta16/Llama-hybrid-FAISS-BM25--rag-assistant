[site]: stackoverflow
[post_id]: 841140
[parent_id]: 9033
[tags]: 
I am so so late to this question, but I wanted to add a few that I don't think have been covered. These aren't C#-specific, but I think they're worthy of mention for any C# developer. AmbientValueAttribute This is similar to DefaultValueAttribute , but instead of providing the value that a property defaults to, it provides the value that a property uses to decide whether to request its value from somewhere else. For example, for many controls in WinForms, their ForeColor and BackColor properties have an AmbientValue of Color.Empty so that they know to get their colors from their parent control. IsolatedStorageSettings This is a Silverlight one. The framework handily includes this sealed class for providing settings persistence at both the per-application and per-site level. Flag interaction with extension methods Using extension methods, flag enumeration use can be a lot more readable. public static bool Contains( this MyEnumType enumValue, MyEnumType flagValue) { return ((enumValue & flagValue) == flagValue); } public static bool ContainsAny( this MyEnumType enumValue, MyEnumType flagValue) { return ((enumValue & flagValue) > 0); } This makes checks for flag values nice and easy to read and write. Of course, it would be nicer if we could use generics and enforce T to be an enum, but that isn't allowed. Perhaps dynamic will make this easier.
