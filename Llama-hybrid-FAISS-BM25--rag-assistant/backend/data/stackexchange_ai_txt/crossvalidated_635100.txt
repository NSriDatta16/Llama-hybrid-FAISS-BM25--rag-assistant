[site]: crossvalidated
[post_id]: 635100
[parent_id]: 635088
[tags]: 
Here I'm calculating standard deviation of each prediction & then take adjust prediction by positive and negative standard deviation. import numpy as np import statsmodels.api as sm # Simulating some data for logistic regression np.random.seed(42) # for reproducibility X = np.random.randn(100, 3) # 100 observations and 3 features y = np.random.binomial(1, p=1/(1 + np.exp(-np.dot(X, np.array([0.5, -0.25, 0.75]))))) # generating binary outcomes # Adding a constant term for the intercept X = sm.add_constant(X) # Fitting a logistic regression model logit_model = sm.Logit(y, X).fit() # Now, let's make predictions with the model # Here, we'll use the same X for simplicity, but in practice, you should use new, unseen data predictions = logit_model.predict(X) # Compute standard errors of predictions std_errors = np.sqrt(np.diag(np.dot(np.dot(X, logit_model.cov_params()), X.T))) # Compute 95% confidence intervals conf_int_lower = predictions - 1.96 * std_errors conf_int_upper = predictions + 1.96 * std_errors # Output the first 5 predictions and their confidence intervals results = np.column_stack((predictions[:5], conf_int_lower[:5], conf_int_upper[:5])) print(results)
