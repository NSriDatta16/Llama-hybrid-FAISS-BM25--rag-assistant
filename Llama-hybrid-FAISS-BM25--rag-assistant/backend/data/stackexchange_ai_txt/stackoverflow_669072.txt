[site]: stackoverflow
[post_id]: 669072
[parent_id]: 669059
[tags]: 
In a practical situation, it makes no difference unless you have a massive system where such things as mirroring, RAC whatever are needed for your solution. For most applications the database platform is irrelevant. If it is relevant, then hardware/features becomes more important Some thoughts: What does the rest of the company do? No point in trying for MySQL if you have a DBA team supporting hundreds of MS SQL Servers Client language. My personal view is that some client languages are better suited to their "natural" DB platform, but this stems from if you're in a MS, Java or PHP shop Budget. If you want to have a MS consultant on site in 4 hours, you'll have to pay for it. What is the loss to your business per minute if something is wrong? Politics. I disagree with some aspects of how our DB engineering set up the corporate MS SQL build but I have no choice. If you're in academia, your cardigan+slipper wearing pipe smoking tutors will hate Microsoft.
