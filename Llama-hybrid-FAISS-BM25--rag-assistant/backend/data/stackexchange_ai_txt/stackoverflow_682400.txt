[site]: stackoverflow
[post_id]: 682400
[parent_id]: 463604
[tags]: 
Programming in Python and performing typechecking as you might in other languages does seem like choosing a screwdriver to bang a nail in with. It is more elegant to use Python's exception handling features. From an interactive command line, you can run a statement like: int('sometext') That will generate an error - ipython tells me: : invalid literal for int() with base 10: 'sometext' Now you can write some code like: try: int(myvar) + 50 except ValueError: print "Not a number" That can be customised to perform whatever operations are required AND to catch any errors that are expected. It looks a bit convoluted but fits the syntax and idioms of Python and results in very readable code (once you become used to speaking Python).
