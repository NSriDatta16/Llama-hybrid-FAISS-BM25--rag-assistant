[site]: stackoverflow
[post_id]: 4690558
[parent_id]: 
[tags]: 
Shift/reduce conflict in yacc due to look-ahead token limitation?

I've been trying to tackle a seemingly simple shift/reduce conflict with no avail. Naturally, the parser works fine if I just ignore the conflict, but I'd feel much safer if I reorganized my rules. Here, I've simplified a relatively complex grammar to the single conflict: statement_list : statement_list statement | ; statement : lvalue '=' expression | function ; lvalue : IDENTIFIER | '(' expression ')' ; expression : lvalue | function ; function : IDENTIFIER '(' ')' ; With the verbose option in yacc, I get this output file describing the state with the mentioned conflict: state 2 lvalue -> IDENTIFIER . (rule 5) function -> IDENTIFIER . '(' ')' (rule 9) '(' shift, and go to state 7 '(' [reduce using rule 5 (lvalue)] $default reduce using rule 5 (lvalue) Thank you for any assistance.
