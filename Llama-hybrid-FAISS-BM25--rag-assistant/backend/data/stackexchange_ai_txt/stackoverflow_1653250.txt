[site]: stackoverflow
[post_id]: 1653250
[parent_id]: 1653160
[tags]: 
You said: users have one department users have one sub-department users have many posts users have one photo users have one profile Funny terminology...users work in one department and, in fact, work in one sub-department. Since, presumably, a sub-department is a part of just one department, you don't need to record both department and sub-department in the profile table. In fact, if you do record both, you have a complex constraint to enforce. So, unless there's something you've not told us, the department is not needed in the profile. Though, I note that there is actually no cross-reference between departments and sub-departments, so a single sub-department can apparently be associated with multiple departments - there is nothing to stop sub-department number 1 from being associated with one person who works in department 1 and another person who works in department 2. That's unusual - not necessarily wrong, but not the way most organizations work. There's a temptation to ask "if users only have one photo at a time, and only have one profile, why separate those from the user table?", but there are some reasons for keeping them separate. One of the key points in modelling tables is to identify the natural primary keys. The ID columns don't count - or can be counted but you need to work out what other combinations of columns must be unique. For example, in the Profile table, although there is a Profile ID, the User ID must be unique according to the rules you stated, so in fact the Profile ID is superfluous - a waste of space, in fact (twice; once for the data column, and once for the index that will be created on it). Now, if you decided that a user might have multiple profiles over time, and profiles have a valid period, or something similar, then the Profile ID column makes sense - but the last bullet point is no longer valid. In the posts table, why do you record both user ID and profile ID? Again, it gives you a complex constraint to enforce to no obvious benefit. The profile ID is sufficient; from that you can find the user. You say that a user has one photo, but that is not what you've modelled. You've modelled 'each profile has a photo, and a photo is only used by one profile'. Likewise, in fact, you've not modelled 'users have one sub-department'; you've modelled 'profiles have one sub-department'. Most likely that is a problem with sloppy definitions, but you need to be careful because sloppy definitions lead to sloppy databases, and sloppy databases lead to incorrect answers and bad performance. Fix those issues and you'd be a long way towards having a more workable design. However, I'm not sure I've discovered all the anomalies that exist in this outline schema.
