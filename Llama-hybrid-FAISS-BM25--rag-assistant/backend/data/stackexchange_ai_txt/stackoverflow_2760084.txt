[site]: stackoverflow
[post_id]: 2760084
[parent_id]: 2760026
[tags]: 
A hard-core stance is: "if you have to write a comment for your code, your code is broken". Rather than writing explanatory comments, refactor your code so that the comments become less necessary. This applies especially to function names (including their parameters), since they tend to be modified the most, and the comments seldom are updated to match. Instead of: // Compute average for the two times int a = t1 + (t2 - t1) / 2; write int averageTime = AverageOfTimes(t1, t2); int AverageOfTimes(int t1, int t2) { return t1 + (t2-t1); } Stale comments are one of the leading causes of WTF's when I'm reading other people's code. Overcommenting has been cited as a "code smell" by several authors, including the authors of "Clean Code". Personally, I write an explanatory comment for each class (I code in C# and C++ mostly), and occasionally when I am using an algorithm I want to refer to.
