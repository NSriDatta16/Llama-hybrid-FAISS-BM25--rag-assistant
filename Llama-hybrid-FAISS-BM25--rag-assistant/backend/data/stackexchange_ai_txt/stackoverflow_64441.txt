[site]: stackoverflow
[post_id]: 64441
[parent_id]: 64333
[tags]: 
You will lose large classes with multiple responsibilities. You will also likely lose large methods with multiple responsibilities. You may lose some ability to refactor, but you will also lose some of the need to refactor. Jason Cohen said something like: TDD requires a certain organization for your code. This might be architecturally wrong; for example, since private methods cannot be called outside a class, you have to make methods non-private to make them testable. I say this indicates a missed abstraction -- if the private code really needs to be tested, it should probably be in a separate class. Dave Mann
