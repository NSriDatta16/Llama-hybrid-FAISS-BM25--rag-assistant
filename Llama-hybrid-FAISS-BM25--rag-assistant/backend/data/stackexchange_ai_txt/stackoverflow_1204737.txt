[site]: stackoverflow
[post_id]: 1204737
[parent_id]: 1204545
[tags]: 
No, Reflection is not a design smell. It could, arguably, be called a "language/platform smell". Reflection is used because code and code metadata are both stored in the assembly. Thus, they are always updated and in synch. You can code general conventions on metadata rather than being explicit on the common case. For modularity in .NET, it is a great benefit that modules are self-describing. This may be due to my own personal development as a programmer, but I find that learning reflection advocates a sorely needed attention to the deliverables (assemblies). Along with TDD, of course.
