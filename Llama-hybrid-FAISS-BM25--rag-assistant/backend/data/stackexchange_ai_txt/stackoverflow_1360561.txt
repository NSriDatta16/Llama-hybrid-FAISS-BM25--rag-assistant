[site]: stackoverflow
[post_id]: 1360561
[parent_id]: 1360533
[tags]: 
You can pass an object as argument to the Thread.Start and use it as a shared data storage between the current thread and the initiating thread. You can also just directly access (with the appropriate locking of course) your data members, if you started the thread using the instance form of the ThreadStart delegate. You can't use attributes to create shared data between threads. You can use the attribute instances attached to your class as a data storage, but I fail to see how that is better than using static or instance data members.
