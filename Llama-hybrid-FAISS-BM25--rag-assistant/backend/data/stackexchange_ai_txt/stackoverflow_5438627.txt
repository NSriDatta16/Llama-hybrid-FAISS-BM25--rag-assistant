[site]: stackoverflow
[post_id]: 5438627
[parent_id]: 3707567
[tags]: 
If I understood correctly, you want to make some areas transparent within the image. And these areas are random shaped. Easiest way (that I can think of) is to create a mask and put it to the alpha channel of the image. Below is a code that shows how to do this. If your question was "How to create a polygon mask" I will redirect you to: SciPy Create 2D Polygon Mask and look the accepted answer. br, Juha import numpy import Image # read image as RGB and add alpha (transparency) im = Image.open("lena.png").convert("RGBA") # convert to numpy (for convenience) imArray = numpy.asarray(im) # create mask (zeros + circle with ones) center = (200,200) radius = 100 mask = numpy.zeros((imArray.shape[0],imArray.shape[1])) for i in range(imArray.shape[0]): for j in range(imArray.shape[1]): if (i-center[0])**2 + (j-center[0])**2 Edit Actually, I could not resist... the polygon mask solution was so elegant (replace the above circle with this): # create mask polygon = [(100,100), (200,100), (150,150)] maskIm = Image.new('L', (imArray.shape[0], imArray.shape[1]), 0) ImageDraw.Draw(maskIm).polygon(polygon, outline=1, fill=1) mask = numpy.array(maskIm) Edit2 Now when I think of it. If you have a black and white svg, you can load your svg directly as mask (assuming white is your mask). I have no sample svg images, so I cannot test this. I am not sure if PIL can open svg images.
