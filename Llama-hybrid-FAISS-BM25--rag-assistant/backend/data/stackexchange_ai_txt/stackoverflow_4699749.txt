[site]: stackoverflow
[post_id]: 4699749
[parent_id]: 4695489
[tags]: 
If you are using Saxon, then you may need to set the message emitter using setMessageEmitter() . https://www.saxonica.com/html/documentation10/javadoc/net/sf/saxon/trans/XsltController.html#setMessageEmitter-net.sf.saxon.event.Receiver- public void setMessageEmitter(Receiver receiver) Set the Receiver to be used for xsl:message output. Recent versions of the JAXP interface specify that by default the output of xsl:message is sent to the registered ErrorListener. Saxon does not implement this convention. Instead, the output is sent to a default message emitter, which is a slightly customised implementation of the standard Saxon Emitter interface. This interface can be used to change the way in which Saxon outputs xsl:message output. Michael Kay has explained why Saxon doesn't output xsl:message according to the JAXP interface, and has suggested two options for obtaining the output : ErrorListener was something that was introduced to JAXP at a rather late stage (one of many regrettable occasions where the spec was changed unilaterally to match the Xalan implementation), and I decided not to implement this change as a default behaviour, because it would have been disruptive to existing applications . In Saxon, xsl:message output is directed to a Receiver, which you can nominate to the Transformer: ((net.sf.saxon.Controller)transformer).setMessageEmitter(....) If you want to follow the JAXP model of sending the output to the ErrorListener, you can nominate a Receiver that does this: ((net.sf.saxon.Controller)transformer).setMessageEmitter(new net.sf.saxon.event.MessageWarner())
