[site]: stackoverflow
[post_id]: 3688492
[parent_id]: 
[tags]: 
Mixing addition and subtraction with logical NOT

I found some exercises where you combine n-bit 2's complement values in different ways and simplify the output where possible. (Their practice exercises use 16-bit, but that's irrelevant). Eg: !(!x&!y) == x|y 0 & y, negate the output == -1 I'm having no problem applying De Morgan's laws with the examples using AND, OR, and NOT but I am having difficulty using NOT with + and - Eg: !(!x+y) == x-y !(y-1) == -y How does NOT distribute? Edit: responding to comments: I realize this is a bitwise NOT. My question is: in algebraic terms, how does it distribute as per algebra? Example on Wikipedia
