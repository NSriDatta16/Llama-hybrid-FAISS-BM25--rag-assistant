[site]: crossvalidated
[post_id]: 557387
[parent_id]: 557359
[tags]: 
(This all assumes that there is no order to your three categories. I suspect this is the case, though I could believe that you could put them in order, even if I am struggling to explain why I suspect this. If there is an order, then you would want to do ordinal logistic regression, not multinomial.) There's not special meaning for the reference category. In a logistic regression with two categories ("regular" logistic regression), we label one category as $1$ and the other as $0$ . There is no special meaning to this. If we want to distinguish dogs from cats, dogs can be coded as $1$ or cats can be coded as $1$ , and little about the analysis changes. However you do it, the logistic regression seeks out the true probability of being a dog and being a cat. Ditto for multinomial logistic regression. If you have dogs, cats, horses, and crocodiles, you can consider any of them to be the "zero" category, and the rest of the analysis follows. If "dog" is the "zero" category, the multinomial logistic regression will explicitly give the probability of being a cat, a horse, and a crocodile. Whatever is needed to get the sum of the probabilities to $1$ is the probability of being a dog. In your model, as long as you know how the coding works, it does not matter which of the three categories you use as your reference category. If A is the reference, the model will explicitly give probabilities of B and UNDECIDED. If UNDECIDED is the reference category, the model will explicitly give probabilities of A and B, and the rest of the probability is the probability of being UNDECIDED. In fact, depending on the software, you might have a function that gives explicit probabilities of each category. If you're an R user, you might find it helpful to model your work on the following simulation. library(nnet) set.seed(2021) N
