[site]: stackoverflow
[post_id]: 3525157
[parent_id]: 3524211
[tags]: 
This has been discussed on SO before and I am quoting Jon Skeet for posterity: No. A reference to a derived class must actually refer to an instance of the derived class (or null). Otherwise how would you expect it to behave? For example: object o = new object(); string s = (string) o; int i = s.Length; // What can this sensibly do? If you want to be able to convert an instance of the base type to the derived type, I suggest you write a method to create an appropriate derived type instance. Or look at your inheritance tree again and try to redesign so that you don't need to do this in the first place. In Skeet's example, string's are objects and objects are not strings. So the "upcasting" would not work.
