[site]: stackoverflow
[post_id]: 1562933
[parent_id]: 
[tags]: 
What are the advantages/disadvantages of monolithic PHP coding versus small specialized php scripts?

I have historically used a monolithic approach to PHP coding. That is, I write one index.php, with an average size of 70k-250k, and use mod_rewrite to turn the rest of the REQUEST_URI into parameters passed into the index.php to control what is happening. The alternative would be to write many small php scripts, each specialized to a particular purpose. I'm thinking that some of my more active ajax scripts may benefit from this. One thing that has kept me in this thought process is I don't know how using includes, especially conditional includes would affect the performance of the opcode cache. I have generally avoided includes altogether if possible due to my paranoia about this, but this results in either duplicating code, or staying monolithic. As I'm using mod_rewrite anyway, converting between the two methodologies should be simple. I look forward to your comments. EDIT: One of my target apps currently handles 80-100 page hits per second (I got some decent hardware). Most of those are ajax requests. Everything works and is snappy, but I've developed as a php programmer without critique and need it.
