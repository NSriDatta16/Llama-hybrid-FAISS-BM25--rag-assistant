[site]: stackoverflow
[post_id]: 2136770
[parent_id]: 2129569
[tags]: 
Haha! I think I got it! If anyone else has a similar problem take a look at my new grammar: grammar Test; options {output=AST;ASTLabelType=CommonTree;} tokens {FUNCTION; ATTRIBUTES; ATTRIBUTE; VALUE; CHILDREN; EXPRESSION;} @parser::members { int dataTypeCount = 0; } program : function ; function : ID (OPEN_BRACKET (attribute (COMMA? attribute)*)? CLOSE_BRACKET)? (OPEN_BRACE function* CLOSE_BRACE)? SEMICOLON? -> ^(FUNCTION ^(ID["ID"] ID) ^(ATTRIBUTES attribute*) ^(CHILDREN function*)) ; attribute : ID (COLON | EQUALS) expression -> ^(ATTRIBUTE ^(ID["ID"] ID) ^(VALUE expression)); expression : datatype {dataTypeCount = 1;} (PLUS datatype {dataTypeCount++;})* -> {dataTypeCount == 1}? datatype* -> ^(EXPRESSION datatype*) ; datatype : ID -> ^(STRING["ID"] ID) | NUMBER -> ^(STRING["NUMBER"] NUMBER) | STRING -> ^(STRING["STRING"] STRING) | BOOLEAN -> ^(STRING["BOOLEAN"] BOOLEAN) | array -> ^(STRING["ARRAY"] array) | lookup -> ^(STRING["LOOKUP"] lookup) ; array : OPEN_BOX (expression (COMMA expression)*)? CLOSE_BOX -> expression* ; lookup : OPEN_BRACE (ID (PERIOD ID)*) CLOSE_BRACE -> ID* ; NUMBER : ('+' | '-')? (INTEGER | FLOAT) ; STRING : '"' ( ESC_SEQ | ~('\\'|'"') )* '"' ; BOOLEAN : 'true' | 'TRUE' | 'false' | 'FALSE' ; ID : (LETTER|'_') (LETTER | INTEGER |'_')* ; COMMENT : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;} | '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;} ; WHITESPACE : (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;} ; COLON : ':' ; SEMICOLON : ';' ; COMMA : ',' ; PERIOD : '.' ; PLUS : '+' ; EQUALS : '=' ; OPEN_BRACKET : '(' ; CLOSE_BRACKET : ')' ; OPEN_BRACE : '{' ; CLOSE_BRACE : '}' ; OPEN_BOX : '[' ; CLOSE_BOX : ']' ; fragment LETTER : 'a'..'z' | 'A'..'Z' ; fragment INTEGER : '0'..'9'+ ; fragment FLOAT : INTEGER+ '.' INTEGER* ; fragment ESC_SEQ : '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\') ;
