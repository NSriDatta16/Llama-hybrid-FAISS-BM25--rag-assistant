[site]: stackoverflow
[post_id]: 5505154
[parent_id]: 5504967
[tags]: 
This is just a small part of a larger paper that I wrote a year or two ago. My company uses this in part as a standard for unit testing. Hope it helps. Unit Test Golden Rule “For every public method in the application’s business layer there should be at least 1 unit test. For every class in the application there should be at least 1 test class.” Items to Unit Test In general there are four types of methods that are associated with classes; Modifiers: Changes one or more values (or objects) associated with attributes of the object Accessors: Returns a value (or object) that depends on the state of the object Constructors: Called once when the object is created Destructors: Called when the object is destroyed. When writing unit tests, the developer’s primary concern should be any and all public methods that are employed with in their class at the business layer itself (the methods you will be using in your web layer). By doing so, the developer will also be testing any private methods, and any public methods of the classes within the DAL that are utilized by the class that is being unit tested. Due to the inherent nature of a class, and the natural processes of a unit test, Constructors and Destructors are inherently built into every unit test. In some cases though, depending on the architecture and the preferences of the developer these two classes can contain custom code, and can be overloaded, in these cases, all possible overload scenarios would also need to be unit tested as well. In a situation where multiple overloads exist for the constructor of the class, each public method needs to be tested once using each of the overloaded constructors. How to configure/utilize Unit Test Projects In each solution there should be a Unit Test project that can be saved and shared within whatever architecture is being used to share code. By doing this, and having each developer working on a particular project update and save their unit tests, it will allow other developers (current, and future) to utilize the same unit tests. By thoroughly documenting each unit test as to how it is supposed to function, and under what circumstances, it creates a document that allows developers that are new to the application to become familiar with the structure and intended use of each object. When creating unit tests (visual studio) will automatically create a test class within the test project for each of the methods that the user chooses. This keeps the unit tests organized and segregated from other unit tests from other classes. How to Successfully Unit Test Not including the Constructors and Destructors of a class, the other two method types, Modifiers and Accessors can be further split into seven sub types. • Modifiers o Inserts o Updates o Deletes o Polymorphs • Accessors o Singular Retrieval o Group Retrieval o Mass Retrieval Inserts, Updates, Deletes, and Polymorphs Inserts Inserts consist of any situation where data is being added. This is not limited to an SQL database, but may also be applied to other data sources including XML, Arrays and Arraylists, in-memory relational data sources, and even external text documents. Updates Updates are similar to Inserts except that instead of adding new data, they modify existing data. Like inserts they are not limited to SQL. Deletes Deletes are the removal or disablement of data. They can also target the same data types as inserts and updates. Polymorphs Simply put, Polymorphism is the characteristic of being able to assign a different meaning or usage to something in different contexts - specifically, to allow an entity such as a variable, a function, or an object to have more than one form. Singular, Group, and Mass Retrievals Singular Retrievals Singular Retrievals involve the return of a single value or record. This can be as simple as a method that returns a user’s name based on the input of a user id. Group Retrievals Group Retrievals are used when a sub set of a larger group are required. Group retrievals are used for things like filtering. Mass Retrievals Mass Retrievals involve returning entire sets of data. This may be an entire table from a database, or an entire XML document, or an Array of values. Method Subtypes and Unit Testing When working with Modifier methods, the following five rules should be followed. Keeping in mind that each public method should be tested, it does not also mean that each public method needs to be segregated to its own test method. 1) Each Instance of an Insert, Update or Deletion should be preceded and followed by a retrieval, which type of retrieval that is required is based on the type/format of the data that is being modified. 2) Each instance of an Insert should be followed by a Deletion. This insures that any insertion of data is removed. 3) Updates should be preceded and followed by a retrieval, and should also be paired to insure that any data changes that are made are undone. 4) While retrievals may be tested during the test of modifier, they should also be tested independently. 5) While testing retrieval, it is not necessary to verify the actual data, only that data was returned.
