[site]: stackoverflow
[post_id]: 3596482
[parent_id]: 3596348
[tags]: 
There are ways you "can" get around the doubled code, but in most cases the duplicated code is much less ugly/dangerous than the possible solutions. The "goto" solution you quote doesn't seem like an improvement to me - I don't really think you really gain anything significant (compactness, readability or efficiency) by using it, while you increase the risk of a programmer getting something wrong at some point in the code's lifetime. In general I tend to go for the approach: A special case for the first (or last) action loop for the other actions. This removes the inefficiencies introduced by checking if the loop is in the first iteration on every time around, and is really easy to understand. For non-trivial cases, using a delegate or helper method to apply the action can minimise code duplication. Or another approach I use sometimes where efficiency isn't important: loop, and test if the string is empty to determine if a delimiter is required. This can be written to be more compact and readable than the goto approach, and doesn't require any extra variables/storage/tests to detect the "special case" iteraiton. But I think Mark Byers' approach is a good clean solution for your particular example.
