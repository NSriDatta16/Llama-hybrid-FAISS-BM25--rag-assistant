[site]: crossvalidated
[post_id]: 34993
[parent_id]: 
[tags]: 
Supervised classifier for events with missing data

I'm working on an experiment in which we try to sort events into three categories based on roughly 20 inputs using a feed-forward neural network (trained via backpropagation). Unfortunately, many variables which offer good discrimination become meaningless in some situations. So far, the procedure has been to set meaningless variables to some placeholder value which lies outside the normal range for that variable. But that's roughly half the inputs in something like half the events. The classification isn't as strong as we'd like, so the options I've come up with are: Split the events based on whether the unreliable variables are present, train several neural nets on the sub-samples. The classified samples would then be merged. Switch to some other classifier (boosted decision trees are very popular in my field) which handles missing information more naturally. Is one of these approaches obviously superior? Is there some other obvious option I'm missing?
