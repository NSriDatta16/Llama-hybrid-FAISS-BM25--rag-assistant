[site]: stackoverflow
[post_id]: 2367702
[parent_id]: 
[tags]: 
Entity Framework Self Referencing Hierarchical Many To Many

OK this problem has it all. Conceptually I have a Resource entity which can have many Child Resources and many Parent Resources. The Resource table has two fields, ID and Name with ID being the primary key. To complete the many to many relationship I created a ResourceHierarchy table which has two fields, (Parent_ID, Child_ID) and two foreign keys with each one referencing the primary key of the Resource table (ID) and the ResourceHierarchy table has a composite primary key of (Parent_ID, Child_ID) Now we already know that each Resource can act as a Parent or a Child to other resources, however logically not all Resources will have a Parent but that's besides the point. As an example lets say I have the following Resources in my Resource table. ID Name 10000 Little House 10001 Font Door 10002 Roof 10003 Roof Tile 10004 Tile Monster And in the ResourceHierarchy table we have the following relationships. Parent_ID Child_ID 10000 10001 10000 10002 10002 10003 10004 10003 Then Entity Framework generates the Entity, so far so good... If you were to check the generated code in the edmx file you would see that the ResourceHierarchy table is being treated as a relationship and the ResourceHierarchy table is not accessible via code because it's not being treated as an entity. If this is all I wanted then it would work out perfectly. However the problem starts when I want to add a quantity column to the Resource entity hierarchy. For example the little house has just one Front Door and one Roof, but the Roof and Tile Monster Resources can have many Roof Tiles. So if we add a Quantity column to the Resource table then we get the following. ID Name Quantity 10000 Little House 1 10001 Font Door 1 10002 Roof 1 10003 Roof Tile 5 10004 Tile Monster 1 This creates the problem that the Roof and Tile Monster must share the 5 Roof Tiles. So naturally I would try to add the quantity column to the ResourceHierarchy table, however as soon as I do this and refresh the generated code is now treating the ResourceHierarchy table as an entity and not a relationship as it was previously. And now in order to get back to the Resource table I have to go through this non conceptual "Entity/Relationship" which isn't very straight forward. It's like I have a Entity in my conceptual model which would only be used to traverse back to the Resource Entity, and I'm not even sure if Resource.Children.Add(r) would create new rows in the ResourceHierarchy table in the db. It's like I would be picking off properties i.e. Quantity, off of an entity that I am only using as a relationship. Ideally the ResourceHierarchy table would have the Quantity column look like this. Parent_ID Child_ID Quantity 10000 10001 1 10000 10002 1 10002 10003 8 10004 10003 13 AND the Resource Entity would still have Children, Parents navigation properties and somehow access the Quantity column as a property of the Resource Entity. I've tried to merge the generated code from having a quantity column and not having a quantity column but an exception is thrown which I interpret as the ResourceHierarchy table can either be a relationship or an entity, but not both. Please HELP! The edmx changes drastically with the addition and exclusion of the quantity column on the ResourceHierarchy table in the db. Here is a sample comparison, the only difference is Resource is ResourceType and ResourceHierarchy is ResourceTypeHierarchy. The SSDL Storage Model has no changes except one extra Property in the ResourceTypeHierarchy EntityType so I won't include it below. WITHOUT QUANTITY COLUMN ON RESOURCETYPEHIERARCHY RESOURCETYPEHIERARCHY IS A RELATIONSHIP WITH QUANTITY COLUMN ON RESOURCETYPEHIERARCHY RESOURCETYPEHIERARCHY IS NOW AN ENTITY
