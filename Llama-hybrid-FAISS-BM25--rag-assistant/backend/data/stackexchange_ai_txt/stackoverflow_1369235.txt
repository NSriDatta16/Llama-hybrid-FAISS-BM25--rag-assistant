[site]: stackoverflow
[post_id]: 1369235
[parent_id]: 1369194
[tags]: 
The only limit I've ever reached as a programmer was that of my own abilities. I've worked on sites that did a few hundred hits a day and maintained software for a network of sites doing over 1M uniques/day total and both ran on the same piece of the software. The pressure wasn't on PHP, the pressure was on me to make PHP, the servers and the databases all work together to make use of them properly and to do things in a scalable way. Query optimization Database optimization HTTP Caching Memcache/APC Server optimization Master/Slave database setup Profiling Choosing just the right amount of DB normalization Proper logging (only logging what's useful and not so much logging that it becomes useless) Attention to detail Proper testing Code organization Version control with good branching/tagging File servers vs web servers vs database servers Reverse proxies General security (preventing SQL Injection , preventing XSS attacks , Session hijacking , etc) All things learned along the way to making myself a better programmer. There's very few languages that can't run any site on the internet without the proper hardware behind it. Much of your job as a programmer is finding out the best way to take advantage of that hardware. There are things however that PHP isn't all that good at by it's nature. Such things would include: Desktop software (although possible) Daemons (again, possible) Large scale string manipulation (such as scraping sites) in a timely manner
