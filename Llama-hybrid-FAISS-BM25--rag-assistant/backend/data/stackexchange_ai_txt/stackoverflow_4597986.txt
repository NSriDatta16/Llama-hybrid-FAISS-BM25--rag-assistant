[site]: stackoverflow
[post_id]: 4597986
[parent_id]: 554440
[tags]: 
it's possible, but it requires quite a bit of manual work in the EDMX file, and I haven't been able to make EF use the surrogate key as actual primary key on the link table. You have to make EF use a combination key of both foo_id and bar_id as primary key. in your storage model you have to change the EntityType of the link table from to: So you make the surrogate key invisible to EF, and tell it to use the combination of the two foreign keys as primary key. In your conceptual model, you need to have the many-many association defined: and in your mappings, an AssociationSetMapping: By far the easiest way to get this right, is to remove the surrogate key from the db, generate the EDMX, and then put this model on your original DB. The result will be the same. EF doesn't really need the surrogate key for anything, the table is invisible in a many-many association
