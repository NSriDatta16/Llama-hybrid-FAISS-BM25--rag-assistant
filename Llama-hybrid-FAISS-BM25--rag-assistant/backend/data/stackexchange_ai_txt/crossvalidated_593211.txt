[site]: crossvalidated
[post_id]: 593211
[parent_id]: 323797
[tags]: 
Have a look at this excellent post on using Weibull distributions in a sequential network. https://ragulpr.github.io/2016/12/22/WTTE-RNN-Hackless-churn-modeling/ This contains by far the best illustration of how to think (and visualize) about time to event prediction / survival analysis I have come across. It also has an applied example at end of jet engine failures ( akin to your machine failure example). For your problem in particular the RNN might be overkill. Just a marginal Weibull distribution estimate based on time between failures already gets you to an answer about "what's the chance this machine will fail in next n days?" Using standard probability / survival analysis methodology . See https://bookdown.org/mpfoley1973/data-sci/survival-curve-estimation.html for a tutorial with examples in R. I didn't see any mention of covariates in your example, so being overdue is just based on when prob("survived until now" | model at day 0) becomes less likely than a threshold specified based on your risk tolerance. Note: With continually measured covariates / features of each machine (e.g. temperature, noise) this becomes a bit more tricky and it's not clear to me how to define - let alone predict - a notion of 'being overdue conditioned on constantly updated features' in a meaningful way.
