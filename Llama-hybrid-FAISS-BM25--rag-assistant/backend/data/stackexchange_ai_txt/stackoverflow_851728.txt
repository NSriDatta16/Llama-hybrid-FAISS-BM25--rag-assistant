[site]: stackoverflow
[post_id]: 851728
[parent_id]: 
[tags]: 
Scrum, and Cross-Functional Teams vs. Specialists

Post edited for clarification (original post at the bottom). I wish to reorganize the R&D staff from horizontal (i.e. specialty or component based) teams to vertical (i.e. feature, self sufficient) teams. I'm likely to end up with 3-4 teams, with developers and QA engineers who collaboratively can work with most aspects of the product. I have, however, only one qualified DBA, and one technical writer. I can have DBA on one team, and give his team features that require the most complicated DB work, and give tasks with more trivial DB-related aspects to the teams without the DBA. Almost every feature, though, requires the documentation to be updated, and documentation is a task that must be completed in almost every feature, for it to be Done . I have only one technical writer. The rest of the developers do not have (nor can learn) the skills required to write the documentation, as it is not in their native language. How do I deal with such resources in a vertical team? Do I have the writer not be part of any team? That would make it impossible for the team to be "Done" on his own. Do I have the writer be part of all teams? If so, how can he attend all of the teams' meetings (daily, planning, retrospectives)? Do I make him a member of just one team? Which one? All teams need him equally. How do the other teams get "Done" without him? Thanks, Assaf. Original: Our company want to adopt the Scrum way of life, and be able to assign a feature to a team, and have that feature "Done" (i.e. according to the Definition of Done), within the team. Some skills, though, require skills not owned by enough people in the team, to assign one to each team (e.g. technical writer, DBA, integration specialist, etc.) How would you deal with such limited-resource-specialists with mostly vertical teams?
