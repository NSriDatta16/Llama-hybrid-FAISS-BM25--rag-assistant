[site]: crossvalidated
[post_id]: 95154
[parent_id]: 95054
[tags]: 
Both of the concepts you mention (p-values and effect sizes of linear mixed models) have inherent issues. With respect to effect size , quoting Doug Bates, the original author of lme4 , Assuming that one wants to define an $R^2$ measure, I think an argument could be made for treating the penalized residual sum of squares from a linear mixed model in the same way that we consider the residual sum of squares from a linear model. Or one could use just the residual sum of squares without the penalty or the minimum residual sum of squares obtainable from a given set of terms, which corresponds to an infinite precision matrix. I don't know, really. It depends on what you are trying to characterize. For more information, you can look at this thread , this thread , and this message . Basically, the issue is that there is not an agreed upon method for the inclusion and decomposition of the variance from the random effects in the model. However, there are a few standards that are used. If you have a look at the Wiki set up for/by the r-sig-mixed-models mailing list , there are a couple of approaches listed. One of the suggested methods looks at the correlation between the fitted and the observed values. This can be implemented in R as suggested by Jarrett Byrnes in one of those threads: r2.corr.mer So for example, say we estimate the following linear mixed model: set.seed(1) d We can calculate the effect size using the function defined above: r2.corr.mer(fm1) # [1] 0.0160841 A similar alternative is recommended in a paper by Ronghui Xu , referred to as $\Omega^{2}_{0}$, and can be calculated in R simply: 1-var(residuals(fm1))/(var(model.response(model.frame(fm1)))) # [1] 0.01173721 # Usually, it would be even closer to the value above With respect to the p-values , this is a much more contentious issue (at least in the R / lme4 community). See the discussions in the questions here , here , and here among many others. Referencing the Wiki page again, there are a few approaches to test hypotheses on effects in linear mixed models. Listed from "worst to best" (according to the authors of the Wiki page which I believe includes Doug Bates as well as Ben Bolker who contributes here a lot): Wald Z-tests For balanced, nested LMMs where df can be computed: Wald t-tests Likelihood ratio test, either by setting up the model so that the parameter can be isolated/dropped (via anova or drop1 ), or via computing likelihood profiles MCMC or parametric bootstrap confidence intervals They recommend the Markov chain Monte Carlo sampling approach and also list a number of possibilities to implement this from pseudo and fully Bayesian approaches, listed below. Pseudo-Bayesian: Post-hoc sampling, typically (1) assuming flat priors and (2) starting from the MLE, possibly using the approximate variance-covariance estimate to choose a candidate distribution Via mcmcsamp (if available for your problem: i.e. LMMs with simple random effects â€” not GLMMs or complex random effects) Via pvals.fnc in the languageR package, a wrapper for mcmcsamp ) In AD Model Builder, possibly via the glmmADMB package (use the mcmc=TRUE option) or the R2admb package (write your own model definition in AD Model Builder), or outside of R Via the sim function from the arm package (simulates the posterior only for the beta (fixed-effect) coefficients Fully Bayesian approaches: Via the MCMCglmm package Using glmmBUGS (a WinBUGS wrapper/ R interface) Using JAGS/WinBUGS/OpenBUGS etc., via the rjags / r2jags / R2WinBUGS / BRugs packages For the sake of illustration to show what this might look like, below is an MCMCglmm estimated using the MCMCglmm package which you will see yields similar results as the above model and has some kind of Bayesian p-values: library(MCMCglmm) summary(fm2 I hope this helps somewhat. I think the best advice for somebody starting out with linear mixed models and trying to estimate them in R is to read the Wiki faqs from where most of this information was drawn. It is an excellent resource for all sorts of mixed effects themes from basic to advanced and from modelling to plotting.
