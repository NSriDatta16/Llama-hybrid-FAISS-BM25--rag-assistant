[site]: stackoverflow
[post_id]: 1235077
[parent_id]: 1235054
[tags]: 
The best way might be for class B's start to be overloaded to take a parameter (A, or better yet, an interface implemented by A). Then B can either store that for retrieval by C (if it's an inner class) or pass it to C's constructor... EDIT: Although as the commenter mentioned overriding the constructor would work, it doesn't fit the parameters of the question which was phrased in such a way that B already existed, so my suggestion is to overload the start() like this: b.start(A aParam) { a=aParam; start(); } This version is NOT thread safe however. B's constructor works if B is actually instantiated every time, or if C is instantiated when b starts, then it could be passed to C's constructor as it's instantiated. By the way, extending thread is not generally as good as implementing runnable for quite a few reasons.
