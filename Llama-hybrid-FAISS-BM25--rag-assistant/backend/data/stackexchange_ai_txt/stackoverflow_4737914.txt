[site]: stackoverflow
[post_id]: 4737914
[parent_id]: 
[tags]: 
Parallax mapping issue in GLSL, Opengl

My Parallax mapping gives wrong results. I don't know what can be wrong. The "shadow" is in the wrong place. Light is pointing from the viewer and goes towards the cube. Shader program (based on dhpoware.com): [vert] varying vec3 lightDir; varying vec3 viewDir; attribute vec4 tangent; void main() { gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex; gl_TexCoord[0] = gl_MultiTexCoord0; vec3 vertexPos = vec3(gl_ModelViewMatrix * gl_Vertex); vec3 n = normalize(gl_NormalMatrix * gl_Normal); vec3 t = normalize(gl_NormalMatrix * tangent.xyz); vec3 b = cross(n, t) * tangent.w; mat3 tbnMatrix = mat3(t.x, b.x, n.x, t.y, b.y, n.y, t.z, b.z, n.z); lightDir = (gl_LightSource[0].position.xyz - vertexPos) / 1000.0; lightDir = tbnMatrix * lightDir; viewDir = -vertexPos; viewDir = tbnMatrix * viewDir; } [frag] varying vec3 lightDir; varying vec3 viewDir; uniform sampler2D diffuseMap; uniform sampler2D normalMap; uniform sampler2D heightMap; uniform float scale; uniform float bias; void main() { vec3 v = normalize(viewDir); vec2 TexCoord = gl_TexCoord[0].st; { float height = texture2D(heightMap, gl_TexCoord[0].st).r; height = height * scale + bias; TexCoord = gl_TexCoord[0].st + (height * v.xy); } vec3 l = lightDir; float atten = max(0.0, 1.0 - dot(l, l)); l = normalize(l); vec3 n = normalize(texture2D(normalMap, TexCoord).rgb * 2.0 - 1.0); vec3 h = normalize(l + v); float nDotL = max(0.0, dot(n, l)); float nDotH = max(0.0, dot(n, h)); float power = (nDotL == 0.0) ? 0.0 : pow(nDotH, gl_FrontMaterial.shininess); vec4 ambient = gl_FrontLightProduct[0].ambient * atten; vec4 diffuse = gl_FrontLightProduct[0].diffuse * nDotL * atten; vec4 specular = gl_FrontLightProduct[0].specular * power * atten; vec4 color = gl_FrontLightModelProduct.sceneColor + ambient + diffuse + specular;color *= texture2D(diffuseMap,TexCoord); gl_FragColor = color ; } log from cube content (tangents included, the fourth component is handedness): ------------------------------------------------------------------------------------------------------------------ VecContainer vertices = size: 36 space: 36 {} ------------------------------------------------------------------------------------------------------------------ VecContainer texcoords = size: 36 space: 36 {} ------------------------------------------------------------------------------------------------------------------ VecContainer normals = size: 36 space: 36 {} ------------------------------------------------------------------------------------------------------------------ VecContainer * tangents = size: 36 space: 36 { 1.000000, -0.000000, 0.000000, 1.000000, 1.000000, -0.000000, 0.000000, 1.000000, 1.000000, -0.000000, 0.000000, 1.000000, 1.000000, -0.000000, 0.000000, 1.000000, 1.000000, -0.000000, 0.000000, 1.000000, 1.000000, -0.000000, 0.000000, 1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 1.000000, -1.000000, 0.000000, 0.000000, 1.000000, -1.000000, 0.000000, 0.000000, 1.000000, -1.000000, 0.000000, 0.000000, 1.000000, -1.000000, 0.000000, 0.000000, 1.000000, -1.000000, 0.000000, 0.000000, 1.000000, -1.000000, 0.000000, 0.000000, -1.000000, -1.000000, 0.000000, 0.000000, -1.000000, -1.000000, 0.000000, 0.000000, -1.000000, -1.000000, 0.000000, 0.000000, -1.000000, -1.000000, 0.000000, 0.000000, -1.000000, -1.000000, 0.000000, 0.000000, -1.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, 0.000000, -1.000000, 1.000000, 0.000000, -0.000000, -1.000000, 1.000000, 0.000000, -0.000000, -1.000000, 1.000000, 0.000000, -0.000000, -1.000000 } ------------------------------------------------------------------------------------------------------------------ VecContainer indices = size: 12 space: 12 { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 1, 2 } What could cause this problem?
