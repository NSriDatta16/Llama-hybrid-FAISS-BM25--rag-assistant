[site]: stackoverflow
[post_id]: 1353637
[parent_id]: 1353407
[tags]: 
The restriction against register parameters or function parameters are probably something like: you are not allowed to take the address of a variable with the register storage class. function pointers are sometimes quite different than pointers to objects. For example, they might be larger than pointers to objects (you can't reliably convert a function pointer to an object pointer and back again), so adding some fixed number to the address of a function pointer might not get you to the next parameter. If va_start() and/or va_arg() were implemented by adding some fixed amount to the address of paramN and function pointers were larger than object pointers the calculation would end up with the wrong address for the object va_arg() returns. This might not seem to be a great way to implement these macros, but there might be platforms that have (or even need) this type of implementation. I can't think of what the problem would be to prevent allowing array parameters, but PJ Plauger says this in his book "The Standard C Library": Some of the restrictions imposed on the macros defined in seem unnecessarily severe. For some implementations, they are. Each was introduced, however, to meet the needs of at least one serious C implementation. And I imagine that there are few people who know more about the ins and outs of the C library than Plauger. I hope someone can answer this specific question with an actual example; I think it would be an interesting bit of trivia. New info: The "Rationale for International Standard - Programming Languages - C" says this about va_start() : The parmN argument to va_start was intended to be an aid to implementors writing the definition of a conforming va_start macro entirely in C, even using pre-C89 compilers (for example, by taking the address of the parameter). The restrictions on the declaration of the parmN parameter follow from the intent to allow this kind of implementation, as applying the & operator to a parameter name might not produce the intended result if the parameterâ€™s declaration did not meet these restrictions. Not that that helps me with the restriction on array parameters.
