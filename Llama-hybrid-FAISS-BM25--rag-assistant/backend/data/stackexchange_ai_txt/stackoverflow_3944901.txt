[site]: stackoverflow
[post_id]: 3944901
[parent_id]: 3911014
[tags]: 
@user473284's answer had some suggestions that I used but I don't know if they were definite requirements 1) using a local web server instead of trying to point to a file 2) Incrementing the product version and using the update repository generated by the export product wizard. I never did find the implementation for the getUpdate method referenced from the code sample so I couldn't make use of the snippet. After the above changes I was still left with the app detecting no updates on startup. Debugging showed that my repository was not showing up in the session. I had to explicitly add the update url in the code, despite having it in the p2.inf and in set in the feature manifest editor form field. Here's the code for this: public static void addUpdateSite(IProvisioningAgent provisioningAgent) throws InvocationTargetException { // Load repository manager IMetadataRepositoryManager metadataManager = (IMetadataRepositoryManager) provisioningAgent .getService(IMetadataRepositoryManager.SERVICE_NAME); if (metadataManager == null) { logger.error( "Metadata manager was null"); Throwable throwable = new Throwable("Could not load Metadata Repository Manager"); throwable.fillInStackTrace(); throw new InvocationTargetException(throwable); } // Load artifact manager IArtifactRepositoryManager artifactManager = (IArtifactRepositoryManager) provisioningAgent .getService(IArtifactRepositoryManager.SERVICE_NAME); if (artifactManager == null) { logger.error( "Artifact manager was null"); Throwable throwable = new Throwable( "Could not load Artifact Repository Manager"); throwable.fillInStackTrace(); throw new InvocationTargetException(throwable); } // Load repo try { URI repoLocation = new URI("http://localhost/respository"); logger.info( "Adding repository " + repoLocation ); metadataManager.loadRepository(repoLocation, null); artifactManager.loadRepository(repoLocation, null); } catch (ProvisionException pe) { logger.error( "Caught provisioning exception " + pe.getMessage(), pe); throw new InvocationTargetException(pe); } catch (URISyntaxException e) { logger.error( "Caught URI syntax exception " + e.getMessage(), e); throw new InvocationTargetException(e); } } I now call this first thing in the checkForUpdates method from the original question. After this change my app at least now sees the update and attempts to install it. I'm still having problem but that deserves a separate question of its own which I've created at https://stackoverflow.com/questions/3944953/error-during-p2-eclipse-rcp-app-headless-update
