[site]: crossvalidated
[post_id]: 127404
[parent_id]: 127211
[tags]: 
Considering your request as well as the fact that your question fits the context of recommender systems, I think that you may benefit from reviewing some information on matrix factorization techniques (including NNMF - non-negative matrix factorization ) for producing recommendations. I hope that the following resources will be useful for you in this regard as a starting point: Matrix factorization techniques for recommender systems: http://www2.research.att.com/~volinsky/papers/ieeecomputer.pdf Matrix factorization: A simple tutorial and implementation in Python: http://www.quuxlabs.com/blog/2010/09/matrix-factorization-a-simple-tutorial-and-implementation-in-python NNMF and recommender systems (simplified R version of the previous item): http://econometricsense.blogspot.com/2012/10/nonnegative-matrix-factorization-and.html Speaking of tools , specifically focused on Non-Negative Matrix Factorization (NMF) or supporting this technique, the following resources might be of your interest: One of such tools is Python Matrix Factorization (PyMF) library with home page at https://code.google.com/p/pymf and source code at https://github.com/nils-werner/pymf . Another, even more interesting, library, also Python-based, is NIMFA , which implements various NMF algorithms : http://nimfa.biolab.si . Here's a research paper, describing NIMFA : http://jmlr.org/papers/volume13/zitnik12a/zitnik12a.pdf . Finally, CMU's GraphLab machine learning library looks very promising, containing, among other components, a collaborative filtering library, which supports NNMF and other algorithms (scalable via MapReduce & multicore ): http://select.cs.cmu.edu/code/graphlab/pmf.html .
