[site]: stackoverflow
[post_id]: 429299
[parent_id]: 429281
[tags]: 
Have a look at Smart Client Factory: http://msdn.microsoft.com/en-us/library/aa480482.aspx Just to highlight the goals (this is sniped from the above link): They have a rich user interface that takes advantage of the power of the Microsoft Windows desktop. They connect to multiple back-end systems to exchange data with them. They present information coming from multiple and diverse sources through an integrated user interface, so the data looks like it came from one back-end system. They take advantage of local storage and processing resources to enable operation during periods of no network connectivity or intermittent network connectivity. They are easily deployed and configured. Edit I'm going ansewr this with the usual CYA statement of it really depends. Let me give you some examples. Take an application which will watch the filesystem for files to be generated in any number of different formats (DB2, Flatfile, xml). The application will then import the files, displaying to the user a unified view of the document. And allow him to place e-commerce orders. In this app, you could choose to detect the files zip them up and upload to the server do the transforms (applying business logic like normalization of data etc). But then what happens if the internet connection is down. Now the user has to wait for his connection before he can place his e-Commerce order. A better solution would be to run the business rules in the client transforming the files. Now let's say, you had some business logic which would based on the order determine additional rules such as a salesman to route it to or pricing discounts...These might make sense to sit on the server. The question you will need to ask is what functionality do I need to make my application function when the server is not there. Anything thing which falls within this category will need to be client side. I've also never used Click Once deployment we had to roll our own updater which is a tale for another thread, but you should be able to send down updates preety easily. You could also code your business logic in an assembly, that you load from a URL, so while it runs client side it can be updated easily.
