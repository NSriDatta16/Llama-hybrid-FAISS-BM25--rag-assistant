[site]: stackoverflow
[post_id]: 1300071
[parent_id]: 1299924
[tags]: 
My own possibly simple-minded approach has been to use an array of patterns in preg_replace function convert($value) { $result = preg_replace($patterns, $replacements, $value); return $result; } Where $patterns = array('/p[av]/i', '/n[av]/i', '/u[av]/i', '/m[av]/i'); $replacements = array('e-12', 'e-9', 'e-6', 'e-3'); And it could be extended to higher prefixes, but it seems heavy-handed to keep adding increasingly complex regexes to the $patterns array. Edit: The comparison, later, should interpret the return value as a real number. I'm hoping someone can suggest something more elegant.
