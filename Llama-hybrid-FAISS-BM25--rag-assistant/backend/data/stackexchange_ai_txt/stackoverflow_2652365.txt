[site]: stackoverflow
[post_id]: 2652365
[parent_id]: 2652126
[tags]: 
CDI (Weld) hasn't yet been used widely, so a comparison is hard to make. A few points: CDI has been designed with integration with EJB3, JSF and other JavaEE standards in mind. CDI has the so called portable extensions which allow third-party libraries to integrate with the lifecycle and internal functioning of a CDI implementation CDI has been designed with all possible corner-cases in mind so it is likely that it covers everything you need. Spring, Guice and Seam evolved to such a state, while CDI uses the experience from these three. in my opinion, CDI interceptors will not be able to meet all the demands that Spring AOP has met. Perhaps the same goes for Guice AOP. You can't define an interceptor using AspectJ syntax. the lack of xml definitions is both an advantage and a disadvantage and some people (rightly in some cases) prefer xml configuration. the extended use of qualifier annotations will (in my opinion) generate some big messes if not used carefully.
