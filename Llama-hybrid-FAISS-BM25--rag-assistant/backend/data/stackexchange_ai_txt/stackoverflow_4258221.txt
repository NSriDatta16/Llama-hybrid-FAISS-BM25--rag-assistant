[site]: stackoverflow
[post_id]: 4258221
[parent_id]: 4257760
[tags]: 
Most of the time you should not be casting at all. B bInst A * myInst = &bInst; A* getA() { return &bInst; } B* getB() { return &bInst; } simples! There are rare occasions you need to cast down the hierarchy. Usually this is where you load some kind of add-on and need to check that an object is of the type you are expecting. In that case you use dynamic_cast<> to check but must have RTTI. The other occasion occurs where you have a storage of unrelated types, eg variants / "any" types which are related only by the fact they are stored together in a single collection, and are probably handled differently once retrieved. This can also happen in a state machine. Although it may be possible to design your flow here to avoid the casts, sometimes casting is easier. In such a case though you know exactly what type you have and can static_cast down the hierarchy to it.
