[site]: stackoverflow
[post_id]: 789775
[parent_id]: 406760
[tags]: 
A Good Programmer Hates Coding Similar to "A Good Programmer is a Lazy Programmer" and "Less Code is Better." But by following this philosophy, I have managed to write applications which might otherwise use several times as much code (and take several times as much development time). In short: think before you code. Most of the parts of my own programs which end up causing problems later were parts that I actually enjoyed coding, and thus had too much code, and thus were poorly written. Just like this paragraph. A Good Programmer is a Designer I've found that programming uses the same concepts as design (as in, the same design concepts used in art). I'm not sure most other programmers find the same thing to be true; maybe it is a right brain/left brain thing. Too many programs out there are ugly, from their code to their command line user interface to their graphical user interface, and it is clear that the designers of these programs were not, in fact, designers. Although correlation may not, in this case, imply causation, I've noticed that as I've become better at design, I've become better at coding. The same process of making things fit and feel right can and should be used in both places. If code doesn't feel right , it will cause problems because either a) it is not right, or b) you'll assume it works in a way that "feels right" later, and it will then again be not right. Art and code are not on opposite ends of the spectrum; code can be used in art, and can itself be a form of art. Disclaimer: Not all of my code is pretty or "right," unfortunately.
