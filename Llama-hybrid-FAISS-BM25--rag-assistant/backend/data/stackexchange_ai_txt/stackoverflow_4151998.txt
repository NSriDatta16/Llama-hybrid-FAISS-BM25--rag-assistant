[site]: stackoverflow
[post_id]: 4151998
[parent_id]: 4151052
[tags]: 
NoSQL - that is if you're talking of Not Only SQL - databases by their very nature solve niche persistence problems by introducing specific optimisations. it is for you, as a developer, to understand what kind of performance benefits you're looking at. Is it about scaling out , eventual consistency , high performance , hierarchical document/content storage, etc? Depending on that you might want to go for a wide column store system [HBase, Cassandra], a graph based system [Neo4j, HyperGraph], a document store [CouchDB, MongoDB], ..., or a host of other options. You can take a look at an extensive NoSQL guide here , to understand better what will suit your needs. Something that might be very simple to use, may not solve the persistence problem you're targeting to solve. So, a choice based simply on ' ease of use ' can be detrimental to your cause in the long run.
