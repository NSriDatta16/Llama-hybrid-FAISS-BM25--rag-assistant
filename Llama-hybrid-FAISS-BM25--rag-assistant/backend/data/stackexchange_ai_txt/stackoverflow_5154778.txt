[site]: stackoverflow
[post_id]: 5154778
[parent_id]: 5152502
[tags]: 
Here's a starter for a piece of algorithm that distills the controller, indexed params, and extension from the request, which you could incorporate into an extended version of Zend_Rest_Route::match() : public function match( $request ) { $path = $request->getPathInfo(); // distill extension (if any) and the remaining path preg_match( '~(?U:(? .*))(?:\.(? [^\.]*))?$~', $path, $matches ); $this->_values[ '_extension' ] = isset( $matches[ 'extension' ] ) ? $matches[ 'extension' ] : null; $path = isset( $matches[ 'path' ] ) ? $matches[ 'path' ] : ''; // split the path into segments $pathSegments = preg_split( '~' . self::URI_DELIMITER . '~', $path, -1, PREG_SPLIT_NO_EMPTY ); // leave if no path segments found? up to you to decide, but I put it in anyway if( 0 == ( $length = count( $pathSegments ) ) ) { return false; } // initialize some vars $params = array(); $controller = null; // start finding the controller // (presumes controller found at segment 0, 2, 4, etc...) for( $i = 0; $i _values[ 'controller' ] = $controller; // merge the params and defaults $this->_values = array_merge( $this->_values, $params, $this->_defaults ); return $this->_values; } It's hardly tested, and thus not production material of course. But it should get you started. What this DOES give you so far is: The controller The extension The indexed parameters What this DOES NOT give you is: The action (post, put, delete, etc. The algorithm for this is already in Zend_Rest_Route::match() ) The named parameters ( Zend_Controller_Request_Http takes care of that already) EDIT I realize this answer might be considered a bit vague so far. The point is to merge this algorithm with the match() algorithm of Zend_Rest_Route . But this above code still needs a lot of attention; you want to account for modules too probably (as does Zend_Rest_Route ), and maybe even an optional baseUrl (not sure how ZF deals with this internally actually).
