[site]: stackoverflow
[post_id]: 2929114
[parent_id]: 
[tags]: 
Is a shared list between multiple threads a race condition?

I've got some multi threaded code that typically runs great, but every so often it will break. I'm trying to pinpoint the problem, but using OpenMP is making that more difficult (the problem does not occur in serial). I know that multiple access to a variable (race conditions) often crashes a program. I've got a list shared between the multiple threads, and I'm curious if the push_back() on that list is a candidate for a race condition, therefore crashing my program every once in a while? If so, are there any recommendation on how to handle this? - Speed is of the utmost importance - I know that using #pragma omp critical would solve a race condition, but potentially slow down the application (there are two lists, so I need a critical rather than atomic). The only reason I'm not sure about this is because I ran a couple tests, using stl containers, but never got the test code to crash. Any suggestions would be greatly appreciated! Thank you in advance,
