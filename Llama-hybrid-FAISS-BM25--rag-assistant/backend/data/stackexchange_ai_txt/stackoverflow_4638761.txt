[site]: stackoverflow
[post_id]: 4638761
[parent_id]: 4638687
[tags]: 
The reason is not that you are using two resultsets on the same connection, but you are re-using the same Statement object for a new query. When you run executeQuery() on a Statement instance, any previous result will be closed (I'm surprised that your code did work with Oracle...) Simply create a new Statement object before executing the second query: Statement stmt = conn.createStatement(); Statement nestedStmt = conn.createStatement(); ResultSet lines = stmt.executeQuery("SELECT LINEID,STARTSTOPID,ENDSTOPID FROM LINES"); **//first resultset is active** while (lines.next()){ ... ResultSet stops = nestedStmt.executeQuery("SELECT STOPID FROM STOPSINLINES WHERE LINEID=" + lineId); **//first resultset dies** List lineStops = new ArrayList(); while(stops.next()){ Stop stop = StopStorage.getByID(stops.getInt(1)); lineStops.add(stop); } stops.close(); ... ResultSet emergencyLine = nestedStmt.executeQuery("SELECT CAUSE, STARTTIME, ENDTIME FROM EMERGENCYLINES WHERE LINEID =" + lineId); if(emergencyLine.next()){ String cause = emergencyLine.getString(1); .... } emergencyLine.close(); And don't for get to properly close all Statements and ResultSets !
