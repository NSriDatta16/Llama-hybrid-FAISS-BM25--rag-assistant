[site]: crossvalidated
[post_id]: 127366
[parent_id]: 127337
[tags]: 
Note that Croston's method does not forecast "likely" periods with nonzero demands. It assumes that all periods are equally likely to exhibit demand. It separately smoothes the inter-demand interval and nonzero demands via Exponential Smoothing, but updates both only when there is nonzero demand. The in-sample fit and the point forecast then essentially is the ratio of smoothed nonzero demand, divided by the inter-demand interval (unless there is some kind of Syntetos-Boylan bias correction going on). x$frc.in is the in-sample demand rate . This is the in-sample estimate of average demand - as above, this is the ratio of the current value of smoothed nonzero demands, divided by the current value of smoothed inter-demand interval lengths. If you look closely, you see that this does not change during periods with zero demand... because Croston's method only updates (smoothes) its estimates for the inter-demand interval and for the nonzero demand when there is nonzero demand . x$frc.out is the out-of-sample demand rate , i.e., the forecast for average demand. As you see, it is constant, because Croston's method does not provide for out-of-sample dynamics like trend or seasonality. x$weights are the optimized smoothing weights for smoothing the inter-demand interval and nonzero demand component. Originally, Croston used only a single (pre-set) weight for smoothing; Kourentzes apparently optimizes both weights separately. (I am not familiar with the reference given on the help page - it may be useful for you to read it, though.) Here is your time series, with the in-sample fit in red and the forecast in green: bar Now, looking at your data v , Croston's method is quite obviously inappropriate. Although you do have many zeros, your time series is not intermittent in any meaningful sense. Instead, it is obviously seasonal, with periods of nonzero demand alternating with periods of zero demand in a yearly pattern. I'd much more recommend using a method that explicitly models this seasonality, like stlf() in the forecast package. Its forecasts will go negative, so you need to truncate them at zero, that is, set all negative point forecasts to 0. pmax() is helpful here. Of course, prediction intervals from stlf() don't make much sense, since their calculation does not respect nonnegativity constraints, but I assume that you are mostly interested in point forecasts, anyway. For instance: foo
