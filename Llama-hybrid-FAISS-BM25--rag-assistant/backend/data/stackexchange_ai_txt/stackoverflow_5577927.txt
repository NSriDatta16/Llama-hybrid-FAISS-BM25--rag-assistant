[site]: stackoverflow
[post_id]: 5577927
[parent_id]: 
[tags]: 
Action in the concurrent thread is not executed when main thread is waiting

I have an application which use temporary tables (existed in the scope of user session) and complex data processing. For debug purposes I need to execute queries to this temporary tables during the application processing. I added some additional logic as aspects (AspectJ) and run my application as load-time weaving application in Eclipse (using AJDT/ JDT weaving plugin). I do the following: after getting new connection I create another thread with gui and pass the connection to it (would be described later). After each query the main application thread waiting for the message from gui thread to continue the work (that gives me an opportunity to make queries and see intermediate results in temporary tables). Messaging is implemented using BlockingQueue. In the GUI I have a frame with text area for query and two buttons "Run query" and "Release main thread". I wanted that pressing the "Run query" button will execute the query and show the results on the frame. And pressing the button "Release main thread" will send the message to the main thread to continue the work. The problem is when the main thread is waiting for blockingQueue.take(), pressing the button "Run query" causes the frame to freeze and do nothing (it looks like gui becomes unresponsive). When the main thread is waiting for blockingQueue.take(), "Release main thread" forks fine (but not after "Run query" pressing). When the main thread is running (I put plenty of objects in the queue), "Run query" button works normally and I can see query results. At first I've tried manipulations with EDT and events dispatching, but nothing has helped me. Have you any ideas of the problem? //aspect on 'newConnection' pointcut after() returning (final Connection connection): newConnection() { gUI = new Runnable() { public void run() { new GuiView(blockingQueue, connection); } }; SwingUtilities.invokeLater(gUI); } //GuiView code extract for button with query data retrieval action button.addActionListener(new ActionListener(){ public void actionPerformed(ActionEvent e) { try { ResultSet rs = ConnectionManipulator.executeStatement( queryTextAreaG.getText() ); ///....result parsing logic } catch (SQLException e1) { JOptionPane.showMessageDialog(null, "Exception!"); } finally { } //....result out logic } });
