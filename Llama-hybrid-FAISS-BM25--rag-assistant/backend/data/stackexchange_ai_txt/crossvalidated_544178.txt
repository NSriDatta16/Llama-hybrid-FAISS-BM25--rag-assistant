[site]: crossvalidated
[post_id]: 544178
[parent_id]: 544177
[tags]: 
I don't suggest findCorrelation to get rid of highly correlated observations. I've just read the documentation by ?caret::findCorrelation and still don't know which correlation measurement method the function uses, but I think it uses pearson correlation . Pearson correlation is not always a good way to measure correlation, specifically when you see enormous percentage (like %99 etc.) there should be something wrong. Let me try to explain with an example; First, I created a dummy dataset with two different variable whose variables come from different distributions; set.seed(1453) dummy Now I'm checking the corrlation between two variable with base cor function (which uses pearson correlation coefficient as default) cor(dummy) A matrix: 2 Ã— 2 of type dbl a b a 1.0000000 0.1844875 b 0.1844875 1.0000000 Pearson correlation coefficient says there is %18 positive correlation between two variables. Now, I am creating an outlier which isn't close the mean of both two distributions ; hack_row Now, Let me check the correlation again; cor(dummy2) a b a 1.0000000 0.9896067 b 0.9896067 1.0000000 Pearson says %98 correlation between two variables ! Only one outlier can make it possible. In short, some outliers can mislead us. %98 is not that realistic. We could use a non-parametric correlation measurement method like spearman correlation with the same data (with outlier). cor(dummy2,method = 'spearman') a b a 1.0000000 0.1544787 b 0.1544787 1.0000000 Spearman says there is %15 positive correlation between two variables, which is way realistic than pearson correlation. To get rid of highly correlated observations, you can use a non-parametric correlation measurement method and without findCorrelation function. Probably it will take a little more effort but you will no longer lose high amount of data. You can continue with PCA analysis with your trusty uncorrelated data. EDIT: I've just learned that caret 's findCorrelation takes a correlation matrix as an argument, changing cor 's method argument to a non-parametric one fixes everything :)
