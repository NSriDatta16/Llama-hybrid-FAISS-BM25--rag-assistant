[site]: stackoverflow
[post_id]: 1083143
[parent_id]: 1083061
[tags]: 
Mehrdad has it right. I'll only add that if you're going to stick to HttpWebRequest, then you need to learn to use "using" blocks for any resource you allocate that implements IDisposable: var user = Convert.ToBase64String( Encoding.UTF8.GetBytes(username + ":" + password)); var bytes = Encoding.ASCII.GetBytes("ConMethod=++Connect++"); var request = (HttpWebRequest) WebRequest.Create("http://10.0.0.1/st_poe.cgi"); request.Method = "POST"; request.Headers.Add( "Accept: image/jpeg, application/x-ms-application, image/gif, application/xaml+xml, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-shockwave-flash, */*"); request.Referer = "http://10.0.0.1/RST_st_poe.htm"; request.Headers.Add("Accept-Language: en-US"); request.UserAgent = "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)"; request.ContentType = "application/x-www-form-urlencoded"; request.Headers.Add("Accept-Encoding: gzip, deflate"); request.ContentLength = bytes.Length; request.Headers.Add("Host: 10.0.0.1"); request.Headers.Add("Connection: Keep-Alive"); request.Headers.Add("Pragma: no-cache"); request.Headers.Add("Authorization: Basic " + user); using (var reqStream = request.GetRequestStream()) { reqStream.Write(bytes, 0, bytes.Length); } using (var response = (HttpWebResponse) request.GetResponse()) { using (var responseStream = response.GetResponseStream()) { using (var reader = new StreamReader(responseStream)) { return reader.ReadToEnd(); } } }
