[site]: stackoverflow
[post_id]: 2343464
[parent_id]: 2343449
[tags]: 
A namespace is a high-level unit of organization within .NET. Declaring types within classes is typically frowned upon (but, as with all things, it's not a 100% rule) because it can make the types more tightly coupled and more difficult to find. VB.NET Modules are somewhat of an exception ( edit : they're really more of a compiler trick/syntactical-sugar), but normally everything in the .NET ecosystem is contained in a namespace. Your example lends itself to reuse; if it were within a class then it would imply that delegate should only be used by that class and would likely lead to duplicate delegates needlessly being introduced. Update: When working with only a handful of types namespaces don't seem of much use, but without them a project of any size would be an organizational catastrophe. Imagine the .NET framework without namespaces, one (probably long outdated) count puts the framework at 3500 Types. Namespaces are like folders or drawers for documents; a few loose papers are easy to manage but if you have many pages then finding the one you need becomes painful. Give the documentation a read, it's short and not terribly complicated (neither are namespaces) but has a couple decent points MSDN - Namespace (c#)
