[site]: stackoverflow
[post_id]: 2640974
[parent_id]: 2640788
[tags]: 
The fundamental issue is that pointers do not translate to external storage. There is no guarantee that when your program executes again, it will have the same memory ranges (addresses). Given this principle, there are alternative methods to storing your data. Processes for persistant data: 1. Use a database, small or large. 2. Convert your data into ASCII text in a scannable format. 3. Use fixed length binary records 4. Use variable sized binary records 5. Implement a dictionary data structure using file offsets instead of pointers. Using A Database Let a professional application (that has been tested and works) manage your data. This lets you concentrate on using the data rather than storage and retreival. Convert to a scannable format The idea here is to write the data to the file in a format that is easy to retrieve and maintain. Examples include Comma Separated Values (CSV), XML and INI. This requires code on your part to read and write the data. There are libraries to assist. Use fixed length binary records With fixed length records, the data is read from the file and inserted into your dictionary. Binary files are very efficient as far as transferring data, but not very portable, especially when operating system versions change, platforms change or compiler versions change. There may be a waste of space for text records. Use variable sized binary records This technique saves space but increases processing time. Each record must be processed in order to find the location of the next one. Random access to records is difficult. Otherwise similar to fixed length binary records. Implement a dictionary data structure in the file Same algorithm as your memory based data structure except uses file offsets instead of pointers. New records can be appended to the end of the file. Reclaiming deleted entries is difficult and will lead to fragmentation. Fragmentation can be resolved by writing a new file. If you are going through this much effort, you might as well use an existing database application.
