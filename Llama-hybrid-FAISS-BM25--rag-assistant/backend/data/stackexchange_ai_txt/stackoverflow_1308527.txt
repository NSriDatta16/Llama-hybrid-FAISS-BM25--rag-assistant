[site]: stackoverflow
[post_id]: 1308527
[parent_id]: 
[tags]: 
When does Erlang's parallelism overcome its weaknesses in numeric computing?

With all the hype around parallel computing lately, I've been thinking a lot about parallelism, number crunching, clusters, etc... I started reading Learn You Some Erlang . As more people are learning (myself included), Erlang handles concurrency in a very impressive, elegant way. Then the author asserts that Erlang is not ideal for number crunching . I can understand that a language like Erlang would be slower than C, but the model for concurrency seems ideally suited to things like image handling or matrix multiplication, even though the author specifically says its not. Is it really that bad? Is there a tipping point where Erlang's strength overcomes its local speed weakness? Are/what measures are being taken to deal with speed? To be clear: I'm not trying to start a debate; I just want to know.
