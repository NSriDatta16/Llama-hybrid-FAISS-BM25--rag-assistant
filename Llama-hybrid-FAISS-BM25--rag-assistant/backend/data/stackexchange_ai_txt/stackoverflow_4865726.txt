[site]: stackoverflow
[post_id]: 4865726
[parent_id]: 
[tags]: 
How to convert Oracle NUMBER Primary Key to SQL Server For Ado.Net Consumption

This could be a composite question, as I may not fully understand the issue. I am scraping data from an Oracle Apex Query interface and storing the results in a local SQL Server instance so that local applications can take advantage of the data. The Oracle database I am pulling from uses primary keys that are defined as NUMBER data types (without precision or scale defined). What data type should I use on the SQL Server end to store an Oracle NUMBER field? Most of the documentation I have found states to store a NUMBER data field in SQL Server as a Float, but this is not helpfull since many of these NUMBER fields represent primary keys (using a floating point value as a primary key is a bad idea). I had toyed with using DECIMAL(38,38) in Sql Server to store the Oracle value, but when you attempt to set an ADO.NET SqlParameter (Such as on an SqlCommand) with a type of DECIMAL(38,38) with a value you will get an Arithmetic Overflow error, as it will always fully expand the SCALE. E.G. the number 23425 would expand to 23425.00000000000000000000000000000000000000 and would give an overflow error because it has used up more storage than is available in the precision of the data type of the SqlParameter.
