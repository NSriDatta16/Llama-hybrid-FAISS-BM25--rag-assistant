[site]: crossvalidated
[post_id]: 108020
[parent_id]: 108017
[tags]: 
Since scoring a CV with some precision is probably not an easy task due to the inherent noise (even for human beings, could you really give a precise score to all your peers?), I would cast it to a binary classification task (or 3, or 5...). A very important part here is to chose your attributes, for instance: University: some score given to the university. Years of experience. Number of references given. Average number of years per company. Then, since nowadays most companies have some system to evaluate their employees, I would use these evaluations as labels. Then, you would have a dataset where every row would be like: [attributes of employee CV], evaluation after 1 year. The most important part would be to chose/find good predictive attributes. As for the algorithm, I would start with regressions. PS: Ethical issues (a lot) aside. I don't think that machine learning can beat a good interviewer here, unless you are hiring/interviewing/searching lots of people per day. At most, you could use it as a first filter to find good CV, but you will have lots of false negatives.
