[site]: stackoverflow
[post_id]: 1198013
[parent_id]: 1197999
[tags]: 
To address your points: Using %input% is very bad . That will cause a full table scan every query. Under any amount of load or on even a remotely large dataset your DB server will choke. An RDBMS alone is not a good solution for this. You are looking in the right place by seeking a separate solution for search. Something which can communicate well with your RDBMS is good; something that runs inside an RDBMS won't do what you need. Full Text Search in MySQL is workable for very basic keyword searches, nothing more. The scope of usefulness is extremely limited - you need a highly predictable usage model to leverage the built-in searching. It is called "search" but it's not really search the way most people think of it. Compared to the quality of search results we have come to expect from Google and Bing, it does not compare. In that sense of the word "search", it is something else - like Notepad vs Word. They both are things to type in, but that's about it. As far as separate systems for handling search, Lucene is very good. Lucene works however you want it to work, essentially. You can interact with it programatically to insert indexable documents. Likewise, a Google Appliance (not Google Custom Search ) can be given direct meta feeds which expose whatever you want to be indexed, such as data directly from a database.
