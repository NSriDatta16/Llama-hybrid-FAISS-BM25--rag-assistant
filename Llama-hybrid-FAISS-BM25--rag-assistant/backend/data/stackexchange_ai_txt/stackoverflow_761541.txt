[site]: stackoverflow
[post_id]: 761541
[parent_id]: 761520
[tags]: 
To compute a hash, you have to traverse both trees entirely. You have to examine the properties of each node and perform the hash computation. For example, if a String is in the node, you have to iterate over its characters and do some math. Then you have to combine the hash of the node with the hash of the others. So, computing a hash value for two structures is of the same order (probably a little more expensive) as comparing them for equality one time. In fact, because when performing an equality comparison, you can stop as soon as you detect any difference, a single equality test is going to be much faster, on average. Hashing is likely to be beneficial only if you cache the hash value and reuse it many times. And remember, because hash values for different trees can collide, you still need to have equality comparison implemented.
