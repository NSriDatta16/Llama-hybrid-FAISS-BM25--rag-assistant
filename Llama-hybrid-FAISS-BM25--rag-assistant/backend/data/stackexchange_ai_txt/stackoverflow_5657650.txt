[site]: stackoverflow
[post_id]: 5657650
[parent_id]: 5657551
[tags]: 
This probably should be done with a command line parameter but, if you must do it within the makefile, you can use the following: $ cat makefile qq: myprog.c makefile gcc -DMYSTRING='"hello"' -o myprog -Wall myprog.c $ cat myprog.c #include int main(void) { printf ("[%s]\n", MYSTRING); return 0; } The -D specifies a compile-time #define which sets MYSTRING to "hello" . Then, when you use MYSTRING in the code, it's turned into the string. In that sample code, I simply pass it to printf but you could equally well pass it to fopen as per your requirement. When you run that executable, the output is: [hello] This is little different to simply hard-coding the value in the source code - you will have to recompile if you ever want the string to change (which is why I suggested a command line parameter in the first paragraph).
