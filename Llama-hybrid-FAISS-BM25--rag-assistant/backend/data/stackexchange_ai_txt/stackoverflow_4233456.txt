[site]: stackoverflow
[post_id]: 4233456
[parent_id]: 4232560
[tags]: 
I think some of your estimates are too high. 20% of a site's registered users are using the service at any time. This is extremely high. It would mean that the average person is registered at only 5 websites, and spends 24 hours per day browsing those 5 sites. I think it would be closer to estimate that an average person is registered at 50 websites, and spends 2.4 hours per day browsing all of them combined, which would put you off by a factor of 100. 0.5 requests per second per simultaneous user. This depends on the site, but I would say the normal pattern is to have a one dynamic request to render the page template, and a series of static handlers to render images, CSS, and javascript. Static requests don't incur CPU charges. If there's one dynamic request per page, your estimate assumes the average user is navigating to a new page twice every second. I'd say once every 5 seconds is more reasonable. I'm not sure this kind of estimation is particularly useful to begin with. Whether your site has 10,000 users or 10 million users, you're either monetizing traffic or you're losing money. If you're averaging 150ms of CPU time per request @ $0.10 per hour, one dollar buys you 240,000 requests. If you can't earn back $1 in ad revenue from 240,000 page views, you're doing something wrong. These estimates don't factor in what you're paying for bandwidth or disk storage, or what you lose every time Google decides to put the datastore in read-only mode in the middle of a weekday afternoon. Or the development costs of learning the datastore, which imposes many constraints that you wouldn't have with a traditional relational database. Nor do they factor in what you gain in scalability; if your site turns out to be only mildly popular (like the overwhelming majority of the internet), you'll probably fit within the free quotas, and pay nothing. If you become extremely popular, your app will scale automatically, assuming you designed it well to begin with. This is as opposed to EC2 or Azure, where you're paying ~$77 per instance whether anyone's hitting it or not.
