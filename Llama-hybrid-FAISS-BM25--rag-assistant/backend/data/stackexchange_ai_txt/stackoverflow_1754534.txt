[site]: stackoverflow
[post_id]: 1754534
[parent_id]: 1754397
[tags]: 
No, because it's not fully implemented on the compilers I use. When C++0x comes out, and Visual Studio 2010 is fully released, along with a "matching" g++, I will use C++0x when I can. This is likely because I frequently start new projects (I make games). Although I have an existed code-base, it changes every time I figure out a way to do something better; change isn't an obstacle for me. Taking advantage of C++0x would just be another change. You'll find different opinions with larger code-bases. Some places prefer code to look uniform, and that means spotty C++0x isn't an option: they'd either have to convert the entire thing to take advantage of C++0x, or not use it. Other places might encourage the use of C++0x features, and in spare time try to fix up older code to match. And other places, like me, might immediately want to take advantage of all C++0x has to offer. The answer is: it depends.
