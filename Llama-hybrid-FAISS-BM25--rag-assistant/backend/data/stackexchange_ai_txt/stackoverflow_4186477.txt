[site]: stackoverflow
[post_id]: 4186477
[parent_id]: 4186200
[tags]: 
Does the resource "mm" get freed by the garbage collector? Once it is dead, yes. Eventually the GC will run and free the memory if it is unreferenced. Is this a security risk? Let's be precise in our terminology. An asset is something of value: private data, a user's time, and so on. An attacker is someone who wishes to do harm to the asset. A threat is the manner in which the attacker could do harm. A vulnerability is an aspect of the scenario which could be taken advantage of by the attacker to make good the threat. To answer your question we need to know: What is the asset? Who is the attacker? What is the threat the attacker poses to the asset? What vulnerability can the attacker take advantage of to make good the threat? Only once you state the answers to those questions can we possibly know whether failure to immediately release a memory buffer upon an exception is a security risk. For a real-world example, the asset could be my television, the attacker could be a thief, the threat is theft, and the vulnerability is an unlocked second floor window and the ladder in my garage. The ladder and the window are both part of a vulnerability to that threat. However, neither of them are a vulnerability to the threat of, say, arson. You cannot determine the risk of a particular aspect of a situation until you know what the realistic threat is! I know it is best practice to explicitly free any allocated resource. It is good practice to explicitly clean up unmanaged resources, like file handles that are controlled by the operating system. Typically you let the garbage collector clean up managed memory.
