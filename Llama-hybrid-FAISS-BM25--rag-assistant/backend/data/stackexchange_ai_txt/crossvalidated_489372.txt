[site]: crossvalidated
[post_id]: 489372
[parent_id]: 403098
[tags]: 
This is a sequence of categorical events. In order to compare and cluster (group) them we need some similarity metric(s). One approach would be to treat the sequence as a text string, and use one of the many existing string similarity metrics , such as: Levenstein Distance, cosine similarity, Jaccard index, et.c. The Python package textdistance provides a unified interface to over 30 of these algorithms, including some sequence-based like Longest Common Subsequence . You would then use (some) of these metrics as features. Probably should standardize them as their ranges may be quite different. Feature selection using correlation or mutual information might be useful to reduce the number of features, as there may be redundancies. Or using a feature reduction technique like PCA or UMAP. The Tensorflow embedding projector can be used to explore the data when mapped down to a 2/3-dimensional space. An alternative, or complimentary approach, would be to use a learned sequence embedding. One Python library for that would be sgt .
