[site]: stackoverflow
[post_id]: 3388342
[parent_id]: 
[tags]: 
Help! check_in': undefined method `push' for nil:NilClass (NoMethodError)

Hi Im getting an core error which is really standard I suppose in Ruby but dont know what to make of it. I have a program that I have written. Its purpose is to register guests at a camping. You have a menu with 5 different options. 1. Checkin. When i do this I get a undefined method generateParkingLot' for # (NoMethodError) When I choose Checkout I get a undefined local variable or method departure' for Menu:Class (NameError). So please i someone has a clue to my problem it would be great. I will here paste all my code. The code is separated in different files and I have used require for the different files. Here though I will paste all the code in one trace. Thankful for all help. -Sebastien require 'guest' require 'parking_lot' class Camping attr_accessor :current_guests, :parking_lots, :all_guests, :staticGuests def initialize(current_guests, parking_lots, all_guests, staticGuests) @current_guests = Array.new() # initiera husvagnsplatserna @parking_lots = Array.new(32) 32.times do |nr| @parking_lots[nr] = Parking_Lot.new(nr) @staticGuests = Array[ Guest.new("Logan Howlett", "Tokyo", "07484822",1, @parking_lots[0]), Guest.new("Scott Summers", "Chicago", "8908332", 2, @parking_lots[1]), Guest.new("Hank Moody", "Boston", "908490590", 3, @parking_lots[2]), Guest.new("Jean Grey", "Detroit", "48058221", 4, @parking_lots[3]), Guest.new("Charles Xavier","Washington DC", "019204822",5, @parking_lots[4]) ] end @all_guests = [] @staticGuests.each do |guest| @current_guests[guest.plot.nr] = guest @all_guests.push(guest) end end def to_s # creates an empty string list = " " # loop from 1 to 32 (1..32).each do |n| if (!@current_guests[n-1].nil?) list += @current_guests[n-1].to_s else # else adds the text "Vacant" list += n.to_s + ": Vacant!\n" end return list end def generateParkingLot randomNr = 1+rand(32) # exists a guest at the (0-based) position? if (!@current_guests[randomNr-1].nil?) # if so generate a new figure generateEmpty(array) else # returns the generated number return randomNr end end end end class Guest attr_accessor :firstname, :lastname, :address, :phone, :departure attr_reader :arrived, :plot def initialize (firstName, lastName, address, phone, plot) @firstName = firstName @lastName = lastName @address = address @phone = phone @arrived = arrived @plot = plot end def to_s "Personal information: (#{@firstName}, #{@lastName}, #{@address}, #{@phone}, #{@arrived}, #{@departure}, #{@plot})" end end require 'ruby_camping' require 'camping_guests' class Main if __FILE__ == $0 $camping = Camping.new(@current_guests, @all_guests, @parking_lots,@staticGuests) puts "\n" puts "Welcome to Ruby Camping!" while (true) Menu.menu end end end require 'date' require 'camping_guests' require 'guest' class Menu def initialize(guests = []) @camping = Camping.new(guests) end def self.menu puts "---------------------------" puts " Menu" puts " 1. Checkin" puts " 2. Checkout" puts " 3. List current guests" puts " 4. List all guests" puts " 5. Exit\n" puts "" puts " What do you want to do?" puts "---------------------------" print ": " action = get_input do_action(action) end # fetches menu choice and returns chosen alternativ def self.get_input input = gets.chomp.to_i while (input > 5 || input
