[site]: stackoverflow
[post_id]: 1495159
[parent_id]: 1495036
[tags]: 
I saw the comments and i think you can use boost::asio with boost::asio::deadline_timer Fragment of a code: void restart_timer() { timer_.cancel(); timer_.expires_from_now(boost::posix_time::seconds(5)); timer_.async_wait(boost::bind(&handleTimeout, MyClass::shared_from_this(), boost::asio::placeholders::error)); } Where handleTimeout is a callback function, timer_ is boost::asio::deadline_timer and MyClass is similar to class Y: public enable_shared_from_this { public: shared_ptr f() { return shared_from_this(); } } You can call restart_timer before connect ou read/write More information about share_from_this()
