[site]: stackoverflow
[post_id]: 3521672
[parent_id]: 3521586
[tags]: 
For what you're doing the dictionary is perfect. The retrieval time on keys for items in a dictionary is damn fast , but ultimately relies on the hash code function of the key (in your case string.GetHashCode() ). You're in luck, because the .Net string's GetHashCode() function is very good. If you do get a hash code clash, .Net will call the Equals method on the object, and so guarantees uniqueness. We have dictionaries with hundreds of thousands of items, and the lookup times are negligible. Sorting the result-set from the database will be of no benefit in this case. Hope this helps.
