[site]: stackoverflow
[post_id]: 2217252
[parent_id]: 2033914
[tags]: 
Hmmmm... I think that you just don't see the Android app the right way. You can do something almost like what you want easily: Do the app activities save/restore state like it is encouraged in the developer livecycle documentation. If some login is needed at the restore stage (no login/session information available) then do it. Eventually add a button/menu/timeout in which case you will do a finish() without saving the login and other session info, making implicitly the end of app session: so if the app is started/brought to front again it will start a new session. That way you don't really care if the app is really removed from memory or not. If you really want to remove it from memory (this is discouraged, and BTW for what purpose?) you can kill it conditionally at the end of onDestroy() with java.lang.System.exit(0) (or perhaps restartPackage(..) ?). Of course do it only in the case where you want to "really end the app", because the onDestroy() is part of the normal lifecycle of activities and not an app end at all.
