[site]: crossvalidated
[post_id]: 134943
[parent_id]: 134857
[tags]: 
The point he is making here is that you cannot learn (Ie see a few examples and generalise to the rest) the xor problem with a (multilayer) Neural network or other stat learning algorithm that takes as input a fixed set of dimensions. With such a statistical learning tool, the best you can do is memorise all responses (since there is no similarity between the examples in terms of the vector space). The fundamental Problem is that xor is a serial operation (like eg counting, finding maximum etc) and you cannot generalise assuming a pattern represented as a point in a fixed n dimensional space - since each dimension is implicitly distinct [eg one dimension represents #apples, one dimension represents #oranges etc]. So learning xor for apples and oranges doesn't help you learn xor for bananas and strawberries. Similar issues arise with translation invariance and rotation invariance in image processing (convolutional networks get around this by hard coding translation invariance into the network). If you have a statistical learning tool that instead takes input in a serial fashion, such as a recurrent Neural net, then XOR and similar problems could potentially be learnt. [ eg you have 1 dimensional input x and previous output y , then you can learn xor of a sequence length n = xor (xor sequence n-1, x)] and similarly the maximum of a sequence ...
