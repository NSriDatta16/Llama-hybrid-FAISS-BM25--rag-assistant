[site]: stackoverflow
[post_id]: 4385296
[parent_id]: 4384376
[tags]: 
I managed to figure out the C++ code to do all this. Like most C++ COM code it gets quite verbose. But here you go: #define _WIN32_DCOM #include #include #include #include #include # pragma comment(lib, "wbemuuid.lib") void com_init() { HRESULT hr; hr = CoInitializeEx(0, COINIT_MULTITHREADED); if (FAILED(hr)) { throw std::runtime_error("COM Error"); } hr = CoInitializeSecurity(NULL, -1, NULL, NULL, RPC_C_AUTHN_LEVEL_DEFAULT, RPC_C_IMP_LEVEL_IMPERSONATE, NULL, EOAC_NONE, NULL); if (FAILED(hr)) { CoUninitialize(); throw std::runtime_error("COM Error"); } } std::wstring wmi_last_boot_time() { IWbemLocator *pLoc = NULL; IWbemServices *pSvc = NULL; IEnumWbemClassObject *pEnum = NULL; IWbemClassObject *pEach = NULL; std::wstring lastBootUpTime; try { HRESULT hr; // Get WMI object hr = CoCreateInstance(CLSID_WbemLocator, 0, CLSCTX_INPROC_SERVER, IID_IWbemLocator, (LPVOID *) &pLoc); if (FAILED(hr)) { throw std::runtime_error("WMI: Unable to create WbemLocator"); } hr = pLoc->ConnectServer(L"root\\cimv2", NULL, NULL, 0, NULL, 0, 0, &pSvc); if (FAILED(hr)) { throw std::runtime_error("WMI: Unable to connect"); } // Exec query hr = pSvc->ExecQuery(L"WQL", L"SELECT LastBootUpTime FROM Win32_OperatingSystem", 0, 0, &pEnum); if (FAILED(hr)) { throw std::runtime_error("WMI: Query failed"); } // Fetch result VARIANT value; ULONG uCount; hr = pEnum->Next(WBEM_INFINITE, 1, &pEach, &uCount); if (FAILED(hr) || uCount == 0) { throw std::runtime_error("WMI: Can't fetch result"); } hr = pEach->Get(L"LastBootUpTime", 0, &value, 0, 0); if (FAILED(hr)) { throw std::runtime_error("WMI: Can't get LastBootUpTime"); } if (value.vt != VT_BSTR) { throw std::runtime_error("Expected string"); } lastBootUpTime = value.bstrVal; } catch (std::runtime_error &) { if (pLoc) pLoc->Release(); if (pSvc) pSvc->Release(); if (pEnum) pEnum->Release(); if (pEach) pEach->Release(); throw; } pLoc->Release(); pSvc->Release(); pEnum->Release(); pEach->Release(); return lastBootUpTime; } int main() { try { // Initialize COM. Do this only once com_init(); // Get last boot time std::wstring str = wmi_last_boot_time(); // Reformat time std::wcout I think you can get this working on vc6. wbemidl.h contains COM interfaces definitions that you could probably generate with midl or perhaps even use the headers from a recent SDK. Unfortunately I don't even have vc6 installed.
