[site]: datascience
[post_id]: 31296
[parent_id]: 30652
[tags]: 
There are many ways to build a spell corrector. One of the simplest is: Detect an incorrect word Generate candidate suggestions Score and rank the candidate replacements For detecting an incorrect word, a simplifying assumption is that any word not a dictionary is a spelling error. Otherwise, you have to build a separate model to detect if a word is a potential spelling mistake based the current context. To generate candidate words, you need to find dictionary words that are similar to the incorrect word. That requires defining "similar", typically similar is measured by edit distance (e.g., deletes, transposes, replaces, or inserts of individual characters). For scoring and ranking, probabilities of candidate words are weighted by a language model and channel model . A language model weights how likely a word will appear in the current context. A channel model reflects if an error happens depending on how the word is transmitted (e.g., full computer keyboard errors are different from mobile phone errors ). For your example, you need to construct a custom dictionary of all possible words and a corpus reflecting the frequency of occurrences for the custom dictionary words. If possible, construct an error model of common mistakes. Peter Norvig goes into greater detail here . Later you can add Deep Learning methods, but it is better to start with a simpler approach that requires less data.
