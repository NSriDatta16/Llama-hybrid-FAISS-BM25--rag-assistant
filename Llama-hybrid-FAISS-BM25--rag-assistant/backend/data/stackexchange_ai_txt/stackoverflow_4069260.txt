[site]: stackoverflow
[post_id]: 4069260
[parent_id]: 4064929
[tags]: 
Using an absolute positioned wrapper, we can use an img tag to add in the image, then use a span to contain the overlaid text, like this: A Part one is easy: by absolute positioning the span inside the relative positioned wrapper, we can move the span into the correct position: #wrapper { position: relative; } #wrapper #text { position: absolute; top: 50px; left: 50px; } Part two is a little stranger. The problem is that with fonts, a font-size of 100px isn't actually going to cause the font to fill the box of 100px height. You will have to experiment to find the correct font size. However, we can resize the span so that it is 50px wide and 50px high: #wrapper #text { display: inline-block; width: 100px; height: 100px; font-size: 100px; line-height: 1em; text-align: center; vertical-align: middle; } Adding an border will show that the span has the correct size, and that the letter is centered both vertically and horizontally. Lastly, part three is simple if we're only targeting modern browsers here. Using a rgba color with zero opacity, we can make the text invisible and selectable at the same time. #wrapper #text { color: rgba(255, 255, 255, 0); } Bonus: Making the thing draggable. By dropping in jQuery UI Draggable , we can easily make the box draggable. Adding in a cancel option so that the text remain selectable, and we're done! $('#wrapper').draggable({ cancel: '#text' }); See it all coming together here: http://www.jsfiddle.net/yijiang/83W7X/
