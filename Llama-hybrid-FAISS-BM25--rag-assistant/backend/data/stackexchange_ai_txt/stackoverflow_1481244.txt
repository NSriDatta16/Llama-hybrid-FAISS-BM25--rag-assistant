[site]: stackoverflow
[post_id]: 1481244
[parent_id]: 1481216
[tags]: 
As a return value of an opaque collection accessor/mutator The operator[] of std::map returns a reference. To shorten the text needed to reference a variable If you miss old-school with Foo do ... statement (that's Pascal syntax), you can write MyString &name = a->very->long_->accessor->to->member; if (name.upcase() == "JOHN") { name += " Smith"; } another example of this can be found in Mike Dunlavey's answer To state that something is just a reference References are also useful in wrapper objects and functors--i.e. in intermediate objects that logically contact no members but only references to them. Example: class User_Filter{ std::list const& stop_list; public: Functor (std::list const& lst) : stop_list(lst) { } public: bool operator()(User const& u) const { return stop_list.exists(u); } }; find_if(x.begin(),x.end(),User_Filter(user_list)); The idea here that it's a compile error if you don't initialize a reference in constructor of such an object. The more checks in compile time--the better programs are.
