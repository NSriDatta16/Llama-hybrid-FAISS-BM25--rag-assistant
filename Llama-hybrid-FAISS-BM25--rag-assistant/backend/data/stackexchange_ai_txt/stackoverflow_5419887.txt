[site]: stackoverflow
[post_id]: 5419887
[parent_id]: 5414496
[tags]: 
As far as I can see from the spec WebGL supports framebuffer objects and read-back operations. This is sufficient for you to transform the data and get it back into client space. Here is a sequence of operations: Create FBO with attachment render buffers that you need to store the result; bind it Upload all input data into textures (the same size). Create the GLSL processing shader that will do the calculus inside the fragment part, reading the input from textures and writing the output into destination renderbuffers; bind it Draw a quad; read back the render buffers via glReadPixels .
