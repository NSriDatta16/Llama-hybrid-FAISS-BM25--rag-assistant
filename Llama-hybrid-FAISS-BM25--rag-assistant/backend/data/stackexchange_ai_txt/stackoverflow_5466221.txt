[site]: stackoverflow
[post_id]: 5466221
[parent_id]: 5466187
[tags]: 
For brevity and simplicity, there is nothing really wrong with a delete-reinsert approach, barring foreign key hooks from child tables or triggers firing for each (re)insert. Another way to do it could be to pass the new set as a table-valued parameter to a SP to Sql Server, which would then use a duo of queries to make the change delete many_table where studentid=@studentid and someid not in (select someid from @tableparam p) insert many_table(studentid, someid) select @studentid, p.someid from @tableparam p left join many_table t on p.someid=t.someid and t.studentid=@studentid where t.someid is null (there is a more elegant MERGE syntax for SQL Server 2008, which is yet another option, further testing your TSQL skills)
