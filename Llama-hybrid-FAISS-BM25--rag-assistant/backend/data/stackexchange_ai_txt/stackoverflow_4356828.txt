[site]: stackoverflow
[post_id]: 4356828
[parent_id]: 4356195
[tags]: 
In C, a pointer-to-int ( int * ) variable holds the address of an integer, and can also be used for holding the address of the 1st integer in an array of several because you can reach the 2nd and subsequent integers just by adding to the address of the 1st. malloc() gives you the address of a block of memory which you will use to hold lines consecutive integers, so you should be storing the address it gives you in a pointer-to-int variable, and the relevant readfile() parameter should have this type too. Inside readfile() , you want to give the fscanf() call the address of the ith integer. You can get this by simply adding i to the original address, because C takes care of multiplying i by sizeof (int) for you: int *data; data=malloc(sizeof(int)*lines); readfile(fp, data, lines); ... free(data); /* Don't forget to release the memory eventually */ ... int readfile(FILE* fp,int* storage_array,int lines) { int i=0; for(i=0; i The fscanf() line could be equivalently written fscanf(fp,"%lf",&(*(storage_array+i))); or even fscanf(fp,"%lf",&storage_array[i]); since in C, the expressions *(a + b) and a[b] are equivalent in every way.
