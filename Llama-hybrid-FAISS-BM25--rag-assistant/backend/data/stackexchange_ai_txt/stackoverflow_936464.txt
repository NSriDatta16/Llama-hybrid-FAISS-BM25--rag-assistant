[site]: stackoverflow
[post_id]: 936464
[parent_id]: 925173
[tags]: 
I've been thinking about this very thing at work today. I've inherited a test project that has been maintained and updated by multiple people in the past, and as such currently contains a rather confusing hierarchy. In an attempt to simplify matters, I have started out using the following structure: Tests (Namespace) -- Infrastructure (Folder) ---- general utility classes (common to all tests) ---- any other config -- ClassATests (Folder) ---- ClassATestBase (base class for setup of common mock objects etc.) ---- ClassATestMethods (helper methods for the ClassATests) ---- ClassATests (main test class) -- ClassBTests (Folder) etc. I've found this approach to useful so far, as it means most of the code that will run during any given test can be found in the same folder. It also aims to avoid the scenario of one huge TestMethods class. This may not be the most elegant of solutions (sorry, no pun intended!), but its working for me at present. Any and all suggestions are most welcome though!
