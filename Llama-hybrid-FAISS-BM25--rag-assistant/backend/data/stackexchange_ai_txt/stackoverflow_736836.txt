[site]: stackoverflow
[post_id]: 736836
[parent_id]: 732596
[tags]: 
"It needs to perform the writes very fast" is a vague requirement. Whatever you do, writes may be delayed by contention in the database. If your application needs to not block when it's writing audit records to the database, you should make the audit writing asynchronous and keep your own queue of audit data on disc or in memory (so you don't block the main worker thread/process) InnoDB may allow concurrent inserts, but that doesn't mean they won't be blocked by contention for resources or internal locks for things like index pages. MyISAM allows one inserter and several readers ("Concurrent inserts") under the following circumstances: The table has no "holes in it" There are no threads trying to do an UPDATE or DELETE If you have an append-only table, which you recreate each day (or create a new partition every day if you use 5.1 partitioning), you may get away with this. MyISAM concurrent inserts are mostly very good, IF you can use them. When writing audit records, do several at a time if possible - this applies whichever storage engine you use. It is a good idea for the audit process to "batch up" records and do an insert of several at once.
