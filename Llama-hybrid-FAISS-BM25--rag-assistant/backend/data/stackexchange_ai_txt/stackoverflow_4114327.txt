[site]: stackoverflow
[post_id]: 4114327
[parent_id]: 4114268
[tags]: 
I would definitely think about caching. Especially if you get sets with a lot more users, making an AJAX request every 10 seconds could easily overload your server. However, if you want to keep it simple, make a request every few minutes instead, to update. Cache the users, have them generated into the javascript code, say users = new Array(user1, user2, ...). You don't really have to keep updating the page if it's not that important, as most users would navigate away within a minute or two anyways. If you have a long list that changes every few seconds, that gives you enough time to not ever have to update using AJAX, and just rely on the server generated list of users. If not, store the last time you updated the list in a variable, and send the time as an argument to your server when you're updating via AJAX, and then have the server quickly check what new users were added, and send just those. Then, just merge the new array of new servers with the old array. I highly suggest not making a call every 10 seconds for a new name though. Not only will you run up more bandwidth on your server, you will increase the CPU usage when it has to find the next user in the list for you, and then send you that one. For good practice, always let the client do as much of the work as possible, without having lag. There is only one server, but many more clients. Each operation you shift to the clients will save your server hundreds, if not thousands, of operations. As for long polling vs setInterval, I would recommend setInterval in that case. You can at least send a request with a time argument, specifying the last update time, and thus only needing to send that small portion, instead of the entire data array. var storage = new Array(user1, user2, ...); //set all your data here, generate it from your server var lastUpdate = //set the last time you updated it, just create a date variable function rotateUsers() { //do your fade in and fade out here } function update() { //create a new HttpRequest, and then set the url as "yoursite.com/update?lastUpdateTime="+lastUpdate; //Take the response data, and merge the new users list with the old one } setInterval('rotateUsers()',10000); setInterval('update()',60000); //update once a minute
