[site]: stackoverflow
[post_id]: 3291193
[parent_id]: 
[tags]: 
Unit testing class that does not have an output

Often times, a class would not have a direct output; it manipulates its dependencies, making them do things. For example: internal interface IEmailer { void SendEmail(); } class ReportSender { public IEmailer Emailer { get; set; } public ReportSender(IEmailer emailerToUse) { Emailer = emailerToUse; } public void SendReport() { // Do whatever is needed to create the report Emailer.SendEmail(); } } Creating a mock of IEmailer and make it expect IEmailer.SendEmail() seem to be exposing too much of the innards of the class and making the test fragile. But I can't think of any other way to test this class. How should we write unit tests for such a class?
