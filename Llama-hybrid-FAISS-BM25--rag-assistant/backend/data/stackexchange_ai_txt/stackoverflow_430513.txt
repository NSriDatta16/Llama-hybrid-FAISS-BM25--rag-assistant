[site]: stackoverflow
[post_id]: 430513
[parent_id]: 430401
[tags]: 
Interestingly, all I can find on this in the C++2003 standard is this: 3.7.1 Static storage duration [basic.stc.static] All objects which neither have dynamic storage duration nor are local have static storage duration. The storage for these objects shall last for the duration of the program (3.6.2, 3.6.3). If an object of static storage duration has initialization or a destructor with side effects, it shall not be eliminated even if it appears to be unused, except that a class object or its copy may be eliminated as specified in 12.8. This implies that the standard permits elimination of items in static storage if initialization and destruction of them have no side effects and they are otherwise unused. If there's a more direct permission, I didn't see it (but maybe someone else will). However, it should be noted that having the linker eliminate unused objects in the final image is a very common optimization.
