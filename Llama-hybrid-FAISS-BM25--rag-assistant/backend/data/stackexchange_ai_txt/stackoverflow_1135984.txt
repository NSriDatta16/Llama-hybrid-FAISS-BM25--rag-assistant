[site]: stackoverflow
[post_id]: 1135984
[parent_id]: 1135508
[tags]: 
My general advice: design your layers as though they will be deployed to separate tiers. Hence pay very careful attention to the design, especially granularity, of the interfaces. Busy interfaces (getFirstName, getFamilyName, getPhoneNumber ...) will have serious overhead when remoted (prefer single method. getPersonDetails) Also consider errors that can occur when layers are separate. Now you can wrap access to the layers in a Location Transparant API. CORBA, Java EE EJBs are examples of way to do that, but of course you can write your own facade. The actualy remoting technology you use is down to you, I'm a Java EE guy so I would just us EJBs.
