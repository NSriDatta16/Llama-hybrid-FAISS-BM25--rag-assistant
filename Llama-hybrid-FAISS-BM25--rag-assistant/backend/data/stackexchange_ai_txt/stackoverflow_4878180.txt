[site]: stackoverflow
[post_id]: 4878180
[parent_id]: 
[tags]: 
How do you resolve ambiguity between types in Linq?

I have two entity sets with entities of the same name with properties of the same name. Hence: FormsEntities formEntities2011 = new FormsEntities2011(); FormsEntities formEntities2010 = new FormsEntities2010(); And I have queries for each: // -- Get a list of Clients from the 2010 Database for this agent var clients2010Query = from c in formsEntities2010.Clients join ac in formsEntities2010.Agent_Client on c.Client_ID equals ac.Client_ID where ac.Agent_ID == a.Agent_ID orderby c.Client_ID select c; But I get an error on the join statement regarding ambiguity between Clients . I believe this is because the formEntities2011 and the formEntities2010 both have a Client entity. Normally I would just add the namespace to resolve the ambiguity, but I don't know how to do that in a Linq statement? The error is "The member is defined more than once" on c.Client_ID and ac.Client_ID
