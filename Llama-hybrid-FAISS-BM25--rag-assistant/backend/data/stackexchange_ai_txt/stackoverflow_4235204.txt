[site]: stackoverflow
[post_id]: 4235204
[parent_id]: 
[tags]: 
Seeking opinions on some Architecture decisions for a Web front End Ext JS based

I have started work on a little programming project basically a web based invoicing program . I will want it to be usable from smart phones. I have decided on the back end which is Perl - Dancer- Moose - Kiokudb which I'm pretty happy with for now (Yes I know there are some around already). I am now trying to make a choice over the presentation layer for the project. Initially I thought the traditional html template, page per function type arrangement. Last night I started looking at Ext Js/Sencha. This does look pretty neat and I can see how it could make a pretty good front end to something like an invoicing app. What I would like some thoughts on is what is the ideal way to handle the generation of the forms. As I see it I have a couple of options with Ext Js (or Dojo or any of these sort of frameworks) 1. I could code each form directly into a Javascript file this seems to be the route most of the demo's take. But it seems awkward to me to code a html form in Javascript when I could just write it in HTML? Am I missing something? I could dynamically generate the forms from the data, This means I would need to store meta-data linked to the data which I could do in Moose using traits. But then how do you deal with things like order of display with out getting messy? What's your thoughts on storing display meta-data with the data object? I could still generate the forms using html templates and use Ext Js to enhance these, this doesn't seem to be encouraged by Ext Js though it is possible. One thing I will say having all the display work done in Javascript does present the opportunity to completely separate the presentation layer from the rest of the code. Any opinions on what you think is best?
