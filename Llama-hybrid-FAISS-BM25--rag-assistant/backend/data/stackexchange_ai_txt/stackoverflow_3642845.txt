[site]: stackoverflow
[post_id]: 3642845
[parent_id]: 3642745
[tags]: 
What I can suggest is that in the click event, after setting the control properties, you can emit a piece of javascript that will create and display a modal when the page finishes loading upon reaching the client. Try something along the lines of the following snippet (not tested, may need small tweaking to work, but I hope you get the big idea): protected void btnNewIssue_Click(object sender, EventArgs e) { ucIssue.ChangePanelMode(PanelModeEnum.Add); ucIssue.FirmID = Convert.ToInt32(Page.Session["FirmID"]); ucIssue.loadObject(); //emit client script that will create and show the modal dialog ClientScriptManager clientScriptManager = Page.ClientScript; string scriptText = "$(document).ready(\n" + "function() {\n" + "$('#panelIssue').dialog({\n" + "autoOpen: false,\n" + "modal: true,\n" + "width: 450,\n" + "height: 320,\n" + "title: \"Some title\",\n" + "resizable: false,\n" + "draggable: false });\n" + "$('#panelIssue').dialog('open');\n" + "});"; clientScriptManager.RegisterClientScriptBlock(this.GetType(), "MyScript", scriptText, true); } You should also look at the capabilities of the dialog creation in jQuery to see what other settings will fit your scenario better. I just used a few of the params that I have in an example of mine.
