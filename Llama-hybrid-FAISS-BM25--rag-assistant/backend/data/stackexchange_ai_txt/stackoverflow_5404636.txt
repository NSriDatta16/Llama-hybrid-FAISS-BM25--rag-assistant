[site]: stackoverflow
[post_id]: 5404636
[parent_id]: 
[tags]: 
Building Google Breakpad on Mac OS X

I am attempting to build Google Breakpad for Mac OS X as a part of porting an application, based on the trunk revision 782. The Breakpad wiki specifies that one should build client/mac/Breakpad.xcodeproj, which produces a Breakpad.framework including a dynamically linked lib if I understand correctly. There is also sample code on how to use this from an Objective-C application, but all this seem very different from what seems to be the normal way of doing things on other platforms, including the use of plists and other things that are not part of my application. I would much rather do things as similar as possible across platforms. For instance, this appears to be the way that Firefox uses Breakpad: // include exception_handler.h from client/ /handler, // using ... here for brevity #include "... exception_handler.h" ... gExceptionHandler = new google_breakpad:: ExceptionHandler(tempPath.get(), nsnull, MinidumpCallback, nsnull, #if defined(XP_WIN32) google_breakpad::ExceptionHandler::HANDLER_ALL); #else true); #endif In my project, we are doing the same thing and just link against exception_handler.lib on Windows. It seems that on Linux, Breakpad generates a corresponding libbreakpad_client.a that can be linked against in the same way, but not on Mac OS X. If I do ./configure make from the breakpad root directory a libbreakpad.a is generated that does not contain the exception handler, and the libbreakpad_client.a that should is not being built. I may very well have misunderstood just about anything on both the normal way of using Breakpad as well as the normal procedure for building external libraries on the Mac, so any help is appreciated. How do I build libbreakpad_client.a on Mac OS X?
