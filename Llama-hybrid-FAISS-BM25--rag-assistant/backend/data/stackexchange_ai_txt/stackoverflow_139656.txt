[site]: stackoverflow
[post_id]: 139656
[parent_id]: 139580
[tags]: 
I think that your analysis is incorrect: walking through the list to find out the average is O(n) making lists of children with too many or too few data chunks is also O(n) moving data is proportional to the amount of data How did you arrive to O(n!)? You can sort the list [O(n lg n) in the number of children], so that on the front you have children with too much work, and at the end children with too little work. Then traverse the list from both ends simultaneously: one iterator points to a child with excess data, the other to a child with lack of data. Transfer data, and move either one iterator forward, or the other backward.
