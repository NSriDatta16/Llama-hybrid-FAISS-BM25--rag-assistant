[site]: datascience
[post_id]: 24046
[parent_id]: 24041
[tags]: 
My answer is that I would just normalize 0 = 00:00:00, 1 = 23:59:59+1sec by counting seconds and divide by the number of seconds in a day. I disagree with the sine/cosine transformation, it might treat 11:30 and 12:30 the same if you pick the wrong transformation. Also, there might be patterns like 'last minute' or 'early rise' that do not correspond to the cyclic nature of the day. It should be the responsibility of the machine learning algorithm to detect which transformation should be made, e.g. if your machine learning algorithm would be a neural network, it should/could have nodes with activation functions that may look like sine/cosine, amongst others. Those would detect and respond to such cyclic behaviors. The normalized time data is also easy to pick up by tree based/svm algorithms. Maybe even easier than 'Hour' as category, e.g. if you have a shop that is open from 9:30 to 17:30, the hour category "9" would be ambiguous.
