[site]: stackoverflow
[post_id]: 4565757
[parent_id]: 
[tags]: 
Imposing limitations on 4-point image transformation

I'm working on a 4-point image transformation for an application. The user would either drag each corner around to create a valid quadrilateral shape, or use its "bounding box" to resize it vertically, horizontally, and proportionally. So far, I have the image transformation part working. However, I'm having a hard time imposing limitations to it so that... The vertices doesn't cross over each other. In another words, I don't allow the user to create an hour-glass shape. It must always be a quadrilateral. Likewise, the angle between each corner must be greater than 0. Otherwise, the vertices will end up in a line. It has a minimum size on this image. That is, each corner has to be a certain distance away from each other, and their opposing lines. The user cannot "flip" the image to its backside. The 4 corners (p1, p2, p3, and p4) must appear in clockwise order. Concave kite shapes and triangles are valid. I was wondering if there was a formula or a paper regarding these issues. I do currently have the formulas for finding if 2 line segments intersect (and where), as well as finding the closest point on a line to another point. Most of my implementations hasn't been user-friendly as I liked, as the corners would jump all over the place when imposing restrictions. P.S. I'm using C# for this project, with DirectX. The application is solely 2D, however.
