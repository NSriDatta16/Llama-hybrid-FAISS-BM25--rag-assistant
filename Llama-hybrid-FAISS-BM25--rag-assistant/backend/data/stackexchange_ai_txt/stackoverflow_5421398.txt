[site]: stackoverflow
[post_id]: 5421398
[parent_id]: 5421265
[tags]: 
You could write a test in the following form @Test public void testGetAllSettings() { Foo fixture = new Foo() { public Set getUserSettings() { // canned impl } public Set getOrganizationSettings() { // canned impl } public Set getDefaults() { // canned impl } } Assert.assertEquals(whatEverItShouldEqual, fixture.getAllSettings()); } This would allow you to test the logic of get all settings, independent of the other methods. Another alternative would be to mock the IO of these methods. If you have a layer that does the logic of IO, then that could be mocked. As you mention, this can be a pain if you have lots of dependencies. Perhaps a sign that you need less dependencies? (maybe the class should be broken up into smaller units for example?)
