[site]: stackoverflow
[post_id]: 3769115
[parent_id]: 3768899
[tags]: 
If you really do need a hash_map keyed on strings, then you could try customizing the hash function. If your strings are mostly unique in (say) the first four characters, then write a custom hash function that only looks at up to the first four characters in a string, and make the hash_map use that. Here's an example: struct CustomStringHash: std::unary_function { size_t operator()(const std::string & s) const { switch (s.size()) { case 0: return 0; case 1: return s[0] + 1; case 2: return (s[0] (s.c_str()); } } If your strings are 8-12 characters on average, and mostly unique in the first four characters, then customizing the hash function could speed up lookups quite significantly.
