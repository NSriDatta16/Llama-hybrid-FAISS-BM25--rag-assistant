[site]: stackoverflow
[post_id]: 2669367
[parent_id]: 2669353
[tags]: 
You'll need to use a library for that, I use this class: package { import flash.display.BitmapData; import flash.display.BitmapDataChannel; import flash.display.BlendMode; import flash.display.DisplayObject; import flash.display.DisplayObjectContainer; import flash.geom.Matrix; import flash.geom.Point; import flash.geom.Rectangle; /** * Use isColliding to test for a collision between two sprites. * * @author Troy Gilbert * @author Alexander Schearer */ public class CollisionDetection { /** Get the collision rectangle between two display objects. **/ public static function getCollisionRect(target1:DisplayObject, target2:DisplayObject, commonParent:DisplayObjectContainer, pixelPrecise:Boolean = true, tolerance:Number = 0):Rectangle { // get bounding boxes in common parent's coordinate space var rect1:Rectangle = target1.getBounds(commonParent); var rect2:Rectangle = target2.getBounds(commonParent); // find the intersection of the two bounding boxes var intersectionRect:Rectangle = rect1.intersection(rect2); if (intersectionRect.size.length> 0) { if (pixelPrecise) { // size of rect needs to integer size for bitmap data intersectionRect.width = Math.ceil(intersectionRect.width); intersectionRect.height = Math.ceil(intersectionRect.height); // get the alpha maps for the display objects var alpha1:BitmapData = getAlphaMap(target1, intersectionRect, BitmapDataChannel.RED, commonParent); var alpha2:BitmapData = getAlphaMap(target2, intersectionRect, BitmapDataChannel.GREEN, commonParent); // combine the alpha maps alpha1.draw(alpha2, null, null, BlendMode.LIGHTEN); // calculate the search color var searchColor:uint; if (tolerance 1) tolerance = 1; var byte:int = Math.round(tolerance * 255); searchColor = (byte 0) { var x:Number = (collisionRect.left + collisionRect.right) / 2; var y:Number = (collisionRect.top + collisionRect.bottom) / 2; return new Point(x, y); } return null; } /** Are the two display objects colliding (overlapping)? **/ public static function isColliding(target1:DisplayObject, target2:DisplayObject, commonParent:DisplayObjectContainer, pixelPrecise:Boolean = false, tolerance:Number = 0):Boolean { var collisionRect:Rectangle = getCollisionRect(target1, target2, commonParent, pixelPrecise, tolerance); if (collisionRect != null && collisionRect.size.length> 0) return true; else return false; } } }
