[site]: datascience
[post_id]: 76649
[parent_id]: 76636
[tags]: 
Welcome to the community! There are more intuitive ways to do this like calculating pair-wise distances from vectors in the space but this is not scalable properly. The second point is that even if you want to go this way, it is better to put them in a weighted graph through e.g. Networkx library and then find longest path between two nodes or detecting communities there and take representatives from different community (the latter is a interesting way because 1000 most different items could be seen as representatives of 1000 different clusters in the data and not necessarily the furthest points) But I would like to draw your attention to Archetypal Analysis , a matrix factorization method in which all data points are defined based on their projection on points which lie on the convex hall of the data. Those archetypes are probably what you are looking for. Combining two methods above, results in Community Detection using Peripheral Vertices which might be useful for your project (Disclaimer Note: I am the author of that algorithm) . Hope it helped. Good Luck!
