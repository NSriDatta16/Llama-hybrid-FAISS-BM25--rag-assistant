[site]: stackoverflow
[post_id]: 2593182
[parent_id]: 2592921
[tags]: 
I know you don't want to add a parameterless constructor nor setters, but that's the only way to go with using the XmlSerializer. The good news is the parameterless constructor can be private and the setters can be empty and serialization will work. See thus: namespace Aesop.Dto { using System; using System.Xml.Serialization; /// /// Represents an Organization ID/Name combination. /// [Serializable] public sealed class Org { /// /// The organization's name. /// private readonly string name; /// /// The organization's ID. /// private readonly int id; /// /// Initializes a new instance of the class. /// /// The organization's name. /// The organization's ID. public Org(string name, int id) { this.name = name; this.id = id; } /// /// Prevents a default instance of the class from /// being created. /// private Org() { } /// /// Gets or sets the organization's name. /// /// The organization's name. [XmlAttribute] public string Name { get { return this.name; } set { } } /// /// Gets or sets the organization's ID. /// /// The organization's ID. [XmlAttribute] public int ID { get { return this.id; } set { } } } }
