[site]: stackoverflow
[post_id]: 3752567
[parent_id]: 
[tags]: 
How to limit item position into Canvas?

[EDIT] Alright, I edited this post since the code I posted back then had no real links with what I'm trying to do now, but the question is the same. When I'm talking about limiting objects to a Canvas it was more like a Mouse Clipping, but as I read on many threads, this feature doesn't exist in SL. So I searched a bit around all forums and got this link . But I wasn't able to reproduce it all. Here is the code that is used for the Drag&Drops Events: public class RoomImage : ContentControl { public RoomImage() { DefaultStyleKey = typeof(RoomImage); } public static readonly DependencyProperty BackgroundImageProperty = DependencyProperty.Register("Source", typeof(ImageSource), typeof(RoomImage), null); public ImageSource BackgroundImage { get { return (ImageSource)GetValue(BackgroundImageProperty); } set { SetValue(BackgroundImageProperty, value); } } //Instance Drag variable private FrameworkElement _translateZone; bool _isDrag; Point StartingDragPoint; public double Top { get { return (double)GetValue(Canvas.TopProperty); } set { SetValue(Canvas.TopProperty, value); } } public double Left { get { return (double)GetValue(Canvas.LeftProperty); } set { SetValue(Canvas.LeftProperty, value); } } //Instance Drag events public override void OnApplyTemplate() { base.OnApplyTemplate(); _translateZone = GetTemplateChild("PART_TranslateZone") as FrameworkElement; DefineDragEvents(); } private void DefineDragEvents() { if (_translateZone != null) { _translateZone.MouseLeftButtonDown += new MouseButtonEventHandler(translateZone_MouseLeftButtonDown); _translateZone.MouseLeftButtonUp += new MouseButtonEventHandler(translateZone_MouseLeftButtonUp); _translateZone.MouseMove += new MouseEventHandler(translateZone_MouseMove); } } private void translateZone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e) { _isDrag = true; //start the drag FrameworkElement DragBar = (FrameworkElement)sender; DragBar.CaptureMouse(); // drag starting point StartingDragPoint = e.GetPosition(this); } private void translateZone_MouseLeftButtonUp(object sender, MouseButtonEventArgs e) { FrameworkElement translateZone = (FrameworkElement)sender; translateZone.ReleaseMouseCapture(); _isDrag = false; } private void translateZone_MouseMove(object sender, MouseEventArgs e) { if (_isDrag) { UIElement ui = (UIElement)this.Parent; Point Point = e.GetPosition(ui); Move(Point.X - StartingDragPoint.X, Point.Y - StartingDragPoint.Y); } } public void Move(double left, double top) { Left = left; Top = top; } } I found this part of code in a tutorial where they didn't explain the Mouse.Clip at all. I can understand it and reuse it, but I have no clue where I could set the limits. The Parent of this item is a Canvas by the way. If anyone can provide me some sort of code, or where I should implement mine it would be great! Thank you, Ephismen.
