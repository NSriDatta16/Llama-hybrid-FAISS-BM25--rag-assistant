[site]: stackoverflow
[post_id]: 3599599
[parent_id]: 3597116
[tags]: 
The following function will insert a DOM node (element or text node) at the end of the selection in all major browsers (note that Firefox now allows multiple selections by default; the following uses only the first selection): function insertNodeAfterSelection(node) { var sel, range, html; if (window.getSelection) { sel = window.getSelection(); if (sel.getRangeAt && sel.rangeCount) { range = sel.getRangeAt(0); range.collapse(false); range.insertNode(node); } } else if (document.selection && document.selection.createRange) { range = document.selection.createRange(); range.collapse(false); html = (node.nodeType == 3) ? node.data : node.outerHTML; range.pasteHTML(html); } } If you would rather insert an HTML string: function insertHtmlAfterSelection(html) { var sel, range, node; if (window.getSelection) { sel = window.getSelection(); if (sel.getRangeAt && sel.rangeCount) { range = window.getSelection().getRangeAt(0); range.collapse(false); // Range.createContextualFragment() would be useful here but is // non-standard and not supported in all browsers (IE9, for one) var el = document.createElement("div"); el.innerHTML = html; var frag = document.createDocumentFragment(), node, lastNode; while ( (node = el.firstChild) ) { lastNode = frag.appendChild(node); } range.insertNode(frag); } } else if (document.selection && document.selection.createRange) { range = document.selection.createRange(); range.collapse(false); range.pasteHTML(html); } } Update 18 January 2012 Finally, here's a version that inserts HTML and preserves the selection (i.e. expands the selection to include the originally selected content plus the inserted content). Live demo: http://jsfiddle.net/timdown/JPb75/1/ Code: function insertHtmlAfterSelection(html) { var sel, range, expandedSelRange, node; if (window.getSelection) { sel = window.getSelection(); if (sel.getRangeAt && sel.rangeCount) { range = window.getSelection().getRangeAt(0); expandedSelRange = range.cloneRange(); range.collapse(false); // Range.createContextualFragment() would be useful here but is // non-standard and not supported in all browsers (IE9, for one) var el = document.createElement("div"); el.innerHTML = html; var frag = document.createDocumentFragment(), node, lastNode; while ( (node = el.firstChild) ) { lastNode = frag.appendChild(node); } range.insertNode(frag); // Preserve the selection if (lastNode) { expandedSelRange.setEndAfter(lastNode); sel.removeAllRanges(); sel.addRange(expandedSelRange); } } } else if (document.selection && document.selection.createRange) { range = document.selection.createRange(); expandedSelRange = range.duplicate(); range.collapse(false); range.pasteHTML(html); expandedSelRange.setEndPoint("EndToEnd", range); expandedSelRange.select(); } }
