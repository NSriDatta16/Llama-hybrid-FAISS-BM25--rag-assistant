[site]: stackoverflow
[post_id]: 575518
[parent_id]: 575450
[tags]: 
There is no requirement or necessity to have a clustered index at all, primary key or otherwise. It's a performance optimisation tool, like all indexing strategies, and should be applied when an improvement can be gained by using it. As already mentioned, because the table is physically sorted according to the clustered index key, it's a Highlander situation: there can only be one! Clustered indexes are mostly useful for situations such as: you regularly need to retrieve a set of rows whose values for a given column are in a range, so columns that are often the subject of a BETWEEN clause are interesting; or most of your single-row hits in the table occur in an area that can be described by a subset of the values of a key. I thought that they were particularly un-useful for situations like when you have high-volume transaction systems with very frequent inserts when a sequential key is the clustered column. You'll get a gang of processes all trying to insert at the same physical location (a "hot-spot"). Turns out, as was commented here before this edit, that I'm sadly out-of-date and showing my age. See this post on the topic by Kimberley Tripp which says it all much better. Sequential numeric "ID" columns are generally not good candidate columns. Names can be good, dates likewise - if carefully considered.
