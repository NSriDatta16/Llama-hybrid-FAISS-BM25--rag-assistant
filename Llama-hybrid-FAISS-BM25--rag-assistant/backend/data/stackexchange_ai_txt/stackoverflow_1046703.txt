[site]: stackoverflow
[post_id]: 1046703
[parent_id]: 1044517
[tags]: 
Well, my first thought would be: what does this helper executable do that couldn't be done within your library's code itself, perhaps using a secondary thread if necessary. This might be something to consider. But as for the actual question... If your "library" is actually bundled up as a dll (or even an exe) then at least Windows has relatively simpe support for embedding files within your library. The resource mechanism that allows things like version information and icons to be embedded within executables can also allow arbitrary chunks of data. Since I don't know what development environment you're using, I can't say exactly how to do this. But roughly speaking, you'd need to create a custom resource with a type of "FILE" or something sensible like that and point it at the exe you want to embed. Then, when you want to extract it, you would write something like HRSRC hResource = FindResource(NULL, MAKEINTRESOURCE(IDR_MY_EMBEDDED_FILE), "FILE"); HGLOBAL hResourceData = LoadResource(NULL, hResource); LPVOID pData = LockResource(hResourceData); HANDLE hFile = CreateFile("DestinationPath\\Helper.exe", GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL); DWORD dwBytesWritten = 0; WriteFile(hFile, pData, SizeofResource(NULL, hResource), &dwBytesWritten, NULL); CloseHandle(hFile); (filling in your own desired path, filename, and any appropriate error checking of course) After that, the helper exe exists as a normal exe file and so you can execute it however you normally would. For removing the file after use, you should investigate the flags for CreateFile , particularly FILE_FLAG_DELETE_ON_CLOSE . You might also look at using MoveFileEx when combining the MOVEFILE_DELAY_UNTIL_REBOOT flag with NULL passed for the new file name. And of course, you could always delete it in your own code if you can tell when the executable has ended. I don't know enough about Linux executables, so I don't know if a similar feature is available there. If Linux doesn't provide any convenient mechanism and/or if this idea doesn't suit your needs in Windows, then I suppose your idea of generating an unsigned char array from the contents of the helper exe would be the next best way to embed the exe in your library.
