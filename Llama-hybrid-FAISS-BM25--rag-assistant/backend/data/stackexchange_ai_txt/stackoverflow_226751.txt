[site]: stackoverflow
[post_id]: 226751
[parent_id]: 226701
[tags]: 
Is this problem more or less language specific (can non-JS people learn lessons here?) This is a language-agnostic problem. It's quite easy to write the following in Java, for example: if(x) { //do something } else if(!x) { //do something else } else { //never, ever, do anything } The key thing to remember is that the "if(!x)" is not required. Making that a simple "else" would create simpler code. Are there legitimate reasons code ended up this way? Sort of. It's standard practice for an else condition to always exist when a fall-through is needed. The problem was the programmer wasn't thinking very clearly single his "(form_field != empty)" was exactly the same as a simple "else". Point it out to him and he should kick himself. If he doesn't, question his role on the team. What approaches should be used to find/address the problem (code coverage, code review, blackbox testing, etc.) Static code analysis tools can catch this sort of issue. However, I'm not aware of any for Javascript. JSLint can catch a lot of bad stuff, but not logic flow issues.
