[site]: stackoverflow
[post_id]: 4576632
[parent_id]: 4576607
[tags]: 
static within the body of a function, i.e. used as a variable storage classifier makes that variable to retain it's value between function calls â€“ one could well say, that a static variable within a function is global variable visible only to that function. This use of static always makes the function it is used in thread unsafe you should avoid it. The other use case is using static on the global scope, i.e. for global variables and functions: static functions and global variable are local to the compile unit, i.e. they don't show up in the export table of the compiled binary object. They thus don't pollute the namespace. Declaring static all the functions and global variables not to be accessible from outside the compile unit (i.e. C file) in question is a good idea! Just be aware that static variables must not be placed in header files (except i very rare special cases).
