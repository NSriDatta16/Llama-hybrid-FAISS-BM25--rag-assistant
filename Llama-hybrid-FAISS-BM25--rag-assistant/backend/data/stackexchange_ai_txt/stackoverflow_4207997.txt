[site]: stackoverflow
[post_id]: 4207997
[parent_id]: 4207586
[tags]: 
If the exception caught by the servletcontainer is a ServletException and the is declared to catch an exception other than ServletException , then its cause will actually be unwrapped and stored as "javax.servlet.error.exception" . So you basically already have it as throwable variable and you don't need to call getCause() on it. See also 5th paragraph of chapter 9.9.2 of Servlet 2.5 specification : If no error-page declaration containing an exception-type fits using the class-hierarchy match, and the exception thrown is a ServletException or subclass thereof, the container extracts the wrapped exception , as defined by the ServletException.getRootCause method. A second pass is made over the error page declarations, again attempting the match against the error page declarations, but using the wrapped exception instead. By the way, it's better to use the RequestDispatcher#ERROR_EXCEPTION constant instead of hardcoding it. Throwable throwable = (Throwable) request.getAttribute(RequestDispatcher.ERROR_EXCEPTION);
