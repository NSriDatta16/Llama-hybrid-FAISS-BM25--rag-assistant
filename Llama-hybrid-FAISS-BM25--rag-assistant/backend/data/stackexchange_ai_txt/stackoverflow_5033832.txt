[site]: stackoverflow
[post_id]: 5033832
[parent_id]: 
[tags]: 
What is the nicest way to close FreeGLUT?

I'm really having trouble closing my console application with FreeGLUT. I would like to know what the best way is to take every possible closing, because I don't want any memory leaks (I'm pretty afraid of those). So I already tried the following, which is giving me an exception like this: First-chance exception at 0x754e6a6f in myProject.exe: 0x40010005: Control-C. int main(int argc, char **argv) { if( SetConsoleCtrlHandler( (PHANDLER_ROUTINE) CtrlHandler, true) ) { // more code here as well .... glutCloseFunc(close); // set the window closing function of opengl glutMainLoop(); close(); // close function if coming here somehow } else { return 1; } return 0; } void close() { // keyboardManager is a pointer to a class // which I want to delete, so no memory will leak. if(keyboardManager) // do I need this check? delete keyboardManager; } bool CtrlHandler(DWORD fdwCtrlType) { switch(fdwCtrlType) { // Handle the CTRL-C signal. case CTRL_C_EVENT: // and the close button case CTRL_CLOSE_EVENT: close(); return true; // Pass other signals to the next handler. case CTRL_BREAK_EVENT: return false; // delete the pointer anyway case CTRL_LOGOFF_EVENT: case CTRL_SHUTDOWN_EVENT: default: close(); return false; } } So what goes right is: Closing the window of glut Closing the console application with the x Closing my window of glut with my keyboardmanager if(keyboardManager->isKeyDown[27]) glutExit(); What goes wrong is: Closing the console application with CTRL+C, it gives the exception from above. This is in Visual Studio 2008 C++. UPDATE I found that the exception is thrown, because I'm in debug. So that won't be a problem. But the question is still open: What is the most elegant way to actually close glut? atexit() seems to work as well, so maybe I can use this?
