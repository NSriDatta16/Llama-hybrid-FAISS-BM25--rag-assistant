[site]: stackoverflow
[post_id]: 2109210
[parent_id]: 51624
[tags]: 
I am going to assume that you refer to RIA projects since your mention of SL. I have worked one quite a few RIA projects with Adobe designing and developing applications and services. The best advice I can give you based on based on my 14 years experience as an UX and Visual designer with some programming experience although pathetic compared to you guys. Accept that you wont understand each other. The programmer thinks in what functionality should be done, the designer think in how the functionality should behave. For the developer a button is mostly generic, for the designer it's not the case. Designers think in composition, developers think in frameworks. So learn to understand that your responsibility is different. You the developer DO need to think about how generic your code is and can't afford to treat everything as being unique and a hardcoded composition. That is unless you can automate that uniqueness somehow. The designer DO need to think about the application or service as somehow unique. It might mean that a button is not a button. There might be different sizes or colors or other annoyances. So make sure you develop a good relationship with the designer by acknowledging that you understand the designers responsibility and make sure he understands yours. It's not that you are not interested in making the best application in the world. It's just that some of these design decisions takes quite a lot of time. Make sure that you get very clear on how the designer should deliver to you so you don't waste his or your own time. What format, assets? Naming? All things that are involved in delivery from one paradigme to another. And most importantly communicate and respect that they don't know how to do JavaScript or how understand the basic ideas of CVS. Most developers you wouldn't know how to kern to save their life, what a widow is, how to best layer FireWorks or create a photo-realistic icon, come up with a good tagline or make something understandable to average Joe in 4 words. You don't know what a grid or alignment is and you tend to make things green and purple on black. And the designer should understand that just because you deal with programming does not mean you are a robot, that you can't have creative ideas and solutions. He should also try to learn how to program at least pseudo program so that he understands what's involved in making your project. And most importantly. Don't start to debate Mac vs. PC :) Projects have been canceled because of this.
