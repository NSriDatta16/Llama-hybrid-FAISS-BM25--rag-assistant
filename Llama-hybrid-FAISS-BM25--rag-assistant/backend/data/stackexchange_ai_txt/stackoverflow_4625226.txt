[site]: stackoverflow
[post_id]: 4625226
[parent_id]: 4553503
[tags]: 
Since there are still not complete answers, I figured I'd have a go at it: 1) No and no. Imagine three vectors v1 , v2 and v3 that are pair-wise orthogonal and all unit-length. Then of course, -v3 is unit-length and also orthogonal to v1 and v2 . Now imagine the matrices A=(v1|v2|v3) and B=(v2|v1|-v3) . If you interpolate between the two, you will get C=((v1+v2)/2|(v1+v2)/2|0) right in the middle. It's easy to see that this will not maintain length: (0 0 1)^T will just become the zero-vector. Also, the first and second column will be equal, which means that their angle is 0Â°. In pratice, however, the two matrices you will be interpolating will usually not be different enough for such a degeneration. that is if your surface is orientable. Surfaces are orientable if you can define a consistent inside and outside on them. The moebius-strip is a common counter-example! A slightly more correct way would be interpolate rotations (again, the surface needs to be orientable): you can either use spherical interpolation (google!) or normalized interpolation (interpolate the matrices and orthogonalize, but this will also fail with some fringe cases). However, both interpolations can be expensive - and in practice, people just transform the light source into the vertices' TBN coordinates and use linear interpolation (which is equivalent to just use linear interpolation on the TBN matrices). 2.) Definitely yes. In fact, this works for any length, not just one. Orthogonal matrices induce isomorphic mappings, which preserve both lengths and angles between vectors. The two kinds of transformations that you can define using such matrices are rotations and mirrors, both of which intuitively show this. 3.) Personally, I'd just add the two and then renormalize. Mipmapping will typically wash-out normalmaps in the distance because normals become shorter during averaging. Of course, you can renormalize the normals in the mipmapping generation, but I'd leave that out to prevent aliasing and make this effect work. Other than that, it's basically a matter of taste (and looks!) how you combine the two. To be honest, it's probably a better way to not use detail-normalmaps at all and just use higher-resolution textures. Graphics hardware has enough RAM for simple things like that nowadays, and you can always stream stuff if you think RAM is becoming a problem.
