[site]: stackoverflow
[post_id]: 2352910
[parent_id]: 2352902
[tags]: 
The constructor writes into the object as part of the construction process, but this doesn't work if the memory for the object is readonly. Physical const only works for objects that can be initialized at compile time, and thus have no need for a constructor. The creation of readonly memory is not something you can do explicitly in C++, but many compilers have extensions that allow you to do this, and most modern compilers will put code and some data in readonly memory if the CPU architecture allows for this. In MSVC, you can force an initialized global variable to be stored in read-only memory by placing it in a section marked as read but not write like this #pragma section("rosec",read) __declspec(allocate("rosec")) int j = 0; // this will be in a readonly data segment.
