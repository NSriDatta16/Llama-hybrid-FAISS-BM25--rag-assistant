[site]: stackoverflow
[post_id]: 5409008
[parent_id]: 5407424
[tags]: 
This is how I would do it: C++ typedef struct { char szModel[32]; float fSpeed; float fData[20]; } CAR, far *LP_CAR; extern "C" { int __stdcall Process(char *szModel, CAR &lpCar); } C# [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)] struct CAR { [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)] public string szModel; float fSpeed; [MarshalAsAttribute(UnmanagedType.ByValArray, SizeConst = 20)] float[] fData; } [DllImport("Unmanaged.dll", CharSet = CharSet.Ansi)] static extern int Process( string model, ref CAR data ); Call it as follows: CAR data; Process(@"test", ref data);
