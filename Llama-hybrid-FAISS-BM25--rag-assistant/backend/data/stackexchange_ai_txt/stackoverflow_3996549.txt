[site]: stackoverflow
[post_id]: 3996549
[parent_id]: 3996319
[tags]: 
That should be relatively easy to do. For each set of assemblies that you need to share around, branch them from a static location in your Source Control structure. Now grab one of your TFSBuild.proj build files (these replace your NAnt file), and override the AfterCompile target for Solution A, or the BeforeCompile target for Solution B, then use the tf command to merge your changes to the branched locations. Once merged, use the tf command to also do a checkin at that target location. Note that there may be task libraries out there which wrap the tf command for you, but i don't have a reference on hand so i can't tell you which one to use. I personally like to invoke the tf command directly by using an Exec task. Here is the syntax guide for the tf merge command, you will probably just want to use the T version parameter: tf merge [/recursive] [/force] [/candidate] [/discard] [/version:versionspec] [/lock:(none|checkin|checkout)] [/preview] [/baseless] [/nosummary] [/noimplicitbaseless] [/conservative] [/format:(brief|detailed)] [/noprompt] [/login:username,[password]] source destination Versionspec: Date/Time D"any .Net Framework-supported format" or any of the date formats of the local machine Changeset number Cnnnnnn Label Llabelname Latest version T Workspace Wworkspacename;workspaceowner
