[site]: stackoverflow
[post_id]: 4219978
[parent_id]: 
[tags]: 
Trouble understanding the SQL generated from this Entity Framework query

I created an Entity Framework model that contains two tables from the Northwind database to test some of its functionality: Products and CAtegories. It automatically created an association between Category and Product which is 0..1 to *. I wrote this simple query: var beverages = from p in db.Products.Include("Category") where p.Category.CategoryName == "Beverages" select p; var beverageList = beverages.ToList(); I ran SQL Profiler and ran the code so i could see the SQL that it generates and this is what it generated: SELECT [Extent1].[ProductID] AS [ProductID], [Extent1].[ProductName] AS [ProductName], [Extent1].[SupplierID] AS [SupplierID], [Extent1].[QuantityPerUnit] AS [QuantityPerUnit], [Extent1].[UnitPrice] AS [UnitPrice], [Extent1].[UnitsInStock] AS [UnitsInStock], [Extent1].[UnitsOnOrder] AS [UnitsOnOrder], [Extent1].[ReorderLevel] AS [ReorderLevel], [Extent1].[Discontinued] AS [Discontinued], [Extent3].[CategoryID] AS [CategoryID], [Extent3].[CategoryName] AS [CategoryName], [Extent3].[Description] AS [Description], [Extent3].[Picture] AS [Picture] FROM [dbo].[Products] AS [Extent1] INNER JOIN [dbo].[Categories] AS [Extent2] ON [Extent1].[CategoryID] = [Extent2].CategoryID] LEFT OUTER JOIN [dbo].[Categories] AS [Extent3] ON [Extent1].[CategoryID] = [Extent3].[CategoryID] WHERE N'Beverages' = [Extent2].[CategoryName] I am curious why the query inner joins to Categories and then left joins to it. The select statement is using the fields from the left joined table. Can someone help me understand the reason for this? If I remove the left join and change the select list to pull from Extent2 I get the same results for this query. In what situation would this not be true?
