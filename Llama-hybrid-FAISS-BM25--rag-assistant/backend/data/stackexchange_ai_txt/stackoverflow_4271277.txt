[site]: stackoverflow
[post_id]: 4271277
[parent_id]: 
[tags]: 
Programmatically Creating Image Button in WPF

I want to create a Windows Toolbar (something like RocketDock) which dynamically creates buttons from serialized classes, but I can't figure out how to dynamically set the image. As an aside, how should a image be serialized (i want to serialize the image with the storage class, instead of loading it from the original png file location each time)? I found the following code to create a dependency property public class ImageButton { #region Image dependency property public static readonly DependencyProperty ImageProperty; public static ImageSource GetImage(DependencyObject obj) { return (ImageSource)obj.GetValue(ImageProperty); } public static void SetImage(DependencyObject obj, ImageSource value) { obj.SetValue(ImageProperty, value); } #endregion static ImageButton() { var metadata = new FrameworkPropertyMetadata((ImageSource)null); ImageProperty = DependencyProperty.RegisterAttached("Image", typeof(ImageSource), typeof(ImageButton), metadata); } } And i created a button style to inherit to set the image but I can't figure out how to set the image from code after I create the button var newButton = new Button(); var style = (Style)FindResource("ImageButton"); newButton.Image does not resolve. Do I need to do something with style.Resources? EDIT - response to Olli Thanks, but... Using... Link link = new Link(@"c:\temp\dev\ClearAllIcon.png"); var newButton = new Button(); newButton.Content = "bloberific"; var style = (Style)FindResource("ImageButton"); ImageButton.SetImage(newButton, link.IconSource); MainStack.Children.Add(newButton); where link is defined as public Link(string iconPath) { IconPath = iconPath; IconSource = new BitmapImage(new Uri(iconPath)); } the image does not show, though the text does. The button is normal looking.
