[site]: stackoverflow
[post_id]: 884574
[parent_id]: 
[tags]: 
My action controller code looks amateurish

First post time, I've been playing around with MVC abit... I have a view which has multiple input fields, some of these fields can be blank on post. The action method inside the controller for the post looks something like this public ActionResult Filter(int? id, string firstName, string lastName, bool? isMember) I've been using the DynamicQuery extension which has been kicking around in order to perform dynamic Linq querys on my database and I've encapsulated this in a Search object which is passed to the data access layer for execusion. However, I also have a customized ViewData object which is passed back to the view for displaying the input values and the results of the query. It all looks a little nasty in code as I'm having to set both the Search object properties AND the ViewDatas. public ActionResult Filter(int? id, string firstName, string lastName, bool? isMember) { var search = new Search { Id = id, FirstName = firstName, LastName = lastName, Member = isMember }; var memberViewData = new MemberViewData { Id = id, FirstName = firstName, LastName = lastName, Member = isMember }; memberViewData.Results = _dataRepository.GetMember(search); return View("Search", memberViewData); } Am I over thinking this and really should just pass the values to the data access layer and populate the ViewData in the controller, or is there a much more elegant pattern or practise I could use? Sorry if this seems dump, not allot of people to bounce ideas off and time to dig into the framework.
