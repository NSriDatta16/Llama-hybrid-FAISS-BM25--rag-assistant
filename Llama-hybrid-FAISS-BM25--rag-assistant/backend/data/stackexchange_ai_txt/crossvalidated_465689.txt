[site]: crossvalidated
[post_id]: 465689
[parent_id]: 465536
[tags]: 
Just to emphasise the arithmetic of the $2^{32}$ point in terms of the number of potential distinct values: if you sample $10^5$ times from $2^{32}$ values with replacement, you would expect an average of $2^{32}\left(1-\left(1-\frac{1}{2^{32}}\right)^{10^5}\right) \approx 10^5 - 1.1634$ distinct values, noting that $\frac{(10^5)^2}{2 \times 2^{32}} \approx 1.1642$ is close to this deficit So you would expect many earlier examples. There are two pairs with set.seed(1) : n = 10^5 set.seed(1) x = runif(n) x[21101] == x[56190] x[33322] == x[50637] If you do something similar to the first $2000$ seeds in R for the default runif you get an average of $10^5 - 1.169$ unique values, which is close to the calculated expectation. Only $30.8\%$ of these seed produce no duplicates from the sample of $10^5$ Sample $10^6$ times and you would expect the issue to be about a hundred times worse and indeed average number of unique values for the first $2000$ seeds is $10^6 - 116.602$ and none of these seeds failed to produce duplicates There is another way of reducing the likelihood of overlaps while still having a uniform distribution: try pnorm(rnorm(n)) set.seed(123) n = 10^8 x = runif(n) length(unique(x)) # 98845390 y = pnorm(rnorm(n)) length(unique(y)) # 100000000
