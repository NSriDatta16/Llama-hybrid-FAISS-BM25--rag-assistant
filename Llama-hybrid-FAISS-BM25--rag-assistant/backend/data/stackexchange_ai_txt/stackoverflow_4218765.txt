[site]: stackoverflow
[post_id]: 4218765
[parent_id]: 2785622
[tags]: 
This solution is for GXT 2.2.0 and GWT 2.0.4 * While the original poster has since moved on I recently ran into this issue and thought I would post my solution in case anyone else stumbles on this. There is no reason you can't add a GXT Grid directly to a GWT LayoutPanel. The problem is that the styling/positioning approach of the two libraries conflicts. Basically it boils down to the fact that the Grid is sized based on its parent's height attribute, which is not set meaning that the grid's body get assigned a height of 0 and the grid itself gets a height equal to that of the grid header (if present). So the solution is to undo what GXT does once flow has passed back to GWT. Here is a template solution: class MyGridWrapper extends Composite { private LayoutPanel widget; private Grid grid; public MyGridWrapper(Grid grid) { this.grid = grid; widget = new LayoutPanel(); initWidget(widget); widget.add(grid); // Set the grid's vertical and horizontal constraints // ... populate the rest of the panel } @Override protected void onLoad() { // onLoad is called after GXT is finished so we can do what we need to // Redo what the LayoutPanel did originally grid.el().setStyleAttribute("position", "absolute"); grid.el().setStyleAttribute("top", "0"); grid.el().setStyleAttribute("bottom", "0"); grid.el().setStyleAttribute("left", "0"); grid.el().setStyleAttribute("right", "0"); // Undo any height settings on the .x-grid3 element El mainWrap = grid.el().firstChild(); assert mainWrap.hasStyleName("x-grid3") : "Wrong Element: " + mainWrap.getStyleName(); mainWrap.setStyleAttribute("height", "auto"); // Undo any height settings on the .x-grid3-scroller element El scroller = grid.el().firstChild().firstChild().getChild(1); // FUN! assert scroller.hasStyleName("x-grid3-scroller") : "Wrong Element: " + scroller.getStyleName(); scroller.setStyleAttribute("height", "auto"); } } The assertions are there to help protect against what is obviously very fragile code so beware that this is a GIANT, GIANT hack. -- Just in case you're wondering where the GXT Grid's structure is defined, you can find it in a template file in the GXT JAR under com/extjs/gxt/ui/client/widget/grid/GridTemplates#master.html Have a look at com.extjs.gxt.ui.client.widget.grid.GridView#renderUI() to get an idea of how the grid is built.
