[site]: crossvalidated
[post_id]: 497082
[parent_id]: 496325
[tags]: 
About the edges We can reproduce the image with the code below that obtains data from the European Centre for Disease Prevention and Control (ECDC) (they even provide a script on their website to download it directly into R). I always see two issues near the edges. When I am using a rolling average then I often use the Savitzky Golay filter (which is a bit more general). For a filter of length 7 it uses the values $$x_{k-3},x_{k-2},x_{k-1},x_{k}, x_{k+1}, x_{k+2}, x_{k+3}$$ Indeed this is problematic at the edges because the filter has not data beyond the edges while the filter requires this. You can deal with this in two ways. You cut-off the values at the ends You extrapolate the filter at the end. In the image below you see this happening. Near the end the smooth curve changes in a straight line. The Savitzky Golay algorithm in R is simply taking the values of the filter as fixed for the last 4 points. I have plotted two different filters: The one is zero-order and based on averaging (which gives a flat line), the other is based on a linear curve fit (which is effectively also a moving average if the points are equally spaced, but near the end-points, you see that it is different in the extrapolation, it follows a line at an angle) The data in the last period might not be up to date. This might give a false idea about the trend. The data shows the reported cases and not truly actual cases. In the last week or two weeks some data might be incomplete which is not the case for the other weeks (Actually, besides this reporting effect there is much more going on with these covid-19 reports so I am not saying here that by solving this issue all problems with interpretation of the trend are gone. The data from March and April are not equally comparable to data from October November). Some comparable effect is seen in data about posts on StackExchange. The below image is from a meta post ( We have a very large & widening gap between questions and answers. How do we fix it? ), which shows the ratio of answered questions as a function of the score of the question (each curve is a different score) and the date (x-axis). In the last year you see some drop in the yellow curve. This is not because there is a sudden change in the answering rate of such questions that occurred in the last year. But instead, it is because after one year the system removes/deletes unanswered questions of low score. I considered this second point to be more problematic than the first point. You can see that the first effect has only a very tiny effect for the last three days and is barely visible. By the way, on a logarithmic scale it is often more easy to interpret these types of growth curves (which are multiplicative in the way how they change). Then you would get the following graph: About the simplistic comparison Also note that these comparisons on a small timescale are not very meaningful. You can see that the curve goes up and down a lot on short time scales (mostly due to differences in reporting during the weekends) and you may have an occasional dip or peak. The curve in the image from the Newyork Times has a very sharp bend. This might be due to some extreme smoothing (Maybe they used a higher-order Savitzky Golay filter) or possibly they picked up a few days with lower reporting. The media are very eager to report on these short timescale trends, place them out of context, and blow up the story. They make money by doing that. Edward Tufte has a good example on pages 74-75 of his book "The Visual Display of Quantitative Information". It is about traffic deaths in Connecticut compared for just two years or on a longer stretch. You can see it being discussed on his blog Code #these libraries need to be loaded library(utils) #read the Dataset sheet into “R”. The dataset will be called "data". data $dateRep[data$ countriesAndTerritories == countries[i]][1] l $dateRep[data$ countriesAndTerritories == countries[i]]) first_day $cases[data$ countriesAndTerritories == countries[i]] mcorr $dateRep[data$ countriesAndTerritories == countries[1]] dates = 10)) axis_length
