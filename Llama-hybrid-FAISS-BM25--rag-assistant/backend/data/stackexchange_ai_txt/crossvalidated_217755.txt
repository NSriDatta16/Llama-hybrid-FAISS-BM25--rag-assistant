[site]: crossvalidated
[post_id]: 217755
[parent_id]: 
[tags]: 
python PCA Regenerating loadings using eigen vectors and eigen values

I am trying the following: from sklearn.decomposition.pca import PCA import numpy as np Data = np.random.rand(300,5) pca = PCA() pca.fit(Data) Facs = pca.components_ #rows are loadings w, v = np.linalg.eig(np.cov(np.transpose(Data))) #v[:,i] is the eigenvector corresponding to the eigenvalue w[i] print Facs[0,:] print v[:,0]*np.sqrt(w[0]) Now according to the python documentation: Facs[0,:] should match exactly v[:,0]*np.sqrt(w[0]) But it doesn't. What am I doing wrong? Edit: Fixed the code to call Data. Documentation saying that v is normalized eigen vectors is here Blog showing that pca.components_ is loadings is here . However, the link does not verify the blog's statement. So, blog is wrong probably. Hence to get the loadings I need to do: v[:,0]*np.sqrt(w[0]) Am I correct in saying that ?
