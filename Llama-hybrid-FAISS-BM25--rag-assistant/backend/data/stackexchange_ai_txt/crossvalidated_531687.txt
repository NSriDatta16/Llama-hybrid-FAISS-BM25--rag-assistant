[site]: crossvalidated
[post_id]: 531687
[parent_id]: 
[tags]: 
How to fit my data to a valid model

I apologize if this is a repeat question. I would like to show my workflow and ask for specific doubts along the way. This will be a long question. I have some data of plant organ sizes for which I am trying to model the pattern of gene expression of my gene of interest. Let us call the organ: Leaf (whose length has been measured) and the gene: A (whose expression level has been measured). This is my data : Leaf Now I have to emphasize that I have zero experience in modelling and I am only posting this question after nearly a couple of months of studying really hard on how to approach it. I understand that years and years go into this, so please excuse the naive questions. Here are the steps I have taken to approach fitting a regression to this data: Take a look at the plot of A vs Leaf length Data %>% ggplot(aes(Leaf, A)) + geom_point() [A versus Leaf length 1 ] The data clearly does not appear to linearly related so it would be pointless to attempt to fit it into a linear model. Both the x and y variables have a strong positive (right) skew. I tried transforming the y variable using log and others as well followed by assessing the fit of the transformed data into a linear model using gvlma::gvlma(formula) but none of the transformations changed the original outcomes. After reading several articles and stack links, I looked at the "form" of the scatter plot [ 1 ] [ 2 ] and observed that the data does likely show: inflection point, sigmoidal shape. Also, my y-axis data does go all the way to 1 while it does not necessarily touch 0. I can thus consider the following Concave/convex curves. Based on another answer here, I used the following function from the fitdistrplus package to see the kind of distribution that my y-axis variable follows: Data %>% pull(A) %>% fitdistrplus::descdist(.,boot = 10000) It suggests something called the "beta distribution" and rules out normal, uniform, exponential, log-normal and gamma distribution. Regarding beta distribution, since my data consists of no 0s but some 1s, I need to check for the "1-inflated beta distribution". Considering all of the above, I first fitted my data to the following models (includes some others that I thought to check based on some reading): All_models A look at the AIC of each of the models tells me that the 1-inflated beta regression turned out to be the best: purrr::map2_df( .x = All_models, .y = names(All_models), ~{ tibble(AIC = AIC(.x), `Model type` = .y) }) %>% dplyr::arrange(AIC) Output: # A tibble: 16 x 2 AIC `Model type` 1 -706. Beta 2 -538. DRC_baro5 3 -538. DRC_LL2.4 4 -538. DRC_W2.4 5 -538. DRC_W2.3 6 -537. DRC_LL2.5 7 -537. DRC_LL.5 8 -537. DRC_LL.4 9 -532. DRC_MM.3 10 -525. DRC_W2.3u 11 -524. DRC_W1.4 12 -510. DRC_W1.3 13 -509. DRC_LL.3u 14 -477. DRC_W1.3u 15 -451. DRC_G.4 16 -410. DRC_G.3u This is how the beta-regression models my data: Data %>% ggplot(aes(Leaf, A)) + geom_point() + geom_line(y = predict(All_models[["Beta"]], type='response', se.fit=T) %>% purrr::pluck("fit")) Output: However when I look at the diagnostics of the plot: All_models %>% purrr::pluck("Beta") %>% plot() I see that the Q-Q plot shows that my sample quantiles don't exactly match up to the theoretical quantiles. There is some deviation there. This tells me that I possibly have no considered some other better fitting model for my data: Can I get some help in figuring out which model best fits my data?
