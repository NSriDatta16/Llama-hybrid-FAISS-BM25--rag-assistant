[site]: stackoverflow
[post_id]: 191219
[parent_id]: 191153
[tags]: 
Lazy parameter initialization! Besides all previous answers (strategy pattern, observer pattern, etc), delegates allow you to handle lazy initialization of parameters. For example, suppose you have a function Download() which takes quite a lot of time and returns a certain DownloadedObject. This object is consumed by a Storage depending on a certain Conditions. Typically, you would: storage.Store(conditions, Download(item)) However, with delegates (more precisely, lambdas) you can do the following, by changing the signature of store so that it receives a Condition and a Func and use it like this: storage.Store(conditions, (item) => Download(item)) Therefore, storage will only evaluate the delegate if necessary, executing download depending on Conditions.
