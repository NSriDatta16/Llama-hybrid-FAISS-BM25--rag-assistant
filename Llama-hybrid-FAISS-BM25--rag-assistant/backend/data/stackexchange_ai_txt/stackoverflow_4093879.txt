[site]: stackoverflow
[post_id]: 4093879
[parent_id]: 
[tags]: 
How to calculate the required memory for an assembly code?

This is a paragraph from broken thorn operating system development series. There are 3 lines of code. It will take 512 byte to load up to second line and 514 bytes up to third line. How can we calculate this? If possible kindly give me a link where I can read it in detail. Thanks in advance. In Assembly Language, we can very easily go beyond the 512 byte mark. So, the code could look just fine, but only a part of it will be in memory. For example, coinsider this: mov ax, 4ch inc bx ; 512 byte mov [var], bx ; 514 byte In Assembly language, execution begins from the top of the file downward. However, remember that, when loading files in memory, we are loading sectors. Each of these sectors is 512 bytes, so it will only copy 512 bytes of the file into memory. If the above code was executed, and only the first sector was loaded in memory, It will only copy up to the 512 byte (The inc bx instruction). So, while the last mov instruction is still on disk, It isnt in memory!. What will the processor do after inc bx then? It will stll continue on to the 514 byte. As this was not in memory, It will execute past the end of our file! The end result? A crash.
