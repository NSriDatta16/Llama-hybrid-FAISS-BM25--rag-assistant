[site]: stackoverflow
[post_id]: 5440753
[parent_id]: 4754769
[tags]: 
I've recently taken the plunge and have stopped using web user controls almost entirely. I compile my control HTML into Script# output, and instead of postbacks I make web service calls with WCF. I think you touch on this, but in my view it's just too much of a hassle trying to synchronize the design and logic of what is a single conceptual unit if the design and logic are in two separate projects. My project layouts essentially look like this now: WebApp/ Pages/ Home.aspx [etc] Services/ MainService.svc ScriptSharp/ UI/ Widget1.html Widget1.html.cs Widget2.html Widget2.html.cs I trick the system by setting my ".html" files as "Compile", turning their contents into constants in the Script# output. In my ".html.cs" files I have what you would expect (event handlers for click, change, etc) except the UI logic now utilizes jQuery more than before (a good thing). If you're interested you can check out my Sharp UI project which takes care of parsing the html constants and treating each html fragment as if it were a (client-side version of a) web user control.
