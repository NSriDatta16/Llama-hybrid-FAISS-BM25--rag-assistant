[site]: stackoverflow
[post_id]: 3772100
[parent_id]: 
[tags]: 
Thread-safe random number generation for Monte-Carlo integration

Im trying to write something which very quickly calculates random numbers and can be applied on multiple threads. My current code is: /* Approximating PI using a Monte-Carlo method. */ #include #include #include #include #include #define N 1000000000 /* As lareg as possible for increased accuracy */ double random_function(void); int main(void) { int i = 0; double X, Y; double count_inside_temp = 0.0, count_inside = 0.0; unsigned int th_id = omp_get_thread_num(); #pragma omp parallel private(i, X, Y) firstprivate(count_inside_temp) { srand(th_id); #pragma omp for schedule(static) for (i = 0; i This works but from observing a resource manager I know its not using all the threads. Does rand() work for multithreaded code? And if not is there a good alternative? Many Thanks. Jack
