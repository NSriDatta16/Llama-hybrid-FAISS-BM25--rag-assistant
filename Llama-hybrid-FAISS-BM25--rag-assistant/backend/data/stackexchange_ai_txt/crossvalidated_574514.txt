[site]: crossvalidated
[post_id]: 574514
[parent_id]: 574363
[tags]: 
When you have a question about how multiple imputations are handled, compare the results on the individual imputed data sets to what was reported for the pooled imputations. I don't have your data, but the jasa dataset from the survival package has some missing data in the mscore variable (among others) to use as an example. I got a warning related to Date objects when I tried to use all the columns, so omit the first 3. library(mice) library(rms) ## also loads Hmisc, survival, etc. ddJ That output on its own should start to set your mind at ease, as it states how much the results are affected by imputation. You can ask the mice package to retrieve a list of all 10 imputed data sets. c1 As you might expect, the coefficients reported for models are the averages of those for the individual models. indivCoefs The age' coefficient is specific to the rcs() function, so that function was used in all model fits. One caution: the documentation for fit.mult.impute() specifies that the knot positions are kept constant after they are chosen for the first imputed data set. In contrast, the pooled variance/covariance matrix isn't the average of the 10 individual matrices. indivVcov In particular, notice the higher pooled variance for mscore than the average over the 10 imputations. That because additional computations applying Rubin's rules have been used. Some of the confusion might come from the following sentence from the fit.mult.impute help documentation (within the transcan documentation): fit.mult.impute returns a fit object that is a modification of the fit object created by fitting the completed dataset for the final imputation. You don't get a set of models from it. Instead you get a single pooled model. But it's not the fit for "the completed dataset for the final imputation," which is simply used as a template. The documentation then goes on to say: The var matrix in the fit object has the imputation-corrected variance-covariance matrix. That's what's returned by vcov(models) . All that Predict() has to work with is that single pooled model, with the averaged coefficients and the imputation-corrected coefficient covariance matrix.
