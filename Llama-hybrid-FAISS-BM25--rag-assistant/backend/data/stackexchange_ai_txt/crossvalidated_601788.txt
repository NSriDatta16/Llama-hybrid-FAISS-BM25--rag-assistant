[site]: crossvalidated
[post_id]: 601788
[parent_id]: 
[tags]: 
Can you use Reinforcement Learning to train a Neural Network on a Regression problem?

Let me try to clarify what I mean by that: When using for example the Q-Learning method to train a neural network, the network learns how to pick the best 'action' based on its inputs, meaning that you will always interpret each output of your neural network as one category that can be selected (usually picking the maximum across all outputs). This means you can only train it to solve a Classification problem correct? What if you want your network to learn the solution to a Regression problem instead? Where each neuron in the output layer should produce continuous values that are the actual answer to the problem only when combined (eg: your NN have 3 outputs that, when combined, produces a 3D vector which is the velocity you should apply to an object to reach your training objective). Is there any method usable to train such neural network? PS: I am aware that you can convert your Regression problem into Classification problem by making a lot of classes that represents different possible output ranges from your original Regression problem, but this is not the topic of this question.
