[site]: stackoverflow
[post_id]: 383984
[parent_id]: 382614
[tags]: 
A good article on the topic is "Who needs an architect?" by Martin Fowler. My personal take is that you probably need to make much less architectural decisions up front than you might think. If you just do enough to come up with reasonable estimates, you should do well. You will need to pay close attention to design forces, and get good at refactoring, though. You will want to start practicing it as early as possible. Not having come up with an architecture up front should give you many opportunities. ;) Will you make wrong decision? Yes. Will it take time to change the architecture. Sure. But you also saved a lot of time by not trying to dream up an architecture up front. And, because at the beginning of the project you have the least amount of information, the up front architecture wouldn't be really "right", anyway. With some luck, it will "just" be overkill, more likely, there will also be decisions made that you'd better change later, too. Regarding risk, remember that you should start developing the most important features first. That way, your architecture will in fact be build to support the most important features best, which is exactly the way it should be. A good book you might enjoy on the topic is Robert Martin's "Agile Software Development - Principles, Patterns, Practices".
