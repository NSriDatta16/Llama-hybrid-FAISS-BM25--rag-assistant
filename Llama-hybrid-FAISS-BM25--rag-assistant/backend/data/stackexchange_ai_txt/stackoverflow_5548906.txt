[site]: stackoverflow
[post_id]: 5548906
[parent_id]: 5548601
[tags]: 
Application-level variables have an application life-time. It means that it the application pool is recycled, they're discarded. The application pool can be recycled for different reasons. IIS 6/7 can be configures so that the app pool is recycled after a certain amount of time, after a certain number of request or at specified intervals. You set an application variable this way: Application["DbConfig"] = "my value"; but you have to be aware of the problems you might encounter if you try to set/access in different place. You have to adopt a way to lock the variables when they're updated. I us the web.config for all the configuration parameters and then I've created my own class which I use to store application fields: namespace Web.My { public class Application { public static string ApplicationStorageFolder { get { return (System.IO.Path.Combine(HttpContext.Current.Server.MapPath("~"), "_AppStorage")); } } } } If I need set some fields I do it at the application startup Application_Start If you need to persist infos you can create your own config file (xml or simple text) to store and read values at the application startup and shutdown. You can serialize your class in a XML file so you can ready it, repopulating your properties easily. A db would be fine as well. I would do the same with the session counter.
