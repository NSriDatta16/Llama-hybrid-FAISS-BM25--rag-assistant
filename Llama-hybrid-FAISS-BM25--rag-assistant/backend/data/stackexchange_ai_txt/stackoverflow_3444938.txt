[site]: stackoverflow
[post_id]: 3444938
[parent_id]: 3444476
[tags]: 
There's nothing wrong with it, but please be aware that on machine-code level a reference is usually the same as a pointer. So, usually the pointer isn't really dereferenced (no memory access) when assigned to a reference. So in real life the reference can be 0 and the crash occurs when using the reference - what can happen much later than its assignemt. Of course what happens exactly heavily depends on compiler version and hardware platform as well as compiler options and the exact usage of the reference. Officially the behaviour of dereferencing a 0-Pointer is undefined and thus anything can happen. This anything includes that it may crash immediately, but also that it may crash much later or never. So always make sure that you never assign a 0-Pointer to a reference - bugs likes this are very hard to find. Edit: Made the "usually" italic and added paragraph about official "undefined" behaviour.
