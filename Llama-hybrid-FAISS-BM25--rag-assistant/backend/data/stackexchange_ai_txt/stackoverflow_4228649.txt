[site]: stackoverflow
[post_id]: 4228649
[parent_id]: 
[tags]: 
Mapping NHibernate many-to-one relationships from abstract base classes to union-subclasses

I am having a problem mapping a many-to-one relationship from an abstract base class mapping to a concrete union-subclass. Example: public abstract class Entity { public virtual Guid ID {get; set;} public virtual string Name {get;set;} public virtual User OwnerUser {get; set;} } public class User : Entity { public virtual string UserName {get; set;} } As you can see here, I have a base abstract class for all of my database objects. I am mapping these classes with the Entity class as the abstract mapping class and the User as a union-subclass. When creating the configuration object, no errors are thrown and the Schema exports just fine. However, the field to the OwnerUser just won't show up in the database for all of the concrete classes. Here is an example of how the mapping looks I am also using an Oracle XE instance as the database backend. If this isn't enough information to properly answer the question, let me know and I will add what I can. Worst case scenario I'll just add the many-to-one relationship on all of the concrete objects explicitly, but this isn't the most elegant solution and I think what I've proposed should work. I have been unable to find any concrete examples of this on the tubes that power the various internets, nor have I found anything in the documentation explicitly stating this is an invalid use case, although I could have missed something. It wouldn't have been the first time :-/ Any answers to this question are greatly appreciated. Thank you for your time.
