[site]: stackoverflow
[post_id]: 4935709
[parent_id]: 
[tags]: 
Advice on organizing sources and builds in C++ development under Linux (CMake as generator)

Can someone propose some good practices for organizing your source files and managing builds when using C++ under Linux. I use CMake to manage my builds although i do not use complex constructs at this point of time. Let us say we have the following three scenarios. 1. For a makefile application to simply build a few executables from simple .cpp and .h files 2. For creating a static/shared library which uses other popular shared libraries say OpenCV and OpenGL, for example. 3. More complicated types, for example, let us say we need to create an executable whose source files use external libraries like OpenCV and also a custom static library that we have built ourselves(for example, a custom static library with associated headers that we built with step2 above). I am sure many of you work on complicated library projects where the build process is not that simple. I am really looking forward to amazing answers from open source enthusiasts and hackers who contribute to open source projects. How do you guys organize your source code?
