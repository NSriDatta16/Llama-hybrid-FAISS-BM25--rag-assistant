[site]: crossvalidated
[post_id]: 195215
[parent_id]: 
[tags]: 
Is there an optimal algorithm for visiting nodes in directed acyclic graph neural networks?

Perhaps someone here could either give me the answer to my question directly, or maybe tell me the right terms to use to search for the answer. Question: In a directed acyclic graph neural network the layers can be interweaved. Now, as in all DAGs, a node can be excited after all the inputs have already been computed. Is there a particular algorithm that can discover the order of visiting the nodes optimally, so that no extra computating cycles are wasted? What I have thought so far: Intuitively, and if I would go about it directly, I would say a "breadth first" strategy should do the trick. But I am not sure if this is the best solution. Besides, in that case you would need to define the depth of a layer in a DAG, which I guess can also be a bit messy. Some modern packages have implemented such an algorithm already, but their documentation does not necessarily explain the principles behind the algorithm very well. This is a question that relates to statistical learning so maybe there is somebody who can help. I want to know for my reference.
