[site]: stackoverflow
[post_id]: 1333669
[parent_id]: 1333575
[tags]: 
I'm afraid that's how it is in ME, although I'd split it to avoid that hairy oneliner: Integer val = (Integer)v.elementAt(arr[x][y]); int newVal = val.intValue() + i; v.setElementAt(new Integer(newVal), arr[x][y]); Stuff got a lot better with autoboxing and generics, but they came in Java 5 and J2ME is basically a stripped version of Java 1.3 unless I've been misinformed. Here's how it looks in Java 5+: v.setElementAt(arr[x][y], v.get(arr[x][y]) + i); Still more verbose than C++, but at least without the casting. I understand there was reluctance to add generics and such to Java as it might be "too hard" for the average programmer to understand [Citation needed] . And so we ended up with unreadable code until .Net got generics and Sun jumped on the bandwagon. Anywho, I agree the collections framework was a pain to use before generics/boxing, but I hope at least you'll enjoy not having to debug broken pointers and corrupted memory.
