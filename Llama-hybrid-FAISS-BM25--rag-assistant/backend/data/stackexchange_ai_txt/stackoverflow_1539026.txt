[site]: stackoverflow
[post_id]: 1539026
[parent_id]: 1537479
[tags]: 
No. That's completely wrong. Of course you can have many parameters in Seam methods. It's just Java. This code is fine: @Stateless public class BusinessObjectImpl implements BusinessObject { public void doSomething(SomeObject i01, SomeObject i02) { } } Of course one thing that Seam allows you do to is to inject any other Classes that you may find useful. Maybe like this: @Stateless public class BusinessObjectImpl implements BusinessObject { @In private AnotherObject anotherObject; public void doSomething(SomeObject i01, SomeObject i02) { anotherObject.someMethod(i01, i02); } } EDIT (based on comment): There are ways of passing multiple parameters from a page using JBoss EL (which allows for objects as parameters). For example Go Where your SecondBean and ThirdBean are already populated in your Session/Conversation (with their relevant @Name ) and your FirstBean would look something like: @Name("firstBean") @Stateless public class FirstBean { public void performAction(SecondBean secondBean, ThirdBean thirdBean) { //stuff } } But this approach isn't exactly elegant as it relies on SecondBean and ThirdBean being in your current Session/Conversation. You may be better off to follow an approach of having a page Controller or Backing Bean. This can be a POJO that then calls your SLSB. For example: Go And the Backing Bean: @Name("backingBean") @Scope(ScopeType.CONVERSATION) public class BackingBean { @In private FirstBean firstBean; @In private SecondBean secondBean; @In private ThirdBean thirdBean; public void performAction() { firstBean.performAction(secondBean, thirdBean); } } Which starts to look a lot like your original question ;-)
