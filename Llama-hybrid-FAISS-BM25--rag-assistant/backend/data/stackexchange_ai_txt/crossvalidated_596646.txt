[site]: crossvalidated
[post_id]: 596646
[parent_id]: 594209
[tags]: 
As my other answer is already long, I'll use the actual data linked in a comment to illustrate circular splines for handling hourly data and further analysis of the time by treatment interaction. Otherwise, the approach is as in my other answer for these data aggregated by the hour. I converted the linked data into a data frame called datam ; the format is similar to that shown in the question but includes an indentifier for cow . Several packages help here: library(tidyr) # formatting data library(nnet) # multinomial fit library(pbs) # for circular spline library(aod) # for Wald test library(emmeans) library(ggplot2) Data were converted into two other forms: first, a long form that puts each Behavior on a separate line for each hour, with the corresponding "count" values placed in a minutes column; then, a nested format that keeps all data for a cow in a single row, to simplify bootstrapping. ## put datam in long form, separating behaviors ## simplifies use of other packages datamLong The pbs package simplifies use of circular splines to fit the multinomial model to the data. That package was recommended in an answer by @kjetilbhalvorsen to another question. The splines are restricted so that the values at 0 and 24 hours are the same. mn1 The two groups in the crossover design (sh -> ns; ns -> sh; as identified from the data) are sampled separately in the bootstrapping by cow to get the robust covariance matrix. B = 200 # number of samples b = 0 # for successful samples # p is number of parameters # put into the order used by multinom p = length(c(t(coef(mn1)))) bar ns and ns -> sh groups separately for (boots in 1:B) { bootSam $cow),] ## unnest for multinomial modeling bootSam fail) && bootMult$fail) next b = b + 1 cof The Wald test (from the aod package ) based on the entire set of interaction coefficients and the robust covariance matrix cov addresses whether there is an interaction between treatment and time with respect to outcome. The Terms argument represents the numerical order of the interaction terms among all the coefficients in c(t(coef(mn1))) , which is also their order in the covariance matrix. If you fit a model with a different number of parameters to estimate, you will have to change that specification. # uses aod package Wald test on the interaction coefficients # set Terms to represent the interaction coefficient positions wald.test(cov,c(t(coef(mn1))),Terms=c(7:10,17:20)) # Wald test: # ---------- # # Chi-squared test: # X2 = 114.7, df = 8, P(> X2) = 0.0 There is a statistically significant interaction. To evaluate the practical importance of the statistically significant interaction, next use the emmeans package to determine values of the model estimates and of the differences between sh and ns over time for each Behavior. The vcov. argument specifies use of the robust covariance matrix cov . rg1 There might be a more elegant way to do this in emmeans , but this method works. To plot behavior probabilities over time, treatments distinguished by color, with 95% CI based on the robust covariance matrix: ggplot(df1,mapping=aes(x=time,y=prob,group=trt)) + geom_line(aes(color=trt)) + geom_ribbon(aes(ymin=lower.CL,ymax=upper.CL), alpha = 0.1) + facet_wrap(facets=vars(Behavior)) + scale_x_continuous(breaks=seq(0,24,by=6)) The df2 data frame derived from emm1$contrast includes sh-ns estimates and p -values for all behaviors and times at 0.25-hour intervals. You can interrogate that as illustrated in the other answer. To plot treatment differences over time for each behavior, again with 95% CI: ggplot(df2,mapping=aes(x=time,y=estimate)) + geom_line() +facet_wrap(facets=vars(Behavior)) + geom_ribbon(aes(ymin=estimate-1.96*SE, ymax=estimate+1.96*SE),alpha=0.1) + ggtitle("sh minus ns") + ylab("Probability difference") + scale_x_continuous(breaks=seq(0,24,by=6)) The treatment differences are typically within $\pm 0.1$ on the probability scale. Apply your understanding of the subject matter to determine the practical significance.
