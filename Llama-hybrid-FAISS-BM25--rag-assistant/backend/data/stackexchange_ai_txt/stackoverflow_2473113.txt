[site]: stackoverflow
[post_id]: 2473113
[parent_id]: 2459913
[tags]: 
As @Turtle answered, you problem doesn't have a solution. @KandadaBoggu and @bta solution gives you random numbers is some ranges which are or are not random. You get clusters of numbers. But I don't know why you care about double occurence of the same number. If (0..99**99) is your range, then if you could generate 10^10 random numbers per second (if you have a 3 GHz processor and about 4 cores on which you generate one random number per CPU cycle - which is imposible, and ruby will even slow it down a lot), then it would take about 10^180 years to exhaust all the numbers. You have also probability about 10^-180 that two identical numbers will be generated during a whole year. Our universe has probably about 10^9 years, so if your computer could start calculation when the time began, then you would have probability about 10^-170 that two identical numbers were generated. In the other words - practicaly it is imposible and you don't have to care about it. Even if you would use Jaguar (top 1 from www.top500.org supercomputers) with only this one task, you still need 10^174 years to get all numbers. If you don't belive me, try tried = {} # store previous attempts bigint = 99**99 bigint.times { x = rand(bigint) puts "Oh, no!" if tried[x] tried[x] = true } I'll buy you a beer if you will even once see "Oh, no!" on your screen during your life time :)
