[site]: stackoverflow
[post_id]: 2075453
[parent_id]: 2073502
[tags]: 
I'm the DataMapper maintainer, and I think for complex reporting you should use SQL. While I do think someday we'll have a DSL that provides the power and conciseness of SQL, everything I've seen so far requires you to write more Ruby code than SQL for complex queries. I would much rather maintain a 5 line SQL query than 10-15 lines of Ruby code to describe the same complex operation. Please note I say complex.. if you have something simple, use the ORM's build-in finders. However, I do believe there is a line you can cross where SQL becomes simpler. Now, most apps aren't just reporting. You may have alot of CRUD type operations, for which an ORM is perfectly suited and far better than doing those things by hand. One thing that an ORM will usually provide is some sort of organization to your application logic. You can group code based around each model in the same file. It's usually there that I'll put the complex SQL query, rather than embedding it in the controller, eg: class User include DataMapper::Resource property :id, Serial property :name, String, :length => 1..100, :required => true property :age, Integer, :min => 1, :max => 130 def self.some_complex_query repository.adapter.select Then I can just generate the report using User.some_complex_query . You could also push the SQL query into a view if you wanted to further cleanup this code. EDIT: By "view" in the above sentence I meant RDBMS view, rather than view in the MVC context. Just wanted to clear up any potential confusion.
