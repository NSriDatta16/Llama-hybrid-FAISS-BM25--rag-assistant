[site]: datascience
[post_id]: 69574
[parent_id]: 
[tags]: 
GAN training the average of my train data

I have been training a GAN with 1D convolutional layers on sinus functions. However if I start varying my sinus (random amplitude for example), the model generates only the average of the random range. So if I give the amplitude a uniform range of (0,1], after training my generator only produces sinus functions with amplitude 0.5. When training on batch, I sample n=batch_size samples from function; x = np.array(np.tile(np.linspace(-3 * np.pi, 3 * np.pi, num=ts_dim), n).reshape(n, ts_dim)) y = np.random.rand(n,1)*np.sin(x) I tried using MC dropout (dropout not only in training, also in prediction) to get generated timeseries from a probabilistic distribution. This way I steer the generator into outputing also 'less plausible' timeseries. It seemed to help a little, but still the generated functions are around amplitude 0.5. Are there any other ways to overcome this behaviour?
