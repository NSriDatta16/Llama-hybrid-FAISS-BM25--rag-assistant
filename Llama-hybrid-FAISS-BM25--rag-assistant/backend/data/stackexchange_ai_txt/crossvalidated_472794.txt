[site]: crossvalidated
[post_id]: 472794
[parent_id]: 
[tags]: 
Training a machine learning model to recognize sentiment in text

I am just getting started with TensorFlow and machine learning. I have watched the following demo video showing how TensorFlow can be used to train a model to recognize sentiment in the text . In the demo, a dataset containing news headlines, classified as sarcastic or not, is used to train a model. The model is built with a binary_crossentropy loss, with the test data is_sarcastic value set to 1 if the headline is sarcastic and 0 if it is not. Assuming I want to build a model to detect the "happiness" sentiment in a sentence and have tens of thousands of sentences to build my model with, including: Today is the best day of my life. I am feeling good. I hate my life and want to disappear. I am doing okay. I am a little sad. My dog is 7 years old. If I am interested in determining the degree of happiness associated with a given sentence, should I classify each of the sentences with a binary value (ex: 1 and 0 - Happy / Not Happy) like in the TensorFlow example, or should I use a more "precise" way to categorize each of the demo sentences, with a "degree" of happiness? For example, 2 is very happy, 1 is happy, 0 is neutral or N/A, -1 is sad, -2 is very sad. For the given sentences, the degree of happiness would be: Today is the best day of my life (2) I am feeling good (1) I hate my life and want to disappear (-2) I am doing okay (0) I am a little sad (-1) My dog is 7 years old (0) If the first option is used, how should I categorize neutral or N/A sentences (4 and 6) to build my model with? If the second option is used, would it make sense to have a sparse_categorical_crossentropy loss and multiply the weight of each of the predicted "happiness degree" for a test sentence. For example, the predicted happiness level for the sentence "I am doing great" would be something like: $(0.68 * +2) + (0.24 * +1) + (0.04 * 0) + (0.04 * - 1) + (0.02 * -2) = 1.52,$ which would indicate a very happy feeling.
