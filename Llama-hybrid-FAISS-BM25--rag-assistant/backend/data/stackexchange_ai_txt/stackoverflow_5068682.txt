[site]: stackoverflow
[post_id]: 5068682
[parent_id]: 5068508
[tags]: 
The reason .so (or .pyd ) files take up memory space only once (except for their variables segment) is that they are recognized by the OS kernel as object code. .py files are only recognized as text files/data; it's the Python interpreter that grants them "code" status. Embedding the Python interpreter in a shared library won't resolve this. Loading .py files only once despite their use in multiple processes would require changes deep inside CPython. Your best option, if you want to save memory space, is to compile Python modules to .so files using Cython . That may require some changes to the modules.
