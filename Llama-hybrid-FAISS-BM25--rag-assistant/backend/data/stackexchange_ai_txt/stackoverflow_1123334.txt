[site]: stackoverflow
[post_id]: 1123334
[parent_id]: 
[tags]: 
Ext.Ajax.request callbacks never called when isUpload is true

I'm using ExtJS to make a form that generates a report from the data in the database in CSV format. After the user chooses a simple range of dates to extract the data and submits, running the following code : var frm = document.createElement('form'); frm.id = 'frmDummy'; frm.name = id; document.body.appendChild(frm); Ext.MessageBox.wait('Generating CSV File ...'); Ext.Ajax.request({ url: 'csv_extract_ajax.php?start_time='+txtDateFieldFrom.getRawValue()+'&end_time='+txtDateFieldTo.getRawValue(), method : 'POST', form: Ext.fly('frmDummy'), isUpload: true, success: function(o, r, n){ Ext.MessageBox.updateProgress(1); Ext.MessageBox.hide(); }, failure: function(o, r, n){ Ext.MessageBox.updateProgress(1); Ext.MessageBox.hide(); }, callback: function(o, r, n){ Ext.MessageBox.updateProgress(1); Ext.MessageBox.hide(); }, scope: this }); The associated php file simple outputs a CSV string, working file. Since the isUpload is true, it seems that the callback is never returned to the user. As soon as I remove it, the callback is called but the file is not uploaded to the client. The problem now, everything is working perfectly but the MessageBox never disappears since the callbacks are never called (success, failure or callback) Any idea ? :P Additional info: PHP header : header("Pragma: public"); header("Expires: 0"); header("Cache-Control: private"); header("Content-type: application/octet-stream"); header("Content-Disposition: attachment; filename=$filename"); header("Accept-Ranges: bytes");
