[site]: datascience
[post_id]: 74247
[parent_id]: 
[tags]: 
running model.evaluate many times results different accuracy and loss value tensorflow 2

I have trained a CNN network using dataset = tf.data.Dataset.from_tensor_slices((data, label)) to create the dataset. training went well but evaluating the model on test dataset results different values every time without changing anything in test dataset or the network and I am not using any Dropout or Batchnormalization : If necessary my code: model = tf.keras.Sequential([ Input((1,30,30)), Conv2D(filters = 8, kernel_size=(3,3), padding="same", activation="relu", name="c1", data_format="channels_first"), Conv2D(filters = 16, kernel_size=(3,3), padding="same", activation="relu", name="c2", data_format="channels_first"), MaxPool2D(pool_size=(2,2), strides=(1,1),padding="same", name="m1", data_format="channels_first"), Conv2D(filters = 16, kernel_size=(3,3), padding="same", activation="relu", name="c3", data_format="channels_first"), MaxPool2D(pool_size=(2,2), strides=(1,1),padding="same", name="m2",data_format="channels_first"), Flatten(), Dense(256, activation="relu", use_bias=True), Dense(5, use_bias=True)]) model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.001), loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=["accuracy"]) model.fit(train_data, verbose=1, validation_data=valid_data, epochs=20) model.evaluate(test_data) How I made the Dataset: def split_dataset(dataset: tf.data.Dataset, validation_data_fraction: float): validation_data_percent = round(validation_data_fraction * 100) if not (0 = validation_data_percent) validation_dataset = dataset.filter(lambda f, data: f % 100 for example running model.evaluate(test_data) gives: 885/Unknown - 2s 2ms/step - loss: 0.1039 - accuracy: 0.9663 885/Unknown - 2s 2ms/step - loss: 0.0959 - accuracy: 0.9675 885/Unknown - 2s 2ms/step - loss: 0.0999 - accuracy: 0.9661 885/Unknown - 2s 2ms/step - loss: 0.0888 - accuracy: 0.9688 885/Unknown - 2s 2ms/step - loss: 0.0799 - accuracy: 0.9715
