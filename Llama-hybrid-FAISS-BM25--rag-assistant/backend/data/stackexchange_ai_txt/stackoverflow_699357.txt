[site]: stackoverflow
[post_id]: 699357
[parent_id]: 699301
[tags]: 
See section 6.4.4.4, paragraph 10 of the C99 standard: An integer character constant has type int . The value of an integer character constant containing a single character that maps to a single-byte execution character is the numerical value of the representation of the mapped character interpreted as an integer. The value of an integer character constant containing more than one character (e.g., 'ab' ), or containing a character or escape sequence that does not map to a single-byte execution character, is implementation-defined. If an integer character constant contains a single character or escape sequence, its value is the one that results when an object with type char whose value is that of the single character or escape sequence is converted to type int . Recall that implementation-defined means that the implementation (in this case, the C compiler) can do whatever it wants, but it must be documented . Most compilers will convert it to an integral constant corresponding to the concatenation of the octets corresponding to the individual characters, but the endianness could be either little- or big-endian, depending on the endianness of the target architecture. Therefore, portable code should not use multi-character constants and should instead use plain integral constants. Instead of 'abcd' , which could be of either endianness, use either 0x61626364 or 0x64636261, which have known endiannesses (big and little respectively).
