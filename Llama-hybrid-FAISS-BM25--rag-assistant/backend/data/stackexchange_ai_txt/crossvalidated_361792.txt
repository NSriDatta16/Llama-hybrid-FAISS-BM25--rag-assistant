[site]: crossvalidated
[post_id]: 361792
[parent_id]: 361619
[tags]: 
You could try using the group_by() and do() functions in the dplyr package, as follows: 1) Run the group_by() function to define the groups of interest (in your case the groups given by the values taken by the SITE variable) 2) Run the do() function on the object generated by group_by(). The argument of the do() function should reference the process to call, and the process will be run on each group defined by the previous group_by() call. Here is a simple example on your data to produce a plot by each value of SITE, with the points shown with different col: library(dplyr) group_by_SITE = group_by(DF_NEW, SITE) colors = c("red", "blue") group_by_SITE %>% plot(AVERAGE ~ YEAR, type="p", pch=21, col=colors[SITE], bg=colors[SITE], data=.) In your case, the group_by() call would be the same as in my example. The argument of the do() should be a function you define that performs the calculations you do for the non-nested GAM. Note that the . notation (used in the data= argument of the do() call in my example) refers to the data object that is piped (via the >%> operator) to the do() call from the left (in my example this object is group_by_SITE --which is of classes "grouped_df" "tbl_df" "tbl" "data.frame" as revealed by running class(group_by_SITE) ; so the object is ALSO a data frame). Hope this helps!
