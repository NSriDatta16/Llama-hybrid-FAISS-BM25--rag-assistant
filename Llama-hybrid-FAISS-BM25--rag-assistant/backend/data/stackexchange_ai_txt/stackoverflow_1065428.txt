[site]: stackoverflow
[post_id]: 1065428
[parent_id]: 1065200
[tags]: 
It works for me, with Xalan 2.7.1, not sure why it doesn't work for you. I simplified the code fragment, but I don't think there's any functional difference, but try it anyway: import javax.xml.transform.Source; import javax.xml.transform.Transformer; import javax.xml.transform.TransformerFactory; import javax.xml.transform.stream.StreamResult; import javax.xml.transform.stream.StreamSource; import org.apache.xalan.Version; public class Transform { public static void main(String[] args) throws Exception { System.out.println(Version.getVersion()); Source xslSource = new StreamSource(Transform.class.getResourceAsStream("test.xsl")); Source xmlSource = new StreamSource(Transform.class.getResourceAsStream("test.xml")); Transformer transf = TransformerFactory.newInstance().newTransformer(xslSource); StreamResult transformedXml = new StreamResult(System.out); transf.transform(xmlSource, transformedXml); } } Output is: Xalan Java 2.4.1 What is odd is that Xalan's Version.getVersion() returns 2.4.1, not 2.7.1, and I'm definitely using 2.7.1 here.
