[site]: stackoverflow
[post_id]: 932255
[parent_id]: 
[tags]: 
Search functionality for Django

I'm developing a web app using Django, and I'll need to add search functionality soon. Search will be implemented for two models, one being an extension of the auth user class and another one with the fields name , tags , and description . So I guess nothing too scary here in context of searching text. For development I am using SQLite and as no database specific work has been done, I am at liberty to use any database in production. I'm thinking of choosing between PostgreSQL or MySQL . I have gone through several posts on Internet about search solutions, nevertheless I'd like to get opinions for my simple case. Here are my questions: is full-text search an overkill in my case? is it better to rely on the database's full-text search support? If so, which database should I use? should I use an external search library, such as Whoosh , Sphinx , or Xapian ? If so, which one? EDIT: tags is a Tagfield (from the django-tagging app) that sits on a m2m relationship. description is a field that holds HTML and has a max_length of 1024 bytes.
