[site]: datascience
[post_id]: 96709
[parent_id]: 
[tags]: 
How to pass manually split data to cross-validation

I have to perform a binary classification. My dataset is quite small 280 samples and quite imbalanced (1:10 ratio). I kept around 100 sample as testing and about 140 for training. My input variables are about 100 and are stationary time series. I would like to use GridSearchCV together with L1-Logistic classifier to perform feature selection with roc_auc as a score, but first I just want to check how the cv_score is with a default L1-Logistic classifier, as follows, clf = LogisticRegression(random_state=42) #default settings kfold= model_selection.TimeSeriesSplit(n_splits=2) #split the data, specific for time series train_cv = cross_val_score(X=X_train,y=np.ravel(y_train),estimator=clf,cv=kfold) the result is the following, C:\Users\luigi.simeone\anaconda3\lib\site-packages\sklearn\model_selection\_validation.py:548: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: Traceback (most recent call last): File "C:\Users\luigi.simeone\anaconda3\lib\site-packages\sklearn\model_selection\_validation.py", line 531, in _fit_and_score estimator.fit(X_train, y_train, **fit_params) File "C:\Users\luigi.simeone\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py", line 1372, in fit raise ValueError("This solver needs samples of at least 2 classes" ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0 the error is clear, during one of the 2 splits, the training set only had one class the 0 one as demonstrated here (blue is train, orange is validation), Now, I guess this is due to the fact that I am using TimeSeriesSplit which uses a splitting criterion that is not good for me. I noticed that the training set contains two regions of 1s, therefore I could manually find an index to split these two regions. Looking at above I could say up to 100 is training and after is validation. However, how can I pass such split to cross_val_score? I am aware of a function called PredefinedSplit ( https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.PredefinedSplit.html ) but I have not really understood how to integrate it into my code.
