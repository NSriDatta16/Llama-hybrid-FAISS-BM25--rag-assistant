[site]: stackoverflow
[post_id]: 4826526
[parent_id]: 4825634
[tags]: 
The question is a bit vague -- do you want to learn something about sorting functions or do you just want the program to work? :-) In case you just want something that works, you could consider using a dynamically expanding array instead of a linked list. That way you can realloc() when adding new entries, and sort with normal qsort() As a side effect, you might also see less memory fragmentation compared to using a linked list which could have nice effects on the overall performance - especially if you do fewer and larger re-allocations. The code will also be more compact which could improve readability. Update: Ah, I can't resist showing what I mean. If you use a dynamically expanding array, the function new_node could be implemented like this: NODE * nodes = NULL; unsigned node_count = 0; void new_node(char word) { unsigned n; for (n = 0; n If you like this or not is a matter of personal preference. If this is usable or not really depends on the use case.
