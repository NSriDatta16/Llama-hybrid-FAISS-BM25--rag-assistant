[site]: stackoverflow
[post_id]: 1084939
[parent_id]: 869447
[tags]: 
Unfortunately, creating a standalone "connector" control is difficult. It would involve creating a control with a transparent background . Then you'd handle the rendering code necessary to draw your styled connector (however you want to do that, a simple line or something more complex). If you're unsure how to draw, look up the Graphics class and how it work with the Bitmap class. You could also render little squares on the end of the connector to be used as handles to drag the connector around (to connect to other components). You'd have to do hit testing to determine which square the user mouse downs on. and Hit Testing again when they release the mouse over another component (to store which component the connector "connects" to). You could also add the ability to select additional points on the line that break the line into two or more line segments. This would allow you to make connections that aren't a simple straight line. This would again involve hit testing on the line and would further complicate the mouse code. You would need to ensure that every connector control is above every component control by modifying their z-order attributes and connectors and components are added. Another option is to create a container control that contains your components. The container control would react to all mouse events and would simply draw connections onto itself (it would of course have to store connection information too). This method is different because the connectors aren't controls, they are merely drawn on the container directly. Finally, if you are looking for a way to auto-layout your components, here is a starting point.
