[site]: stackoverflow
[post_id]: 3601468
[parent_id]: 3601104
[tags]: 
If that is functionally correct, it looks elegant enough to me. You might want to make the Pattern a final class member since you only need to compile it once. And the region's probably not needed: Matcher m = pattern.matcher(str.substring(pos)); Another option is to start with a 1-char-length substring and grow it until it doesn't parse anymore: if ( str.charAt(pos) == '+' || str.charAt(pos) == '-' ) { //special cases return null; } Double val = null; for ( int i = pos+1; i It's a bit simpler but also naive performance-wise. A less readable but more performant solution would be to find the end of the double yourself before passing off to parse just by looking at the characters one at a time.
