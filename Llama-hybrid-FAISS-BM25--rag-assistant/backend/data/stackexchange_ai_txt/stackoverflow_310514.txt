[site]: stackoverflow
[post_id]: 310514
[parent_id]: 310410
[tags]: 
Well, as it turns out, you can't just use any kind of collection type with dataTable, and for good reason. From the MyFaces 1.2 Spec , the value attribute must be: An EL expression that specifies the data model that backs this table. The value referenced by the EL expression can be of any type. A value of type DataModel is used directly. Array-like parameters of type Object[] , java.util.List , java.sql.ResultSet or javax.servlet.jsp.jstl.sql.Result are wrapped in a corresponding DataModelthat knows how to iterate over the elements. Other values are wrapped in a DataModel as a single row. Note in particular that unordered collections, eg Set are not supported. Therefore if the value expression references such an object then the table will be considered to contain just one element - the collection itself. The Collection returned from HashSet.values() is not ordered and, therefore is not supported. If it was, you'd have no idea what order the rows in your table would be output, and refreshes of the page could re-order them randomly. Not good. The error you're getting is, from the last paragraph, it says that the datatable is treating your Collection as the row object, and Collection doesn't have a "name" property.
