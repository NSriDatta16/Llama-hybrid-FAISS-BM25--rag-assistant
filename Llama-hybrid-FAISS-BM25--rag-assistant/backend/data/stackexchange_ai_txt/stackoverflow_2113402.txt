[site]: stackoverflow
[post_id]: 2113402
[parent_id]: 2113353
[tags]: 
18000 would average out to about 36 lines of code a day. With just 36 lines of code a day, what's the problem? The problem is debugging and rewriting your code. NOTHING you can do to automate coding will speed you up--in fact, anything you can automate probably shouldn't be coded because if you are automating the typing of some pattern in your code, it should be factored out. Where you can save time is to be more careful about how you code. Get your project through QA a little faster--code in a more explicit, typesafe language and code more clearly. Also making your code data driven and fully factored wherever possible, although it will reduce the LOC you ship, it will make everyone's life easier and the project ship faster. Do not EVER automate code input--if you can, you're doing it wrong! Another way to think about it--every line of code you create has to be debugged and maintained. Why are you trying to come up with ways to give everyone MORE work when you could just create fully factored code (The input of fully factored code cannot be automated--pretty much by definition).
