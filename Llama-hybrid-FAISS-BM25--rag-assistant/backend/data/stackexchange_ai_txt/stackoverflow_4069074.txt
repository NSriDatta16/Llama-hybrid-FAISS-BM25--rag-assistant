[site]: stackoverflow
[post_id]: 4069074
[parent_id]: 4068752
[tags]: 
Sounds like a job for queued messaging! :) Some options on Windows, in no particular order, are: MSMQ Service Broker Custom Sql Queue Third party queuing products With all these implementations, you insert the pager message into a queue, and then use a worker process to pop the messages off the queue and send to the downstream service. Your worker will control the flow rate from the queue. If the pager service goes down for whatever reason, you don't send the message - it gets left in the queue to be retried again. Search the googles for "Getting Started with [Insert Technology Here]" and I'm sure you'll get enough information and sample code for you to get started. MSMQ MSMQ flat out rocks and is easy to work with. It has a couple of limitations out of the box such as 4MB message size and making queues highly available (each queue instance is typically backed by local storage on a server). 4MB message size can be overcome easily if you own both ends of the queue (both sender and receiver) as you can chunk your messages through the queue (break a message > 4MB into smaller chunks and reassemble on the receiver. Overcoming the HA limitation typically takes assistance with storage and cluster resources - its probably easier to be able to recover messages from source system than fool with clustering MSMQ (this sounds wrong to me, but has been my experience - would love for MSMQ guru to blog about successful HA). Service Broker Service Broker is a great point to point queuing solution built into Sql Server (even Sql Express has it). Its only drawback is the lack of tooling which makes configuration management difficult. Service Broker is a good choice if you have multiple queue consumers from a single queue...this makes for a HA queueing solution assuming Sql Server is HA. Custom Sql Queue This can be a good choice if your comfortable with controlling the batching of units of work out of your queue via T-SQL. Something that Service Broker will handle for you. Custom SQL queue is a good choice if you have multiple queue consumers from a single queue...this makes for a HA queueing solution assuming Sql Server is HA. Third Party Queueing Products There are a number of 3rd party queueing products out there that can be inserted here - though they may not be Windows, or even .NET specific. This can be a good solution if your environment is looking to implement "queueing as a service". You can get .NET bindings for lots of good queuing implementations. Check out implementations of Advanced Message Queueing Protocol for more information.
