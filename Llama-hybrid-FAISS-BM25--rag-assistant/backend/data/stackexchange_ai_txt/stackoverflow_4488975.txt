[site]: stackoverflow
[post_id]: 4488975
[parent_id]: 4487099
[tags]: 
I don't miss the return-statement at the end of a method because it is unnecessary. Furthermore, in Scala each method does return a value - even methods which should not return something. Instead of void there is the type Unit which is returned: def x { println("hello") } can be written as: def x { println("hello"); return Unit } But println returns already the type Unit - thus when you explicitly want to use a return-statement you have to use it in methods which return Unit , too. Otherwise you do not have continuous identical build-on code. But in Scala there is the possibility to break your code in a lot of small methods: def x(...): ReturnType = { def func1 = ... // use funcX def func2 = ... // use funcX def func3 = ... // use funcX funcX } An explicitly used return-statement does not help to understand the code better. Also Scala has a powerful core library which allows you to solve many problems with less code: def average(x: List[Int]): Float = x.sum.toFloat / x.length
