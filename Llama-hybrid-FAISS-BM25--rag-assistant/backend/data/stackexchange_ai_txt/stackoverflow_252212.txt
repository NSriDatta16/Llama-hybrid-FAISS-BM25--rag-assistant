[site]: stackoverflow
[post_id]: 252212
[parent_id]: 252202
[tags]: 
if publication types are essentially static, enums are fine there is arguably little difference between embedding inner join lookuptable lt on lt.id = (int)myenum.sometype in a query and adding inner join lookuptable lt on lt.name = "somehardcodeddescription" they're both embedded constants, the former just has a well-defined type behind it alternately you could use inner join lookuptable lt on lt.name = myenum.sometype.ToString i prefer the former if, on the other hand, new lookup types may be added after the code is deployed, then an enum will quickly become outdated; but if there is core set of static enum values that the code needs and the rest don't matter then the former solution is still fine as usual, "it depends" ;-)
