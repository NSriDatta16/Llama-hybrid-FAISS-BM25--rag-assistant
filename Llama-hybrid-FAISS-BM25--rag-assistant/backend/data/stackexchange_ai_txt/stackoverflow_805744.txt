[site]: stackoverflow
[post_id]: 805744
[parent_id]: 805709
[tags]: 
First of all, this code should read like this: var1 = condition1; if( var1 ) // No need to compare *true* to *true* when you're looking for *true* As for the number of flags, there are more elegant ways of branching your code. For instance , when using javascript you can do stuff like this: var methodName = someFunctionThatReturnsAString(); // assuming you name the method according to what's returned myObject[ methodName ](); instead of if( someFunctionThatReturnsAString === 'myPreferedMethod' ){ myObject.myPreferedMethod(); }else{ myObject.theOtherMethod(); } If you're using a strongly typed language, polymorphism is your friend. I think the technique is refered to as polymorphic dispatch
