[site]: stackoverflow
[post_id]: 1547152
[parent_id]: 1546985
[tags]: 
Wow, you guys really like doing a lot of work in those answers. Remember, in text processing, Perl makes the easy things easy (and the hard things possible). If you're doing a lot of work for something that's easy to explain, you're probably missing the easy way. :) Just redefine a line to be a paragraph and print the matching paragraphs as you read them. You can change Perl's idea of a line by setting the input record separator, $/ , to be the line-ending that you want. When you use the line input operator, you'll get back everything up to and including what is in $/ . See perlvar for the details on Perl special variables: #!perl { local $/ = "\n\n"; while( my $group = ) { print $group if $group =~ /\Q**QUERY**/; } } __DATA__ mascot friend ocean parsimon **QUERY** apple jujube apricot maple **QUERY** rose mahonia ghostdog74 posted his one-liner version, which I modified slightly: perl -ne "$/=qq(\n\n); print if /\Q**QUERY**/" fileA fileB ... perl has a special command-line switch for this, though. You set the input record separator with -0 , and if you set it to 0 , it means you're setting it to use the paragraph mode: perl -00 -ne "print if /\Q**QUERY**/" fileA fileB ... The perlrun shows you all the nifty things you can do on the command line.
