[site]: stackoverflow
[post_id]: 1341905
[parent_id]: 
[tags]: 
What is an excellent software architecture?

I know my question is too inaccurate to answer but let me give you some background information. Last year I got a new job as a software manager which I thought could do well. I am experienced in many different programming domain, like GUI, web, RIA, network application. I am a good problem solver. Generally I know how to organize code in a clean way. And I am always hard working. But after almost a year, I have to admit that my boss is really upset about my job. The most important reason is that he feels that my software solution of our product is not advanced enough. I think I have elaborately broken down the system, and I've chosen most popular platform for each component, and most of the code is robust and clean. BUT my boss doesn't think so. He really feels that we could do better. He want something not only good, but excellent. something with almost ultimate scalability, something looks very very easy to extend, something have some awesome concept and ideas. This is a challenge I've never met. I don't know how to show my boss the current system is good enough. I told him that "we have use xxx, yyy", but he has no idea what they are. I showed him the UML to explain what we have done, but he is super fun of C and is skeptic to OO and UML. So have you ever seen some software architect that you feel awesome, excellent and very easy to extend? I think I really need to see some example of what an excellent software architecture means. To be honest, I really doubt if it worth try to build an architecture to prepare for some requirements that do not exist yet, but I have to make my boss happy to keep my job.
