[site]: stackoverflow
[post_id]: 1280835
[parent_id]: 1280637
[tags]: 
I actually expect garbage collection to be an even greater boon on systems with very large memory requirements. My experience to date has been meeting up with this (although I haven't hit thousands of GB usage, just tens). Typically systems that use large amounts of memory are using large collections of objects - so often you have a similar number of allocations, but the individual allocates are very large. This keeps the GC performance about equal to a system that's using a smaller amount of memory, since the GC perf. is really tied to number of rooted objects, not the total size of objects. However, when you're doing very large memory allocations, traditional systems tend to run into lots of memory fragmentation problems. Many garbage collectors (although, unfortunately, not .NET's large object heap) will do memory compacting during the collection cycle, which can actually provide huge benefits for large memory usage systems, especially over time.
