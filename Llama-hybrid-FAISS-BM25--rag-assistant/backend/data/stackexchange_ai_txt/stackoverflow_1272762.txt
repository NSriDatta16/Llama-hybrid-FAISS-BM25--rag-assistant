[site]: stackoverflow
[post_id]: 1272762
[parent_id]: 1272700
[tags]: 
The only potential downside I can see would be the lack of determinism in the order of constructor calls, but in many cases, the ordering of the parts wouldn't matter. If it did, you could always avoid the partial constructor. That part is more important to your question than it seems. If you really want to understand how the C# language is put together, one thing you can do is follow Eric Lippert's blog. He works on the C# language for Microsoft, and talks a lot about choosing features with limited resources. Read his blog for a while and you'll start to get a sense of how features make it into the language. One factor he's mentioned on a few occasions is whether or not there's already a trivial work-around for the problem the feature would solve. So going back to the quoted portion of your question, you bring up two important points: There's no good solution to the lack of determinism. If you can offer an elegant solution as part of your post you'll have a better case. There's a trivial work-around already. Put those together and it's just not a winning feature.
