[site]: stackoverflow
[post_id]: 618121
[parent_id]: 618105
[tags]: 
Very often answer to this question goes to extreme. Like you should have coverage almost 100% or unit tests are stupid.... I believe that you have to find balance. Use unit tests where there is reasonable doubt that logic of the class can fail. Unit tests must be done on isolated class so it means that you probably need to mock services that class uses. This way you will feel safe to perform refactoring because unit tests will ensure that class still works as expected. Integration tests are necessary to ensure that you application works at all. You can have number of unit tests but it does not mean that you application will work correctly. I completely agree with you regarding acceptance test. Do them at the end (of sprint) and partially they must be done manually.
