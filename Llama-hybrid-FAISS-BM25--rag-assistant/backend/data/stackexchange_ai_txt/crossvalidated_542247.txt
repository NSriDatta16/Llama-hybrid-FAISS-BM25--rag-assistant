[site]: crossvalidated
[post_id]: 542247
[parent_id]: 19103
[tags]: 
I want to propose another approach. This is to test whether two time series are the same. This approach is only suitable for infrequently sampled data where autocorrelation is low. If time series x is the similar to time series y then the variance of x-y should be less than the variance of x. We can test this using a one sided F test for variance. If the ratio var(x-y)/var(x) is significantly less than one then then y explains a significant proportion of the variance of x. We also need to check that x-y is not significantly different to 0. This can be done with a one sample two sided t.test. x var.test(x-y, x, alternative = "less") # does y improve variance of x? #> #> F test to compare two variances #> #> data: x - y and x #> F = 0.27768, num df = 9, denom df = 9, p-value = 0.03496 #> alternative hypothesis: true ratio of variances is less than 1 #> 95 percent confidence interval: #> 0.0000000 0.8827118 #> sample estimates: #> ratio of variances #> 0.277679 t.test(x-y) # check that x-y does not have an offset #> #> One Sample t-test #> #> data: x - y #> t = -0.0098369, df = 9, p-value = 0.9924 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #> -0.1660619 0.1646239 #> sample estimates: #> mean of x #> -0.0007189834 Created on 2021-09-02 by the reprex package (v2.0.0) I think it should be possible to extend this approach to test whether two time series are linearly correlated, using x-lm(x ~ y) instead of x-y. Edit: Dealing with autocorrelation I think could be done by finding a suitable Effective Degrees of Freedom for the tests, c.f., https://doi.org/10.1016/j.neuroimage.2019.05.011
