[site]: stackoverflow
[post_id]: 3868090
[parent_id]: 
[tags]: 
Detect Line Break in AS3 Input TextField

I want to be able to write a paragraph in a textfield, and then click and hold, or do some similar gesture, and have the entire paragraph selected. I'm then going to drag it (using bitmapdata or whatever) to another textfield. In order to do this, I need to be able to detect where a given paragraph ends. So I'm trying to do that with the following code, which searches for "\n" in the text. It isn't finding it. Can anyone see why (or suggest another technique for doing this)? TIA, David package { import flash.display.Sprite; import flash.events.Event; import flash.events.MouseEvent; import flash.text.TextField; import flash.text.TextFieldType; import view.controls.CustomButton; public class Main extends Sprite { private var bt:CustomButton; private var tf:TextField; public function Main() { tf = new TextField(); tf.name = "tfield"; tf.type = TextFieldType.INPUT; tf.width = 400; tf.height = 200; tf.x = 100; tf.y = 100; tf.selectable = true; tf.border = true; tf.background = true; tf.backgroundColor = 0xFFFFFF; tf.multiline = true; tf.text = "Like most of the things I get excited about and share with you, this technique really doesn’t have much to it, but I love its elegance, how it works in the background and gets out of your way. While it’s really simple I think this one is a real gem, ’cause when you look at a class that uses it, it looks like magic!\n\nOkay, so you know how when you’re writing a site or app that’s of a small to medium scale, you default to storing data in XML, and you map that XML to model classes, usually pretty directly? Or, maybe you use a configuration file for your site to load in some constants or something, and XML is a pretty easy choice for this. With E4X you can really parse through that XML quickly."; tf.wordWrap = true; addChild(tf); bt = new CustomButton("Detect", 0xFFFFFF, 0x000000,50,20); bt.x = 250; bt.y = 350; addChild(bt); addEventListener(Event.ADDED_TO_STAGE, init); } private function init(e:Event):void { bt.addEventListener(MouseEvent.CLICK, clickHandler); } private function clickHandler(e:MouseEvent):void { var lineBreak:int = tf.text.indexOf("\n"); trace(lineBreak); } } } //custom button class package view.controls { import flash.display.GradientType; import flash.display.SimpleButton; import flash.display.Sprite; import flash.display.Stage; import flash.events.Event; import flash.geom.Matrix; import flash.text.TextField; import flash.text.TextFormat; import flash.text.TextFormatAlign; public class CustomButton extends Sprite { private var textColor:uint = 0x000000; private var myColor:uint = 0xFEEE9E9; private var btnWidth:Number; private var btnHeight:Number; public function CustomButton(buttonText:String, gradientColor:uint, borderColor:uint, myBtnWidth:Number, myBtnHeight:Number) { var colors:Array = new Array(); var alphas:Array = new Array(1, 1); var ratios:Array = new Array(0, 255); var gradientMatrix:Matrix = new Matrix(); var lineThickness:Number = 1; //var myColor:uint = 0xFF0000; gradientMatrix.createGradientBox(myBtnWidth, myBtnHeight, Math.PI/2, 0, 0); this.btnWidth = myBtnWidth; this.btnHeight = myBtnHeight; var ellipseSize:int = 20; var btnUpState:Sprite = new Sprite(); colors = [0xFFFFFF, myColor]; //btnUpState.graphics.lineStyle(1, brightencolor(myColor, -500)); btnUpState.graphics.lineStyle(lineThickness, borderColor); btnUpState.graphics.beginGradientFill(GradientType.LINEAR, colors, alphas, ratios, gradientMatrix); btnUpState.graphics.drawRoundRect(0, 0, myBtnWidth, myBtnHeight, ellipseSize, ellipseSize); btnUpState.addChild(createButtonTextField(buttonText, textColor)); // var btnOverState:Sprite = new Sprite(); colors = [0xFFFFFF, brightencolor(myColor, 50)]; //btnOverState.graphics.lineStyle(1, brightencolor(myColor, -50)); btnOverState.graphics.lineStyle(lineThickness, borderColor); btnOverState.graphics.beginGradientFill(GradientType.LINEAR, colors, alphas, ratios, gradientMatrix); btnOverState.graphics.drawRoundRect(0, 0, myBtnWidth, myBtnHeight, ellipseSize, ellipseSize); btnOverState.addChild(createButtonTextField(buttonText, textColor)) // var btnDownState:Sprite = new Sprite(); //colors = [brightencolor(myColor, -15), brightencolor(myColor, 50)]; btnDownState.graphics.lineStyle(lineThickness, borderColor); btnDownState.graphics.beginGradientFill(GradientType.LINEAR, colors, alphas, ratios, gradientMatrix); btnDownState.graphics.drawRoundRect(0, 0, myBtnWidth, myBtnHeight, ellipseSize, ellipseSize); btnDownState.addChild(createButtonTextField(buttonText, textColor)) // this.btnWidth = myBtnWidth; this.btnHeight = myBtnHeight; var myButton:SimpleButton = new SimpleButton(btnUpState, btnOverState, btnDownState, btnOverState); myButton.name = buttonText; addChild(myButton); } private function createButtonTextField(Text:String, textcolor:uint):TextField { var myTextField:TextField = new TextField(); myTextField.textColor = textcolor; myTextField.selectable = false; myTextField.width = btnWidth; myTextField.height = btnHeight; var myTextFormat:TextFormat = new TextFormat(); myTextFormat.align = TextFormatAlign.CENTER; myTextFormat.font = "Arial"; myTextFormat.size = 12; myTextField.defaultTextFormat = myTextFormat; myTextField.text = Text; myTextField.x = (btnWidth/2)-(myTextField.width/2); myTextField.y = 1; return myTextField; } private function brightencolor(color:int, modifier:int):int { var hex:Array = hexToRGB(color); var red:int = keepInBounds(hex[0]+modifier); var green:int = keepInBounds(hex[1]+modifier); var blue:int = keepInBounds(hex[2]+modifier); return RGBToHex(red, green, blue); } private function hexToRGB (hex:uint):Array { var colors:Array = new Array(); colors.push(hex >> 16); var temp:uint = hex ^ colors[0] > 8); colors.push(temp ^ colors[1] 255) number = 255; return number; } private function RGBToHex(uR:int, uG:int, uB:int):int { var uColor:uint; uColor = (uR & 255)
