[site]: stackoverflow
[post_id]: 4581701
[parent_id]: 4552221
[tags]: 
BackgroundWorker has everything you need. EDIT In WPF the Dispatcher is being employed automatically to invoke cross-thread method calls. Check out Build More Responsive Apps With The Dispatcher in MSDN magazine. I also put together some code fragments from a ViewModel that shows a BackgroundWorker updating a progress bar. // configure the background worker... _backgroundWorker = new BackgroundWorker(); _backgroundWorker.WorkerReportsProgress = true; _backgroundWorker.WorkerSupportsCancellation = true; _backgroundWorker.DoWork += new DoWorkEventHandler(_backgroundWorker_DoWork); _backgroundWorker.RunWorkerCompleted += new RunWorkerCompletedEventHandler(_backgroundWorker_RunWorkerCompleted); _backgroundWorker.ProgressChanged += new ProgressChangedEventHandler(_backgroundWorker_ProgressChanged); // control progress bar position private int _barPosition = 0; public int BarPosition { get { return _barPosition; } set { _barPosition = value; OnPropertyChanged("BarPosition"); } } // long operation void _backgroundWorker_DoWork(object sender, DoWorkEventArgs e) { BackgroundWorker bw = sender as BackgroundWorker; if (bw != null) { int pos; for (int i = 0; i
