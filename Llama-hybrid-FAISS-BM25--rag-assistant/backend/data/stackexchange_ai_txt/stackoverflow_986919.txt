[site]: stackoverflow
[post_id]: 986919
[parent_id]: 985516
[tags]: 
We recently worked on a similar project in c#, but the principles should be the same. We didn't really have the same issues with conflict management since we versioned the file in a table and then gave merge functionality to the user if someone else overwrote their data. The problem became much easier when we decided we would use xslt to tranform the xml into the xhtml forms. Depending on the complexity of the xml (and the resulting form), this could probably be done relatively quickly. You can then perform the transformtation (in most languages) in a single line. What made this work so well was that we could use the form element name attributes to pass along the xpath of every node we were trying to update (getting this in xslt is pretty easy). We would then have a direct reference to the data being updated. After validating the user input, you can then update the xml with a few lines, too. It ended up being a beautifully elegant solution (just the sort of thing that xml, xslt, and xquery are designed for). The best part is that it translates nicely to any language that has relatively-good xml tools. This approach also makes it very easy to add functionality to the form or provide alternate views on the data.
