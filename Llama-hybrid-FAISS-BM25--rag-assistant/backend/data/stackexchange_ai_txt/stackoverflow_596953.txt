[site]: stackoverflow
[post_id]: 596953
[parent_id]: 596826
[tags]: 
Try to define usability in terms of "test-able" requirements. You already gave yourself the answer, because usability can be described in terms of requirements like "an entry should be deleted in less then 100ms after the initial call". What makes a user interface 86% intuitive? This can’t be answered without some form of measurement. You need to ask what features can make a user interface intuitive. Talk to the customer and the potential future users. Gather features (or better dig for them!), which would make working with the piece of software easier. Maybe you get a list of features like: The department’s organization must be shown in a hierarchical tree view. In this tree view drag & drop must be possible. The font size must be configurable and saved for each user. On the top of the screen there must be a list of important links. Each user may configure and save his own personal list. ... Make requirements out of these features. They are “testable” and thus “measureable”. If in the acceptance tests it turns out that 17 out of 20 features are working, you have 85% success. EDIT: This works in a project environment, where you need to deliver measurements (like in many commercial projects). If you have a "softer" form of project environment where not everybody is poking on figures, then sticking too much on this formalism may be counterproductive since flexibility and agility may suffer from this.
