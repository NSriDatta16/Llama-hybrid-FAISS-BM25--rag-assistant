[site]: stackoverflow
[post_id]: 2426270
[parent_id]: 40154
[tags]: 
Creating ad-hoc distribution profiles The instructions that Apple provides are here , but here is how I created a general provisioning profile that will work with multiple apps, and added a beta tester. My setup: Xcode 3.2.1 iPhone SDK 3.1.3 Before you get started, make sure that.. You can run the app on your own iPhone through Xcode. Step A: Add devices to the Provisioning Portal Send an email to each beta tester with the following message: To get my app on onto your iPhone I need some information about your phone. Guess what, there is an app for that! Click on the below link and install and then run the app. http://itunes.apple.com/app/ad-hoc-helper/id285691333?mt=8 This app will create an email. Please send it to me. Collect all the UDIDs from your testers. Go to the Provisioning Portal . Go to the section Devices . Click on the button Add Devices and add the devices previously collected. Step B: Create a new provisioning profile Start the Mac OS utility program Keychain Access . In its main menu, select Keychain Access / Certificate Assistant / Request a Certificate From a Certificate Authority... The dialog that pops up should aready have your email and name it it. Select the radio button Saved to disk and Continue. Save the file to disk. Go back to the Provisioning Portal . Go to the section Certificates . Go to the tab Distribution . Click the button Request Certificate . Upload the file you created with Keychain Access: CertificateSigningRequest.certSigningRequest . Click the button Aprove . Refresh your browser until the status reads Issued . Click the Download button and save the file distribution_identify.cer . Doubleclick the file to add it to the Keychain. Backup the certificate by selecting its private key and the File / Export Items... . Go back to the Provisioning Portal again. Go to the section Provisioning . Go to the tab Distribution . Click the button New Profile . Select the radio button Ad hoc . Enter a profile name, I named mine Evertsson Common Ad Hoc . Select the app id. I have a common app id to use for multiple apps: Evertsson Common . Select the devices, in my case my own and my tester's. Submit. Refresh the browser until the status field reads Active . Click the button Download and save the file to disk. Doubleclick the file to add it to Xcode. Step C: Build the app for distribution Open your project in Xcode. Open the Project Info pane: In Groups & Files select the topmost item and press Cmd+I . Go to the tab Configuration . Select the configuration Release . Click the button Duplicate and name it Distribution . Close the Project Info pane. Open the Target Info pane: In Groups & Files expand Targets , select your target and press Cmd+I . Go to the tab Build . Select the Configuration named Distribution . Find the section Code Signing . Set the value of Code Signing Identity / Any iPhone OS Device to iPhone Distribution . Close the Target Info pane. In the main window select the Active Configuration to Distribution . Create a new file from the file template Code Signing / Entitlements . Name it Entitlements.plist . In this file, uncheck the checkbox get-task-allow . Bring up the Target Info pane, and find the section Code Signing again. After Code Signing Entitlements enter the file name Entitlements.plist . Save, clean, and build the project. In Groups & Files find the folder MyApp / Products and expand it. Right click the app and select Reveal in Finder . Zip the .app file and the .mobileprovision file and send the archive to your tester. Here is my app. To install it onto your phone: Unzip the archive file. Open iTunes. Drag both files into iTunes and drop them on the Library group. Sync your phone to install the app. Done! Phew. This worked for me. So far I've only added one tester.
