[site]: stackoverflow
[post_id]: 2493067
[parent_id]: 2492934
[tags]: 
At any given moment, your application doesn't necessarily have any physical memory. If your app is waiting on an IO operation for a while and the user starts editing a video, your app may disappear from physical memory altogether. It only exists in the page file. When the IO operation completes and one of your threads needs to start running again, you get some physical memory back. All you really get to allocate is parts of your process's address space. Parts of it may be mapped to files (such as your EXE or any native DLLs that didn't need to be rebased). Other parts may be "memory allocation", but really that just means they are mapped to places in the page file. None of it is "really" memory in any reliable sense. The thing you can certainly run out of is room in your address space. If you allocate 100MB chunks a few times, plus a few smaller ones, it won't be long before you've fragmented the address space (which by default only gives you enough room for about 20 such chunks, and any given chunk has to fit into one contiguous region).
