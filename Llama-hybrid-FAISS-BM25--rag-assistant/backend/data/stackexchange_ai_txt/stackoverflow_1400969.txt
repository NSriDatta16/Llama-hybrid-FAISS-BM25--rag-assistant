[site]: stackoverflow
[post_id]: 1400969
[parent_id]: 1400403
[tags]: 
You don't need to write these yourself if you're using an ActiveRecord model. Multi-parameter attributes can be submitted via forms in pieces. As an example look at how the datetime_select method you're not too fond of works: http://apidock.com/rails/ActionView/Helpers/DateHelper/datetime_select Internally the various parameters get submitted with order and type information so that they can be properly encoded. You can build off of this functionality by simply naming your fields the same way. It is not too hard to copy a helper method you like and put the adjusted version in your ApplicationHelper module. The values here show up as parameters named something along the lines of: model_type[attribute(1i)] model_type[attribute(2i)] model_type[attribute(3i)] These are combined in the correct order, converted as required, and submitted to a constructor for that attributes particular type, such as DateTime. This avoids having to create your own wrapper methods. In any case, the easy way to create attributes is to use the attr_accessor method, such as: class MyModel That will create the appropriate accessor and mutator methods. You can use a before_validation trigger to recombine the values in a single pass, or write a wrapper around the date retrieval method to reconsruct it as required.
