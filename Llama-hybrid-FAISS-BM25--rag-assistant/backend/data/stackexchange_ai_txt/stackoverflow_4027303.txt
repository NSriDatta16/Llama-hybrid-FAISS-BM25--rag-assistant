[site]: stackoverflow
[post_id]: 4027303
[parent_id]: 4025859
[tags]: 
Ed, here's an example of using namespaces with the System.Xml.XPath Extensions class. I've modified it to match the input you're looking at: string markup = @" "; XmlReader reader = XmlReader.Create(new StringReader(markup)); XElement root = XElement.Load(reader); XmlNameTable nameTable = reader.NameTable; XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable); nsm.AddNamespace("x", "http://schemas.microsoft.com/winfx/2006/xaml"); nsm.AddNamespace("dep", "http://schemas.microsoft.com/client/2007/deployment"); IEnumerable elements = root.XPathSelectElements("//dep:Deployment/dep:Deployment.Parts/dep:AssemblyPart/@x:Name", nsm); foreach (XElement el in elements) Console.WriteLine(el); Not very complicated. Obviously you already know about XmlNamespaceManager, but I think you got a worse impression of it than it deserves. When you say "hopelessly fragile code that can't tolerate the slightest variation in the input file", are you blaming namespaces in general, or XmlNamespaceManager? I don't see how either one makes it fragile... any more so than XML processing code without namespaces will not tolerate certain changes in the input document, but will tolerate others. Have a little respect for other intelligent people in the industry, take a little time to understand the advantages behind a design before you dismiss it, and you will usually find that there are good reasons for what was done. Not that XML namespaces couldn't be improved upon. However nobody has managed to produce a better standard and get it accepted by the community.
