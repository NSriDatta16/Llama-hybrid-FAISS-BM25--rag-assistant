[site]: stackoverflow
[post_id]: 968087
[parent_id]: 967951
[tags]: 
You could track whether or not your view has received a touchBegan event without a corresponding touchEnded . If this is the case, you can infer that a touch is going on right now, and continue running the code. For example: - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event { self.touchInProgress = YES; // Assuming you have some property touchInProgress [self runSomeCode]; } - (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event { self.touchInProgress = NO; } - (void)runSomeCode { // Do your code here if(self.touchInProgress) { [self runSomeCode] } } This example doesn't take into account a number of things, including the touchesCancelled method, and the relevant threading (if you're always running "some code", I'm not sure, but you may never get the touchesEnded method to run - play with performSelector:afterDelay: or performSelectorInBackground: ).
