[site]: datascience
[post_id]: 25845
[parent_id]: 25350
[tags]: 
Just to add on a bit. I'm not sure where you got "(3*3*9+3*3)/5*5". A 3x3 filter has 9 parameters and a 5x5 has 25 paraemters. Therefore, even if you stack two 3x3 filters, you still only have 18 compared to the 25. That is in fact a 28% reduction in parameters that need to be calculated. This simple reduction spread out across an entire network can dramatically improve speeds. In fact, you can even take this principle and apply a nx1 filter that moves only moves across the horizon followed by a 1xn flter that moves vertically to see similar gains. (Although this may introduce bottlenecks.) I think a good way to understand the computational cost is to actually calculate a simple filter by hand. Keep track of all the operations you're doing and find out what is reusable. Lastly, i'll also mention that stacking two 3x3 kernels gives you a receptive field of a 5x5 kernel. Stacking three of 3x3 kernels gives you a receptive field of a 7x7 and so on and so forth. Understanding the receptive field is critical for any computer vision task. Here's some more info DCNN Receptive Field Info
