[site]: stackoverflow
[post_id]: 1231284
[parent_id]: 1231114
[tags]: 
When you introduce a string constant in a C program, an unnamed, unmodifiable, object with static storage duration is created. "Static storage duration" means it lives for the life of the program. So when you have this in your code: function_name (garray, "arg2", "arg3" /* and so on ... */); The strings "arg2" and "arg3" are string constants - they exist somewhere in program memory, for the life of the program . Often these are stored in a text segment, in the same way that the program code itself is. What is actually passed to function_name() - presumably on the stack - are pointers to those string constants. And that is what your GArray ends up storing - pointers to those string constants. (Note that a string used as an array initialiser is not a string constant).
