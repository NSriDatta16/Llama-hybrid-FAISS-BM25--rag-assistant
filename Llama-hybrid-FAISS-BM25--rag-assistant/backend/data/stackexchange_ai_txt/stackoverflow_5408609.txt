[site]: stackoverflow
[post_id]: 5408609
[parent_id]: 5408240
[tags]: 
This is some very rough code. I didn't test it, nor do I plan to (your job is to make it work). If you had HTML like this (plus CSS for appropriate height and width, and float or position them inline): (Remove me: Just a 1 pix wide border) Hello I'm a rect Hello I'm a rect Hello I'm a rect And js like this: var startX; var leftRect = null; var rightRect = null; var isMoving = false; $('.vertical_border').mousedown(function(e) { // Get the initial position of the mouse when you first click isMoving = true; startX = event.pageX; leftRect = $(this).prev('.rectangle'); rightRect = $(this).next('.rectangle'); }); $('.area').mousemove(function(e) { // Updated the rectangles as the mouse is held and moving if(isMoving) { deltaX = e.pageX - startX // If you move the cursor left, deltaX is negative, so leftRect gets smaller leftRect.css('width', parseInt(leftRect.css('width')) + deltaX); // and rightRect gets bigger rightRect.css('width', parseInt(rightRect.css('width')) - deltaX); } }); $('.area').mouseup(function(e) { // Disallow the rects from moving anymore when the user lets go isMoving = false; }); The drag and drop can be handled by other jQuery plugins, I believe.
