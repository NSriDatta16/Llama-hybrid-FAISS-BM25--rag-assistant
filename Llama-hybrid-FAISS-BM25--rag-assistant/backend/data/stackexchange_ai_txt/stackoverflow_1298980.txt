[site]: stackoverflow
[post_id]: 1298980
[parent_id]: 1298863
[tags]: 
As others have suggested profile your code before thinking of modifying it. BUT the single best thing you can do is to read the compiler manual closely, line by line, word by word, and pay careful attention to all the options it gives you. In my experience (I have a lot of experience in HPC for computational electromagnetics, not that you should believe what you read here !) you get most bangs for your bucks in performance optimisation by intelligent use of the compiler. Once you've exhausted the possibilities of the compiler (and as one of the other respondents suggested make sure you have a good compiler -- they're not expensive and I get c40% decrease in execution time for most programs going from g95 to a paid-for compiler) then you should NOT start doing things like: -- loop unrolling; -- instruction re-ordering; -- function inlining; -- other stuff which we used to do all the time way back in the day. Most of this code-tweaking stuff is now done, better than us carbon-based life-forms can do it, by good optimising compilers. If you must tinker, tinker with memory access -- for example tile your access to arrays to take advantage of cache. If you do this, parameterise your tile sizes (etc) so that when, next year, or the year after, you move it to a different architecture you only have to tweak a few parameters rather than modify the code again. Finally, have fun, optimising the performance of Fortran programs is a great way to spend your working day !
