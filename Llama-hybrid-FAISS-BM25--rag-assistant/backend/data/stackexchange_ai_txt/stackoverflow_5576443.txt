[site]: stackoverflow
[post_id]: 5576443
[parent_id]: 5575752
[tags]: 
After reading your question again with your comment in mind, I assume that There is a javascript event handler for the event 'new comment title has been added'. The provided fragment resides withing a container of sort e.g. fragment The fragment should be refreshed every time the event handler is executed You've seen that is possible to load the fragment by $('#add_comment_title_action').load('fragment_url') but you rather just do it within the client Let's assume that the event handler looks something like $('#add_comment_title_form').submit(function(e) { e.preventDefault(); $.post( 'url', { 'title': 'Lorem ispum dolor sit amet'} ); updateFragment(); }); Then you could have a function for updating the fragment updateFragment() { // Let's assume that @video.user == current_user && !current_user.nil? if($('.comment_title').size() You have reached your limit of comment titles. You can always add a new one by deleting one of your old ones. '); } } How the code can be made better: There should be some callback to check if the post request has succeeded and proceed accordingly You could handle the two different states of the fragment by simply hiding and showing the options depending on the state (if you can assume all the users have enabled javascript and css) If you decide to replace the fragment with .html(...) then the event handlers for the elements within the fragment should be bound with .live(event, handler) so that you can enable adding new comment titles after a delete has been performed Note that every check done in the client side must be done in the server side also. See history for completely different answer :)
