[site]: stackoverflow
[post_id]: 3464582
[parent_id]: 3464567
[tags]: 
Use the OnMessage function to respond to the message. Here is a sample script. ;;; This is an AutoHotKey -*- ahk -*- script ;;; ;;; ABOUT ;;; Respond to WM_SETTINGCHANGE messages and update this process's PATH ;;; environment variable. ;;; ;;; USAGE ;;; Run the script directly (e.g. double-click) or drag and drop onto ;;; the AutoHotKey application. ;;; ;;; DEBUG ;;; Optionally define a key binding to debug_show_recv_count, e.g.: ;;; #space:: debug_show_recv_count() ;;; ;;; AUTHOR ;;; piyo @ StackOverflow ;;; ;; ;; Register an AHK function as a callback. ;; OnMessage( (WM_SETTINGCHANGE:=0x1A), "recv_WM_SETTINGCHANGE") ;; ;; Respond to the WM_SETTINGCHANGE message. ;; recv_WM_SETTINGCHANGE(wParam, lParam, msg, hwnd) { global g_recv_WM_SETTINGCHANGE_count g_recv_WM_SETTINGCHANGE_count := g_recv_WM_SETTINGCHANGE_count + 1 ;;debug;; ToolTip Received a WM_SETTINGCHANGE ! reset_env_path_from_registry() } ;; ;; Import the recently changed Path environment variable from the ;; Windows Registry. Import from the System and User environments. ;; reset_env_path_from_registry() { sys_path := "" sys_subkey := "SYSTEM\CurrentControlSet\Control\Session Manager\Environment" RegRead, sys_path, HKEY_LOCAL_MACHINE, %sys_subkey%, Path cu_path := "" cu_subkey := "Environment" RegRead, cu_path, HKEY_CURRENT_USER, %cu_subkey%, Path new_path := sys_path . ";" . cu_path ;;debug;; MsgBox,% new_path EnvSet, PATH,% new_path } ;;; ; Debug var for interactive sanity checking g_recv_WM_SETTINGCHANGE_count := 0 ; Debug function for interactive sanity checking debug_show_recv_count() { global g_recv_WM_SETTINGCHANGE_count path := "" EnvGet, path, PATH msg := "g_recv_WM_SETTINGCHANGE := " . g_recv_WM_SETTINGCHANGE_count msg := msg . "!`n" . path MsgBox,% msg } ;;; end
