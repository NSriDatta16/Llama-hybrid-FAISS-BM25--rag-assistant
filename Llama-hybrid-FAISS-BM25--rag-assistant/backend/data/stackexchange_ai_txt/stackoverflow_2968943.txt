[site]: stackoverflow
[post_id]: 2968943
[parent_id]: 2968907
[tags]: 
Your problem here is if the user closes the form, the object will have been disposed. There are a few ways you can handle this, some more elegant than the other. Add a handler for FormX_Closed() at this time you can reset the tag reference You could switch to a "Show dialog" process and then reset before your DoubleClick() method ends It really depends on what these forms are doing. Typically i would see your DoubleClick method doing a lookup then creating the instance, simply because if you create instances you are using memory that might not be needed, but that is something that might be necessary considering your application. Lookup Example As requested in the comments, if I were to do this a different way, I would use an enumeration value, or even a simple integer "key" value for the tag. Then I would create something like the following to show it. Select Case myTag Case 1 Dim formInstance As New Form1() formInstance.Show() Case Else Dim formInstance As New Form2() formInstance.Show() End Select Basically centralize it and launch the form on demand, you could switch this out for another design pattern if you wanted more control or had a lot of different form types.
