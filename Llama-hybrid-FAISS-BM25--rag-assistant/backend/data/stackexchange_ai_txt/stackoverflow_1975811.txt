[site]: stackoverflow
[post_id]: 1975811
[parent_id]: 
[tags]: 
DB-intense "unit-tests" in times when hardware is cheap

I was thinking about well known article " Hardware is Cheap, Programmers are Expensive " by Jeff Atwood and a recommendation of "Keep the Build Fast" by Martin Fowler. My tried approaches: I've suffered from too slow tests which was caused by intensive use of database. I like that it is cheap.. at the beginning. I've tried a multitiered architecture with persistent-arrogant easy tested domain objects. I like that it is maintainable and easy to use. But it is expensive in terms of time. In case when I have enough time resources I usually choose the second way, but most of the time I have to live with the first one. How to find a more cost effective approach? Is it the first way with a quite powerful hardware?
