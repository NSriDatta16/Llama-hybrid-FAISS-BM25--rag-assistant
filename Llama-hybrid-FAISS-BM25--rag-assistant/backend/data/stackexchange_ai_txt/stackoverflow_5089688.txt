[site]: stackoverflow
[post_id]: 5089688
[parent_id]: 5075203
[tags]: 
Here's the function translated to Objective-C. It's been updated to compile but only barely tested for correctness (on the example given in your previous question : [... minragged:@"Just testing to see how this works." lineCount:3] ). Nothing regarding efficiency or Objective-C idioms has been taken in to account. @interface NSMutableArray (reverse) /* Could also return self, but this makes it explicit that array is reversed in-place rather than returning a reversed copy. */ -(void)reverse; @end @implementation NSMutableArray (reverse) -(void)reverse { int i,j; for (i=0,j=[self count]-1; i 0; --i) { range.location = [[[[best objectAtIndex:i] objectAtIndex:end] objectAtIndex:1] intValue]; range.length = end-range.location; [lines addObject:[[words subarrayWithRange:range] componentsJoinedByString:@" "]]; end = range.location; } [lines reverse]; return lines; } You may wish to create an autorelease pool to clear out the objects created in -minragged:lineCount: so as not to exhaust memory. If you do, make sure to retain lines before draining the pool, and autoreleasing it afterwards.
