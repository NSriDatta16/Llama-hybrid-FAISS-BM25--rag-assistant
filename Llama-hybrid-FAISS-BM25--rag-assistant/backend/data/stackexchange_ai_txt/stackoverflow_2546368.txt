[site]: stackoverflow
[post_id]: 2546368
[parent_id]: 2546291
[tags]: 
As a general rule of thumb, when we speak about asymptotic complexity that ignores constants like O(n) it doesn't matter whether you have twice as much work, three times as much work etc. Therefore the problem which is O(n) stays O(n) in such scenario. In this particular problem, having duplicates in an unsorted array doesn't speed up the process of searching for an element. Of course, if the element is 10 times in the array, you would probably find it 10 times faster (on average), but as long as this doesn't depend on n, it doesn't change the complexity.
