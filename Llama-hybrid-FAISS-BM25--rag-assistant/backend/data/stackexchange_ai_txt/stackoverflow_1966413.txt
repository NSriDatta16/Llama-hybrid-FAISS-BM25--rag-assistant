[site]: stackoverflow
[post_id]: 1966413
[parent_id]: 1966398
[tags]: 
My guess is, that web service APIs with pretty URLs (aka REST) are built via some kind of webframework (Werkzeug, web.py, django, pylons, cherrypy, plain wsgi, ...). The module you are referring to takes care of url matching/handling to determine the correct route for a request. Example of wsgi routing: http://wsgi.org/wsgi/Specifications/routing_args the Routes package: http://routes.groovie.org/ From the documentation of the latter: Routes tackles an interesting problem that comes up frequently in web development, how do you map URLs to your application’s actions? That is, how do you say that this should be accessed as /blog/2008/01/08 , and /login should do that? Many web frameworks have a fixed dispatching system; e.g., /A/B/C means to read file C in directory B , or to call method C of class B in module A.B . These work fine until you need to refactor your code and realize that moving a method changes its public URL and invalidates users’ bookmarks. Likewise, if you want to reorganize your URLs and make a section into a subsection, you have to change your carefully-tested logic code.
