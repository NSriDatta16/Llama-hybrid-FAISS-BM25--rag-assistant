[site]: datascience
[post_id]: 38678
[parent_id]: 38677
[tags]: 
There is no hard-and-fast rule for this. The number of hidden nodes you should have is based on a complex relationship between Number of input and output nodes Amount of training data available Complexity of the function that is trying to be learned The training algorithm Too few nodes will lead to high error for your system as the predictive factors might be too complex for a small number of nodes to capture Too many nodes will overfit to your training data and not generalize well To conclude, There is no hard and fast rule. You just have to keep trying with different number of layers to see which one works best... In neural networks, model architecture is an art that you can master with some experience and domain knowledge. Check this answer too...
