[site]: stackoverflow
[post_id]: 1719712
[parent_id]: 1719020
[tags]: 
Tracked it down to an internal reference to controls in the C1Combo. There is a list that for some reason has references to the forms and a few other things. In Dispose() on the form, I call this function against each C1Combo control. No idea on the consequences, likely minimal as the control should be Disposed anyway. It's also very fragile, as if they release a new version, and the obfustication messes up all the method/field names, it will break. private void RemoveInternalC1ComboReferenceListHack(C1Combo combo) { var result = typeof(C1Combo).GetField("_dropDownList", BindingFlags.NonPublic | BindingFlags.Instance).GetValue(combo); var result2 = result.GetType().GetField("c", BindingFlags.NonPublic | BindingFlags.Instance).GetValue(result); var result3 = result2.GetType().GetField("r", BindingFlags.NonPublic | BindingFlags.Instance).GetValue(result2); var result4 = result3.GetType().GetField("b", BindingFlags.NonPublic | BindingFlags.Instance).GetValue(result3); ((System.Collections.Generic.List )result4).Clear(); }
