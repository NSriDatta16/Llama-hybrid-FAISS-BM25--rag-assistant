[site]: stackoverflow
[post_id]: 2456099
[parent_id]: 
[tags]: 
Nested lambda expressions and string cultures

I'm trying to do a nested lambda expression like to following: textLocalizationTable.Where( z => z.SpokenLanguage.Any( x => x.FromCulture == "en-GB") ).ToList(); but i get the error: Member access 'System.String FromCulture' of 'DomainModel.Entities.SpokenLanguage' not legal on type 'System.Data.Linq.EntitySet`1[DomainModel.Entities.SpokenLanguage]. TextLocalization has this relation to spokenlanguage: [Association(OtherKey = "LocalizationID", ThisKey = "LocalizationID", Storage = "_SpokenLanguage")] private EntitySet _SpokenLanguage = new EntitySet (); public EntitySet SpokenLanguage { set { _SpokenLanguage = value; } get { return _SpokenLanguage; } } Any idea what is wrong? I have tried your suggestion with the same error. Spokenlanguage now has this association: internal EntityRef _TextLocalization; [Association(ThisKey = "LocalizationID", OtherKey = "LocalizationID", Storage = "_TextLocalization")] public TextLocalization TextLocalization { get { return _TextLocalization.Entity; } internal set { _TextLocalization.Entity = value; LocalizationID = value.LocalizationID; } } On the datacontext this is added: DataLoadOptions dlo = new DataLoadOptions(); dlo.LoadWith (text => text.SpokenLanguage); dc.LoadOptions = dlo; Any further ideas? Mayby it just me misunderstood some fundamental stuff??
