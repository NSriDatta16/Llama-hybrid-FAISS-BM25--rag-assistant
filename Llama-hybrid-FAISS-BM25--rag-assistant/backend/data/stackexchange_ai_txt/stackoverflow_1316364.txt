[site]: stackoverflow
[post_id]: 1316364
[parent_id]: 
[tags]: 
git whitespace woes

Conflicts on whitespace suck Whitespace has ended up being a horrible pain for me while using git. git config apply.whitespace=strip seems to highten your chances of getting conflicts (as you strip unneeded whitespace and then other collaborators see the stripped whitespace as a change to their commits?) I've tried a few other configurations for apply.whitespace in the past, and maybe one of the other configs solves this, or maybe there's other settings to deal with whitespace that I just haven't come across, but I haven't yet found a clear way to get where I want to be. I want to silently resolve whitespace conflicts: I never want to have another conflict on whitespace. If another committer alters whitespace, or I alter whitespace and then have to merge against my own conflicts, i really don't want to know about it . If someone changes my code from K&R style to One True Brace style by changing whitespace, I'd prefer git allow either whitespace setup to win out over having to see conflicts about it. I just don't care enough about whitespace to want to see conflicts about it. So... ...is there any way that I can configure git to do that? If it makes any difference, here's my git version, and my current config: tchalvak:~/ninjawars$ git --version git version 1.6.0.4 tchalvak:~/ninjawars$ git config --list color.branch=auto color.diff=auto color.status=auto color.branch.current=yellow reverse color.branch.local=yellow color.branch.remote=green color.diff.meta=yellow bold color.diff.frag=magenta bold color.diff.old=red bold color.diff.new=green bold color.status.added=yellow color.status.changed=green color.status.untracked=cyan gui.recentrepo=/home/tchalvak/zd/htdocs/cms apply.whitespace=strip user.name=**** user.email=**** alias.co=checkout github.user=tchalvak github.token=**** core.repositoryformatversion=0 core.filemode=true core.bare=false core.logallrefupdates=true remote.origin.url=...@github.com:tchalvak/ninjawars.git remote.origin.fetch=+refs/heads/*:refs/remotes/origin/* branch.master.remote=origin branch.master.merge=refs/heads/master
