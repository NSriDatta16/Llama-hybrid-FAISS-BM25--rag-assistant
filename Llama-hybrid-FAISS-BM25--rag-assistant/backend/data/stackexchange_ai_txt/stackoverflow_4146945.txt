[site]: stackoverflow
[post_id]: 4146945
[parent_id]: 4146818
[tags]: 
NOTE This answer only applies if you want to keep one object per class - if the OP meant "one unique object instance but multiple instances per class", this answer is wrong and Sinan's should be used. A common pattern to implement such an approach (called a Singleton), is to implement a factory method for creating such objects and a storage for keeping them. So, you would have: A package containing the factory and the object set That package has a hash, with key being the type of object (you can use class name as a type) and the value being the object of that type. A factory method make_object, which is provided as one of the arguments with the type of object to make An accessor returning an object of a specific type (basically a lookup in the hash mentioned above) Optionally, a "retrieve-or-create" method whith the logic of if (!exists_object($type)) { make_object($type); return get_object($type) }
