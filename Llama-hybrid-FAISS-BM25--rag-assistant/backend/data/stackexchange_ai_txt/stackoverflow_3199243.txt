[site]: stackoverflow
[post_id]: 3199243
[parent_id]: 
[tags]: 
Swipe to Reveal Menu like Tweetie

I've been working on a new app and was really hoping to implement a swipe to reveal more options menu inside my application. I've searched and searched, but it seems no one else has successfully made it work (aside from Loren). What I'm trying to do is swipe the cell, and simultaneously use CABasicAnimation to push it to x: 320, and add a subview below this that would have the buttons etc.. I'm using willBeginEditing to detect the swipe to avoid subclassing. Here's the code: - (void)tableView:(UITableView *)tableView willBeginEditingRowAtIndexPath:(NSIndexPath *)indexPath { UITableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath]; CABasicAnimation *theAnimation; theAnimation=[CABasicAnimation animationWithKeyPath:@"transform.translation.x"]; theAnimation.duration=0.0; theAnimation.repeatCount=0; theAnimation.autoreverses=NO; theAnimation.removedOnCompletion = NO; theAnimation.fillMode = kCAFillModeForwards; theAnimation.fromValue=[NSNumber numberWithFloat:0]; theAnimation.toValue=[NSNumber numberWithFloat:+320]; [cell.layer addAnimation:theAnimation forKey:@"animateLayer"]; CGRect frame = CGRectMake(0, 59 * indexPath.row, 320, 59); UIView *menu = [[[UIView alloc] initWithFrame:frame] autorelease]; NSString *path = [NSString stringWithFormat:@"%@%@", [[NSBundle mainBundle] resourcePath], @"/flick.wav"]; SystemSoundID soundID; NSURL *filePath = [NSURL fileURLWithPath:path isDirectory:NO]; AudioServicesCreateSystemSoundID((CFURLRef)filePath, &soundID); AudioServicesPlaySystemSound(soundID); self.menu.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"dots.png"]]; [self.view addSubview:menu]; [self.view sendSubviewToBack:menu]; } - (void)animationDidStop:(NSString*)animationID finished:(BOOL)finished context:(void *)context { // Release [self release]; } #pragma mark - Swipe Menu II - (void)scrollViewDidScroll:(UIScrollView *)tableView { UITableViewCell *cell = [tableView cellForRowAtIndexPath:nil]; CABasicAnimation *theAnimation; theAnimation=[CABasicAnimation animationWithKeyPath:@"transform.translation.x"]; theAnimation.duration=0.2; theAnimation.repeatCount=0; theAnimation.autoreverses=NO; theAnimation.fromValue=[NSNumber numberWithFloat:320]; theAnimation.toValue=[NSNumber numberWithFloat:0] ; [cell.layer addAnimation:theAnimation forKey:@"animateLayer"]; } The problem is the sliding back of the cell - I want to do it when any touch outside the menu view is received, but because it is a scrollView, I can't. The ScrollViewdidScroll Method only animates the cell back to its normal place once it is scrolled of the viewport. (As in, under the NavigationBar or object that obscures it) The last key issue is the ability to detect if a menu is already visible or active and a cell is already off of the screen, slide the cell back to its original position, remove the menu view, and then slide the other cell out and add the menu. I would like to be the first beside Loren to implement this as so many others have tried, especially on StackOverflow. I apologize for the poor formatting in the code. Thanks in advance, Kolin
