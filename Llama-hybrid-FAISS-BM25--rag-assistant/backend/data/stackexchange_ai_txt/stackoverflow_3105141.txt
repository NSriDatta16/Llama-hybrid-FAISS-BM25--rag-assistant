[site]: stackoverflow
[post_id]: 3105141
[parent_id]: 3105114
[tags]: 
printf() and friends aren't special because they accept a variable number of arguments: user-defined functions can accept a variable number of arguments too. They are special because their behavior is defined by standard, so the compiler knows what the correlation should be between the format string and the arguments passed to the function. Effectively, the compiler knows how many arguments are passed to the function when it is called, so it parses the format string and compares the expected number and types of arguments against what arguments are actually passed to the function and issues a warning if they don't match. If you are using C++, I would avoid writing your own variadic functions; there are few good reasons to use them in most projects. For example, if you are doing formatting, use streams or a library like Boost Format . Any problem that can be solved using a variadic function can be solved using a non-variadic function, and in almost all cases the result is more elegant, idiomatic, and type-safe.
