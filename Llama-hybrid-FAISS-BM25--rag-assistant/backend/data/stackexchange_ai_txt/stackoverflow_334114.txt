[site]: stackoverflow
[post_id]: 334114
[parent_id]: 
[tags]: 
How do I track web-based Logins and Logouts?

I'm making modifications to a members-based site whose owner wants to be able to track time spent on site (login/logout) for all users in a DB backend. Login is easy; there's one point of entry (the login form) and as a result, logins can be thrown in the database as soon as they happen. Logouts, however, are a bit trickier, as unless the user clicks 'logout' to explicitly let us know they're leaving the solution gets hairier (and how often do users really click logout?). One possibility (just in terms of tracking total time on the site) would be to register each pageload in the database and associate it with the user that loaded it; the problem with that is that the site is a membership-based video delivery site (not what you're thinking!) and their last pageview is likely going to be a twenty or thirty minute video. We need to capture that time spent on that last page, as well--not just the time it was loaded. I've thought of two possible solutions, neither of which is all that elegant. The first would be to trap all 'unload' events via javascript and register a call to 'logout.php' (this assuming the XMLHttpRequest or whatever doesn't die as soon as the page is unloaded); the problem there is that internal links also register as unload events, so clicking any link would log the user out (you could to check a flag in the 'unload' handler, and have all internal links set that flag--not hard to do dynamically, but a bit kludgy). The other approach would involve setting an interval to ping the DB every 60 s or so, which lets us know that the user is still on the site, and then doing some math when pulling the user's history to figure out the total length of that session; that also seems kind of hackish. Also, neither of these solutions work for users with JS disabled. It seems that this problem isn't that unusual, and there's got to be a better way; is there a best-practices approach to solving this? If not, do you see any way to improve either of these solutions?
