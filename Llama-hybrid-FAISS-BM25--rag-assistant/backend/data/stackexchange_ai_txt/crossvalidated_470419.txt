[site]: crossvalidated
[post_id]: 470419
[parent_id]: 
[tags]: 
How to improve predict performance using proxy to target signal?

I have a regression problem in a supervised learning setting. To put it formally, given an input x and a target y , I want to learn a mapping function y^ = f(x) such that y^~y for all X . For this particular problem, it is hard to achieve good performance because the input x is somewhat incomplete. So even for a human, it could be difficult to guess y correctly. To make things worse, the amount of data available for training is quite limited, by modern DL standards. Now, let's say that I also have access, only during training time , to a signal u , which is a proxy for y . u is similar to a guess; most times it agrees to y , sometimes it doesn't. My question is: how can I incorporate this u signal into my model training to improve predictive performance? (this could be either obtaining a higher overall score or the same score but using fewer samples) My feeling is that something like this must have been studied before, but I am a bit lost and don't know where/what to look for. My initial thoughts are that maybe u could be used as some sort of prior, at least making the model less data-hungry. But I also don't know how to implement this. My current model is in the form of a neural network, so I would prefer solutions that fit with this. But I'm also open to changing it if needed.
