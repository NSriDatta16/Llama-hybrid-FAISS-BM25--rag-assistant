[site]: crossvalidated
[post_id]: 398319
[parent_id]: 317145
[tags]: 
The important thing is getting vectors for each word. The similarity is captured from the context. Words with similar context end up with similar vectors. The similarity can be calculated using cosine similarity or euclidean distance on word vectors. No neural network is involved here Yes, the vectors are extracted from the hidden layer weights. There is already algorithm which calculates the document distance using word embedding. You can find the paper here
