[site]: stackoverflow
[post_id]: 5155732
[parent_id]: 5152079
[tags]: 
Basically, you need 4 vertex positions (as vec2) of a quad (with corners (-1,-1) and (1,1)) passed as a vertex attribute. You don't really need a projection, because the shader will not need any. Create an FBO, bind it and attach the target surface. Don't forget to check the completeness status. Bind the shader, set up input textures and draw the quad. Your vertex shader may look like this: #version 130 in vec2 at_pos; out vec2 tc; void main() { tc = (at_pos+vec2(1.0))*0.5; //texture coordinates gl_Position = vec4(at_pos,0.0,1.0); //no projection needed } And a fragment shader: #version 130 in vec2 tc; uniform sampler2D unit_in; void main() { vec4 v = texture2D(unit_in,tc); gl_FragColor = do_something(); }
