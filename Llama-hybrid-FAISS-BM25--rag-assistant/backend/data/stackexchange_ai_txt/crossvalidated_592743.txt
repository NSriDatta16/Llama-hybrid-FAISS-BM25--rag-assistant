[site]: crossvalidated
[post_id]: 592743
[parent_id]: 592731
[tags]: 
See the documentation for the effects package. In particular, see section 3.1.3 of the Predictor Effects Gallery vignette , which states the following: 3.1.3 y: Vertical Axis Specification for Generalized Linear Models Transforming the vertical axis for generalized linear models also uses the y sub-argument to the axes argument. You typically do not need to specify the transform sub-argument because plot() obtains the right functions from the regression model’s family component. The type sub-argument has the same three possible values as for linear models, but their interpretation is somewhat different: Predictor effect plots in type="link" scale have a predictor on the horizontal axis and the vertical axis is in the scale of the linear predictor. For logistic regression, for example, the vertical axis is in log-odds (logit) scale. For Poisson regression with the log-link, the vertical axis is in log-mean (log-count) scale. Predictor effect plots in type="response" or mean scale are obtained by "untransforming" the y axis using the inverse of the link function. For the log-link, this corresponds to transforming the y axis and plotting $\exp(y)$ . For logistic regression, $y = \log[p/(1 − p)]$ and, solving for $p$ , $p = \exp(y)/[1 + \exp(y)] = 1/[1 + \exp(−y)]$ , so the plot in mean scale uses $1/[1 + \exp(−y)]$ on the vertical axis. We also provide a third option, type="rescale" , which plots in linear predictor (e.g., logit) scale, but labels the tick marks on the vertical axis in mean (e.g., probability) scale. This third option, which retains the linear structure of the model but labels the vertical axis on the usually more familiar mean scale, is the default. So, the y-axis of your plot is probabilities, but spaced so that the logits are equally spaced. This is equivalent to putting the logits (i.e., the linear predictor) on the y-axis and then converting the logits to probabilities. Consider, for example, $\text{logit}(p_1)=-1$ , $\text{logit}(p_2)=-2$ , and $\text{logit}(p_3)=-3$ . These are evenly spaced on the logit scale, but on the probability scale, $p_1 = .27$ , $p_2 = .12$ , and $p_3 = .05$ , which are clearly not evenly spaced. So, making the y-axis correspond to the logit but labeling it with the corresponding probability creates the effect of differently spaced axis labels for equal probability intervals. All of your probabilities are greater than 0; in your first plot, the predicted probability for 0 is far below .01 (but still greater than 0). The labeling of the axis doesn't allow you to easily see exactly what that probability is. If you want the y-axis to have equally spaced ticks on the probability scale, you can set type = "response" as described in the text, e.g., plot(., axes = list(y = list(type = "response"))) . This will make the plots for continuous predictors have a nonlinear (S) shape, but this is likely a more useful plot if you are concerned about probabilities.
