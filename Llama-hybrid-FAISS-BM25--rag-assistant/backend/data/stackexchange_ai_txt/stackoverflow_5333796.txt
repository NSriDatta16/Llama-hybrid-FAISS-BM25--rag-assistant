[site]: stackoverflow
[post_id]: 5333796
[parent_id]: 
[tags]: 
iPhone Accessible Object Storage

I am currently writing a multi-user social iPhone app which interfaces with a server. I have a User class, which stores all the general data about each user (name, id, etc etc). However, where I am tripping up is how best to store these users. Currently, I have a Singleton called "UserManager", which stores an array of each user in the application (downloaded from the server - on initial launch you are prompted to input some basic details), as well as a separate user object to differentiate the actual current user of the app. The user list needs to be accessed from many different parts of the app, including a map which shows where they are (if they choose to reveal it), to a list of other users to enable sending messages to them, etc. To be completely honest, the Singleton solution doesn't sit right with me. I have always heard to avoid Singletons wherever possible, however I'm drawing blanks on what is better to use. I only have a fairly basic understanding of Design Patterns, though obviously I know that shoehorning a pattern when its not required is a horrible idea. So I returned here to ask you good people in what manner you would store this kind of data! I don't necessarily mean iPhone only either, this is a wider problem. I fail to understand properly how I should do this kind of thing in any situation. Thanks in advance!
