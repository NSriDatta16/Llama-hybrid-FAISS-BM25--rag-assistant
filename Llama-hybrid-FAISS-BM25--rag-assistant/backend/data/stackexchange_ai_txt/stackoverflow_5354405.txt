[site]: stackoverflow
[post_id]: 5354405
[parent_id]: 5352638
[tags]: 
The Magento class autoloader is not made for multiple overrides of one class because that concept actually wouldn't make any sense. There would be no way to enforce that the second override respects the first one, and so they did not implement it at all. Additionally, you cannot usually rely on having two separate modules installed (outside of the core modules), so your ability to accommodate other overrides would be fragile at best anyway. If you want to accomplish this, look first to Magento's event delegation system. Many listeners can operate on one event, so this may be a natural case for you. Additionally, as someone else pointed out in a question recently, you could create two subclasses of the same class and use each of those rather than the original. This will not allow you to modify existing system behavior, but if you simply need extensions to the core classes it may be sufficient. In this case, you would be calling those classes directly (as in Mage::getClass("mymodule/extended_customer"); . Hope that sheds a little light on the situation. Thanks, Joseph Mastey
