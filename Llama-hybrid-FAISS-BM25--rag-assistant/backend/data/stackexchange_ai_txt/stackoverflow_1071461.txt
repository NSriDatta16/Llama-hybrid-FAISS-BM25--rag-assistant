[site]: stackoverflow
[post_id]: 1071461
[parent_id]: 1071119
[tags]: 
As Richard Corden points out, this issue was addressed in the C++ Standard Core Language Defect Reports after the 2003 standard was ratified: How do the keywords typename/template interact with using-declarations? Proposed resolution (April 2003, revised October 2003): Add a new paragraph to the bottom of 7.3.3 [namespace.udecl]: If a using-declaration uses the keyword typename and specifies a dependent name (14.7.2 [temp.dep]), the name introduced by the using-declaration is treated as a typedef-name (7.1.3 [dcl.typedef]). This text doesn't seem to appear in the Second Edition standard from October 15, 2003. GCC does not yet implement this resolution, as explained in bug 14258 : ------- Comment #3 From Giovanni Bajo 2004-02-27 12:47 [reply] ------- The problem is that our USING_DECL doesn't record the "typename", that is the fact that it is a type which is imported through it. This used to work thanks to the implicit type name extension, I believe. Duplicate bug 21484 indicates that 'using typename' works on Comeau and Intel compilers. Because MSVC treats all names as dependent, the construct is unnecessary (but permitted) for that compiler. Fixed in GCC 4.7 on Dec 13 2011!
