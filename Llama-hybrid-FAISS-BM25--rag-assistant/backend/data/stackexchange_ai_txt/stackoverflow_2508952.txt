[site]: stackoverflow
[post_id]: 2508952
[parent_id]: 2506550
[tags]: 
PÃ©ter's was the approach I took on a large project; during our pilot and initial rollout, each of our thousands of mobile devices were sending back timing and usage data, and we used the average, median, and standard-deviations of the time taken to fine-tune the configuration of our tasks (when the task was allowed to run, how long it was allowed to run, what values were used in the progress-bar display, etc). Since our solution was built a bit like yours but driven by values supplied in an XML config file, we thought about building this as an automated system (e.g., the server would check these values on some interval, notice certain tasks were taking longer in recent days than they used to and update the config file to reschedule or lengthen them), but figured it wasn't worth the hassle just to prevent a quick human review every few weeks. Since I don't know of a technical solution to your problem, I think what you show to the user (and how much time you spend developing a solution) should be based on functional concerns: who is using this? how accurate does the info need to be? Is this an interactive process during which they can do no other work, or can they let it run in the background and come back to it? Is the work process during which your long-running function occurs a time-sensitive or mission-critical one? I'm sorry that I can't actually give you the answer you're looking for, but perhaps thinking about what you're trying to achieve in broad strokes knocks loose a good idea. = )
