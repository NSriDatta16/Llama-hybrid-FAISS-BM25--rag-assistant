[site]: stackoverflow
[post_id]: 485709
[parent_id]: 485649
[tags]: 
Yes those "seconds" values are aren't per call. The percentage time is for the entire run of the program. In effect your program spent 31% of it's time in that function (due to number of calls + time taken per call). You might want to read up on how to analyze gprof's flat profiles. Correction: Sorry, those first two seconds values are cumulative as pointed out by the OP. I think that it's odd that you're seeing 0 for "self" and "total s/call". Quoting the section on gprof accuracy : "The actual amount of error is usually more than one sampling period. In fact, if a value is n times the sampling period, the expected error in it is the square-root of n sampling periods. If the sampling period is 0.01 seconds and foo's run-time is 1 second, the expected error in foo's run-time is 0.1 seconds. It is likely to vary this much on the average from one profiling run to the next. (Sometimes it will vary more.)" Also, possibly related, it might be worth noting that gprof doesn't profile multithreaded programs. You're better off using something like Sysprof or OProfile in such cases.
