[site]: stackoverflow
[post_id]: 2099100
[parent_id]: 2098387
[tags]: 
Are you going to allow more than one instance with your draggable objects? then use the helper and append option: $(".tag_cell").draggable({ helper: 'clone', appendTo: 'div#myHelperHolder' }); Then in your css you can set the zindex of div#myHelperHolder to be 999. If not, then try just using the zindex option: $(".tag_cell").draggable({ zIndex: 999 }); I would also consider setting addClasses to stop the plugin from adding all those annoying classes that waste processor speed. UPDATE: I HAVE A NEW SOLUTION Okay after playing with it for a bit I came up with this: the scroll option doesn't stop the child from being hidden with overflow. I've read some other posts and I cant find a single solution. But I came up with a bit of a work-a-round that gets the job done. google.load("jquery", "1.4.0"); google.load("jqueryui", "1.7.2"); google.setOnLoadCallback(OnLoad); function OnLoad(){ var dropped = false; $(".tag_cell").draggable({ addClasses: false, revert: 'invalid', containment: '#tagFun_div_main', helper: 'clone', appendTo: '#tagFun_div_helper', start: function(event, ui) { dropped = false; $(this).addClass("hide"); }, stop: function(event, ui) { if (dropped==true) { $(this).remove(); } else { $(this).removeClass("hide"); } } }); $("#tf_dropBox").droppable({ accept: '.tag_cell', hoverClass: 'tf_dropBox_hover', activeClass: 'tf_dropBox_active', drop: function(event, ui) { dropped = true; $.ui.ddmanager.current.cancelHelperRemoval = true; ui.helper.appendTo(this); } }); } div#tagFun_div_main { display:block; width:800px; height:400px; margin:auto; padding:10px; background:#F00; } div#tf_div_tagsReturn { display:block; width:200px; height:100%; float:left; overflow:auto; background:#000; } div#tf_div_tagsDrop { display:block; width:200px; height:100%; float:right; background:#0F0; } div#tf_dropBox { display:block; width:100%; height:250px; background:#F0F; } span.tag_cell { display:block; width:25px; height:25px; margin:1px; float:left; cursor:pointer; background:#0FF; z-index:99; } span.tag_cell.hide { display:none; } div#tf_dropBox.tf_dropBox_hover { background:#FFF !important; } div#tf_dropBox.tf_dropBox_active { background:#333; } I pasted my entire code so you can try it out. Here is a brief description: When you start to drag an item it hides the original, clones it, then appends the clone to a container outside the overflow area. Once dropped it removes the original and moves the clone into the drop zone. Great so now we have fixed that overflow issue but run into some others. When you drop the clone item into the drop zone it disappears. To stop that from happening I used this method: $.ui.ddmanager.current.cancelHelperRemoval = true; Now we have stopped the helper from being removed but it remains in "div#tagFun_div_helper" while the original draggable item has reappeared. ui.helper.appendTo(this); This will transfer the helper from "div#tagFun_div_helper" into our drop zone. dropped = true; This will tell our stop function to delete the original item from the group instead of removing the ".hide" class. Hope that helps!
