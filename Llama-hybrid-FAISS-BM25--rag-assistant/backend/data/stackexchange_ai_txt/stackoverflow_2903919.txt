[site]: stackoverflow
[post_id]: 2903919
[parent_id]: 
[tags]: 
How can I persist a large Perl object for re-use between runs?

I've got a large XML file, which takes over 40 seconds to parse with XML::Simple . I'd like to be able to cache the resulting parsed object so that on the next run I can just retrieve the parsed object and not reparse the whole file. I've looked at using Data::Dumper but the documentation is a bit lacking on how to store and retrieve its output from disk files. Other classes I've looked at (e.g. Cache::Cache appear designed for storage of many small objects, not a single large one. Can anyone recommend a module designed for this? EDIT . The XML file is ftp://ftp.rfc-editor.org/in-notes/rfc-index.xml , and I went with Storable for speeding up subsequent runs. Changing the XML parser would have required very significant code changes. On my Mac Pro benchmark figures for reading the entire file with XML::Simple vs Storable are: s/iter test1 test2 test1 47.8 -- -100% test2 0.148 32185% --
