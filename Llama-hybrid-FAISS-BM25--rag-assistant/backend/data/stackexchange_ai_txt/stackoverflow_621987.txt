[site]: stackoverflow
[post_id]: 621987
[parent_id]: 621976
[tags]: 
All of these can be used. There are subtle differences between the three: gzencode() uses the GZIP file format, the same as the gzip command line tool. This file format has a header containing optional metadata, DEFLATE compressed data, and footer containing a CRC32 checksum and length check. gzcompress() uses the ZLIB format. It has a shorter header serving only to identify the compression format, DEFLATE compressed data, and a footer containing an ADLER32 checksum. gzdeflate() uses the raw DEFLATE algorithm on its own, which is the basis for both of the other formats. All three use the same algorithm under the hood, so they won't differ in speed or efficiency. gzencode() and gzcompress() both add a checksum, so the integrity of the archive can be verified, which can be useful over unreliable transmission and storage methods. If everything is stored locally and you don't need any additional metadata then gzdeflate() would suffice. For portability I'd recommend gzencode() (GZIP format) which is probably better supported than gzcompress() (ZLIB format) among other tools. When compressing very short strings the overhead of each method becomes relevant since for very short input the overhead can comprise a significant part of the output. The overhead for each method, measured by compressing an empty string, is: gzencode('') - 20 bytes gzcompress('') - 8 bytes gzdeflate('') - 2 bytes
