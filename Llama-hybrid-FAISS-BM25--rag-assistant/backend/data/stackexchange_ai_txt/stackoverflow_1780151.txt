[site]: stackoverflow
[post_id]: 1780151
[parent_id]: 1569132
[tags]: 
Especially considering the context - Python unit tests are very easy to write and require very little understanding - I'd say go for it and blanket your understanding and explorations with tests. After you have been doing this for a while, include a review stage where you go back and read your earlier tests and see how you would have rewritten them with your current understanding. That's what comments are for - write questions and review notes to yourself in the docstrings inside each test definition. With such an incremental approach, using version control will help with reviewing and I recommend it highly, in particular because you will be able to see a history of your changes from the version control logs and thus more self-encouragement with your visible progress. I recommend git and using either the built-in gitgui or GitX on Macinosh. As a very experienced professional, I predate the unit testing concept but I've certainly used lots of small tests as a way to learn new libraries and languages.
