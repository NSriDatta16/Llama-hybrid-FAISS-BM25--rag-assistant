[site]: stackoverflow
[post_id]: 1564044
[parent_id]: 1563148
[tags]: 
Using CTE (SQL Server 2005+): WITH max_feature AS ( SELECT c.id, c.parent, MAX(c.feature) 'feature' FROM CHILD c GROUP BY c.id, c.parent) SELECT p.id, p.text, mf.id, mf.parent, mf.feature FROM PARENT p LEFT JOIN max_feature mf ON mf.parent = p.id Non CTE equivalent: SELECT p.id, p.text, mf.id, mf.parent, mf.feature FROM PARENT p LEFT JOIN (SELECT c.id, c.parent, MAX(c.feature) 'feature' FROM CHILD c GROUP BY c.id, c.parent) mf ON mf.parent = p.id Your question lacks details for handling tie breakers (when 2+ CHILD.id values have the same feature value). Agent_9191's answer uses TOP 1 , but that will take the first that is returned & not necessarily the one you want.
