[site]: stackoverflow
[post_id]: 3986255
[parent_id]: 3986090
[tags]: 
OK, so you don't need modal dialog, you need a mechanism for your user not to be able to select your main form while processing is enabled. Modal dialog doesn't mean that execution is stopped - it just happens somewhere else. There are several methods to do this, and you ruled out new thread creation (don't know why, it would solve it elegantly). If don't use thread, you'll have another problem - your processing should be done in CHUNKS and every little while you'll have to do something like Application.DoEvents() to enable your application to process messages and not be frozen to the user. So, if you can create a method in the main form that shows your 'please wait' dialog which will perform some work and later do some more until is finished, you can do this: create a new form (wait dialog) start a timer inside of it and wire timer to the PARENT form timer interval should be 1 ShowDialog() the form on timer event do small amount of work (don't allow it to go more then 1/10 of seconds) Can you do that? Anyway: task can't be split into small workable pieces you can't use threads you want your UI to be responsive PICK 2. You can't have all 3 in Winforms.
