[site]: stackoverflow
[post_id]: 5301815
[parent_id]: 5293367
[tags]: 
I tackled an identical issue in one of my apps. The approach I took was to first structure my core data model so that the pieces of data had enough granularity so that I could construct different views as required. In other words, instead of one property for "name", I have three properties. One for "first name", one for "middle name", and a third for "last name". I also created a separate "data layer" object so that I could easily get to pieces of my data from anywhere in the app. Next, to construct my view that shows data in a sort of form view. Using Interface Builder, I simply laid out a view using primarily UILabel view objects as placeholders. Then, as the user switches between person views, I call on the data layer object for pieces of data and just "fill in" in the UILabel placeholders. I also render a PDF file in paragraph form. Similar to what you are doing. For that, I use an NSMutableString along with the NSString stringWithFormat convenience method. Using NSMutableString, you can concatenate strings with newline characters embedded as needed. For this, I also call on my data layer object for the pieces of data. [[NSString stringWithFormat:@"Date of Visit: %@", dateOfVisitString] drawInRect:stringRect withFont:theFont]; Hope this helps. Good Luck.
