[site]: stackoverflow
[post_id]: 5255168
[parent_id]: 5254021
[tags]: 
Using samplebias 's swapcase idea, and Ned Batchelder's human-sort code , you might do it this way: import re def human_keys(astr): ''' alist.sort(key=human_keys) sorts in human order ''' keys=[] for elt in re.split('(\d+)', astr): elt=elt.swapcase() try: elt=int(elt) except ValueError: pass keys.append(elt) return keys x=''' 1 1a 1a2 2 3 9 9.9 9.10 9a2 10 10a 11 100 100ab ab aB AB '''.split() print(x) assert x == sorted(x,key=human_keys) You could apply human_keys in __lt__ like this: def __lt__(self, otherItem): column = self.treeWidget().sortColumn() orig = str(self.text(column).toLower()).rjust(20, "0") other = str(otherItem.text(column).toLower()).rjust(20, "0") return human_keys(orig)
