[site]: stackoverflow
[post_id]: 4414664
[parent_id]: 
[tags]: 
Python Algorithm Efficiency

Say you have 32000 records with 89 bytes/record stored in a TSV file. You stick this into a Python dictionary or Ruby hash and you index with a 9 byte key that is itself a field in each record. In other words, you have a dictionary with 32000 key-value pairs, where each key is 9 bytes and each value is 89 bytes. On a modern computer such as a 2.4Ghz Macbook Pro, what's a rough estimation of average time it takes to retrieve a record, and what's the worst-case in theta-notation? Is the implementation in Ruby slower than in Python?
