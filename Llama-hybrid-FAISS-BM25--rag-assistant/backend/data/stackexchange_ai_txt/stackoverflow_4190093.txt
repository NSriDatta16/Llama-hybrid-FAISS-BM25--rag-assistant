[site]: stackoverflow
[post_id]: 4190093
[parent_id]: 
[tags]: 
Possible to switch a large PHP backend from HTTP Auth to a session-based system?

I'm working to add a better authentication system to a mature backend site. I've been using HTTP Authentication just because it's so easy to setup. But as the site has grown, the downsides to this method have become more and more pronounced; specifically, the lack of security over standard HTTP connections, and the lack of a standard mechanism to log users out. I've read over every PHP authentication question I can find on SO, but I still haven't found a satisfactory solution for upgrading a large existing codebase to use a session-based system. The takeaway from most answers seems to be: Don't roll your own if you don't know exactly what you're doing Session-based authentication is a really involved subject I have rolled my own user registration system before, and indeed, it seems woefully insecure looking at it now. I can see it taking months to polish, when all I really want to be doing is working on the backend itself. I imagine this is a very common problem. Pretty much every website I've built has required at least a very minimal backend, and I think very few developers have the chops ("expertise") to build an airtight system. I've looked at solutions using Zend Framework, CodeIgniter, and CakePHP — but they all presume a specific coding style (or so it seems), and the prospect of reorganizing all of my code is, in a word, deflating. (And beyond that, the inefficiency of including one of these massive frameworks just for authentication really rubs me the wrong way.) Is there a better solution? Can I isolate the authentication class from one of these frameworks? (Because this is just a backend site (closed), I don't need to worry about registration, or CAPTCHAS — or really any of the ancillary features of an authorization system.) Thanks so much for your consideration.
