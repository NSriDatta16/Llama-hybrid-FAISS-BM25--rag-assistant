[site]: stackoverflow
[post_id]: 4973765
[parent_id]: 
[tags]: 
From Wikipedia : A database is an organized collection of data. It is the collection of tables, queries, reports, views and other objects. The data is typically organized to model aspects of reality in a way that supports processes requiring information, such as modelling the availability of rooms in hotels in a way that supports finding a hotel with vacancies. A large proportion of websites and applications rely on databases. They are a crucial component of telecommunications systems, banking systems, video games, and just about any other software system or electronic device that maintains some amount of persistent information. In addition to persistence, database systems provide a number of other properties that make them exceptionally useful and convenient: reliability, efficiency, scalability, concurrency control, data abstraction, and high-level query languages. Databases are so ubiquitous and important that computer science graduates frequently cite their database class as the one most useful to them in their industry or graduate-school careers. 2 The term database should not be confused with Database Management System (DBMS). A DBMS is the system software used to create and manage databases and provide users and applications with access to the database(s). A database is to a DBMS as a document is to a word processor. Database Languages Database languages are special-purpose languages, which do one or more of the following: Data definition language : defines data types and the relationships among them Data manipulation language : performs tasks such as inserting, updating, or deleting data occurrences. The most widely used DML is SQL. Query language : allows searching for information and computing derived information ###ACID In computer science, ACID (Atomicity, Consistency, Isolation, Durability) is a set of properties of database transactions. Atomicity - Atomicity requires that each transaction be "all or nothing": if one part of the transaction fails, then the entire transaction fails, and the database state is left unchanged. An atomic system must guarantee atomicity in each and every situation, including power failures, errors, and crashes. To the outside world, a committed transaction appears (by its effects on the database) to be indivisible ("atomic"), and an aborted transaction does not happen. Consistency - The consistency property ensures that any transaction will bring the database from one valid state to another. Any data written to the database must be valid according to all defined rules, including constraints, cascades, triggers, and any combination thereof. This does not guarantee correctness of the transaction in all ways the application programmer might have wanted (that is the responsibility of application-level code) but merely that any programming errors cannot result in the violation of any defined rules. Isolation - The isolation property ensures that the concurrent execution of transactions results in a system state that would be obtained if transactions were executed serially, i.e., one after the other. Providing isolation is the main goal of concurrency control. Depending on the concurrency control method (i.e., if it uses strict - as opposed to relaxed - serializability), the effects of an incomplete transaction might not even be visible to another transaction. Durability - The durability property ensures that once a transaction has been committed, it will remain so, even in the event of power loss, crashes, or errors. In a relational database, for instance, once a group of SQL statements execute, the results need to be stored permanently (even if the database crashes immediately thereafter). To defend against power loss, transactions (or their effects) must be recorded in a non-volatile memory. A few notable DBMSs: 4d-database - 4D Website mysql - MySQL Website postgresql - PostgreSQL Website oracle - Oracle Database Website sqlite - SQLite Website sqlserver - SQL Server Website sybase - Sybase Database Management Website mongodb - mongoDB Website cassandra - Cassandra Website hbase - HBase Website mariadb - MariaDB Website derby - Apache Derby Website couchdb - Apache CouchDB Website neo4j - Neo4j website informix - IBM Informix hive - Apache Hive Popular Database tools Microsoft SQL Server Management Studio Oracle SQL Developer MySQL Workbench SQuirreL SQL Toad phpMyAdmin Some useful references: Database design Managing a database Tuning of a database Database security Database connections Database normalization Free online database courses: Stanford:Introduction to Databases Coursera:Database Management Essentials Tutorialspoint:Database Tutorials
