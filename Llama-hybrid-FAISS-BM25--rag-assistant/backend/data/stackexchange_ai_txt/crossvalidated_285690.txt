[site]: crossvalidated
[post_id]: 285690
[parent_id]: 
[tags]: 
How to make predictions with the posterior predictive distribution?

In the paper Deep Survival Analysis (Ranganath, 2016), the author specifies a generative model for deep survival analysis. Say $\mathbf{x}$ denotes the set of covariates, $\mathbf{\beta}$ the parameters for the data with some prior $p(\mathbf{\beta})$, $k$ a fixed scalar, and $n$ be the index of an observation. The generative model is defined as \begin{gather*} b \sim \mathcal{N}(0, \sigma_b)\\ a \sim \mathcal{N}(0, \sigma_W)\\ z_n \sim \text{DEF}(\mathbf{W})\\ \mathbf{x}_n \sim p(\cdot | \mathbf{\beta}, z_n)\\ t_n \sim Weibull(log(1+\exp(z_n^Ta+b)),k) \end{gather*} The latent variable $z_i$ comes from a DEF which generates the observed covariates and the time to failure. Given covariates $\mathbf{x}$, the model makes predictions via the posterior predictive distribution: \begin{gather*} p(t|\mathbf{x}) = \displaystyle\int_zp(t|z)p(z|\mathbf{x})dz. \end{gather*} My question now is the following: How can this specific posterior predictive distribution make these predictions computationally? Do you first generate your most probable latent variables $z_n$ given your data $\mathbf{x}$ and do you then try to find the most probable $t$, given your most probable latent variables $z_n$?
