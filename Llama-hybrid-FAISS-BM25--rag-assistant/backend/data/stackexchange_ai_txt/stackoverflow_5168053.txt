[site]: stackoverflow
[post_id]: 5168053
[parent_id]: 5167934
[tags]: 
ReferenceEquals is a function that is used to make sure that two instances of an object are the exact same object, rather than just two objects which have identical values. Documentation can be found here ( http://msdn.microsoft.com/en-us/library/system.object.referenceequals.aspx ). As to the goal of that statement, if this code is executing in a multithreaded context, he could be trying to ensure that no one has messed with head since he did (very dangerous), or worried that someone passed in a value type (dangerous, but better ways to check). EDIT: With the further code posted, it looks like the first thing. He's using ReferenceEquals to try to catch his race conditions when there are multiple threads (if it wasn't multi-threaded, he would not bother with InterlockedExchange). The code seems to be basically trying to perform an operation, and, if someone has changed horses on it in mid stream, simply trying again (while (true)). It'd probably be more elegant to use a critical section or a semaphore to ensure that nobody DOES modify your values, rather than simply hoping you can check if they have. The reason for that is that AFTER the IF, but BEFORE the InterlockedExchange, someone may modify your values, which introduces a bug.
