[site]: stackoverflow
[post_id]: 4565152
[parent_id]: 4563332
[tags]: 
This is something done using adapters. You create one that does its magic, and associated it in a browser file contained in App_Browsers. Here's an example of my experimental App_Browsers/Default.browser And my adapter... using System.Web.UI; using System.Web.UI.Adapters; using System.Web.UI; using System.Web.UI.Adapters; namespace App_Code.Adapters { public class HtmlControlAdapter : ControlAdapter { protected override void Render(HtmlTextWriter writer) { writer.Write(" "); base.Render(writer); writer.Write(" "); } } } My highly advanced adapter with superfragilicious abilities renders a div with inline styles around all controls deriving from HtmlControl (html-tags with runat="server", including ). Your adapter can hook into any event triggered by the control, so this should solve your needs.
