[site]: stackoverflow
[post_id]: 1238416
[parent_id]: 1237963
[tags]: 
Enforced memory alignment is much more common in RISC based architectures such as MIPS. The main thinking for these types of processors, AFAIK, is really a speed issue. RISC methodology was all about having a set of simple and fast instructions ( usually one memory cycle per instruction ). This does not mean necessarily that it has less instructions than a CISC processor, more that it has simpler, faster instructions. Many MIPS processors, although 8 byte addressable would be word aligned ( 32-bits typically but not always) then mask off the appropriate bits. The idea being that this is faster to do an aligned load + bit mask than than trying to do an unaligned load. Typically ( and of course this really depends on chipset ), doing an un-aligned load would generate a bus error so RISC processors would offer an 'unaligned load/store' instruction but this would often be much slower than the corresponding aligned load/store. Of course this still doesn't answer the question as to why they do this i.e what advantage does having memory word aligned give you? I'm no hardware expert and I'm sure someone on here can give a better answer but my two best guesses are: 1. It can be much faster to fetch from the cache when word aligned because many caches are organised into cache-lines ( anything from 8 to 512 bytes ) and as cache memory is typically much more expensive than RAM, you want to make the most of it. 2. It may be much faster to access each memory address as it allows you to read through 'Burst Mode' ( i.e fetching the next sequential address before it's needed ) Note none of the above is strictly impossible with non-aligned stores, I'm guessing ( though I don't know ) that a lot of it comes down to hardware design choices and cost
