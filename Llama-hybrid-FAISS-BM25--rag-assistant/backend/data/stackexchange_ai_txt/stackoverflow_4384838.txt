[site]: stackoverflow
[post_id]: 4384838
[parent_id]: 4380747
[tags]: 
You need to do this: #pragma mark (Woblling animation) CGAffineTransform leftWobble = CGAffineTransformRotate(CGAffineTransformIdentity, RADIANS(-10.0)); CGAffineTransform rightWobble = CGAffineTransformRotate(CGAffineTransformIdentity, RADIANS(10.0)); self.view .transform = leftWobble; // starting point [UIView beginAnimations:@"wobble" context:self.view ]; [UIView setAnimationRepeatAutoreverses:YES]; // important [UIView setAnimationRepeatCount:11]; [UIView setAnimationDuration:1.00]; //[UIView setAnimationTransition:UIViewAnimationTransitionFlipFromRight forView:self.view cache:YES]; [UIView setAnimationDelegate:self]; [UIView setAnimationDidStopSelector:@selector(wobbleEnded:finished:context:)];//should be same as written self.view .transform = rightWobble; // end here & auto-reverse [UIView commitAnimations]; and then implement these methods. They are necessary to keep your view in the same position after rotation. - (void) wobbleEnded:(NSString *)animationID finished:(NSNumber *)finished context:(void *)context { if ([finished boolValue]) { UIView* item = (UIView *)context; item.transform = CGAffineTransformIdentity; } } Use this method if you are using navigation and when you navigate from one view to another, then your view would be at the same place.else leave this method: - (void)viewWillAppear:(BOOL)animated { UIView* item = self.view; item.transform = CGAffineTransformIdentity; } I had the same problem but did some experiments and came up with this solution.
