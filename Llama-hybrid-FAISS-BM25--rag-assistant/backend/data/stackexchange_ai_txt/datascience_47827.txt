[site]: datascience
[post_id]: 47827
[parent_id]: 47825
[tags]: 
I think the biggest problem is with your data. Accuracy only makes sense as a metric if your labels are balanced. Your labels (Result) are very unbalanced. Your most frequent label (Result = 60) appears 27326 times while your least frequent label (Result = 29) appears only 3 times. Your can check this yourself by doing: import pandas as pd data = pd.read_csv('/PATH/TO/FILE.csv', index_col=0) data['Result'].value_counts(ascending=True) or you can plot it: data['Result'].value_counts().plot.bar() So I suggest you start with generating balanced data where all labels are distributed equally. Regarding your questions about neural networks and tensorflow. I would not recommend it to for your problem. The way you tackle multi-class problems with neural networks is by doing something called One vs. All which requires you to train one entire network per class. You have 101 classes and training 101 neural networks is not really practical. I think you should try out a gradient boosting classifier like LightGBM or XGBoost.
