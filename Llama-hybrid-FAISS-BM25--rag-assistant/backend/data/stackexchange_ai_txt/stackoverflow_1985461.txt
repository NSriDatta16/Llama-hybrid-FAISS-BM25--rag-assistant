[site]: stackoverflow
[post_id]: 1985461
[parent_id]: 409259
[tags]: 
Here is how I have achieved this: TextFormCell.h #import #define CellTextFieldWidth 90.0 #define MarginBetweenControls 20.0 @interface TextFormCell : UITableViewCell { UITextField *textField; } @property (nonatomic, retain) UITextField *textField; @end TextFormCell.m #import "TextFormCell.h" @implementation TextFormCell @synthesize textField; - (id)initWithReuseIdentifier:(NSString *)reuseIdentifier { if (self = [super initWithReuseIdentifier:reuseIdentifier]) { // Adding the text field textField = [[UITextField alloc] initWithFrame:CGRectZero]; textField.clearsOnBeginEditing = NO; textField.textAlignment = UITextAlignmentRight; textField.returnKeyType = UIReturnKeyDone; [self.contentView addSubview:textField]; } return self; } - (void)dealloc { [textField release]; [super dealloc]; } #pragma mark - #pragma mark Laying out subviews - (void)layoutSubviews { CGRect rect = CGRectMake(self.contentView.bounds.size.width - 5.0, 12.0, -CellTextFieldWidth, 25.0); [textField setFrame:rect]; CGRect rect2 = CGRectMake(MarginBetweenControls, 12.0, self.contentView.bounds.size.width - CellTextFieldWidth - MarginBetweenControls, 25.0); UILabel *theTextLabel = (UILabel *)[self textLabel]; [theTextLabel setFrame:rect2]; } It may seems a bit verbose, but it works! Don't forget to set the delegate!
