[site]: stackoverflow
[post_id]: 2737179
[parent_id]: 2737125
[tags]: 
Something like the following may work. You will probably need to deal with window's scrollLeft and scrollTop to get it perfect. You will probably want to throttle and memoize (if the drop positions don't change) it too. Also, some more performance can be tweaked out of it by caching offset() , only binding mousemove when needed, and by tweaking the each loop to utilize an optimized loop (e.g. for(var i=droppables.length;i>-1;){var self = droppables.eq(--i);...} ). Also note that this will only change the color of the divs when the MOUSE passes over them...not necessarily when the draggable passes over them...this makes things a little more complicate but the function below should send you in the right direction. $(document).mousemove(function(e){ // this should be throttled... var x = e.pageX, y = e.pageY; // this loop could be optimized... $("div.droppables").each(function(){ // these vars could be memoized... var self = $(this), divL = self.offset().left, divT = self.offset().top, divR = self.width() + divL, divB = self.height() + divT; // if the MOUSE coords are between the droppable's coords // change the background color if(x >= divL && x = divT && y
