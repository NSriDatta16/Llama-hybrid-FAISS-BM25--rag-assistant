[site]: stackoverflow
[post_id]: 3099139
[parent_id]: 3099135
[tags]: 
sortArray[numStudents - 1] is a pointer to int, which can't be on the left side of a division (when you remember pointers are addresses, this makes sense). If you post more of your code, we can help you correct it. Perhaps you want something like: int *MovieData::calcMed() { return sortArray[(numStudents - 1) / 2]; } This returns the middle element in your array, which should be a pointer to the middle student. I'm not clear why you're sorting lists of pointers (not the actual values), or why you're returning a pointer here. The return value + 1 will be a pointer to the next value in students , which is not the next greater value numerically. So you might as well return the actual student (int from students ). If you do this, you can also average the two middle elements when the count is even (this rule is part of the typical median algorithm). Note that I changed the return type to int * , the type of sortArray's elements. Also, your comment is incorrect. This is the median , not the mean . Also, your selection sort is wrong. The inner loop should start at scan + 1 .
