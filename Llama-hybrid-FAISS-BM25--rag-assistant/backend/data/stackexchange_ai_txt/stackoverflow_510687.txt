[site]: stackoverflow
[post_id]: 510687
[parent_id]: 507535
[tags]: 
The layout of items in an ItemsControl is controlled via the ItemsControl.ItemsPanel property which is of type ItemsPanelTemplate. The default value for the ItemsControl.ItemsPanel property is indeed an instance of ItemsPanelTemplate that specifies a StackPanel but this is completely customizable. The code example ( on this MSDN page ) shown below the paragraph that starts "The following example creates an ItemsControl." is very useful in understanding what the ItemsControl.Template, ItemsControl.ItemsPanel and ItemsControl.ItemTemplate properties are for. There are a few ways to achieve what you describe in the second sentence of the first paragraph of your question. Here is a full example: Page.xaml: Country.cs: using System.ComponentModel; using System.Windows; namespace ItemsControlImages { public class Country : INotifyPropertyChanged { private string title; private string flagImage; private Point location; public string Title { get { return this.title; } set { if ((object.ReferenceEquals(this.title, value) != true)) { this.title = value; this.RaisePropertyChanged("Title"); } } } public string FlagImage { get { return this.flagImage; } set { if ((object.ReferenceEquals(this.flagImage, value) != true)) { this.flagImage = value; this.RaisePropertyChanged("FlagImage"); } } } public Point Location { get { return this.location; } set { if ((this.location.Equals(value) != true)) { this.location = value; this.RaisePropertyChanged("Location"); } } } #region INotifyPropertyChanged Members public event PropertyChangedEventHandler PropertyChanged; protected void RaisePropertyChanged(string propertyName) { PropertyChangedEventHandler propertyChanged = this.PropertyChanged; if (propertyChanged != null) { propertyChanged(this, new PropertyChangedEventArgs(propertyName)); } } #endregion } } That's all you need (along with the images in an Images folder) for this end result: alt text http://www.freeimagehosting.net/uploads/bec683b75e.png Note even though the Images are in an ItemsControl they are positioned at the coordinates shown by binding the Left and Top attached properties of their parent Canvas to the value of the X and Y coordinates from the custom Location property. For more information on this sample and customizing the ItemsControl using templates in general you can check out this blog post .
