[site]: stackoverflow
[post_id]: 1033212
[parent_id]: 1032788
[tags]: 
For the first one, here is one way to rewrite it in VB: Dim defaultStyleName = (from style in _ doc.MainDocumentPart.StyleDefinitionsPart.GetXDocument().Root.Elements(w & "style") _ where style.Attribute(w & "type").Value = "paragraph" AndAlso _ style.Attribute(w & "default").Value = "1" _ select style).First().Attribute(w & "styleId").Value But this still isn't all that different from what you'd do in C#. In VB.NET you can also use the @ for Attributes as in style.@AttributeName , which gives you the string value of the attribute, but I'm not sure how that would work with your concatenated attribute names. Also, Elements can be accessed via . syntax, but again, your concatenated names might not work with that. In general, the DirectCast calls that are produced by online conversion tools can be eliminated in VB. For a great introduction to how VB.NET does LINQ to XML, check out the How Do I video series by Beth Massi .
