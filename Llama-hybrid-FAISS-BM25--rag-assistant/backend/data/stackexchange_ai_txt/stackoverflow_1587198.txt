[site]: stackoverflow
[post_id]: 1587198
[parent_id]: 1587185
[tags]: 
When you perform an insert in a row the DB, it will be inserted in order relative to the other PKs in the table. With a normal guid, this could be anywhere in the table. A newsequentialid() will always be added to the end of the table. So the performance of inserts is improved. This site explains the differences and benchmarks between the two different methods. Update - the blog post referenced has been moved. The link now refers to an web.archive.org link. Here is the key takeaway: Most striking is the number of writes required by the NEWID system function. This, coupled with the average page density of 69%, is evidence of the page splitting caused by the random distribution of inserts at the leaf level. As soon as a page fills up, it needs to be split into 2 pages of 50% each for the insert to complete. Not only has page splitting resulted in poor page density, it has fragmented the data pages quite badly (there is a 99% probability that the next data page is not next to the current one). In our tests the most likely place for a free page required for the page split is at the end of the table irrespective of where the row is being inserted. Therefore to read the rows in order the scan needs to keep jumping back and forth between widely distributed split pages, hence the appalling fragmentation. --Stefan Delmarco
