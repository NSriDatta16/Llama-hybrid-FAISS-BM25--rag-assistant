[site]: stackoverflow
[post_id]: 188713
[parent_id]: 188663
[tags]: 
I usually follow the prototype pattern: MyFunction = function(param1, param2) { this.property1 = param1; // etc. } MyFunction.prototype = { memberOne: function(param1) { // ... }, memberTwo: function(param2) { } } You get something a "constructor" (the function itself) and encapsulated "methods" and "fields". It's easier for someone who is used to class-based OO languages :)
