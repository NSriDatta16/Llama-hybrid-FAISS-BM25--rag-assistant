[site]: stackoverflow
[post_id]: 4210131
[parent_id]: 
[tags]: 
PHP: Undefined Offset at 0, but it's there (I think)

So I've got a 2-D array, of phrases and individual words, called $frags , that `var_dump's like so: array(4) { [0]=> array(5) { [0]=> string(3) "the" [1]=> string(4) "term" [2]=> string(4) "'AI'" [3]=> string(5) "still" [4]=> string(7) "manages" } [1]=> array(2) { [0]=> string(2) "to" [1]=> string(5) "creep" } [2]=> array(3) { [0]=> string(4) "into" [1]=> string(2) "my" [2]=> string(6) "speech" } [3]=> array(2) { [0]=> string(2) "or" [1]=> string(8) "writing." } } When I var_dump($frags[0]) it gives me: array(5) { [0]=> string(3) "the" [1]=> string(4) "term" [2]=> string(4) "'AI'" [3]=> string(5) "still" [4]=> string(7) "manages" } But when I try to print $frags[0][0] it gives me: Notice: Undefined offset: 0 in C:\wamp\www\jpsmythe\parser.php on line 57 Notice: Undefined offset: 0 in C:\wamp\www\jpsmythe\parser.php on line 57 string(3) "the" which does not make sense. I feel like I've tried everything, including treating the 0 like a string, but it's still not seeing it. Help? The relevant code: private function clause($frags) { // set the parser through the control hub $controller = Controller::getInstance(); $parser = $controller->parser; $parser->init(); // take the $frags array from elsewhere in the program // this $frags is actually punctuation-separated fragments of a sentence, not the same as the $frags array with which I'm having problems now $i = 0; $clauses = array(); //run through the punctuated $frags array while ($i stopwords)) { $pos[] = $p; $clauses[$num] = array(); $num ++; } $p ++; } $pos[] = count($frags[$i]); $num = 0; $j = 0; if (count($pos) > 0) { while ($j = 0 && !$stop) { if (array_key_exists($frags[$i][$k], $parser->stopwords)) $stop = TRUE; $clauses[$num][] = $frags[$i][$k]; $k --; } $clauses[$num] = array_reverse($clauses[$num]); $num ++; $j ++; } //send the array of stopped fragments to the parser $parser->parse($clauses); //$controller->setResponse($clauses); } $i ++; } } function parse($frags) { $i = 0; // more code here, commented out for the time being // below, send response to control hub for output $controller = Controller::getInstance(); $controller->setResponse($frags[$i][0]); }
