[site]: stackoverflow
[post_id]: 5614649
[parent_id]: 5614549
[tags]: 
Dropping on a treeview is an iffy proposition, the node that the user would want to drop on might not be visible. Either because it is collapsed and hidden or scrolled off the screen. Anyhoo, you want to use the DragOver event and check where the mouse is located. Here's a sample form that does this. Drop a treeview on it and add some nodes. Click on the form and drag. It only allows drops on the 2nd level nodes: public partial class Form1 : Form { public Form1() { InitializeComponent(); treeView1.AllowDrop = true; treeView1.DragEnter += treeView1_DragEnter; treeView1.DragOver += treeView1_DragOver; } protected override void OnMouseDown(MouseEventArgs e) { DoDragDrop("foo", DragDropEffects.Copy); base.OnMouseDown(e); } private void treeView1_DragEnter(object sender, DragEventArgs e) { // TODO: check e.Data e.Effect = DragDropEffects.Copy; } private void treeView1_DragOver(object sender, DragEventArgs e) { Point pos = treeView1.PointToClient(new Point(e.X, e.Y)); var hit = treeView1.HitTest(pos); TreeNode node = hit.Node; if (hit.Node != null) { node.Expand(); if (node.Level != 1) node = null; } e.Effect = node != null ? DragDropEffects.Copy : DragDropEffects.None; } }
