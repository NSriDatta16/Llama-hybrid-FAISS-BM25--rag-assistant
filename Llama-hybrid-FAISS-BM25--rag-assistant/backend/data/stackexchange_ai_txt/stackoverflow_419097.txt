[site]: stackoverflow
[post_id]: 419097
[parent_id]: 419044
[tags]: 
Assuming you're not using a DataGridView or other way of organizing them into logical rows, why don't you do the following: Store the checkboxes in an array so you have easy access to them. CheckBox[,] checkArray = new CheckBox[8,3]... Store the row index in the Tag property of the first and second checkboxes. checkBox01.Tag = 0; checkBox02.Tag = 0; checkBox11.Tag = 1; checkBox12.Tag = 1; Have all the first and second checkboxes point to the same event handler: checkBox01.CheckedChanged += new EventHandler(aCheckBox_CheckedChanged); checkBox02.CheckedChanged += new EventHandler(aCheckBox_CheckedChanged); checkBox11.CheckedChanged += new EventHandler(aCheckBox_CheckedChanged); checkBox12.CheckedChanged += new EventHandler(aCheckBox_CheckedChanged); In the event handler, you now know exactly which check box to update and no longer have to loop: private void aCheckBox_CheckedChanged(object sender, EventArgs e) { int rowIndex = (int)((CheckBox)sender).Tag; checkArray[rowIndex,2].Checked = !(checkArray[rowIndex,0].Checked || checkArray[rowIndex,1].Checked); } You can also do this using string lookups with the checkbox name, but it is surely slower and is a pain to refactor later if you choose to rename the checkboxes.
