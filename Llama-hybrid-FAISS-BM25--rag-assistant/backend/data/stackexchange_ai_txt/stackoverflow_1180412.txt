[site]: stackoverflow
[post_id]: 1180412
[parent_id]: 1173157
[tags]: 
You should not rely on auto-increment on both IDs due to the possibility of two users posting two messages at nearly the same time. If the first script inserts data into the tbl_pm table, then the second script manages to execute both its tbl_pm and tblpm_info inserts before the first script completes its tblpm_info insert, the first script's two database inserts will have different IDs. Aside from that, your database structure doesn't seem well organized for the task at hand. Assuming your messages could be very long, and sent to a very large number of users, it would be ideal to have the message content stored once, and for each recipient have unread status, read time, etc. For example: CREATE TABLE `pm_data` ( `id` smallint(5) unsigned NOT NULL auto_increment, `date_sent` timestamp NOT NULL, `title` varchar(255) `sender_id` smallint(5) unsigned, `parent_message_id` smallint(5) unsigned, `content` text, PRIMARY_KEY (`id`) ); CREATE TABLE `pm_info` ( `id` smallint(5) unsigned NOT NULL auto_increment, `pm_id` smallint(5) unsigned NOT NULL, `recipient_id` smallint(5) unsigned, `read` tinyint(1) unsigned default 0, `read_date` timestamp, PRIMARY_KEY (`id`) ); Create these two tables, and notice both of them have an 'id' value set to auto-increment, but the 'info' table also has a pm_id field that would hold the ID number of the 'data' row that it refers to, such that you're sure each row has a primary key in the 'info' table that you can use to select from. If you want a true relational database setup using MySQL, make sure your engine is set to InnoDB, which allows relationships to be set up between tables, so (for example) if you try to insert something into the 'info' table that refers to a pm_id that doesn't exist in the 'data' table, the INSERT will fail. Once you've chosen a database structure, then your PHP code would look something like:
