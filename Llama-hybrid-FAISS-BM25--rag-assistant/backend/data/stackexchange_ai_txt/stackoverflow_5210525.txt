[site]: stackoverflow
[post_id]: 5210525
[parent_id]: 
[tags]: 
C++ object member integer has ridiculous value (WTF)

This is for a poker game and I have class PokerTable defined in PokerTable.h #include using namespace std; class PokerTable { private: int numPlayers; int numPlaying; int dealerPos; int bigBlind; int potSize; int betSize; bool flop; bool turn; bool river; public: //constructors PokerTable(); PokerTable(int,int,int,int,int,bool,bool,bool); //getters int getNumPlayers(){return numPlayers;}; int getDealerPos(){return dealerPos;}; int getBigBlind(){return bigBlind;}; int getNumPlaying(){return numPlaying;}; int getPotSize(){return potSize;}; int getBetSize(){return betSize;}; bool getFlop(){return flop;}; bool getTurn(){return turn;}; bool getRiver(){return river;}; //void buttonShow(int); //setters void setBetSize(int inBetSize){betSize = inBetSize;}; void setBigBlind(int inBigBlind){bigBlind = inBigBlind;}; void setNumPlaying(int inNumPlaying){numPlaying = inNumPlaying;}; void setPotSize(int inPotSize){potSize = inPotSize;}; void setFlop(bool inFlop){flop = inFlop;}; void setTurn(bool inTurn){turn = inTurn;}; void setRiver(bool inRiver){river = inRiver;}; void setNumPlayers(int inPlayers){numPlayers = inPlayers;}; void setDealerPos(int inDealerPos){dealerPos = inDealerPos;}; }; PokerTable::PokerTable() { numPlayers = 9; numPlaying = 9; dealerPos = 1; bigBlind = 20; flop = false; turn = false; river = false; } PokerTable::PokerTable(int playerNum, int playingCount, int posDealer, int blindBig,int inPotSize, bool inFlop,bool inTurn,bool inRiver) { numPlayers = playerNum; numPlaying = playingCount; dealerPos = posDealer; potSize = inPotSize; bigBlind = blindBig; flop = inFlop; turn = inTurn; river = inRiver; } In my watch list pokerTable.numPlayers has a random value up to 4 million before I even execute this next line of code. PokerTable aPokerTable(9,9,1,20,30,false,false,false); and afterwards here is pokerTable in my watch list: - aPokerTable { numPlayers=2990892 numPlaying=9 dealerPos=9 ...} PokerTable betSize 30 int bigBlind 1 int dealerPos 9 int flop false bool numPlayers 2990892 int numPlaying 9 int potSize 20 int river false bool turn false bool Can anyone tell me why all the values are not what I declared them to be??!?!! And how I can fix this? This is Form1.h #pragma once #include "PokerTable.h" #include "Card.h" #include #include "PokerPlayer.h" #include #include #include //global variables //TODO make players start from 0 int firstPlayer; int deck[52]; int nextCard=0; PokerTable aPokerTable(9,9,1,20,30,false,false,false); PokerPlayer players[9]; //however many players ofstream gameLog; /* void setTable() { aPokerTable.setNumPlayers(9); aPokerTable.setNumPlaying(9); aPokerTable.setDealerPos(1); aPokerTable.setBigBlind(20); aPokerTable.setPotSize(30); aPokerTable.setBetSize(20); aPokerTable.setFlop(false); aPokerTable.setTurn(false); aPokerTable.setRiver(false); } */ string convertInt(int number) //convert to string { stringstream ss;//create a stringstream ss aPokerTable.getBetSize()) { aPokerTable.setBetSize(action); aPokerTable.setPotSize(aPokerTable.getPotSize() + action); playerTurn = playerTurn - aPokerTable.getNumPlayers(); } else if (action == aPokerTable.getBetSize()) //call { aPokerTable.setPotSize(aPokerTable.getPotSize() + action); } else //action =1; i--) { random_integer = rand()%(i); //a random number between 0 and i tempCard = deck[i]; deck[i] = deck[random_integer]; //put the random card from unshuffled deck into slot i of the deck deck[random_integer] = tempCard; //put whatever was at slot i into the random slot } } void dealCards() { for(int j=1;j =2) { //showDown(); } } /* void showDown() { } */ This is pokerPlayer.h using namespace std; class PokerPlayer { private: int chipStack,position; bool fold; int card1,card2; public: //constructors PokerPlayer(); PokerPlayer(int,int,bool,int,int); //getters int getChipStack() {return chipStack;} int getPosition() {return position;} int getCard1(){return card1;} int getCard2(){return card2;} bool getFold(){return fold;} //setters void setChipStack(int inChips){chipStack = inChips;} void setPosition(int inPos){position = inPos;} void setCard1(int inCard1){card1 = inCard1;} void setCard2(int inCard2){card2 = inCard2;} void setFold(bool inFold){fold = inFold;} int action(); }; PokerPlayer::PokerPlayer() { chipStack = 1000; position = 0; fold=false; card1 = 0; card2 = 1; } PokerPlayer::PokerPlayer(int inChipStack,int inPos, bool inFold, int inCard1, int inCard2) { chipStack = inChipStack; position = inPos; fold = inFold; card1 = inCard1; card2 = inCard2; } int PokerPlayer::action() { return 0; }
