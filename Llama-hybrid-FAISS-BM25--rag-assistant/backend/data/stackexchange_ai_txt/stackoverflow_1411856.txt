[site]: stackoverflow
[post_id]: 1411856
[parent_id]: 1411713
[tags]: 
I'm a novice when it comes to Bash-fu, but I was able to concoct this two-command monstrosity. I'm sure there are more elegant solutions. $> tail -n +2 file.txt | split -l 4 $> for file in `ls xa*`; do echo "`head -1 file.txt`" > tmp; cat $file >> tmp; mv -f tmp $file; done This is assuming your input file is file.txt , you're not using the prefix argument to split , and you're working in a directory that doesn't have any other files that start with split 's default xa* output format. Also, replace the '4' with your desired split line size.
