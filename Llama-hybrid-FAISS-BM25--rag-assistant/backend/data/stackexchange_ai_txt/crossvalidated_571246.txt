[site]: crossvalidated
[post_id]: 571246
[parent_id]: 470473
[tags]: 
In case it may be useful for those who still check this old question, here are some additional thoughts, especially to your second question: Is there an accepted method or r-package that is used for determining the optimal number of changepoints in a given a time series? First, a similar question was asked here at How to determine correct changepoints from Posterior Probabilities (bcp R package)? . As some background information, in Bayesian inference, the number of changepoints ( ncp ) is not an unknown constant but a random variable by itself, so the Bayesian result will give a posterior distribution of ncp. There is no concept like optimal number of changepoints unless we further introduce a utility function to optimize. Instead, a reasonable thing to do is to just get some statistics (e.g., mean, mode, median, and percentiles) from the distribution of ncp, just as typically done for any probability distributions. As I recall, bcp doesn't dump the distribution of ncp (I may be wrong). A package I developed called Rbeast (available at https://github.com/zhaokg/Rbeast ) dumps the distribution of ncp, as illustrated below for your data. Y = c(7L, 6L, 4L, 4L, 4L, 2L, 5L, 4L, 4L, 4L, 6L, 7L, 8L, 6L, 10L, 7L, 9L, 5L, 1L, 4L, 5L, 5L, 2L, 2L, 5L, 1L, 2L, 4L, 0L, 3L, 6L, 3L, 6L, 1L, 5L, 3L, 4L, 0L, 2L, 4L) library(Rbeast) # Rbeast does time series decompositon and changepoint detection at the same time. # Y doesn't have any periodic/seasonal variation, so set season='none' # By default, beast fits a linear sloped model (y=ax+b) for each segment o = beast(Y, season='none') # your bcp code fits a constant or flat line to each segment; this can be done # in Rbeast by setting the min and max order of the polynomial segment to c(0,0). o = beast(Y, season='none', torder.minmax=c(0,0)) print(o) plot(o) Shown below are the posterior distribution of ncp and a summary of several common statistics derived from it. In Rbeast , I used the median (ncp_median) as the default 'optimal` number of changepoints when plotting in the function plot(). ##################################################################### # Trend Changepoints # ##################################################################### .-------------------------------------------------------------------. | Ascii plot of probability distribution for number of chgpts (ncp) | .-------------------------------------------------------------------. |Pr(ncp = 0 )=0.035|***** | |Pr(ncp = 1 )=0.174|********************** | |Pr(ncp = 2 )=0.378|*********************************************** | |Pr(ncp = 3 )=0.276|*********************************** | |Pr(ncp = 4 )=0.107|************** | |Pr(ncp = 5 )=0.026|**** | |Pr(ncp = 6 )=0.004|* | |Pr(ncp = 7 )=0.000|* | |Pr(ncp = 8 )=0.000|* | |Pr(ncp = 9 )=0.000|* | .-------------------------------------------------------------------. | Summary for number of Trend ChangePoints (tcp) | .-------------------------------------------------------------------. |ncp_max = 9 | MaxTrendKnotNum: A parameter you set | |ncp_mode = 2 | Pr(ncp= 2)=0.38: There is a 37.8% probability | | | that the trend component has 2 changepoint(s).| |ncp_mean = 2.34 | Sum{ncp*Pr(ncp)} for ncp = 0,...,9 | |ncp_pct10 = 1.00 | 10% percentile for number of changepoints | |ncp_median = 2.00 | 50% percentile: Median number of changepoints | |ncp_pct90 = 4.00 | 90% percentile for number of changepoints | .-------------------------------------------------------------------. | List of probable trend changepoints ranked by probability of | | occurrence: Please combine the ncp reported above to determine | | which changepoints below are practically meaningful | '-------------------------------------------------------------------' |tcp# |time (cp) |prob(cpPr) | |------------------|---------------------------|--------------------| |1 |18.000000 |0.72929 | |2 |11.000000 |0.53813 | |3 |23.000000 |0.17671 | |4 |31.000000 |0.13967 | |5 |34.000000 |0.13675 | |6 |6.000000 |0.10292 | .-------------------------------------------------------------------. Additional comments on your original question: I just want to re-iterate the excellent points made by Thomas Lumley. There is no set standard/threshold for determining the presence/absence of changepoints. In the application fields I am familiar with, the choice of the thresholds is problem-specific and, in many cases, inspired by domain expert knowledge. Regardless, one important clarification is: A higher peak indicates a higher chance of being a changepoint only at that particular SINGLE point in time (suppose your data is a time series) and does not necessarily mean a higher chance of observing a changepoint AROUND that time. For example, a window of posterior changepoint occurrence probability values c(0,0,0.5,0,0) (i.e., the peak prob is 0.5 and the summed prob is 0.5) is less likely to be a changepoint compared to another window c(0.1,0.2,0.21,0.2,0.1) (i.e., the peak prob is 0.21 but the summed prob is 0.71). That is, it is not reliable to check only the peak value; rather, a more reasonable metric is to look around the neighbors around the peak and use the summed prob.
