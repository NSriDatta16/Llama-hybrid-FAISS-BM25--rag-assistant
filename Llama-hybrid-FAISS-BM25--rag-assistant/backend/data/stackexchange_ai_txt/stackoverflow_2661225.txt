[site]: stackoverflow
[post_id]: 2661225
[parent_id]: 2659282
[tags]: 
If you submit a form using POST and you use the browser back button to go back to this page, then you're dependent on the HTTP response caching settings, the browser cache settings and the browser default behaviour whether it will respawn the input values or not. Most will respawn the values by default, but you don't want to be dependent on the client behaviour. If caching is disabled, then for example IE will still respawn the values, but FF won't. Also, if caching is forcibly disabled from the server side on, then the client may face an intrusive and browser-specific "Are you sure to resend the data?" confirmation dialogue. Your best bet is to store the submitted data in the session scope and provide a Back button in the form yourself next to the Submit or Next button. This way it's more intuitive for the enduser to navigate back. You can make use of HttpSession#setAttribute() to store the submitted data in the session scope before forwarding the request to the next page: HttpSession session = request.getSession(); session.setAttribute("data", data); In the subsequent pages you can of course get it back by HttpSession#getAttribute() , so that you can add/modify the new values of the next steps. Data data = (Data) session.setAttribute("data"); In the pages you can use EL the usual way to redisplay the submitted data in the value attribute of the input fields: Providing a Back button yourself however does not prevent the user from clicking the browser's own back button or pressing Backspace anyway. You can't do much against this. Your best bet is to strictly disable page caching so that the client will get the "Are you sure to resend the data?" warning. You can forcibly disable the client side caching from the server side on by adding the following headers to the response of the page in question: response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate"); // HTTP 1.1. response.setHeader("Pragma", "no-cache"); // HTTP 1.0. response.setDateHeader("Expires", 0); // Proxies.
