[site]: stackoverflow
[post_id]: 3748535
[parent_id]: 3748512
[tags]: 
I don't see the issue with using the navigator.userAgent to determine if you need to cater for Webkit / Gecko CSS3 prefixes. Or better yet, just stick with CSS2 until CSS3 becomes a W3C Recommendation. The reason use of the navigator object is discouraged is because it was used over Object detection when (java)scripting for different browsers, your situation is one where it is fine to use user agent detection, because your'e specifically targeting certain quirks with different rendering engines. Edit: Picking up from where cy left off, you can use javascript object detection to detect whether a prefix is used, I made some quick code to do so: window.onload = function () { CSS3 = { supported: false, prefix: "" }; if (typeof(document.body.style.borderRadius) != 'undefined') { CSS3.supported = true; CSS3.prefix = ""; } else if (typeof(document.body.style.MozBorderRadius) != 'undefined') { CSS3.supported = true; CSS3.prefix = "-moz-"; } else if (typeof(document.body.style.webkitBorderRadius) != 'undefined') { CSS3.supported = true; CSS3.prefix = "-webkit-"; } if (CSS3.supported) if (CSS3.prefix == "") alert("CSS3 is supported in this browser with no prefix required."); else alert("CSS3 is supported in this browser with the prefix: '"+CSS3.prefix+"'."); else alert("CSS3 is NOT supported in this browser."); }; Remember to watch out for strange quirks such as -moz-opacity which is only supported in older versions of Firefox but has now been deprecated in favour of opacity , while it still uses the -moz- prefix for other new CSS3 styles.
