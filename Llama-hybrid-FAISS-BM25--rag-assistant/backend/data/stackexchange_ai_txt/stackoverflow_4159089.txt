[site]: stackoverflow
[post_id]: 4159089
[parent_id]: 4159023
[tags]: 
When a long process is running, if it's running on the UI thread, that causes the application to not respond to other UI events, most notably drawing the screen. In both Windows XP and Windows 7, this will cause application to be reported as "not responding", but XP and Windows 7 handle window painting differently. In XP, the application actually updates the screen, but in windows 7, the OS saves what the current screen looks like, then displays that on the screen using a different mechanism (for example, with Aero enabled, it actually displays the contents of the windows using textures in pseudo-3D). In 7, this can cause applications that are not responding to display black (or the last-known screen in faded grey, depending on graphics settings) screens (because it doesn't have any up to date information). Whereas in XP, it leaves the old content up, but dragging a window over it causes shadows of the window to be displayed on the screen, because the lower window is not updating. Update: How do you fix it? Well, there's a bunch of different things, but if you have a method that takes a very long time: private void SomethingThatTakesAReallyLongTime() { System.Threading.Thread.Sleep(30000); } Your event handler can look like this: private void button1_Click(object sender, EventArgs e) { ((Action)SomethingThatTakesAReallyLongTime).BeginInvoke(null); } This may not be a good idea in many cases, but it's a simple example of things you can try.
