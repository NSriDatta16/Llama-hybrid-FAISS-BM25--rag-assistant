[site]: stackoverflow
[post_id]: 529599
[parent_id]: 529524
[tags]: 
Design Patterns are language agnostic, high-level solutions to commonly-encountered problems. Delegates can be used in a platform-specific implementation of the strategy pattern for .NET, but aren't the only way of implementing such a solution. An alternative solution is to define an interface like: public interface IStrategy { void DoStuff(...) } Strategies would then be represented by classes implementing this interface, rather than by a delegate. Delegates may be an okay implementation if you expect your strategies to be very simple. For anything reasonably complex, implementing strategies as interfaces gives you a lot more options when it comes to keeping track of state, organizing things into multiple methods, sharing code between implementations, etc.
