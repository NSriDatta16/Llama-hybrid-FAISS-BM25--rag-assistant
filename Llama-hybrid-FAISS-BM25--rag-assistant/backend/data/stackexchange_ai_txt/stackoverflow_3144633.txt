[site]: stackoverflow
[post_id]: 3144633
[parent_id]: 3141559
[tags]: 
Most likely you work with a team of people and this should be taken into consideration as well. Some ways to test/evaluate technology maturity: Is your team and management receptive to using new technology at all? This might be your biggest barrier. If you get the sense that they aren't receptive, you can try big formal presentations to convince them... or just go try it out (see below). Do some Googling around for problems people have with it. If you don't find much, then this is what you'll run into when you have problems Find some new small project with very low risk (e.g. something just you or a couple people would use), apply new technology in skunkworks fashion to see how it pans out. Try to find the most mature of the immature. For instance if you're thinking about a NoSQL type of data store. All of the NoSQL stuff is immature when you compare against RDBMS like Oracle that has been around for decades, so look at the most mature solution for these that has support organizations, either professionally or via support groups. Easiest project to start is to re-write an existing piece of software. You already have your requirements: make it just like that . Just pick a small piece of the software to re-write in the new technology, preferably something you can hammer at with unit/load testing to see how it stands up. I'm not advocating to re-write an entire application to prove it out, but a small measurable chunk.
