[site]: stackoverflow
[post_id]: 4403156
[parent_id]: 4278188
[tags]: 
I think Algebraic Dynamic Programming worth mentioning. It's quite inspiring presentation of DP technique and is widely used in bioinformatics community. Also, Bellman's principle of optimality stated in very comprehensible way. Traditionally, DP is taught by example: algorithms are cast in terms of recurrences between table entries that store solutions to intermediate problems, from this table the overall solution is constructed via some case analysis. ADP organizes DP algorithm such that problem decomposition into subproblems and case analysis are completely separated from the intended optimization objective. This allows to reuse and combine different parts of DP algorithms for similar problems. There are three loosely coupled parts in ADP algorithm: building search space (which is stated in terms of tree grammars); scoring each element of the search space; objective function selecting those elements of the search space, that we are interested in. All this parts then automatically fused together yielding effective algorithm.
