[site]: stackoverflow
[post_id]: 682557
[parent_id]: 
[tags]: 
Reorganizing a project for expansion/reuse

The scope of the project I'm working on is being expanded. The application is fairly simple but currently targets a very specific niche. For the immediate future I've been asked to fork the project to target a new market and continue developing the two projects in tandem. Both projects will be functionally similar so there is a very strong incentive to generalize a lot of the guts of the original project. Also I'm certain I'll be targeting more markets in the near future (the markets are geographic). The problem is a previous maintainers of the project made a lot of assumptions that tie it to its original market. It's going to take quite a bit of refactoring to separate the generic from the market specific code. To make things more complex several suggestions have been tossed around on how to organize the projects for the growing number of markets: Each market is a separate project, commonalities between projects are moved to a shared library, projects are deployed independently. Expand the existing project to target multiple markets, limiting functionality based on purchased license. Create a parent application and redesign projects as plugins, purchased separately All three suggestions have merit and ideally I would like to structure the codeto be flexible enough that any of these is possible with minor adjustments. Suggestion 3 appears to be the most daunting as it would require building a plugin architecture. The first two suggestions are a bit more plausible. Are there any good resources available on the pros and cons of these different architectures? What are the pros and cons on sharing code between projects verses copying and forking?
