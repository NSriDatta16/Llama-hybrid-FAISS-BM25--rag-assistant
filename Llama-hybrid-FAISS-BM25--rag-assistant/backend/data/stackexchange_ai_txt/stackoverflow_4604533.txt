[site]: stackoverflow
[post_id]: 4604533
[parent_id]: 
[tags]: 
How can one have two test suites related to different applications in the same plugin?

I am currently working with sfPhpUnitPlugin on a sf 1.4 project, and I am facing a problem with plugin testing. I have a plugin that can be used on several applications, and I would like to have a test suite per application. How can I organize my tests so that I can easily match fixtures and tests with a specific application? My suites are copies of this template, which is delivered with the sfPhpunitPlugin: _initFilters(); } /** * Dev hook for custom "tearDown" stuff */ protected function _end() { } protected function _initFilters() { $filters = sfConfig::get('app_sfPhpunitPlugin_filter', array()); foreach ($filters as $filter) { PHPUnit_Util_Filter::addDirectoryToFilter($filter['path'], $filter['ext']); } } public function getApplication() { return '{application}'; } } I suppose I have to add something like this in the app.yml of each application: testunit: sfPhpunitPlugin: filter: - {path: 'backend', ext: '.php'} but I have difficulty determining what the path key is going to look like, I'm under the impression it should be a full path, because the include_path does not contain the path of the plugin I'm testing when addDirectoryToFilter() is called. Any tips? Has anyone done this yet?
