[site]: stackoverflow
[post_id]: 1962445
[parent_id]: 1962379
[tags]: 
I don't know of a direct way of doing this, but you can obviously use InterfaceMapping in reverse: iterate over all interfaces implemented by the method's declaring type, checking if the method is in the interface map for that interface: foreach (Type itf in method.DeclaringType.GetInterfaces()) { if (method.DeclaringType.GetInterfaceMap(itf).TargetMethods.Any(m => m == method)) { Console.WriteLine("match: " + itf.Name); } } Although this may seem a bit inefficient, most types implement few enough interfaces that it shouldn't be a big deal. Appreciate it's not terribly elegant though!
