[site]: stackoverflow
[post_id]: 5670630
[parent_id]: 5660781
[tags]: 
When creating your BaseFont instance with embedding enabled, you need to call myBaseFont.setSubset(true) . Note that with the encoding "Identity-H" (AKA BaseFont.IDENTITY_H ), this happens automatically: // find all fonts in the usual places across multiple OSs. // This can be pretty slow if you have a large number fonts, or the fonts // themselves are Really Big (ArialUnicodeMS: 23mb). FontFactory.registerDirectories(); // here's one way to do it, using identity-h forces subsetting Font myFontSubset1 = FontFactory.getFont(fontName1, BaseFont.IDENTITY_H); // here's another, explicitly enable subsetting for the underlying BaseFont. Font myFontSubset2 = FontFactory.getFont(fontName2, FontFactory.defaultEncoding, true); myFontSubset2.getBaseFont().setSubset(true); //or you can create the BaseFont yourself, with automagic subsetting BaseFont myFontSubset3 = BaseFont.createFont(fontPath, BaseFont.IDENTITY_H); // or create it with some other encoding, and enable subsetting. BaseFont myFontSubset4 = BaseFont.createFont(fontPath, BaseFont.WINANSI, true); myFontSubset4.setSubset(true); Note that this is all Java. In C# the first letter of function names are capitalized and setX(newX) and getX() become properties.
