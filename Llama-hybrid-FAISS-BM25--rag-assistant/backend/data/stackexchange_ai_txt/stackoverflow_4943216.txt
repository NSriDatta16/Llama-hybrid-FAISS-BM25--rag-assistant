[site]: stackoverflow
[post_id]: 4943216
[parent_id]: 4942965
[tags]: 
Items you put into any STL collection are dynamically allocated. Your main issue is managing the lifetime of the pointers in the collection. vector will store the pointers in contiguous storage and will therefore use less overhead per item as it does not need pointers to next and previous nodes. list is more efficient in time when you are inserting or removing other than at the end of the collection, and will never have an overhead of reallocating when you grow beyond capacity. deque is the best collection to use if you never want the overhead of reallocating, have large numbers of objects that do not need contiguous storage, and are only inserting and removing from the ends: either end - but never in the middle. If you want to manage the lifetime of the pointers themselves you could use shared_ptr as your collection type. There is an overhead in that too. boost provides typesafe pointer-collections that manage the memory of the items in them.
