[site]: stackoverflow
[post_id]: 1088731
[parent_id]: 1088696
[tags]: 
the file itself is larger than the one written using paths because you cannot omit redundant path components if edge is internal to the graph. This point is premature optimization. XML parsers/writers aren't going to choke on large files, and if storage size is a concern, XML usually compresses very well with ZIP. necessity for a really large hash table that maps objects to their IDs for purposes of reading/writing edges from/to XML files That's an implementation concern. You can certainly avoid having a large hash table like this if you write your XML read/write routines into the graph, node and edge classes themselves rather than trying to maintain the mapping in a separate structure. Graphs are pretty easy to serialize and deserialize. Unique IDs are probably the way to go. If you structure the IDs in a manner similar to the hierarchal way you proposed it will be relatively human readable as well, which is one of XML's goals.
