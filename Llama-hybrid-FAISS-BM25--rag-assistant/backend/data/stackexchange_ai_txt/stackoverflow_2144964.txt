[site]: stackoverflow
[post_id]: 2144964
[parent_id]: 2144885
[tags]: 
SRP doesn't mean that a class shouldn't have methods. What you've done is created a data-structure rather than a polymorphic object that. There are benefits to doing so, but it's probably not intended or needed in this case. One way you can often tell if an object is violating SRP is to look at the instance variables that the methods within the object use. If there are groups of methods that use certain instance variables, but not others, that's usually a sign that your object can be split up according the the groups of instance variables. Also, you probably don't want your methods to be static. You'll likely want to leverage polymorphism -- the ability to do something different within your methods based on the type of the instance on which the method was called. For example, would your methods need to change if you had an ElfCharacter and a WizardCharacter ? If your methods will absolutely never change and are completely self contained, then perhaps static is alright... but even then it makes testing much more difficult.
