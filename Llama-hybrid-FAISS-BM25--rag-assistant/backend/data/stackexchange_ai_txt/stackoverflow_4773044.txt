[site]: stackoverflow
[post_id]: 4773044
[parent_id]: 4767352
[tags]: 
@GolezTrol There is no PHP badge on topic and you are wrong. What you are describing has nothing to do with setters. You can force type on parameter (in PHP) by using any method not only a setter. You can write: setX( X $x ){ ...} setY( Y $y ){ ...} or just: iAmMethodNotASetter( X $x, Y $y){ //20lines of code here end then: $this->x = $x; $this->y = $y; } Like you see I didn't need setters to enforce type in object properties. And throwing error in setter after checking variable type is bad idea anyway. It is common error of programmers who transitioned from the language statically typed to dynamically type language. Setters and geters are CONVENTION and they don't enforce anything! Today we usually use them for creation of Plain Old Java Objects. (POJO - in php word POPO) So it is just a convetion (standard) for creation of object that can by use between libraries or projects. You can combine setters with type checking or whatever but it dosn't make them somthing more than they are. About Encapsulation: @org.life.java - Jigar Joshi "The main advantage/purpose is encapsulation of getter setters, " @Peter Alexander "You're supposed to use the getters and setter almost everywhere, including inside "the class. If you don't, then you are potentially breaking encapsulation" "Getters and setters are encapsulation" Wrong, wrong, wrong . Encapsulation has nothing to do with getters and setters and it is very common mistake. I know there is many articles repeated it over and over all upside down... Getters and setters don't help encapsulation even worse, they may break encapsulation. They do so when you use them to get some data from object instead of asking object to do something for you with its own data. Encapsulation == object is taking full responsibility for its data and dosn't give it's row data. And getter on private property is nothig more than making that property public in complicated fashion == braking encapsulation. Chceck paragraph encapsulation: http://en.wikipedia.org/wiki/C%2B%2B or http://en.wikipedia.org/wiki/Encapsulation_%28computer_science%29 Not even one word about setters or getters...
