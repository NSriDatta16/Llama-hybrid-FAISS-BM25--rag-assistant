[site]: stackoverflow
[post_id]: 5464793
[parent_id]: 
[tags]: 
gridview inside jquery ui Dialog

I managed to get my jquery ui Dialog working from codebehind. Now i face another problem. I have a gridview inside the div that's being used to .dialog(). That gridview is not showing inside the dialog. If i enter another control as an asp:button it does shows, so i'm a little confused. For example: In that case the dialog loads and has the button visible, but not the gridview. I call MostrarVentanaMostrarVentanaIgualesEntrante from this button: Everything is inside an updatepanel. I checked the datatable wich is used to bind the data and it contains one row so the gridview does have data. Can anyone help me please? Thank you. My code: My .CS: private void CargarGridMostrarIgualesEntrante() { //revisar que el texto del textbox vaya con su formato correcto. if (Regex.IsMatch(tbNumeroUnico.Text, @"\d{2}-\d{6}-\d{4}-\w\w")) { lbNumeroUnicoEntrante.Visible = false; //cargar solo los documentos entrantes que tengan ese mismo número único. _documentosEntrantesNumeroUnicoIgual = _documentosHandler.ObtenerDocumentosEntrantesPorNumeroUnico(tbNumeroUnico.Text); if (_documentosEntrantesNumeroUnicoIgual.Count > 0) { DataTable table = new DataTable(); table.Columns.Add(new DataColumn("DocumentoEntranteID", typeof (long))); table.Columns.Add(new DataColumn("FechaIngreso", typeof (DateTime))); table.Columns.Add(new DataColumn("FuncionarioRecibe", typeof (string))); table.Columns.Add(new DataColumn("NumeroOficio", typeof (string))); table.Columns.Add(new DataColumn("NumeroUnico", typeof (string))); table.Columns.Add(new DataColumn("Remitente", typeof (string))); table.Columns.Add(new DataColumn("OficinaRemitente", typeof (string))); table.Columns.Add(new DataColumn("Dirigido", typeof (string))); table.Columns.Add(new DataColumn("Asignado", typeof (string))); table.Columns.Add(new DataColumn("OficinaArea", typeof (string))); table.Columns.Add(new DataColumn("EstadoDocumento", typeof (string))); foreach (DocumentoEntrante documentoEntrante in _documentosEntrantesNumeroUnicoIgual) { DataRow row = table.NewRow(); row["DocumentoEntranteID"] = documentoEntrante.DocumentoEntranteID; row["FechaIngreso"] = documentoEntrante.FechaIngreso; row["FuncionarioRecibe"] = documentoEntrante.FuncionarioRecibe.NombreFuncionario; row["NumeroOficio"] = documentoEntrante.NumeroOficio; row["NumeroUnico"] = documentoEntrante.NumeroUnico; row["Remitente"] = documentoEntrante.Remitente; row["OficinaRemitente"] = documentoEntrante.Oficina.Nombre; row["Dirigido"] = documentoEntrante.FuncionarioDirigido.NombreFuncionario; row["Asignado"] = documentoEntrante.FuncionarioAsignado.NombreFuncionario; row["OficinaArea"] = documentoEntrante.Area.Oficina.Nombre + " - " + documentoEntrante.Area.Nombre; row["EstadoDocumento"] = documentoEntrante.EstadoDocumento.Nombre; table.Rows.Add(row); } gvMostrarIgualesEntrante.DataSource = table; gvMostrarIgualesEntrante.DataBind(); }else { gvMostrarIgualesEntrante.DataSource = null; gvMostrarIgualesEntrante.EmptyDataText = "No existe un documento entrante con el mismo número único"; gvMostrarIgualesEntrante.DataBind(); } runjQueryCode("dlg = $('#DivMostrarIguales').dialog({autoOpen: false,show: 'fold',hide: 'clip',width: 1272,height: 211,close: function(ev, ui) { $('.ui-effects-wrapper').remove(); }}); $('#DivMostrarIguales').dialog('open')"); } else { lbNumeroUnicoEntrante.Visible = true; } } protected void MostrarVentanaIgualesEntrante(object sender, EventArgs e) { CargarGridMostrarIgualesEntrante(); }
