[site]: datascience
[post_id]: 62921
[parent_id]: 61548
[tags]: 
There are several options that you could try. AFAIK, there are no library that implements gradient descent and modelling as separate instance. What is available though, are models that use gradient descent as its means of optimization. So basically the gradient descent is already embedded and automatically used when you fit the model. As for your use cases you can try sgd regressor by sklearn . Also I would suggest you to use PCA to reduce the dimensionality. The closest thing that I could think of that implement automatic gradient descent is pytorch. So pytorch is a deep learning library but it optimizes by automatic differentiation, basically you can perform forward pass and then when you ask for update (or backward propagation in neural network) and the gradient will be automatically calculated based on operations that you perform during forward pass. You can think of linear regression as a single layer neural network so it will work but probably overkill since there are libraries that implemented simple linear regression better. But since you are new I would not suggest you to use it, but it is worth to check if you are curious.
