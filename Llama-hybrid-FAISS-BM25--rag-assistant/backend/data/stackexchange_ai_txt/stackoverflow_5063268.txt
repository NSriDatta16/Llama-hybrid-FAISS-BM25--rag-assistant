[site]: stackoverflow
[post_id]: 5063268
[parent_id]: 5062793
[tags]: 
The short answer is no, Python doesn't accept two packages with the same name. (There are things called "namespace packages" that let a single package be implemented over multiple directories but they require the packages involved to be set up to cooperate with each other). The way PEP 8 discourages explicit relative imports is one of its more questionable pieces of advice, precisely because it makes it harder to rename a package to avoid naming conflicts. If the two packages used relative imports, you could just rename one of them or nest it inside another package and be done with it. import aliases won't help you here, because it is the name that ends up in sys.modules that matters, and that uses the name of the module as imported, rather than the name that ends up being bound in the importing module. If you wanted to get really exotic, you could write your own importer (see PEP 302 and the 3.x importlib documentation ). If you decide to go that far, you can do pretty much anything you want.
