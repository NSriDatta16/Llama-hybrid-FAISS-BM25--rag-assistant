[site]: stackoverflow
[post_id]: 862840
[parent_id]: 862064
[tags]: 
I always write tests to test the DAO layer, which isn't testing business logic, but I feel it is important to test the CRUD features. This has gotten me into a lot of trouble because if my database is corrupt for some reason my tests have the high possibility of failing. What I do to prevent these DAO type tests from failing is, first do the testing in a non-production database. Then for each CRUD/DAO test I find objects that may have been left around from a previous test and if exist I delete them. I create objects I want to test I update the objects I want to test I clean up or delete the objects I created. This sequence helps me to make sure my database is in a condition where my tests will not fail if run twice and the first time the test stopped half way in between. Another way is to wrap your CRUD tests in a transaction and at the end of the test rollback the transaction so the database is in the state that it began.
