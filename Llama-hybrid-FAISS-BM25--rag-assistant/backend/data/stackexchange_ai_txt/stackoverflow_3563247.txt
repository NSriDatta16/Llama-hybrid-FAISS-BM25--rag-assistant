[site]: stackoverflow
[post_id]: 3563247
[parent_id]: 3563098
[tags]: 
If you want extra lean and maximum compatibility with legacy Windows versions, write against the Windows API app using C++. It will be extremely time consuming compared to .NET, but it will run on any 32 bit Windows platform, and the binary will be very small. For something less extreme, but still very lean and very compatible by modern standards you can use C++ with the MFC library and link it statically (no DLL). Visual studio does support drag 'n drop screen design for dialog screens in MFC, so if you're willing to use dialogs you can have a rough approximation of productivity. If you don't know C++, you should stay away from these first 2 solutions. I agree with Craig that Delphi is another excellent way to go, it creates stand-alone exe files that are small by modern standards. VB6 is an attractive alternative because the runtime was included as a standard component on Windows releases since before XP was released. VB6 exe files are extremely small, smaller than MFC or even API apps in many cases. If you've used VB.Net, the syntax will be familiar and you should be able to get through creating a simple app without much problem. Finally, you might consider targeting .NET 2.0 with C#. Statistically speaking it is rare for an XP or later Windows machine to lack .NET 2.0 at this point.
