[site]: stackoverflow
[post_id]: 5440745
[parent_id]: 
[tags]: 
How to Determine/Control Where Managed Object Model (.mom) File is Stored?

Ey guys, so I have this preloader (Xcode commandline utility project) that preloads my iPhone app's sqlite store and it has been working just fine until now as it is always giving me an incompatible store error. So instead of referencing the .mom file within the preloader I am going to create it within the preloader to hopefully bypass this issue. This is where my question comes in, how do I determine where the preloader is storing the .mom file I am having it create? And is there any way I can tell it where to place it? Below are some relevant snippets of code. From within the iPhone app: /** Returns the managed object model for the application. If the model doesn't already exist, it is created by merging all of the models found in the application bundle. */ - (NSManagedObjectModel *)managedObjectModel { if (managedObjectModel != nil) { return managedObjectModel; } //managedObjectModel = [[NSManagedObjectModel mergedModelFromBundles:nil] retain]; NSURL *modelURL = [NSURL fileURLWithPath:@"path/to/Parking.mom"]; managedObjectModel = [[NSManagedObjectModel alloc] initWithContentsOfURL:modelURL]; #pragma mark TODO change below line to search for your project's mom file NSString *path = [[NSBundle mainBundle] pathForResource:@"Parking" ofType:@"mom"]; return managedObjectModel; } From within the preloader (Xcode commandline utility project): NSManagedObjectModel *managedObjectModel(NSString* momPath) { static NSManagedObjectModel *model = nil; if (model != nil) { return model; } model = [[NSManagedObjectModel mergedModelFromBundles:nil] retain]; //NSURL *modelURL = [NSURL fileURLWithPath:momPath]; //model = [[NSManagedObjectModel alloc] initWithContentsOfURL:modelURL]; return model; } If you look closely to the code you can see where I swapped what was in each file. Thanks in advance!
