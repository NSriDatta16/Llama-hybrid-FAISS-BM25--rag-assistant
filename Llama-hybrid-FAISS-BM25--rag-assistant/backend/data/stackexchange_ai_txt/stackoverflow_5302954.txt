[site]: stackoverflow
[post_id]: 5302954
[parent_id]: 
[tags]: 
ASP.NET MVC, Querystring, routes and default binder, how do I combine this?

I have an ASP.NET MVC site that uses strongly typed views. In my case, a controller action could look like this: public ActionResult List(MyStrongType data) When submitting the page (view) the response will generate a URL that looks something like this (yes, I know routing could generate a nicer URL): http://localhost/Ad/List?F.ShowF=0&ALS.CP=30&ALS.L=0&ALS.OB=0&ALS.ST=0&S=&LS.L1=&LS.L2=&CS.C1=32&CS.C2=34&CS.C3=&ALS.ST=0 If I submit the page again, I can see that the data object in the action is set properly (according to the URL)(default binder). The problem is: Say that I am to add page buttons (to change the page) for a list on my sitepage, the list will be controlled by settings like filter, sortorder, amount of pages per page and so on (controlled by the querystring). First, I need to include all current query parameters in the URL, and then I need to update the page parameter without tampering with the other query parameters. How can I genereate this URL from the view/"HTML helper"? I could of course manipulate the URL string manually, but this will involve a lot of work and it will be hard to keep up to date if a route is changed, there must be a easier way? Like some kind of querystring collection that can be altered on service side (like ASP.NET Request.QueryString)? I would hope to not involve the route, but I post the one I got so far anyway: routes.MapRoute( "Default", "{controller}/{action}/{id}", new { controller = "Home", action = "Index", id = UrlParameter.Optional } ); routes.MapRoute( "TreeEditing", "{controller}/{action}/{name}/{id}", new { controller = "MyCategory", action = "Add", name = string.Empty, id = -1 } ); BestRegards Edit 1: It's possible to set the query parameters like this (in view): But this will only generate a URL like this (with the default route): /search/result?query=Beverages&page=2 The rest of the parameters will be missing as you can see. I could of course add every known parameter in this URL action, but if any query parameter is added or changed there will be a lot of work to keep everything up to date. I have read the article ASP.NET MVC Framework (Part 2): URL Routing , but how do I find an answer to my problem?
