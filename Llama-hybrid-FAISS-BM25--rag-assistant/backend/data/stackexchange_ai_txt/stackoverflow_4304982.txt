[site]: stackoverflow
[post_id]: 4304982
[parent_id]: 4304940
[tags]: 
"One of its uses (void pointers) may be to pass generic parameters to a function" Not a good-style use, to be certain. Passing generic parameters to functions is done by: a) templates (and possibly template specializations) which allows to write safe code, b) OOP approaches. I like your second increaseInt and increaseChar solution better. You can rewrite it as: template void increase(T* pData) { ++(*pData); } It will work for any type which supports ++ and be safe. Sometimes you'd still need a void pointer as a "generic parameter" - for example when using the popular pthread library. When you spawn a thread, you may send it some arbitrary data (of any type you want), and it's done using - well - a void* pointer. The pthread library is in C not C++, which may be one of the reasons, but you might want to interface with it from C++ and this will indeed require you to use the void* pointer as a "generic type". Not much harm done there, though; just remember that for everyday coding there are more elegant solutions.
