cache sizes. LLMs are also being tested for creating architectural plans or initial C code for HLS, as seen with GPT4AIGChip. Logic synthesis and optimization Logic synthesis starts from a high level hardware description and generates an optimized list of electronic gates, known as a gate level netlist, that is ready for a specific manufacturing process. AI methods help with different parts of this process, including logic optimization, technology mapping, and making improvements after mapping. Supervised learning, especially with Graph Neural Networks (GNNs), is good at handling data or problems that can be represented as graphs. Since circuit diagrams are instances of directed graphs, supervised learning can help create models that predict design properties like power or error rates in circuits. In logic synthesis and optimization reinforcement learning is used to perform logic optimization directly. In some cases agents are trained to choose a series of logic changes to reduce area while meeting timing goals. Other examples are AlphaSyn, which uses Monte carlo tree search with RL to optimize logic for smaller area and FlowTune, which uses a multi armed bandit strategy to choose synthesis flows. These methods can also adjust parameters for entire synthesis flows, learning from old designs to recommend the best tool settings for new ones. Physical design Physical design turns a netlist into a physical layout. This layout defines exactly where each component goes, plus a physical description of all the wires needed to connect them. AI is usually used in this area to improve power, performance, and area metrics. Placement Placement is the task of finding the best spots for large circuit blocks, called macros, and smaller standard cells. Reinforcement learning has been famously used for macro placement, where an agent learns how to position blocks to reduce wire length and improve timing and other examples like the GoodFloorplan method. Supervised learning models, including CNNs that treat the layout like a picture, are used to predict routing problems like DRVs (e.g., RouteNet) or timing after routing directly from the placement information. RL Sizer uses deep RL to optimize the size of gates during placement to meet timing goals. Clock network synthesis AI helps in Clock Tree Synthesis (CTS) by optimizing the network that distributes the clock signal. GANs, sometimes used with RL (e.g., GAN CTS), are used to predict and improve clock tree structures. The goal is to reduce clock skew and power use. Routing Routing creates the physical wire connections. AI models predict routing traffic jams using methods like GANs to help guide the routing algorithms. RL is also used to optimize the order in which wires are routed to reduce errors. Power/ground network synthesis and analysis AI models, including CNNs and tree based methods, help in designing and analyzing the Power Delivery Network (PDN). They do this by quickly estimating static and dynamic IR drop. This guides the creation of the PDN and reduces the number of design cycles. Verification and validation Verification and validation demonstrate that a proposed design will correctly implement the requirements, and can be successfully manufactured. These are critical steps in the design and fabrication of a semiconductor device, and often consume a large fraction of the total design effort. AI is used to make them more efficient. LLMs are used to turn plain language requirements into formal SystemVerilog assertions (SVAs) (e.g., AssertLLM) and to help with security verification. Some methods focus on making timing checks much faster, by predicting timing analysis results based on circuit structure, which was later improved with transformer models like TF Predictor. Another approach is DeepGate2, which provides a way to learn circuit representations, which in turn can help with verification tasks. Analog and mixed signal design AI methods are increasingly used in the complex field o