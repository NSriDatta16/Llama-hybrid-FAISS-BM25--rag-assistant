 produces a 3D surface. If f ( μ ) = ( f 1 ( μ ) f 2 ( μ ) ) , g ( ν ) = ( g 1 ( ν ) g 2 ( ν ) ) {\displaystyle f(\mu )={\begin{pmatrix}f_{1}(\mu )\\f_{2}(\mu )\end{pmatrix}},\quad g(\nu )={\begin{pmatrix}g_{1}(\nu )\\g_{2}(\nu )\end{pmatrix}}} are two plane curves then the spherical product is h ( μ , ν ) = f ( μ ) ⊗ g ( ν ) = ( g 1 ( ν ) f 1 ( μ ) g 1 ( ν ) f 2 ( μ ) g 2 ( ν ) ) {\displaystyle h(\mu ,\nu )=f(\mu )\otimes g(\nu )={\begin{pmatrix}g_{1}(\nu )\ f_{1}(\mu )\\g_{1}(\nu )\ f_{2}(\mu )\\g_{2}(\nu )\end{pmatrix}}} This is similar to the typical parametric equation of a sphere: x = x 0 + r sin ⁡ θ cos ⁡ φ y = y 0 + r sin ⁡ θ sin ⁡ φ ( 0 ≤ θ ≤ π , 0 ≤ φ < 2 π ) z = z 0 + r cos ⁡ θ {\displaystyle {\begin{aligned}x&=x_{0}+r\sin \theta \;\cos \varphi \\y&=y_{0}+r\sin \theta \;\sin \varphi \qquad (0\leq \theta \leq \pi ,\;0\leq \varphi <2\pi )\\z&=z_{0}+r\cos \theta \end{aligned}}} which give rise to the name spherical product. Barr uses the spherical product to define quadric surfaces, like ellipsoids, and hyperboloids as well as the torus, superellipsoid, superquadric hyperboloids of one and two sheets, and supertoroids. Plotting code The following GNU Octave code generates a mesh approximation of a superquadric: See also Superegg Superellipsoid Ellipsoid References External links Bibliography: SuperQuadric Representations Superquadric Tensor Glyphs SuperQuadric Ellipsoids and Toroids, OpenGL Lighting, and Timing Superquadrics by Robert Kragler, The Wolfram Demonstrations Project. Superquadrics in Python Superquadrics recovery algorithm in Python and MATLAB