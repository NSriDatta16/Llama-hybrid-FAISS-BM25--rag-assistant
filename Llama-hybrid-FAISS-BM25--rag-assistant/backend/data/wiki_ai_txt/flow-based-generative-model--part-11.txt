ld flow transformation, we need access to the differential volume ratio, R f {\displaystyle R_{f}} , or at least to its gradient w.r.t. the parameters. Moreover, for some inference tasks, we need access to R f {\displaystyle R_{f}} itself. Practical solutions include: Sorrenson et al.(2023) give a solution for computationally efficient stochastic parameter gradient approximation for log ⁡ R f . {\displaystyle \log R_{f}.} For some hand-designed flow transforms, R f {\displaystyle R_{f}} can be analytically derived in closed form, for example the above-mentioned simplex calibration transforms. Further examples are given below in the section on simple spherical flows. On a software platform equipped with linear algebra and automatic differentiation, R f ( x ) = | det ⁡ ( T y ′ F x T x ) | {\displaystyle R_{f}(\mathbf {x} )=\left|\operatorname {det} (\mathbf {T_{y}} '\mathbf {F_{x}T_{x}} )\right|} can be automatically evaluated, given access to only x , f , π {\displaystyle \mathbf {x} ,f,\pi } . But this is expensive for high-dimensional data, with at least O ( n 3 ) {\displaystyle {\mathcal {O}}(n^{3})} computational costs. Even then, the slow automatic solution can be invaluable as a tool for numerically verifying hand-designed closed-form solutions. Simple spherical flows In machine learning literature, various complex spherical flows formed by deep neural network architectures may be found. In contrast, this section compiles from statistics literature the details of three very simple spherical flow transforms, with simple closed-form expressions for inverses and differential volume ratios. These flows can be used individually, or chained, to generalize distributions on the unitsphere, S n − 1 {\displaystyle \mathbb {S} ^{n-1}} . All three flows are compositions of an invertible affine transform in R n {\displaystyle \mathbb {R} ^{n}} , followed by radial projection back onto the sphere. The flavours we consider for the affine transform are: pure translation, pure linear and general affine. To make these flows fully functional for learning, inference and sampling, the tasks are: To derive the inverse transform, with suitable restrictions on the parameters to ensure invertibility. To derive in simple closed form the differential volume ratio, R f {\displaystyle R_{f}} . An interesting property of these simple spherical flows is that they don't make use of any non-linearities apart from the radial projection. Even the simplest of them, the normalized translation flow, can be chained to form perhaps surprisingly flexible distributions. Normalized translation flow The normalized translation flow, f trans : S n − 1 → S n − 1 {\displaystyle f_{\text{trans}}:\mathbb {S} ^{n-1}\to \mathbb {S} ^{n-1}} , with parameter c ∈ R n {\displaystyle \mathbf {c} \in \mathbb {R} ^{n}} , is given by: y = f trans ( x ; c ) = x + c ‖ x + c ‖ , where ‖ c ‖ < 1 {\displaystyle \mathbf {y} =f_{\text{trans}}(\mathbf {x} ;\mathbf {c} )={\frac {\mathbf {x} +\mathbf {c} }{\lVert \mathbf {x} +\mathbf {c} \rVert }}\,,\;{\text{where}}\;\lVert \mathbf {c} \rVert <1} The inverse function may be derived by considering, for ℓ > 0 {\displaystyle \ell >0} : y = ℓ − 1 ( x + c ) {\displaystyle \mathbf {y} =\ell ^{-1}(\mathbf {x} +\mathbf {c} )} and then using x ′ x = 1 {\displaystyle \mathbf {x} '\mathbf {x} =1} to get a quadratic equation to recover ℓ {\displaystyle \ell } , which gives: x = f trans − 1 ( y ; c ) = ℓ y − c , where ℓ = y ′ c + ( y ′ c ) 2 + 1 − c ′ c {\displaystyle \mathbf {x} =f_{\text{trans}}^{-1}(\mathbf {y} ;\mathbf {c} )=\ell \mathbf {y} -\mathbf {c} \,,{\text{where}}\;\ell =\mathbf {y} '\mathbf {c} +{\sqrt {(\mathbf {y} '\mathbf {c} )^{2}+1-\mathbf {c} '\mathbf {c} }}} from which we see that we need ‖ c ‖ < 1 {\displaystyle \lVert \mathbf {c} \rVert <1} to keep ℓ {\displaystyle \ell } real and positive for all y ∈ S n − 1 {\displaystyle \mathbf {y} \in \mathbb {S} ^{n-1}} . The differential volume ratio is given (without derivation) by Bouleric