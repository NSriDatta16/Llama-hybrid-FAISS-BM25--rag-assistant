provides a very flexible way of managing information, tailored to the needs of the underlying imaging project. For efficiency and reliability, the tags and values are stored in an indexed tag/value table in the underlying SQL database. Graphical annotations can be stored in addition to tags. They include simple objects such as points, lines, and circles, and more complex objects such as region outlines. Each of these graphical objects is stored and indexed in the underlying database as well. In addition to be searchable, these graphical annotation are also rendered in BisQue's image viewer as overlays on top of the viewed image. Organization and search Users typically locate images of interest by browsing through collections or by searching with specific queries. For the former, BisQue provides a web-based tag organizer that enables rapid filtering and grouping of large image collections by tag names and values. For the latter, BisQue offers a RESTful tag query interface to find images with specific tag values. Both of these search capabilities are converted into SQL queries over the tag/value table behind the scenes. Besides tag-centric image organization, BisQue also provides a traditional folder view that allows users to browse images by navigating folders similar to a file manager. Parallel analysis modules BisQue allows users to write analysis modules in the programming language of their choice (e.g., Matlab, Python, C++) by using language-specific APIs. Modules typically read in images and metadata and generate new images or additional metadata as output. These results are stored back into the system in the form of tags, graphical objects and/or images. Images or metadata are never over-written, in order to preserve the complete provenance information. Tested modules can then be registered in the BisQue system for execution. BisQue supports different execution modes, depending on the available infrastructure. For simple modules, BisQue can execute them on a single node. For high-performance needs, BisQue can leverage the HTCondor high-throughput computing software framework for coarse-grained distributed parallelization. In the latter case, BisQue can automatically parallelize analysis over large image datasets and then collect the results in a single BisQue metadata document. Visualization and sharing Metadata in BisQue can take many forms: text, objects of interest, user annotations or another web-based file (e.g. associated publication in PDF). Textual and graphical markup viewing and editing is available in the web 5D image viewer. The viewer is used for image and object browsing, ground-truth acquisition and statistical summaries of biological objects. Additionally, it allows for various visualization options such as channel mapping, image enhancement, projections and rotations. The most recent image viewer is able to present volumetric imagery in 3D without browser plug-ins by utilizing modern browsers' WebGL capabilities. Biological image sharing has often been difficult due to proprietary formats. In BisQue, sharing images, metadata and analysis results can be performed through the web. The system contains an export facility that allows conversions of image formats, application of a variety of image-processing operations and export of textual or graphical annotations as XML, CSV or to Google Docs. RESTful interface All services and modules are accessible via standard web access methods (HTTP). This permits a wide variety of tools, from web browsers to custom analysis applications, to interact with BisQue. Most BisQue services are implemented using the RESTful design pattern architecture that exposes resources through URIs. Resources are manipulated by using the common HTTP methods. Among many benefits attributed to RESTful pattern are scalability through web caches and the use of client side state and processing resources. Bisque services exchange data in XML format. For easy integration with existing software, B