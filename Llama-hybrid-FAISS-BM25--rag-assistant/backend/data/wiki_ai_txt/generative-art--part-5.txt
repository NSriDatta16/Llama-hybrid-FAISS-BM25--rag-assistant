tive art created in this way is that all the source code and algorithm for creating the art has to be finalized and put on the blockchain permanently, without any ability to alter it further. Only when the artwork is sold ("minted"), the artwork is generated; the result is random yet should reflect the overall aesthetic defined by the artist. Calderon argues that this process forces the artist to be very thoughtful of the algorithm behind the art:Until today, a [generative] artist would create an algorithm, press the spacebar 100 times, pick five of the best ones and print them in high quality. Then they would frame them, and put them in a gallery. Maybe. Because Art Blocks forces the artist to accept every single output of the algorithm as their signed piece, the artist has to go back and tweak the algorithm until it's perfect. They can't just cherry pick the good outputs. That elevates the level of algorithmic execution because the artist is creating something that they know they're proud of before they even know what's going to come out on the other side. Theories Philip Galanter In 2003, Philip Galanter published the most widely cited theory of generative art which describes generative art systems in the context of complexity theory. In particular the notion of Murray Gell-Mann and Seth Lloyd's effective complexity is cited. In this view both highly ordered and highly disordered generative art can be viewed as simple. Highly ordered generative art minimizes entropy and allows maximal data compression, and highly disordered generative art maximizes entropy and disallows significant data compression. Maximally complex generative art blends order and disorder in a manner similar to biological life, and indeed biologically inspired methods are most frequently used to create complex generative art. This view is at odds with the earlier information theory influenced views of Max Bense and Abraham Moles where complexity in art increases with disorder. Galanter notes further that given the use of visual symmetry, pattern, and repetition by the most ancient known cultures generative art is as old as art itself. He also addresses the mistaken equivalence by some that rule-based art is synonymous with generative art. For example, some art is based on constraint rules that disallow the use of certain colors or shapes. Such art is not generative because constraint rules are not constructive, i.e. by themselves they do not assert what is to be done, only what cannot be done. Margaret Boden and Ernest Edmonds In their 2009 article, Margaret Boden and Ernest Edmonds agree that generative art need not be restricted to that done using computers, and that some rule-based art is not generative. They develop a technical vocabulary that includes Ele-art (electronic art), C-art (computer art), D-art (digital art), CA-art (computer assisted art), G-art (generative art), CG-art (computer based generative art), Evo-art (evolutionary based art), R-art (robotic art), I-art (interactive art), CI-art (computer based interactive art), and VR-art (virtual reality art). Questions The discourse around generative art can be characterized by the theoretical questions which motivate its development. McCormack et al. propose the following questions, shown with paraphrased summaries, as the most important: Can a machine originate anything? Related to machine intelligence - can a machine generate something new, meaningful, surprising and of value: a poem, an artwork, a useful idea, a solution to a long-standing problem? What is it like to be a computer that makes art? If a computer could originate art, what would it be like from the computer's perspective? Can human aesthetics be formalized? What new kinds of art does the computer enable? Many generative artworks do not involve digital computers, but what does generative computer art bring that is new? In what sense is generative art representational, and what is it representing? What is the role of randomness i