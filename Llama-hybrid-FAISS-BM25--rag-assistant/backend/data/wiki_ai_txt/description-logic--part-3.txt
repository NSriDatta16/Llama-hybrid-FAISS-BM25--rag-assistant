ase modeler's perspective. It is plausible to distinguish between our conception of terms/concepts in the world (class axioms in the TBox) and particular manifestations of those terms/concepts (instance assertions in the ABox). In the above example: when the hierarchy within a company is the same in every branch but the assignment to employees is different in every department (because there are other people working there), it makes sense to reuse the TBox for different branches that do not use the same ABox. There are two features of description logic that are not shared by most other data description formalisms: DL does not make the unique name assumption (UNA) or the closed-world assumption (CWA). Not having UNA means that two concepts with different names may be allowed by some inference to be shown to be equivalent. Not having CWA, or rather having the open world assumption (OWA) means that lack of knowledge of a fact does not immediately imply knowledge of the negation of a fact. Formal description Like first-order logic (FOL), a syntax defines which collections of symbols are legal expressions in a description logic, and semantics determine meaning. Unlike FOL, a DL may have several well known syntactic variants. Syntax The syntax of a member of the description logic family is characterized by its recursive definition, in which the constructors that can be used to form concept terms are stated. Some constructors are related to logical constructors in first-order logic (FOL) such as intersection or conjunction of concepts, union or disjunction of concepts, negation or complement of concepts, universal restriction and existential restriction. Other constructors have no corresponding construction in FOL including restrictions on roles for example, inverse, transitivity and functionality. Notation Let C and D be concepts, a and b be individuals, and R be a role. If a is R-related to b, then b is called an R-successor of a. The description logic ALC The prototypical DL Attributive Concept Language with Complements ( A L C {\displaystyle {\mathcal {ALC}}} ) was introduced by Manfred Schmidt-Schauß and Gert Smolka in 1991, and is the basis of many more expressive DLs. The following definitions follow the treatment in Baader et al. Let N C {\displaystyle N_{C}} , N R {\displaystyle N_{R}} and N O {\displaystyle N_{O}} be (respectively) sets of concept names (also known as atomic concepts), role names and individual names (also known as individuals, nominals or objects). Then the ordered triple ( N C {\displaystyle N_{C}} , N R {\displaystyle N_{R}} , N O {\displaystyle N_{O}} ) is the signature. Concepts The set of A L C {\displaystyle {\mathcal {ALC}}} concepts is the smallest set such that: The following are concepts: ⊤ {\displaystyle \top } (top is a concept) ⊥ {\displaystyle \bot } (bottom is a concept) Every A ∈ N C {\displaystyle A\in N_{C}} (all atomic concepts are concepts) If C {\displaystyle C} and D {\displaystyle D} are concepts and R ∈ N R {\displaystyle R\in N_{R}} then the following are concepts: C ⊓ D {\displaystyle C\sqcap D} (the intersection of two concepts is a concept) C ⊔ D {\displaystyle C\sqcup D} (the union of two concepts is a concept) ¬ C {\displaystyle \neg C} (the complement of a concept is a concept) ∀ R . C {\displaystyle \forall R.C} (the universal restriction of a concept by a role is a concept) ∃ R . C {\displaystyle \exists R.C} (the existential restriction of a concept by a role is a concept) Terminological axioms A general concept inclusion (GCI) has the form C ⊑ D {\displaystyle C\sqsubseteq D} where C {\displaystyle C} and D {\displaystyle D} are concepts. Write C ≡ D {\displaystyle C\equiv D} when C ⊑ D {\displaystyle C\sqsubseteq D} and D ⊑ C {\displaystyle D\sqsubseteq C} . A TBox is any finite set of GCIs. Assertional axioms A concept assertion is a statement of the form a : C {\displaystyle a:C} where a ∈ N O {\displaystyle a\in N_{O}} and C is a concept. A role assertion is a statemen