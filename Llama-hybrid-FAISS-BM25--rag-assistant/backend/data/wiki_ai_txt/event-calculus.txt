The event calculus is a logical theory for representing and reasoning about events and about the way in which they change the state of some real or artificial world. It deals both with action events, which are performed by agents, and with external events, which are outside the control of any agent. The event calculus represents the state of the world at any time by the set of all the facts (called fluents) that hold at the time. Events initiate and terminate fluents: The event calculus differs from most other approaches for reasoning about change by reifying time, associating events with the time at which they happen, and associating fluents with the times at which they hold. The original version of the event calculus, introduced by Robert Kowalski and Marek Sergot in 1986, was formulated as a logic program and developed for representing narratives and database updates. Kave Eshghi showed how to use the event calculus for planning, by using abduction to generate hypothetical actions to achieve a desired state of affairs. It was extended by Murray Shanahan and Rob Miller in the 1990s and reformulated in first-order logic with circumscription. These and later extensions have been used to formalize non-deterministic actions, concurrent actions, actions with delayed effects, gradual changes, actions with duration, continuous change, and non-inertial fluents. Van Lambalgen and Hamm showed how a formulation of the event calculus as a constraint logic program can be used to give an algorithmic semantics to tense and aspect in natural language. Fluents and events In the event calculus, fluents are reified. This means that fluents are represented by terms. For example, h o l d s A t ( o n ( g r e e n _ b l o c k , t a b l e ) , 1 ) {\displaystyle {\mathit {holdsAt}}(on(green\_block,table),1)} expresses that the g r e e n _ b l o c k {\displaystyle {\mathit {green\_block}}} is on the t a b l e {\displaystyle {\mathit {table}}} at time 1 {\displaystyle 1} . Here h o l d s A t {\displaystyle {\mathit {holdsAt}}} is a predicate, while o n ( g r e e n _ b l o c k , t a b l e ) {\displaystyle {\mathit {on(green\_block,table)}}} is a term. In general, the atomic formula h o l d s A t ( f l u e n t , t i m e ) {\displaystyle {\mathit {holdsAt}}(fluent,time)} expresses that the f l u e n t {\displaystyle {\mathit {fluent}}} holds at the t i m e . {\displaystyle {\mathit {time.}}} Events are also reified and represented by terms. For example, h a p p e n s A t ( m o v e ( g r e e n _ b l o c k , r e d _ b l o c k ) , 3 ) {\displaystyle {\mathit {happensAt}}(move(green\_block,red\_block),3)} expresses that the g r e e n _ b l o c k {\displaystyle {\mathit {green\_block}}} is moved onto the r e d _ b l o c k ) {\displaystyle {\mathit {red\_block)}}} at time 3 {\displaystyle 3} . In general: h a p p e n s A t ( e v e n t , t i m e ) {\displaystyle {\mathit {happensAt}}(event,time)} expresses that the e v e n t {\displaystyle {\mathit {event}}} happens at the t i m e . {\displaystyle {\mathit {time.}}} The relationships between events and the fluents that they initiate and terminate are also represented by atomic formulae: i n i t i a t e s ( e v e n t , f l u e n t , t i m e ) {\displaystyle {\mathit {initiates}}(event,fluent,time)} expresses that if the e v e n t {\displaystyle {\mathit {event}}} happens at the t i m e {\displaystyle {\mathit {time}}} then the f l u e n t {\displaystyle {\mathit {fluent}}} becomes true after the t i m e {\displaystyle {\mathit {time}}} . t e r m i n a t e s ( e v e n t , f l u e n t , t i m e ) {\displaystyle {\mathit {terminates}}(event,fluent,time)} expresses that if the e v e n t {\displaystyle {\mathit {event}}} happens at the t i m e {\displaystyle {\mathit {time}}} then the f l u e n t {\displaystyle {\mathit {fluent}}} ceases to be true after the t i m e {\displaystyle {\mathit {time}}} . Domain-independent axiom The event calculus was developed in part as an alternative to the situation calculus, as a sol