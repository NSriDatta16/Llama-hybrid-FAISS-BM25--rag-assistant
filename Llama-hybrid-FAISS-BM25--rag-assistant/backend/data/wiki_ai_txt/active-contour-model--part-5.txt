and be smaller in value than k {\displaystyle k} to allow forces at image edges to overcome the inflation force. Three issues arise from using the balloon model: Instead of shrinking, the snake expands into the minima and will not find minima contours smaller than it. The outward force causes the contour to be slightly larger than the actual minima. This can be solved by decreasing the balloon force after a stable solution has been found. The inflation force can overpower forces from weak edges, amplifying the issue with snakes ignoring weaker features in an image. Diffusion snakes model The diffusion snake model addresses the sensitivity of snakes to noise, clutter, and occlusion. It implements a modification of the Mumford–Shah functional and its cartoon limit and incorporates statistical shape knowledge. The default image energy functional E image {\displaystyle E_{\text{image}}} is replaced with E image ∗ = E i + α E c {\displaystyle E_{\text{image}}^{*}=E_{i}+\alpha E_{c}} where E i {\displaystyle E_{i}} is based on a modified Mumford–Shah functional E [ J , B ] = 1 2 ∫ D ( I ( x → ) − J ( x → ) ) 2 d x → + λ 1 2 ∫ D / B ∇ → J ( x → ) ⋅ ∇ → J ( x → ) d x → + ν ∫ 0 1 ( d d s B ( s ) ) 2 d s {\displaystyle E[J,B]={\frac {1}{2}}\int _{D}(I({\vec {x}})-J({\vec {x}}))^{2}\,d{\vec {x}}+\lambda {\frac {1}{2}}\int _{D/B}{\vec {\nabla }}J({\vec {x}})\cdot {\vec {\nabla }}J({\vec {x}})\,d{\vec {x}}+\nu \int _{0}^{1}{\Bigg (}{\frac {d}{ds}}B(s){\Bigg )}^{2}\,ds} where J ( x → ) {\displaystyle J({\vec {x}})} is the piecewise smooth model of the image I ( x → ) {\displaystyle I({\vec {x}})} of domain D {\displaystyle D} . Boundaries B ( s ) {\displaystyle B(s)} are defined as B ( s ) = ∑ n = 1 N p → n B n ( s ) {\displaystyle B(s)=\sum _{n=1}^{N}{\vec {p}}_{n}B_{n}(s)} where B n ( s ) {\displaystyle B_{n}(s)} are quadratic B-spline basis functions and p → n {\displaystyle {\vec {p}}_{n}} are the control points of the splines. The modified cartoon limit is obtained as λ → ∞ {\displaystyle \lambda \to \infty } and is a valid configuration of E i {\displaystyle E_{i}} . The functional E c {\displaystyle E_{c}} is based on training from binary images of various contours and is controlled in strength by the parameter α {\displaystyle \alpha } . For a Gaussian distribution of control point vectors z → {\displaystyle {\vec {z}}} with mean control point vector z → 0 {\displaystyle {\vec {z}}_{0}} and covariance matrix Σ {\displaystyle \Sigma } , the quadratic energy that corresponds to the Gaussian probability is E c ( z → ) = 1 2 ( z → − z → 0 ) t Σ ∗ ( z → − z → 0 ) {\displaystyle E_{c}({\vec {z}})={\frac {1}{2}}({\vec {z}}-{\vec {z}}_{0})^{t}\Sigma ^{*}({\vec {z}}-{\vec {z}}_{0})} The strength of this method relies on the strength of the training data as well as the tuning of the modified Mumford–Shah functional. Different snakes will require different training data sets and tunings. Geometric active contours Geometric active contour, or geodesic active contour (GAC) or conformal active contours employs ideas from Euclidean curve shortening evolution. Contours split and merge depending on the detection of objects in the image. These models are largely inspired by level sets, and have been extensively employed in medical image computing. For example, the gradient descent curve evolution equation of GAC is ∂ C ∂ t = g ( I ) ( c + κ ) N → − ⟨ ∇ g , N → ⟩ N → {\displaystyle {\frac {\partial C}{\partial t}}=g(I)(c+\kappa ){\vec {N}}-\langle \,\nabla g,{\vec {N}}\rangle {\vec {N}}} where g ( I ) {\displaystyle g(I)} is a halting function, c is a Lagrange multiplier, κ {\displaystyle \kappa } is the curvature, and N → {\displaystyle {\vec {N}}} is the unit inward normal. This particular form of curve evolution equation is only dependent on the velocity in the normal direction. It therefore can be rewritten equivalently in an Eulerian form by inserting the level set function Φ {\displaystyle \Phi } into it as follows ∂ Φ ∂ t = | ∇ Φ | div ⁡ ( g ( 