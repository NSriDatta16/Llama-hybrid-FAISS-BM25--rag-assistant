lication of a RTN with output representing an ambiguous grammar results in a set of possible translations or interpretations of the input. Computing this set has an exponential worst-case cost, even for an Earley parser for RTNs with output, due to cases in which the number of translations increases exponentially w.r.t. the input length; for instance, the number of interpretations of a natural language sentence increases exponentially w.r.t. the number of unresolved prepositional phrase attachments: in sentence the girl saw the monkey with the telescope, it is unknown whether the girl used the telescope or the monkey was holding it (21 interpretations), in sentence the girl saw the monkey with the telescope in the garden, it is also unknown whether the monkey was in the garden or the action took place in the garden (22 interpretations), in sentence the girl saw the monkey with the telescope in the garden under the tree, it is unknown as well whether the monkey was under the tree or the action took place under the tree (23 interpretations), etc. FPNs serve as a compact representation of this set of translations, allowing to compute it in cubic time by means of an Earley-like parser. FPN states correspond to execution states (see instruction steps) of an Earley-parser for RTNs without output, and FPN transitions correspond to possible translations of input symbols. The κ {\displaystyle \kappa } map of the resulting FPN gives the correspondence between the represented output segments and the recognized input segments: given a recognized input sequence σ 1 … σ l {\displaystyle \sigma _{1}\ldots \sigma _{l}} and a FPN path p {\displaystyle p} starting at a state q {\displaystyle q} and ending at a state q ′ {\displaystyle q^{\prime }} , p {\displaystyle p} represents a possible translation of input segment σ κ ( q ) + 1 … σ κ ( q ′ ) {\displaystyle \sigma _{\kappa (q)+1}\ldots \sigma _{\kappa (q^{\prime })}} . The filtered-popping feature is required in order to avoid FPN paths to represent translations of disconnected or overlapping input segments: a FPN call may contain several translation paths from the called state to an acceptor state, where the input segments they correspond to share the same start point but do not necessarily have the same length. Only return states corresponding to the same input point than the acceptor state finishing the call are valid return states. == References ==