Renderman Shading Language (abbreviated RSL) is a component of the RenderMan Interface Specification, and is used to define shaders. The language syntax is C-like.

A shader written in RSL can be used without changes on any RenderMan-compliant renderer, such as Pixar's PhotoRealistic RenderMan, DNA Research's 3Delight, Sitexgraphics' Air or an open source solution such as Pixie or Aqsis.

RenderMan Shading Language defines standalone functions and five types of shaders: surface, light, volume, imager and displacement shaders.

An example of a surface shader that defines a metal surface is:
surface metal (float Ka = 1; float Ks = 1; float roughness = 0.1;)
{
  normal Nf = faceforward (normalize(N), I);
  vector V = - normalize (I);
  Oi = Os;
  Ci = Os * Cs * (Ka * ambient() + Ks * specular (Nf, V, roughness));
}
Shaders express their work by reading and writing special variables such as Cs (surface color), N (normal at given point), and Ci (final surface color).
The arguments to the shaders are global parameters that are attached to objects of the model (so one metal shader can be used for different metals and so on). Shaders have no return values, but functions can be defined which take arguments and return a value. For example, the following function computes vector length using the dot product operator ".":
float length (vector v) {
  return sqrt (v . v); /* . is a dot product */
}

Further reading

External links
 Shading Language (RSL) documentation

RenderMan
Shading languages

zh:RenderMan规范#RenderMan着色语言（RSL）