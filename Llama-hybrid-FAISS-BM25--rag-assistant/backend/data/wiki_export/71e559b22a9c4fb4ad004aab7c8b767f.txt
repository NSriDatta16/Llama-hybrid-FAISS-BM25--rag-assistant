TSIG (transaction signature) is a  computer-networking protocol defined
in RFC 2845. Primarily it enables the Domain Name System (DNS) to authenticate updates to a DNS database. It is most commonly used to update Dynamic DNS or a secondary/slave DNS server. TSIG uses shared secret keys and one-way hashing to provide a cryptographically secure means of authenticating each endpoint of a connection as being allowed to make or respond to a DNS update.

Although queries to DNS may usually be made without authentication, updates to DNS must be authenticated, since they make lasting changes to the structure of the Internet naming system.  As the update request may arrive via an insecure channel (the Internet), one must take measures to ensure the authenticity and integrity of the request. The use of a key shared by the client making the update and the DNS server helps to ensure the authenticity and integrity of the update request.  A one-way hashing function serves to prevent malicious observers from modifying the update and forwarding on to the destination, thus ensuring integrity of the message from source to destination.

A timestamp is included in the TSIG protocol to prevent recorded responses from being reused, which would allow an attacker to breach the security of TSIG.  This places a requirement on dynamic DNS servers and TSIG clients to contain an accurate clock.  Since DNS servers are connected to a network, the Network Time Protocol can provide an accurate time source.

DNS updates, like queries, are normally transported via UDP since it requires lower overhead than TCP.  However, DNS servers support both UDP and TCP requests.

Implementation
An update, as specified in RFC 2136, is a set of instructions to a DNS server.  These include a header, the zone to be updated, the prerequisites that must be satisfied, and the record(s) to be updated.  TSIG adds a final record, which includes a timestamp and the hash of the request.  It also includes the name of the secret key that was used to sign the request.  RFC 2535 has recommendations on the form of the name.

The response to a successful TSIG update will also be signed with a TSIG record.  Failures are not signed to prevent an attacker from learning anything about the TSIG key using specially crafted update "probes".

The nsupdate program can use TSIG to do DNS updates.

The TSIG record is in the same format as the other records in the update request. The meaning of the fields is described in RFC 1035.

Alternatives to TSIG 
Although TSIG is widely deployed, there are several problems with the protocol:

 It requires distributing secret keys to each host which must make updates.
 Although still in common usage, the HMAC-MD5 digest is no longer considered very secure. HMAC-SHA256 is preferred. 

As a result, a number of alternatives and extensions have been proposed.

 RFC 2137 specifies an update method using a public key "SIG" DNS record.  A client holding the corresponding private key can sign the update request.  This method matches the DNSSEC method for secure queries.  However, this method is deprecated by RFC 3007.
 In , RFC 3645 proposed extending TSIG to allow the Generic Security Service (GSS) method of secure key exchange, eliminating the need for manually distributing keys to all TSIG clients. The method for distributing public keys as a DNS resource record (RR) is specified in RFC 2930, with GSS as one mode of this method. A modified GSS-TSIG - using the Windows Kerberos Server - was implemented by Microsoft Windows Active Directory servers and clients called Secure Dynamic Update. In combination with poorly configured DNS (with no reverse lookup zone) using RFC 1918 addressing, reverse DNS updates using this authentication scheme are forwarded en masse to the root DNS servers and thus increase the traffic to root DNS servers. There is an anycast group which deals with this traffic to take it away from the root DNS servers.
 RFC 2845 defines TSIG, specifies only one allowed hashing function, the 128-bit HMAC-MD5, which is no longer considered to be highly secure.  RFC 4635 was circulated to allow RFC 3174 Secure Hash Algorithm (SHA1) hashing and FIPS PUB 180-2 SHA-2 hashing to replace MD5.  The 160-bit and 256-bit digests generated by SHA1 and SHA-2 are more secure than the 128-bit digest generated by MD5.
 RFC 2930 defines TKEY, a DNS record used to distribute keys automatically from a DNS server to DNS clients.
 RFC 3645 defines GSS-TSIG, which uses gss-api and TKEY to distribute keys automatically in gss-api mode.
 The DNSCurve proposal has many similarities to TSIG.

See also
 List of DNS record types

References

External links 
  Dynamic Updates in the Domain Name System (DNS UPDATE)
  Secret Key Transaction Authentication for DNS (TSIG)
  Secret Key Establishment for DNS (TKEY RR)
  Generic Security Service Algorithm for Secret Key Transaction Authentication for DNS (GSS-TSIG)
  US Secure Hash Algorithm 1
  HMAC SHA TSIG Algorithm Identifiers
  Secret Key Transaction Authentication for DNS (TSIG)

Internet Standards
Internet protocols
Domain Name System