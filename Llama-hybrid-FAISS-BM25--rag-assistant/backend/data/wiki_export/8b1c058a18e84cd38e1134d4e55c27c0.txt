Syntropy is a second-generation object-oriented analysis and software design method developed at Object Designers Limited in the UK during the early 1990s. The goal in developing Syntropy was to provide a set of modelling techniques that would allow precise specification and would keep separate different areas of concern. The approach was to take established techniques, as found in methods such as the Object-modeling technique and Booch method, and reposition and refine them. In recognition that graphical notations were much favoured by the market but lacked rigour, Syntropy adopted ideas from formal specification languages, specifically Z notation, to provide tools for both precise definition of the graphical notations and for the construction of richer models than are possible with pictures alone.

Although development on the Syntropy method stopped some years ago, many of its ideas were subsequently incorporated in the Unified Modeling Language, in the Catalysis software design method, and in other development processes. In particular, Syntropy is a direct ancestor of the Object Constraint Language that forms an integral part of the UML.

Bibliography

See also
 Model-driven architecture (MDA is an OMG Trademark), (MDE is not an OMG Trademark)
 OCL
 Object-oriented analysis and design (OOAD)

Object-oriented programming