In Boolean algebra, Petrick's method (also known as Petrick function or branch-and-bound method) is a technique described by Stanley R. Petrick (1931–2006) in 1956 for determining all minimum sum-of-products solutions from a prime implicant chart. Petrick's method is very tedious for large charts, but it is easy to implement on a computer. The method was improved by Insley B. Pyne and Edward Joseph McCluskey in 1962.

Algorithm
 Reduce the prime implicant chart by eliminating the essential prime implicant rows and the corresponding columns.
 Label the rows of the reduced prime implicant chart , , , , etc.
 Form a logical function  which is true when all the columns are covered. P consists of a product of sums where each sum term has the form , where each  represents a row covering column .
 Apply De Morgan's Laws to expand  into a sum of products and minimize by applying the absorption law .
 Each term in the result represents a solution, that is, a set of rows which covers all of the minterms in the table. To determine the minimum solutions, first find those terms which contain a minimum number of prime implicants.
 Next, for each of the terms found in step five, count the number of literals in each prime implicant and find the total number of literals.
 Choose the term or terms composed of the minimum total number of literals, and write out the corresponding sums of prime implicants.

Example of Petrick's method

Following is the function we want to reduce:

The prime implicant chart from the Quine-McCluskey algorithm is as follows:

{| class="wikitable" style="text-align:center;"
|-
!                        || 0         || 1        || 2        || 5        || 6       || 7        || ⇒ || A         || B         || C
|-
| style="a1;" | K = m(0,1) ||  ||  ||          ||          ||         ||          || ⇒ || 0         || 0         || 
|-
| style="a1;" | L = m(0,2) ||  ||          ||  ||          ||          ||          || ⇒ || 0         ||  || 0
|-
| style="a1;" | M = m(1,5) ||          ||  ||          ||  ||          ||          || ⇒ ||  || 0         || 1
|-
| style="a1;" | N = m(2,6) ||          ||          ||  ||          ||  ||          || ⇒ ||  || 1         || 0
|-
| style="a1;" | P = m(5,7) ||          ||          ||          ||  ||          ||  || ⇒ || 1         ||   || 1
|-
| style="a1;" | Q = m(6,7) ||          ||          ||          ||          ||  ||  || ⇒ || 1         || 1         || 
|}

Based on the ✓ marks in the table above, build a product of sums of the rows where each row is added, and columns are multiplied together:

  (K+L)(K+M)(L+N)(M+P)(N+Q)(P+Q)

Use the distributive law to turn that expression into a sum of products.  Also use the following equivalences to simplify the final expression:     X + XY = X         and         XX = X       and       X+X=X

  = (K+L)(K+M)(L+N)(M+P)(N+Q)(P+Q)
  = (K+LM)(N+LQ)(P+MQ)
  = (KN+KLQ+LMN+LMQ)(P+MQ)
  = KNP + KLPQ + LMNP + LMPQ + KMNQ + KLMQ + LMNQ + LMQ

Now use again the following equivalence to further reduce the equation:    X + XY = X

  = KNP + KLPQ + LMNP + LMQ + KMNQ

Choose products with fewest terms, in this example, there are two products with three terms:

  KNP
  LMQ

Choose term or terms with fewest total literals. In our example, the two products both expand to six literals total each:

 KNP    expands to    a'b' + bc' + ac
 LMQ    expands to    a'c' + b'c + ab

So either one can be used. In general, application of Petrick's method is tedious for large charts, but it is easy to implement on a computer.

Notes

References

Further reading
 
 
  (xiv+379+1 pages)

External links
 Tutorial on Quine-McCluskey and Petrick's method
 Petrick C++ implementation based on the tutorial above

Boolean algebra