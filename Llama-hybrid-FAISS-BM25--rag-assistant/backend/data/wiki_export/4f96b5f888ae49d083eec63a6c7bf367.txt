Tree Description Language (TreeDL) is a computer language for description of strictly-typed tree data structures and operations on them. The main use of TreeDL is in the development of language-oriented tools (compilers, translators, etc.) for the description of a structure of abstract syntax trees.

Tree description can be used as
 a documentation of interface between parser and other subsystems;
 a source for generation of data types representing a tree in target programming languages;
 a source for generation of various support code: visitors, walkers, factories, etc.

TreeDL can be used with any parser generator that allows custom actions during parsing (for example, ANTLR, JavaCC).

Language overview 

Tree description lists the node types allowed in a tree. Node types support single inheritance. Node types have children and attributes. Children must be of defined node type. Attributes may be of primitive type (numeric, string, boolean), enum type or node type. Attributes are used to store literals during tree construction and additional information gathered during tree analysis (for example, links between reference and definition, to represent higher-order abstract syntax).

Operations over a tree are defined as multimethods. Advantages of this approach are described in the article Treecc: An Aspect-Oriented Approach to Writing Compilers

Tree descriptions support inheritance to allow modularity and reuse of base language tree descriptions for language extensions.

See also 
 ANTLR - parser generator that offers a different approach to tree processing: tree grammars.
 SableCC - parser generator that generates strictly-typed abstract syntax trees.

External links 
 
 old TreeDL home
 

Programming languages
Domain-specific knowledge representation languages