A model transformation language in systems and software engineering is a language intended specifically for model transformation.

Overview 
The notion of model transformation is central to model-driven development. A model transformation, which is essentially a program which operates on models, can be written in a general-purpose programming language, such as Java. However, special-purpose model transformation languages can offer advantages, such as syntax that makes it easy to refer to model elements. For writing bidirectional model transformations, which maintain consistency between two or more models, a specialist bidirectional model transformation language is particularly important, because it can help avoid the duplication that would result from writing each direction of the transformation separately.

Currently, most model transformation languages are being developed in academia. The OMG has standardised a family of model transformation languages called QVT, but the field is still immature.

There are ongoing debates regarding the benefits of specialised model transformation languages, compared to the use of general-purpose programming languages (GPLs) such as Java. While GPLs have advantages in terms of more widely-available practitioner knowledge and tool support, the specialised transformation languages do provide more declarative facilities and more powerful specialised features to support model transformations.

Available transformation languages 
 ATL : a transformation language developed by the INRIA
 Beanbag (see ) : an operation-based language for establishing consistency over data incrementally
 GReAT : a transformation language available in the GME
 Epsilon family (see ) : a model management platform that provides transformation languages for model-to-model, model-to-text, update-in-place, migration and model merging transformations.
 F-Alloy : a DSL reusing part of the Alloy syntax and allowing the concise specification of efficiently computable model transformations. 
 Henshin (see ) : a model transformation language for EMF, based on graph transformation concepts, providing state space exploration capabilities
 JTL : a bidirectional model transformation language specifically designed to support non-bijective transformations and change propagation (see ).
 Kermeta : a general purpose modeling and programming language, also able to perform transformations
 Lx family (see ) : a set of low-level transformation languages
 M2M is the Eclipse implementation of the OMG QVT standard
 Mia-TL : a transformation language developed by Mia-Software
MOF Model to Text Transformation Language: the OMG has defined a standard for expressing M2T transformations
 MOLA (see ) : a graphical high-level transformation language built in upon Lx.
 MT : a transformation language developed at King's College, London (UK) (based  on Converge PL)
 QVT : the OMG has defined a standard for expressing M2M transformations, called MOF/QVT or in short QVT.
 SiTra  : a pragmatic transformation approach based on using a standard programming language, e.g. Java, C#
 Stratego/XT : a transformation language based on rewriting with programmable strategies
 Tefkat : a transformation language and a model transformation engine
 Tom : a language based on rewriting calculus, with pattern-matching and strategies
 UML-RSDS  : a model transformation and MDD approach using UML and OCL
 VIATRA : a framework for transformation-based verification and validation environment

See also
 Data transformation
 Domain-specific language (DSL)
 Filter (software)
 Model-driven engineering (MDE)
 Model-driven architecture (MDA)
 Template processor
 Transformation language
 Graph Transformation
 Web template
 XSLT - a standard language

References

Further reading 
The MDA Journal: Model Driven Architecture Straight From The Masters
Model Driven Architecture: Applying MDA to Enterprise Computing, David S. Frankel, John Wiley & Sons, 
OMG MDA Guide MDA Guide Version 1.0.1
Model-Driven Architecture: Vision, Standards And Emerging Technologies at omg.org
An Introduction to Model Driven Architecture at .com
From Object Composition to Model Transformation with the MDA at omg.org
 Mens, T, and Van Gorp, P: A Taxonomy of Model Transformation, Electronic Notes in Theoretical Computer Science, Volume 152, 27 March 2006, Pages 125-142
Czarnecki, K, and Helsen, S : Classification of Model Transformation Approaches. In: Proceedings of the OOPSLA'03 Workshop on the Generative Techniques in the Context Of Model-Driven Architecture, Anaheim, California, USA. Webpublished.
Gronmo, R, and Oldevik, J : An Empirical Study of the UML Model Transformation Tool (UMT). 

Systems engineering
Specification languages