An enterprise architecture framework (EA framework) defines how to create and use an enterprise architecture. An architecture framework provides principles and practices for creating and using the architecture description of a system. It structures architects' thinking by dividing the architecture description into domains, layers, or views, and offers models – typically matrices and diagrams – for documenting each view.  This allows for making systemic design decisions on all the components of the system and making long-term decisions around new design requirements, sustainability, and support.

Overview 
Enterprise architecture regards the enterprise as a large and complex system or system of systems. To manage the scale and complexity of this system, an architectural framework provides tools and approaches that help architects abstract from the level of detail at which builders work, to bring enterprise design tasks into focus and produce valuable architecture description documentation.

The components of an architecture framework provide structured guidance that is divided into three main areas: 
 Descriptions of architecture: how to document the enterprise as a system, from several viewpoints. Each view describes one slice of the architecture; it includes those entities and relationships that address particular concerns of interest to particular stakeholders; it may take the form of a list, a table, a diagram, or a higher level of composite of such.
 Methods for designing architecture: processes that architects follow. Usually, an overarching enterprise architecture process, composed of phases, broken into lower-level processes composed of finer grained activities. A process is defined by its objectives, inputs, phases (steps or activities) and outputs. It may be supported by approaches, techniques, tools, principles, rules, and practices. 
 Organization of architects: guidance on the team structure and the governance of the team, including the skills, experience, and training needed.

History 

The earliest rudiments of the step-wise planning methodology currently advocated by The Open Group Architecture Framework (TOGAF) and other EA frameworks can be traced back to the article of Marshall K. Evans and Lou R. Hague titled "Master Plan for Information Systems" published in 1962 in Harvard Business Review.

Since the 1970s people working in IS/IT have looked for ways to engage business people – to enable business roles and processes - and to influence investment in business information systems and technologies – with a view to the wide and long term benefits of the enterprise. Many of the aims, principles, concepts and methods now employed in EA frameworks were established in the 1980s, and can be found in IS and IT architecture frameworks published in that decade and the next.

By 1980, IBM's Business Systems Planning (BSP) was promoted as a method for analyzing and designing an organization's information architecture, with the following goals:
 understand the issues and opportunities with the current applications and technical architecture; 
 develop a future state and migration path for the technology that supports the enterprise; 
 provide business executives with a direction and decision making framework for IT capital expenditures; 
 provide the information system (IS) with a blueprint for development.

In 1982, when working for IBM and with BSP, John Zachman outlined his framework for enterprise-level "Information Systems Architecture". Then and in later papers, Zachman used the word enterprise as a synonym for business. "Although many popular information systems planning methodologies, design approaches, and various tools and techniques do not preclude or are not inconsistent with enterprise-level analysis, few of them explicitly address or attempt to define enterprise architectures." However, in this article the term "Enterprise Architecture" was mentioned only once without any specific definition and all subsequent works of Zachman used the term "Information Systems Architecture".

In 1986, the PRISM architecture framework was developed as a result of the research project sponsored by a group of companies, including IBM, which was seemingly the first published EA framework.

In 1987, John Zachman, who was a marketing specialist at IBM, published the paper, A Framework for Information Systems Architecture. The paper provided a classification scheme for artifacts that describe (at several levels of abstraction) the what, how, where, who, when and why of information systems. Given IBM already employed BSP, Zachman had no need to provide planning process. The paper did not mention enterprise architecture.

In 1989, the National Institute of Standards and Technology (NIST) published the NIST Enterprise Architecture Model. This was a five-layer reference model that illustrates the interrelationship of business, information system, and technology domains. It was promoted within the U.S. federal government. It was not an EA framework as we see it now, but it helped to establish the notion of dividing EA into architecture domains or layers. The NIST Enterprise Architecture Model seemingly was the first publication that consistently used the term "Enterprise Architecture".

In 1990, the term "Enterprise Architecture" was formally defined for the first time as an architecture that "defines and interrelates data, hardware, software, and communications resources, as well as the supporting organization required to maintain the overall physical structure required by the architecture".

In 1992, a paper by Zachman and Sowa started thus "John Zachman introduced a framework for information systems architecture (ISA) that has been widely adopted by systems analysts and database designers." The term enterprise architecture did not appear. The paper was about using the ISA framework to describe, “...the overall information system and how it relates to the enterprise and its surrounding environment.” The word enterprise was used as a synonym for business.

In 1993, Stephen Spewak's book Enterprise Architecture Planning (EAP) defined a process for defining architectures for the use of information in support of the business and the plan for implementing those architectures. The business mission is the primary driver. Then the data required to satisfy the mission. Then the applications built to store and provide that data. Finally the technology to implement the applications. Enterprise Architecture Planning is a data-centric approach to architecture planning. An aim is to improve data quality, access to data, adaptability to changing requirements, data interoperability and sharing, and cost containment. EAP has its roots in IBM's Business Systems Planning (BSP).

In 1994, the Open Group selected TAFIM from the US DoD as a basis for development of TOGAF, where architecture meant IT architecture. TOGAF started out taking a strategic and enterprise-wide, but technology-oriented, view. It emerged from the desire to rationalize a messy IT estate. Right up to version 7, TOGAF was still focused on defining and using a Technical Reference Model (or foundation architecture) to define the platform services required from the technologies that an entire enterprise uses to support business applications.

In 1996, the US IT Management Reform Act, more commonly known as the Clinger-Cohen Act, repeatedly directed that a US federal government agency's investment in IT must be mapped to identifiable business benefits. In addition, it made the agency CIO responsible for, “...developing, maintaining and facilitating the implementation of a sound and integrated IT architecture for the executive agency.”

By 1997, Zachman had renamed and refocused his ISA framework as an EA framework; it remained a classification scheme for descriptive artifacts, not a process for planning systems or changes to systems.

In 1998, The Federal CIO Council began developing the Federal Enterprise Architecture Framework (FEAF) in accordance with the priorities enunciated in Clinger-Cohen and issued it in 1999. FEAF was a process much like TOGAF's ADM, in which “The architecture team generates a sequencing plan for the transition of systems, applications, and associated business practices predicated upon a detailed gap analysis [between baseline and target architectures].”

In 2001, the US Chief CIO council published A practical guide to Federal Enterprise Architecture, which starts, “An enterprise architecture (EA) establishes the Agency-wide roadmap to achieve an Agency's mission through optimal performance of its core business processes within an efficient information technology (IT) environment."
At that point, the processes in TOGAF, FEAF, EAP and BSP were clearly related.

In 2002/3, in its Enterprise Edition, TOGAF 8 shifted focus from the technology architecture layer to the higher business, data and application layers. It introduced structured analysis, after information technology engineering, which features, for example, mappings of organization units to business functions and data entities to business functions. Today, business functions are often called business capabilities. And many enterprise architects regard their business function/capability hierarchy/map as the fundamental Enterprise Architecture artifact. They relate data entities, use cases, applications and technologies to the functions/capabilities.

In 2006, the popular book Enterprise Architecture As Strategy reported the results of work by MIT's Center for Information System Research. This book emphasises the need for enterprise architects to focus on core business processes ("Companies excel because they've [decided] which processes they must execute well, and have implemented the IT systems to digitise those processes.") and to engage business managers with the benefits that strategic cross-organisational process integration and/or standardisation could provide.

A 2008 research project for the development of professional certificates in enterprise and solution architecture by the British Computer Society (BCS) showed that enterprise architecture has always been inseparable from information system architecture, which is natural, since business people need information to make decisions and carry out business processes.

In 2011, the TOGAF 9.1. specification says: "Business planning at the strategy level provides the initial direction to enterprise architecture." Normally, the business principles, business goals, and strategic drivers of the organization are defined elsewhere. In other words, Enterprise Architecture is not a business strategy, planning or management methodology. Enterprise Architecture strives to align business information systems technology with given business strategy, goals and drivers. The TOGAF 9.1 specification clarified, that, "A complete enterprise architecture description should contain all four architecture domains (business, data, application, technology), but the realities of resource and time constraints often mean there is not enough time, funding, or resources to build a top-down, all-inclusive architecture description encompassing all four architecture domains, even if the enterprise scope is [...] less than the full extent of the overall enterprise."

In 2013, TOGAF is the most popular Architecture framework (judged by published certification numbers) that some assume it defines EA. However, some still use the term Enterprise Architecture as a synonym for Business Architecture, rather than covering all four architecture domains - business, data, applications and technology.

EA framework topics

Architecture domain 

Since Stephen Spewak's Enterprise Architecture Planning (EAP) in 1993 – and perhaps before then – it has been normal to divide enterprises architecture into four architecture domains.

 Business architecture,
 Data architecture,
 Applications architecture,
 Technology architecture.

Note that the applications architecture is about the choice of and relationships between applications in the enterprise's application portfolio, not about the internal architecture of a single application (which is often called application architecture).

Many EA frameworks combine data and application domains into a single (digitized) information system layer, sitting below the business (usually a human activity system) and above the technology (the platform IT infrastructure).

Layers of the enterprise architecture 

For many years, it has been common to regard the architecture domains as layers, with the idea that each layer contains components that execute processes and offer services to the layer above. This way of looking at the architecture domains was evident in TOGAF v1 (1996), which encapsulated the technology component layer behind the platform services defined in the "Technical Reference Model" - very much according to the philosophy of TAFIM and POSIX.

The view of architecture domains as layers can be presented thus:

 Environment (the external entities and activities monitored, supported or directed by the business).
 Business Layer (business functions offering services to each other and to external entities).
 Data Layer (Business information and other valuable stored data) 
 Information System Layer (business applications offering information services to each other and to business functions)
 Technology Layer (generic hardware, network and platform applications offering platform services to each other and to business applications).

Each layer delegates work to the layer below. In each layer, the components, the processes and the services can be defined at a coarse-grained level and decomposed into finer-grained components, processes and services. The graphic shows a variation on this theme.

Components of enterprise architecture framework 
In addition to three major framework components discussed above. 
 Description advice: some kind of Architecture Artifacts Map or Viewpoint Library
 Process advice: some kind of Architecture Development Method, with supporting guidance.
 Organization advice: including an EA Governance Model

An ideal EA framework should feature:
 Business value measurement metrics
 EA initiative model
 EA maturity model
 Enterprise communication model

Most modern EA frameworks (e.g. TOGAF, ASSIMPLER, EAF) include most of the above. Zachman has always focused on architecture description advice.

Enterprise architecture domains and subdomains 

The application and technology domains (not to be confused with business domains) are characterized by domain capabilities and domain services. The capabilities are supported by the services. The application services are also referred to in service-oriented architecture (SOA). The technical services are typically supported by software products.

The data view starts with the data classes which can be decomposed into data subjects which can be further decomposed into data entities. The basic data model type which is most commonly used is called merda (master entity relationship diagrams assessment, see entity-relationship model). The Class, subject and entity forms a hierarchical view of data. Enterprises may have millions of instances of data entities.

The Enterprise Architecture Reference Traditional Model offers a clear distinction between the architecture domains (business, information/data, application/integration and technical/infrastructure). These domains can be further divided into Sub domain disciplines. An example of the EA domain and subdomains is in the image on the right.

Many enterprise architecture teams consist of Individuals with Skills aligned with the Enterprise Architecture Domains and sub-domain disciplines. Here are some examples: enterprise business architect, enterprise documentational architect, enterprise application architect, enterprise infrastructure architect, enterprise information architect, etc.

An example of the list of reference architecture patterns in the application and information architecture domains are available at Architectural pattern (computer science).

View model 

A view model is a framework that defines the set of views or approaches used in systems analysis, systems design, or the construction of an enterprise architecture.

Since the early 1990s, there have been a number of efforts to define standard approaches for describing and analyzing system architectures. Many of the recent Enterprise Architecture frameworks have some kind of set of views defined, but these sets are not always called view models.

Standardization 
Perhaps the best-known standard in the field of software architecture and system architecture started life as IEEE 1471, an IEEE Standard for describing the architecture of a software-intensive system approved in 2000.

In its latest version, the standard is published as ISO/IEC/IEEE 42010:2011. The standard defines an architecture framework as conventions, principles and practices for the description of architectures established within a specific domain of application and/or community of stakeholders, and proposes an architecture framework is specified by:

 the relevant stakeholders in the domain,
 the types of concerns arising in that domain,
 architecture viewpoints framing those concerns and
 correspondence rules integrating those viewpoints cited before.

Architecture frameworks conforming to the standard can include additional methods, tools, definitions, and practices beyond those specified.

Types of enterprise architecture framework 

Nowadays there are now countless EA frameworks, many more than in the following listing.

Consortia-developed frameworks 
 ARCON – A Reference Architecture for Collaborative Networks – not focused on a single enterprise but rather on networks of enterprises
 The Cloud Security Alliance (Trusted Cloud Initiative) TCI reference architecture.
 Generalised Enterprise Reference Architecture and Methodology (GERAM)
 RM-ODP – the Reference Model of Open Distributed Processing (ITU-T Rec. X.901-X.904 | ISO/IEC 10746) defines an enterprise architecture framework for structuring the specifications of open distributed systems.
 IDEAS Group – a four-nation effort to develop a common ontology for architecture interoperability
 ISO 19439 Framework for enterprise modelling
 TOGAF – The Open Group Architecture Framework – a widely used framework including an architectural Development Method and standards for describing various types of architecture.

Defense industry frameworks 
 AGATE – the France DGA Architecture Framework
 DNDAF – the DND/CF Architecture Framework (CAN)
 DoDAF – the US Department of Defense Architecture Framework
 MODAF – the UK Ministry of Defence Architecture Framework
 NAF – the NATO Architecture Framework

Government frameworks 
 European Space Agency Architectural Framework (ESAAF) - a framework for European space-based Systems of Systems
 FDIC Enterprise Architecture Framework
 Federal Enterprise Architecture Framework (FEAF) – a framework produced in 1999 by the US Federal CIO Council for use within the US Government (not to be confused with the 2002 Federal Enterprise Architecture (FEA) guidance on categorizing and grouping IT investments, issued by the US Federal Office of Management and Budget)
 Government Enterprise Architecture (GEA) – a common framework legislated for use by departments of the Queensland Government
 Nederlandse Overheid Referentie Architectuur (NORA) – a reference framework from the Dutch Government E-overheid NORA
 NIST Enterprise Architecture Model
 Treasury Enterprise Architecture Framework (TEAF) – a framework for  treasury, published by the US Department of the Treasury in July 2000.
 Colombian Enterprise Architecture Framework - MRAE - Marco de Referencia de Arquitectura Empresarial a framework for all the Colombian Public Agencies
India Enterprise Architecture (IndEA) framework - IndEA is a reference framework from Government of India.

Open-source frameworks
Enterprise architecture frameworks that are released as open source:
 Lean Architecture Framework (LAF) is a collection of good practices thanks to which the IT environment will respond consistently and quickly to a changing business situation while maintaining its consistent form. 
 MEGAF is an infrastructure for realizing architecture frameworks that conform to the definition of architecture framework provided in ISO/IEC/IEEE 42010.
 Praxeme, an open enterprise methodology, contains an enterprise architecture framework called the Enterprise System Topology (EST)
 TRAK – a general systems-oriented framework based on MODAF 1.2 and released under GPL/GFDL.
 Sherwood Applied Business Security Architecture (SABSA) is an open framework and methodology for Enterprise Security Architecture and Service Management, that is risk based and focuses on integrating security into business and IT management.

Proprietary frameworks 
 ASSIMPLER Framework – an architecture framework, based on the work of Mandar Vanarse at Wipro in 2002
 Avancier Methods (AM) Processes and documentation advice for enterprise and solution architects, supported by training and certification.
 BRM (Build-Run-Manage) Framework - an architecture framework created by Sanjeev "Sunny" Mishra during his early days at IBM in 2000.
 Capgemini Integrated Architecture Framework (IAF) – from Capgemini company in 1993
 Dragon1 - An open Visual Enterprise Architecture Method recently recognized by The Open Group as Architecture Framework
 DYA framework developed by Sogeti since 2004.
 Dynamic Enterprise Enterprise architecture concept based on Web 2.0 technology
 Extended Enterprise Architecture Framework - from Institute For Enterprise Architecture Developments in 2003
 EACOE Framework  – an Enterprise Architecture framework, as an elaboration of the work of John Zachman
 IBM Information FrameWork (IFW) – conceived by Roger Evernden in 1996
Infomet - conceived by Pieter Viljoen in 1990
 Labnaf  - Unified Framework for Driving Enterprise Transformations
 Pragmatic Enterprise Architecture Framework (PEAF) - part of Pragmatic Family of Frameworks developed by Kevin Lee Smith, Pragmatic EA, from 2008
 Purdue Enterprise Reference Architecture developed by Theodore J. Williams at the Purdue University early 1990s.
 Risk- and Cost-Driven Architecture (RCDA), developed by CGI since 2015.
 SAP Enterprise Architecture Framework
 Service-oriented modeling framework (SOMF), based on the work of Michael Bell
 Solution Architecting Mechanism (SAM) – A coherent architecture framework consisting of a set of integral modules.
 Zachman Framework – an architecture framework, based on the work of John Zachman at IBM in the 1980s

See also 

 Architecture patterns (EA reference architecture)
 EABOK (The Guide to the Enterprise Architecture Body of Knowledge)
 Enterprise architecture
 Enterprise architecture artifacts
 Enterprise architecture planning
 Enterprise engineering
 ISO/IEC/IEEE 42010
 Reference architecture

References

External links 
Enterprise Architecture Frameworks: The Fad of the Century (July 2016)
A Comparison of the Top Four Enterprise Architecture Frameworks (July 2021)

Enterprise architecture
 

ja:エンタープライズアーキテクチャフレームワーク