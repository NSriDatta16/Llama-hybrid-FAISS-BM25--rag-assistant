The EFI (Extensible Firmware Interface) system partition  or ESP is a partition on a data storage device (usually a hard disk drive or solid-state drive) that is used by computers having the Unified Extensible Firmware Interface (UEFI). When a computer is booted, UEFI firmware loads files stored on the ESP to start installing operating systems and various utilities.

An ESP contains the boot loaders or kernel images for all installed operating systems (which are contained in other partitions), device driver files for hardware devices present in a computer and used by the firmware at boot time, system utility programs that are intended to be run before an operating system is booted, and data files such as error logs.

Overview

The EFI system partition is formatted with a file system whose specification is based on the FAT file system and maintained as part of the UEFI specification; therefore, the file system specification is independent from the original FAT specification. The actual extent of divergence is unknown: Apple maintains a separate tool that should be used, while other systems use FAT utilities just fine. The globally unique identifier (GUID) for the EFI system partition in the GUID Partition Table (GPT) scheme is , while its ID in the master boot record (MBR) partition-table scheme is . Both GPT- and MBR-partitioned disks can contain an EFI system partition, as UEFI firmware is required to support both partitioning schemes. Also, El Torito bootable format for CD-ROMs and DVDs is supported.

UEFI provides backward compatibility with legacy systems by reserving the first block (sector) of the partition for compatibility code, effectively creating a legacy boot sector. On legacy BIOS-based systems, the first sector of a partition is loaded into memory, and execution is transferred to this code. UEFI firmware does not execute the code in the MBR, except when booting in legacy BIOS mode through the Compatibility Support Module (CSM).

The UEFI specification requires MBR partition tables to be fully supported. However, some UEFI implementations immediately switch to the BIOS-based CSM booting upon detecting certain types of partition table on the boot disk, effectively preventing UEFI booting from being performed from EFI system partitions contained on MBR-partitioned disks.

UEFI firmware supports booting from removable storage devices such as USB flash drives. For that purpose, a removable device is formatted with a FAT12, FAT16 or FAT32 file system, while a boot loader needs to be stored according to the standard ESP file hierarchy, or by providing a complete path of a boot loader to the system's boot manager. On the other hand, FAT32 is always expected on fixed drives.

Usage

Linux

GRUB 2 and elilo serve as conventional, full-fledged standalone UEFI boot loaders for Linux. Once loaded by a UEFI firmware, they both can access and boot kernel images from all devices, partitions and file systems they support, without being limited to the EFI system partition.

EFI Boot Stub makes it possible to boot a Linux kernel image without the use of a conventional UEFI boot loader. By masquerading as a PE/COFF image and appearing to the firmware as a UEFI application, an x86 kernel image with EFI Boot Stub enabled can be directly loaded and executed by a UEFI firmware. Such kernel images can still be loaded and run by BIOS-based boot loaders; thus, EFI Boot Stub allows a single kernel image to work in any boot environment.

Linux kernel's support for the EFI Boot Stub is enabled by turning on option CONFIG_EFI_STUB (EFI stub support) during the kernel configuration.  It was merged into version 3.3 of the Linux kernel mainline, released on March 18, 2012.
Systemd-boot is a simple UEFI boot manager that loads and runs configured UEFI images, accessing only the EFI system partition. Configuration file fragments, kernel images and initrd images are required to reside on the EFI system partition, as Gummiboot does not provide support for accessing files on other partitions or file systems. Linux kernels need to be built with CONFIG_EFI_STUB enabled so they can be directly executed as UEFI images.

The historical mount point for the EFI system partition has usually been /boot/efi, however other mount points (such as /efi or /boot, both preferred over /boot/efi by systemd and systemd-boot) may also be used. Regardless of mount point, its content is accessible after Linux is booted.

macOS
On macOS computers based on the x64 hardware architecture, the EFI system partition is initially left blank and unused for booting. However, the EFI system partition is used as a staging area for firmware updates. The logic usually goes as follows: the EFI first looks for a bootloader in ESP, and if there is none it will continue to the macOS file system.

The pre-UEFI Apple–Intel architecture (mactel) EFI subsystem used to require the EFI system partition to be formatted in HFS+. Any third-party bootloader also needs to be "blessed" by a special ioctl command before becoming bootable by the firmware, a relic of the system folder blessing from classic Mac OS. There is otherwise no limitations to what kinds of EFI operating system or bootloader a mactel machine can run.

Windows 

On Windows XP 64-Bit Edition and later, access to the EFI system partition is obtained by running the  command.

The Windows boot manager is located at the  subfolder of the EFI system partition.

See also 
 BIOS boot partition
 EFI variable
 System partition and boot partition
 Windows To Go

References

External links 
 EFI System Partition Subdirectory Registry – A registry of the subdirectories that lie below the /EFI directory on an EFI system partition

Booting
Computer file systems
Disk partitions
Unified Extensible Firmware Interface