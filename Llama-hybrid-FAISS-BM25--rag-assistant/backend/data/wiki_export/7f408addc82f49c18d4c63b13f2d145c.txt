A lightweight methodology is a software development method that has only a few rules and practices, or only ones that are easy to follow. In contrast, a complex method with many rules is considered a "heavyweight methodology".

Examples of lightweight methodologies include:

 Adaptive Software Development by Jim Highsmith, described in his 1999 book Adaptive Software Development
 Crystal Clear family of methodologies with Alistair Cockburn,
 Extreme Programming (XP), promoted by people such as Kent Beck and Martin Fowler
 Feature Driven Development (FDD) developed (1999) by Jeff De Luca and Peter Coad
 ICONIX process, developed by Doug Rosenberg: An UML Use Case driven approach that purports to provide just enough documentation and structure to the process to allow flexibility, yet produce software that meets user and business requirements

Most of these lightweight processes emphasize the need to deal with change in requirements and change in environment or technology by being flexible and adaptive.

References 

Agile software development
Methodology
Software development process
Software development philosophies