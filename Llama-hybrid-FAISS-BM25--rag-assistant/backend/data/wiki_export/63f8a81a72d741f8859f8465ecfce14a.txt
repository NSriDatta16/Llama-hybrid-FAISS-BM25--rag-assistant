Douglas S. Lea is a professor of computer science and current head of the computer science department at State University of New York at Oswego, where he specializes in concurrent programming and the design of concurrent data structures. He was on the Executive Committee of the Java Community Process and chaired JSR 166, which added concurrency utilities to the Java programming language (see Java concurrency).  On October 22, 2010, Doug Lea notified the Java Community Process Executive Committee he would not stand for reelection. Lea was re-elected as an at-large member for the 2012 OpenJDK governing board.

Publications
He wrote Concurrent Programming in Java: Design Principles and Patterns, one of the first books about the subject. It is currently in its second edition. He is also the author of dlmalloc, a widely used public-domain implementation of malloc.

Awards
In 2010, he won the senior Dahl-Nygaard Prize.

In 2013, he became a Fellow of the Association for Computing Machinery.

Bibliography
 Concurrent Programming in Java: Design Principles and Patterns, first edition: 1997; second edition: , 1999
 Java Concurrency in Practice, , 2006 (co-authored with Joshua Bloch, Brian Goetz, Tim Peierls, Joseph Bowbeer, and David Holmes)

References

External links
Doug Lea's home page
Concurrent Programming in Java: Design Principles and Patterns
Java Community Process Executive Committee
JSR 166: Concurrency Utilities

American computer scientists
American computer programmers
Year of birth missing (living people)
Living people
State University of New York at Oswego faculty
Fellows of the Association for Computing Machinery
Dahlâ€“Nygaard Prize