Crack is a Unix password cracking program designed to allow system administrators to locate users who may have weak passwords vulnerable to a dictionary attack.  Crack was the first standalone password cracker for Unix systems and the first to introduce programmable dictionary generation as well.

Crack began in 1990 when Alec Muffett, a Unix system administrator at the University of Wales Aberystwyth, was trying to improve Dan Farmer's 'pwc' cracker in COPS. Muffett found that by re-engineering the memory management, he got a noticeable performance increase. This led to a total rewrite which became "Crack v2.0" and further development to improve usability.

Public Releases

The first public release of Crack was version 2.7a, which was posted to the Usenet newsgroups alt.sources and alt.security on 15 July 1991. Crack v3.2a+fcrypt, posted to comp.sources.misc on 23 August 1991, introduced an optimised version of the Unix crypt() function but was still only really a faster version of what was already available in other packages.

The release of Crack v4.0a on 3 November 1991, however, introduced several new features that made it a formidable tool in the system administrator's arsenal.

 Programmable dictionary generator
 Network distributed password cracking

Crack v5.0a released in 2000 did not introduce any new features, but instead concentrated on improving the code and introducing more flexibility, such as the ability to integrate other crypt() variants such as those needed to attack the MD5 password hashes used on more modern Unix, Linux and Windows NT systems.  It also bundled Crack v6 - a minimalist password cracker and Crack v7 - a brute force password cracker.

Legal issues arising from using Crack 

Randal L. Schwartz, a notable Perl programming expert, in 1995 was prosecuted for using Crack on the password file of a system at Intel, a case the verdict of which was eventually expunged.

Crack was also used by Kevin Mitnick when hacking into Sun Microsystems in 1993.

Programmable dictionary generator

While traditional password cracking tools simply fed a pre-existing dictionary of words through the crypt() function, Crack v4.0a introduced the ability to apply rules to this word list to generate modified versions of these word lists.

These could range from the simple (do not change) to the extremely complex - the documentation gives this as an example:

 X<8l/i/olsi1so0$=

 Reject the word unless it is less than 8 characters long, lowercase the word, reject it if it does not contain both the letter 'i' and the letter 'o', substitute all i's for 1's, substitute all o's for 0's, and append an = sign.

These rules could also process the GECOS field in the password file, allowing the program to use the stored names of the users in addition to the existing word lists. Crack's dictionary generation rule syntax was subsequently borrowed and extended by Solar Designer for John the Ripper.

The dictionary generation software for Crack was subsequently reused by Muffett to create CrackLib, a proactive password checking library that is bundled with Debian and Red Hat Enterprise Linux-derived  Linux distributions.

Network distributed password cracking

As password cracking is inherently embarrassingly parallel Crack v4.0a introduced the ability to use a network of heterogeneous workstations connected by a shared filesystem as parts of a distributed password cracking effort.

All that was required for this was to provide Crack with a configuration file containing the machine names, processing power rates and flags required to build Crack on those machines and call it with the -network option.

See also

Computer security
Password cracking
 Aircrack-ng
 Cain and Abel
 DaveGrohl
 Hashcat
 John the Ripper
 L0phtCrack
 Ophcrack
 RainbowCrack

References

External links
 Password cracking - A quick guide to success

crack

Unix security-related software
Password cracking software
Linux security software